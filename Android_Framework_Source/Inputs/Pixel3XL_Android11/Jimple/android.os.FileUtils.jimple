public final class android.os.FileUtils extends java.lang.Object
{
    private static final long COPY_CHECKPOINT_BYTES;
    public static final int S_IRGRP;
    public static final int S_IROTH;
    public static final int S_IRUSR;
    public static final int S_IRWXG;
    public static final int S_IRWXO;
    public static final int S_IRWXU;
    public static final int S_IWGRP;
    public static final int S_IWOTH;
    public static final int S_IWUSR;
    public static final int S_IXGRP;
    public static final int S_IXOTH;
    public static final int S_IXUSR;
    private static final java.lang.String TAG;
    private static boolean sEnableCopyOptimizations;

    static void <clinit>()
    {
        <android.os.FileUtils: java.lang.String TAG> = "FileUtils";

        <android.os.FileUtils: int S_IXUSR> = 64;

        <android.os.FileUtils: int S_IXOTH> = 1;

        <android.os.FileUtils: int S_IXGRP> = 8;

        <android.os.FileUtils: int S_IWUSR> = 128;

        <android.os.FileUtils: int S_IWOTH> = 2;

        <android.os.FileUtils: int S_IWGRP> = 16;

        <android.os.FileUtils: int S_IRWXU> = 448;

        <android.os.FileUtils: int S_IRWXO> = 7;

        <android.os.FileUtils: int S_IRWXG> = 56;

        <android.os.FileUtils: int S_IRUSR> = 256;

        <android.os.FileUtils: int S_IROTH> = 4;

        <android.os.FileUtils: int S_IRGRP> = 32;

        <android.os.FileUtils: long COPY_CHECKPOINT_BYTES> = 524288L;

        <android.os.FileUtils: boolean sEnableCopyOptimizations> = 1;

        return;
    }

    private void <init>()
    {
        android.os.FileUtils r0;

        r0 := @this: android.os.FileUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static java.io.File buildFile(java.io.File, java.lang.String, java.lang.String)
    {
        java.io.File r0, $r8, $r10;
        java.lang.String r1, r2, $r9;
        boolean $z0;
        java.lang.StringBuilder $r4;

        r0 := @parameter0: java.io.File;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r2);

        if $z0 == 0 goto label1;

        $r10 = new java.io.File;

        specialinvoke $r10.<java.io.File: void <init>(java.io.File,java.lang.String)>(r0, r1);

        return $r10;

     label1:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r8 = new java.io.File;

        $r9 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.io.File: void <init>(java.io.File,java.lang.String)>(r0, $r9);

        return $r8;
    }

    public static java.io.File buildNonUniqueFile(java.io.File, java.lang.String, java.lang.String)
    {
        java.io.File r0, $r4;
        java.lang.String r1, $r2, $r3, r5;
        java.lang.String[] r6;

        r0 := @parameter0: java.io.File;

        r5 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

        r6 = staticinvoke <android.os.FileUtils: java.lang.String[] splitFileName(java.lang.String,java.lang.String)>(r5, r1);

        $r3 = r6[0];

        $r2 = r6[1];

        $r4 = staticinvoke <android.os.FileUtils: java.io.File buildFile(java.io.File,java.lang.String,java.lang.String)>(r0, $r3, $r2);

        return $r4;
    }

    public static java.io.File buildUniqueFile(java.io.File, java.lang.String) throws java.io.FileNotFoundException
    {
        java.io.File r0, $r2;
        int i0, $i1;
        java.lang.String r1, r3, r4, r5;

        r0 := @parameter0: java.io.File;

        r3 := @parameter1: java.lang.String;

        i0 = virtualinvoke r3.<java.lang.String: int lastIndexOf(int)>(46);

        if i0 < 0 goto label1;

        r4 = virtualinvoke r3.<java.lang.String: java.lang.String substring(int,int)>(0, i0);

        $i1 = i0 + 1;

        r1 = virtualinvoke r3.<java.lang.String: java.lang.String substring(int)>($i1);

        r3 = r4;

        r5 = r1;

        goto label2;

     label1:
        r5 = null;

     label2:
        $r2 = staticinvoke <android.os.FileUtils: java.io.File buildUniqueFileWithExtension(java.io.File,java.lang.String,java.lang.String)>(r0, r3, r5);

        return $r2;
    }

    public static java.io.File buildUniqueFile(java.io.File, java.lang.String, java.lang.String) throws java.io.FileNotFoundException
    {
        java.io.File r0, $r4;
        java.lang.String r1, $r2, $r3, r5;
        java.lang.String[] r6;

        r0 := @parameter0: java.io.File;

        r5 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

        r6 = staticinvoke <android.os.FileUtils: java.lang.String[] splitFileName(java.lang.String,java.lang.String)>(r5, r1);

        $r3 = r6[0];

        $r2 = r6[1];

        $r4 = staticinvoke <android.os.FileUtils: java.io.File buildUniqueFileWithExtension(java.io.File,java.lang.String,java.lang.String)>(r0, $r3, $r2);

        return $r4;
    }

    private static java.io.File buildUniqueFileWithExtension(java.io.File, java.lang.String, java.lang.String) throws java.io.FileNotFoundException
    {
        java.io.File r0, r10;
        java.lang.String r1, r2, $r9;
        int i0, i1;
        boolean $z0;
        java.io.FileNotFoundException $r3;
        java.lang.StringBuilder $r4;

        r0 := @parameter0: java.io.File;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r10 = staticinvoke <android.os.FileUtils: java.io.File buildFile(java.io.File,java.lang.String,java.lang.String)>(r0, r1, r2);

        i1 = 0;

     label1:
        $z0 = virtualinvoke r10.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label3;

        i0 = i1 + 1;

        if i1 >= 32 goto label2;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r9 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        r10 = staticinvoke <android.os.FileUtils: java.io.File buildFile(java.io.File,java.lang.String,java.lang.String)>(r0, $r9, r2);

        i1 = i0;

        goto label1;

     label2:
        $r3 = new java.io.FileNotFoundException;

        specialinvoke $r3.<java.io.FileNotFoundException: void <init>(java.lang.String)>("Failed to create unique file");

        throw $r3;

     label3:
        return r10;
    }

    public static java.lang.String buildValidExtFilename(java.lang.String)
    {
        java.lang.String r0, $r2, $r3, $r5;
        char c0;
        boolean $z0, $z1, $z2, $z3;
        java.lang.StringBuilder $r4;
        int $i1, $i2, i3;

        r0 := @parameter0: java.lang.String;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r0);

        if $z0 != 0 goto label6;

        $r2 = ".";

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z1 != 0 goto label6;

        $r3 = "..";

        $z2 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z2 == 0 goto label1;

        goto label6;

     label1:
        $r4 = new java.lang.StringBuilder;

        $i1 = virtualinvoke r0.<java.lang.String: int length()>();

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(int)>($i1);

        i3 = 0;

     label2:
        $i2 = virtualinvoke r0.<java.lang.String: int length()>();

        if i3 >= $i2 goto label5;

        c0 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i3);

        $z3 = staticinvoke <android.os.FileUtils: boolean isValidExtFilenameChar(char)>(c0);

        if $z3 == 0 goto label3;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c0);

        goto label4;

     label3:
        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(95);

     label4:
        i3 = i3 + 1;

        goto label2;

     label5:
        staticinvoke <android.os.FileUtils: void trimFilename(java.lang.StringBuilder,int)>($r4, 255);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;

     label6:
        return "(invalid)";
    }

    public static java.lang.String buildValidFatFilename(java.lang.String)
    {
        java.lang.String r0, $r2, $r3, $r5;
        char c0;
        boolean $z0, $z1, $z2, $z3;
        java.lang.StringBuilder $r4;
        int $i1, $i2, i3;

        r0 := @parameter0: java.lang.String;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r0);

        if $z0 != 0 goto label6;

        $r2 = ".";

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z1 != 0 goto label6;

        $r3 = "..";

        $z2 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z2 == 0 goto label1;

        goto label6;

     label1:
        $r4 = new java.lang.StringBuilder;

        $i1 = virtualinvoke r0.<java.lang.String: int length()>();

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(int)>($i1);

        i3 = 0;

     label2:
        $i2 = virtualinvoke r0.<java.lang.String: int length()>();

        if i3 >= $i2 goto label5;

        c0 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i3);

        $z3 = staticinvoke <android.os.FileUtils: boolean isValidFatFilenameChar(char)>(c0);

        if $z3 == 0 goto label3;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c0);

        goto label4;

     label3:
        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(95);

     label4:
        i3 = i3 + 1;

        goto label2;

     label5:
        staticinvoke <android.os.FileUtils: void trimFilename(java.lang.StringBuilder,int)>($r4, 255);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;

     label6:
        return "(invalid)";
    }

    public static void bytesToFile(java.lang.String, byte[]) throws java.io.IOException
    {
        int i0;
        java.io.FileOutputStream r0, $r1;
        boolean $z0;
        java.lang.Throwable $r2, $r3, $r4, $r5, $r6;
        java.lang.String r7;
        byte[] r8;

        r7 := @parameter0: java.lang.String;

        r8 := @parameter1: byte[];

        $z0 = virtualinvoke r7.<java.lang.String: boolean startsWith(java.lang.String)>("/proc/");

        if $z0 == 0 goto label12;

        i0 = staticinvoke <android.os.StrictMode: int allowThreadDiskWritesMask()>();

     label01:
        r0 = new java.io.FileOutputStream;

        specialinvoke r0.<java.io.FileOutputStream: void <init>(java.lang.String)>(r7);

     label02:
        virtualinvoke r0.<java.io.FileOutputStream: void write(byte[])>(r8);

     label03:
        virtualinvoke r0.<java.io.FileOutputStream: void close()>();

     label04:
        staticinvoke <android.os.StrictMode: void setThreadPolicyMask(int)>(i0);

        goto label15;

     label05:
        $r2 := @caughtexception;

     label06:
        virtualinvoke r0.<java.io.FileOutputStream: void close()>();

     label07:
        goto label10;

     label08:
        $r5 := @caughtexception;

     label09:
        virtualinvoke $r2.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r5);

     label10:
        throw $r2;

     label11:
        $r3 := @caughtexception;

        staticinvoke <android.os.StrictMode: void setThreadPolicyMask(int)>(i0);

        throw $r3;

     label12:
        $r1 = new java.io.FileOutputStream;

        specialinvoke $r1.<java.io.FileOutputStream: void <init>(java.lang.String)>(r7);

     label13:
        virtualinvoke $r1.<java.io.FileOutputStream: void write(byte[])>(r8);

     label14:
        virtualinvoke $r1.<java.io.FileOutputStream: void close()>();

     label15:
        return;

     label16:
        $r6 := @caughtexception;

     label17:
        virtualinvoke $r1.<java.io.FileOutputStream: void close()>();

     label18:
        goto label20;

     label19:
        $r4 := @caughtexception;

        virtualinvoke $r6.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r4);

     label20:
        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label02 to label03 with label05;
        catch java.lang.Throwable from label03 to label04 with label11;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label10 to label11 with label11;
        catch java.lang.Throwable from label13 to label14 with label16;
        catch java.lang.Throwable from label17 to label18 with label19;
    }

    public static long checksumCrc32(java.io.File) throws java.io.FileNotFoundException, java.io.IOException
    {
        java.util.zip.CheckedInputStream r1, r8;
        java.io.FileInputStream r2;
        long l0;
        java.util.zip.CRC32 $r3;
        int $i1;
        java.lang.Throwable $r4, $r5, $r6;
        java.io.File r7;
        byte[] r10;

        r7 := @parameter0: java.io.File;

        $r3 = new java.util.zip.CRC32;

        specialinvoke $r3.<java.util.zip.CRC32: void <init>()>();

        r8 = null;

     label01:
        r1 = new java.util.zip.CheckedInputStream;

     label02:
        r8 = null;

     label03:
        r2 = new java.io.FileInputStream;

     label04:
        r8 = null;

     label05:
        specialinvoke r2.<java.io.FileInputStream: void <init>(java.io.File)>(r7);

     label06:
        r8 = null;

     label07:
        specialinvoke r1.<java.util.zip.CheckedInputStream: void <init>(java.io.InputStream,java.util.zip.Checksum)>(r2, $r3);

     label08:
        r8 = r1;

     label09:
        r10 = newarray (byte)[128];

     label10:
        r8 = r1;

     label11:
        $i1 = virtualinvoke r1.<java.util.zip.CheckedInputStream: int read(byte[])>(r10);

        if $i1 < 0 goto label13;

     label12:
        goto label10;

     label13:
        r8 = r1;

     label14:
        l0 = virtualinvoke $r3.<java.util.zip.CRC32: long getValue()>();

     label15:
        virtualinvoke r1.<java.util.zip.CheckedInputStream: void close()>();

     label16:
        goto label18;

     label17:
        $r6 := @caughtexception;

     label18:
        return l0;

     label19:
        $r5 := @caughtexception;

        if r8 == null goto label23;

     label20:
        virtualinvoke r8.<java.util.zip.CheckedInputStream: void close()>();

     label21:
        goto label23;

     label22:
        $r4 := @caughtexception;

     label23:
        throw $r5;

        catch java.lang.Throwable from label01 to label02 with label19;
        catch java.lang.Throwable from label03 to label04 with label19;
        catch java.lang.Throwable from label05 to label06 with label19;
        catch java.lang.Throwable from label07 to label08 with label19;
        catch java.lang.Throwable from label09 to label10 with label19;
        catch java.lang.Throwable from label11 to label12 with label19;
        catch java.lang.Throwable from label14 to label15 with label19;
        catch java.io.IOException from label15 to label16 with label17;
        catch java.io.IOException from label20 to label21 with label22;
    }

    public static void closeQuietly(java.io.FileDescriptor)
    {
        java.io.FileDescriptor r0;

        r0 := @parameter0: java.io.FileDescriptor;

        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.io.FileDescriptor)>(r0);

        return;
    }

    public static void closeQuietly(java.lang.AutoCloseable)
    {
        java.lang.AutoCloseable r0;

        r0 := @parameter0: java.lang.AutoCloseable;

        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r0);

        return;
    }

    public static boolean contains(java.io.File, java.io.File)
    {
        java.io.File r0, r1;
        java.lang.String $r2, $r3;
        boolean $z0;

        r0 := @parameter0: java.io.File;

        r1 := @parameter1: java.io.File;

        if r0 == null goto label2;

        if r1 != null goto label1;

        goto label2;

     label1:
        $r2 = virtualinvoke r0.<java.io.File: java.lang.String getAbsolutePath()>();

        $r3 = virtualinvoke r1.<java.io.File: java.lang.String getAbsolutePath()>();

        $z0 = staticinvoke <android.os.FileUtils: boolean contains(java.lang.String,java.lang.String)>($r2, $r3);

        return $z0;

     label2:
        return 0;
    }

    public static boolean contains(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1, r5;
        boolean $z0, $z1, $z2;
        java.lang.StringBuilder $r2;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        r5 = r0;

        $z1 = virtualinvoke r0.<java.lang.String: boolean endsWith(java.lang.String)>("/");

        if $z1 != 0 goto label2;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        $z2 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>(r5);

        return $z2;
    }

    public static boolean contains(java.util.Collection, java.io.File)
    {
        java.io.File r0, $r2;
        boolean $z0, $z1;
        java.lang.Object $r1;
        java.util.Collection r3;
        java.util.Iterator r4;

        r3 := @parameter0: java.util.Collection;

        r0 := @parameter1: java.io.File;

        r4 = interfaceinvoke r3.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r1 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        $r2 = (java.io.File) $r1;

        $z1 = staticinvoke <android.os.FileUtils: boolean contains(java.io.File,java.io.File)>($r2, r0);

        if $z1 == 0 goto label2;

        return 1;

     label2:
        goto label1;

     label3:
        return 0;
    }

    public static boolean contains(java.io.File[], java.io.File)
    {
        java.io.File[] r0;
        java.io.File r1, $r2;
        int i0, i1;
        boolean $z0;

        r0 := @parameter0: java.io.File[];

        r1 := @parameter1: java.io.File;

        i0 = lengthof r0;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $r2 = r0[i1];

        $z0 = staticinvoke <android.os.FileUtils: boolean contains(java.io.File,java.io.File)>($r2, r1);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return 0;
    }

    public static long copy(java.io.File, java.io.File) throws java.io.IOException
    {
        java.io.File r0, r1;
        long $l0;

        r0 := @parameter0: java.io.File;

        r1 := @parameter1: java.io.File;

        $l0 = staticinvoke <android.os.FileUtils: long copy(java.io.File,java.io.File,android.os.CancellationSignal,java.util.concurrent.Executor,android.os.FileUtils$ProgressListener)>(r0, r1, null, null, null);

        return $l0;
    }

    public static long copy(java.io.File, java.io.File, android.os.CancellationSignal, java.util.concurrent.Executor, android.os.FileUtils$ProgressListener) throws java.io.IOException
    {
        java.util.concurrent.Executor r0;
        android.os.FileUtils$ProgressListener r1;
        java.io.FileOutputStream r2;
        long l0;
        java.io.FileInputStream $r3;
        java.lang.Throwable $r4, $r5, $r6, $r7;
        java.io.File r8, r9;
        android.os.CancellationSignal r10;

        r8 := @parameter0: java.io.File;

        r9 := @parameter1: java.io.File;

        r10 := @parameter2: android.os.CancellationSignal;

        r0 := @parameter3: java.util.concurrent.Executor;

        r1 := @parameter4: android.os.FileUtils$ProgressListener;

        $r3 = new java.io.FileInputStream;

        specialinvoke $r3.<java.io.FileInputStream: void <init>(java.io.File)>(r8);

     label01:
        r2 = new java.io.FileOutputStream;

        specialinvoke r2.<java.io.FileOutputStream: void <init>(java.io.File)>(r9);

     label02:
        l0 = staticinvoke <android.os.FileUtils: long copy(java.io.InputStream,java.io.OutputStream,android.os.CancellationSignal,java.util.concurrent.Executor,android.os.FileUtils$ProgressListener)>($r3, r2, r10, r0, r1);

     label03:
        virtualinvoke r2.<java.io.FileOutputStream: void close()>();

     label04:
        virtualinvoke $r3.<java.io.FileInputStream: void close()>();

        return l0;

     label05:
        $r7 := @caughtexception;

     label06:
        virtualinvoke r2.<java.io.FileOutputStream: void close()>();

     label07:
        goto label10;

     label08:
        $r4 := @caughtexception;

     label09:
        virtualinvoke $r7.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r4);

     label10:
        throw $r7;

     label11:
        $r5 := @caughtexception;

     label12:
        virtualinvoke $r3.<java.io.FileInputStream: void close()>();

     label13:
        goto label15;

     label14:
        $r6 := @caughtexception;

        virtualinvoke $r5.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r6);

     label15:
        throw $r5;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label02 to label03 with label05;
        catch java.lang.Throwable from label03 to label04 with label11;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label10 to label11 with label11;
        catch java.lang.Throwable from label12 to label13 with label14;
    }

    public static long copy(java.io.FileDescriptor, java.io.FileDescriptor) throws java.io.IOException
    {
        java.io.FileDescriptor r0, r1;
        long $l0;

        r0 := @parameter0: java.io.FileDescriptor;

        r1 := @parameter1: java.io.FileDescriptor;

        $l0 = staticinvoke <android.os.FileUtils: long copy(java.io.FileDescriptor,java.io.FileDescriptor,android.os.CancellationSignal,java.util.concurrent.Executor,android.os.FileUtils$ProgressListener)>(r0, r1, null, null, null);

        return $l0;
    }

    public static long copy(java.io.FileDescriptor, java.io.FileDescriptor, long, android.os.CancellationSignal, java.util.concurrent.Executor, android.os.FileUtils$ProgressListener) throws java.io.IOException
    {
        java.io.FileDescriptor r0, r8;
        android.os.CancellationSignal r1;
        java.util.concurrent.Executor r2;
        android.os.FileUtils$ProgressListener r3;
        android.system.StructStat r4, r5;
        boolean $z0, $z1, $z2, $z3, $z4;
        long $l0, $l5, l6, l7;
        int $i1, $i2, $i3, $i4;
        java.lang.Throwable $r6;
        java.io.IOException $r7;
        android.system.ErrnoException r10;

        r8 := @parameter0: java.io.FileDescriptor;

        r0 := @parameter1: java.io.FileDescriptor;

        l6 := @parameter2: long;

        r1 := @parameter3: android.os.CancellationSignal;

        r2 := @parameter4: java.util.concurrent.Executor;

        r3 := @parameter5: android.os.FileUtils$ProgressListener;

        $z0 = <android.os.FileUtils: boolean sEnableCopyOptimizations>;

        if $z0 == 0 goto label8;

     label1:
        r4 = staticinvoke <android.system.Os: android.system.StructStat fstat(java.io.FileDescriptor)>(r8);

        r5 = staticinvoke <android.system.Os: android.system.StructStat fstat(java.io.FileDescriptor)>(r0);

        $i1 = r4.<android.system.StructStat: int st_mode>;

        $z1 = staticinvoke <android.system.OsConstants: boolean S_ISREG(int)>($i1);

        if $z1 == 0 goto label2;

        $i4 = r5.<android.system.StructStat: int st_mode>;

        $z4 = staticinvoke <android.system.OsConstants: boolean S_ISREG(int)>($i4);

        if $z4 == 0 goto label2;

        $l5 = staticinvoke <android.os.FileUtils: long copyInternalSendfile(java.io.FileDescriptor,java.io.FileDescriptor,long,android.os.CancellationSignal,java.util.concurrent.Executor,android.os.FileUtils$ProgressListener)>(r8, r0, l6, r1, r2, r3);

        return $l5;

     label2:
        $i2 = r4.<android.system.StructStat: int st_mode>;

        $z2 = staticinvoke <android.system.OsConstants: boolean S_ISFIFO(int)>($i2);

        if $z2 != 0 goto label5;

        $i3 = r5.<android.system.StructStat: int st_mode>;

        $z3 = staticinvoke <android.system.OsConstants: boolean S_ISFIFO(int)>($i3);

        if $z3 == 0 goto label4;

     label3:
        goto label5;

     label4:
        goto label8;

     label5:
        l7 = staticinvoke <android.os.FileUtils: long copyInternalSplice(java.io.FileDescriptor,java.io.FileDescriptor,long,android.os.CancellationSignal,java.util.concurrent.Executor,android.os.FileUtils$ProgressListener)>(r8, r0, l6, r1, r2, r3);

     label6:
        return l7;

     label7:
        $r6 := @caughtexception;

        r10 = (android.system.ErrnoException) $r6;

        $r7 = virtualinvoke r10.<android.system.ErrnoException: java.io.IOException rethrowAsIOException()>();

        throw $r7;

     label8:
        $l0 = staticinvoke <android.os.FileUtils: long copyInternalUserspace(java.io.FileDescriptor,java.io.FileDescriptor,long,android.os.CancellationSignal,java.util.concurrent.Executor,android.os.FileUtils$ProgressListener)>(r8, r0, l6, r1, r2, r3);

        return $l0;

        catch android.system.ErrnoException from label1 to label2 with label7;
        catch android.system.ErrnoException from label2 to label3 with label7;
        catch android.system.ErrnoException from label5 to label6 with label7;
    }

    public static long copy(java.io.FileDescriptor, java.io.FileDescriptor, android.os.CancellationSignal, java.util.concurrent.Executor, android.os.FileUtils$ProgressListener) throws java.io.IOException
    {
        java.io.FileDescriptor r0, r1;
        android.os.CancellationSignal r2;
        java.util.concurrent.Executor r3;
        android.os.FileUtils$ProgressListener r4;
        long $l0;

        r0 := @parameter0: java.io.FileDescriptor;

        r1 := @parameter1: java.io.FileDescriptor;

        r2 := @parameter2: android.os.CancellationSignal;

        r3 := @parameter3: java.util.concurrent.Executor;

        r4 := @parameter4: android.os.FileUtils$ProgressListener;

        $l0 = staticinvoke <android.os.FileUtils: long copy(java.io.FileDescriptor,java.io.FileDescriptor,long,android.os.CancellationSignal,java.util.concurrent.Executor,android.os.FileUtils$ProgressListener)>(r0, r1, 9223372036854775807L, r2, r3, r4);

        return $l0;
    }

    public static long copy(java.io.InputStream, java.io.OutputStream) throws java.io.IOException
    {
        java.io.InputStream r0;
        java.io.OutputStream r1;
        long $l0;

        r0 := @parameter0: java.io.InputStream;

        r1 := @parameter1: java.io.OutputStream;

        $l0 = staticinvoke <android.os.FileUtils: long copy(java.io.InputStream,java.io.OutputStream,android.os.CancellationSignal,java.util.concurrent.Executor,android.os.FileUtils$ProgressListener)>(r0, r1, null, null, null);

        return $l0;
    }

    public static long copy(java.io.InputStream, java.io.OutputStream, android.os.CancellationSignal, java.util.concurrent.Executor, android.os.FileUtils$ProgressListener) throws java.io.IOException
    {
        java.io.InputStream r0;
        java.io.OutputStream r1;
        android.os.CancellationSignal r2;
        java.util.concurrent.Executor r3;
        android.os.FileUtils$ProgressListener r4;
        boolean $z0, $z1, $z2;
        java.io.FileInputStream $r5;
        java.io.FileDescriptor $r6, $r8;
        java.io.FileOutputStream $r7;
        long $l0, $l1;

        r0 := @parameter0: java.io.InputStream;

        r1 := @parameter1: java.io.OutputStream;

        r2 := @parameter2: android.os.CancellationSignal;

        r3 := @parameter3: java.util.concurrent.Executor;

        r4 := @parameter4: android.os.FileUtils$ProgressListener;

        $z0 = <android.os.FileUtils: boolean sEnableCopyOptimizations>;

        if $z0 == 0 goto label1;

        $z1 = r0 instanceof java.io.FileInputStream;

        if $z1 == 0 goto label1;

        $z2 = r1 instanceof java.io.FileOutputStream;

        if $z2 == 0 goto label1;

        $r5 = (java.io.FileInputStream) r0;

        $r6 = virtualinvoke $r5.<java.io.FileInputStream: java.io.FileDescriptor getFD()>();

        $r7 = (java.io.FileOutputStream) r1;

        $r8 = virtualinvoke $r7.<java.io.FileOutputStream: java.io.FileDescriptor getFD()>();

        $l0 = staticinvoke <android.os.FileUtils: long copy(java.io.FileDescriptor,java.io.FileDescriptor,android.os.CancellationSignal,java.util.concurrent.Executor,android.os.FileUtils$ProgressListener)>($r6, $r8, r2, r3, r4);

        return $l0;

     label1:
        $l1 = staticinvoke <android.os.FileUtils: long copyInternalUserspace(java.io.InputStream,java.io.OutputStream,android.os.CancellationSignal,java.util.concurrent.Executor,android.os.FileUtils$ProgressListener)>(r0, r1, r2, r3, r4);

        return $l1;
    }

    public static boolean copyFile(java.io.File, java.io.File)
    {
        java.io.File r0, r2;
        java.lang.Throwable $r1;

        r2 := @parameter0: java.io.File;

        r0 := @parameter1: java.io.File;

     label1:
        staticinvoke <android.os.FileUtils: void copyFileOrThrow(java.io.File,java.io.File)>(r2, r0);

     label2:
        return 1;

     label3:
        $r1 := @caughtexception;

        return 0;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public static void copyFileOrThrow(java.io.File, java.io.File) throws java.io.IOException
    {
        java.io.FileInputStream $r0;
        java.lang.Throwable $r1, $r2;
        java.io.File r3, r4;

        r3 := @parameter0: java.io.File;

        r4 := @parameter1: java.io.File;

        $r0 = new java.io.FileInputStream;

        specialinvoke $r0.<java.io.FileInputStream: void <init>(java.io.File)>(r3);

     label1:
        staticinvoke <android.os.FileUtils: void copyToFileOrThrow(java.io.InputStream,java.io.File)>($r0, r4);

     label2:
        virtualinvoke $r0.<java.io.InputStream: void close()>();

        return;

     label3:
        $r1 := @caughtexception;

     label4:
        virtualinvoke $r0.<java.io.InputStream: void close()>();

     label5:
        goto label7;

     label6:
        $r2 := @caughtexception;

        virtualinvoke $r1.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r2);

     label7:
        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label6;
    }

    public static long copyInternalSendfile(java.io.FileDescriptor, java.io.FileDescriptor, long, android.os.CancellationSignal, java.util.concurrent.Executor, android.os.FileUtils$ProgressListener) throws android.system.ErrnoException
    {
        java.io.FileDescriptor r0, r1;
        android.os.CancellationSignal r2;
        java.util.concurrent.Executor r3;
        android.os.FileUtils$ProgressListener r4;
        long l0, l2, l4, l5, l6, $l7, l8, l10, l11;
        android.os._$$Lambda$FileUtils$XQaJiyjsC2_MFNDbZFQcIhqPnNA $r5;
        byte $b1, $b9;
        android.os._$$Lambda$FileUtils$QtbHtI8Y1rifwydngi6coGK5l2A $r6;

        r0 := @parameter0: java.io.FileDescriptor;

        r1 := @parameter1: java.io.FileDescriptor;

        l2 := @parameter2: long;

        r2 := @parameter3: android.os.CancellationSignal;

        r3 := @parameter4: java.util.concurrent.Executor;

        r4 := @parameter5: android.os.FileUtils$ProgressListener;

        l4 = 0L;

        l5 = l2;

        l6 = 0L;

     label1:
        $l7 = staticinvoke <java.lang.Math: long min(long,long)>(l5, 524288L);

        l8 = staticinvoke <android.system.Os: long sendfile(java.io.FileDescriptor,java.io.FileDescriptor,android.system.Int64Ref,long)>(r1, r0, null, $l7);

        $b9 = l8 cmp 0L;

        if $b9 == 0 goto label4;

        l10 = l4 + l8;

        l0 = l6 + l8;

        l11 = l5 - l8;

        l5 = l11;

        l4 = l10;

        l6 = l0;

        $b1 = l0 cmp 524288L;

        if $b1 < 0 goto label1;

        if r2 == null goto label2;

        virtualinvoke r2.<android.os.CancellationSignal: void throwIfCanceled()>();

     label2:
        if r3 == null goto label3;

        if r4 == null goto label3;

        $r6 = new android.os._$$Lambda$FileUtils$QtbHtI8Y1rifwydngi6coGK5l2A;

        specialinvoke $r6.<android.os._$$Lambda$FileUtils$QtbHtI8Y1rifwydngi6coGK5l2A: void <init>(android.os.FileUtils$ProgressListener,long)>(r4, l10);

        interfaceinvoke r3.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r6);

     label3:
        l6 = 0L;

        l5 = l11;

        l4 = l10;

        goto label1;

     label4:
        if r3 == null goto label5;

        if r4 == null goto label5;

        $r5 = new android.os._$$Lambda$FileUtils$XQaJiyjsC2_MFNDbZFQcIhqPnNA;

        specialinvoke $r5.<android.os._$$Lambda$FileUtils$XQaJiyjsC2_MFNDbZFQcIhqPnNA: void <init>(android.os.FileUtils$ProgressListener,long)>(r4, l4);

        interfaceinvoke r3.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r5);

     label5:
        return l4;
    }

    public static long copyInternalSplice(java.io.FileDescriptor, java.io.FileDescriptor, long, android.os.CancellationSignal, java.util.concurrent.Executor, android.os.FileUtils$ProgressListener) throws android.system.ErrnoException
    {
        java.io.FileDescriptor r0, r1;
        android.os.CancellationSignal r2;
        java.util.concurrent.Executor r3;
        android.os.FileUtils$ProgressListener r4;
        long l0, l2, l4, l5, l6, $l7, l11, l13, l14;
        android.os._$$Lambda$FileUtils$e0JoE_HjVf9vMX679eNxZixyUZ0 $r5;
        byte $b1, $b12;
        android.os._$$Lambda$FileUtils$RlOy_0MlKMWkkCC1mk_jzWcLTKs $r6;
        int $i8, $i9, $i10;

        r0 := @parameter0: java.io.FileDescriptor;

        r1 := @parameter1: java.io.FileDescriptor;

        l2 := @parameter2: long;

        r2 := @parameter3: android.os.CancellationSignal;

        r3 := @parameter4: java.util.concurrent.Executor;

        r4 := @parameter5: android.os.FileUtils$ProgressListener;

        l4 = 0L;

        l5 = l2;

        l6 = 0L;

     label1:
        $l7 = staticinvoke <java.lang.Math: long min(long,long)>(l5, 524288L);

        $i8 = <android.system.OsConstants: int SPLICE_F_MOVE>;

        $i9 = <android.system.OsConstants: int SPLICE_F_MORE>;

        $i10 = $i8 | $i9;

        l11 = staticinvoke <android.system.Os: long splice(java.io.FileDescriptor,android.system.Int64Ref,java.io.FileDescriptor,android.system.Int64Ref,long,int)>(r0, null, r1, null, $l7, $i10);

        $b12 = l11 cmp 0L;

        if $b12 == 0 goto label4;

        l13 = l4 + l11;

        l0 = l6 + l11;

        l14 = l5 - l11;

        l5 = l14;

        l4 = l13;

        l6 = l0;

        $b1 = l0 cmp 524288L;

        if $b1 < 0 goto label1;

        if r2 == null goto label2;

        virtualinvoke r2.<android.os.CancellationSignal: void throwIfCanceled()>();

     label2:
        if r3 == null goto label3;

        if r4 == null goto label3;

        $r6 = new android.os._$$Lambda$FileUtils$RlOy_0MlKMWkkCC1mk_jzWcLTKs;

        specialinvoke $r6.<android.os._$$Lambda$FileUtils$RlOy_0MlKMWkkCC1mk_jzWcLTKs: void <init>(android.os.FileUtils$ProgressListener,long)>(r4, l13);

        interfaceinvoke r3.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r6);

     label3:
        l6 = 0L;

        l5 = l14;

        l4 = l13;

        goto label1;

     label4:
        if r3 == null goto label5;

        if r4 == null goto label5;

        $r5 = new android.os._$$Lambda$FileUtils$e0JoE_HjVf9vMX679eNxZixyUZ0;

        specialinvoke $r5.<android.os._$$Lambda$FileUtils$e0JoE_HjVf9vMX679eNxZixyUZ0: void <init>(android.os.FileUtils$ProgressListener,long)>(r4, l4);

        interfaceinvoke r3.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r5);

     label5:
        return l4;
    }

    public static long copyInternalUserspace(java.io.FileDescriptor, java.io.FileDescriptor, long, android.os.CancellationSignal, java.util.concurrent.Executor, android.os.FileUtils$ProgressListener) throws java.io.IOException
    {
        java.io.FileDescriptor r0, r1;
        long l0, $l2, $l3;
        android.os.CancellationSignal r2;
        java.util.concurrent.Executor r3;
        android.os.FileUtils$ProgressListener r4;
        byte $b1;
        java.io.FileInputStream $r5, $r8;
        java.io.FileOutputStream $r6, $r9;
        com.android.internal.util.SizedInputStream $r7;

        r0 := @parameter0: java.io.FileDescriptor;

        r1 := @parameter1: java.io.FileDescriptor;

        l0 := @parameter2: long;

        r2 := @parameter3: android.os.CancellationSignal;

        r3 := @parameter4: java.util.concurrent.Executor;

        r4 := @parameter5: android.os.FileUtils$ProgressListener;

        $b1 = l0 cmp 9223372036854775807L;

        if $b1 == 0 goto label1;

        $r7 = new com.android.internal.util.SizedInputStream;

        $r8 = new java.io.FileInputStream;

        specialinvoke $r8.<java.io.FileInputStream: void <init>(java.io.FileDescriptor)>(r0);

        specialinvoke $r7.<com.android.internal.util.SizedInputStream: void <init>(java.io.InputStream,long)>($r8, l0);

        $r9 = new java.io.FileOutputStream;

        specialinvoke $r9.<java.io.FileOutputStream: void <init>(java.io.FileDescriptor)>(r1);

        $l3 = staticinvoke <android.os.FileUtils: long copyInternalUserspace(java.io.InputStream,java.io.OutputStream,android.os.CancellationSignal,java.util.concurrent.Executor,android.os.FileUtils$ProgressListener)>($r7, $r9, r2, r3, r4);

        return $l3;

     label1:
        $r5 = new java.io.FileInputStream;

        specialinvoke $r5.<java.io.FileInputStream: void <init>(java.io.FileDescriptor)>(r0);

        $r6 = new java.io.FileOutputStream;

        specialinvoke $r6.<java.io.FileOutputStream: void <init>(java.io.FileDescriptor)>(r1);

        $l2 = staticinvoke <android.os.FileUtils: long copyInternalUserspace(java.io.InputStream,java.io.OutputStream,android.os.CancellationSignal,java.util.concurrent.Executor,android.os.FileUtils$ProgressListener)>($r5, $r6, r2, r3, r4);

        return $l2;
    }

    public static long copyInternalUserspace(java.io.FileDescriptor, java.io.FileDescriptor, android.os.FileUtils$ProgressListener, android.os.CancellationSignal, long) throws java.io.IOException
    {
        java.io.FileDescriptor r0, r1;
        android.os.FileUtils$ProgressListener r2;
        android.os.CancellationSignal r3;
        long l0, $l1;
        android.os.'-$$Lambda$_14QHG018Z6p13d3hzJuGTWnNeo' $r4;
        java.util.concurrent.Executor r5;

        r0 := @parameter0: java.io.FileDescriptor;

        r1 := @parameter1: java.io.FileDescriptor;

        r2 := @parameter2: android.os.FileUtils$ProgressListener;

        r3 := @parameter3: android.os.CancellationSignal;

        l0 := @parameter4: long;

        $r4 = <android.os._$$Lambda$_14QHG018Z6p13d3hzJuGTWnNeo: android.os.'-$$Lambda$_14QHG018Z6p13d3hzJuGTWnNeo' INSTANCE>;

        r5 = (java.util.concurrent.Executor) $r4;

        $l1 = staticinvoke <android.os.FileUtils: long copyInternalUserspace(java.io.FileDescriptor,java.io.FileDescriptor,long,android.os.CancellationSignal,java.util.concurrent.Executor,android.os.FileUtils$ProgressListener)>(r0, r1, l0, r3, r5, r2);

        return $l1;
    }

    public static long copyInternalUserspace(java.io.InputStream, java.io.OutputStream, android.os.CancellationSignal, java.util.concurrent.Executor, android.os.FileUtils$ProgressListener) throws java.io.IOException
    {
        java.io.InputStream r0;
        java.io.OutputStream r1;
        android.os.CancellationSignal r2;
        java.util.concurrent.Executor r3;
        android.os.FileUtils$ProgressListener r4;
        byte[] r5;
        int i0;
        long l1, l2, $l3, $l4, l6, l7;
        android.os._$$Lambda$FileUtils$0SBPRWOXcbR9EMG_p_55sUuxJ_0 $r6;
        byte $b5;
        android.os._$$Lambda$FileUtils$TJeD9NeX5giO_5vlBrurGI_g4IY $r7;

        r0 := @parameter0: java.io.InputStream;

        r1 := @parameter1: java.io.OutputStream;

        r2 := @parameter2: android.os.CancellationSignal;

        r3 := @parameter3: java.util.concurrent.Executor;

        r4 := @parameter4: android.os.FileUtils$ProgressListener;

        l6 = 0L;

        l7 = 0L;

        r5 = newarray (byte)[8192];

     label1:
        i0 = virtualinvoke r0.<java.io.InputStream: int read(byte[])>(r5);

        if i0 == -1 goto label4;

        virtualinvoke r1.<java.io.OutputStream: void write(byte[],int,int)>(r5, 0, i0);

        $l3 = (long) i0;

        l1 = l6 + $l3;

        $l4 = (long) i0;

        l2 = l7 + $l4;

        l6 = l1;

        l7 = l2;

        $b5 = l2 cmp 524288L;

        if $b5 < 0 goto label1;

        if r2 == null goto label2;

        virtualinvoke r2.<android.os.CancellationSignal: void throwIfCanceled()>();

     label2:
        if r3 == null goto label3;

        if r4 == null goto label3;

        $r7 = new android.os._$$Lambda$FileUtils$TJeD9NeX5giO_5vlBrurGI_g4IY;

        specialinvoke $r7.<android.os._$$Lambda$FileUtils$TJeD9NeX5giO_5vlBrurGI_g4IY: void <init>(android.os.FileUtils$ProgressListener,long)>(r4, l1);

        interfaceinvoke r3.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r7);

     label3:
        l7 = 0L;

        l6 = l1;

        goto label1;

     label4:
        if r3 == null goto label5;

        if r4 == null goto label5;

        $r6 = new android.os._$$Lambda$FileUtils$0SBPRWOXcbR9EMG_p_55sUuxJ_0;

        specialinvoke $r6.<android.os._$$Lambda$FileUtils$0SBPRWOXcbR9EMG_p_55sUuxJ_0: void <init>(android.os.FileUtils$ProgressListener,long)>(r4, l6);

        interfaceinvoke r3.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r6);

     label5:
        return l6;
    }

    public static void copyPermissions(java.io.File, java.io.File) throws java.io.IOException
    {
        java.io.File r0, r6;
        java.lang.String $r1, $r2, $r3;
        int $i0, $i1, $i2;
        java.lang.Throwable $r4;
        java.io.IOException $r5;
        android.system.StructStat r7;
        android.system.ErrnoException r9;

        r6 := @parameter0: java.io.File;

        r0 := @parameter1: java.io.File;

     label1:
        $r1 = virtualinvoke r6.<java.io.File: java.lang.String getAbsolutePath()>();

        r7 = staticinvoke <android.system.Os: android.system.StructStat stat(java.lang.String)>($r1);

        $r2 = virtualinvoke r0.<java.io.File: java.lang.String getAbsolutePath()>();

        $i0 = r7.<android.system.StructStat: int st_mode>;

        staticinvoke <android.system.Os: void chmod(java.lang.String,int)>($r2, $i0);

        $r3 = virtualinvoke r0.<java.io.File: java.lang.String getAbsolutePath()>();

        $i2 = r7.<android.system.StructStat: int st_uid>;

        $i1 = r7.<android.system.StructStat: int st_gid>;

        staticinvoke <android.system.Os: void chown(java.lang.String,int,int)>($r3, $i2, $i1);

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        r9 = (android.system.ErrnoException) $r4;

        $r5 = virtualinvoke r9.<android.system.ErrnoException: java.io.IOException rethrowAsIOException()>();

        throw $r5;

        catch android.system.ErrnoException from label1 to label2 with label3;
    }

    public static boolean copyToFile(java.io.InputStream, java.io.File)
    {
        java.io.File r0;
        java.lang.Throwable $r1;
        java.io.InputStream r2;

        r2 := @parameter0: java.io.InputStream;

        r0 := @parameter1: java.io.File;

     label1:
        staticinvoke <android.os.FileUtils: void copyToFileOrThrow(java.io.InputStream,java.io.File)>(r2, r0);

     label2:
        return 1;

     label3:
        $r1 := @caughtexception;

        return 0;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public static void copyToFileOrThrow(java.io.InputStream, java.io.File) throws java.io.IOException
    {
        boolean $z0;
        java.io.FileDescriptor $r1;
        java.lang.Throwable $r2, $r3, $r5;
        java.io.IOException $r4;
        java.io.InputStream r6;
        java.io.File r7;
        java.io.FileOutputStream r12;
        android.system.ErrnoException r13;

        r6 := @parameter0: java.io.InputStream;

        r7 := @parameter1: java.io.File;

        $z0 = virtualinvoke r7.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label01;

        virtualinvoke r7.<java.io.File: boolean delete()>();

     label01:
        r12 = new java.io.FileOutputStream;

        specialinvoke r12.<java.io.FileOutputStream: void <init>(java.io.File)>(r7);

     label02:
        staticinvoke <android.os.FileUtils: long copy(java.io.InputStream,java.io.OutputStream)>(r6, r12);

     label03:
        $r1 = virtualinvoke r12.<java.io.FileOutputStream: java.io.FileDescriptor getFD()>();

        staticinvoke <android.system.Os: void fsync(java.io.FileDescriptor)>($r1);

     label04:
        virtualinvoke r12.<java.io.FileOutputStream: void close()>();

        return;

     label05:
        $r3 := @caughtexception;

     label06:
        r13 = (android.system.ErrnoException) $r3;

        $r4 = virtualinvoke r13.<android.system.ErrnoException: java.io.IOException rethrowAsIOException()>();

        throw $r4;

     label07:
        $r5 := @caughtexception;

     label08:
        virtualinvoke r12.<java.io.FileOutputStream: void close()>();

     label09:
        goto label11;

     label10:
        $r2 := @caughtexception;

        virtualinvoke $r5.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r2);

     label11:
        throw $r5;

        catch java.lang.Throwable from label02 to label03 with label07;
        catch android.system.ErrnoException from label03 to label04 with label05;
        catch java.lang.Throwable from label03 to label04 with label07;
        catch java.lang.Throwable from label06 to label07 with label07;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public static java.io.File createDir(java.io.File, java.lang.String)
    {
        java.lang.String r0;
        java.io.File $r1, r2, r3;
        boolean $z0;

        r2 := @parameter0: java.io.File;

        r0 := @parameter1: java.lang.String;

        $r1 = new java.io.File;

        specialinvoke $r1.<java.io.File: void <init>(java.io.File,java.lang.String)>(r2, r0);

        r3 = $r1;

        $z0 = staticinvoke <android.os.FileUtils: boolean createDir(java.io.File)>($r1);

        if $z0 == 0 goto label1;

        goto label2;

     label1:
        r3 = null;

     label2:
        return r3;
    }

    public static boolean createDir(java.io.File)
    {
        java.io.File r0;
        boolean $z0, $z1, $z2;

        r0 := @parameter0: java.io.File;

        $z0 = virtualinvoke r0.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label1;

        $z2 = virtualinvoke r0.<java.io.File: boolean isDirectory()>();

        return $z2;

     label1:
        $z1 = virtualinvoke r0.<java.io.File: boolean mkdir()>();

        return $z1;
    }

    public static boolean deleteContents(java.io.File)
    {
        java.io.File[] r0;
        int i0, i2;
        java.io.File r1, r6;
        boolean $z0, $z1, $z2, z3, z4, z5;
        java.lang.StringBuilder $r2;
        java.lang.String $r5;

        r6 := @parameter0: java.io.File;

        r0 = virtualinvoke r6.<java.io.File: java.io.File[] listFiles()>();

        z3 = 1;

        z4 = 1;

        if r0 == null goto label4;

        i0 = lengthof r0;

        i2 = 0;

     label1:
        z3 = z4;

        if i2 >= i0 goto label4;

        r1 = r0[i2];

        z5 = z4;

        $z0 = virtualinvoke r1.<java.io.File: boolean isDirectory()>();

        if $z0 == 0 goto label2;

        $z2 = staticinvoke <android.os.FileUtils: boolean deleteContents(java.io.File)>(r1);

        z5 = z4 & $z2;

     label2:
        z4 = z5;

        $z1 = virtualinvoke r1.<java.io.File: boolean delete()>();

        if $z1 != 0 goto label3;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to delete ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("FileUtils", $r5);

        z4 = 0;

     label3:
        i2 = i2 + 1;

        goto label1;

     label4:
        return z3;
    }

    public static boolean deleteContentsAndDir(java.io.File)
    {
        java.io.File r0;
        boolean $z0, $z1;

        r0 := @parameter0: java.io.File;

        $z0 = staticinvoke <android.os.FileUtils: boolean deleteContents(java.io.File)>(r0);

        if $z0 == 0 goto label1;

        $z1 = virtualinvoke r0.<java.io.File: boolean delete()>();

        return $z1;

     label1:
        return 0;
    }

    public static boolean deleteOlderFiles(java.io.File, int, long)
    {
        long l0, $l3, $l4, $l5;
        java.io.File[] r0;
        java.lang.IllegalArgumentException $r2;
        byte $b1, $b6;
        android.os.FileUtils$1 $r3;
        int $i2, i8;
        boolean $z0, z1, z2;
        java.lang.StringBuilder $r4;
        java.lang.String $r7;
        java.io.File r8, r9;

        r8 := @parameter0: java.io.File;

        i8 := @parameter1: int;

        l0 := @parameter2: long;

        if i8 < 0 goto label5;

        $b1 = l0 cmp 0L;

        if $b1 < 0 goto label5;

        r0 = virtualinvoke r8.<java.io.File: java.io.File[] listFiles()>();

        if r0 != null goto label1;

        return 0;

     label1:
        $r3 = new android.os.FileUtils$1;

        specialinvoke $r3.<android.os.FileUtils$1: void <init>()>();

        staticinvoke <java.util.Arrays: void sort(java.lang.Object[],java.util.Comparator)>(r0, $r3);

        z1 = 0;

     label2:
        $i2 = lengthof r0;

        if i8 >= $i2 goto label4;

        r9 = r0[i8];

        z2 = z1;

        $l3 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l4 = virtualinvoke r9.<java.io.File: long lastModified()>();

        $l5 = $l3 - $l4;

        $b6 = $l5 cmp l0;

        if $b6 <= 0 goto label3;

        z2 = z1;

        $z0 = virtualinvoke r9.<java.io.File: boolean delete()>();

        if $z0 == 0 goto label3;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Deleted old file ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r9);

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("FileUtils", $r7);

        z2 = 1;

     label3:
        i8 = i8 + 1;

        z1 = z2;

        goto label2;

     label4:
        return z1;

     label5:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Constraints must be positive or 0");

        throw $r2;
    }

    public static byte[] digest(java.io.File, java.lang.String) throws java.io.IOException, java.security.NoSuchAlgorithmException
    {
        java.io.FileInputStream $r0;
        java.lang.Throwable $r1, $r2;
        java.io.File r3;
        java.lang.String r4;
        byte[] r6;

        r3 := @parameter0: java.io.File;

        r4 := @parameter1: java.lang.String;

        $r0 = new java.io.FileInputStream;

        specialinvoke $r0.<java.io.FileInputStream: void <init>(java.io.File)>(r3);

     label1:
        r6 = staticinvoke <android.os.FileUtils: byte[] digest(java.io.InputStream,java.lang.String)>($r0, r4);

     label2:
        virtualinvoke $r0.<java.io.FileInputStream: void close()>();

        return r6;

     label3:
        $r1 := @caughtexception;

     label4:
        virtualinvoke $r0.<java.io.FileInputStream: void close()>();

     label5:
        goto label7;

     label6:
        $r2 := @caughtexception;

        virtualinvoke $r1.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r2);

     label7:
        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label6;
    }

    public static byte[] digest(java.io.FileDescriptor, java.lang.String) throws java.io.IOException, java.security.NoSuchAlgorithmException
    {
        java.io.FileDescriptor r0;
        java.lang.String r1;
        java.io.FileInputStream $r2;
        byte[] $r3;

        r0 := @parameter0: java.io.FileDescriptor;

        r1 := @parameter1: java.lang.String;

        $r2 = new java.io.FileInputStream;

        specialinvoke $r2.<java.io.FileInputStream: void <init>(java.io.FileDescriptor)>(r0);

        $r3 = staticinvoke <android.os.FileUtils: byte[] digestInternalUserspace(java.io.InputStream,java.lang.String)>($r2, r1);

        return $r3;
    }

    public static byte[] digest(java.io.InputStream, java.lang.String) throws java.io.IOException, java.security.NoSuchAlgorithmException
    {
        java.io.InputStream r0;
        java.lang.String r1;
        byte[] $r2;

        r0 := @parameter0: java.io.InputStream;

        r1 := @parameter1: java.lang.String;

        $r2 = staticinvoke <android.os.FileUtils: byte[] digestInternalUserspace(java.io.InputStream,java.lang.String)>(r0, r1);

        return $r2;
    }

    private static byte[] digestInternalUserspace(java.io.InputStream, java.lang.String) throws java.io.IOException, java.security.NoSuchAlgorithmException
    {
        byte[] r0, $r2;
        int i0;
        java.security.DigestInputStream $r1;
        java.lang.Throwable $r3, $r4;
        java.io.InputStream r5;
        java.lang.String r6;
        java.security.MessageDigest r7;

        r5 := @parameter0: java.io.InputStream;

        r6 := @parameter1: java.lang.String;

        r7 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(r6);

        $r1 = new java.security.DigestInputStream;

        specialinvoke $r1.<java.security.DigestInputStream: void <init>(java.io.InputStream,java.security.MessageDigest)>(r5, r7);

     label1:
        r0 = newarray (byte)[8192];

     label2:
        i0 = virtualinvoke $r1.<java.security.DigestInputStream: int read(byte[])>(r0);

     label3:
        if i0 == -1 goto label4;

        goto label2;

     label4:
        virtualinvoke $r1.<java.security.DigestInputStream: void close()>();

        $r2 = virtualinvoke r7.<java.security.MessageDigest: byte[] digest()>();

        return $r2;

     label5:
        $r3 := @caughtexception;

     label6:
        virtualinvoke $r1.<java.security.DigestInputStream: void close()>();

     label7:
        goto label9;

     label8:
        $r4 := @caughtexception;

        virtualinvoke $r3.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r4);

     label9:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label2 to label3 with label5;
        catch java.lang.Throwable from label6 to label7 with label8;
    }

    public static int getUid(java.lang.String)
    {
        int i0;
        android.system.StructStat $r0;
        java.lang.Throwable $r1;
        java.lang.String r2;

        r2 := @parameter0: java.lang.String;

     label1:
        $r0 = staticinvoke <android.system.Os: android.system.StructStat stat(java.lang.String)>(r2);

        i0 = $r0.<android.system.StructStat: int st_uid>;

     label2:
        return i0;

     label3:
        $r1 := @caughtexception;

        return -1;

        catch android.system.ErrnoException from label1 to label2 with label3;
    }

    public static boolean isFilenameSafe(java.io.File)
    {
        java.io.File r0;
        java.util.regex.Pattern $r1;
        java.lang.String $r2;
        java.util.regex.Matcher $r3;
        boolean $z0;

        r0 := @parameter0: java.io.File;

        $r1 = <android.os.FileUtils$NoImagePreloadHolder: java.util.regex.Pattern SAFE_FILENAME_PATTERN>;

        $r2 = virtualinvoke r0.<java.io.File: java.lang.String getPath()>();

        $r3 = virtualinvoke $r1.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r2);

        $z0 = virtualinvoke $r3.<java.util.regex.Matcher: boolean matches()>();

        return $z0;
    }

    public static boolean isValidExtFilename(java.lang.String)
    {
        java.lang.String r0, $r1;
        boolean $z0, z1;

        r0 := @parameter0: java.lang.String;

        if r0 == null goto label1;

        $r1 = staticinvoke <android.os.FileUtils: java.lang.String buildValidExtFilename(java.lang.String)>(r0);

        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    private static boolean isValidExtFilenameChar(char)
    {
        char c0;

        c0 := @parameter0: char;

        if c0 == 0 goto label1;

        if c0 == 47 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static boolean isValidFatFilename(java.lang.String)
    {
        java.lang.String r0, $r1;
        boolean $z0, z1;

        r0 := @parameter0: java.lang.String;

        if r0 == null goto label1;

        $r1 = staticinvoke <android.os.FileUtils: java.lang.String buildValidFatFilename(java.lang.String)>(r0);

        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    private static boolean isValidFatFilenameChar(char)
    {
        char c0;

        c0 := @parameter0: char;

        if c0 < 0 goto label1;

        if c0 > 31 goto label1;

        return 0;

     label1:
        if c0 == 34 goto label2;

        if c0 == 42 goto label2;

        if c0 == 47 goto label2;

        if c0 == 58 goto label2;

        if c0 == 60 goto label2;

        if c0 == 92 goto label2;

        if c0 == 124 goto label2;

        if c0 == 127 goto label2;

        if c0 == 62 goto label2;

        if c0 == 63 goto label2;

        return 1;

     label2:
        return 0;
    }

    static void lambda$copyInternalSendfile$2(android.os.FileUtils$ProgressListener, long)
    {
        android.os.FileUtils$ProgressListener r0;
        long l0;

        r0 := @parameter0: android.os.FileUtils$ProgressListener;

        l0 := @parameter1: long;

        interfaceinvoke r0.<android.os.FileUtils$ProgressListener: void onProgress(long)>(l0);

        return;
    }

    static void lambda$copyInternalSendfile$3(android.os.FileUtils$ProgressListener, long)
    {
        android.os.FileUtils$ProgressListener r0;
        long l0;

        r0 := @parameter0: android.os.FileUtils$ProgressListener;

        l0 := @parameter1: long;

        interfaceinvoke r0.<android.os.FileUtils$ProgressListener: void onProgress(long)>(l0);

        return;
    }

    static void lambda$copyInternalSplice$0(android.os.FileUtils$ProgressListener, long)
    {
        android.os.FileUtils$ProgressListener r0;
        long l0;

        r0 := @parameter0: android.os.FileUtils$ProgressListener;

        l0 := @parameter1: long;

        interfaceinvoke r0.<android.os.FileUtils$ProgressListener: void onProgress(long)>(l0);

        return;
    }

    static void lambda$copyInternalSplice$1(android.os.FileUtils$ProgressListener, long)
    {
        android.os.FileUtils$ProgressListener r0;
        long l0;

        r0 := @parameter0: android.os.FileUtils$ProgressListener;

        l0 := @parameter1: long;

        interfaceinvoke r0.<android.os.FileUtils$ProgressListener: void onProgress(long)>(l0);

        return;
    }

    static void lambda$copyInternalUserspace$4(android.os.FileUtils$ProgressListener, long)
    {
        android.os.FileUtils$ProgressListener r0;
        long l0;

        r0 := @parameter0: android.os.FileUtils$ProgressListener;

        l0 := @parameter1: long;

        interfaceinvoke r0.<android.os.FileUtils$ProgressListener: void onProgress(long)>(l0);

        return;
    }

    static void lambda$copyInternalUserspace$5(android.os.FileUtils$ProgressListener, long)
    {
        android.os.FileUtils$ProgressListener r0;
        long l0;

        r0 := @parameter0: android.os.FileUtils$ProgressListener;

        l0 := @parameter1: long;

        interfaceinvoke r0.<android.os.FileUtils$ProgressListener: void onProgress(long)>(l0);

        return;
    }

    public static java.io.File[] listFilesOrEmpty(java.io.File)
    {
        java.io.File[] $r0, r2;
        java.io.File r1;

        r1 := @parameter0: java.io.File;

        if r1 == null goto label1;

        $r0 = virtualinvoke r1.<java.io.File: java.io.File[] listFiles()>();

        r2 = staticinvoke <com.android.internal.util.ArrayUtils: java.io.File[] defeatNullable(java.io.File[])>($r0);

        goto label2;

     label1:
        r2 = <com.android.internal.util.ArrayUtils: java.io.File[] EMPTY_FILE>;

     label2:
        return r2;
    }

    public static java.io.File[] listFilesOrEmpty(java.io.File, java.io.FilenameFilter)
    {
        java.io.FilenameFilter r0;
        java.io.File[] $r1, r3;
        java.io.File r2;

        r2 := @parameter0: java.io.File;

        r0 := @parameter1: java.io.FilenameFilter;

        if r2 == null goto label1;

        $r1 = virtualinvoke r2.<java.io.File: java.io.File[] listFiles(java.io.FilenameFilter)>(r0);

        r3 = staticinvoke <com.android.internal.util.ArrayUtils: java.io.File[] defeatNullable(java.io.File[])>($r1);

        goto label2;

     label1:
        r3 = <com.android.internal.util.ArrayUtils: java.io.File[] EMPTY_FILE>;

     label2:
        return r3;
    }

    public static java.lang.String[] listOrEmpty(java.io.File)
    {
        java.lang.String[] $r0, r2;
        java.io.File r1;

        r1 := @parameter0: java.io.File;

        if r1 == null goto label1;

        $r0 = virtualinvoke r1.<java.io.File: java.lang.String[] list()>();

        r2 = staticinvoke <com.android.internal.util.ArrayUtils: java.lang.String[] defeatNullable(java.lang.String[])>($r0);

        goto label2;

     label1:
        r2 = <libcore.util.EmptyArray: java.lang.String[] STRING>;

     label2:
        return r2;
    }

    public static java.io.File newFileOrNull(java.lang.String)
    {
        java.io.File $r0, r2;
        java.lang.String r1;

        r1 := @parameter0: java.lang.String;

        if r1 == null goto label1;

        $r0 = new java.io.File;

        specialinvoke $r0.<java.io.File: void <init>(java.lang.String)>(r1);

        r2 = $r0;

        goto label2;

     label1:
        r2 = null;

     label2:
        return r2;
    }

    public static java.lang.String readTextFile(java.io.File, int, java.lang.String) throws java.io.IOException
    {
        long l0, $l4;
        byte[] r2, r16, r17, r18, r25, r27;
        int i1, i2, $i7, $i8, $i9, $i10, $i11, i12, i13, i14, i15, $i16, i17;
        java.io.FileInputStream $r3;
        java.io.BufferedInputStream $r4;
        byte $b3, $b5, $b6;
        java.lang.String $r7, $r8, $r9, $r12, r15, r21, r22, r26, r31, r32;
        java.lang.Throwable $r13;
        java.io.File r14;
        boolean z0, z1;
        java.lang.StringBuilder r20, r30;
        java.io.ByteArrayOutputStream r24;

        r14 := @parameter0: java.io.File;

        i12 := @parameter1: int;

        r15 := @parameter2: java.lang.String;

        $r3 = new java.io.FileInputStream;

        specialinvoke $r3.<java.io.FileInputStream: void <init>(java.io.File)>(r14);

        $r4 = new java.io.BufferedInputStream;

        specialinvoke $r4.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r3);

     label01:
        l0 = virtualinvoke r14.<java.io.File: long length()>();

     label02:
        if i12 > 0 goto label25;

        $b6 = l0 cmp 0L;

        if $b6 <= 0 goto label03;

        if i12 != 0 goto label03;

        goto label25;

     label03:
        if i12 >= 0 goto label19;

        z0 = 0;

        r16 = null;

        r17 = null;

     label04:
        z1 = z0;

        if r16 == null goto label05;

        z1 = 1;

     label05:
        r2 = r17;

        r18 = r16;

        if r16 != null goto label07;

        i13 = neg i12;

     label06:
        r18 = newarray (byte)[i13];

     label07:
        i1 = virtualinvoke $r4.<java.io.BufferedInputStream: int read(byte[])>(r18);

        i2 = lengthof r18;

     label08:
        z0 = z1;

        r16 = r2;

        r17 = r18;

        if i1 == i2 goto label04;

        if r2 != null goto label09;

        if i1 > 0 goto label09;

        virtualinvoke $r4.<java.io.BufferedInputStream: void close()>();

        virtualinvoke $r3.<java.io.InputStream: void close()>();

        return "";

     label09:
        if r2 != null goto label12;

     label10:
        $r12 = new java.lang.String;

        specialinvoke $r12.<java.lang.String: void <init>(byte[],int,int)>(r18, 0, i1);

     label11:
        virtualinvoke $r4.<java.io.BufferedInputStream: void close()>();

        virtualinvoke $r3.<java.io.InputStream: void close()>();

        return $r12;

     label12:
        if i1 <= 0 goto label14;

        z1 = 1;

     label13:
        $i8 = lengthof r2;

        $i9 = $i8 - i1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, i1, r2, 0, $i9);

        $i10 = lengthof r2;

        $i11 = $i10 - i1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r18, 0, r2, $i11, i1);

     label14:
        if r15 == null goto label17;

        if z1 != 0 goto label15;

        goto label17;

     label15:
        r20 = new java.lang.StringBuilder;

        specialinvoke r20.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r15);

        r21 = new java.lang.String;

        specialinvoke r21.<java.lang.String: void <init>(byte[])>(r2);

        virtualinvoke r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r21);

        r22 = virtualinvoke r20.<java.lang.StringBuilder: java.lang.String toString()>();

     label16:
        virtualinvoke $r4.<java.io.BufferedInputStream: void close()>();

        virtualinvoke $r3.<java.io.InputStream: void close()>();

        return r22;

     label17:
        $r9 = new java.lang.String;

        specialinvoke $r9.<java.lang.String: void <init>(byte[])>(r2);

     label18:
        virtualinvoke $r4.<java.io.BufferedInputStream: void close()>();

        virtualinvoke $r3.<java.io.InputStream: void close()>();

        return $r9;

     label19:
        r24 = new java.io.ByteArrayOutputStream;

        specialinvoke r24.<java.io.ByteArrayOutputStream: void <init>()>();

        r25 = newarray (byte)[1024];

     label20:
        i14 = virtualinvoke $r4.<java.io.BufferedInputStream: int read(byte[])>(r25);

     label21:
        if i14 <= 0 goto label23;

     label22:
        virtualinvoke r24.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>(r25, 0, i14);

     label23:
        $i7 = lengthof r25;

        if i14 == $i7 goto label20;

        r26 = virtualinvoke r24.<java.io.ByteArrayOutputStream: java.lang.String toString()>();

     label24:
        virtualinvoke $r4.<java.io.BufferedInputStream: void close()>();

        virtualinvoke $r3.<java.io.InputStream: void close()>();

        return r26;

     label25:
        i15 = i12;

        $b3 = l0 cmp 0L;

        if $b3 <= 0 goto label27;

        if i12 == 0 goto label26;

        i15 = i12;

        $l4 = (long) i12;

        $b5 = l0 cmp $l4;

        if $b5 >= 0 goto label27;

     label26:
        i15 = (int) l0;

     label27:
        $i16 = i15 + 1;

        r27 = newarray (byte)[$i16];

        i17 = virtualinvoke $r4.<java.io.BufferedInputStream: int read(byte[])>(r27);

     label28:
        if i17 > 0 goto label29;

        virtualinvoke $r4.<java.io.BufferedInputStream: void close()>();

        virtualinvoke $r3.<java.io.InputStream: void close()>();

        return "";

     label29:
        if i17 > i15 goto label32;

     label30:
        $r8 = new java.lang.String;

        specialinvoke $r8.<java.lang.String: void <init>(byte[],int,int)>(r27, 0, i17);

     label31:
        virtualinvoke $r4.<java.io.BufferedInputStream: void close()>();

        virtualinvoke $r3.<java.io.InputStream: void close()>();

        return $r8;

     label32:
        if r15 != null goto label35;

     label33:
        $r7 = new java.lang.String;

        specialinvoke $r7.<java.lang.String: void <init>(byte[],int,int)>(r27, 0, i15);

     label34:
        virtualinvoke $r4.<java.io.BufferedInputStream: void close()>();

        virtualinvoke $r3.<java.io.InputStream: void close()>();

        return $r7;

     label35:
        r30 = new java.lang.StringBuilder;

        specialinvoke r30.<java.lang.StringBuilder: void <init>()>();

        r31 = new java.lang.String;

        specialinvoke r31.<java.lang.String: void <init>(byte[],int,int)>(r27, 0, i15);

        virtualinvoke r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r31);

        virtualinvoke r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r15);

        r32 = virtualinvoke r30.<java.lang.StringBuilder: java.lang.String toString()>();

     label36:
        virtualinvoke $r4.<java.io.BufferedInputStream: void close()>();

        virtualinvoke $r3.<java.io.InputStream: void close()>();

        return r32;

     label37:
        $r13 := @caughtexception;

        virtualinvoke $r4.<java.io.BufferedInputStream: void close()>();

        virtualinvoke $r3.<java.io.InputStream: void close()>();

        throw $r13;

        catch java.lang.Throwable from label01 to label02 with label37;
        catch java.lang.Throwable from label06 to label07 with label37;
        catch java.lang.Throwable from label07 to label08 with label37;
        catch java.lang.Throwable from label10 to label11 with label37;
        catch java.lang.Throwable from label13 to label14 with label37;
        catch java.lang.Throwable from label15 to label16 with label37;
        catch java.lang.Throwable from label17 to label18 with label37;
        catch java.lang.Throwable from label19 to label20 with label37;
        catch java.lang.Throwable from label20 to label21 with label37;
        catch java.lang.Throwable from label22 to label23 with label37;
        catch java.lang.Throwable from label23 to label24 with label37;
        catch java.lang.Throwable from label27 to label28 with label37;
        catch java.lang.Throwable from label30 to label31 with label37;
        catch java.lang.Throwable from label33 to label34 with label37;
        catch java.lang.Throwable from label35 to label36 with label37;
    }

    public static java.io.File rewriteAfterRename(java.io.File, java.io.File, java.io.File)
    {
        java.io.File r0, r1, r2, $r3;
        boolean $z0;
        java.lang.String $r4, $r5, $r6;
        int $i0;

        r0 := @parameter0: java.io.File;

        r1 := @parameter1: java.io.File;

        r2 := @parameter2: java.io.File;

        if r2 == null goto label3;

        if r0 == null goto label3;

        if r1 != null goto label1;

        goto label3;

     label1:
        $z0 = staticinvoke <android.os.FileUtils: boolean contains(java.io.File,java.io.File)>(r0, r2);

        if $z0 == 0 goto label2;

        $r3 = new java.io.File;

        $r4 = virtualinvoke r2.<java.io.File: java.lang.String getAbsolutePath()>();

        $r5 = virtualinvoke r0.<java.io.File: java.lang.String getAbsolutePath()>();

        $i0 = virtualinvoke $r5.<java.lang.String: int length()>();

        $r6 = virtualinvoke $r4.<java.lang.String: java.lang.String substring(int)>($i0);

        specialinvoke $r3.<java.io.File: void <init>(java.io.File,java.lang.String)>(r1, $r6);

        return $r3;

     label2:
        return null;

     label3:
        return null;
    }

    public static java.lang.String rewriteAfterRename(java.io.File, java.io.File, java.lang.String)
    {
        java.lang.String r0, r5;
        java.io.File $r1, r2, r3, r4;

        r2 := @parameter0: java.io.File;

        r3 := @parameter1: java.io.File;

        r0 := @parameter2: java.lang.String;

        if r0 != null goto label1;

        return null;

     label1:
        $r1 = new java.io.File;

        specialinvoke $r1.<java.io.File: void <init>(java.lang.String)>(r0);

        r4 = staticinvoke <android.os.FileUtils: java.io.File rewriteAfterRename(java.io.File,java.io.File,java.io.File)>(r2, r3, $r1);

        r5 = null;

        if r4 == null goto label2;

        r5 = virtualinvoke r4.<java.io.File: java.lang.String getAbsolutePath()>();

     label2:
        return r5;
    }

    public static java.lang.String[] rewriteAfterRename(java.io.File, java.io.File, java.lang.String[])
    {
        java.io.File r0, r1;
        java.lang.String[] r2, r3;
        int $i0, $i1, i2;
        java.lang.String $r4, $r5;

        r0 := @parameter0: java.io.File;

        r1 := @parameter1: java.io.File;

        r2 := @parameter2: java.lang.String[];

        if r2 != null goto label1;

        return null;

     label1:
        $i0 = lengthof r2;

        r3 = newarray (java.lang.String)[$i0];

        i2 = 0;

     label2:
        $i1 = lengthof r2;

        if i2 >= $i1 goto label3;

        $r4 = r2[i2];

        $r5 = staticinvoke <android.os.FileUtils: java.lang.String rewriteAfterRename(java.io.File,java.io.File,java.lang.String)>(r0, r1, $r4);

        r3[i2] = $r5;

        i2 = i2 + 1;

        goto label2;

     label3:
        return r3;
    }

    public static long roundStorageSize(long)
    {
        long l0, l1, $l2, l4, l5, $l6;
        byte $b3, $b7;

        l0 := @parameter0: long;

        l4 = 1L;

        l5 = 1L;

     label1:
        $l6 = l4 * l5;

        $b7 = $l6 cmp l0;

        if $b7 >= 0 goto label2;

        l1 = l4 << 1;

        l4 = l1;

        $b3 = l1 cmp 512L;

        if $b3 <= 0 goto label1;

        l4 = 1L;

        l5 = l5 * 1000L;

        goto label1;

     label2:
        $l2 = l4 * l5;

        return $l2;
    }

    public static int setPermissions(java.io.File, int, int, int)
    {
        java.io.File r0;
        int i0, i1, i2, $i3;
        java.lang.String $r1;

        r0 := @parameter0: java.io.File;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        $r1 = virtualinvoke r0.<java.io.File: java.lang.String getAbsolutePath()>();

        $i3 = staticinvoke <android.os.FileUtils: int setPermissions(java.lang.String,int,int,int)>($r1, i0, i1, i2);

        return $i3;
    }

    public static int setPermissions(java.io.FileDescriptor, int, int, int)
    {
        int i0, i1, i2, $i4, $i6;
        java.lang.Throwable $r0, $r5;
        java.lang.String $r4, $r9;
        java.io.FileDescriptor r10;
        java.lang.StringBuilder r15, r16;
        android.system.ErrnoException r17, r18;

        r10 := @parameter0: java.io.FileDescriptor;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

     label1:
        staticinvoke <android.system.Os: void fchmod(java.io.FileDescriptor,int)>(r10, i0);

     label2:
        if i1 >= 0 goto label3;

        if i2 < 0 goto label4;

     label3:
        staticinvoke <android.system.Os: void fchown(java.io.FileDescriptor,int,int)>(r10, i1, i2);

     label4:
        return 0;

     label5:
        $r5 := @caughtexception;

        r15 = new java.lang.StringBuilder;

        specialinvoke r15.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to fchown(): ");

        virtualinvoke r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r9 = virtualinvoke r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("FileUtils", $r9);

        r17 = (android.system.ErrnoException) $r5;

        $i6 = r17.<android.system.ErrnoException: int errno>;

        return $i6;

     label6:
        $r0 := @caughtexception;

        r16 = new java.lang.StringBuilder;

        specialinvoke r16.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to fchmod(): ");

        virtualinvoke r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r0);

        $r4 = virtualinvoke r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("FileUtils", $r4);

        r18 = (android.system.ErrnoException) $r0;

        $i4 = r18.<android.system.ErrnoException: int errno>;

        return $i4;

        catch android.system.ErrnoException from label1 to label2 with label6;
        catch android.system.ErrnoException from label3 to label4 with label5;
    }

    public static int setPermissions(java.lang.String, int, int, int)
    {
        java.lang.String r0, $r7, $r14;
        int i0, i1, i2, $i4, $i6;
        java.lang.Throwable $r1, $r8;
        java.lang.StringBuilder r19, r20;
        android.system.ErrnoException r21, r22;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

     label1:
        staticinvoke <android.system.Os: void chmod(java.lang.String,int)>(r0, i0);

     label2:
        if i1 >= 0 goto label3;

        if i2 < 0 goto label4;

     label3:
        staticinvoke <android.system.Os: void chown(java.lang.String,int,int)>(r0, i1, i2);

     label4:
        return 0;

     label5:
        $r1 := @caughtexception;

        r19 = new java.lang.StringBuilder;

        specialinvoke r19.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to chown(");

        virtualinvoke r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        virtualinvoke r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("): ");

        virtualinvoke r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r7 = virtualinvoke r19.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("FileUtils", $r7);

        r21 = (android.system.ErrnoException) $r1;

        $i4 = r21.<android.system.ErrnoException: int errno>;

        return $i4;

     label6:
        $r8 := @caughtexception;

        r20 = new java.lang.StringBuilder;

        specialinvoke r20.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to chmod(");

        virtualinvoke r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        virtualinvoke r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("): ");

        virtualinvoke r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r14 = virtualinvoke r20.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("FileUtils", $r14);

        r22 = (android.system.ErrnoException) $r8;

        $i6 = r22.<android.system.ErrnoException: int errno>;

        return $i6;

        catch android.system.ErrnoException from label1 to label2 with label6;
        catch android.system.ErrnoException from label3 to label4 with label5;
    }

    public static java.lang.String[] splitFileName(java.lang.String, java.lang.String)
    {
        int i0, $i1;
        java.lang.String $r0, $r1, $r5, r6, r7, r8, r9, r10, r11, r12, r13, r14;
        boolean $z0, $z1, $z2, $z3;
        android.webkit.MimeTypeMap $r2, $r4;
        java.lang.String[] $r3;

        r6 := @parameter0: java.lang.String;

        r7 := @parameter1: java.lang.String;

        $r0 = "vnd.android.document/directory";

        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>(r6);

        if $z0 == 0 goto label01;

        r8 = null;

        goto label09;

     label01:
        i0 = virtualinvoke r7.<java.lang.String: int lastIndexOf(int)>(46);

        if i0 < 0 goto label02;

        r9 = virtualinvoke r7.<java.lang.String: java.lang.String substring(int,int)>(0, i0);

        $i1 = i0 + 1;

        r10 = virtualinvoke r7.<java.lang.String: java.lang.String substring(int)>($i1);

        $r4 = staticinvoke <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap getSingleton()>();

        $r5 = virtualinvoke r10.<java.lang.String: java.lang.String toLowerCase()>();

        r11 = virtualinvoke $r4.<android.webkit.MimeTypeMap: java.lang.String getMimeTypeFromExtension(java.lang.String)>($r5);

        goto label03;

     label02:
        r9 = r7;

        r10 = null;

        r11 = null;

     label03:
        r12 = r11;

        if r11 != null goto label04;

        r12 = "application/octet-stream";

     label04:
        $r1 = "application/octet-stream";

        $z1 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r6);

        if $z1 == 0 goto label05;

        r13 = null;

        goto label06;

     label05:
        $r2 = staticinvoke <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap getSingleton()>();

        r13 = virtualinvoke $r2.<android.webkit.MimeTypeMap: java.lang.String getExtensionFromMimeType(java.lang.String)>(r6);

     label06:
        $z2 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>(r6, r12);

        if $z2 != 0 goto label08;

        $z3 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>(r10, r13);

        if $z3 == 0 goto label07;

        goto label08;

     label07:
        r8 = r13;

        goto label09;

     label08:
        r7 = r9;

        r8 = r10;

     label09:
        r14 = r8;

        if r8 != null goto label10;

        r14 = "";

     label10:
        $r3 = newarray (java.lang.String)[2];

        $r3[0] = r7;

        $r3[1] = r14;

        return $r3;
    }

    public static void stringToFile(java.io.File, java.lang.String) throws java.io.IOException
    {
        java.io.File r0;
        java.lang.String r1, $r2;

        r0 := @parameter0: java.io.File;

        r1 := @parameter1: java.lang.String;

        $r2 = virtualinvoke r0.<java.io.File: java.lang.String getAbsolutePath()>();

        staticinvoke <android.os.FileUtils: void stringToFile(java.lang.String,java.lang.String)>($r2, r1);

        return;
    }

    public static void stringToFile(java.lang.String, java.lang.String) throws java.io.IOException
    {
        java.lang.String r0, r1;
        java.nio.charset.Charset $r2;
        byte[] $r3;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $r2 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;

        $r3 = virtualinvoke r1.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r2);

        staticinvoke <android.os.FileUtils: void bytesToFile(java.lang.String,byte[])>(r0, $r3);

        return;
    }

    public static boolean sync(java.io.FileOutputStream)
    {
        java.io.FileDescriptor $r0;
        java.lang.Throwable $r1;
        java.io.FileOutputStream r2;

        r2 := @parameter0: java.io.FileOutputStream;

        if r2 == null goto label4;

     label1:
        $r0 = virtualinvoke r2.<java.io.FileOutputStream: java.io.FileDescriptor getFD()>();

        virtualinvoke $r0.<java.io.FileDescriptor: void sync()>();

     label2:
        goto label4;

     label3:
        $r1 := @caughtexception;

        return 0;

     label4:
        return 1;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public static int translateModeAccessToPosix(int)
    {
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18;
        java.lang.StringBuilder $r1;
        java.lang.IllegalArgumentException $r4;
        java.lang.String $r5;

        i0 := @parameter0: int;

        $i1 = <android.system.OsConstants: int F_OK>;

        if i0 != $i1 goto label1;

        $i18 = <android.system.OsConstants: int O_RDONLY>;

        return $i18;

     label1:
        $i3 = <android.system.OsConstants: int R_OK>;

        $i2 = <android.system.OsConstants: int W_OK>;

        $i4 = $i3 | $i2;

        $i8 = $i4 & i0;

        $i6 = <android.system.OsConstants: int R_OK>;

        $i5 = <android.system.OsConstants: int W_OK>;

        $i7 = $i6 | $i5;

        if $i8 != $i7 goto label2;

        $i17 = <android.system.OsConstants: int O_RDWR>;

        return $i17;

     label2:
        $i9 = <android.system.OsConstants: int R_OK>;

        $i11 = $i9 & i0;

        $i10 = <android.system.OsConstants: int R_OK>;

        if $i11 != $i10 goto label3;

        $i16 = <android.system.OsConstants: int O_RDONLY>;

        return $i16;

     label3:
        $i12 = <android.system.OsConstants: int W_OK>;

        $i14 = $i12 & i0;

        $i13 = <android.system.OsConstants: int W_OK>;

        if $i14 != $i13 goto label4;

        $i15 = <android.system.OsConstants: int O_WRONLY>;

        return $i15;

     label4:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad mode: ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r4;
    }

    public static int translateModePfdToPosix(int)
    {
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9, i10, $i11, i12, i13;
        java.lang.StringBuilder $r1;
        java.lang.IllegalArgumentException $r4;
        java.lang.String $r5;

        i0 := @parameter0: int;

        $i1 = i0 & 805306368;

        if $i1 != 805306368 goto label1;

        i9 = <android.system.OsConstants: int O_RDWR>;

        goto label3;

     label1:
        $i2 = i0 & 536870912;

        if $i2 != 536870912 goto label2;

        i9 = <android.system.OsConstants: int O_WRONLY>;

        goto label3;

     label2:
        $i3 = i0 & 268435456;

        if $i3 != 268435456 goto label7;

        i9 = <android.system.OsConstants: int O_RDONLY>;

     label3:
        i10 = i9;

        $i11 = i0 & 134217728;

        if $i11 != 134217728 goto label4;

        $i8 = <android.system.OsConstants: int O_CREAT>;

        i10 = i9 | $i8;

     label4:
        i12 = i10;

        $i4 = i0 & 67108864;

        if $i4 != 67108864 goto label5;

        $i7 = <android.system.OsConstants: int O_TRUNC>;

        i12 = i10 | $i7;

     label5:
        i13 = i12;

        $i5 = i0 & 33554432;

        if $i5 != 33554432 goto label6;

        $i6 = <android.system.OsConstants: int O_APPEND>;

        i13 = i12 | $i6;

     label6:
        return i13;

     label7:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad mode: ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r4;
    }

    public static int translateModePosixToPfd(int)
    {
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, i16, i17, $i18, $i19, $i20, i21, i22;
        java.lang.StringBuilder $r1;
        java.lang.IllegalArgumentException $r4;
        java.lang.String $r5;

        i0 := @parameter0: int;

        $i1 = <android.system.OsConstants: int O_ACCMODE>;

        $i3 = $i1 & i0;

        $i2 = <android.system.OsConstants: int O_RDWR>;

        if $i3 != $i2 goto label1;

        i16 = 805306368;

        goto label3;

     label1:
        $i4 = <android.system.OsConstants: int O_ACCMODE>;

        $i6 = $i4 & i0;

        $i5 = <android.system.OsConstants: int O_WRONLY>;

        if $i6 != $i5 goto label2;

        i16 = 536870912;

        goto label3;

     label2:
        $i7 = <android.system.OsConstants: int O_ACCMODE>;

        $i9 = $i7 & i0;

        $i8 = <android.system.OsConstants: int O_RDONLY>;

        if $i9 != $i8 goto label7;

        i16 = 268435456;

     label3:
        i17 = i16;

        $i18 = <android.system.OsConstants: int O_CREAT>;

        $i19 = $i18 & i0;

        $i20 = <android.system.OsConstants: int O_CREAT>;

        if $i19 != $i20 goto label4;

        i17 = i16 | 134217728;

     label4:
        i21 = i17;

        $i10 = <android.system.OsConstants: int O_TRUNC>;

        $i12 = $i10 & i0;

        $i11 = <android.system.OsConstants: int O_TRUNC>;

        if $i12 != $i11 goto label5;

        i21 = i17 | 67108864;

     label5:
        i22 = i21;

        $i13 = <android.system.OsConstants: int O_APPEND>;

        $i15 = $i13 & i0;

        $i14 = <android.system.OsConstants: int O_APPEND>;

        if $i15 != $i14 goto label6;

        i22 = i21 | 33554432;

     label6:
        return i22;

     label7:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad mode: ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r4;
    }

    public static java.lang.String translateModePosixToString(int)
    {
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15;
        java.lang.StringBuilder $r0, $r5, $r8;
        java.lang.IllegalArgumentException $r3;
        java.lang.String $r4, r11, r12, r14;

        i0 := @parameter0: int;

        $i1 = <android.system.OsConstants: int O_ACCMODE>;

        $i3 = $i1 & i0;

        $i2 = <android.system.OsConstants: int O_RDWR>;

        if $i3 != $i2 goto label1;

        r11 = "rw";

        goto label3;

     label1:
        $i4 = <android.system.OsConstants: int O_ACCMODE>;

        $i6 = $i4 & i0;

        $i5 = <android.system.OsConstants: int O_WRONLY>;

        if $i6 != $i5 goto label2;

        r11 = "w";

        goto label3;

     label2:
        $i7 = <android.system.OsConstants: int O_ACCMODE>;

        $i9 = $i7 & i0;

        $i8 = <android.system.OsConstants: int O_RDONLY>;

        if $i9 != $i8 goto label6;

        r11 = "r";

     label3:
        r12 = r11;

        $i13 = <android.system.OsConstants: int O_TRUNC>;

        $i14 = $i13 & i0;

        $i15 = <android.system.OsConstants: int O_TRUNC>;

        if $i14 != $i15 goto label4;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r11);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("t");

        r12 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

     label4:
        r14 = r12;

        $i10 = <android.system.OsConstants: int O_APPEND>;

        $i12 = $i10 & i0;

        $i11 = <android.system.OsConstants: int O_APPEND>;

        if $i12 != $i11 goto label5;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r12);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("a");

        r14 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

     label5:
        return r14;

     label6:
        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad mode: ");

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r3 = new java.lang.IllegalArgumentException;

        $r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r4);

        throw $r3;
    }

    public static int translateModeStringToPosix(java.lang.String)
    {
        java.lang.String r0, $r5, $r10;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, i10, i11, $i12, i13;
        boolean $z0, $z1, $z2;
        java.lang.StringBuilder $r1, $r6;
        java.lang.IllegalArgumentException $r4, $r9;
        char c9;

        r0 := @parameter0: java.lang.String;

        i8 = 0;

     label01:
        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if i8 >= $i0 goto label04;

        c9 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i8);

        if c9 == 97 goto label03;

        if c9 == 114 goto label03;

        if c9 == 116 goto label03;

        if c9 != 119 goto label02;

        goto label03;

     label02:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad mode: ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r9 = new java.lang.IllegalArgumentException;

        $r10 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r10);

        throw $r9;

     label03:
        i8 = i8 + 1;

        goto label01;

     label04:
        $z0 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>("rw");

        if $z0 == 0 goto label05;

        $i7 = <android.system.OsConstants: int O_RDWR>;

        $i6 = <android.system.OsConstants: int O_CREAT>;

        i10 = $i7 | $i6;

        goto label07;

     label05:
        $z1 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>("w");

        if $z1 == 0 goto label06;

        $i5 = <android.system.OsConstants: int O_WRONLY>;

        $i4 = <android.system.OsConstants: int O_CREAT>;

        i10 = $i5 | $i4;

        goto label07;

     label06:
        $z2 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>("r");

        if $z2 == 0 goto label10;

        i10 = <android.system.OsConstants: int O_RDONLY>;

     label07:
        i11 = i10;

        $i12 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(116);

        if $i12 == -1 goto label08;

        $i3 = <android.system.OsConstants: int O_TRUNC>;

        i11 = i10 | $i3;

     label08:
        i13 = i11;

        $i1 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(97);

        if $i1 == -1 goto label09;

        $i2 = <android.system.OsConstants: int O_APPEND>;

        i13 = i11 | $i2;

     label09:
        return i13;

     label10:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad mode: ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r4;
    }

    public static java.lang.String trimFilename(java.lang.String, int)
    {
        int i0;
        java.lang.StringBuilder $r0;
        java.lang.String $r1, r2;

        r2 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>(r2);

        staticinvoke <android.os.FileUtils: void trimFilename(java.lang.StringBuilder,int)>($r0, i0);

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;
    }

    private static void trimFilename(java.lang.StringBuilder, int)
    {
        java.lang.StringBuilder r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        java.lang.String $r1, $r5;
        java.nio.charset.Charset $r2, $r6;
        byte[] r7;

        r0 := @parameter0: java.lang.StringBuilder;

        i0 := @parameter1: int;

        $r1 = virtualinvoke r0.<java.lang.StringBuilder: java.lang.String toString()>();

        $r2 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;

        r7 = virtualinvoke $r1.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r2);

        $i1 = lengthof r7;

        if $i1 <= i0 goto label3;

     label1:
        $i3 = lengthof r7;

        $i2 = i0 - 3;

        if $i3 <= $i2 goto label2;

        $i6 = virtualinvoke r0.<java.lang.StringBuilder: int length()>();

        $i7 = $i6 / 2;

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder deleteCharAt(int)>($i7);

        $r5 = virtualinvoke r0.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;

        r7 = virtualinvoke $r5.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r6);

        goto label1;

     label2:
        $i4 = virtualinvoke r0.<java.lang.StringBuilder: int length()>();

        $i5 = $i4 / 2;

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder insert(int,java.lang.String)>($i5, "...");

     label3:
        return;
    }
}
