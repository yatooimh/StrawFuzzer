public class android.os.HardwarePropertiesManager extends java.lang.Object
{
    public static final int DEVICE_TEMPERATURE_BATTERY;
    public static final int DEVICE_TEMPERATURE_CPU;
    public static final int DEVICE_TEMPERATURE_GPU;
    public static final int DEVICE_TEMPERATURE_SKIN;
    private static final java.lang.String TAG;
    public static final int TEMPERATURE_CURRENT;
    public static final int TEMPERATURE_SHUTDOWN;
    public static final int TEMPERATURE_THROTTLING;
    public static final int TEMPERATURE_THROTTLING_BELOW_VR_MIN;
    public static final float UNDEFINED_TEMPERATURE;
    private final android.content.Context mContext;
    private final android.os.IHardwarePropertiesManager mService;

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;

        <android.os.HardwarePropertiesManager: float UNDEFINED_TEMPERATURE> = -3.4028235E38F;

        <android.os.HardwarePropertiesManager: int TEMPERATURE_THROTTLING_BELOW_VR_MIN> = 3;

        <android.os.HardwarePropertiesManager: int TEMPERATURE_THROTTLING> = 1;

        <android.os.HardwarePropertiesManager: int TEMPERATURE_SHUTDOWN> = 2;

        <android.os.HardwarePropertiesManager: int TEMPERATURE_CURRENT> = 0;

        <android.os.HardwarePropertiesManager: int DEVICE_TEMPERATURE_SKIN> = 3;

        <android.os.HardwarePropertiesManager: int DEVICE_TEMPERATURE_GPU> = 1;

        <android.os.HardwarePropertiesManager: int DEVICE_TEMPERATURE_CPU> = 0;

        <android.os.HardwarePropertiesManager: int DEVICE_TEMPERATURE_BATTERY> = 2;

        $r0 = class "Landroid/os/HardwarePropertiesManager;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getSimpleName()>();

        <android.os.HardwarePropertiesManager: java.lang.String TAG> = $r1;

        return;
    }

    public void <init>(android.content.Context, android.os.IHardwarePropertiesManager)
    {
        android.os.HardwarePropertiesManager r0;
        android.content.Context r1;
        android.os.IHardwarePropertiesManager r2;

        r0 := @this: android.os.HardwarePropertiesManager;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.os.IHardwarePropertiesManager;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.os.HardwarePropertiesManager: android.content.Context mContext> = r1;

        r0.<android.os.HardwarePropertiesManager: android.os.IHardwarePropertiesManager mService> = r2;

        return;
    }

    public android.os.CpuUsageInfo[] getCpuUsages()
    {
        android.os.HardwarePropertiesManager r0;
        android.content.Context $r1;
        android.os.IHardwarePropertiesManager $r2;
        java.lang.String $r3;
        android.os.RemoteException $r4;
        java.lang.RuntimeException $r5;
        android.os.CpuUsageInfo[] r6;

        r0 := @this: android.os.HardwarePropertiesManager;

     label1:
        $r2 = r0.<android.os.HardwarePropertiesManager: android.os.IHardwarePropertiesManager mService>;

        $r1 = r0.<android.os.HardwarePropertiesManager: android.content.Context mContext>;

        $r3 = virtualinvoke $r1.<android.content.Context: java.lang.String getOpPackageName()>();

        r6 = interfaceinvoke $r2.<android.os.IHardwarePropertiesManager: android.os.CpuUsageInfo[] getCpuUsages(java.lang.String)>($r3);

     label2:
        return r6;

     label3:
        $r4 := @caughtexception;

        $r5 = virtualinvoke $r4.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r5;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public float[] getDeviceTemperatures(int, int)
    {
        android.os.HardwarePropertiesManager r0;
        int i0, i1;
        java.lang.String $r1, $r3, $r9;
        float[] $r2, $r4, r10;
        android.os.RemoteException $r5;
        java.lang.RuntimeException $r6;
        android.os.IHardwarePropertiesManager $r7;
        android.content.Context $r8;

        r0 := @this: android.os.HardwarePropertiesManager;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i0 == 0 goto label1;

        if i0 == 1 goto label1;

        if i0 == 2 goto label1;

        if i0 == 3 goto label1;

        $r3 = <android.os.HardwarePropertiesManager: java.lang.String TAG>;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r3, "Unknown device temperature type.");

        $r4 = newarray (float)[0];

        return $r4;

     label1:
        if i1 == 0 goto label2;

        if i1 == 1 goto label2;

        if i1 == 2 goto label2;

        if i1 == 3 goto label2;

        $r1 = <android.os.HardwarePropertiesManager: java.lang.String TAG>;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r1, "Unknown device temperature source.");

        $r2 = newarray (float)[0];

        return $r2;

     label2:
        $r7 = r0.<android.os.HardwarePropertiesManager: android.os.IHardwarePropertiesManager mService>;

        $r8 = r0.<android.os.HardwarePropertiesManager: android.content.Context mContext>;

        $r9 = virtualinvoke $r8.<android.content.Context: java.lang.String getOpPackageName()>();

        r10 = interfaceinvoke $r7.<android.os.IHardwarePropertiesManager: float[] getDeviceTemperatures(java.lang.String,int,int)>($r9, i0, i1);

     label3:
        return r10;

     label4:
        $r5 := @caughtexception;

        $r6 = virtualinvoke $r5.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r6;

        catch android.os.RemoteException from label2 to label3 with label4;
    }

    public float[] getFanSpeeds()
    {
        android.os.HardwarePropertiesManager r0;
        android.content.Context $r1;
        android.os.IHardwarePropertiesManager $r2;
        java.lang.String $r3;
        android.os.RemoteException $r4;
        java.lang.RuntimeException $r5;
        float[] r6;

        r0 := @this: android.os.HardwarePropertiesManager;

     label1:
        $r2 = r0.<android.os.HardwarePropertiesManager: android.os.IHardwarePropertiesManager mService>;

        $r1 = r0.<android.os.HardwarePropertiesManager: android.content.Context mContext>;

        $r3 = virtualinvoke $r1.<android.content.Context: java.lang.String getOpPackageName()>();

        r6 = interfaceinvoke $r2.<android.os.IHardwarePropertiesManager: float[] getFanSpeeds(java.lang.String)>($r3);

     label2:
        return r6;

     label3:
        $r4 := @caughtexception;

        $r5 = virtualinvoke $r4.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r5;

        catch android.os.RemoteException from label1 to label2 with label3;
    }
}
