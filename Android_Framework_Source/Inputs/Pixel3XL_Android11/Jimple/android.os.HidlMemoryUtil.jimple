public final class android.os.HidlMemoryUtil extends java.lang.Object
{
    private static final java.lang.String TAG;

    private void <init>()
    {
        android.os.HidlMemoryUtil r0;

        r0 := @this: android.os.HidlMemoryUtil;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static android.os.HidlMemory byteArrayToHidlMemory(byte[])
    {
        byte[] r0;
        android.os.HidlMemory $r1;

        r0 := @parameter0: byte[];

        $r1 = staticinvoke <android.os.HidlMemoryUtil: android.os.HidlMemory byteArrayToHidlMemory(byte[],java.lang.String)>(r0, null);

        return $r1;
    }

    public static android.os.HidlMemory byteArrayToHidlMemory(byte[], java.lang.String)
    {
        java.nio.ByteBuffer r0;
        int $i0, $i1;
        android.os.HidlMemory $r3, r9;
        java.lang.Throwable $r4;
        java.lang.RuntimeException $r5;
        byte[] r6;
        java.lang.String r7;
        android.os.SharedMemory r8;

        r6 := @parameter0: byte[];

        r7 := @parameter1: java.lang.String;

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r6);

        $i0 = lengthof r6;

        if $i0 != 0 goto label1;

        $r3 = new android.os.HidlMemory;

        specialinvoke $r3.<android.os.HidlMemory: void <init>(java.lang.String,long,android.os.NativeHandle)>("ashmem", 0L, null);

        return $r3;

     label1:
        if r7 == null goto label2;

        goto label3;

     label2:
        r7 = "";

     label3:
        $i1 = lengthof r6;

        r8 = staticinvoke <android.os.SharedMemory: android.os.SharedMemory create(java.lang.String,int)>(r7, $i1);

        r0 = virtualinvoke r8.<android.os.SharedMemory: java.nio.ByteBuffer mapReadWrite()>();

        virtualinvoke r0.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[])>(r6);

        staticinvoke <android.os.SharedMemory: void unmap(java.nio.ByteBuffer)>(r0);

        r9 = staticinvoke <android.os.HidlMemoryUtil: android.os.HidlMemory sharedMemoryToHidlMemory(android.os.SharedMemory)>(r8);

     label4:
        return r9;

     label5:
        $r4 := @caughtexception;

        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r4);

        throw $r5;

        catch android.system.ErrnoException from label3 to label4 with label5;
    }

    public static android.os.HidlMemory byteListToHidlMemory(java.util.List)
    {
        java.util.List r0;
        android.os.HidlMemory $r1;

        r0 := @parameter0: java.util.List;

        $r1 = staticinvoke <android.os.HidlMemoryUtil: android.os.HidlMemory byteListToHidlMemory(java.util.List,java.lang.String)>(r0, null);

        return $r1;
    }

    public static android.os.HidlMemory byteListToHidlMemory(java.util.List, java.lang.String)
    {
        java.nio.ByteBuffer r0;
        boolean $z0, $z1;
        int $i0;
        java.lang.Object $r2;
        java.lang.Byte $r3;
        byte $b1;
        android.os.HidlMemory $r5, r12;
        java.lang.Throwable $r6;
        java.lang.RuntimeException $r7;
        java.util.List r8;
        java.lang.String r9;
        android.os.SharedMemory r10;
        java.util.Iterator r11;

        r8 := @parameter0: java.util.List;

        r9 := @parameter1: java.lang.String;

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r8);

        $z0 = interfaceinvoke r8.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r5 = new android.os.HidlMemory;

        specialinvoke $r5.<android.os.HidlMemory: void <init>(java.lang.String,long,android.os.NativeHandle)>("ashmem", 0L, null);

        return $r5;

     label1:
        if r9 == null goto label2;

        goto label3;

     label2:
        r9 = "";

     label3:
        $i0 = interfaceinvoke r8.<java.util.List: int size()>();

        r10 = staticinvoke <android.os.SharedMemory: android.os.SharedMemory create(java.lang.String,int)>(r9, $i0);

        r0 = virtualinvoke r10.<android.os.SharedMemory: java.nio.ByteBuffer mapReadWrite()>();

        r11 = interfaceinvoke r8.<java.util.List: java.util.Iterator iterator()>();

     label4:
        $z1 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label6;

        $r2 = interfaceinvoke r11.<java.util.Iterator: java.lang.Object next()>();

        $r3 = (java.lang.Byte) $r2;

        $b1 = virtualinvoke $r3.<java.lang.Byte: byte byteValue()>();

        virtualinvoke r0.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>($b1);

     label5:
        goto label4;

     label6:
        staticinvoke <android.os.SharedMemory: void unmap(java.nio.ByteBuffer)>(r0);

        r12 = staticinvoke <android.os.HidlMemoryUtil: android.os.HidlMemory sharedMemoryToHidlMemory(android.os.SharedMemory)>(r10);

     label7:
        return r12;

     label8:
        $r6 := @caughtexception;

        $r7 = new java.lang.RuntimeException;

        specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r6);

        throw $r7;

        catch android.system.ErrnoException from label3 to label4 with label8;
        catch android.system.ErrnoException from label4 to label5 with label8;
        catch android.system.ErrnoException from label6 to label7 with label8;
    }

    public static android.os.HidlMemory fileDescriptorToHidlMemory(java.io.FileDescriptor, int)
    {
        int i0;
        android.os.NativeHandle $r0;
        android.os.HidlMemory $r1, $r2;
        long $l1;
        java.io.FileDescriptor r3;
        boolean z0;

        r3 := @parameter0: java.io.FileDescriptor;

        i0 := @parameter1: int;

        if r3 != null goto label2;

        if i0 != 0 goto label1;

        goto label2;

     label1:
        z0 = 0;

        goto label3;

     label2:
        z0 = 1;

     label3:
        staticinvoke <com.android.internal.util.Preconditions: void checkArgument(boolean)>(z0);

        if r3 != null goto label4;

        $r2 = new android.os.HidlMemory;

        specialinvoke $r2.<android.os.HidlMemory: void <init>(java.lang.String,long,android.os.NativeHandle)>("ashmem", 0L, null);

        return $r2;

     label4:
        $r0 = new android.os.NativeHandle;

        specialinvoke $r0.<android.os.NativeHandle: void <init>(java.io.FileDescriptor,boolean)>(r3, 1);

        $r1 = new android.os.HidlMemory;

        $l1 = (long) i0;

        specialinvoke $r1.<android.os.HidlMemory: void <init>(java.lang.String,long,android.os.NativeHandle)>("ashmem", $l1, $r0);

        return $r1;
    }

    private static java.nio.ByteBuffer getBuffer(android.os.HidlMemory)
    {
        int i0, $i4, $i5;
        long l1, $l2, $l3;
        java.io.FileDescriptor r0, $r1;
        java.nio.DirectByteBuffer $r2;
        byte[] $r3;
        java.nio.ByteBuffer $r4;
        java.lang.Throwable $r5;
        java.lang.RuntimeException $r6;
        android.os.HidlMemory r7;
        android.os.NativeHandle r8;
        android.os._$$Lambda$HidlMemoryUtil$ymiTJHj4VkgK_My_r0e1J5wmQVI r9;

        r7 := @parameter0: android.os.HidlMemory;

     label1:
        $l2 = virtualinvoke r7.<android.os.HidlMemory: long getSize()>();

        i0 = (int) $l2;

     label2:
        if i0 != 0 goto label4;

     label3:
        $r3 = newarray (byte)[0];

        $r4 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>($r3);

        return $r4;

     label4:
        r8 = virtualinvoke r7.<android.os.HidlMemory: android.os.NativeHandle getHandle()>();

        $l3 = (long) i0;

        $i4 = <android.system.OsConstants: int PROT_READ>;

        $i5 = <android.system.OsConstants: int MAP_SHARED>;

        $r1 = virtualinvoke r8.<android.os.NativeHandle: java.io.FileDescriptor getFileDescriptor()>();

        l1 = staticinvoke <android.system.Os: long mmap(long,long,int,int,java.io.FileDescriptor,long)>(0L, $l3, $i4, $i5, $r1, 0L);

        r0 = virtualinvoke r8.<android.os.NativeHandle: java.io.FileDescriptor getFileDescriptor()>();

        r9 = new android.os._$$Lambda$HidlMemoryUtil$ymiTJHj4VkgK_My_r0e1J5wmQVI;

        specialinvoke r9.<android.os._$$Lambda$HidlMemoryUtil$ymiTJHj4VkgK_My_r0e1J5wmQVI: void <init>(long,int)>(l1, i0);

        $r2 = new java.nio.DirectByteBuffer;

        specialinvoke $r2.<java.nio.DirectByteBuffer: void <init>(int,long,java.io.FileDescriptor,java.lang.Runnable,boolean)>(i0, l1, r0, r9, 1);

     label5:
        return $r2;

     label6:
        $r5 := @caughtexception;

        $r6 = new java.lang.RuntimeException;

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r5);

        throw $r6;

        catch android.system.ErrnoException from label1 to label2 with label6;
        catch android.system.ErrnoException from label3 to label4 with label6;
        catch android.system.ErrnoException from label4 to label5 with label6;
    }

    public static byte[] hidlMemoryToByteArray(android.os.HidlMemory)
    {
        byte[] r0, $r3;
        long $l0, $l2, $l5;
        byte $b3, $b6;
        int $i4;
        java.lang.String $r4, $r7;
        boolean $z0, z1;
        android.os.HidlMemory r5;
        java.lang.Object[] $r6;
        java.nio.ByteBuffer r8;

        r5 := @parameter0: android.os.HidlMemory;

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r5);

        $l0 = virtualinvoke r5.<android.os.HidlMemory: long getSize()>();

        staticinvoke <com.android.internal.util.Preconditions: long checkArgumentInRange(long,long,long,java.lang.String)>($l0, 0L, 2147483647L, "Memory size");

        $l2 = virtualinvoke r5.<android.os.HidlMemory: long getSize()>();

        $b3 = $l2 cmp 0L;

        if $b3 == 0 goto label2;

        $r4 = virtualinvoke r5.<android.os.HidlMemory: java.lang.String getName()>();

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("ashmem");

        if $z0 == 0 goto label1;

        goto label2;

     label1:
        z1 = 0;

        goto label3;

     label2:
        z1 = 1;

     label3:
        $r6 = newarray (java.lang.Object)[1];

        $r7 = virtualinvoke r5.<android.os.HidlMemory: java.lang.String getName()>();

        $r6[0] = $r7;

        staticinvoke <com.android.internal.util.Preconditions: void checkArgument(boolean,java.lang.String,java.lang.Object[])>(z1, "Unsupported memory type: %s", $r6);

        $l5 = virtualinvoke r5.<android.os.HidlMemory: long getSize()>();

        $b6 = $l5 cmp 0L;

        if $b6 != 0 goto label4;

        $r3 = newarray (byte)[0];

        return $r3;

     label4:
        r8 = staticinvoke <android.os.HidlMemoryUtil: java.nio.ByteBuffer getBuffer(android.os.HidlMemory)>(r5);

        $i4 = virtualinvoke r8.<java.nio.ByteBuffer: int remaining()>();

        r0 = newarray (byte)[$i4];

        virtualinvoke r8.<java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[])>(r0);

        return r0;
    }

    public static java.util.ArrayList hidlMemoryToByteList(android.os.HidlMemory)
    {
        long $l0, $l2, $l6;
        byte $b3, $b5, $b7;
        java.util.ArrayList $r2, $r4;
        int $i4;
        boolean $z0, $z2, z3;
        java.lang.Byte $r3;
        java.lang.String $r5, $r8;
        android.os.HidlMemory r6;
        java.lang.Object[] $r7;
        java.nio.ByteBuffer r9;

        r6 := @parameter0: android.os.HidlMemory;

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r6);

        $l0 = virtualinvoke r6.<android.os.HidlMemory: long getSize()>();

        staticinvoke <com.android.internal.util.Preconditions: long checkArgumentInRange(long,long,long,java.lang.String)>($l0, 0L, 2147483647L, "Memory size");

        $l2 = virtualinvoke r6.<android.os.HidlMemory: long getSize()>();

        $b3 = $l2 cmp 0L;

        if $b3 == 0 goto label2;

        $r5 = virtualinvoke r6.<android.os.HidlMemory: java.lang.String getName()>();

        $z2 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("ashmem");

        if $z2 == 0 goto label1;

        goto label2;

     label1:
        z3 = 0;

        goto label3;

     label2:
        z3 = 1;

     label3:
        $r7 = newarray (java.lang.Object)[1];

        $r8 = virtualinvoke r6.<android.os.HidlMemory: java.lang.String getName()>();

        $r7[0] = $r8;

        staticinvoke <com.android.internal.util.Preconditions: void checkArgument(boolean,java.lang.String,java.lang.Object[])>(z3, "Unsupported memory type: %s", $r7);

        $l6 = virtualinvoke r6.<android.os.HidlMemory: long getSize()>();

        $b7 = $l6 cmp 0L;

        if $b7 != 0 goto label4;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        return $r4;

     label4:
        r9 = staticinvoke <android.os.HidlMemoryUtil: java.nio.ByteBuffer getBuffer(android.os.HidlMemory)>(r6);

        $r2 = new java.util.ArrayList;

        $i4 = virtualinvoke r9.<java.nio.ByteBuffer: int remaining()>();

        specialinvoke $r2.<java.util.ArrayList: void <init>(int)>($i4);

     label5:
        $z0 = virtualinvoke r9.<java.nio.ByteBuffer: boolean hasRemaining()>();

        if $z0 == 0 goto label6;

        $b5 = virtualinvoke r9.<java.nio.ByteBuffer: byte get()>();

        $r3 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b5);

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);

        goto label5;

     label6:
        return $r2;
    }

    static void lambda$getBuffer$0(long, int)
    {
        long l0, l2;
        int i1;
        java.lang.Throwable $r1;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        l2 = (long) i1;

     label1:
        staticinvoke <android.system.Os: void munmap(long,long)>(l0, l2);

     label2:
        goto label4;

     label3:
        $r1 := @caughtexception;

        staticinvoke <android.util.Log: int wtf(java.lang.String,java.lang.Throwable)>("HidlMemoryUtil", $r1);

     label4:
        return;

        catch android.system.ErrnoException from label1 to label2 with label3;
    }

    public static android.os.HidlMemory sharedMemoryToHidlMemory(android.os.SharedMemory)
    {
        android.os.SharedMemory r0;
        java.io.FileDescriptor $r1;
        int $i0;
        android.os.HidlMemory $r2, $r3;

        r0 := @parameter0: android.os.SharedMemory;

        if r0 != null goto label1;

        $r3 = new android.os.HidlMemory;

        specialinvoke $r3.<android.os.HidlMemory: void <init>(java.lang.String,long,android.os.NativeHandle)>("ashmem", 0L, null);

        return $r3;

     label1:
        $r1 = virtualinvoke r0.<android.os.SharedMemory: java.io.FileDescriptor getFileDescriptor()>();

        $i0 = virtualinvoke r0.<android.os.SharedMemory: int getSize()>();

        $r2 = staticinvoke <android.os.HidlMemoryUtil: android.os.HidlMemory fileDescriptorToHidlMemory(java.io.FileDescriptor,int)>($r1, $i0);

        return $r2;
    }

    public static void <clinit>()
    {
        <android.os.HidlMemoryUtil: java.lang.String TAG> = "HidlMemoryUtil";

        return;
    }
}
