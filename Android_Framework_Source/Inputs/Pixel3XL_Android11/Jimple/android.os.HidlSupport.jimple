public class android.os.HidlSupport extends java.lang.Object
{

    public void <init>()
    {
        android.os.HidlSupport r0;

        r0 := @this: android.os.HidlSupport;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static boolean deepEquals(java.lang.Object, java.lang.Object)
    {
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, z7;
        int $i0, $i1, $i2, $i3, $i4;
        java.util.stream.Stream $r0;
        android.os._$$Lambda$HidlSupport$oV2DlGQSAfcavBj7TK20nYhwS0U $r1;
        java.lang.Class $r2, r7, r8, r9;
        java.util.stream.IntStream $r3;
        android.os._$$Lambda$HidlSupport$4ktYtLCfMafhYI23iSXUQOH_hxo $r4;
        java.lang.Object r5, r6;
        java.lang.Object[] r10, r11;
        java.util.List r12, r13;
        java.util.Iterator r14;

        r5 := @parameter0: java.lang.Object;

        r6 := @parameter1: java.lang.Object;

        z7 = 1;

        if r5 != r6 goto label01;

        return 1;

     label01:
        if r5 == null goto label11;

        if r6 != null goto label02;

        goto label11;

     label02:
        r7 = virtualinvoke r5.<java.lang.Object: java.lang.Class getClass()>();

        r8 = virtualinvoke r6.<java.lang.Object: java.lang.Class getClass()>();

        if r7 == r8 goto label03;

        return 0;

     label03:
        $z0 = virtualinvoke r7.<java.lang.Class: boolean isArray()>();

        if $z0 == 0 goto label08;

        r9 = virtualinvoke r7.<java.lang.Class: java.lang.Class getComponentType()>();

        $r2 = virtualinvoke r8.<java.lang.Class: java.lang.Class getComponentType()>();

        if r9 == $r2 goto label04;

        return 0;

     label04:
        $z4 = virtualinvoke r9.<java.lang.Class: boolean isPrimitive()>();

        if $z4 == 0 goto label05;

        $z6 = staticinvoke <java.util.Objects: boolean deepEquals(java.lang.Object,java.lang.Object)>(r5, r6);

        return $z6;

     label05:
        r10 = (java.lang.Object[]) r5;

        r11 = (java.lang.Object[]) r6;

        $i3 = lengthof r10;

        $i2 = lengthof r11;

        if $i3 != $i2 goto label06;

        $i4 = lengthof r10;

        $r3 = staticinvoke <java.util.stream.IntStream: java.util.stream.IntStream range(int,int)>(0, $i4);

        $r4 = new android.os._$$Lambda$HidlSupport$4ktYtLCfMafhYI23iSXUQOH_hxo;

        specialinvoke $r4.<android.os._$$Lambda$HidlSupport$4ktYtLCfMafhYI23iSXUQOH_hxo: void <init>(java.lang.Object[],java.lang.Object[])>(r10, r11);

        $z5 = interfaceinvoke $r3.<java.util.stream.IntStream: boolean allMatch(java.util.function.IntPredicate)>($r4);

        if $z5 == 0 goto label06;

        goto label07;

     label06:
        z7 = 0;

     label07:
        return z7;

     label08:
        $z1 = r5 instanceof java.util.List;

        if $z1 == 0 goto label10;

        r12 = (java.util.List) r5;

        r13 = (java.util.List) r6;

        $i0 = interfaceinvoke r12.<java.util.List: int size()>();

        $i1 = interfaceinvoke r13.<java.util.List: int size()>();

        if $i0 == $i1 goto label09;

        return 0;

     label09:
        r14 = interfaceinvoke r12.<java.util.List: java.util.Iterator iterator()>();

        $r0 = interfaceinvoke r13.<java.util.List: java.util.stream.Stream stream()>();

        $r1 = new android.os._$$Lambda$HidlSupport$oV2DlGQSAfcavBj7TK20nYhwS0U;

        specialinvoke $r1.<android.os._$$Lambda$HidlSupport$oV2DlGQSAfcavBj7TK20nYhwS0U: void <init>(java.util.Iterator)>(r14);

        $z3 = interfaceinvoke $r0.<java.util.stream.Stream: boolean allMatch(java.util.function.Predicate)>($r1);

        return $z3;

     label10:
        staticinvoke <android.os.HidlSupport: void throwErrorIfUnsupportedType(java.lang.Object)>(r5);

        $z2 = virtualinvoke r5.<java.lang.Object: boolean equals(java.lang.Object)>(r6);

        return $z2;

     label11:
        return 0;
    }

    public static int deepHashCode(java.lang.Object)
    {
        java.lang.Object r0;
        java.lang.Class r1, $r7;
        boolean $z0, $z1, $z2;
        int $i0, $i1, $i2, $i3;
        java.util.List $r2;
        java.util.stream.Stream $r3, $r9;
        android.os.'-$$Lambda$HidlSupport$CwwfmHPEvZaybUxpLzKdwrpQRfA' $r4;
        java.util.stream.IntStream $r5, $r11;
        int[] $r6, $r12;
        java.lang.Object[] $r8;
        android.os.'-$$Lambda$HidlSupport$GHxmwrIWiKN83tl6aMQt_nV5hiw' $r10;
        java.util.function.ToIntFunction r13, r14;

        r0 := @parameter0: java.lang.Object;

        if r0 != null goto label1;

        return 0;

     label1:
        r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $z0 = virtualinvoke r1.<java.lang.Class: boolean isArray()>();

        if $z0 == 0 goto label3;

        $r7 = virtualinvoke r1.<java.lang.Class: java.lang.Class getComponentType()>();

        $z2 = virtualinvoke $r7.<java.lang.Class: boolean isPrimitive()>();

        if $z2 == 0 goto label2;

        $i3 = staticinvoke <android.os.HidlSupport: int primitiveArrayHashCode(java.lang.Object)>(r0);

        return $i3;

     label2:
        $r8 = (java.lang.Object[]) r0;

        $r9 = staticinvoke <java.util.Arrays: java.util.stream.Stream stream(java.lang.Object[])>($r8);

        $r10 = <android.os._$$Lambda$HidlSupport$GHxmwrIWiKN83tl6aMQt_nV5hiw: android.os.'-$$Lambda$HidlSupport$GHxmwrIWiKN83tl6aMQt_nV5hiw' INSTANCE>;

        r13 = (java.util.function.ToIntFunction) $r10;

        $r11 = interfaceinvoke $r9.<java.util.stream.Stream: java.util.stream.IntStream mapToInt(java.util.function.ToIntFunction)>(r13);

        $r12 = interfaceinvoke $r11.<java.util.stream.IntStream: int[] toArray()>();

        $i2 = staticinvoke <java.util.Arrays: int hashCode(int[])>($r12);

        return $i2;

     label3:
        $z1 = r0 instanceof java.util.List;

        if $z1 == 0 goto label4;

        $r2 = (java.util.List) r0;

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.stream.Stream stream()>();

        $r4 = <android.os._$$Lambda$HidlSupport$CwwfmHPEvZaybUxpLzKdwrpQRfA: android.os.'-$$Lambda$HidlSupport$CwwfmHPEvZaybUxpLzKdwrpQRfA' INSTANCE>;

        r14 = (java.util.function.ToIntFunction) $r4;

        $r5 = interfaceinvoke $r3.<java.util.stream.Stream: java.util.stream.IntStream mapToInt(java.util.function.ToIntFunction)>(r14);

        $r6 = interfaceinvoke $r5.<java.util.stream.IntStream: int[] toArray()>();

        $i1 = staticinvoke <java.util.Arrays: int hashCode(int[])>($r6);

        return $i1;

     label4:
        staticinvoke <android.os.HidlSupport: void throwErrorIfUnsupportedType(java.lang.Object)>(r0);

        $i0 = virtualinvoke r0.<java.lang.Object: int hashCode()>();

        return $i0;
    }

    public static native int getPidIfSharable();

    public static boolean interfacesEqual(android.os.IHwInterface, java.lang.Object)
    {
        android.os.IHwInterface r0, $r3;
        java.lang.Object r1;
        boolean $z0, $z1;
        android.os.IHwBinder $r2, $r4;

        r0 := @parameter0: android.os.IHwInterface;

        r1 := @parameter1: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        if r0 == null goto label4;

        if r1 != null goto label2;

        goto label4;

     label2:
        $z0 = r1 instanceof android.os.IHwInterface;

        if $z0 != 0 goto label3;

        return 0;

     label3:
        $r2 = interfaceinvoke r0.<android.os.IHwInterface: android.os.IHwBinder asBinder()>();

        $r3 = (android.os.IHwInterface) r1;

        $r4 = interfaceinvoke $r3.<android.os.IHwInterface: android.os.IHwBinder asBinder()>();

        $z1 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r2, $r4);

        return $z1;

     label4:
        return 0;
    }

    static boolean lambda$deepEquals$0(java.lang.Object[], java.lang.Object[], int)
    {
        java.lang.Object[] r0, r1;
        int i0;
        java.lang.Object $r2, $r3;
        boolean $z0;

        r0 := @parameter0: java.lang.Object[];

        r1 := @parameter1: java.lang.Object[];

        i0 := @parameter2: int;

        $r3 = r0[i0];

        $r2 = r1[i0];

        $z0 = staticinvoke <android.os.HidlSupport: boolean deepEquals(java.lang.Object,java.lang.Object)>($r3, $r2);

        return $z0;
    }

    static boolean lambda$deepEquals$1(java.util.Iterator, java.lang.Object)
    {
        java.util.Iterator r0;
        java.lang.Object r1, $r2;
        boolean $z0;

        r0 := @parameter0: java.util.Iterator;

        r1 := @parameter1: java.lang.Object;

        $r2 = interfaceinvoke r0.<java.util.Iterator: java.lang.Object next()>();

        $z0 = staticinvoke <android.os.HidlSupport: boolean deepEquals(java.lang.Object,java.lang.Object)>($r2, r1);

        return $z0;
    }

    static int lambda$deepHashCode$2(java.lang.Object)
    {
        java.lang.Object r0;
        int $i0;

        r0 := @parameter0: java.lang.Object;

        $i0 = staticinvoke <android.os.HidlSupport: int deepHashCode(java.lang.Object)>(r0);

        return $i0;
    }

    static int lambda$deepHashCode$3(java.lang.Object)
    {
        java.lang.Object r0;
        int $i0;

        r0 := @parameter0: java.lang.Object;

        $i0 = staticinvoke <android.os.HidlSupport: int deepHashCode(java.lang.Object)>(r0);

        return $i0;
    }

    private static int primitiveArrayHashCode(java.lang.Object)
    {
        java.lang.Object r0;
        java.lang.Class r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10;
        java.lang.UnsupportedOperationException $r11;
        short[] $r12;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        long[] $r13;
        int[] $r14;
        float[] $r15;
        double[] $r16;
        char[] $r17;
        byte[] $r18;
        boolean[] $r19;

        r0 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        r1 = virtualinvoke $r2.<java.lang.Class: java.lang.Class getComponentType()>();

        $r3 = <java.lang.Boolean: java.lang.Class TYPE>;

        if r1 != $r3 goto label1;

        $r19 = (boolean[]) r0;

        $i7 = staticinvoke <java.util.Arrays: int hashCode(boolean[])>($r19);

        return $i7;

     label1:
        $r4 = <java.lang.Byte: java.lang.Class TYPE>;

        if r1 != $r4 goto label2;

        $r18 = (byte[]) r0;

        $i6 = staticinvoke <java.util.Arrays: int hashCode(byte[])>($r18);

        return $i6;

     label2:
        $r5 = <java.lang.Character: java.lang.Class TYPE>;

        if r1 != $r5 goto label3;

        $r17 = (char[]) r0;

        $i5 = staticinvoke <java.util.Arrays: int hashCode(char[])>($r17);

        return $i5;

     label3:
        $r6 = <java.lang.Double: java.lang.Class TYPE>;

        if r1 != $r6 goto label4;

        $r16 = (double[]) r0;

        $i4 = staticinvoke <java.util.Arrays: int hashCode(double[])>($r16);

        return $i4;

     label4:
        $r7 = <java.lang.Float: java.lang.Class TYPE>;

        if r1 != $r7 goto label5;

        $r15 = (float[]) r0;

        $i3 = staticinvoke <java.util.Arrays: int hashCode(float[])>($r15);

        return $i3;

     label5:
        $r8 = <java.lang.Integer: java.lang.Class TYPE>;

        if r1 != $r8 goto label6;

        $r14 = (int[]) r0;

        $i2 = staticinvoke <java.util.Arrays: int hashCode(int[])>($r14);

        return $i2;

     label6:
        $r9 = <java.lang.Long: java.lang.Class TYPE>;

        if r1 != $r9 goto label7;

        $r13 = (long[]) r0;

        $i1 = staticinvoke <java.util.Arrays: int hashCode(long[])>($r13);

        return $i1;

     label7:
        $r10 = <java.lang.Short: java.lang.Class TYPE>;

        if r1 != $r10 goto label8;

        $r12 = (short[]) r0;

        $i0 = staticinvoke <java.util.Arrays: int hashCode(short[])>($r12);

        return $i0;

     label8:
        $r11 = new java.lang.UnsupportedOperationException;

        specialinvoke $r11.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r11;
    }

    private static void throwErrorIfUnsupportedType(java.lang.Object)
    {
        java.lang.Object r0;
        boolean $z0, $z1, $z2;
        java.lang.UnsupportedOperationException $r2, $r8;
        java.lang.StringBuilder $r3;
        java.lang.Class $r5;
        java.lang.String $r6, $r9;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof java.util.Collection;

        if $z0 == 0 goto label2;

        $z2 = r0 instanceof java.util.List;

        if $z2 == 0 goto label1;

        goto label2;

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot check equality on collections other than lists: ");

        $r5 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = new java.lang.UnsupportedOperationException;

        $r9 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r9);

        throw $r8;

     label2:
        $z1 = r0 instanceof java.util.Map;

        if $z1 != 0 goto label3;

        return;

     label3:
        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Cannot check equality on maps");

        throw $r2;
    }
}
