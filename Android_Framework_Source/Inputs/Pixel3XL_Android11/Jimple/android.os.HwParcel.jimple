public class android.os.HwParcel extends java.lang.Object
{
    public static final int STATUS_SUCCESS;
    private static final java.lang.String TAG;
    private static final libcore.util.NativeAllocationRegistry sNativeRegistry;
    private long mNativeContext;

    static void <clinit>()
    {
        long l0;
        libcore.util.NativeAllocationRegistry $r0;
        java.lang.Class $r1;
        java.lang.ClassLoader $r2;

        <android.os.HwParcel: java.lang.String TAG> = "HwParcel";

        <android.os.HwParcel: int STATUS_SUCCESS> = 0;

        l0 = staticinvoke <android.os.HwParcel: long native_init()>();

        $r0 = new libcore.util.NativeAllocationRegistry;

        $r1 = class "Landroid/os/HwParcel;";

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        specialinvoke $r0.<libcore.util.NativeAllocationRegistry: void <init>(java.lang.ClassLoader,long,long)>($r2, l0, 128L);

        <android.os.HwParcel: libcore.util.NativeAllocationRegistry sNativeRegistry> = $r0;

        return;
    }

    public void <init>()
    {
        android.os.HwParcel r0;
        long $l0;
        libcore.util.NativeAllocationRegistry $r1;

        r0 := @this: android.os.HwParcel;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        specialinvoke r0.<android.os.HwParcel: void native_setup(boolean)>(1);

        $r1 = <android.os.HwParcel: libcore.util.NativeAllocationRegistry sNativeRegistry>;

        $l0 = r0.<android.os.HwParcel: long mNativeContext>;

        virtualinvoke $r1.<libcore.util.NativeAllocationRegistry: java.lang.Runnable registerNativeAllocation(java.lang.Object,long)>(r0, $l0);

        return;
    }

    private void <init>(boolean)
    {
        android.os.HwParcel r0;
        boolean z0;
        long $l0;
        libcore.util.NativeAllocationRegistry $r1;

        r0 := @this: android.os.HwParcel;

        z0 := @parameter0: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        specialinvoke r0.<android.os.HwParcel: void native_setup(boolean)>(z0);

        $r1 = <android.os.HwParcel: libcore.util.NativeAllocationRegistry sNativeRegistry>;

        $l0 = r0.<android.os.HwParcel: long mNativeContext>;

        virtualinvoke $r1.<libcore.util.NativeAllocationRegistry: java.lang.Runnable registerNativeAllocation(java.lang.Object,long)>(r0, $l0);

        return;
    }

    private static final native long native_init();

    private final native void native_setup(boolean);

    private final native boolean[] readBoolVectorAsArray();

    private final native double[] readDoubleVectorAsArray();

    private final native float[] readFloatVectorAsArray();

    private final native short[] readInt16VectorAsArray();

    private final native int[] readInt32VectorAsArray();

    private final native long[] readInt64VectorAsArray();

    private final native byte[] readInt8VectorAsArray();

    private final native android.os.NativeHandle[] readNativeHandleAsArray();

    private final native java.lang.String[] readStringVectorAsArray();

    private final native void writeBoolVector(boolean[]);

    private final native void writeDoubleVector(double[]);

    private final native void writeFloatVector(float[]);

    private final native void writeInt16Vector(short[]);

    private final native void writeInt32Vector(int[]);

    private final native void writeInt64Vector(long[]);

    private final native void writeInt8Vector(byte[]);

    private final native void writeNativeHandleVector(android.os.NativeHandle[]);

    private final native void writeStringVector(java.lang.String[]);

    public final native void enforceInterface(java.lang.String);

    public final native boolean readBool();

    public final java.util.ArrayList readBoolVector()
    {
        android.os.HwParcel r0;
        java.util.ArrayList $r1;
        boolean[] $r2;
        java.lang.Boolean[] $r3;
        java.util.List $r4;

        r0 := @this: android.os.HwParcel;

        $r1 = new java.util.ArrayList;

        $r2 = specialinvoke r0.<android.os.HwParcel: boolean[] readBoolVectorAsArray()>();

        $r3 = staticinvoke <android.os.HwBlob: java.lang.Boolean[] wrapArray(boolean[])>($r2);

        $r4 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r3);

        specialinvoke $r1.<java.util.ArrayList: void <init>(java.util.Collection)>($r4);

        return $r1;
    }

    public final native android.os.HwBlob readBuffer(long);

    public final native double readDouble();

    public final java.util.ArrayList readDoubleVector()
    {
        android.os.HwParcel r0;
        java.util.ArrayList $r1;
        double[] $r2;
        java.lang.Double[] $r3;
        java.util.List $r4;

        r0 := @this: android.os.HwParcel;

        $r1 = new java.util.ArrayList;

        $r2 = specialinvoke r0.<android.os.HwParcel: double[] readDoubleVectorAsArray()>();

        $r3 = staticinvoke <android.os.HwBlob: java.lang.Double[] wrapArray(double[])>($r2);

        $r4 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r3);

        specialinvoke $r1.<java.util.ArrayList: void <init>(java.util.Collection)>($r4);

        return $r1;
    }

    public final native android.os.HwBlob readEmbeddedBuffer(long, long, long, boolean);

    public final native android.os.HidlMemory readEmbeddedHidlMemory(long, long, long);

    public final native android.os.NativeHandle readEmbeddedNativeHandle(long, long);

    public final native float readFloat();

    public final java.util.ArrayList readFloatVector()
    {
        android.os.HwParcel r0;
        java.util.ArrayList $r1;
        float[] $r2;
        java.lang.Float[] $r3;
        java.util.List $r4;

        r0 := @this: android.os.HwParcel;

        $r1 = new java.util.ArrayList;

        $r2 = specialinvoke r0.<android.os.HwParcel: float[] readFloatVectorAsArray()>();

        $r3 = staticinvoke <android.os.HwBlob: java.lang.Float[] wrapArray(float[])>($r2);

        $r4 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r3);

        specialinvoke $r1.<java.util.ArrayList: void <init>(java.util.Collection)>($r4);

        return $r1;
    }

    public final native android.os.HidlMemory readHidlMemory();

    public final native short readInt16();

    public final java.util.ArrayList readInt16Vector()
    {
        android.os.HwParcel r0;
        java.util.ArrayList $r1;
        short[] $r2;
        java.lang.Short[] $r3;
        java.util.List $r4;

        r0 := @this: android.os.HwParcel;

        $r1 = new java.util.ArrayList;

        $r2 = specialinvoke r0.<android.os.HwParcel: short[] readInt16VectorAsArray()>();

        $r3 = staticinvoke <android.os.HwBlob: java.lang.Short[] wrapArray(short[])>($r2);

        $r4 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r3);

        specialinvoke $r1.<java.util.ArrayList: void <init>(java.util.Collection)>($r4);

        return $r1;
    }

    public final native int readInt32();

    public final java.util.ArrayList readInt32Vector()
    {
        android.os.HwParcel r0;
        java.util.ArrayList $r1;
        int[] $r2;
        java.lang.Integer[] $r3;
        java.util.List $r4;

        r0 := @this: android.os.HwParcel;

        $r1 = new java.util.ArrayList;

        $r2 = specialinvoke r0.<android.os.HwParcel: int[] readInt32VectorAsArray()>();

        $r3 = staticinvoke <android.os.HwBlob: java.lang.Integer[] wrapArray(int[])>($r2);

        $r4 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r3);

        specialinvoke $r1.<java.util.ArrayList: void <init>(java.util.Collection)>($r4);

        return $r1;
    }

    public final native long readInt64();

    public final java.util.ArrayList readInt64Vector()
    {
        android.os.HwParcel r0;
        java.util.ArrayList $r1;
        long[] $r2;
        java.lang.Long[] $r3;
        java.util.List $r4;

        r0 := @this: android.os.HwParcel;

        $r1 = new java.util.ArrayList;

        $r2 = specialinvoke r0.<android.os.HwParcel: long[] readInt64VectorAsArray()>();

        $r3 = staticinvoke <android.os.HwBlob: java.lang.Long[] wrapArray(long[])>($r2);

        $r4 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r3);

        specialinvoke $r1.<java.util.ArrayList: void <init>(java.util.Collection)>($r4);

        return $r1;
    }

    public final native byte readInt8();

    public final java.util.ArrayList readInt8Vector()
    {
        android.os.HwParcel r0;
        java.util.ArrayList $r1;
        byte[] $r2;
        java.lang.Byte[] $r3;
        java.util.List $r4;

        r0 := @this: android.os.HwParcel;

        $r1 = new java.util.ArrayList;

        $r2 = specialinvoke r0.<android.os.HwParcel: byte[] readInt8VectorAsArray()>();

        $r3 = staticinvoke <android.os.HwBlob: java.lang.Byte[] wrapArray(byte[])>($r2);

        $r4 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r3);

        specialinvoke $r1.<java.util.ArrayList: void <init>(java.util.Collection)>($r4);

        return $r1;
    }

    public final native android.os.NativeHandle readNativeHandle();

    public final java.util.ArrayList readNativeHandleVector()
    {
        android.os.HwParcel r0;
        java.util.ArrayList $r1;
        android.os.NativeHandle[] $r2;
        java.util.List $r3;

        r0 := @this: android.os.HwParcel;

        $r1 = new java.util.ArrayList;

        $r2 = specialinvoke r0.<android.os.HwParcel: android.os.NativeHandle[] readNativeHandleAsArray()>();

        $r3 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r2);

        specialinvoke $r1.<java.util.ArrayList: void <init>(java.util.Collection)>($r3);

        return $r1;
    }

    public final native java.lang.String readString();

    public final java.util.ArrayList readStringVector()
    {
        android.os.HwParcel r0;
        java.util.ArrayList $r1;
        java.lang.String[] $r2;
        java.util.List $r3;

        r0 := @this: android.os.HwParcel;

        $r1 = new java.util.ArrayList;

        $r2 = specialinvoke r0.<android.os.HwParcel: java.lang.String[] readStringVectorAsArray()>();

        $r3 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r2);

        specialinvoke $r1.<java.util.ArrayList: void <init>(java.util.Collection)>($r3);

        return $r1;
    }

    public final native android.os.IHwBinder readStrongBinder();

    public final native void release();

    public final native void releaseTemporaryStorage();

    public final native void send();

    public final native void verifySuccess();

    public final native void writeBool(boolean);

    public final void writeBoolVector(java.util.ArrayList)
    {
        android.os.HwParcel r0;
        java.util.ArrayList r1;
        int i0, i1;
        boolean[] r2;
        java.lang.Object $r3;
        java.lang.Boolean $r4;
        boolean $z0;

        r0 := @this: android.os.HwParcel;

        r1 := @parameter0: java.util.ArrayList;

        i0 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        r2 = newarray (boolean)[i0];

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r3 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        r2[i1] = $z0;

        i1 = i1 + 1;

        goto label1;

     label2:
        specialinvoke r0.<android.os.HwParcel: void writeBoolVector(boolean[])>(r2);

        return;
    }

    public final native void writeBuffer(android.os.HwBlob);

    public final native void writeDouble(double);

    public final void writeDoubleVector(java.util.ArrayList)
    {
        android.os.HwParcel r0;
        java.util.ArrayList r1;
        int i0, i1;
        double[] r2;
        java.lang.Object $r3;
        java.lang.Double $r4;
        double $d0;

        r0 := @this: android.os.HwParcel;

        r1 := @parameter0: java.util.ArrayList;

        i0 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        r2 = newarray (double)[i0];

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r3 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r4 = (java.lang.Double) $r3;

        $d0 = virtualinvoke $r4.<java.lang.Double: double doubleValue()>();

        r2[i1] = $d0;

        i1 = i1 + 1;

        goto label1;

     label2:
        specialinvoke r0.<android.os.HwParcel: void writeDoubleVector(double[])>(r2);

        return;
    }

    public final native void writeFloat(float);

    public final void writeFloatVector(java.util.ArrayList)
    {
        android.os.HwParcel r0;
        java.util.ArrayList r1;
        int i0, i1;
        float[] r2;
        java.lang.Object $r3;
        java.lang.Float $r4;
        float $f0;

        r0 := @this: android.os.HwParcel;

        r1 := @parameter0: java.util.ArrayList;

        i0 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        r2 = newarray (float)[i0];

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r3 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r4 = (java.lang.Float) $r3;

        $f0 = virtualinvoke $r4.<java.lang.Float: float floatValue()>();

        r2[i1] = $f0;

        i1 = i1 + 1;

        goto label1;

     label2:
        specialinvoke r0.<android.os.HwParcel: void writeFloatVector(float[])>(r2);

        return;
    }

    public final native void writeHidlMemory(android.os.HidlMemory);

    public final native void writeInt16(short);

    public final void writeInt16Vector(java.util.ArrayList)
    {
        android.os.HwParcel r0;
        java.util.ArrayList r1;
        int i0, i2;
        short[] r2;
        java.lang.Object $r3;
        java.lang.Short $r4;
        short $s1;

        r0 := @this: android.os.HwParcel;

        r1 := @parameter0: java.util.ArrayList;

        i0 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        r2 = newarray (short)[i0];

        i2 = 0;

     label1:
        if i2 >= i0 goto label2;

        $r3 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        $r4 = (java.lang.Short) $r3;

        $s1 = virtualinvoke $r4.<java.lang.Short: short shortValue()>();

        r2[i2] = $s1;

        i2 = i2 + 1;

        goto label1;

     label2:
        specialinvoke r0.<android.os.HwParcel: void writeInt16Vector(short[])>(r2);

        return;
    }

    public final native void writeInt32(int);

    public final void writeInt32Vector(java.util.ArrayList)
    {
        android.os.HwParcel r0;
        java.util.ArrayList r1;
        int i0, $i1, i2;
        int[] r2;
        java.lang.Object $r3;
        java.lang.Integer $r4;

        r0 := @this: android.os.HwParcel;

        r1 := @parameter0: java.util.ArrayList;

        i0 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        r2 = newarray (int)[i0];

        i2 = 0;

     label1:
        if i2 >= i0 goto label2;

        $r3 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        $r4 = (java.lang.Integer) $r3;

        $i1 = virtualinvoke $r4.<java.lang.Integer: int intValue()>();

        r2[i2] = $i1;

        i2 = i2 + 1;

        goto label1;

     label2:
        specialinvoke r0.<android.os.HwParcel: void writeInt32Vector(int[])>(r2);

        return;
    }

    public final native void writeInt64(long);

    public final void writeInt64Vector(java.util.ArrayList)
    {
        android.os.HwParcel r0;
        java.util.ArrayList r1;
        int i0, i2;
        long[] r2;
        java.lang.Object $r3;
        java.lang.Long $r4;
        long $l1;

        r0 := @this: android.os.HwParcel;

        r1 := @parameter0: java.util.ArrayList;

        i0 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        r2 = newarray (long)[i0];

        i2 = 0;

     label1:
        if i2 >= i0 goto label2;

        $r3 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        $r4 = (java.lang.Long) $r3;

        $l1 = virtualinvoke $r4.<java.lang.Long: long longValue()>();

        r2[i2] = $l1;

        i2 = i2 + 1;

        goto label1;

     label2:
        specialinvoke r0.<android.os.HwParcel: void writeInt64Vector(long[])>(r2);

        return;
    }

    public final native void writeInt8(byte);

    public final void writeInt8Vector(java.util.ArrayList)
    {
        android.os.HwParcel r0;
        java.util.ArrayList r1;
        int i0, i2;
        byte[] r2;
        java.lang.Object $r3;
        java.lang.Byte $r4;
        byte $b1;

        r0 := @this: android.os.HwParcel;

        r1 := @parameter0: java.util.ArrayList;

        i0 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        r2 = newarray (byte)[i0];

        i2 = 0;

     label1:
        if i2 >= i0 goto label2;

        $r3 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        $r4 = (java.lang.Byte) $r3;

        $b1 = virtualinvoke $r4.<java.lang.Byte: byte byteValue()>();

        r2[i2] = $b1;

        i2 = i2 + 1;

        goto label1;

     label2:
        specialinvoke r0.<android.os.HwParcel: void writeInt8Vector(byte[])>(r2);

        return;
    }

    public final native void writeInterfaceToken(java.lang.String);

    public final native void writeNativeHandle(android.os.NativeHandle);

    public final void writeNativeHandleVector(java.util.ArrayList)
    {
        android.os.HwParcel r0;
        java.util.ArrayList r1;
        int $i0;
        android.os.NativeHandle[] $r2, $r4;
        java.lang.Object[] $r3;

        r0 := @this: android.os.HwParcel;

        r1 := @parameter0: java.util.ArrayList;

        $i0 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        $r2 = newarray (android.os.NativeHandle)[$i0];

        $r3 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r2);

        $r4 = (android.os.NativeHandle[]) $r3;

        specialinvoke r0.<android.os.HwParcel: void writeNativeHandleVector(android.os.NativeHandle[])>($r4);

        return;
    }

    public final native void writeStatus(int);

    public final native void writeString(java.lang.String);

    public final void writeStringVector(java.util.ArrayList)
    {
        android.os.HwParcel r0;
        java.util.ArrayList r1;
        int $i0;
        java.lang.String[] $r2, $r4;
        java.lang.Object[] $r3;

        r0 := @this: android.os.HwParcel;

        r1 := @parameter0: java.util.ArrayList;

        $i0 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        $r2 = newarray (java.lang.String)[$i0];

        $r3 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r2);

        $r4 = (java.lang.String[]) $r3;

        specialinvoke r0.<android.os.HwParcel: void writeStringVector(java.lang.String[])>($r4);

        return;
    }

    public final native void writeStrongBinder(android.os.IHwBinder);
}
