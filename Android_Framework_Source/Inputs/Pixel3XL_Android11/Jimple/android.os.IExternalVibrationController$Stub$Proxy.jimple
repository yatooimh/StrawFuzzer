class android.os.IExternalVibrationController$Stub$Proxy extends java.lang.Object implements android.os.IExternalVibrationController
{
    public static android.os.IExternalVibrationController sDefaultImpl;
    private android.os.IBinder mRemote;

    void <init>(android.os.IBinder)
    {
        android.os.IExternalVibrationController$Stub$Proxy r0;
        android.os.IBinder r1;

        r0 := @this: android.os.IExternalVibrationController$Stub$Proxy;

        r1 := @parameter0: android.os.IBinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.os.IExternalVibrationController$Stub$Proxy: android.os.IBinder mRemote> = r1;

        return;
    }

    public android.os.IBinder asBinder()
    {
        android.os.IExternalVibrationController$Stub$Proxy r0;
        android.os.IBinder $r1;

        r0 := @this: android.os.IExternalVibrationController$Stub$Proxy;

        $r1 = r0.<android.os.IExternalVibrationController$Stub$Proxy: android.os.IBinder mRemote>;

        return $r1;
    }

    public java.lang.String getInterfaceDescriptor()
    {
        android.os.IExternalVibrationController$Stub$Proxy r0;

        r0 := @this: android.os.IExternalVibrationController$Stub$Proxy;

        return "android.os.IExternalVibrationController";
    }

    public boolean mute() throws android.os.RemoteException
    {
        android.os.IExternalVibrationController$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        int i0;
        boolean $z0, z1, z2;
        android.os.IExternalVibrationController $r3, $r4;
        java.lang.Throwable $r5;
        android.os.IBinder r6;

        r0 := @this: android.os.IExternalVibrationController$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.IExternalVibrationController");

        r6 = r0.<android.os.IExternalVibrationController$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r3 = staticinvoke <android.os.IExternalVibrationController$Stub: android.os.IExternalVibrationController getDefaultImpl()>();

        if $r3 == null goto label5;

        $r4 = staticinvoke <android.os.IExternalVibrationController$Stub: android.os.IExternalVibrationController getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<android.os.IExternalVibrationController: boolean mute()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i0 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public boolean unmute() throws android.os.RemoteException
    {
        android.os.IExternalVibrationController$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        int i0;
        boolean $z0, z1, z2;
        android.os.IExternalVibrationController $r3, $r4;
        java.lang.Throwable $r5;
        android.os.IBinder r6;

        r0 := @this: android.os.IExternalVibrationController$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.IExternalVibrationController");

        r6 = r0.<android.os.IExternalVibrationController$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(2, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r3 = staticinvoke <android.os.IExternalVibrationController$Stub: android.os.IExternalVibrationController getDefaultImpl()>();

        if $r3 == null goto label5;

        $r4 = staticinvoke <android.os.IExternalVibrationController$Stub: android.os.IExternalVibrationController getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<android.os.IExternalVibrationController: boolean unmute()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i0 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }
}
