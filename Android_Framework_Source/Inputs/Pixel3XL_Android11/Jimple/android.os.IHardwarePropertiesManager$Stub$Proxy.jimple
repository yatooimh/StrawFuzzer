class android.os.IHardwarePropertiesManager$Stub$Proxy extends java.lang.Object implements android.os.IHardwarePropertiesManager
{
    public static android.os.IHardwarePropertiesManager sDefaultImpl;
    private android.os.IBinder mRemote;

    void <init>(android.os.IBinder)
    {
        android.os.IHardwarePropertiesManager$Stub$Proxy r0;
        android.os.IBinder r1;

        r0 := @this: android.os.IHardwarePropertiesManager$Stub$Proxy;

        r1 := @parameter0: android.os.IBinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.os.IHardwarePropertiesManager$Stub$Proxy: android.os.IBinder mRemote> = r1;

        return;
    }

    public android.os.IBinder asBinder()
    {
        android.os.IHardwarePropertiesManager$Stub$Proxy r0;
        android.os.IBinder $r1;

        r0 := @this: android.os.IHardwarePropertiesManager$Stub$Proxy;

        $r1 = r0.<android.os.IHardwarePropertiesManager$Stub$Proxy: android.os.IBinder mRemote>;

        return $r1;
    }

    public android.os.CpuUsageInfo[] getCpuUsages(java.lang.String) throws android.os.RemoteException
    {
        android.os.IHardwarePropertiesManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.os.Parcelable$Creator $r4;
        java.lang.Object[] $r5;
        android.os.IHardwarePropertiesManager $r6, $r7;
        java.lang.Throwable $r8;
        java.lang.String r9;
        android.os.CpuUsageInfo[] r10, r11;

        r0 := @this: android.os.IHardwarePropertiesManager$Stub$Proxy;

        r9 := @parameter0: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.IHardwarePropertiesManager");

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r9);

        $r3 = r0.<android.os.IHardwarePropertiesManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(2, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <android.os.IHardwarePropertiesManager$Stub: android.os.IHardwarePropertiesManager getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <android.os.IHardwarePropertiesManager$Stub: android.os.IHardwarePropertiesManager getDefaultImpl()>();

        r10 = interfaceinvoke $r7.<android.os.IHardwarePropertiesManager: android.os.CpuUsageInfo[] getCpuUsages(java.lang.String)>(r9);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r10;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $r4 = <android.os.CpuUsageInfo: android.os.Parcelable$Creator CREATOR>;

        $r5 = virtualinvoke r2.<android.os.Parcel: java.lang.Object[] createTypedArray(android.os.Parcelable$Creator)>($r4);

        r11 = (android.os.CpuUsageInfo[]) $r5;

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r11;

     label5:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public float[] getDeviceTemperatures(java.lang.String, int, int) throws android.os.RemoteException
    {
        android.os.IHardwarePropertiesManager$Stub$Proxy r0;
        int i0, i1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.os.IHardwarePropertiesManager $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7;
        float[] r8, r9;

        r0 := @this: android.os.IHardwarePropertiesManager$Stub$Proxy;

        r7 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.IHardwarePropertiesManager");

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r7);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        $r3 = r0.<android.os.IHardwarePropertiesManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.os.IHardwarePropertiesManager$Stub: android.os.IHardwarePropertiesManager getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.os.IHardwarePropertiesManager$Stub: android.os.IHardwarePropertiesManager getDefaultImpl()>();

        r8 = interfaceinvoke $r5.<android.os.IHardwarePropertiesManager: float[] getDeviceTemperatures(java.lang.String,int,int)>(r7, i0, i1);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r8;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        r9 = virtualinvoke r2.<android.os.Parcel: float[] createFloatArray()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public float[] getFanSpeeds(java.lang.String) throws android.os.RemoteException
    {
        android.os.IHardwarePropertiesManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.os.IHardwarePropertiesManager $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7;
        float[] r8, r9;

        r0 := @this: android.os.IHardwarePropertiesManager$Stub$Proxy;

        r7 := @parameter0: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.IHardwarePropertiesManager");

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r7);

        $r3 = r0.<android.os.IHardwarePropertiesManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(3, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.os.IHardwarePropertiesManager$Stub: android.os.IHardwarePropertiesManager getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.os.IHardwarePropertiesManager$Stub: android.os.IHardwarePropertiesManager getDefaultImpl()>();

        r8 = interfaceinvoke $r5.<android.os.IHardwarePropertiesManager: float[] getFanSpeeds(java.lang.String)>(r7);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r8;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        r9 = virtualinvoke r2.<android.os.Parcel: float[] createFloatArray()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public java.lang.String getInterfaceDescriptor()
    {
        android.os.IHardwarePropertiesManager$Stub$Proxy r0;

        r0 := @this: android.os.IHardwarePropertiesManager$Stub$Proxy;

        return "android.os.IHardwarePropertiesManager";
    }
}
