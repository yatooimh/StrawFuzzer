class android.os.IIdmap2$Stub$Proxy extends java.lang.Object implements android.os.IIdmap2
{
    public static android.os.IIdmap2 sDefaultImpl;
    private android.os.IBinder mRemote;

    void <init>(android.os.IBinder)
    {
        android.os.IIdmap2$Stub$Proxy r0;
        android.os.IBinder r1;

        r0 := @this: android.os.IIdmap2$Stub$Proxy;

        r1 := @parameter0: android.os.IBinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.os.IIdmap2$Stub$Proxy: android.os.IBinder mRemote> = r1;

        return;
    }

    public android.os.IBinder asBinder()
    {
        android.os.IIdmap2$Stub$Proxy r0;
        android.os.IBinder $r1;

        r0 := @this: android.os.IIdmap2$Stub$Proxy;

        $r1 = r0.<android.os.IIdmap2$Stub$Proxy: android.os.IBinder mRemote>;

        return $r1;
    }

    public java.lang.String createIdmap(java.lang.String, java.lang.String, int, boolean, int) throws android.os.RemoteException
    {
        android.os.IIdmap2$Stub$Proxy r0;
        java.lang.String r1, r8, r9, r10;
        int i0, i1;
        boolean z0, $z1;
        android.os.Parcel r2, r3;
        android.os.IBinder $r4;
        android.os.IIdmap2 $r5, $r6;
        java.lang.Throwable $r7;
        byte b2;

        r0 := @this: android.os.IIdmap2$Stub$Proxy;

        r8 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        z0 := @parameter3: boolean;

        i1 := @parameter4: int;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.IIdmap2");

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r8);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

     label2:
        if z0 == 0 goto label3;

        b2 = 1;

        goto label4;

     label3:
        b2 = 0;

     label4:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(b2);

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i1);

        $r4 = r0.<android.os.IIdmap2$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(4, r2, r3, 0);

        if $z1 != 0 goto label6;

        $r5 = staticinvoke <android.os.IIdmap2$Stub: android.os.IIdmap2 getDefaultImpl()>();

        if $r5 == null goto label6;

        $r6 = staticinvoke <android.os.IIdmap2$Stub: android.os.IIdmap2 getDefaultImpl()>();

        r9 = interfaceinvoke $r6.<android.os.IIdmap2: java.lang.String createIdmap(java.lang.String,java.lang.String,int,boolean,int)>(r8, r1, i0, z0, i1);

     label5:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return r9;

     label6:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

        r10 = virtualinvoke r3.<android.os.Parcel: java.lang.String readString()>();

     label7:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return r10;

     label8:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label4 to label5 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
    }

    public java.lang.String getIdmapPath(java.lang.String, int) throws android.os.RemoteException
    {
        android.os.IIdmap2$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.os.IIdmap2 $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7, r8, r9;

        r0 := @this: android.os.IIdmap2$Stub$Proxy;

        r7 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.IIdmap2");

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r7);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r3 = r0.<android.os.IIdmap2$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.os.IIdmap2$Stub: android.os.IIdmap2 getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.os.IIdmap2$Stub: android.os.IIdmap2 getDefaultImpl()>();

        r8 = interfaceinvoke $r5.<android.os.IIdmap2: java.lang.String getIdmapPath(java.lang.String,int)>(r7, i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r8;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        r9 = virtualinvoke r2.<android.os.Parcel: java.lang.String readString()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public java.lang.String getInterfaceDescriptor()
    {
        android.os.IIdmap2$Stub$Proxy r0;

        r0 := @this: android.os.IIdmap2$Stub$Proxy;

        return "android.os.IIdmap2";
    }

    public boolean removeIdmap(java.lang.String, int) throws android.os.RemoteException
    {
        android.os.IIdmap2$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder r3;
        boolean $z0, z1, z2;
        android.os.IIdmap2 $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7;
        int i0, i1;

        r0 := @this: android.os.IIdmap2$Stub$Proxy;

        r7 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.IIdmap2");

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r7);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        r3 = r0.<android.os.IIdmap2$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(2, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r4 = staticinvoke <android.os.IIdmap2$Stub: android.os.IIdmap2 getDefaultImpl()>();

        if $r4 == null goto label5;

        $r5 = staticinvoke <android.os.IIdmap2$Stub: android.os.IIdmap2 getDefaultImpl()>();

        z2 = interfaceinvoke $r5.<android.os.IIdmap2: boolean removeIdmap(java.lang.String,int)>(r7, i0);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i1 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public boolean verifyIdmap(java.lang.String, java.lang.String, int, boolean, int) throws android.os.RemoteException
    {
        android.os.IIdmap2$Stub$Proxy r0;
        java.lang.String r1, r13;
        int i0, i1, i3;
        android.os.Parcel r2, r3;
        android.os.IBinder $r4;
        boolean $z1, z2, z3, z4;
        android.os.IIdmap2 $r5, $r6;
        java.lang.Throwable $r7, $r8, $r9, $r10, $r11, $r12, r14;
        byte b2;

        r0 := @this: android.os.IIdmap2$Stub$Proxy;

        r13 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        i1 := @parameter2: int;

        z2 := @parameter3: boolean;

        i0 := @parameter4: int;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.IIdmap2");

     label02:
        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r13);

     label03:
        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

     label04:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i1);

     label05:
        if z2 == 0 goto label06;

        b2 = 1;

        goto label07;

     label06:
        b2 = 0;

     label07:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(b2);

     label08:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

     label09:
        $r4 = r0.<android.os.IIdmap2$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(3, r2, r3, 0);

        if $z1 != 0 goto label11;

        $r5 = staticinvoke <android.os.IIdmap2$Stub: android.os.IIdmap2 getDefaultImpl()>();

        if $r5 == null goto label11;

        $r6 = staticinvoke <android.os.IIdmap2$Stub: android.os.IIdmap2 getDefaultImpl()>();

        z3 = interfaceinvoke $r6.<android.os.IIdmap2: boolean verifyIdmap(java.lang.String,java.lang.String,int,boolean,int)>(r13, r1, i1, z2, i0);

     label10:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return z3;

     label11:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

        i3 = virtualinvoke r3.<android.os.Parcel: int readInt()>();

     label12:
        if i3 == 0 goto label13;

        z4 = 1;

        goto label14;

     label13:
        z4 = 0;

     label14:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return z4;

     label15:
        $r10 := @caughtexception;

        r14 = $r10;

        goto label21;

     label16:
        $r8 := @caughtexception;

        r14 = $r8;

        goto label21;

     label17:
        $r12 := @caughtexception;

        r14 = $r12;

        goto label21;

     label18:
        $r11 := @caughtexception;

        r14 = $r11;

        goto label21;

     label19:
        $r7 := @caughtexception;

        r14 = $r7;

        goto label21;

     label20:
        $r9 := @caughtexception;

        r14 = $r9;

     label21:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r14;

        catch java.lang.Throwable from label01 to label02 with label20;
        catch java.lang.Throwable from label02 to label03 with label19;
        catch java.lang.Throwable from label03 to label04 with label18;
        catch java.lang.Throwable from label04 to label05 with label17;
        catch java.lang.Throwable from label07 to label08 with label17;
        catch java.lang.Throwable from label08 to label09 with label16;
        catch java.lang.Throwable from label09 to label10 with label15;
        catch java.lang.Throwable from label11 to label12 with label15;
    }
}
