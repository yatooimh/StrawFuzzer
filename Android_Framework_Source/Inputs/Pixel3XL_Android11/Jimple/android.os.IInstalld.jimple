public interface  android.os.IInstalld extends java.lang.Object implements android.os.IInterface
{
    public static final int FLAG_CLEAR_APP_DATA_KEEP_ART_PROFILES;
    public static final int FLAG_CLEAR_CACHE_ONLY;
    public static final int FLAG_CLEAR_CODE_CACHE_ONLY;
    public static final int FLAG_FORCE;
    public static final int FLAG_FREE_CACHE_NOOP;
    public static final int FLAG_FREE_CACHE_V2;
    public static final int FLAG_FREE_CACHE_V2_DEFY_QUOTA;
    public static final int FLAG_STORAGE_CE;
    public static final int FLAG_STORAGE_DE;
    public static final int FLAG_STORAGE_EXTERNAL;
    public static final int FLAG_USE_QUOTA;

    public abstract void assertFsverityRootHashMatches(java.lang.String, byte[]) throws android.os.RemoteException;

    public abstract void clearAppData(java.lang.String, java.lang.String, int, int, long) throws android.os.RemoteException;

    public abstract void clearAppProfiles(java.lang.String, java.lang.String) throws android.os.RemoteException;

    public abstract boolean compileLayouts(java.lang.String, java.lang.String, java.lang.String, int) throws android.os.RemoteException;

    public abstract boolean copySystemProfile(java.lang.String, int, java.lang.String, java.lang.String) throws android.os.RemoteException;

    public abstract long createAppData(java.lang.String, java.lang.String, int, int, int, java.lang.String, int) throws android.os.RemoteException;

    public abstract long createAppDataBatched(java.lang.String[], java.lang.String[], int, int, int[], java.lang.String[], int[]) throws android.os.RemoteException;

    public abstract void createOatDir(java.lang.String, java.lang.String) throws android.os.RemoteException;

    public abstract boolean createProfileSnapshot(int, java.lang.String, java.lang.String, java.lang.String) throws android.os.RemoteException;

    public abstract void createUserData(java.lang.String, int, int, int) throws android.os.RemoteException;

    public abstract void deleteOdex(java.lang.String, java.lang.String, java.lang.String) throws android.os.RemoteException;

    public abstract void destroyAppData(java.lang.String, java.lang.String, int, int, long) throws android.os.RemoteException;

    public abstract void destroyAppDataSnapshot(java.lang.String, java.lang.String, int, long, int, int) throws android.os.RemoteException;

    public abstract void destroyAppProfiles(java.lang.String) throws android.os.RemoteException;

    public abstract void destroyCeSnapshotsNotSpecified(java.lang.String, int, int[]) throws android.os.RemoteException;

    public abstract void destroyProfileSnapshot(java.lang.String, java.lang.String) throws android.os.RemoteException;

    public abstract void destroyUserData(java.lang.String, int, int) throws android.os.RemoteException;

    public abstract void dexopt(java.lang.String, int, java.lang.String, java.lang.String, int, java.lang.String, int, java.lang.String, java.lang.String, java.lang.String, java.lang.String, boolean, int, java.lang.String, java.lang.String, java.lang.String) throws android.os.RemoteException;

    public abstract boolean dumpProfiles(int, java.lang.String, java.lang.String, java.lang.String) throws android.os.RemoteException;

    public abstract void fixupAppData(java.lang.String, int) throws android.os.RemoteException;

    public abstract void freeCache(java.lang.String, long, long, int) throws android.os.RemoteException;

    public abstract android.os.storage.CrateMetadata[] getAppCrates(java.lang.String, java.lang.String[], int) throws android.os.RemoteException;

    public abstract long[] getAppSize(java.lang.String, java.lang.String[], int, int, int, long[], java.lang.String[]) throws android.os.RemoteException;

    public abstract long[] getExternalSize(java.lang.String, int, int, int[]) throws android.os.RemoteException;

    public abstract android.os.storage.CrateMetadata[] getUserCrates(java.lang.String, int) throws android.os.RemoteException;

    public abstract long[] getUserSize(java.lang.String, int, int, int[]) throws android.os.RemoteException;

    public abstract byte[] hashSecondaryDexFile(java.lang.String, java.lang.String, int, java.lang.String, int) throws android.os.RemoteException;

    public abstract void installApkVerity(java.lang.String, java.io.FileDescriptor, int) throws android.os.RemoteException;

    public abstract void invalidateMounts() throws android.os.RemoteException;

    public abstract boolean isQuotaSupported(java.lang.String) throws android.os.RemoteException;

    public abstract void linkFile(java.lang.String, java.lang.String, java.lang.String) throws android.os.RemoteException;

    public abstract void linkNativeLibraryDirectory(java.lang.String, java.lang.String, java.lang.String, int) throws android.os.RemoteException;

    public abstract boolean mergeProfiles(int, java.lang.String, java.lang.String) throws android.os.RemoteException;

    public abstract void migrateAppData(java.lang.String, java.lang.String, int, int) throws android.os.RemoteException;

    public abstract void migrateLegacyObbData() throws android.os.RemoteException;

    public abstract void moveAb(java.lang.String, java.lang.String, java.lang.String) throws android.os.RemoteException;

    public abstract void moveCompleteApp(java.lang.String, java.lang.String, java.lang.String, int, java.lang.String, int, java.lang.String) throws android.os.RemoteException;

    public abstract void onPrivateVolumeRemoved(java.lang.String) throws android.os.RemoteException;

    public abstract boolean prepareAppProfile(java.lang.String, int, int, java.lang.String, java.lang.String, java.lang.String) throws android.os.RemoteException;

    public abstract boolean reconcileSecondaryDexFile(java.lang.String, java.lang.String, int, java.lang.String[], java.lang.String, int) throws android.os.RemoteException;

    public abstract void restoreAppDataSnapshot(java.lang.String, java.lang.String, int, java.lang.String, int, int, int) throws android.os.RemoteException;

    public abstract void restoreconAppData(java.lang.String, java.lang.String, int, int, int, java.lang.String) throws android.os.RemoteException;

    public abstract void rmPackageDir(java.lang.String) throws android.os.RemoteException;

    public abstract void rmdex(java.lang.String, java.lang.String) throws android.os.RemoteException;

    public abstract void setAppQuota(java.lang.String, int, int, long) throws android.os.RemoteException;

    public abstract long snapshotAppData(java.lang.String, java.lang.String, int, int, int) throws android.os.RemoteException;

    public abstract void tryMountDataMirror(java.lang.String) throws android.os.RemoteException;

    public static void <clinit>()
    {
        <android.os.IInstalld: int FLAG_USE_QUOTA> = 4096;

        <android.os.IInstalld: int FLAG_STORAGE_EXTERNAL> = 4;

        <android.os.IInstalld: int FLAG_STORAGE_DE> = 1;

        <android.os.IInstalld: int FLAG_STORAGE_CE> = 2;

        <android.os.IInstalld: int FLAG_FREE_CACHE_V2_DEFY_QUOTA> = 512;

        <android.os.IInstalld: int FLAG_FREE_CACHE_V2> = 256;

        <android.os.IInstalld: int FLAG_FREE_CACHE_NOOP> = 1024;

        <android.os.IInstalld: int FLAG_FORCE> = 8192;

        <android.os.IInstalld: int FLAG_CLEAR_CODE_CACHE_ONLY> = 32;

        <android.os.IInstalld: int FLAG_CLEAR_CACHE_ONLY> = 16;

        <android.os.IInstalld: int FLAG_CLEAR_APP_DATA_KEEP_ART_PROFILES> = 131072;

        return;
    }
}
