public abstract class android.os.INetworkManagementService$Stub extends android.os.Binder implements android.os.INetworkManagementService
{
    private static final java.lang.String DESCRIPTOR;
    static final int TRANSACTION_addIdleTimer;
    static final int TRANSACTION_addInterfaceToLocalNetwork;
    static final int TRANSACTION_addInterfaceToNetwork;
    static final int TRANSACTION_addLegacyRouteForNetId;
    static final int TRANSACTION_addRoute;
    static final int TRANSACTION_addVpnUidRanges;
    static final int TRANSACTION_allowProtect;
    static final int TRANSACTION_clearDefaultNetId;
    static final int TRANSACTION_clearInterfaceAddresses;
    static final int TRANSACTION_denyProtect;
    static final int TRANSACTION_disableIpv6;
    static final int TRANSACTION_disableNat;
    static final int TRANSACTION_enableIpv6;
    static final int TRANSACTION_enableNat;
    static final int TRANSACTION_getDnsForwarders;
    static final int TRANSACTION_getInterfaceConfig;
    static final int TRANSACTION_getIpForwardingEnabled;
    static final int TRANSACTION_getNetworkStatsTethering;
    static final int TRANSACTION_isBandwidthControlEnabled;
    static final int TRANSACTION_isFirewallEnabled;
    static final int TRANSACTION_isNetworkActive;
    static final int TRANSACTION_isNetworkRestricted;
    static final int TRANSACTION_isTetheringStarted;
    static final int TRANSACTION_listInterfaces;
    static final int TRANSACTION_listTetheredInterfaces;
    static final int TRANSACTION_registerNetworkActivityListener;
    static final int TRANSACTION_registerObserver;
    static final int TRANSACTION_registerTetheringStatsProvider;
    static final int TRANSACTION_removeIdleTimer;
    static final int TRANSACTION_removeInterfaceAlert;
    static final int TRANSACTION_removeInterfaceFromLocalNetwork;
    static final int TRANSACTION_removeInterfaceFromNetwork;
    static final int TRANSACTION_removeInterfaceQuota;
    static final int TRANSACTION_removeRoute;
    static final int TRANSACTION_removeRoutesFromLocalNetwork;
    static final int TRANSACTION_removeVpnUidRanges;
    static final int TRANSACTION_setAllowOnlyVpnForUids;
    static final int TRANSACTION_setDataSaverModeEnabled;
    static final int TRANSACTION_setDefaultNetId;
    static final int TRANSACTION_setDnsForwarders;
    static final int TRANSACTION_setFirewallChainEnabled;
    static final int TRANSACTION_setFirewallEnabled;
    static final int TRANSACTION_setFirewallInterfaceRule;
    static final int TRANSACTION_setFirewallUidRule;
    static final int TRANSACTION_setFirewallUidRules;
    static final int TRANSACTION_setGlobalAlert;
    static final int TRANSACTION_setIPv6AddrGenMode;
    static final int TRANSACTION_setInterfaceAlert;
    static final int TRANSACTION_setInterfaceConfig;
    static final int TRANSACTION_setInterfaceDown;
    static final int TRANSACTION_setInterfaceIpv6PrivacyExtensions;
    static final int TRANSACTION_setInterfaceQuota;
    static final int TRANSACTION_setInterfaceUp;
    static final int TRANSACTION_setIpForwardingEnabled;
    static final int TRANSACTION_setMtu;
    static final int TRANSACTION_setNetworkPermission;
    static final int TRANSACTION_setUidCleartextNetworkPolicy;
    static final int TRANSACTION_setUidMeteredNetworkBlacklist;
    static final int TRANSACTION_setUidMeteredNetworkWhitelist;
    static final int TRANSACTION_shutdown;
    static final int TRANSACTION_startInterfaceForwarding;
    static final int TRANSACTION_startTethering;
    static final int TRANSACTION_startTetheringWithConfiguration;
    static final int TRANSACTION_stopInterfaceForwarding;
    static final int TRANSACTION_stopTethering;
    static final int TRANSACTION_tetherInterface;
    static final int TRANSACTION_tetherLimitReached;
    static final int TRANSACTION_unregisterNetworkActivityListener;
    static final int TRANSACTION_unregisterObserver;
    static final int TRANSACTION_unregisterTetheringStatsProvider;
    static final int TRANSACTION_untetherInterface;

    public void <init>()
    {
        android.os.INetworkManagementService$Stub r0;

        r0 := @this: android.os.INetworkManagementService$Stub;

        specialinvoke r0.<android.os.Binder: void <init>()>();

        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void attachInterface(android.os.IInterface,java.lang.String)>(r0, "android.os.INetworkManagementService");

        return;
    }

    public static android.os.INetworkManagementService asInterface(android.os.IBinder)
    {
        android.os.IBinder r0;
        android.os.IInterface r1;
        android.os.INetworkManagementService$Stub$Proxy $r2;
        boolean $z0;
        android.os.INetworkManagementService $r3;

        r0 := @parameter0: android.os.IBinder;

        if r0 != null goto label1;

        return null;

     label1:
        r1 = interfaceinvoke r0.<android.os.IBinder: android.os.IInterface queryLocalInterface(java.lang.String)>("android.os.INetworkManagementService");

        if r1 == null goto label2;

        $z0 = r1 instanceof android.os.INetworkManagementService;

        if $z0 == 0 goto label2;

        $r3 = (android.os.INetworkManagementService) r1;

        return $r3;

     label2:
        $r2 = new android.os.INetworkManagementService$Stub$Proxy;

        specialinvoke $r2.<android.os.INetworkManagementService$Stub$Proxy: void <init>(android.os.IBinder)>(r0);

        return $r2;
    }

    public static android.os.INetworkManagementService getDefaultImpl()
    {
        android.os.INetworkManagementService $r0;

        $r0 = <android.os.INetworkManagementService$Stub$Proxy: android.os.INetworkManagementService sDefaultImpl>;

        return $r0;
    }

    public static java.lang.String getDefaultTransactionName(int)
    {
        int i0;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 1: goto label72;
            case 2: goto label71;
            case 3: goto label70;
            case 4: goto label69;
            case 5: goto label68;
            case 6: goto label67;
            case 7: goto label66;
            case 8: goto label65;
            case 9: goto label64;
            case 10: goto label63;
            case 11: goto label62;
            case 12: goto label61;
            case 13: goto label60;
            case 14: goto label59;
            case 15: goto label58;
            case 16: goto label57;
            case 17: goto label56;
            case 18: goto label55;
            case 19: goto label54;
            case 20: goto label53;
            case 21: goto label52;
            case 22: goto label51;
            case 23: goto label50;
            case 24: goto label49;
            case 25: goto label48;
            case 26: goto label47;
            case 27: goto label46;
            case 28: goto label45;
            case 29: goto label44;
            case 30: goto label43;
            case 31: goto label42;
            case 32: goto label41;
            case 33: goto label40;
            case 34: goto label39;
            case 35: goto label38;
            case 36: goto label37;
            case 37: goto label36;
            case 38: goto label35;
            case 39: goto label34;
            case 40: goto label33;
            case 41: goto label32;
            case 42: goto label31;
            case 43: goto label30;
            case 44: goto label29;
            case 45: goto label28;
            case 46: goto label27;
            case 47: goto label26;
            case 48: goto label25;
            case 49: goto label24;
            case 50: goto label23;
            case 51: goto label22;
            case 52: goto label21;
            case 53: goto label20;
            case 54: goto label19;
            case 55: goto label18;
            case 56: goto label17;
            case 57: goto label16;
            case 58: goto label15;
            case 59: goto label14;
            case 60: goto label13;
            case 61: goto label12;
            case 62: goto label11;
            case 63: goto label10;
            case 64: goto label09;
            case 65: goto label08;
            case 66: goto label07;
            case 67: goto label06;
            case 68: goto label05;
            case 69: goto label04;
            case 70: goto label03;
            case 71: goto label02;
            default: goto label01;
        };

     label01:
        return null;

     label02:
        return "isNetworkRestricted";

     label03:
        return "setAllowOnlyVpnForUids";

     label04:
        return "removeRoutesFromLocalNetwork";

     label05:
        return "removeInterfaceFromLocalNetwork";

     label06:
        return "addInterfaceToLocalNetwork";

     label07:
        return "denyProtect";

     label08:
        return "allowProtect";

     label09:
        return "setNetworkPermission";

     label10:
        return "clearDefaultNetId";

     label11:
        return "setDefaultNetId";

     label12:
        return "addLegacyRouteForNetId";

     label13:
        return "removeInterfaceFromNetwork";

     label14:
        return "addInterfaceToNetwork";

     label15:
        return "isNetworkActive";

     label16:
        return "unregisterNetworkActivityListener";

     label17:
        return "registerNetworkActivityListener";

     label18:
        return "removeVpnUidRanges";

     label19:
        return "addVpnUidRanges";

     label20:
        return "setFirewallChainEnabled";

     label21:
        return "setFirewallUidRules";

     label22:
        return "setFirewallUidRule";

     label23:
        return "setFirewallInterfaceRule";

     label24:
        return "isFirewallEnabled";

     label25:
        return "setFirewallEnabled";

     label26:
        return "removeIdleTimer";

     label27:
        return "addIdleTimer";

     label28:
        return "isBandwidthControlEnabled";

     label29:
        return "setUidCleartextNetworkPolicy";

     label30:
        return "setDataSaverModeEnabled";

     label31:
        return "setUidMeteredNetworkWhitelist";

     label32:
        return "setUidMeteredNetworkBlacklist";

     label33:
        return "setGlobalAlert";

     label34:
        return "removeInterfaceAlert";

     label35:
        return "setInterfaceAlert";

     label36:
        return "removeInterfaceQuota";

     label37:
        return "setInterfaceQuota";

     label38:
        return "getNetworkStatsTethering";

     label39:
        return "tetherLimitReached";

     label40:
        return "unregisterTetheringStatsProvider";

     label41:
        return "registerTetheringStatsProvider";

     label42:
        return "disableNat";

     label43:
        return "enableNat";

     label44:
        return "stopInterfaceForwarding";

     label45:
        return "startInterfaceForwarding";

     label46:
        return "getDnsForwarders";

     label47:
        return "setDnsForwarders";

     label48:
        return "listTetheredInterfaces";

     label49:
        return "untetherInterface";

     label50:
        return "tetherInterface";

     label51:
        return "isTetheringStarted";

     label52:
        return "stopTethering";

     label53:
        return "startTetheringWithConfiguration";

     label54:
        return "startTethering";

     label55:
        return "setIpForwardingEnabled";

     label56:
        return "getIpForwardingEnabled";

     label57:
        return "shutdown";

     label58:
        return "setMtu";

     label59:
        return "removeRoute";

     label60:
        return "addRoute";

     label61:
        return "setIPv6AddrGenMode";

     label62:
        return "enableIpv6";

     label63:
        return "disableIpv6";

     label64:
        return "setInterfaceIpv6PrivacyExtensions";

     label65:
        return "setInterfaceUp";

     label66:
        return "setInterfaceDown";

     label67:
        return "clearInterfaceAddresses";

     label68:
        return "setInterfaceConfig";

     label69:
        return "getInterfaceConfig";

     label70:
        return "listInterfaces";

     label71:
        return "unregisterObserver";

     label72:
        return "registerObserver";
    }

    public static boolean setDefaultImpl(android.os.INetworkManagementService)
    {
        android.os.INetworkManagementService r0, $r1;
        java.lang.IllegalStateException $r2;

        r0 := @parameter0: android.os.INetworkManagementService;

        $r1 = <android.os.INetworkManagementService$Stub$Proxy: android.os.INetworkManagementService sDefaultImpl>;

        if $r1 != null goto label2;

        if r0 == null goto label1;

        <android.os.INetworkManagementService$Stub$Proxy: android.os.INetworkManagementService sDefaultImpl> = r0;

        return 1;

     label1:
        return 0;

     label2:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("setDefaultImpl() called twice");

        throw $r2;
    }

    public android.os.IBinder asBinder()
    {
        android.os.INetworkManagementService$Stub r0;

        r0 := @this: android.os.INetworkManagementService$Stub;

        return r0;
    }

    public java.lang.String getTransactionName(int)
    {
        android.os.INetworkManagementService$Stub r0;
        int i0;
        java.lang.String $r1;

        r0 := @this: android.os.INetworkManagementService$Stub;

        i0 := @parameter0: int;

        $r1 = staticinvoke <android.os.INetworkManagementService$Stub: java.lang.String getDefaultTransactionName(int)>(i0);

        return $r1;
    }

    public boolean onTransact(int, android.os.Parcel, android.os.Parcel, int) throws android.os.RemoteException
    {
        android.os.INetworkManagementService$Stub r0;
        android.os.Parcel r1, r73;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, i41, i42, i43, i44, i45, i46, i47, i48, i49, i50, i51, i52, i53, i54, i55;
        android.os.Parcelable$Creator $r2, $r5, $r9, $r11, $r19, $r22, $r49, $r56, $r58, $r66;
        java.lang.Object[] $r3, $r20, $r23;
        android.net.UidRange[] $r4, $r21, $r24;
        java.util.ArrayList $r6, $r10;
        java.lang.String $r7, $r8, $r13, $r14, $r27, $r28, $r29, $r30, $r31, $r32, $r39, $r40, $r41, $r42, $r43, $r44, $r45, $r46, $r47, $r51, $r52, $r55, $r60, $r61, $r62, $r63, $r64, $r65, $r68, r75, r82, r83;
        java.lang.Object $r12, $r50, $r57, $r59, $r67;
        android.os.IBinder $r15, $r17, $r33, $r35, $r37, $r69, $r71;
        android.os.INetworkActivityListener $r16, $r18;
        int[] $r25, $r26;
        long $l28, $l29, $l30;
        android.net.ITetheringStatsProvider $r34, $r36, $r38;
        java.lang.String[] $r48, $r53, $r54, r77, r79, r86;
        android.net.INetworkManagementEventObserver $r70, $r72;
        boolean $z9, z10, z11, z12, z13, z14, z15, z16, z17, z18, z19, z20, z21, z22, z23, z24, z25, z26;
        android.net.RouteInfo r74, r80, r81;
        android.net.NetworkStats r76;
        android.net.Network r78;
        android.net.InterfaceConfiguration r84, r85;

        r0 := @this: android.os.INetworkManagementService$Stub;

        i41 := @parameter0: int;

        r73 := @parameter1: android.os.Parcel;

        r1 := @parameter2: android.os.Parcel;

        i0 := @parameter3: int;

        if i41 == 1598968902 goto label97;

        z10 = 0;

        tableswitch(i41)
        {
            case 1: goto label96;
            case 2: goto label95;
            case 3: goto label94;
            case 4: goto label91;
            case 5: goto label88;
            case 6: goto label87;
            case 7: goto label86;
            case 8: goto label85;
            case 9: goto label83;
            case 10: goto label82;
            case 11: goto label81;
            case 12: goto label80;
            case 13: goto label77;
            case 14: goto label74;
            case 15: goto label73;
            case 16: goto label72;
            case 17: goto label71;
            case 18: goto label69;
            case 19: goto label68;
            case 20: goto label66;
            case 21: goto label65;
            case 22: goto label64;
            case 23: goto label63;
            case 24: goto label62;
            case 25: goto label61;
            case 26: goto label58;
            case 27: goto label57;
            case 28: goto label56;
            case 29: goto label55;
            case 30: goto label54;
            case 31: goto label53;
            case 32: goto label52;
            case 33: goto label51;
            case 34: goto label50;
            case 35: goto label47;
            case 36: goto label46;
            case 37: goto label45;
            case 38: goto label44;
            case 39: goto label43;
            case 40: goto label42;
            case 41: goto label40;
            case 42: goto label38;
            case 43: goto label36;
            case 44: goto label35;
            case 45: goto label34;
            case 46: goto label33;
            case 47: goto label32;
            case 48: goto label30;
            case 49: goto label29;
            case 50: goto label27;
            case 51: goto label26;
            case 52: goto label25;
            case 53: goto label23;
            case 54: goto label22;
            case 55: goto label21;
            case 56: goto label20;
            case 57: goto label19;
            case 58: goto label18;
            case 59: goto label17;
            case 60: goto label16;
            case 61: goto label13;
            case 62: goto label12;
            case 63: goto label11;
            case 64: goto label10;
            case 65: goto label09;
            case 66: goto label08;
            case 67: goto label07;
            case 68: goto label06;
            case 69: goto label05;
            case 70: goto label03;
            case 71: goto label02;
            default: goto label01;
        };

     label01:
        $z9 = specialinvoke r0.<android.os.Binder: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>(i41, r73, r1, i0);

        return $z9;

     label02:
        virtualinvoke r73.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        $i1 = virtualinvoke r73.<android.os.Parcel: int readInt()>();

        z11 = virtualinvoke r0.<android.os.INetworkManagementService$Stub: boolean isNetworkRestricted(int)>($i1);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i49 = (int) z11;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i49);

        return 1;

     label03:
        virtualinvoke r73.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        $i2 = virtualinvoke r73.<android.os.Parcel: int readInt()>();

        if $i2 == 0 goto label04;

        z10 = 1;

     label04:
        $r2 = <android.net.UidRange: android.os.Parcelable$Creator CREATOR>;

        $r3 = virtualinvoke r73.<android.os.Parcel: java.lang.Object[] createTypedArray(android.os.Parcelable$Creator)>($r2);

        $r4 = (android.net.UidRange[]) $r3;

        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void setAllowOnlyVpnForUids(boolean,android.net.UidRange[])>(z10, $r4);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label05:
        virtualinvoke r73.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        $r5 = <android.net.RouteInfo: android.os.Parcelable$Creator CREATOR>;

        $r6 = virtualinvoke r73.<android.os.Parcel: java.util.ArrayList createTypedArrayList(android.os.Parcelable$Creator)>($r5);

        i42 = virtualinvoke r0.<android.os.INetworkManagementService$Stub: int removeRoutesFromLocalNetwork(java.util.List)>($r6);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i42);

        return 1;

     label06:
        virtualinvoke r73.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        $r7 = virtualinvoke r73.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void removeInterfaceFromLocalNetwork(java.lang.String)>($r7);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label07:
        virtualinvoke r73.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        $r8 = virtualinvoke r73.<android.os.Parcel: java.lang.String readString()>();

        $r9 = <android.net.RouteInfo: android.os.Parcelable$Creator CREATOR>;

        $r10 = virtualinvoke r73.<android.os.Parcel: java.util.ArrayList createTypedArrayList(android.os.Parcelable$Creator)>($r9);

        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void addInterfaceToLocalNetwork(java.lang.String,java.util.List)>($r8, $r10);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label08:
        virtualinvoke r73.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        $i3 = virtualinvoke r73.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void denyProtect(int)>($i3);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label09:
        virtualinvoke r73.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        $i4 = virtualinvoke r73.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void allowProtect(int)>($i4);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label10:
        virtualinvoke r73.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        $i5 = virtualinvoke r73.<android.os.Parcel: int readInt()>();

        $i6 = virtualinvoke r73.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void setNetworkPermission(int,int)>($i5, $i6);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label11:
        virtualinvoke r73.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void clearDefaultNetId()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label12:
        virtualinvoke r73.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        $i7 = virtualinvoke r73.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void setDefaultNetId(int)>($i7);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label13:
        virtualinvoke r73.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        i43 = virtualinvoke r73.<android.os.Parcel: int readInt()>();

        $i8 = virtualinvoke r73.<android.os.Parcel: int readInt()>();

        if $i8 == 0 goto label14;

        $r11 = <android.net.RouteInfo: android.os.Parcelable$Creator CREATOR>;

        $r12 = interfaceinvoke $r11.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r73);

        r74 = (android.net.RouteInfo) $r12;

        goto label15;

     label14:
        r74 = null;

     label15:
        $i9 = virtualinvoke r73.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void addLegacyRouteForNetId(int,android.net.RouteInfo,int)>(i43, r74, $i9);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label16:
        virtualinvoke r73.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        $r13 = virtualinvoke r73.<android.os.Parcel: java.lang.String readString()>();

        $i10 = virtualinvoke r73.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void removeInterfaceFromNetwork(java.lang.String,int)>($r13, $i10);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label17:
        virtualinvoke r73.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        $r14 = virtualinvoke r73.<android.os.Parcel: java.lang.String readString()>();

        $i11 = virtualinvoke r73.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void addInterfaceToNetwork(java.lang.String,int)>($r14, $i11);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label18:
        virtualinvoke r73.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        z12 = virtualinvoke r0.<android.os.INetworkManagementService$Stub: boolean isNetworkActive()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i50 = (int) z12;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i50);

        return 1;

     label19:
        virtualinvoke r73.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        $r15 = virtualinvoke r73.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r16 = staticinvoke <android.os.INetworkActivityListener$Stub: android.os.INetworkActivityListener asInterface(android.os.IBinder)>($r15);

        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void unregisterNetworkActivityListener(android.os.INetworkActivityListener)>($r16);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label20:
        virtualinvoke r73.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        $r17 = virtualinvoke r73.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r18 = staticinvoke <android.os.INetworkActivityListener$Stub: android.os.INetworkActivityListener asInterface(android.os.IBinder)>($r17);

        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void registerNetworkActivityListener(android.os.INetworkActivityListener)>($r18);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label21:
        virtualinvoke r73.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        $i12 = virtualinvoke r73.<android.os.Parcel: int readInt()>();

        $r19 = <android.net.UidRange: android.os.Parcelable$Creator CREATOR>;

        $r20 = virtualinvoke r73.<android.os.Parcel: java.lang.Object[] createTypedArray(android.os.Parcelable$Creator)>($r19);

        $r21 = (android.net.UidRange[]) $r20;

        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void removeVpnUidRanges(int,android.net.UidRange[])>($i12, $r21);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label22:
        virtualinvoke r73.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        $i13 = virtualinvoke r73.<android.os.Parcel: int readInt()>();

        $r22 = <android.net.UidRange: android.os.Parcelable$Creator CREATOR>;

        $r23 = virtualinvoke r73.<android.os.Parcel: java.lang.Object[] createTypedArray(android.os.Parcelable$Creator)>($r22);

        $r24 = (android.net.UidRange[]) $r23;

        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void addVpnUidRanges(int,android.net.UidRange[])>($i13, $r24);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label23:
        virtualinvoke r73.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        i44 = virtualinvoke r73.<android.os.Parcel: int readInt()>();

        z13 = 0;

        $i14 = virtualinvoke r73.<android.os.Parcel: int readInt()>();

        if $i14 == 0 goto label24;

        z13 = 1;

     label24:
        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void setFirewallChainEnabled(int,boolean)>(i44, z13);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label25:
        virtualinvoke r73.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        $i15 = virtualinvoke r73.<android.os.Parcel: int readInt()>();

        $r25 = virtualinvoke r73.<android.os.Parcel: int[] createIntArray()>();

        $r26 = virtualinvoke r73.<android.os.Parcel: int[] createIntArray()>();

        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void setFirewallUidRules(int,int[],int[])>($i15, $r25, $r26);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label26:
        virtualinvoke r73.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        $i16 = virtualinvoke r73.<android.os.Parcel: int readInt()>();

        $i17 = virtualinvoke r73.<android.os.Parcel: int readInt()>();

        $i18 = virtualinvoke r73.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void setFirewallUidRule(int,int,int)>($i16, $i17, $i18);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label27:
        virtualinvoke r73.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        r75 = virtualinvoke r73.<android.os.Parcel: java.lang.String readString()>();

        z14 = 0;

        $i19 = virtualinvoke r73.<android.os.Parcel: int readInt()>();

        if $i19 == 0 goto label28;

        z14 = 1;

     label28:
        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void setFirewallInterfaceRule(java.lang.String,boolean)>(r75, z14);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label29:
        virtualinvoke r73.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        z15 = virtualinvoke r0.<android.os.INetworkManagementService$Stub: boolean isFirewallEnabled()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i51 = (int) z15;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i51);

        return 1;

     label30:
        virtualinvoke r73.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        z16 = 0;

        $i20 = virtualinvoke r73.<android.os.Parcel: int readInt()>();

        if $i20 == 0 goto label31;

        z16 = 1;

     label31:
        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void setFirewallEnabled(boolean)>(z16);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label32:
        virtualinvoke r73.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        $r27 = virtualinvoke r73.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void removeIdleTimer(java.lang.String)>($r27);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label33:
        virtualinvoke r73.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        $r28 = virtualinvoke r73.<android.os.Parcel: java.lang.String readString()>();

        $i21 = virtualinvoke r73.<android.os.Parcel: int readInt()>();

        $i22 = virtualinvoke r73.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void addIdleTimer(java.lang.String,int,int)>($r28, $i21, $i22);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label34:
        virtualinvoke r73.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        z17 = virtualinvoke r0.<android.os.INetworkManagementService$Stub: boolean isBandwidthControlEnabled()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i52 = (int) z17;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i52);

        return 1;

     label35:
        virtualinvoke r73.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        $i23 = virtualinvoke r73.<android.os.Parcel: int readInt()>();

        $i24 = virtualinvoke r73.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void setUidCleartextNetworkPolicy(int,int)>($i23, $i24);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label36:
        virtualinvoke r73.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        z18 = 0;

        $i25 = virtualinvoke r73.<android.os.Parcel: int readInt()>();

        if $i25 == 0 goto label37;

        z18 = 1;

     label37:
        z19 = virtualinvoke r0.<android.os.INetworkManagementService$Stub: boolean setDataSaverModeEnabled(boolean)>(z18);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i53 = (int) z19;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i53);

        return 1;

     label38:
        virtualinvoke r73.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        i45 = virtualinvoke r73.<android.os.Parcel: int readInt()>();

        z20 = 0;

        $i26 = virtualinvoke r73.<android.os.Parcel: int readInt()>();

        if $i26 == 0 goto label39;

        z20 = 1;

     label39:
        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void setUidMeteredNetworkWhitelist(int,boolean)>(i45, z20);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label40:
        virtualinvoke r73.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        i46 = virtualinvoke r73.<android.os.Parcel: int readInt()>();

        z21 = 0;

        $i27 = virtualinvoke r73.<android.os.Parcel: int readInt()>();

        if $i27 == 0 goto label41;

        z21 = 1;

     label41:
        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void setUidMeteredNetworkBlacklist(int,boolean)>(i46, z21);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label42:
        virtualinvoke r73.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        $l28 = virtualinvoke r73.<android.os.Parcel: long readLong()>();

        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void setGlobalAlert(long)>($l28);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label43:
        virtualinvoke r73.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        $r29 = virtualinvoke r73.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void removeInterfaceAlert(java.lang.String)>($r29);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label44:
        virtualinvoke r73.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        $r30 = virtualinvoke r73.<android.os.Parcel: java.lang.String readString()>();

        $l29 = virtualinvoke r73.<android.os.Parcel: long readLong()>();

        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void setInterfaceAlert(java.lang.String,long)>($r30, $l29);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label45:
        virtualinvoke r73.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        $r31 = virtualinvoke r73.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void removeInterfaceQuota(java.lang.String)>($r31);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label46:
        virtualinvoke r73.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        $r32 = virtualinvoke r73.<android.os.Parcel: java.lang.String readString()>();

        $l30 = virtualinvoke r73.<android.os.Parcel: long readLong()>();

        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void setInterfaceQuota(java.lang.String,long)>($r32, $l30);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label47:
        virtualinvoke r73.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        $i31 = virtualinvoke r73.<android.os.Parcel: int readInt()>();

        r76 = virtualinvoke r0.<android.os.INetworkManagementService$Stub: android.net.NetworkStats getNetworkStatsTethering(int)>($i31);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        if r76 == null goto label48;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r76.<android.net.NetworkStats: void writeToParcel(android.os.Parcel,int)>(r1, 1);

        goto label49;

     label48:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label49:
        return 1;

     label50:
        virtualinvoke r73.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        $r33 = virtualinvoke r73.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r34 = staticinvoke <android.net.ITetheringStatsProvider$Stub: android.net.ITetheringStatsProvider asInterface(android.os.IBinder)>($r33);

        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void tetherLimitReached(android.net.ITetheringStatsProvider)>($r34);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label51:
        virtualinvoke r73.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        $r35 = virtualinvoke r73.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r36 = staticinvoke <android.net.ITetheringStatsProvider$Stub: android.net.ITetheringStatsProvider asInterface(android.os.IBinder)>($r35);

        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void unregisterTetheringStatsProvider(android.net.ITetheringStatsProvider)>($r36);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label52:
        virtualinvoke r73.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        $r37 = virtualinvoke r73.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r38 = staticinvoke <android.net.ITetheringStatsProvider$Stub: android.net.ITetheringStatsProvider asInterface(android.os.IBinder)>($r37);

        $r39 = virtualinvoke r73.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void registerTetheringStatsProvider(android.net.ITetheringStatsProvider,java.lang.String)>($r38, $r39);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label53:
        virtualinvoke r73.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        $r40 = virtualinvoke r73.<android.os.Parcel: java.lang.String readString()>();

        $r41 = virtualinvoke r73.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void disableNat(java.lang.String,java.lang.String)>($r40, $r41);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label54:
        virtualinvoke r73.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        $r42 = virtualinvoke r73.<android.os.Parcel: java.lang.String readString()>();

        $r43 = virtualinvoke r73.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void enableNat(java.lang.String,java.lang.String)>($r42, $r43);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label55:
        virtualinvoke r73.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        $r44 = virtualinvoke r73.<android.os.Parcel: java.lang.String readString()>();

        $r45 = virtualinvoke r73.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void stopInterfaceForwarding(java.lang.String,java.lang.String)>($r44, $r45);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label56:
        virtualinvoke r73.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        $r46 = virtualinvoke r73.<android.os.Parcel: java.lang.String readString()>();

        $r47 = virtualinvoke r73.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void startInterfaceForwarding(java.lang.String,java.lang.String)>($r46, $r47);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label57:
        virtualinvoke r73.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        r77 = virtualinvoke r0.<android.os.INetworkManagementService$Stub: java.lang.String[] getDnsForwarders()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeStringArray(java.lang.String[])>(r77);

        return 1;

     label58:
        virtualinvoke r73.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        $i32 = virtualinvoke r73.<android.os.Parcel: int readInt()>();

        if $i32 == 0 goto label59;

        $r49 = <android.net.Network: android.os.Parcelable$Creator CREATOR>;

        $r50 = interfaceinvoke $r49.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r73);

        r78 = (android.net.Network) $r50;

        goto label60;

     label59:
        r78 = null;

     label60:
        $r48 = virtualinvoke r73.<android.os.Parcel: java.lang.String[] createStringArray()>();

        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void setDnsForwarders(android.net.Network,java.lang.String[])>(r78, $r48);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label61:
        virtualinvoke r73.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        r79 = virtualinvoke r0.<android.os.INetworkManagementService$Stub: java.lang.String[] listTetheredInterfaces()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeStringArray(java.lang.String[])>(r79);

        return 1;

     label62:
        virtualinvoke r73.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        $r51 = virtualinvoke r73.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void untetherInterface(java.lang.String)>($r51);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label63:
        virtualinvoke r73.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        $r52 = virtualinvoke r73.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void tetherInterface(java.lang.String)>($r52);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label64:
        virtualinvoke r73.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        z22 = virtualinvoke r0.<android.os.INetworkManagementService$Stub: boolean isTetheringStarted()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i54 = (int) z22;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i54);

        return 1;

     label65:
        virtualinvoke r73.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void stopTethering()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label66:
        virtualinvoke r73.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        z23 = 0;

        $i33 = virtualinvoke r73.<android.os.Parcel: int readInt()>();

        if $i33 == 0 goto label67;

        z23 = 1;

     label67:
        $r53 = virtualinvoke r73.<android.os.Parcel: java.lang.String[] createStringArray()>();

        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void startTetheringWithConfiguration(boolean,java.lang.String[])>(z23, $r53);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label68:
        virtualinvoke r73.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        $r54 = virtualinvoke r73.<android.os.Parcel: java.lang.String[] createStringArray()>();

        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void startTethering(java.lang.String[])>($r54);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label69:
        virtualinvoke r73.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        z24 = 0;

        $i34 = virtualinvoke r73.<android.os.Parcel: int readInt()>();

        if $i34 == 0 goto label70;

        z24 = 1;

     label70:
        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void setIpForwardingEnabled(boolean)>(z24);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label71:
        virtualinvoke r73.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        z25 = virtualinvoke r0.<android.os.INetworkManagementService$Stub: boolean getIpForwardingEnabled()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i55 = (int) z25;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i55);

        return 1;

     label72:
        virtualinvoke r73.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void shutdown()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label73:
        virtualinvoke r73.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        $r55 = virtualinvoke r73.<android.os.Parcel: java.lang.String readString()>();

        $i35 = virtualinvoke r73.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void setMtu(java.lang.String,int)>($r55, $i35);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label74:
        virtualinvoke r73.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        i47 = virtualinvoke r73.<android.os.Parcel: int readInt()>();

        $i36 = virtualinvoke r73.<android.os.Parcel: int readInt()>();

        if $i36 == 0 goto label75;

        $r56 = <android.net.RouteInfo: android.os.Parcelable$Creator CREATOR>;

        $r57 = interfaceinvoke $r56.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r73);

        r80 = (android.net.RouteInfo) $r57;

        goto label76;

     label75:
        r80 = null;

     label76:
        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void removeRoute(int,android.net.RouteInfo)>(i47, r80);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label77:
        virtualinvoke r73.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        i48 = virtualinvoke r73.<android.os.Parcel: int readInt()>();

        $i37 = virtualinvoke r73.<android.os.Parcel: int readInt()>();

        if $i37 == 0 goto label78;

        $r58 = <android.net.RouteInfo: android.os.Parcelable$Creator CREATOR>;

        $r59 = interfaceinvoke $r58.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r73);

        r81 = (android.net.RouteInfo) $r59;

        goto label79;

     label78:
        r81 = null;

     label79:
        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void addRoute(int,android.net.RouteInfo)>(i48, r81);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label80:
        virtualinvoke r73.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        $r60 = virtualinvoke r73.<android.os.Parcel: java.lang.String readString()>();

        $i38 = virtualinvoke r73.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void setIPv6AddrGenMode(java.lang.String,int)>($r60, $i38);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label81:
        virtualinvoke r73.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        $r61 = virtualinvoke r73.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void enableIpv6(java.lang.String)>($r61);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label82:
        virtualinvoke r73.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        $r62 = virtualinvoke r73.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void disableIpv6(java.lang.String)>($r62);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label83:
        virtualinvoke r73.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        r82 = virtualinvoke r73.<android.os.Parcel: java.lang.String readString()>();

        z26 = 0;

        $i39 = virtualinvoke r73.<android.os.Parcel: int readInt()>();

        if $i39 == 0 goto label84;

        z26 = 1;

     label84:
        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void setInterfaceIpv6PrivacyExtensions(java.lang.String,boolean)>(r82, z26);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label85:
        virtualinvoke r73.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        $r63 = virtualinvoke r73.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void setInterfaceUp(java.lang.String)>($r63);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label86:
        virtualinvoke r73.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        $r64 = virtualinvoke r73.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void setInterfaceDown(java.lang.String)>($r64);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label87:
        virtualinvoke r73.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        $r65 = virtualinvoke r73.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void clearInterfaceAddresses(java.lang.String)>($r65);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label88:
        virtualinvoke r73.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        r83 = virtualinvoke r73.<android.os.Parcel: java.lang.String readString()>();

        $i40 = virtualinvoke r73.<android.os.Parcel: int readInt()>();

        if $i40 == 0 goto label89;

        $r66 = <android.net.InterfaceConfiguration: android.os.Parcelable$Creator CREATOR>;

        $r67 = interfaceinvoke $r66.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r73);

        r84 = (android.net.InterfaceConfiguration) $r67;

        goto label90;

     label89:
        r84 = null;

     label90:
        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void setInterfaceConfig(java.lang.String,android.net.InterfaceConfiguration)>(r83, r84);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label91:
        virtualinvoke r73.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        $r68 = virtualinvoke r73.<android.os.Parcel: java.lang.String readString()>();

        r85 = virtualinvoke r0.<android.os.INetworkManagementService$Stub: android.net.InterfaceConfiguration getInterfaceConfig(java.lang.String)>($r68);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        if r85 == null goto label92;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r85.<android.net.InterfaceConfiguration: void writeToParcel(android.os.Parcel,int)>(r1, 1);

        goto label93;

     label92:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label93:
        return 1;

     label94:
        virtualinvoke r73.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        r86 = virtualinvoke r0.<android.os.INetworkManagementService$Stub: java.lang.String[] listInterfaces()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeStringArray(java.lang.String[])>(r86);

        return 1;

     label95:
        virtualinvoke r73.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        $r69 = virtualinvoke r73.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r70 = staticinvoke <android.net.INetworkManagementEventObserver$Stub: android.net.INetworkManagementEventObserver asInterface(android.os.IBinder)>($r69);

        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void unregisterObserver(android.net.INetworkManagementEventObserver)>($r70);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label96:
        virtualinvoke r73.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        $r71 = virtualinvoke r73.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r72 = staticinvoke <android.net.INetworkManagementEventObserver$Stub: android.net.INetworkManagementEventObserver asInterface(android.os.IBinder)>($r71);

        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void registerObserver(android.net.INetworkManagementEventObserver)>($r72);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label97:
        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>("android.os.INetworkManagementService");

        return 1;
    }

    public static void <clinit>()
    {
        <android.os.INetworkManagementService$Stub: int TRANSACTION_untetherInterface> = 24;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_unregisterTetheringStatsProvider> = 33;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_unregisterObserver> = 2;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_unregisterNetworkActivityListener> = 57;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_tetherLimitReached> = 34;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_tetherInterface> = 23;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_stopTethering> = 21;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_stopInterfaceForwarding> = 29;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_startTetheringWithConfiguration> = 20;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_startTethering> = 19;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_startInterfaceForwarding> = 28;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_shutdown> = 16;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_setUidMeteredNetworkWhitelist> = 42;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_setUidMeteredNetworkBlacklist> = 41;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_setUidCleartextNetworkPolicy> = 44;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_setNetworkPermission> = 64;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_setMtu> = 15;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_setIpForwardingEnabled> = 18;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_setInterfaceUp> = 8;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_setInterfaceQuota> = 36;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_setInterfaceIpv6PrivacyExtensions> = 9;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_setInterfaceDown> = 7;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_setInterfaceConfig> = 5;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_setInterfaceAlert> = 38;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_setIPv6AddrGenMode> = 12;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_setGlobalAlert> = 40;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_setFirewallUidRules> = 52;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_setFirewallUidRule> = 51;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_setFirewallInterfaceRule> = 50;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_setFirewallEnabled> = 48;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_setFirewallChainEnabled> = 53;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_setDnsForwarders> = 26;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_setDefaultNetId> = 62;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_setDataSaverModeEnabled> = 43;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_setAllowOnlyVpnForUids> = 70;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_removeVpnUidRanges> = 55;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_removeRoutesFromLocalNetwork> = 69;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_removeRoute> = 14;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_removeInterfaceQuota> = 37;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_removeInterfaceFromNetwork> = 60;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_removeInterfaceFromLocalNetwork> = 68;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_removeInterfaceAlert> = 39;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_removeIdleTimer> = 47;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_registerTetheringStatsProvider> = 32;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_registerObserver> = 1;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_registerNetworkActivityListener> = 56;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_listTetheredInterfaces> = 25;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_listInterfaces> = 3;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_isTetheringStarted> = 22;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_isNetworkRestricted> = 71;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_isNetworkActive> = 58;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_isFirewallEnabled> = 49;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_isBandwidthControlEnabled> = 45;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_getNetworkStatsTethering> = 35;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_getIpForwardingEnabled> = 17;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_getInterfaceConfig> = 4;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_getDnsForwarders> = 27;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_enableNat> = 30;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_enableIpv6> = 11;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_disableNat> = 31;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_disableIpv6> = 10;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_denyProtect> = 66;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_clearInterfaceAddresses> = 6;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_clearDefaultNetId> = 63;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_allowProtect> = 65;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_addVpnUidRanges> = 54;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_addRoute> = 13;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_addLegacyRouteForNetId> = 61;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_addInterfaceToNetwork> = 59;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_addInterfaceToLocalNetwork> = 67;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_addIdleTimer> = 46;

        <android.os.INetworkManagementService$Stub: java.lang.String DESCRIPTOR> = "android.os.INetworkManagementService";

        return;
    }
}
