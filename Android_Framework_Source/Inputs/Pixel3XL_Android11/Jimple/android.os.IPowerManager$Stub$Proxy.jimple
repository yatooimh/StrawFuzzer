class android.os.IPowerManager$Stub$Proxy extends java.lang.Object implements android.os.IPowerManager
{
    public static android.os.IPowerManager sDefaultImpl;
    private android.os.IBinder mRemote;

    void <init>(android.os.IBinder)
    {
        android.os.IPowerManager$Stub$Proxy r0;
        android.os.IBinder r1;

        r0 := @this: android.os.IPowerManager$Stub$Proxy;

        r1 := @parameter0: android.os.IBinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.os.IPowerManager$Stub$Proxy: android.os.IBinder mRemote> = r1;

        return;
    }

    public void acquireWakeLock(android.os.IBinder, int, java.lang.String, java.lang.String, android.os.WorkSource, java.lang.String) throws android.os.RemoteException
    {
        android.os.IPowerManager$Stub$Proxy r0;
        int i0;
        java.lang.String r1, r2, r4;
        android.os.WorkSource r3;
        android.os.Parcel r5, r6;
        android.os.IBinder $r7, r16;
        boolean $z0;
        android.os.IPowerManager $r8, $r9;
        java.lang.Throwable $r10, $r11, $r12, $r13, $r14, $r15, r17;

        r0 := @this: android.os.IPowerManager$Stub$Proxy;

        r16 := @parameter0: android.os.IBinder;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        r2 := @parameter3: java.lang.String;

        r3 := @parameter4: android.os.WorkSource;

        r4 := @parameter5: java.lang.String;

        r5 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r6 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r5.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.IPowerManager");

     label02:
        virtualinvoke r5.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r16);

     label03:
        virtualinvoke r5.<android.os.Parcel: void writeInt(int)>(i0);

     label04:
        virtualinvoke r5.<android.os.Parcel: void writeString(java.lang.String)>(r1);

     label05:
        virtualinvoke r5.<android.os.Parcel: void writeString(java.lang.String)>(r2);

     label06:
        if r3 == null goto label09;

     label07:
        virtualinvoke r5.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r3.<android.os.WorkSource: void writeToParcel(android.os.Parcel,int)>(r5, 0);

     label08:
        goto label10;

     label09:
        virtualinvoke r5.<android.os.Parcel: void writeInt(int)>(0);

     label10:
        virtualinvoke r5.<android.os.Parcel: void writeString(java.lang.String)>(r4);

        $r7 = r0.<android.os.IPowerManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r7.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1, r5, r6, 0);

        if $z0 != 0 goto label12;

        $r8 = staticinvoke <android.os.IPowerManager$Stub: android.os.IPowerManager getDefaultImpl()>();

        if $r8 == null goto label12;

        $r9 = staticinvoke <android.os.IPowerManager$Stub: android.os.IPowerManager getDefaultImpl()>();

        interfaceinvoke $r9.<android.os.IPowerManager: void acquireWakeLock(android.os.IBinder,int,java.lang.String,java.lang.String,android.os.WorkSource,java.lang.String)>(r16, i0, r1, r2, r3, r4);

     label11:
        virtualinvoke r6.<android.os.Parcel: void recycle()>();

        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        return;

     label12:
        virtualinvoke r6.<android.os.Parcel: void readException()>();

     label13:
        virtualinvoke r6.<android.os.Parcel: void recycle()>();

        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        return;

     label14:
        $r11 := @caughtexception;

        r17 = $r11;

        goto label20;

     label15:
        $r13 := @caughtexception;

        r17 = $r13;

        goto label20;

     label16:
        $r15 := @caughtexception;

        r17 = $r15;

        goto label20;

     label17:
        $r10 := @caughtexception;

        r17 = $r10;

        goto label20;

     label18:
        $r14 := @caughtexception;

        r17 = $r14;

        goto label20;

     label19:
        $r12 := @caughtexception;

        r17 = $r12;

     label20:
        virtualinvoke r6.<android.os.Parcel: void recycle()>();

        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        throw r17;

        catch java.lang.Throwable from label01 to label02 with label19;
        catch java.lang.Throwable from label02 to label03 with label18;
        catch java.lang.Throwable from label03 to label04 with label17;
        catch java.lang.Throwable from label04 to label05 with label16;
        catch java.lang.Throwable from label05 to label06 with label15;
        catch java.lang.Throwable from label07 to label08 with label15;
        catch java.lang.Throwable from label09 to label10 with label15;
        catch java.lang.Throwable from label10 to label11 with label14;
        catch java.lang.Throwable from label12 to label13 with label14;
    }

    public void acquireWakeLockWithUid(android.os.IBinder, int, java.lang.String, java.lang.String, int) throws android.os.RemoteException
    {
        android.os.IPowerManager$Stub$Proxy r0;
        int i0, i1;
        java.lang.String r1, r2;
        android.os.Parcel r3, r4;
        android.os.IBinder $r5, r9;
        boolean $z0;
        android.os.IPowerManager $r6, $r7;
        java.lang.Throwable $r8;

        r0 := @this: android.os.IPowerManager$Stub$Proxy;

        r9 := @parameter0: android.os.IBinder;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        r2 := @parameter3: java.lang.String;

        i1 := @parameter4: int;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.IPowerManager");

        virtualinvoke r3.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r9);

        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r2);

        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(i1);

        $r5 = r0.<android.os.IPowerManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(2, r3, r4, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <android.os.IPowerManager$Stub: android.os.IPowerManager getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <android.os.IPowerManager$Stub: android.os.IPowerManager getDefaultImpl()>();

        interfaceinvoke $r7.<android.os.IPowerManager: void acquireWakeLockWithUid(android.os.IBinder,int,java.lang.String,java.lang.String,int)>(r9, i0, r1, r2, i1);

     label2:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r4.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r8 := @caughtexception;

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public android.os.IBinder asBinder()
    {
        android.os.IPowerManager$Stub$Proxy r0;
        android.os.IBinder $r1;

        r0 := @this: android.os.IPowerManager$Stub$Proxy;

        $r1 = r0.<android.os.IPowerManager$Stub$Proxy: android.os.IBinder mRemote>;

        return $r1;
    }

    public void boostScreenBrightness(long) throws android.os.RemoteException
    {
        android.os.IPowerManager$Stub$Proxy r0;
        long l0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.os.IPowerManager $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.os.IPowerManager$Stub$Proxy;

        l0 := @parameter0: long;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.IPowerManager");

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>(l0);

        $r4 = r0.<android.os.IPowerManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(33, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.os.IPowerManager$Stub: android.os.IPowerManager getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.os.IPowerManager$Stub: android.os.IPowerManager getDefaultImpl()>();

        interfaceinvoke $r6.<android.os.IPowerManager: void boostScreenBrightness(long)>(l0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void crash(java.lang.String) throws android.os.RemoteException
    {
        android.os.IPowerManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.os.IPowerManager $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7;

        r0 := @this: android.os.IPowerManager$Stub$Proxy;

        r7 := @parameter0: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.IPowerManager");

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r7);

        $r3 = r0.<android.os.IPowerManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(29, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.os.IPowerManager$Stub: android.os.IPowerManager getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.os.IPowerManager$Stub: android.os.IPowerManager getDefaultImpl()>();

        interfaceinvoke $r5.<android.os.IPowerManager: void crash(java.lang.String)>(r7);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public boolean forceSuspend() throws android.os.RemoteException
    {
        android.os.IPowerManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        int i0;
        boolean $z0, z1, z2;
        android.os.IPowerManager $r3, $r4;
        java.lang.Throwable $r5;
        android.os.IBinder r6;

        r0 := @this: android.os.IPowerManager$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.IPowerManager");

        r6 = r0.<android.os.IPowerManager$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(41, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r3 = staticinvoke <android.os.IPowerManager$Stub: android.os.IPowerManager getDefaultImpl()>();

        if $r3 == null goto label5;

        $r4 = staticinvoke <android.os.IPowerManager$Stub: android.os.IPowerManager getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<android.os.IPowerManager: boolean forceSuspend()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i0 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public float getBrightnessConstraint(int) throws android.os.RemoteException
    {
        android.os.IPowerManager$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.os.IPowerManager $r5, $r6;
        java.lang.Throwable $r7;
        float f0, f1;

        r0 := @this: android.os.IPowerManager$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.IPowerManager");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<android.os.IPowerManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(15, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.os.IPowerManager$Stub: android.os.IPowerManager getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.os.IPowerManager$Stub: android.os.IPowerManager getDefaultImpl()>();

        f0 = interfaceinvoke $r6.<android.os.IPowerManager: float getBrightnessConstraint(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return f0;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        f1 = virtualinvoke r2.<android.os.Parcel: float readFloat()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return f1;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public java.lang.String getInterfaceDescriptor()
    {
        android.os.IPowerManager$Stub$Proxy r0;

        r0 := @this: android.os.IPowerManager$Stub$Proxy;

        return "android.os.IPowerManager";
    }

    public int getLastShutdownReason() throws android.os.RemoteException
    {
        android.os.IPowerManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.os.IPowerManager $r5, $r6;
        java.lang.Throwable $r7;
        int i0, i1;

        r0 := @this: android.os.IPowerManager$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.IPowerManager");

        $r4 = r0.<android.os.IPowerManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(30, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.os.IPowerManager$Stub: android.os.IPowerManager getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.os.IPowerManager$Stub: android.os.IPowerManager getDefaultImpl()>();

        i0 = interfaceinvoke $r6.<android.os.IPowerManager: int getLastShutdownReason()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i0;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i1;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public int getLastSleepReason() throws android.os.RemoteException
    {
        android.os.IPowerManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.os.IPowerManager $r5, $r6;
        java.lang.Throwable $r7;
        int i0, i1;

        r0 := @this: android.os.IPowerManager$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.IPowerManager");

        $r4 = r0.<android.os.IPowerManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(31, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.os.IPowerManager$Stub: android.os.IPowerManager getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.os.IPowerManager$Stub: android.os.IPowerManager getDefaultImpl()>();

        i0 = interfaceinvoke $r6.<android.os.IPowerManager: int getLastSleepReason()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i0;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i1;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public int getPowerSaveModeTrigger() throws android.os.RemoteException
    {
        android.os.IPowerManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.os.IPowerManager $r5, $r6;
        java.lang.Throwable $r7;
        int i0, i1;

        r0 := @this: android.os.IPowerManager$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.IPowerManager");

        $r4 = r0.<android.os.IPowerManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(23, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.os.IPowerManager$Stub: android.os.IPowerManager getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.os.IPowerManager$Stub: android.os.IPowerManager getDefaultImpl()>();

        i0 = interfaceinvoke $r6.<android.os.IPowerManager: int getPowerSaveModeTrigger()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i0;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i1;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public android.os.PowerSaveState getPowerSaveState(int) throws android.os.RemoteException
    {
        android.os.IPowerManager$Stub$Proxy r0;
        int i0, $i1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.os.Parcelable$Creator $r4;
        java.lang.Object $r5;
        android.os.IPowerManager $r6, $r7;
        java.lang.Throwable $r8;
        android.os.PowerSaveState r9, r10;

        r0 := @this: android.os.IPowerManager$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.IPowerManager");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r3 = r0.<android.os.IPowerManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(18, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <android.os.IPowerManager$Stub: android.os.IPowerManager getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <android.os.IPowerManager$Stub: android.os.IPowerManager getDefaultImpl()>();

        r9 = interfaceinvoke $r7.<android.os.IPowerManager: android.os.PowerSaveState getPowerSaveState(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

        if $i1 == 0 goto label5;

        $r4 = <android.os.PowerSaveState: android.os.Parcelable$Creator CREATOR>;

        $r5 = interfaceinvoke $r4.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r2);

        r10 = (android.os.PowerSaveState) $r5;

     label4:
        goto label6;

     label5:
        r10 = null;

     label6:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r10;

     label7:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
    }

    public void goToSleep(long, int, int) throws android.os.RemoteException
    {
        android.os.IPowerManager$Stub$Proxy r0;
        long l0;
        int i1, i2;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.os.IPowerManager $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.os.IPowerManager$Stub$Proxy;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.IPowerManager");

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>(l0);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i2);

        $r4 = r0.<android.os.IPowerManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(13, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.os.IPowerManager$Stub: android.os.IPowerManager getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.os.IPowerManager$Stub: android.os.IPowerManager getDefaultImpl()>();

        interfaceinvoke $r6.<android.os.IPowerManager: void goToSleep(long,int,int)>(l0, i1, i2);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public boolean isAmbientDisplayAvailable() throws android.os.RemoteException
    {
        android.os.IPowerManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        int i0;
        boolean $z0, z1, z2;
        android.os.IPowerManager $r3, $r4;
        java.lang.Throwable $r5;
        android.os.IBinder r6;

        r0 := @this: android.os.IPowerManager$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.IPowerManager");

        r6 = r0.<android.os.IPowerManager$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(37, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r3 = staticinvoke <android.os.IPowerManager$Stub: android.os.IPowerManager getDefaultImpl()>();

        if $r3 == null goto label5;

        $r4 = staticinvoke <android.os.IPowerManager$Stub: android.os.IPowerManager getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<android.os.IPowerManager: boolean isAmbientDisplayAvailable()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i0 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public boolean isAmbientDisplaySuppressed() throws android.os.RemoteException
    {
        android.os.IPowerManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        int i0;
        boolean $z0, z1, z2;
        android.os.IPowerManager $r3, $r4;
        java.lang.Throwable $r5;
        android.os.IBinder r6;

        r0 := @this: android.os.IPowerManager$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.IPowerManager");

        r6 = r0.<android.os.IPowerManager$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(40, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r3 = staticinvoke <android.os.IPowerManager$Stub: android.os.IPowerManager getDefaultImpl()>();

        if $r3 == null goto label5;

        $r4 = staticinvoke <android.os.IPowerManager$Stub: android.os.IPowerManager getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<android.os.IPowerManager: boolean isAmbientDisplaySuppressed()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i0 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public boolean isAmbientDisplaySuppressedForToken(java.lang.String) throws android.os.RemoteException
    {
        android.os.IPowerManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder r3;
        int i0;
        boolean $z0, z1, z2;
        android.os.IPowerManager $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7;

        r0 := @this: android.os.IPowerManager$Stub$Proxy;

        r7 := @parameter0: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.IPowerManager");

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r7);

        r3 = r0.<android.os.IPowerManager$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(39, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r4 = staticinvoke <android.os.IPowerManager$Stub: android.os.IPowerManager getDefaultImpl()>();

        if $r4 == null goto label5;

        $r5 = staticinvoke <android.os.IPowerManager$Stub: android.os.IPowerManager getDefaultImpl()>();

        z2 = interfaceinvoke $r5.<android.os.IPowerManager: boolean isAmbientDisplaySuppressedForToken(java.lang.String)>(r7);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i0 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public boolean isDeviceIdleMode() throws android.os.RemoteException
    {
        android.os.IPowerManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        int i0;
        boolean $z0, z1, z2;
        android.os.IPowerManager $r3, $r4;
        java.lang.Throwable $r5;
        android.os.IBinder r6;

        r0 := @this: android.os.IPowerManager$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.IPowerManager");

        r6 = r0.<android.os.IPowerManager$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(24, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r3 = staticinvoke <android.os.IPowerManager$Stub: android.os.IPowerManager getDefaultImpl()>();

        if $r3 == null goto label5;

        $r4 = staticinvoke <android.os.IPowerManager$Stub: android.os.IPowerManager getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<android.os.IPowerManager: boolean isDeviceIdleMode()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i0 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public boolean isInteractive() throws android.os.RemoteException
    {
        android.os.IPowerManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        int i0;
        boolean $z0, z1, z2;
        android.os.IPowerManager $r3, $r4;
        java.lang.Throwable $r5;
        android.os.IBinder r6;

        r0 := @this: android.os.IPowerManager$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.IPowerManager");

        r6 = r0.<android.os.IPowerManager$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(16, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r3 = staticinvoke <android.os.IPowerManager$Stub: android.os.IPowerManager getDefaultImpl()>();

        if $r3 == null goto label5;

        $r4 = staticinvoke <android.os.IPowerManager$Stub: android.os.IPowerManager getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<android.os.IPowerManager: boolean isInteractive()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i0 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public boolean isLightDeviceIdleMode() throws android.os.RemoteException
    {
        android.os.IPowerManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        int i0;
        boolean $z0, z1, z2;
        android.os.IPowerManager $r3, $r4;
        java.lang.Throwable $r5;
        android.os.IBinder r6;

        r0 := @this: android.os.IPowerManager$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.IPowerManager");

        r6 = r0.<android.os.IPowerManager$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(25, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r3 = staticinvoke <android.os.IPowerManager$Stub: android.os.IPowerManager getDefaultImpl()>();

        if $r3 == null goto label5;

        $r4 = staticinvoke <android.os.IPowerManager$Stub: android.os.IPowerManager getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<android.os.IPowerManager: boolean isLightDeviceIdleMode()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i0 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public boolean isPowerSaveMode() throws android.os.RemoteException
    {
        android.os.IPowerManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        int i0;
        boolean $z0, z1, z2;
        android.os.IPowerManager $r3, $r4;
        java.lang.Throwable $r5;
        android.os.IBinder r6;

        r0 := @this: android.os.IPowerManager$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.IPowerManager");

        r6 = r0.<android.os.IPowerManager$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(17, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r3 = staticinvoke <android.os.IPowerManager$Stub: android.os.IPowerManager getDefaultImpl()>();

        if $r3 == null goto label5;

        $r4 = staticinvoke <android.os.IPowerManager$Stub: android.os.IPowerManager getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<android.os.IPowerManager: boolean isPowerSaveMode()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i0 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public boolean isScreenBrightnessBoosted() throws android.os.RemoteException
    {
        android.os.IPowerManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        int i0;
        boolean $z0, z1, z2;
        android.os.IPowerManager $r3, $r4;
        java.lang.Throwable $r5;
        android.os.IBinder r6;

        r0 := @this: android.os.IPowerManager$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.IPowerManager");

        r6 = r0.<android.os.IPowerManager$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(34, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r3 = staticinvoke <android.os.IPowerManager$Stub: android.os.IPowerManager getDefaultImpl()>();

        if $r3 == null goto label5;

        $r4 = staticinvoke <android.os.IPowerManager$Stub: android.os.IPowerManager getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<android.os.IPowerManager: boolean isScreenBrightnessBoosted()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i0 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public boolean isWakeLockLevelSupported(int) throws android.os.RemoteException
    {
        android.os.IPowerManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        boolean $z0, z1, z2;
        android.os.IPowerManager $r3, $r4;
        java.lang.Throwable $r5;
        int i0, i1;
        android.os.IBinder r6;

        r0 := @this: android.os.IPowerManager$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.IPowerManager");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        r6 = r0.<android.os.IPowerManager$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(10, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r3 = staticinvoke <android.os.IPowerManager$Stub: android.os.IPowerManager getDefaultImpl()>();

        if $r3 == null goto label5;

        $r4 = staticinvoke <android.os.IPowerManager$Stub: android.os.IPowerManager getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<android.os.IPowerManager: boolean isWakeLockLevelSupported(int)>(i0);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i1 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public void nap(long) throws android.os.RemoteException
    {
        android.os.IPowerManager$Stub$Proxy r0;
        long l0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.os.IPowerManager $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.os.IPowerManager$Stub$Proxy;

        l0 := @parameter0: long;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.IPowerManager");

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>(l0);

        $r4 = r0.<android.os.IPowerManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(14, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.os.IPowerManager$Stub: android.os.IPowerManager getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.os.IPowerManager$Stub: android.os.IPowerManager getDefaultImpl()>();

        interfaceinvoke $r6.<android.os.IPowerManager: void nap(long)>(l0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void powerHint(int, int) throws android.os.RemoteException
    {
        android.os.IPowerManager$Stub$Proxy r0;
        int i0, i1;
        android.os.Parcel r1;
        android.os.IBinder $r3;
        boolean $z0;
        android.os.IPowerManager $r4, $r5;
        java.lang.Throwable $r6;

        r0 := @this: android.os.IPowerManager$Stub$Proxy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.IPowerManager");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        $r3 = r0.<android.os.IPowerManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(5, r1, null, 1);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.os.IPowerManager$Stub: android.os.IPowerManager getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.os.IPowerManager$Stub: android.os.IPowerManager getDefaultImpl()>();

        interfaceinvoke $r5.<android.os.IPowerManager: void powerHint(int,int)>(i0, i1);

     label2:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label4:
        $r6 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public void reboot(boolean, java.lang.String, boolean) throws android.os.RemoteException
    {
        android.os.IPowerManager$Stub$Proxy r0;
        boolean z0, z1, $z2;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        android.os.IPowerManager $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7;
        byte b1, b2;

        r0 := @this: android.os.IPowerManager$Stub$Proxy;

        z0 := @parameter0: boolean;

        r7 := @parameter1: java.lang.String;

        z1 := @parameter2: boolean;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.IPowerManager");

     label02:
        if z0 == 0 goto label03;

        b1 = 1;

        goto label04;

     label03:
        b1 = 0;

     label04:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b1);

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r7);

     label05:
        if z1 == 0 goto label06;

        b2 = 1;

        goto label07;

     label06:
        b2 = 0;

     label07:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b2);

        $r3 = r0.<android.os.IPowerManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z2 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(26, r1, r2, 0);

        if $z2 != 0 goto label09;

        $r4 = staticinvoke <android.os.IPowerManager$Stub: android.os.IPowerManager getDefaultImpl()>();

        if $r4 == null goto label09;

        $r5 = staticinvoke <android.os.IPowerManager$Stub: android.os.IPowerManager getDefaultImpl()>();

        interfaceinvoke $r5.<android.os.IPowerManager: void reboot(boolean,java.lang.String,boolean)>(z0, r7, z1);

     label08:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label09:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label10:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label11:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label04 to label05 with label11;
        catch java.lang.Throwable from label07 to label08 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
    }

    public void rebootSafeMode(boolean, boolean) throws android.os.RemoteException
    {
        android.os.IPowerManager$Stub$Proxy r0;
        boolean z0, z1, $z2;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        android.os.IPowerManager $r5, $r6;
        java.lang.Throwable $r7;
        byte b1, b2;

        r0 := @this: android.os.IPowerManager$Stub$Proxy;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.IPowerManager");

     label02:
        if z0 == 0 goto label03;

        b1 = 1;

        goto label04;

     label03:
        b1 = 0;

     label04:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b1);

     label05:
        if z1 == 0 goto label06;

        b2 = 1;

        goto label07;

     label06:
        b2 = 0;

     label07:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b2);

        $r4 = r0.<android.os.IPowerManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z2 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(27, r1, r2, 0);

        if $z2 != 0 goto label09;

        $r5 = staticinvoke <android.os.IPowerManager$Stub: android.os.IPowerManager getDefaultImpl()>();

        if $r5 == null goto label09;

        $r6 = staticinvoke <android.os.IPowerManager$Stub: android.os.IPowerManager getDefaultImpl()>();

        interfaceinvoke $r6.<android.os.IPowerManager: void rebootSafeMode(boolean,boolean)>(z0, z1);

     label08:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label09:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label10:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label11:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label04 to label05 with label11;
        catch java.lang.Throwable from label07 to label08 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
    }

    public void releaseWakeLock(android.os.IBinder, int) throws android.os.RemoteException
    {
        android.os.IPowerManager$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r7;
        boolean $z0;
        android.os.IPowerManager $r4, $r5;
        java.lang.Throwable $r6;

        r0 := @this: android.os.IPowerManager$Stub$Proxy;

        r7 := @parameter0: android.os.IBinder;

        i0 := @parameter1: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.IPowerManager");

        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r7);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r3 = r0.<android.os.IPowerManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(3, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.os.IPowerManager$Stub: android.os.IPowerManager getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.os.IPowerManager$Stub: android.os.IPowerManager getDefaultImpl()>();

        interfaceinvoke $r5.<android.os.IPowerManager: void releaseWakeLock(android.os.IBinder,int)>(r7, i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public boolean setAdaptivePowerSaveEnabled(boolean) throws android.os.RemoteException
    {
        android.os.IPowerManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z1, z2, z3, z4;
        android.os.IPowerManager $r5, $r6;
        java.lang.Throwable $r7;
        byte b0;
        int i1;

        r0 := @this: android.os.IPowerManager$Stub$Proxy;

        z2 := @parameter0: boolean;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.IPowerManager");

     label02:
        if z2 == 0 goto label03;

        b0 = 1;

        goto label04;

     label03:
        b0 = 0;

     label04:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b0);

        $r4 = r0.<android.os.IPowerManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(22, r1, r2, 0);

        if $z1 != 0 goto label06;

        $r5 = staticinvoke <android.os.IPowerManager$Stub: android.os.IPowerManager getDefaultImpl()>();

        if $r5 == null goto label06;

        $r6 = staticinvoke <android.os.IPowerManager$Stub: android.os.IPowerManager getDefaultImpl()>();

        z3 = interfaceinvoke $r6.<android.os.IPowerManager: boolean setAdaptivePowerSaveEnabled(boolean)>(z2);

     label05:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z3;

     label06:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label07:
        if i1 == 0 goto label08;

        z4 = 1;

        goto label09;

     label08:
        z4 = 0;

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z4;

     label10:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label04 to label05 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
    }

    public boolean setAdaptivePowerSavePolicy(android.os.BatterySaverPolicyConfig) throws android.os.RemoteException
    {
        android.os.IPowerManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        int i0;
        android.os.IBinder $r3;
        boolean $z0, z1, z2;
        android.os.IPowerManager $r4, $r5;
        java.lang.Throwable $r6;
        android.os.BatterySaverPolicyConfig r7;

        r0 := @this: android.os.IPowerManager$Stub$Proxy;

        r7 := @parameter0: android.os.BatterySaverPolicyConfig;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.IPowerManager");

     label02:
        z1 = 1;

        if r7 == null goto label05;

     label03:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r7.<android.os.BatterySaverPolicyConfig: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        $r3 = r0.<android.os.IPowerManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(21, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.os.IPowerManager$Stub: android.os.IPowerManager getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.os.IPowerManager$Stub: android.os.IPowerManager getDefaultImpl()>();

        z2 = interfaceinvoke $r5.<android.os.IPowerManager: boolean setAdaptivePowerSavePolicy(android.os.BatterySaverPolicyConfig)>(r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label09:
        if i0 == 0 goto label10;

        goto label11;

     label10:
        z1 = 0;

     label11:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label12:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch java.lang.Throwable from label05 to label06 with label12;
        catch java.lang.Throwable from label06 to label07 with label12;
        catch java.lang.Throwable from label08 to label09 with label12;
    }

    public void setAttentionLight(boolean, int) throws android.os.RemoteException
    {
        android.os.IPowerManager$Stub$Proxy r0;
        boolean z0, $z1;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        android.os.IPowerManager $r5, $r6;
        java.lang.Throwable $r7;
        byte b1;

        r0 := @this: android.os.IPowerManager$Stub$Proxy;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.IPowerManager");

     label2:
        if z0 == 0 goto label3;

        b1 = 1;

        goto label4;

     label3:
        b1 = 0;

     label4:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b1);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<android.os.IPowerManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(35, r1, r2, 0);

        if $z1 != 0 goto label6;

        $r5 = staticinvoke <android.os.IPowerManager$Stub: android.os.IPowerManager getDefaultImpl()>();

        if $r5 == null goto label6;

        $r6 = staticinvoke <android.os.IPowerManager$Stub: android.os.IPowerManager getDefaultImpl()>();

        interfaceinvoke $r6.<android.os.IPowerManager: void setAttentionLight(boolean,int)>(z0, i0);

     label5:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label6:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label8:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label4 to label5 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
    }

    public void setDozeAfterScreenOff(boolean) throws android.os.RemoteException
    {
        android.os.IPowerManager$Stub$Proxy r0;
        boolean z0, $z1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        android.os.IPowerManager $r5, $r6;
        java.lang.Throwable $r7;
        byte b0;

        r0 := @this: android.os.IPowerManager$Stub$Proxy;

        z0 := @parameter0: boolean;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.IPowerManager");

     label2:
        if z0 == 0 goto label3;

        b0 = 1;

        goto label4;

     label3:
        b0 = 0;

     label4:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b0);

        $r4 = r0.<android.os.IPowerManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(36, r1, r2, 0);

        if $z1 != 0 goto label6;

        $r5 = staticinvoke <android.os.IPowerManager$Stub: android.os.IPowerManager getDefaultImpl()>();

        if $r5 == null goto label6;

        $r6 = staticinvoke <android.os.IPowerManager$Stub: android.os.IPowerManager getDefaultImpl()>();

        interfaceinvoke $r6.<android.os.IPowerManager: void setDozeAfterScreenOff(boolean)>(z0);

     label5:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label6:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label8:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label4 to label5 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
    }

    public boolean setDynamicPowerSaveHint(boolean, int) throws android.os.RemoteException
    {
        android.os.IPowerManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z1, z2, z3, z4;
        android.os.IPowerManager $r5, $r6;
        java.lang.Throwable $r7;
        int i0, i2;
        byte b1;

        r0 := @this: android.os.IPowerManager$Stub$Proxy;

        z2 := @parameter0: boolean;

        i0 := @parameter1: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.IPowerManager");

     label02:
        if z2 == 0 goto label03;

        b1 = 1;

        goto label04;

     label03:
        b1 = 0;

     label04:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b1);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<android.os.IPowerManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(20, r1, r2, 0);

        if $z1 != 0 goto label06;

        $r5 = staticinvoke <android.os.IPowerManager$Stub: android.os.IPowerManager getDefaultImpl()>();

        if $r5 == null goto label06;

        $r6 = staticinvoke <android.os.IPowerManager$Stub: android.os.IPowerManager getDefaultImpl()>();

        z3 = interfaceinvoke $r6.<android.os.IPowerManager: boolean setDynamicPowerSaveHint(boolean,int)>(z2, i0);

     label05:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z3;

     label06:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i2 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label07:
        if i2 == 0 goto label08;

        z4 = 1;

        goto label09;

     label08:
        z4 = 0;

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z4;

     label10:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label04 to label05 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
    }

    public void setPowerBoost(int, int) throws android.os.RemoteException
    {
        android.os.IPowerManager$Stub$Proxy r0;
        int i0, i1;
        android.os.Parcel r1;
        android.os.IBinder $r3;
        boolean $z0;
        android.os.IPowerManager $r4, $r5;
        java.lang.Throwable $r6;

        r0 := @this: android.os.IPowerManager$Stub$Proxy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.IPowerManager");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        $r3 = r0.<android.os.IPowerManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(6, r1, null, 1);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.os.IPowerManager$Stub: android.os.IPowerManager getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.os.IPowerManager$Stub: android.os.IPowerManager getDefaultImpl()>();

        interfaceinvoke $r5.<android.os.IPowerManager: void setPowerBoost(int,int)>(i0, i1);

     label2:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label4:
        $r6 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public void setPowerMode(int, boolean) throws android.os.RemoteException
    {
        android.os.IPowerManager$Stub$Proxy r0;
        int i0;
        boolean z0, $z1;
        android.os.Parcel r1;
        android.os.IBinder $r3;
        android.os.IPowerManager $r4, $r5;
        java.lang.Throwable $r6;
        byte b1;

        r0 := @this: android.os.IPowerManager$Stub$Proxy;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.IPowerManager");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

     label2:
        if z0 == 0 goto label3;

        b1 = 1;

        goto label4;

     label3:
        b1 = 0;

     label4:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b1);

        $r3 = r0.<android.os.IPowerManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(7, r1, null, 1);

        if $z1 != 0 goto label6;

        $r4 = staticinvoke <android.os.IPowerManager$Stub: android.os.IPowerManager getDefaultImpl()>();

        if $r4 == null goto label6;

        $r5 = staticinvoke <android.os.IPowerManager$Stub: android.os.IPowerManager getDefaultImpl()>();

        interfaceinvoke $r5.<android.os.IPowerManager: void setPowerMode(int,boolean)>(i0, z0);

     label5:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label6:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label7:
        $r6 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label4 to label5 with label7;
    }

    public boolean setPowerModeChecked(int, boolean) throws android.os.RemoteException
    {
        android.os.IPowerManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z1, z2, z3, z4;
        android.os.IPowerManager $r5, $r6;
        java.lang.Throwable $r7;
        int i0, i2;
        byte b1;

        r0 := @this: android.os.IPowerManager$Stub$Proxy;

        i0 := @parameter0: int;

        z2 := @parameter1: boolean;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.IPowerManager");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

     label02:
        if z2 == 0 goto label03;

        b1 = 1;

        goto label04;

     label03:
        b1 = 0;

     label04:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b1);

        $r4 = r0.<android.os.IPowerManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(8, r1, r2, 0);

        if $z1 != 0 goto label06;

        $r5 = staticinvoke <android.os.IPowerManager$Stub: android.os.IPowerManager getDefaultImpl()>();

        if $r5 == null goto label06;

        $r6 = staticinvoke <android.os.IPowerManager$Stub: android.os.IPowerManager getDefaultImpl()>();

        z3 = interfaceinvoke $r6.<android.os.IPowerManager: boolean setPowerModeChecked(int,boolean)>(i0, z2);

     label05:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z3;

     label06:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i2 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label07:
        if i2 == 0 goto label08;

        z4 = 1;

        goto label09;

     label08:
        z4 = 0;

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z4;

     label10:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label04 to label05 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
    }

    public boolean setPowerSaveModeEnabled(boolean) throws android.os.RemoteException
    {
        android.os.IPowerManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z1, z2, z3, z4;
        android.os.IPowerManager $r5, $r6;
        java.lang.Throwable $r7;
        byte b0;
        int i1;

        r0 := @this: android.os.IPowerManager$Stub$Proxy;

        z2 := @parameter0: boolean;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.IPowerManager");

     label02:
        if z2 == 0 goto label03;

        b0 = 1;

        goto label04;

     label03:
        b0 = 0;

     label04:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b0);

        $r4 = r0.<android.os.IPowerManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(19, r1, r2, 0);

        if $z1 != 0 goto label06;

        $r5 = staticinvoke <android.os.IPowerManager$Stub: android.os.IPowerManager getDefaultImpl()>();

        if $r5 == null goto label06;

        $r6 = staticinvoke <android.os.IPowerManager$Stub: android.os.IPowerManager getDefaultImpl()>();

        z3 = interfaceinvoke $r6.<android.os.IPowerManager: boolean setPowerSaveModeEnabled(boolean)>(z2);

     label05:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z3;

     label06:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label07:
        if i1 == 0 goto label08;

        z4 = 1;

        goto label09;

     label08:
        z4 = 0;

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z4;

     label10:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label04 to label05 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
    }

    public void setStayOnSetting(int) throws android.os.RemoteException
    {
        android.os.IPowerManager$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.os.IPowerManager $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.os.IPowerManager$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.IPowerManager");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<android.os.IPowerManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(32, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.os.IPowerManager$Stub: android.os.IPowerManager getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.os.IPowerManager$Stub: android.os.IPowerManager getDefaultImpl()>();

        interfaceinvoke $r6.<android.os.IPowerManager: void setStayOnSetting(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void shutdown(boolean, java.lang.String, boolean) throws android.os.RemoteException
    {
        android.os.IPowerManager$Stub$Proxy r0;
        boolean z0, z1, $z2;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        android.os.IPowerManager $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7;
        byte b1, b2;

        r0 := @this: android.os.IPowerManager$Stub$Proxy;

        z0 := @parameter0: boolean;

        r7 := @parameter1: java.lang.String;

        z1 := @parameter2: boolean;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.IPowerManager");

     label02:
        if z0 == 0 goto label03;

        b1 = 1;

        goto label04;

     label03:
        b1 = 0;

     label04:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b1);

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r7);

     label05:
        if z1 == 0 goto label06;

        b2 = 1;

        goto label07;

     label06:
        b2 = 0;

     label07:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b2);

        $r3 = r0.<android.os.IPowerManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z2 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(28, r1, r2, 0);

        if $z2 != 0 goto label09;

        $r4 = staticinvoke <android.os.IPowerManager$Stub: android.os.IPowerManager getDefaultImpl()>();

        if $r4 == null goto label09;

        $r5 = staticinvoke <android.os.IPowerManager$Stub: android.os.IPowerManager getDefaultImpl()>();

        interfaceinvoke $r5.<android.os.IPowerManager: void shutdown(boolean,java.lang.String,boolean)>(z0, r7, z1);

     label08:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label09:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label10:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label11:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label04 to label05 with label11;
        catch java.lang.Throwable from label07 to label08 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
    }

    public void suppressAmbientDisplay(java.lang.String, boolean) throws android.os.RemoteException
    {
        android.os.IPowerManager$Stub$Proxy r0;
        boolean z0, $z1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        android.os.IPowerManager $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7;
        byte b0;

        r0 := @this: android.os.IPowerManager$Stub$Proxy;

        r7 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.IPowerManager");

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r7);

     label2:
        if z0 == 0 goto label3;

        b0 = 1;

        goto label4;

     label3:
        b0 = 0;

     label4:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b0);

        $r3 = r0.<android.os.IPowerManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(38, r1, r2, 0);

        if $z1 != 0 goto label6;

        $r4 = staticinvoke <android.os.IPowerManager$Stub: android.os.IPowerManager getDefaultImpl()>();

        if $r4 == null goto label6;

        $r5 = staticinvoke <android.os.IPowerManager$Stub: android.os.IPowerManager getDefaultImpl()>();

        interfaceinvoke $r5.<android.os.IPowerManager: void suppressAmbientDisplay(java.lang.String,boolean)>(r7, z0);

     label5:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label6:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label8:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label4 to label5 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
    }

    public void updateWakeLockUids(android.os.IBinder, int[]) throws android.os.RemoteException
    {
        android.os.IPowerManager$Stub$Proxy r0;
        int[] r1;
        android.os.Parcel r2, r3;
        android.os.IBinder $r4, r8;
        boolean $z0;
        android.os.IPowerManager $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.os.IPowerManager$Stub$Proxy;

        r8 := @parameter0: android.os.IBinder;

        r1 := @parameter1: int[];

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.IPowerManager");

        virtualinvoke r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r8);

        virtualinvoke r2.<android.os.Parcel: void writeIntArray(int[])>(r1);

        $r4 = r0.<android.os.IPowerManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(4, r2, r3, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.os.IPowerManager$Stub: android.os.IPowerManager getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.os.IPowerManager$Stub: android.os.IPowerManager getDefaultImpl()>();

        interfaceinvoke $r6.<android.os.IPowerManager: void updateWakeLockUids(android.os.IBinder,int[])>(r8, r1);

     label2:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void updateWakeLockWorkSource(android.os.IBinder, android.os.WorkSource, java.lang.String) throws android.os.RemoteException
    {
        android.os.IPowerManager$Stub$Proxy r0;
        android.os.WorkSource r1;
        java.lang.String r2;
        android.os.Parcel r3, r4;
        android.os.IBinder $r5, r9;
        boolean $z0;
        android.os.IPowerManager $r6, $r7;
        java.lang.Throwable $r8;

        r0 := @this: android.os.IPowerManager$Stub$Proxy;

        r9 := @parameter0: android.os.IBinder;

        r1 := @parameter1: android.os.WorkSource;

        r2 := @parameter2: java.lang.String;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.IPowerManager");

        virtualinvoke r3.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r9);

     label02:
        if r1 == null goto label05;

     label03:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<android.os.WorkSource: void writeToParcel(android.os.Parcel,int)>(r3, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r2);

        $r5 = r0.<android.os.IPowerManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(9, r3, r4, 0);

        if $z0 != 0 goto label08;

        $r6 = staticinvoke <android.os.IPowerManager$Stub: android.os.IPowerManager getDefaultImpl()>();

        if $r6 == null goto label08;

        $r7 = staticinvoke <android.os.IPowerManager$Stub: android.os.IPowerManager getDefaultImpl()>();

        interfaceinvoke $r7.<android.os.IPowerManager: void updateWakeLockWorkSource(android.os.IBinder,android.os.WorkSource,java.lang.String)>(r9, r1, r2);

     label07:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r4.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r8 := @caughtexception;

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void userActivity(long, int, int) throws android.os.RemoteException
    {
        android.os.IPowerManager$Stub$Proxy r0;
        long l0;
        int i1, i2;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.os.IPowerManager $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.os.IPowerManager$Stub$Proxy;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.IPowerManager");

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>(l0);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i2);

        $r4 = r0.<android.os.IPowerManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(11, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.os.IPowerManager$Stub: android.os.IPowerManager getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.os.IPowerManager$Stub: android.os.IPowerManager getDefaultImpl()>();

        interfaceinvoke $r6.<android.os.IPowerManager: void userActivity(long,int,int)>(l0, i1, i2);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void wakeUp(long, int, java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        android.os.IPowerManager$Stub$Proxy r0;
        long l0;
        int i1;
        java.lang.String r1, r8;
        android.os.Parcel r2, r3;
        android.os.IBinder $r4;
        boolean $z0;
        android.os.IPowerManager $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.os.IPowerManager$Stub$Proxy;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        r8 := @parameter2: java.lang.String;

        r1 := @parameter3: java.lang.String;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.IPowerManager");

        virtualinvoke r2.<android.os.Parcel: void writeLong(long)>(l0);

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i1);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r8);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r4 = r0.<android.os.IPowerManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(12, r2, r3, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.os.IPowerManager$Stub: android.os.IPowerManager getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.os.IPowerManager$Stub: android.os.IPowerManager getDefaultImpl()>();

        interfaceinvoke $r6.<android.os.IPowerManager: void wakeUp(long,int,java.lang.String,java.lang.String)>(l0, i1, r8, r1);

     label2:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }
}
