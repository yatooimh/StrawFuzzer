public abstract class android.os.IPowerManager$Stub extends android.os.Binder implements android.os.IPowerManager
{
    private static final java.lang.String DESCRIPTOR;
    static final int TRANSACTION_acquireWakeLock;
    static final int TRANSACTION_acquireWakeLockWithUid;
    static final int TRANSACTION_boostScreenBrightness;
    static final int TRANSACTION_crash;
    static final int TRANSACTION_forceSuspend;
    static final int TRANSACTION_getBrightnessConstraint;
    static final int TRANSACTION_getLastShutdownReason;
    static final int TRANSACTION_getLastSleepReason;
    static final int TRANSACTION_getPowerSaveModeTrigger;
    static final int TRANSACTION_getPowerSaveState;
    static final int TRANSACTION_goToSleep;
    static final int TRANSACTION_isAmbientDisplayAvailable;
    static final int TRANSACTION_isAmbientDisplaySuppressed;
    static final int TRANSACTION_isAmbientDisplaySuppressedForToken;
    static final int TRANSACTION_isDeviceIdleMode;
    static final int TRANSACTION_isInteractive;
    static final int TRANSACTION_isLightDeviceIdleMode;
    static final int TRANSACTION_isPowerSaveMode;
    static final int TRANSACTION_isScreenBrightnessBoosted;
    static final int TRANSACTION_isWakeLockLevelSupported;
    static final int TRANSACTION_nap;
    static final int TRANSACTION_powerHint;
    static final int TRANSACTION_reboot;
    static final int TRANSACTION_rebootSafeMode;
    static final int TRANSACTION_releaseWakeLock;
    static final int TRANSACTION_setAdaptivePowerSaveEnabled;
    static final int TRANSACTION_setAdaptivePowerSavePolicy;
    static final int TRANSACTION_setAttentionLight;
    static final int TRANSACTION_setDozeAfterScreenOff;
    static final int TRANSACTION_setDynamicPowerSaveHint;
    static final int TRANSACTION_setPowerBoost;
    static final int TRANSACTION_setPowerMode;
    static final int TRANSACTION_setPowerModeChecked;
    static final int TRANSACTION_setPowerSaveModeEnabled;
    static final int TRANSACTION_setStayOnSetting;
    static final int TRANSACTION_shutdown;
    static final int TRANSACTION_suppressAmbientDisplay;
    static final int TRANSACTION_updateWakeLockUids;
    static final int TRANSACTION_updateWakeLockWorkSource;
    static final int TRANSACTION_userActivity;
    static final int TRANSACTION_wakeUp;

    public void <init>()
    {
        android.os.IPowerManager$Stub r0;

        r0 := @this: android.os.IPowerManager$Stub;

        specialinvoke r0.<android.os.Binder: void <init>()>();

        virtualinvoke r0.<android.os.IPowerManager$Stub: void attachInterface(android.os.IInterface,java.lang.String)>(r0, "android.os.IPowerManager");

        return;
    }

    public static android.os.IPowerManager asInterface(android.os.IBinder)
    {
        android.os.IBinder r0;
        android.os.IInterface r1;
        android.os.IPowerManager$Stub$Proxy $r2;
        boolean $z0;
        android.os.IPowerManager $r3;

        r0 := @parameter0: android.os.IBinder;

        if r0 != null goto label1;

        return null;

     label1:
        r1 = interfaceinvoke r0.<android.os.IBinder: android.os.IInterface queryLocalInterface(java.lang.String)>("android.os.IPowerManager");

        if r1 == null goto label2;

        $z0 = r1 instanceof android.os.IPowerManager;

        if $z0 == 0 goto label2;

        $r3 = (android.os.IPowerManager) r1;

        return $r3;

     label2:
        $r2 = new android.os.IPowerManager$Stub$Proxy;

        specialinvoke $r2.<android.os.IPowerManager$Stub$Proxy: void <init>(android.os.IBinder)>(r0);

        return $r2;
    }

    public static android.os.IPowerManager getDefaultImpl()
    {
        android.os.IPowerManager $r0;

        $r0 = <android.os.IPowerManager$Stub$Proxy: android.os.IPowerManager sDefaultImpl>;

        return $r0;
    }

    public static java.lang.String getDefaultTransactionName(int)
    {
        int i0;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 1: goto label42;
            case 2: goto label41;
            case 3: goto label40;
            case 4: goto label39;
            case 5: goto label38;
            case 6: goto label37;
            case 7: goto label36;
            case 8: goto label35;
            case 9: goto label34;
            case 10: goto label33;
            case 11: goto label32;
            case 12: goto label31;
            case 13: goto label30;
            case 14: goto label29;
            case 15: goto label28;
            case 16: goto label27;
            case 17: goto label26;
            case 18: goto label25;
            case 19: goto label24;
            case 20: goto label23;
            case 21: goto label22;
            case 22: goto label21;
            case 23: goto label20;
            case 24: goto label19;
            case 25: goto label18;
            case 26: goto label17;
            case 27: goto label16;
            case 28: goto label15;
            case 29: goto label14;
            case 30: goto label13;
            case 31: goto label12;
            case 32: goto label11;
            case 33: goto label10;
            case 34: goto label09;
            case 35: goto label08;
            case 36: goto label07;
            case 37: goto label06;
            case 38: goto label05;
            case 39: goto label04;
            case 40: goto label03;
            case 41: goto label02;
            default: goto label01;
        };

     label01:
        return null;

     label02:
        return "forceSuspend";

     label03:
        return "isAmbientDisplaySuppressed";

     label04:
        return "isAmbientDisplaySuppressedForToken";

     label05:
        return "suppressAmbientDisplay";

     label06:
        return "isAmbientDisplayAvailable";

     label07:
        return "setDozeAfterScreenOff";

     label08:
        return "setAttentionLight";

     label09:
        return "isScreenBrightnessBoosted";

     label10:
        return "boostScreenBrightness";

     label11:
        return "setStayOnSetting";

     label12:
        return "getLastSleepReason";

     label13:
        return "getLastShutdownReason";

     label14:
        return "crash";

     label15:
        return "shutdown";

     label16:
        return "rebootSafeMode";

     label17:
        return "reboot";

     label18:
        return "isLightDeviceIdleMode";

     label19:
        return "isDeviceIdleMode";

     label20:
        return "getPowerSaveModeTrigger";

     label21:
        return "setAdaptivePowerSaveEnabled";

     label22:
        return "setAdaptivePowerSavePolicy";

     label23:
        return "setDynamicPowerSaveHint";

     label24:
        return "setPowerSaveModeEnabled";

     label25:
        return "getPowerSaveState";

     label26:
        return "isPowerSaveMode";

     label27:
        return "isInteractive";

     label28:
        return "getBrightnessConstraint";

     label29:
        return "nap";

     label30:
        return "goToSleep";

     label31:
        return "wakeUp";

     label32:
        return "userActivity";

     label33:
        return "isWakeLockLevelSupported";

     label34:
        return "updateWakeLockWorkSource";

     label35:
        return "setPowerModeChecked";

     label36:
        return "setPowerMode";

     label37:
        return "setPowerBoost";

     label38:
        return "powerHint";

     label39:
        return "updateWakeLockUids";

     label40:
        return "releaseWakeLock";

     label41:
        return "acquireWakeLockWithUid";

     label42:
        return "acquireWakeLock";
    }

    public static boolean setDefaultImpl(android.os.IPowerManager)
    {
        android.os.IPowerManager r0, $r1;
        java.lang.IllegalStateException $r2;

        r0 := @parameter0: android.os.IPowerManager;

        $r1 = <android.os.IPowerManager$Stub$Proxy: android.os.IPowerManager sDefaultImpl>;

        if $r1 != null goto label2;

        if r0 == null goto label1;

        <android.os.IPowerManager$Stub$Proxy: android.os.IPowerManager sDefaultImpl> = r0;

        return 1;

     label1:
        return 0;

     label2:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("setDefaultImpl() called twice");

        throw $r2;
    }

    public android.os.IBinder asBinder()
    {
        android.os.IPowerManager$Stub r0;

        r0 := @this: android.os.IPowerManager$Stub;

        return r0;
    }

    public java.lang.String getTransactionName(int)
    {
        android.os.IPowerManager$Stub r0;
        int i0;
        java.lang.String $r1;

        r0 := @this: android.os.IPowerManager$Stub;

        i0 := @parameter0: int;

        $r1 = staticinvoke <android.os.IPowerManager$Stub: java.lang.String getDefaultTransactionName(int)>(i0);

        return $r1;
    }

    public boolean onTransact(int, android.os.Parcel, android.os.Parcel, int) throws android.os.RemoteException
    {
        android.os.IPowerManager$Stub r0;
        android.os.Parcel r1, r22;
        int i0, $i1, $i2, $i3, $i4, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i22, $i23, $i25, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, i41, i42, i43, i44, i45, i46, i47, i48, i49, i50, i51, i52, i53, i54, i55, i56, i57, i58, i59, i60, i61, i62;
        float f0;
        android.os.IBinder r2, $r13, $r15, $r16, r28;
        java.lang.String r3, $r4, $r5, $r8, $r9, $r10, $r17, $r18, $r19, r23, r24, r25, r30;
        long $l5, $l20, $l21, $l24, $l26;
        android.os.Parcelable$Creator $r6, $r11, $r20;
        java.lang.Object $r7, $r12, $r21;
        int[] $r14;
        boolean $z9, z10, z11, z12, z13, z14, z15, z16, z17, z18, z19, z20, z21, z22, z23, z24, z25, z26, z27, z28, z29, z30, z31, z32, z33, z34, z35, z36, z37, z38;
        android.os.BatterySaverPolicyConfig r26;
        android.os.PowerSaveState r27;
        android.os.WorkSource r29, r31;

        r0 := @this: android.os.IPowerManager$Stub;

        i41 := @parameter0: int;

        r22 := @parameter1: android.os.Parcel;

        r1 := @parameter2: android.os.Parcel;

        i0 := @parameter3: int;

        if i41 == 1598968902 goto label68;

        z10 = 0;

        z11 = 0;

        tableswitch(i41)
        {
            case 1: goto label65;
            case 2: goto label64;
            case 3: goto label63;
            case 4: goto label62;
            case 5: goto label61;
            case 6: goto label60;
            case 7: goto label58;
            case 8: goto label56;
            case 9: goto label53;
            case 10: goto label52;
            case 11: goto label51;
            case 12: goto label50;
            case 13: goto label49;
            case 14: goto label48;
            case 15: goto label47;
            case 16: goto label46;
            case 17: goto label45;
            case 18: goto label42;
            case 19: goto label40;
            case 20: goto label38;
            case 21: goto label35;
            case 22: goto label33;
            case 23: goto label32;
            case 24: goto label31;
            case 25: goto label30;
            case 26: goto label26;
            case 27: goto label22;
            case 28: goto label18;
            case 29: goto label17;
            case 30: goto label16;
            case 31: goto label15;
            case 32: goto label14;
            case 33: goto label13;
            case 34: goto label12;
            case 35: goto label10;
            case 36: goto label08;
            case 37: goto label07;
            case 38: goto label05;
            case 39: goto label04;
            case 40: goto label03;
            case 41: goto label02;
            default: goto label01;
        };

     label01:
        $z9 = specialinvoke r0.<android.os.Binder: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>(i41, r22, r1, i0);

        return $z9;

     label02:
        virtualinvoke r22.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.IPowerManager");

        z12 = virtualinvoke r0.<android.os.IPowerManager$Stub: boolean forceSuspend()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i48 = (int) z12;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i48);

        return 1;

     label03:
        virtualinvoke r22.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.IPowerManager");

        z13 = virtualinvoke r0.<android.os.IPowerManager$Stub: boolean isAmbientDisplaySuppressed()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i49 = (int) z13;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i49);

        return 1;

     label04:
        virtualinvoke r22.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.IPowerManager");

        $r4 = virtualinvoke r22.<android.os.Parcel: java.lang.String readString()>();

        z14 = virtualinvoke r0.<android.os.IPowerManager$Stub: boolean isAmbientDisplaySuppressedForToken(java.lang.String)>($r4);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i50 = (int) z14;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i50);

        return 1;

     label05:
        virtualinvoke r22.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.IPowerManager");

        r23 = virtualinvoke r22.<android.os.Parcel: java.lang.String readString()>();

        $i1 = virtualinvoke r22.<android.os.Parcel: int readInt()>();

        if $i1 == 0 goto label06;

        z11 = 1;

     label06:
        virtualinvoke r0.<android.os.IPowerManager$Stub: void suppressAmbientDisplay(java.lang.String,boolean)>(r23, z11);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label07:
        virtualinvoke r22.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.IPowerManager");

        z15 = virtualinvoke r0.<android.os.IPowerManager$Stub: boolean isAmbientDisplayAvailable()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i51 = (int) z15;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i51);

        return 1;

     label08:
        virtualinvoke r22.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.IPowerManager");

        z16 = 0;

        $i2 = virtualinvoke r22.<android.os.Parcel: int readInt()>();

        if $i2 == 0 goto label09;

        z16 = 1;

     label09:
        virtualinvoke r0.<android.os.IPowerManager$Stub: void setDozeAfterScreenOff(boolean)>(z16);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label10:
        virtualinvoke r22.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.IPowerManager");

        z17 = 0;

        $i3 = virtualinvoke r22.<android.os.Parcel: int readInt()>();

        if $i3 == 0 goto label11;

        z17 = 1;

     label11:
        $i4 = virtualinvoke r22.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.os.IPowerManager$Stub: void setAttentionLight(boolean,int)>(z17, $i4);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label12:
        virtualinvoke r22.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.IPowerManager");

        z18 = virtualinvoke r0.<android.os.IPowerManager$Stub: boolean isScreenBrightnessBoosted()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i52 = (int) z18;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i52);

        return 1;

     label13:
        virtualinvoke r22.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.IPowerManager");

        $l5 = virtualinvoke r22.<android.os.Parcel: long readLong()>();

        virtualinvoke r0.<android.os.IPowerManager$Stub: void boostScreenBrightness(long)>($l5);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label14:
        virtualinvoke r22.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.IPowerManager");

        $i6 = virtualinvoke r22.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.os.IPowerManager$Stub: void setStayOnSetting(int)>($i6);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label15:
        virtualinvoke r22.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.IPowerManager");

        i42 = virtualinvoke r0.<android.os.IPowerManager$Stub: int getLastSleepReason()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i42);

        return 1;

     label16:
        virtualinvoke r22.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.IPowerManager");

        i43 = virtualinvoke r0.<android.os.IPowerManager$Stub: int getLastShutdownReason()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i43);

        return 1;

     label17:
        virtualinvoke r22.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.IPowerManager");

        $r5 = virtualinvoke r22.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke r0.<android.os.IPowerManager$Stub: void crash(java.lang.String)>($r5);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label18:
        virtualinvoke r22.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.IPowerManager");

        $i7 = virtualinvoke r22.<android.os.Parcel: int readInt()>();

        if $i7 == 0 goto label19;

        z19 = 1;

        goto label20;

     label19:
        z19 = 0;

     label20:
        r24 = virtualinvoke r22.<android.os.Parcel: java.lang.String readString()>();

        $i8 = virtualinvoke r22.<android.os.Parcel: int readInt()>();

        if $i8 == 0 goto label21;

        z10 = 1;

     label21:
        virtualinvoke r0.<android.os.IPowerManager$Stub: void shutdown(boolean,java.lang.String,boolean)>(z19, r24, z10);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label22:
        virtualinvoke r22.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.IPowerManager");

        $i9 = virtualinvoke r22.<android.os.Parcel: int readInt()>();

        if $i9 == 0 goto label23;

        z20 = 1;

        goto label24;

     label23:
        z20 = 0;

     label24:
        z21 = 0;

        $i10 = virtualinvoke r22.<android.os.Parcel: int readInt()>();

        if $i10 == 0 goto label25;

        z21 = 1;

     label25:
        virtualinvoke r0.<android.os.IPowerManager$Stub: void rebootSafeMode(boolean,boolean)>(z20, z21);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label26:
        virtualinvoke r22.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.IPowerManager");

        $i11 = virtualinvoke r22.<android.os.Parcel: int readInt()>();

        if $i11 == 0 goto label27;

        z22 = 1;

        goto label28;

     label27:
        z22 = 0;

     label28:
        r25 = virtualinvoke r22.<android.os.Parcel: java.lang.String readString()>();

        z23 = 0;

        $i12 = virtualinvoke r22.<android.os.Parcel: int readInt()>();

        if $i12 == 0 goto label29;

        z23 = 1;

     label29:
        virtualinvoke r0.<android.os.IPowerManager$Stub: void reboot(boolean,java.lang.String,boolean)>(z22, r25, z23);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label30:
        virtualinvoke r22.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.IPowerManager");

        z24 = virtualinvoke r0.<android.os.IPowerManager$Stub: boolean isLightDeviceIdleMode()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i53 = (int) z24;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i53);

        return 1;

     label31:
        virtualinvoke r22.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.IPowerManager");

        z25 = virtualinvoke r0.<android.os.IPowerManager$Stub: boolean isDeviceIdleMode()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i54 = (int) z25;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i54);

        return 1;

     label32:
        virtualinvoke r22.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.IPowerManager");

        i44 = virtualinvoke r0.<android.os.IPowerManager$Stub: int getPowerSaveModeTrigger()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i44);

        return 1;

     label33:
        virtualinvoke r22.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.IPowerManager");

        z26 = 0;

        $i13 = virtualinvoke r22.<android.os.Parcel: int readInt()>();

        if $i13 == 0 goto label34;

        z26 = 1;

     label34:
        z27 = virtualinvoke r0.<android.os.IPowerManager$Stub: boolean setAdaptivePowerSaveEnabled(boolean)>(z26);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i55 = (int) z27;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i55);

        return 1;

     label35:
        virtualinvoke r22.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.IPowerManager");

        $i14 = virtualinvoke r22.<android.os.Parcel: int readInt()>();

        if $i14 == 0 goto label36;

        $r6 = <android.os.BatterySaverPolicyConfig: android.os.Parcelable$Creator CREATOR>;

        $r7 = interfaceinvoke $r6.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r22);

        r26 = (android.os.BatterySaverPolicyConfig) $r7;

        goto label37;

     label36:
        r26 = null;

     label37:
        z28 = virtualinvoke r0.<android.os.IPowerManager$Stub: boolean setAdaptivePowerSavePolicy(android.os.BatterySaverPolicyConfig)>(r26);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i56 = (int) z28;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i56);

        return 1;

     label38:
        virtualinvoke r22.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.IPowerManager");

        z29 = 0;

        $i15 = virtualinvoke r22.<android.os.Parcel: int readInt()>();

        if $i15 == 0 goto label39;

        z29 = 1;

     label39:
        $i16 = virtualinvoke r22.<android.os.Parcel: int readInt()>();

        z30 = virtualinvoke r0.<android.os.IPowerManager$Stub: boolean setDynamicPowerSaveHint(boolean,int)>(z29, $i16);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i57 = (int) z30;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i57);

        return 1;

     label40:
        virtualinvoke r22.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.IPowerManager");

        z31 = 0;

        $i17 = virtualinvoke r22.<android.os.Parcel: int readInt()>();

        if $i17 == 0 goto label41;

        z31 = 1;

     label41:
        z32 = virtualinvoke r0.<android.os.IPowerManager$Stub: boolean setPowerSaveModeEnabled(boolean)>(z31);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i58 = (int) z32;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i58);

        return 1;

     label42:
        virtualinvoke r22.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.IPowerManager");

        $i18 = virtualinvoke r22.<android.os.Parcel: int readInt()>();

        r27 = virtualinvoke r0.<android.os.IPowerManager$Stub: android.os.PowerSaveState getPowerSaveState(int)>($i18);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        if r27 == null goto label43;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r27.<android.os.PowerSaveState: void writeToParcel(android.os.Parcel,int)>(r1, 1);

        goto label44;

     label43:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label44:
        return 1;

     label45:
        virtualinvoke r22.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.IPowerManager");

        z33 = virtualinvoke r0.<android.os.IPowerManager$Stub: boolean isPowerSaveMode()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i59 = (int) z33;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i59);

        return 1;

     label46:
        virtualinvoke r22.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.IPowerManager");

        z34 = virtualinvoke r0.<android.os.IPowerManager$Stub: boolean isInteractive()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i60 = (int) z34;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i60);

        return 1;

     label47:
        virtualinvoke r22.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.IPowerManager");

        $i19 = virtualinvoke r22.<android.os.Parcel: int readInt()>();

        f0 = virtualinvoke r0.<android.os.IPowerManager$Stub: float getBrightnessConstraint(int)>($i19);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeFloat(float)>(f0);

        return 1;

     label48:
        virtualinvoke r22.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.IPowerManager");

        $l20 = virtualinvoke r22.<android.os.Parcel: long readLong()>();

        virtualinvoke r0.<android.os.IPowerManager$Stub: void nap(long)>($l20);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label49:
        virtualinvoke r22.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.IPowerManager");

        $l21 = virtualinvoke r22.<android.os.Parcel: long readLong()>();

        $i22 = virtualinvoke r22.<android.os.Parcel: int readInt()>();

        $i23 = virtualinvoke r22.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.os.IPowerManager$Stub: void goToSleep(long,int,int)>($l21, $i22, $i23);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label50:
        virtualinvoke r22.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.IPowerManager");

        $l24 = virtualinvoke r22.<android.os.Parcel: long readLong()>();

        $i25 = virtualinvoke r22.<android.os.Parcel: int readInt()>();

        $r8 = virtualinvoke r22.<android.os.Parcel: java.lang.String readString()>();

        $r9 = virtualinvoke r22.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke r0.<android.os.IPowerManager$Stub: void wakeUp(long,int,java.lang.String,java.lang.String)>($l24, $i25, $r8, $r9);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label51:
        virtualinvoke r22.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.IPowerManager");

        $l26 = virtualinvoke r22.<android.os.Parcel: long readLong()>();

        $i27 = virtualinvoke r22.<android.os.Parcel: int readInt()>();

        $i28 = virtualinvoke r22.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.os.IPowerManager$Stub: void userActivity(long,int,int)>($l26, $i27, $i28);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label52:
        virtualinvoke r22.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.IPowerManager");

        $i29 = virtualinvoke r22.<android.os.Parcel: int readInt()>();

        z35 = virtualinvoke r0.<android.os.IPowerManager$Stub: boolean isWakeLockLevelSupported(int)>($i29);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i61 = (int) z35;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i61);

        return 1;

     label53:
        virtualinvoke r22.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.IPowerManager");

        r28 = virtualinvoke r22.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $i30 = virtualinvoke r22.<android.os.Parcel: int readInt()>();

        if $i30 == 0 goto label54;

        $r11 = <android.os.WorkSource: android.os.Parcelable$Creator CREATOR>;

        $r12 = interfaceinvoke $r11.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r22);

        r29 = (android.os.WorkSource) $r12;

        goto label55;

     label54:
        r29 = null;

     label55:
        $r10 = virtualinvoke r22.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke r0.<android.os.IPowerManager$Stub: void updateWakeLockWorkSource(android.os.IBinder,android.os.WorkSource,java.lang.String)>(r28, r29, $r10);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label56:
        virtualinvoke r22.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.IPowerManager");

        i45 = virtualinvoke r22.<android.os.Parcel: int readInt()>();

        z36 = 0;

        $i31 = virtualinvoke r22.<android.os.Parcel: int readInt()>();

        if $i31 == 0 goto label57;

        z36 = 1;

     label57:
        z37 = virtualinvoke r0.<android.os.IPowerManager$Stub: boolean setPowerModeChecked(int,boolean)>(i45, z36);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i62 = (int) z37;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i62);

        return 1;

     label58:
        virtualinvoke r22.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.IPowerManager");

        i46 = virtualinvoke r22.<android.os.Parcel: int readInt()>();

        z38 = 0;

        $i32 = virtualinvoke r22.<android.os.Parcel: int readInt()>();

        if $i32 == 0 goto label59;

        z38 = 1;

     label59:
        virtualinvoke r0.<android.os.IPowerManager$Stub: void setPowerMode(int,boolean)>(i46, z38);

        return 1;

     label60:
        virtualinvoke r22.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.IPowerManager");

        $i33 = virtualinvoke r22.<android.os.Parcel: int readInt()>();

        $i34 = virtualinvoke r22.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.os.IPowerManager$Stub: void setPowerBoost(int,int)>($i33, $i34);

        return 1;

     label61:
        virtualinvoke r22.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.IPowerManager");

        $i35 = virtualinvoke r22.<android.os.Parcel: int readInt()>();

        $i36 = virtualinvoke r22.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.os.IPowerManager$Stub: void powerHint(int,int)>($i35, $i36);

        return 1;

     label62:
        virtualinvoke r22.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.IPowerManager");

        $r13 = virtualinvoke r22.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r14 = virtualinvoke r22.<android.os.Parcel: int[] createIntArray()>();

        virtualinvoke r0.<android.os.IPowerManager$Stub: void updateWakeLockUids(android.os.IBinder,int[])>($r13, $r14);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label63:
        virtualinvoke r22.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.IPowerManager");

        $r15 = virtualinvoke r22.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $i37 = virtualinvoke r22.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.os.IPowerManager$Stub: void releaseWakeLock(android.os.IBinder,int)>($r15, $i37);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label64:
        virtualinvoke r22.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.IPowerManager");

        $r16 = virtualinvoke r22.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $i38 = virtualinvoke r22.<android.os.Parcel: int readInt()>();

        $r17 = virtualinvoke r22.<android.os.Parcel: java.lang.String readString()>();

        $r18 = virtualinvoke r22.<android.os.Parcel: java.lang.String readString()>();

        $i39 = virtualinvoke r22.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.os.IPowerManager$Stub: void acquireWakeLockWithUid(android.os.IBinder,int,java.lang.String,java.lang.String,int)>($r16, $i38, $r17, $r18, $i39);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label65:
        virtualinvoke r22.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.IPowerManager");

        r2 = virtualinvoke r22.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        i47 = virtualinvoke r22.<android.os.Parcel: int readInt()>();

        r30 = virtualinvoke r22.<android.os.Parcel: java.lang.String readString()>();

        r3 = virtualinvoke r22.<android.os.Parcel: java.lang.String readString()>();

        $i40 = virtualinvoke r22.<android.os.Parcel: int readInt()>();

        if $i40 == 0 goto label66;

        $r20 = <android.os.WorkSource: android.os.Parcelable$Creator CREATOR>;

        $r21 = interfaceinvoke $r20.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r22);

        r31 = (android.os.WorkSource) $r21;

        goto label67;

     label66:
        r31 = null;

     label67:
        $r19 = virtualinvoke r22.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke r0.<android.os.IPowerManager$Stub: void acquireWakeLock(android.os.IBinder,int,java.lang.String,java.lang.String,android.os.WorkSource,java.lang.String)>(r2, i47, r30, r3, r31, $r19);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label68:
        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>("android.os.IPowerManager");

        return 1;
    }

    public static void <clinit>()
    {
        <android.os.IPowerManager$Stub: int TRANSACTION_wakeUp> = 12;

        <android.os.IPowerManager$Stub: int TRANSACTION_userActivity> = 11;

        <android.os.IPowerManager$Stub: int TRANSACTION_updateWakeLockWorkSource> = 9;

        <android.os.IPowerManager$Stub: int TRANSACTION_updateWakeLockUids> = 4;

        <android.os.IPowerManager$Stub: int TRANSACTION_suppressAmbientDisplay> = 38;

        <android.os.IPowerManager$Stub: int TRANSACTION_shutdown> = 28;

        <android.os.IPowerManager$Stub: int TRANSACTION_setStayOnSetting> = 32;

        <android.os.IPowerManager$Stub: int TRANSACTION_setPowerSaveModeEnabled> = 19;

        <android.os.IPowerManager$Stub: int TRANSACTION_setPowerModeChecked> = 8;

        <android.os.IPowerManager$Stub: int TRANSACTION_setPowerMode> = 7;

        <android.os.IPowerManager$Stub: int TRANSACTION_setPowerBoost> = 6;

        <android.os.IPowerManager$Stub: int TRANSACTION_setDynamicPowerSaveHint> = 20;

        <android.os.IPowerManager$Stub: int TRANSACTION_setDozeAfterScreenOff> = 36;

        <android.os.IPowerManager$Stub: int TRANSACTION_setAttentionLight> = 35;

        <android.os.IPowerManager$Stub: int TRANSACTION_setAdaptivePowerSavePolicy> = 21;

        <android.os.IPowerManager$Stub: int TRANSACTION_setAdaptivePowerSaveEnabled> = 22;

        <android.os.IPowerManager$Stub: int TRANSACTION_releaseWakeLock> = 3;

        <android.os.IPowerManager$Stub: int TRANSACTION_rebootSafeMode> = 27;

        <android.os.IPowerManager$Stub: int TRANSACTION_reboot> = 26;

        <android.os.IPowerManager$Stub: int TRANSACTION_powerHint> = 5;

        <android.os.IPowerManager$Stub: int TRANSACTION_nap> = 14;

        <android.os.IPowerManager$Stub: int TRANSACTION_isWakeLockLevelSupported> = 10;

        <android.os.IPowerManager$Stub: int TRANSACTION_isScreenBrightnessBoosted> = 34;

        <android.os.IPowerManager$Stub: int TRANSACTION_isPowerSaveMode> = 17;

        <android.os.IPowerManager$Stub: int TRANSACTION_isLightDeviceIdleMode> = 25;

        <android.os.IPowerManager$Stub: int TRANSACTION_isInteractive> = 16;

        <android.os.IPowerManager$Stub: int TRANSACTION_isDeviceIdleMode> = 24;

        <android.os.IPowerManager$Stub: int TRANSACTION_isAmbientDisplaySuppressedForToken> = 39;

        <android.os.IPowerManager$Stub: int TRANSACTION_isAmbientDisplaySuppressed> = 40;

        <android.os.IPowerManager$Stub: int TRANSACTION_isAmbientDisplayAvailable> = 37;

        <android.os.IPowerManager$Stub: int TRANSACTION_goToSleep> = 13;

        <android.os.IPowerManager$Stub: int TRANSACTION_getPowerSaveState> = 18;

        <android.os.IPowerManager$Stub: int TRANSACTION_getPowerSaveModeTrigger> = 23;

        <android.os.IPowerManager$Stub: int TRANSACTION_getLastSleepReason> = 31;

        <android.os.IPowerManager$Stub: int TRANSACTION_getLastShutdownReason> = 30;

        <android.os.IPowerManager$Stub: int TRANSACTION_getBrightnessConstraint> = 15;

        <android.os.IPowerManager$Stub: int TRANSACTION_forceSuspend> = 41;

        <android.os.IPowerManager$Stub: int TRANSACTION_crash> = 29;

        <android.os.IPowerManager$Stub: int TRANSACTION_boostScreenBrightness> = 33;

        <android.os.IPowerManager$Stub: int TRANSACTION_acquireWakeLockWithUid> = 2;

        <android.os.IPowerManager$Stub: int TRANSACTION_acquireWakeLock> = 1;

        <android.os.IPowerManager$Stub: java.lang.String DESCRIPTOR> = "android.os.IPowerManager";

        return;
    }
}
