class android.os.IServiceManager$Stub$Proxy extends java.lang.Object implements android.os.IServiceManager
{
    public static android.os.IServiceManager sDefaultImpl;
    private android.os.IBinder mRemote;

    void <init>(android.os.IBinder)
    {
        android.os.IServiceManager$Stub$Proxy r0;
        android.os.IBinder r1;

        r0 := @this: android.os.IServiceManager$Stub$Proxy;

        r1 := @parameter0: android.os.IBinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.os.IServiceManager$Stub$Proxy: android.os.IBinder mRemote> = r1;

        return;
    }

    public void addService(java.lang.String, android.os.IBinder, boolean, int) throws android.os.RemoteException
    {
        android.os.IServiceManager$Stub$Proxy r0;
        android.os.IBinder r1, $r4;
        boolean z0, $z1;
        int i0;
        android.os.Parcel r2, r3;
        android.os.IServiceManager $r5, $r6;
        java.lang.Throwable $r7;
        java.lang.String r8;
        byte b1;

        r0 := @this: android.os.IServiceManager$Stub$Proxy;

        r8 := @parameter0: java.lang.String;

        r1 := @parameter1: android.os.IBinder;

        z0 := @parameter2: boolean;

        i0 := @parameter3: int;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.IServiceManager");

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r8);

        virtualinvoke r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r1);

     label2:
        if z0 == 0 goto label3;

        b1 = 1;

        goto label4;

     label3:
        b1 = 0;

     label4:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(b1);

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<android.os.IServiceManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(3, r2, r3, 0);

        if $z1 != 0 goto label6;

        $r5 = staticinvoke <android.os.IServiceManager$Stub: android.os.IServiceManager getDefaultImpl()>();

        if $r5 == null goto label6;

        $r6 = staticinvoke <android.os.IServiceManager$Stub: android.os.IServiceManager getDefaultImpl()>();

        interfaceinvoke $r6.<android.os.IServiceManager: void addService(java.lang.String,android.os.IBinder,boolean,int)>(r8, r1, z0, i0);

     label5:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label6:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label7:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label8:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label4 to label5 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
    }

    public android.os.IBinder asBinder()
    {
        android.os.IServiceManager$Stub$Proxy r0;
        android.os.IBinder $r1;

        r0 := @this: android.os.IServiceManager$Stub$Proxy;

        $r1 = r0.<android.os.IServiceManager$Stub$Proxy: android.os.IBinder mRemote>;

        return $r1;
    }

    public android.os.IBinder checkService(java.lang.String) throws android.os.RemoteException
    {
        android.os.IServiceManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r8, r9;
        boolean $z0;
        android.os.IServiceManager $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7;

        r0 := @this: android.os.IServiceManager$Stub$Proxy;

        r7 := @parameter0: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.IServiceManager");

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r7);

        $r3 = r0.<android.os.IServiceManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(2, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.os.IServiceManager$Stub: android.os.IServiceManager getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.os.IServiceManager$Stub: android.os.IServiceManager getDefaultImpl()>();

        r8 = interfaceinvoke $r5.<android.os.IServiceManager: android.os.IBinder checkService(java.lang.String)>(r7);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r8;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        r9 = virtualinvoke r2.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public java.lang.String getInterfaceDescriptor()
    {
        android.os.IServiceManager$Stub$Proxy r0;

        r0 := @this: android.os.IServiceManager$Stub$Proxy;

        return "android.os.IServiceManager";
    }

    public android.os.IBinder getService(java.lang.String) throws android.os.RemoteException
    {
        android.os.IServiceManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r8, r9;
        boolean $z0;
        android.os.IServiceManager $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7;

        r0 := @this: android.os.IServiceManager$Stub$Proxy;

        r7 := @parameter0: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.IServiceManager");

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r7);

        $r3 = r0.<android.os.IServiceManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.os.IServiceManager$Stub: android.os.IServiceManager getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.os.IServiceManager$Stub: android.os.IServiceManager getDefaultImpl()>();

        r8 = interfaceinvoke $r5.<android.os.IServiceManager: android.os.IBinder getService(java.lang.String)>(r7);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r8;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        r9 = virtualinvoke r2.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public boolean isDeclared(java.lang.String) throws android.os.RemoteException
    {
        android.os.IServiceManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder r3;
        int i0;
        boolean $z0, z1, z2;
        android.os.IServiceManager $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7;

        r0 := @this: android.os.IServiceManager$Stub$Proxy;

        r7 := @parameter0: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.IServiceManager");

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r7);

        r3 = r0.<android.os.IServiceManager$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(7, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r4 = staticinvoke <android.os.IServiceManager$Stub: android.os.IServiceManager getDefaultImpl()>();

        if $r4 == null goto label5;

        $r5 = staticinvoke <android.os.IServiceManager$Stub: android.os.IServiceManager getDefaultImpl()>();

        z2 = interfaceinvoke $r5.<android.os.IServiceManager: boolean isDeclared(java.lang.String)>(r7);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i0 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public java.lang.String[] listServices(int) throws android.os.RemoteException
    {
        android.os.IServiceManager$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.os.IServiceManager $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String[] r7, r8;

        r0 := @this: android.os.IServiceManager$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.IServiceManager");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r3 = r0.<android.os.IServiceManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(4, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.os.IServiceManager$Stub: android.os.IServiceManager getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.os.IServiceManager$Stub: android.os.IServiceManager getDefaultImpl()>();

        r7 = interfaceinvoke $r5.<android.os.IServiceManager: java.lang.String[] listServices(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r7;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        r8 = virtualinvoke r2.<android.os.Parcel: java.lang.String[] createStringArray()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r8;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void registerClientCallback(java.lang.String, android.os.IBinder, android.os.IClientCallback) throws android.os.RemoteException
    {
        android.os.IServiceManager$Stub$Proxy r0;
        android.os.IBinder r1, $r5, r10;
        android.os.IClientCallback r2;
        android.os.Parcel r3, r4;
        boolean $z0;
        android.os.IServiceManager $r6, $r7;
        java.lang.Throwable $r8;
        java.lang.String r9;

        r0 := @this: android.os.IServiceManager$Stub$Proxy;

        r9 := @parameter0: java.lang.String;

        r1 := @parameter1: android.os.IBinder;

        r2 := @parameter2: android.os.IClientCallback;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.IServiceManager");

        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r9);

        virtualinvoke r3.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r1);

     label02:
        if r2 == null goto label05;

     label03:
        r10 = interfaceinvoke r2.<android.os.IClientCallback: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r10 = null;

     label06:
        virtualinvoke r3.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r10);

        $r5 = r0.<android.os.IServiceManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(8, r3, r4, 0);

        if $z0 != 0 goto label08;

        $r6 = staticinvoke <android.os.IServiceManager$Stub: android.os.IServiceManager getDefaultImpl()>();

        if $r6 == null goto label08;

        $r7 = staticinvoke <android.os.IServiceManager$Stub: android.os.IServiceManager getDefaultImpl()>();

        interfaceinvoke $r7.<android.os.IServiceManager: void registerClientCallback(java.lang.String,android.os.IBinder,android.os.IClientCallback)>(r9, r1, r2);

     label07:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r4.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r8 := @caughtexception;

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void registerForNotifications(java.lang.String, android.os.IServiceCallback) throws android.os.RemoteException
    {
        android.os.IServiceManager$Stub$Proxy r0;
        android.os.IServiceCallback r1;
        android.os.Parcel r2, r3;
        android.os.IBinder $r4, r9;
        boolean $z0;
        android.os.IServiceManager $r5, $r6;
        java.lang.Throwable $r7;
        java.lang.String r8;

        r0 := @this: android.os.IServiceManager$Stub$Proxy;

        r8 := @parameter0: java.lang.String;

        r1 := @parameter1: android.os.IServiceCallback;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.IServiceManager");

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r8);

     label02:
        if r1 == null goto label05;

     label03:
        r9 = interfaceinvoke r1.<android.os.IServiceCallback: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r9 = null;

     label06:
        virtualinvoke r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r9);

        $r4 = r0.<android.os.IServiceManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(5, r2, r3, 0);

        if $z0 != 0 goto label08;

        $r5 = staticinvoke <android.os.IServiceManager$Stub: android.os.IServiceManager getDefaultImpl()>();

        if $r5 == null goto label08;

        $r6 = staticinvoke <android.os.IServiceManager$Stub: android.os.IServiceManager getDefaultImpl()>();

        interfaceinvoke $r6.<android.os.IServiceManager: void registerForNotifications(java.lang.String,android.os.IServiceCallback)>(r8, r1);

     label07:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void tryUnregisterService(java.lang.String, android.os.IBinder) throws android.os.RemoteException
    {
        android.os.IServiceManager$Stub$Proxy r0;
        android.os.IBinder r1, $r4;
        android.os.Parcel r2, r3;
        boolean $z0;
        android.os.IServiceManager $r5, $r6;
        java.lang.Throwable $r7;
        java.lang.String r8;

        r0 := @this: android.os.IServiceManager$Stub$Proxy;

        r8 := @parameter0: java.lang.String;

        r1 := @parameter1: android.os.IBinder;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.IServiceManager");

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r8);

        virtualinvoke r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r1);

        $r4 = r0.<android.os.IServiceManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(9, r2, r3, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.os.IServiceManager$Stub: android.os.IServiceManager getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.os.IServiceManager$Stub: android.os.IServiceManager getDefaultImpl()>();

        interfaceinvoke $r6.<android.os.IServiceManager: void tryUnregisterService(java.lang.String,android.os.IBinder)>(r8, r1);

     label2:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void unregisterForNotifications(java.lang.String, android.os.IServiceCallback) throws android.os.RemoteException
    {
        android.os.IServiceManager$Stub$Proxy r0;
        android.os.IServiceCallback r1;
        android.os.Parcel r2, r3;
        android.os.IBinder $r4, r9;
        boolean $z0;
        android.os.IServiceManager $r5, $r6;
        java.lang.Throwable $r7;
        java.lang.String r8;

        r0 := @this: android.os.IServiceManager$Stub$Proxy;

        r8 := @parameter0: java.lang.String;

        r1 := @parameter1: android.os.IServiceCallback;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.IServiceManager");

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r8);

     label02:
        if r1 == null goto label05;

     label03:
        r9 = interfaceinvoke r1.<android.os.IServiceCallback: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r9 = null;

     label06:
        virtualinvoke r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r9);

        $r4 = r0.<android.os.IServiceManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(6, r2, r3, 0);

        if $z0 != 0 goto label08;

        $r5 = staticinvoke <android.os.IServiceManager$Stub: android.os.IServiceManager getDefaultImpl()>();

        if $r5 == null goto label08;

        $r6 = staticinvoke <android.os.IServiceManager$Stub: android.os.IServiceManager getDefaultImpl()>();

        interfaceinvoke $r6.<android.os.IServiceManager: void unregisterForNotifications(java.lang.String,android.os.IServiceCallback)>(r8, r1);

     label07:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }
}
