class android.os.IThermalService$Stub$Proxy extends java.lang.Object implements android.os.IThermalService
{
    public static android.os.IThermalService sDefaultImpl;
    private android.os.IBinder mRemote;

    void <init>(android.os.IBinder)
    {
        android.os.IThermalService$Stub$Proxy r0;
        android.os.IBinder r1;

        r0 := @this: android.os.IThermalService$Stub$Proxy;

        r1 := @parameter0: android.os.IBinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.os.IThermalService$Stub$Proxy: android.os.IBinder mRemote> = r1;

        return;
    }

    public android.os.IBinder asBinder()
    {
        android.os.IThermalService$Stub$Proxy r0;
        android.os.IBinder $r1;

        r0 := @this: android.os.IThermalService$Stub$Proxy;

        $r1 = r0.<android.os.IThermalService$Stub$Proxy: android.os.IBinder mRemote>;

        return $r1;
    }

    public android.os.CoolingDevice[] getCurrentCoolingDevices() throws android.os.RemoteException
    {
        android.os.IThermalService$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.os.Parcelable$Creator $r4;
        java.lang.Object[] $r5;
        android.os.IThermalService $r6, $r7;
        java.lang.Throwable $r8;
        android.os.CoolingDevice[] r9, r10;

        r0 := @this: android.os.IThermalService$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.IThermalService");

        $r3 = r0.<android.os.IThermalService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(9, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <android.os.IThermalService$Stub: android.os.IThermalService getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <android.os.IThermalService$Stub: android.os.IThermalService getDefaultImpl()>();

        r9 = interfaceinvoke $r7.<android.os.IThermalService: android.os.CoolingDevice[] getCurrentCoolingDevices()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $r4 = <android.os.CoolingDevice: android.os.Parcelable$Creator CREATOR>;

        $r5 = virtualinvoke r2.<android.os.Parcel: java.lang.Object[] createTypedArray(android.os.Parcelable$Creator)>($r4);

        r10 = (android.os.CoolingDevice[]) $r5;

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r10;

     label5:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public android.os.CoolingDevice[] getCurrentCoolingDevicesWithType(int) throws android.os.RemoteException
    {
        android.os.IThermalService$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.os.Parcelable$Creator $r4;
        java.lang.Object[] $r5;
        android.os.IThermalService $r6, $r7;
        java.lang.Throwable $r8;
        android.os.CoolingDevice[] r9, r10;

        r0 := @this: android.os.IThermalService$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.IThermalService");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r3 = r0.<android.os.IThermalService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(10, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <android.os.IThermalService$Stub: android.os.IThermalService getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <android.os.IThermalService$Stub: android.os.IThermalService getDefaultImpl()>();

        r9 = interfaceinvoke $r7.<android.os.IThermalService: android.os.CoolingDevice[] getCurrentCoolingDevicesWithType(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $r4 = <android.os.CoolingDevice: android.os.Parcelable$Creator CREATOR>;

        $r5 = virtualinvoke r2.<android.os.Parcel: java.lang.Object[] createTypedArray(android.os.Parcelable$Creator)>($r4);

        r10 = (android.os.CoolingDevice[]) $r5;

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r10;

     label5:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public android.os.Temperature[] getCurrentTemperatures() throws android.os.RemoteException
    {
        android.os.IThermalService$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.os.Parcelable$Creator $r4;
        java.lang.Object[] $r5;
        android.os.IThermalService $r6, $r7;
        java.lang.Throwable $r8;
        android.os.Temperature[] r9, r10;

        r0 := @this: android.os.IThermalService$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.IThermalService");

        $r3 = r0.<android.os.IThermalService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(4, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <android.os.IThermalService$Stub: android.os.IThermalService getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <android.os.IThermalService$Stub: android.os.IThermalService getDefaultImpl()>();

        r9 = interfaceinvoke $r7.<android.os.IThermalService: android.os.Temperature[] getCurrentTemperatures()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $r4 = <android.os.Temperature: android.os.Parcelable$Creator CREATOR>;

        $r5 = virtualinvoke r2.<android.os.Parcel: java.lang.Object[] createTypedArray(android.os.Parcelable$Creator)>($r4);

        r10 = (android.os.Temperature[]) $r5;

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r10;

     label5:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public android.os.Temperature[] getCurrentTemperaturesWithType(int) throws android.os.RemoteException
    {
        android.os.IThermalService$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.os.Parcelable$Creator $r4;
        java.lang.Object[] $r5;
        android.os.IThermalService $r6, $r7;
        java.lang.Throwable $r8;
        android.os.Temperature[] r9, r10;

        r0 := @this: android.os.IThermalService$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.IThermalService");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r3 = r0.<android.os.IThermalService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(5, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <android.os.IThermalService$Stub: android.os.IThermalService getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <android.os.IThermalService$Stub: android.os.IThermalService getDefaultImpl()>();

        r9 = interfaceinvoke $r7.<android.os.IThermalService: android.os.Temperature[] getCurrentTemperaturesWithType(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $r4 = <android.os.Temperature: android.os.Parcelable$Creator CREATOR>;

        $r5 = virtualinvoke r2.<android.os.Parcel: java.lang.Object[] createTypedArray(android.os.Parcelable$Creator)>($r4);

        r10 = (android.os.Temperature[]) $r5;

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r10;

     label5:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public int getCurrentThermalStatus() throws android.os.RemoteException
    {
        android.os.IThermalService$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.os.IThermalService $r5, $r6;
        java.lang.Throwable $r7;
        int i0, i1;

        r0 := @this: android.os.IThermalService$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.IThermalService");

        $r4 = r0.<android.os.IThermalService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(8, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.os.IThermalService$Stub: android.os.IThermalService getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.os.IThermalService$Stub: android.os.IThermalService getDefaultImpl()>();

        i0 = interfaceinvoke $r6.<android.os.IThermalService: int getCurrentThermalStatus()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i0;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i1;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public java.lang.String getInterfaceDescriptor()
    {
        android.os.IThermalService$Stub$Proxy r0;

        r0 := @this: android.os.IThermalService$Stub$Proxy;

        return "android.os.IThermalService";
    }

    public float getThermalHeadroom(int) throws android.os.RemoteException
    {
        android.os.IThermalService$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.os.IThermalService $r5, $r6;
        java.lang.Throwable $r7;
        float f0, f1;

        r0 := @this: android.os.IThermalService$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.IThermalService");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<android.os.IThermalService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(11, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.os.IThermalService$Stub: android.os.IThermalService getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.os.IThermalService$Stub: android.os.IThermalService getDefaultImpl()>();

        f0 = interfaceinvoke $r6.<android.os.IThermalService: float getThermalHeadroom(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return f0;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        f1 = virtualinvoke r2.<android.os.Parcel: float readFloat()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return f1;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public boolean registerThermalEventListener(android.os.IThermalEventListener) throws android.os.RemoteException
    {
        android.os.IThermalService$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        int i0;
        boolean $z0, z1, z2;
        android.os.IThermalService $r3, $r4;
        java.lang.Throwable $r5;
        android.os.IThermalEventListener r6;
        android.os.IBinder r7, r8;

        r0 := @this: android.os.IThermalService$Stub$Proxy;

        r6 := @parameter0: android.os.IThermalEventListener;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.IThermalService");

     label02:
        if r6 == null goto label05;

     label03:
        r7 = interfaceinvoke r6.<android.os.IThermalEventListener: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r7 = null;

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r7);

        r8 = r0.<android.os.IThermalService$Stub$Proxy: android.os.IBinder mRemote>;

     label07:
        z1 = 0;

     label08:
        $z0 = interfaceinvoke r8.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1, r1, r2, 0);

        if $z0 != 0 goto label10;

        $r3 = staticinvoke <android.os.IThermalService$Stub: android.os.IThermalService getDefaultImpl()>();

        if $r3 == null goto label10;

        $r4 = staticinvoke <android.os.IThermalService$Stub: android.os.IThermalService getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<android.os.IThermalService: boolean registerThermalEventListener(android.os.IThermalEventListener)>(r6);

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label10:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label11:
        if i0 == 0 goto label12;

        z1 = 1;

     label12:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label13:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label03 to label04 with label13;
        catch java.lang.Throwable from label06 to label07 with label13;
        catch java.lang.Throwable from label08 to label09 with label13;
        catch java.lang.Throwable from label10 to label11 with label13;
    }

    public boolean registerThermalEventListenerWithType(android.os.IThermalEventListener, int) throws android.os.RemoteException
    {
        android.os.IThermalService$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        boolean $z0, z1, z2;
        android.os.IThermalService $r3, $r4;
        java.lang.Throwable $r5;
        android.os.IThermalEventListener r6;
        int i0, i1;
        android.os.IBinder r7, r8;

        r0 := @this: android.os.IThermalService$Stub$Proxy;

        r6 := @parameter0: android.os.IThermalEventListener;

        i0 := @parameter1: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.IThermalService");

     label02:
        if r6 == null goto label05;

     label03:
        r7 = interfaceinvoke r6.<android.os.IThermalEventListener: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r7 = null;

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r7);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        r8 = r0.<android.os.IThermalService$Stub$Proxy: android.os.IBinder mRemote>;

     label07:
        z1 = 0;

     label08:
        $z0 = interfaceinvoke r8.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(2, r1, r2, 0);

        if $z0 != 0 goto label10;

        $r3 = staticinvoke <android.os.IThermalService$Stub: android.os.IThermalService getDefaultImpl()>();

        if $r3 == null goto label10;

        $r4 = staticinvoke <android.os.IThermalService$Stub: android.os.IThermalService getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<android.os.IThermalService: boolean registerThermalEventListenerWithType(android.os.IThermalEventListener,int)>(r6, i0);

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label10:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label11:
        if i1 == 0 goto label12;

        z1 = 1;

     label12:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label13:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label03 to label04 with label13;
        catch java.lang.Throwable from label06 to label07 with label13;
        catch java.lang.Throwable from label08 to label09 with label13;
        catch java.lang.Throwable from label10 to label11 with label13;
    }

    public boolean registerThermalStatusListener(android.os.IThermalStatusListener) throws android.os.RemoteException
    {
        android.os.IThermalService$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        int i0;
        boolean $z0, z1, z2;
        android.os.IThermalService $r3, $r4;
        java.lang.Throwable $r5;
        android.os.IThermalStatusListener r6;
        android.os.IBinder r7, r8;

        r0 := @this: android.os.IThermalService$Stub$Proxy;

        r6 := @parameter0: android.os.IThermalStatusListener;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.IThermalService");

     label02:
        if r6 == null goto label05;

     label03:
        r7 = interfaceinvoke r6.<android.os.IThermalStatusListener: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r7 = null;

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r7);

        r8 = r0.<android.os.IThermalService$Stub$Proxy: android.os.IBinder mRemote>;

     label07:
        z1 = 0;

     label08:
        $z0 = interfaceinvoke r8.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(6, r1, r2, 0);

        if $z0 != 0 goto label10;

        $r3 = staticinvoke <android.os.IThermalService$Stub: android.os.IThermalService getDefaultImpl()>();

        if $r3 == null goto label10;

        $r4 = staticinvoke <android.os.IThermalService$Stub: android.os.IThermalService getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<android.os.IThermalService: boolean registerThermalStatusListener(android.os.IThermalStatusListener)>(r6);

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label10:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label11:
        if i0 == 0 goto label12;

        z1 = 1;

     label12:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label13:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label03 to label04 with label13;
        catch java.lang.Throwable from label06 to label07 with label13;
        catch java.lang.Throwable from label08 to label09 with label13;
        catch java.lang.Throwable from label10 to label11 with label13;
    }

    public boolean unregisterThermalEventListener(android.os.IThermalEventListener) throws android.os.RemoteException
    {
        android.os.IThermalService$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        int i0;
        boolean $z0, z1, z2;
        android.os.IThermalService $r3, $r4;
        java.lang.Throwable $r5;
        android.os.IThermalEventListener r6;
        android.os.IBinder r7, r8;

        r0 := @this: android.os.IThermalService$Stub$Proxy;

        r6 := @parameter0: android.os.IThermalEventListener;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.IThermalService");

     label02:
        if r6 == null goto label05;

     label03:
        r7 = interfaceinvoke r6.<android.os.IThermalEventListener: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r7 = null;

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r7);

        r8 = r0.<android.os.IThermalService$Stub$Proxy: android.os.IBinder mRemote>;

     label07:
        z1 = 0;

     label08:
        $z0 = interfaceinvoke r8.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(3, r1, r2, 0);

        if $z0 != 0 goto label10;

        $r3 = staticinvoke <android.os.IThermalService$Stub: android.os.IThermalService getDefaultImpl()>();

        if $r3 == null goto label10;

        $r4 = staticinvoke <android.os.IThermalService$Stub: android.os.IThermalService getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<android.os.IThermalService: boolean unregisterThermalEventListener(android.os.IThermalEventListener)>(r6);

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label10:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label11:
        if i0 == 0 goto label12;

        z1 = 1;

     label12:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label13:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label03 to label04 with label13;
        catch java.lang.Throwable from label06 to label07 with label13;
        catch java.lang.Throwable from label08 to label09 with label13;
        catch java.lang.Throwable from label10 to label11 with label13;
    }

    public boolean unregisterThermalStatusListener(android.os.IThermalStatusListener) throws android.os.RemoteException
    {
        android.os.IThermalService$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        int i0;
        boolean $z0, z1, z2;
        android.os.IThermalService $r3, $r4;
        java.lang.Throwable $r5;
        android.os.IThermalStatusListener r6;
        android.os.IBinder r7, r8;

        r0 := @this: android.os.IThermalService$Stub$Proxy;

        r6 := @parameter0: android.os.IThermalStatusListener;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.IThermalService");

     label02:
        if r6 == null goto label05;

     label03:
        r7 = interfaceinvoke r6.<android.os.IThermalStatusListener: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r7 = null;

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r7);

        r8 = r0.<android.os.IThermalService$Stub$Proxy: android.os.IBinder mRemote>;

     label07:
        z1 = 0;

     label08:
        $z0 = interfaceinvoke r8.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(7, r1, r2, 0);

        if $z0 != 0 goto label10;

        $r3 = staticinvoke <android.os.IThermalService$Stub: android.os.IThermalService getDefaultImpl()>();

        if $r3 == null goto label10;

        $r4 = staticinvoke <android.os.IThermalService$Stub: android.os.IThermalService getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<android.os.IThermalService: boolean unregisterThermalStatusListener(android.os.IThermalStatusListener)>(r6);

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label10:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label11:
        if i0 == 0 goto label12;

        z1 = 1;

     label12:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label13:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label03 to label04 with label13;
        catch java.lang.Throwable from label06 to label07 with label13;
        catch java.lang.Throwable from label08 to label09 with label13;
        catch java.lang.Throwable from label10 to label11 with label13;
    }
}
