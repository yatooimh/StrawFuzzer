class android.os.IUpdateEngine$Stub$Proxy extends java.lang.Object implements android.os.IUpdateEngine
{
    public static android.os.IUpdateEngine sDefaultImpl;
    private android.os.IBinder mRemote;

    void <init>(android.os.IBinder)
    {
        android.os.IUpdateEngine$Stub$Proxy r0;
        android.os.IBinder r1;

        r0 := @this: android.os.IUpdateEngine$Stub$Proxy;

        r1 := @parameter0: android.os.IBinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.os.IUpdateEngine$Stub$Proxy: android.os.IBinder mRemote> = r1;

        return;
    }

    public long allocateSpaceForPayload(java.lang.String, java.lang.String[]) throws android.os.RemoteException
    {
        android.os.IUpdateEngine$Stub$Proxy r0;
        java.lang.String[] r1;
        android.os.Parcel r2, r3;
        android.os.IBinder $r4;
        boolean $z0;
        android.os.IUpdateEngine $r5, $r6;
        java.lang.Throwable $r7;
        java.lang.String r8;
        long l0, l1;

        r0 := @this: android.os.IUpdateEngine$Stub$Proxy;

        r8 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String[];

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.IUpdateEngine");

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r8);

        virtualinvoke r2.<android.os.Parcel: void writeStringArray(java.lang.String[])>(r1);

        $r4 = r0.<android.os.IUpdateEngine$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(10, r2, r3, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.os.IUpdateEngine$Stub: android.os.IUpdateEngine getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.os.IUpdateEngine$Stub: android.os.IUpdateEngine getDefaultImpl()>();

        l0 = interfaceinvoke $r6.<android.os.IUpdateEngine: long allocateSpaceForPayload(java.lang.String,java.lang.String[])>(r8, r1);

     label2:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return l0;

     label3:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

        l1 = virtualinvoke r3.<android.os.Parcel: long readLong()>();

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return l1;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void applyPayload(java.lang.String, long, long, java.lang.String[]) throws android.os.RemoteException
    {
        android.os.IUpdateEngine$Stub$Proxy r0;
        long l0, l1;
        java.lang.String[] r1;
        android.os.Parcel r2, r3;
        android.os.IBinder $r4;
        boolean $z0;
        android.os.IUpdateEngine $r5, $r6;
        java.lang.Throwable $r7, $r8, $r9, $r10, $r11, r13;
        java.lang.String r12;

        r0 := @this: android.os.IUpdateEngine$Stub$Proxy;

        r12 := @parameter0: java.lang.String;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        r1 := @parameter3: java.lang.String[];

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.IUpdateEngine");

     label02:
        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r12);

     label03:
        virtualinvoke r2.<android.os.Parcel: void writeLong(long)>(l0);

     label04:
        virtualinvoke r2.<android.os.Parcel: void writeLong(long)>(l1);

     label05:
        virtualinvoke r2.<android.os.Parcel: void writeStringArray(java.lang.String[])>(r1);

        $r4 = r0.<android.os.IUpdateEngine$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1, r2, r3, 0);

        if $z0 != 0 goto label07;

        $r5 = staticinvoke <android.os.IUpdateEngine$Stub: android.os.IUpdateEngine getDefaultImpl()>();

        if $r5 == null goto label07;

        $r6 = staticinvoke <android.os.IUpdateEngine$Stub: android.os.IUpdateEngine getDefaultImpl()>();

        interfaceinvoke $r6.<android.os.IUpdateEngine: void applyPayload(java.lang.String,long,long,java.lang.String[])>(r12, l0, l1, r1);

     label06:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label07:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label08:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label09:
        $r10 := @caughtexception;

        r13 = $r10;

        goto label14;

     label10:
        $r9 := @caughtexception;

        r13 = $r9;

        goto label14;

     label11:
        $r11 := @caughtexception;

        r13 = $r11;

        goto label14;

     label12:
        $r7 := @caughtexception;

        r13 = $r7;

        goto label14;

     label13:
        $r8 := @caughtexception;

        r13 = $r8;

     label14:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r13;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label02 to label03 with label12;
        catch java.lang.Throwable from label03 to label04 with label11;
        catch java.lang.Throwable from label04 to label05 with label10;
        catch java.lang.Throwable from label05 to label06 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
    }

    public void applyPayloadFd(android.os.ParcelFileDescriptor, long, long, java.lang.String[]) throws android.os.RemoteException
    {
        android.os.IUpdateEngine$Stub$Proxy r0;
        long l0, l1;
        java.lang.String[] r1;
        android.os.Parcel r2, r3;
        android.os.IBinder $r4;
        boolean $z0;
        android.os.IUpdateEngine $r5, $r6;
        java.lang.Throwable $r7, $r8, $r9, $r10, r12;
        android.os.ParcelFileDescriptor r11;

        r0 := @this: android.os.IUpdateEngine$Stub$Proxy;

        r11 := @parameter0: android.os.ParcelFileDescriptor;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        r1 := @parameter3: java.lang.String[];

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.IUpdateEngine");

     label02:
        if r11 == null goto label05;

     label03:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r11.<android.os.ParcelFileDescriptor: void writeToParcel(android.os.Parcel,int)>(r2, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        virtualinvoke r2.<android.os.Parcel: void writeLong(long)>(l0);

     label07:
        virtualinvoke r2.<android.os.Parcel: void writeLong(long)>(l1);

     label08:
        virtualinvoke r2.<android.os.Parcel: void writeStringArray(java.lang.String[])>(r1);

        $r4 = r0.<android.os.IUpdateEngine$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(2, r2, r3, 0);

        if $z0 != 0 goto label10;

        $r5 = staticinvoke <android.os.IUpdateEngine$Stub: android.os.IUpdateEngine getDefaultImpl()>();

        if $r5 == null goto label10;

        $r6 = staticinvoke <android.os.IUpdateEngine$Stub: android.os.IUpdateEngine getDefaultImpl()>();

        interfaceinvoke $r6.<android.os.IUpdateEngine: void applyPayloadFd(android.os.ParcelFileDescriptor,long,long,java.lang.String[])>(r11, l0, l1, r1);

     label09:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label10:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label11:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label12:
        $r10 := @caughtexception;

        r12 = $r10;

        goto label16;

     label13:
        $r9 := @caughtexception;

        r12 = $r9;

        goto label16;

     label14:
        $r7 := @caughtexception;

        r12 = $r7;

        goto label16;

     label15:
        $r8 := @caughtexception;

        r12 = $r8;

     label16:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r12;

        catch java.lang.Throwable from label01 to label02 with label15;
        catch java.lang.Throwable from label03 to label04 with label15;
        catch java.lang.Throwable from label05 to label06 with label15;
        catch java.lang.Throwable from label06 to label07 with label14;
        catch java.lang.Throwable from label07 to label08 with label13;
        catch java.lang.Throwable from label08 to label09 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
    }

    public android.os.IBinder asBinder()
    {
        android.os.IUpdateEngine$Stub$Proxy r0;
        android.os.IBinder $r1;

        r0 := @this: android.os.IUpdateEngine$Stub$Proxy;

        $r1 = r0.<android.os.IUpdateEngine$Stub$Proxy: android.os.IBinder mRemote>;

        return $r1;
    }

    public boolean bind(android.os.IUpdateEngineCallback) throws android.os.RemoteException
    {
        android.os.IUpdateEngine$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        int i0;
        boolean $z0, z1, z2;
        android.os.IUpdateEngine $r3, $r4;
        java.lang.Throwable $r5;
        android.os.IUpdateEngineCallback r6;
        android.os.IBinder r7, r8;

        r0 := @this: android.os.IUpdateEngine$Stub$Proxy;

        r6 := @parameter0: android.os.IUpdateEngineCallback;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.IUpdateEngine");

     label02:
        if r6 == null goto label05;

     label03:
        r7 = interfaceinvoke r6.<android.os.IUpdateEngineCallback: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r7 = null;

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r7);

        r8 = r0.<android.os.IUpdateEngine$Stub$Proxy: android.os.IBinder mRemote>;

     label07:
        z1 = 0;

     label08:
        $z0 = interfaceinvoke r8.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(3, r1, r2, 0);

        if $z0 != 0 goto label10;

        $r3 = staticinvoke <android.os.IUpdateEngine$Stub: android.os.IUpdateEngine getDefaultImpl()>();

        if $r3 == null goto label10;

        $r4 = staticinvoke <android.os.IUpdateEngine$Stub: android.os.IUpdateEngine getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<android.os.IUpdateEngine: boolean bind(android.os.IUpdateEngineCallback)>(r6);

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label10:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label11:
        if i0 == 0 goto label12;

        z1 = 1;

     label12:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label13:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label03 to label04 with label13;
        catch java.lang.Throwable from label06 to label07 with label13;
        catch java.lang.Throwable from label08 to label09 with label13;
        catch java.lang.Throwable from label10 to label11 with label13;
    }

    public void cancel() throws android.os.RemoteException
    {
        android.os.IUpdateEngine$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.os.IUpdateEngine $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.os.IUpdateEngine$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.IUpdateEngine");

        $r4 = r0.<android.os.IUpdateEngine$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(7, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.os.IUpdateEngine$Stub: android.os.IUpdateEngine getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.os.IUpdateEngine$Stub: android.os.IUpdateEngine getDefaultImpl()>();

        interfaceinvoke $r6.<android.os.IUpdateEngine: void cancel()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void cleanupSuccessfulUpdate(android.os.IUpdateEngineCallback) throws android.os.RemoteException
    {
        android.os.IUpdateEngine$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r8;
        boolean $z0;
        android.os.IUpdateEngine $r4, $r5;
        java.lang.Throwable $r6;
        android.os.IUpdateEngineCallback r7;

        r0 := @this: android.os.IUpdateEngine$Stub$Proxy;

        r7 := @parameter0: android.os.IUpdateEngineCallback;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.IUpdateEngine");

     label02:
        if r7 == null goto label05;

     label03:
        r8 = interfaceinvoke r7.<android.os.IUpdateEngineCallback: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r8 = null;

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r8);

        $r3 = r0.<android.os.IUpdateEngine$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(11, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.os.IUpdateEngine$Stub: android.os.IUpdateEngine getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.os.IUpdateEngine$Stub: android.os.IUpdateEngine getDefaultImpl()>();

        interfaceinvoke $r5.<android.os.IUpdateEngine: void cleanupSuccessfulUpdate(android.os.IUpdateEngineCallback)>(r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public java.lang.String getInterfaceDescriptor()
    {
        android.os.IUpdateEngine$Stub$Proxy r0;

        r0 := @this: android.os.IUpdateEngine$Stub$Proxy;

        return "android.os.IUpdateEngine";
    }

    public void resetStatus() throws android.os.RemoteException
    {
        android.os.IUpdateEngine$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.os.IUpdateEngine $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.os.IUpdateEngine$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.IUpdateEngine");

        $r4 = r0.<android.os.IUpdateEngine$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(8, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.os.IUpdateEngine$Stub: android.os.IUpdateEngine getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.os.IUpdateEngine$Stub: android.os.IUpdateEngine getDefaultImpl()>();

        interfaceinvoke $r6.<android.os.IUpdateEngine: void resetStatus()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void resume() throws android.os.RemoteException
    {
        android.os.IUpdateEngine$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.os.IUpdateEngine $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.os.IUpdateEngine$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.IUpdateEngine");

        $r4 = r0.<android.os.IUpdateEngine$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(6, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.os.IUpdateEngine$Stub: android.os.IUpdateEngine getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.os.IUpdateEngine$Stub: android.os.IUpdateEngine getDefaultImpl()>();

        interfaceinvoke $r6.<android.os.IUpdateEngine: void resume()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void suspend() throws android.os.RemoteException
    {
        android.os.IUpdateEngine$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.os.IUpdateEngine $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.os.IUpdateEngine$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.IUpdateEngine");

        $r4 = r0.<android.os.IUpdateEngine$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(5, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.os.IUpdateEngine$Stub: android.os.IUpdateEngine getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.os.IUpdateEngine$Stub: android.os.IUpdateEngine getDefaultImpl()>();

        interfaceinvoke $r6.<android.os.IUpdateEngine: void suspend()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public boolean unbind(android.os.IUpdateEngineCallback) throws android.os.RemoteException
    {
        android.os.IUpdateEngine$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        int i0;
        boolean $z0, z1, z2;
        android.os.IUpdateEngine $r3, $r4;
        java.lang.Throwable $r5;
        android.os.IUpdateEngineCallback r6;
        android.os.IBinder r7, r8;

        r0 := @this: android.os.IUpdateEngine$Stub$Proxy;

        r6 := @parameter0: android.os.IUpdateEngineCallback;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.IUpdateEngine");

     label02:
        if r6 == null goto label05;

     label03:
        r7 = interfaceinvoke r6.<android.os.IUpdateEngineCallback: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r7 = null;

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r7);

        r8 = r0.<android.os.IUpdateEngine$Stub$Proxy: android.os.IBinder mRemote>;

     label07:
        z1 = 0;

     label08:
        $z0 = interfaceinvoke r8.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(4, r1, r2, 0);

        if $z0 != 0 goto label10;

        $r3 = staticinvoke <android.os.IUpdateEngine$Stub: android.os.IUpdateEngine getDefaultImpl()>();

        if $r3 == null goto label10;

        $r4 = staticinvoke <android.os.IUpdateEngine$Stub: android.os.IUpdateEngine getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<android.os.IUpdateEngine: boolean unbind(android.os.IUpdateEngineCallback)>(r6);

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label10:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label11:
        if i0 == 0 goto label12;

        z1 = 1;

     label12:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label13:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label03 to label04 with label13;
        catch java.lang.Throwable from label06 to label07 with label13;
        catch java.lang.Throwable from label08 to label09 with label13;
        catch java.lang.Throwable from label10 to label11 with label13;
    }

    public boolean verifyPayloadApplicable(java.lang.String) throws android.os.RemoteException
    {
        android.os.IUpdateEngine$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder r3;
        int i0;
        boolean $z0, z1, z2;
        android.os.IUpdateEngine $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7;

        r0 := @this: android.os.IUpdateEngine$Stub$Proxy;

        r7 := @parameter0: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.IUpdateEngine");

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r7);

        r3 = r0.<android.os.IUpdateEngine$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(9, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r4 = staticinvoke <android.os.IUpdateEngine$Stub: android.os.IUpdateEngine getDefaultImpl()>();

        if $r4 == null goto label5;

        $r5 = staticinvoke <android.os.IUpdateEngine$Stub: android.os.IUpdateEngine getDefaultImpl()>();

        z2 = interfaceinvoke $r5.<android.os.IUpdateEngine: boolean verifyPayloadApplicable(java.lang.String)>(r7);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i0 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }
}
