class android.os.IUpdateLock$Stub$Proxy extends java.lang.Object implements android.os.IUpdateLock
{
    public static android.os.IUpdateLock sDefaultImpl;
    private android.os.IBinder mRemote;

    void <init>(android.os.IBinder)
    {
        android.os.IUpdateLock$Stub$Proxy r0;
        android.os.IBinder r1;

        r0 := @this: android.os.IUpdateLock$Stub$Proxy;

        r1 := @parameter0: android.os.IBinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.os.IUpdateLock$Stub$Proxy: android.os.IBinder mRemote> = r1;

        return;
    }

    public void acquireUpdateLock(android.os.IBinder, java.lang.String) throws android.os.RemoteException
    {
        android.os.IUpdateLock$Stub$Proxy r0;
        java.lang.String r1;
        android.os.Parcel r2, r3;
        android.os.IBinder $r4, r8;
        boolean $z0;
        android.os.IUpdateLock $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.os.IUpdateLock$Stub$Proxy;

        r8 := @parameter0: android.os.IBinder;

        r1 := @parameter1: java.lang.String;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.IUpdateLock");

        virtualinvoke r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r8);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r4 = r0.<android.os.IUpdateLock$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1, r2, r3, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.os.IUpdateLock$Stub: android.os.IUpdateLock getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.os.IUpdateLock$Stub: android.os.IUpdateLock getDefaultImpl()>();

        interfaceinvoke $r6.<android.os.IUpdateLock: void acquireUpdateLock(android.os.IBinder,java.lang.String)>(r8, r1);

     label2:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public android.os.IBinder asBinder()
    {
        android.os.IUpdateLock$Stub$Proxy r0;
        android.os.IBinder $r1;

        r0 := @this: android.os.IUpdateLock$Stub$Proxy;

        $r1 = r0.<android.os.IUpdateLock$Stub$Proxy: android.os.IBinder mRemote>;

        return $r1;
    }

    public java.lang.String getInterfaceDescriptor()
    {
        android.os.IUpdateLock$Stub$Proxy r0;

        r0 := @this: android.os.IUpdateLock$Stub$Proxy;

        return "android.os.IUpdateLock";
    }

    public void releaseUpdateLock(android.os.IBinder) throws android.os.RemoteException
    {
        android.os.IUpdateLock$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r7;
        boolean $z0;
        android.os.IUpdateLock $r4, $r5;
        java.lang.Throwable $r6;

        r0 := @this: android.os.IUpdateLock$Stub$Proxy;

        r7 := @parameter0: android.os.IBinder;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.IUpdateLock");

        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r7);

        $r3 = r0.<android.os.IUpdateLock$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(2, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.os.IUpdateLock$Stub: android.os.IUpdateLock getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.os.IUpdateLock$Stub: android.os.IUpdateLock getDefaultImpl()>();

        interfaceinvoke $r5.<android.os.IUpdateLock: void releaseUpdateLock(android.os.IBinder)>(r7);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }
}
