class android.os.IVibratorService$Stub$Proxy extends java.lang.Object implements android.os.IVibratorService
{
    public static android.os.IVibratorService sDefaultImpl;
    private android.os.IBinder mRemote;

    void <init>(android.os.IBinder)
    {
        android.os.IVibratorService$Stub$Proxy r0;
        android.os.IBinder r1;

        r0 := @this: android.os.IVibratorService$Stub$Proxy;

        r1 := @parameter0: android.os.IBinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.os.IVibratorService$Stub$Proxy: android.os.IBinder mRemote> = r1;

        return;
    }

    public int[] areEffectsSupported(int[]) throws android.os.RemoteException
    {
        android.os.IVibratorService$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.os.IVibratorService $r4, $r5;
        java.lang.Throwable $r6;
        int[] r7, r8, r9;

        r0 := @this: android.os.IVibratorService$Stub$Proxy;

        r7 := @parameter0: int[];

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.IVibratorService");

        virtualinvoke r1.<android.os.Parcel: void writeIntArray(int[])>(r7);

        $r3 = r0.<android.os.IVibratorService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(6, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.os.IVibratorService$Stub: android.os.IVibratorService getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.os.IVibratorService$Stub: android.os.IVibratorService getDefaultImpl()>();

        r8 = interfaceinvoke $r5.<android.os.IVibratorService: int[] areEffectsSupported(int[])>(r7);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r8;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        r9 = virtualinvoke r2.<android.os.Parcel: int[] createIntArray()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public boolean[] arePrimitivesSupported(int[]) throws android.os.RemoteException
    {
        android.os.IVibratorService$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.os.IVibratorService $r4, $r5;
        java.lang.Throwable $r6;
        int[] r7;
        boolean[] r8, r9;

        r0 := @this: android.os.IVibratorService$Stub$Proxy;

        r7 := @parameter0: int[];

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.IVibratorService");

        virtualinvoke r1.<android.os.Parcel: void writeIntArray(int[])>(r7);

        $r3 = r0.<android.os.IVibratorService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(7, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.os.IVibratorService$Stub: android.os.IVibratorService getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.os.IVibratorService$Stub: android.os.IVibratorService getDefaultImpl()>();

        r8 = interfaceinvoke $r5.<android.os.IVibratorService: boolean[] arePrimitivesSupported(int[])>(r7);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r8;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        r9 = virtualinvoke r2.<android.os.Parcel: boolean[] createBooleanArray()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public android.os.IBinder asBinder()
    {
        android.os.IVibratorService$Stub$Proxy r0;
        android.os.IBinder $r1;

        r0 := @this: android.os.IVibratorService$Stub$Proxy;

        $r1 = r0.<android.os.IVibratorService$Stub$Proxy: android.os.IBinder mRemote>;

        return $r1;
    }

    public void cancelVibrate(android.os.IBinder) throws android.os.RemoteException
    {
        android.os.IVibratorService$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r7;
        boolean $z0;
        android.os.IVibratorService $r4, $r5;
        java.lang.Throwable $r6;

        r0 := @this: android.os.IVibratorService$Stub$Proxy;

        r7 := @parameter0: android.os.IBinder;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.IVibratorService");

        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r7);

        $r3 = r0.<android.os.IVibratorService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(10, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.os.IVibratorService$Stub: android.os.IVibratorService getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.os.IVibratorService$Stub: android.os.IVibratorService getDefaultImpl()>();

        interfaceinvoke $r5.<android.os.IVibratorService: void cancelVibrate(android.os.IBinder)>(r7);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public java.lang.String getInterfaceDescriptor()
    {
        android.os.IVibratorService$Stub$Proxy r0;

        r0 := @this: android.os.IVibratorService$Stub$Proxy;

        return "android.os.IVibratorService";
    }

    public boolean hasAmplitudeControl() throws android.os.RemoteException
    {
        android.os.IVibratorService$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        int i0;
        boolean $z0, z1, z2;
        android.os.IVibratorService $r3, $r4;
        java.lang.Throwable $r5;
        android.os.IBinder r6;

        r0 := @this: android.os.IVibratorService$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.IVibratorService");

        r6 = r0.<android.os.IVibratorService$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(5, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r3 = staticinvoke <android.os.IVibratorService$Stub: android.os.IVibratorService getDefaultImpl()>();

        if $r3 == null goto label5;

        $r4 = staticinvoke <android.os.IVibratorService$Stub: android.os.IVibratorService getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<android.os.IVibratorService: boolean hasAmplitudeControl()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i0 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public boolean hasVibrator() throws android.os.RemoteException
    {
        android.os.IVibratorService$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        int i0;
        boolean $z0, z1, z2;
        android.os.IVibratorService $r3, $r4;
        java.lang.Throwable $r5;
        android.os.IBinder r6;

        r0 := @this: android.os.IVibratorService$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.IVibratorService");

        r6 = r0.<android.os.IVibratorService$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r3 = staticinvoke <android.os.IVibratorService$Stub: android.os.IVibratorService getDefaultImpl()>();

        if $r3 == null goto label5;

        $r4 = staticinvoke <android.os.IVibratorService$Stub: android.os.IVibratorService getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<android.os.IVibratorService: boolean hasVibrator()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i0 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public boolean isVibrating() throws android.os.RemoteException
    {
        android.os.IVibratorService$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        int i0;
        boolean $z0, z1, z2;
        android.os.IVibratorService $r3, $r4;
        java.lang.Throwable $r5;
        android.os.IBinder r6;

        r0 := @this: android.os.IVibratorService$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.IVibratorService");

        r6 = r0.<android.os.IVibratorService$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(2, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r3 = staticinvoke <android.os.IVibratorService$Stub: android.os.IVibratorService getDefaultImpl()>();

        if $r3 == null goto label5;

        $r4 = staticinvoke <android.os.IVibratorService$Stub: android.os.IVibratorService getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<android.os.IVibratorService: boolean isVibrating()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i0 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public boolean registerVibratorStateListener(android.os.IVibratorStateListener) throws android.os.RemoteException
    {
        android.os.IVibratorService$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        int i0;
        boolean $z0, z1, z2;
        android.os.IVibratorService $r3, $r4;
        java.lang.Throwable $r5;
        android.os.IVibratorStateListener r6;
        android.os.IBinder r7, r8;

        r0 := @this: android.os.IVibratorService$Stub$Proxy;

        r6 := @parameter0: android.os.IVibratorStateListener;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.IVibratorService");

     label02:
        if r6 == null goto label05;

     label03:
        r7 = interfaceinvoke r6.<android.os.IVibratorStateListener: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r7 = null;

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r7);

        r8 = r0.<android.os.IVibratorService$Stub$Proxy: android.os.IBinder mRemote>;

     label07:
        z1 = 0;

     label08:
        $z0 = interfaceinvoke r8.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(3, r1, r2, 0);

        if $z0 != 0 goto label10;

        $r3 = staticinvoke <android.os.IVibratorService$Stub: android.os.IVibratorService getDefaultImpl()>();

        if $r3 == null goto label10;

        $r4 = staticinvoke <android.os.IVibratorService$Stub: android.os.IVibratorService getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<android.os.IVibratorService: boolean registerVibratorStateListener(android.os.IVibratorStateListener)>(r6);

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label10:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label11:
        if i0 == 0 goto label12;

        z1 = 1;

     label12:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label13:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label03 to label04 with label13;
        catch java.lang.Throwable from label06 to label07 with label13;
        catch java.lang.Throwable from label08 to label09 with label13;
        catch java.lang.Throwable from label10 to label11 with label13;
    }

    public boolean setAlwaysOnEffect(int, java.lang.String, int, android.os.VibrationEffect, android.os.VibrationAttributes) throws android.os.RemoteException
    {
        android.os.IVibratorService$Stub$Proxy r0;
        int i0, i1, i2;
        android.os.VibrationEffect r1;
        android.os.VibrationAttributes r2;
        android.os.Parcel r3, r4;
        android.os.IBinder $r5;
        boolean $z0, z1, z2;
        android.os.IVibratorService $r6, $r7;
        java.lang.Throwable $r8, $r9, $r10, $r11, $r12, r14;
        java.lang.String r13;

        r0 := @this: android.os.IVibratorService$Stub$Proxy;

        i1 := @parameter0: int;

        r13 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r1 := @parameter3: android.os.VibrationEffect;

        r2 := @parameter4: android.os.VibrationAttributes;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.IVibratorService");

     label02:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(i1);

     label03:
        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r13);

     label04:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(i0);

     label05:
        z1 = 1;

        if r1 == null goto label08;

     label06:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<android.os.VibrationEffect: void writeToParcel(android.os.Parcel,int)>(r3, 0);

     label07:
        goto label09;

     label08:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(0);

     label09:
        if r2 == null goto label12;

     label10:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r2.<android.os.VibrationAttributes: void writeToParcel(android.os.Parcel,int)>(r3, 0);

     label11:
        goto label13;

     label12:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(0);

     label13:
        $r5 = r0.<android.os.IVibratorService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(8, r3, r4, 0);

        if $z0 != 0 goto label15;

        $r6 = staticinvoke <android.os.IVibratorService$Stub: android.os.IVibratorService getDefaultImpl()>();

        if $r6 == null goto label15;

        $r7 = staticinvoke <android.os.IVibratorService$Stub: android.os.IVibratorService getDefaultImpl()>();

        z2 = interfaceinvoke $r7.<android.os.IVibratorService: boolean setAlwaysOnEffect(int,java.lang.String,int,android.os.VibrationEffect,android.os.VibrationAttributes)>(i1, r13, i0, r1, r2);

     label14:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return z2;

     label15:
        virtualinvoke r4.<android.os.Parcel: void readException()>();

        i2 = virtualinvoke r4.<android.os.Parcel: int readInt()>();

     label16:
        if i2 == 0 goto label17;

        goto label18;

     label17:
        z1 = 0;

     label18:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return z1;

     label19:
        $r12 := @caughtexception;

        r14 = $r12;

        goto label24;

     label20:
        $r10 := @caughtexception;

        r14 = $r10;

        goto label24;

     label21:
        $r8 := @caughtexception;

        r14 = $r8;

        goto label24;

     label22:
        $r9 := @caughtexception;

        r14 = $r9;

        goto label24;

     label23:
        $r11 := @caughtexception;

        r14 = $r11;

     label24:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw r14;

        catch java.lang.Throwable from label01 to label02 with label23;
        catch java.lang.Throwable from label02 to label03 with label22;
        catch java.lang.Throwable from label03 to label04 with label21;
        catch java.lang.Throwable from label04 to label05 with label20;
        catch java.lang.Throwable from label06 to label07 with label20;
        catch java.lang.Throwable from label08 to label09 with label20;
        catch java.lang.Throwable from label10 to label11 with label20;
        catch java.lang.Throwable from label12 to label13 with label20;
        catch java.lang.Throwable from label13 to label14 with label19;
        catch java.lang.Throwable from label15 to label16 with label19;
    }

    public boolean unregisterVibratorStateListener(android.os.IVibratorStateListener) throws android.os.RemoteException
    {
        android.os.IVibratorService$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        int i0;
        boolean $z0, z1, z2;
        android.os.IVibratorService $r3, $r4;
        java.lang.Throwable $r5;
        android.os.IVibratorStateListener r6;
        android.os.IBinder r7, r8;

        r0 := @this: android.os.IVibratorService$Stub$Proxy;

        r6 := @parameter0: android.os.IVibratorStateListener;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.IVibratorService");

     label02:
        if r6 == null goto label05;

     label03:
        r7 = interfaceinvoke r6.<android.os.IVibratorStateListener: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r7 = null;

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r7);

        r8 = r0.<android.os.IVibratorService$Stub$Proxy: android.os.IBinder mRemote>;

     label07:
        z1 = 0;

     label08:
        $z0 = interfaceinvoke r8.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(4, r1, r2, 0);

        if $z0 != 0 goto label10;

        $r3 = staticinvoke <android.os.IVibratorService$Stub: android.os.IVibratorService getDefaultImpl()>();

        if $r3 == null goto label10;

        $r4 = staticinvoke <android.os.IVibratorService$Stub: android.os.IVibratorService getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<android.os.IVibratorService: boolean unregisterVibratorStateListener(android.os.IVibratorStateListener)>(r6);

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label10:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label11:
        if i0 == 0 goto label12;

        z1 = 1;

     label12:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label13:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label03 to label04 with label13;
        catch java.lang.Throwable from label06 to label07 with label13;
        catch java.lang.Throwable from label08 to label09 with label13;
        catch java.lang.Throwable from label10 to label11 with label13;
    }

    public void vibrate(int, java.lang.String, android.os.VibrationEffect, android.os.VibrationAttributes, java.lang.String, android.os.IBinder) throws android.os.RemoteException
    {
        android.os.IVibratorService$Stub$Proxy r0;
        int i0;
        android.os.VibrationEffect r1;
        android.os.VibrationAttributes r2;
        java.lang.String r3, r15;
        android.os.IBinder r4, $r7;
        android.os.Parcel r5, r6;
        boolean $z0;
        android.os.IVibratorService $r8, $r9;
        java.lang.Throwable $r10, $r11, $r12, $r13, $r14, r16;

        r0 := @this: android.os.IVibratorService$Stub$Proxy;

        i0 := @parameter0: int;

        r15 := @parameter1: java.lang.String;

        r1 := @parameter2: android.os.VibrationEffect;

        r2 := @parameter3: android.os.VibrationAttributes;

        r3 := @parameter4: java.lang.String;

        r4 := @parameter5: android.os.IBinder;

        r5 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r6 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r5.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.IVibratorService");

     label02:
        virtualinvoke r5.<android.os.Parcel: void writeInt(int)>(i0);

     label03:
        virtualinvoke r5.<android.os.Parcel: void writeString(java.lang.String)>(r15);

     label04:
        if r1 == null goto label07;

     label05:
        virtualinvoke r5.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<android.os.VibrationEffect: void writeToParcel(android.os.Parcel,int)>(r5, 0);

     label06:
        goto label08;

     label07:
        virtualinvoke r5.<android.os.Parcel: void writeInt(int)>(0);

     label08:
        if r2 == null goto label11;

     label09:
        virtualinvoke r5.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r2.<android.os.VibrationAttributes: void writeToParcel(android.os.Parcel,int)>(r5, 0);

     label10:
        goto label12;

     label11:
        virtualinvoke r5.<android.os.Parcel: void writeInt(int)>(0);

     label12:
        virtualinvoke r5.<android.os.Parcel: void writeString(java.lang.String)>(r3);

     label13:
        virtualinvoke r5.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r4);

        $r7 = r0.<android.os.IVibratorService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r7.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(9, r5, r6, 0);

        if $z0 != 0 goto label15;

        $r8 = staticinvoke <android.os.IVibratorService$Stub: android.os.IVibratorService getDefaultImpl()>();

        if $r8 == null goto label15;

        $r9 = staticinvoke <android.os.IVibratorService$Stub: android.os.IVibratorService getDefaultImpl()>();

        interfaceinvoke $r9.<android.os.IVibratorService: void vibrate(int,java.lang.String,android.os.VibrationEffect,android.os.VibrationAttributes,java.lang.String,android.os.IBinder)>(i0, r15, r1, r2, r3, r4);

     label14:
        virtualinvoke r6.<android.os.Parcel: void recycle()>();

        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        return;

     label15:
        virtualinvoke r6.<android.os.Parcel: void readException()>();

     label16:
        virtualinvoke r6.<android.os.Parcel: void recycle()>();

        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        return;

     label17:
        $r11 := @caughtexception;

        r16 = $r11;

        goto label22;

     label18:
        $r10 := @caughtexception;

        r16 = $r10;

        goto label22;

     label19:
        $r12 := @caughtexception;

        r16 = $r12;

        goto label22;

     label20:
        $r14 := @caughtexception;

        r16 = $r14;

        goto label22;

     label21:
        $r13 := @caughtexception;

        r16 = $r13;

     label22:
        virtualinvoke r6.<android.os.Parcel: void recycle()>();

        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        throw r16;

        catch java.lang.Throwable from label01 to label02 with label21;
        catch java.lang.Throwable from label02 to label03 with label20;
        catch java.lang.Throwable from label03 to label04 with label19;
        catch java.lang.Throwable from label05 to label06 with label19;
        catch java.lang.Throwable from label07 to label08 with label19;
        catch java.lang.Throwable from label09 to label10 with label19;
        catch java.lang.Throwable from label11 to label12 with label19;
        catch java.lang.Throwable from label12 to label13 with label18;
        catch java.lang.Throwable from label13 to label14 with label17;
        catch java.lang.Throwable from label15 to label16 with label17;
    }
}
