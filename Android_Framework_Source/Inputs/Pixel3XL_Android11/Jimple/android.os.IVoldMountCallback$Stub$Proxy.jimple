class android.os.IVoldMountCallback$Stub$Proxy extends java.lang.Object implements android.os.IVoldMountCallback
{
    public static android.os.IVoldMountCallback sDefaultImpl;
    private android.os.IBinder mRemote;

    void <init>(android.os.IBinder)
    {
        android.os.IVoldMountCallback$Stub$Proxy r0;
        android.os.IBinder r1;

        r0 := @this: android.os.IVoldMountCallback$Stub$Proxy;

        r1 := @parameter0: android.os.IBinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.os.IVoldMountCallback$Stub$Proxy: android.os.IBinder mRemote> = r1;

        return;
    }

    public android.os.IBinder asBinder()
    {
        android.os.IVoldMountCallback$Stub$Proxy r0;
        android.os.IBinder $r1;

        r0 := @this: android.os.IVoldMountCallback$Stub$Proxy;

        $r1 = r0.<android.os.IVoldMountCallback$Stub$Proxy: android.os.IBinder mRemote>;

        return $r1;
    }

    public java.lang.String getInterfaceDescriptor()
    {
        android.os.IVoldMountCallback$Stub$Proxy r0;

        r0 := @this: android.os.IVoldMountCallback$Stub$Proxy;

        return "android.os.IVoldMountCallback";
    }

    public boolean onVolumeChecking(java.io.FileDescriptor, java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        android.os.IVoldMountCallback$Stub$Proxy r0;
        java.lang.String r1, r2;
        android.os.Parcel r3, r4;
        android.os.IBinder r5;
        int i0;
        boolean $z0, z1, z2;
        android.os.IVoldMountCallback $r6, $r7;
        java.lang.Throwable $r8;
        java.io.FileDescriptor r9;

        r0 := @this: android.os.IVoldMountCallback$Stub$Proxy;

        r9 := @parameter0: java.io.FileDescriptor;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.IVoldMountCallback");

        virtualinvoke r3.<android.os.Parcel: void writeRawFileDescriptor(java.io.FileDescriptor)>(r9);

        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r2);

        r5 = r0.<android.os.IVoldMountCallback$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1, r3, r4, 0);

        if $z0 != 0 goto label5;

        $r6 = staticinvoke <android.os.IVoldMountCallback$Stub: android.os.IVoldMountCallback getDefaultImpl()>();

        if $r6 == null goto label5;

        $r7 = staticinvoke <android.os.IVoldMountCallback$Stub: android.os.IVoldMountCallback getDefaultImpl()>();

        z2 = interfaceinvoke $r7.<android.os.IVoldMountCallback: boolean onVolumeChecking(java.io.FileDescriptor,java.lang.String,java.lang.String)>(r9, r1, r2);

     label4:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r4.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r4.<android.os.Parcel: int readInt()>();

     label6:
        if i0 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r8 := @caughtexception;

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }
}
