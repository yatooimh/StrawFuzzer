class android.os.IncidentManager$DumpCallback$1 extends android.os.IIncidentDumpCallback$Stub
{
    final android.os.IncidentManager$DumpCallback this$0;

    void <init>(android.os.IncidentManager$DumpCallback)
    {
        android.os.IncidentManager$DumpCallback$1 r0;
        android.os.IncidentManager$DumpCallback r1;

        r0 := @this: android.os.IncidentManager$DumpCallback$1;

        r1 := @parameter0: android.os.IncidentManager$DumpCallback;

        r0.<android.os.IncidentManager$DumpCallback$1: android.os.IncidentManager$DumpCallback this$0> = r1;

        specialinvoke r0.<android.os.IIncidentDumpCallback$Stub: void <init>()>();

        return;
    }

    public void lambda$onDumpSection$0$IncidentManager$DumpCallback$1(android.os.ParcelFileDescriptor)
    {
        android.os.IncidentManager$DumpCallback$1 r0;
        android.os.ParcelFileDescriptor r1;
        android.os.IncidentManager$DumpCallback r2;
        int $i0;
        android.os.ParcelFileDescriptor$AutoCloseOutputStream $r3;

        r0 := @this: android.os.IncidentManager$DumpCallback$1;

        r1 := @parameter0: android.os.ParcelFileDescriptor;

        r2 = r0.<android.os.IncidentManager$DumpCallback$1: android.os.IncidentManager$DumpCallback this$0>;

        $i0 = staticinvoke <android.os.IncidentManager$DumpCallback: int access$100(android.os.IncidentManager$DumpCallback)>(r2);

        $r3 = new android.os.ParcelFileDescriptor$AutoCloseOutputStream;

        specialinvoke $r3.<android.os.ParcelFileDescriptor$AutoCloseOutputStream: void <init>(android.os.ParcelFileDescriptor)>(r1);

        virtualinvoke r2.<android.os.IncidentManager$DumpCallback: void onDumpSection(int,java.io.OutputStream)>($i0, $r3);

        return;
    }

    public void onDumpSection(android.os.ParcelFileDescriptor)
    {
        android.os.IncidentManager$DumpCallback$1 r0;
        android.os.ParcelFileDescriptor r1;
        android.os.IncidentManager$DumpCallback r2, $r3, $r6;
        java.util.concurrent.Executor $r4, $r7;
        int $i0;
        android.os.ParcelFileDescriptor$AutoCloseOutputStream $r5;
        android.os._$$Lambda$IncidentManager$DumpCallback$1$tl253UkNGsQEjl8BxvdvJbVERYo $r8;

        r0 := @this: android.os.IncidentManager$DumpCallback$1;

        r1 := @parameter0: android.os.ParcelFileDescriptor;

        $r3 = r0.<android.os.IncidentManager$DumpCallback$1: android.os.IncidentManager$DumpCallback this$0>;

        $r4 = staticinvoke <android.os.IncidentManager$DumpCallback: java.util.concurrent.Executor access$000(android.os.IncidentManager$DumpCallback)>($r3);

        if $r4 == null goto label1;

        $r6 = r0.<android.os.IncidentManager$DumpCallback$1: android.os.IncidentManager$DumpCallback this$0>;

        $r7 = staticinvoke <android.os.IncidentManager$DumpCallback: java.util.concurrent.Executor access$000(android.os.IncidentManager$DumpCallback)>($r6);

        $r8 = new android.os._$$Lambda$IncidentManager$DumpCallback$1$tl253UkNGsQEjl8BxvdvJbVERYo;

        specialinvoke $r8.<android.os._$$Lambda$IncidentManager$DumpCallback$1$tl253UkNGsQEjl8BxvdvJbVERYo: void <init>(android.os.IncidentManager$DumpCallback$1,android.os.ParcelFileDescriptor)>(r0, r1);

        interfaceinvoke $r7.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r8);

        goto label2;

     label1:
        r2 = r0.<android.os.IncidentManager$DumpCallback$1: android.os.IncidentManager$DumpCallback this$0>;

        $i0 = staticinvoke <android.os.IncidentManager$DumpCallback: int access$100(android.os.IncidentManager$DumpCallback)>(r2);

        $r5 = new android.os.ParcelFileDescriptor$AutoCloseOutputStream;

        specialinvoke $r5.<android.os.ParcelFileDescriptor$AutoCloseOutputStream: void <init>(android.os.ParcelFileDescriptor)>(r1);

        virtualinvoke r2.<android.os.IncidentManager$DumpCallback: void onDumpSection(int,java.io.OutputStream)>($i0, $r5);

     label2:
        return;
    }
}
