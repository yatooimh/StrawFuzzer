public final class android.os.Looper extends java.lang.Object
{
    private static final java.lang.String TAG;
    private static android.os.Looper sMainLooper;
    private static android.os.Looper$Observer sObserver;
    static final java.lang.ThreadLocal sThreadLocal;
    private boolean mInLoop;
    private android.util.Printer mLogging;
    final android.os.MessageQueue mQueue;
    private long mSlowDeliveryThresholdMs;
    private long mSlowDispatchThresholdMs;
    final java.lang.Thread mThread;
    private long mTraceTag;

    static void <clinit>()
    {
        java.lang.ThreadLocal $r0;

        <android.os.Looper: java.lang.String TAG> = "Looper";

        $r0 = new java.lang.ThreadLocal;

        specialinvoke $r0.<java.lang.ThreadLocal: void <init>()>();

        <android.os.Looper: java.lang.ThreadLocal sThreadLocal> = $r0;

        return;
    }

    private void <init>(boolean)
    {
        android.os.Looper r0;
        boolean z0;
        android.os.MessageQueue $r1;
        java.lang.Thread $r2;

        r0 := @this: android.os.Looper;

        z0 := @parameter0: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new android.os.MessageQueue;

        specialinvoke $r1.<android.os.MessageQueue: void <init>(boolean)>(z0);

        r0.<android.os.Looper: android.os.MessageQueue mQueue> = $r1;

        $r2 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        r0.<android.os.Looper: java.lang.Thread mThread> = $r2;

        return;
    }

    public static android.os.Looper getMainLooper()
    {
        java.lang.Throwable $r0;
        android.os.Looper r1;

        entermonitor class "Landroid/os/Looper;";

     label1:
        r1 = <android.os.Looper: android.os.Looper sMainLooper>;

        exitmonitor class "Landroid/os/Looper;";

     label2:
        return r1;

     label3:
        $r0 := @caughtexception;

     label4:
        exitmonitor class "Landroid/os/Looper;";

     label5:
        throw $r0;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public static void loop()
    {
        android.os.Looper r0;
        long l0, l2, l3, $l12, $l13, $l14, $l17, l21, l22, l25, l26, l27;
        int i1, $i5, $i7, $i10, $i19;
        android.util.Printer r1;
        java.lang.RuntimeException $r2;
        boolean $z0, $z2, $z3, z4, z5, z6, z7;
        java.lang.StringBuilder $r3, $r13, $r31, $r41;
        java.lang.Thread $r7;
        java.lang.String $r8, $r11, $r15, $r18, $r23, $r30, $r38, $r40, $r50;
        byte $b6, $b8, $b9, $b15, $b18, $b23, $b24, $b28;
        android.os.Handler $r12, $r21, $r33, $r39, $r43;
        java.lang.Class $r22;
        java.lang.Runnable $r26, $r36, $r46;
        java.lang.Throwable $r51, $r52, $r55, r62;
        java.lang.Exception $r53, $r54, r63;
        android.os.MessageQueue r56;
        android.os.Message r58;
        android.os.Looper$Observer r60;
        java.lang.Object r61;

        r0 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        if r0 == null goto label44;

        $z0 = r0.<android.os.Looper: boolean mInLoop>;

        if $z0 == 0 goto label01;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("Looper", "Loop again would have the queued messages be executed before this one completed.");

     label01:
        r0.<android.os.Looper: boolean mInLoop> = 1;

        r56 = r0.<android.os.Looper: android.os.MessageQueue mQueue>;

        staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("log.looper.");

        $i5 = staticinvoke <android.os.Process: int myUid()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r7 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r8 = virtualinvoke $r7.<java.lang.Thread: java.lang.String getName()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".slow");

        $r11 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        i1 = staticinvoke <android.os.SystemProperties: int getInt(java.lang.String,int)>($r11, 0);

        z4 = 0;

     label02:
        r58 = virtualinvoke r56.<android.os.MessageQueue: android.os.Message next()>();

        if r58 != null goto label03;

        return;

     label03:
        r1 = r0.<android.os.Looper: android.util.Printer mLogging>;

        if r1 == null goto label04;

        $r41 = new java.lang.StringBuilder;

        specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">>>>> Dispatching to ");

        $r43 = r58.<android.os.Message: android.os.Handler target>;

        virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r43);

        virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r46 = r58.<android.os.Message: java.lang.Runnable callback>;

        virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r46);

        virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $i19 = r58.<android.os.Message: int what>;

        virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i19);

        $r50 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r1.<android.util.Printer: void println(java.lang.String)>($r50);

     label04:
        r60 = <android.os.Looper: android.os.Looper$Observer sObserver>;

        l2 = r0.<android.os.Looper: long mTraceTag>;

        l21 = r0.<android.os.Looper: long mSlowDispatchThresholdMs>;

        l22 = r0.<android.os.Looper: long mSlowDeliveryThresholdMs>;

        if i1 <= 0 goto label05;

        l21 = (long) i1;

        l22 = (long) i1;

        goto label05;

     label05:
        $b6 = l22 cmp 0L;

        if $b6 <= 0 goto label06;

        $l17 = r58.<android.os.Message: long when>;

        $b18 = $l17 cmp 0L;

        if $b18 <= 0 goto label06;

        z5 = 1;

        goto label07;

     label06:
        z5 = 0;

     label07:
        $b23 = l21 cmp 0L;

        if $b23 <= 0 goto label08;

        z6 = 1;

        goto label09;

     label08:
        z6 = 0;

     label09:
        if z5 != 0 goto label11;

        if z6 == 0 goto label10;

        goto label11;

     label10:
        z7 = 0;

        goto label12;

     label11:
        z7 = 1;

     label12:
        $b24 = l2 cmp 0L;

        if $b24 == 0 goto label13;

        $z3 = staticinvoke <android.os.Trace: boolean isTagEnabled(long)>(l2);

        if $z3 == 0 goto label13;

        $r39 = r58.<android.os.Message: android.os.Handler target>;

        $r40 = virtualinvoke $r39.<android.os.Handler: java.lang.String getTraceName(android.os.Message)>(r58);

        staticinvoke <android.os.Trace: void traceBegin(long,java.lang.String)>(l2, $r40);

     label13:
        if z7 == 0 goto label14;

        l25 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        goto label15;

     label14:
        l25 = 0L;

     label15:
        if r60 == null goto label16;

        r61 = interfaceinvoke r60.<android.os.Looper$Observer: java.lang.Object messageDispatchStarting()>();

        goto label17;

     label16:
        r61 = null;

     label17:
        $i7 = r58.<android.os.Message: int workSourceUid>;

        l3 = staticinvoke <android.os.ThreadLocalWorkSource: long setUid(int)>($i7);

     label18:
        $r12 = r58.<android.os.Message: android.os.Handler target>;

        virtualinvoke $r12.<android.os.Handler: void dispatchMessage(android.os.Message)>(r58);

     label19:
        if r60 == null goto label24;

     label20:
        interfaceinvoke r60.<android.os.Looper$Observer: void messageDispatched(java.lang.Object,android.os.Message)>(r61, r58);

     label21:
        goto label24;

     label22:
        $r55 := @caughtexception;

        r62 = $r55;

        goto label42;

     label23:
        $r53 := @caughtexception;

        r63 = $r53;

        goto label38;

     label24:
        if z6 == 0 goto label27;

     label25:
        l26 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

     label26:
        goto label28;

     label27:
        l26 = 0L;

     label28:
        staticinvoke <android.os.ThreadLocalWorkSource: void restore(long)>(l3);

        $b8 = l2 cmp 0L;

        if $b8 == 0 goto label29;

        staticinvoke <android.os.Trace: void traceEnd(long)>(l2);

     label29:
        if z5 == 0 goto label32;

        if z4 == 0 goto label31;

        $l13 = r58.<android.os.Message: long when>;

        $l14 = l25 - $l13;

        $b15 = $l14 cmp 10L;

        if $b15 > 0 goto label30;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("Looper", "Drained");

        z4 = 0;

        goto label32;

     label30:
        goto label32;

     label31:
        $l12 = r58.<android.os.Message: long when>;

        $z2 = staticinvoke <android.os.Looper: boolean showSlowLog(long,long,long,java.lang.String,android.os.Message)>(l22, $l12, l25, "delivery", r58);

        if $z2 == 0 goto label32;

        z4 = 1;

        goto label32;

     label32:
        if z6 == 0 goto label33;

        staticinvoke <android.os.Looper: boolean showSlowLog(long,long,long,java.lang.String,android.os.Message)>(l21, l25, l26, "dispatch", r58);

     label33:
        if r1 == null goto label34;

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<<<<< Finished to ");

        $r33 = r58.<android.os.Message: android.os.Handler target>;

        virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r33);

        virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r36 = r58.<android.os.Message: java.lang.Runnable callback>;

        virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r36);

        $r38 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r1.<android.util.Printer: void println(java.lang.String)>($r38);

        goto label34;

     label34:
        l27 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        $b9 = l0 cmp l27;

        if $b9 == 0 goto label35;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Thread identity changed from 0x");

        $r15 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>(l0);

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to 0x");

        $r18 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>(l27);

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" while dispatching to ");

        $r21 = r58.<android.os.Message: android.os.Handler target>;

        $r22 = virtualinvoke $r21.<java.lang.Object: java.lang.Class getClass()>();

        $r23 = virtualinvoke $r22.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r26 = r58.<android.os.Message: java.lang.Runnable callback>;

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r26);

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" what=");

        $i10 = r58.<android.os.Message: int what>;

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i10);

        $r30 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int wtf(java.lang.String,java.lang.String)>("Looper", $r30);

     label35:
        virtualinvoke r58.<android.os.Message: void recycleUnchecked()>();

        goto label02;

     label36:
        $r52 := @caughtexception;

        r62 = $r52;

        goto label42;

     label37:
        $r54 := @caughtexception;

        r63 = $r54;

     label38:
        if r60 == null goto label40;

     label39:
        interfaceinvoke r60.<android.os.Looper$Observer: void dispatchingThrewException(java.lang.Object,android.os.Message,java.lang.Exception)>(r61, r58, r63);

     label40:
        throw r63;

     label41:
        $r51 := @caughtexception;

        r62 = $r51;

     label42:
        staticinvoke <android.os.ThreadLocalWorkSource: void restore(long)>(l3);

        $b28 = l2 cmp 0L;

        if $b28 == 0 goto label43;

        staticinvoke <android.os.Trace: void traceEnd(long)>(l2);

     label43:
        throw r62;

     label44:
        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("No Looper; Looper.prepare() wasn\'t called on this thread.");

        throw $r2;

        catch java.lang.Exception from label18 to label19 with label37;
        catch java.lang.Throwable from label18 to label19 with label36;
        catch java.lang.Exception from label20 to label21 with label23;
        catch java.lang.Throwable from label20 to label21 with label22;
        catch java.lang.Exception from label25 to label26 with label23;
        catch java.lang.Throwable from label25 to label26 with label22;
        catch java.lang.Throwable from label39 to label40 with label41;
        catch java.lang.Throwable from label40 to label41 with label41;
    }

    public static android.os.Looper myLooper()
    {
        java.lang.ThreadLocal $r0;
        java.lang.Object $r1;
        android.os.Looper $r2;

        $r0 = <android.os.Looper: java.lang.ThreadLocal sThreadLocal>;

        $r1 = virtualinvoke $r0.<java.lang.ThreadLocal: java.lang.Object get()>();

        $r2 = (android.os.Looper) $r1;

        return $r2;
    }

    public static android.os.MessageQueue myQueue()
    {
        android.os.Looper $r0;
        android.os.MessageQueue $r1;

        $r0 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        $r1 = $r0.<android.os.Looper: android.os.MessageQueue mQueue>;

        return $r1;
    }

    public static void prepare()
    {
        staticinvoke <android.os.Looper: void prepare(boolean)>(1);

        return;
    }

    private static void prepare(boolean)
    {
        boolean z0;
        java.lang.ThreadLocal $r0, $r4;
        java.lang.Object $r1;
        java.lang.RuntimeException $r2;
        android.os.Looper $r3;

        z0 := @parameter0: boolean;

        $r0 = <android.os.Looper: java.lang.ThreadLocal sThreadLocal>;

        $r1 = virtualinvoke $r0.<java.lang.ThreadLocal: java.lang.Object get()>();

        if $r1 != null goto label1;

        $r4 = <android.os.Looper: java.lang.ThreadLocal sThreadLocal>;

        $r3 = new android.os.Looper;

        specialinvoke $r3.<android.os.Looper: void <init>(boolean)>(z0);

        virtualinvoke $r4.<java.lang.ThreadLocal: void set(java.lang.Object)>($r3);

        return;

     label1:
        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Only one Looper may be created per thread");

        throw $r2;
    }

    public static void prepareMainLooper()
    {
        android.os.Looper $r0, $r1;
        java.lang.Throwable $r2;
        java.lang.IllegalStateException r3;

        staticinvoke <android.os.Looper: void prepare(boolean)>(0);

        entermonitor class "Landroid/os/Looper;";

     label1:
        $r0 = <android.os.Looper: android.os.Looper sMainLooper>;

        if $r0 != null goto label3;

        $r1 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        <android.os.Looper: android.os.Looper sMainLooper> = $r1;

        exitmonitor class "Landroid/os/Looper;";

     label2:
        return;

     label3:
        r3 = new java.lang.IllegalStateException;

        specialinvoke r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("The main Looper has already been prepared.");

        throw r3;

     label4:
        $r2 := @caughtexception;

     label5:
        exitmonitor class "Landroid/os/Looper;";

     label6:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label3 to label4 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public static void setObserver(android.os.Looper$Observer)
    {
        android.os.Looper$Observer r0;

        r0 := @parameter0: android.os.Looper$Observer;

        <android.os.Looper: android.os.Looper$Observer sObserver> = r0;

        return;
    }

    private static boolean showSlowLog(long, long, long, java.lang.String, android.os.Message)
    {
        long l0, l1, l5, l6;
        java.lang.String r0, $r10, $r15, $r22;
        android.os.Message r1;
        byte $b2;
        java.lang.StringBuilder $r3;
        java.lang.Thread $r9;
        android.os.Handler $r13;
        java.lang.Class $r14;
        java.lang.Runnable $r18;
        int $i3;

        l0 := @parameter0: long;

        l5 := @parameter1: long;

        l1 := @parameter2: long;

        r0 := @parameter3: java.lang.String;

        r1 := @parameter4: android.os.Message;

        l6 = l1 - l5;

        $b2 = l6 cmp l0;

        if $b2 >= 0 goto label1;

        return 0;

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Slow ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" took ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l6);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ms ");

        $r9 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r10 = virtualinvoke $r9.<java.lang.Thread: java.lang.String getName()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" h=");

        $r13 = r1.<android.os.Message: android.os.Handler target>;

        $r14 = virtualinvoke $r13.<java.lang.Object: java.lang.Class getClass()>();

        $r15 = virtualinvoke $r14.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" c=");

        $r18 = r1.<android.os.Message: java.lang.Runnable callback>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r18);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" m=");

        $i3 = r1.<android.os.Message: int what>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r22 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("Looper", $r22);

        return 1;
    }

    public void dump(android.util.Printer, java.lang.String)
    {
        android.os.Looper r0;
        android.util.Printer r1;
        java.lang.String r2, $r6, $r8, $r12;
        android.os.MessageQueue r3;
        java.lang.StringBuilder $r4, $r9;

        r0 := @this: android.os.Looper;

        r1 := @parameter0: android.util.Printer;

        r2 := @parameter1: java.lang.String;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r6 = virtualinvoke r0.<android.os.Looper: java.lang.String toString()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r1.<android.util.Printer: void println(java.lang.String)>($r8);

        r3 = r0.<android.os.Looper: android.os.MessageQueue mQueue>;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r3.<android.os.MessageQueue: void dump(android.util.Printer,java.lang.String,android.os.Handler)>(r1, $r12, null);

        return;
    }

    public void dump(android.util.Printer, java.lang.String, android.os.Handler)
    {
        android.os.Looper r0;
        android.util.Printer r1;
        java.lang.String r2, $r7, $r9, $r13;
        android.os.Handler r3;
        java.lang.StringBuilder $r5, $r10;
        android.os.MessageQueue r15;

        r0 := @this: android.os.Looper;

        r1 := @parameter0: android.util.Printer;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.os.Handler;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r7 = virtualinvoke r0.<android.os.Looper: java.lang.String toString()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r1.<android.util.Printer: void println(java.lang.String)>($r9);

        r15 = r0.<android.os.Looper: android.os.MessageQueue mQueue>;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r15.<android.os.MessageQueue: void dump(android.util.Printer,java.lang.String,android.os.Handler)>(r1, $r13, r3);

        return;
    }

    public void dumpDebug(android.util.proto.ProtoOutputStream, long)
    {
        android.os.Looper r0;
        android.util.proto.ProtoOutputStream r1;
        android.os.MessageQueue r2;
        java.lang.Thread $r3, $r5;
        java.lang.String $r4;
        long $l0, l1, l2;

        r0 := @this: android.os.Looper;

        r1 := @parameter0: android.util.proto.ProtoOutputStream;

        l1 := @parameter1: long;

        l2 = virtualinvoke r1.<android.util.proto.ProtoOutputStream: long start(long)>(l1);

        $r3 = r0.<android.os.Looper: java.lang.Thread mThread>;

        $r4 = virtualinvoke $r3.<java.lang.Thread: java.lang.String getName()>();

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,java.lang.String)>(1138166333441L, $r4);

        $r5 = r0.<android.os.Looper: java.lang.Thread mThread>;

        $l0 = virtualinvoke $r5.<java.lang.Thread: long getId()>();

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,long)>(1112396529666L, $l0);

        r2 = r0.<android.os.Looper: android.os.MessageQueue mQueue>;

        if r2 == null goto label1;

        virtualinvoke r2.<android.os.MessageQueue: void dumpDebug(android.util.proto.ProtoOutputStream,long)>(r1, 1146756268035L);

     label1:
        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void end(long)>(l2);

        return;
    }

    public android.os.MessageQueue getQueue()
    {
        android.os.Looper r0;
        android.os.MessageQueue $r1;

        r0 := @this: android.os.Looper;

        $r1 = r0.<android.os.Looper: android.os.MessageQueue mQueue>;

        return $r1;
    }

    public java.lang.Thread getThread()
    {
        android.os.Looper r0;
        java.lang.Thread $r1;

        r0 := @this: android.os.Looper;

        $r1 = r0.<android.os.Looper: java.lang.Thread mThread>;

        return $r1;
    }

    public boolean isCurrentThread()
    {
        android.os.Looper r0;
        java.lang.Thread $r1, $r2;
        boolean z0;

        r0 := @this: android.os.Looper;

        $r1 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r2 = r0.<android.os.Looper: java.lang.Thread mThread>;

        if $r1 != $r2 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public void quit()
    {
        android.os.Looper r0;
        android.os.MessageQueue $r1;

        r0 := @this: android.os.Looper;

        $r1 = r0.<android.os.Looper: android.os.MessageQueue mQueue>;

        virtualinvoke $r1.<android.os.MessageQueue: void quit(boolean)>(0);

        return;
    }

    public void quitSafely()
    {
        android.os.Looper r0;
        android.os.MessageQueue $r1;

        r0 := @this: android.os.Looper;

        $r1 = r0.<android.os.Looper: android.os.MessageQueue mQueue>;

        virtualinvoke $r1.<android.os.MessageQueue: void quit(boolean)>(1);

        return;
    }

    public void setMessageLogging(android.util.Printer)
    {
        android.os.Looper r0;
        android.util.Printer r1;

        r0 := @this: android.os.Looper;

        r1 := @parameter0: android.util.Printer;

        r0.<android.os.Looper: android.util.Printer mLogging> = r1;

        return;
    }

    public void setSlowLogThresholdMs(long, long)
    {
        android.os.Looper r0;
        long l0, l1;

        r0 := @this: android.os.Looper;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        r0.<android.os.Looper: long mSlowDispatchThresholdMs> = l0;

        r0.<android.os.Looper: long mSlowDeliveryThresholdMs> = l1;

        return;
    }

    public void setTraceTag(long)
    {
        android.os.Looper r0;
        long l0;

        r0 := @this: android.os.Looper;

        l0 := @parameter0: long;

        r0.<android.os.Looper: long mTraceTag> = l0;

        return;
    }

    public java.lang.String toString()
    {
        android.os.Looper r0;
        java.lang.StringBuilder $r2;
        java.lang.Thread $r4, $r8;
        java.lang.String $r5, $r11, $r14;
        long $l0;
        int $i1;

        r0 := @this: android.os.Looper;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Looper (");

        $r4 = r0.<android.os.Looper: java.lang.Thread mThread>;

        $r5 = virtualinvoke $r4.<java.lang.Thread: java.lang.String getName()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", tid ");

        $r8 = r0.<android.os.Looper: java.lang.Thread mThread>;

        $l0 = virtualinvoke $r8.<java.lang.Thread: long getId()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") {");

        $i1 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r0);

        $r11 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i1);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r14 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r14;
    }
}
