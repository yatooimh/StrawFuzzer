public final class android.os.Parcel extends java.lang.Object
{
    private static final boolean DEBUG_ARRAY_MAP;
    private static final boolean DEBUG_RECYCLE;
    private static final int EX_BAD_PARCELABLE;
    public static final int EX_HAS_NOTED_APPOPS_REPLY_HEADER;
    private static final int EX_HAS_STRICTMODE_REPLY_HEADER;
    private static final int EX_ILLEGAL_ARGUMENT;
    private static final int EX_ILLEGAL_STATE;
    private static final int EX_NETWORK_MAIN_THREAD;
    private static final int EX_NULL_POINTER;
    private static final int EX_PARCELABLE;
    private static final int EX_SECURITY;
    private static final int EX_SERVICE_SPECIFIC;
    private static final int EX_TRANSACTION_FAILED;
    private static final int EX_UNSUPPORTED_OPERATION;
    private static final int POOL_SIZE;
    public static final android.os.Parcelable$Creator STRING_CREATOR;
    private static final java.lang.String TAG;
    private static final int VAL_BOOLEAN;
    private static final int VAL_BOOLEANARRAY;
    private static final int VAL_BUNDLE;
    private static final int VAL_BYTE;
    private static final int VAL_BYTEARRAY;
    private static final int VAL_CHARSEQUENCE;
    private static final int VAL_CHARSEQUENCEARRAY;
    private static final int VAL_DOUBLE;
    private static final int VAL_DOUBLEARRAY;
    private static final int VAL_FLOAT;
    private static final int VAL_IBINDER;
    private static final int VAL_INTARRAY;
    private static final int VAL_INTEGER;
    private static final int VAL_LIST;
    private static final int VAL_LONG;
    private static final int VAL_LONGARRAY;
    private static final int VAL_MAP;
    private static final int VAL_NULL;
    private static final int VAL_OBJECTARRAY;
    private static final int VAL_PARCELABLE;
    private static final int VAL_PARCELABLEARRAY;
    private static final int VAL_PERSISTABLEBUNDLE;
    private static final int VAL_SERIALIZABLE;
    private static final int VAL_SHORT;
    private static final int VAL_SIZE;
    private static final int VAL_SIZEF;
    private static final int VAL_SPARSEARRAY;
    private static final int VAL_SPARSEBOOLEANARRAY;
    private static final int VAL_STRING;
    private static final int VAL_STRINGARRAY;
    private static final int WRITE_EXCEPTION_STACK_TRACE_THRESHOLD_MS;
    private static final java.util.HashMap mCreators;
    private static final android.os.Parcel[] sHolderPool;
    private static volatile long sLastWriteExceptionStackTrace;
    private static final android.os.Parcel[] sOwnedPool;
    private static boolean sParcelExceptionStackTrace;
    private boolean mAllowSquashing;
    private android.util.ArrayMap mClassCookies;
    private long mNativePtr;
    private long mNativeSize;
    private boolean mOwnsNativeParcelObject;
    private android.util.ArrayMap mReadSquashableParcelables;
    private android.os.Parcel$ReadWriteHelper mReadWriteHelper;
    private java.lang.RuntimeException mStack;
    private android.util.ArrayMap mWrittenSquashableParcelables;

    static void <clinit>()
    {
        android.os.Parcel[] $r0, $r1;
        android.os.Parcel$1 $r2;
        java.util.HashMap $r3;

        <android.os.Parcel: int WRITE_EXCEPTION_STACK_TRACE_THRESHOLD_MS> = 1000;

        <android.os.Parcel: int VAL_STRINGARRAY> = 14;

        <android.os.Parcel: int VAL_STRING> = 0;

        <android.os.Parcel: int VAL_SPARSEBOOLEANARRAY> = 22;

        <android.os.Parcel: int VAL_SPARSEARRAY> = 12;

        <android.os.Parcel: int VAL_SIZEF> = 27;

        <android.os.Parcel: int VAL_SIZE> = 26;

        <android.os.Parcel: int VAL_SHORT> = 5;

        <android.os.Parcel: int VAL_SERIALIZABLE> = 21;

        <android.os.Parcel: int VAL_PERSISTABLEBUNDLE> = 25;

        <android.os.Parcel: int VAL_PARCELABLEARRAY> = 16;

        <android.os.Parcel: int VAL_PARCELABLE> = 4;

        <android.os.Parcel: int VAL_OBJECTARRAY> = 17;

        <android.os.Parcel: int VAL_NULL> = -1;

        <android.os.Parcel: int VAL_MAP> = 2;

        <android.os.Parcel: int VAL_LONGARRAY> = 19;

        <android.os.Parcel: int VAL_LONG> = 6;

        <android.os.Parcel: int VAL_LIST> = 11;

        <android.os.Parcel: int VAL_INTEGER> = 1;

        <android.os.Parcel: int VAL_INTARRAY> = 18;

        <android.os.Parcel: int VAL_IBINDER> = 15;

        <android.os.Parcel: int VAL_FLOAT> = 7;

        <android.os.Parcel: int VAL_DOUBLEARRAY> = 28;

        <android.os.Parcel: int VAL_DOUBLE> = 8;

        <android.os.Parcel: int VAL_CHARSEQUENCEARRAY> = 24;

        <android.os.Parcel: int VAL_CHARSEQUENCE> = 10;

        <android.os.Parcel: int VAL_BYTEARRAY> = 13;

        <android.os.Parcel: int VAL_BYTE> = 20;

        <android.os.Parcel: int VAL_BUNDLE> = 3;

        <android.os.Parcel: int VAL_BOOLEANARRAY> = 23;

        <android.os.Parcel: int VAL_BOOLEAN> = 9;

        <android.os.Parcel: java.lang.String TAG> = "Parcel";

        <android.os.Parcel: int POOL_SIZE> = 6;

        <android.os.Parcel: int EX_UNSUPPORTED_OPERATION> = -7;

        <android.os.Parcel: int EX_TRANSACTION_FAILED> = -129;

        <android.os.Parcel: int EX_SERVICE_SPECIFIC> = -8;

        <android.os.Parcel: int EX_SECURITY> = -1;

        <android.os.Parcel: int EX_PARCELABLE> = -9;

        <android.os.Parcel: int EX_NULL_POINTER> = -4;

        <android.os.Parcel: int EX_NETWORK_MAIN_THREAD> = -6;

        <android.os.Parcel: int EX_ILLEGAL_STATE> = -5;

        <android.os.Parcel: int EX_ILLEGAL_ARGUMENT> = -3;

        <android.os.Parcel: int EX_HAS_STRICTMODE_REPLY_HEADER> = -128;

        <android.os.Parcel: int EX_HAS_NOTED_APPOPS_REPLY_HEADER> = -127;

        <android.os.Parcel: int EX_BAD_PARCELABLE> = -2;

        <android.os.Parcel: boolean DEBUG_RECYCLE> = 0;

        <android.os.Parcel: boolean DEBUG_ARRAY_MAP> = 0;

        $r0 = newarray (android.os.Parcel)[6];

        <android.os.Parcel: android.os.Parcel[] sOwnedPool> = $r0;

        $r1 = newarray (android.os.Parcel)[6];

        <android.os.Parcel: android.os.Parcel[] sHolderPool> = $r1;

        $r2 = new android.os.Parcel$1;

        specialinvoke $r2.<android.os.Parcel$1: void <init>()>();

        <android.os.Parcel: android.os.Parcelable$Creator STRING_CREATOR> = $r2;

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        <android.os.Parcel: java.util.HashMap mCreators> = $r3;

        return;
    }

    private void <init>(long)
    {
        android.os.Parcel r0;
        long l0;
        android.os.Parcel$ReadWriteHelper $r1;

        r0 := @this: android.os.Parcel;

        l0 := @parameter0: long;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = <android.os.Parcel$ReadWriteHelper: android.os.Parcel$ReadWriteHelper DEFAULT>;

        r0.<android.os.Parcel: android.os.Parcel$ReadWriteHelper mReadWriteHelper> = $r1;

        r0.<android.os.Parcel: boolean mAllowSquashing> = 0;

        specialinvoke r0.<android.os.Parcel: void init(long)>(l0);

        return;
    }

    private java.lang.Exception createException(int, java.lang.String)
    {
        android.os.Parcel r0;
        int i0;
        java.lang.StringBuilder $r1;
        java.lang.RuntimeException $r6;
        java.lang.String $r7, r8;
        java.lang.Exception r9, r10;

        r0 := @this: android.os.Parcel;

        i0 := @parameter0: int;

        r8 := @parameter1: java.lang.String;

        r9 = virtualinvoke r0.<android.os.Parcel: java.lang.Exception createExceptionOrNull(int,java.lang.String)>(i0, r8);

        if r9 == null goto label1;

        r10 = r9;

        goto label2;

     label1:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown exception code: ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" msg ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);

        $r6 = new java.lang.RuntimeException;

        $r7 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String)>($r7);

        r10 = $r6;

     label2:
        return r10;
    }

    private void destroy()
    {
        android.os.Parcel r0;
        long l0;
        byte $b1;
        boolean $z0;

        r0 := @this: android.os.Parcel;

        specialinvoke r0.<android.os.Parcel: void resetSqaushingState()>();

        l0 = r0.<android.os.Parcel: long mNativePtr>;

        $b1 = l0 cmp 0L;

        if $b1 == 0 goto label2;

        $z0 = r0.<android.os.Parcel: boolean mOwnsNativeParcelObject>;

        if $z0 == 0 goto label1;

        staticinvoke <android.os.Parcel: void nativeDestroy(long)>(l0);

        specialinvoke r0.<android.os.Parcel: void updateNativeSize(long)>(0L);

     label1:
        r0.<android.os.Parcel: long mNativePtr> = 0L;

     label2:
        return;
    }

    private void ensureReadSquashableParcelables()
    {
        android.os.Parcel r0;
        android.util.ArrayMap $r1, $r2;

        r0 := @this: android.os.Parcel;

        $r1 = r0.<android.os.Parcel: android.util.ArrayMap mReadSquashableParcelables>;

        if $r1 == null goto label1;

        return;

     label1:
        $r2 = new android.util.ArrayMap;

        specialinvoke $r2.<android.util.ArrayMap: void <init>()>();

        r0.<android.os.Parcel: android.util.ArrayMap mReadSquashableParcelables> = $r2;

        return;
    }

    private void ensureWrittenSquashableParcelables()
    {
        android.os.Parcel r0;
        android.util.ArrayMap $r1, $r2;

        r0 := @this: android.os.Parcel;

        $r1 = r0.<android.os.Parcel: android.util.ArrayMap mWrittenSquashableParcelables>;

        if $r1 == null goto label1;

        return;

     label1:
        $r2 = new android.util.ArrayMap;

        specialinvoke $r2.<android.util.ArrayMap: void <init>()>();

        r0.<android.os.Parcel: android.util.ArrayMap mWrittenSquashableParcelables> = $r2;

        return;
    }

    private void freeBuffer()
    {
        android.os.Parcel r0;
        boolean $z0;
        android.os.Parcel$ReadWriteHelper $r1;
        long $l0, $l1;

        r0 := @this: android.os.Parcel;

        specialinvoke r0.<android.os.Parcel: void resetSqaushingState()>();

        $z0 = r0.<android.os.Parcel: boolean mOwnsNativeParcelObject>;

        if $z0 == 0 goto label1;

        $l0 = r0.<android.os.Parcel: long mNativePtr>;

        $l1 = staticinvoke <android.os.Parcel: long nativeFreeBuffer(long)>($l0);

        specialinvoke r0.<android.os.Parcel: void updateNativeSize(long)>($l1);

     label1:
        $r1 = <android.os.Parcel$ReadWriteHelper: android.os.Parcel$ReadWriteHelper DEFAULT>;

        r0.<android.os.Parcel: android.os.Parcel$ReadWriteHelper mReadWriteHelper> = $r1;

        return;
    }

    public static int getExceptionCode(java.lang.Throwable)
    {
        java.lang.Throwable r0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        java.lang.Class $r1, $r3;
        java.lang.ClassLoader $r2, $r4;
        byte b0;

        r0 := @parameter0: java.lang.Throwable;

        b0 = 0;

        $z0 = r0 instanceof android.os.Parcelable;

        if $z0 == 0 goto label1;

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        $r3 = class "Landroid/os/Parcelable;";

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        if $r2 != $r4 goto label1;

        b0 = -9;

        goto label9;

     label1:
        $z1 = r0 instanceof java.lang.SecurityException;

        if $z1 == 0 goto label2;

        b0 = -1;

        goto label9;

     label2:
        $z2 = r0 instanceof android.os.BadParcelableException;

        if $z2 == 0 goto label3;

        b0 = -2;

        goto label9;

     label3:
        $z3 = r0 instanceof java.lang.IllegalArgumentException;

        if $z3 == 0 goto label4;

        b0 = -3;

        goto label9;

     label4:
        $z4 = r0 instanceof java.lang.NullPointerException;

        if $z4 == 0 goto label5;

        b0 = -4;

        goto label9;

     label5:
        $z5 = r0 instanceof java.lang.IllegalStateException;

        if $z5 == 0 goto label6;

        b0 = -5;

        goto label9;

     label6:
        $z6 = r0 instanceof android.os.NetworkOnMainThreadException;

        if $z6 == 0 goto label7;

        b0 = -6;

        goto label9;

     label7:
        $z7 = r0 instanceof java.lang.UnsupportedOperationException;

        if $z7 == 0 goto label8;

        b0 = -7;

        goto label9;

     label8:
        $z8 = r0 instanceof android.os.ServiceSpecificException;

        if $z8 == 0 goto label9;

        b0 = -8;

     label9:
        return b0;
    }

    public static native long getGlobalAllocCount();

    public static native long getGlobalAllocSize();

    private void init(long)
    {
        android.os.Parcel r0;
        long l0, $l2;
        byte $b1;

        r0 := @this: android.os.Parcel;

        l0 := @parameter0: long;

        $b1 = l0 cmp 0L;

        if $b1 == 0 goto label1;

        r0.<android.os.Parcel: long mNativePtr> = l0;

        r0.<android.os.Parcel: boolean mOwnsNativeParcelObject> = 0;

        goto label2;

     label1:
        $l2 = staticinvoke <android.os.Parcel: long nativeCreate()>();

        r0.<android.os.Parcel: long mNativePtr> = $l2;

        r0.<android.os.Parcel: boolean mOwnsNativeParcelObject> = 1;

     label2:
        return;
    }

    private static native long nativeAppendFrom(long, long, int, int);

    private static native int nativeCompareData(long, long);

    private static native long nativeCreate();

    private static native byte[] nativeCreateByteArray(long);

    private static native int nativeDataAvail(long);

    private static native int nativeDataCapacity(long);

    private static native int nativeDataPosition(long);

    private static native int nativeDataSize(long);

    private static native void nativeDestroy(long);

    private static native void nativeEnforceInterface(long, java.lang.String);

    private static native long nativeFreeBuffer(long);

    private static native long nativeGetBlobAshmemSize(long);

    private static native boolean nativeHasFileDescriptors(long);

    private static native byte[] nativeMarshall(long);

    private static native boolean nativePushAllowFds(long, boolean);

    private static native byte[] nativeReadBlob(long);

    private static native boolean nativeReadByteArray(long, byte[], int);

    private static native int nativeReadCallingWorkSourceUid(long);

    private static native double nativeReadDouble(long);

    private static native java.io.FileDescriptor nativeReadFileDescriptor(long);

    private static native float nativeReadFloat(long);

    private static native int nativeReadInt(long);

    private static native long nativeReadLong(long);

    private static native java.lang.String nativeReadString16(long);

    private static native java.lang.String nativeReadString8(long);

    private static native android.os.IBinder nativeReadStrongBinder(long);

    private static native boolean nativeReplaceCallingWorkSourceUid(long, int);

    private static native void nativeRestoreAllowFds(long, boolean);

    private static native void nativeSetDataCapacity(long, int);

    private static native void nativeSetDataPosition(long, int);

    private static native long nativeSetDataSize(long, int);

    private static native long nativeUnmarshall(long, byte[], int, int);

    private static native void nativeWriteBlob(long, byte[], int, int);

    private static native void nativeWriteByteArray(long, byte[], int, int);

    private static native void nativeWriteDouble(long, double);

    private static native long nativeWriteFileDescriptor(long, java.io.FileDescriptor);

    private static native void nativeWriteFloat(long, float);

    private static native void nativeWriteInt(long, int);

    private static native void nativeWriteInterfaceToken(long, java.lang.String);

    private static native void nativeWriteLong(long, long);

    private static native void nativeWriteString16(long, java.lang.String);

    private static native void nativeWriteString8(long, java.lang.String);

    private static native void nativeWriteStrongBinder(long, android.os.IBinder);

    public static android.os.Parcel obtain()
    {
        android.os.Parcel[] r0;
        android.os.Parcel $r1, r4;
        android.os.Parcel$ReadWriteHelper $r2;
        java.lang.Throwable $r3;
        int i0;

        r0 = <android.os.Parcel: android.os.Parcel[] sOwnedPool>;

        entermonitor r0;

        i0 = 0;

     label1:
        if i0 >= 6 goto label5;

        r4 = r0[i0];

        if r4 == null goto label4;

        r0[i0] = null;

     label2:
        $r2 = <android.os.Parcel$ReadWriteHelper: android.os.Parcel$ReadWriteHelper DEFAULT>;

        r4.<android.os.Parcel: android.os.Parcel$ReadWriteHelper mReadWriteHelper> = $r2;

        exitmonitor r0;

     label3:
        return r4;

     label4:
        i0 = i0 + 1;

        goto label1;

     label5:
        exitmonitor r0;

     label6:
        $r1 = new android.os.Parcel;

        specialinvoke $r1.<android.os.Parcel: void <init>(long)>(0L);

        return $r1;

     label7:
        $r3 := @caughtexception;

     label8:
        exitmonitor r0;

     label9:
        throw $r3;

        catch java.lang.Throwable from label2 to label3 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    protected static final android.os.Parcel obtain(int)
    {
        int i0;
        java.lang.UnsupportedOperationException $r0;

        i0 := @parameter0: int;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    protected static final android.os.Parcel obtain(long)
    {
        long l0;
        android.os.Parcel[] r0;
        android.os.Parcel $r1, r3;
        java.lang.Throwable $r2;
        int i1;

        l0 := @parameter0: long;

        r0 = <android.os.Parcel: android.os.Parcel[] sHolderPool>;

        entermonitor r0;

        i1 = 0;

     label1:
        if i1 >= 6 goto label5;

        r3 = r0[i1];

        if r3 == null goto label4;

        r0[i1] = null;

     label2:
        specialinvoke r3.<android.os.Parcel: void init(long)>(l0);

        exitmonitor r0;

     label3:
        return r3;

     label4:
        i1 = i1 + 1;

        goto label1;

     label5:
        exitmonitor r0;

     label6:
        $r1 = new android.os.Parcel;

        specialinvoke $r1.<android.os.Parcel: void <init>(long)>(l0);

        return $r1;

     label7:
        $r2 := @caughtexception;

     label8:
        exitmonitor r0;

     label9:
        throw $r2;

        catch java.lang.Throwable from label2 to label3 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    private void readArrayInternal(java.lang.Object[], int, java.lang.ClassLoader)
    {
        android.os.Parcel r0;
        java.lang.Object[] r1;
        int i0, i1;
        java.lang.ClassLoader r2;
        java.lang.Object $r3;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: java.lang.Object[];

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.ClassLoader;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r3 = virtualinvoke r0.<android.os.Parcel: java.lang.Object readValue(java.lang.ClassLoader)>(r2);

        r1[i1] = $r3;

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    private void readListInternal(java.util.List, int, java.lang.ClassLoader)
    {
        android.os.Parcel r0;
        java.util.List r1;
        java.lang.ClassLoader r2;
        java.lang.Object $r3;
        int i0;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: java.util.List;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.ClassLoader;

     label1:
        if i0 <= 0 goto label2;

        $r3 = virtualinvoke r0.<android.os.Parcel: java.lang.Object readValue(java.lang.ClassLoader)>(r2);

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r3);

        i0 = i0 + -1;

        goto label1;

     label2:
        return;
    }

    private final java.io.Serializable readSerializable(java.lang.ClassLoader)
    {
        android.os.Parcel r0;
        java.lang.String r1, $r12, $r19;
        android.os.Parcel$2 r2;
        java.io.ByteArrayInputStream $r3;
        byte[] $r4;
        java.lang.Object $r5;
        java.lang.ClassNotFoundException $r6;
        java.lang.StringBuilder $r7, $r14;
        java.lang.RuntimeException $r11, $r18;
        java.lang.Throwable $r13;
        java.lang.ClassLoader r20;
        java.io.Serializable r22;

        r0 := @this: android.os.Parcel;

        r20 := @parameter0: java.lang.ClassLoader;

        r1 = virtualinvoke r0.<android.os.Parcel: java.lang.String readString()>();

        if r1 != null goto label1;

        return null;

     label1:
        $r3 = new java.io.ByteArrayInputStream;

        $r4 = virtualinvoke r0.<android.os.Parcel: byte[] createByteArray()>();

        specialinvoke $r3.<java.io.ByteArrayInputStream: void <init>(byte[])>($r4);

     label2:
        r2 = new android.os.Parcel$2;

        specialinvoke r2.<android.os.Parcel$2: void <init>(android.os.Parcel,java.io.InputStream,java.lang.ClassLoader)>(r0, $r3, r20);

        $r5 = virtualinvoke r2.<java.io.ObjectInputStream: java.lang.Object readObject()>();

        r22 = (java.io.Serializable) $r5;

     label3:
        return r22;

     label4:
        $r6 := @caughtexception;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Parcelable encountered ClassNotFoundException reading a Serializable object (name = ");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r11 = new java.lang.RuntimeException;

        $r12 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r12, $r6);

        throw $r11;

     label5:
        $r13 := @caughtexception;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Parcelable encountered IOException reading a Serializable object (name = ");

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r18 = new java.lang.RuntimeException;

        $r19 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r18.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r19, $r13);

        throw $r18;

        catch java.io.IOException from label2 to label3 with label5;
        catch java.lang.ClassNotFoundException from label2 to label3 with label4;
    }

    private void readSparseArrayInternal(android.util.SparseArray, int, java.lang.ClassLoader)
    {
        android.os.Parcel r0;
        android.util.SparseArray r1;
        java.lang.ClassLoader r2;
        int $i0, i1;
        java.lang.Object $r3;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: android.util.SparseArray;

        i1 := @parameter1: int;

        r2 := @parameter2: java.lang.ClassLoader;

     label1:
        if i1 <= 0 goto label2;

        $i0 = virtualinvoke r0.<android.os.Parcel: int readInt()>();

        $r3 = virtualinvoke r0.<android.os.Parcel: java.lang.Object readValue(java.lang.ClassLoader)>(r2);

        virtualinvoke r1.<android.util.SparseArray: void append(int,java.lang.Object)>($i0, $r3);

        i1 = i1 + -1;

        goto label1;

     label2:
        return;
    }

    private void readSparseBooleanArrayInternal(android.util.SparseBooleanArray, int)
    {
        android.os.Parcel r0;
        android.util.SparseBooleanArray r1;
        int i0, i2;
        byte b1;
        boolean z0;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: android.util.SparseBooleanArray;

        i2 := @parameter1: int;

     label1:
        if i2 <= 0 goto label4;

        i0 = virtualinvoke r0.<android.os.Parcel: int readInt()>();

        b1 = virtualinvoke r0.<android.os.Parcel: byte readByte()>();

        z0 = 1;

        if b1 != 1 goto label2;

        goto label3;

     label2:
        z0 = 0;

     label3:
        virtualinvoke r1.<android.util.SparseBooleanArray: void append(int,boolean)>(i0, z0);

        i2 = i2 + -1;

        goto label1;

     label4:
        return;
    }

    private void readSparseIntArrayInternal(android.util.SparseIntArray, int)
    {
        android.os.Parcel r0;
        android.util.SparseIntArray r1;
        int $i0, $i1, i2;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: android.util.SparseIntArray;

        i2 := @parameter1: int;

     label1:
        if i2 <= 0 goto label2;

        $i0 = virtualinvoke r0.<android.os.Parcel: int readInt()>();

        $i1 = virtualinvoke r0.<android.os.Parcel: int readInt()>();

        virtualinvoke r1.<android.util.SparseIntArray: void append(int,int)>($i0, $i1);

        i2 = i2 + -1;

        goto label1;

     label2:
        return;
    }

    private void resetSqaushingState()
    {
        android.os.Parcel r0;
        boolean $z0;

        r0 := @this: android.os.Parcel;

        $z0 = r0.<android.os.Parcel: boolean mAllowSquashing>;

        if $z0 == 0 goto label1;

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>("Parcel", "allowSquashing wasn\'t restored.");

     label1:
        r0.<android.os.Parcel: android.util.ArrayMap mWrittenSquashableParcelables> = null;

        r0.<android.os.Parcel: android.util.ArrayMap mReadSquashableParcelables> = null;

        r0.<android.os.Parcel: boolean mAllowSquashing> = 0;

        return;
    }

    public static void setStackTraceParceling(boolean)
    {
        boolean z0;

        z0 := @parameter0: boolean;

        <android.os.Parcel: boolean sParcelExceptionStackTrace> = z0;

        return;
    }

    private void updateNativeSize(long)
    {
        android.os.Parcel r0;
        int i0, $i4;
        boolean $z0;
        byte $b1, $b2;
        long $l3, l5, l6, l7;
        dalvik.system.VMRuntime $r1, $r2;

        r0 := @this: android.os.Parcel;

        l5 := @parameter0: long;

        $z0 = r0.<android.os.Parcel: boolean mOwnsNativeParcelObject>;

        if $z0 == 0 goto label4;

        l6 = l5;

        $b1 = l5 cmp 2147483647L;

        if $b1 <= 0 goto label1;

        l6 = 2147483647L;

     label1:
        l7 = r0.<android.os.Parcel: long mNativeSize>;

        $b2 = l6 cmp l7;

        if $b2 == 0 goto label4;

        $l3 = l6 - l7;

        i0 = (int) $l3;

        if i0 <= 0 goto label2;

        $r2 = staticinvoke <dalvik.system.VMRuntime: dalvik.system.VMRuntime getRuntime()>();

        virtualinvoke $r2.<dalvik.system.VMRuntime: void registerNativeAllocation(int)>(i0);

        goto label3;

     label2:
        $r1 = staticinvoke <dalvik.system.VMRuntime: dalvik.system.VMRuntime getRuntime()>();

        $i4 = neg i0;

        virtualinvoke $r1.<dalvik.system.VMRuntime: void registerNativeFree(int)>($i4);

     label3:
        r0.<android.os.Parcel: long mNativeSize> = l6;

     label4:
        return;
    }

    public final void adoptClassCookies(android.os.Parcel)
    {
        android.os.Parcel r0, r1;
        android.util.ArrayMap $r2;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: android.os.Parcel;

        $r2 = r1.<android.os.Parcel: android.util.ArrayMap mClassCookies>;

        r0.<android.os.Parcel: android.util.ArrayMap mClassCookies> = $r2;

        return;
    }

    public boolean allowSquashing()
    {
        android.os.Parcel r0;
        boolean z0;

        r0 := @this: android.os.Parcel;

        z0 = r0.<android.os.Parcel: boolean mAllowSquashing>;

        r0.<android.os.Parcel: boolean mAllowSquashing> = 1;

        return z0;
    }

    public final void appendFrom(android.os.Parcel, int, int)
    {
        android.os.Parcel r0, r1;
        int i0, i1;
        long $l2, $l3, $l4;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $l3 = r0.<android.os.Parcel: long mNativePtr>;

        $l2 = r1.<android.os.Parcel: long mNativePtr>;

        $l4 = staticinvoke <android.os.Parcel: long nativeAppendFrom(long,long,int,int)>($l3, $l2, i0, i1);

        specialinvoke r0.<android.os.Parcel: void updateNativeSize(long)>($l4);

        return;
    }

    public final int compareData(android.os.Parcel)
    {
        android.os.Parcel r0, r1;
        long $l0, $l1;
        int $i2;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: android.os.Parcel;

        $l1 = r0.<android.os.Parcel: long mNativePtr>;

        $l0 = r1.<android.os.Parcel: long mNativePtr>;

        $i2 = staticinvoke <android.os.Parcel: int nativeCompareData(long,long)>($l1, $l0);

        return $i2;
    }

    public java.util.Map copyClassCookies()
    {
        android.os.Parcel r0;
        android.util.ArrayMap $r1, $r2;

        r0 := @this: android.os.Parcel;

        $r1 = new android.util.ArrayMap;

        $r2 = r0.<android.os.Parcel: android.util.ArrayMap mClassCookies>;

        specialinvoke $r1.<android.util.ArrayMap: void <init>(android.util.ArrayMap)>($r2);

        return $r1;
    }

    public final android.os.IBinder[] createBinderArray()
    {
        android.os.Parcel r0;
        int i0, i1;
        android.os.IBinder[] r1;
        android.os.IBinder $r2;

        r0 := @this: android.os.Parcel;

        i0 = virtualinvoke r0.<android.os.Parcel: int readInt()>();

        if i0 < 0 goto label3;

        r1 = newarray (android.os.IBinder)[i0];

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r2 = virtualinvoke r0.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        r1[i1] = $r2;

        i1 = i1 + 1;

        goto label1;

     label2:
        return r1;

     label3:
        return null;
    }

    public final java.util.ArrayList createBinderArrayList()
    {
        android.os.Parcel r0;
        java.util.ArrayList $r2;
        android.os.IBinder $r3;
        int i0;

        r0 := @this: android.os.Parcel;

        i0 = virtualinvoke r0.<android.os.Parcel: int readInt()>();

        if i0 >= 0 goto label1;

        return null;

     label1:
        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>(int)>(i0);

     label2:
        if i0 <= 0 goto label3;

        $r3 = virtualinvoke r0.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);

        i0 = i0 + -1;

        goto label2;

     label3:
        return $r2;
    }

    public final boolean[] createBooleanArray()
    {
        android.os.Parcel r0;
        int i0, $i1, $i2, $i3, i4;
        boolean[] r1;
        boolean z0;

        r0 := @this: android.os.Parcel;

        i0 = virtualinvoke r0.<android.os.Parcel: int readInt()>();

        if i0 < 0 goto label5;

        $i1 = virtualinvoke r0.<android.os.Parcel: int dataAvail()>();

        $i2 = $i1 >> 2;

        if i0 > $i2 goto label5;

        r1 = newarray (boolean)[i0];

        i4 = 0;

     label1:
        if i4 >= i0 goto label4;

        $i3 = virtualinvoke r0.<android.os.Parcel: int readInt()>();

        if $i3 == 0 goto label2;

        z0 = 1;

        goto label3;

     label2:
        z0 = 0;

     label3:
        r1[i4] = z0;

        i4 = i4 + 1;

        goto label1;

     label4:
        return r1;

     label5:
        return null;
    }

    public final byte[] createByteArray()
    {
        android.os.Parcel r0;
        long $l0;
        byte[] $r1;

        r0 := @this: android.os.Parcel;

        $l0 = r0.<android.os.Parcel: long mNativePtr>;

        $r1 = staticinvoke <android.os.Parcel: byte[] nativeCreateByteArray(long)>($l0);

        return $r1;
    }

    public final char[] createCharArray()
    {
        android.os.Parcel r0;
        int i0, $i1, $i2, $i3, i6;
        char[] r1;
        char $c4, $c5;

        r0 := @this: android.os.Parcel;

        i0 = virtualinvoke r0.<android.os.Parcel: int readInt()>();

        if i0 < 0 goto label3;

        $i1 = virtualinvoke r0.<android.os.Parcel: int dataAvail()>();

        $i2 = $i1 >> 2;

        if i0 > $i2 goto label3;

        r1 = newarray (char)[i0];

        i6 = 0;

     label1:
        if i6 >= i0 goto label2;

        $i3 = virtualinvoke r0.<android.os.Parcel: int readInt()>();

        $c4 = (char) $i3;

        $c5 = (char) $c4;

        r1[i6] = $c5;

        i6 = i6 + 1;

        goto label1;

     label2:
        return r1;

     label3:
        return null;
    }

    public final double[] createDoubleArray()
    {
        android.os.Parcel r0;
        int i0, $i1, $i2, i3;
        double[] r1;
        double $d0;

        r0 := @this: android.os.Parcel;

        i0 = virtualinvoke r0.<android.os.Parcel: int readInt()>();

        if i0 < 0 goto label3;

        $i1 = virtualinvoke r0.<android.os.Parcel: int dataAvail()>();

        $i2 = $i1 >> 3;

        if i0 > $i2 goto label3;

        r1 = newarray (double)[i0];

        i3 = 0;

     label1:
        if i3 >= i0 goto label2;

        $d0 = virtualinvoke r0.<android.os.Parcel: double readDouble()>();

        r1[i3] = $d0;

        i3 = i3 + 1;

        goto label1;

     label2:
        return r1;

     label3:
        return null;
    }

    public java.lang.Exception createExceptionOrNull(int, java.lang.String)
    {
        android.os.Parcel r0;
        int i0, $i1, $i2;
        java.lang.String r1, $r15;
        java.lang.SecurityException $r3;
        android.os.BadParcelableException $r4;
        java.lang.IllegalArgumentException $r5;
        java.lang.NullPointerException $r6;
        java.lang.IllegalStateException $r7;
        android.os.NetworkOnMainThreadException $r8;
        java.lang.UnsupportedOperationException $r9;
        android.os.ServiceSpecificException $r10;
        java.lang.StringBuilder $r11;
        java.lang.RuntimeException $r14;
        java.lang.Class $r16;
        java.lang.ClassLoader $r17;
        android.os.Parcelable $r18;
        java.lang.Exception $r19;

        r0 := @this: android.os.Parcel;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        tableswitch(i0)
        {
            case -9: goto label10;
            case -8: goto label09;
            case -7: goto label08;
            case -6: goto label07;
            case -5: goto label06;
            case -4: goto label05;
            case -3: goto label04;
            case -2: goto label03;
            case -1: goto label02;
            default: goto label01;
        };

     label01:
        return null;

     label02:
        $r3 = new java.lang.SecurityException;

        specialinvoke $r3.<java.lang.SecurityException: void <init>(java.lang.String)>(r1);

        return $r3;

     label03:
        $r4 = new android.os.BadParcelableException;

        specialinvoke $r4.<android.os.BadParcelableException: void <init>(java.lang.String)>(r1);

        return $r4;

     label04:
        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(r1);

        return $r5;

     label05:
        $r6 = new java.lang.NullPointerException;

        specialinvoke $r6.<java.lang.NullPointerException: void <init>(java.lang.String)>(r1);

        return $r6;

     label06:
        $r7 = new java.lang.IllegalStateException;

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>(r1);

        return $r7;

     label07:
        $r8 = new android.os.NetworkOnMainThreadException;

        specialinvoke $r8.<android.os.NetworkOnMainThreadException: void <init>()>();

        return $r8;

     label08:
        $r9 = new java.lang.UnsupportedOperationException;

        specialinvoke $r9.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>(r1);

        return $r9;

     label09:
        $r10 = new android.os.ServiceSpecificException;

        $i1 = virtualinvoke r0.<android.os.Parcel: int readInt()>();

        specialinvoke $r10.<android.os.ServiceSpecificException: void <init>(int,java.lang.String)>($i1, r1);

        return $r10;

     label10:
        $i2 = virtualinvoke r0.<android.os.Parcel: int readInt()>();

        if $i2 <= 0 goto label11;

        $r16 = class "Landroid/os/Parcelable;";

        $r17 = virtualinvoke $r16.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        $r18 = virtualinvoke r0.<android.os.Parcel: android.os.Parcelable readParcelable(java.lang.ClassLoader)>($r17);

        $r19 = (java.lang.Exception) $r18;

        return $r19;

     label11:
        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" [missing Parcelable]");

        $r14 = new java.lang.RuntimeException;

        $r15 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<java.lang.RuntimeException: void <init>(java.lang.String)>($r15);

        return $r14;
    }

    public final float[] createFloatArray()
    {
        android.os.Parcel r0;
        int i0, $i1, $i2, i3;
        float[] r1;
        float $f0;

        r0 := @this: android.os.Parcel;

        i0 = virtualinvoke r0.<android.os.Parcel: int readInt()>();

        if i0 < 0 goto label3;

        $i1 = virtualinvoke r0.<android.os.Parcel: int dataAvail()>();

        $i2 = $i1 >> 2;

        if i0 > $i2 goto label3;

        r1 = newarray (float)[i0];

        i3 = 0;

     label1:
        if i3 >= i0 goto label2;

        $f0 = virtualinvoke r0.<android.os.Parcel: float readFloat()>();

        r1[i3] = $f0;

        i3 = i3 + 1;

        goto label1;

     label2:
        return r1;

     label3:
        return null;
    }

    public final int[] createIntArray()
    {
        android.os.Parcel r0;
        int i0, $i1, $i2, $i3, i4;
        int[] r1;

        r0 := @this: android.os.Parcel;

        i0 = virtualinvoke r0.<android.os.Parcel: int readInt()>();

        if i0 < 0 goto label3;

        $i1 = virtualinvoke r0.<android.os.Parcel: int dataAvail()>();

        $i2 = $i1 >> 2;

        if i0 > $i2 goto label3;

        r1 = newarray (int)[i0];

        i4 = 0;

     label1:
        if i4 >= i0 goto label2;

        $i3 = virtualinvoke r0.<android.os.Parcel: int readInt()>();

        r1[i4] = $i3;

        i4 = i4 + 1;

        goto label1;

     label2:
        return r1;

     label3:
        return null;
    }

    public final long[] createLongArray()
    {
        android.os.Parcel r0;
        int i0, $i1, $i2, i4;
        long[] r1;
        long $l3;

        r0 := @this: android.os.Parcel;

        i0 = virtualinvoke r0.<android.os.Parcel: int readInt()>();

        if i0 < 0 goto label3;

        $i1 = virtualinvoke r0.<android.os.Parcel: int dataAvail()>();

        $i2 = $i1 >> 3;

        if i0 > $i2 goto label3;

        r1 = newarray (long)[i0];

        i4 = 0;

     label1:
        if i4 >= i0 goto label2;

        $l3 = virtualinvoke r0.<android.os.Parcel: long readLong()>();

        r1[i4] = $l3;

        i4 = i4 + 1;

        goto label1;

     label2:
        return r1;

     label3:
        return null;
    }

    public final java.io.FileDescriptor[] createRawFileDescriptorArray()
    {
        android.os.Parcel r0;
        int i0, i1;
        java.io.FileDescriptor[] r1;
        java.io.FileDescriptor $r2;

        r0 := @this: android.os.Parcel;

        i0 = virtualinvoke r0.<android.os.Parcel: int readInt()>();

        if i0 >= 0 goto label1;

        return null;

     label1:
        r1 = newarray (java.io.FileDescriptor)[i0];

        i1 = 0;

     label2:
        if i1 >= i0 goto label3;

        $r2 = virtualinvoke r0.<android.os.Parcel: java.io.FileDescriptor readRawFileDescriptor()>();

        r1[i1] = $r2;

        i1 = i1 + 1;

        goto label2;

     label3:
        return r1;
    }

    public final java.lang.String[] createString16Array()
    {
        android.os.Parcel r0;
        int i0, i1;
        java.lang.String[] r1;
        java.lang.String $r2;

        r0 := @this: android.os.Parcel;

        i0 = virtualinvoke r0.<android.os.Parcel: int readInt()>();

        if i0 < 0 goto label3;

        r1 = newarray (java.lang.String)[i0];

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r2 = virtualinvoke r0.<android.os.Parcel: java.lang.String readString16()>();

        r1[i1] = $r2;

        i1 = i1 + 1;

        goto label1;

     label2:
        return r1;

     label3:
        return null;
    }

    public final java.lang.String[] createString8Array()
    {
        android.os.Parcel r0;
        int i0, i1;
        java.lang.String[] r1;
        java.lang.String $r2;

        r0 := @this: android.os.Parcel;

        i0 = virtualinvoke r0.<android.os.Parcel: int readInt()>();

        if i0 < 0 goto label3;

        r1 = newarray (java.lang.String)[i0];

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r2 = virtualinvoke r0.<android.os.Parcel: java.lang.String readString8()>();

        r1[i1] = $r2;

        i1 = i1 + 1;

        goto label1;

     label2:
        return r1;

     label3:
        return null;
    }

    public final java.lang.String[] createStringArray()
    {
        android.os.Parcel r0;
        java.lang.String[] $r1;

        r0 := @this: android.os.Parcel;

        $r1 = virtualinvoke r0.<android.os.Parcel: java.lang.String[] createString16Array()>();

        return $r1;
    }

    public final java.util.ArrayList createStringArrayList()
    {
        android.os.Parcel r0;
        java.util.ArrayList $r2;
        java.lang.String $r3;
        int i0;

        r0 := @this: android.os.Parcel;

        i0 = virtualinvoke r0.<android.os.Parcel: int readInt()>();

        if i0 >= 0 goto label1;

        return null;

     label1:
        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>(int)>(i0);

     label2:
        if i0 <= 0 goto label3;

        $r3 = virtualinvoke r0.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);

        i0 = i0 + -1;

        goto label2;

     label3:
        return $r2;
    }

    public final java.lang.Object[] createTypedArray(android.os.Parcelable$Creator)
    {
        android.os.Parcel r0;
        android.os.Parcelable$Creator r1;
        int i0, i1;
        java.lang.Object[] r2;
        java.lang.Object $r3;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: android.os.Parcelable$Creator;

        i0 = virtualinvoke r0.<android.os.Parcel: int readInt()>();

        if i0 >= 0 goto label1;

        return null;

     label1:
        r2 = interfaceinvoke r1.<android.os.Parcelable$Creator: java.lang.Object[] newArray(int)>(i0);

        i1 = 0;

     label2:
        if i1 >= i0 goto label3;

        $r3 = virtualinvoke r0.<android.os.Parcel: java.lang.Object readTypedObject(android.os.Parcelable$Creator)>(r1);

        r2[i1] = $r3;

        i1 = i1 + 1;

        goto label2;

     label3:
        return r2;
    }

    public final java.util.ArrayList createTypedArrayList(android.os.Parcelable$Creator)
    {
        android.os.Parcel r0;
        android.os.Parcelable$Creator r1;
        java.util.ArrayList $r3;
        java.lang.Object $r4;
        int i0;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: android.os.Parcelable$Creator;

        i0 = virtualinvoke r0.<android.os.Parcel: int readInt()>();

        if i0 >= 0 goto label1;

        return null;

     label1:
        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>(int)>(i0);

     label2:
        if i0 <= 0 goto label3;

        $r4 = virtualinvoke r0.<android.os.Parcel: java.lang.Object readTypedObject(android.os.Parcelable$Creator)>(r1);

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

        i0 = i0 + -1;

        goto label2;

     label3:
        return $r3;
    }

    public final android.util.ArrayMap createTypedArrayMap(android.os.Parcelable$Creator)
    {
        android.os.Parcel r0;
        android.os.Parcelable$Creator r1;
        int i0, i1;
        android.util.ArrayMap $r3;
        java.lang.String $r4;
        java.lang.Object $r5;
        android.os.Parcelable $r6;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: android.os.Parcelable$Creator;

        i0 = virtualinvoke r0.<android.os.Parcel: int readInt()>();

        if i0 >= 0 goto label1;

        return null;

     label1:
        $r3 = new android.util.ArrayMap;

        specialinvoke $r3.<android.util.ArrayMap: void <init>(int)>(i0);

        i1 = 0;

     label2:
        if i1 >= i0 goto label3;

        $r4 = virtualinvoke r0.<android.os.Parcel: java.lang.String readString()>();

        $r5 = virtualinvoke r0.<android.os.Parcel: java.lang.Object readTypedObject(android.os.Parcelable$Creator)>(r1);

        $r6 = (android.os.Parcelable) $r5;

        virtualinvoke $r3.<android.util.ArrayMap: void append(java.lang.Object,java.lang.Object)>($r4, $r6);

        i1 = i1 + 1;

        goto label2;

     label3:
        return $r3;
    }

    public final android.util.SparseArray createTypedSparseArray(android.os.Parcelable$Creator)
    {
        android.os.Parcel r0;
        android.os.Parcelable$Creator r1;
        int i0, $i1, i2;
        android.util.SparseArray $r3;
        java.lang.Object $r4;
        android.os.Parcelable $r5;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: android.os.Parcelable$Creator;

        i0 = virtualinvoke r0.<android.os.Parcel: int readInt()>();

        if i0 >= 0 goto label1;

        return null;

     label1:
        $r3 = new android.util.SparseArray;

        specialinvoke $r3.<android.util.SparseArray: void <init>(int)>(i0);

        i2 = 0;

     label2:
        if i2 >= i0 goto label3;

        $i1 = virtualinvoke r0.<android.os.Parcel: int readInt()>();

        $r4 = virtualinvoke r0.<android.os.Parcel: java.lang.Object readTypedObject(android.os.Parcelable$Creator)>(r1);

        $r5 = (android.os.Parcelable) $r4;

        virtualinvoke $r3.<android.util.SparseArray: void append(int,java.lang.Object)>($i1, $r5);

        i2 = i2 + 1;

        goto label2;

     label3:
        return $r3;
    }

    public final int dataAvail()
    {
        android.os.Parcel r0;
        long $l0;
        int $i1;

        r0 := @this: android.os.Parcel;

        $l0 = r0.<android.os.Parcel: long mNativePtr>;

        $i1 = staticinvoke <android.os.Parcel: int nativeDataAvail(long)>($l0);

        return $i1;
    }

    public final int dataCapacity()
    {
        android.os.Parcel r0;
        long $l0;
        int $i1;

        r0 := @this: android.os.Parcel;

        $l0 = r0.<android.os.Parcel: long mNativePtr>;

        $i1 = staticinvoke <android.os.Parcel: int nativeDataCapacity(long)>($l0);

        return $i1;
    }

    public final int dataPosition()
    {
        android.os.Parcel r0;
        long $l0;
        int $i1;

        r0 := @this: android.os.Parcel;

        $l0 = r0.<android.os.Parcel: long mNativePtr>;

        $i1 = staticinvoke <android.os.Parcel: int nativeDataPosition(long)>($l0);

        return $i1;
    }

    public final int dataSize()
    {
        android.os.Parcel r0;
        long $l0;
        int $i1;

        r0 := @this: android.os.Parcel;

        $l0 = r0.<android.os.Parcel: long mNativePtr>;

        $i1 = staticinvoke <android.os.Parcel: int nativeDataSize(long)>($l0);

        return $i1;
    }

    public final void enforceInterface(java.lang.String)
    {
        android.os.Parcel r0;
        java.lang.String r1;
        long $l0;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: java.lang.String;

        $l0 = r0.<android.os.Parcel: long mNativePtr>;

        staticinvoke <android.os.Parcel: void nativeEnforceInterface(long,java.lang.String)>($l0, r1);

        return;
    }

    protected void finalize() throws java.lang.Throwable
    {
        android.os.Parcel r0;

        r0 := @this: android.os.Parcel;

        specialinvoke r0.<android.os.Parcel: void destroy()>();

        return;
    }

    public long getBlobAshmemSize()
    {
        android.os.Parcel r0;
        long $l0, $l1;

        r0 := @this: android.os.Parcel;

        $l0 = r0.<android.os.Parcel: long mNativePtr>;

        $l1 = staticinvoke <android.os.Parcel: long nativeGetBlobAshmemSize(long)>($l0);

        return $l1;
    }

    public final java.lang.Object getClassCookie(java.lang.Class)
    {
        android.os.Parcel r0;
        android.util.ArrayMap r1;
        java.lang.Class r2;
        java.lang.Object r3;

        r0 := @this: android.os.Parcel;

        r2 := @parameter0: java.lang.Class;

        r1 = r0.<android.os.Parcel: android.util.ArrayMap mClassCookies>;

        if r1 == null goto label1;

        r3 = virtualinvoke r1.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r2);

        goto label2;

     label1:
        r3 = null;

     label2:
        return r3;
    }

    public final boolean hasFileDescriptors()
    {
        android.os.Parcel r0;
        long $l0;
        boolean $z0;

        r0 := @this: android.os.Parcel;

        $l0 = r0.<android.os.Parcel: long mNativePtr>;

        $z0 = staticinvoke <android.os.Parcel: boolean nativeHasFileDescriptors(long)>($l0);

        return $z0;
    }

    public boolean hasReadWriteHelper()
    {
        android.os.Parcel r0;
        android.os.Parcel$ReadWriteHelper r1, $r2;
        boolean z0;

        r0 := @this: android.os.Parcel;

        r1 = r0.<android.os.Parcel: android.os.Parcel$ReadWriteHelper mReadWriteHelper>;

        if r1 == null goto label1;

        $r2 = <android.os.Parcel$ReadWriteHelper: android.os.Parcel$ReadWriteHelper DEFAULT>;

        if r1 == $r2 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public final byte[] marshall()
    {
        android.os.Parcel r0;
        long $l0;
        byte[] $r1;

        r0 := @this: android.os.Parcel;

        $l0 = r0.<android.os.Parcel: long mNativePtr>;

        $r1 = staticinvoke <android.os.Parcel: byte[] nativeMarshall(long)>($l0);

        return $r1;
    }

    public boolean maybeWriteSquashed(android.os.Parcelable)
    {
        android.os.Parcel r0;
        android.os.Parcelable r1;
        java.lang.Integer r2, $r6;
        int i0, $i1, $i2, $i3, $i4;
        boolean $z0;
        android.util.ArrayMap $r3, $r5;
        java.lang.Object $r4;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: android.os.Parcelable;

        $z0 = r0.<android.os.Parcel: boolean mAllowSquashing>;

        if $z0 != 0 goto label1;

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(0);

        return 0;

     label1:
        specialinvoke r0.<android.os.Parcel: void ensureWrittenSquashableParcelables()>();

        $r3 = r0.<android.os.Parcel: android.util.ArrayMap mWrittenSquashableParcelables>;

        $r4 = virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (java.lang.Integer) $r4;

        if r2 == null goto label2;

        $i1 = virtualinvoke r0.<android.os.Parcel: int dataPosition()>();

        $i2 = virtualinvoke r2.<java.lang.Integer: int intValue()>();

        $i3 = $i1 - $i2;

        $i4 = $i3 + 4;

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>($i4);

        return 1;

     label2:
        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(0);

        i0 = virtualinvoke r0.<android.os.Parcel: int dataPosition()>();

        $r5 = r0.<android.os.Parcel: android.util.ArrayMap mWrittenSquashableParcelables>;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        virtualinvoke $r5.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r6);

        return 0;
    }

    public final boolean pushAllowFds(boolean)
    {
        android.os.Parcel r0;
        boolean z0, $z1;
        long $l0;

        r0 := @this: android.os.Parcel;

        z0 := @parameter0: boolean;

        $l0 = r0.<android.os.Parcel: long mNativePtr>;

        $z1 = staticinvoke <android.os.Parcel: boolean nativePushAllowFds(long,boolean)>($l0, z0);

        return $z1;
    }

    public void putClassCookies(java.util.Map)
    {
        android.os.Parcel r0;
        java.util.Map r1;
        android.util.ArrayMap $r2, $r3, $r4;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: java.util.Map;

        if r1 != null goto label1;

        return;

     label1:
        $r2 = r0.<android.os.Parcel: android.util.ArrayMap mClassCookies>;

        if $r2 != null goto label2;

        $r4 = new android.util.ArrayMap;

        specialinvoke $r4.<android.util.ArrayMap: void <init>()>();

        r0.<android.os.Parcel: android.util.ArrayMap mClassCookies> = $r4;

     label2:
        $r3 = r0.<android.os.Parcel: android.util.ArrayMap mClassCookies>;

        virtualinvoke $r3.<android.util.ArrayMap: void putAll(java.util.Map)>(r1);

        return;
    }

    public final java.lang.Object[] readArray(java.lang.ClassLoader)
    {
        android.os.Parcel r0;
        java.lang.ClassLoader r1;
        int i0;
        java.lang.Object[] r2;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: java.lang.ClassLoader;

        i0 = virtualinvoke r0.<android.os.Parcel: int readInt()>();

        if i0 >= 0 goto label1;

        return null;

     label1:
        r2 = newarray (java.lang.Object)[i0];

        specialinvoke r0.<android.os.Parcel: void readArrayInternal(java.lang.Object[],int,java.lang.ClassLoader)>(r2, i0, r1);

        return r2;
    }

    public final java.util.ArrayList readArrayList(java.lang.ClassLoader)
    {
        android.os.Parcel r0;
        java.lang.ClassLoader r1;
        int i0;
        java.util.ArrayList $r3;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: java.lang.ClassLoader;

        i0 = virtualinvoke r0.<android.os.Parcel: int readInt()>();

        if i0 >= 0 goto label1;

        return null;

     label1:
        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>(int)>(i0);

        specialinvoke r0.<android.os.Parcel: void readListInternal(java.util.List,int,java.lang.ClassLoader)>($r3, i0, r1);

        return $r3;
    }

    public void readArrayMap(android.util.ArrayMap, java.lang.ClassLoader)
    {
        android.os.Parcel r0;
        android.util.ArrayMap r1;
        java.lang.ClassLoader r2;
        int i0;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: android.util.ArrayMap;

        r2 := @parameter1: java.lang.ClassLoader;

        i0 = virtualinvoke r0.<android.os.Parcel: int readInt()>();

        if i0 >= 0 goto label1;

        return;

     label1:
        virtualinvoke r0.<android.os.Parcel: void readArrayMapInternal(android.util.ArrayMap,int,java.lang.ClassLoader)>(r1, i0, r2);

        return;
    }

    void readArrayMapInternal(android.util.ArrayMap, int, java.lang.ClassLoader)
    {
        android.os.Parcel r0;
        android.util.ArrayMap r1;
        java.lang.ClassLoader r2;
        java.lang.String $r3;
        java.lang.Object $r4;
        int i0;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: android.util.ArrayMap;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.ClassLoader;

     label1:
        if i0 <= 0 goto label2;

        $r3 = virtualinvoke r0.<android.os.Parcel: java.lang.String readString()>();

        $r4 = virtualinvoke r0.<android.os.Parcel: java.lang.Object readValue(java.lang.ClassLoader)>(r2);

        virtualinvoke r1.<android.util.ArrayMap: void append(java.lang.Object,java.lang.Object)>($r3, $r4);

        i0 = i0 + -1;

        goto label1;

     label2:
        virtualinvoke r1.<android.util.ArrayMap: void validate()>();

        return;
    }

    void readArrayMapSafelyInternal(android.util.ArrayMap, int, java.lang.ClassLoader)
    {
        android.os.Parcel r0;
        android.util.ArrayMap r1;
        java.lang.ClassLoader r2;
        java.lang.String $r3;
        java.lang.Object $r4;
        int i0;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: android.util.ArrayMap;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.ClassLoader;

     label1:
        if i0 <= 0 goto label2;

        $r3 = virtualinvoke r0.<android.os.Parcel: java.lang.String readString()>();

        $r4 = virtualinvoke r0.<android.os.Parcel: java.lang.Object readValue(java.lang.ClassLoader)>(r2);

        virtualinvoke r1.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r4);

        i0 = i0 + -1;

        goto label1;

     label2:
        return;
    }

    public android.util.ArraySet readArraySet(java.lang.ClassLoader)
    {
        android.os.Parcel r0;
        java.lang.ClassLoader r1;
        int i0, i1;
        android.util.ArraySet $r3;
        java.lang.Object $r4;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: java.lang.ClassLoader;

        i0 = virtualinvoke r0.<android.os.Parcel: int readInt()>();

        if i0 >= 0 goto label1;

        return null;

     label1:
        $r3 = new android.util.ArraySet;

        specialinvoke $r3.<android.util.ArraySet: void <init>(int)>(i0);

        i1 = 0;

     label2:
        if i1 >= i0 goto label3;

        $r4 = virtualinvoke r0.<android.os.Parcel: java.lang.Object readValue(java.lang.ClassLoader)>(r1);

        virtualinvoke $r3.<android.util.ArraySet: void append(java.lang.Object)>($r4);

        i1 = i1 + 1;

        goto label2;

     label3:
        return $r3;
    }

    public final void readBinderArray(android.os.IBinder[])
    {
        android.os.Parcel r0;
        android.os.IBinder[] r1;
        int i0, $i1, i2;
        java.lang.RuntimeException $r2;
        android.os.IBinder $r3;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: android.os.IBinder[];

        i0 = virtualinvoke r0.<android.os.Parcel: int readInt()>();

        $i1 = lengthof r1;

        if i0 != $i1 goto label3;

        i2 = 0;

     label1:
        if i2 >= i0 goto label2;

        $r3 = virtualinvoke r0.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        r1[i2] = $r3;

        i2 = i2 + 1;

        goto label1;

     label2:
        return;

     label3:
        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("bad array lengths");

        throw $r2;
    }

    public final void readBinderList(java.util.List)
    {
        android.os.Parcel r0;
        java.util.List r1;
        int i0, i1, i2, i3, i4;
        android.os.IBinder $r3, $r4;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: java.util.List;

        i0 = interfaceinvoke r1.<java.util.List: int size()>();

        i1 = virtualinvoke r0.<android.os.Parcel: int readInt()>();

        i2 = 0;

     label1:
        i3 = i2;

        if i2 >= i0 goto label2;

        i3 = i2;

        if i2 >= i1 goto label2;

        $r4 = virtualinvoke r0.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        interfaceinvoke r1.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i2, $r4);

        i2 = i2 + 1;

        goto label1;

     label2:
        i4 = i3;

        if i3 >= i1 goto label3;

        $r3 = virtualinvoke r0.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r3);

        i3 = i3 + 1;

        goto label2;

     label3:
        if i4 >= i0 goto label4;

        interfaceinvoke r1.<java.util.List: java.lang.Object remove(int)>(i1);

        i4 = i4 + 1;

        goto label3;

     label4:
        return;
    }

    public final byte[] readBlob()
    {
        android.os.Parcel r0;
        long $l0;
        byte[] $r1;

        r0 := @this: android.os.Parcel;

        $l0 = r0.<android.os.Parcel: long mNativePtr>;

        $r1 = staticinvoke <android.os.Parcel: byte[] nativeReadBlob(long)>($l0);

        return $r1;
    }

    public final boolean readBoolean()
    {
        android.os.Parcel r0;
        int $i0;
        boolean z0;

        r0 := @this: android.os.Parcel;

        $i0 = virtualinvoke r0.<android.os.Parcel: int readInt()>();

        if $i0 == 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public final void readBooleanArray(boolean[])
    {
        android.os.Parcel r0;
        boolean[] r1;
        int i0, $i1, $i2, i3;
        java.lang.RuntimeException $r2;
        boolean z0;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: boolean[];

        i0 = virtualinvoke r0.<android.os.Parcel: int readInt()>();

        $i1 = lengthof r1;

        if i0 != $i1 goto label5;

        i3 = 0;

     label1:
        if i3 >= i0 goto label4;

        $i2 = virtualinvoke r0.<android.os.Parcel: int readInt()>();

        if $i2 == 0 goto label2;

        z0 = 1;

        goto label3;

     label2:
        z0 = 0;

     label3:
        r1[i3] = z0;

        i3 = i3 + 1;

        goto label1;

     label4:
        return;

     label5:
        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("bad array lengths");

        throw $r2;
    }

    public final android.os.Bundle readBundle()
    {
        android.os.Parcel r0;
        android.os.Bundle $r1;

        r0 := @this: android.os.Parcel;

        $r1 = virtualinvoke r0.<android.os.Parcel: android.os.Bundle readBundle(java.lang.ClassLoader)>(null);

        return $r1;
    }

    public final android.os.Bundle readBundle(java.lang.ClassLoader)
    {
        android.os.Parcel r0;
        java.lang.ClassLoader r1;
        int i0;
        android.os.Bundle $r3;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: java.lang.ClassLoader;

        i0 = virtualinvoke r0.<android.os.Parcel: int readInt()>();

        if i0 >= 0 goto label1;

        return null;

     label1:
        $r3 = new android.os.Bundle;

        specialinvoke $r3.<android.os.Bundle: void <init>(android.os.Parcel,int)>(r0, i0);

        if r1 == null goto label2;

        virtualinvoke $r3.<android.os.Bundle: void setClassLoader(java.lang.ClassLoader)>(r1);

     label2:
        return $r3;
    }

    public final byte readByte()
    {
        android.os.Parcel r0;
        int $i0, $i1;
        byte $b2;

        r0 := @this: android.os.Parcel;

        $i0 = virtualinvoke r0.<android.os.Parcel: int readInt()>();

        $i1 = $i0 & 255;

        $b2 = (byte) $i1;

        return $b2;
    }

    public final void readByteArray(byte[])
    {
        android.os.Parcel r0;
        byte[] r1;
        long l0;
        boolean $z0;
        java.lang.RuntimeException $r2;
        int i1;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: byte[];

        l0 = r0.<android.os.Parcel: long mNativePtr>;

        if r1 == null goto label1;

        i1 = lengthof r1;

        goto label2;

     label1:
        i1 = 0;

     label2:
        $z0 = staticinvoke <android.os.Parcel: boolean nativeReadByteArray(long,byte[],int)>(l0, r1, i1);

        if $z0 == 0 goto label3;

        return;

     label3:
        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("bad array lengths");

        throw $r2;
    }

    public int readCallingWorkSourceUid()
    {
        android.os.Parcel r0;
        long $l0;
        int $i1;

        r0 := @this: android.os.Parcel;

        $l0 = r0.<android.os.Parcel: long mNativePtr>;

        $i1 = staticinvoke <android.os.Parcel: int nativeReadCallingWorkSourceUid(long)>($l0);

        return $i1;
    }

    public final void readCharArray(char[])
    {
        android.os.Parcel r0;
        char[] r1;
        int i0, $i1, $i2, i5;
        java.lang.RuntimeException $r2;
        char $c3, $c4;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: char[];

        i0 = virtualinvoke r0.<android.os.Parcel: int readInt()>();

        $i1 = lengthof r1;

        if i0 != $i1 goto label3;

        i5 = 0;

     label1:
        if i5 >= i0 goto label2;

        $i2 = virtualinvoke r0.<android.os.Parcel: int readInt()>();

        $c3 = (char) $i2;

        $c4 = (char) $c3;

        r1[i5] = $c4;

        i5 = i5 + 1;

        goto label1;

     label2:
        return;

     label3:
        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("bad array lengths");

        throw $r2;
    }

    public final java.lang.CharSequence readCharSequence()
    {
        android.os.Parcel r0;
        android.os.Parcelable$Creator $r1;
        java.lang.Object $r2;
        java.lang.CharSequence $r3;

        r0 := @this: android.os.Parcel;

        $r1 = <android.text.TextUtils: android.os.Parcelable$Creator CHAR_SEQUENCE_CREATOR>;

        $r2 = interfaceinvoke $r1.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r0);

        $r3 = (java.lang.CharSequence) $r2;

        return $r3;
    }

    public final java.lang.CharSequence[] readCharSequenceArray()
    {
        android.os.Parcel r0;
        int i0, i1;
        java.lang.CharSequence[] r1, r3;
        java.lang.CharSequence $r2;

        r0 := @this: android.os.Parcel;

        r3 = null;

        i0 = virtualinvoke r0.<android.os.Parcel: int readInt()>();

        if i0 < 0 goto label2;

        r1 = newarray (java.lang.CharSequence)[i0];

        i1 = 0;

     label1:
        r3 = r1;

        if i1 >= i0 goto label2;

        $r2 = virtualinvoke r0.<android.os.Parcel: java.lang.CharSequence readCharSequence()>();

        r1[i1] = $r2;

        i1 = i1 + 1;

        goto label1;

     label2:
        return r3;
    }

    public final java.util.ArrayList readCharSequenceList()
    {
        android.os.Parcel r0;
        int i0, i1;
        java.util.ArrayList $r2, r4;
        java.lang.CharSequence $r3;

        r0 := @this: android.os.Parcel;

        r4 = null;

        i0 = virtualinvoke r0.<android.os.Parcel: int readInt()>();

        if i0 < 0 goto label2;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>(int)>(i0);

        i1 = 0;

     label1:
        r4 = $r2;

        if i1 >= i0 goto label2;

        $r3 = virtualinvoke r0.<android.os.Parcel: java.lang.CharSequence readCharSequence()>();

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);

        i1 = i1 + 1;

        goto label1;

     label2:
        return r4;
    }

    public final android.os.Parcelable readCreator(android.os.Parcelable$Creator, java.lang.ClassLoader)
    {
        android.os.Parcel r0;
        android.os.Parcelable$Creator r1;
        java.lang.ClassLoader r2;
        boolean $z0;
        java.lang.Object $r3, $r6;
        android.os.Parcelable $r4, $r7;
        android.os.Parcelable$ClassLoaderCreator $r5;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: android.os.Parcelable$Creator;

        r2 := @parameter1: java.lang.ClassLoader;

        $z0 = r1 instanceof android.os.Parcelable$ClassLoaderCreator;

        if $z0 == 0 goto label1;

        $r5 = (android.os.Parcelable$ClassLoaderCreator) r1;

        $r6 = interfaceinvoke $r5.<android.os.Parcelable$ClassLoaderCreator: java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader)>(r0, r2);

        $r7 = (android.os.Parcelable) $r6;

        return $r7;

     label1:
        $r3 = interfaceinvoke r1.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r0);

        $r4 = (android.os.Parcelable) $r3;

        return $r4;
    }

    public final double readDouble()
    {
        android.os.Parcel r0;
        long $l0;
        double $d0;

        r0 := @this: android.os.Parcel;

        $l0 = r0.<android.os.Parcel: long mNativePtr>;

        $d0 = staticinvoke <android.os.Parcel: double nativeReadDouble(long)>($l0);

        return $d0;
    }

    public final void readDoubleArray(double[])
    {
        android.os.Parcel r0;
        double[] r1;
        int i0, $i1, i2;
        java.lang.RuntimeException $r2;
        double $d0;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: double[];

        i0 = virtualinvoke r0.<android.os.Parcel: int readInt()>();

        $i1 = lengthof r1;

        if i0 != $i1 goto label3;

        i2 = 0;

     label1:
        if i2 >= i0 goto label2;

        $d0 = virtualinvoke r0.<android.os.Parcel: double readDouble()>();

        r1[i2] = $d0;

        i2 = i2 + 1;

        goto label1;

     label2:
        return;

     label3:
        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("bad array lengths");

        throw $r2;
    }

    public final void readException()
    {
        android.os.Parcel r0;
        int i0;
        java.lang.String $r1;

        r0 := @this: android.os.Parcel;

        i0 = virtualinvoke r0.<android.os.Parcel: int readExceptionCode()>();

        if i0 == 0 goto label1;

        $r1 = virtualinvoke r0.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke r0.<android.os.Parcel: void readException(int,java.lang.String)>(i0, $r1);

     label1:
        return;
    }

    public final void readException(int, java.lang.String)
    {
        android.os.Parcel r0;
        int i0, $i1;
        java.lang.Exception r1;
        java.lang.StringBuilder $r2;
        android.os.RemoteException $r5;
        java.lang.String $r6, r8, r9;

        r0 := @this: android.os.Parcel;

        i0 := @parameter0: int;

        r8 := @parameter1: java.lang.String;

        r9 = null;

        $i1 = virtualinvoke r0.<android.os.Parcel: int readInt()>();

        if $i1 <= 0 goto label1;

        r9 = virtualinvoke r0.<android.os.Parcel: java.lang.String readString()>();

     label1:
        r1 = specialinvoke r0.<android.os.Parcel: java.lang.Exception createException(int,java.lang.String)>(i0, r8);

        if r9 == null goto label2;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Remote stack trace:\n");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9);

        $r5 = new android.os.RemoteException;

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<android.os.RemoteException: void <init>(java.lang.String,java.lang.Throwable,boolean,boolean)>($r6, null, 0, 0);

        staticinvoke <android.util.ExceptionUtils: java.lang.Throwable appendCause(java.lang.Throwable,java.lang.Throwable)>(r1, $r5);

     label2:
        staticinvoke <libcore.util.SneakyThrow: void sneakyThrow(java.lang.Throwable)>(r1);

        return;
    }

    public final int readExceptionCode()
    {
        android.os.Parcel r0;
        int i0, $i1, i3;

        r0 := @this: android.os.Parcel;

        i0 = virtualinvoke r0.<android.os.Parcel: int readInt()>();

        i3 = i0;

        if i0 != -127 goto label1;

        staticinvoke <android.app.AppOpsManager: void readAndLogNotedAppops(android.os.Parcel)>(r0);

        i3 = virtualinvoke r0.<android.os.Parcel: int readInt()>();

     label1:
        if i3 != -128 goto label4;

        $i1 = virtualinvoke r0.<android.os.Parcel: int readInt()>();

        if $i1 != 0 goto label2;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("Parcel", "Unexpected zero-sized Parcel reply header.");

        goto label3;

     label2:
        staticinvoke <android.os.StrictMode: void readAndHandleBinderCallViolations(android.os.Parcel)>(r0);

     label3:
        return 0;

     label4:
        return i3;
    }

    public final android.os.ParcelFileDescriptor readFileDescriptor()
    {
        android.os.Parcel r0;
        long $l0;
        android.os.ParcelFileDescriptor $r1, r3;
        java.io.FileDescriptor r2;

        r0 := @this: android.os.Parcel;

        $l0 = r0.<android.os.Parcel: long mNativePtr>;

        r2 = staticinvoke <android.os.Parcel: java.io.FileDescriptor nativeReadFileDescriptor(long)>($l0);

        if r2 == null goto label1;

        $r1 = new android.os.ParcelFileDescriptor;

        specialinvoke $r1.<android.os.ParcelFileDescriptor: void <init>(java.io.FileDescriptor)>(r2);

        r3 = $r1;

        goto label2;

     label1:
        r3 = null;

     label2:
        return r3;
    }

    public final float readFloat()
    {
        android.os.Parcel r0;
        long $l0;
        float $f0;

        r0 := @this: android.os.Parcel;

        $l0 = r0.<android.os.Parcel: long mNativePtr>;

        $f0 = staticinvoke <android.os.Parcel: float nativeReadFloat(long)>($l0);

        return $f0;
    }

    public final void readFloatArray(float[])
    {
        android.os.Parcel r0;
        float[] r1;
        int i0, $i1, i2;
        java.lang.RuntimeException $r2;
        float $f0;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: float[];

        i0 = virtualinvoke r0.<android.os.Parcel: int readInt()>();

        $i1 = lengthof r1;

        if i0 != $i1 goto label3;

        i2 = 0;

     label1:
        if i2 >= i0 goto label2;

        $f0 = virtualinvoke r0.<android.os.Parcel: float readFloat()>();

        r1[i2] = $f0;

        i2 = i2 + 1;

        goto label1;

     label2:
        return;

     label3:
        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("bad array lengths");

        throw $r2;
    }

    public final java.util.HashMap readHashMap(java.lang.ClassLoader)
    {
        android.os.Parcel r0;
        java.lang.ClassLoader r1;
        int i0;
        java.util.HashMap $r3;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: java.lang.ClassLoader;

        i0 = virtualinvoke r0.<android.os.Parcel: int readInt()>();

        if i0 >= 0 goto label1;

        return null;

     label1:
        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>(int)>(i0);

        virtualinvoke r0.<android.os.Parcel: void readMapInternal(java.util.Map,int,java.lang.ClassLoader)>($r3, i0, r1);

        return $r3;
    }

    public final int readInt()
    {
        android.os.Parcel r0;
        long $l0;
        int $i1;

        r0 := @this: android.os.Parcel;

        $l0 = r0.<android.os.Parcel: long mNativePtr>;

        $i1 = staticinvoke <android.os.Parcel: int nativeReadInt(long)>($l0);

        return $i1;
    }

    public final void readIntArray(int[])
    {
        android.os.Parcel r0;
        int[] r1;
        int i0, $i1, $i2, i3;
        java.lang.RuntimeException $r2;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: int[];

        i0 = virtualinvoke r0.<android.os.Parcel: int readInt()>();

        $i1 = lengthof r1;

        if i0 != $i1 goto label3;

        i3 = 0;

     label1:
        if i3 >= i0 goto label2;

        $i2 = virtualinvoke r0.<android.os.Parcel: int readInt()>();

        r1[i3] = $i2;

        i3 = i3 + 1;

        goto label1;

     label2:
        return;

     label3:
        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("bad array lengths");

        throw $r2;
    }

    public final void readList(java.util.List, java.lang.ClassLoader)
    {
        android.os.Parcel r0;
        java.util.List r1;
        java.lang.ClassLoader r2;
        int $i0;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: java.lang.ClassLoader;

        $i0 = virtualinvoke r0.<android.os.Parcel: int readInt()>();

        specialinvoke r0.<android.os.Parcel: void readListInternal(java.util.List,int,java.lang.ClassLoader)>(r1, $i0, r2);

        return;
    }

    public final long readLong()
    {
        android.os.Parcel r0;
        long $l0, $l1;

        r0 := @this: android.os.Parcel;

        $l0 = r0.<android.os.Parcel: long mNativePtr>;

        $l1 = staticinvoke <android.os.Parcel: long nativeReadLong(long)>($l0);

        return $l1;
    }

    public final void readLongArray(long[])
    {
        android.os.Parcel r0;
        long[] r1;
        int i0, $i1, i3;
        java.lang.RuntimeException $r2;
        long $l2;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: long[];

        i0 = virtualinvoke r0.<android.os.Parcel: int readInt()>();

        $i1 = lengthof r1;

        if i0 != $i1 goto label3;

        i3 = 0;

     label1:
        if i3 >= i0 goto label2;

        $l2 = virtualinvoke r0.<android.os.Parcel: long readLong()>();

        r1[i3] = $l2;

        i3 = i3 + 1;

        goto label1;

     label2:
        return;

     label3:
        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("bad array lengths");

        throw $r2;
    }

    public final void readMap(java.util.Map, java.lang.ClassLoader)
    {
        android.os.Parcel r0;
        java.util.Map r1;
        java.lang.ClassLoader r2;
        int $i0;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: java.util.Map;

        r2 := @parameter1: java.lang.ClassLoader;

        $i0 = virtualinvoke r0.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.os.Parcel: void readMapInternal(java.util.Map,int,java.lang.ClassLoader)>(r1, $i0, r2);

        return;
    }

    void readMapInternal(java.util.Map, int, java.lang.ClassLoader)
    {
        android.os.Parcel r0;
        java.util.Map r1;
        java.lang.ClassLoader r2;
        java.lang.Object $r3, $r4;
        int i0;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: java.util.Map;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.ClassLoader;

     label1:
        if i0 <= 0 goto label2;

        $r3 = virtualinvoke r0.<android.os.Parcel: java.lang.Object readValue(java.lang.ClassLoader)>(r2);

        $r4 = virtualinvoke r0.<android.os.Parcel: java.lang.Object readValue(java.lang.ClassLoader)>(r2);

        interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r4);

        i0 = i0 + -1;

        goto label1;

     label2:
        return;
    }

    public final android.os.Parcelable readParcelable(java.lang.ClassLoader)
    {
        android.os.Parcel r0;
        java.lang.ClassLoader r1;
        android.os.Parcelable$Creator r2;
        boolean $z0;
        java.lang.Object $r3, $r6;
        android.os.Parcelable $r4, $r7;
        android.os.Parcelable$ClassLoaderCreator $r5;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: java.lang.ClassLoader;

        r2 = virtualinvoke r0.<android.os.Parcel: android.os.Parcelable$Creator readParcelableCreator(java.lang.ClassLoader)>(r1);

        if r2 != null goto label1;

        return null;

     label1:
        $z0 = r2 instanceof android.os.Parcelable$ClassLoaderCreator;

        if $z0 == 0 goto label2;

        $r5 = (android.os.Parcelable$ClassLoaderCreator) r2;

        $r6 = interfaceinvoke $r5.<android.os.Parcelable$ClassLoaderCreator: java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader)>(r0, r1);

        $r7 = (android.os.Parcelable) $r6;

        return $r7;

     label2:
        $r3 = interfaceinvoke r2.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r0);

        $r4 = (android.os.Parcelable) $r3;

        return $r4;
    }

    public final android.os.Parcelable[] readParcelableArray(java.lang.ClassLoader)
    {
        android.os.Parcel r0;
        java.lang.ClassLoader r1;
        int i0, i1;
        android.os.Parcelable[] r2;
        android.os.Parcelable $r3;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: java.lang.ClassLoader;

        i0 = virtualinvoke r0.<android.os.Parcel: int readInt()>();

        if i0 >= 0 goto label1;

        return null;

     label1:
        r2 = newarray (android.os.Parcelable)[i0];

        i1 = 0;

     label2:
        if i1 >= i0 goto label3;

        $r3 = virtualinvoke r0.<android.os.Parcel: android.os.Parcelable readParcelable(java.lang.ClassLoader)>(r1);

        r2[i1] = $r3;

        i1 = i1 + 1;

        goto label2;

     label3:
        return r2;
    }

    public final android.os.Parcelable[] readParcelableArray(java.lang.ClassLoader, java.lang.Class)
    {
        android.os.Parcel r0;
        java.lang.ClassLoader r1;
        int i0, i1;
        java.lang.Object $r2;
        android.os.Parcelable $r3;
        java.lang.Class r4;
        android.os.Parcelable[] r5;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: java.lang.ClassLoader;

        r4 := @parameter1: java.lang.Class;

        i0 = virtualinvoke r0.<android.os.Parcel: int readInt()>();

        if i0 >= 0 goto label1;

        return null;

     label1:
        $r2 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>(r4, i0);

        r5 = (android.os.Parcelable[]) $r2;

        i1 = 0;

     label2:
        if i1 >= i0 goto label3;

        $r3 = virtualinvoke r0.<android.os.Parcel: android.os.Parcelable readParcelable(java.lang.ClassLoader)>(r1);

        r5[i1] = $r3;

        i1 = i1 + 1;

        goto label2;

     label3:
        return r5;
    }

    public final android.os.Parcelable$Creator readParcelableCreator(java.lang.ClassLoader)
    {
        android.os.Parcel r0;
        java.lang.String r1, $r9, $r12, $r17, $r23, $r34, $r40, $r45, $r50, $r55;
        java.util.HashMap r2, $r3, $r26, r57, r58, r66;
        java.lang.Object $r4, $r5, $r18;
        java.lang.Class $r6, $r13, $r14, $r25, r63;
        boolean $z0, $z1;
        int $i0, $i1;
        java.lang.StringBuilder $r19, $r30, $r37, $r41, $r47, $r51, r70, r72, r74;
        android.os.BadParcelableException $r22, $r33, $r44, $r54, r69, r71, r73;
        java.lang.Throwable $r28, $r29, $r35, $r36;
        java.lang.ClassNotFoundException $r46;
        java.lang.ClassLoader r56;
        android.os.Parcelable$Creator r59, r65;
        java.lang.reflect.Field r64;

        r0 := @this: android.os.Parcel;

        r56 := @parameter0: java.lang.ClassLoader;

        r1 = virtualinvoke r0.<android.os.Parcel: java.lang.String readString()>();

        if r1 != null goto label01;

        return null;

     label01:
        r2 = <android.os.Parcel: java.util.HashMap mCreators>;

        entermonitor r2;

     label02:
        $r3 = <android.os.Parcel: java.util.HashMap mCreators>;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r56);

        r57 = (java.util.HashMap) $r4;

     label03:
        r58 = r57;

        if r57 != null goto label06;

     label04:
        r58 = new java.util.HashMap;

        specialinvoke r58.<java.util.HashMap: void <init>()>();

     label05:
        $r26 = <android.os.Parcel: java.util.HashMap mCreators>;

        virtualinvoke $r26.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r56, r58);

     label06:
        $r5 = virtualinvoke r58.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r59 = (android.os.Parcelable$Creator) $r5;

        exitmonitor r2;

     label07:
        if r59 == null goto label08;

        return r59;

     label08:
        if r56 != null goto label14;

     label09:
        $r25 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        r56 = virtualinvoke $r25.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

     label10:
        goto label14;

     label11:
        $r29 := @caughtexception;

        goto label25;

     label12:
        $r46 := @caughtexception;

        goto label26;

     label13:
        $r36 := @caughtexception;

        goto label27;

     label14:
        r63 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>(r1, 0, r56);

        $r6 = class "Landroid/os/Parcelable;";

        $z0 = virtualinvoke $r6.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r63);

        if $z0 == 0 goto label24;

        r64 = virtualinvoke r63.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>("CREATOR");

        $i0 = virtualinvoke r64.<java.lang.reflect.Field: int getModifiers()>();

        $i1 = $i0 & 8;

        if $i1 == 0 goto label23;

        $r13 = class "Landroid/os/Parcelable$Creator;";

        $r14 = virtualinvoke r64.<java.lang.reflect.Field: java.lang.Class getType()>();

        $z1 = virtualinvoke $r13.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r14);

        if $z1 == 0 goto label22;

        $r18 = virtualinvoke r64.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(null);

        r65 = (android.os.Parcelable$Creator) $r18;

     label15:
        if r65 == null goto label21;

        r66 = <android.os.Parcel: java.util.HashMap mCreators>;

        entermonitor r66;

     label16:
        virtualinvoke r58.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r65);

        exitmonitor r66;

     label17:
        return r65;

     label18:
        $r28 := @caughtexception;

     label19:
        exitmonitor r66;

     label20:
        throw $r28;

     label21:
        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Parcelable protocol requires a non-null Parcelable.Creator object called CREATOR on class ");

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r22 = new android.os.BadParcelableException;

        $r23 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r22.<android.os.BadParcelableException: void <init>(java.lang.String)>($r23);

        throw $r22;

     label22:
        r69 = new android.os.BadParcelableException;

        r70 = new java.lang.StringBuilder;

        specialinvoke r70.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Parcelable protocol requires a Parcelable.Creator object called CREATOR on class ");

        virtualinvoke r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r17 = virtualinvoke r70.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r69.<android.os.BadParcelableException: void <init>(java.lang.String)>($r17);

        throw r69;

     label23:
        r71 = new android.os.BadParcelableException;

        r72 = new java.lang.StringBuilder;

        specialinvoke r72.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Parcelable protocol requires the CREATOR object to be static on class ");

        virtualinvoke r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r12 = virtualinvoke r72.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r71.<android.os.BadParcelableException: void <init>(java.lang.String)>($r12);

        throw r71;

     label24:
        r73 = new android.os.BadParcelableException;

        r74 = new java.lang.StringBuilder;

        specialinvoke r74.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Parcelable protocol requires subclassing from Parcelable on class ");

        virtualinvoke r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r9 = virtualinvoke r74.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r73.<android.os.BadParcelableException: void <init>(java.lang.String)>($r9);

        throw r73;

     label25:
        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Parcelable protocol requires a Parcelable.Creator object called CREATOR on class ");

        virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r33 = new android.os.BadParcelableException;

        $r34 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r33.<android.os.BadParcelableException: void <init>(java.lang.String)>($r34);

        throw $r33;

     label26:
        $r47 = new java.lang.StringBuilder;

        specialinvoke $r47.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Class not found when unmarshalling: ");

        virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r50 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("Parcel", $r50, $r46);

        $r51 = new java.lang.StringBuilder;

        specialinvoke $r51.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ClassNotFoundException when unmarshalling: ");

        virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r54 = new android.os.BadParcelableException;

        $r55 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r54.<android.os.BadParcelableException: void <init>(java.lang.String)>($r55);

        throw $r54;

     label27:
        $r37 = new java.lang.StringBuilder;

        specialinvoke $r37.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Illegal access when unmarshalling: ");

        virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r40 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("Parcel", $r40, $r36);

        $r41 = new java.lang.StringBuilder;

        specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("IllegalAccessException when unmarshalling: ");

        virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r44 = new android.os.BadParcelableException;

        $r45 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r44.<android.os.BadParcelableException: void <init>(java.lang.String)>($r45);

        throw $r44;

     label28:
        $r35 := @caughtexception;

     label29:
        exitmonitor r2;

     label30:
        throw $r35;

        catch java.lang.Throwable from label02 to label03 with label28;
        catch java.lang.Throwable from label04 to label05 with label28;
        catch java.lang.Throwable from label05 to label06 with label28;
        catch java.lang.Throwable from label06 to label07 with label28;
        catch java.lang.IllegalAccessException from label09 to label10 with label13;
        catch java.lang.ClassNotFoundException from label09 to label10 with label12;
        catch java.lang.NoSuchFieldException from label09 to label10 with label11;
        catch java.lang.IllegalAccessException from label14 to label15 with label13;
        catch java.lang.ClassNotFoundException from label14 to label15 with label12;
        catch java.lang.NoSuchFieldException from label14 to label15 with label11;
        catch java.lang.Throwable from label16 to label17 with label18;
        catch java.lang.Throwable from label19 to label20 with label18;
        catch java.lang.IllegalAccessException from label22 to label23 with label13;
        catch java.lang.ClassNotFoundException from label22 to label23 with label12;
        catch java.lang.NoSuchFieldException from label22 to label23 with label11;
        catch java.lang.IllegalAccessException from label23 to label24 with label13;
        catch java.lang.ClassNotFoundException from label23 to label24 with label12;
        catch java.lang.NoSuchFieldException from label23 to label24 with label11;
        catch java.lang.IllegalAccessException from label24 to label25 with label13;
        catch java.lang.ClassNotFoundException from label24 to label25 with label12;
        catch java.lang.NoSuchFieldException from label24 to label25 with label11;
        catch java.lang.Throwable from label29 to label30 with label28;
    }

    public final java.util.List readParcelableList(java.util.List, java.lang.ClassLoader)
    {
        android.os.Parcel r0;
        java.util.List r1;
        java.lang.ClassLoader r2;
        int i0, i1, i2, i3, i4;
        android.os.Parcelable $r4, $r5;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: java.lang.ClassLoader;

        i0 = virtualinvoke r0.<android.os.Parcel: int readInt()>();

        if i0 != -1 goto label1;

        interfaceinvoke r1.<java.util.List: void clear()>();

        return r1;

     label1:
        i1 = interfaceinvoke r1.<java.util.List: int size()>();

        i2 = 0;

     label2:
        i3 = i2;

        if i2 >= i1 goto label3;

        i3 = i2;

        if i2 >= i0 goto label3;

        $r5 = virtualinvoke r0.<android.os.Parcel: android.os.Parcelable readParcelable(java.lang.ClassLoader)>(r2);

        interfaceinvoke r1.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i2, $r5);

        i2 = i2 + 1;

        goto label2;

     label3:
        i4 = i3;

        if i3 >= i0 goto label4;

        $r4 = virtualinvoke r0.<android.os.Parcel: android.os.Parcelable readParcelable(java.lang.ClassLoader)>(r2);

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r4);

        i3 = i3 + 1;

        goto label3;

     label4:
        if i4 >= i1 goto label5;

        interfaceinvoke r1.<java.util.List: java.lang.Object remove(int)>(i0);

        i4 = i4 + 1;

        goto label4;

     label5:
        return r1;
    }

    public final android.os.PersistableBundle readPersistableBundle()
    {
        android.os.Parcel r0;
        android.os.PersistableBundle $r1;

        r0 := @this: android.os.Parcel;

        $r1 = virtualinvoke r0.<android.os.Parcel: android.os.PersistableBundle readPersistableBundle(java.lang.ClassLoader)>(null);

        return $r1;
    }

    public final android.os.PersistableBundle readPersistableBundle(java.lang.ClassLoader)
    {
        android.os.Parcel r0;
        java.lang.ClassLoader r1;
        int i0;
        android.os.PersistableBundle $r3;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: java.lang.ClassLoader;

        i0 = virtualinvoke r0.<android.os.Parcel: int readInt()>();

        if i0 >= 0 goto label1;

        return null;

     label1:
        $r3 = new android.os.PersistableBundle;

        specialinvoke $r3.<android.os.PersistableBundle: void <init>(android.os.Parcel,int)>(r0, i0);

        if r1 == null goto label2;

        virtualinvoke $r3.<android.os.PersistableBundle: void setClassLoader(java.lang.ClassLoader)>(r1);

     label2:
        return $r3;
    }

    public final java.io.FileDescriptor readRawFileDescriptor()
    {
        android.os.Parcel r0;
        long $l0;
        java.io.FileDescriptor $r1;

        r0 := @this: android.os.Parcel;

        $l0 = r0.<android.os.Parcel: long mNativePtr>;

        $r1 = staticinvoke <android.os.Parcel: java.io.FileDescriptor nativeReadFileDescriptor(long)>($l0);

        return $r1;
    }

    public final void readRawFileDescriptorArray(java.io.FileDescriptor[])
    {
        android.os.Parcel r0;
        java.io.FileDescriptor[] r1;
        int i0, $i1, i2;
        java.lang.RuntimeException $r2;
        java.io.FileDescriptor $r3;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: java.io.FileDescriptor[];

        i0 = virtualinvoke r0.<android.os.Parcel: int readInt()>();

        $i1 = lengthof r1;

        if i0 != $i1 goto label3;

        i2 = 0;

     label1:
        if i2 >= i0 goto label2;

        $r3 = virtualinvoke r0.<android.os.Parcel: java.io.FileDescriptor readRawFileDescriptor()>();

        r1[i2] = $r3;

        i2 = i2 + 1;

        goto label1;

     label2:
        return;

     label3:
        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("bad array lengths");

        throw $r2;
    }

    public final java.io.Serializable readSerializable()
    {
        android.os.Parcel r0;
        java.io.Serializable $r1;

        r0 := @this: android.os.Parcel;

        $r1 = specialinvoke r0.<android.os.Parcel: java.io.Serializable readSerializable(java.lang.ClassLoader)>(null);

        return $r1;
    }

    public final android.util.Size readSize()
    {
        android.os.Parcel r0;
        android.util.Size $r1;
        int $i0, $i1;

        r0 := @this: android.os.Parcel;

        $r1 = new android.util.Size;

        $i0 = virtualinvoke r0.<android.os.Parcel: int readInt()>();

        $i1 = virtualinvoke r0.<android.os.Parcel: int readInt()>();

        specialinvoke $r1.<android.util.Size: void <init>(int,int)>($i0, $i1);

        return $r1;
    }

    public final android.util.SizeF readSizeF()
    {
        android.os.Parcel r0;
        android.util.SizeF $r1;
        float $f0, $f1;

        r0 := @this: android.os.Parcel;

        $r1 = new android.util.SizeF;

        $f0 = virtualinvoke r0.<android.os.Parcel: float readFloat()>();

        $f1 = virtualinvoke r0.<android.os.Parcel: float readFloat()>();

        specialinvoke $r1.<android.util.SizeF: void <init>(float,float)>($f0, $f1);

        return $r1;
    }

    public final android.util.SparseArray readSparseArray(java.lang.ClassLoader)
    {
        android.os.Parcel r0;
        java.lang.ClassLoader r1;
        int i0;
        android.util.SparseArray $r3;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: java.lang.ClassLoader;

        i0 = virtualinvoke r0.<android.os.Parcel: int readInt()>();

        if i0 >= 0 goto label1;

        return null;

     label1:
        $r3 = new android.util.SparseArray;

        specialinvoke $r3.<android.util.SparseArray: void <init>(int)>(i0);

        specialinvoke r0.<android.os.Parcel: void readSparseArrayInternal(android.util.SparseArray,int,java.lang.ClassLoader)>($r3, i0, r1);

        return $r3;
    }

    public final android.util.SparseBooleanArray readSparseBooleanArray()
    {
        android.os.Parcel r0;
        int i0;
        android.util.SparseBooleanArray $r2;

        r0 := @this: android.os.Parcel;

        i0 = virtualinvoke r0.<android.os.Parcel: int readInt()>();

        if i0 >= 0 goto label1;

        return null;

     label1:
        $r2 = new android.util.SparseBooleanArray;

        specialinvoke $r2.<android.util.SparseBooleanArray: void <init>(int)>(i0);

        specialinvoke r0.<android.os.Parcel: void readSparseBooleanArrayInternal(android.util.SparseBooleanArray,int)>($r2, i0);

        return $r2;
    }

    public final android.util.SparseIntArray readSparseIntArray()
    {
        android.os.Parcel r0;
        int i0;
        android.util.SparseIntArray $r2;

        r0 := @this: android.os.Parcel;

        i0 = virtualinvoke r0.<android.os.Parcel: int readInt()>();

        if i0 >= 0 goto label1;

        return null;

     label1:
        $r2 = new android.util.SparseIntArray;

        specialinvoke $r2.<android.util.SparseIntArray: void <init>(int)>(i0);

        specialinvoke r0.<android.os.Parcel: void readSparseIntArrayInternal(android.util.SparseIntArray,int)>($r2, i0);

        return $r2;
    }

    public android.os.Parcelable readSquashed(android.os.Parcel$SquashReadHelper)
    {
        android.os.Parcel r0;
        int i0, i2, i3;
        android.util.ArrayMap $r2, $r10, $r15;
        java.lang.Integer $r3, $r16;
        java.lang.Object $r4, $r14;
        java.lang.StringBuilder $r5;
        java.util.ArrayList $r9;
        java.util.Set $r11;
        java.lang.String $r13;
        android.os.Parcel$SquashReadHelper r18;
        android.os.Parcelable r19, r20;

        r0 := @this: android.os.Parcel;

        r18 := @parameter0: android.os.Parcel$SquashReadHelper;

        i2 = virtualinvoke r0.<android.os.Parcel: int readInt()>();

        i0 = virtualinvoke r0.<android.os.Parcel: int dataPosition()>();

        if i2 != 0 goto label1;

        $r14 = interfaceinvoke r18.<android.os.Parcel$SquashReadHelper: java.lang.Object readRawParceled(android.os.Parcel)>(r0);

        r19 = (android.os.Parcelable) $r14;

        specialinvoke r0.<android.os.Parcel: void ensureReadSquashableParcelables()>();

        $r15 = r0.<android.os.Parcel: android.util.ArrayMap mReadSquashableParcelables>;

        $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        virtualinvoke $r15.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r16, r19);

        return r19;

     label1:
        i3 = i0 - i2;

        $r2 = r0.<android.os.Parcel: android.util.ArrayMap mReadSquashableParcelables>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i3);

        $r4 = virtualinvoke $r2.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r3);

        r20 = (android.os.Parcelable) $r4;

        if r20 != null goto label2;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Map doesn\'t contain offset ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" : contains=");

        $r9 = new java.util.ArrayList;

        $r10 = r0.<android.os.Parcel: android.util.ArrayMap mReadSquashableParcelables>;

        $r11 = virtualinvoke $r10.<android.util.ArrayMap: java.util.Set keySet()>();

        specialinvoke $r9.<java.util.ArrayList: void <init>(java.util.Collection)>($r11);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r13 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int wtfStack(java.lang.String,java.lang.String)>("Parcel", $r13);

     label2:
        return r20;
    }

    public final java.lang.String readString()
    {
        android.os.Parcel r0;
        java.lang.String $r1;

        r0 := @this: android.os.Parcel;

        $r1 = virtualinvoke r0.<android.os.Parcel: java.lang.String readString16()>();

        return $r1;
    }

    public final java.lang.String readString16()
    {
        android.os.Parcel r0;
        android.os.Parcel$ReadWriteHelper $r1;
        java.lang.String $r2;

        r0 := @this: android.os.Parcel;

        $r1 = r0.<android.os.Parcel: android.os.Parcel$ReadWriteHelper mReadWriteHelper>;

        $r2 = virtualinvoke $r1.<android.os.Parcel$ReadWriteHelper: java.lang.String readString16(android.os.Parcel)>(r0);

        return $r2;
    }

    public final void readString16Array(java.lang.String[])
    {
        android.os.Parcel r0;
        java.lang.String[] r1;
        int i0, $i1, i2;
        java.lang.RuntimeException $r2;
        java.lang.String $r3;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: java.lang.String[];

        i0 = virtualinvoke r0.<android.os.Parcel: int readInt()>();

        $i1 = lengthof r1;

        if i0 != $i1 goto label3;

        i2 = 0;

     label1:
        if i2 >= i0 goto label2;

        $r3 = virtualinvoke r0.<android.os.Parcel: java.lang.String readString16()>();

        r1[i2] = $r3;

        i2 = i2 + 1;

        goto label1;

     label2:
        return;

     label3:
        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("bad array lengths");

        throw $r2;
    }

    public java.lang.String readString16NoHelper()
    {
        android.os.Parcel r0;
        long $l0;
        java.lang.String $r1;

        r0 := @this: android.os.Parcel;

        $l0 = r0.<android.os.Parcel: long mNativePtr>;

        $r1 = staticinvoke <android.os.Parcel: java.lang.String nativeReadString16(long)>($l0);

        return $r1;
    }

    public final java.lang.String readString8()
    {
        android.os.Parcel r0;
        android.os.Parcel$ReadWriteHelper $r1;
        java.lang.String $r2;

        r0 := @this: android.os.Parcel;

        $r1 = r0.<android.os.Parcel: android.os.Parcel$ReadWriteHelper mReadWriteHelper>;

        $r2 = virtualinvoke $r1.<android.os.Parcel$ReadWriteHelper: java.lang.String readString8(android.os.Parcel)>(r0);

        return $r2;
    }

    public final void readString8Array(java.lang.String[])
    {
        android.os.Parcel r0;
        java.lang.String[] r1;
        int i0, $i1, i2;
        java.lang.RuntimeException $r2;
        java.lang.String $r3;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: java.lang.String[];

        i0 = virtualinvoke r0.<android.os.Parcel: int readInt()>();

        $i1 = lengthof r1;

        if i0 != $i1 goto label3;

        i2 = 0;

     label1:
        if i2 >= i0 goto label2;

        $r3 = virtualinvoke r0.<android.os.Parcel: java.lang.String readString8()>();

        r1[i2] = $r3;

        i2 = i2 + 1;

        goto label1;

     label2:
        return;

     label3:
        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("bad array lengths");

        throw $r2;
    }

    public java.lang.String readString8NoHelper()
    {
        android.os.Parcel r0;
        long $l0;
        java.lang.String $r1;

        r0 := @this: android.os.Parcel;

        $l0 = r0.<android.os.Parcel: long mNativePtr>;

        $r1 = staticinvoke <android.os.Parcel: java.lang.String nativeReadString8(long)>($l0);

        return $r1;
    }

    public final void readStringArray(java.lang.String[])
    {
        android.os.Parcel r0;
        java.lang.String[] r1;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: java.lang.String[];

        virtualinvoke r0.<android.os.Parcel: void readString16Array(java.lang.String[])>(r1);

        return;
    }

    public final java.lang.String[] readStringArray()
    {
        android.os.Parcel r0;
        java.lang.String[] $r1;

        r0 := @this: android.os.Parcel;

        $r1 = virtualinvoke r0.<android.os.Parcel: java.lang.String[] createString16Array()>();

        return $r1;
    }

    public final void readStringList(java.util.List)
    {
        android.os.Parcel r0;
        java.util.List r1;
        int i0, i1, i2, i3, i4;
        java.lang.String $r3, $r4;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: java.util.List;

        i0 = interfaceinvoke r1.<java.util.List: int size()>();

        i1 = virtualinvoke r0.<android.os.Parcel: int readInt()>();

        i2 = 0;

     label1:
        i3 = i2;

        if i2 >= i0 goto label2;

        i3 = i2;

        if i2 >= i1 goto label2;

        $r4 = virtualinvoke r0.<android.os.Parcel: java.lang.String readString()>();

        interfaceinvoke r1.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i2, $r4);

        i2 = i2 + 1;

        goto label1;

     label2:
        i4 = i3;

        if i3 >= i1 goto label3;

        $r3 = virtualinvoke r0.<android.os.Parcel: java.lang.String readString()>();

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r3);

        i3 = i3 + 1;

        goto label2;

     label3:
        if i4 >= i0 goto label4;

        interfaceinvoke r1.<java.util.List: java.lang.Object remove(int)>(i1);

        i4 = i4 + 1;

        goto label3;

     label4:
        return;
    }

    public java.lang.String readStringNoHelper()
    {
        android.os.Parcel r0;
        java.lang.String $r1;

        r0 := @this: android.os.Parcel;

        $r1 = virtualinvoke r0.<android.os.Parcel: java.lang.String readString16NoHelper()>();

        return $r1;
    }

    public final android.os.IBinder readStrongBinder()
    {
        android.os.Parcel r0;
        long $l0;
        android.os.IBinder $r1;

        r0 := @this: android.os.Parcel;

        $l0 = r0.<android.os.Parcel: long mNativePtr>;

        $r1 = staticinvoke <android.os.Parcel: android.os.IBinder nativeReadStrongBinder(long)>($l0);

        return $r1;
    }

    public final void readTypedArray(java.lang.Object[], android.os.Parcelable$Creator)
    {
        android.os.Parcel r0;
        java.lang.Object[] r1;
        android.os.Parcelable$Creator r2;
        int i0, $i1, i2;
        java.lang.RuntimeException $r3;
        java.lang.Object $r4;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: java.lang.Object[];

        r2 := @parameter1: android.os.Parcelable$Creator;

        i0 = virtualinvoke r0.<android.os.Parcel: int readInt()>();

        $i1 = lengthof r1;

        if i0 != $i1 goto label3;

        i2 = 0;

     label1:
        if i2 >= i0 goto label2;

        $r4 = virtualinvoke r0.<android.os.Parcel: java.lang.Object readTypedObject(android.os.Parcelable$Creator)>(r2);

        r1[i2] = $r4;

        i2 = i2 + 1;

        goto label1;

     label2:
        return;

     label3:
        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>("bad array lengths");

        throw $r3;
    }

    public final java.lang.Object[] readTypedArray(android.os.Parcelable$Creator)
    {
        android.os.Parcel r0;
        android.os.Parcelable$Creator r1;
        java.lang.Object[] $r2;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: android.os.Parcelable$Creator;

        $r2 = virtualinvoke r0.<android.os.Parcel: java.lang.Object[] createTypedArray(android.os.Parcelable$Creator)>(r1);

        return $r2;
    }

    public final void readTypedList(java.util.List, android.os.Parcelable$Creator)
    {
        android.os.Parcel r0;
        java.util.List r1;
        android.os.Parcelable$Creator r2;
        int i0, i1, i2, i3, i4;
        java.lang.Object $r4, $r5;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: android.os.Parcelable$Creator;

        i0 = interfaceinvoke r1.<java.util.List: int size()>();

        i1 = virtualinvoke r0.<android.os.Parcel: int readInt()>();

        i2 = 0;

     label1:
        i3 = i2;

        if i2 >= i0 goto label2;

        i3 = i2;

        if i2 >= i1 goto label2;

        $r5 = virtualinvoke r0.<android.os.Parcel: java.lang.Object readTypedObject(android.os.Parcelable$Creator)>(r2);

        interfaceinvoke r1.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i2, $r5);

        i2 = i2 + 1;

        goto label1;

     label2:
        i4 = i3;

        if i3 >= i1 goto label3;

        $r4 = virtualinvoke r0.<android.os.Parcel: java.lang.Object readTypedObject(android.os.Parcelable$Creator)>(r2);

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r4);

        i3 = i3 + 1;

        goto label2;

     label3:
        if i4 >= i0 goto label4;

        interfaceinvoke r1.<java.util.List: java.lang.Object remove(int)>(i1);

        i4 = i4 + 1;

        goto label3;

     label4:
        return;
    }

    public final java.lang.Object readTypedObject(android.os.Parcelable$Creator)
    {
        android.os.Parcel r0;
        android.os.Parcelable$Creator r1;
        int $i0;
        java.lang.Object $r2;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: android.os.Parcelable$Creator;

        $i0 = virtualinvoke r0.<android.os.Parcel: int readInt()>();

        if $i0 == 0 goto label1;

        $r2 = interfaceinvoke r1.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r0);

        return $r2;

     label1:
        return null;
    }

    public final java.lang.Object readValue(java.lang.ClassLoader)
    {
        android.os.Parcel r0;
        int i0, $i3, $i5, $i6, i7, i8;
        double[] $r1;
        android.util.SizeF $r2;
        android.util.Size $r3;
        android.os.PersistableBundle $r4;
        java.lang.CharSequence[] $r5;
        boolean[] $r6;
        android.util.SparseBooleanArray $r7;
        java.io.Serializable $r8;
        byte $b1;
        java.lang.Byte $r9;
        long[] $r10;
        int[] $r11;
        java.lang.Object[] $r12;
        android.os.Parcelable[] $r13;
        android.os.IBinder $r14;
        java.lang.String[] $r15;
        byte[] $r16;
        android.util.SparseArray $r17;
        java.util.ArrayList $r18;
        java.lang.CharSequence $r19;
        java.lang.Boolean $r20;
        double $d0;
        java.lang.Double $r21;
        float $f0;
        java.lang.Float $r22;
        long $l2;
        java.lang.Long $r23;
        short $s4;
        java.lang.Short $r24;
        android.os.Parcelable $r25;
        android.os.Bundle $r26;
        java.util.HashMap $r27;
        java.lang.Integer $r28;
        java.lang.String $r29, $r38;
        java.lang.StringBuilder $r30;
        java.lang.RuntimeException $r37;
        java.lang.ClassLoader r39;
        boolean z0;

        r0 := @this: android.os.Parcel;

        r39 := @parameter0: java.lang.ClassLoader;

        i7 = virtualinvoke r0.<android.os.Parcel: int readInt()>();

        tableswitch(i7)
        {
            case -1: goto label33;
            case 0: goto label32;
            case 1: goto label31;
            case 2: goto label30;
            case 3: goto label29;
            case 4: goto label28;
            case 5: goto label27;
            case 6: goto label26;
            case 7: goto label25;
            case 8: goto label24;
            case 9: goto label21;
            case 10: goto label20;
            case 11: goto label19;
            case 12: goto label18;
            case 13: goto label17;
            case 14: goto label16;
            case 15: goto label15;
            case 16: goto label14;
            case 17: goto label13;
            case 18: goto label12;
            case 19: goto label11;
            case 20: goto label10;
            case 21: goto label09;
            case 22: goto label08;
            case 23: goto label07;
            case 24: goto label06;
            case 25: goto label05;
            case 26: goto label04;
            case 27: goto label03;
            case 28: goto label02;
            default: goto label01;
        };

     label01:
        i0 = virtualinvoke r0.<android.os.Parcel: int dataPosition()>();

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Parcel ");

        virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": Unmarshalling unknown type code ");

        virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i7);

        virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at offset ");

        $i6 = i0 - 4;

        virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        $r37 = new java.lang.RuntimeException;

        $r38 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r37.<java.lang.RuntimeException: void <init>(java.lang.String)>($r38);

        throw $r37;

     label02:
        $r1 = virtualinvoke r0.<android.os.Parcel: double[] createDoubleArray()>();

        return $r1;

     label03:
        $r2 = virtualinvoke r0.<android.os.Parcel: android.util.SizeF readSizeF()>();

        return $r2;

     label04:
        $r3 = virtualinvoke r0.<android.os.Parcel: android.util.Size readSize()>();

        return $r3;

     label05:
        $r4 = virtualinvoke r0.<android.os.Parcel: android.os.PersistableBundle readPersistableBundle(java.lang.ClassLoader)>(r39);

        return $r4;

     label06:
        $r5 = virtualinvoke r0.<android.os.Parcel: java.lang.CharSequence[] readCharSequenceArray()>();

        return $r5;

     label07:
        $r6 = virtualinvoke r0.<android.os.Parcel: boolean[] createBooleanArray()>();

        return $r6;

     label08:
        $r7 = virtualinvoke r0.<android.os.Parcel: android.util.SparseBooleanArray readSparseBooleanArray()>();

        return $r7;

     label09:
        $r8 = specialinvoke r0.<android.os.Parcel: java.io.Serializable readSerializable(java.lang.ClassLoader)>(r39);

        return $r8;

     label10:
        $b1 = virtualinvoke r0.<android.os.Parcel: byte readByte()>();

        $r9 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b1);

        return $r9;

     label11:
        $r10 = virtualinvoke r0.<android.os.Parcel: long[] createLongArray()>();

        return $r10;

     label12:
        $r11 = virtualinvoke r0.<android.os.Parcel: int[] createIntArray()>();

        return $r11;

     label13:
        $r12 = virtualinvoke r0.<android.os.Parcel: java.lang.Object[] readArray(java.lang.ClassLoader)>(r39);

        return $r12;

     label14:
        $r13 = virtualinvoke r0.<android.os.Parcel: android.os.Parcelable[] readParcelableArray(java.lang.ClassLoader)>(r39);

        return $r13;

     label15:
        $r14 = virtualinvoke r0.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        return $r14;

     label16:
        $r15 = virtualinvoke r0.<android.os.Parcel: java.lang.String[] readStringArray()>();

        return $r15;

     label17:
        $r16 = virtualinvoke r0.<android.os.Parcel: byte[] createByteArray()>();

        return $r16;

     label18:
        $r17 = virtualinvoke r0.<android.os.Parcel: android.util.SparseArray readSparseArray(java.lang.ClassLoader)>(r39);

        return $r17;

     label19:
        $r18 = virtualinvoke r0.<android.os.Parcel: java.util.ArrayList readArrayList(java.lang.ClassLoader)>(r39);

        return $r18;

     label20:
        $r19 = virtualinvoke r0.<android.os.Parcel: java.lang.CharSequence readCharSequence()>();

        return $r19;

     label21:
        i8 = virtualinvoke r0.<android.os.Parcel: int readInt()>();

        z0 = 1;

        if i8 != 1 goto label22;

        goto label23;

     label22:
        z0 = 0;

     label23:
        $r20 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        return $r20;

     label24:
        $d0 = virtualinvoke r0.<android.os.Parcel: double readDouble()>();

        $r21 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        return $r21;

     label25:
        $f0 = virtualinvoke r0.<android.os.Parcel: float readFloat()>();

        $r22 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        return $r22;

     label26:
        $l2 = virtualinvoke r0.<android.os.Parcel: long readLong()>();

        $r23 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        return $r23;

     label27:
        $i3 = virtualinvoke r0.<android.os.Parcel: int readInt()>();

        $s4 = (short) $i3;

        $r24 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s4);

        return $r24;

     label28:
        $r25 = virtualinvoke r0.<android.os.Parcel: android.os.Parcelable readParcelable(java.lang.ClassLoader)>(r39);

        return $r25;

     label29:
        $r26 = virtualinvoke r0.<android.os.Parcel: android.os.Bundle readBundle(java.lang.ClassLoader)>(r39);

        return $r26;

     label30:
        $r27 = virtualinvoke r0.<android.os.Parcel: java.util.HashMap readHashMap(java.lang.ClassLoader)>(r39);

        return $r27;

     label31:
        $i5 = virtualinvoke r0.<android.os.Parcel: int readInt()>();

        $r28 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5);

        return $r28;

     label32:
        $r29 = virtualinvoke r0.<android.os.Parcel: java.lang.String readString()>();

        return $r29;

     label33:
        return null;
    }

    public final void recycle()
    {
        android.os.Parcel r0, $r2;
        boolean $z0;
        java.lang.Throwable $r3;
        android.os.Parcel[] r4;
        int i0;

        r0 := @this: android.os.Parcel;

        specialinvoke r0.<android.os.Parcel: void freeBuffer()>();

        $z0 = r0.<android.os.Parcel: boolean mOwnsNativeParcelObject>;

        if $z0 == 0 goto label01;

        r4 = <android.os.Parcel: android.os.Parcel[] sOwnedPool>;

        goto label02;

     label01:
        r0.<android.os.Parcel: long mNativePtr> = 0L;

        r4 = <android.os.Parcel: android.os.Parcel[] sHolderPool>;

     label02:
        entermonitor r4;

        i0 = 0;

     label03:
        if i0 >= 6 goto label07;

        $r2 = r4[i0];

        if $r2 != null goto label06;

        r4[i0] = r0;

     label04:
        exitmonitor r4;

     label05:
        return;

     label06:
        i0 = i0 + 1;

        goto label03;

     label07:
        exitmonitor r4;

     label08:
        return;

     label09:
        $r3 := @caughtexception;

     label10:
        exitmonitor r4;

     label11:
        throw $r3;

        catch java.lang.Throwable from label04 to label05 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    public boolean replaceCallingWorkSourceUid(int)
    {
        android.os.Parcel r0;
        int i0;
        long $l1;
        boolean $z0;

        r0 := @this: android.os.Parcel;

        i0 := @parameter0: int;

        $l1 = r0.<android.os.Parcel: long mNativePtr>;

        $z0 = staticinvoke <android.os.Parcel: boolean nativeReplaceCallingWorkSourceUid(long,int)>($l1, i0);

        return $z0;
    }

    public final void restoreAllowFds(boolean)
    {
        android.os.Parcel r0;
        boolean z0;
        long $l0;

        r0 := @this: android.os.Parcel;

        z0 := @parameter0: boolean;

        $l0 = r0.<android.os.Parcel: long mNativePtr>;

        staticinvoke <android.os.Parcel: void nativeRestoreAllowFds(long,boolean)>($l0, z0);

        return;
    }

    public void restoreAllowSquashing(boolean)
    {
        android.os.Parcel r0;
        boolean z0;

        r0 := @this: android.os.Parcel;

        z0 := @parameter0: boolean;

        r0.<android.os.Parcel: boolean mAllowSquashing> = z0;

        if z0 != 0 goto label1;

        r0.<android.os.Parcel: android.util.ArrayMap mWrittenSquashableParcelables> = null;

     label1:
        return;
    }

    public final void setClassCookie(java.lang.Class, java.lang.Object)
    {
        android.os.Parcel r0;
        java.lang.Class r1;
        java.lang.Object r2;
        android.util.ArrayMap $r3, $r4, $r6;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.Object;

        $r3 = r0.<android.os.Parcel: android.util.ArrayMap mClassCookies>;

        if $r3 != null goto label1;

        $r6 = new android.util.ArrayMap;

        specialinvoke $r6.<android.util.ArrayMap: void <init>()>();

        r0.<android.os.Parcel: android.util.ArrayMap mClassCookies> = $r6;

     label1:
        $r4 = r0.<android.os.Parcel: android.util.ArrayMap mClassCookies>;

        virtualinvoke $r4.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }

    public final void setDataCapacity(int)
    {
        android.os.Parcel r0;
        int i0;
        long $l1;

        r0 := @this: android.os.Parcel;

        i0 := @parameter0: int;

        $l1 = r0.<android.os.Parcel: long mNativePtr>;

        staticinvoke <android.os.Parcel: void nativeSetDataCapacity(long,int)>($l1, i0);

        return;
    }

    public final void setDataPosition(int)
    {
        android.os.Parcel r0;
        int i0;
        long $l1;

        r0 := @this: android.os.Parcel;

        i0 := @parameter0: int;

        $l1 = r0.<android.os.Parcel: long mNativePtr>;

        staticinvoke <android.os.Parcel: void nativeSetDataPosition(long,int)>($l1, i0);

        return;
    }

    public final void setDataSize(int)
    {
        android.os.Parcel r0;
        int i0;
        long $l1, $l2;

        r0 := @this: android.os.Parcel;

        i0 := @parameter0: int;

        $l1 = r0.<android.os.Parcel: long mNativePtr>;

        $l2 = staticinvoke <android.os.Parcel: long nativeSetDataSize(long,int)>($l1, i0);

        specialinvoke r0.<android.os.Parcel: void updateNativeSize(long)>($l2);

        return;
    }

    public void setReadWriteHelper(android.os.Parcel$ReadWriteHelper)
    {
        android.os.Parcel r0;
        android.os.Parcel$ReadWriteHelper r1;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: android.os.Parcel$ReadWriteHelper;

        if r1 == null goto label1;

        goto label2;

     label1:
        r1 = <android.os.Parcel$ReadWriteHelper: android.os.Parcel$ReadWriteHelper DEFAULT>;

     label2:
        r0.<android.os.Parcel: android.os.Parcel$ReadWriteHelper mReadWriteHelper> = r1;

        return;
    }

    public final void unmarshall(byte[], int, int)
    {
        android.os.Parcel r0;
        byte[] r1;
        int i0, i1;
        long $l2, $l3;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $l2 = r0.<android.os.Parcel: long mNativePtr>;

        $l3 = staticinvoke <android.os.Parcel: long nativeUnmarshall(long,byte[],int,int)>($l2, r1, i0, i1);

        specialinvoke r0.<android.os.Parcel: void updateNativeSize(long)>($l3);

        return;
    }

    public final void writeArray(java.lang.Object[])
    {
        android.os.Parcel r0;
        java.lang.Object[] r1;
        int i0, i1;
        java.lang.Object $r2;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: java.lang.Object[];

        if r1 != null goto label1;

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(-1);

        return;

     label1:
        i0 = lengthof r1;

        i1 = 0;

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(i0);

     label2:
        if i1 >= i0 goto label3;

        $r2 = r1[i1];

        virtualinvoke r0.<android.os.Parcel: void writeValue(java.lang.Object)>($r2);

        i1 = i1 + 1;

        goto label2;

     label3:
        return;
    }

    public void writeArrayMap(android.util.ArrayMap)
    {
        android.os.Parcel r0;
        android.util.ArrayMap r1;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: android.util.ArrayMap;

        virtualinvoke r0.<android.os.Parcel: void writeArrayMapInternal(android.util.ArrayMap)>(r1);

        return;
    }

    void writeArrayMapInternal(android.util.ArrayMap)
    {
        android.os.Parcel r0;
        android.util.ArrayMap r1;
        int i0, i1;
        java.lang.Object $r2, $r4;
        java.lang.String $r3;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: android.util.ArrayMap;

        if r1 != null goto label1;

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(-1);

        return;

     label1:
        i0 = virtualinvoke r1.<android.util.ArrayMap: int size()>();

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(i0);

        i1 = 0;

     label2:
        if i1 >= i0 goto label3;

        $r2 = virtualinvoke r1.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i1);

        $r3 = (java.lang.String) $r2;

        virtualinvoke r0.<android.os.Parcel: void writeString(java.lang.String)>($r3);

        $r4 = virtualinvoke r1.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i1);

        virtualinvoke r0.<android.os.Parcel: void writeValue(java.lang.Object)>($r4);

        i1 = i1 + 1;

        goto label2;

     label3:
        return;
    }

    public void writeArraySet(android.util.ArraySet)
    {
        android.os.Parcel r0;
        android.util.ArraySet r1;
        java.lang.Object $r2;
        int i0, i1;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: android.util.ArraySet;

        if r1 == null goto label1;

        i0 = virtualinvoke r1.<android.util.ArraySet: int size()>();

        goto label2;

     label1:
        i0 = -1;

     label2:
        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(i0);

        i1 = 0;

     label3:
        if i1 >= i0 goto label4;

        $r2 = virtualinvoke r1.<android.util.ArraySet: java.lang.Object valueAt(int)>(i1);

        virtualinvoke r0.<android.os.Parcel: void writeValue(java.lang.Object)>($r2);

        i1 = i1 + 1;

        goto label3;

     label4:
        return;
    }

    public final void writeBinderArray(android.os.IBinder[])
    {
        android.os.Parcel r0;
        android.os.IBinder[] r1;
        int i0, i1;
        android.os.IBinder $r2;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: android.os.IBinder[];

        if r1 == null goto label3;

        i0 = lengthof r1;

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(i0);

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r2 = r1[i1];

        virtualinvoke r0.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r2);

        i1 = i1 + 1;

        goto label1;

     label2:
        goto label4;

     label3:
        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(-1);

     label4:
        return;
    }

    public final void writeBinderList(java.util.List)
    {
        android.os.Parcel r0;
        java.util.List r1;
        int i0, i1;
        java.lang.Object $r2;
        android.os.IBinder $r3;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: java.util.List;

        if r1 != null goto label1;

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(-1);

        return;

     label1:
        i0 = interfaceinvoke r1.<java.util.List: int size()>();

        i1 = 0;

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(i0);

     label2:
        if i1 >= i0 goto label3;

        $r2 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i1);

        $r3 = (android.os.IBinder) $r2;

        virtualinvoke r0.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r3);

        i1 = i1 + 1;

        goto label2;

     label3:
        return;
    }

    public final void writeBlob(byte[])
    {
        android.os.Parcel r0;
        byte[] r1;
        int i0;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: byte[];

        if r1 == null goto label1;

        i0 = lengthof r1;

        goto label2;

     label1:
        i0 = 0;

     label2:
        virtualinvoke r0.<android.os.Parcel: void writeBlob(byte[],int,int)>(r1, 0, i0);

        return;
    }

    public final void writeBlob(byte[], int, int)
    {
        android.os.Parcel r0;
        byte[] r1;
        int i0, i1, $i2;
        long $l3;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        if r1 != null goto label1;

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(-1);

        return;

     label1:
        $i2 = lengthof r1;

        staticinvoke <libcore.util.ArrayUtils: void throwsIfOutOfBounds(int,int,int)>($i2, i0, i1);

        $l3 = r0.<android.os.Parcel: long mNativePtr>;

        staticinvoke <android.os.Parcel: void nativeWriteBlob(long,byte[],int,int)>($l3, r1, i0, i1);

        return;
    }

    public final void writeBoolean(boolean)
    {
        android.os.Parcel r0;
        boolean z0;
        int i0;

        r0 := @this: android.os.Parcel;

        z0 := @parameter0: boolean;

        i0 = (int) z0;

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(i0);

        return;
    }

    public final void writeBooleanArray(boolean[])
    {
        android.os.Parcel r0;
        boolean[] r1;
        int i0, i1, i2;
        boolean $z0;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: boolean[];

        if r1 == null goto label3;

        i0 = lengthof r1;

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(i0);

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $z0 = r1[i1];

        i2 = (int) $z0;

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(i2);

        i1 = i1 + 1;

        goto label1;

     label2:
        goto label4;

     label3:
        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(-1);

     label4:
        return;
    }

    public final void writeBundle(android.os.Bundle)
    {
        android.os.Parcel r0;
        android.os.Bundle r1;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: android.os.Bundle;

        if r1 != null goto label1;

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(-1);

        return;

     label1:
        virtualinvoke r1.<android.os.Bundle: void writeToParcel(android.os.Parcel,int)>(r0, 0);

        return;
    }

    public final void writeByte(byte)
    {
        android.os.Parcel r0;
        byte b0;

        r0 := @this: android.os.Parcel;

        b0 := @parameter0: byte;

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(b0);

        return;
    }

    public final void writeByteArray(byte[])
    {
        android.os.Parcel r0;
        byte[] r1;
        int i0;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: byte[];

        if r1 == null goto label1;

        i0 = lengthof r1;

        goto label2;

     label1:
        i0 = 0;

     label2:
        virtualinvoke r0.<android.os.Parcel: void writeByteArray(byte[],int,int)>(r1, 0, i0);

        return;
    }

    public final void writeByteArray(byte[], int, int)
    {
        android.os.Parcel r0;
        byte[] r1;
        int i0, i1, $i2;
        long $l3;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        if r1 != null goto label1;

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(-1);

        return;

     label1:
        $i2 = lengthof r1;

        staticinvoke <libcore.util.ArrayUtils: void throwsIfOutOfBounds(int,int,int)>($i2, i0, i1);

        $l3 = r0.<android.os.Parcel: long mNativePtr>;

        staticinvoke <android.os.Parcel: void nativeWriteByteArray(long,byte[],int,int)>($l3, r1, i0, i1);

        return;
    }

    public final void writeCharArray(char[])
    {
        android.os.Parcel r0;
        char[] r1;
        int i0, i2;
        char $c1;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: char[];

        if r1 == null goto label3;

        i0 = lengthof r1;

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(i0);

        i2 = 0;

     label1:
        if i2 >= i0 goto label2;

        $c1 = r1[i2];

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>($c1);

        i2 = i2 + 1;

        goto label1;

     label2:
        goto label4;

     label3:
        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(-1);

     label4:
        return;
    }

    public final void writeCharSequence(java.lang.CharSequence)
    {
        android.os.Parcel r0;
        java.lang.CharSequence r1;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: java.lang.CharSequence;

        staticinvoke <android.text.TextUtils: void writeToParcel(java.lang.CharSequence,android.os.Parcel,int)>(r1, r0, 0);

        return;
    }

    public final void writeCharSequenceArray(java.lang.CharSequence[])
    {
        android.os.Parcel r0;
        java.lang.CharSequence[] r1;
        int i0, i1;
        java.lang.CharSequence $r2;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: java.lang.CharSequence[];

        if r1 == null goto label3;

        i0 = lengthof r1;

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(i0);

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r2 = r1[i1];

        virtualinvoke r0.<android.os.Parcel: void writeCharSequence(java.lang.CharSequence)>($r2);

        i1 = i1 + 1;

        goto label1;

     label2:
        goto label4;

     label3:
        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(-1);

     label4:
        return;
    }

    public final void writeCharSequenceList(java.util.ArrayList)
    {
        android.os.Parcel r0;
        java.util.ArrayList r1;
        int i0, i1;
        java.lang.Object $r2;
        java.lang.CharSequence $r3;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: java.util.ArrayList;

        if r1 == null goto label3;

        i0 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(i0);

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r2 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r3 = (java.lang.CharSequence) $r2;

        virtualinvoke r0.<android.os.Parcel: void writeCharSequence(java.lang.CharSequence)>($r3);

        i1 = i1 + 1;

        goto label1;

     label2:
        goto label4;

     label3:
        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(-1);

     label4:
        return;
    }

    public final void writeDouble(double)
    {
        android.os.Parcel r0;
        double d0;
        long $l0;

        r0 := @this: android.os.Parcel;

        d0 := @parameter0: double;

        $l0 = r0.<android.os.Parcel: long mNativePtr>;

        staticinvoke <android.os.Parcel: void nativeWriteDouble(long,double)>($l0, d0);

        return;
    }

    public final void writeDoubleArray(double[])
    {
        android.os.Parcel r0;
        double[] r1;
        int i0, i1;
        double $d0;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: double[];

        if r1 == null goto label3;

        i0 = lengthof r1;

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(i0);

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $d0 = r1[i1];

        virtualinvoke r0.<android.os.Parcel: void writeDouble(double)>($d0);

        i1 = i1 + 1;

        goto label1;

     label2:
        goto label4;

     label3:
        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(-1);

     label4:
        return;
    }

    public final void writeException(java.lang.Exception)
    {
        android.os.Parcel r0;
        java.lang.Exception r1;
        int i0, $i1, $i2, i6, i8;
        java.lang.String $r2;
        boolean $z0, $z1, $z2;
        android.os.Parcelable $r3;
        android.os.ServiceSpecificException $r4;
        long $l3, $l4, l7;
        byte $b5;
        java.lang.RuntimeException $r5, $r6;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: java.lang.Exception;

        staticinvoke <android.app.AppOpsManager: void prefixParcelWithAppOpsIfNeeded(android.os.Parcel)>(r0);

        i6 = staticinvoke <android.os.Parcel: int getExceptionCode(java.lang.Throwable)>(r1);

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(i6);

        staticinvoke <android.os.StrictMode: void clearGatheredViolations()>();

        if i6 != 0 goto label2;

        $z2 = r1 instanceof java.lang.RuntimeException;

        if $z2 == 0 goto label1;

        $r6 = (java.lang.RuntimeException) r1;

        throw $r6;

     label1:
        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r1);

        throw $r5;

     label2:
        $r2 = virtualinvoke r1.<java.lang.Exception: java.lang.String getMessage()>();

        virtualinvoke r0.<android.os.Parcel: void writeString(java.lang.String)>($r2);

        $z0 = <android.os.Parcel: boolean sParcelExceptionStackTrace>;

        if $z0 == 0 goto label3;

        l7 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        goto label4;

     label3:
        l7 = 0L;

     label4:
        $z1 = <android.os.Parcel: boolean sParcelExceptionStackTrace>;

        if $z1 == 0 goto label5;

        $l3 = <android.os.Parcel: long sLastWriteExceptionStackTrace>;

        $l4 = l7 - $l3;

        $b5 = $l4 cmp 1000L;

        if $b5 <= 0 goto label5;

        <android.os.Parcel: long sLastWriteExceptionStackTrace> = l7;

        virtualinvoke r0.<android.os.Parcel: void writeStackTrace(java.lang.Throwable)>(r1);

        goto label6;

     label5:
        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(0);

     label6:
        if i6 == -9 goto label8;

        if i6 == -8 goto label7;

        goto label9;

     label7:
        $r4 = (android.os.ServiceSpecificException) r1;

        $i2 = $r4.<android.os.ServiceSpecificException: int errorCode>;

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>($i2);

        goto label9;

     label8:
        i0 = virtualinvoke r0.<android.os.Parcel: int dataPosition()>();

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(0);

        $r3 = (android.os.Parcelable) r1;

        virtualinvoke r0.<android.os.Parcel: void writeParcelable(android.os.Parcelable,int)>($r3, 1);

        i8 = virtualinvoke r0.<android.os.Parcel: int dataPosition()>();

        virtualinvoke r0.<android.os.Parcel: void setDataPosition(int)>(i0);

        $i1 = i8 - i0;

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>($i1);

        virtualinvoke r0.<android.os.Parcel: void setDataPosition(int)>(i8);

     label9:
        return;
    }

    public final void writeFileDescriptor(java.io.FileDescriptor)
    {
        android.os.Parcel r0;
        java.io.FileDescriptor r1;
        long $l0, $l1;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: java.io.FileDescriptor;

        $l0 = r0.<android.os.Parcel: long mNativePtr>;

        $l1 = staticinvoke <android.os.Parcel: long nativeWriteFileDescriptor(long,java.io.FileDescriptor)>($l0, r1);

        specialinvoke r0.<android.os.Parcel: void updateNativeSize(long)>($l1);

        return;
    }

    public final void writeFloat(float)
    {
        android.os.Parcel r0;
        float f0;
        long $l0;

        r0 := @this: android.os.Parcel;

        f0 := @parameter0: float;

        $l0 = r0.<android.os.Parcel: long mNativePtr>;

        staticinvoke <android.os.Parcel: void nativeWriteFloat(long,float)>($l0, f0);

        return;
    }

    public final void writeFloatArray(float[])
    {
        android.os.Parcel r0;
        float[] r1;
        int i0, i1;
        float $f0;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: float[];

        if r1 == null goto label3;

        i0 = lengthof r1;

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(i0);

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $f0 = r1[i1];

        virtualinvoke r0.<android.os.Parcel: void writeFloat(float)>($f0);

        i1 = i1 + 1;

        goto label1;

     label2:
        goto label4;

     label3:
        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(-1);

     label4:
        return;
    }

    public final void writeInt(int)
    {
        android.os.Parcel r0;
        int i0;
        long $l1;

        r0 := @this: android.os.Parcel;

        i0 := @parameter0: int;

        $l1 = r0.<android.os.Parcel: long mNativePtr>;

        staticinvoke <android.os.Parcel: void nativeWriteInt(long,int)>($l1, i0);

        return;
    }

    public final void writeIntArray(int[])
    {
        android.os.Parcel r0;
        int[] r1;
        int i0, $i1, i2;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: int[];

        if r1 == null goto label3;

        i0 = lengthof r1;

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(i0);

        i2 = 0;

     label1:
        if i2 >= i0 goto label2;

        $i1 = r1[i2];

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>($i1);

        i2 = i2 + 1;

        goto label1;

     label2:
        goto label4;

     label3:
        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(-1);

     label4:
        return;
    }

    public final void writeInterfaceToken(java.lang.String)
    {
        android.os.Parcel r0;
        java.lang.String r1;
        long $l0;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: java.lang.String;

        $l0 = r0.<android.os.Parcel: long mNativePtr>;

        staticinvoke <android.os.Parcel: void nativeWriteInterfaceToken(long,java.lang.String)>($l0, r1);

        return;
    }

    public final void writeList(java.util.List)
    {
        android.os.Parcel r0;
        java.util.List r1;
        int i0, i1;
        java.lang.Object $r2;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: java.util.List;

        if r1 != null goto label1;

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(-1);

        return;

     label1:
        i0 = interfaceinvoke r1.<java.util.List: int size()>();

        i1 = 0;

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(i0);

     label2:
        if i1 >= i0 goto label3;

        $r2 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i1);

        virtualinvoke r0.<android.os.Parcel: void writeValue(java.lang.Object)>($r2);

        i1 = i1 + 1;

        goto label2;

     label3:
        return;
    }

    public final void writeLong(long)
    {
        android.os.Parcel r0;
        long l0, $l1;

        r0 := @this: android.os.Parcel;

        l0 := @parameter0: long;

        $l1 = r0.<android.os.Parcel: long mNativePtr>;

        staticinvoke <android.os.Parcel: void nativeWriteLong(long,long)>($l1, l0);

        return;
    }

    public final void writeLongArray(long[])
    {
        android.os.Parcel r0;
        long[] r1;
        int i0, i2;
        long $l1;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: long[];

        if r1 == null goto label3;

        i0 = lengthof r1;

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(i0);

        i2 = 0;

     label1:
        if i2 >= i0 goto label2;

        $l1 = r1[i2];

        virtualinvoke r0.<android.os.Parcel: void writeLong(long)>($l1);

        i2 = i2 + 1;

        goto label1;

     label2:
        goto label4;

     label3:
        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(-1);

     label4:
        return;
    }

    public final void writeMap(java.util.Map)
    {
        android.os.Parcel r0;
        java.util.Map r1;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: java.util.Map;

        virtualinvoke r0.<android.os.Parcel: void writeMapInternal(java.util.Map)>(r1);

        return;
    }

    void writeMapInternal(java.util.Map)
    {
        android.os.Parcel r0;
        java.util.Map$Entry r1;
        boolean $z0;
        android.os.BadParcelableException $r2;
        java.lang.Object $r3, $r4, $r5;
        java.util.Map r6;
        java.util.Set r7;
        int i0;
        java.util.Iterator r8;

        r0 := @this: android.os.Parcel;

        r6 := @parameter0: java.util.Map;

        if r6 != null goto label1;

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(-1);

        return;

     label1:
        r7 = interfaceinvoke r6.<java.util.Map: java.util.Set entrySet()>();

        i0 = interfaceinvoke r7.<java.util.Set: int size()>();

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(i0);

        r8 = interfaceinvoke r7.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>();

        r1 = (java.util.Map$Entry) $r3;

        $r4 = interfaceinvoke r1.<java.util.Map$Entry: java.lang.Object getKey()>();

        virtualinvoke r0.<android.os.Parcel: void writeValue(java.lang.Object)>($r4);

        $r5 = interfaceinvoke r1.<java.util.Map$Entry: java.lang.Object getValue()>();

        virtualinvoke r0.<android.os.Parcel: void writeValue(java.lang.Object)>($r5);

        i0 = i0 + -1;

        goto label2;

     label3:
        if i0 != 0 goto label4;

        return;

     label4:
        $r2 = new android.os.BadParcelableException;

        specialinvoke $r2.<android.os.BadParcelableException: void <init>(java.lang.String)>("Map size does not match number of entries!");

        throw $r2;
    }

    public final void writeNoException()
    {
        android.os.Parcel r0;
        int i0, i1, $i2;
        boolean $z0;

        r0 := @this: android.os.Parcel;

        staticinvoke <android.app.AppOpsManager: void prefixParcelWithAppOpsIfNeeded(android.os.Parcel)>(r0);

        $z0 = staticinvoke <android.os.StrictMode: boolean hasGatheredViolations()>();

        if $z0 == 0 goto label1;

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(-128);

        i0 = virtualinvoke r0.<android.os.Parcel: int dataPosition()>();

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(0);

        staticinvoke <android.os.StrictMode: void writeGatheredViolationsToParcel(android.os.Parcel)>(r0);

        i1 = virtualinvoke r0.<android.os.Parcel: int dataPosition()>();

        virtualinvoke r0.<android.os.Parcel: void setDataPosition(int)>(i0);

        $i2 = i1 - i0;

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>($i2);

        virtualinvoke r0.<android.os.Parcel: void setDataPosition(int)>(i1);

        goto label2;

     label1:
        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(0);

     label2:
        return;
    }

    public final void writeParcelable(android.os.Parcelable, int)
    {
        android.os.Parcel r0;
        android.os.Parcelable r1;
        int i0;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: android.os.Parcelable;

        i0 := @parameter1: int;

        if r1 != null goto label1;

        virtualinvoke r0.<android.os.Parcel: void writeString(java.lang.String)>(null);

        return;

     label1:
        virtualinvoke r0.<android.os.Parcel: void writeParcelableCreator(android.os.Parcelable)>(r1);

        interfaceinvoke r1.<android.os.Parcelable: void writeToParcel(android.os.Parcel,int)>(r0, i0);

        return;
    }

    public final void writeParcelableArray(android.os.Parcelable[], int)
    {
        android.os.Parcel r0;
        android.os.Parcelable[] r1;
        int i0, i1, i2;
        android.os.Parcelable $r2;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: android.os.Parcelable[];

        i0 := @parameter1: int;

        if r1 == null goto label3;

        i1 = lengthof r1;

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(i1);

        i2 = 0;

     label1:
        if i2 >= i1 goto label2;

        $r2 = r1[i2];

        virtualinvoke r0.<android.os.Parcel: void writeParcelable(android.os.Parcelable,int)>($r2, i0);

        i2 = i2 + 1;

        goto label1;

     label2:
        goto label4;

     label3:
        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(-1);

     label4:
        return;
    }

    public final void writeParcelableCreator(android.os.Parcelable)
    {
        android.os.Parcel r0;
        android.os.Parcelable r1;
        java.lang.Class $r2;
        java.lang.String $r3;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: android.os.Parcelable;

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke r0.<android.os.Parcel: void writeString(java.lang.String)>($r3);

        return;
    }

    public final void writeParcelableList(java.util.List, int)
    {
        android.os.Parcel r0;
        java.util.List r1;
        int i0, i1, i2;
        java.lang.Object $r2;
        android.os.Parcelable $r3;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: java.util.List;

        i0 := @parameter1: int;

        if r1 != null goto label1;

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(-1);

        return;

     label1:
        i1 = interfaceinvoke r1.<java.util.List: int size()>();

        i2 = 0;

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(i1);

     label2:
        if i2 >= i1 goto label3;

        $r2 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i2);

        $r3 = (android.os.Parcelable) $r2;

        virtualinvoke r0.<android.os.Parcel: void writeParcelable(android.os.Parcelable,int)>($r3, i0);

        i2 = i2 + 1;

        goto label2;

     label3:
        return;
    }

    public final void writePersistableBundle(android.os.PersistableBundle)
    {
        android.os.Parcel r0;
        android.os.PersistableBundle r1;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: android.os.PersistableBundle;

        if r1 != null goto label1;

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(-1);

        return;

     label1:
        virtualinvoke r1.<android.os.PersistableBundle: void writeToParcel(android.os.Parcel,int)>(r0, 0);

        return;
    }

    public final void writeRawFileDescriptor(java.io.FileDescriptor)
    {
        android.os.Parcel r0;
        java.io.FileDescriptor r1;
        long $l0;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: java.io.FileDescriptor;

        $l0 = r0.<android.os.Parcel: long mNativePtr>;

        staticinvoke <android.os.Parcel: long nativeWriteFileDescriptor(long,java.io.FileDescriptor)>($l0, r1);

        return;
    }

    public final void writeRawFileDescriptorArray(java.io.FileDescriptor[])
    {
        android.os.Parcel r0;
        java.io.FileDescriptor[] r1;
        int i0, i1;
        java.io.FileDescriptor $r2;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: java.io.FileDescriptor[];

        if r1 == null goto label3;

        i0 = lengthof r1;

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(i0);

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r2 = r1[i1];

        virtualinvoke r0.<android.os.Parcel: void writeRawFileDescriptor(java.io.FileDescriptor)>($r2);

        i1 = i1 + 1;

        goto label1;

     label2:
        goto label4;

     label3:
        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(-1);

     label4:
        return;
    }

    public final void writeSerializable(java.io.Serializable)
    {
        android.os.Parcel r0;
        java.lang.String r1, $r12;
        java.io.ObjectOutputStream r2;
        java.lang.Class $r3;
        java.io.ByteArrayOutputStream $r4;
        byte[] $r5;
        java.lang.Throwable $r6;
        java.lang.StringBuilder $r7;
        java.lang.RuntimeException $r11;
        java.io.Serializable r13;

        r0 := @this: android.os.Parcel;

        r13 := @parameter0: java.io.Serializable;

        if r13 != null goto label1;

        virtualinvoke r0.<android.os.Parcel: void writeString(java.lang.String)>(null);

        return;

     label1:
        $r3 = virtualinvoke r13.<java.lang.Object: java.lang.Class getClass()>();

        r1 = virtualinvoke $r3.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke r0.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r4 = new java.io.ByteArrayOutputStream;

        specialinvoke $r4.<java.io.ByteArrayOutputStream: void <init>()>();

     label2:
        r2 = new java.io.ObjectOutputStream;

        specialinvoke r2.<java.io.ObjectOutputStream: void <init>(java.io.OutputStream)>($r4);

        virtualinvoke r2.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>(r13);

        virtualinvoke r2.<java.io.ObjectOutputStream: void close()>();

        $r5 = virtualinvoke $r4.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        virtualinvoke r0.<android.os.Parcel: void writeByteArray(byte[])>($r5);

     label3:
        return;

     label4:
        $r6 := @caughtexception;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Parcelable encountered IOException writing serializable object (name = ");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r11 = new java.lang.RuntimeException;

        $r12 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r12, $r6);

        throw $r11;

        catch java.io.IOException from label2 to label3 with label4;
    }

    public final void writeSize(android.util.Size)
    {
        android.os.Parcel r0;
        android.util.Size r1;
        int $i0, $i1;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: android.util.Size;

        $i0 = virtualinvoke r1.<android.util.Size: int getWidth()>();

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>($i0);

        $i1 = virtualinvoke r1.<android.util.Size: int getHeight()>();

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>($i1);

        return;
    }

    public final void writeSizeF(android.util.SizeF)
    {
        android.os.Parcel r0;
        android.util.SizeF r1;
        float $f0, $f1;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: android.util.SizeF;

        $f0 = virtualinvoke r1.<android.util.SizeF: float getWidth()>();

        virtualinvoke r0.<android.os.Parcel: void writeFloat(float)>($f0);

        $f1 = virtualinvoke r1.<android.util.SizeF: float getHeight()>();

        virtualinvoke r0.<android.os.Parcel: void writeFloat(float)>($f1);

        return;
    }

    public final void writeSparseArray(android.util.SparseArray)
    {
        android.os.Parcel r0;
        android.util.SparseArray r1;
        int i0, $i1, i2;
        java.lang.Object $r2;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: android.util.SparseArray;

        if r1 != null goto label1;

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(-1);

        return;

     label1:
        i0 = virtualinvoke r1.<android.util.SparseArray: int size()>();

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(i0);

        i2 = 0;

     label2:
        if i2 >= i0 goto label3;

        $i1 = virtualinvoke r1.<android.util.SparseArray: int keyAt(int)>(i2);

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>($i1);

        $r2 = virtualinvoke r1.<android.util.SparseArray: java.lang.Object valueAt(int)>(i2);

        virtualinvoke r0.<android.os.Parcel: void writeValue(java.lang.Object)>($r2);

        i2 = i2 + 1;

        goto label2;

     label3:
        return;
    }

    public final void writeSparseBooleanArray(android.util.SparseBooleanArray)
    {
        android.os.Parcel r0;
        android.util.SparseBooleanArray r1;
        int i0, $i1, i3;
        boolean $z0;
        byte $b2;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: android.util.SparseBooleanArray;

        if r1 != null goto label1;

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(-1);

        return;

     label1:
        i0 = virtualinvoke r1.<android.util.SparseBooleanArray: int size()>();

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(i0);

        i3 = 0;

     label2:
        if i3 >= i0 goto label3;

        $i1 = virtualinvoke r1.<android.util.SparseBooleanArray: int keyAt(int)>(i3);

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>($i1);

        $z0 = virtualinvoke r1.<android.util.SparseBooleanArray: boolean valueAt(int)>(i3);

        $b2 = (byte) $z0;

        virtualinvoke r0.<android.os.Parcel: void writeByte(byte)>($b2);

        i3 = i3 + 1;

        goto label2;

     label3:
        return;
    }

    public final void writeSparseIntArray(android.util.SparseIntArray)
    {
        android.os.Parcel r0;
        android.util.SparseIntArray r1;
        int i0, $i1, $i2, i3;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: android.util.SparseIntArray;

        if r1 != null goto label1;

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(-1);

        return;

     label1:
        i0 = virtualinvoke r1.<android.util.SparseIntArray: int size()>();

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(i0);

        i3 = 0;

     label2:
        if i3 >= i0 goto label3;

        $i1 = virtualinvoke r1.<android.util.SparseIntArray: int keyAt(int)>(i3);

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>($i1);

        $i2 = virtualinvoke r1.<android.util.SparseIntArray: int valueAt(int)>(i3);

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>($i2);

        i3 = i3 + 1;

        goto label2;

     label3:
        return;
    }

    public void writeStackTrace(java.lang.Throwable)
    {
        android.os.Parcel r0;
        int i0, i1, $i2, $i3, i4, i5;
        java.lang.StackTraceElement[] r1;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;
        java.lang.StackTraceElement $r5;
        java.lang.Throwable r8;

        r0 := @this: android.os.Parcel;

        r8 := @parameter0: java.lang.Throwable;

        i0 = virtualinvoke r0.<android.os.Parcel: int dataPosition()>();

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(0);

        r1 = virtualinvoke r8.<java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()>();

        $i2 = lengthof r1;

        i1 = staticinvoke <java.lang.Math: int min(int,int)>($i2, 5);

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        i4 = 0;

     label1:
        if i4 >= i1 goto label2;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\tat ");

        $r5 = r1[i4];

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        i4 = i4 + 1;

        goto label1;

     label2:
        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<android.os.Parcel: void writeString(java.lang.String)>($r3);

        i5 = virtualinvoke r0.<android.os.Parcel: int dataPosition()>();

        virtualinvoke r0.<android.os.Parcel: void setDataPosition(int)>(i0);

        $i3 = i5 - i0;

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>($i3);

        virtualinvoke r0.<android.os.Parcel: void setDataPosition(int)>(i5);

        return;
    }

    public final void writeString(java.lang.String)
    {
        android.os.Parcel r0;
        java.lang.String r1;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<android.os.Parcel: void writeString16(java.lang.String)>(r1);

        return;
    }

    public final void writeString16(java.lang.String)
    {
        android.os.Parcel r0;
        java.lang.String r1;
        android.os.Parcel$ReadWriteHelper $r2;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<android.os.Parcel: android.os.Parcel$ReadWriteHelper mReadWriteHelper>;

        virtualinvoke $r2.<android.os.Parcel$ReadWriteHelper: void writeString16(android.os.Parcel,java.lang.String)>(r0, r1);

        return;
    }

    public final void writeString16Array(java.lang.String[])
    {
        android.os.Parcel r0;
        java.lang.String[] r1;
        int i0, i1;
        java.lang.String $r2;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: java.lang.String[];

        if r1 == null goto label3;

        i0 = lengthof r1;

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(i0);

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r2 = r1[i1];

        virtualinvoke r0.<android.os.Parcel: void writeString16(java.lang.String)>($r2);

        i1 = i1 + 1;

        goto label1;

     label2:
        goto label4;

     label3:
        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(-1);

     label4:
        return;
    }

    public void writeString16NoHelper(java.lang.String)
    {
        android.os.Parcel r0;
        java.lang.String r1;
        long $l0;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: java.lang.String;

        $l0 = r0.<android.os.Parcel: long mNativePtr>;

        staticinvoke <android.os.Parcel: void nativeWriteString16(long,java.lang.String)>($l0, r1);

        return;
    }

    public final void writeString8(java.lang.String)
    {
        android.os.Parcel r0;
        java.lang.String r1;
        android.os.Parcel$ReadWriteHelper $r2;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<android.os.Parcel: android.os.Parcel$ReadWriteHelper mReadWriteHelper>;

        virtualinvoke $r2.<android.os.Parcel$ReadWriteHelper: void writeString8(android.os.Parcel,java.lang.String)>(r0, r1);

        return;
    }

    public final void writeString8Array(java.lang.String[])
    {
        android.os.Parcel r0;
        java.lang.String[] r1;
        int i0, i1;
        java.lang.String $r2;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: java.lang.String[];

        if r1 == null goto label3;

        i0 = lengthof r1;

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(i0);

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r2 = r1[i1];

        virtualinvoke r0.<android.os.Parcel: void writeString8(java.lang.String)>($r2);

        i1 = i1 + 1;

        goto label1;

     label2:
        goto label4;

     label3:
        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(-1);

     label4:
        return;
    }

    public void writeString8NoHelper(java.lang.String)
    {
        android.os.Parcel r0;
        java.lang.String r1;
        long $l0;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: java.lang.String;

        $l0 = r0.<android.os.Parcel: long mNativePtr>;

        staticinvoke <android.os.Parcel: void nativeWriteString8(long,java.lang.String)>($l0, r1);

        return;
    }

    public final void writeStringArray(java.lang.String[])
    {
        android.os.Parcel r0;
        java.lang.String[] r1;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: java.lang.String[];

        virtualinvoke r0.<android.os.Parcel: void writeString16Array(java.lang.String[])>(r1);

        return;
    }

    public final void writeStringList(java.util.List)
    {
        android.os.Parcel r0;
        java.util.List r1;
        int i0, i1;
        java.lang.Object $r2;
        java.lang.String $r3;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: java.util.List;

        if r1 != null goto label1;

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(-1);

        return;

     label1:
        i0 = interfaceinvoke r1.<java.util.List: int size()>();

        i1 = 0;

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(i0);

     label2:
        if i1 >= i0 goto label3;

        $r2 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i1);

        $r3 = (java.lang.String) $r2;

        virtualinvoke r0.<android.os.Parcel: void writeString(java.lang.String)>($r3);

        i1 = i1 + 1;

        goto label2;

     label3:
        return;
    }

    public void writeStringNoHelper(java.lang.String)
    {
        android.os.Parcel r0;
        java.lang.String r1;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<android.os.Parcel: void writeString16NoHelper(java.lang.String)>(r1);

        return;
    }

    public final void writeStrongBinder(android.os.IBinder)
    {
        android.os.Parcel r0;
        android.os.IBinder r1;
        long $l0;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: android.os.IBinder;

        $l0 = r0.<android.os.Parcel: long mNativePtr>;

        staticinvoke <android.os.Parcel: void nativeWriteStrongBinder(long,android.os.IBinder)>($l0, r1);

        return;
    }

    public final void writeStrongInterface(android.os.IInterface)
    {
        android.os.Parcel r0;
        android.os.IInterface r1;
        android.os.IBinder r2;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: android.os.IInterface;

        if r1 != null goto label1;

        r2 = null;

        goto label2;

     label1:
        r2 = interfaceinvoke r1.<android.os.IInterface: android.os.IBinder asBinder()>();

     label2:
        virtualinvoke r0.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r2);

        return;
    }

    public final void writeTypedArray(android.os.Parcelable[], int)
    {
        android.os.Parcel r0;
        android.os.Parcelable[] r1;
        int i0, i1, i2;
        android.os.Parcelable $r2;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: android.os.Parcelable[];

        i0 := @parameter1: int;

        if r1 == null goto label3;

        i1 = lengthof r1;

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(i1);

        i2 = 0;

     label1:
        if i2 >= i1 goto label2;

        $r2 = r1[i2];

        virtualinvoke r0.<android.os.Parcel: void writeTypedObject(android.os.Parcelable,int)>($r2, i0);

        i2 = i2 + 1;

        goto label1;

     label2:
        goto label4;

     label3:
        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(-1);

     label4:
        return;
    }

    public void writeTypedArrayMap(android.util.ArrayMap, int)
    {
        android.os.Parcel r0;
        android.util.ArrayMap r1;
        int i0, i1, i2;
        java.lang.Object $r2, $r4;
        java.lang.String $r3;
        android.os.Parcelable $r5;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: android.util.ArrayMap;

        i0 := @parameter1: int;

        if r1 != null goto label1;

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(-1);

        return;

     label1:
        i1 = virtualinvoke r1.<android.util.ArrayMap: int size()>();

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(i1);

        i2 = 0;

     label2:
        if i2 >= i1 goto label3;

        $r2 = virtualinvoke r1.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i2);

        $r3 = (java.lang.String) $r2;

        virtualinvoke r0.<android.os.Parcel: void writeString(java.lang.String)>($r3);

        $r4 = virtualinvoke r1.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i2);

        $r5 = (android.os.Parcelable) $r4;

        virtualinvoke r0.<android.os.Parcel: void writeTypedObject(android.os.Parcelable,int)>($r5, i0);

        i2 = i2 + 1;

        goto label2;

     label3:
        return;
    }

    public final void writeTypedList(java.util.List)
    {
        android.os.Parcel r0;
        java.util.List r1;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: java.util.List;

        virtualinvoke r0.<android.os.Parcel: void writeTypedList(java.util.List,int)>(r1, 0);

        return;
    }

    public void writeTypedList(java.util.List, int)
    {
        android.os.Parcel r0;
        java.util.List r1;
        int i0, i1, i2;
        java.lang.Object $r2;
        android.os.Parcelable $r3;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: java.util.List;

        i0 := @parameter1: int;

        if r1 != null goto label1;

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(-1);

        return;

     label1:
        i1 = interfaceinvoke r1.<java.util.List: int size()>();

        i2 = 0;

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(i1);

     label2:
        if i2 >= i1 goto label3;

        $r2 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i2);

        $r3 = (android.os.Parcelable) $r2;

        virtualinvoke r0.<android.os.Parcel: void writeTypedObject(android.os.Parcelable,int)>($r3, i0);

        i2 = i2 + 1;

        goto label2;

     label3:
        return;
    }

    public final void writeTypedObject(android.os.Parcelable, int)
    {
        android.os.Parcel r0;
        android.os.Parcelable r1;
        int i0;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: android.os.Parcelable;

        i0 := @parameter1: int;

        if r1 == null goto label1;

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(1);

        interfaceinvoke r1.<android.os.Parcelable: void writeToParcel(android.os.Parcel,int)>(r0, i0);

        goto label2;

     label1:
        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(0);

     label2:
        return;
    }

    public final void writeTypedSparseArray(android.util.SparseArray, int)
    {
        android.os.Parcel r0;
        android.util.SparseArray r1;
        int i0, i1, $i2, i3;
        java.lang.Object $r2;
        android.os.Parcelable $r3;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: android.util.SparseArray;

        i0 := @parameter1: int;

        if r1 != null goto label1;

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(-1);

        return;

     label1:
        i1 = virtualinvoke r1.<android.util.SparseArray: int size()>();

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(i1);

        i3 = 0;

     label2:
        if i3 >= i1 goto label3;

        $i2 = virtualinvoke r1.<android.util.SparseArray: int keyAt(int)>(i3);

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>($i2);

        $r2 = virtualinvoke r1.<android.util.SparseArray: java.lang.Object valueAt(int)>(i3);

        $r3 = (android.os.Parcelable) $r2;

        virtualinvoke r0.<android.os.Parcel: void writeTypedObject(android.os.Parcelable,int)>($r3, i0);

        i3 = i3 + 1;

        goto label2;

     label3:
        return;
    }

    public final void writeValue(java.lang.Object)
    {
        android.os.Parcel r0;
        java.lang.Object r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26, $z27, $z28;
        java.lang.StringBuilder $r2;
        java.lang.RuntimeException $r5;
        java.lang.String $r6, $r35;
        java.io.Serializable $r7;
        java.lang.Class $r8, r36;
        java.lang.Object[] $r9;
        double[] $r10;
        android.util.SizeF $r11;
        android.util.Size $r12;
        java.lang.Byte $r13;
        byte $b0;
        long[] $r14;
        int[] $r15;
        android.os.Parcelable[] $r16;
        android.os.IBinder $r17;
        java.lang.CharSequence[] $r18;
        java.lang.String[] $r19;
        byte[] $r20;
        boolean[] $r21;
        android.util.SparseArray $r22;
        java.util.List $r23;
        java.lang.CharSequence $r24;
        java.lang.Boolean $r25;
        java.lang.Double $r26;
        double $d0;
        java.lang.Float $r27;
        float $f0;
        java.lang.Long $r28;
        long $l1;
        java.lang.Short $r29;
        int $i2, $i3, i4;
        android.os.Parcelable $r30;
        android.os.PersistableBundle $r31;
        android.os.Bundle $r32;
        java.util.Map $r33;
        java.lang.Integer $r34;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: java.lang.Object;

        if r1 != null goto label01;

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(-1);

        goto label29;

     label01:
        $z0 = r1 instanceof java.lang.String;

        if $z0 == 0 goto label02;

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(0);

        $r35 = (java.lang.String) r1;

        virtualinvoke r0.<android.os.Parcel: void writeString(java.lang.String)>($r35);

        goto label29;

     label02:
        $z1 = r1 instanceof java.lang.Integer;

        if $z1 == 0 goto label03;

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(1);

        $r34 = (java.lang.Integer) r1;

        $i3 = virtualinvoke $r34.<java.lang.Integer: int intValue()>();

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>($i3);

        goto label29;

     label03:
        $z2 = r1 instanceof java.util.Map;

        if $z2 == 0 goto label04;

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(2);

        $r33 = (java.util.Map) r1;

        virtualinvoke r0.<android.os.Parcel: void writeMap(java.util.Map)>($r33);

        goto label29;

     label04:
        $z3 = r1 instanceof android.os.Bundle;

        if $z3 == 0 goto label05;

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(3);

        $r32 = (android.os.Bundle) r1;

        virtualinvoke r0.<android.os.Parcel: void writeBundle(android.os.Bundle)>($r32);

        goto label29;

     label05:
        $z4 = r1 instanceof android.os.PersistableBundle;

        if $z4 == 0 goto label06;

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(25);

        $r31 = (android.os.PersistableBundle) r1;

        virtualinvoke r0.<android.os.Parcel: void writePersistableBundle(android.os.PersistableBundle)>($r31);

        goto label29;

     label06:
        $z5 = r1 instanceof android.os.Parcelable;

        if $z5 == 0 goto label07;

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(4);

        $r30 = (android.os.Parcelable) r1;

        virtualinvoke r0.<android.os.Parcel: void writeParcelable(android.os.Parcelable,int)>($r30, 0);

        goto label29;

     label07:
        $z6 = r1 instanceof java.lang.Short;

        if $z6 == 0 goto label08;

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(5);

        $r29 = (java.lang.Short) r1;

        $i2 = virtualinvoke $r29.<java.lang.Short: int intValue()>();

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>($i2);

        goto label29;

     label08:
        $z7 = r1 instanceof java.lang.Long;

        if $z7 == 0 goto label09;

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(6);

        $r28 = (java.lang.Long) r1;

        $l1 = virtualinvoke $r28.<java.lang.Long: long longValue()>();

        virtualinvoke r0.<android.os.Parcel: void writeLong(long)>($l1);

        goto label29;

     label09:
        $z8 = r1 instanceof java.lang.Float;

        if $z8 == 0 goto label10;

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(7);

        $r27 = (java.lang.Float) r1;

        $f0 = virtualinvoke $r27.<java.lang.Float: float floatValue()>();

        virtualinvoke r0.<android.os.Parcel: void writeFloat(float)>($f0);

        goto label29;

     label10:
        $z9 = r1 instanceof java.lang.Double;

        if $z9 == 0 goto label11;

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(8);

        $r26 = (java.lang.Double) r1;

        $d0 = virtualinvoke $r26.<java.lang.Double: double doubleValue()>();

        virtualinvoke r0.<android.os.Parcel: void writeDouble(double)>($d0);

        goto label29;

     label11:
        $z10 = r1 instanceof java.lang.Boolean;

        if $z10 == 0 goto label12;

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(9);

        $r25 = (java.lang.Boolean) r1;

        $z28 = virtualinvoke $r25.<java.lang.Boolean: boolean booleanValue()>();

        i4 = (int) $z28;

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(i4);

        goto label29;

     label12:
        $z11 = r1 instanceof java.lang.CharSequence;

        if $z11 == 0 goto label13;

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(10);

        $r24 = (java.lang.CharSequence) r1;

        virtualinvoke r0.<android.os.Parcel: void writeCharSequence(java.lang.CharSequence)>($r24);

        goto label29;

     label13:
        $z12 = r1 instanceof java.util.List;

        if $z12 == 0 goto label14;

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(11);

        $r23 = (java.util.List) r1;

        virtualinvoke r0.<android.os.Parcel: void writeList(java.util.List)>($r23);

        goto label29;

     label14:
        $z13 = r1 instanceof android.util.SparseArray;

        if $z13 == 0 goto label15;

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(12);

        $r22 = (android.util.SparseArray) r1;

        virtualinvoke r0.<android.os.Parcel: void writeSparseArray(android.util.SparseArray)>($r22);

        goto label29;

     label15:
        $z14 = r1 instanceof boolean[];

        if $z14 == 0 goto label16;

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(23);

        $r21 = (boolean[]) r1;

        virtualinvoke r0.<android.os.Parcel: void writeBooleanArray(boolean[])>($r21);

        goto label29;

     label16:
        $z15 = r1 instanceof byte[];

        if $z15 == 0 goto label17;

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(13);

        $r20 = (byte[]) r1;

        virtualinvoke r0.<android.os.Parcel: void writeByteArray(byte[])>($r20);

        goto label29;

     label17:
        $z16 = r1 instanceof java.lang.String[];

        if $z16 == 0 goto label18;

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(14);

        $r19 = (java.lang.String[]) r1;

        virtualinvoke r0.<android.os.Parcel: void writeStringArray(java.lang.String[])>($r19);

        goto label29;

     label18:
        $z17 = r1 instanceof java.lang.CharSequence[];

        if $z17 == 0 goto label19;

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(24);

        $r18 = (java.lang.CharSequence[]) r1;

        virtualinvoke r0.<android.os.Parcel: void writeCharSequenceArray(java.lang.CharSequence[])>($r18);

        goto label29;

     label19:
        $z18 = r1 instanceof android.os.IBinder;

        if $z18 == 0 goto label20;

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(15);

        $r17 = (android.os.IBinder) r1;

        virtualinvoke r0.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r17);

        goto label29;

     label20:
        $z19 = r1 instanceof android.os.Parcelable[];

        if $z19 == 0 goto label21;

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(16);

        $r16 = (android.os.Parcelable[]) r1;

        virtualinvoke r0.<android.os.Parcel: void writeParcelableArray(android.os.Parcelable[],int)>($r16, 0);

        goto label29;

     label21:
        $z20 = r1 instanceof int[];

        if $z20 == 0 goto label22;

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(18);

        $r15 = (int[]) r1;

        virtualinvoke r0.<android.os.Parcel: void writeIntArray(int[])>($r15);

        goto label29;

     label22:
        $z21 = r1 instanceof long[];

        if $z21 == 0 goto label23;

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(19);

        $r14 = (long[]) r1;

        virtualinvoke r0.<android.os.Parcel: void writeLongArray(long[])>($r14);

        goto label29;

     label23:
        $z22 = r1 instanceof java.lang.Byte;

        if $z22 == 0 goto label24;

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(20);

        $r13 = (java.lang.Byte) r1;

        $b0 = virtualinvoke $r13.<java.lang.Byte: byte byteValue()>();

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>($b0);

        goto label29;

     label24:
        $z23 = r1 instanceof android.util.Size;

        if $z23 == 0 goto label25;

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(26);

        $r12 = (android.util.Size) r1;

        virtualinvoke r0.<android.os.Parcel: void writeSize(android.util.Size)>($r12);

        goto label29;

     label25:
        $z24 = r1 instanceof android.util.SizeF;

        if $z24 == 0 goto label26;

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(27);

        $r11 = (android.util.SizeF) r1;

        virtualinvoke r0.<android.os.Parcel: void writeSizeF(android.util.SizeF)>($r11);

        goto label29;

     label26:
        $z25 = r1 instanceof double[];

        if $z25 == 0 goto label27;

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(28);

        $r10 = (double[]) r1;

        virtualinvoke r0.<android.os.Parcel: void writeDoubleArray(double[])>($r10);

        goto label29;

     label27:
        r36 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $z26 = virtualinvoke r36.<java.lang.Class: boolean isArray()>();

        if $z26 == 0 goto label28;

        $r8 = virtualinvoke r36.<java.lang.Class: java.lang.Class getComponentType()>();

        if $r8 != class "Ljava/lang/Object;" goto label28;

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(17);

        $r9 = (java.lang.Object[]) r1;

        virtualinvoke r0.<android.os.Parcel: void writeArray(java.lang.Object[])>($r9);

        goto label29;

     label28:
        $z27 = r1 instanceof java.io.Serializable;

        if $z27 == 0 goto label30;

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(21);

        $r7 = (java.io.Serializable) r1;

        virtualinvoke r0.<android.os.Parcel: void writeSerializable(java.io.Serializable)>($r7);

     label29:
        return;

     label30:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Parcel: unable to marshal value ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r5 = new java.lang.RuntimeException;

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String)>($r6);

        throw $r5;
    }
}
