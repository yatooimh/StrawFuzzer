public class android.os.ParcelFileDescriptor extends java.lang.Object implements android.os.Parcelable, java.io.Closeable
{
    public static final android.os.Parcelable$Creator CREATOR;
    private static final int MAX_STATUS;
    public static final int MODE_APPEND;
    public static final int MODE_CREATE;
    public static final int MODE_READ_ONLY;
    public static final int MODE_READ_WRITE;
    public static final int MODE_TRUNCATE;
    public static final int MODE_WORLD_READABLE;
    public static final int MODE_WORLD_WRITEABLE;
    public static final int MODE_WRITE_ONLY;
    private static final java.lang.String TAG;
    private volatile boolean mClosed;
    private java.io.FileDescriptor mCommFd;
    private final java.io.FileDescriptor mFd;
    private final dalvik.system.CloseGuard mGuard;
    private android.os.ParcelFileDescriptor$Status mStatus;
    private byte[] mStatusBuf;
    private final android.os.ParcelFileDescriptor mWrapped;

    static void <clinit>()
    {
        android.os.ParcelFileDescriptor$2 $r0;

        <android.os.ParcelFileDescriptor: java.lang.String TAG> = "ParcelFileDescriptor";

        <android.os.ParcelFileDescriptor: int MODE_WRITE_ONLY> = 536870912;

        <android.os.ParcelFileDescriptor: int MODE_WORLD_WRITEABLE> = 2;

        <android.os.ParcelFileDescriptor: int MODE_WORLD_READABLE> = 1;

        <android.os.ParcelFileDescriptor: int MODE_TRUNCATE> = 67108864;

        <android.os.ParcelFileDescriptor: int MODE_READ_WRITE> = 805306368;

        <android.os.ParcelFileDescriptor: int MODE_READ_ONLY> = 268435456;

        <android.os.ParcelFileDescriptor: int MODE_CREATE> = 134217728;

        <android.os.ParcelFileDescriptor: int MODE_APPEND> = 33554432;

        <android.os.ParcelFileDescriptor: int MAX_STATUS> = 1024;

        $r0 = new android.os.ParcelFileDescriptor$2;

        specialinvoke $r0.<android.os.ParcelFileDescriptor$2: void <init>()>();

        <android.os.ParcelFileDescriptor: android.os.Parcelable$Creator CREATOR> = $r0;

        return;
    }

    public void <init>(android.os.ParcelFileDescriptor)
    {
        android.os.ParcelFileDescriptor r0, r1;
        dalvik.system.CloseGuard $r2;

        r0 := @this: android.os.ParcelFileDescriptor;

        r1 := @parameter0: android.os.ParcelFileDescriptor;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = staticinvoke <dalvik.system.CloseGuard: dalvik.system.CloseGuard get()>();

        r0.<android.os.ParcelFileDescriptor: dalvik.system.CloseGuard mGuard> = $r2;

        r0.<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor mWrapped> = r1;

        r0.<android.os.ParcelFileDescriptor: java.io.FileDescriptor mFd> = null;

        r0.<android.os.ParcelFileDescriptor: java.io.FileDescriptor mCommFd> = null;

        r0.<android.os.ParcelFileDescriptor: boolean mClosed> = 1;

        return;
    }

    public void <init>(java.io.FileDescriptor)
    {
        android.os.ParcelFileDescriptor r0;
        java.io.FileDescriptor r1;

        r0 := @this: android.os.ParcelFileDescriptor;

        r1 := @parameter0: java.io.FileDescriptor;

        specialinvoke r0.<android.os.ParcelFileDescriptor: void <init>(java.io.FileDescriptor,java.io.FileDescriptor)>(r1, null);

        return;
    }

    public void <init>(java.io.FileDescriptor, java.io.FileDescriptor)
    {
        android.os.ParcelFileDescriptor r0;
        java.io.FileDescriptor r1, r2;
        dalvik.system.CloseGuard $r3, $r5;
        java.lang.NullPointerException $r4;

        r0 := @this: android.os.ParcelFileDescriptor;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: java.io.FileDescriptor;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = staticinvoke <dalvik.system.CloseGuard: dalvik.system.CloseGuard get()>();

        r0.<android.os.ParcelFileDescriptor: dalvik.system.CloseGuard mGuard> = $r3;

        if r1 == null goto label2;

        r0.<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor mWrapped> = null;

        r0.<android.os.ParcelFileDescriptor: java.io.FileDescriptor mFd> = r1;

        staticinvoke <libcore.io.IoUtils: void setFdOwner(java.io.FileDescriptor,java.lang.Object)>(r1, r0);

        r0.<android.os.ParcelFileDescriptor: java.io.FileDescriptor mCommFd> = r2;

        if r2 == null goto label1;

        staticinvoke <libcore.io.IoUtils: void setFdOwner(java.io.FileDescriptor,java.lang.Object)>(r2, r0);

     label1:
        $r5 = r0.<android.os.ParcelFileDescriptor: dalvik.system.CloseGuard mGuard>;

        virtualinvoke $r5.<dalvik.system.CloseGuard: void open(java.lang.String)>("close");

        return;

     label2:
        $r4 = new java.lang.NullPointerException;

        specialinvoke $r4.<java.lang.NullPointerException: void <init>(java.lang.String)>("FileDescriptor must not be null");

        throw $r4;
    }

    static android.os.ParcelFileDescriptor$Status access$000(java.io.FileDescriptor, byte[])
    {
        java.io.FileDescriptor r0;
        byte[] r1;
        android.os.ParcelFileDescriptor$Status $r2;

        r0 := @parameter0: java.io.FileDescriptor;

        r1 := @parameter1: byte[];

        $r2 = staticinvoke <android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor$Status readCommStatus(java.io.FileDescriptor,byte[])>(r0, r1);

        return $r2;
    }

    public static android.os.ParcelFileDescriptor adoptFd(int)
    {
        int i0;
        java.io.FileDescriptor $r1;
        android.os.ParcelFileDescriptor $r2;

        i0 := @parameter0: int;

        $r1 = new java.io.FileDescriptor;

        specialinvoke $r1.<java.io.FileDescriptor: void <init>()>();

        virtualinvoke $r1.<java.io.FileDescriptor: void setInt$(int)>(i0);

        $r2 = new android.os.ParcelFileDescriptor;

        specialinvoke $r2.<android.os.ParcelFileDescriptor: void <init>(java.io.FileDescriptor)>($r1);

        return $r2;
    }

    private void closeWithStatus(int, java.lang.String)
    {
        android.os.ParcelFileDescriptor r0;
        int i0;
        java.lang.String r1;
        dalvik.system.CloseGuard r2;
        boolean $z0;
        java.io.FileDescriptor $r3;

        r0 := @this: android.os.ParcelFileDescriptor;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        $z0 = r0.<android.os.ParcelFileDescriptor: boolean mClosed>;

        if $z0 == 0 goto label1;

        return;

     label1:
        r0.<android.os.ParcelFileDescriptor: boolean mClosed> = 1;

        r2 = r0.<android.os.ParcelFileDescriptor: dalvik.system.CloseGuard mGuard>;

        if r2 == null goto label2;

        virtualinvoke r2.<dalvik.system.CloseGuard: void close()>();

     label2:
        specialinvoke r0.<android.os.ParcelFileDescriptor: void writeCommStatusAndClose(int,java.lang.String)>(i0, r1);

        $r3 = r0.<android.os.ParcelFileDescriptor: java.io.FileDescriptor mFd>;

        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.io.FileDescriptor)>($r3);

        virtualinvoke r0.<android.os.ParcelFileDescriptor: void releaseResources()>();

        return;
    }

    private static java.io.FileDescriptor[] createCommSocketPair() throws java.io.IOException
    {
        int $i0, $i1, $i2, $i3, $i4;
        java.io.FileDescriptor[] $r1;
        java.lang.Throwable $r2;
        java.io.IOException $r3;
        java.io.FileDescriptor r6, r7;
        android.system.ErrnoException r8;

     label1:
        r6 = new java.io.FileDescriptor;

        specialinvoke r6.<java.io.FileDescriptor: void <init>()>();

        r7 = new java.io.FileDescriptor;

        specialinvoke r7.<java.io.FileDescriptor: void <init>()>();

        $i1 = <android.system.OsConstants: int AF_UNIX>;

        $i2 = <android.system.OsConstants: int SOCK_SEQPACKET>;

        $i0 = <android.system.OsConstants: int SOCK_CLOEXEC>;

        $i3 = staticinvoke <android.os.ParcelFileDescriptor: int ifAtLeastQ(int)>($i0);

        $i4 = $i2 | $i3;

        staticinvoke <android.system.Os: void socketpair(int,int,int,java.io.FileDescriptor,java.io.FileDescriptor)>($i1, $i4, 0, r6, r7);

        staticinvoke <libcore.io.IoUtils: void setBlocking(java.io.FileDescriptor,boolean)>(r6, 0);

        staticinvoke <libcore.io.IoUtils: void setBlocking(java.io.FileDescriptor,boolean)>(r7, 0);

     label2:
        $r1 = newarray (java.io.FileDescriptor)[2];

        $r1[0] = r6;

        $r1[1] = r7;

        return $r1;

     label3:
        $r2 := @caughtexception;

        r8 = (android.system.ErrnoException) $r2;

        $r3 = virtualinvoke r8.<android.system.ErrnoException: java.io.IOException rethrowAsIOException()>();

        throw $r3;

        catch android.system.ErrnoException from label1 to label2 with label3;
    }

    public static android.os.ParcelFileDescriptor[] createPipe() throws java.io.IOException
    {
        int $i0, $i1;
        java.io.FileDescriptor $r0, $r2;
        android.os.ParcelFileDescriptor[] $r3;
        java.lang.Throwable $r4;
        java.io.IOException $r5;
        java.io.FileDescriptor[] r6;
        android.os.ParcelFileDescriptor r10, r11;
        android.system.ErrnoException r12;

     label1:
        $i0 = <android.system.OsConstants: int O_CLOEXEC>;

        $i1 = staticinvoke <android.os.ParcelFileDescriptor: int ifAtLeastQ(int)>($i0);

        r6 = staticinvoke <android.system.Os: java.io.FileDescriptor[] pipe2(int)>($i1);

        r10 = new android.os.ParcelFileDescriptor;

        $r0 = r6[0];

        specialinvoke r10.<android.os.ParcelFileDescriptor: void <init>(java.io.FileDescriptor)>($r0);

        r11 = new android.os.ParcelFileDescriptor;

        $r2 = r6[1];

        specialinvoke r11.<android.os.ParcelFileDescriptor: void <init>(java.io.FileDescriptor)>($r2);

     label2:
        $r3 = newarray (android.os.ParcelFileDescriptor)[2];

        $r3[0] = r10;

        $r3[1] = r11;

        return $r3;

     label3:
        $r4 := @caughtexception;

        r12 = (android.system.ErrnoException) $r4;

        $r5 = virtualinvoke r12.<android.system.ErrnoException: java.io.IOException rethrowAsIOException()>();

        throw $r5;

        catch android.system.ErrnoException from label1 to label2 with label3;
    }

    public static android.os.ParcelFileDescriptor[] createReliablePipe() throws java.io.IOException
    {
        java.io.FileDescriptor[] r0, r9;
        int $i0, $i1;
        java.io.FileDescriptor $r1, $r2, $r4, $r5;
        android.os.ParcelFileDescriptor[] $r6;
        java.lang.Throwable $r7;
        java.io.IOException $r8;
        android.os.ParcelFileDescriptor r13, r14;
        android.system.ErrnoException r15;

     label1:
        r9 = staticinvoke <android.os.ParcelFileDescriptor: java.io.FileDescriptor[] createCommSocketPair()>();

        $i0 = <android.system.OsConstants: int O_CLOEXEC>;

        $i1 = staticinvoke <android.os.ParcelFileDescriptor: int ifAtLeastQ(int)>($i0);

        r0 = staticinvoke <android.system.Os: java.io.FileDescriptor[] pipe2(int)>($i1);

        r13 = new android.os.ParcelFileDescriptor;

        $r2 = r0[0];

        $r1 = r9[0];

        specialinvoke r13.<android.os.ParcelFileDescriptor: void <init>(java.io.FileDescriptor,java.io.FileDescriptor)>($r2, $r1);

        r14 = new android.os.ParcelFileDescriptor;

        $r5 = r0[1];

        $r4 = r9[1];

        specialinvoke r14.<android.os.ParcelFileDescriptor: void <init>(java.io.FileDescriptor,java.io.FileDescriptor)>($r5, $r4);

     label2:
        $r6 = newarray (android.os.ParcelFileDescriptor)[2];

        $r6[0] = r13;

        $r6[1] = r14;

        return $r6;

     label3:
        $r7 := @caughtexception;

        r15 = (android.system.ErrnoException) $r7;

        $r8 = virtualinvoke r15.<android.system.ErrnoException: java.io.IOException rethrowAsIOException()>();

        throw $r8;

        catch android.system.ErrnoException from label1 to label2 with label3;
    }

    public static android.os.ParcelFileDescriptor[] createReliableSocketPair() throws java.io.IOException
    {
        int $i0;
        android.os.ParcelFileDescriptor[] $r0;

        $i0 = <android.system.OsConstants: int SOCK_STREAM>;

        $r0 = staticinvoke <android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor[] createReliableSocketPair(int)>($i0);

        return $r0;
    }

    public static android.os.ParcelFileDescriptor[] createReliableSocketPair(int) throws java.io.IOException
    {
        int i0, $i1, $i2, $i3, $i4;
        java.io.FileDescriptor $r2, $r4, r12, r13;
        android.os.ParcelFileDescriptor[] $r5;
        java.lang.Throwable $r6;
        java.io.IOException $r7;
        java.io.FileDescriptor[] r8;
        android.os.ParcelFileDescriptor r14, r15;
        android.system.ErrnoException r16;

        i0 := @parameter0: int;

     label1:
        r8 = staticinvoke <android.os.ParcelFileDescriptor: java.io.FileDescriptor[] createCommSocketPair()>();

        r12 = new java.io.FileDescriptor;

        specialinvoke r12.<java.io.FileDescriptor: void <init>()>();

        r13 = new java.io.FileDescriptor;

        specialinvoke r13.<java.io.FileDescriptor: void <init>()>();

        $i2 = <android.system.OsConstants: int AF_UNIX>;

        $i1 = <android.system.OsConstants: int SOCK_CLOEXEC>;

        $i3 = staticinvoke <android.os.ParcelFileDescriptor: int ifAtLeastQ(int)>($i1);

        $i4 = $i3 | i0;

        staticinvoke <android.system.Os: void socketpair(int,int,int,java.io.FileDescriptor,java.io.FileDescriptor)>($i2, $i4, 0, r12, r13);

        r14 = new android.os.ParcelFileDescriptor;

        $r2 = r8[0];

        specialinvoke r14.<android.os.ParcelFileDescriptor: void <init>(java.io.FileDescriptor,java.io.FileDescriptor)>(r12, $r2);

        r15 = new android.os.ParcelFileDescriptor;

        $r4 = r8[1];

        specialinvoke r15.<android.os.ParcelFileDescriptor: void <init>(java.io.FileDescriptor,java.io.FileDescriptor)>(r13, $r4);

     label2:
        $r5 = newarray (android.os.ParcelFileDescriptor)[2];

        $r5[0] = r14;

        $r5[1] = r15;

        return $r5;

     label3:
        $r6 := @caughtexception;

        r16 = (android.system.ErrnoException) $r6;

        $r7 = virtualinvoke r16.<android.system.ErrnoException: java.io.IOException rethrowAsIOException()>();

        throw $r7;

        catch android.system.ErrnoException from label1 to label2 with label3;
    }

    public static android.os.ParcelFileDescriptor[] createSocketPair() throws java.io.IOException
    {
        int $i0;
        android.os.ParcelFileDescriptor[] $r0;

        $i0 = <android.system.OsConstants: int SOCK_STREAM>;

        $r0 = staticinvoke <android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor[] createSocketPair(int)>($i0);

        return $r0;
    }

    public static android.os.ParcelFileDescriptor[] createSocketPair(int) throws java.io.IOException
    {
        int i0, $i1, $i2, $i3, $i4;
        android.os.ParcelFileDescriptor[] $r2;
        java.lang.Throwable $r3;
        java.io.IOException $r4;
        java.io.FileDescriptor r9, r10;
        android.os.ParcelFileDescriptor r11, r12;
        android.system.ErrnoException r13;

        i0 := @parameter0: int;

     label1:
        r9 = new java.io.FileDescriptor;

        specialinvoke r9.<java.io.FileDescriptor: void <init>()>();

        r10 = new java.io.FileDescriptor;

        specialinvoke r10.<java.io.FileDescriptor: void <init>()>();

        $i2 = <android.system.OsConstants: int AF_UNIX>;

        $i1 = <android.system.OsConstants: int SOCK_CLOEXEC>;

        $i3 = staticinvoke <android.os.ParcelFileDescriptor: int ifAtLeastQ(int)>($i1);

        $i4 = $i3 | i0;

        staticinvoke <android.system.Os: void socketpair(int,int,int,java.io.FileDescriptor,java.io.FileDescriptor)>($i2, $i4, 0, r9, r10);

        r11 = new android.os.ParcelFileDescriptor;

        specialinvoke r11.<android.os.ParcelFileDescriptor: void <init>(java.io.FileDescriptor)>(r9);

        r12 = new android.os.ParcelFileDescriptor;

        specialinvoke r12.<android.os.ParcelFileDescriptor: void <init>(java.io.FileDescriptor)>(r10);

     label2:
        $r2 = newarray (android.os.ParcelFileDescriptor)[2];

        $r2[0] = r11;

        $r2[1] = r12;

        return $r2;

     label3:
        $r3 := @caughtexception;

        r13 = (android.system.ErrnoException) $r3;

        $r4 = virtualinvoke r13.<android.system.ErrnoException: java.io.IOException rethrowAsIOException()>();

        throw $r4;

        catch android.system.ErrnoException from label1 to label2 with label3;
    }

    public static android.os.ParcelFileDescriptor dup(java.io.FileDescriptor) throws java.io.IOException
    {
        boolean $z0;
        int $i0, i1;
        java.lang.Throwable $r2;
        java.io.IOException $r3;
        java.io.FileDescriptor r4, r7;
        android.os.ParcelFileDescriptor r8;
        android.system.ErrnoException r9;

        r4 := @parameter0: java.io.FileDescriptor;

     label1:
        r7 = new java.io.FileDescriptor;

        specialinvoke r7.<java.io.FileDescriptor: void <init>()>();

        $z0 = staticinvoke <android.os.ParcelFileDescriptor: boolean isAtLeastQ()>();

        if $z0 == 0 goto label3;

        i1 = <android.system.OsConstants: int F_DUPFD_CLOEXEC>;

     label2:
        goto label4;

     label3:
        i1 = <android.system.OsConstants: int F_DUPFD>;

     label4:
        $i0 = staticinvoke <android.system.Os: int fcntlInt(java.io.FileDescriptor,int,int)>(r4, i1, 0);

        virtualinvoke r7.<java.io.FileDescriptor: void setInt$(int)>($i0);

        r8 = new android.os.ParcelFileDescriptor;

        specialinvoke r8.<android.os.ParcelFileDescriptor: void <init>(java.io.FileDescriptor)>(r7);

     label5:
        return r8;

     label6:
        $r2 := @caughtexception;

        r9 = (android.system.ErrnoException) $r2;

        $r3 = virtualinvoke r9.<android.system.ErrnoException: java.io.IOException rethrowAsIOException()>();

        throw $r3;

        catch android.system.ErrnoException from label1 to label2 with label6;
        catch android.system.ErrnoException from label3 to label4 with label6;
        catch android.system.ErrnoException from label4 to label5 with label6;
    }

    public static android.os.ParcelFileDescriptor fromData(byte[], java.lang.String) throws java.io.IOException
    {
        java.io.FileDescriptor r0;
        android.os.MemoryFile $r1;
        int $i0, $i1, $i2;
        java.lang.Throwable $r2;
        byte[] r3;
        java.lang.String r4;
        android.os.ParcelFileDescriptor r6;

        r3 := @parameter0: byte[];

        r4 := @parameter1: java.lang.String;

        if r3 != null goto label1;

        return null;

     label1:
        $r1 = new android.os.MemoryFile;

        $i0 = lengthof r3;

        specialinvoke $r1.<android.os.MemoryFile: void <init>(java.lang.String,int)>(r4, $i0);

     label2:
        $i1 = lengthof r3;

        if $i1 <= 0 goto label3;

        $i2 = lengthof r3;

        virtualinvoke $r1.<android.os.MemoryFile: void writeBytes(byte[],int,int,int)>(r3, 0, 0, $i2);

     label3:
        virtualinvoke $r1.<android.os.MemoryFile: void deactivate()>();

        r0 = virtualinvoke $r1.<android.os.MemoryFile: java.io.FileDescriptor getFileDescriptor()>();

     label4:
        r6 = null;

        if r0 == null goto label6;

     label5:
        r6 = staticinvoke <android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor dup(java.io.FileDescriptor)>(r0);

     label6:
        virtualinvoke $r1.<android.os.MemoryFile: void close()>();

        return r6;

     label7:
        $r2 := @caughtexception;

        virtualinvoke $r1.<android.os.MemoryFile: void close()>();

        throw $r2;

        catch java.lang.Throwable from label2 to label3 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
    }

    public static android.os.ParcelFileDescriptor fromDatagramSocket(java.net.DatagramSocket)
    {
        java.lang.Throwable $r0;
        java.net.DatagramSocket r2;
        java.io.FileDescriptor r3;
        android.os.ParcelFileDescriptor r4;
        java.io.UncheckedIOException r6;
        java.io.IOException r7;

        r2 := @parameter0: java.net.DatagramSocket;

        r3 = virtualinvoke r2.<java.net.DatagramSocket: java.io.FileDescriptor getFileDescriptor$()>();

        if r3 == null goto label4;

     label1:
        r4 = staticinvoke <android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor dup(java.io.FileDescriptor)>(r3);

     label2:
        goto label5;

     label3:
        $r0 := @caughtexception;

        r6 = new java.io.UncheckedIOException;

        r7 = (java.io.IOException) $r0;

        specialinvoke r6.<java.io.UncheckedIOException: void <init>(java.io.IOException)>(r7);

        throw r6;

     label4:
        r4 = null;

     label5:
        return r4;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public static android.os.ParcelFileDescriptor fromFd(int) throws java.io.IOException
    {
        boolean $z0;
        int $i0, i1, i2;
        java.lang.Throwable $r3;
        java.io.IOException $r4;
        java.io.FileDescriptor r8, r9;
        android.os.ParcelFileDescriptor r10;
        android.system.ErrnoException r11;

        i1 := @parameter0: int;

        r8 = new java.io.FileDescriptor;

        specialinvoke r8.<java.io.FileDescriptor: void <init>()>();

        virtualinvoke r8.<java.io.FileDescriptor: void setInt$(int)>(i1);

     label1:
        r9 = new java.io.FileDescriptor;

        specialinvoke r9.<java.io.FileDescriptor: void <init>()>();

        $z0 = staticinvoke <android.os.ParcelFileDescriptor: boolean isAtLeastQ()>();

        if $z0 == 0 goto label3;

        i2 = <android.system.OsConstants: int F_DUPFD_CLOEXEC>;

     label2:
        goto label4;

     label3:
        i2 = <android.system.OsConstants: int F_DUPFD>;

     label4:
        $i0 = staticinvoke <android.system.Os: int fcntlInt(java.io.FileDescriptor,int,int)>(r8, i2, 0);

        virtualinvoke r9.<java.io.FileDescriptor: void setInt$(int)>($i0);

        r10 = new android.os.ParcelFileDescriptor;

        specialinvoke r10.<android.os.ParcelFileDescriptor: void <init>(java.io.FileDescriptor)>(r9);

     label5:
        return r10;

     label6:
        $r3 := @caughtexception;

        r11 = (android.system.ErrnoException) $r3;

        $r4 = virtualinvoke r11.<android.system.ErrnoException: java.io.IOException rethrowAsIOException()>();

        throw $r4;

        catch android.system.ErrnoException from label1 to label2 with label6;
        catch android.system.ErrnoException from label3 to label4 with label6;
        catch android.system.ErrnoException from label4 to label5 with label6;
    }

    public static android.os.ParcelFileDescriptor fromFd(java.io.FileDescriptor, android.os.Handler, android.os.ParcelFileDescriptor$OnCloseListener) throws java.io.IOException
    {
        android.os.ParcelFileDescriptor$OnCloseListener r0;
        java.io.FileDescriptor[] r1;
        java.lang.IllegalArgumentException $r2, $r3;
        android.os.ParcelFileDescriptor $r4;
        java.io.FileDescriptor $r5, $r8, r9;
        android.os.Looper $r6;
        android.os.ParcelFileDescriptor$1 $r7;
        android.os.Handler r10;
        android.os.MessageQueue r12;

        r9 := @parameter0: java.io.FileDescriptor;

        r10 := @parameter1: android.os.Handler;

        r0 := @parameter2: android.os.ParcelFileDescriptor$OnCloseListener;

        if r10 == null goto label2;

        if r0 == null goto label1;

        r1 = staticinvoke <android.os.ParcelFileDescriptor: java.io.FileDescriptor[] createCommSocketPair()>();

        $r4 = new android.os.ParcelFileDescriptor;

        $r5 = r1[0];

        specialinvoke $r4.<android.os.ParcelFileDescriptor: void <init>(java.io.FileDescriptor,java.io.FileDescriptor)>(r9, $r5);

        $r6 = virtualinvoke r10.<android.os.Handler: android.os.Looper getLooper()>();

        r12 = virtualinvoke $r6.<android.os.Looper: android.os.MessageQueue getQueue()>();

        $r8 = r1[1];

        $r7 = new android.os.ParcelFileDescriptor$1;

        specialinvoke $r7.<android.os.ParcelFileDescriptor$1: void <init>(android.os.MessageQueue,android.os.ParcelFileDescriptor$OnCloseListener)>(r12, r0);

        virtualinvoke r12.<android.os.MessageQueue: void addOnFileDescriptorEventListener(java.io.FileDescriptor,int,android.os.MessageQueue$OnFileDescriptorEventListener)>($r8, 1, $r7);

        return $r4;

     label1:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Listener must not be null");

        throw $r3;

     label2:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Handler must not be null");

        throw $r2;
    }

    public static android.os.ParcelFileDescriptor fromSocket(java.net.Socket)
    {
        java.lang.Throwable $r0;
        java.net.Socket r2;
        java.io.FileDescriptor r3;
        android.os.ParcelFileDescriptor r4;
        java.io.UncheckedIOException r6;
        java.io.IOException r7;

        r2 := @parameter0: java.net.Socket;

        r3 = virtualinvoke r2.<java.net.Socket: java.io.FileDescriptor getFileDescriptor$()>();

        if r3 == null goto label4;

     label1:
        r4 = staticinvoke <android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor dup(java.io.FileDescriptor)>(r3);

     label2:
        goto label5;

     label3:
        $r0 := @caughtexception;

        r6 = new java.io.UncheckedIOException;

        r7 = (java.io.IOException) $r0;

        specialinvoke r6.<java.io.UncheckedIOException: void <init>(java.io.IOException)>(r7);

        throw r6;

     label4:
        r4 = null;

     label5:
        return r4;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public static java.io.File getFile(java.io.FileDescriptor) throws java.io.IOException
    {
        int $i0, $i1, $i2;
        java.lang.String $r3, $r9, r14;
        android.system.StructStat $r4, $r6;
        boolean $z0, $z1;
        java.lang.Throwable $r10;
        java.io.IOException $r11, r20;
        java.io.FileDescriptor r12;
        java.lang.StringBuilder r18, r19;
        java.io.File r21;
        android.system.ErrnoException r22;

        r12 := @parameter0: java.io.FileDescriptor;

     label1:
        r18 = new java.lang.StringBuilder;

        specialinvoke r18.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/proc/self/fd/");

        $i0 = virtualinvoke r12.<java.io.FileDescriptor: int getInt$()>();

        virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke r18.<java.lang.StringBuilder: java.lang.String toString()>();

        r14 = staticinvoke <android.system.Os: java.lang.String readlink(java.lang.String)>($r3);

        $r4 = staticinvoke <android.system.Os: android.system.StructStat stat(java.lang.String)>(r14);

        $i1 = $r4.<android.system.StructStat: int st_mode>;

        $z0 = staticinvoke <android.system.OsConstants: boolean S_ISREG(int)>($i1);

        if $z0 != 0 goto label4;

        $r6 = staticinvoke <android.system.Os: android.system.StructStat stat(java.lang.String)>(r14);

        $i2 = $r6.<android.system.StructStat: int st_mode>;

        $z1 = staticinvoke <android.system.OsConstants: boolean S_ISCHR(int)>($i2);

        if $z1 == 0 goto label3;

     label2:
        goto label4;

     label3:
        r20 = new java.io.IOException;

        r19 = new java.lang.StringBuilder;

        specialinvoke r19.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not a regular file or character device: ");

        virtualinvoke r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r14);

        $r9 = virtualinvoke r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r20.<java.io.IOException: void <init>(java.lang.String)>($r9);

        throw r20;

     label4:
        r21 = new java.io.File;

        specialinvoke r21.<java.io.File: void <init>(java.lang.String)>(r14);

     label5:
        return r21;

     label6:
        $r10 := @caughtexception;

        r22 = (android.system.ErrnoException) $r10;

        $r11 = virtualinvoke r22.<android.system.ErrnoException: java.io.IOException rethrowAsIOException()>();

        throw $r11;

        catch android.system.ErrnoException from label1 to label2 with label6;
        catch android.system.ErrnoException from label3 to label4 with label6;
        catch android.system.ErrnoException from label4 to label5 with label6;
    }

    private byte[] getOrCreateStatusBuffer()
    {
        android.os.ParcelFileDescriptor r0;
        byte[] $r1, $r2, $r3;

        r0 := @this: android.os.ParcelFileDescriptor;

        $r1 = r0.<android.os.ParcelFileDescriptor: byte[] mStatusBuf>;

        if $r1 != null goto label1;

        $r3 = newarray (byte)[1024];

        r0.<android.os.ParcelFileDescriptor: byte[] mStatusBuf> = $r3;

     label1:
        $r2 = r0.<android.os.ParcelFileDescriptor: byte[] mStatusBuf>;

        return $r2;
    }

    private static int ifAtLeastQ(int)
    {
        boolean $z0;
        int i0;

        i0 := @parameter0: int;

        $z0 = staticinvoke <android.os.ParcelFileDescriptor: boolean isAtLeastQ()>();

        if $z0 == 0 goto label1;

        goto label2;

     label1:
        i0 = 0;

     label2:
        return i0;
    }

    private static boolean isAtLeastQ()
    {
        dalvik.system.VMRuntime $r0;
        int $i0;
        boolean z0;

        $r0 = staticinvoke <dalvik.system.VMRuntime: dalvik.system.VMRuntime getRuntime()>();

        $i0 = virtualinvoke $r0.<dalvik.system.VMRuntime: int getTargetSdkVersion()>();

        if $i0 < 29 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public static android.os.ParcelFileDescriptor open(java.io.File, int) throws java.io.FileNotFoundException
    {
        int i0;
        android.os.ParcelFileDescriptor $r0;
        java.io.File r1;
        java.io.FileDescriptor r2;

        r1 := @parameter0: java.io.File;

        i0 := @parameter1: int;

        r2 = staticinvoke <android.os.ParcelFileDescriptor: java.io.FileDescriptor openInternal(java.io.File,int)>(r1, i0);

        if r2 != null goto label1;

        return null;

     label1:
        $r0 = new android.os.ParcelFileDescriptor;

        specialinvoke $r0.<android.os.ParcelFileDescriptor: void <init>(java.io.FileDescriptor)>(r2);

        return $r0;
    }

    public static android.os.ParcelFileDescriptor open(java.io.File, int, android.os.Handler, android.os.ParcelFileDescriptor$OnCloseListener) throws java.io.IOException
    {
        int i0;
        android.os.Handler r0;
        android.os.ParcelFileDescriptor$OnCloseListener r1;
        java.lang.IllegalArgumentException $r2, $r3;
        android.os.ParcelFileDescriptor $r4;
        java.io.File r5;
        java.io.FileDescriptor r6;

        r5 := @parameter0: java.io.File;

        i0 := @parameter1: int;

        r0 := @parameter2: android.os.Handler;

        r1 := @parameter3: android.os.ParcelFileDescriptor$OnCloseListener;

        if r0 == null goto label3;

        if r1 == null goto label2;

        r6 = staticinvoke <android.os.ParcelFileDescriptor: java.io.FileDescriptor openInternal(java.io.File,int)>(r5, i0);

        if r6 != null goto label1;

        return null;

     label1:
        $r4 = staticinvoke <android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor fromFd(java.io.FileDescriptor,android.os.Handler,android.os.ParcelFileDescriptor$OnCloseListener)>(r6, r0, r1);

        return $r4;

     label2:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Listener must not be null");

        throw $r3;

     label3:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Handler must not be null");

        throw $r2;
    }

    private static java.io.FileDescriptor openInternal(java.io.File, int) throws java.io.FileNotFoundException
    {
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i11, i12, i13;
        java.lang.Throwable $r0;
        java.lang.String $r2, r4;
        java.io.File r3;
        java.io.FileDescriptor r5;
        java.io.FileNotFoundException r7;
        android.system.ErrnoException r8;

        r3 := @parameter0: java.io.File;

        i0 := @parameter1: int;

        i1 = staticinvoke <android.os.FileUtils: int translateModePfdToPosix(int)>(i0);

        $i3 = <android.system.OsConstants: int O_CLOEXEC>;

        i2 = staticinvoke <android.os.ParcelFileDescriptor: int ifAtLeastQ(int)>($i3);

        $i5 = <android.system.OsConstants: int S_IRWXU>;

        $i4 = <android.system.OsConstants: int S_IRWXG>;

        i11 = $i5 | $i4;

        i12 = i11;

        $i6 = i0 & 1;

        if $i6 == 0 goto label1;

        $i10 = <android.system.OsConstants: int S_IROTH>;

        i12 = i11 | $i10;

     label1:
        i13 = i12;

        $i7 = i0 & 2;

        if $i7 == 0 goto label2;

        $i9 = <android.system.OsConstants: int S_IWOTH>;

        i13 = i12 | $i9;

     label2:
        r4 = virtualinvoke r3.<java.io.File: java.lang.String getPath()>();

     label3:
        $i8 = i1 | i2;

        r5 = staticinvoke <android.system.Os: java.io.FileDescriptor open(java.lang.String,int,int)>(r4, $i8, i13);

     label4:
        return r5;

     label5:
        $r0 := @caughtexception;

        r7 = new java.io.FileNotFoundException;

        r8 = (android.system.ErrnoException) $r0;

        $r2 = virtualinvoke r8.<android.system.ErrnoException: java.lang.String getMessage()>();

        specialinvoke r7.<java.io.FileNotFoundException: void <init>(java.lang.String)>($r2);

        throw r7;

        catch android.system.ErrnoException from label3 to label4 with label5;
    }

    public static int parseMode(java.lang.String)
    {
        java.lang.String r0;
        int $i0, $i1;

        r0 := @parameter0: java.lang.String;

        $i0 = staticinvoke <android.os.FileUtils: int translateModeStringToPosix(java.lang.String)>(r0);

        $i1 = staticinvoke <android.os.FileUtils: int translateModePosixToPfd(int)>($i0);

        return $i1;
    }

    private static android.os.ParcelFileDescriptor$Status readCommStatus(java.io.FileDescriptor, byte[])
    {
        int i0, i1, $i2, $i3, $i4, $i5;
        java.nio.ByteOrder $r0;
        java.lang.Throwable $r4, $r10;
        java.lang.String $r8, $r14, r25;
        java.io.FileDescriptor r16;
        byte[] r17;
        android.os.ParcelFileDescriptor$Status r24, r26, r27, r29, r31;
        java.lang.StringBuilder r28, r30;
        android.system.ErrnoException r32;

        r16 := @parameter0: java.io.FileDescriptor;

        r17 := @parameter1: byte[];

     label01:
        $i2 = lengthof r17;

        i0 = staticinvoke <android.system.Os: int read(java.io.FileDescriptor,byte[],int,int)>(r16, r17, 0, $i2);

     label02:
        if i0 != 0 goto label04;

     label03:
        r24 = new android.os.ParcelFileDescriptor$Status;

        specialinvoke r24.<android.os.ParcelFileDescriptor$Status: void <init>(int)>(-2);

        return r24;

     label04:
        $r0 = <java.nio.ByteOrder: java.nio.ByteOrder BIG_ENDIAN>;

        i1 = staticinvoke <libcore.io.Memory: int peekInt(byte[],int,java.nio.ByteOrder)>(r17, 0, $r0);

     label05:
        if i1 != 1 goto label07;

     label06:
        r25 = new java.lang.String;

        $i3 = i0 - 4;

        specialinvoke r25.<java.lang.String: void <init>(byte[],int,int)>(r17, 4, $i3);

        r26 = new android.os.ParcelFileDescriptor$Status;

        specialinvoke r26.<android.os.ParcelFileDescriptor$Status: void <init>(int,java.lang.String)>(i1, r25);

        return r26;

     label07:
        r27 = new android.os.ParcelFileDescriptor$Status;

        specialinvoke r27.<android.os.ParcelFileDescriptor$Status: void <init>(int)>(i1);

     label08:
        return r27;

     label09:
        $r10 := @caughtexception;

        r28 = new java.lang.StringBuilder;

        specialinvoke r28.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to read status; assuming dead: ");

        virtualinvoke r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10);

        $r14 = virtualinvoke r28.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ParcelFileDescriptor", $r14);

        r29 = new android.os.ParcelFileDescriptor$Status;

        specialinvoke r29.<android.os.ParcelFileDescriptor$Status: void <init>(int)>(-2);

        return r29;

     label10:
        $r4 := @caughtexception;

        r32 = (android.system.ErrnoException) $r4;

        $i5 = r32.<android.system.ErrnoException: int errno>;

        $i4 = <android.system.OsConstants: int EAGAIN>;

        if $i5 != $i4 goto label11;

        return null;

     label11:
        r30 = new java.lang.StringBuilder;

        specialinvoke r30.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to read status; assuming dead: ");

        virtualinvoke r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r8 = virtualinvoke r30.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ParcelFileDescriptor", $r8);

        r31 = new android.os.ParcelFileDescriptor$Status;

        specialinvoke r31.<android.os.ParcelFileDescriptor$Status: void <init>(int)>(-2);

        return r31;

        catch android.system.ErrnoException from label01 to label02 with label10;
        catch java.io.InterruptedIOException from label01 to label02 with label09;
        catch android.system.ErrnoException from label03 to label04 with label10;
        catch java.io.InterruptedIOException from label03 to label04 with label09;
        catch android.system.ErrnoException from label04 to label05 with label10;
        catch java.io.InterruptedIOException from label04 to label05 with label09;
        catch android.system.ErrnoException from label06 to label07 with label10;
        catch java.io.InterruptedIOException from label06 to label07 with label09;
        catch android.system.ErrnoException from label07 to label08 with label10;
        catch java.io.InterruptedIOException from label07 to label08 with label09;
    }

    public static android.os.ParcelFileDescriptor wrap(android.os.ParcelFileDescriptor, android.os.Handler, android.os.ParcelFileDescriptor$OnCloseListener) throws java.io.IOException
    {
        android.os.ParcelFileDescriptor r0, $r5;
        android.os.Handler r1;
        android.os.ParcelFileDescriptor$OnCloseListener r2;
        java.io.FileDescriptor $r4;
        int $i0;

        r0 := @parameter0: android.os.ParcelFileDescriptor;

        r1 := @parameter1: android.os.Handler;

        r2 := @parameter2: android.os.ParcelFileDescriptor$OnCloseListener;

        $r4 = new java.io.FileDescriptor;

        specialinvoke $r4.<java.io.FileDescriptor: void <init>()>();

        $i0 = virtualinvoke r0.<android.os.ParcelFileDescriptor: int detachFd()>();

        virtualinvoke $r4.<java.io.FileDescriptor: void setInt$(int)>($i0);

        $r5 = staticinvoke <android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor fromFd(java.io.FileDescriptor,android.os.Handler,android.os.ParcelFileDescriptor$OnCloseListener)>($r4, r1, r2);

        return $r5;
    }

    private void writeCommStatusAndClose(int, java.lang.String)
    {
        android.os.ParcelFileDescriptor r0;
        int i0, $i2, $i3, $i4, i9, i10, i11;
        java.io.FileDescriptor $r1, $r2, $r5, $r6, $r7, $r17, $r31;
        byte[] $r3, r25, r26;
        java.nio.ByteOrder $r4;
        java.lang.StringBuilder $r8, r28, r30;
        java.lang.String $r11, $r15, $r21, r22;
        java.lang.Throwable $r12, $r16, $r18;
        android.os.ParcelFileDescriptor$Status r24;

        r0 := @this: android.os.ParcelFileDescriptor;

        i9 := @parameter0: int;

        r22 := @parameter1: java.lang.String;

        $r1 = r0.<android.os.ParcelFileDescriptor: java.io.FileDescriptor mCommFd>;

        if $r1 != null goto label02;

        if r22 == null goto label01;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to inform peer: ");

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r22);

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ParcelFileDescriptor", $r11);

     label01:
        return;

     label02:
        if i9 != 2 goto label03;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ParcelFileDescriptor", "Peer expected signal when closed; unable to deliver after detach");

     label03:
        if i9 != -1 goto label04;

        $r7 = r0.<android.os.ParcelFileDescriptor: java.io.FileDescriptor mCommFd>;

        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.io.FileDescriptor)>($r7);

        r0.<android.os.ParcelFileDescriptor: java.io.FileDescriptor mCommFd> = null;

        return;

     label04:
        $r2 = r0.<android.os.ParcelFileDescriptor: java.io.FileDescriptor mCommFd>;

        $r3 = specialinvoke r0.<android.os.ParcelFileDescriptor: byte[] getOrCreateStatusBuffer()>();

        r24 = staticinvoke <android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor$Status readCommStatus(java.io.FileDescriptor,byte[])>($r2, $r3);

        r0.<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor$Status mStatus> = r24;

     label05:
        if r24 == null goto label06;

        $r6 = r0.<android.os.ParcelFileDescriptor: java.io.FileDescriptor mCommFd>;

        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.io.FileDescriptor)>($r6);

        r0.<android.os.ParcelFileDescriptor: java.io.FileDescriptor mCommFd> = null;

        return;

     label06:
        r25 = specialinvoke r0.<android.os.ParcelFileDescriptor: byte[] getOrCreateStatusBuffer()>();

        $r4 = <java.nio.ByteOrder: java.nio.ByteOrder BIG_ENDIAN>;

        staticinvoke <libcore.io.Memory: void pokeInt(byte[],int,int,java.nio.ByteOrder)>(r25, 0, i9, $r4);

     label07:
        i0 = 0 + 4;

        i10 = i0;

        if r22 == null goto label10;

     label08:
        r26 = virtualinvoke r22.<java.lang.String: byte[] getBytes()>();

        $i4 = lengthof r26;

        $i2 = lengthof r25;

        $i3 = $i2 - i0;

        i11 = staticinvoke <java.lang.Math: int min(int,int)>($i4, $i3);

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r26, 0, r25, i0, i11);

     label09:
        i10 = i0 + i11;

     label10:
        $r5 = r0.<android.os.ParcelFileDescriptor: java.io.FileDescriptor mCommFd>;

        staticinvoke <android.system.Os: int write(java.io.FileDescriptor,byte[],int,int)>($r5, r25, 0, i10);

     label11:
        goto label17;

     label12:
        $r12 := @caughtexception;

     label13:
        r28 = new java.lang.StringBuilder;

        specialinvoke r28.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to report status: ");

        virtualinvoke r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r12);

        $r15 = virtualinvoke r28.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ParcelFileDescriptor", $r15);

     label14:
        goto label17;

     label15:
        $r18 := @caughtexception;

     label16:
        r30 = new java.lang.StringBuilder;

        specialinvoke r30.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to report status: ");

        virtualinvoke r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r18);

        $r21 = virtualinvoke r30.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ParcelFileDescriptor", $r21);

     label17:
        $r31 = r0.<android.os.ParcelFileDescriptor: java.io.FileDescriptor mCommFd>;

        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.io.FileDescriptor)>($r31);

        r0.<android.os.ParcelFileDescriptor: java.io.FileDescriptor mCommFd> = null;

        return;

     label18:
        $r16 := @caughtexception;

        $r17 = r0.<android.os.ParcelFileDescriptor: java.io.FileDescriptor mCommFd>;

        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.io.FileDescriptor)>($r17);

        r0.<android.os.ParcelFileDescriptor: java.io.FileDescriptor mCommFd> = null;

        throw $r16;

        catch java.lang.Throwable from label04 to label05 with label18;
        catch android.system.ErrnoException from label06 to label07 with label15;
        catch java.io.InterruptedIOException from label06 to label07 with label12;
        catch java.lang.Throwable from label06 to label07 with label18;
        catch android.system.ErrnoException from label08 to label09 with label15;
        catch java.io.InterruptedIOException from label08 to label09 with label12;
        catch java.lang.Throwable from label08 to label09 with label18;
        catch android.system.ErrnoException from label10 to label11 with label15;
        catch java.io.InterruptedIOException from label10 to label11 with label12;
        catch java.lang.Throwable from label10 to label11 with label18;
        catch java.lang.Throwable from label13 to label14 with label18;
        catch java.lang.Throwable from label16 to label17 with label18;
    }

    public boolean canDetectErrors()
    {
        android.os.ParcelFileDescriptor r0, r1;
        java.io.FileDescriptor $r2;
        boolean $z0, z1;

        r0 := @this: android.os.ParcelFileDescriptor;

        r1 = r0.<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor mWrapped>;

        if r1 == null goto label1;

        $z0 = virtualinvoke r1.<android.os.ParcelFileDescriptor: boolean canDetectErrors()>();

        return $z0;

     label1:
        $r2 = r0.<android.os.ParcelFileDescriptor: java.io.FileDescriptor mCommFd>;

        if $r2 == null goto label2;

        z1 = 1;

        goto label3;

     label2:
        z1 = 0;

     label3:
        return z1;
    }

    public void checkError() throws java.io.IOException
    {
        android.os.ParcelFileDescriptor r0, r6;
        android.os.ParcelFileDescriptor$Status $r1, $r2, $r5, r8;
        int $i0;
        java.io.IOException $r3;
        byte[] $r4;
        java.io.FileDescriptor r7;

        r0 := @this: android.os.ParcelFileDescriptor;

        r6 = r0.<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor mWrapped>;

        if r6 == null goto label1;

        virtualinvoke r6.<android.os.ParcelFileDescriptor: void checkError()>();

        return;

     label1:
        $r1 = r0.<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor$Status mStatus>;

        if $r1 != null goto label3;

        r7 = r0.<android.os.ParcelFileDescriptor: java.io.FileDescriptor mCommFd>;

        if r7 != null goto label2;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ParcelFileDescriptor", "Peer didn\'t provide a comm channel; unable to check for errors");

        return;

     label2:
        $r4 = specialinvoke r0.<android.os.ParcelFileDescriptor: byte[] getOrCreateStatusBuffer()>();

        $r5 = staticinvoke <android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor$Status readCommStatus(java.io.FileDescriptor,byte[])>(r7, $r4);

        r0.<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor$Status mStatus> = $r5;

     label3:
        r8 = r0.<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor$Status mStatus>;

        if r8 == null goto label5;

        $i0 = r8.<android.os.ParcelFileDescriptor$Status: int status>;

        if $i0 != 0 goto label4;

        goto label5;

     label4:
        $r2 = r0.<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor$Status mStatus>;

        $r3 = virtualinvoke $r2.<android.os.ParcelFileDescriptor$Status: java.io.IOException asIOException()>();

        throw $r3;

     label5:
        return;
    }

    public void close() throws java.io.IOException
    {
        android.os.ParcelFileDescriptor r0, r2;
        java.lang.Throwable $r1;

        r0 := @this: android.os.ParcelFileDescriptor;

        r2 = r0.<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor mWrapped>;

        if r2 == null goto label4;

     label1:
        virtualinvoke r2.<android.os.ParcelFileDescriptor: void close()>();

     label2:
        virtualinvoke r0.<android.os.ParcelFileDescriptor: void releaseResources()>();

        goto label5;

     label3:
        $r1 := @caughtexception;

        virtualinvoke r0.<android.os.ParcelFileDescriptor: void releaseResources()>();

        throw $r1;

     label4:
        specialinvoke r0.<android.os.ParcelFileDescriptor: void closeWithStatus(int,java.lang.String)>(0, null);

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void closeWithError(java.lang.String) throws java.io.IOException
    {
        android.os.ParcelFileDescriptor r0, r1;
        java.lang.IllegalArgumentException $r2;
        java.lang.Throwable $r3;
        java.lang.String r4;

        r0 := @this: android.os.ParcelFileDescriptor;

        r4 := @parameter0: java.lang.String;

        r1 = r0.<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor mWrapped>;

        if r1 == null goto label4;

     label1:
        virtualinvoke r1.<android.os.ParcelFileDescriptor: void closeWithError(java.lang.String)>(r4);

     label2:
        virtualinvoke r0.<android.os.ParcelFileDescriptor: void releaseResources()>();

        goto label5;

     label3:
        $r3 := @caughtexception;

        virtualinvoke r0.<android.os.ParcelFileDescriptor: void releaseResources()>();

        throw $r3;

     label4:
        if r4 == null goto label6;

        specialinvoke r0.<android.os.ParcelFileDescriptor: void closeWithStatus(int,java.lang.String)>(1, r4);

     label5:
        return;

     label6:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Message must not be null");

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public int describeContents()
    {
        android.os.ParcelFileDescriptor r0, r1;
        int $i0;

        r0 := @this: android.os.ParcelFileDescriptor;

        r1 = r0.<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor mWrapped>;

        if r1 == null goto label1;

        $i0 = virtualinvoke r1.<android.os.ParcelFileDescriptor: int describeContents()>();

        return $i0;

     label1:
        return 1;
    }

    public int detachFd()
    {
        android.os.ParcelFileDescriptor r0, r1;
        int i0, $i1;
        boolean $z0;
        java.lang.IllegalStateException $r2;
        java.io.FileDescriptor $r3;
        dalvik.system.CloseGuard $r4;

        r0 := @this: android.os.ParcelFileDescriptor;

        r1 = r0.<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor mWrapped>;

        if r1 == null goto label1;

        $i1 = virtualinvoke r1.<android.os.ParcelFileDescriptor: int detachFd()>();

        return $i1;

     label1:
        $z0 = r0.<android.os.ParcelFileDescriptor: boolean mClosed>;

        if $z0 != 0 goto label2;

        $r3 = r0.<android.os.ParcelFileDescriptor: java.io.FileDescriptor mFd>;

        i0 = staticinvoke <libcore.io.IoUtils: int acquireRawFd(java.io.FileDescriptor)>($r3);

        specialinvoke r0.<android.os.ParcelFileDescriptor: void writeCommStatusAndClose(int,java.lang.String)>(2, null);

        r0.<android.os.ParcelFileDescriptor: boolean mClosed> = 1;

        $r4 = r0.<android.os.ParcelFileDescriptor: dalvik.system.CloseGuard mGuard>;

        virtualinvoke $r4.<dalvik.system.CloseGuard: void close()>();

        virtualinvoke r0.<android.os.ParcelFileDescriptor: void releaseResources()>();

        return i0;

     label2:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Already closed");

        throw $r2;
    }

    public android.os.ParcelFileDescriptor dup() throws java.io.IOException
    {
        android.os.ParcelFileDescriptor r0, r1, $r3, $r4;
        java.io.FileDescriptor $r2;

        r0 := @this: android.os.ParcelFileDescriptor;

        r1 = r0.<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor mWrapped>;

        if r1 == null goto label1;

        $r4 = virtualinvoke r1.<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor dup()>();

        return $r4;

     label1:
        $r2 = virtualinvoke r0.<android.os.ParcelFileDescriptor: java.io.FileDescriptor getFileDescriptor()>();

        $r3 = staticinvoke <android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor dup(java.io.FileDescriptor)>($r2);

        return $r3;
    }

    protected void finalize() throws java.lang.Throwable
    {
        android.os.ParcelFileDescriptor r0, $r1;
        boolean $z0;
        java.lang.Throwable $r2;
        dalvik.system.CloseGuard r3;

        r0 := @this: android.os.ParcelFileDescriptor;

        $r1 = r0.<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor mWrapped>;

        if $r1 == null goto label1;

        virtualinvoke r0.<android.os.ParcelFileDescriptor: void releaseResources()>();

     label1:
        r3 = r0.<android.os.ParcelFileDescriptor: dalvik.system.CloseGuard mGuard>;

        if r3 == null goto label2;

        virtualinvoke r3.<dalvik.system.CloseGuard: void warnIfOpen()>();

     label2:
        $z0 = r0.<android.os.ParcelFileDescriptor: boolean mClosed>;

        if $z0 != 0 goto label3;

        specialinvoke r0.<android.os.ParcelFileDescriptor: void closeWithStatus(int,java.lang.String)>(3, null);

     label3:
        specialinvoke r0.<java.lang.Object: void finalize()>();

        return;

     label4:
        $r2 := @caughtexception;

        specialinvoke r0.<java.lang.Object: void finalize()>();

        throw $r2;

        catch java.lang.Throwable from label2 to label3 with label4;
    }

    public int getFd()
    {
        android.os.ParcelFileDescriptor r0, r1;
        boolean $z0;
        java.lang.IllegalStateException $r2;
        java.io.FileDescriptor $r3;
        int $i0, $i1;

        r0 := @this: android.os.ParcelFileDescriptor;

        r1 = r0.<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor mWrapped>;

        if r1 == null goto label1;

        $i1 = virtualinvoke r1.<android.os.ParcelFileDescriptor: int getFd()>();

        return $i1;

     label1:
        $z0 = r0.<android.os.ParcelFileDescriptor: boolean mClosed>;

        if $z0 != 0 goto label2;

        $r3 = r0.<android.os.ParcelFileDescriptor: java.io.FileDescriptor mFd>;

        $i0 = virtualinvoke $r3.<java.io.FileDescriptor: int getInt$()>();

        return $i0;

     label2:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Already closed");

        throw $r2;
    }

    public java.io.FileDescriptor getFileDescriptor()
    {
        android.os.ParcelFileDescriptor r0, r1;
        java.io.FileDescriptor $r2, $r3;

        r0 := @this: android.os.ParcelFileDescriptor;

        r1 = r0.<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor mWrapped>;

        if r1 == null goto label1;

        $r3 = virtualinvoke r1.<android.os.ParcelFileDescriptor: java.io.FileDescriptor getFileDescriptor()>();

        return $r3;

     label1:
        $r2 = r0.<android.os.ParcelFileDescriptor: java.io.FileDescriptor mFd>;

        return $r2;
    }

    public long getStatSize()
    {
        android.os.ParcelFileDescriptor r0, r8;
        long l0, $l3;
        java.io.FileDescriptor $r2;
        int $i1, $i2;
        boolean $z0, $z1;
        java.lang.Throwable $r3;
        java.lang.StringBuilder $r4;
        java.lang.String $r7;
        android.system.StructStat r9;

        r0 := @this: android.os.ParcelFileDescriptor;

        r8 = r0.<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor mWrapped>;

        if r8 == null goto label1;

        $l3 = virtualinvoke r8.<android.os.ParcelFileDescriptor: long getStatSize()>();

        return $l3;

     label1:
        $r2 = r0.<android.os.ParcelFileDescriptor: java.io.FileDescriptor mFd>;

        r9 = staticinvoke <android.system.Os: android.system.StructStat fstat(java.io.FileDescriptor)>($r2);

        $i1 = r9.<android.system.StructStat: int st_mode>;

        $z0 = staticinvoke <android.system.OsConstants: boolean S_ISREG(int)>($i1);

        if $z0 != 0 goto label4;

        $i2 = r9.<android.system.StructStat: int st_mode>;

        $z1 = staticinvoke <android.system.OsConstants: boolean S_ISLNK(int)>($i2);

        if $z1 == 0 goto label3;

     label2:
        goto label4;

     label3:
        return -1L;

     label4:
        l0 = r9.<android.system.StructStat: long st_size>;

     label5:
        return l0;

     label6:
        $r3 := @caughtexception;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("fstat() failed: ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ParcelFileDescriptor", $r7);

        return -1L;

        catch android.system.ErrnoException from label1 to label2 with label6;
        catch android.system.ErrnoException from label4 to label5 with label6;
    }

    public void releaseResources()
    {
        android.os.ParcelFileDescriptor r0;

        r0 := @this: android.os.ParcelFileDescriptor;

        return;
    }

    public long seekTo(long) throws java.io.IOException
    {
        android.os.ParcelFileDescriptor r0, r4;
        int $i0;
        java.io.FileDescriptor $r1;
        long $l1, l2, l3;
        java.lang.Throwable $r2;
        java.io.IOException $r3;
        android.system.ErrnoException r6;

        r0 := @this: android.os.ParcelFileDescriptor;

        l2 := @parameter0: long;

        r4 = r0.<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor mWrapped>;

        if r4 == null goto label1;

        $l1 = virtualinvoke r4.<android.os.ParcelFileDescriptor: long seekTo(long)>(l2);

        return $l1;

     label1:
        $r1 = r0.<android.os.ParcelFileDescriptor: java.io.FileDescriptor mFd>;

        $i0 = <android.system.OsConstants: int SEEK_SET>;

        l3 = staticinvoke <android.system.Os: long lseek(java.io.FileDescriptor,long,int)>($r1, l2, $i0);

     label2:
        return l3;

     label3:
        $r2 := @caughtexception;

        r6 = (android.system.ErrnoException) $r2;

        $r3 = virtualinvoke r6.<android.system.ErrnoException: java.io.IOException rethrowAsIOException()>();

        throw $r3;

        catch android.system.ErrnoException from label1 to label2 with label3;
    }

    public java.lang.String toString()
    {
        android.os.ParcelFileDescriptor r0, r8;
        java.lang.StringBuilder $r1;
        java.io.FileDescriptor $r3;
        java.lang.String $r6, $r7;

        r0 := @this: android.os.ParcelFileDescriptor;

        r8 = r0.<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor mWrapped>;

        if r8 == null goto label1;

        $r7 = virtualinvoke r8.<android.os.ParcelFileDescriptor: java.lang.String toString()>();

        return $r7;

     label1:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("{ParcelFileDescriptor: ");

        $r3 = r0.<android.os.ParcelFileDescriptor: java.io.FileDescriptor mFd>;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r6 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.os.ParcelFileDescriptor r0, r1;
        int i0, $i1;
        java.io.FileDescriptor $r2, $r3, $r4, $r5;
        boolean $z0;
        java.lang.Throwable $r6;
        android.os.Parcel r7;

        r0 := @this: android.os.ParcelFileDescriptor;

        r7 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        r1 = r0.<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor mWrapped>;

        if r1 == null goto label4;

     label1:
        virtualinvoke r1.<android.os.ParcelFileDescriptor: void writeToParcel(android.os.Parcel,int)>(r7, i0);

     label2:
        virtualinvoke r0.<android.os.ParcelFileDescriptor: void releaseResources()>();

        goto label7;

     label3:
        $r6 := @caughtexception;

        virtualinvoke r0.<android.os.ParcelFileDescriptor: void releaseResources()>();

        throw $r6;

     label4:
        $r2 = r0.<android.os.ParcelFileDescriptor: java.io.FileDescriptor mCommFd>;

        if $r2 == null goto label5;

        virtualinvoke r7.<android.os.Parcel: void writeInt(int)>(1);

        $r4 = r0.<android.os.ParcelFileDescriptor: java.io.FileDescriptor mFd>;

        virtualinvoke r7.<android.os.Parcel: void writeFileDescriptor(java.io.FileDescriptor)>($r4);

        $r5 = r0.<android.os.ParcelFileDescriptor: java.io.FileDescriptor mCommFd>;

        virtualinvoke r7.<android.os.Parcel: void writeFileDescriptor(java.io.FileDescriptor)>($r5);

        goto label6;

     label5:
        virtualinvoke r7.<android.os.Parcel: void writeInt(int)>(0);

        $r3 = r0.<android.os.ParcelFileDescriptor: java.io.FileDescriptor mFd>;

        virtualinvoke r7.<android.os.Parcel: void writeFileDescriptor(java.io.FileDescriptor)>($r3);

     label6:
        $i1 = i0 & 1;

        if $i1 == 0 goto label7;

        $z0 = r0.<android.os.ParcelFileDescriptor: boolean mClosed>;

        if $z0 != 0 goto label7;

        specialinvoke r0.<android.os.ParcelFileDescriptor: void closeWithStatus(int,java.lang.String)>(-1, null);

     label7:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
}
