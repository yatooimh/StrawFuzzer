public final class android.os.ParcelableException extends java.lang.RuntimeException implements android.os.Parcelable
{
    public static final android.os.Parcelable$Creator CREATOR;

    static void <clinit>()
    {
        android.os.ParcelableException$1 $r0;

        $r0 = new android.os.ParcelableException$1;

        specialinvoke $r0.<android.os.ParcelableException$1: void <init>()>();

        <android.os.ParcelableException: android.os.Parcelable$Creator CREATOR> = $r0;

        return;
    }

    public void <init>(java.lang.Throwable)
    {
        android.os.ParcelableException r0;
        java.lang.Throwable r1;

        r0 := @this: android.os.ParcelableException;

        r1 := @parameter0: java.lang.Throwable;

        specialinvoke r0.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r1);

        return;
    }

    public static java.lang.Throwable readFromParcel(android.os.Parcel)
    {
        java.lang.String r0, $r9, r16;
        java.lang.Class $r1, $r3, r17;
        java.lang.ClassLoader $r2;
        boolean $z0;
        java.lang.StringBuilder $r4;
        java.lang.RuntimeException $r8;
        java.lang.Class[] $r10;
        java.lang.reflect.Constructor $r11;
        java.lang.Object[] $r12;
        java.lang.Object $r13;
        java.lang.Throwable $r14, r18;
        android.os.Parcel r15;

        r15 := @parameter0: android.os.Parcel;

        r0 = virtualinvoke r15.<android.os.Parcel: java.lang.String readString()>();

        r16 = virtualinvoke r15.<android.os.Parcel: java.lang.String readString()>();

     label1:
        $r1 = class "Landroid/os/Parcelable;";

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        r17 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>(r0, 1, $r2);

        $r3 = class "Ljava/lang/Throwable;";

        $z0 = virtualinvoke $r3.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r17);

        if $z0 == 0 goto label3;

        $r10 = newarray (java.lang.Class)[1];

        $r10[0] = class "Ljava/lang/String;";

        $r11 = virtualinvoke r17.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>($r10);

        $r12 = newarray (java.lang.Object)[1];

        $r12[0] = r16;

        $r13 = virtualinvoke $r11.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r12);

        r18 = (java.lang.Throwable) $r13;

     label2:
        return r18;

     label3:
        goto label5;

     label4:
        $r14 := @caughtexception;

     label5:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r16);

        $r8 = new java.lang.RuntimeException;

        $r9 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.String)>($r9);

        return $r8;

        catch java.lang.ReflectiveOperationException from label1 to label2 with label4;
    }

    public static void writeToParcel(android.os.Parcel, java.lang.Throwable)
    {
        android.os.Parcel r0;
        java.lang.Throwable r1;
        java.lang.Class $r2;
        java.lang.String $r3, $r4;

        r0 := @parameter0: android.os.Parcel;

        r1 := @parameter1: java.lang.Throwable;

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke r0.<android.os.Parcel: void writeString(java.lang.String)>($r3);

        $r4 = virtualinvoke r1.<java.lang.Throwable: java.lang.String getMessage()>();

        virtualinvoke r0.<android.os.Parcel: void writeString(java.lang.String)>($r4);

        return;
    }

    public int describeContents()
    {
        android.os.ParcelableException r0;

        r0 := @this: android.os.ParcelableException;

        return 0;
    }

    public void maybeRethrow(java.lang.Class) throws java.lang.Throwable
    {
        android.os.ParcelableException r0;
        java.lang.Class r1, $r3;
        java.lang.Throwable $r2, $r4;
        boolean $z0;

        r0 := @this: android.os.ParcelableException;

        r1 := @parameter0: java.lang.Class;

        $r2 = virtualinvoke r0.<android.os.ParcelableException: java.lang.Throwable getCause()>();

        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.Class getClass()>();

        $z0 = virtualinvoke r1.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r3);

        if $z0 != 0 goto label1;

        return;

     label1:
        $r4 = virtualinvoke r0.<android.os.ParcelableException: java.lang.Throwable getCause()>();

        throw $r4;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.os.ParcelableException r0;
        android.os.Parcel r1;
        int i0;
        java.lang.Throwable $r2;

        r0 := @this: android.os.ParcelableException;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        $r2 = virtualinvoke r0.<android.os.ParcelableException: java.lang.Throwable getCause()>();

        staticinvoke <android.os.ParcelableException: void writeToParcel(android.os.Parcel,java.lang.Throwable)>(r1, $r2);

        return;
    }
}
