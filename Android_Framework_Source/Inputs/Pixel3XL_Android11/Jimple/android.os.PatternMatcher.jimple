public class android.os.PatternMatcher extends java.lang.Object implements android.os.Parcelable
{
    public static final android.os.Parcelable$Creator CREATOR;
    private static final int MAX_PATTERN_STORAGE;
    private static final int NO_MATCH;
    private static final int PARSED_MODIFIER_ONE_OR_MORE;
    private static final int PARSED_MODIFIER_RANGE_START;
    private static final int PARSED_MODIFIER_RANGE_STOP;
    private static final int PARSED_MODIFIER_ZERO_OR_MORE;
    private static final int PARSED_TOKEN_CHAR_ANY;
    private static final int PARSED_TOKEN_CHAR_SET_INVERSE_START;
    private static final int PARSED_TOKEN_CHAR_SET_START;
    private static final int PARSED_TOKEN_CHAR_SET_STOP;
    public static final int PATTERN_ADVANCED_GLOB;
    public static final int PATTERN_LITERAL;
    public static final int PATTERN_PREFIX;
    public static final int PATTERN_SIMPLE_GLOB;
    private static final java.lang.String TAG;
    private static final int TOKEN_TYPE_ANY;
    private static final int TOKEN_TYPE_INVERSE_SET;
    private static final int TOKEN_TYPE_LITERAL;
    private static final int TOKEN_TYPE_SET;
    private static final int[] sParsedPatternScratch;
    private final int[] mParsedPattern;
    private final java.lang.String mPattern;
    private final int mType;

    static void <clinit>()
    {
        int[] $r0;
        android.os.PatternMatcher$1 $r1;

        <android.os.PatternMatcher: int TOKEN_TYPE_SET> = 2;

        <android.os.PatternMatcher: int TOKEN_TYPE_LITERAL> = 0;

        <android.os.PatternMatcher: int TOKEN_TYPE_INVERSE_SET> = 3;

        <android.os.PatternMatcher: int TOKEN_TYPE_ANY> = 1;

        <android.os.PatternMatcher: java.lang.String TAG> = "PatternMatcher";

        <android.os.PatternMatcher: int PATTERN_SIMPLE_GLOB> = 2;

        <android.os.PatternMatcher: int PATTERN_PREFIX> = 1;

        <android.os.PatternMatcher: int PATTERN_LITERAL> = 0;

        <android.os.PatternMatcher: int PATTERN_ADVANCED_GLOB> = 3;

        <android.os.PatternMatcher: int PARSED_TOKEN_CHAR_SET_STOP> = -3;

        <android.os.PatternMatcher: int PARSED_TOKEN_CHAR_SET_START> = -1;

        <android.os.PatternMatcher: int PARSED_TOKEN_CHAR_SET_INVERSE_START> = -2;

        <android.os.PatternMatcher: int PARSED_TOKEN_CHAR_ANY> = -4;

        <android.os.PatternMatcher: int PARSED_MODIFIER_ZERO_OR_MORE> = -7;

        <android.os.PatternMatcher: int PARSED_MODIFIER_RANGE_STOP> = -6;

        <android.os.PatternMatcher: int PARSED_MODIFIER_RANGE_START> = -5;

        <android.os.PatternMatcher: int PARSED_MODIFIER_ONE_OR_MORE> = -8;

        <android.os.PatternMatcher: int NO_MATCH> = -1;

        <android.os.PatternMatcher: int MAX_PATTERN_STORAGE> = 2048;

        $r0 = newarray (int)[2048];

        <android.os.PatternMatcher: int[] sParsedPatternScratch> = $r0;

        $r1 = new android.os.PatternMatcher$1;

        specialinvoke $r1.<android.os.PatternMatcher$1: void <init>()>();

        <android.os.PatternMatcher: android.os.Parcelable$Creator CREATOR> = $r1;

        return;
    }

    public void <init>(android.os.Parcel)
    {
        android.os.PatternMatcher r0;
        android.os.Parcel r1;
        java.lang.String $r2;
        int $i0;
        int[] $r3;

        r0 := @this: android.os.PatternMatcher;

        r1 := @parameter0: android.os.Parcel;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r0.<android.os.PatternMatcher: java.lang.String mPattern> = $r2;

        $i0 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.os.PatternMatcher: int mType> = $i0;

        $r3 = virtualinvoke r1.<android.os.Parcel: int[] createIntArray()>();

        r0.<android.os.PatternMatcher: int[] mParsedPattern> = $r3;

        return;
    }

    public void <init>(java.lang.String, int)
    {
        android.os.PatternMatcher r0;
        java.lang.String r1;
        int i0;
        int[] $r2;

        r0 := @this: android.os.PatternMatcher;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.os.PatternMatcher: java.lang.String mPattern> = r1;

        r0.<android.os.PatternMatcher: int mType> = i0;

        if i0 != 3 goto label1;

        $r2 = staticinvoke <android.os.PatternMatcher: int[] parseAndVerifyAdvancedPattern(java.lang.String)>(r1);

        r0.<android.os.PatternMatcher: int[] mParsedPattern> = $r2;

        goto label2;

     label1:
        r0.<android.os.PatternMatcher: int[] mParsedPattern> = null;

     label2:
        return;
    }

    private static boolean isParsedModifier(int)
    {
        int i0;
        boolean z0;

        i0 := @parameter0: int;

        if i0 == -8 goto label2;

        if i0 == -7 goto label2;

        if i0 == -6 goto label2;

        if i0 != -5 goto label1;

        goto label2;

     label1:
        z0 = 0;

        goto label3;

     label2:
        z0 = 1;

     label3:
        return z0;
    }

    static boolean matchAdvancedPattern(int[], java.lang.String)
    {
        int[] r0;
        java.lang.String r1;
        int i0, i1, $i2, i3, i4, i5, i6, i7, i8, i9, i11, i13, i14, i15, i16, i17, i18, i19, i20, i21;
        byte b10, b12;
        boolean z1;

        r0 := @parameter0: int[];

        r1 := @parameter1: java.lang.String;

        i3 = 0;

        i0 = lengthof r0;

        i1 = virtualinvoke r1.<java.lang.String: int length()>();

        i4 = 0;

        i5 = 0;

        i6 = 0;

     label01:
        if i3 >= i0 goto label16;

        i7 = r0[i3];

        if i7 == -4 goto label07;

        if i7 == -2 goto label02;

        if i7 == -1 goto label02;

        i8 = i3 + 1;

        i9 = i3;

        b10 = 0;

        i3 = i8;

        i11 = i5;

        goto label08;

     label02:
        if i7 != -1 goto label03;

        b12 = 2;

        goto label04;

     label03:
        b12 = 3;

     label04:
        i13 = i3;

     label05:
        i14 = i13 + 1;

        if i14 >= i0 goto label06;

        $i2 = r0[i14];

        if $i2 == -3 goto label06;

        i13 = i14;

        goto label05;

     label06:
        i15 = i14 + 1;

        i9 = i3 + 1;

        i11 = i14 + -1;

        i3 = i15;

        b10 = b12;

        goto label08;

     label07:
        i3 = i3 + 1;

        b10 = 1;

        i11 = i5;

        i9 = i4;

     label08:
        if i3 < i0 goto label09;

        i16 = 1;

        i17 = 1;

        goto label13;

     label09:
        i18 = r0[i3];

        if i18 == -8 goto label12;

        if i18 == -7 goto label11;

        if i18 == -5 goto label10;

        i16 = 1;

        i17 = 1;

        goto label13;

     label10:
        i19 = i3 + 1;

        i16 = r0[i19];

        i20 = i19 + 1;

        i17 = r0[i20];

        i3 = i20 + 2;

        goto label13;

     label11:
        i3 = i3 + 1;

        i16 = 0;

        i17 = 2147483647;

        goto label13;

     label12:
        i3 = i3 + 1;

        i16 = 1;

        i17 = 2147483647;

     label13:
        if i16 <= i17 goto label14;

        return 0;

     label14:
        i21 = staticinvoke <android.os.PatternMatcher: int matchChars(java.lang.String,int,int,int,int,int,int[],int,int)>(r1, i6, i1, b10, i16, i17, r0, i9, i11);

        if i21 != -1 goto label15;

        return 0;

     label15:
        i6 = i6 + i21;

        i4 = i9;

        i5 = i11;

        goto label01;

     label16:
        z1 = 0;

        if i3 < i0 goto label17;

        z1 = 0;

        if i6 < i1 goto label17;

        z1 = 1;

     label17:
        return z1;
    }

    private static boolean matchChar(java.lang.String, int, int, int, int[], int, int)
    {
        java.lang.String r0;
        int i0, i1, i2, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i11, i12, i13, i15;
        int[] r1;
        char $c3, c14, c16;
        boolean z0;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i11 := @parameter2: int;

        i12 := @parameter3: int;

        r1 := @parameter4: int[];

        i1 := @parameter5: int;

        i2 := @parameter6: int;

        z0 = 0;

        if i0 < i11 goto label01;

        return 0;

     label01:
        if i12 == 0 goto label11;

        if i12 == 1 goto label10;

        if i12 == 2 goto label06;

        if i12 == 3 goto label02;

        return 0;

     label02:
        i13 = i1;

     label03:
        if i13 >= i2 goto label05;

        c14 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i0);

        $i8 = r1[i13];

        if c14 < $i8 goto label04;

        $i9 = i13 + 1;

        $i10 = r1[$i9];

        if c14 > $i10 goto label04;

        return 0;

     label04:
        i13 = i13 + 2;

        goto label03;

     label05:
        return 1;

     label06:
        i15 = i1;

     label07:
        if i15 >= i2 goto label09;

        c16 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i0);

        $i5 = r1[i15];

        if c16 < $i5 goto label08;

        $i6 = i15 + 1;

        $i7 = r1[$i6];

        if c16 > $i7 goto label08;

        return 1;

     label08:
        i15 = i15 + 2;

        goto label07;

     label09:
        return 0;

     label10:
        return 1;

     label11:
        $c3 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i0);

        $i4 = r1[i1];

        if $c3 != $i4 goto label12;

        z0 = 1;

     label12:
        return z0;
    }

    private static int matchChars(java.lang.String, int, int, int, int, int, int[], int, int)
    {
        java.lang.String r0;
        int i0, i1, i2, i3, i4, i5, $i6, i7, i8, i9;
        int[] r1;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        i7 := @parameter1: int;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        i3 := @parameter5: int;

        r1 := @parameter6: int[];

        i4 := @parameter7: int;

        i5 := @parameter8: int;

        i8 = 0;

     label1:
        if i8 >= i3 goto label2;

        $i6 = i7 + i8;

        $z0 = staticinvoke <android.os.PatternMatcher: boolean matchChar(java.lang.String,int,int,int,int[],int,int)>(r0, $i6, i0, i1, r1, i4, i5);

        if $z0 == 0 goto label2;

        i8 = i8 + 1;

        goto label1;

     label2:
        if i8 >= i2 goto label3;

        i9 = -1;

        goto label4;

     label3:
        i9 = i8;

     label4:
        return i9;
    }

    static boolean matchGlobPattern(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1;
        int i0, i1, i2, $i3, $i5, $i8, $i9, i10, i11, i15, i16, i17, i19, i20, i24, i25, i28, i29, i31, i32;
        char $c4, $c6, $c7, c12, c13, c14, c18, c21, c22, $c23, c26, $c30, c33;
        boolean z0, z1;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        i0 = virtualinvoke r0.<java.lang.String: int length()>();

        z0 = 0;

        if i0 > 0 goto label02;

        $i9 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i9 > 0 goto label01;

        z0 = 1;

     label01:
        return z0;

     label02:
        i1 = virtualinvoke r1.<java.lang.String: int length()>();

        i10 = 0;

        i11 = 0;

        c12 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

     label03:
        if i10 >= i0 goto label28;

        if i11 >= i1 goto label28;

        c13 = c12;

        i2 = i10 + 1;

        if i2 >= i0 goto label04;

        c14 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i2);

        goto label05;

     label04:
        c14 = 0;

     label05:
        if c13 != 92 goto label06;

        z1 = 1;

        goto label07;

     label06:
        z1 = 0;

     label07:
        i15 = i2;

        c12 = c14;

        if z1 == 0 goto label10;

        i15 = i2 + 1;

        if i15 >= i0 goto label08;

        c12 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i15);

        goto label09;

     label08:
        c12 = 0;

     label09:
        c13 = c14;

     label10:
        if c12 != 42 goto label25;

        i16 = i11;

        if z1 != 0 goto label20;

        i16 = i11;

        if c13 != 46 goto label20;

        $i8 = i0 - 1;

        if i15 < $i8 goto label11;

        return 1;

     label11:
        i17 = i15 + 1;

        c18 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i17);

        i19 = i17;

        i20 = i11;

        c21 = c18;

        if c18 != 92 goto label14;

        i19 = i17 + 1;

        if i19 >= i0 goto label12;

        c22 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i19);

        goto label13;

     label12:
        c22 = 0;

     label13:
        c21 = c22;

        i20 = i11;

     label14:
        $c23 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i20);

        if $c23 != c21 goto label15;

        goto label16;

     label15:
        i24 = i20 + 1;

        i20 = i24;

        if i24 < i1 goto label14;

        i20 = i24;

     label16:
        if i20 != i1 goto label17;

        return 0;

     label17:
        i25 = i19 + 1;

        if i25 >= i0 goto label18;

        c26 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i25);

        goto label19;

     label18:
        c26 = 0;

     label19:
        i28 = i20 + 1;

        i29 = i25;

        i16 = i28;

        c12 = c26;

        goto label27;

     label20:
        $c30 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i16);

        if $c30 == c13 goto label21;

        goto label22;

     label21:
        i31 = i16 + 1;

        i16 = i31;

        if i31 < i1 goto label20;

        i16 = i31;

     label22:
        i32 = i15 + 1;

        if i32 >= i0 goto label23;

        c33 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i32);

        goto label24;

     label23:
        c33 = 0;

     label24:
        c12 = c33;

        i29 = i32;

        goto label27;

     label25:
        if c13 == 46 goto label26;

        $c7 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i11);

        if $c7 == c13 goto label26;

        return 0;

     label26:
        i16 = i11 + 1;

        i29 = i15;

     label27:
        i10 = i29;

        i11 = i16;

        goto label03;

     label28:
        if i10 < i0 goto label29;

        if i11 < i1 goto label29;

        return 1;

     label29:
        $i3 = i0 - 2;

        if i10 != $i3 goto label30;

        $c4 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i10);

        if $c4 != 46 goto label30;

        $i5 = i10 + 1;

        $c6 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i5);

        if $c6 != 42 goto label30;

        return 1;

     label30:
        return 0;
    }

    static boolean matchPattern(java.lang.String, java.lang.String, int[], int)
    {
        java.lang.String r0, r1;
        int[] r2;
        int i0;
        boolean $z0, $z1, $z2, $z3;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: int[];

        i0 := @parameter3: int;

        if r0 != null goto label1;

        return 0;

     label1:
        if i0 != 0 goto label2;

        $z3 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        return $z3;

     label2:
        if i0 != 1 goto label3;

        $z2 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>(r1);

        return $z2;

     label3:
        if i0 != 2 goto label4;

        $z1 = staticinvoke <android.os.PatternMatcher: boolean matchGlobPattern(java.lang.String,java.lang.String)>(r1, r0);

        return $z1;

     label4:
        if i0 != 3 goto label5;

        $z0 = staticinvoke <android.os.PatternMatcher: boolean matchAdvancedPattern(int[],java.lang.String)>(r2, r0);

        return $z0;

     label5:
        return 0;
    }

    static int[] parseAndVerifyAdvancedPattern(java.lang.String)
    {
        int i0, $i1, $i2, $i3, $i4, $i5, $i7, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, i19, i20, i22, i23, i24, i25, i26, i27, i28, i29, i30, i31, i32, i33, i34, i35, i36, i37;
        int[] $r0, $r3, $r4, $r5, $r6, $r7, $r8, r13, r16, r17, r19, r20, r22, r24, r25, r26, $r27, r29, r30, r35, r37;
        java.lang.String $r1, $r2, r12, r28;
        char $c6, $c8, $c18, c21;
        boolean $z0, $z1, $z2, z3, z4, z5, z6, z7;
        java.lang.Throwable $r9, $r10, $r11, r31;
        java.lang.IllegalArgumentException r14, r15, r18, r21, r23, r32, r33, r34, r36, r38;

        r12 := @parameter0: java.lang.String;

        entermonitor class "Landroid/os/PatternMatcher;";

        i19 = 0;

     label01:
        i0 = virtualinvoke r12.<java.lang.String: int length()>();

     label02:
        i20 = 0;

        z3 = 0;

        z4 = 0;

        z5 = 0;

     label03:
        if i19 >= i0 goto label77;

        if i20 > 2045 goto label76;

     label04:
        c21 = virtualinvoke r12.<java.lang.String: char charAt(int)>(i19);

     label05:
        z6 = 0;

        if c21 == 42 goto label37;

        if c21 == 43 goto label33;

        if c21 == 46 goto label30;

        if c21 == 123 goto label26;

        if c21 == 125 goto label23;

        tableswitch(c21)
        {
            case 91: goto label17;
            case 92: goto label13;
            case 93: goto label07;
            default: goto label06;
        };

     label06:
        z6 = 1;

        goto label41;

     label07:
        if z3 != 0 goto label08;

        z6 = 1;

        goto label41;

     label08:
        $r6 = <android.os.PatternMatcher: int[] sParsedPatternScratch>;

        $i15 = i20 - 1;

        i22 = $r6[$i15];

     label09:
        if i22 == -1 goto label12;

        if i22 == -2 goto label12;

     label10:
        r13 = <android.os.PatternMatcher: int[] sParsedPatternScratch>;

     label11:
        i23 = i20 + 1;

        r13[i20] = -3;

        z5 = 0;

        z3 = 0;

        i20 = i23;

        goto label41;

     label12:
        r14 = new java.lang.IllegalArgumentException;

        specialinvoke r14.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("You must define characters in a set.");

        throw r14;

     label13:
        $i16 = i19 + 1;

        if $i16 >= i0 goto label16;

        i19 = i19 + 1;

     label14:
        c21 = virtualinvoke r12.<java.lang.String: char charAt(int)>(i19);

     label15:
        z6 = 1;

        goto label41;

     label16:
        r15 = new java.lang.IllegalArgumentException;

        specialinvoke r15.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Escape found at end of pattern!");

        throw r15;

     label17:
        if z3 == 0 goto label18;

        z6 = 1;

        goto label41;

     label18:
        $i17 = i19 + 1;

        $c18 = virtualinvoke r12.<java.lang.String: char charAt(int)>($i17);

        if $c18 != 94 goto label20;

        $r8 = <android.os.PatternMatcher: int[] sParsedPatternScratch>;

        $r8[i20] = -2;

     label19:
        i19 = i19 + 1;

        i20 = i20 + 1;

        goto label22;

     label20:
        $r7 = <android.os.PatternMatcher: int[] sParsedPatternScratch>;

        $r7[i20] = -1;

     label21:
        i20 = i20 + 1;

     label22:
        i19 = i19 + 1;

        z3 = 1;

        goto label03;

     label23:
        if z4 == 0 goto label41;

     label24:
        r16 = <android.os.PatternMatcher: int[] sParsedPatternScratch>;

     label25:
        i24 = i20 + 1;

        r16[i20] = -6;

        z4 = 0;

        i20 = i24;

        goto label41;

     label26:
        if z3 != 0 goto label41;

        if i20 == 0 goto label29;

     label27:
        $r5 = <android.os.PatternMatcher: int[] sParsedPatternScratch>;

        $i13 = i20 - 1;

        $i14 = $r5[$i13];

        $z2 = staticinvoke <android.os.PatternMatcher: boolean isParsedModifier(int)>($i14);

        if $z2 != 0 goto label29;

        r17 = <android.os.PatternMatcher: int[] sParsedPatternScratch>;

     label28:
        i25 = i20 + 1;

        r17[i20] = -5;

        z4 = 1;

        i19 = i19 + 1;

        i20 = i25;

        goto label41;

     label29:
        r18 = new java.lang.IllegalArgumentException;

        specialinvoke r18.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Modifier must follow a token.");

        throw r18;

     label30:
        if z3 != 0 goto label41;

     label31:
        r19 = <android.os.PatternMatcher: int[] sParsedPatternScratch>;

     label32:
        i26 = i20 + 1;

        r19[i20] = -4;

        i20 = i26;

        goto label41;

     label33:
        if z3 != 0 goto label41;

        if i20 == 0 goto label36;

     label34:
        $r4 = <android.os.PatternMatcher: int[] sParsedPatternScratch>;

        $i11 = i20 - 1;

        $i12 = $r4[$i11];

        $z1 = staticinvoke <android.os.PatternMatcher: boolean isParsedModifier(int)>($i12);

        if $z1 != 0 goto label36;

        r20 = <android.os.PatternMatcher: int[] sParsedPatternScratch>;

     label35:
        i27 = i20 + 1;

        r20[i20] = -8;

        i20 = i27;

        goto label41;

     label36:
        r21 = new java.lang.IllegalArgumentException;

        specialinvoke r21.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Modifier must follow a token.");

        throw r21;

     label37:
        if z3 != 0 goto label41;

        if i20 == 0 goto label40;

     label38:
        $r3 = <android.os.PatternMatcher: int[] sParsedPatternScratch>;

        $i9 = i20 - 1;

        $i10 = $r3[$i9];

        $z0 = staticinvoke <android.os.PatternMatcher: boolean isParsedModifier(int)>($i10);

        if $z0 != 0 goto label40;

        r22 = <android.os.PatternMatcher: int[] sParsedPatternScratch>;

     label39:
        i28 = i20 + 1;

        r22[i20] = -7;

        i20 = i28;

        goto label41;

     label40:
        r23 = new java.lang.IllegalArgumentException;

        specialinvoke r23.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Modifier must follow a token.");

        throw r23;

     label41:
        if z3 == 0 goto label51;

        if z5 == 0 goto label44;

     label42:
        r24 = <android.os.PatternMatcher: int[] sParsedPatternScratch>;

     label43:
        i29 = i20 + 1;

        r24[i20] = c21;

        z7 = 0;

        i20 = i29;

        goto label75;

     label44:
        $i4 = i19 + 2;

        if $i4 >= i0 goto label47;

     label45:
        $i5 = i19 + 1;

        $c6 = virtualinvoke r12.<java.lang.String: char charAt(int)>($i5);

        if $c6 != 45 goto label47;

        $i7 = i19 + 2;

        $c8 = virtualinvoke r12.<java.lang.String: char charAt(int)>($i7);

        if $c8 == 93 goto label47;

        r25 = <android.os.PatternMatcher: int[] sParsedPatternScratch>;

     label46:
        i30 = i20 + 1;

        r25[i20] = c21;

        i19 = i19 + 1;

        z7 = 1;

        i20 = i30;

        goto label75;

     label47:
        r26 = <android.os.PatternMatcher: int[] sParsedPatternScratch>;

     label48:
        i31 = i20 + 1;

        r26[i20] = c21;

     label49:
        $r27 = <android.os.PatternMatcher: int[] sParsedPatternScratch>;

        $r27[i31] = c21;

     label50:
        i20 = i31 + 1;

        z7 = z5;

        goto label75;

     label51:
        if z4 == 0 goto label71;

     label52:
        i32 = virtualinvoke r12.<java.lang.String: int indexOf(int,int)>(125, i19);

     label53:
        if i32 < 0 goto label70;

     label54:
        r28 = virtualinvoke r12.<java.lang.String: java.lang.String substring(int,int)>(i19, i32);

        i33 = virtualinvoke r28.<java.lang.String: int indexOf(int)>(44);

     label55:
        if i33 >= 0 goto label58;

     label56:
        i34 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r28);

     label57:
        i35 = i34;

        goto label61;

     label58:
        $r1 = virtualinvoke r28.<java.lang.String: java.lang.String substring(int,int)>(0, i33);

        i34 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r1);

        $i1 = virtualinvoke r28.<java.lang.String: int length()>();

        $i2 = $i1 - 1;

        if i33 != $i2 goto label60;

     label59:
        i35 = 2147483647;

        goto label61;

     label60:
        $i3 = i33 + 1;

        $r2 = virtualinvoke r28.<java.lang.String: java.lang.String substring(int)>($i3);

        i35 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r2);

     label61:
        if i34 > i35 goto label67;

     label62:
        r29 = <android.os.PatternMatcher: int[] sParsedPatternScratch>;

     label63:
        i36 = i20 + 1;

        r29[i20] = i34;

     label64:
        r30 = <android.os.PatternMatcher: int[] sParsedPatternScratch>;

     label65:
        r30[i36] = i35;

        i19 = i32;

        i20 = i36 + 1;

        goto label03;

     label66:
        $r10 := @caughtexception;

        r31 = $r10;

        goto label69;

     label67:
        r32 = new java.lang.IllegalArgumentException;

        specialinvoke r32.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Range quantifier minimum is greater than maximum");

        throw r32;

     label68:
        $r9 := @caughtexception;

        r31 = $r9;

     label69:
        r33 = new java.lang.IllegalArgumentException;

        specialinvoke r33.<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>("Range number format incorrect", r31);

        throw r33;

     label70:
        r34 = new java.lang.IllegalArgumentException;

        specialinvoke r34.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Range not ended with \'}\'");

        throw r34;

     label71:
        if z6 == 0 goto label74;

     label72:
        r35 = <android.os.PatternMatcher: int[] sParsedPatternScratch>;

     label73:
        i37 = i20 + 1;

        r35[i20] = c21;

        z7 = z5;

        i20 = i37;

        goto label75;

     label74:
        z7 = z5;

     label75:
        i19 = i19 + 1;

        z5 = z7;

        goto label03;

     label76:
        r36 = new java.lang.IllegalArgumentException;

        specialinvoke r36.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Pattern is too large!");

        throw r36;

     label77:
        if z3 != 0 goto label80;

     label78:
        $r0 = <android.os.PatternMatcher: int[] sParsedPatternScratch>;

        r37 = staticinvoke <java.util.Arrays: int[] copyOf(int[],int)>($r0, i20);

     label79:
        exitmonitor class "Landroid/os/PatternMatcher;";

        return r37;

     label80:
        r38 = new java.lang.IllegalArgumentException;

        specialinvoke r38.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Set was not terminated!");

        throw r38;

     label81:
        $r11 := @caughtexception;

        exitmonitor class "Landroid/os/PatternMatcher;";

        throw $r11;

        catch java.lang.Throwable from label01 to label02 with label81;
        catch java.lang.Throwable from label04 to label05 with label81;
        catch java.lang.Throwable from label08 to label09 with label81;
        catch java.lang.Throwable from label10 to label11 with label81;
        catch java.lang.Throwable from label12 to label13 with label81;
        catch java.lang.Throwable from label14 to label15 with label81;
        catch java.lang.Throwable from label16 to label17 with label81;
        catch java.lang.Throwable from label18 to label19 with label81;
        catch java.lang.Throwable from label20 to label21 with label81;
        catch java.lang.Throwable from label24 to label25 with label81;
        catch java.lang.Throwable from label27 to label28 with label81;
        catch java.lang.Throwable from label29 to label30 with label81;
        catch java.lang.Throwable from label31 to label32 with label81;
        catch java.lang.Throwable from label34 to label35 with label81;
        catch java.lang.Throwable from label36 to label37 with label81;
        catch java.lang.Throwable from label38 to label39 with label81;
        catch java.lang.Throwable from label40 to label41 with label81;
        catch java.lang.Throwable from label42 to label43 with label81;
        catch java.lang.Throwable from label45 to label46 with label81;
        catch java.lang.Throwable from label47 to label48 with label81;
        catch java.lang.Throwable from label49 to label50 with label81;
        catch java.lang.Throwable from label52 to label53 with label81;
        catch java.lang.Throwable from label54 to label55 with label81;
        catch java.lang.NumberFormatException from label56 to label57 with label68;
        catch java.lang.Throwable from label56 to label57 with label81;
        catch java.lang.NumberFormatException from label58 to label59 with label68;
        catch java.lang.Throwable from label58 to label59 with label81;
        catch java.lang.NumberFormatException from label60 to label61 with label68;
        catch java.lang.Throwable from label60 to label61 with label81;
        catch java.lang.NumberFormatException from label62 to label63 with label68;
        catch java.lang.Throwable from label62 to label63 with label81;
        catch java.lang.NumberFormatException from label64 to label65 with label66;
        catch java.lang.Throwable from label64 to label65 with label81;
        catch java.lang.NumberFormatException from label67 to label68 with label68;
        catch java.lang.Throwable from label67 to label68 with label81;
        catch java.lang.Throwable from label69 to label70 with label81;
        catch java.lang.Throwable from label70 to label71 with label81;
        catch java.lang.Throwable from label72 to label73 with label81;
        catch java.lang.Throwable from label76 to label77 with label81;
        catch java.lang.Throwable from label78 to label79 with label81;
        catch java.lang.Throwable from label80 to label81 with label81;
    }

    public int describeContents()
    {
        android.os.PatternMatcher r0;

        r0 := @this: android.os.PatternMatcher;

        return 0;
    }

    public void dumpDebug(android.util.proto.ProtoOutputStream, long)
    {
        android.os.PatternMatcher r0;
        android.util.proto.ProtoOutputStream r1;
        java.lang.String $r2;
        int $i0;
        long l1, l2;

        r0 := @this: android.os.PatternMatcher;

        r1 := @parameter0: android.util.proto.ProtoOutputStream;

        l1 := @parameter1: long;

        l2 = virtualinvoke r1.<android.util.proto.ProtoOutputStream: long start(long)>(l1);

        $r2 = r0.<android.os.PatternMatcher: java.lang.String mPattern>;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,java.lang.String)>(1138166333441L, $r2);

        $i0 = r0.<android.os.PatternMatcher: int mType>;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,int)>(1159641169922L, $i0);

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void end(long)>(l2);

        return;
    }

    public final java.lang.String getPath()
    {
        android.os.PatternMatcher r0;
        java.lang.String $r1;

        r0 := @this: android.os.PatternMatcher;

        $r1 = r0.<android.os.PatternMatcher: java.lang.String mPattern>;

        return $r1;
    }

    public final int getType()
    {
        android.os.PatternMatcher r0;
        int $i0;

        r0 := @this: android.os.PatternMatcher;

        $i0 = r0.<android.os.PatternMatcher: int mType>;

        return $i0;
    }

    public boolean match(java.lang.String)
    {
        android.os.PatternMatcher r0;
        java.lang.String r1, $r3;
        int $i0;
        int[] $r2;
        boolean $z0;

        r0 := @this: android.os.PatternMatcher;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<android.os.PatternMatcher: java.lang.String mPattern>;

        $r2 = r0.<android.os.PatternMatcher: int[] mParsedPattern>;

        $i0 = r0.<android.os.PatternMatcher: int mType>;

        $z0 = staticinvoke <android.os.PatternMatcher: boolean matchPattern(java.lang.String,java.lang.String,int[],int)>(r1, $r3, $r2, $i0);

        return $z0;
    }

    public java.lang.String toString()
    {
        android.os.PatternMatcher r0;
        int i0;
        java.lang.String r6, $r8, $r9;
        java.lang.StringBuilder $r7;

        r0 := @this: android.os.PatternMatcher;

        r6 = "? ";

        i0 = r0.<android.os.PatternMatcher: int mType>;

        if i0 == 0 goto label4;

        if i0 == 1 goto label3;

        if i0 == 2 goto label2;

        if i0 == 3 goto label1;

        goto label5;

     label1:
        r6 = "ADVANCED: ";

        goto label5;

     label2:
        r6 = "GLOB: ";

        goto label5;

     label3:
        r6 = "PREFIX: ";

        goto label5;

     label4:
        r6 = "LITERAL: ";

     label5:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("PatternMatcher{");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r8 = r0.<android.os.PatternMatcher: java.lang.String mPattern>;

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.os.PatternMatcher r0;
        android.os.Parcel r1;
        int i0, $i1;
        java.lang.String $r2;
        int[] $r3;

        r0 := @this: android.os.PatternMatcher;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        $r2 = r0.<android.os.PatternMatcher: java.lang.String mPattern>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r2);

        $i1 = r0.<android.os.PatternMatcher: int mType>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i1);

        $r3 = r0.<android.os.PatternMatcher: int[] mParsedPattern>;

        virtualinvoke r1.<android.os.Parcel: void writeIntArray(int[])>($r3);

        return;
    }
}
