class android.os.PersistableBundle$MyReadMapCallback extends java.lang.Object implements com.android.internal.util.XmlUtils$ReadMapCallback
{

    void <init>()
    {
        android.os.PersistableBundle$MyReadMapCallback r0;

        r0 := @this: android.os.PersistableBundle$MyReadMapCallback;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.Object readThisUnknownObjectXml(org.xmlpull.v1.XmlPullParser, java.lang.String) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.os.PersistableBundle$MyReadMapCallback r0;
        java.lang.String r1, $r2, $r7;
        boolean $z0;
        android.os.PersistableBundle $r8;
        org.xmlpull.v1.XmlPullParser r9;
        java.lang.StringBuilder r11;
        org.xmlpull.v1.XmlPullParserException r12;
        java.lang.Throwable r13;

        r0 := @this: android.os.PersistableBundle$MyReadMapCallback;

        r9 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r1 := @parameter1: java.lang.String;

        $r2 = "pbundle_as_map";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        $r8 = staticinvoke <android.os.PersistableBundle: android.os.PersistableBundle restoreFromXml(org.xmlpull.v1.XmlPullParser)>(r9);

        return $r8;

     label1:
        r11 = new java.lang.StringBuilder;

        specialinvoke r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown tag=");

        virtualinvoke r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        r12 = new org.xmlpull.v1.XmlPullParserException;

        $r7 = virtualinvoke r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r12.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r7);

        r13 = (java.lang.Throwable) r12;

        throw r13;
    }
}
