public final class android.os.PersistableBundle extends android.os.BaseBundle implements java.lang.Cloneable, android.os.Parcelable, com.android.internal.util.XmlUtils$WriteMapCallback
{
    public static final android.os.Parcelable$Creator CREATOR;
    public static final android.os.PersistableBundle EMPTY;
    private static final java.lang.String TAG_PERSISTABLEMAP;

    static void <clinit>()
    {
        android.os.PersistableBundle $r1;
        android.util.ArrayMap $r2;
        android.os.PersistableBundle$1 $r3;

        <android.os.PersistableBundle: java.lang.String TAG_PERSISTABLEMAP> = "pbundle_as_map";

        $r1 = new android.os.PersistableBundle;

        specialinvoke $r1.<android.os.PersistableBundle: void <init>()>();

        <android.os.PersistableBundle: android.os.PersistableBundle EMPTY> = $r1;

        $r2 = <android.util.ArrayMap: android.util.ArrayMap EMPTY>;

        $r1.<android.os.PersistableBundle: android.util.ArrayMap mMap> = $r2;

        $r3 = new android.os.PersistableBundle$1;

        specialinvoke $r3.<android.os.PersistableBundle$1: void <init>()>();

        <android.os.PersistableBundle: android.os.Parcelable$Creator CREATOR> = $r3;

        return;
    }

    public void <init>()
    {
        android.os.PersistableBundle r0;

        r0 := @this: android.os.PersistableBundle;

        specialinvoke r0.<android.os.BaseBundle: void <init>()>();

        r0.<android.os.PersistableBundle: int mFlags> = 1;

        return;
    }

    public void <init>(int)
    {
        android.os.PersistableBundle r0;
        int i0;

        r0 := @this: android.os.PersistableBundle;

        i0 := @parameter0: int;

        specialinvoke r0.<android.os.BaseBundle: void <init>(int)>(i0);

        r0.<android.os.PersistableBundle: int mFlags> = 1;

        return;
    }

    public void <init>(android.os.Bundle)
    {
        android.os.PersistableBundle r0;
        android.os.Bundle r1;
        android.util.ArrayMap $r2;

        r0 := @this: android.os.PersistableBundle;

        r1 := @parameter0: android.os.Bundle;

        $r2 = virtualinvoke r1.<android.os.Bundle: android.util.ArrayMap getMap()>();

        specialinvoke r0.<android.os.PersistableBundle: void <init>(android.util.ArrayMap)>($r2);

        return;
    }

    void <init>(android.os.Parcel, int)
    {
        android.os.PersistableBundle r0;
        android.os.Parcel r1;
        int i0;

        r0 := @this: android.os.PersistableBundle;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        specialinvoke r0.<android.os.BaseBundle: void <init>(android.os.Parcel,int)>(r1, i0);

        r0.<android.os.PersistableBundle: int mFlags> = 1;

        return;
    }

    public void <init>(android.os.PersistableBundle)
    {
        android.os.PersistableBundle r0, r1;
        int $i0;

        r0 := @this: android.os.PersistableBundle;

        r1 := @parameter0: android.os.PersistableBundle;

        specialinvoke r0.<android.os.BaseBundle: void <init>(android.os.BaseBundle)>(r1);

        $i0 = r1.<android.os.PersistableBundle: int mFlags>;

        r0.<android.os.PersistableBundle: int mFlags> = $i0;

        return;
    }

    private void <init>(android.util.ArrayMap)
    {
        android.os.PersistableBundle r0, $r14, $r18;
        int i0, i1;
        android.util.ArrayMap $r2, $r3, $r6, $r16, $r19, $r20, r22;
        boolean $z0, $z1, $z2;
        java.lang.StringBuilder $r4;
        java.lang.Object $r7, r23;
        java.lang.String $r8, $r13;
        java.lang.IllegalArgumentException $r12;
        android.os.Bundle $r15;

        r0 := @this: android.os.PersistableBundle;

        r22 := @parameter0: android.util.ArrayMap;

        specialinvoke r0.<android.os.BaseBundle: void <init>()>();

        r0.<android.os.PersistableBundle: int mFlags> = 1;

        virtualinvoke r0.<android.os.PersistableBundle: void putAll(android.util.ArrayMap)>(r22);

        $r2 = r0.<android.os.PersistableBundle: android.util.ArrayMap mMap>;

        i0 = virtualinvoke $r2.<android.util.ArrayMap: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label6;

        $r3 = r0.<android.os.PersistableBundle: android.util.ArrayMap mMap>;

        r23 = virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i1);

        $z0 = r23 instanceof android.util.ArrayMap;

        if $z0 == 0 goto label2;

        $r20 = r0.<android.os.PersistableBundle: android.util.ArrayMap mMap>;

        $r18 = new android.os.PersistableBundle;

        $r19 = (android.util.ArrayMap) r23;

        specialinvoke $r18.<android.os.PersistableBundle: void <init>(android.util.ArrayMap)>($r19);

        virtualinvoke $r20.<android.util.ArrayMap: java.lang.Object setValueAt(int,java.lang.Object)>(i1, $r18);

        goto label4;

     label2:
        $z1 = r23 instanceof android.os.Bundle;

        if $z1 == 0 goto label3;

        $r16 = r0.<android.os.PersistableBundle: android.util.ArrayMap mMap>;

        $r14 = new android.os.PersistableBundle;

        $r15 = (android.os.Bundle) r23;

        specialinvoke $r14.<android.os.PersistableBundle: void <init>(android.os.Bundle)>($r15);

        virtualinvoke $r16.<android.util.ArrayMap: java.lang.Object setValueAt(int,java.lang.Object)>(i1, $r14);

        goto label4;

     label3:
        $z2 = staticinvoke <android.os.PersistableBundle: boolean isValidType(java.lang.Object)>(r23);

        if $z2 == 0 goto label5;

     label4:
        i1 = i1 + 1;

        goto label1;

     label5:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad value in PersistableBundle key=");

        $r6 = r0.<android.os.PersistableBundle: android.util.ArrayMap mMap>;

        $r7 = virtualinvoke $r6.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i1);

        $r8 = (java.lang.String) $r7;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" value=");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r23);

        $r12 = new java.lang.IllegalArgumentException;

        $r13 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r13);

        throw $r12;

     label6:
        return;
    }

    void <init>(boolean)
    {
        android.os.PersistableBundle r0;
        boolean z0;

        r0 := @this: android.os.PersistableBundle;

        z0 := @parameter0: boolean;

        specialinvoke r0.<android.os.BaseBundle: void <init>(boolean)>(z0);

        return;
    }

    public static android.os.PersistableBundle forPair(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1;
        android.os.PersistableBundle $r3;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $r3 = new android.os.PersistableBundle;

        specialinvoke $r3.<android.os.PersistableBundle: void <init>(int)>(1);

        virtualinvoke $r3.<android.os.PersistableBundle: void putString(java.lang.String,java.lang.String)>(r0, r1);

        return $r3;
    }

    public static boolean isValidType(java.lang.Object)
    {
        java.lang.Object r0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, z11;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof java.lang.Integer;

        if $z0 != 0 goto label2;

        $z1 = r0 instanceof java.lang.Long;

        if $z1 != 0 goto label2;

        $z2 = r0 instanceof java.lang.Double;

        if $z2 != 0 goto label2;

        $z3 = r0 instanceof java.lang.String;

        if $z3 != 0 goto label2;

        $z4 = r0 instanceof int[];

        if $z4 != 0 goto label2;

        $z5 = r0 instanceof long[];

        if $z5 != 0 goto label2;

        $z6 = r0 instanceof double[];

        if $z6 != 0 goto label2;

        $z7 = r0 instanceof java.lang.String[];

        if $z7 != 0 goto label2;

        $z8 = r0 instanceof android.os.PersistableBundle;

        if $z8 != 0 goto label2;

        if r0 == null goto label2;

        $z9 = r0 instanceof java.lang.Boolean;

        if $z9 != 0 goto label2;

        $z10 = r0 instanceof boolean[];

        if $z10 == 0 goto label1;

        goto label2;

     label1:
        z11 = 0;

        goto label3;

     label2:
        z11 = 1;

     label3:
        return z11;
    }

    public static android.os.PersistableBundle readFromStream(java.io.InputStream) throws java.io.IOException
    {
        org.xmlpull.v1.XmlPullParser r0;
        org.xmlpull.v1.XmlPullParserFactory $r1;
        java.nio.charset.Charset $r2;
        java.lang.String $r3;
        java.lang.Throwable $r4;
        java.io.IOException $r5;
        java.io.InputStream r6;
        android.os.PersistableBundle r7;

        r6 := @parameter0: java.io.InputStream;

     label1:
        $r1 = staticinvoke <org.xmlpull.v1.XmlPullParserFactory: org.xmlpull.v1.XmlPullParserFactory newInstance()>();

        r0 = virtualinvoke $r1.<org.xmlpull.v1.XmlPullParserFactory: org.xmlpull.v1.XmlPullParser newPullParser()>();

        $r2 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;

        $r3 = virtualinvoke $r2.<java.nio.charset.Charset: java.lang.String name()>();

        interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: void setInput(java.io.InputStream,java.lang.String)>(r6, $r3);

        interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int next()>();

        r7 = staticinvoke <android.os.PersistableBundle: android.os.PersistableBundle restoreFromXml(org.xmlpull.v1.XmlPullParser)>(r0);

     label2:
        return r7;

     label3:
        $r4 := @caughtexception;

        $r5 = new java.io.IOException;

        specialinvoke $r5.<java.io.IOException: void <init>(java.lang.Throwable)>($r4);

        throw $r5;

        catch org.xmlpull.v1.XmlPullParserException from label1 to label2 with label3;
    }

    public static android.os.PersistableBundle restoreFromXml(org.xmlpull.v1.XmlPullParser) throws java.io.IOException, org.xmlpull.v1.XmlPullParserException
    {
        org.xmlpull.v1.XmlPullParser r0;
        int i0, i1, $i2;
        java.lang.String r1;
        java.lang.String[] r2;
        android.os.PersistableBundle $r3, $r4;
        android.os.PersistableBundle$MyReadMapCallback $r5;
        android.util.ArrayMap $r6;

        r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        i0 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        r1 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        r2 = newarray (java.lang.String)[1];

     label1:
        i1 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int next()>();

        if i1 == 1 goto label3;

        if i1 != 3 goto label2;

        $i2 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i2 >= i0 goto label3;

     label2:
        if i1 != 2 goto label1;

        $r4 = new android.os.PersistableBundle;

        $r5 = new android.os.PersistableBundle$MyReadMapCallback;

        specialinvoke $r5.<android.os.PersistableBundle$MyReadMapCallback: void <init>()>();

        $r6 = staticinvoke <com.android.internal.util.XmlUtils: android.util.ArrayMap readThisArrayMapXml(org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.String[],com.android.internal.util.XmlUtils$ReadMapCallback)>(r0, r1, r2, $r5);

        specialinvoke $r4.<android.os.PersistableBundle: void <init>(android.util.ArrayMap)>($r6);

        return $r4;

     label3:
        $r3 = <android.os.PersistableBundle: android.os.PersistableBundle EMPTY>;

        return $r3;
    }

    public java.lang.Object clone()
    {
        android.os.PersistableBundle r0, $r1;

        r0 := @this: android.os.PersistableBundle;

        $r1 = new android.os.PersistableBundle;

        specialinvoke $r1.<android.os.PersistableBundle: void <init>(android.os.PersistableBundle)>(r0);

        return $r1;
    }

    public android.os.PersistableBundle deepCopy()
    {
        android.os.PersistableBundle r0, $r2;

        r0 := @this: android.os.PersistableBundle;

        $r2 = new android.os.PersistableBundle;

        specialinvoke $r2.<android.os.PersistableBundle: void <init>(boolean)>(0);

        virtualinvoke $r2.<android.os.PersistableBundle: void copyInternal(android.os.BaseBundle,boolean)>(r0, 1);

        return $r2;
    }

    public int describeContents()
    {
        android.os.PersistableBundle r0;

        r0 := @this: android.os.PersistableBundle;

        return 0;
    }

    public void dumpDebug(android.util.proto.ProtoOutputStream, long)
    {
        android.os.PersistableBundle r0;
        android.util.proto.ProtoOutputStream r1;
        android.os.Parcel $r2, $r5;
        android.util.ArrayMap $r3;
        java.lang.String $r4;
        boolean $z0;
        int $i0;
        long l1, l2;

        r0 := @this: android.os.PersistableBundle;

        r1 := @parameter0: android.util.proto.ProtoOutputStream;

        l1 := @parameter1: long;

        l2 = virtualinvoke r1.<android.util.proto.ProtoOutputStream: long start(long)>(l1);

        $r2 = r0.<android.os.PersistableBundle: android.os.Parcel mParcelledData>;

        if $r2 == null goto label2;

        $z0 = virtualinvoke r0.<android.os.PersistableBundle: boolean isEmptyParcel()>();

        if $z0 == 0 goto label1;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,int)>(1120986464257L, 0);

        goto label3;

     label1:
        $r5 = r0.<android.os.PersistableBundle: android.os.Parcel mParcelledData>;

        $i0 = virtualinvoke $r5.<android.os.Parcel: int dataSize()>();

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,int)>(1120986464257L, $i0);

        goto label3;

     label2:
        $r3 = r0.<android.os.PersistableBundle: android.util.ArrayMap mMap>;

        $r4 = virtualinvoke $r3.<android.util.ArrayMap: java.lang.String toString()>();

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,java.lang.String)>(1138166333442L, $r4);

     label3:
        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void end(long)>(l2);

        return;
    }

    public android.os.PersistableBundle getPersistableBundle(java.lang.String)
    {
        android.os.PersistableBundle r0, r5;
        java.lang.String r1;
        java.lang.Object r2;
        android.util.ArrayMap $r3;
        java.lang.ClassCastException $r4;

        r0 := @this: android.os.PersistableBundle;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<android.os.PersistableBundle: void unparcel()>();

        $r3 = r0.<android.os.PersistableBundle: android.util.ArrayMap mMap>;

        r2 = virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        if r2 != null goto label1;

        return null;

     label1:
        r5 = (android.os.PersistableBundle) r2;

     label2:
        return r5;

     label3:
        $r4 := @caughtexception;

        virtualinvoke r0.<android.os.PersistableBundle: void typeWarning(java.lang.String,java.lang.Object,java.lang.String,java.lang.ClassCastException)>(r1, r2, "Bundle", $r4);

        return null;

        catch java.lang.ClassCastException from label1 to label2 with label3;
    }

    public void putPersistableBundle(java.lang.String, android.os.PersistableBundle)
    {
        android.os.PersistableBundle r0, r2;
        java.lang.String r1;
        android.util.ArrayMap $r3;

        r0 := @this: android.os.PersistableBundle;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.PersistableBundle;

        virtualinvoke r0.<android.os.PersistableBundle: void unparcel()>();

        $r3 = r0.<android.os.PersistableBundle: android.util.ArrayMap mMap>;

        virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }

    public void saveToXml(org.xmlpull.v1.XmlSerializer) throws java.io.IOException, org.xmlpull.v1.XmlPullParserException
    {
        android.os.PersistableBundle r0;
        org.xmlpull.v1.XmlSerializer r1;
        android.util.ArrayMap $r2;

        r0 := @this: android.os.PersistableBundle;

        r1 := @parameter0: org.xmlpull.v1.XmlSerializer;

        virtualinvoke r0.<android.os.PersistableBundle: void unparcel()>();

        $r2 = r0.<android.os.PersistableBundle: android.util.ArrayMap mMap>;

        staticinvoke <com.android.internal.util.XmlUtils: void writeMapXml(java.util.Map,org.xmlpull.v1.XmlSerializer,com.android.internal.util.XmlUtils$WriteMapCallback)>($r2, r1, r0);

        return;
    }

    public java.lang.String toShortString()
    {
        android.os.PersistableBundle r0;
        android.os.Parcel $r1, $r4;
        android.util.ArrayMap $r2;
        boolean $z0;
        int $i0;
        java.lang.Throwable $r6;
        java.lang.StringBuilder r7;
        java.lang.String r8, r9;

        r0 := @this: android.os.PersistableBundle;

        entermonitor r0;

     label1:
        $r1 = r0.<android.os.PersistableBundle: android.os.Parcel mParcelledData>;

        if $r1 == null goto label5;

        $z0 = virtualinvoke r0.<android.os.PersistableBundle: boolean isEmptyParcel()>();

        if $z0 == 0 goto label3;

     label2:
        exitmonitor r0;

        return "EMPTY_PARCEL";

     label3:
        r7 = new java.lang.StringBuilder;

        specialinvoke r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mParcelledData.dataSize=");

        $r4 = r0.<android.os.PersistableBundle: android.os.Parcel mParcelledData>;

        $i0 = virtualinvoke $r4.<android.os.Parcel: int dataSize()>();

        virtualinvoke r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        r8 = virtualinvoke r7.<java.lang.StringBuilder: java.lang.String toString()>();

     label4:
        exitmonitor r0;

        return r8;

     label5:
        $r2 = r0.<android.os.PersistableBundle: android.util.ArrayMap mMap>;

        r9 = virtualinvoke $r2.<android.util.ArrayMap: java.lang.String toString()>();

     label6:
        exitmonitor r0;

        return r9;

     label7:
        $r6 := @caughtexception;

        exitmonitor r0;

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
    }

    public java.lang.String toString()
    {
        android.os.PersistableBundle r0;
        android.os.Parcel $r1, $r8;
        android.util.ArrayMap $r3;
        java.lang.String $r4, r13, r15;
        boolean $z0;
        int $i0;
        java.lang.Throwable $r11;
        java.lang.StringBuilder r12, r14;

        r0 := @this: android.os.PersistableBundle;

        entermonitor r0;

     label1:
        $r1 = r0.<android.os.PersistableBundle: android.os.Parcel mParcelledData>;

        if $r1 == null goto label5;

        $z0 = virtualinvoke r0.<android.os.PersistableBundle: boolean isEmptyParcel()>();

        if $z0 == 0 goto label3;

     label2:
        exitmonitor r0;

        return "PersistableBundle[EMPTY_PARCEL]";

     label3:
        r12 = new java.lang.StringBuilder;

        specialinvoke r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("PersistableBundle[mParcelledData.dataSize=");

        $r8 = r0.<android.os.PersistableBundle: android.os.Parcel mParcelledData>;

        $i0 = virtualinvoke $r8.<android.os.Parcel: int dataSize()>();

        virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        r13 = virtualinvoke r12.<java.lang.StringBuilder: java.lang.String toString()>();

     label4:
        exitmonitor r0;

        return r13;

     label5:
        r14 = new java.lang.StringBuilder;

        specialinvoke r14.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("PersistableBundle[");

        $r3 = r0.<android.os.PersistableBundle: android.util.ArrayMap mMap>;

        $r4 = virtualinvoke $r3.<android.util.ArrayMap: java.lang.String toString()>();

        virtualinvoke r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        r15 = virtualinvoke r14.<java.lang.StringBuilder: java.lang.String toString()>();

     label6:
        exitmonitor r0;

        return r15;

     label7:
        $r11 := @caughtexception;

        exitmonitor r0;

        throw $r11;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.os.PersistableBundle r0;
        android.os.Parcel r1;
        int i0;
        boolean z0;
        java.lang.Throwable $r3;

        r0 := @this: android.os.PersistableBundle;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        z0 = virtualinvoke r1.<android.os.Parcel: boolean pushAllowFds(boolean)>(0);

     label1:
        virtualinvoke r0.<android.os.PersistableBundle: void writeToParcelInner(android.os.Parcel,int)>(r1, i0);

     label2:
        virtualinvoke r1.<android.os.Parcel: void restoreAllowFds(boolean)>(z0);

        return;

     label3:
        $r3 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void restoreAllowFds(boolean)>(z0);

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void writeToStream(java.io.OutputStream) throws java.io.IOException
    {
        android.os.PersistableBundle r0;
        com.android.internal.util.FastXmlSerializer $r2;
        java.nio.charset.Charset $r3;
        java.lang.String $r4;
        java.lang.Throwable $r7;
        java.io.IOException $r8;
        java.io.OutputStream r9;

        r0 := @this: android.os.PersistableBundle;

        r9 := @parameter0: java.io.OutputStream;

        $r2 = new com.android.internal.util.FastXmlSerializer;

        specialinvoke $r2.<com.android.internal.util.FastXmlSerializer: void <init>()>();

        $r3 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;

        $r4 = virtualinvoke $r3.<java.nio.charset.Charset: java.lang.String name()>();

        virtualinvoke $r2.<com.android.internal.util.FastXmlSerializer: void setOutput(java.io.OutputStream,java.lang.String)>(r9, $r4);

        virtualinvoke $r2.<com.android.internal.util.FastXmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "bundle");

     label1:
        virtualinvoke r0.<android.os.PersistableBundle: void saveToXml(org.xmlpull.v1.XmlSerializer)>($r2);

     label2:
        virtualinvoke $r2.<com.android.internal.util.FastXmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "bundle");

        virtualinvoke $r2.<com.android.internal.util.FastXmlSerializer: void flush()>();

        return;

     label3:
        $r7 := @caughtexception;

        $r8 = new java.io.IOException;

        specialinvoke $r8.<java.io.IOException: void <init>(java.lang.Throwable)>($r7);

        throw $r8;

        catch org.xmlpull.v1.XmlPullParserException from label1 to label2 with label3;
    }

    public void writeUnknownObject(java.lang.Object, java.lang.String, org.xmlpull.v1.XmlSerializer) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.os.PersistableBundle r0, $r10;
        java.lang.Object r1;
        org.xmlpull.v1.XmlSerializer r2;
        boolean $z0;
        java.lang.String $r7, r12;
        java.lang.StringBuilder r14;
        org.xmlpull.v1.XmlPullParserException r15;
        java.lang.Throwable r16;

        r0 := @this: android.os.PersistableBundle;

        r1 := @parameter0: java.lang.Object;

        r12 := @parameter1: java.lang.String;

        r2 := @parameter2: org.xmlpull.v1.XmlSerializer;

        $z0 = r1 instanceof android.os.PersistableBundle;

        if $z0 == 0 goto label1;

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "pbundle_as_map");

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "name", r12);

        $r10 = (android.os.PersistableBundle) r1;

        virtualinvoke $r10.<android.os.PersistableBundle: void saveToXml(org.xmlpull.v1.XmlSerializer)>(r2);

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "pbundle_as_map");

        return;

     label1:
        r14 = new java.lang.StringBuilder;

        specialinvoke r14.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown Object o=");

        virtualinvoke r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        r15 = new org.xmlpull.v1.XmlPullParserException;

        $r7 = virtualinvoke r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r15.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r7);

        r16 = (java.lang.Throwable) r15;

        throw r16;
    }
}
