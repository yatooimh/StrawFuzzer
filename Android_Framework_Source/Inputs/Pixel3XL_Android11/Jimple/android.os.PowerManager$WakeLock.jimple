public final class android.os.PowerManager$WakeLock extends java.lang.Object
{
    private int mExternalCount;
    private int mFlags;
    private boolean mHeld;
    private java.lang.String mHistoryTag;
    private int mInternalCount;
    private final java.lang.String mPackageName;
    private boolean mRefCounted;
    private final java.lang.Runnable mReleaser;
    private java.lang.String mTag;
    private final android.os.IBinder mToken;
    private final java.lang.String mTraceName;
    private android.os.WorkSource mWorkSource;
    final android.os.PowerManager this$0;

    void <init>(android.os.PowerManager, int, java.lang.String, java.lang.String)
    {
        android.os.PowerManager$WakeLock r0;
        int i0;
        java.lang.String r1, r2, $r7, $r10;
        android.os.PowerManager$WakeLock$1 $r3;
        android.os.Binder $r4;
        java.lang.StringBuilder $r5;
        android.os.PowerManager r11;

        r0 := @this: android.os.PowerManager$WakeLock;

        r11 := @parameter0: android.os.PowerManager;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        r2 := @parameter3: java.lang.String;

        r0.<android.os.PowerManager$WakeLock: android.os.PowerManager this$0> = r11;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.os.PowerManager$WakeLock: boolean mRefCounted> = 1;

        $r3 = new android.os.PowerManager$WakeLock$1;

        specialinvoke $r3.<android.os.PowerManager$WakeLock$1: void <init>(android.os.PowerManager$WakeLock)>(r0);

        r0.<android.os.PowerManager$WakeLock: java.lang.Runnable mReleaser> = $r3;

        r0.<android.os.PowerManager$WakeLock: int mFlags> = i0;

        r0.<android.os.PowerManager$WakeLock: java.lang.String mTag> = r1;

        r0.<android.os.PowerManager$WakeLock: java.lang.String mPackageName> = r2;

        $r4 = new android.os.Binder;

        specialinvoke $r4.<android.os.Binder: void <init>()>();

        r0.<android.os.PowerManager$WakeLock: android.os.IBinder mToken> = $r4;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("WakeLock (");

        $r7 = r0.<android.os.PowerManager$WakeLock: java.lang.String mTag>;

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r10 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<android.os.PowerManager$WakeLock: java.lang.String mTraceName> = $r10;

        return;
    }

    private void acquireLocked()
    {
        android.os.PowerManager$WakeLock r0;
        int i0, $i1, $i2, $i3, $i4;
        boolean $z0;
        android.os.PowerManager $r2, $r6;
        java.lang.Runnable $r3;
        android.os.Handler $r4;
        java.lang.String $r5, $r7, $r9, $r10;
        android.os.WorkSource $r8;
        android.os.IBinder $r11;
        android.os.IPowerManager $r12;
        android.os.RemoteException $r13;
        java.lang.RuntimeException $r14;

        r0 := @this: android.os.PowerManager$WakeLock;

        $i1 = r0.<android.os.PowerManager$WakeLock: int mInternalCount>;

        i0 = $i1 + 1;

        r0.<android.os.PowerManager$WakeLock: int mInternalCount> = i0;

        $i2 = r0.<android.os.PowerManager$WakeLock: int mExternalCount>;

        $i3 = $i2 + 1;

        r0.<android.os.PowerManager$WakeLock: int mExternalCount> = $i3;

        $z0 = r0.<android.os.PowerManager$WakeLock: boolean mRefCounted>;

        if $z0 == 0 goto label1;

        if i0 != 1 goto label4;

     label1:
        $r2 = r0.<android.os.PowerManager$WakeLock: android.os.PowerManager this$0>;

        $r4 = $r2.<android.os.PowerManager: android.os.Handler mHandler>;

        $r3 = r0.<android.os.PowerManager$WakeLock: java.lang.Runnable mReleaser>;

        virtualinvoke $r4.<android.os.Handler: void removeCallbacks(java.lang.Runnable)>($r3);

        $r5 = r0.<android.os.PowerManager$WakeLock: java.lang.String mTraceName>;

        staticinvoke <android.os.Trace: void asyncTraceBegin(long,java.lang.String,int)>(131072L, $r5, 0);

     label2:
        $r6 = r0.<android.os.PowerManager$WakeLock: android.os.PowerManager this$0>;

        $r12 = $r6.<android.os.PowerManager: android.os.IPowerManager mService>;

        $r11 = r0.<android.os.PowerManager$WakeLock: android.os.IBinder mToken>;

        $i4 = r0.<android.os.PowerManager$WakeLock: int mFlags>;

        $r10 = r0.<android.os.PowerManager$WakeLock: java.lang.String mTag>;

        $r9 = r0.<android.os.PowerManager$WakeLock: java.lang.String mPackageName>;

        $r8 = r0.<android.os.PowerManager$WakeLock: android.os.WorkSource mWorkSource>;

        $r7 = r0.<android.os.PowerManager$WakeLock: java.lang.String mHistoryTag>;

        interfaceinvoke $r12.<android.os.IPowerManager: void acquireWakeLock(android.os.IBinder,int,java.lang.String,java.lang.String,android.os.WorkSource,java.lang.String)>($r11, $i4, $r10, $r9, $r8, $r7);

     label3:
        r0.<android.os.PowerManager$WakeLock: boolean mHeld> = 1;

     label4:
        return;

     label5:
        $r13 := @caughtexception;

        $r14 = virtualinvoke $r13.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r14;

        catch android.os.RemoteException from label2 to label3 with label5;
    }

    public void acquire()
    {
        android.os.PowerManager$WakeLock r0;
        android.os.IBinder r1;
        java.lang.Throwable $r3;

        r0 := @this: android.os.PowerManager$WakeLock;

        r1 = r0.<android.os.PowerManager$WakeLock: android.os.IBinder mToken>;

        entermonitor r1;

     label1:
        specialinvoke r0.<android.os.PowerManager$WakeLock: void acquireLocked()>();

        exitmonitor r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void acquire(long)
    {
        android.os.PowerManager$WakeLock r0;
        long l0;
        android.os.IBinder r1;
        android.os.PowerManager $r3;
        java.lang.Runnable $r4;
        android.os.Handler $r5;
        java.lang.Throwable $r6;

        r0 := @this: android.os.PowerManager$WakeLock;

        l0 := @parameter0: long;

        r1 = r0.<android.os.PowerManager$WakeLock: android.os.IBinder mToken>;

        entermonitor r1;

     label1:
        specialinvoke r0.<android.os.PowerManager$WakeLock: void acquireLocked()>();

        $r3 = r0.<android.os.PowerManager$WakeLock: android.os.PowerManager this$0>;

        $r5 = $r3.<android.os.PowerManager: android.os.Handler mHandler>;

        $r4 = r0.<android.os.PowerManager$WakeLock: java.lang.Runnable mReleaser>;

        virtualinvoke $r5.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>($r4, l0);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r6 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void dumpDebug(android.util.proto.ProtoOutputStream, long)
    {
        android.os.PowerManager$WakeLock r0;
        android.os.IBinder r1;
        java.lang.String $r2, $r3;
        boolean $z0;
        int $i0;
        android.os.WorkSource $r4, $r5;
        java.lang.Throwable $r6;
        android.util.proto.ProtoOutputStream r7;
        long l1, l2;

        r0 := @this: android.os.PowerManager$WakeLock;

        r7 := @parameter0: android.util.proto.ProtoOutputStream;

        l1 := @parameter1: long;

        r1 = r0.<android.os.PowerManager$WakeLock: android.os.IBinder mToken>;

        entermonitor r1;

     label1:
        l2 = virtualinvoke r7.<android.util.proto.ProtoOutputStream: long start(long)>(l1);

        $r2 = r0.<android.os.PowerManager$WakeLock: java.lang.String mTag>;

        virtualinvoke r7.<android.util.proto.ProtoOutputStream: void write(long,java.lang.String)>(1138166333441L, $r2);

        $r3 = r0.<android.os.PowerManager$WakeLock: java.lang.String mPackageName>;

        virtualinvoke r7.<android.util.proto.ProtoOutputStream: void write(long,java.lang.String)>(1138166333442L, $r3);

        $z0 = r0.<android.os.PowerManager$WakeLock: boolean mHeld>;

        virtualinvoke r7.<android.util.proto.ProtoOutputStream: void write(long,boolean)>(1133871366147L, $z0);

        $i0 = r0.<android.os.PowerManager$WakeLock: int mInternalCount>;

        virtualinvoke r7.<android.util.proto.ProtoOutputStream: void write(long,int)>(1120986464260L, $i0);

        $r4 = r0.<android.os.PowerManager$WakeLock: android.os.WorkSource mWorkSource>;

        if $r4 == null goto label2;

        $r5 = r0.<android.os.PowerManager$WakeLock: android.os.WorkSource mWorkSource>;

        virtualinvoke $r5.<android.os.WorkSource: void dumpDebug(android.util.proto.ProtoOutputStream,long)>(r7, 1146756268037L);

     label2:
        virtualinvoke r7.<android.util.proto.ProtoOutputStream: void end(long)>(l2);

        exitmonitor r1;

     label3:
        return;

     label4:
        $r6 := @caughtexception;

     label5:
        exitmonitor r1;

     label6:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    protected void finalize() throws java.lang.Throwable
    {
        android.os.PowerManager$WakeLock r0;
        android.os.IBinder r1, $r8;
        boolean $z0;
        java.lang.String $r3, $r5, $r6;
        android.os.PowerManager $r7;
        android.os.IPowerManager $r9;
        android.os.RemoteException $r10;
        java.lang.RuntimeException $r11;
        java.lang.Throwable $r12;
        java.lang.StringBuilder r13;

        r0 := @this: android.os.PowerManager$WakeLock;

        r1 = r0.<android.os.PowerManager$WakeLock: android.os.IBinder mToken>;

        entermonitor r1;

     label01:
        $z0 = r0.<android.os.PowerManager$WakeLock: boolean mHeld>;

        if $z0 == 0 goto label06;

        r13 = new java.lang.StringBuilder;

        specialinvoke r13.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("WakeLock finalized while still held: ");

        $r3 = r0.<android.os.PowerManager$WakeLock: java.lang.String mTag>;

        virtualinvoke r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int wtf(java.lang.String,java.lang.String)>("PowerManager", $r5);

        $r6 = r0.<android.os.PowerManager$WakeLock: java.lang.String mTraceName>;

        staticinvoke <android.os.Trace: void asyncTraceEnd(long,java.lang.String,int)>(131072L, $r6, 0);

     label02:
        $r7 = r0.<android.os.PowerManager$WakeLock: android.os.PowerManager this$0>;

        $r9 = $r7.<android.os.PowerManager: android.os.IPowerManager mService>;

        $r8 = r0.<android.os.PowerManager$WakeLock: android.os.IBinder mToken>;

        interfaceinvoke $r9.<android.os.IPowerManager: void releaseWakeLock(android.os.IBinder,int)>($r8, 0);

     label03:
        goto label06;

     label04:
        $r10 := @caughtexception;

     label05:
        $r11 = virtualinvoke $r10.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r11;

     label06:
        exitmonitor r1;

     label07:
        return;

     label08:
        $r12 := @caughtexception;

     label09:
        exitmonitor r1;

     label10:
        throw $r12;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch android.os.RemoteException from label02 to label03 with label04;
        catch java.lang.Throwable from label02 to label03 with label08;
        catch java.lang.Throwable from label05 to label06 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    public java.lang.String getTag()
    {
        android.os.PowerManager$WakeLock r0;
        java.lang.String $r1;

        r0 := @this: android.os.PowerManager$WakeLock;

        $r1 = r0.<android.os.PowerManager$WakeLock: java.lang.String mTag>;

        return $r1;
    }

    public boolean isHeld()
    {
        android.os.PowerManager$WakeLock r0;
        android.os.IBinder r1;
        boolean z0;
        java.lang.Throwable $r3;

        r0 := @this: android.os.PowerManager$WakeLock;

        r1 = r0.<android.os.PowerManager$WakeLock: android.os.IBinder mToken>;

        entermonitor r1;

     label1:
        z0 = r0.<android.os.PowerManager$WakeLock: boolean mHeld>;

        exitmonitor r1;

     label2:
        return z0;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void lambda$wrap$0$PowerManager$WakeLock(java.lang.Runnable)
    {
        android.os.PowerManager$WakeLock r0;
        java.lang.Throwable $r1;
        java.lang.Runnable r2;

        r0 := @this: android.os.PowerManager$WakeLock;

        r2 := @parameter0: java.lang.Runnable;

     label1:
        interfaceinvoke r2.<java.lang.Runnable: void run()>();

     label2:
        virtualinvoke r0.<android.os.PowerManager$WakeLock: void release()>();

        return;

     label3:
        $r1 := @caughtexception;

        virtualinvoke r0.<android.os.PowerManager$WakeLock: void release()>();

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void release()
    {
        android.os.PowerManager$WakeLock r0;

        r0 := @this: android.os.PowerManager$WakeLock;

        virtualinvoke r0.<android.os.PowerManager$WakeLock: void release(int)>(0);

        return;
    }

    public void release(int)
    {
        android.os.PowerManager$WakeLock r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        android.os.IBinder r1, $r12;
        java.lang.RuntimeException r2, $r15;
        boolean $z0, $z1, $z2;
        android.os.PowerManager $r3, $r11;
        java.lang.Runnable $r4;
        android.os.Handler $r5;
        java.lang.String $r7, $r9, $r10;
        android.os.IPowerManager $r13;
        android.os.RemoteException $r14;
        java.lang.Throwable $r16;
        java.lang.StringBuilder r18;

        r0 := @this: android.os.PowerManager$WakeLock;

        i0 := @parameter0: int;

        r1 = r0.<android.os.PowerManager$WakeLock: android.os.IBinder mToken>;

        entermonitor r1;

     label01:
        $i1 = r0.<android.os.PowerManager$WakeLock: int mInternalCount>;

        if $i1 <= 0 goto label02;

        $i7 = r0.<android.os.PowerManager$WakeLock: int mInternalCount>;

        $i8 = $i7 - 1;

        r0.<android.os.PowerManager$WakeLock: int mInternalCount> = $i8;

     label02:
        $i2 = 65536 & i0;

        if $i2 != 0 goto label04;

     label03:
        $i5 = r0.<android.os.PowerManager$WakeLock: int mExternalCount>;

        $i6 = $i5 - 1;

        r0.<android.os.PowerManager$WakeLock: int mExternalCount> = $i6;

     label04:
        $z0 = r0.<android.os.PowerManager$WakeLock: boolean mRefCounted>;

        if $z0 == 0 goto label05;

        $i4 = r0.<android.os.PowerManager$WakeLock: int mInternalCount>;

        if $i4 != 0 goto label11;

     label05:
        $r3 = r0.<android.os.PowerManager$WakeLock: android.os.PowerManager this$0>;

        $r5 = $r3.<android.os.PowerManager: android.os.Handler mHandler>;

        $r4 = r0.<android.os.PowerManager$WakeLock: java.lang.Runnable mReleaser>;

        virtualinvoke $r5.<android.os.Handler: void removeCallbacks(java.lang.Runnable)>($r4);

        $z1 = r0.<android.os.PowerManager$WakeLock: boolean mHeld>;

        if $z1 == 0 goto label11;

        $r10 = r0.<android.os.PowerManager$WakeLock: java.lang.String mTraceName>;

        staticinvoke <android.os.Trace: void asyncTraceEnd(long,java.lang.String,int)>(131072L, $r10, 0);

     label06:
        $r11 = r0.<android.os.PowerManager$WakeLock: android.os.PowerManager this$0>;

        $r13 = $r11.<android.os.PowerManager: android.os.IPowerManager mService>;

        $r12 = r0.<android.os.PowerManager$WakeLock: android.os.IBinder mToken>;

        interfaceinvoke $r13.<android.os.IPowerManager: void releaseWakeLock(android.os.IBinder,int)>($r12, i0);

     label07:
        r0.<android.os.PowerManager$WakeLock: boolean mHeld> = 0;

     label08:
        goto label11;

     label09:
        $r14 := @caughtexception;

     label10:
        $r15 = virtualinvoke $r14.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r15;

     label11:
        $z2 = r0.<android.os.PowerManager$WakeLock: boolean mRefCounted>;

        if $z2 == 0 goto label14;

        $i3 = r0.<android.os.PowerManager$WakeLock: int mExternalCount>;

        if $i3 < 0 goto label13;

     label12:
        goto label14;

     label13:
        r2 = new java.lang.RuntimeException;

        r18 = new java.lang.StringBuilder;

        specialinvoke r18.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("WakeLock under-locked ");

        $r7 = r0.<android.os.PowerManager$WakeLock: java.lang.String mTag>;

        virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke r18.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r2.<java.lang.RuntimeException: void <init>(java.lang.String)>($r9);

        throw r2;

     label14:
        exitmonitor r1;

     label15:
        return;

     label16:
        $r16 := @caughtexception;

     label17:
        exitmonitor r1;

     label18:
        throw $r16;

        catch java.lang.Throwable from label01 to label02 with label16;
        catch java.lang.Throwable from label03 to label04 with label16;
        catch java.lang.Throwable from label04 to label05 with label16;
        catch java.lang.Throwable from label05 to label06 with label16;
        catch android.os.RemoteException from label06 to label07 with label09;
        catch java.lang.Throwable from label06 to label07 with label16;
        catch java.lang.Throwable from label07 to label08 with label16;
        catch java.lang.Throwable from label10 to label11 with label16;
        catch java.lang.Throwable from label11 to label12 with label16;
        catch java.lang.Throwable from label13 to label14 with label16;
        catch java.lang.Throwable from label14 to label15 with label16;
        catch java.lang.Throwable from label17 to label18 with label16;
    }

    public void setHistoryTag(java.lang.String)
    {
        android.os.PowerManager$WakeLock r0;
        java.lang.String r1;

        r0 := @this: android.os.PowerManager$WakeLock;

        r1 := @parameter0: java.lang.String;

        r0.<android.os.PowerManager$WakeLock: java.lang.String mHistoryTag> = r1;

        return;
    }

    public void setReferenceCounted(boolean)
    {
        android.os.PowerManager$WakeLock r0;
        boolean z0;
        android.os.IBinder r1;
        java.lang.Throwable $r3;

        r0 := @this: android.os.PowerManager$WakeLock;

        z0 := @parameter0: boolean;

        r1 = r0.<android.os.PowerManager$WakeLock: android.os.IBinder mToken>;

        entermonitor r1;

     label1:
        r0.<android.os.PowerManager$WakeLock: boolean mRefCounted> = z0;

        exitmonitor r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void setTag(java.lang.String)
    {
        android.os.PowerManager$WakeLock r0;
        java.lang.String r1;

        r0 := @this: android.os.PowerManager$WakeLock;

        r1 := @parameter0: java.lang.String;

        r0.<android.os.PowerManager$WakeLock: java.lang.String mTag> = r1;

        return;
    }

    public void setUnimportantForLogging(boolean)
    {
        android.os.PowerManager$WakeLock r0;
        boolean z0;
        int $i0, $i1, $i2, $i3;

        r0 := @this: android.os.PowerManager$WakeLock;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        $i2 = r0.<android.os.PowerManager$WakeLock: int mFlags>;

        $i3 = $i2 | 1073741824;

        r0.<android.os.PowerManager$WakeLock: int mFlags> = $i3;

        goto label2;

     label1:
        $i0 = r0.<android.os.PowerManager$WakeLock: int mFlags>;

        $i1 = $i0 & -1073741825;

        r0.<android.os.PowerManager$WakeLock: int mFlags> = $i1;

     label2:
        return;
    }

    public void setWorkSource(android.os.WorkSource)
    {
        android.os.PowerManager$WakeLock r0;
        android.os.IBinder r1, $r7;
        boolean z0, z1, $z2, $z3, z4;
        android.os.WorkSource $r2, $r3, $r6, $r9, $r10, r14, r15, r17;
        android.os.PowerManager $r4;
        java.lang.String $r5;
        android.os.IPowerManager $r8;
        java.lang.Throwable $r11;
        android.os.RemoteException $r12;
        java.lang.RuntimeException $r13;

        r0 := @this: android.os.PowerManager$WakeLock;

        r14 := @parameter0: android.os.WorkSource;

        r1 = r0.<android.os.PowerManager$WakeLock: android.os.IBinder mToken>;

        entermonitor r1;

        r15 = r14;

        if r14 == null goto label04;

        r15 = r14;

     label01:
        $z3 = virtualinvoke r14.<android.os.WorkSource: boolean isEmpty()>();

        if $z3 == 0 goto label04;

     label02:
        r15 = null;

        goto label04;

     label03:
        $r11 := @caughtexception;

        goto label27;

     label04:
        z4 = 1;

        if r15 != null goto label10;

     label05:
        $r10 = r0.<android.os.PowerManager$WakeLock: android.os.WorkSource mWorkSource>;

        if $r10 == null goto label07;

     label06:
        goto label08;

     label07:
        z4 = 0;

     label08:
        r0.<android.os.PowerManager$WakeLock: android.os.WorkSource mWorkSource> = null;

     label09:
        goto label18;

     label10:
        $r2 = r0.<android.os.PowerManager$WakeLock: android.os.WorkSource mWorkSource>;

        if $r2 != null goto label14;

     label11:
        z4 = 1;

     label12:
        r17 = new android.os.WorkSource;

        specialinvoke r17.<android.os.WorkSource: void <init>(android.os.WorkSource)>(r15);

        r0.<android.os.PowerManager$WakeLock: android.os.WorkSource mWorkSource> = r17;

     label13:
        goto label18;

     label14:
        $r3 = r0.<android.os.PowerManager$WakeLock: android.os.WorkSource mWorkSource>;

        $z2 = virtualinvoke $r3.<android.os.WorkSource: boolean equals(java.lang.Object)>(r15);

        z0 = 1 ^ $z2;

     label15:
        z4 = z0;

        if z0 == 0 goto label18;

     label16:
        $r9 = r0.<android.os.PowerManager$WakeLock: android.os.WorkSource mWorkSource>;

        virtualinvoke $r9.<android.os.WorkSource: void set(android.os.WorkSource)>(r15);

     label17:
        z4 = z0;

     label18:
        if z4 == 0 goto label25;

     label19:
        z1 = r0.<android.os.PowerManager$WakeLock: boolean mHeld>;

     label20:
        if z1 == 0 goto label25;

     label21:
        $r4 = r0.<android.os.PowerManager$WakeLock: android.os.PowerManager this$0>;

        $r8 = $r4.<android.os.PowerManager: android.os.IPowerManager mService>;

        $r7 = r0.<android.os.PowerManager$WakeLock: android.os.IBinder mToken>;

        $r6 = r0.<android.os.PowerManager$WakeLock: android.os.WorkSource mWorkSource>;

        $r5 = r0.<android.os.PowerManager$WakeLock: java.lang.String mHistoryTag>;

        interfaceinvoke $r8.<android.os.IPowerManager: void updateWakeLockWorkSource(android.os.IBinder,android.os.WorkSource,java.lang.String)>($r7, $r6, $r5);

     label22:
        goto label25;

     label23:
        $r12 := @caughtexception;

     label24:
        $r13 = virtualinvoke $r12.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r13;

     label25:
        exitmonitor r1;

     label26:
        return;

     label27:
        exitmonitor r1;

     label28:
        throw $r11;

        catch java.lang.Throwable from label01 to label02 with label03;
        catch java.lang.Throwable from label05 to label06 with label03;
        catch java.lang.Throwable from label08 to label09 with label03;
        catch java.lang.Throwable from label10 to label11 with label03;
        catch java.lang.Throwable from label12 to label13 with label03;
        catch java.lang.Throwable from label14 to label15 with label03;
        catch java.lang.Throwable from label16 to label17 with label03;
        catch java.lang.Throwable from label19 to label20 with label03;
        catch android.os.RemoteException from label21 to label22 with label23;
        catch java.lang.Throwable from label21 to label22 with label03;
        catch java.lang.Throwable from label24 to label25 with label03;
        catch java.lang.Throwable from label25 to label26 with label03;
        catch java.lang.Throwable from label27 to label28 with label03;
    }

    public java.lang.String toString()
    {
        android.os.PowerManager$WakeLock r0;
        android.os.IBinder r1;
        int $i0, $i1;
        java.lang.String $r3, r12;
        boolean $z0;
        java.lang.Throwable $r10;
        java.lang.StringBuilder r11;

        r0 := @this: android.os.PowerManager$WakeLock;

        r1 = r0.<android.os.PowerManager$WakeLock: android.os.IBinder mToken>;

        entermonitor r1;

     label1:
        r11 = new java.lang.StringBuilder;

        specialinvoke r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("WakeLock{");

        $i0 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r0);

        $r3 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        virtualinvoke r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        virtualinvoke r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" held=");

        $z0 = r0.<android.os.PowerManager$WakeLock: boolean mHeld>;

        virtualinvoke r11.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        virtualinvoke r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", refCount=");

        $i1 = r0.<android.os.PowerManager$WakeLock: int mInternalCount>;

        virtualinvoke r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        r12 = virtualinvoke r11.<java.lang.StringBuilder: java.lang.String toString()>();

        exitmonitor r1;

     label2:
        return r12;

     label3:
        $r10 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r10;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public java.lang.Runnable wrap(java.lang.Runnable)
    {
        android.os.PowerManager$WakeLock r0;
        java.lang.Runnable r1;
        android.os._$$Lambda$PowerManager$WakeLock$VvFzmRZ4ZGlXx7u3lSAJ_T_YUjw $r2;

        r0 := @this: android.os.PowerManager$WakeLock;

        r1 := @parameter0: java.lang.Runnable;

        virtualinvoke r0.<android.os.PowerManager$WakeLock: void acquire()>();

        $r2 = new android.os._$$Lambda$PowerManager$WakeLock$VvFzmRZ4ZGlXx7u3lSAJ_T_YUjw;

        specialinvoke $r2.<android.os._$$Lambda$PowerManager$WakeLock$VvFzmRZ4ZGlXx7u3lSAJ_T_YUjw: void <init>(android.os.PowerManager$WakeLock,java.lang.Runnable)>(r0, r1);

        return $r2;
    }
}
