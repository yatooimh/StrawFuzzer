public abstract class android.os.PowerManagerInternal extends java.lang.Object
{
    public static final int BOOST_DISPLAY_UPDATE_IMMINENT;
    public static final int BOOST_INTERACTION;
    public static final int MODE_DEVICE_IDLE;
    public static final int MODE_DISPLAY_INACTIVE;
    public static final int MODE_DOUBLE_TAP_TO_WAKE;
    public static final int MODE_EXPENSIVE_RENDERING;
    public static final int MODE_FIXED_PERFORMANCE;
    public static final int MODE_INTERACTIVE;
    public static final int MODE_LAUNCH;
    public static final int MODE_LOW_POWER;
    public static final int MODE_SUSTAINED_PERFORMANCE;
    public static final int MODE_VR;
    public static final int WAKEFULNESS_ASLEEP;
    public static final int WAKEFULNESS_AWAKE;
    public static final int WAKEFULNESS_DOZING;
    public static final int WAKEFULNESS_DREAMING;

    public void <init>()
    {
        android.os.PowerManagerInternal r0;

        r0 := @this: android.os.PowerManagerInternal;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static boolean isInteractive(int)
    {
        int i0;
        boolean z1;

        i0 := @parameter0: int;

        z1 = 1;

        if i0 == 1 goto label2;

        if i0 != 2 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    public static int wakefulnessToProtoEnum(int)
    {
        int i0;

        i0 := @parameter0: int;

        if i0 == 0 goto label4;

        if i0 == 1 goto label3;

        if i0 == 2 goto label2;

        if i0 == 3 goto label1;

        return i0;

     label1:
        return 3;

     label2:
        return 2;

     label3:
        return 1;

     label4:
        return 0;
    }

    public static java.lang.String wakefulnessToString(int)
    {
        int i0;
        java.lang.String $r0;

        i0 := @parameter0: int;

        if i0 == 0 goto label4;

        if i0 == 1 goto label3;

        if i0 == 2 goto label2;

        if i0 == 3 goto label1;

        $r0 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0);

        return $r0;

     label1:
        return "Dozing";

     label2:
        return "Dreaming";

     label3:
        return "Awake";

     label4:
        return "Asleep";
    }

    public abstract void finishUidChanges();

    public abstract android.os.PowerManager$WakeData getLastWakeup();

    public abstract android.os.PowerSaveState getLowPowerState(int);

    public abstract void powerHint(int, int);

    public void registerLowPowerModeObserver(int, java.util.function.Consumer)
    {
        android.os.PowerManagerInternal r0;
        int i0;
        java.util.function.Consumer r1;
        android.os.PowerManagerInternal$1 $r2;

        r0 := @this: android.os.PowerManagerInternal;

        i0 := @parameter0: int;

        r1 := @parameter1: java.util.function.Consumer;

        $r2 = new android.os.PowerManagerInternal$1;

        specialinvoke $r2.<android.os.PowerManagerInternal$1: void <init>(android.os.PowerManagerInternal,int,java.util.function.Consumer)>(r0, i0, r1);

        virtualinvoke r0.<android.os.PowerManagerInternal: void registerLowPowerModeObserver(android.os.PowerManagerInternal$LowPowerModeListener)>($r2);

        return;
    }

    public abstract void registerLowPowerModeObserver(android.os.PowerManagerInternal$LowPowerModeListener);

    public abstract boolean setDeviceIdleMode(boolean);

    public abstract void setDeviceIdleTempWhitelist(int[]);

    public abstract void setDeviceIdleWhitelist(int[]);

    public abstract void setDozeOverrideFromDreamManager(int, int);

    public abstract void setDrawWakeLockOverrideFromSidekick(boolean);

    public abstract boolean setLightDeviceIdleMode(boolean);

    public abstract void setMaximumScreenOffTimeoutFromDeviceAdmin(int, long);

    public abstract void setPowerBoost(int, int);

    public abstract void setPowerMode(int, boolean);

    public abstract void setScreenBrightnessOverrideFromWindowManager(float);

    public abstract void setUserActivityTimeoutOverrideFromWindowManager(long);

    public abstract void setUserInactiveOverrideFromWindowManager();

    public abstract void startUidChanges();

    public abstract void uidActive(int);

    public abstract void uidGone(int);

    public abstract void uidIdle(int);

    public abstract void updateUidProcState(int, int);

    public abstract boolean wasDeviceIdleFor(long);

    public static void <clinit>()
    {
        <android.os.PowerManagerInternal: int WAKEFULNESS_DREAMING> = 2;

        <android.os.PowerManagerInternal: int WAKEFULNESS_DOZING> = 3;

        <android.os.PowerManagerInternal: int WAKEFULNESS_AWAKE> = 1;

        <android.os.PowerManagerInternal: int WAKEFULNESS_ASLEEP> = 0;

        <android.os.PowerManagerInternal: int MODE_VR> = 4;

        <android.os.PowerManagerInternal: int MODE_SUSTAINED_PERFORMANCE> = 2;

        <android.os.PowerManagerInternal: int MODE_LOW_POWER> = 1;

        <android.os.PowerManagerInternal: int MODE_LAUNCH> = 5;

        <android.os.PowerManagerInternal: int MODE_INTERACTIVE> = 7;

        <android.os.PowerManagerInternal: int MODE_FIXED_PERFORMANCE> = 3;

        <android.os.PowerManagerInternal: int MODE_EXPENSIVE_RENDERING> = 6;

        <android.os.PowerManagerInternal: int MODE_DOUBLE_TAP_TO_WAKE> = 0;

        <android.os.PowerManagerInternal: int MODE_DISPLAY_INACTIVE> = 9;

        <android.os.PowerManagerInternal: int MODE_DEVICE_IDLE> = 8;

        <android.os.PowerManagerInternal: int BOOST_INTERACTION> = 0;

        <android.os.PowerManagerInternal: int BOOST_DISPLAY_UPDATE_IMMINENT> = 1;

        return;
    }
}
