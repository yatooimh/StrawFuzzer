public class android.os.PowerWhitelistManager extends java.lang.Object
{
    public static final int EVENT_MMS;
    public static final int EVENT_SMS;
    public static final int EVENT_UNSPECIFIED;
    private final android.content.Context mContext;
    private final android.os.IDeviceIdleController mService;

    public void <init>(android.content.Context)
    {
        android.os.PowerWhitelistManager r0;
        android.content.Context r1;
        java.lang.Object $r2;
        android.os.DeviceIdleManager $r3;
        android.os.IDeviceIdleController $r4;

        r0 := @this: android.os.PowerWhitelistManager;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.os.PowerWhitelistManager: android.content.Context mContext> = r1;

        $r2 = virtualinvoke r1.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/os/DeviceIdleManager;");

        $r3 = (android.os.DeviceIdleManager) $r2;

        $r4 = virtualinvoke $r3.<android.os.DeviceIdleManager: android.os.IDeviceIdleController getService()>();

        r0.<android.os.PowerWhitelistManager: android.os.IDeviceIdleController mService> = $r4;

        return;
    }

    public void addToWhitelist(java.lang.String)
    {
        android.os.PowerWhitelistManager r0;
        java.lang.String r1;
        java.util.List $r2;

        r0 := @this: android.os.PowerWhitelistManager;

        r1 := @parameter0: java.lang.String;

        $r2 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>(r1);

        virtualinvoke r0.<android.os.PowerWhitelistManager: void addToWhitelist(java.util.List)>($r2);

        return;
    }

    public void addToWhitelist(java.util.List)
    {
        android.os.PowerWhitelistManager r0;
        android.os.IDeviceIdleController $r1;
        android.os.RemoteException $r2;
        java.lang.RuntimeException $r3;
        java.util.List r4;

        r0 := @this: android.os.PowerWhitelistManager;

        r4 := @parameter0: java.util.List;

     label1:
        $r1 = r0.<android.os.PowerWhitelistManager: android.os.IDeviceIdleController mService>;

        interfaceinvoke $r1.<android.os.IDeviceIdleController: int addPowerSaveWhitelistApps(java.util.List)>(r4);

     label2:
        return;

     label3:
        $r2 := @caughtexception;

        $r3 = virtualinvoke $r2.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r3;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public int[] getWhitelistedAppIds(boolean)
    {
        android.os.PowerWhitelistManager r0;
        boolean z0;
        android.os.IDeviceIdleController $r1, $r2;
        int[] $r3, r6;
        android.os.RemoteException $r4;
        java.lang.RuntimeException $r5;

        r0 := @this: android.os.PowerWhitelistManager;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label2;

     label1:
        $r2 = r0.<android.os.PowerWhitelistManager: android.os.IDeviceIdleController mService>;

        $r3 = interfaceinvoke $r2.<android.os.IDeviceIdleController: int[] getAppIdWhitelist()>();

        return $r3;

     label2:
        $r1 = r0.<android.os.PowerWhitelistManager: android.os.IDeviceIdleController mService>;

        r6 = interfaceinvoke $r1.<android.os.IDeviceIdleController: int[] getAppIdWhitelistExceptIdle()>();

     label3:
        return r6;

     label4:
        $r4 := @caughtexception;

        $r5 = virtualinvoke $r4.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r5;

        catch android.os.RemoteException from label1 to label2 with label4;
        catch android.os.RemoteException from label2 to label3 with label4;
    }

    public boolean isWhitelisted(java.lang.String, boolean)
    {
        android.os.PowerWhitelistManager r0;
        android.os.IDeviceIdleController $r1, $r2;
        boolean $z0, z1, z2;
        android.os.RemoteException $r3;
        java.lang.RuntimeException $r4;
        java.lang.String r5;

        r0 := @this: android.os.PowerWhitelistManager;

        r5 := @parameter0: java.lang.String;

        z1 := @parameter1: boolean;

        if z1 == 0 goto label2;

     label1:
        $r2 = r0.<android.os.PowerWhitelistManager: android.os.IDeviceIdleController mService>;

        $z0 = interfaceinvoke $r2.<android.os.IDeviceIdleController: boolean isPowerSaveWhitelistApp(java.lang.String)>(r5);

        return $z0;

     label2:
        $r1 = r0.<android.os.PowerWhitelistManager: android.os.IDeviceIdleController mService>;

        z2 = interfaceinvoke $r1.<android.os.IDeviceIdleController: boolean isPowerSaveWhitelistExceptIdleApp(java.lang.String)>(r5);

     label3:
        return z2;

     label4:
        $r3 := @caughtexception;

        $r4 = virtualinvoke $r3.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r4;

        catch android.os.RemoteException from label1 to label2 with label4;
        catch android.os.RemoteException from label2 to label3 with label4;
    }

    public void whitelistAppTemporarily(java.lang.String, long)
    {
        android.os.PowerWhitelistManager r0;
        long l0;
        java.lang.StringBuilder $r1;
        int $i1, $i2;
        java.lang.String $r3, r9, r11;
        android.content.Context $r5;
        android.os.IDeviceIdleController $r6;
        android.os.RemoteException $r7;
        java.lang.RuntimeException $r8;

        r0 := @this: android.os.PowerWhitelistManager;

        r9 := @parameter0: java.lang.String;

        l0 := @parameter1: long;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("from:");

        $i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r3 = staticinvoke <android.os.UserHandle: java.lang.String formatUid(int)>($i1);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        r11 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

     label1:
        $r6 = r0.<android.os.PowerWhitelistManager: android.os.IDeviceIdleController mService>;

        $r5 = r0.<android.os.PowerWhitelistManager: android.content.Context mContext>;

        $i2 = virtualinvoke $r5.<android.content.Context: int getUserId()>();

        interfaceinvoke $r6.<android.os.IDeviceIdleController: void addPowerSaveTempWhitelistApp(java.lang.String,long,int,java.lang.String)>(r9, l0, $i2, r11);

     label2:
        return;

     label3:
        $r7 := @caughtexception;

        $r8 = virtualinvoke $r7.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r8;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public long whitelistAppTemporarilyForEvent(java.lang.String, int, java.lang.String)
    {
        android.os.PowerWhitelistManager r0;
        int i0, $i2, $i3, $i5;
        java.lang.String r1, r10;
        long l1, $l4, $l6;
        android.content.Context $r2, $r4, $r6;
        android.os.IDeviceIdleController $r3, $r5, $r7;
        android.os.RemoteException $r8;
        java.lang.RuntimeException $r9;

        r0 := @this: android.os.PowerWhitelistManager;

        r10 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        if i0 == 1 goto label4;

        if i0 == 2 goto label3;

     label1:
        $r7 = r0.<android.os.PowerWhitelistManager: android.os.IDeviceIdleController mService>;

        $r6 = r0.<android.os.PowerWhitelistManager: android.content.Context mContext>;

        $i5 = virtualinvoke $r6.<android.content.Context: int getUserId()>();

        $l6 = interfaceinvoke $r7.<android.os.IDeviceIdleController: long whitelistAppTemporarily(java.lang.String,int,java.lang.String)>(r10, $i5, r1);

        return $l6;

     label2:
        $r8 := @caughtexception;

        goto label6;

     label3:
        $r5 = r0.<android.os.PowerWhitelistManager: android.os.IDeviceIdleController mService>;

        $r4 = r0.<android.os.PowerWhitelistManager: android.content.Context mContext>;

        $i3 = virtualinvoke $r4.<android.content.Context: int getUserId()>();

        $l4 = interfaceinvoke $r5.<android.os.IDeviceIdleController: long addPowerSaveTempWhitelistAppForMms(java.lang.String,int,java.lang.String)>(r10, $i3, r1);

        return $l4;

     label4:
        $r3 = r0.<android.os.PowerWhitelistManager: android.os.IDeviceIdleController mService>;

        $r2 = r0.<android.os.PowerWhitelistManager: android.content.Context mContext>;

        $i2 = virtualinvoke $r2.<android.content.Context: int getUserId()>();

        l1 = interfaceinvoke $r3.<android.os.IDeviceIdleController: long addPowerSaveTempWhitelistAppForSms(java.lang.String,int,java.lang.String)>(r10, $i2, r1);

     label5:
        return l1;

     label6:
        $r9 = virtualinvoke $r8.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r9;

        catch android.os.RemoteException from label1 to label2 with label2;
        catch android.os.RemoteException from label3 to label4 with label2;
        catch android.os.RemoteException from label4 to label5 with label2;
    }

    public static void <clinit>()
    {
        <android.os.PowerWhitelistManager: int EVENT_UNSPECIFIED> = 0;

        <android.os.PowerWhitelistManager: int EVENT_SMS> = 1;

        <android.os.PowerWhitelistManager: int EVENT_MMS> = 2;

        return;
    }
}
