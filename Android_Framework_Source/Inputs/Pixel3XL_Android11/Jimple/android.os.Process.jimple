public class android.os.Process extends java.lang.Object
{
    public static final int AUDIOSERVER_UID;
    public static final int BLUETOOTH_UID;
    public static final int CAMERASERVER_UID;
    public static final int CLAT_UID;
    public static final int CREDSTORE_UID;
    public static final int DNS_TETHER_UID;
    public static final int DRM_UID;
    public static final int EXT_DATA_RW_GID;
    public static final int EXT_OBB_RW_GID;
    public static final int FIRST_APPLICATION_CACHE_GID;
    public static final int FIRST_APPLICATION_UID;
    public static final int FIRST_APP_ZYGOTE_ISOLATED_UID;
    public static final int FIRST_ISOLATED_UID;
    public static final int FIRST_SHARED_APPLICATION_GID;
    public static final int FSVERITY_CERT_UID;
    public static final int INCIDENTD_UID;
    public static final int INET_GID;
    public static final int INVALID_UID;
    public static final int KEYSTORE_UID;
    public static final int LAST_APPLICATION_CACHE_GID;
    public static final int LAST_APPLICATION_UID;
    public static final int LAST_APP_ZYGOTE_ISOLATED_UID;
    public static final int LAST_ISOLATED_UID;
    public static final int LAST_SHARED_APPLICATION_GID;
    private static final java.lang.String LOG_TAG;
    public static final int LOG_UID;
    public static final int MEDIA_RW_GID;
    public static final int MEDIA_UID;
    public static final int NETWORK_STACK_UID;
    public static final int NFC_UID;
    public static final int NOBODY_UID;
    public static final int NUM_UIDS_PER_APP_ZYGOTE;
    public static final int OTA_UPDATE_UID;
    public static final int PACKAGE_INFO_GID;
    public static final int PHONE_UID;
    private static final int PIDFD_SUPPORTED;
    private static final int PIDFD_UNKNOWN;
    private static final int PIDFD_UNSUPPORTED;
    public static final int PROC_CHAR;
    public static final int PROC_COMBINE;
    public static final int PROC_NEWLINE_TERM;
    public static final int PROC_OUT_FLOAT;
    public static final int PROC_OUT_LONG;
    public static final int PROC_OUT_STRING;
    public static final int PROC_PARENS;
    public static final int PROC_QUOTES;
    public static final int PROC_SPACE_TERM;
    public static final int PROC_TAB_TERM;
    public static final int PROC_TERM_MASK;
    public static final int PROC_ZERO_TERM;
    public static final int ROOT_UID;
    public static final int SCHED_BATCH;
    public static final int SCHED_FIFO;
    public static final int SCHED_IDLE;
    public static final int SCHED_OTHER;
    public static final int SCHED_RESET_ON_FORK;
    public static final int SCHED_RR;
    public static final int SDCARD_RW_GID;
    public static final int SE_UID;
    public static final int SHARED_RELRO_UID;
    public static final int SHARED_USER_GID;
    public static final int SHELL_UID;
    public static final int SIGNAL_KILL;
    public static final int SIGNAL_QUIT;
    public static final int SIGNAL_USR1;
    public static final int STATSD_UID;
    public static final int SYSTEM_UID;
    public static final int THREAD_GROUP_AUDIO_APP;
    public static final int THREAD_GROUP_AUDIO_SYS;
    public static final int THREAD_GROUP_BACKGROUND;
    public static final int THREAD_GROUP_DEFAULT;
    private static final int THREAD_GROUP_FOREGROUND;
    public static final int THREAD_GROUP_RESTRICTED;
    public static final int THREAD_GROUP_RT_APP;
    public static final int THREAD_GROUP_SYSTEM;
    public static final int THREAD_GROUP_TOP_APP;
    public static final int THREAD_PRIORITY_AUDIO;
    public static final int THREAD_PRIORITY_BACKGROUND;
    public static final int THREAD_PRIORITY_DEFAULT;
    public static final int THREAD_PRIORITY_DISPLAY;
    public static final int THREAD_PRIORITY_FOREGROUND;
    public static final int THREAD_PRIORITY_LESS_FAVORABLE;
    public static final int THREAD_PRIORITY_LOWEST;
    public static final int THREAD_PRIORITY_MORE_FAVORABLE;
    public static final int THREAD_PRIORITY_URGENT_AUDIO;
    public static final int THREAD_PRIORITY_URGENT_DISPLAY;
    public static final int THREAD_PRIORITY_VIDEO;
    public static final int VPN_UID;
    public static final int WEBVIEW_ZYGOTE_UID;
    public static final int WIFI_UID;
    public static final int ZYGOTE_POLICY_FLAG_BATCH_LAUNCH;
    public static final int ZYGOTE_POLICY_FLAG_EMPTY;
    public static final int ZYGOTE_POLICY_FLAG_LATENCY_SENSITIVE;
    public static final int ZYGOTE_POLICY_FLAG_SYSTEM_PROCESS;
    public static final android.os.ZygoteProcess ZYGOTE_PROCESS;
    private static int sPidFdSupported;
    private static long sStartElapsedRealtime;
    private static long sStartUptimeMillis;

    static void <clinit>()
    {
        android.os.ZygoteProcess $r0;

        <android.os.Process: int ZYGOTE_POLICY_FLAG_SYSTEM_PROCESS> = 4;

        <android.os.Process: int ZYGOTE_POLICY_FLAG_LATENCY_SENSITIVE> = 1;

        <android.os.Process: int ZYGOTE_POLICY_FLAG_EMPTY> = 0;

        <android.os.Process: int ZYGOTE_POLICY_FLAG_BATCH_LAUNCH> = 2;

        <android.os.Process: int WIFI_UID> = 1010;

        <android.os.Process: int WEBVIEW_ZYGOTE_UID> = 1053;

        <android.os.Process: int VPN_UID> = 1016;

        <android.os.Process: int THREAD_PRIORITY_VIDEO> = -10;

        <android.os.Process: int THREAD_PRIORITY_URGENT_DISPLAY> = -8;

        <android.os.Process: int THREAD_PRIORITY_URGENT_AUDIO> = -19;

        <android.os.Process: int THREAD_PRIORITY_MORE_FAVORABLE> = -1;

        <android.os.Process: int THREAD_PRIORITY_LOWEST> = 19;

        <android.os.Process: int THREAD_PRIORITY_LESS_FAVORABLE> = 1;

        <android.os.Process: int THREAD_PRIORITY_FOREGROUND> = -2;

        <android.os.Process: int THREAD_PRIORITY_DISPLAY> = -4;

        <android.os.Process: int THREAD_PRIORITY_DEFAULT> = 0;

        <android.os.Process: int THREAD_PRIORITY_BACKGROUND> = 10;

        <android.os.Process: int THREAD_PRIORITY_AUDIO> = -16;

        <android.os.Process: int THREAD_GROUP_TOP_APP> = 5;

        <android.os.Process: int THREAD_GROUP_SYSTEM> = 2;

        <android.os.Process: int THREAD_GROUP_RT_APP> = 6;

        <android.os.Process: int THREAD_GROUP_RESTRICTED> = 7;

        <android.os.Process: int THREAD_GROUP_FOREGROUND> = 1;

        <android.os.Process: int THREAD_GROUP_DEFAULT> = -1;

        <android.os.Process: int THREAD_GROUP_BACKGROUND> = 0;

        <android.os.Process: int THREAD_GROUP_AUDIO_SYS> = 4;

        <android.os.Process: int THREAD_GROUP_AUDIO_APP> = 3;

        <android.os.Process: int SYSTEM_UID> = 1000;

        <android.os.Process: int STATSD_UID> = 1066;

        <android.os.Process: int SIGNAL_USR1> = 10;

        <android.os.Process: int SIGNAL_QUIT> = 3;

        <android.os.Process: int SIGNAL_KILL> = 9;

        <android.os.Process: int SHELL_UID> = 2000;

        <android.os.Process: int SHARED_USER_GID> = 9997;

        <android.os.Process: int SHARED_RELRO_UID> = 1037;

        <android.os.Process: int SE_UID> = 1068;

        <android.os.Process: int SDCARD_RW_GID> = 1015;

        <android.os.Process: int SCHED_RR> = 2;

        <android.os.Process: int SCHED_RESET_ON_FORK> = 1073741824;

        <android.os.Process: int SCHED_OTHER> = 0;

        <android.os.Process: int SCHED_IDLE> = 5;

        <android.os.Process: int SCHED_FIFO> = 1;

        <android.os.Process: int SCHED_BATCH> = 3;

        <android.os.Process: int ROOT_UID> = 0;

        <android.os.Process: int PROC_ZERO_TERM> = 0;

        <android.os.Process: int PROC_TERM_MASK> = 255;

        <android.os.Process: int PROC_TAB_TERM> = 9;

        <android.os.Process: int PROC_SPACE_TERM> = 32;

        <android.os.Process: int PROC_QUOTES> = 1024;

        <android.os.Process: int PROC_PARENS> = 512;

        <android.os.Process: int PROC_OUT_STRING> = 4096;

        <android.os.Process: int PROC_OUT_LONG> = 8192;

        <android.os.Process: int PROC_OUT_FLOAT> = 16384;

        <android.os.Process: int PROC_NEWLINE_TERM> = 10;

        <android.os.Process: int PROC_COMBINE> = 256;

        <android.os.Process: int PROC_CHAR> = 2048;

        <android.os.Process: int PIDFD_UNSUPPORTED> = 2;

        <android.os.Process: int PIDFD_UNKNOWN> = 0;

        <android.os.Process: int PIDFD_SUPPORTED> = 1;

        <android.os.Process: int PHONE_UID> = 1001;

        <android.os.Process: int PACKAGE_INFO_GID> = 1032;

        <android.os.Process: int OTA_UPDATE_UID> = 1061;

        <android.os.Process: int NUM_UIDS_PER_APP_ZYGOTE> = 100;

        <android.os.Process: int NOBODY_UID> = 9999;

        <android.os.Process: int NFC_UID> = 1027;

        <android.os.Process: int NETWORK_STACK_UID> = 1073;

        <android.os.Process: int MEDIA_UID> = 1013;

        <android.os.Process: int MEDIA_RW_GID> = 1023;

        <android.os.Process: int LOG_UID> = 1007;

        <android.os.Process: java.lang.String LOG_TAG> = "Process";

        <android.os.Process: int LAST_SHARED_APPLICATION_GID> = 59999;

        <android.os.Process: int LAST_ISOLATED_UID> = 99999;

        <android.os.Process: int LAST_APP_ZYGOTE_ISOLATED_UID> = 98999;

        <android.os.Process: int LAST_APPLICATION_UID> = 19999;

        <android.os.Process: int LAST_APPLICATION_CACHE_GID> = 29999;

        <android.os.Process: int KEYSTORE_UID> = 1017;

        <android.os.Process: int INVALID_UID> = -1;

        <android.os.Process: int INET_GID> = 3003;

        <android.os.Process: int INCIDENTD_UID> = 1067;

        <android.os.Process: int FSVERITY_CERT_UID> = 1075;

        <android.os.Process: int FIRST_SHARED_APPLICATION_GID> = 50000;

        <android.os.Process: int FIRST_ISOLATED_UID> = 99000;

        <android.os.Process: int FIRST_APP_ZYGOTE_ISOLATED_UID> = 90000;

        <android.os.Process: int FIRST_APPLICATION_UID> = 10000;

        <android.os.Process: int FIRST_APPLICATION_CACHE_GID> = 20000;

        <android.os.Process: int EXT_OBB_RW_GID> = 1079;

        <android.os.Process: int EXT_DATA_RW_GID> = 1078;

        <android.os.Process: int DRM_UID> = 1019;

        <android.os.Process: int DNS_TETHER_UID> = 1052;

        <android.os.Process: int CREDSTORE_UID> = 1076;

        <android.os.Process: int CLAT_UID> = 1029;

        <android.os.Process: int CAMERASERVER_UID> = 1047;

        <android.os.Process: int BLUETOOTH_UID> = 1002;

        <android.os.Process: int AUDIOSERVER_UID> = 1041;

        <android.os.Process: int sPidFdSupported> = 0;

        $r0 = new android.os.ZygoteProcess;

        specialinvoke $r0.<android.os.ZygoteProcess: void <init>()>();

        <android.os.Process: android.os.ZygoteProcess ZYGOTE_PROCESS> = $r0;

        return;
    }

    public void <init>()
    {
        android.os.Process r0;

        r0 := @this: android.os.Process;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static final native void enableFreezer(boolean);

    public static final native long getElapsedCpuTime();

    public static final native int[] getExclusiveCores();

    public static final native long getFreeMemory();

    public static final native int getGidForName(java.lang.String);

    public static final int getParentPid(int)
    {
        int i0, $i2;
        long[] r0;
        java.lang.StringBuilder $r2;
        java.lang.String $r6;
        java.lang.String[] $r7;
        long $l1;

        i0 := @parameter0: int;

        r0 = newarray (long)[1];

        r0[0] = -1L;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/proc/");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/status");

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = newarray (java.lang.String)[1];

        $r7[0] = "PPid:";

        staticinvoke <android.os.Process: void readProcLines(java.lang.String,java.lang.String[],long[])>($r6, $r7, r0);

        $l1 = r0[0];

        $i2 = (int) $l1;

        return $i2;
    }

    public static final native int[] getPids(java.lang.String, int[]);

    public static final native int[] getPidsForCommands(java.lang.String[]);

    public static final native int getProcessGroup(int) throws java.lang.IllegalArgumentException, java.lang.SecurityException;

    public static final native long getPss(int);

    public static final native long[] getRss(int);

    public static final long getStartElapsedRealtime()
    {
        long $l0;

        $l0 = <android.os.Process: long sStartElapsedRealtime>;

        return $l0;
    }

    public static final long getStartUptimeMillis()
    {
        long $l0;

        $l0 = <android.os.Process: long sStartUptimeMillis>;

        return $l0;
    }

    public static final int getThreadGroupLeader(int)
    {
        int i0, $i2;
        long[] r0;
        java.lang.StringBuilder $r2;
        java.lang.String $r6;
        java.lang.String[] $r7;
        long $l1;

        i0 := @parameter0: int;

        r0 = newarray (long)[1];

        r0[0] = -1L;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/proc/");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/status");

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = newarray (java.lang.String)[1];

        $r7[0] = "Tgid:";

        staticinvoke <android.os.Process: void readProcLines(java.lang.String,java.lang.String[],long[])>($r6, $r7, r0);

        $l1 = r0[0];

        $i2 = (int) $l1;

        return $i2;
    }

    public static final native int getThreadPriority(int) throws java.lang.IllegalArgumentException;

    public static final native int getThreadScheduler(int) throws java.lang.IllegalArgumentException;

    public static final native long getTotalMemory();

    public static final native int getUidForName(java.lang.String);

    public static final int getUidForPid(int)
    {
        int i0, $i2;
        long[] r0;
        java.lang.StringBuilder $r2;
        java.lang.String $r6;
        java.lang.String[] $r7;
        long $l1;

        i0 := @parameter0: int;

        r0 = newarray (long)[1];

        r0[0] = -1L;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/proc/");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/status");

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = newarray (java.lang.String)[1];

        $r7[0] = "Uid:";

        staticinvoke <android.os.Process: void readProcLines(java.lang.String,java.lang.String[],long[])>($r6, $r7, r0);

        $l1 = r0[0];

        $i2 = (int) $l1;

        return $i2;
    }

    public static final boolean is64Bit()
    {
        dalvik.system.VMRuntime $r0;
        boolean $z0;

        $r0 = staticinvoke <dalvik.system.VMRuntime: dalvik.system.VMRuntime getRuntime()>();

        $z0 = virtualinvoke $r0.<dalvik.system.VMRuntime: boolean is64Bit()>();

        return $z0;
    }

    public static boolean isApplicationUid(int)
    {
        int i0;
        boolean $z0;

        i0 := @parameter0: int;

        $z0 = staticinvoke <android.os.UserHandle: boolean isApp(int)>(i0);

        return $z0;
    }

    public static boolean isCoreUid(int)
    {
        int i0;
        boolean $z0;

        i0 := @parameter0: int;

        $z0 = staticinvoke <android.os.UserHandle: boolean isCore(int)>(i0);

        return $z0;
    }

    public static final boolean isIsolated()
    {
        int $i0;
        boolean $z0;

        $i0 = staticinvoke <android.os.Process: int myUid()>();

        $z0 = staticinvoke <android.os.Process: boolean isIsolated(int)>($i0);

        return $z0;
    }

    public static final boolean isIsolated(int)
    {
        int i0, i1;
        boolean z0;

        i0 := @parameter0: int;

        i1 = staticinvoke <android.os.UserHandle: int getAppId(int)>(i0);

        if i1 < 99000 goto label1;

        if i1 <= 99999 goto label2;

     label1:
        if i1 < 90000 goto label3;

        if i1 > 98999 goto label3;

     label2:
        z0 = 1;

        goto label4;

     label3:
        z0 = 0;

     label4:
        return z0;
    }

    public static final boolean isThreadInProcess(int, int)
    {
        int i0, i1, $i2;
        android.os.StrictMode$ThreadPolicy r0;
        boolean z0;
        java.lang.String $r5;
        java.lang.Throwable $r6;
        java.lang.Exception $r7;
        java.lang.StringBuilder r8;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r0 = staticinvoke <android.os.StrictMode: android.os.StrictMode$ThreadPolicy allowThreadDiskReads()>();

     label1:
        r8 = new java.lang.StringBuilder;

        specialinvoke r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/proc/");

        virtualinvoke r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/task/");

        virtualinvoke r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r5 = virtualinvoke r8.<java.lang.StringBuilder: java.lang.String toString()>();

        $i2 = <android.system.OsConstants: int F_OK>;

        z0 = staticinvoke <android.system.Os: boolean access(java.lang.String,int)>($r5, $i2);

     label2:
        if z0 == 0 goto label3;

        staticinvoke <android.os.StrictMode: void setThreadPolicy(android.os.StrictMode$ThreadPolicy)>(r0);

        return 1;

     label3:
        staticinvoke <android.os.StrictMode: void setThreadPolicy(android.os.StrictMode$ThreadPolicy)>(r0);

        return 0;

     label4:
        $r6 := @caughtexception;

        staticinvoke <android.os.StrictMode: void setThreadPolicy(android.os.StrictMode$ThreadPolicy)>(r0);

        throw $r6;

     label5:
        $r7 := @caughtexception;

        staticinvoke <android.os.StrictMode: void setThreadPolicy(android.os.StrictMode$ThreadPolicy)>(r0);

        return 0;

        catch java.lang.Exception from label1 to label2 with label5;
        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public static final void killProcess(int)
    {
        int i0;

        i0 := @parameter0: int;

        staticinvoke <android.os.Process: void sendSignal(int,int)>(i0, 9);

        return;
    }

    public static final native int killProcessGroup(int, int);

    public static final void killProcessQuiet(int)
    {
        int i0;

        i0 := @parameter0: int;

        staticinvoke <android.os.Process: void sendSignalQuiet(int,int)>(i0, 9);

        return;
    }

    public static final int myPid()
    {
        int $i0;

        $i0 = staticinvoke <android.system.Os: int getpid()>();

        return $i0;
    }

    public static final int myPpid()
    {
        int $i0;

        $i0 = staticinvoke <android.system.Os: int getppid()>();

        return $i0;
    }

    public static final int myTid()
    {
        int $i0;

        $i0 = staticinvoke <android.system.Os: int gettid()>();

        return $i0;
    }

    public static final int myUid()
    {
        int $i0;

        $i0 = staticinvoke <android.system.Os: int getuid()>();

        return $i0;
    }

    public static android.os.UserHandle myUserHandle()
    {
        int $i0, $i1;
        android.os.UserHandle $r0;

        $i0 = staticinvoke <android.os.Process: int myUid()>();

        $i1 = staticinvoke <android.os.UserHandle: int getUserId(int)>($i0);

        $r0 = staticinvoke <android.os.UserHandle: android.os.UserHandle of(int)>($i1);

        return $r0;
    }

    private static native int nativePidFdOpen(int, int) throws android.system.ErrnoException;

    public static final native boolean parseProcLine(byte[], int, int, int[], java.lang.String[], long[], float[]);

    public static final native boolean readProcFile(java.lang.String, int[], java.lang.String[], long[], float[]);

    public static final native void readProcLines(java.lang.String, java.lang.String[], long[]);

    public static final native void removeAllProcessGroups();

    public static final native void sendSignal(int, int);

    public static final native void sendSignalQuiet(int, int);

    public static final native void setArgV0(java.lang.String);

    public static final native void setCanSelfBackground(boolean);

    public static final native int setGid(int);

    public static final native void setProcessFrozen(int, int, boolean);

    public static final native void setProcessGroup(int, int) throws java.lang.IllegalArgumentException, java.lang.SecurityException;

    public static final void setStartTimes(long, long)
    {
        long l0, l1;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        <android.os.Process: long sStartElapsedRealtime> = l0;

        <android.os.Process: long sStartUptimeMillis> = l1;

        return;
    }

    public static final native boolean setSwappiness(int, boolean);

    public static final native void setThreadGroup(int, int) throws java.lang.IllegalArgumentException, java.lang.SecurityException;

    public static final native void setThreadGroupAndCpuset(int, int) throws java.lang.IllegalArgumentException, java.lang.SecurityException;

    public static final native void setThreadPriority(int) throws java.lang.IllegalArgumentException, java.lang.SecurityException;

    public static final native void setThreadPriority(int, int) throws java.lang.IllegalArgumentException, java.lang.SecurityException;

    public static final native void setThreadScheduler(int, int, int) throws java.lang.IllegalArgumentException;

    public static final native int setUid(int);

    public static android.os.Process$ProcessStartResult start(java.lang.String, java.lang.String, int, int, int[], int, int, int, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, int, boolean, long[], java.util.Map, java.util.Map, boolean, boolean, java.lang.String[])
    {
        java.lang.String r0, r1, r3, r4, r5, r6, r7, r8;
        int i0, i1, i2, i3, i4, i5;
        int[] r2;
        boolean z0, z1, z2;
        long[] r9;
        java.util.Map r10, r11;
        java.lang.String[] r12;
        android.os.ZygoteProcess $r13;
        android.os.Process$ProcessStartResult $r14;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        r2 := @parameter4: int[];

        i2 := @parameter5: int;

        i3 := @parameter6: int;

        i4 := @parameter7: int;

        r3 := @parameter8: java.lang.String;

        r4 := @parameter9: java.lang.String;

        r5 := @parameter10: java.lang.String;

        r6 := @parameter11: java.lang.String;

        r7 := @parameter12: java.lang.String;

        r8 := @parameter13: java.lang.String;

        i5 := @parameter14: int;

        z0 := @parameter15: boolean;

        r9 := @parameter16: long[];

        r10 := @parameter17: java.util.Map;

        r11 := @parameter18: java.util.Map;

        z1 := @parameter19: boolean;

        z2 := @parameter20: boolean;

        r12 := @parameter21: java.lang.String[];

        $r13 = <android.os.Process: android.os.ZygoteProcess ZYGOTE_PROCESS>;

        $r14 = virtualinvoke $r13.<android.os.ZygoteProcess: android.os.Process$ProcessStartResult start(java.lang.String,java.lang.String,int,int,int[],int,int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,boolean,long[],java.util.Map,java.util.Map,boolean,boolean,java.lang.String[])>(r0, r1, i0, i1, r2, i2, i3, i4, r3, r4, r5, r6, r7, r8, i5, z0, r9, r10, r11, z1, z2, r12);

        return $r14;
    }

    public static android.os.Process$ProcessStartResult startWebView(java.lang.String, java.lang.String, int, int, int[], int, int, int, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, long[], java.lang.String[])
    {
        java.lang.String r0, r1, r3, r4, r5, r6, r7, r8;
        int i0, i1, i2, i3, i4;
        int[] r2;
        long[] r9;
        java.lang.String[] r10;
        android.os.ZygoteProcess $r11;
        android.os.Process$ProcessStartResult $r12;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        r2 := @parameter4: int[];

        i2 := @parameter5: int;

        i3 := @parameter6: int;

        i4 := @parameter7: int;

        r3 := @parameter8: java.lang.String;

        r4 := @parameter9: java.lang.String;

        r5 := @parameter10: java.lang.String;

        r6 := @parameter11: java.lang.String;

        r7 := @parameter12: java.lang.String;

        r8 := @parameter13: java.lang.String;

        r9 := @parameter14: long[];

        r10 := @parameter15: java.lang.String[];

        $r11 = staticinvoke <android.webkit.WebViewZygote: android.os.ZygoteProcess getProcess()>();

        $r12 = virtualinvoke $r11.<android.os.ZygoteProcess: android.os.Process$ProcessStartResult start(java.lang.String,java.lang.String,int,int,int[],int,int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,boolean,long[],java.util.Map,java.util.Map,boolean,boolean,java.lang.String[])>(r0, r1, i0, i1, r2, i2, i3, i4, r3, r4, r5, r6, r7, r8, 0, 0, r9, null, null, 0, 0, r10);

        return $r12;
    }

    public static final boolean supportsProcesses()
    {
        return 1;
    }

    public static void waitForProcessDeath(int, int) throws java.lang.InterruptedException, java.util.concurrent.TimeoutException
    {
        int i0, i1, $i6, $i10, $i11, $i12, $i13, i14, i15, i16, i17, $i19, i20, i21, i22, i23;
        android.system.StructPollfd[] r0;
        long l2, l3, $l4, l24;
        byte $b5, b18;
        android.system.StructPollfd $r2, $r3, $r4, $r5, r31;
        short $s7, $s8, $s9;
        java.lang.Throwable $r7, $r8, $r9, $r11, $r12;
        java.io.FileDescriptor r14, r15, r18, r19, r20, r27, r28, r29, r30;
        boolean z0, z1, z2, z3;
        java.util.concurrent.TimeoutException r32, r34;
        java.lang.InterruptedException r33;
        android.system.ErrnoException r35, r36, r37;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i14 = <android.os.Process: int sPidFdSupported>;

        r14 = null;

        if i14 != 0 goto label16;

        i15 = -1;

        i16 = -1;

     label01:
        i17 = staticinvoke <android.os.Process: int nativePidFdOpen(int,int)>(i0, 0);

     label02:
        i16 = i17;

        i15 = i17;

     label03:
        <android.os.Process: int sPidFdSupported> = 1;

     label04:
        r14 = null;

        if i17 < 0 goto label16;

        r27 = new java.io.FileDescriptor;

        specialinvoke r27.<java.io.FileDescriptor: void <init>()>();

        r15 = r27;

        i15 = i17;

     label05:
        virtualinvoke r15.<java.io.FileDescriptor: void setInt$(int)>(i15);

        r14 = r15;

        goto label16;

     label06:
        $r9 := @caughtexception;

        goto label14;

     label07:
        $r12 := @caughtexception;

        i16 = i15;

     label08:
        r35 = (android.system.ErrnoException) $r12;

        $i13 = r35.<android.system.ErrnoException: int errno>;

        $i12 = <android.system.OsConstants: int ENOSYS>;

        if $i13 == $i12 goto label10;

     label09:
        b18 = 1;

        goto label11;

     label10:
        b18 = 2;

     label11:
        i16 = i15;

     label12:
        <android.os.Process: int sPidFdSupported> = b18;

     label13:
        r14 = null;

        if i15 < 0 goto label16;

        r28 = new java.io.FileDescriptor;

        specialinvoke r28.<java.io.FileDescriptor: void <init>()>();

        r15 = r28;

        goto label05;

     label14:
        if i16 < 0 goto label15;

        r29 = new java.io.FileDescriptor;

        specialinvoke r29.<java.io.FileDescriptor: void <init>()>();

        virtualinvoke r29.<java.io.FileDescriptor: void setInt$(int)>(i16);

     label15:
        throw $r9;

     label16:
        $i19 = <android.os.Process: int sPidFdSupported>;

        if $i19 != 2 goto label17;

        z0 = 1;

        goto label18;

     label17:
        z0 = 0;

     label18:
        z1 = z0;

        if z0 != 0 goto label70;

        r18 = r14;

        z2 = z0;

        if r14 != null goto label30;

        r19 = r14;

        r20 = r14;

     label19:
        i20 = staticinvoke <android.os.Process: int nativePidFdOpen(int,int)>(i0, 0);

     label20:
        if i20 < 0 goto label27;

        r19 = r14;

        r20 = r14;

     label21:
        r30 = new java.io.FileDescriptor;

        r18 = r30;

     label22:
        r19 = r14;

        r20 = r14;

     label23:
        specialinvoke r30.<java.io.FileDescriptor: void <init>()>();

     label24:
        r19 = r30;

        r20 = r30;

     label25:
        virtualinvoke r30.<java.io.FileDescriptor: void setInt$(int)>(i20);

     label26:
        z2 = z0;

        goto label30;

     label27:
        z2 = 1;

        r18 = r14;

        goto label30;

     label28:
        $r8 := @caughtexception;

        goto label67;

     label29:
        $r11 := @caughtexception;

        goto label55;

     label30:
        if r18 == null goto label69;

        r19 = r18;

        r20 = r18;

     label31:
        r0 = newarray (android.system.StructPollfd)[1];

     label32:
        r19 = r18;

        r20 = r18;

     label33:
        r31 = new android.system.StructPollfd;

     label34:
        r19 = r18;

        r20 = r18;

     label35:
        specialinvoke r31.<android.system.StructPollfd: void <init>()>();

     label36:
        r0[0] = r31;

        r19 = r18;

        r20 = r18;

     label37:
        $r2 = r0[0];

        $r2.<android.system.StructPollfd: java.io.FileDescriptor fd> = r18;

     label38:
        r19 = r18;

        r20 = r18;

     label39:
        $r3 = r0[0];

        $i6 = <android.system.OsConstants: int POLLIN>;

        $s7 = (short) $i6;

        $s8 = (short) $s7;

        $r3.<android.system.StructPollfd: short events> = $s8;

     label40:
        r19 = r18;

        r20 = r18;

     label41:
        $r4 = r0[0];

        $s9 = (short) 0;

        $r4.<android.system.StructPollfd: short revents> = $s9;

     label42:
        r19 = r18;

        r20 = r18;

     label43:
        $r5 = r0[0];

        $r5.<android.system.StructPollfd: java.lang.Object userData> = null;

     label44:
        r19 = r18;

        r20 = r18;

     label45:
        i21 = staticinvoke <android.system.Os: int poll(android.system.StructPollfd[],int)>(r0, i1);

     label46:
        if i21 <= 0 goto label48;

        if r18 == null goto label47;

        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.io.FileDescriptor)>(r18);

     label47:
        return;

     label48:
        if i21 == 0 goto label49;

        goto label69;

     label49:
        r19 = r18;

        r20 = r18;

     label50:
        r32 = new java.util.concurrent.TimeoutException;

     label51:
        r19 = r18;

        r20 = r18;

     label52:
        specialinvoke r32.<java.util.concurrent.TimeoutException: void <init>()>();

     label53:
        r19 = r18;

        r20 = r18;

     label54:
        throw r32;

     label55:
        r19 = r20;

     label56:
        r36 = (android.system.ErrnoException) $r11;

        i22 = r36.<android.system.ErrnoException: int errno>;

     label57:
        r19 = r20;

     label58:
        i23 = <android.system.OsConstants: int EINTR>;

     label59:
        if i22 == i23 goto label61;

        z1 = 1;

        z2 = 1;

        if r20 == null goto label70;

     label60:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.io.FileDescriptor)>(r20);

        z1 = z2;

        goto label70;

     label61:
        r19 = r20;

     label62:
        r33 = new java.lang.InterruptedException;

     label63:
        r19 = r20;

     label64:
        specialinvoke r33.<java.lang.InterruptedException: void <init>()>();

     label65:
        r19 = r20;

     label66:
        throw r33;

     label67:
        if r19 == null goto label68;

        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.io.FileDescriptor)>(r19);

     label68:
        throw $r8;

     label69:
        z1 = z2;

        if r18 == null goto label70;

        r20 = r18;

        goto label60;

     label70:
        if z1 == 0 goto label78;

        if i1 >= 0 goto label71;

        z3 = 1;

        goto label72;

     label71:
        z3 = 0;

     label72:
        l2 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        l3 = (long) i1;

        l24 = l2;

     label73:
        if z3 != 0 goto label74;

        $l4 = l3 + l2;

        $b5 = l24 cmp $l4;

        if $b5 >= 0 goto label78;

     label74:
        staticinvoke <android.system.Os: void kill(int,int)>(i0, 0);

     label75:
        goto label77;

     label76:
        $r7 := @caughtexception;

        r37 = (android.system.ErrnoException) $r7;

        $i11 = r37.<android.system.ErrnoException: int errno>;

        $i10 = <android.system.OsConstants: int ESRCH>;

        if $i11 != $i10 goto label77;

        return;

     label77:
        staticinvoke <java.lang.Thread: void sleep(long)>(1L);

        l24 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        goto label73;

     label78:
        r34 = new java.util.concurrent.TimeoutException;

        specialinvoke r34.<java.util.concurrent.TimeoutException: void <init>()>();

        throw r34;

        catch android.system.ErrnoException from label01 to label02 with label07;
        catch java.lang.Throwable from label01 to label02 with label06;
        catch android.system.ErrnoException from label03 to label04 with label07;
        catch java.lang.Throwable from label03 to label04 with label06;
        catch java.lang.Throwable from label08 to label09 with label06;
        catch java.lang.Throwable from label12 to label13 with label06;
        catch android.system.ErrnoException from label19 to label20 with label29;
        catch java.lang.Throwable from label19 to label20 with label28;
        catch android.system.ErrnoException from label21 to label22 with label29;
        catch java.lang.Throwable from label21 to label22 with label28;
        catch android.system.ErrnoException from label23 to label24 with label29;
        catch java.lang.Throwable from label23 to label24 with label28;
        catch android.system.ErrnoException from label25 to label26 with label29;
        catch java.lang.Throwable from label25 to label26 with label28;
        catch android.system.ErrnoException from label31 to label32 with label29;
        catch java.lang.Throwable from label31 to label32 with label28;
        catch android.system.ErrnoException from label33 to label34 with label29;
        catch java.lang.Throwable from label33 to label34 with label28;
        catch android.system.ErrnoException from label35 to label36 with label29;
        catch java.lang.Throwable from label35 to label36 with label28;
        catch android.system.ErrnoException from label37 to label38 with label29;
        catch java.lang.Throwable from label37 to label38 with label28;
        catch android.system.ErrnoException from label39 to label40 with label29;
        catch java.lang.Throwable from label39 to label40 with label28;
        catch android.system.ErrnoException from label41 to label42 with label29;
        catch java.lang.Throwable from label41 to label42 with label28;
        catch android.system.ErrnoException from label43 to label44 with label29;
        catch java.lang.Throwable from label43 to label44 with label28;
        catch android.system.ErrnoException from label45 to label46 with label29;
        catch java.lang.Throwable from label45 to label46 with label28;
        catch android.system.ErrnoException from label50 to label51 with label29;
        catch java.lang.Throwable from label50 to label51 with label28;
        catch android.system.ErrnoException from label52 to label53 with label29;
        catch java.lang.Throwable from label52 to label53 with label28;
        catch android.system.ErrnoException from label54 to label55 with label29;
        catch java.lang.Throwable from label54 to label55 with label28;
        catch java.lang.Throwable from label56 to label57 with label28;
        catch java.lang.Throwable from label58 to label59 with label28;
        catch java.lang.Throwable from label62 to label63 with label28;
        catch java.lang.Throwable from label64 to label65 with label28;
        catch java.lang.Throwable from label66 to label67 with label28;
        catch android.system.ErrnoException from label74 to label75 with label76;
    }
}
