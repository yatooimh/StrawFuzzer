public class android.os.RecoverySystem extends java.lang.Object
{
    private static final java.lang.String ACTION_EUICC_FACTORY_RESET;
    private static final java.lang.String ACTION_EUICC_REMOVE_INVISIBLE_SUBSCRIPTIONS;
    public static final java.io.File BLOCK_MAP_FILE;
    private static final long DEFAULT_EUICC_FACTORY_RESET_TIMEOUT_MILLIS;
    private static final long DEFAULT_EUICC_REMOVING_INVISIBLE_PROFILES_TIMEOUT_MILLIS;
    private static final java.io.File DEFAULT_KEYSTORE;
    private static final java.lang.String LAST_INSTALL_PATH;
    private static final java.lang.String LAST_PREFIX;
    private static final java.io.File LOG_FILE;
    private static final int LOG_FILE_MAX_LENGTH;
    private static final long MAX_EUICC_FACTORY_RESET_TIMEOUT_MILLIS;
    private static final long MAX_EUICC_REMOVING_INVISIBLE_PROFILES_TIMEOUT_MILLIS;
    private static final long MIN_EUICC_FACTORY_RESET_TIMEOUT_MILLIS;
    private static final long MIN_EUICC_REMOVING_INVISIBLE_PROFILES_TIMEOUT_MILLIS;
    private static final java.lang.String PACKAGE_NAME_EUICC_DATA_MANAGEMENT_CALLBACK;
    private static final long PUBLISH_PROGRESS_INTERVAL_MS;
    private static final java.io.File RECOVERY_DIR;
    private static final java.lang.String TAG;
    public static final java.io.File UNCRYPT_PACKAGE_FILE;
    public static final java.io.File UNCRYPT_STATUS_FILE;
    private static final java.lang.Object sRequestLock;
    private final android.os.IRecoverySystem mService;

    static void <clinit>()
    {
        java.io.File $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9;
        java.lang.Object $r10;

        <android.os.RecoverySystem: java.lang.String TAG> = "RecoverySystem";

        <android.os.RecoverySystem: long PUBLISH_PROGRESS_INTERVAL_MS> = 500L;

        <android.os.RecoverySystem: java.lang.String PACKAGE_NAME_EUICC_DATA_MANAGEMENT_CALLBACK> = "android";

        <android.os.RecoverySystem: long MIN_EUICC_REMOVING_INVISIBLE_PROFILES_TIMEOUT_MILLIS> = 15000L;

        <android.os.RecoverySystem: long MIN_EUICC_FACTORY_RESET_TIMEOUT_MILLIS> = 5000L;

        <android.os.RecoverySystem: long MAX_EUICC_REMOVING_INVISIBLE_PROFILES_TIMEOUT_MILLIS> = 90000L;

        <android.os.RecoverySystem: long MAX_EUICC_FACTORY_RESET_TIMEOUT_MILLIS> = 60000L;

        <android.os.RecoverySystem: int LOG_FILE_MAX_LENGTH> = 65536;

        <android.os.RecoverySystem: java.lang.String LAST_PREFIX> = "last_";

        <android.os.RecoverySystem: java.lang.String LAST_INSTALL_PATH> = "last_install";

        <android.os.RecoverySystem: long DEFAULT_EUICC_REMOVING_INVISIBLE_PROFILES_TIMEOUT_MILLIS> = 45000L;

        <android.os.RecoverySystem: long DEFAULT_EUICC_FACTORY_RESET_TIMEOUT_MILLIS> = 30000L;

        <android.os.RecoverySystem: java.lang.String ACTION_EUICC_REMOVE_INVISIBLE_SUBSCRIPTIONS> = "com.android.internal.action.EUICC_REMOVE_INVISIBLE_SUBSCRIPTIONS";

        <android.os.RecoverySystem: java.lang.String ACTION_EUICC_FACTORY_RESET> = "com.android.internal.action.EUICC_FACTORY_RESET";

        $r0 = new java.io.File;

        specialinvoke $r0.<java.io.File: void <init>(java.lang.String)>("/system/etc/security/otacerts.zip");

        <android.os.RecoverySystem: java.io.File DEFAULT_KEYSTORE> = $r0;

        $r1 = new java.io.File;

        specialinvoke $r1.<java.io.File: void <init>(java.lang.String)>("/cache/recovery");

        <android.os.RecoverySystem: java.io.File RECOVERY_DIR> = $r1;

        $r2 = new java.io.File;

        $r3 = <android.os.RecoverySystem: java.io.File RECOVERY_DIR>;

        specialinvoke $r2.<java.io.File: void <init>(java.io.File,java.lang.String)>($r3, "log");

        <android.os.RecoverySystem: java.io.File LOG_FILE> = $r2;

        $r4 = new java.io.File;

        $r5 = <android.os.RecoverySystem: java.io.File RECOVERY_DIR>;

        specialinvoke $r4.<java.io.File: void <init>(java.io.File,java.lang.String)>($r5, "block.map");

        <android.os.RecoverySystem: java.io.File BLOCK_MAP_FILE> = $r4;

        $r6 = new java.io.File;

        $r7 = <android.os.RecoverySystem: java.io.File RECOVERY_DIR>;

        specialinvoke $r6.<java.io.File: void <init>(java.io.File,java.lang.String)>($r7, "uncrypt_file");

        <android.os.RecoverySystem: java.io.File UNCRYPT_PACKAGE_FILE> = $r6;

        $r8 = new java.io.File;

        $r9 = <android.os.RecoverySystem: java.io.File RECOVERY_DIR>;

        specialinvoke $r8.<java.io.File: void <init>(java.io.File,java.lang.String)>($r9, "uncrypt_status");

        <android.os.RecoverySystem: java.io.File UNCRYPT_STATUS_FILE> = $r8;

        $r10 = new java.lang.Object;

        specialinvoke $r10.<java.lang.Object: void <init>()>();

        <android.os.RecoverySystem: java.lang.Object sRequestLock> = $r10;

        return;
    }

    public void <init>()
    {
        android.os.RecoverySystem r0;

        r0 := @this: android.os.RecoverySystem;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.os.RecoverySystem: android.os.IRecoverySystem mService> = null;

        return;
    }

    public void <init>(android.os.IRecoverySystem)
    {
        android.os.RecoverySystem r0;
        android.os.IRecoverySystem r1;

        r0 := @this: android.os.RecoverySystem;

        r1 := @parameter0: android.os.IRecoverySystem;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.os.RecoverySystem: android.os.IRecoverySystem mService> = r1;

        return;
    }

    private static transient void bootCommand(android.content.Context, java.lang.String[]) throws java.io.IOException
    {
        android.content.Context r0;
        java.lang.String[] r1;
        int i0, i1;
        java.lang.String r3, $r8;
        java.io.File $r4;
        java.lang.StringBuilder $r5;
        java.lang.Object $r6;
        android.os.RecoverySystem $r7;
        java.io.IOException $r9;
        boolean $z1;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.String[];

        $r4 = <android.os.RecoverySystem: java.io.File LOG_FILE>;

        virtualinvoke $r4.<java.io.File: boolean delete()>();

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        i0 = lengthof r1;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        r3 = r1[i1];

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r3);

        if $z1 != 0 goto label2;

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        $r6 = virtualinvoke r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("recovery");

        $r7 = (android.os.RecoverySystem) $r6;

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<android.os.RecoverySystem: void rebootRecoveryWithCommand(java.lang.String)>($r8);

        $r9 = new java.io.IOException;

        specialinvoke $r9.<java.io.IOException: void <init>(java.lang.String)>("Reboot failed (no permissions?)");

        throw $r9;
    }

    public static void cancelScheduledUpdate(android.content.Context) throws java.io.IOException
    {
        android.content.Context r0;
        java.lang.Object $r1;
        android.os.RecoverySystem $r2;
        boolean $z0;
        java.io.IOException $r3;

        r0 := @parameter0: android.content.Context;

        $r1 = virtualinvoke r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("recovery");

        $r2 = (android.os.RecoverySystem) $r1;

        $z0 = specialinvoke $r2.<android.os.RecoverySystem: boolean clearBcb()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        $r3 = new java.io.IOException;

        specialinvoke $r3.<java.io.IOException: void <init>(java.lang.String)>("cancel scheduled update failed");

        throw $r3;
    }

    private boolean clearBcb()
    {
        android.os.RecoverySystem r0;
        boolean z0;
        android.os.IRecoverySystem $r2;
        android.os.RemoteException $r3;

        r0 := @this: android.os.RecoverySystem;

     label1:
        $r2 = r0.<android.os.RecoverySystem: android.os.IRecoverySystem mService>;

        z0 = interfaceinvoke $r2.<android.os.IRecoverySystem: boolean clearBcb()>();

     label2:
        return z0;

     label3:
        $r3 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    private boolean clearLskf() throws java.io.IOException
    {
        android.os.RecoverySystem r0;
        boolean z0;
        android.os.IRecoverySystem $r2;
        android.os.RemoteException $r3;
        java.io.IOException $r4;

        r0 := @this: android.os.RecoverySystem;

     label1:
        $r2 = r0.<android.os.RecoverySystem: android.os.IRecoverySystem mService>;

        z0 = interfaceinvoke $r2.<android.os.IRecoverySystem: boolean clearLskf()>();

     label2:
        return z0;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.io.IOException;

        specialinvoke $r4.<java.io.IOException: void <init>(java.lang.String)>("could not clear LSKF");

        throw $r4;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public static void clearPrepareForUnattendedUpdate(android.content.Context) throws java.io.IOException
    {
        android.content.Context r0;
        java.lang.Object $r1;
        android.os.RecoverySystem $r2;
        boolean $z0;
        java.io.IOException $r3;

        r0 := @parameter0: android.content.Context;

        $r1 = virtualinvoke r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("recovery");

        $r2 = (android.os.RecoverySystem) $r1;

        $z0 = specialinvoke $r2.<android.os.RecoverySystem: boolean clearLskf()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        $r3 = new java.io.IOException;

        specialinvoke $r3.<java.io.IOException: void <init>(java.lang.String)>("could not reset unattended update state");

        throw $r3;
    }

    private static java.util.HashSet getTrustedCerts(java.io.File) throws java.io.IOException, java.security.GeneralSecurityException
    {
        java.security.cert.CertificateFactory r0;
        java.util.Enumeration r1;
        java.util.HashSet $r2;
        java.util.zip.ZipFile $r3;
        java.lang.Object $r4;
        java.util.zip.ZipEntry $r5;
        java.security.cert.Certificate $r6;
        java.security.cert.X509Certificate $r7;
        java.lang.Throwable $r8, $r9;
        java.io.File r10, r12;
        boolean $z1;
        java.io.InputStream r14;

        r10 := @parameter0: java.io.File;

        $r2 = new java.util.HashSet;

        specialinvoke $r2.<java.util.HashSet: void <init>()>();

        r12 = r10;

        if r10 != null goto label01;

        r12 = <android.os.RecoverySystem: java.io.File DEFAULT_KEYSTORE>;

     label01:
        $r3 = new java.util.zip.ZipFile;

        specialinvoke $r3.<java.util.zip.ZipFile: void <init>(java.io.File)>(r12);

     label02:
        r0 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>("X.509");

        r1 = virtualinvoke $r3.<java.util.zip.ZipFile: java.util.Enumeration entries()>();

     label03:
        $z1 = interfaceinvoke r1.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z1 == 0 goto label10;

        $r4 = interfaceinvoke r1.<java.util.Enumeration: java.lang.Object nextElement()>();

        $r5 = (java.util.zip.ZipEntry) $r4;

        r14 = virtualinvoke $r3.<java.util.zip.ZipFile: java.io.InputStream getInputStream(java.util.zip.ZipEntry)>($r5);

     label04:
        $r6 = virtualinvoke r0.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>(r14);

        $r7 = (java.security.cert.X509Certificate) $r6;

        virtualinvoke $r2.<java.util.HashSet: boolean add(java.lang.Object)>($r7);

     label05:
        virtualinvoke r14.<java.io.InputStream: void close()>();

     label06:
        goto label03;

     label07:
        $r8 := @caughtexception;

     label08:
        virtualinvoke r14.<java.io.InputStream: void close()>();

     label09:
        throw $r8;

     label10:
        virtualinvoke $r3.<java.util.zip.ZipFile: void close()>();

        return $r2;

     label11:
        $r9 := @caughtexception;

        virtualinvoke $r3.<java.util.zip.ZipFile: void close()>();

        throw $r9;

        catch java.lang.Throwable from label02 to label03 with label11;
        catch java.lang.Throwable from label03 to label04 with label11;
        catch java.lang.Throwable from label04 to label05 with label07;
        catch java.lang.Throwable from label05 to label06 with label11;
        catch java.lang.Throwable from label08 to label09 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
    }

    public static java.lang.String handleAftermath(android.content.Context)
    {
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        java.io.File $r0, $r1, $r4, $r6, $r7, $r10, $r13, $r14, $r15, $r32;
        int $i0, i1;
        java.lang.String $r2, $r3, $r5, $r8, $r9, $r11, $r12, $r17, $r19, r24, r25, r27, r28;
        java.lang.StringBuilder $r16, $r18;
        java.lang.Throwable $r20, $r21, $r22;
        android.content.Context r23;
        java.lang.String[] r33;

        r23 := @parameter0: android.content.Context;

        r24 = null;

     label01:
        $r0 = <android.os.RecoverySystem: java.io.File LOG_FILE>;

        r25 = staticinvoke <android.os.FileUtils: java.lang.String readTextFile(java.io.File,int,java.lang.String)>($r0, -65536, "...\n");

     label02:
        r24 = r25;

     label03:
        goto label06;

     label04:
        $r20 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("RecoverySystem", "Error reading recovery log", $r20);

        r24 = null;

        goto label06;

     label05:
        $r22 := @caughtexception;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("RecoverySystem", "No recovery log file");

        goto label03;

     label06:
        $r1 = <android.os.RecoverySystem: java.io.File BLOCK_MAP_FILE>;

        z0 = virtualinvoke $r1.<java.io.File: boolean exists()>();

        if z0 != 0 goto label12;

        $r13 = <android.os.RecoverySystem: java.io.File UNCRYPT_PACKAGE_FILE>;

        $z5 = virtualinvoke $r13.<java.io.File: boolean exists()>();

        if $z5 == 0 goto label12;

        r27 = null;

     label07:
        $r14 = <android.os.RecoverySystem: java.io.File UNCRYPT_PACKAGE_FILE>;

        r28 = staticinvoke <android.os.FileUtils: java.lang.String readTextFile(java.io.File,int,java.lang.String)>($r14, 0, null);

     label08:
        r27 = r28;

        goto label10;

     label09:
        $r21 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("RecoverySystem", "Error reading uncrypt file", $r21);

     label10:
        if r27 == null goto label12;

        $z6 = virtualinvoke r27.<java.lang.String: boolean startsWith(java.lang.String)>("/data");

        if $z6 == 0 goto label12;

        $r15 = <android.os.RecoverySystem: java.io.File UNCRYPT_PACKAGE_FILE>;

        $z7 = virtualinvoke $r15.<java.io.File: boolean delete()>();

        if $z7 == 0 goto label11;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Deleted: ");

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r27);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("RecoverySystem", $r19);

        goto label12;

     label11:
        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t delete: ");

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r27);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("RecoverySystem", $r17);

     label12:
        $r32 = <android.os.RecoverySystem: java.io.File RECOVERY_DIR>;

        r33 = virtualinvoke $r32.<java.io.File: java.lang.String[] list()>();

        i1 = 0;

     label13:
        if r33 == null goto label18;

        $i0 = lengthof r33;

        if i1 >= $i0 goto label18;

        $r2 = r33[i1];

        $z1 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>("last_");

        if $z1 != 0 goto label17;

        $r3 = r33[i1];

        $z2 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("last_install");

        if $z2 == 0 goto label14;

        goto label17;

     label14:
        if z0 == 0 goto label15;

        $r11 = r33[i1];

        $r10 = <android.os.RecoverySystem: java.io.File BLOCK_MAP_FILE>;

        $r12 = virtualinvoke $r10.<java.io.File: java.lang.String getName()>();

        $z4 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>($r12);

        if $z4 == 0 goto label15;

        goto label17;

     label15:
        if z0 == 0 goto label16;

        $r8 = r33[i1];

        $r7 = <android.os.RecoverySystem: java.io.File UNCRYPT_PACKAGE_FILE>;

        $r9 = virtualinvoke $r7.<java.io.File: java.lang.String getName()>();

        $z3 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        if $z3 == 0 goto label16;

        goto label17;

     label16:
        $r4 = new java.io.File;

        $r6 = <android.os.RecoverySystem: java.io.File RECOVERY_DIR>;

        $r5 = r33[i1];

        specialinvoke $r4.<java.io.File: void <init>(java.io.File,java.lang.String)>($r6, $r5);

        staticinvoke <android.os.RecoverySystem: void recursiveDelete(java.io.File)>($r4);

     label17:
        i1 = i1 + 1;

        goto label13;

     label18:
        return r24;

        catch java.io.FileNotFoundException from label01 to label02 with label05;
        catch java.io.IOException from label01 to label02 with label04;
        catch java.io.IOException from label07 to label08 with label09;
    }

    public static void installPackage(android.content.Context, java.io.File) throws java.io.IOException
    {
        android.content.Context r0;
        java.io.File r1;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.io.File;

        staticinvoke <android.os.RecoverySystem: void installPackage(android.content.Context,java.io.File,boolean)>(r0, r1, 0);

        return;
    }

    public static void installPackage(android.content.Context, java.io.File, boolean) throws java.io.IOException
    {
        boolean z0, z1, $z4, $z5, $z6, $z7, $z9, $z10;
        java.lang.Object r0, $r17, $r19, $r21;
        java.io.File $r1, $r2, $r28, $r32, $r34, $r37, $r38, r42, $r50;
        java.lang.String $r6, $r12, $r31, $r36, r43, r45, r53, r55, r57, r58, r62;
        java.util.Locale $r11;
        android.os.RecoverySystem $r18;
        android.content.pm.PackageManager $r20;
        android.hardware.display.DisplayManager $r22;
        android.view.Display $r23;
        int $i1;
        java.lang.Throwable $r39, $r40;
        android.content.Context r41;
        java.lang.StringBuilder r44, r48, r49, r52, r54, r56, r59, r63;
        java.io.IOException r46, r64, r65;
        java.io.FileWriter r47;
        android.os.PowerManager r60;

        r41 := @parameter0: android.content.Context;

        r42 := @parameter1: java.io.File;

        z0 := @parameter2: boolean;

        r0 = <android.os.RecoverySystem: java.lang.Object sRequestLock>;

        entermonitor r0;

     label01:
        $r1 = <android.os.RecoverySystem: java.io.File LOG_FILE>;

        virtualinvoke $r1.<java.io.File: boolean delete()>();

        $r2 = <android.os.RecoverySystem: java.io.File UNCRYPT_PACKAGE_FILE>;

        virtualinvoke $r2.<java.io.File: boolean delete()>();

        r43 = virtualinvoke r42.<java.io.File: java.lang.String getCanonicalPath()>();

        r44 = new java.lang.StringBuilder;

        specialinvoke r44.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("!!! REBOOTING TO INSTALL ");

        virtualinvoke r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r43);

        virtualinvoke r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" !!!");

        $r6 = virtualinvoke r44.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("RecoverySystem", $r6);

        z1 = virtualinvoke r43.<java.lang.String: boolean endsWith(java.lang.String)>("_s.zip");

     label02:
        r45 = r43;

     label03:
        $z4 = virtualinvoke r43.<java.lang.String: boolean startsWith(java.lang.String)>("/data/");

        if $z4 == 0 goto label18;

     label04:
        if z0 == 0 goto label08;

     label05:
        $r38 = <android.os.RecoverySystem: java.io.File BLOCK_MAP_FILE>;

        $z10 = virtualinvoke $r38.<java.io.File: boolean exists()>();

        if $z10 == 0 goto label07;

     label06:
        goto label14;

     label07:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("RecoverySystem", "Package claimed to have been processed but failed to find the block map file.");

        r46 = new java.io.IOException;

        specialinvoke r46.<java.io.IOException: void <init>(java.lang.String)>("Failed to find block map file");

        throw r46;

     label08:
        r47 = new java.io.FileWriter;

        $r28 = <android.os.RecoverySystem: java.io.File UNCRYPT_PACKAGE_FILE>;

        specialinvoke r47.<java.io.FileWriter: void <init>(java.io.File)>($r28);

     label09:
        r48 = new java.lang.StringBuilder;

        specialinvoke r48.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r43);

        virtualinvoke r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r31 = virtualinvoke r48.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r47.<java.io.FileWriter: void write(java.lang.String)>($r31);

     label10:
        virtualinvoke r47.<java.io.FileWriter: void close()>();

     label11:
        $r32 = <android.os.RecoverySystem: java.io.File UNCRYPT_PACKAGE_FILE>;

        $z7 = virtualinvoke $r32.<java.io.File: boolean setReadable(boolean,boolean)>(1, 0);

        if $z7 == 0 goto label12;

        $r37 = <android.os.RecoverySystem: java.io.File UNCRYPT_PACKAGE_FILE>;

        $z9 = virtualinvoke $r37.<java.io.File: boolean setWritable(boolean,boolean)>(1, 0);

        if $z9 != 0 goto label13;

     label12:
        r49 = new java.lang.StringBuilder;

        specialinvoke r49.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error setting permission for ");

        $r34 = <android.os.RecoverySystem: java.io.File UNCRYPT_PACKAGE_FILE>;

        virtualinvoke r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r34);

        $r36 = virtualinvoke r49.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("RecoverySystem", $r36);

     label13:
        $r50 = <android.os.RecoverySystem: java.io.File BLOCK_MAP_FILE>;

        virtualinvoke $r50.<java.io.File: boolean delete()>();

     label14:
        r45 = "@/cache/recovery/block.map";

        goto label18;

     label15:
        $r40 := @caughtexception;

     label16:
        virtualinvoke r47.<java.io.FileWriter: void close()>();

     label17:
        throw $r40;

     label18:
        r52 = new java.lang.StringBuilder;

        specialinvoke r52.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("--update_package=");

        virtualinvoke r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r45);

        virtualinvoke r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        r53 = virtualinvoke r52.<java.lang.StringBuilder: java.lang.String toString()>();

        r54 = new java.lang.StringBuilder;

        specialinvoke r54.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("--locale=");

        $r11 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $r12 = virtualinvoke $r11.<java.util.Locale: java.lang.String toLanguageTag()>();

        virtualinvoke r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        virtualinvoke r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        r55 = virtualinvoke r54.<java.lang.StringBuilder: java.lang.String toString()>();

        r56 = new java.lang.StringBuilder;

        specialinvoke r56.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r53);

        virtualinvoke r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r55);

        r57 = virtualinvoke r56.<java.lang.StringBuilder: java.lang.String toString()>();

     label19:
        r58 = r57;

        if z1 == 0 goto label21;

     label20:
        r59 = new java.lang.StringBuilder;

        specialinvoke r59.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r57);

        virtualinvoke r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("--security\n");

        r58 = virtualinvoke r59.<java.lang.StringBuilder: java.lang.String toString()>();

     label21:
        $r17 = virtualinvoke r41.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("recovery");

        $r18 = (android.os.RecoverySystem) $r17;

        $z5 = specialinvoke $r18.<android.os.RecoverySystem: boolean setupBcb(java.lang.String)>(r58);

        if $z5 == 0 goto label27;

        $r19 = virtualinvoke r41.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("power");

        r60 = (android.os.PowerManager) $r19;

     label22:
        r62 = "recovery-update";

     label23:
        $r20 = virtualinvoke r41.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $z6 = virtualinvoke $r20.<android.content.pm.PackageManager: boolean hasSystemFeature(java.lang.String)>("android.software.leanback");

        if $z6 == 0 goto label26;

     label24:
        r62 = "recovery-update";

     label25:
        $r21 = virtualinvoke r41.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/hardware/display/DisplayManager;");

        $r22 = (android.hardware.display.DisplayManager) $r21;

        $r23 = virtualinvoke $r22.<android.hardware.display.DisplayManager: android.view.Display getDisplay(int)>(0);

        $i1 = virtualinvoke $r23.<android.view.Display: int getState()>();

        if $i1 == 2 goto label26;

        r63 = new java.lang.StringBuilder;

        specialinvoke r63.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("recovery-update");

        virtualinvoke r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",quiescent");

        r62 = virtualinvoke r63.<java.lang.StringBuilder: java.lang.String toString()>();

     label26:
        virtualinvoke r60.<android.os.PowerManager: void reboot(java.lang.String)>(r62);

        r64 = new java.io.IOException;

        specialinvoke r64.<java.io.IOException: void <init>(java.lang.String)>("Reboot failed (no permissions?)");

        throw r64;

     label27:
        r65 = new java.io.IOException;

        specialinvoke r65.<java.io.IOException: void <init>(java.lang.String)>("Setup BCB failed");

        throw r65;

     label28:
        $r39 := @caughtexception;

     label29:
        exitmonitor r0;

     label30:
        throw $r39;

        catch java.lang.Throwable from label01 to label02 with label28;
        catch java.lang.Throwable from label03 to label04 with label28;
        catch java.lang.Throwable from label05 to label06 with label28;
        catch java.lang.Throwable from label07 to label08 with label28;
        catch java.lang.Throwable from label08 to label09 with label28;
        catch java.lang.Throwable from label09 to label10 with label15;
        catch java.lang.Throwable from label10 to label11 with label28;
        catch java.lang.Throwable from label11 to label12 with label28;
        catch java.lang.Throwable from label12 to label13 with label28;
        catch java.lang.Throwable from label13 to label14 with label28;
        catch java.lang.Throwable from label16 to label17 with label28;
        catch java.lang.Throwable from label17 to label18 with label28;
        catch java.lang.Throwable from label18 to label19 with label28;
        catch java.lang.Throwable from label20 to label21 with label28;
        catch java.lang.Throwable from label21 to label22 with label28;
        catch java.lang.Throwable from label23 to label24 with label28;
        catch java.lang.Throwable from label25 to label26 with label28;
        catch java.lang.Throwable from label26 to label27 with label28;
        catch java.lang.Throwable from label27 to label28 with label28;
        catch java.lang.Throwable from label29 to label30 with label28;
    }

    public static void prepareForUnattendedUpdate(android.content.Context, java.lang.String, android.content.IntentSender) throws java.io.IOException
    {
        android.content.Context r0;
        java.lang.String r1;
        android.content.IntentSender r2;
        java.lang.NullPointerException $r3;
        java.lang.Object $r4;
        android.os.RecoverySystem $r5;
        boolean $z0;
        java.io.IOException $r6;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.content.IntentSender;

        if r1 == null goto label2;

        $r4 = virtualinvoke r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("recovery");

        $r5 = (android.os.RecoverySystem) $r4;

        $z0 = specialinvoke $r5.<android.os.RecoverySystem: boolean requestLskf(java.lang.String,android.content.IntentSender)>(r1, r2);

        if $z0 == 0 goto label1;

        return;

     label1:
        $r6 = new java.io.IOException;

        specialinvoke $r6.<java.io.IOException: void <init>(java.lang.String)>("preparation for update failed");

        throw $r6;

     label2:
        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>("updateToken == null");

        throw $r3;
    }

    public static void processPackage(android.content.Context, java.io.File, android.os.RecoverySystem$ProgressListener) throws java.io.IOException
    {
        android.content.Context r0;
        java.io.File r1;
        android.os.RecoverySystem$ProgressListener r2;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.io.File;

        r2 := @parameter2: android.os.RecoverySystem$ProgressListener;

        staticinvoke <android.os.RecoverySystem: void processPackage(android.content.Context,java.io.File,android.os.RecoverySystem$ProgressListener,android.os.Handler)>(r0, r1, r2, null);

        return;
    }

    public static void processPackage(android.content.Context, java.io.File, android.os.RecoverySystem$ProgressListener, android.os.Handler) throws java.io.IOException
    {
        android.content.Context r0;
        android.os.RecoverySystem$ProgressListener r1;
        java.lang.String r2;
        android.os.RecoverySystem r3;
        boolean $z0, $z1;
        java.lang.Object $r4;
        java.io.IOException $r5;
        android.os.Handler $r6, r10;
        android.os.Looper $r7;
        android.os.RecoverySystem$2 $r8, r11;
        java.io.File r9;

        r0 := @parameter0: android.content.Context;

        r9 := @parameter1: java.io.File;

        r1 := @parameter2: android.os.RecoverySystem$ProgressListener;

        r10 := @parameter3: android.os.Handler;

        r2 = virtualinvoke r9.<java.io.File: java.lang.String getCanonicalPath()>();

        $z0 = virtualinvoke r2.<java.lang.String: boolean startsWith(java.lang.String)>("/data/");

        if $z0 != 0 goto label1;

        return;

     label1:
        $r4 = virtualinvoke r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("recovery");

        r3 = (android.os.RecoverySystem) $r4;

        r11 = null;

        if r1 == null goto label4;

        if r10 == null goto label2;

        goto label3;

     label2:
        $r6 = new android.os.Handler;

        $r7 = virtualinvoke r0.<android.content.Context: android.os.Looper getMainLooper()>();

        specialinvoke $r6.<android.os.Handler: void <init>(android.os.Looper)>($r7);

        r10 = $r6;

     label3:
        $r8 = new android.os.RecoverySystem$2;

        specialinvoke $r8.<android.os.RecoverySystem$2: void <init>(android.os.Handler,android.os.RecoverySystem$ProgressListener)>(r10, r1);

        r11 = $r8;

     label4:
        $z1 = specialinvoke r3.<android.os.RecoverySystem: boolean uncrypt(java.lang.String,android.os.IRecoverySystemProgressListener)>(r2, r11);

        if $z1 == 0 goto label5;

        return;

     label5:
        $r5 = new java.io.IOException;

        specialinvoke $r5.<java.io.IOException: void <init>(java.lang.String)>("process package failed");

        throw $r5;
    }

    private static boolean readAndVerifyPackageCompatibilityEntry(java.io.File) throws java.io.IOException
    {
        boolean z0;
        java.util.zip.ZipFile $r0;
        java.io.InputStream $r1;
        java.lang.Throwable $r2, $r3;
        java.io.File r4;
        java.util.zip.ZipEntry r6;

        r4 := @parameter0: java.io.File;

        $r0 = new java.util.zip.ZipFile;

        specialinvoke $r0.<java.util.zip.ZipFile: void <init>(java.io.File)>(r4);

     label1:
        r6 = virtualinvoke $r0.<java.util.zip.ZipFile: java.util.zip.ZipEntry getEntry(java.lang.String)>("compatibility.zip");

     label2:
        if r6 != null goto label3;

        virtualinvoke $r0.<java.util.zip.ZipFile: void close()>();

        return 1;

     label3:
        $r1 = virtualinvoke $r0.<java.util.zip.ZipFile: java.io.InputStream getInputStream(java.util.zip.ZipEntry)>(r6);

        z0 = staticinvoke <android.os.RecoverySystem: boolean verifyPackageCompatibility(java.io.InputStream)>($r1);

     label4:
        virtualinvoke $r0.<java.util.zip.ZipFile: void close()>();

        return z0;

     label5:
        $r2 := @caughtexception;

     label6:
        virtualinvoke $r0.<java.util.zip.ZipFile: void close()>();

     label7:
        goto label9;

     label8:
        $r3 := @caughtexception;

        virtualinvoke $r2.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r3);

     label9:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label8;
    }

    public static void rebootAndApply(android.content.Context, java.lang.String, java.lang.String) throws java.io.IOException
    {
        android.content.Context r0;
        java.lang.String r1, r2;
        java.lang.NullPointerException $r3;
        java.lang.Object $r4;
        android.os.RecoverySystem $r5;
        boolean $z0;
        java.io.IOException $r6;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        if r1 == null goto label2;

        $r4 = virtualinvoke r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("recovery");

        $r5 = (android.os.RecoverySystem) $r4;

        $z0 = specialinvoke $r5.<android.os.RecoverySystem: boolean rebootWithLskf(java.lang.String,java.lang.String)>(r1, r2);

        if $z0 == 0 goto label1;

        return;

     label1:
        $r6 = new java.io.IOException;

        specialinvoke $r6.<java.io.IOException: void <init>(java.lang.String)>("system not prepared to apply update");

        throw $r6;

     label2:
        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>("updateToken == null");

        throw $r3;
    }

    public static void rebootPromptAndWipeUserData(android.content.Context, java.lang.String) throws java.io.IOException
    {
        android.content.Context r0;
        android.os.IBinder $r1;
        boolean $z0, z1, z3;
        java.lang.StringBuilder $r2, $r9;
        java.util.Locale $r4;
        java.lang.String $r5, $r8, $r11, r17, r22;
        java.lang.String[] $r7;
        java.lang.Exception $r13, $r16;
        java.lang.Object $r14;
        android.os.PowerManager $r15;
        android.os.IVold r18, r19;

        r0 := @parameter0: android.content.Context;

        r17 := @parameter1: java.lang.String;

        z1 = 0;

        r18 = null;

     label01:
        $r1 = staticinvoke <android.os.ServiceManager: android.os.IBinder checkService(java.lang.String)>("vold");

        r19 = staticinvoke <android.os.IVold$Stub: android.os.IVold asInterface(android.os.IBinder)>($r1);

     label02:
        if r19 == null goto label05;

        r18 = r19;

     label03:
        z3 = interfaceinvoke r19.<android.os.IVold: boolean needsCheckpoint()>();

     label04:
        z1 = z3;

        goto label08;

     label05:
        r18 = r19;

     label06:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("RecoverySystem", "Failed to get vold");

     label07:
        z1 = 0;

     label08:
        r18 = r19;

        goto label10;

     label09:
        $r16 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("RecoverySystem", "Failed to check for checkpointing");

     label10:
        if z1 == 0 goto label15;

     label11:
        interfaceinvoke r18.<android.os.IVold: void abortChanges(java.lang.String,boolean)>("rescueparty", 0);

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("RecoverySystem", "Rescue Party requested wipe. Aborting update");

     label12:
        goto label14;

     label13:
        $r13 := @caughtexception;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("RecoverySystem", "Rescue Party requested wipe. Rebooting instead.");

        $r14 = virtualinvoke r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("power");

        $r15 = (android.os.PowerManager) $r14;

        virtualinvoke $r15.<android.os.PowerManager: void reboot(java.lang.String)>("rescueparty");

     label14:
        return;

     label15:
        r22 = null;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r17);

        if $z0 != 0 goto label16;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("--reason=");

        $r11 = staticinvoke <android.os.RecoverySystem: java.lang.String sanitizeArg(java.lang.String)>(r17);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        r22 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

     label16:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("--locale=");

        $r4 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $r5 = virtualinvoke $r4.<java.util.Locale: java.lang.String toString()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = newarray (java.lang.String)[4];

        $r7[0] = null;

        $r7[1] = "--prompt_and_wipe_data";

        $r7[2] = r22;

        $r8 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7[3] = $r8;

        staticinvoke <android.os.RecoverySystem: void bootCommand(android.content.Context,java.lang.String[])>(r0, $r7);

        return;

        catch java.lang.Exception from label01 to label02 with label09;
        catch java.lang.Exception from label03 to label04 with label09;
        catch java.lang.Exception from label06 to label07 with label09;
        catch java.lang.Exception from label11 to label12 with label13;
    }

    private void rebootRecoveryWithCommand(java.lang.String)
    {
        android.os.RecoverySystem r0;
        android.os.IRecoverySystem $r1;
        android.os.RemoteException $r2;
        java.lang.String r3;

        r0 := @this: android.os.RecoverySystem;

        r3 := @parameter0: java.lang.String;

     label1:
        $r1 = r0.<android.os.RecoverySystem: android.os.IRecoverySystem mService>;

        interfaceinvoke $r1.<android.os.IRecoverySystem: void rebootRecoveryWithCommand(java.lang.String)>(r3);

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public static void rebootWipeAb(android.content.Context, java.io.File, java.lang.String) throws java.io.IOException
    {
        android.content.Context r0;
        boolean $z0;
        java.lang.StringBuilder $r1, $r4, $r11;
        java.util.Locale $r6;
        java.lang.String $r7, $r10, $r13, r16, r17, r19, r21;
        java.lang.String[] $r9;
        java.io.File r15;

        r0 := @parameter0: android.content.Context;

        r15 := @parameter1: java.io.File;

        r16 := @parameter2: java.lang.String;

        r17 = null;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r16);

        if $z0 != 0 goto label1;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("--reason=");

        $r13 = staticinvoke <android.os.RecoverySystem: java.lang.String sanitizeArg(java.lang.String)>(r16);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        r17 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

     label1:
        r19 = virtualinvoke r15.<java.io.File: java.lang.String getCanonicalPath()>();

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("--wipe_package=");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r19);

        r21 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("--locale=");

        $r6 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $r7 = virtualinvoke $r6.<java.util.Locale: java.lang.String toLanguageTag()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = newarray (java.lang.String)[4];

        $r9[0] = "--wipe_ab";

        $r9[1] = r21;

        $r9[2] = r17;

        $r10 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r9[3] = $r10;

        staticinvoke <android.os.RecoverySystem: void bootCommand(android.content.Context,java.lang.String[])>(r0, $r9);

        return;
    }

    public static void rebootWipeCache(android.content.Context) throws java.io.IOException
    {
        android.content.Context r0;
        java.lang.String $r1;

        r0 := @parameter0: android.content.Context;

        $r1 = virtualinvoke r0.<android.content.Context: java.lang.String getPackageName()>();

        staticinvoke <android.os.RecoverySystem: void rebootWipeCache(android.content.Context,java.lang.String)>(r0, $r1);

        return;
    }

    public static void rebootWipeCache(android.content.Context, java.lang.String) throws java.io.IOException
    {
        android.content.Context r0;
        boolean $z0;
        java.lang.StringBuilder $r1, $r8;
        java.util.Locale $r3;
        java.lang.String $r4, $r7, $r10, r12, r13;
        java.lang.String[] $r6;

        r0 := @parameter0: android.content.Context;

        r12 := @parameter1: java.lang.String;

        r13 = null;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r12);

        if $z0 != 0 goto label1;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("--reason=");

        $r10 = staticinvoke <android.os.RecoverySystem: java.lang.String sanitizeArg(java.lang.String)>(r12);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        r13 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

     label1:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("--locale=");

        $r3 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $r4 = virtualinvoke $r3.<java.util.Locale: java.lang.String toLanguageTag()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = newarray (java.lang.String)[3];

        $r6[0] = "--wipe_cache";

        $r6[1] = r13;

        $r7 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6[2] = $r7;

        staticinvoke <android.os.RecoverySystem: void bootCommand(android.content.Context,java.lang.String[])>(r0, $r6);

        return;
    }

    public static void rebootWipeUserData(android.content.Context) throws java.io.IOException
    {
        android.content.Context r0;
        java.lang.String $r1;

        r0 := @parameter0: android.content.Context;

        $r1 = virtualinvoke r0.<android.content.Context: java.lang.String getPackageName()>();

        staticinvoke <android.os.RecoverySystem: void rebootWipeUserData(android.content.Context,boolean,java.lang.String,boolean,boolean)>(r0, 0, $r1, 0, 0);

        return;
    }

    public static void rebootWipeUserData(android.content.Context, java.lang.String) throws java.io.IOException
    {
        android.content.Context r0;
        java.lang.String r1;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.String;

        staticinvoke <android.os.RecoverySystem: void rebootWipeUserData(android.content.Context,boolean,java.lang.String,boolean,boolean)>(r0, 0, r1, 0, 0);

        return;
    }

    public static void rebootWipeUserData(android.content.Context, boolean) throws java.io.IOException
    {
        android.content.Context r0;
        boolean z0;
        java.lang.String $r1;

        r0 := @parameter0: android.content.Context;

        z0 := @parameter1: boolean;

        $r1 = virtualinvoke r0.<android.content.Context: java.lang.String getPackageName()>();

        staticinvoke <android.os.RecoverySystem: void rebootWipeUserData(android.content.Context,boolean,java.lang.String,boolean,boolean)>(r0, z0, $r1, 0, 0);

        return;
    }

    public static void rebootWipeUserData(android.content.Context, boolean, java.lang.String, boolean) throws java.io.IOException
    {
        android.content.Context r0;
        boolean z0, z1;
        java.lang.String r1;

        r0 := @parameter0: android.content.Context;

        z0 := @parameter1: boolean;

        r1 := @parameter2: java.lang.String;

        z1 := @parameter3: boolean;

        staticinvoke <android.os.RecoverySystem: void rebootWipeUserData(android.content.Context,boolean,java.lang.String,boolean,boolean)>(r0, z0, r1, z1, 0);

        return;
    }

    public static void rebootWipeUserData(android.content.Context, boolean, java.lang.String, boolean, boolean) throws java.io.IOException
    {
        android.content.Context r0;
        boolean z0, z1, z2, $z3, $z4;
        java.lang.String r1, $r11, $r13, $r17, $r18, r20, r25, r27;
        java.lang.Object $r3, $r8;
        android.os.ConditionVariable $r4;
        android.content.Intent $r5;
        android.os.RecoverySystem$3 $r6;
        android.os.UserHandle $r7;
        java.lang.StringBuilder $r9, $r15, $r16;
        java.util.Locale $r10;
        java.lang.String[] $r12;
        long $l0;
        java.lang.CharSequence $r14;
        java.lang.SecurityException $r19;
        android.os.UserManager r21;
        android.telephony.euicc.EuiccManager r24;

        r0 := @parameter0: android.content.Context;

        z0 := @parameter1: boolean;

        r20 := @parameter2: java.lang.String;

        z1 := @parameter3: boolean;

        z2 := @parameter4: boolean;

        $r3 = virtualinvoke r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("user");

        r21 = (android.os.UserManager) $r3;

        if z1 != 0 goto label2;

        $z4 = virtualinvoke r21.<android.os.UserManager: boolean hasUserRestriction(java.lang.String)>("no_factory_reset");

        if $z4 != 0 goto label1;

        goto label2;

     label1:
        $r19 = new java.lang.SecurityException;

        specialinvoke $r19.<java.lang.SecurityException: void <init>(java.lang.String)>("Wiping data is not allowed for this user.");

        throw $r19;

     label2:
        $r4 = new android.os.ConditionVariable;

        specialinvoke $r4.<android.os.ConditionVariable: void <init>()>();

        $r5 = new android.content.Intent;

        specialinvoke $r5.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.MASTER_CLEAR_NOTIFICATION");

        virtualinvoke $r5.<android.content.Intent: android.content.Intent addFlags(int)>(285212672);

        $r7 = <android.os.UserHandle: android.os.UserHandle SYSTEM>;

        $r6 = new android.os.RecoverySystem$3;

        specialinvoke $r6.<android.os.RecoverySystem$3: void <init>(android.os.ConditionVariable)>($r4);

        virtualinvoke r0.<android.content.Context: void sendOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>($r5, $r7, "android.permission.MASTER_CLEAR", $r6, null, 0, null, null);

        virtualinvoke $r4.<android.os.ConditionVariable: void block()>();

        $r8 = virtualinvoke r0.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/telephony/euicc/EuiccManager;");

        r24 = (android.telephony.euicc.EuiccManager) $r8;

        if z2 == 0 goto label3;

        staticinvoke <android.os.RecoverySystem: boolean wipeEuiccData(android.content.Context,java.lang.String)>(r0, "android");

        goto label4;

     label3:
        staticinvoke <android.os.RecoverySystem: void removeEuiccInvisibleSubs(android.content.Context,android.telephony.euicc.EuiccManager)>(r0, r24);

     label4:
        r25 = null;

        if z0 == 0 goto label5;

        r25 = "--shutdown_after";

     label5:
        $z3 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r20);

        if $z3 != 0 goto label6;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r14 = staticinvoke <android.text.format.DateFormat: java.lang.CharSequence format(java.lang.CharSequence,long)>("yyyy-MM-ddTHH:mm:ssZ", $l0);

        r1 = interfaceinvoke $r14.<java.lang.CharSequence: java.lang.String toString()>();

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("--reason=");

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r20);

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        $r18 = staticinvoke <android.os.RecoverySystem: java.lang.String sanitizeArg(java.lang.String)>($r17);

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        r27 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label7;

     label6:
        r27 = null;

     label7:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("--locale=");

        $r10 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $r11 = virtualinvoke $r10.<java.util.Locale: java.lang.String toLanguageTag()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r12 = newarray (java.lang.String)[4];

        $r12[0] = r25;

        $r12[1] = "--wipe_data";

        $r12[2] = r27;

        $r13 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        $r12[3] = $r13;

        staticinvoke <android.os.RecoverySystem: void bootCommand(android.content.Context,java.lang.String[])>(r0, $r12);

        return;
    }

    private boolean rebootWithLskf(java.lang.String, java.lang.String) throws java.io.IOException
    {
        android.os.RecoverySystem r0;
        java.lang.String r1, r5;
        boolean z0;
        android.os.IRecoverySystem $r2;
        android.os.RemoteException $r3;
        java.io.IOException $r4;

        r0 := @this: android.os.RecoverySystem;

        r5 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

     label1:
        $r2 = r0.<android.os.RecoverySystem: android.os.IRecoverySystem mService>;

        z0 = interfaceinvoke $r2.<android.os.IRecoverySystem: boolean rebootWithLskf(java.lang.String,java.lang.String)>(r5, r1);

     label2:
        return z0;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.io.IOException;

        specialinvoke $r4.<java.io.IOException: void <init>(java.lang.String)>("could not reboot for update");

        throw $r4;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    private static void recursiveDelete(java.io.File)
    {
        java.io.File r0, $r9;
        boolean $z0, $z1;
        java.lang.StringBuilder $r1, $r5;
        java.lang.String $r4, $r8, $r10;
        int $i2, i3;
        java.lang.String[] r11;

        r0 := @parameter0: java.io.File;

        $z0 = virtualinvoke r0.<java.io.File: boolean isDirectory()>();

        if $z0 == 0 goto label2;

        r11 = virtualinvoke r0.<java.io.File: java.lang.String[] list()>();

        i3 = 0;

     label1:
        if r11 == null goto label2;

        $i2 = lengthof r11;

        if i3 >= $i2 goto label2;

        $r9 = new java.io.File;

        $r10 = r11[i3];

        specialinvoke $r9.<java.io.File: void <init>(java.io.File,java.lang.String)>(r0, $r10);

        staticinvoke <android.os.RecoverySystem: void recursiveDelete(java.io.File)>($r9);

        i3 = i3 + 1;

        goto label1;

     label2:
        $z1 = virtualinvoke r0.<java.io.File: boolean delete()>();

        if $z1 != 0 goto label3;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t delete: ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("RecoverySystem", $r8);

        goto label4;

     label3:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Deleted: ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("RecoverySystem", $r4);

     label4:
        return;
    }

    private static void removeEuiccInvisibleSubs(android.content.Context, android.telephony.euicc.EuiccManager)
    {
        android.content.Context r0;
        android.telephony.euicc.EuiccManager r1;
        java.util.Iterator r2;
        android.content.ContentResolver $r3;
        int $i0;
        boolean $z0, $z1, $z2, $z4, $z5;
        java.lang.Object $r4, $r6;
        java.util.ArrayList $r5;
        android.os.ParcelUuid $r7;
        android.telephony.SubscriptionManager r8;
        java.util.List r9;
        android.telephony.SubscriptionInfo r11;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: android.telephony.euicc.EuiccManager;

        $r3 = virtualinvoke r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $i0 = staticinvoke <android.provider.Settings$Global: int getInt(android.content.ContentResolver,java.lang.String,int)>($r3, "euicc_provisioned", 0);

        if $i0 != 0 goto label1;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("RecoverySystem", "Skip removing eUICC invisible profiles as it is not provisioned.");

        return;

     label1:
        if r1 == null goto label8;

        $z0 = virtualinvoke r1.<android.telephony.euicc.EuiccManager: boolean isEnabled()>();

        if $z0 != 0 goto label2;

        goto label8;

     label2:
        $r4 = virtualinvoke r0.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/telephony/SubscriptionManager;");

        r8 = (android.telephony.SubscriptionManager) $r4;

        r9 = virtualinvoke r8.<android.telephony.SubscriptionManager: java.util.List getAvailableSubscriptionInfoList()>();

        if r9 == null goto label7;

        $z1 = interfaceinvoke r9.<java.util.List: boolean isEmpty()>();

        if $z1 == 0 goto label3;

        goto label7;

     label3:
        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r2 = interfaceinvoke r9.<java.util.List: java.util.Iterator iterator()>();

     label4:
        $z2 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label6;

        $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r11 = (android.telephony.SubscriptionInfo) $r6;

        $z4 = virtualinvoke r11.<android.telephony.SubscriptionInfo: boolean isEmbedded()>();

        if $z4 == 0 goto label5;

        $r7 = virtualinvoke r11.<android.telephony.SubscriptionInfo: android.os.ParcelUuid getGroupUuid()>();

        if $r7 == null goto label5;

        $z5 = virtualinvoke r11.<android.telephony.SubscriptionInfo: boolean isOpportunistic()>();

        if $z5 == 0 goto label5;

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>(r11);

     label5:
        goto label4;

     label6:
        staticinvoke <android.os.RecoverySystem: boolean removeEuiccInvisibleSubs(android.content.Context,java.util.List,android.telephony.euicc.EuiccManager)>(r0, $r5, r1);

        return;

     label7:
        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("RecoverySystem", "Skip removing eUICC invisible profiles as no available profiles found.");

        return;

     label8:
        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("RecoverySystem", "Skip removing eUICC invisible profiles as eUICC manager is not available.");

        return;
    }

    private static boolean removeEuiccInvisibleSubs(android.content.Context, java.util.List, android.telephony.euicc.EuiccManager)
    {
        android.content.Context r0, $r17, $r20, $r21, $r32, $r34;
        android.telephony.euicc.EuiccManager r1, $r29;
        android.app.PendingIntent r5;
        android.telephony.SubscriptionInfo r6;
        long l0, l14;
        boolean $z0, $z1, $z6, z7;
        java.util.concurrent.CountDownLatch $r7;
        int $i2, $i5, $i6, $i8, $i9, $i11, $i12;
        java.util.concurrent.atomic.AtomicInteger $r8;
        android.os.RecoverySystem$5 $r9;
        android.content.Intent $r10;
        android.os.UserHandle $r12;
        android.content.IntentFilter $r13;
        android.os.HandlerThread $r14;
        android.os.Handler $r15;
        android.os.Looper $r16;
        android.content.ContentResolver $r19;
        byte $b3, $b4;
        java.lang.Object $r22;
        java.lang.StringBuilder $r23;
        java.lang.String $r28;
        java.lang.Throwable $r30, $r33;
        java.lang.Thread $r31;
        java.util.List r35;
        java.util.Iterator r40;
        java.util.concurrent.TimeUnit $r42;

        r0 := @parameter0: android.content.Context;

        r35 := @parameter1: java.util.List;

        r1 := @parameter2: android.telephony.euicc.EuiccManager;

        if r35 == null goto label16;

        $z0 = interfaceinvoke r35.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label01;

        goto label16;

     label01:
        $r7 = new java.util.concurrent.CountDownLatch;

        $i2 = interfaceinvoke r35.<java.util.List: int size()>();

        specialinvoke $r7.<java.util.concurrent.CountDownLatch: void <init>(int)>($i2);

        $r8 = new java.util.concurrent.atomic.AtomicInteger;

        specialinvoke $r8.<java.util.concurrent.atomic.AtomicInteger: void <init>(int)>(0);

        $r9 = new android.os.RecoverySystem$5;

        specialinvoke $r9.<android.os.RecoverySystem$5: void <init>(java.util.concurrent.atomic.AtomicInteger,java.util.concurrent.CountDownLatch)>($r8, $r7);

        $r10 = new android.content.Intent;

        specialinvoke $r10.<android.content.Intent: void <init>(java.lang.String)>("com.android.internal.action.EUICC_REMOVE_INVISIBLE_SUBSCRIPTIONS");

        virtualinvoke $r10.<android.content.Intent: android.content.Intent setPackage(java.lang.String)>("android");

        $r12 = <android.os.UserHandle: android.os.UserHandle SYSTEM>;

        r5 = staticinvoke <android.app.PendingIntent: android.app.PendingIntent getBroadcastAsUser(android.content.Context,int,android.content.Intent,int,android.os.UserHandle)>(r0, 0, $r10, 134217728, $r12);

        $r13 = new android.content.IntentFilter;

        specialinvoke $r13.<android.content.IntentFilter: void <init>()>();

        virtualinvoke $r13.<android.content.IntentFilter: void addAction(java.lang.String)>("com.android.internal.action.EUICC_REMOVE_INVISIBLE_SUBSCRIPTIONS");

        $r14 = new android.os.HandlerThread;

        specialinvoke $r14.<android.os.HandlerThread: void <init>(java.lang.String)>("euiccRemovingSubsReceiverThread");

        virtualinvoke $r14.<android.os.HandlerThread: void start()>();

        $r15 = new android.os.Handler;

        $r16 = virtualinvoke $r14.<android.os.HandlerThread: android.os.Looper getLooper()>();

        specialinvoke $r15.<android.os.Handler: void <init>(android.os.Looper)>($r16);

        $r17 = virtualinvoke r0.<android.content.Context: android.content.Context getApplicationContext()>();

        virtualinvoke $r17.<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter,java.lang.String,android.os.Handler)>($r9, $r13, null, $r15);

        r40 = interfaceinvoke r35.<java.util.List: java.util.Iterator iterator()>();

     label02:
        $z1 = interfaceinvoke r40.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label03;

        $r22 = interfaceinvoke r40.<java.util.Iterator: java.lang.Object next()>();

        r6 = (android.telephony.SubscriptionInfo) $r22;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Remove invisible subscription ");

        $i8 = virtualinvoke r6.<android.telephony.SubscriptionInfo: int getSubscriptionId()>();

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8);

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from card ");

        $i9 = virtualinvoke r6.<android.telephony.SubscriptionInfo: int getCardId()>();

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i9);

        $r28 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("RecoverySystem", $r28);

        $i11 = virtualinvoke r6.<android.telephony.SubscriptionInfo: int getCardId()>();

        $r29 = virtualinvoke r1.<android.telephony.euicc.EuiccManager: android.telephony.euicc.EuiccManager createForCardId(int)>($i11);

        $i12 = virtualinvoke r6.<android.telephony.SubscriptionInfo: int getSubscriptionId()>();

        virtualinvoke $r29.<android.telephony.euicc.EuiccManager: void deleteSubscription(int,android.app.PendingIntent)>($i12, r5);

        goto label02;

     label03:
        $r19 = virtualinvoke r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        l0 = staticinvoke <android.provider.Settings$Global: long getLong(android.content.ContentResolver,java.lang.String,long)>($r19, "euicc_removing_invisible_profiles_timeout_millis", 45000L);

     label04:
        $b3 = l0 cmp 15000L;

        if $b3 >= 0 goto label05;

        l14 = 15000L;

        goto label06;

     label05:
        l14 = l0;

        $b4 = l0 cmp 90000L;

        if $b4 <= 0 goto label06;

        l14 = 90000L;

     label06:
        $r42 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>;

        $z6 = virtualinvoke $r7.<java.util.concurrent.CountDownLatch: boolean await(long,java.util.concurrent.TimeUnit)>(l14, $r42);

        if $z6 != 0 goto label08;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("RecoverySystem", "Timeout removing invisible euicc profiles.");

     label07:
        $r21 = virtualinvoke r0.<android.content.Context: android.content.Context getApplicationContext()>();

        virtualinvoke $r21.<android.content.Context: void unregisterReceiver(android.content.BroadcastReceiver)>($r9);

        virtualinvoke $r14.<android.os.HandlerThread: boolean quit()>();

        return 0;

     label08:
        $r20 = virtualinvoke r0.<android.content.Context: android.content.Context getApplicationContext()>();

        virtualinvoke $r20.<android.content.Context: void unregisterReceiver(android.content.BroadcastReceiver)>($r9);

        virtualinvoke $r14.<android.os.HandlerThread: boolean quit()>();

        $i5 = virtualinvoke $r8.<java.util.concurrent.atomic.AtomicInteger: int get()>();

        $i6 = interfaceinvoke r35.<java.util.List: int size()>();

        if $i5 != $i6 goto label09;

        z7 = 1;

        goto label10;

     label09:
        z7 = 0;

     label10:
        return z7;

     label11:
        $r33 := @caughtexception;

        goto label15;

     label12:
        $r30 := @caughtexception;

     label13:
        $r31 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        virtualinvoke $r31.<java.lang.Thread: void interrupt()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("RecoverySystem", "Removing invisible euicc profiles interrupted", $r30);

     label14:
        $r32 = virtualinvoke r0.<android.content.Context: android.content.Context getApplicationContext()>();

        virtualinvoke $r32.<android.content.Context: void unregisterReceiver(android.content.BroadcastReceiver)>($r9);

        virtualinvoke $r14.<android.os.HandlerThread: boolean quit()>();

        return 0;

     label15:
        $r34 = virtualinvoke r0.<android.content.Context: android.content.Context getApplicationContext()>();

        virtualinvoke $r34.<android.content.Context: void unregisterReceiver(android.content.BroadcastReceiver)>($r9);

        virtualinvoke $r14.<android.os.HandlerThread: boolean quit()>();

        throw $r33;

     label16:
        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("RecoverySystem", "There are no eUICC invisible profiles needed to be removed.");

        return 1;

        catch java.lang.InterruptedException from label03 to label04 with label12;
        catch java.lang.Throwable from label03 to label04 with label11;
        catch java.lang.InterruptedException from label06 to label07 with label12;
        catch java.lang.Throwable from label06 to label07 with label11;
        catch java.lang.Throwable from label13 to label14 with label11;
    }

    private boolean requestLskf(java.lang.String, android.content.IntentSender) throws java.io.IOException
    {
        android.os.RecoverySystem r0;
        android.content.IntentSender r1;
        boolean z0;
        android.os.IRecoverySystem $r2;
        android.os.RemoteException $r3;
        java.io.IOException $r4;
        java.lang.String r5;

        r0 := @this: android.os.RecoverySystem;

        r5 := @parameter0: java.lang.String;

        r1 := @parameter1: android.content.IntentSender;

     label1:
        $r2 = r0.<android.os.RecoverySystem: android.os.IRecoverySystem mService>;

        z0 = interfaceinvoke $r2.<android.os.IRecoverySystem: boolean requestLskf(java.lang.String,android.content.IntentSender)>(r5, r1);

     label2:
        return z0;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.io.IOException;

        specialinvoke $r4.<java.io.IOException: void <init>(java.lang.String)>("could request update");

        throw $r4;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    private static java.lang.String sanitizeArg(java.lang.String)
    {
        java.lang.String r0, $r1, $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String replace(char,char)>(0, 63);

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String replace(char,char)>(10, 63);

        return $r2;
    }

    public static void scheduleUpdateOnBoot(android.content.Context, java.io.File) throws java.io.IOException
    {
        android.content.Context r0;
        boolean z0, $z1, $z2;
        java.lang.StringBuilder $r2, $r6, $r12, $r18;
        java.util.Locale $r8;
        java.lang.String $r9, r22, r23, r25, r27, r28, r29;
        java.lang.Object $r15;
        android.os.RecoverySystem $r16;
        java.io.IOException $r17;
        java.io.File r21;

        r0 := @parameter0: android.content.Context;

        r21 := @parameter1: java.io.File;

        r22 = virtualinvoke r21.<java.io.File: java.lang.String getCanonicalPath()>();

        z0 = virtualinvoke r22.<java.lang.String: boolean endsWith(java.lang.String)>("_s.zip");

        r23 = r22;

        $z1 = virtualinvoke r22.<java.lang.String: boolean startsWith(java.lang.String)>("/data/");

        if $z1 == 0 goto label1;

        r23 = "@/cache/recovery/block.map";

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("--update_package=");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r23);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        r25 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("--locale=");

        $r8 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $r9 = virtualinvoke $r8.<java.util.Locale: java.lang.String toLanguageTag()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        r27 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r25);

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r27);

        r28 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        r29 = r28;

        if z0 == 0 goto label2;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r28);

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("--security\n");

        r29 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        $r15 = virtualinvoke r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("recovery");

        $r16 = (android.os.RecoverySystem) $r15;

        $z2 = specialinvoke $r16.<android.os.RecoverySystem: boolean setupBcb(java.lang.String)>(r29);

        if $z2 == 0 goto label3;

        return;

     label3:
        $r17 = new java.io.IOException;

        specialinvoke $r17.<java.io.IOException: void <init>(java.lang.String)>("schedule update on boot failed");

        throw $r17;
    }

    private boolean setupBcb(java.lang.String)
    {
        android.os.RecoverySystem r0;
        boolean z0;
        android.os.IRecoverySystem $r1;
        android.os.RemoteException $r2;
        java.lang.String r3;

        r0 := @this: android.os.RecoverySystem;

        r3 := @parameter0: java.lang.String;

     label1:
        $r1 = r0.<android.os.RecoverySystem: android.os.IRecoverySystem mService>;

        z0 = interfaceinvoke $r1.<android.os.IRecoverySystem: boolean setupBcb(java.lang.String)>(r3);

     label2:
        return z0;

     label3:
        $r2 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    private boolean uncrypt(java.lang.String, android.os.IRecoverySystemProgressListener)
    {
        android.os.RecoverySystem r0;
        android.os.IRecoverySystemProgressListener r1;
        boolean z0;
        android.os.IRecoverySystem $r2;
        android.os.RemoteException $r3;
        java.lang.String r4;

        r0 := @this: android.os.RecoverySystem;

        r4 := @parameter0: java.lang.String;

        r1 := @parameter1: android.os.IRecoverySystemProgressListener;

     label1:
        $r2 = r0.<android.os.RecoverySystem: android.os.IRecoverySystem mService>;

        z0 = interfaceinvoke $r2.<android.os.IRecoverySystem: boolean uncrypt(java.lang.String,android.os.IRecoverySystemProgressListener)>(r4, r1);

     label2:
        return z0;

     label3:
        $r3 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public static void verifyPackage(java.io.File, android.os.RecoverySystem$ProgressListener, java.io.File) throws java.io.IOException, java.security.GeneralSecurityException
    {
        android.os.RecoverySystem$ProgressListener r0;
        long l0, l1, $l4, $l19, $l20;
        int i2, i3, $i10, $i15, $i17, $i18, $i25, $i26, $i27, $i28, $i29, $i30, $i32, $i34, $i36, i38;
        sun.security.pkcs.PKCS7 r2;
        java.util.Iterator r3;
        boolean z0, $z1, $z2, z3, $z4;
        java.io.RandomAccessFile $r4;
        byte $b5, $b6, $b7, $b8, $b12, $b13, $b21, $b22, $b23, $b24, $b31, $b33, $b35, $b37;
        short $s9, $s11, $s14, $s16;
        java.security.cert.X509Certificate $r5, $r9;
        java.util.HashSet $r6;
        java.security.SignatureException $r7, r16, r25, r26, r27, r28, r29, r30, r31;
        java.lang.Object $r8;
        java.security.PublicKey $r10, r19;
        java.lang.Throwable $r11;
        java.io.File r12, r13;
        byte[] r14, r15;
        java.io.ByteArrayInputStream r17;
        java.security.cert.X509Certificate[] r18;
        sun.security.pkcs.SignerInfo[] r20;
        sun.security.pkcs.SignerInfo r21, r24;
        android.os.RecoverySystem$1 r23;

        r12 := @parameter0: java.io.File;

        r0 := @parameter1: android.os.RecoverySystem$ProgressListener;

        r13 := @parameter2: java.io.File;

        l0 = virtualinvoke r12.<java.io.File: long length()>();

        $r4 = new java.io.RandomAccessFile;

        specialinvoke $r4.<java.io.RandomAccessFile: void <init>(java.io.File,java.lang.String)>(r12, "r");

     label01:
        l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

     label02:
        if r0 == null goto label04;

     label03:
        interfaceinvoke r0.<android.os.RecoverySystem$ProgressListener: void onProgress(int)>(0);

     label04:
        $l4 = l0 - 6L;

        virtualinvoke $r4.<java.io.RandomAccessFile: void seek(long)>($l4);

        r14 = newarray (byte)[6];

        virtualinvoke $r4.<java.io.RandomAccessFile: void readFully(byte[])>(r14);

     label05:
        $b5 = r14[2];

        if $b5 != -1 goto label36;

        $b6 = r14[3];

        if $b6 != -1 goto label36;

        $b7 = r14[4];

        $s11 = $b7 & 255;

        $b8 = r14[5];

        $s9 = $b8 & 255;

        $i10 = $s9 << 8;

        i2 = $s11 | $i10;

        $b12 = r14[0];

        $s16 = $b12 & 255;

        $b13 = r14[1];

        $s14 = $b13 & 255;

        $i15 = $s14 << 8;

        i3 = $s16 | $i15;

     label06:
        $i17 = i2 + 22;

        r15 = newarray (byte)[$i17];

        $i18 = i2 + 22;

        $l19 = (long) $i18;

        $l20 = l0 - $l19;

        virtualinvoke $r4.<java.io.RandomAccessFile: void seek(long)>($l20);

        virtualinvoke $r4.<java.io.RandomAccessFile: void readFully(byte[])>(r15);

     label07:
        $b21 = r15[0];

        if $b21 != 80 goto label35;

        $b22 = r15[1];

        if $b22 != 75 goto label35;

        $b23 = r15[2];

        if $b23 != 5 goto label35;

        $b24 = r15[3];

        if $b24 != 6 goto label35;

        i38 = 4;

     label08:
        $i25 = lengthof r15;

        $i26 = $i25 - 3;

        if i38 >= $i26 goto label12;

     label09:
        $b31 = r15[i38];

        if $b31 != 80 goto label11;

        $i32 = i38 + 1;

        $b33 = r15[$i32];

        if $b33 != 75 goto label11;

        $i34 = i38 + 2;

        $b35 = r15[$i34];

        if $b35 != 5 goto label11;

        $i36 = i38 + 3;

        $b37 = r15[$i36];

        if $b37 == 6 goto label10;

        goto label11;

     label10:
        r16 = new java.security.SignatureException;

        specialinvoke r16.<java.security.SignatureException: void <init>(java.lang.String)>("EOCD marker found after start of EOCD");

        throw r16;

     label11:
        i38 = i38 + 1;

        goto label08;

     label12:
        r2 = new sun.security.pkcs.PKCS7;

        r17 = new java.io.ByteArrayInputStream;

        $i27 = i2 + 22;

        $i28 = $i27 - i3;

        specialinvoke r17.<java.io.ByteArrayInputStream: void <init>(byte[],int,int)>(r15, $i28, i3);

        specialinvoke r2.<sun.security.pkcs.PKCS7: void <init>(java.io.InputStream)>(r17);

        r18 = virtualinvoke r2.<sun.security.pkcs.PKCS7: java.security.cert.X509Certificate[] getCertificates()>();

     label13:
        if r18 == null goto label34;

     label14:
        $i29 = lengthof r18;

        if $i29 == 0 goto label34;

        $r5 = r18[0];

        r19 = virtualinvoke $r5.<java.security.cert.X509Certificate: java.security.PublicKey getPublicKey()>();

        r20 = virtualinvoke r2.<sun.security.pkcs.PKCS7: sun.security.pkcs.SignerInfo[] getSignerInfos()>();

     label15:
        if r20 == null goto label33;

     label16:
        $i30 = lengthof r20;

        if $i30 == 0 goto label33;

     label17:
        r21 = r20[0];

        z3 = 0;

        if r13 != null goto label20;

     label18:
        r13 = <android.os.RecoverySystem: java.io.File DEFAULT_KEYSTORE>;

     label19:
        goto label20;

     label20:
        $r6 = staticinvoke <android.os.RecoverySystem: java.util.HashSet getTrustedCerts(java.io.File)>(r13);

        r3 = virtualinvoke $r6.<java.util.HashSet: java.util.Iterator iterator()>();

     label21:
        $z4 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label24;

        $r8 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        $r9 = (java.security.cert.X509Certificate) $r8;

        $r10 = virtualinvoke $r9.<java.security.cert.X509Certificate: java.security.PublicKey getPublicKey()>();

        $z2 = virtualinvoke $r10.<java.lang.Object: boolean equals(java.lang.Object)>(r19);

        if $z2 == 0 goto label23;

     label22:
        z3 = 1;

        goto label24;

     label23:
        goto label21;

     label24:
        if z3 == 0 goto label32;

     label25:
        virtualinvoke $r4.<java.io.RandomAccessFile: void seek(long)>(0L);

        r23 = new android.os.RecoverySystem$1;

        specialinvoke r23.<android.os.RecoverySystem$1: void <init>(long,int,long,java.io.RandomAccessFile,android.os.RecoverySystem$ProgressListener)>(l0, i2, l1, $r4, r0);

        r24 = virtualinvoke r2.<sun.security.pkcs.PKCS7: sun.security.pkcs.SignerInfo verify(sun.security.pkcs.SignerInfo,java.io.InputStream)>(r21, r23);

        z0 = staticinvoke <java.lang.Thread: boolean interrupted()>();

     label26:
        if r0 == null goto label28;

     label27:
        interfaceinvoke r0.<android.os.RecoverySystem$ProgressListener: void onProgress(int)>(100);

     label28:
        if z0 != 0 goto label31;

        if r24 == null goto label30;

        virtualinvoke $r4.<java.io.RandomAccessFile: void close()>();

        $z1 = staticinvoke <android.os.RecoverySystem: boolean readAndVerifyPackageCompatibilityEntry(java.io.File)>(r12);

        if $z1 == 0 goto label29;

        return;

     label29:
        $r7 = new java.security.SignatureException;

        specialinvoke $r7.<java.security.SignatureException: void <init>(java.lang.String)>("package compatibility verification failed");

        throw $r7;

     label30:
        r25 = new java.security.SignatureException;

        specialinvoke r25.<java.security.SignatureException: void <init>(java.lang.String)>("signature digest verification failed");

        throw r25;

     label31:
        r26 = new java.security.SignatureException;

        specialinvoke r26.<java.security.SignatureException: void <init>(java.lang.String)>("verification was interrupted");

        throw r26;

     label32:
        r27 = new java.security.SignatureException;

        specialinvoke r27.<java.security.SignatureException: void <init>(java.lang.String)>("signature doesn\'t match any trusted key");

        throw r27;

     label33:
        r28 = new java.security.SignatureException;

        specialinvoke r28.<java.security.SignatureException: void <init>(java.lang.String)>("signature contains no signedData");

        throw r28;

     label34:
        r29 = new java.security.SignatureException;

        specialinvoke r29.<java.security.SignatureException: void <init>(java.lang.String)>("signature contains no certificates");

        throw r29;

     label35:
        r30 = new java.security.SignatureException;

        specialinvoke r30.<java.security.SignatureException: void <init>(java.lang.String)>("no signature in file (bad footer)");

        throw r30;

     label36:
        r31 = new java.security.SignatureException;

        specialinvoke r31.<java.security.SignatureException: void <init>(java.lang.String)>("no signature in file (no footer)");

        throw r31;

     label37:
        $r11 := @caughtexception;

        virtualinvoke $r4.<java.io.RandomAccessFile: void close()>();

        throw $r11;

        catch java.lang.Throwable from label01 to label02 with label37;
        catch java.lang.Throwable from label03 to label04 with label37;
        catch java.lang.Throwable from label04 to label05 with label37;
        catch java.lang.Throwable from label06 to label07 with label37;
        catch java.lang.Throwable from label08 to label09 with label37;
        catch java.lang.Throwable from label10 to label11 with label37;
        catch java.lang.Throwable from label12 to label13 with label37;
        catch java.lang.Throwable from label14 to label15 with label37;
        catch java.lang.Throwable from label16 to label17 with label37;
        catch java.lang.Throwable from label18 to label19 with label37;
        catch java.lang.Throwable from label20 to label21 with label37;
        catch java.lang.Throwable from label21 to label22 with label37;
        catch java.lang.Throwable from label25 to label26 with label37;
        catch java.lang.Throwable from label27 to label28 with label37;
        catch java.lang.Throwable from label30 to label31 with label37;
        catch java.lang.Throwable from label31 to label32 with label37;
        catch java.lang.Throwable from label32 to label33 with label37;
        catch java.lang.Throwable from label33 to label34 with label37;
        catch java.lang.Throwable from label34 to label35 with label37;
        catch java.lang.Throwable from label35 to label36 with label37;
        catch java.lang.Throwable from label36 to label37 with label37;
    }

    public static boolean verifyPackageCompatibility(java.io.File) throws java.io.IOException
    {
        boolean z0;
        java.io.FileInputStream $r0;
        java.lang.Throwable $r1, $r2;
        java.io.File r3;

        r3 := @parameter0: java.io.File;

        $r0 = new java.io.FileInputStream;

        specialinvoke $r0.<java.io.FileInputStream: void <init>(java.io.File)>(r3);

     label1:
        z0 = staticinvoke <android.os.RecoverySystem: boolean verifyPackageCompatibility(java.io.InputStream)>($r0);

     label2:
        virtualinvoke $r0.<java.io.InputStream: void close()>();

        return z0;

     label3:
        $r2 := @caughtexception;

     label4:
        virtualinvoke $r0.<java.io.InputStream: void close()>();

     label5:
        goto label7;

     label6:
        $r1 := @caughtexception;

        virtualinvoke $r2.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r1);

     label7:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label6;
    }

    private static boolean verifyPackageCompatibility(java.io.InputStream) throws java.io.IOException
    {
        long l0;
        java.util.ArrayList $r1;
        java.util.zip.ZipInputStream $r2;
        boolean $z0, z2;
        java.io.IOException $r3, $r11;
        int $i1, $i2, $i5;
        java.lang.String[] $r4, $r6;
        java.lang.Object[] $r5;
        byte $b3, $b4;
        java.lang.StringBuilder $r7;
        java.lang.String $r12, $r13;
        java.nio.charset.Charset $r14;
        java.io.InputStream r15;
        java.util.zip.ZipEntry r17;
        byte[] r18;

        r15 := @parameter0: java.io.InputStream;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        $r2 = new java.util.zip.ZipInputStream;

        specialinvoke $r2.<java.util.zip.ZipInputStream: void <init>(java.io.InputStream)>(r15);

     label1:
        r17 = virtualinvoke $r2.<java.util.zip.ZipInputStream: java.util.zip.ZipEntry getNextEntry()>();

        if r17 == null goto label3;

        l0 = virtualinvoke r17.<java.util.zip.ZipEntry: long getSize()>();

        $b3 = l0 cmp 2147483647L;

        if $b3 > 0 goto label2;

        $b4 = l0 cmp 0L;

        if $b4 < 0 goto label2;

        $i5 = (int) l0;

        r18 = newarray (byte)[$i5];

        staticinvoke <libcore.io.Streams: void readFully(java.io.InputStream,byte[])>($r2, r18);

        $r13 = new java.lang.String;

        $r14 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;

        specialinvoke $r13.<java.lang.String: void <init>(byte[],java.nio.charset.Charset)>(r18, $r14);

        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r13);

        goto label1;

     label2:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("invalid entry size (");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") in the compatibility file");

        $r11 = new java.io.IOException;

        $r12 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.io.IOException: void <init>(java.lang.String)>($r12);

        throw $r11;

     label3:
        $z0 = virtualinvoke $r1.<java.util.ArrayList: boolean isEmpty()>();

        if $z0 != 0 goto label6;

        $i1 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        $r4 = newarray (java.lang.String)[$i1];

        $r5 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r4);

        $r6 = (java.lang.String[]) $r5;

        $i2 = staticinvoke <android.os.VintfObject: int verify(java.lang.String[])>($r6);

        if $i2 != 0 goto label4;

        z2 = 1;

        goto label5;

     label4:
        z2 = 0;

     label5:
        return z2;

     label6:
        $r3 = new java.io.IOException;

        specialinvoke $r3.<java.io.IOException: void <init>(java.lang.String)>("no entries found in the compatibility file");

        throw $r3;
    }

    public static boolean wipeEuiccData(android.content.Context, java.lang.String)
    {
        android.content.Context r0, $r17, $r19, $r20, $r38, $r39;
        android.telephony.euicc.EuiccManager r1;
        long l0, l7;
        android.content.ContentResolver $r5, r33;
        int $i1;
        java.lang.Object $r6;
        boolean $z0, $z1, $z2;
        java.util.concurrent.CountDownLatch $r7;
        java.util.concurrent.atomic.AtomicBoolean $r8;
        android.os.RecoverySystem$4 $r9;
        android.content.Intent $r10;
        android.os.UserHandle $r12;
        android.content.IntentFilter $r13;
        android.os.HandlerThread $r14;
        android.os.Handler $r15;
        android.os.Looper $r16;
        byte $b2, $b3;
        java.lang.Throwable $r21, $r22, $r23, $r24, $r25, $r26, r35, r36;
        java.lang.String r27;
        android.app.PendingIntent r29;
        java.util.concurrent.TimeUnit r34;
        java.lang.Thread $r37;

        r0 := @parameter0: android.content.Context;

        r27 := @parameter1: java.lang.String;

        $r5 = virtualinvoke r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $i1 = staticinvoke <android.provider.Settings$Global: int getInt(android.content.ContentResolver,java.lang.String,int)>($r5, "euicc_provisioned", 0);

        if $i1 != 0 goto label01;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("RecoverySystem", "Skipping eUICC wipe/retain as it is not provisioned");

        return 1;

     label01:
        $r6 = virtualinvoke r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("euicc");

        r1 = (android.telephony.euicc.EuiccManager) $r6;

        if r1 == null goto label19;

        $z0 = virtualinvoke r1.<android.telephony.euicc.EuiccManager: boolean isEnabled()>();

        if $z0 == 0 goto label19;

        $r7 = new java.util.concurrent.CountDownLatch;

        specialinvoke $r7.<java.util.concurrent.CountDownLatch: void <init>(int)>(1);

        $r8 = new java.util.concurrent.atomic.AtomicBoolean;

        specialinvoke $r8.<java.util.concurrent.atomic.AtomicBoolean: void <init>(boolean)>(0);

        $r9 = new android.os.RecoverySystem$4;

        specialinvoke $r9.<android.os.RecoverySystem$4: void <init>(java.util.concurrent.atomic.AtomicBoolean,java.util.concurrent.CountDownLatch)>($r8, $r7);

        $r10 = new android.content.Intent;

        specialinvoke $r10.<android.content.Intent: void <init>(java.lang.String)>("com.android.internal.action.EUICC_FACTORY_RESET");

        virtualinvoke $r10.<android.content.Intent: android.content.Intent setPackage(java.lang.String)>(r27);

        $r12 = <android.os.UserHandle: android.os.UserHandle SYSTEM>;

        r29 = staticinvoke <android.app.PendingIntent: android.app.PendingIntent getBroadcastAsUser(android.content.Context,int,android.content.Intent,int,android.os.UserHandle)>(r0, 0, $r10, 134217728, $r12);

        $r13 = new android.content.IntentFilter;

        specialinvoke $r13.<android.content.IntentFilter: void <init>()>();

        virtualinvoke $r13.<android.content.IntentFilter: void addAction(java.lang.String)>("com.android.internal.action.EUICC_FACTORY_RESET");

        $r14 = new android.os.HandlerThread;

        specialinvoke $r14.<android.os.HandlerThread: void <init>(java.lang.String)>("euiccWipeFinishReceiverThread");

        virtualinvoke $r14.<android.os.HandlerThread: void start()>();

        $r15 = new android.os.Handler;

        $r16 = virtualinvoke $r14.<android.os.HandlerThread: android.os.Looper getLooper()>();

        specialinvoke $r15.<android.os.Handler: void <init>(android.os.Looper)>($r16);

        $r17 = virtualinvoke r0.<android.content.Context: android.content.Context getApplicationContext()>();

        virtualinvoke $r17.<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter,java.lang.String,android.os.Handler)>($r9, $r13, null, $r15);

        virtualinvoke r1.<android.telephony.euicc.EuiccManager: void eraseSubscriptions(android.app.PendingIntent)>(r29);

     label02:
        r33 = virtualinvoke r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

     label03:
        l0 = staticinvoke <android.provider.Settings$Global: long getLong(android.content.ContentResolver,java.lang.String,long)>(r33, "euicc_factory_reset_timeout_millis", 30000L);

     label04:
        $b2 = l0 cmp 5000L;

        if $b2 >= 0 goto label05;

        l7 = 5000L;

        goto label06;

     label05:
        l7 = l0;

        $b3 = l0 cmp 60000L;

        if $b3 <= 0 goto label06;

        l7 = 60000L;

     label06:
        r34 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>;

     label07:
        $z2 = virtualinvoke $r7.<java.util.concurrent.CountDownLatch: boolean await(long,java.util.concurrent.TimeUnit)>(l7, r34);

        if $z2 != 0 goto label09;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("RecoverySystem", "Timeout wiping eUICC data.");

     label08:
        $r20 = virtualinvoke r0.<android.content.Context: android.content.Context getApplicationContext()>();

        virtualinvoke $r20.<android.content.Context: void unregisterReceiver(android.content.BroadcastReceiver)>($r9);

        return 0;

     label09:
        $r19 = virtualinvoke r0.<android.content.Context: android.content.Context getApplicationContext()>();

        virtualinvoke $r19.<android.content.Context: void unregisterReceiver(android.content.BroadcastReceiver)>($r9);

        $z1 = virtualinvoke $r8.<java.util.concurrent.atomic.AtomicBoolean: boolean get()>();

        return $z1;

     label10:
        $r25 := @caughtexception;

        r35 = $r25;

        goto label15;

     label11:
        $r26 := @caughtexception;

        r36 = $r26;

        goto label18;

     label12:
        $r22 := @caughtexception;

        r35 = $r22;

        goto label15;

     label13:
        $r23 := @caughtexception;

        r36 = $r23;

        goto label18;

     label14:
        $r21 := @caughtexception;

        r35 = $r21;

     label15:
        $r37 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        virtualinvoke $r37.<java.lang.Thread: void interrupt()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("RecoverySystem", "Wiping eUICC data interrupted", r35);

     label16:
        $r38 = virtualinvoke r0.<android.content.Context: android.content.Context getApplicationContext()>();

        virtualinvoke $r38.<android.content.Context: void unregisterReceiver(android.content.BroadcastReceiver)>($r9);

        return 0;

     label17:
        $r24 := @caughtexception;

        r36 = $r24;

     label18:
        $r39 = virtualinvoke r0.<android.content.Context: android.content.Context getApplicationContext()>();

        virtualinvoke $r39.<android.content.Context: void unregisterReceiver(android.content.BroadcastReceiver)>($r9);

        throw r36;

     label19:
        return 0;

        catch java.lang.InterruptedException from label02 to label03 with label14;
        catch java.lang.Throwable from label02 to label03 with label13;
        catch java.lang.InterruptedException from label03 to label04 with label12;
        catch java.lang.Throwable from label03 to label04 with label11;
        catch java.lang.InterruptedException from label06 to label07 with label12;
        catch java.lang.Throwable from label06 to label07 with label11;
        catch java.lang.InterruptedException from label07 to label08 with label10;
        catch java.lang.Throwable from label07 to label08 with label17;
        catch java.lang.Throwable from label15 to label16 with label17;
    }
}
