public class android.os.RedactingFileDescriptor extends java.lang.Object
{
    private static final boolean DEBUG;
    private static final java.lang.String TAG;
    private final android.os.ProxyFileDescriptorCallback mCallback;
    private volatile long[] mFreeOffsets;
    private java.io.FileDescriptor mInner;
    private android.os.ParcelFileDescriptor mOuter;
    private volatile long[] mRedactRanges;

    private void <init>(android.content.Context, java.io.File, int, long[], long[]) throws java.io.IOException
    {
        android.os.RedactingFileDescriptor r0;
        java.io.File r1;
        int i0, $i1;
        long[] r2, r3, $r5;
        java.lang.String $r6;
        java.io.FileDescriptor $r7, $r13;
        java.lang.Object $r8;
        android.os.ProxyFileDescriptorCallback $r9;
        android.os.storage.StorageManager $r10;
        android.os.ParcelFileDescriptor $r11, $r14;
        java.lang.Throwable $r12, $r15;
        java.io.IOException $r16;
        android.content.Context r17;
        android.os.RedactingFileDescriptor$1 r20;
        android.system.ErrnoException r21;

        r0 := @this: android.os.RedactingFileDescriptor;

        r17 := @parameter0: android.content.Context;

        r1 := @parameter1: java.io.File;

        i0 := @parameter2: int;

        r2 := @parameter3: long[];

        r3 := @parameter4: long[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.os.RedactingFileDescriptor: java.io.FileDescriptor mInner> = null;

        r0.<android.os.RedactingFileDescriptor: android.os.ParcelFileDescriptor mOuter> = null;

        r20 = new android.os.RedactingFileDescriptor$1;

        specialinvoke r20.<android.os.RedactingFileDescriptor$1: void <init>(android.os.RedactingFileDescriptor)>(r0);

        r0.<android.os.RedactingFileDescriptor: android.os.ProxyFileDescriptorCallback mCallback> = r20;

        $r5 = staticinvoke <android.os.RedactingFileDescriptor: long[] checkRangesArgument(long[])>(r2);

        r0.<android.os.RedactingFileDescriptor: long[] mRedactRanges> = $r5;

        r0.<android.os.RedactingFileDescriptor: long[] mFreeOffsets> = r3;

     label1:
        $r6 = virtualinvoke r1.<java.io.File: java.lang.String getAbsolutePath()>();

        $i1 = staticinvoke <android.os.FileUtils: int translateModePfdToPosix(int)>(i0);

        $r7 = staticinvoke <android.system.Os: java.io.FileDescriptor open(java.lang.String,int,int)>($r6, $i1, 0);

        r0.<android.os.RedactingFileDescriptor: java.io.FileDescriptor mInner> = $r7;

        $r8 = virtualinvoke r17.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/os/storage/StorageManager;");

        $r10 = (android.os.storage.StorageManager) $r8;

        $r9 = r0.<android.os.RedactingFileDescriptor: android.os.ProxyFileDescriptorCallback mCallback>;

        $r11 = virtualinvoke $r10.<android.os.storage.StorageManager: android.os.ParcelFileDescriptor openProxyFileDescriptor(int,android.os.ProxyFileDescriptorCallback)>(i0, $r9);

        r0.<android.os.RedactingFileDescriptor: android.os.ParcelFileDescriptor mOuter> = $r11;

     label2:
        return;

     label3:
        $r12 := @caughtexception;

        goto label6;

     label4:
        $r15 := @caughtexception;

     label5:
        r21 = (android.system.ErrnoException) $r15;

        $r16 = virtualinvoke r21.<android.system.ErrnoException: java.io.IOException rethrowAsIOException()>();

        throw $r16;

     label6:
        $r13 = r0.<android.os.RedactingFileDescriptor: java.io.FileDescriptor mInner>;

        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.io.FileDescriptor)>($r13);

        $r14 = r0.<android.os.RedactingFileDescriptor: android.os.ParcelFileDescriptor mOuter>;

        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>($r14);

        throw $r12;

        catch android.system.ErrnoException from label1 to label2 with label4;
        catch java.io.IOException from label1 to label2 with label3;
        catch java.io.IOException from label5 to label6 with label3;
    }

    static java.io.FileDescriptor access$000(android.os.RedactingFileDescriptor)
    {
        android.os.RedactingFileDescriptor r0;
        java.io.FileDescriptor $r1;

        r0 := @parameter0: android.os.RedactingFileDescriptor;

        $r1 = r0.<android.os.RedactingFileDescriptor: java.io.FileDescriptor mInner>;

        return $r1;
    }

    static long[] access$100(android.os.RedactingFileDescriptor)
    {
        android.os.RedactingFileDescriptor r0;
        long[] $r1;

        r0 := @parameter0: android.os.RedactingFileDescriptor;

        $r1 = r0.<android.os.RedactingFileDescriptor: long[] mRedactRanges>;

        return $r1;
    }

    static long[] access$102(android.os.RedactingFileDescriptor, long[])
    {
        android.os.RedactingFileDescriptor r0;
        long[] r1;

        r0 := @parameter0: android.os.RedactingFileDescriptor;

        r1 := @parameter1: long[];

        r0.<android.os.RedactingFileDescriptor: long[] mRedactRanges> = r1;

        return r1;
    }

    static long[] access$200(android.os.RedactingFileDescriptor)
    {
        android.os.RedactingFileDescriptor r0;
        long[] $r1;

        r0 := @parameter0: android.os.RedactingFileDescriptor;

        $r1 = r0.<android.os.RedactingFileDescriptor: long[] mFreeOffsets>;

        return $r1;
    }

    private static long[] checkRangesArgument(long[])
    {
        long[] r0;
        int $i0, $i1, $i2, $i3, $i4, i8;
        java.lang.IllegalArgumentException $r1, $r2;
        long $l5, $l6;
        byte $b7;

        r0 := @parameter0: long[];

        $i0 = lengthof r0;

        $i1 = $i0 % 2;

        if $i1 != 0 goto label4;

        i8 = 0;

     label1:
        $i2 = lengthof r0;

        $i3 = $i2 - 1;

        if i8 >= $i3 goto label3;

        $l6 = r0[i8];

        $i4 = i8 + 1;

        $l5 = r0[$i4];

        $b7 = $l6 cmp $l5;

        if $b7 > 0 goto label2;

        i8 = i8 + 2;

        goto label1;

     label2:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r2;

     label3:
        return r0;

     label4:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r1;
    }

    public static android.os.ParcelFileDescriptor open(android.content.Context, java.io.File, int, long[], long[]) throws java.io.IOException
    {
        android.content.Context r0;
        java.io.File r1;
        int i0;
        long[] r2, r3;
        android.os.RedactingFileDescriptor $r4;
        android.os.ParcelFileDescriptor $r5;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.io.File;

        i0 := @parameter2: int;

        r2 := @parameter3: long[];

        r3 := @parameter4: long[];

        $r4 = new android.os.RedactingFileDescriptor;

        specialinvoke $r4.<android.os.RedactingFileDescriptor: void <init>(android.content.Context,java.io.File,int,long[],long[])>(r0, r1, i0, r2, r3);

        $r5 = $r4.<android.os.RedactingFileDescriptor: android.os.ParcelFileDescriptor mOuter>;

        return $r5;
    }

    public static long[] removeRange(long[], long, long)
    {
        long[] r0, r2;
        long l0, l1, $l5, $l7, $l11, $l14, $l18, $l21, $l25, $l27, $l29, $l32, $l34, $l36, $l41, $l49, $l52, $l55;
        byte $b2, $b3, $b6, $b8, $b12, $b22, $b30, $b37, $b53, $b56;
        java.lang.IllegalArgumentException $r1;
        int $i4, $i9, $i10, $i13, $i15, $i16, $i17, $i19, $i20, $i23, $i24, $i26, $i28, $i31, $i33, $i35, $i38, $i39, $i40, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i50, $i51, i54;

        r0 := @parameter0: long[];

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        $b2 = l0 cmp l1;

        if $b2 != 0 goto label01;

        return r0;

     label01:
        $b3 = l0 cmp l1;

        if $b3 > 0 goto label10;

        r2 = <libcore.util.EmptyArray: long[] LONG>;

        i54 = 0;

     label02:
        $i4 = lengthof r0;

        if i54 >= $i4 goto label09;

        $l5 = r0[i54];

        $b6 = l0 cmp $l5;

        if $b6 > 0 goto label03;

        $i51 = i54 + 1;

        $l52 = r0[$i51];

        $b53 = l1 cmp $l52;

        if $b53 < 0 goto label03;

        goto label08;

     label03:
        $l7 = r0[i54];

        $b8 = l0 cmp $l7;

        if $b8 < 0 goto label04;

        $i35 = i54 + 1;

        $l36 = r0[$i35];

        $b37 = l1 cmp $l36;

        if $b37 > 0 goto label04;

        $i38 = lengthof r2;

        $i39 = $i38 + 4;

        r2 = staticinvoke <java.util.Arrays: long[] copyOf(long[],int)>(r2, $i39);

        $i40 = lengthof r2;

        $i42 = $i40 - 4;

        $l41 = r0[i54];

        r2[$i42] = $l41;

        $i43 = lengthof r2;

        $i44 = $i43 - 3;

        r2[$i44] = l0;

        $i45 = lengthof r2;

        $i46 = $i45 - 2;

        r2[$i46] = l1;

        $i47 = lengthof r2;

        $i50 = $i47 - 1;

        $i48 = i54 + 1;

        $l49 = r0[$i48];

        r2[$i50] = $l49;

        goto label08;

     label04:
        $i9 = lengthof r2;

        $i10 = $i9 + 2;

        r2 = staticinvoke <java.util.Arrays: long[] copyOf(long[],int)>(r2, $i10);

        $l11 = r0[i54];

        $b12 = l1 cmp $l11;

        if $b12 < 0 goto label05;

        $i28 = i54 + 1;

        $l29 = r0[$i28];

        $b30 = l1 cmp $l29;

        if $b30 > 0 goto label05;

        $i31 = lengthof r2;

        $i33 = $i31 - 2;

        $l32 = r0[i54];

        $l34 = staticinvoke <java.lang.Math: long max(long,long)>($l32, l1);

        r2[$i33] = $l34;

        goto label06;

     label05:
        $i13 = lengthof r2;

        $i15 = $i13 - 2;

        $l14 = r0[i54];

        r2[$i15] = $l14;

     label06:
        $l55 = r0[i54];

        $b56 = l0 cmp $l55;

        if $b56 < 0 goto label07;

        $i20 = i54 + 1;

        $l21 = r0[$i20];

        $b22 = l0 cmp $l21;

        if $b22 > 0 goto label07;

        $i23 = lengthof r2;

        $i26 = $i23 - 1;

        $i24 = i54 + 1;

        $l25 = r0[$i24];

        $l27 = staticinvoke <java.lang.Math: long min(long,long)>($l25, l0);

        r2[$i26] = $l27;

        goto label08;

     label07:
        $i16 = lengthof r2;

        $i19 = $i16 - 1;

        $i17 = i54 + 1;

        $l18 = r0[$i17];

        r2[$i19] = $l18;

     label08:
        i54 = i54 + 2;

        goto label02;

     label09:
        return r2;

     label10:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r1;
    }

    public static void <clinit>()
    {
        <android.os.RedactingFileDescriptor: java.lang.String TAG> = "RedactingFileDescriptor";

        <android.os.RedactingFileDescriptor: boolean DEBUG> = 1;

        return;
    }
}
