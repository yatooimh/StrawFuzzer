class android.os.RemoteCallback$2 extends java.lang.Object implements java.lang.Runnable
{
    final android.os.RemoteCallback this$0;
    final android.os.Bundle val$result;

    void <init>(android.os.RemoteCallback, android.os.Bundle)
    {
        android.os.RemoteCallback$2 r0;
        android.os.RemoteCallback r1;
        android.os.Bundle r2;

        r0 := @this: android.os.RemoteCallback$2;

        r1 := @parameter0: android.os.RemoteCallback;

        r2 := @parameter1: android.os.Bundle;

        r0.<android.os.RemoteCallback$2: android.os.RemoteCallback this$0> = r1;

        r0.<android.os.RemoteCallback$2: android.os.Bundle val$result> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        android.os.RemoteCallback$2 r0;
        android.os.RemoteCallback $r1;
        android.os.RemoteCallback$OnResultListener $r2;
        android.os.Bundle $r3;

        r0 := @this: android.os.RemoteCallback$2;

        $r1 = r0.<android.os.RemoteCallback$2: android.os.RemoteCallback this$0>;

        $r2 = staticinvoke <android.os.RemoteCallback: android.os.RemoteCallback$OnResultListener access$000(android.os.RemoteCallback)>($r1);

        $r3 = r0.<android.os.RemoteCallback$2: android.os.Bundle val$result>;

        interfaceinvoke $r2.<android.os.RemoteCallback$OnResultListener: void onResult(android.os.Bundle)>($r3);

        return;
    }
}
