class android.os.RevocableFileDescriptor$1 extends android.os.ProxyFileDescriptorCallback
{
    final android.os.RevocableFileDescriptor this$0;

    void <init>(android.os.RevocableFileDescriptor)
    {
        android.os.RevocableFileDescriptor$1 r0;
        android.os.RevocableFileDescriptor r1;

        r0 := @this: android.os.RevocableFileDescriptor$1;

        r1 := @parameter0: android.os.RevocableFileDescriptor;

        r0.<android.os.RevocableFileDescriptor$1: android.os.RevocableFileDescriptor this$0> = r1;

        specialinvoke r0.<android.os.ProxyFileDescriptorCallback: void <init>()>();

        return;
    }

    private void checkRevoked() throws android.system.ErrnoException
    {
        android.os.RevocableFileDescriptor$1 r0;
        android.os.RevocableFileDescriptor $r1;
        boolean $z0;
        int $i0;
        android.system.ErrnoException r3;
        java.lang.Throwable r4;

        r0 := @this: android.os.RevocableFileDescriptor$1;

        $r1 = r0.<android.os.RevocableFileDescriptor$1: android.os.RevocableFileDescriptor this$0>;

        $z0 = staticinvoke <android.os.RevocableFileDescriptor: boolean access$000(android.os.RevocableFileDescriptor)>($r1);

        if $z0 != 0 goto label1;

        return;

     label1:
        r3 = new android.system.ErrnoException;

        $i0 = <android.system.OsConstants: int EPERM>;

        specialinvoke r3.<android.system.ErrnoException: void <init>(java.lang.String,int)>("RevocableFileDescriptor", $i0);

        r4 = (java.lang.Throwable) r3;

        throw r4;
    }

    public void onFsync() throws android.system.ErrnoException
    {
        android.os.RevocableFileDescriptor$1 r0;
        android.os.RevocableFileDescriptor $r1;
        java.io.FileDescriptor $r2;

        r0 := @this: android.os.RevocableFileDescriptor$1;

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("RevocableFileDescriptor", "onFsync()");

        specialinvoke r0.<android.os.RevocableFileDescriptor$1: void checkRevoked()>();

        $r1 = r0.<android.os.RevocableFileDescriptor$1: android.os.RevocableFileDescriptor this$0>;

        $r2 = staticinvoke <android.os.RevocableFileDescriptor: java.io.FileDescriptor access$100(android.os.RevocableFileDescriptor)>($r1);

        staticinvoke <android.system.Os: void fsync(java.io.FileDescriptor)>($r2);

        return;
    }

    public long onGetSize() throws android.system.ErrnoException
    {
        android.os.RevocableFileDescriptor$1 r0;
        android.os.RevocableFileDescriptor $r1;
        java.io.FileDescriptor $r2;
        android.system.StructStat $r3;
        long $l0;

        r0 := @this: android.os.RevocableFileDescriptor$1;

        specialinvoke r0.<android.os.RevocableFileDescriptor$1: void checkRevoked()>();

        $r1 = r0.<android.os.RevocableFileDescriptor$1: android.os.RevocableFileDescriptor this$0>;

        $r2 = staticinvoke <android.os.RevocableFileDescriptor: java.io.FileDescriptor access$100(android.os.RevocableFileDescriptor)>($r1);

        $r3 = staticinvoke <android.system.Os: android.system.StructStat fstat(java.io.FileDescriptor)>($r2);

        $l0 = $r3.<android.system.StructStat: long st_size>;

        return $l0;
    }

    public int onRead(long, int, byte[]) throws android.system.ErrnoException
    {
        android.os.RevocableFileDescriptor$1 r0;
        long l0, $l2, $l3;
        int i1, $i4, $i5, i6, i7, i8;
        byte[] r1;
        android.os.RevocableFileDescriptor $r3;
        java.io.FileDescriptor $r4;
        java.lang.Throwable $r5;
        java.io.InterruptedIOException r6;

        r0 := @this: android.os.RevocableFileDescriptor$1;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        r1 := @parameter2: byte[];

        specialinvoke r0.<android.os.RevocableFileDescriptor$1: void checkRevoked()>();

        i6 = 0;

     label1:
        i7 = i6;

        if i6 >= i1 goto label5;

     label2:
        $r3 = r0.<android.os.RevocableFileDescriptor$1: android.os.RevocableFileDescriptor this$0>;

        $r4 = staticinvoke <android.os.RevocableFileDescriptor: java.io.FileDescriptor access$100(android.os.RevocableFileDescriptor)>($r3);

        $i4 = i1 - i6;

        $l2 = (long) i6;

        $l3 = l0 + $l2;

        i8 = staticinvoke <android.system.Os: int pread(java.io.FileDescriptor,byte[],int,int,long)>($r4, r1, i6, $i4, $l3);

     label3:
        i7 = i6 + i8;

        goto label5;

     label4:
        $r5 := @caughtexception;

        r6 = (java.io.InterruptedIOException) $r5;

        $i5 = r6.<java.io.InterruptedIOException: int bytesTransferred>;

        i6 = i6 + $i5;

        goto label1;

     label5:
        return i7;

        catch java.io.InterruptedIOException from label2 to label3 with label4;
    }

    public void onRelease()
    {
        android.os.RevocableFileDescriptor$1 r0;
        android.os.RevocableFileDescriptor $r1, $r2, $r4, $r6;
        java.io.FileDescriptor $r3;
        android.os.ParcelFileDescriptor$OnCloseListener $r5, $r7;

        r0 := @this: android.os.RevocableFileDescriptor$1;

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("RevocableFileDescriptor", "onRelease()");

        $r1 = r0.<android.os.RevocableFileDescriptor$1: android.os.RevocableFileDescriptor this$0>;

        staticinvoke <android.os.RevocableFileDescriptor: boolean access$002(android.os.RevocableFileDescriptor,boolean)>($r1, 1);

        $r2 = r0.<android.os.RevocableFileDescriptor$1: android.os.RevocableFileDescriptor this$0>;

        $r3 = staticinvoke <android.os.RevocableFileDescriptor: java.io.FileDescriptor access$100(android.os.RevocableFileDescriptor)>($r2);

        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.io.FileDescriptor)>($r3);

        $r4 = r0.<android.os.RevocableFileDescriptor$1: android.os.RevocableFileDescriptor this$0>;

        $r5 = staticinvoke <android.os.RevocableFileDescriptor: android.os.ParcelFileDescriptor$OnCloseListener access$200(android.os.RevocableFileDescriptor)>($r4);

        if $r5 == null goto label1;

        $r6 = r0.<android.os.RevocableFileDescriptor$1: android.os.RevocableFileDescriptor this$0>;

        $r7 = staticinvoke <android.os.RevocableFileDescriptor: android.os.ParcelFileDescriptor$OnCloseListener access$200(android.os.RevocableFileDescriptor)>($r6);

        interfaceinvoke $r7.<android.os.ParcelFileDescriptor$OnCloseListener: void onClose(java.io.IOException)>(null);

     label1:
        return;
    }

    public int onWrite(long, int, byte[]) throws android.system.ErrnoException
    {
        android.os.RevocableFileDescriptor$1 r0;
        long l0, $l2, $l3;
        int i1, $i4, $i5, i6, i7, i8;
        byte[] r1;
        android.os.RevocableFileDescriptor $r3;
        java.io.FileDescriptor $r4;
        java.lang.Throwable $r5;
        java.io.InterruptedIOException r6;

        r0 := @this: android.os.RevocableFileDescriptor$1;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        r1 := @parameter2: byte[];

        specialinvoke r0.<android.os.RevocableFileDescriptor$1: void checkRevoked()>();

        i6 = 0;

     label1:
        i7 = i6;

        if i6 >= i1 goto label5;

     label2:
        $r3 = r0.<android.os.RevocableFileDescriptor$1: android.os.RevocableFileDescriptor this$0>;

        $r4 = staticinvoke <android.os.RevocableFileDescriptor: java.io.FileDescriptor access$100(android.os.RevocableFileDescriptor)>($r3);

        $i4 = i1 - i6;

        $l2 = (long) i6;

        $l3 = l0 + $l2;

        i8 = staticinvoke <android.system.Os: int pwrite(java.io.FileDescriptor,byte[],int,int,long)>($r4, r1, i6, $i4, $l3);

     label3:
        i7 = i6 + i8;

        goto label5;

     label4:
        $r5 := @caughtexception;

        r6 = (java.io.InterruptedIOException) $r5;

        $i5 = r6.<java.io.InterruptedIOException: int bytesTransferred>;

        i6 = i6 + $i5;

        goto label1;

     label5:
        return i7;

        catch java.io.InterruptedIOException from label2 to label3 with label4;
    }
}
