public class android.os.RevocableFileDescriptor extends java.lang.Object
{
    private static final boolean DEBUG;
    private static final java.lang.String TAG;
    private final android.os.ProxyFileDescriptorCallback mCallback;
    private java.io.FileDescriptor mInner;
    private android.os.ParcelFileDescriptor$OnCloseListener mOnCloseListener;
    private android.os.ParcelFileDescriptor mOuter;
    private volatile boolean mRevoked;

    public void <init>()
    {
        android.os.RevocableFileDescriptor r0;
        android.os.RevocableFileDescriptor$1 $r1;

        r0 := @this: android.os.RevocableFileDescriptor;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new android.os.RevocableFileDescriptor$1;

        specialinvoke $r1.<android.os.RevocableFileDescriptor$1: void <init>(android.os.RevocableFileDescriptor)>(r0);

        r0.<android.os.RevocableFileDescriptor: android.os.ProxyFileDescriptorCallback mCallback> = $r1;

        return;
    }

    public void <init>(android.content.Context, java.io.File) throws java.io.IOException
    {
        android.os.RevocableFileDescriptor r0;
        java.io.File r1;
        java.lang.String $r3;
        int $i0, $i1, $i2;
        java.io.FileDescriptor $r4;
        java.lang.Throwable $r5;
        java.io.IOException $r6;
        android.content.Context r7;
        android.os.RevocableFileDescriptor$1 r9;
        android.system.ErrnoException r10;

        r0 := @this: android.os.RevocableFileDescriptor;

        r7 := @parameter0: android.content.Context;

        r1 := @parameter1: java.io.File;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r9 = new android.os.RevocableFileDescriptor$1;

        specialinvoke r9.<android.os.RevocableFileDescriptor$1: void <init>(android.os.RevocableFileDescriptor)>(r0);

        r0.<android.os.RevocableFileDescriptor: android.os.ProxyFileDescriptorCallback mCallback> = r9;

     label1:
        $r3 = virtualinvoke r1.<java.io.File: java.lang.String getAbsolutePath()>();

        $i1 = <android.system.OsConstants: int O_CREAT>;

        $i0 = <android.system.OsConstants: int O_RDWR>;

        $i2 = $i1 | $i0;

        $r4 = staticinvoke <android.system.Os: java.io.FileDescriptor open(java.lang.String,int,int)>($r3, $i2, 448);

        virtualinvoke r0.<android.os.RevocableFileDescriptor: void init(android.content.Context,java.io.FileDescriptor)>(r7, $r4);

     label2:
        return;

     label3:
        $r5 := @caughtexception;

        r10 = (android.system.ErrnoException) $r5;

        $r6 = virtualinvoke r10.<android.system.ErrnoException: java.io.IOException rethrowAsIOException()>();

        throw $r6;

        catch android.system.ErrnoException from label1 to label2 with label3;
    }

    public void <init>(android.content.Context, java.io.FileDescriptor) throws java.io.IOException
    {
        android.os.RevocableFileDescriptor r0;
        android.content.Context r1;
        java.io.FileDescriptor r2;
        android.os.RevocableFileDescriptor$1 $r3;

        r0 := @this: android.os.RevocableFileDescriptor;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.io.FileDescriptor;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new android.os.RevocableFileDescriptor$1;

        specialinvoke $r3.<android.os.RevocableFileDescriptor$1: void <init>(android.os.RevocableFileDescriptor)>(r0);

        r0.<android.os.RevocableFileDescriptor: android.os.ProxyFileDescriptorCallback mCallback> = $r3;

        virtualinvoke r0.<android.os.RevocableFileDescriptor: void init(android.content.Context,java.io.FileDescriptor)>(r1, r2);

        return;
    }

    static boolean access$000(android.os.RevocableFileDescriptor)
    {
        android.os.RevocableFileDescriptor r0;
        boolean $z0;

        r0 := @parameter0: android.os.RevocableFileDescriptor;

        $z0 = r0.<android.os.RevocableFileDescriptor: boolean mRevoked>;

        return $z0;
    }

    static boolean access$002(android.os.RevocableFileDescriptor, boolean)
    {
        android.os.RevocableFileDescriptor r0;
        boolean z0;

        r0 := @parameter0: android.os.RevocableFileDescriptor;

        z0 := @parameter1: boolean;

        r0.<android.os.RevocableFileDescriptor: boolean mRevoked> = z0;

        return z0;
    }

    static java.io.FileDescriptor access$100(android.os.RevocableFileDescriptor)
    {
        android.os.RevocableFileDescriptor r0;
        java.io.FileDescriptor $r1;

        r0 := @parameter0: android.os.RevocableFileDescriptor;

        $r1 = r0.<android.os.RevocableFileDescriptor: java.io.FileDescriptor mInner>;

        return $r1;
    }

    static android.os.ParcelFileDescriptor$OnCloseListener access$200(android.os.RevocableFileDescriptor)
    {
        android.os.RevocableFileDescriptor r0;
        android.os.ParcelFileDescriptor$OnCloseListener $r1;

        r0 := @parameter0: android.os.RevocableFileDescriptor;

        $r1 = r0.<android.os.RevocableFileDescriptor: android.os.ParcelFileDescriptor$OnCloseListener mOnCloseListener>;

        return $r1;
    }

    public void addOnCloseListener(android.os.ParcelFileDescriptor$OnCloseListener)
    {
        android.os.RevocableFileDescriptor r0;
        android.os.ParcelFileDescriptor$OnCloseListener r1;

        r0 := @this: android.os.RevocableFileDescriptor;

        r1 := @parameter0: android.os.ParcelFileDescriptor$OnCloseListener;

        r0.<android.os.RevocableFileDescriptor: android.os.ParcelFileDescriptor$OnCloseListener mOnCloseListener> = r1;

        return;
    }

    public android.os.ParcelFileDescriptor getRevocableFileDescriptor()
    {
        android.os.RevocableFileDescriptor r0;
        android.os.ParcelFileDescriptor $r1;

        r0 := @this: android.os.RevocableFileDescriptor;

        $r1 = r0.<android.os.RevocableFileDescriptor: android.os.ParcelFileDescriptor mOuter>;

        return $r1;
    }

    public void init(android.content.Context, java.io.FileDescriptor) throws java.io.IOException
    {
        android.os.RevocableFileDescriptor r0;
        android.content.Context r1;
        java.io.FileDescriptor r2;
        java.lang.Object $r3;
        android.os.ProxyFileDescriptorCallback $r4;
        android.os.storage.StorageManager $r5;
        android.os.ParcelFileDescriptor $r6;

        r0 := @this: android.os.RevocableFileDescriptor;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.io.FileDescriptor;

        r0.<android.os.RevocableFileDescriptor: java.io.FileDescriptor mInner> = r2;

        $r3 = virtualinvoke r1.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/os/storage/StorageManager;");

        $r5 = (android.os.storage.StorageManager) $r3;

        $r4 = r0.<android.os.RevocableFileDescriptor: android.os.ProxyFileDescriptorCallback mCallback>;

        $r6 = virtualinvoke $r5.<android.os.storage.StorageManager: android.os.ParcelFileDescriptor openProxyFileDescriptor(int,android.os.ProxyFileDescriptorCallback)>(805306368, $r4);

        r0.<android.os.RevocableFileDescriptor: android.os.ParcelFileDescriptor mOuter> = $r6;

        return;
    }

    public boolean isRevoked()
    {
        android.os.RevocableFileDescriptor r0;
        boolean $z0;

        r0 := @this: android.os.RevocableFileDescriptor;

        $z0 = r0.<android.os.RevocableFileDescriptor: boolean mRevoked>;

        return $z0;
    }

    public void revoke()
    {
        android.os.RevocableFileDescriptor r0;
        java.io.FileDescriptor $r1;

        r0 := @this: android.os.RevocableFileDescriptor;

        r0.<android.os.RevocableFileDescriptor: boolean mRevoked> = 1;

        $r1 = r0.<android.os.RevocableFileDescriptor: java.io.FileDescriptor mInner>;

        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.io.FileDescriptor)>($r1);

        return;
    }

    public static void <clinit>()
    {
        <android.os.RevocableFileDescriptor: java.lang.String TAG> = "RevocableFileDescriptor";

        <android.os.RevocableFileDescriptor: boolean DEBUG> = 1;

        return;
    }
}
