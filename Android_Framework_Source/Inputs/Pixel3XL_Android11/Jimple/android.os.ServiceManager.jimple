public final class android.os.ServiceManager extends java.lang.Object
{
    private static final int GET_SERVICE_LOG_EVERY_CALLS_CORE;
    private static final int GET_SERVICE_LOG_EVERY_CALLS_NON_CORE;
    private static final long GET_SERVICE_SLOW_THRESHOLD_US_CORE;
    private static final long GET_SERVICE_SLOW_THRESHOLD_US_NON_CORE;
    private static final int SLOW_LOG_INTERVAL_MS;
    private static final int STATS_LOG_INTERVAL_MS;
    private static final java.lang.String TAG;
    private static java.util.Map sCache;
    private static int sGetServiceAccumulatedCallCount;
    private static int sGetServiceAccumulatedUs;
    private static long sLastSlowLogActualTime;
    private static long sLastSlowLogUptime;
    private static long sLastStatsLogUptime;
    private static final java.lang.Object sLock;
    private static android.os.IServiceManager sServiceManager;
    public static final com.android.internal.util.StatLogger sStatLogger;

    static void <clinit>()
    {
        java.lang.Object $r0;
        android.util.ArrayMap $r1;
        int $i0, $i1, $i3, $i4, $i6, $i7;
        long $l2, $l5;
        com.android.internal.util.StatLogger $r2;
        java.lang.String[] $r3;

        <android.os.ServiceManager: java.lang.String TAG> = "ServiceManager";

        <android.os.ServiceManager: int STATS_LOG_INTERVAL_MS> = 5000;

        <android.os.ServiceManager: int SLOW_LOG_INTERVAL_MS> = 5000;

        $r0 = new java.lang.Object;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        <android.os.ServiceManager: java.lang.Object sLock> = $r0;

        $r1 = new android.util.ArrayMap;

        specialinvoke $r1.<android.util.ArrayMap: void <init>()>();

        <android.os.ServiceManager: java.util.Map sCache> = $r1;

        $i0 = staticinvoke <android.os.SystemProperties: int getInt(java.lang.String,int)>("debug.servicemanager.slow_call_core_ms", 10);

        $i1 = $i0 * 1000;

        $l2 = (long) $i1;

        <android.os.ServiceManager: long GET_SERVICE_SLOW_THRESHOLD_US_CORE> = $l2;

        $i3 = staticinvoke <android.os.SystemProperties: int getInt(java.lang.String,int)>("debug.servicemanager.slow_call_ms", 50);

        $i4 = $i3 * 1000;

        $l5 = (long) $i4;

        <android.os.ServiceManager: long GET_SERVICE_SLOW_THRESHOLD_US_NON_CORE> = $l5;

        $i6 = staticinvoke <android.os.SystemProperties: int getInt(java.lang.String,int)>("debug.servicemanager.log_calls_core", 100);

        <android.os.ServiceManager: int GET_SERVICE_LOG_EVERY_CALLS_CORE> = $i6;

        $i7 = staticinvoke <android.os.SystemProperties: int getInt(java.lang.String,int)>("debug.servicemanager.log_calls", 200);

        <android.os.ServiceManager: int GET_SERVICE_LOG_EVERY_CALLS_NON_CORE> = $i7;

        $r2 = new com.android.internal.util.StatLogger;

        $r3 = newarray (java.lang.String)[1];

        $r3[0] = "getService()";

        specialinvoke $r2.<com.android.internal.util.StatLogger: void <init>(java.lang.String[])>($r3);

        <android.os.ServiceManager: com.android.internal.util.StatLogger sStatLogger> = $r2;

        return;
    }

    public void <init>()
    {
        android.os.ServiceManager r0;

        r0 := @this: android.os.ServiceManager;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void addService(java.lang.String, android.os.IBinder)
    {
        java.lang.String r0;
        android.os.IBinder r1;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: android.os.IBinder;

        staticinvoke <android.os.ServiceManager: void addService(java.lang.String,android.os.IBinder,boolean,int)>(r0, r1, 0, 8);

        return;
    }

    public static void addService(java.lang.String, android.os.IBinder, boolean)
    {
        java.lang.String r0;
        android.os.IBinder r1;
        boolean z0;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: android.os.IBinder;

        z0 := @parameter2: boolean;

        staticinvoke <android.os.ServiceManager: void addService(java.lang.String,android.os.IBinder,boolean,int)>(r0, r1, z0, 8);

        return;
    }

    public static void addService(java.lang.String, android.os.IBinder, boolean, int)
    {
        android.os.IBinder r0;
        boolean z0;
        int i0;
        android.os.IServiceManager $r1;
        android.os.RemoteException $r2;
        java.lang.String r3;

        r3 := @parameter0: java.lang.String;

        r0 := @parameter1: android.os.IBinder;

        z0 := @parameter2: boolean;

        i0 := @parameter3: int;

     label1:
        $r1 = staticinvoke <android.os.ServiceManager: android.os.IServiceManager getIServiceManager()>();

        interfaceinvoke $r1.<android.os.IServiceManager: void addService(java.lang.String,android.os.IBinder,boolean,int)>(r3, r0, z0, i0);

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ServiceManager", "error in addService", $r2);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public static android.os.IBinder checkService(java.lang.String)
    {
        android.os.IBinder r0, $r4, r7;
        java.util.Map $r1;
        java.lang.Object $r2;
        android.os.IServiceManager $r3;
        android.os.RemoteException $r5;
        java.lang.String r6;

        r6 := @parameter0: java.lang.String;

     label1:
        $r1 = <android.os.ServiceManager: java.util.Map sCache>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r6);

        r0 = (android.os.IBinder) $r2;

     label2:
        if r0 == null goto label3;

        return r0;

     label3:
        $r3 = staticinvoke <android.os.ServiceManager: android.os.IServiceManager getIServiceManager()>();

        $r4 = interfaceinvoke $r3.<android.os.IServiceManager: android.os.IBinder checkService(java.lang.String)>(r6);

        r7 = staticinvoke <android.os.Binder: android.os.IBinder allowBlocking(android.os.IBinder)>($r4);

     label4:
        return r7;

     label5:
        $r5 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ServiceManager", "error in checkService", $r5);

        return null;

        catch android.os.RemoteException from label1 to label2 with label5;
        catch android.os.RemoteException from label3 to label4 with label5;
    }

    private static android.os.IServiceManager getIServiceManager()
    {
        android.os.IBinder $r0, $r1;
        android.os.IServiceManager r2, r3;

        r2 = <android.os.ServiceManager: android.os.IServiceManager sServiceManager>;

        if r2 == null goto label1;

        return r2;

     label1:
        $r0 = staticinvoke <com.android.internal.os.BinderInternal: android.os.IBinder getContextObject()>();

        $r1 = staticinvoke <android.os.Binder: android.os.IBinder allowBlocking(android.os.IBinder)>($r0);

        r3 = staticinvoke <android.os.ServiceManagerNative: android.os.IServiceManager asInterface(android.os.IBinder)>($r1);

        <android.os.ServiceManager: android.os.IServiceManager sServiceManager> = r3;

        return r3;
    }

    public static android.os.IBinder getService(java.lang.String)
    {
        android.os.IBinder r0, $r3, r6;
        java.util.Map $r1;
        java.lang.Object $r2;
        android.os.RemoteException $r4;
        java.lang.String r5;

        r5 := @parameter0: java.lang.String;

     label1:
        $r1 = <android.os.ServiceManager: java.util.Map sCache>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r5);

        r0 = (android.os.IBinder) $r2;

     label2:
        if r0 == null goto label3;

        return r0;

     label3:
        $r3 = staticinvoke <android.os.ServiceManager: android.os.IBinder rawGetService(java.lang.String)>(r5);

        r6 = staticinvoke <android.os.Binder: android.os.IBinder allowBlocking(android.os.IBinder)>($r3);

     label4:
        return r6;

     label5:
        $r4 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ServiceManager", "error in getService", $r4);

        return null;

        catch android.os.RemoteException from label1 to label2 with label5;
        catch android.os.RemoteException from label3 to label4 with label5;
    }

    public static android.os.IBinder getServiceOrThrow(java.lang.String) throws android.os.ServiceManager$ServiceNotFoundException
    {
        java.lang.String r0;
        android.os.IBinder r1;
        android.os.ServiceManager$ServiceNotFoundException $r2;

        r0 := @parameter0: java.lang.String;

        r1 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>(r0);

        if r1 == null goto label1;

        return r1;

     label1:
        $r2 = new android.os.ServiceManager$ServiceNotFoundException;

        specialinvoke $r2.<android.os.ServiceManager$ServiceNotFoundException: void <init>(java.lang.String)>(r0);

        throw $r2;
    }

    public static void initServiceCache(java.util.Map)
    {
        java.util.Map r0, $r1, $r3;
        int $i0;
        java.lang.IllegalStateException $r2;

        r0 := @parameter0: java.util.Map;

        $r1 = <android.os.ServiceManager: java.util.Map sCache>;

        $i0 = interfaceinvoke $r1.<java.util.Map: int size()>();

        if $i0 != 0 goto label1;

        $r3 = <android.os.ServiceManager: java.util.Map sCache>;

        interfaceinvoke $r3.<java.util.Map: void putAll(java.util.Map)>(r0);

        return;

     label1:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("setServiceCache may only be called once");

        throw $r2;
    }

    public static boolean isDeclared(java.lang.String)
    {
        boolean z0;
        android.os.IServiceManager $r0;
        android.os.RemoteException $r1;
        java.lang.String r2;

        r2 := @parameter0: java.lang.String;

     label1:
        $r0 = staticinvoke <android.os.ServiceManager: android.os.IServiceManager getIServiceManager()>();

        z0 = interfaceinvoke $r0.<android.os.IServiceManager: boolean isDeclared(java.lang.String)>(r2);

     label2:
        return z0;

     label3:
        $r1 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ServiceManager", "error in isDeclared", $r1);

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public static java.lang.String[] listServices()
    {
        android.os.IServiceManager $r0;
        android.os.RemoteException $r1;
        java.lang.String[] r2;

     label1:
        $r0 = staticinvoke <android.os.ServiceManager: android.os.IServiceManager getIServiceManager()>();

        r2 = interfaceinvoke $r0.<android.os.IServiceManager: java.lang.String[] listServices(int)>(15);

     label2:
        return r2;

     label3:
        $r1 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ServiceManager", "error in listServices", $r1);

        return null;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    private static android.os.IBinder rawGetService(java.lang.String) throws android.os.RemoteException
    {
        android.os.IBinder r0;
        boolean z0;
        java.lang.Object r1;
        long l0, $l3, $l9, $l12, $l13, $l16, $l17, $l18, $l21, $l22, $l23, l25, l27, l30;
        int i1, i2, $i4, $i5, $i6, $i7, $i8, $i11, $i15, $i20, i26, i28, i29;
        com.android.internal.util.StatLogger $r2, $r4;
        android.os.IServiceManager $r3;
        byte $b10, $b14, $b19, $b24;
        java.lang.Throwable $r5, $r6, $r7, r9;
        java.lang.String r8;

        r8 := @parameter0: java.lang.String;

        $r2 = <android.os.ServiceManager: com.android.internal.util.StatLogger sStatLogger>;

        l25 = virtualinvoke $r2.<com.android.internal.util.StatLogger: long getTime()>();

        $r3 = staticinvoke <android.os.ServiceManager: android.os.IServiceManager getIServiceManager()>();

        r0 = interfaceinvoke $r3.<android.os.IServiceManager: android.os.IBinder getService(java.lang.String)>(r8);

        $r4 = <android.os.ServiceManager: com.android.internal.util.StatLogger sStatLogger>;

        $l3 = virtualinvoke $r4.<com.android.internal.util.StatLogger: long logDurationStat(int,long)>(0, l25);

        i26 = (int) $l3;

        $i4 = staticinvoke <android.os.Process: int myUid()>();

        z0 = staticinvoke <android.os.UserHandle: boolean isCore(int)>($i4);

        if z0 == 0 goto label01;

        l27 = <android.os.ServiceManager: long GET_SERVICE_SLOW_THRESHOLD_US_CORE>;

        goto label02;

     label01:
        l27 = <android.os.ServiceManager: long GET_SERVICE_SLOW_THRESHOLD_US_NON_CORE>;

     label02:
        r1 = <android.os.ServiceManager: java.lang.Object sLock>;

        entermonitor r1;

     label03:
        $i5 = <android.os.ServiceManager: int sGetServiceAccumulatedUs>;

        $i6 = $i5 + i26;

        <android.os.ServiceManager: int sGetServiceAccumulatedUs> = $i6;

        $i7 = <android.os.ServiceManager: int sGetServiceAccumulatedCallCount>;

        $i8 = $i7 + 1;

        <android.os.ServiceManager: int sGetServiceAccumulatedCallCount> = $i8;

        l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

     label04:
        $l9 = (long) i26;

        $b10 = $l9 cmp l27;

        if $b10 < 0 goto label09;

     label05:
        $l17 = <android.os.ServiceManager: long sLastSlowLogUptime>;

        $l18 = $l17 + 5000L;

        $b19 = l0 cmp $l18;

        if $b19 > 0 goto label06;

        $l23 = <android.os.ServiceManager: long sLastSlowLogActualTime>;

        $l22 = (long) i26;

        $b24 = $l23 cmp $l22;

        if $b24 >= 0 goto label09;

     label06:
        $i20 = i26 / 1000;

        staticinvoke <android.os.EventLogTags: void writeServiceManagerSlow(int,java.lang.String)>($i20, r8);

        <android.os.ServiceManager: long sLastSlowLogUptime> = l0;

        $l21 = (long) i26;

        <android.os.ServiceManager: long sLastSlowLogActualTime> = $l21;

     label07:
        goto label09;

     label08:
        $r5 := @caughtexception;

        r9 = $r5;

        goto label20;

     label09:
        if z0 == 0 goto label12;

     label10:
        i28 = <android.os.ServiceManager: int GET_SERVICE_LOG_EVERY_CALLS_CORE>;

     label11:
        goto label13;

     label12:
        i28 = <android.os.ServiceManager: int GET_SERVICE_LOG_EVERY_CALLS_NON_CORE>;

     label13:
        $i11 = <android.os.ServiceManager: int sGetServiceAccumulatedCallCount>;

        if $i11 < i28 goto label17;

        $l12 = <android.os.ServiceManager: long sLastStatsLogUptime>;

        $l13 = $l12 + 5000L;

        $b14 = l0 cmp $l13;

        if $b14 < 0 goto label17;

        i29 = <android.os.ServiceManager: int sGetServiceAccumulatedCallCount>;

        $i15 = <android.os.ServiceManager: int sGetServiceAccumulatedUs>;

        i1 = $i15 / 1000;

        l30 = <android.os.ServiceManager: long sLastStatsLogUptime>;

     label14:
        $l16 = l0 - l30;

        i2 = (int) $l16;

     label15:
        staticinvoke <android.os.EventLogTags: void writeServiceManagerStats(int,int,int)>(i29, i1, i2);

        <android.os.ServiceManager: int sGetServiceAccumulatedCallCount> = 0;

        <android.os.ServiceManager: int sGetServiceAccumulatedUs> = 0;

        <android.os.ServiceManager: long sLastStatsLogUptime> = l0;

     label16:
        goto label17;

     label17:
        exitmonitor r1;

     label18:
        return r0;

     label19:
        $r6 := @caughtexception;

        r9 = $r6;

     label20:
        exitmonitor r1;

     label21:
        throw r9;

     label22:
        $r7 := @caughtexception;

        r9 = $r7;

        goto label20;

        catch java.lang.Throwable from label03 to label04 with label19;
        catch java.lang.Throwable from label05 to label06 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label10 to label11 with label08;
        catch java.lang.Throwable from label12 to label13 with label19;
        catch java.lang.Throwable from label13 to label14 with label19;
        catch java.lang.Throwable from label15 to label16 with label22;
        catch java.lang.Throwable from label17 to label18 with label22;
        catch java.lang.Throwable from label20 to label21 with label22;
    }

    public static android.os.IBinder waitForDeclaredService(java.lang.String)
    {
        boolean $z0;
        java.lang.String r0;
        android.os.IBinder r1;

        r0 := @parameter0: java.lang.String;

        $z0 = staticinvoke <android.os.ServiceManager: boolean isDeclared(java.lang.String)>(r0);

        if $z0 == 0 goto label1;

        r1 = staticinvoke <android.os.ServiceManager: android.os.IBinder waitForService(java.lang.String)>(r0);

        goto label2;

     label1:
        r1 = null;

     label2:
        return r1;
    }

    public static native android.os.IBinder waitForService(java.lang.String);
}
