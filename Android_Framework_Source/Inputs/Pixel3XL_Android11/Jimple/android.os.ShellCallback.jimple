public class android.os.ShellCallback extends java.lang.Object implements android.os.Parcelable
{
    public static final android.os.Parcelable$Creator CREATOR;
    static final boolean DEBUG;
    static final java.lang.String TAG;
    final boolean mLocal;
    com.android.internal.os.IShellCallback mShellCallback;

    static void <clinit>()
    {
        android.os.ShellCallback$1 $r0;

        <android.os.ShellCallback: java.lang.String TAG> = "ShellCallback";

        <android.os.ShellCallback: boolean DEBUG> = 0;

        $r0 = new android.os.ShellCallback$1;

        specialinvoke $r0.<android.os.ShellCallback$1: void <init>()>();

        <android.os.ShellCallback: android.os.Parcelable$Creator CREATOR> = $r0;

        return;
    }

    public void <init>()
    {
        android.os.ShellCallback r0;

        r0 := @this: android.os.ShellCallback;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.os.ShellCallback: boolean mLocal> = 1;

        return;
    }

    void <init>(android.os.Parcel)
    {
        android.os.ShellCallback r0;
        android.os.IBinder $r1, $r2;
        android.os.Parcel r4;
        com.android.internal.os.IShellCallback r5;

        r0 := @this: android.os.ShellCallback;

        r4 := @parameter0: android.os.Parcel;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.os.ShellCallback: boolean mLocal> = 0;

        $r1 = virtualinvoke r4.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        r5 = staticinvoke <com.android.internal.os.IShellCallback$Stub: com.android.internal.os.IShellCallback asInterface(android.os.IBinder)>($r1);

        r0.<android.os.ShellCallback: com.android.internal.os.IShellCallback mShellCallback> = r5;

        if r5 == null goto label1;

        $r2 = interfaceinvoke r5.<com.android.internal.os.IShellCallback: android.os.IBinder asBinder()>();

        staticinvoke <android.os.Binder: android.os.IBinder allowBlocking(android.os.IBinder)>($r2);

     label1:
        return;
    }

    public static void writeToParcel(android.os.ShellCallback, android.os.Parcel)
    {
        android.os.ShellCallback r0;
        android.os.Parcel r1;

        r0 := @parameter0: android.os.ShellCallback;

        r1 := @parameter1: android.os.Parcel;

        if r0 != null goto label1;

        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(null);

        goto label2;

     label1:
        virtualinvoke r0.<android.os.ShellCallback: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label2:
        return;
    }

    public int describeContents()
    {
        android.os.ShellCallback r0;

        r0 := @this: android.os.ShellCallback;

        return 0;
    }

    public android.os.ParcelFileDescriptor onOpenFile(java.lang.String, java.lang.String, java.lang.String)
    {
        android.os.ShellCallback r0;
        java.lang.String r1, r2, r3;

        r0 := @this: android.os.ShellCallback;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        return null;
    }

    public android.os.ParcelFileDescriptor openFile(java.lang.String, java.lang.String, java.lang.String)
    {
        android.os.ShellCallback r0;
        java.lang.String r1, $r8, r9, r10;
        com.android.internal.os.IShellCallback r2;
        boolean $z0;
        android.os.ParcelFileDescriptor $r3, r11;
        android.os.RemoteException $r4;
        java.lang.StringBuilder $r5;

        r0 := @this: android.os.ShellCallback;

        r1 := @parameter0: java.lang.String;

        r9 := @parameter1: java.lang.String;

        r10 := @parameter2: java.lang.String;

        $z0 = r0.<android.os.ShellCallback: boolean mLocal>;

        if $z0 == 0 goto label1;

        $r3 = virtualinvoke r0.<android.os.ShellCallback: android.os.ParcelFileDescriptor onOpenFile(java.lang.String,java.lang.String,java.lang.String)>(r1, r9, r10);

        return $r3;

     label1:
        r2 = r0.<android.os.ShellCallback: com.android.internal.os.IShellCallback mShellCallback>;

        if r2 == null goto label5;

     label2:
        r11 = interfaceinvoke r2.<com.android.internal.os.IShellCallback: android.os.ParcelFileDescriptor openFile(java.lang.String,java.lang.String,java.lang.String)>(r1, r9, r10);

     label3:
        return r11;

     label4:
        $r4 := @caughtexception;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failure opening ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ShellCallback", $r8, $r4);

     label5:
        return null;

        catch android.os.RemoteException from label2 to label3 with label4;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.os.ShellCallback r0;
        int i0;
        android.os.ShellCallback$MyShellCallback r1;
        com.android.internal.os.IShellCallback $r2, $r3;
        android.os.IBinder $r4;
        java.lang.Throwable $r5;
        android.os.Parcel r6;

        r0 := @this: android.os.ShellCallback;

        r6 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        entermonitor r0;

     label1:
        $r2 = r0.<android.os.ShellCallback: com.android.internal.os.IShellCallback mShellCallback>;

        if $r2 != null goto label2;

        r1 = new android.os.ShellCallback$MyShellCallback;

        specialinvoke r1.<android.os.ShellCallback$MyShellCallback: void <init>(android.os.ShellCallback)>(r0);

        r0.<android.os.ShellCallback: com.android.internal.os.IShellCallback mShellCallback> = r1;

     label2:
        $r3 = r0.<android.os.ShellCallback: com.android.internal.os.IShellCallback mShellCallback>;

        $r4 = interfaceinvoke $r3.<com.android.internal.os.IShellCallback: android.os.IBinder asBinder()>();

        virtualinvoke r6.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r4);

        exitmonitor r0;

     label3:
        return;

     label4:
        $r5 := @caughtexception;

     label5:
        exitmonitor r0;

     label6:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }
}
