public abstract class android.os.ShellCommand extends android.os.BasicShellCommandHandler
{
    private android.os.ResultReceiver mResultReceiver;
    private android.os.ShellCallback mShellCallback;

    public void <init>()
    {
        android.os.ShellCommand r0;

        r0 := @this: android.os.ShellCommand;

        specialinvoke r0.<android.os.BasicShellCommandHandler: void <init>()>();

        return;
    }

    public android.os.ResultReceiver adoptResultReceiver()
    {
        android.os.ShellCommand r0;
        android.os.ResultReceiver r1;

        r0 := @this: android.os.ShellCommand;

        r1 = r0.<android.os.ShellCommand: android.os.ResultReceiver mResultReceiver>;

        r0.<android.os.ShellCommand: android.os.ResultReceiver mResultReceiver> = null;

        return r1;
    }

    public int exec(android.os.Binder, java.io.FileDescriptor, java.io.FileDescriptor, java.io.FileDescriptor, java.lang.String[], android.os.ShellCallback, android.os.ResultReceiver)
    {
        android.os.ShellCommand r0;
        java.io.FileDescriptor r1, r2, r3;
        java.lang.String[] r4;
        android.os.ShellCallback r5;
        android.os.ResultReceiver r6, r8;
        int i0;
        android.os.Binder r7;

        r0 := @this: android.os.ShellCommand;

        r7 := @parameter0: android.os.Binder;

        r1 := @parameter1: java.io.FileDescriptor;

        r2 := @parameter2: java.io.FileDescriptor;

        r3 := @parameter3: java.io.FileDescriptor;

        r4 := @parameter4: java.lang.String[];

        r5 := @parameter5: android.os.ShellCallback;

        r6 := @parameter6: android.os.ResultReceiver;

        r0.<android.os.ShellCommand: android.os.ShellCallback mShellCallback> = r5;

        r0.<android.os.ShellCommand: android.os.ResultReceiver mResultReceiver> = r6;

        i0 = specialinvoke r0.<android.os.BasicShellCommandHandler: int exec(android.os.Binder,java.io.FileDescriptor,java.io.FileDescriptor,java.io.FileDescriptor,java.lang.String[])>(r7, r1, r2, r3, r4);

        r8 = r0.<android.os.ShellCommand: android.os.ResultReceiver mResultReceiver>;

        if r8 == null goto label1;

        virtualinvoke r8.<android.os.ResultReceiver: void send(int,android.os.Bundle)>(i0, null);

     label1:
        return i0;
    }

    public android.os.ShellCallback getShellCallback()
    {
        android.os.ShellCommand r0;
        android.os.ShellCallback $r1;

        r0 := @this: android.os.ShellCommand;

        $r1 = r0.<android.os.ShellCommand: android.os.ShellCallback mShellCallback>;

        return $r1;
    }

    public int handleDefaultCommands(java.lang.String)
    {
        android.os.ShellCommand r0;
        java.lang.String $r1, r8;
        boolean $z0;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.String[] $r2, $r3, $r4, r9;
        android.os.Binder $r5;
        java.io.FileDescriptor $r6;
        java.io.PrintWriter $r7;

        r0 := @this: android.os.ShellCommand;

        r8 := @parameter0: java.lang.String;

        $r1 = "dump";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r8);

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke r0.<android.os.ShellCommand: java.lang.String[] getAllArgs()>();

        $i1 = lengthof $r2;

        $i2 = $i1 - 1;

        r9 = newarray (java.lang.String)[$i2];

        $r3 = virtualinvoke r0.<android.os.ShellCommand: java.lang.String[] getAllArgs()>();

        $r4 = virtualinvoke r0.<android.os.ShellCommand: java.lang.String[] getAllArgs()>();

        $i3 = lengthof $r4;

        $i4 = $i3 - 1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, 1, r9, 0, $i4);

        $r5 = virtualinvoke r0.<android.os.ShellCommand: android.os.Binder getTarget()>();

        $r6 = virtualinvoke r0.<android.os.ShellCommand: java.io.FileDescriptor getOutFileDescriptor()>();

        $r7 = virtualinvoke r0.<android.os.ShellCommand: java.io.PrintWriter getOutPrintWriter()>();

        virtualinvoke $r5.<android.os.Binder: void doDump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>($r6, $r7, r9);

        return 0;

     label1:
        $i0 = specialinvoke r0.<android.os.BasicShellCommandHandler: int handleDefaultCommands(java.lang.String)>(r8);

        return $i0;
    }

    public android.os.ParcelFileDescriptor openFileForSystem(java.lang.String, java.lang.String)
    {
        android.os.ShellCommand r0;
        android.os.ShellCallback $r2;
        java.lang.StringBuilder $r3, $r7, $r12;
        java.lang.String $r6, $r10, $r14, $r16, r17, r18;
        boolean $z0;
        java.lang.RuntimeException $r11;
        android.os.ParcelFileDescriptor r19;
        java.io.PrintWriter r21, r22, r24;

        r0 := @this: android.os.ShellCommand;

        r17 := @parameter0: java.lang.String;

        r18 := @parameter1: java.lang.String;

     label1:
        $r2 = virtualinvoke r0.<android.os.ShellCommand: android.os.ShellCallback getShellCallback()>();

        r19 = virtualinvoke $r2.<android.os.ShellCallback: android.os.ParcelFileDescriptor openFile(java.lang.String,java.lang.String,java.lang.String)>(r17, "u:r:system_server:s0", r18);

     label2:
        if r19 == null goto label3;

        return r19;

     label3:
        goto label5;

     label4:
        $r11 := @caughtexception;

        r21 = virtualinvoke r0.<android.os.ShellCommand: java.io.PrintWriter getErrPrintWriter()>();

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failure opening file: ");

        $r14 = virtualinvoke $r11.<java.lang.RuntimeException: java.lang.String getMessage()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r21.<java.io.PrintWriter: void println(java.lang.String)>($r16);

     label5:
        r22 = virtualinvoke r0.<android.os.ShellCommand: java.io.PrintWriter getErrPrintWriter()>();

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: Unable to open file: ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r17);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r22.<java.io.PrintWriter: void println(java.lang.String)>($r6);

        if r17 == null goto label6;

        $z0 = virtualinvoke r17.<java.lang.String: boolean startsWith(java.lang.String)>("/data/local/tmp/");

        if $z0 != 0 goto label7;

     label6:
        r24 = virtualinvoke r0.<android.os.ShellCommand: java.io.PrintWriter getErrPrintWriter()>();

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Consider using a file under ");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/data/local/tmp/");

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r24.<java.io.PrintWriter: void println(java.lang.String)>($r10);

     label7:
        return null;

        catch java.lang.RuntimeException from label1 to label2 with label4;
    }

    public java.lang.String peekNextArg()
    {
        android.os.ShellCommand r0;
        java.lang.String $r1;

        r0 := @this: android.os.ShellCommand;

        $r1 = specialinvoke r0.<android.os.BasicShellCommandHandler: java.lang.String peekNextArg()>();

        return $r1;
    }
}
