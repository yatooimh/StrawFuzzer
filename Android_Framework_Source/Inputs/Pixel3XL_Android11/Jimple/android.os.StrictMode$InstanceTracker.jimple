final class android.os.StrictMode$InstanceTracker extends java.lang.Object
{
    private static final java.util.HashMap sInstanceCounts;
    private final java.lang.Class mKlass;

    static void <clinit>()
    {
        java.util.HashMap $r0;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        <android.os.StrictMode$InstanceTracker: java.util.HashMap sInstanceCounts> = $r0;

        return;
    }

    public void <init>(java.lang.Object)
    {
        android.os.StrictMode$InstanceTracker r0;
        java.lang.Class $r1, $r2, $r6;
        java.util.HashMap $r3, $r5, r11;
        java.lang.Object $r4, r10;
        java.lang.Integer $r7, r12;
        int $i0, i1;
        java.lang.Throwable $r9;

        r0 := @this: android.os.StrictMode$InstanceTracker;

        r10 := @parameter0: java.lang.Object;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = virtualinvoke r10.<java.lang.Object: java.lang.Class getClass()>();

        r0.<android.os.StrictMode$InstanceTracker: java.lang.Class mKlass> = $r1;

        r11 = <android.os.StrictMode$InstanceTracker: java.util.HashMap sInstanceCounts>;

        entermonitor r11;

     label1:
        $r3 = <android.os.StrictMode$InstanceTracker: java.util.HashMap sInstanceCounts>;

        $r2 = r0.<android.os.StrictMode$InstanceTracker: java.lang.Class mKlass>;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r2);

        r12 = (java.lang.Integer) $r4;

     label2:
        i1 = 1;

        if r12 == null goto label4;

     label3:
        $i0 = virtualinvoke r12.<java.lang.Integer: int intValue()>();

        i1 = 1 + $i0;

     label4:
        $r5 = <android.os.StrictMode$InstanceTracker: java.util.HashMap sInstanceCounts>;

        $r6 = r0.<android.os.StrictMode$InstanceTracker: java.lang.Class mKlass>;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        virtualinvoke $r5.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, $r7);

     label5:
        exitmonitor r11;

     label6:
        return;

     label7:
        $r9 := @caughtexception;

     label8:
        exitmonitor r11;

     label9:
        throw $r9;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label4 to label5 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public static int getInstanceCount(java.lang.Class)
    {
        java.util.HashMap r0, $r1;
        java.lang.Object $r2;
        java.lang.Throwable $r3;
        java.lang.Class r4;
        java.lang.Integer r5;
        int i0;

        r4 := @parameter0: java.lang.Class;

        r0 = <android.os.StrictMode$InstanceTracker: java.util.HashMap sInstanceCounts>;

        entermonitor r0;

     label01:
        $r1 = <android.os.StrictMode$InstanceTracker: java.util.HashMap sInstanceCounts>;

        $r2 = virtualinvoke $r1.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r4);

        r5 = (java.lang.Integer) $r2;

     label02:
        if r5 == null goto label05;

     label03:
        i0 = virtualinvoke r5.<java.lang.Integer: int intValue()>();

     label04:
        goto label06;

     label05:
        i0 = 0;

     label06:
        exitmonitor r0;

     label07:
        return i0;

     label08:
        $r3 := @caughtexception;

     label09:
        exitmonitor r0;

     label10:
        throw $r3;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    protected void finalize() throws java.lang.Throwable
    {
        android.os.StrictMode$InstanceTracker r0;
        int i0, $i1;
        java.lang.Class $r1, $r4, $r8;
        java.util.HashMap $r2, $r5, $r7, r13;
        java.lang.Object $r3;
        java.lang.Integer $r9, r14;
        java.lang.Throwable $r11, $r12;

        r0 := @this: android.os.StrictMode$InstanceTracker;

     label01:
        r13 = <android.os.StrictMode$InstanceTracker: java.util.HashMap sInstanceCounts>;

        entermonitor r13;

     label02:
        $r2 = <android.os.StrictMode$InstanceTracker: java.util.HashMap sInstanceCounts>;

        $r1 = r0.<android.os.StrictMode$InstanceTracker: java.lang.Class mKlass>;

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r1);

        r14 = (java.lang.Integer) $r3;

     label03:
        if r14 == null goto label09;

     label04:
        $i1 = virtualinvoke r14.<java.lang.Integer: int intValue()>();

        i0 = $i1 - 1;

     label05:
        if i0 <= 0 goto label08;

     label06:
        $r7 = <android.os.StrictMode$InstanceTracker: java.util.HashMap sInstanceCounts>;

        $r8 = r0.<android.os.StrictMode$InstanceTracker: java.lang.Class mKlass>;

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        virtualinvoke $r7.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, $r9);

     label07:
        goto label09;

     label08:
        $r5 = <android.os.StrictMode$InstanceTracker: java.util.HashMap sInstanceCounts>;

        $r4 = r0.<android.os.StrictMode$InstanceTracker: java.lang.Class mKlass>;

        virtualinvoke $r5.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r4);

     label09:
        exitmonitor r13;

     label10:
        specialinvoke r0.<java.lang.Object: void finalize()>();

        return;

     label11:
        $r12 := @caughtexception;

     label12:
        exitmonitor r13;

     label13:
        throw $r12;

     label14:
        $r11 := @caughtexception;

        specialinvoke r0.<java.lang.Object: void finalize()>();

        throw $r11;

        catch java.lang.Throwable from label01 to label02 with label14;
        catch java.lang.Throwable from label02 to label03 with label11;
        catch java.lang.Throwable from label04 to label05 with label11;
        catch java.lang.Throwable from label06 to label07 with label11;
        catch java.lang.Throwable from label08 to label09 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label12 to label13 with label11;
        catch java.lang.Throwable from label13 to label14 with label14;
    }
}
