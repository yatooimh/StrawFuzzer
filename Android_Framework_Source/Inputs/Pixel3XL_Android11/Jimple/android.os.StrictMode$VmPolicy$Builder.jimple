public final class android.os.StrictMode$VmPolicy$Builder extends java.lang.Object
{
    private java.util.HashMap mClassInstanceLimit;
    private boolean mClassInstanceLimitNeedCow;
    private java.util.concurrent.Executor mExecutor;
    private android.os.StrictMode$OnVmViolationListener mListener;
    private int mMask;

    public void <init>()
    {
        android.os.StrictMode$VmPolicy$Builder r0;

        r0 := @this: android.os.StrictMode$VmPolicy$Builder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.os.StrictMode$VmPolicy$Builder: boolean mClassInstanceLimitNeedCow> = 0;

        r0.<android.os.StrictMode$VmPolicy$Builder: int mMask> = 0;

        return;
    }

    public void <init>(android.os.StrictMode$VmPolicy)
    {
        android.os.StrictMode$VmPolicy$Builder r0;
        android.os.StrictMode$VmPolicy r1;
        int $i0;
        java.util.HashMap $r2;
        android.os.StrictMode$OnVmViolationListener $r3;
        java.util.concurrent.Executor $r4;

        r0 := @this: android.os.StrictMode$VmPolicy$Builder;

        r1 := @parameter0: android.os.StrictMode$VmPolicy;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.os.StrictMode$VmPolicy$Builder: boolean mClassInstanceLimitNeedCow> = 0;

        $i0 = r1.<android.os.StrictMode$VmPolicy: int mask>;

        r0.<android.os.StrictMode$VmPolicy$Builder: int mMask> = $i0;

        r0.<android.os.StrictMode$VmPolicy$Builder: boolean mClassInstanceLimitNeedCow> = 1;

        $r2 = r1.<android.os.StrictMode$VmPolicy: java.util.HashMap classInstanceLimit>;

        r0.<android.os.StrictMode$VmPolicy$Builder: java.util.HashMap mClassInstanceLimit> = $r2;

        $r3 = r1.<android.os.StrictMode$VmPolicy: android.os.StrictMode$OnVmViolationListener mListener>;

        r0.<android.os.StrictMode$VmPolicy$Builder: android.os.StrictMode$OnVmViolationListener mListener> = $r3;

        $r4 = r1.<android.os.StrictMode$VmPolicy: java.util.concurrent.Executor mCallbackExecutor>;

        r0.<android.os.StrictMode$VmPolicy$Builder: java.util.concurrent.Executor mExecutor> = $r4;

        return;
    }

    private android.os.StrictMode$VmPolicy$Builder enable(int)
    {
        android.os.StrictMode$VmPolicy$Builder r0;
        int i0, $i1, $i2;

        r0 := @this: android.os.StrictMode$VmPolicy$Builder;

        i0 := @parameter0: int;

        $i1 = r0.<android.os.StrictMode$VmPolicy$Builder: int mMask>;

        $i2 = $i1 | i0;

        r0.<android.os.StrictMode$VmPolicy$Builder: int mMask> = $i2;

        return r0;
    }

    public android.os.StrictMode$VmPolicy build()
    {
        android.os.StrictMode$VmPolicy$Builder r0;
        android.os.StrictMode$OnVmViolationListener $r1, $r4;
        android.os.StrictMode$VmPolicy $r2;
        java.util.concurrent.Executor $r3;
        int $i0, i1, i2;
        java.util.HashMap r6;

        r0 := @this: android.os.StrictMode$VmPolicy$Builder;

        $r1 = r0.<android.os.StrictMode$VmPolicy$Builder: android.os.StrictMode$OnVmViolationListener mListener>;

        if $r1 != null goto label1;

        i1 = r0.<android.os.StrictMode$VmPolicy$Builder: int mMask>;

        if i1 == 0 goto label1;

        $i0 = i1 & 1946157056;

        if $i0 != 0 goto label1;

        virtualinvoke r0.<android.os.StrictMode$VmPolicy$Builder: android.os.StrictMode$VmPolicy$Builder penaltyLog()>();

     label1:
        i2 = r0.<android.os.StrictMode$VmPolicy$Builder: int mMask>;

        r6 = r0.<android.os.StrictMode$VmPolicy$Builder: java.util.HashMap mClassInstanceLimit>;

        if r6 == null goto label2;

        goto label3;

     label2:
        r6 = staticinvoke <android.os.StrictMode: java.util.HashMap access$100()>();

     label3:
        $r2 = new android.os.StrictMode$VmPolicy;

        $r4 = r0.<android.os.StrictMode$VmPolicy$Builder: android.os.StrictMode$OnVmViolationListener mListener>;

        $r3 = r0.<android.os.StrictMode$VmPolicy$Builder: java.util.concurrent.Executor mExecutor>;

        specialinvoke $r2.<android.os.StrictMode$VmPolicy: void <init>(int,java.util.HashMap,android.os.StrictMode$OnVmViolationListener,java.util.concurrent.Executor,android.os.StrictMode$1)>(i2, r6, $r4, $r3, null);

        return $r2;
    }

    public android.os.StrictMode$VmPolicy$Builder detectActivityLeaks()
    {
        android.os.StrictMode$VmPolicy$Builder r0, $r1;

        r0 := @this: android.os.StrictMode$VmPolicy$Builder;

        $r1 = specialinvoke r0.<android.os.StrictMode$VmPolicy$Builder: android.os.StrictMode$VmPolicy$Builder enable(int)>(4);

        return $r1;
    }

    public android.os.StrictMode$VmPolicy$Builder detectAll()
    {
        android.os.StrictMode$VmPolicy$Builder r0;
        int i0;
        dalvik.system.VMRuntime $r2;
        boolean $z0;

        r0 := @this: android.os.StrictMode$VmPolicy$Builder;

        virtualinvoke r0.<android.os.StrictMode$VmPolicy$Builder: android.os.StrictMode$VmPolicy$Builder detectLeakedSqlLiteObjects()>();

        $r2 = staticinvoke <dalvik.system.VMRuntime: dalvik.system.VMRuntime getRuntime()>();

        i0 = virtualinvoke $r2.<dalvik.system.VMRuntime: int getTargetSdkVersion()>();

        if i0 < 11 goto label1;

        virtualinvoke r0.<android.os.StrictMode$VmPolicy$Builder: android.os.StrictMode$VmPolicy$Builder detectActivityLeaks()>();

        virtualinvoke r0.<android.os.StrictMode$VmPolicy$Builder: android.os.StrictMode$VmPolicy$Builder detectLeakedClosableObjects()>();

     label1:
        if i0 < 16 goto label2;

        virtualinvoke r0.<android.os.StrictMode$VmPolicy$Builder: android.os.StrictMode$VmPolicy$Builder detectLeakedRegistrationObjects()>();

     label2:
        if i0 < 18 goto label3;

        virtualinvoke r0.<android.os.StrictMode$VmPolicy$Builder: android.os.StrictMode$VmPolicy$Builder detectFileUriExposure()>();

     label3:
        if i0 < 23 goto label4;

        $z0 = staticinvoke <android.os.SystemProperties: boolean getBoolean(java.lang.String,boolean)>("persist.sys.strictmode.clear", 0);

        if $z0 == 0 goto label4;

        virtualinvoke r0.<android.os.StrictMode$VmPolicy$Builder: android.os.StrictMode$VmPolicy$Builder detectCleartextNetwork()>();

     label4:
        if i0 < 26 goto label5;

        virtualinvoke r0.<android.os.StrictMode$VmPolicy$Builder: android.os.StrictMode$VmPolicy$Builder detectContentUriWithoutPermission()>();

        virtualinvoke r0.<android.os.StrictMode$VmPolicy$Builder: android.os.StrictMode$VmPolicy$Builder detectUntaggedSockets()>();

     label5:
        if i0 < 29 goto label6;

        virtualinvoke r0.<android.os.StrictMode$VmPolicy$Builder: android.os.StrictMode$VmPolicy$Builder detectCredentialProtectedWhileLocked()>();

     label6:
        if i0 < 30 goto label7;

        virtualinvoke r0.<android.os.StrictMode$VmPolicy$Builder: android.os.StrictMode$VmPolicy$Builder detectIncorrectContextUse()>();

     label7:
        return r0;
    }

    public android.os.StrictMode$VmPolicy$Builder detectCleartextNetwork()
    {
        android.os.StrictMode$VmPolicy$Builder r0, $r1;

        r0 := @this: android.os.StrictMode$VmPolicy$Builder;

        $r1 = specialinvoke r0.<android.os.StrictMode$VmPolicy$Builder: android.os.StrictMode$VmPolicy$Builder enable(int)>(64);

        return $r1;
    }

    public android.os.StrictMode$VmPolicy$Builder detectContentUriWithoutPermission()
    {
        android.os.StrictMode$VmPolicy$Builder r0, $r1;

        r0 := @this: android.os.StrictMode$VmPolicy$Builder;

        $r1 = specialinvoke r0.<android.os.StrictMode$VmPolicy$Builder: android.os.StrictMode$VmPolicy$Builder enable(int)>(128);

        return $r1;
    }

    public android.os.StrictMode$VmPolicy$Builder detectCredentialProtectedWhileLocked()
    {
        android.os.StrictMode$VmPolicy$Builder r0, $r1;

        r0 := @this: android.os.StrictMode$VmPolicy$Builder;

        $r1 = specialinvoke r0.<android.os.StrictMode$VmPolicy$Builder: android.os.StrictMode$VmPolicy$Builder enable(int)>(2048);

        return $r1;
    }

    public android.os.StrictMode$VmPolicy$Builder detectFileUriExposure()
    {
        android.os.StrictMode$VmPolicy$Builder r0, $r1;

        r0 := @this: android.os.StrictMode$VmPolicy$Builder;

        $r1 = specialinvoke r0.<android.os.StrictMode$VmPolicy$Builder: android.os.StrictMode$VmPolicy$Builder enable(int)>(32);

        return $r1;
    }

    public android.os.StrictMode$VmPolicy$Builder detectImplicitDirectBoot()
    {
        android.os.StrictMode$VmPolicy$Builder r0, $r1;

        r0 := @this: android.os.StrictMode$VmPolicy$Builder;

        $r1 = specialinvoke r0.<android.os.StrictMode$VmPolicy$Builder: android.os.StrictMode$VmPolicy$Builder enable(int)>(1024);

        return $r1;
    }

    public android.os.StrictMode$VmPolicy$Builder detectIncorrectContextUse()
    {
        android.os.StrictMode$VmPolicy$Builder r0, $r1;

        r0 := @this: android.os.StrictMode$VmPolicy$Builder;

        $r1 = specialinvoke r0.<android.os.StrictMode$VmPolicy$Builder: android.os.StrictMode$VmPolicy$Builder enable(int)>(4096);

        return $r1;
    }

    public android.os.StrictMode$VmPolicy$Builder detectLeakedClosableObjects()
    {
        android.os.StrictMode$VmPolicy$Builder r0, $r1;

        r0 := @this: android.os.StrictMode$VmPolicy$Builder;

        $r1 = specialinvoke r0.<android.os.StrictMode$VmPolicy$Builder: android.os.StrictMode$VmPolicy$Builder enable(int)>(2);

        return $r1;
    }

    public android.os.StrictMode$VmPolicy$Builder detectLeakedRegistrationObjects()
    {
        android.os.StrictMode$VmPolicy$Builder r0, $r1;

        r0 := @this: android.os.StrictMode$VmPolicy$Builder;

        $r1 = specialinvoke r0.<android.os.StrictMode$VmPolicy$Builder: android.os.StrictMode$VmPolicy$Builder enable(int)>(16);

        return $r1;
    }

    public android.os.StrictMode$VmPolicy$Builder detectLeakedSqlLiteObjects()
    {
        android.os.StrictMode$VmPolicy$Builder r0, $r1;

        r0 := @this: android.os.StrictMode$VmPolicy$Builder;

        $r1 = specialinvoke r0.<android.os.StrictMode$VmPolicy$Builder: android.os.StrictMode$VmPolicy$Builder enable(int)>(1);

        return $r1;
    }

    public android.os.StrictMode$VmPolicy$Builder detectNonSdkApiUsage()
    {
        android.os.StrictMode$VmPolicy$Builder r0, $r1;

        r0 := @this: android.os.StrictMode$VmPolicy$Builder;

        $r1 = specialinvoke r0.<android.os.StrictMode$VmPolicy$Builder: android.os.StrictMode$VmPolicy$Builder enable(int)>(512);

        return $r1;
    }

    public android.os.StrictMode$VmPolicy$Builder detectUntaggedSockets()
    {
        android.os.StrictMode$VmPolicy$Builder r0, $r1;

        r0 := @this: android.os.StrictMode$VmPolicy$Builder;

        $r1 = specialinvoke r0.<android.os.StrictMode$VmPolicy$Builder: android.os.StrictMode$VmPolicy$Builder enable(int)>(256);

        return $r1;
    }

    android.os.StrictMode$VmPolicy$Builder disable(int)
    {
        android.os.StrictMode$VmPolicy$Builder r0;
        int i0, $i1, $i2;

        r0 := @this: android.os.StrictMode$VmPolicy$Builder;

        i0 := @parameter0: int;

        $i1 = r0.<android.os.StrictMode$VmPolicy$Builder: int mMask>;

        $i2 = $i1 & i0;

        r0.<android.os.StrictMode$VmPolicy$Builder: int mMask> = $i2;

        return r0;
    }

    public android.os.StrictMode$VmPolicy$Builder penaltyDeath()
    {
        android.os.StrictMode$VmPolicy$Builder r0, $r1;

        r0 := @this: android.os.StrictMode$VmPolicy$Builder;

        $r1 = specialinvoke r0.<android.os.StrictMode$VmPolicy$Builder: android.os.StrictMode$VmPolicy$Builder enable(int)>(268435456);

        return $r1;
    }

    public android.os.StrictMode$VmPolicy$Builder penaltyDeathOnCleartextNetwork()
    {
        android.os.StrictMode$VmPolicy$Builder r0, $r1;

        r0 := @this: android.os.StrictMode$VmPolicy$Builder;

        $r1 = specialinvoke r0.<android.os.StrictMode$VmPolicy$Builder: android.os.StrictMode$VmPolicy$Builder enable(int)>(16777216);

        return $r1;
    }

    public android.os.StrictMode$VmPolicy$Builder penaltyDeathOnFileUriExposure()
    {
        android.os.StrictMode$VmPolicy$Builder r0, $r1;

        r0 := @this: android.os.StrictMode$VmPolicy$Builder;

        $r1 = specialinvoke r0.<android.os.StrictMode$VmPolicy$Builder: android.os.StrictMode$VmPolicy$Builder enable(int)>(8388608);

        return $r1;
    }

    public android.os.StrictMode$VmPolicy$Builder penaltyDropBox()
    {
        android.os.StrictMode$VmPolicy$Builder r0, $r1;

        r0 := @this: android.os.StrictMode$VmPolicy$Builder;

        $r1 = specialinvoke r0.<android.os.StrictMode$VmPolicy$Builder: android.os.StrictMode$VmPolicy$Builder enable(int)>(67108864);

        return $r1;
    }

    public android.os.StrictMode$VmPolicy$Builder penaltyListener(android.os.StrictMode$OnVmViolationListener, java.util.concurrent.Executor)
    {
        android.os.StrictMode$VmPolicy$Builder r0, $r3;
        android.os.StrictMode$OnVmViolationListener r1;
        java.util.concurrent.Executor r2;

        r0 := @this: android.os.StrictMode$VmPolicy$Builder;

        r1 := @parameter0: android.os.StrictMode$OnVmViolationListener;

        r2 := @parameter1: java.util.concurrent.Executor;

        $r3 = virtualinvoke r0.<android.os.StrictMode$VmPolicy$Builder: android.os.StrictMode$VmPolicy$Builder penaltyListener(java.util.concurrent.Executor,android.os.StrictMode$OnVmViolationListener)>(r2, r1);

        return $r3;
    }

    public android.os.StrictMode$VmPolicy$Builder penaltyListener(java.util.concurrent.Executor, android.os.StrictMode$OnVmViolationListener)
    {
        android.os.StrictMode$VmPolicy$Builder r0;
        java.util.concurrent.Executor r1;
        android.os.StrictMode$OnVmViolationListener r2;
        java.lang.NullPointerException $r3;

        r0 := @this: android.os.StrictMode$VmPolicy$Builder;

        r1 := @parameter0: java.util.concurrent.Executor;

        r2 := @parameter1: android.os.StrictMode$OnVmViolationListener;

        if r1 == null goto label1;

        r0.<android.os.StrictMode$VmPolicy$Builder: android.os.StrictMode$OnVmViolationListener mListener> = r2;

        r0.<android.os.StrictMode$VmPolicy$Builder: java.util.concurrent.Executor mExecutor> = r1;

        return r0;

     label1:
        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>("executor must not be null");

        throw $r3;
    }

    public android.os.StrictMode$VmPolicy$Builder penaltyLog()
    {
        android.os.StrictMode$VmPolicy$Builder r0, $r1;

        r0 := @this: android.os.StrictMode$VmPolicy$Builder;

        $r1 = specialinvoke r0.<android.os.StrictMode$VmPolicy$Builder: android.os.StrictMode$VmPolicy$Builder enable(int)>(1073741824);

        return $r1;
    }

    public android.os.StrictMode$VmPolicy$Builder permitActivityLeaks()
    {
        android.os.StrictMode$VmPolicy$Builder r0, $r3;
        java.util.HashMap $r2;
        java.lang.Throwable $r4;

        r0 := @this: android.os.StrictMode$VmPolicy$Builder;

        entermonitor class "Landroid/os/StrictMode;";

     label1:
        $r2 = staticinvoke <android.os.StrictMode: java.util.HashMap access$200()>();

        virtualinvoke $r2.<java.util.HashMap: void clear()>();

        exitmonitor class "Landroid/os/StrictMode;";

     label2:
        $r3 = virtualinvoke r0.<android.os.StrictMode$VmPolicy$Builder: android.os.StrictMode$VmPolicy$Builder disable(int)>(4);

        return $r3;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor class "Landroid/os/StrictMode;";

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public android.os.StrictMode$VmPolicy$Builder permitCredentialProtectedWhileLocked()
    {
        android.os.StrictMode$VmPolicy$Builder r0, $r1;

        r0 := @this: android.os.StrictMode$VmPolicy$Builder;

        $r1 = virtualinvoke r0.<android.os.StrictMode$VmPolicy$Builder: android.os.StrictMode$VmPolicy$Builder disable(int)>(2048);

        return $r1;
    }

    public android.os.StrictMode$VmPolicy$Builder permitImplicitDirectBoot()
    {
        android.os.StrictMode$VmPolicy$Builder r0, $r1;

        r0 := @this: android.os.StrictMode$VmPolicy$Builder;

        $r1 = virtualinvoke r0.<android.os.StrictMode$VmPolicy$Builder: android.os.StrictMode$VmPolicy$Builder disable(int)>(1024);

        return $r1;
    }

    public android.os.StrictMode$VmPolicy$Builder permitIncorrectContextUse()
    {
        android.os.StrictMode$VmPolicy$Builder r0, $r1;

        r0 := @this: android.os.StrictMode$VmPolicy$Builder;

        $r1 = virtualinvoke r0.<android.os.StrictMode$VmPolicy$Builder: android.os.StrictMode$VmPolicy$Builder disable(int)>(4096);

        return $r1;
    }

    public android.os.StrictMode$VmPolicy$Builder permitNonSdkApiUsage()
    {
        android.os.StrictMode$VmPolicy$Builder r0, $r1;

        r0 := @this: android.os.StrictMode$VmPolicy$Builder;

        $r1 = virtualinvoke r0.<android.os.StrictMode$VmPolicy$Builder: android.os.StrictMode$VmPolicy$Builder disable(int)>(512);

        return $r1;
    }

    public android.os.StrictMode$VmPolicy$Builder permitUntaggedSockets()
    {
        android.os.StrictMode$VmPolicy$Builder r0, $r1;

        r0 := @this: android.os.StrictMode$VmPolicy$Builder;

        $r1 = virtualinvoke r0.<android.os.StrictMode$VmPolicy$Builder: android.os.StrictMode$VmPolicy$Builder disable(int)>(256);

        return $r1;
    }

    public android.os.StrictMode$VmPolicy$Builder setClassInstanceLimit(java.lang.Class, int)
    {
        android.os.StrictMode$VmPolicy$Builder r0;
        java.lang.Class r1;
        int i0, $i1, $i2, $i3;
        java.lang.NullPointerException $r2;
        boolean $z0, $z1;
        java.util.HashMap $r3, $r5, $r6, $r7, $r9, $r10, $r13;
        java.lang.Object $r8, $r11;
        java.lang.Integer $r12, $r14;

        r0 := @this: android.os.StrictMode$VmPolicy$Builder;

        r1 := @parameter0: java.lang.Class;

        i0 := @parameter1: int;

        if r1 == null goto label4;

        $z0 = r0.<android.os.StrictMode$VmPolicy$Builder: boolean mClassInstanceLimitNeedCow>;

        if $z0 == 0 goto label2;

        $r6 = r0.<android.os.StrictMode$VmPolicy$Builder: java.util.HashMap mClassInstanceLimit>;

        $z1 = virtualinvoke $r6.<java.util.HashMap: boolean containsKey(java.lang.Object)>(r1);

        if $z1 == 0 goto label1;

        $r10 = r0.<android.os.StrictMode$VmPolicy$Builder: java.util.HashMap mClassInstanceLimit>;

        $r11 = virtualinvoke $r10.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        $r12 = (java.lang.Integer) $r11;

        $i1 = virtualinvoke $r12.<java.lang.Integer: int intValue()>();

        if $i1 != i0 goto label1;

        return r0;

     label1:
        r0.<android.os.StrictMode$VmPolicy$Builder: boolean mClassInstanceLimitNeedCow> = 0;

        $r7 = r0.<android.os.StrictMode$VmPolicy$Builder: java.util.HashMap mClassInstanceLimit>;

        $r8 = virtualinvoke $r7.<java.util.HashMap: java.lang.Object clone()>();

        $r9 = (java.util.HashMap) $r8;

        r0.<android.os.StrictMode$VmPolicy$Builder: java.util.HashMap mClassInstanceLimit> = $r9;

        goto label3;

     label2:
        $r3 = r0.<android.os.StrictMode$VmPolicy$Builder: java.util.HashMap mClassInstanceLimit>;

        if $r3 != null goto label3;

        $r5 = new java.util.HashMap;

        specialinvoke $r5.<java.util.HashMap: void <init>()>();

        r0.<android.os.StrictMode$VmPolicy$Builder: java.util.HashMap mClassInstanceLimit> = $r5;

     label3:
        $i2 = r0.<android.os.StrictMode$VmPolicy$Builder: int mMask>;

        $i3 = $i2 | 8;

        r0.<android.os.StrictMode$VmPolicy$Builder: int mMask> = $i3;

        $r13 = r0.<android.os.StrictMode$VmPolicy$Builder: java.util.HashMap mClassInstanceLimit>;

        $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        virtualinvoke $r13.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r14);

        return r0;

     label4:
        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("klass == null");

        throw $r2;
    }
}
