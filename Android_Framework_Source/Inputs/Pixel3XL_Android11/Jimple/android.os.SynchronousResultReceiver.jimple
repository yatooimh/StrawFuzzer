public class android.os.SynchronousResultReceiver extends android.os.ResultReceiver
{
    private final java.util.concurrent.CompletableFuture mFuture;
    private final java.lang.String mName;

    public void <init>()
    {
        android.os.SynchronousResultReceiver r0;
        android.os.Handler $r1;
        java.util.concurrent.CompletableFuture $r2;

        r0 := @this: android.os.SynchronousResultReceiver;

        $r1 = (android.os.Handler) null;

        specialinvoke r0.<android.os.ResultReceiver: void <init>(android.os.Handler)>($r1);

        $r2 = new java.util.concurrent.CompletableFuture;

        specialinvoke $r2.<java.util.concurrent.CompletableFuture: void <init>()>();

        r0.<android.os.SynchronousResultReceiver: java.util.concurrent.CompletableFuture mFuture> = $r2;

        r0.<android.os.SynchronousResultReceiver: java.lang.String mName> = null;

        return;
    }

    public void <init>(java.lang.String)
    {
        android.os.SynchronousResultReceiver r0;
        java.lang.String r1;
        android.os.Handler $r2;
        java.util.concurrent.CompletableFuture $r3;

        r0 := @this: android.os.SynchronousResultReceiver;

        r1 := @parameter0: java.lang.String;

        $r2 = (android.os.Handler) null;

        specialinvoke r0.<android.os.ResultReceiver: void <init>(android.os.Handler)>($r2);

        $r3 = new java.util.concurrent.CompletableFuture;

        specialinvoke $r3.<java.util.concurrent.CompletableFuture: void <init>()>();

        r0.<android.os.SynchronousResultReceiver: java.util.concurrent.CompletableFuture mFuture> = $r3;

        r0.<android.os.SynchronousResultReceiver: java.lang.String mName> = r1;

        return;
    }

    public android.os.SynchronousResultReceiver$Result awaitResult(long) throws java.util.concurrent.TimeoutException
    {
        android.os.SynchronousResultReceiver r0;
        long l0, l1, $l3, $l4, $l5, l6;
        byte $b2;
        java.util.concurrent.TimeoutException $r1;
        java.util.concurrent.TimeUnit $r2;
        java.util.concurrent.CompletableFuture $r3;
        java.lang.Object $r4;
        java.lang.Throwable $r5, $r7;
        java.lang.AssertionError $r6;
        android.os.SynchronousResultReceiver$Result r8;

        r0 := @this: android.os.SynchronousResultReceiver;

        l0 := @parameter0: long;

        l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        l6 = l0;

     label1:
        $b2 = l6 cmp 0L;

        if $b2 < 0 goto label6;

     label2:
        $r3 = r0.<android.os.SynchronousResultReceiver: java.util.concurrent.CompletableFuture mFuture>;

        $r2 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>;

        $r4 = virtualinvoke $r3.<java.util.concurrent.CompletableFuture: java.lang.Object get(long,java.util.concurrent.TimeUnit)>(l6, $r2);

        r8 = (android.os.SynchronousResultReceiver$Result) $r4;

     label3:
        return r8;

     label4:
        $r7 := @caughtexception;

        $l3 = l1 + l0;

        $l4 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l5 = $l3 - $l4;

        l6 = l6 - $l5;

        goto label1;

     label5:
        $r5 := @caughtexception;

        $r6 = new java.lang.AssertionError;

        specialinvoke $r6.<java.lang.AssertionError: void <init>(java.lang.String,java.lang.Throwable)>("Error receiving response", $r5);

        throw $r6;

     label6:
        $r1 = new java.util.concurrent.TimeoutException;

        specialinvoke $r1.<java.util.concurrent.TimeoutException: void <init>()>();

        throw $r1;

        catch java.util.concurrent.ExecutionException from label2 to label3 with label5;
        catch java.lang.InterruptedException from label2 to label3 with label4;
    }

    public java.lang.String getName()
    {
        android.os.SynchronousResultReceiver r0;
        java.lang.String $r1;

        r0 := @this: android.os.SynchronousResultReceiver;

        $r1 = r0.<android.os.SynchronousResultReceiver: java.lang.String mName>;

        return $r1;
    }

    protected final void onReceiveResult(int, android.os.Bundle)
    {
        android.os.SynchronousResultReceiver r0;
        int i0;
        android.os.Bundle r1;
        android.os.SynchronousResultReceiver$Result $r2;
        java.util.concurrent.CompletableFuture $r3;

        r0 := @this: android.os.SynchronousResultReceiver;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Bundle;

        specialinvoke r0.<android.os.ResultReceiver: void onReceiveResult(int,android.os.Bundle)>(i0, r1);

        $r3 = r0.<android.os.SynchronousResultReceiver: java.util.concurrent.CompletableFuture mFuture>;

        $r2 = new android.os.SynchronousResultReceiver$Result;

        specialinvoke $r2.<android.os.SynchronousResultReceiver$Result: void <init>(int,android.os.Bundle)>(i0, r1);

        virtualinvoke $r3.<java.util.concurrent.CompletableFuture: boolean complete(java.lang.Object)>($r2);

        return;
    }
}
