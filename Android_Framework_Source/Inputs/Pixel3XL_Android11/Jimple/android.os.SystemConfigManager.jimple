public class android.os.SystemConfigManager extends java.lang.Object
{
    private static final java.lang.String TAG;
    private final android.os.ISystemConfig mInterface;

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;

        $r0 = class "Landroid/os/SystemConfigManager;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getSimpleName()>();

        <android.os.SystemConfigManager: java.lang.String TAG> = $r1;

        return;
    }

    public void <init>()
    {
        android.os.SystemConfigManager r0;
        android.os.IBinder $r1;
        android.os.ISystemConfig $r2;

        r0 := @this: android.os.SystemConfigManager;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("system_config");

        $r2 = staticinvoke <android.os.ISystemConfig$Stub: android.os.ISystemConfig asInterface(android.os.IBinder)>($r1);

        r0.<android.os.SystemConfigManager: android.os.ISystemConfig mInterface> = $r2;

        return;
    }

    public java.util.Set getDisabledUntilUsedPreinstalledCarrierApps()
    {
        android.os.SystemConfigManager r0;
        android.util.ArraySet $r1;
        android.os.ISystemConfig $r2;
        java.util.List $r3;
        android.os.RemoteException $r4;
        java.lang.String $r5;
        java.util.Set $r6;

        r0 := @this: android.os.SystemConfigManager;

     label1:
        $r1 = new android.util.ArraySet;

        $r2 = r0.<android.os.SystemConfigManager: android.os.ISystemConfig mInterface>;

        $r3 = interfaceinvoke $r2.<android.os.ISystemConfig: java.util.List getDisabledUntilUsedPreinstalledCarrierApps()>();

        specialinvoke $r1.<android.util.ArraySet: void <init>(java.util.Collection)>($r3);

     label2:
        return $r1;

     label3:
        $r4 := @caughtexception;

        $r5 = <android.os.SystemConfigManager: java.lang.String TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r5, "Caught remote exception");

        $r6 = staticinvoke <java.util.Collections: java.util.Set emptySet()>();

        return $r6;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public java.util.Map getDisabledUntilUsedPreinstalledCarrierAssociatedAppEntries()
    {
        android.os.SystemConfigManager r0;
        android.os.ISystemConfig $r1;
        android.os.RemoteException $r2;
        java.lang.String $r3;
        java.util.Map $r4, r5;

        r0 := @this: android.os.SystemConfigManager;

     label1:
        $r1 = r0.<android.os.SystemConfigManager: android.os.ISystemConfig mInterface>;

        r5 = interfaceinvoke $r1.<android.os.ISystemConfig: java.util.Map getDisabledUntilUsedPreinstalledCarrierAssociatedAppEntries()>();

     label2:
        return r5;

     label3:
        $r2 := @caughtexception;

        $r3 = <android.os.SystemConfigManager: java.lang.String TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r3, "Caught remote exception", $r2);

        $r4 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();

        return $r4;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public java.util.Map getDisabledUntilUsedPreinstalledCarrierAssociatedApps()
    {
        android.os.SystemConfigManager r0;
        android.os.ISystemConfig $r1;
        android.os.RemoteException $r2;
        java.lang.String $r3;
        java.util.Map $r4, r5;

        r0 := @this: android.os.SystemConfigManager;

     label1:
        $r1 = r0.<android.os.SystemConfigManager: android.os.ISystemConfig mInterface>;

        r5 = interfaceinvoke $r1.<android.os.ISystemConfig: java.util.Map getDisabledUntilUsedPreinstalledCarrierAssociatedApps()>();

     label2:
        return r5;

     label3:
        $r2 := @caughtexception;

        $r3 = <android.os.SystemConfigManager: java.lang.String TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r3, "Caught remote exception");

        $r4 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();

        return $r4;

        catch android.os.RemoteException from label1 to label2 with label3;
    }
}
