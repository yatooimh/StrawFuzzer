public class android.os.SystemService extends java.lang.Object
{
    private static java.lang.Object sPropertyLock;
    private static java.util.HashMap sStates;

    static void <clinit>()
    {
        java.util.HashMap $r0;
        java.lang.Object $r1;
        android.os.SystemService$1 $r2;

        $r0 = staticinvoke <com.google.android.collect.Maps: java.util.HashMap newHashMap()>();

        <android.os.SystemService: java.util.HashMap sStates> = $r0;

        $r1 = new java.lang.Object;

        specialinvoke $r1.<java.lang.Object: void <init>()>();

        <android.os.SystemService: java.lang.Object sPropertyLock> = $r1;

        $r2 = new android.os.SystemService$1;

        specialinvoke $r2.<android.os.SystemService$1: void <init>()>();

        staticinvoke <android.os.SystemProperties: void addChangeCallback(java.lang.Runnable)>($r2);

        return;
    }

    public void <init>()
    {
        android.os.SystemService r0;

        r0 := @this: android.os.SystemService;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static java.util.HashMap access$000()
    {
        java.util.HashMap $r0;

        $r0 = <android.os.SystemService: java.util.HashMap sStates>;

        return $r0;
    }

    static java.lang.Object access$100()
    {
        java.lang.Object $r0;

        $r0 = <android.os.SystemService: java.lang.Object sPropertyLock>;

        return $r0;
    }

    public static android.os.SystemService$State getState(java.lang.String)
    {
        java.lang.StringBuilder $r1;
        java.lang.String $r4, r8, r9;
        java.util.HashMap $r5;
        java.lang.Object $r6;
        android.os.SystemService$State $r7, r10;

        r8 := @parameter0: java.lang.String;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("init.svc.");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        r9 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String)>($r4);

        $r5 = <android.os.SystemService: java.util.HashMap sStates>;

        $r6 = virtualinvoke $r5.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r9);

        r10 = (android.os.SystemService$State) $r6;

        if r10 == null goto label1;

        return r10;

     label1:
        $r7 = <android.os.SystemService$State: android.os.SystemService$State STOPPED>;

        return $r7;
    }

    public static boolean isRunning(java.lang.String)
    {
        java.lang.String r0;
        android.os.SystemService$State $r1, $r2;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        $r1 = <android.os.SystemService$State: android.os.SystemService$State RUNNING>;

        $r2 = staticinvoke <android.os.SystemService: android.os.SystemService$State getState(java.lang.String)>(r0);

        $z0 = virtualinvoke $r1.<android.os.SystemService$State: boolean equals(java.lang.Object)>($r2);

        return $z0;
    }

    public static boolean isStopped(java.lang.String)
    {
        java.lang.String r0;
        android.os.SystemService$State $r1, $r2;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        $r1 = <android.os.SystemService$State: android.os.SystemService$State STOPPED>;

        $r2 = staticinvoke <android.os.SystemService: android.os.SystemService$State getState(java.lang.String)>(r0);

        $z0 = virtualinvoke $r1.<android.os.SystemService$State: boolean equals(java.lang.Object)>($r2);

        return $z0;
    }

    public static void restart(java.lang.String)
    {
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        staticinvoke <android.os.SystemProperties: void set(java.lang.String,java.lang.String)>("ctl.restart", r0);

        return;
    }

    public static void start(java.lang.String)
    {
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        staticinvoke <android.os.SystemProperties: void set(java.lang.String,java.lang.String)>("ctl.start", r0);

        return;
    }

    public static void stop(java.lang.String)
    {
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        staticinvoke <android.os.SystemProperties: void set(java.lang.String,java.lang.String)>("ctl.stop", r0);

        return;
    }

    public static transient void waitForAnyStopped(java.lang.String[])
    {
        java.lang.Object r0, $r1;
        int i0, i1;
        android.os.SystemService$State $r2, $r3;
        boolean $z0;
        java.lang.Throwable $r4, $r5;
        java.lang.String[] r6;
        java.lang.String r7;

        r6 := @parameter0: java.lang.String[];

     label01:
        r0 = <android.os.SystemService: java.lang.Object sPropertyLock>;

        entermonitor r0;

     label02:
        i0 = lengthof r6;

     label03:
        i1 = 0;

     label04:
        if i1 >= i0 goto label08;

        r7 = r6[i1];

     label05:
        $r2 = <android.os.SystemService$State: android.os.SystemService$State STOPPED>;

        $r3 = staticinvoke <android.os.SystemService: android.os.SystemService$State getState(java.lang.String)>(r7);

        $z0 = virtualinvoke $r2.<android.os.SystemService$State: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label07;

        exitmonitor r0;

     label06:
        return;

     label07:
        i1 = i1 + 1;

        goto label04;

     label08:
        $r1 = <android.os.SystemService: java.lang.Object sPropertyLock>;

        virtualinvoke $r1.<java.lang.Object: void wait()>();

     label09:
        goto label11;

     label10:
        $r4 := @caughtexception;

     label11:
        exitmonitor r0;

     label12:
        goto label01;

     label13:
        $r5 := @caughtexception;

     label14:
        exitmonitor r0;

     label15:
        throw $r5;

        catch java.lang.Throwable from label02 to label03 with label13;
        catch java.lang.Throwable from label05 to label06 with label13;
        catch java.lang.InterruptedException from label08 to label09 with label10;
        catch java.lang.Throwable from label08 to label09 with label13;
        catch java.lang.Throwable from label11 to label12 with label13;
        catch java.lang.Throwable from label14 to label15 with label13;
    }

    public static void waitForState(java.lang.String, android.os.SystemService$State, long) throws java.util.concurrent.TimeoutException
    {
        android.os.SystemService$State r0, r2;
        long l0, l1, l2, $l3;
        java.lang.Object r1, $r13;
        java.lang.StringBuilder r3;
        boolean $z0;
        byte $b4;
        java.lang.String $r12, r16;
        java.lang.Throwable $r14, $r15;
        java.util.concurrent.TimeoutException r18;

        r16 := @parameter0: java.lang.String;

        r0 := @parameter1: android.os.SystemService$State;

        l0 := @parameter2: long;

        l1 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

     label01:
        r1 = <android.os.SystemService: java.lang.Object sPropertyLock>;

        entermonitor r1;

     label02:
        r2 = staticinvoke <android.os.SystemService: android.os.SystemService$State getState(java.lang.String)>(r16);

        $z0 = virtualinvoke r0.<android.os.SystemService$State: boolean equals(java.lang.Object)>(r2);

        if $z0 == 0 goto label04;

        exitmonitor r1;

     label03:
        return;

     label04:
        l2 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

     label05:
        $l3 = l1 + l0;

        $b4 = l2 cmp $l3;

        if $b4 >= 0 goto label11;

     label06:
        $r13 = <android.os.SystemService: java.lang.Object sPropertyLock>;

        virtualinvoke $r13.<java.lang.Object: void wait(long)>(l0);

     label07:
        goto label09;

     label08:
        $r15 := @caughtexception;

     label09:
        exitmonitor r1;

     label10:
        goto label01;

     label11:
        r18 = new java.util.concurrent.TimeoutException;

        r3 = new java.lang.StringBuilder;

        specialinvoke r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Service ");

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r16);

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" currently ");

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; waited ");

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ms for ");

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r12 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r18.<java.util.concurrent.TimeoutException: void <init>(java.lang.String)>($r12);

        throw r18;

     label12:
        $r14 := @caughtexception;

     label13:
        exitmonitor r1;

     label14:
        throw $r14;

        catch java.lang.Throwable from label02 to label03 with label12;
        catch java.lang.Throwable from label04 to label05 with label12;
        catch java.lang.InterruptedException from label06 to label07 with label08;
        catch java.lang.Throwable from label06 to label07 with label12;
        catch java.lang.Throwable from label09 to label10 with label12;
        catch java.lang.Throwable from label11 to label12 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
    }
}
