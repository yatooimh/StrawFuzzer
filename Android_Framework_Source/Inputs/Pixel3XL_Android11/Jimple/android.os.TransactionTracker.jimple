public class android.os.TransactionTracker extends java.lang.Object
{
    private java.util.Map mTraces;

    void <init>()
    {
        android.os.TransactionTracker r0;

        r0 := @this: android.os.TransactionTracker;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        specialinvoke r0.<android.os.TransactionTracker: void resetTraces()>();

        return;
    }

    private void resetTraces()
    {
        android.os.TransactionTracker r0;
        java.lang.Throwable $r1;
        java.util.HashMap r2;

        r0 := @this: android.os.TransactionTracker;

        entermonitor r0;

     label1:
        r2 = new java.util.HashMap;

        specialinvoke r2.<java.util.HashMap: void <init>()>();

        r0.<android.os.TransactionTracker: java.util.Map mTraces> = r2;

        exitmonitor r0;

     label2:
        return;

     label3:
        $r1 := @caughtexception;

     label4:
        exitmonitor r0;

     label5:
        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void addTrace(java.lang.Throwable)
    {
        android.os.TransactionTracker r0;
        java.util.Map $r1, $r2, $r5, $r6;
        boolean $z0;
        java.lang.Long $r3, $r8, $r9;
        java.lang.Object $r7;
        long $l0, $l1;
        java.lang.Throwable $r11, r12;
        java.lang.String r13;

        r0 := @this: android.os.TransactionTracker;

        r12 := @parameter0: java.lang.Throwable;

        r13 = staticinvoke <android.util.Log: java.lang.String getStackTraceString(java.lang.Throwable)>(r12);

        entermonitor r0;

     label1:
        $r1 = r0.<android.os.TransactionTracker: java.util.Map mTraces>;

        $z0 = interfaceinvoke $r1.<java.util.Map: boolean containsKey(java.lang.Object)>(r13);

        if $z0 == 0 goto label3;

        $r6 = r0.<android.os.TransactionTracker: java.util.Map mTraces>;

        $r5 = r0.<android.os.TransactionTracker: java.util.Map mTraces>;

        $r7 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>(r13);

        $r8 = (java.lang.Long) $r7;

        $l0 = virtualinvoke $r8.<java.lang.Long: long longValue()>();

        $l1 = $l0 + 1L;

        $r9 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r13, $r9);

     label2:
        goto label4;

     label3:
        $r2 = r0.<android.os.TransactionTracker: java.util.Map mTraces>;

        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(1L);

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r13, $r3);

     label4:
        exitmonitor r0;

     label5:
        return;

     label6:
        $r11 := @caughtexception;

     label7:
        exitmonitor r0;

     label8:
        throw $r11;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public void clearTraces()
    {
        android.os.TransactionTracker r0;

        r0 := @this: android.os.TransactionTracker;

        specialinvoke r0.<android.os.TransactionTracker: void resetTraces()>();

        return;
    }

    public void writeTracesToFile(android.os.ParcelFileDescriptor)
    {
        android.os.TransactionTracker r0;
        java.util.Iterator r1;
        java.lang.String r2, $r14, $r17;
        java.util.Map $r3, $r7, $r11;
        boolean $z0, $z1;
        com.android.internal.util.FastPrintWriter $r4;
        java.io.FileOutputStream $r5;
        java.io.FileDescriptor $r6;
        java.util.Set $r8;
        java.lang.Object $r9, $r12;
        java.lang.Throwable $r18;
        android.os.ParcelFileDescriptor r19;
        java.lang.StringBuilder r21, r22;

        r0 := @this: android.os.TransactionTracker;

        r19 := @parameter0: android.os.ParcelFileDescriptor;

        $r3 = r0.<android.os.TransactionTracker: java.util.Map mTraces>;

        $z0 = interfaceinvoke $r3.<java.util.Map: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        $r4 = new com.android.internal.util.FastPrintWriter;

        $r5 = new java.io.FileOutputStream;

        $r6 = virtualinvoke r19.<android.os.ParcelFileDescriptor: java.io.FileDescriptor getFileDescriptor()>();

        specialinvoke $r5.<java.io.FileOutputStream: void <init>(java.io.FileDescriptor)>($r6);

        specialinvoke $r4.<com.android.internal.util.FastPrintWriter: void <init>(java.io.OutputStream)>($r5);

        entermonitor r0;

     label2:
        $r7 = r0.<android.os.TransactionTracker: java.util.Map mTraces>;

        $r8 = interfaceinvoke $r7.<java.util.Map: java.util.Set keySet()>();

        r1 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label5;

        $r9 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (java.lang.String) $r9;

        r21 = new java.lang.StringBuilder;

        specialinvoke r21.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Count: ");

        $r11 = r0.<android.os.TransactionTracker: java.util.Map mTraces>;

        $r12 = interfaceinvoke $r11.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2);

        virtualinvoke r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r12);

        $r14 = virtualinvoke r21.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r4.<java.io.PrintWriter: void println(java.lang.String)>($r14);

        r22 = new java.lang.StringBuilder;

        specialinvoke r22.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Trace: ");

        virtualinvoke r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r17 = virtualinvoke r22.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r4.<java.io.PrintWriter: void println(java.lang.String)>($r17);

        virtualinvoke $r4.<java.io.PrintWriter: void println()>();

     label4:
        goto label3;

     label5:
        exitmonitor r0;

     label6:
        virtualinvoke $r4.<java.io.PrintWriter: void flush()>();

        return;

     label7:
        $r18 := @caughtexception;

     label8:
        exitmonitor r0;

     label9:
        throw $r18;

        catch java.lang.Throwable from label2 to label3 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }
}
