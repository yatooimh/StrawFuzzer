public class android.os.UserManager extends java.lang.Object
{
    private static final java.lang.String ACTION_CREATE_USER;
    public static final java.lang.String ACTION_USER_RESTRICTIONS_CHANGED;
    public static final java.lang.String ALLOW_PARENT_PROFILE_APP_LINKING;
    private static final java.lang.String CACHE_KEY_IS_USER_UNLOCKED_PROPERTY;
    public static final java.lang.String DISALLOW_ADD_MANAGED_PROFILE;
    public static final java.lang.String DISALLOW_ADD_USER;
    public static final java.lang.String DISALLOW_ADJUST_VOLUME;
    public static final java.lang.String DISALLOW_AIRPLANE_MODE;
    public static final java.lang.String DISALLOW_AMBIENT_DISPLAY;
    public static final java.lang.String DISALLOW_APPS_CONTROL;
    public static final java.lang.String DISALLOW_AUTOFILL;
    public static final java.lang.String DISALLOW_BLUETOOTH;
    public static final java.lang.String DISALLOW_BLUETOOTH_SHARING;
    public static final java.lang.String DISALLOW_CAMERA;
    public static final java.lang.String DISALLOW_CONFIG_BLUETOOTH;
    public static final java.lang.String DISALLOW_CONFIG_BRIGHTNESS;
    public static final java.lang.String DISALLOW_CONFIG_CELL_BROADCASTS;
    public static final java.lang.String DISALLOW_CONFIG_CREDENTIALS;
    public static final java.lang.String DISALLOW_CONFIG_DATE_TIME;
    public static final java.lang.String DISALLOW_CONFIG_LOCALE;
    public static final java.lang.String DISALLOW_CONFIG_LOCATION;
    public static final java.lang.String DISALLOW_CONFIG_MOBILE_NETWORKS;
    public static final java.lang.String DISALLOW_CONFIG_PRIVATE_DNS;
    public static final java.lang.String DISALLOW_CONFIG_SCREEN_TIMEOUT;
    public static final java.lang.String DISALLOW_CONFIG_TETHERING;
    public static final java.lang.String DISALLOW_CONFIG_VPN;
    public static final java.lang.String DISALLOW_CONFIG_WIFI;
    public static final java.lang.String DISALLOW_CONTENT_CAPTURE;
    public static final java.lang.String DISALLOW_CONTENT_SUGGESTIONS;
    public static final java.lang.String DISALLOW_CREATE_WINDOWS;
    public static final java.lang.String DISALLOW_CROSS_PROFILE_COPY_PASTE;
    public static final java.lang.String DISALLOW_DATA_ROAMING;
    public static final java.lang.String DISALLOW_DEBUGGING_FEATURES;
    public static final java.lang.String DISALLOW_FACTORY_RESET;
    public static final java.lang.String DISALLOW_FUN;
    public static final java.lang.String DISALLOW_INSTALL_APPS;
    public static final java.lang.String DISALLOW_INSTALL_UNKNOWN_SOURCES;
    public static final java.lang.String DISALLOW_INSTALL_UNKNOWN_SOURCES_GLOBALLY;
    public static final java.lang.String DISALLOW_MODIFY_ACCOUNTS;
    public static final java.lang.String DISALLOW_MOUNT_PHYSICAL_MEDIA;
    public static final java.lang.String DISALLOW_NETWORK_RESET;
    public static final java.lang.String DISALLOW_OEM_UNLOCK;
    public static final java.lang.String DISALLOW_OUTGOING_BEAM;
    public static final java.lang.String DISALLOW_OUTGOING_CALLS;
    public static final java.lang.String DISALLOW_PRINTING;
    public static final java.lang.String DISALLOW_RECORD_AUDIO;
    public static final java.lang.String DISALLOW_REMOVE_MANAGED_PROFILE;
    public static final java.lang.String DISALLOW_REMOVE_USER;
    public static final java.lang.String DISALLOW_RUN_IN_BACKGROUND;
    public static final java.lang.String DISALLOW_SAFE_BOOT;
    public static final java.lang.String DISALLOW_SET_USER_ICON;
    public static final java.lang.String DISALLOW_SET_WALLPAPER;
    public static final java.lang.String DISALLOW_SHARE_INTO_MANAGED_PROFILE;
    public static final java.lang.String DISALLOW_SHARE_LOCATION;
    public static final java.lang.String DISALLOW_SMS;
    public static final java.lang.String DISALLOW_SYSTEM_ERROR_DIALOGS;
    public static final java.lang.String DISALLOW_UNIFIED_PASSWORD;
    public static final java.lang.String DISALLOW_UNINSTALL_APPS;
    public static final java.lang.String DISALLOW_UNMUTE_DEVICE;
    public static final java.lang.String DISALLOW_UNMUTE_MICROPHONE;
    public static final java.lang.String DISALLOW_USB_FILE_TRANSFER;
    public static final java.lang.String DISALLOW_USER_SWITCH;
    public static final java.lang.String DISALLOW_WALLPAPER;
    public static final java.lang.String ENSURE_VERIFY_APPS;
    public static final java.lang.String EXTRA_USER_ACCOUNT_NAME;
    public static final java.lang.String EXTRA_USER_ACCOUNT_OPTIONS;
    public static final java.lang.String EXTRA_USER_ACCOUNT_TYPE;
    public static final java.lang.String EXTRA_USER_NAME;
    public static final java.lang.String KEY_RESTRICTIONS_PENDING;
    public static final int PIN_VERIFICATION_FAILED_INCORRECT;
    public static final int PIN_VERIFICATION_FAILED_NOT_SET;
    public static final int PIN_VERIFICATION_SUCCESS;
    public static final int QUIET_MODE_DISABLE_DONT_ASK_CREDENTIAL;
    public static final int QUIET_MODE_DISABLE_ONLY_IF_CREDENTIAL_NOT_REQUIRED;
    public static final int RESTRICTION_NOT_SET;
    public static final int RESTRICTION_SOURCE_DEVICE_OWNER;
    public static final int RESTRICTION_SOURCE_PROFILE_OWNER;
    public static final int RESTRICTION_SOURCE_SYSTEM;
    public static final int SWITCHABILITY_STATUS_OK;
    public static final int SWITCHABILITY_STATUS_SYSTEM_USER_LOCKED;
    public static final int SWITCHABILITY_STATUS_USER_IN_CALL;
    public static final int SWITCHABILITY_STATUS_USER_SWITCH_DISALLOWED;
    private static final java.lang.String TAG;
    public static final int USER_CREATION_FAILED_NOT_PERMITTED;
    public static final int USER_CREATION_FAILED_NO_MORE_USERS;
    public static final int USER_OPERATION_ERROR_CURRENT_USER;
    public static final int USER_OPERATION_ERROR_LOW_STORAGE;
    public static final int USER_OPERATION_ERROR_MANAGED_PROFILE;
    public static final int USER_OPERATION_ERROR_MAX_RUNNING_USERS;
    public static final int USER_OPERATION_ERROR_MAX_USERS;
    public static final int USER_OPERATION_ERROR_UNKNOWN;
    public static final int USER_OPERATION_SUCCESS;
    public static final java.lang.String USER_TYPE_FULL_DEMO;
    public static final java.lang.String USER_TYPE_FULL_GUEST;
    public static final java.lang.String USER_TYPE_FULL_RESTRICTED;
    public static final java.lang.String USER_TYPE_FULL_SECONDARY;
    public static final java.lang.String USER_TYPE_FULL_SYSTEM;
    public static final java.lang.String USER_TYPE_PROFILE_MANAGED;
    public static final java.lang.String USER_TYPE_SYSTEM_HEADLESS;
    private final android.content.Context mContext;
    private java.lang.Boolean mIsManagedProfileCached;
    private java.lang.Boolean mIsProfileCached;
    private final android.app.PropertyInvalidatedCache mIsUserUnlockedCache;
    private final android.app.PropertyInvalidatedCache mIsUserUnlockingOrUnlockedCache;
    private final android.os.IUserManager mService;
    private final int mUserId;

    public void <init>(android.content.Context, android.os.IUserManager)
    {
        android.os.UserManager r0;
        android.content.Context r1, $r5;
        android.os.IUserManager r2;
        android.os.UserManager$1 $r3;
        android.os.UserManager$2 $r4;
        int $i0;

        r0 := @this: android.os.UserManager;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.os.IUserManager;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new android.os.UserManager$1;

        specialinvoke $r3.<android.os.UserManager$1: void <init>(android.os.UserManager,int,java.lang.String)>(r0, 32, "cache_key.is_user_unlocked");

        r0.<android.os.UserManager: android.app.PropertyInvalidatedCache mIsUserUnlockedCache> = $r3;

        $r4 = new android.os.UserManager$2;

        specialinvoke $r4.<android.os.UserManager$2: void <init>(android.os.UserManager,int,java.lang.String)>(r0, 32, "cache_key.is_user_unlocked");

        r0.<android.os.UserManager: android.app.PropertyInvalidatedCache mIsUserUnlockingOrUnlockedCache> = $r4;

        r0.<android.os.UserManager: android.os.IUserManager mService> = r2;

        $r5 = virtualinvoke r1.<android.content.Context: android.content.Context getApplicationContext()>();

        r0.<android.os.UserManager: android.content.Context mContext> = $r5;

        $i0 = virtualinvoke r1.<android.content.Context: int getUserId()>();

        r0.<android.os.UserManager: int mUserId> = $i0;

        return;
    }

    static android.os.IUserManager access$000(android.os.UserManager)
    {
        android.os.UserManager r0;
        android.os.IUserManager $r1;

        r0 := @parameter0: android.os.UserManager;

        $r1 = r0.<android.os.UserManager: android.os.IUserManager mService>;

        return $r1;
    }

    private boolean areThereUsersToWhichToSwitch()
    {
        android.os.UserManager r0;
        boolean $z0, $z1, z2;
        java.lang.Object $r1;
        android.content.pm.UserInfo $r2;
        java.util.List r3;
        int i0, i1;
        java.util.Iterator r4;

        r0 := @this: android.os.UserManager;

        z2 = 1;

        r3 = virtualinvoke r0.<android.os.UserManager: java.util.List getUsers(boolean)>(1);

        if r3 != null goto label1;

        return 0;

     label1:
        i0 = 0;

        r4 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        i1 = i0;

        $r1 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        $r2 = (android.content.pm.UserInfo) $r1;

        $z1 = virtualinvoke $r2.<android.content.pm.UserInfo: boolean supportsSwitchToByUser()>();

        if $z1 == 0 goto label3;

        i1 = i0 + 1;

     label3:
        i0 = i1;

        goto label2;

     label4:
        if i0 <= 1 goto label5;

        goto label6;

     label5:
        z2 = 0;

     label6:
        return z2;
    }

    public static android.content.Intent createUserCreationIntent(java.lang.String, java.lang.String, java.lang.String, android.os.PersistableBundle)
    {
        java.lang.String r0, r1, r2;
        android.os.PersistableBundle r3;
        android.content.Intent $r5;
        java.lang.IllegalArgumentException $r9;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: android.os.PersistableBundle;

        $r5 = new android.content.Intent;

        specialinvoke $r5.<android.content.Intent: void <init>(java.lang.String)>("android.os.action.CREATE_USER");

        if r0 == null goto label1;

        virtualinvoke $r5.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("android.os.extra.USER_NAME", r0);

     label1:
        if r1 == null goto label3;

        if r2 == null goto label2;

        goto label3;

     label2:
        $r9 = new java.lang.IllegalArgumentException;

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("accountType must be specified if accountName is specified");

        throw $r9;

     label3:
        if r1 == null goto label4;

        virtualinvoke $r5.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("android.os.extra.USER_ACCOUNT_NAME", r1);

     label4:
        if r2 == null goto label5;

        virtualinvoke $r5.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("android.os.extra.USER_ACCOUNT_TYPE", r2);

     label5:
        if r3 == null goto label6;

        virtualinvoke $r5.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("android.os.extra.USER_ACCOUNT_OPTIONS", r3);

     label6:
        return $r5;
    }

    public static android.os.UserManager get(android.content.Context)
    {
        android.content.Context r0;
        java.lang.Object $r1;
        android.os.UserManager $r2;

        r0 := @parameter0: android.content.Context;

        $r1 = virtualinvoke r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("user");

        $r2 = (android.os.UserManager) $r1;

        return $r2;
    }

    public static int getMaxSupportedUsers()
    {
        java.lang.String $r0;
        boolean $z0;
        android.content.res.Resources $r1;
        int $i0, $i1;

        $r0 = <android.os.Build: java.lang.String ID>;

        $z0 = virtualinvoke $r0.<java.lang.String: boolean startsWith(java.lang.String)>("JVP");

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $r1 = staticinvoke <android.content.res.Resources: android.content.res.Resources getSystem()>();

        $i0 = virtualinvoke $r1.<android.content.res.Resources: int getInteger(int)>(17694849);

        $i1 = staticinvoke <android.os.SystemProperties: int getInt(java.lang.String,int)>("fw.max_users", $i0);

        return $i1;
    }

    private java.util.List getProfiles(boolean)
    {
        android.os.UserManager r0;
        boolean z0;
        int[] r1;
        int i0, $i1, $i2, $i3, i4;
        java.util.ArrayList $r3;
        android.os.UserHandle $r4;

        r0 := @this: android.os.UserManager;

        z0 := @parameter0: boolean;

        $i1 = r0.<android.os.UserManager: int mUserId>;

        r1 = virtualinvoke r0.<android.os.UserManager: int[] getProfileIds(int,boolean)>($i1, z0);

        $r3 = new java.util.ArrayList;

        $i2 = lengthof r1;

        specialinvoke $r3.<java.util.ArrayList: void <init>(int)>($i2);

        i0 = lengthof r1;

        i4 = 0;

     label1:
        if i4 >= i0 goto label2;

        $i3 = r1[i4];

        $r4 = staticinvoke <android.os.UserHandle: android.os.UserHandle of(int)>($i3);

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r4);

        i4 = i4 + 1;

        goto label1;

     label2:
        return $r3;
    }

    public static int getUserTypeForStatsd(java.lang.String)
    {
        java.lang.String r0;
        int $i0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        byte b1;

        r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int hashCode()>();

        lookupswitch($i0)
        {
            case -1103927049: goto label08;
            case -159818852: goto label07;
            case 34001850: goto label06;
            case 485661392: goto label05;
            case 942013715: goto label04;
            case 1711075452: goto label03;
            case 1765400260: goto label02;
            default: goto label01;
        };

     label01:
        goto label09;

     label02:
        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("android.os.usertype.full.DEMO");

        if $z0 == 0 goto label01;

        b1 = 3;

        goto label10;

     label03:
        $z1 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("android.os.usertype.full.RESTRICTED");

        if $z1 == 0 goto label01;

        b1 = 4;

        goto label10;

     label04:
        $z2 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("android.os.usertype.full.SECONDARY");

        if $z2 == 0 goto label01;

        b1 = 1;

        goto label10;

     label05:
        $z3 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("android.os.usertype.full.SYSTEM");

        if $z3 == 0 goto label01;

        b1 = 0;

        goto label10;

     label06:
        $z4 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("android.os.usertype.system.HEADLESS");

        if $z4 == 0 goto label01;

        b1 = 6;

        goto label10;

     label07:
        $z5 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("android.os.usertype.profile.MANAGED");

        if $z5 == 0 goto label01;

        b1 = 5;

        goto label10;

     label08:
        $z6 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("android.os.usertype.full.GUEST");

        if $z6 == 0 goto label01;

        b1 = 2;

        goto label10;

     label09:
        b1 = -1;

     label10:
        tableswitch(b1)
        {
            case 0: goto label18;
            case 1: goto label17;
            case 2: goto label16;
            case 3: goto label15;
            case 4: goto label14;
            case 5: goto label13;
            case 6: goto label12;
            default: goto label11;
        };

     label11:
        return 0;

     label12:
        return 7;

     label13:
        return 6;

     label14:
        return 5;

     label15:
        return 4;

     label16:
        return 3;

     label17:
        return 2;

     label18:
        return 1;
    }

    public static final void invalidateIsUserUnlockedCache()
    {
        staticinvoke <android.app.PropertyInvalidatedCache: void invalidateCache(java.lang.String)>("cache_key.is_user_unlocked");

        return;
    }

    public static boolean isDeviceInDemoMode(android.content.Context)
    {
        int $i0;
        android.content.Context r0;
        android.content.ContentResolver r1;
        boolean z0;

        r0 := @parameter0: android.content.Context;

        r1 = virtualinvoke r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        z0 = 0;

        $i0 = staticinvoke <android.provider.Settings$Global: int getInt(android.content.ContentResolver,java.lang.String,int)>(r1, "device_demo_mode", 0);

        if $i0 <= 0 goto label1;

        z0 = 1;

     label1:
        return z0;
    }

    public static boolean isGuestUserEphemeral()
    {
        android.content.res.Resources $r0;
        boolean $z0;

        $r0 = staticinvoke <android.content.res.Resources: android.content.res.Resources getSystem()>();

        $z0 = virtualinvoke $r0.<android.content.res.Resources: boolean getBoolean(int)>(17891468);

        return $z0;
    }

    public static boolean isHeadlessSystemUserMode()
    {
        boolean $z0;

        $z0 = <com.android.internal.os.RoSystemProperties: boolean MULTIUSER_HEADLESS_SYSTEM_USER>;

        return $z0;
    }

    private boolean isProfile(int)
    {
        android.os.UserManager r0;
        int i0, $i1;
        android.os.IUserManager $r1, $r2;
        boolean $z0, $z1, z2, z3;
        android.os.RemoteException $r3, $r5;
        java.lang.RuntimeException $r4, $r6;
        java.lang.Boolean r7, r8;

        r0 := @this: android.os.UserManager;

        i0 := @parameter0: int;

        $i1 = staticinvoke <android.os.UserHandle: int myUserId()>();

        if i0 != $i1 goto label4;

        r7 = r0.<android.os.UserManager: java.lang.Boolean mIsProfileCached>;

        if r7 == null goto label1;

        $z1 = virtualinvoke r7.<java.lang.Boolean: boolean booleanValue()>();

        return $z1;

     label1:
        $r2 = r0.<android.os.UserManager: android.os.IUserManager mService>;

        $z0 = interfaceinvoke $r2.<android.os.IUserManager: boolean isProfile(int)>(i0);

        r8 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        r0.<android.os.UserManager: java.lang.Boolean mIsProfileCached> = r8;

        z2 = virtualinvoke r8.<java.lang.Boolean: boolean booleanValue()>();

     label2:
        return z2;

     label3:
        $r5 := @caughtexception;

        $r6 = virtualinvoke $r5.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r6;

     label4:
        $r1 = r0.<android.os.UserManager: android.os.IUserManager mService>;

        z3 = interfaceinvoke $r1.<android.os.IUserManager: boolean isProfile(int)>(i0);

     label5:
        return z3;

     label6:
        $r3 := @caughtexception;

        $r4 = virtualinvoke $r3.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r4;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch android.os.RemoteException from label4 to label5 with label6;
    }

    public static boolean isSplitSystemUser()
    {
        boolean $z0;

        $z0 = <com.android.internal.os.RoSystemProperties: boolean FW_SYSTEM_USER_SPLIT>;

        return $z0;
    }

    public static boolean isUserTypeDemo(java.lang.String)
    {
        java.lang.String r0, $r1;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        $r1 = "android.os.usertype.full.DEMO";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        return $z0;
    }

    public static boolean isUserTypeGuest(java.lang.String)
    {
        java.lang.String r0, $r1;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        $r1 = "android.os.usertype.full.GUEST";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        return $z0;
    }

    public static boolean isUserTypeManagedProfile(java.lang.String)
    {
        java.lang.String r0, $r1;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        $r1 = "android.os.usertype.profile.MANAGED";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        return $z0;
    }

    public static boolean isUserTypeRestricted(java.lang.String)
    {
        java.lang.String r0, $r1;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        $r1 = "android.os.usertype.full.RESTRICTED";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        return $z0;
    }

    private java.lang.Object returnNullOrThrowUserOperationException(android.os.ServiceSpecificException, boolean) throws android.os.UserManager$UserOperationException
    {
        android.os.UserManager r0;
        android.os.ServiceSpecificException r1;
        boolean z0;
        android.os.UserManager$UserOperationException $r2;

        r0 := @this: android.os.UserManager;

        r1 := @parameter0: android.os.ServiceSpecificException;

        z0 := @parameter1: boolean;

        if z0 != 0 goto label1;

        return null;

     label1:
        $r2 = staticinvoke <android.os.UserManager$UserOperationException: android.os.UserManager$UserOperationException 'from'(android.os.ServiceSpecificException)>(r1);

        throw $r2;
    }

    public static boolean supportsMultipleUsers()
    {
        int i0;
        android.content.res.Resources $r0;
        boolean $z0, $z1, z2;

        i0 = staticinvoke <android.os.UserManager: int getMaxSupportedUsers()>();

        z2 = 1;

        if i0 <= 1 goto label1;

        $r0 = staticinvoke <android.content.res.Resources: android.content.res.Resources getSystem()>();

        $z0 = virtualinvoke $r0.<android.content.res.Resources: boolean getBoolean(int)>(17891446);

        $z1 = staticinvoke <android.os.SystemProperties: boolean getBoolean(java.lang.String,boolean)>("fw.show_multiuserui", $z0);

        if $z1 == 0 goto label1;

        goto label2;

     label1:
        z2 = 0;

     label2:
        return z2;
    }

    public void addUserRestrictionsListener(android.os.IUserRestrictionsListener)
    {
        android.os.UserManager r0;
        android.os.IUserManager $r1;
        android.os.RemoteException $r2;
        java.lang.RuntimeException $r3;
        android.os.IUserRestrictionsListener r4;

        r0 := @this: android.os.UserManager;

        r4 := @parameter0: android.os.IUserRestrictionsListener;

     label1:
        $r1 = r0.<android.os.UserManager: android.os.IUserManager mService>;

        interfaceinvoke $r1.<android.os.IUserManager: void addUserRestrictionsListener(android.os.IUserRestrictionsListener)>(r4);

     label2:
        return;

     label3:
        $r2 := @caughtexception;

        $r3 = virtualinvoke $r2.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r3;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean canAddMoreManagedProfiles(int, boolean)
    {
        android.os.UserManager r0;
        int i0;
        android.os.IUserManager $r2;
        android.os.RemoteException $r3;
        java.lang.RuntimeException $r4;
        boolean z0, z1;

        r0 := @this: android.os.UserManager;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

     label1:
        $r2 = r0.<android.os.UserManager: android.os.IUserManager mService>;

        z1 = interfaceinvoke $r2.<android.os.IUserManager: boolean canAddMoreManagedProfiles(int,boolean)>(i0, z0);

     label2:
        return z1;

     label3:
        $r3 := @caughtexception;

        $r4 = virtualinvoke $r3.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r4;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean canAddMoreProfilesToUser(java.lang.String, int)
    {
        android.os.UserManager r0;
        int i0;
        boolean z0;
        android.os.IUserManager $r1;
        android.os.RemoteException $r2;
        java.lang.RuntimeException $r3;
        java.lang.String r4;

        r0 := @this: android.os.UserManager;

        r4 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

     label1:
        $r1 = r0.<android.os.UserManager: android.os.IUserManager mService>;

        z0 = interfaceinvoke $r1.<android.os.IUserManager: boolean canAddMoreProfilesToUser(java.lang.String,int,boolean)>(r4, i0, 0);

     label2:
        return z0;

     label3:
        $r2 := @caughtexception;

        $r3 = virtualinvoke $r2.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r3;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean canAddMoreUsers()
    {
        android.os.UserManager r0;
        java.util.List r1;
        int i0, $i1, i2, i3, i4;
        java.lang.Object $r2;
        android.content.pm.UserInfo $r3;
        boolean $z0, z1;

        r0 := @this: android.os.UserManager;

        z1 = 1;

        r1 = virtualinvoke r0.<android.os.UserManager: java.util.List getUsers(boolean)>(1);

        i0 = interfaceinvoke r1.<java.util.List: int size()>();

        i2 = 0;

        i3 = 0;

     label1:
        if i3 >= i0 goto label3;

        i4 = i2;

        $r2 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i3);

        $r3 = (android.content.pm.UserInfo) $r2;

        $z0 = virtualinvoke $r3.<android.content.pm.UserInfo: boolean isGuest()>();

        if $z0 != 0 goto label2;

        i4 = i2 + 1;

     label2:
        i3 = i3 + 1;

        i2 = i4;

        goto label1;

     label3:
        $i1 = staticinvoke <android.os.UserManager: int getMaxSupportedUsers()>();

        if i2 >= $i1 goto label4;

        goto label5;

     label4:
        z1 = 0;

     label5:
        return z1;
    }

    public boolean canHaveRestrictedProfile(int)
    {
        android.os.UserManager r0;
        int i0;
        boolean z0;
        android.os.IUserManager $r2;
        android.os.RemoteException $r3;
        java.lang.RuntimeException $r4;

        r0 := @this: android.os.UserManager;

        i0 := @parameter0: int;

     label1:
        $r2 = r0.<android.os.UserManager: android.os.IUserManager mService>;

        z0 = interfaceinvoke $r2.<android.os.IUserManager: boolean canHaveRestrictedProfile(int)>(i0);

     label2:
        return z0;

     label3:
        $r3 := @caughtexception;

        $r4 = virtualinvoke $r3.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r4;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean canSwitchUsers()
    {
        android.os.UserManager r0;
        boolean z1, z2, z3, z4, z5;
        android.content.Context $r1, $r3;
        int $i0, $i1;
        android.os.UserHandle $r2;
        java.lang.Object $r4;
        android.content.ContentResolver r5;
        android.telephony.TelephonyManager r6;

        r0 := @this: android.os.UserManager;

        $r1 = r0.<android.os.UserManager: android.content.Context mContext>;

        r5 = virtualinvoke $r1.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $i0 = staticinvoke <android.provider.Settings$Global: int getInt(android.content.ContentResolver,java.lang.String,int)>(r5, "allow_user_switching_when_system_user_locked", 0);

        if $i0 == 0 goto label1;

        z3 = 1;

        goto label2;

     label1:
        z3 = 0;

     label2:
        $r2 = <android.os.UserHandle: android.os.UserHandle SYSTEM>;

        z1 = virtualinvoke r0.<android.os.UserManager: boolean isUserUnlocked(android.os.UserHandle)>($r2);

        z4 = 0;

        $r3 = r0.<android.os.UserManager: android.content.Context mContext>;

        $r4 = virtualinvoke $r3.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/telephony/TelephonyManager;");

        r6 = (android.telephony.TelephonyManager) $r4;

        if r6 == null goto label4;

        $i1 = virtualinvoke r6.<android.telephony.TelephonyManager: int getCallState()>();

        if $i1 == 0 goto label3;

        z4 = 1;

        goto label4;

     label3:
        z4 = 0;

     label4:
        z2 = virtualinvoke r0.<android.os.UserManager: boolean hasUserRestriction(java.lang.String)>("no_user_switch");

        if z3 != 0 goto label5;

        z5 = 0;

        if z1 == 0 goto label6;

     label5:
        z5 = 0;

        if z4 != 0 goto label6;

        z5 = 0;

        if z2 != 0 goto label6;

        z5 = 1;

     label6:
        return z5;
    }

    public void clearSeedAccountData()
    {
        android.os.UserManager r0;
        android.os.IUserManager $r2;
        android.os.RemoteException $r3;
        java.lang.RuntimeException $r4;

        r0 := @this: android.os.UserManager;

     label1:
        $r2 = r0.<android.os.UserManager: android.os.IUserManager mService>;

        interfaceinvoke $r2.<android.os.IUserManager: void clearSeedAccountData()>();

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        $r4 = virtualinvoke $r3.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r4;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.content.pm.UserInfo createGuest(android.content.Context, java.lang.String)
    {
        android.os.UserManager r0;
        android.os.IUserManager $r1;
        android.content.ContentResolver $r2;
        int $i0;
        android.os.ServiceSpecificException $r3;
        android.os.RemoteException $r4;
        java.lang.RuntimeException $r5;
        android.content.Context r6;
        java.lang.String r7;
        android.content.pm.UserInfo r8;

        r0 := @this: android.os.UserManager;

        r6 := @parameter0: android.content.Context;

        r7 := @parameter1: java.lang.String;

     label1:
        $r1 = r0.<android.os.UserManager: android.os.IUserManager mService>;

        r8 = interfaceinvoke $r1.<android.os.IUserManager: android.content.pm.UserInfo createUserWithThrow(java.lang.String,java.lang.String,int)>(r7, "android.os.usertype.full.GUEST", 0);

     label2:
        if r8 == null goto label4;

     label3:
        $r2 = virtualinvoke r6.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $i0 = r8.<android.content.pm.UserInfo: int id>;

        staticinvoke <android.provider.Settings$Secure: boolean putStringForUser(android.content.ContentResolver,java.lang.String,java.lang.String,int)>($r2, "skip_first_use_hints", "1", $i0);

     label4:
        return r8;

     label5:
        $r4 := @caughtexception;

        $r5 = virtualinvoke $r4.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r5;

     label6:
        $r3 := @caughtexception;

        return null;

        catch android.os.ServiceSpecificException from label1 to label2 with label6;
        catch android.os.RemoteException from label1 to label2 with label5;
        catch android.os.ServiceSpecificException from label3 to label4 with label6;
        catch android.os.RemoteException from label3 to label4 with label5;
    }

    public android.os.UserHandle createProfile(java.lang.String, java.lang.String, java.util.Set) throws android.os.UserManager$UserOperationException
    {
        android.os.UserManager r0;
        java.lang.String r1, r15;
        java.util.Set r2;
        android.os.IUserManager $r3;
        int $i0, $i1, $i2;
        java.lang.String[] $r4, $r6;
        java.lang.Object[] $r5;
        android.content.pm.UserInfo $r7;
        android.os.RemoteException $r8;
        java.lang.RuntimeException $r9;
        android.os.ServiceSpecificException $r10;
        android.content.Context $r11;
        android.content.pm.ApplicationInfo $r12;
        java.lang.Object $r13;
        android.os.UserHandle $r14, r16;
        boolean z0;

        r0 := @this: android.os.UserManager;

        r15 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.util.Set;

     label1:
        $r3 = r0.<android.os.UserManager: android.os.IUserManager mService>;

        $i0 = r0.<android.os.UserManager: int mUserId>;

        $i1 = interfaceinvoke r2.<java.util.Set: int size()>();

        $r4 = newarray (java.lang.String)[$i1];

        $r5 = interfaceinvoke r2.<java.util.Set: java.lang.Object[] toArray(java.lang.Object[])>($r4);

        $r6 = (java.lang.String[]) $r5;

        $r7 = interfaceinvoke $r3.<android.os.IUserManager: android.content.pm.UserInfo createProfileForUserWithThrow(java.lang.String,java.lang.String,int,int,java.lang.String[])>(r15, r1, 0, $i0, $r6);

        r16 = virtualinvoke $r7.<android.content.pm.UserInfo: android.os.UserHandle getUserHandle()>();

     label2:
        return r16;

     label3:
        $r8 := @caughtexception;

        $r9 = virtualinvoke $r8.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r9;

     label4:
        $r10 := @caughtexception;

        $r11 = r0.<android.os.UserManager: android.content.Context mContext>;

        $r12 = virtualinvoke $r11.<android.content.Context: android.content.pm.ApplicationInfo getApplicationInfo()>();

        $i2 = $r12.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

        if $i2 < 30 goto label5;

        z0 = 1;

        goto label6;

     label5:
        z0 = 0;

     label6:
        $r13 = specialinvoke r0.<android.os.UserManager: java.lang.Object returnNullOrThrowUserOperationException(android.os.ServiceSpecificException,boolean)>($r10, z0);

        $r14 = (android.os.UserHandle) $r13;

        return $r14;

        catch android.os.ServiceSpecificException from label1 to label2 with label4;
        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.content.pm.UserInfo createProfileForUser(java.lang.String, int, int)
    {
        android.os.UserManager r0;
        java.lang.String r1, $r2;
        int i0, i1;
        android.content.pm.UserInfo $r3;

        r0 := @this: android.os.UserManager;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = staticinvoke <android.content.pm.UserInfo: java.lang.String getDefaultUserType(int)>(i0);

        $r3 = virtualinvoke r0.<android.os.UserManager: android.content.pm.UserInfo createProfileForUser(java.lang.String,java.lang.String,int,int,java.lang.String[])>(r1, $r2, i0, i1, null);

        return $r3;
    }

    public android.content.pm.UserInfo createProfileForUser(java.lang.String, java.lang.String, int, int)
    {
        android.os.UserManager r0;
        java.lang.String r1, r2;
        int i0, i1;
        android.content.pm.UserInfo $r3;

        r0 := @this: android.os.UserManager;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        $r3 = virtualinvoke r0.<android.os.UserManager: android.content.pm.UserInfo createProfileForUser(java.lang.String,java.lang.String,int,int,java.lang.String[])>(r1, r2, i0, i1, null);

        return $r3;
    }

    public android.content.pm.UserInfo createProfileForUser(java.lang.String, java.lang.String, int, int, java.lang.String[])
    {
        android.os.UserManager r0;
        java.lang.String r1, r7;
        int i0, i1;
        java.lang.String[] r2;
        android.os.IUserManager $r3;
        android.os.ServiceSpecificException $r4;
        android.os.RemoteException $r5;
        java.lang.RuntimeException $r6;
        android.content.pm.UserInfo r8;

        r0 := @this: android.os.UserManager;

        r7 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        r2 := @parameter4: java.lang.String[];

     label1:
        $r3 = r0.<android.os.UserManager: android.os.IUserManager mService>;

        r8 = interfaceinvoke $r3.<android.os.IUserManager: android.content.pm.UserInfo createProfileForUserWithThrow(java.lang.String,java.lang.String,int,int,java.lang.String[])>(r7, r1, i0, i1, r2);

     label2:
        return r8;

     label3:
        $r5 := @caughtexception;

        $r6 = virtualinvoke $r5.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r6;

     label4:
        $r4 := @caughtexception;

        return null;

        catch android.os.ServiceSpecificException from label1 to label2 with label4;
        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.content.pm.UserInfo createProfileForUserEvenWhenDisallowed(java.lang.String, java.lang.String, int, int, java.lang.String[])
    {
        android.os.UserManager r0;
        java.lang.String r1, r7;
        int i0, i1;
        java.lang.String[] r2;
        android.os.IUserManager $r3;
        android.os.ServiceSpecificException $r4;
        android.os.RemoteException $r5;
        java.lang.RuntimeException $r6;
        android.content.pm.UserInfo r8;

        r0 := @this: android.os.UserManager;

        r7 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        r2 := @parameter4: java.lang.String[];

     label1:
        $r3 = r0.<android.os.UserManager: android.os.IUserManager mService>;

        r8 = interfaceinvoke $r3.<android.os.IUserManager: android.content.pm.UserInfo createProfileForUserEvenWhenDisallowedWithThrow(java.lang.String,java.lang.String,int,int,java.lang.String[])>(r7, r1, i0, i1, r2);

     label2:
        return r8;

     label3:
        $r5 := @caughtexception;

        $r6 = virtualinvoke $r5.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r6;

     label4:
        $r4 := @caughtexception;

        return null;

        catch android.os.ServiceSpecificException from label1 to label2 with label4;
        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.content.pm.UserInfo createRestrictedProfile(java.lang.String)
    {
        android.os.UserManager r0;
        android.os.UserHandle r1, $r5;
        android.os.IUserManager $r2;
        int $i0, $i1;
        android.content.Context $r3;
        android.accounts.AccountManager $r4;
        android.os.ServiceSpecificException $r6;
        android.os.RemoteException $r7;
        java.lang.RuntimeException $r8;
        java.lang.String r9;
        android.content.pm.UserInfo r10;

        r0 := @this: android.os.UserManager;

        r9 := @parameter0: java.lang.String;

     label1:
        r1 = staticinvoke <android.os.Process: android.os.UserHandle myUserHandle()>();

        $r2 = r0.<android.os.UserManager: android.os.IUserManager mService>;

        $i0 = virtualinvoke r1.<android.os.UserHandle: int getIdentifier()>();

        r10 = interfaceinvoke $r2.<android.os.IUserManager: android.content.pm.UserInfo createRestrictedProfileWithThrow(java.lang.String,int)>(r9, $i0);

     label2:
        if r10 == null goto label4;

     label3:
        $r3 = r0.<android.os.UserManager: android.content.Context mContext>;

        $r4 = staticinvoke <android.accounts.AccountManager: android.accounts.AccountManager get(android.content.Context)>($r3);

        $i1 = r10.<android.content.pm.UserInfo: int id>;

        $r5 = staticinvoke <android.os.UserHandle: android.os.UserHandle of(int)>($i1);

        virtualinvoke $r4.<android.accounts.AccountManager: void addSharedAccountsFromParentUser(android.os.UserHandle,android.os.UserHandle)>(r1, $r5);

     label4:
        return r10;

     label5:
        $r7 := @caughtexception;

        $r8 = virtualinvoke $r7.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r8;

     label6:
        $r6 := @caughtexception;

        return null;

        catch android.os.ServiceSpecificException from label1 to label2 with label6;
        catch android.os.RemoteException from label1 to label2 with label5;
        catch android.os.ServiceSpecificException from label3 to label4 with label6;
        catch android.os.RemoteException from label3 to label4 with label5;
    }

    public android.content.pm.UserInfo createUser(java.lang.String, int)
    {
        android.os.UserManager r0;
        java.lang.String r1, $r2;
        int i0;
        android.content.pm.UserInfo $r3;

        r0 := @this: android.os.UserManager;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r2 = staticinvoke <android.content.pm.UserInfo: java.lang.String getDefaultUserType(int)>(i0);

        $r3 = virtualinvoke r0.<android.os.UserManager: android.content.pm.UserInfo createUser(java.lang.String,java.lang.String,int)>(r1, $r2, i0);

        return $r3;
    }

    public android.content.pm.UserInfo createUser(java.lang.String, java.lang.String, int)
    {
        android.os.UserManager r0;
        java.lang.String r1, r6;
        int i0;
        android.os.IUserManager $r2;
        android.os.RemoteException $r3;
        java.lang.RuntimeException $r4;
        android.os.ServiceSpecificException $r5;
        android.content.pm.UserInfo r7;

        r0 := @this: android.os.UserManager;

        r6 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

     label1:
        $r2 = r0.<android.os.UserManager: android.os.IUserManager mService>;

        r7 = interfaceinvoke $r2.<android.os.IUserManager: android.content.pm.UserInfo createUserWithThrow(java.lang.String,java.lang.String,int)>(r6, r1, i0);

     label2:
        return r7;

     label3:
        $r3 := @caughtexception;

        $r4 = virtualinvoke $r3.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r4;

     label4:
        $r5 := @caughtexception;

        return null;

        catch android.os.ServiceSpecificException from label1 to label2 with label4;
        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void disableIsUserUnlockedCache()
    {
        android.os.UserManager r0;
        android.app.PropertyInvalidatedCache $r1, $r2;

        r0 := @this: android.os.UserManager;

        $r1 = r0.<android.os.UserManager: android.app.PropertyInvalidatedCache mIsUserUnlockedCache>;

        virtualinvoke $r1.<android.app.PropertyInvalidatedCache: void disableLocal()>();

        $r2 = r0.<android.os.UserManager: android.app.PropertyInvalidatedCache mIsUserUnlockingOrUnlockedCache>;

        virtualinvoke $r2.<android.app.PropertyInvalidatedCache: void disableLocal()>();

        return;
    }

    public void evictCredentialEncryptionKey(int)
    {
        android.os.UserManager r0;
        int i0;
        android.os.IUserManager $r2;
        android.os.RemoteException $r3;
        java.lang.RuntimeException $r4;

        r0 := @this: android.os.UserManager;

        i0 := @parameter0: int;

     label1:
        $r2 = r0.<android.os.UserManager: android.os.IUserManager mService>;

        interfaceinvoke $r2.<android.os.IUserManager: void evictCredentialEncryptionKey(int)>(i0);

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        $r4 = virtualinvoke $r3.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r4;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.content.pm.UserInfo findCurrentGuestUser()
    {
        android.os.UserManager r0;
        android.os.IUserManager $r1;
        android.os.RemoteException $r2;
        java.lang.RuntimeException $r3;
        android.content.pm.UserInfo r4;

        r0 := @this: android.os.UserManager;

     label1:
        $r1 = r0.<android.os.UserManager: android.os.IUserManager mService>;

        r4 = interfaceinvoke $r1.<android.os.IUserManager: android.content.pm.UserInfo findCurrentGuestUser()>();

     label2:
        return r4;

     label3:
        $r2 := @caughtexception;

        $r3 = virtualinvoke $r2.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r3;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public java.util.List getAllProfiles()
    {
        android.os.UserManager r0;
        java.util.List $r1;

        r0 := @this: android.os.UserManager;

        $r1 = specialinvoke r0.<android.os.UserManager: java.util.List getProfiles(boolean)>(0);

        return $r1;
    }

    public android.os.Bundle getApplicationRestrictions(java.lang.String)
    {
        android.os.UserManager r0;
        android.os.IUserManager $r1;
        android.os.RemoteException $r2;
        java.lang.RuntimeException $r3;
        java.lang.String r4;
        android.os.Bundle r5;

        r0 := @this: android.os.UserManager;

        r4 := @parameter0: java.lang.String;

     label1:
        $r1 = r0.<android.os.UserManager: android.os.IUserManager mService>;

        r5 = interfaceinvoke $r1.<android.os.IUserManager: android.os.Bundle getApplicationRestrictions(java.lang.String)>(r4);

     label2:
        return r5;

     label3:
        $r2 := @caughtexception;

        $r3 = virtualinvoke $r2.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r3;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.os.Bundle getApplicationRestrictions(java.lang.String, android.os.UserHandle)
    {
        android.os.UserManager r0;
        android.os.UserHandle r1;
        android.os.IUserManager $r2;
        int $i0;
        android.os.RemoteException $r3;
        java.lang.RuntimeException $r4;
        java.lang.String r5;
        android.os.Bundle r6;

        r0 := @this: android.os.UserManager;

        r5 := @parameter0: java.lang.String;

        r1 := @parameter1: android.os.UserHandle;

     label1:
        $r2 = r0.<android.os.UserManager: android.os.IUserManager mService>;

        $i0 = virtualinvoke r1.<android.os.UserHandle: int getIdentifier()>();

        r6 = interfaceinvoke $r2.<android.os.IUserManager: android.os.Bundle getApplicationRestrictionsForUser(java.lang.String,int)>(r5, $i0);

     label2:
        return r6;

     label3:
        $r3 := @caughtexception;

        $r4 = virtualinvoke $r3.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r4;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.graphics.drawable.Drawable getBadgedDrawableForUser(android.graphics.drawable.Drawable, android.os.UserHandle, android.graphics.Rect, int)
    {
        android.os.UserManager r0;
        android.graphics.drawable.Drawable r1, $r6;
        android.os.UserHandle r2;
        android.graphics.Rect r3;
        int i0;
        android.content.Context $r4;
        android.content.pm.PackageManager $r5;

        r0 := @this: android.os.UserManager;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        r2 := @parameter1: android.os.UserHandle;

        r3 := @parameter2: android.graphics.Rect;

        i0 := @parameter3: int;

        $r4 = r0.<android.os.UserManager: android.content.Context mContext>;

        $r5 = virtualinvoke $r4.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r6 = virtualinvoke $r5.<android.content.pm.PackageManager: android.graphics.drawable.Drawable getUserBadgedDrawableForDensity(android.graphics.drawable.Drawable,android.os.UserHandle,android.graphics.Rect,int)>(r1, r2, r3, i0);

        return $r6;
    }

    public android.graphics.drawable.Drawable getBadgedIconForUser(android.graphics.drawable.Drawable, android.os.UserHandle)
    {
        android.os.UserManager r0;
        android.graphics.drawable.Drawable r1, $r5;
        android.os.UserHandle r2;
        android.content.Context $r3;
        android.content.pm.PackageManager $r4;

        r0 := @this: android.os.UserManager;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        r2 := @parameter1: android.os.UserHandle;

        $r3 = r0.<android.os.UserManager: android.content.Context mContext>;

        $r4 = virtualinvoke $r3.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r5 = virtualinvoke $r4.<android.content.pm.PackageManager: android.graphics.drawable.Drawable getUserBadgedIcon(android.graphics.drawable.Drawable,android.os.UserHandle)>(r1, r2);

        return $r5;
    }

    public java.lang.CharSequence getBadgedLabelForUser(java.lang.CharSequence, android.os.UserHandle)
    {
        android.os.UserManager r0;
        android.os.UserHandle r1;
        boolean $z0;
        android.os.IUserManager $r2;
        android.content.res.Resources $r3;
        java.lang.Object[] $r4;
        android.os.RemoteException $r5;
        java.lang.RuntimeException $r6;
        java.lang.CharSequence r7;
        int i0, i1;
        java.lang.String r8;

        r0 := @this: android.os.UserManager;

        r7 := @parameter0: java.lang.CharSequence;

        r1 := @parameter1: android.os.UserHandle;

        i0 = virtualinvoke r1.<android.os.UserHandle: int getIdentifier()>();

        $z0 = virtualinvoke r0.<android.os.UserManager: boolean hasBadge(int)>(i0);

        if $z0 != 0 goto label1;

        return r7;

     label1:
        $r2 = r0.<android.os.UserManager: android.os.IUserManager mService>;

        i1 = interfaceinvoke $r2.<android.os.IUserManager: int getUserBadgeLabelResId(int)>(i0);

        $r3 = staticinvoke <android.content.res.Resources: android.content.res.Resources getSystem()>();

        $r4 = newarray (java.lang.Object)[1];

        $r4[0] = r7;

        r8 = virtualinvoke $r3.<android.content.res.Resources: java.lang.String getString(int,java.lang.Object[])>(i1, $r4);

     label2:
        return r8;

     label3:
        $r5 := @caughtexception;

        $r6 = virtualinvoke $r5.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r6;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public int getCredentialOwnerProfile(int)
    {
        android.os.UserManager r0;
        android.os.IUserManager $r2;
        android.os.RemoteException $r3;
        java.lang.RuntimeException $r4;
        int i0, i1;

        r0 := @this: android.os.UserManager;

        i0 := @parameter0: int;

     label1:
        $r2 = r0.<android.os.UserManager: android.os.IUserManager mService>;

        i1 = interfaceinvoke $r2.<android.os.IUserManager: int getCredentialOwnerProfile(int)>(i0);

     label2:
        return i1;

     label3:
        $r3 := @caughtexception;

        $r4 = virtualinvoke $r3.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r4;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.os.Bundle getDefaultGuestRestrictions()
    {
        android.os.UserManager r0;
        android.os.IUserManager $r1;
        android.os.RemoteException $r2;
        java.lang.RuntimeException $r3;
        android.os.Bundle r4;

        r0 := @this: android.os.UserManager;

     label1:
        $r1 = r0.<android.os.UserManager: android.os.IUserManager mService>;

        r4 = interfaceinvoke $r1.<android.os.IUserManager: android.os.Bundle getDefaultGuestRestrictions()>();

     label2:
        return r4;

     label3:
        $r2 := @caughtexception;

        $r3 = virtualinvoke $r2.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r3;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public int[] getEnabledProfileIds(int)
    {
        android.os.UserManager r0;
        int i0;
        int[] $r1;

        r0 := @this: android.os.UserManager;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<android.os.UserManager: int[] getProfileIds(int,boolean)>(i0, 1);

        return $r1;
    }

    public java.util.List getEnabledProfiles()
    {
        android.os.UserManager r0;
        java.util.List $r1;

        r0 := @this: android.os.UserManager;

        $r1 = specialinvoke r0.<android.os.UserManager: java.util.List getProfiles(boolean)>(1);

        return $r1;
    }

    public java.util.List getEnabledProfiles(int)
    {
        android.os.UserManager r0;
        int i0;
        android.os.IUserManager $r1;
        android.os.RemoteException $r2;
        java.lang.RuntimeException $r3;
        java.util.List r4;

        r0 := @this: android.os.UserManager;

        i0 := @parameter0: int;

     label1:
        $r1 = r0.<android.os.UserManager: android.os.IUserManager mService>;

        r4 = interfaceinvoke $r1.<android.os.IUserManager: java.util.List getProfiles(int,boolean)>(i0, 1);

     label2:
        return r4;

     label3:
        $r2 := @caughtexception;

        $r3 = virtualinvoke $r2.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r3;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.content.pm.UserInfo getPrimaryUser()
    {
        android.os.UserManager r0;
        android.os.IUserManager $r1;
        android.os.RemoteException $r2;
        java.lang.RuntimeException $r3;
        android.content.pm.UserInfo r4;

        r0 := @this: android.os.UserManager;

     label1:
        $r1 = r0.<android.os.UserManager: android.os.IUserManager mService>;

        r4 = interfaceinvoke $r1.<android.os.IUserManager: android.content.pm.UserInfo getPrimaryUser()>();

     label2:
        return r4;

     label3:
        $r2 := @caughtexception;

        $r3 = virtualinvoke $r2.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r3;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public int[] getProfileIds(int, boolean)
    {
        android.os.UserManager r0;
        int i0;
        boolean z0;
        android.os.IUserManager $r1;
        android.os.RemoteException $r2;
        java.lang.RuntimeException $r3;
        int[] r4;

        r0 := @this: android.os.UserManager;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

     label1:
        $r1 = r0.<android.os.UserManager: android.os.IUserManager mService>;

        r4 = interfaceinvoke $r1.<android.os.IUserManager: int[] getProfileIds(int,boolean)>(i0, z0);

     label2:
        return r4;

     label3:
        $r2 := @caughtexception;

        $r3 = virtualinvoke $r2.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r3;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public int[] getProfileIdsWithDisabled(int)
    {
        android.os.UserManager r0;
        int i0;
        int[] $r1;

        r0 := @this: android.os.UserManager;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<android.os.UserManager: int[] getProfileIds(int,boolean)>(i0, 0);

        return $r1;
    }

    public android.content.pm.UserInfo getProfileParent(int)
    {
        android.os.UserManager r0;
        int i0;
        android.os.IUserManager $r1;
        android.os.RemoteException $r2;
        java.lang.RuntimeException $r3;
        android.content.pm.UserInfo r4;

        r0 := @this: android.os.UserManager;

        i0 := @parameter0: int;

     label1:
        $r1 = r0.<android.os.UserManager: android.os.IUserManager mService>;

        r4 = interfaceinvoke $r1.<android.os.IUserManager: android.content.pm.UserInfo getProfileParent(int)>(i0);

     label2:
        return r4;

     label3:
        $r2 := @caughtexception;

        $r3 = virtualinvoke $r2.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r3;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.os.UserHandle getProfileParent(android.os.UserHandle)
    {
        android.os.UserManager r0;
        int $i0, $i1;
        android.os.UserHandle $r1, r2;
        android.content.pm.UserInfo r3;

        r0 := @this: android.os.UserManager;

        r2 := @parameter0: android.os.UserHandle;

        $i0 = virtualinvoke r2.<android.os.UserHandle: int getIdentifier()>();

        r3 = virtualinvoke r0.<android.os.UserManager: android.content.pm.UserInfo getProfileParent(int)>($i0);

        if r3 != null goto label1;

        return null;

     label1:
        $i1 = r3.<android.content.pm.UserInfo: int id>;

        $r1 = staticinvoke <android.os.UserHandle: android.os.UserHandle of(int)>($i1);

        return $r1;
    }

    public java.util.List getProfiles(int)
    {
        android.os.UserManager r0;
        int i0;
        android.os.IUserManager $r1;
        android.os.RemoteException $r2;
        java.lang.RuntimeException $r3;
        java.util.List r4;

        r0 := @this: android.os.UserManager;

        i0 := @parameter0: int;

     label1:
        $r1 = r0.<android.os.UserManager: android.os.IUserManager mService>;

        r4 = interfaceinvoke $r1.<android.os.IUserManager: java.util.List getProfiles(int,boolean)>(i0, 0);

     label2:
        return r4;

     label3:
        $r2 := @caughtexception;

        $r3 = virtualinvoke $r2.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r3;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public java.lang.String getSeedAccountName()
    {
        android.os.UserManager r0;
        android.os.IUserManager $r1;
        android.os.RemoteException $r2;
        java.lang.RuntimeException $r3;
        java.lang.String r4;

        r0 := @this: android.os.UserManager;

     label1:
        $r1 = r0.<android.os.UserManager: android.os.IUserManager mService>;

        r4 = interfaceinvoke $r1.<android.os.IUserManager: java.lang.String getSeedAccountName()>();

     label2:
        return r4;

     label3:
        $r2 := @caughtexception;

        $r3 = virtualinvoke $r2.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r3;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.os.PersistableBundle getSeedAccountOptions()
    {
        android.os.UserManager r0;
        android.os.IUserManager $r1;
        android.os.RemoteException $r2;
        java.lang.RuntimeException $r3;
        android.os.PersistableBundle r4;

        r0 := @this: android.os.UserManager;

     label1:
        $r1 = r0.<android.os.UserManager: android.os.IUserManager mService>;

        r4 = interfaceinvoke $r1.<android.os.IUserManager: android.os.PersistableBundle getSeedAccountOptions()>();

     label2:
        return r4;

     label3:
        $r2 := @caughtexception;

        $r3 = virtualinvoke $r2.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r3;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public java.lang.String getSeedAccountType()
    {
        android.os.UserManager r0;
        android.os.IUserManager $r1;
        android.os.RemoteException $r2;
        java.lang.RuntimeException $r3;
        java.lang.String r4;

        r0 := @this: android.os.UserManager;

     label1:
        $r1 = r0.<android.os.UserManager: android.os.IUserManager mService>;

        r4 = interfaceinvoke $r1.<android.os.IUserManager: java.lang.String getSeedAccountType()>();

     label2:
        return r4;

     label3:
        $r2 := @caughtexception;

        $r3 = virtualinvoke $r2.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r3;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public long getSerialNumberForUser(android.os.UserHandle)
    {
        android.os.UserManager r0;
        android.os.UserHandle r1;
        int $i0, $i1;
        long $l2;

        r0 := @this: android.os.UserManager;

        r1 := @parameter0: android.os.UserHandle;

        $i0 = virtualinvoke r1.<android.os.UserHandle: int getIdentifier()>();

        $i1 = virtualinvoke r0.<android.os.UserManager: int getUserSerialNumber(int)>($i0);

        $l2 = (long) $i1;

        return $l2;
    }

    public long[] getSerialNumbersOfUsers(boolean)
    {
        android.os.UserManager r0;
        boolean z0;
        java.util.List r1;
        long[] r2;
        int $i0, $i1, $i2, i4;
        java.lang.Object $r3;
        android.content.pm.UserInfo $r4;
        long $l3;

        r0 := @this: android.os.UserManager;

        z0 := @parameter0: boolean;

        r1 = virtualinvoke r0.<android.os.UserManager: java.util.List getUsers(boolean)>(z0);

        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        r2 = newarray (long)[$i0];

        i4 = 0;

     label1:
        $i1 = lengthof r2;

        if i4 >= $i1 goto label2;

        $r3 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i4);

        $r4 = (android.content.pm.UserInfo) $r3;

        $i2 = $r4.<android.content.pm.UserInfo: int serialNumber>;

        $l3 = (long) $i2;

        r2[i4] = $l3;

        i4 = i4 + 1;

        goto label1;

     label2:
        return r2;
    }

    public java.lang.String getUserAccount(int)
    {
        android.os.UserManager r0;
        int i0;
        android.os.IUserManager $r1;
        android.os.RemoteException $r2;
        java.lang.RuntimeException $r3;
        java.lang.String r4;

        r0 := @this: android.os.UserManager;

        i0 := @parameter0: int;

     label1:
        $r1 = r0.<android.os.UserManager: android.os.IUserManager mService>;

        r4 = interfaceinvoke $r1.<android.os.IUserManager: java.lang.String getUserAccount(int)>(i0);

     label2:
        return r4;

     label3:
        $r2 := @caughtexception;

        $r3 = virtualinvoke $r2.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r3;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public int getUserBadgeColor(int)
    {
        android.os.UserManager r0;
        android.os.IUserManager $r2;
        android.content.res.Resources $r3;
        android.os.RemoteException $r4;
        java.lang.RuntimeException $r5;
        int i0, i1, i2;

        r0 := @this: android.os.UserManager;

        i0 := @parameter0: int;

     label1:
        $r2 = r0.<android.os.UserManager: android.os.IUserManager mService>;

        i1 = interfaceinvoke $r2.<android.os.IUserManager: int getUserBadgeColorResId(int)>(i0);

        $r3 = staticinvoke <android.content.res.Resources: android.content.res.Resources getSystem()>();

        i2 = virtualinvoke $r3.<android.content.res.Resources: int getColor(int,android.content.res.Resources$Theme)>(i1, null);

     label2:
        return i2;

     label3:
        $r4 := @caughtexception;

        $r5 = virtualinvoke $r4.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r5;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public int getUserBadgeDarkColor(int)
    {
        android.os.UserManager r0;
        android.os.IUserManager $r2;
        android.content.res.Resources $r3;
        android.os.RemoteException $r4;
        java.lang.RuntimeException $r5;
        int i0, i1, i2;

        r0 := @this: android.os.UserManager;

        i0 := @parameter0: int;

     label1:
        $r2 = r0.<android.os.UserManager: android.os.IUserManager mService>;

        i1 = interfaceinvoke $r2.<android.os.IUserManager: int getUserBadgeDarkColorResId(int)>(i0);

        $r3 = staticinvoke <android.content.res.Resources: android.content.res.Resources getSystem()>();

        i2 = virtualinvoke $r3.<android.content.res.Resources: int getColor(int,android.content.res.Resources$Theme)>(i1, null);

     label2:
        return i2;

     label3:
        $r4 := @caughtexception;

        $r5 = virtualinvoke $r4.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r5;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public int getUserBadgeNoBackgroundResId(int)
    {
        android.os.UserManager r0;
        android.os.IUserManager $r2;
        android.os.RemoteException $r3;
        java.lang.RuntimeException $r4;
        int i0, i1;

        r0 := @this: android.os.UserManager;

        i0 := @parameter0: int;

     label1:
        $r2 = r0.<android.os.UserManager: android.os.IUserManager mService>;

        i1 = interfaceinvoke $r2.<android.os.IUserManager: int getUserBadgeNoBackgroundResId(int)>(i0);

     label2:
        return i1;

     label3:
        $r3 := @caughtexception;

        $r4 = virtualinvoke $r3.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r4;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public int getUserBadgeResId(int)
    {
        android.os.UserManager r0;
        android.os.IUserManager $r2;
        android.os.RemoteException $r3;
        java.lang.RuntimeException $r4;
        int i0, i1;

        r0 := @this: android.os.UserManager;

        i0 := @parameter0: int;

     label1:
        $r2 = r0.<android.os.UserManager: android.os.IUserManager mService>;

        i1 = interfaceinvoke $r2.<android.os.IUserManager: int getUserBadgeResId(int)>(i0);

     label2:
        return i1;

     label3:
        $r3 := @caughtexception;

        $r4 = virtualinvoke $r3.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r4;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public int getUserCount()
    {
        android.os.UserManager r0;
        java.util.List r1;
        int i0;

        r0 := @this: android.os.UserManager;

        r1 = virtualinvoke r0.<android.os.UserManager: java.util.List getUsers()>();

        if r1 == null goto label1;

        i0 = interfaceinvoke r1.<java.util.List: int size()>();

        goto label2;

     label1:
        i0 = 1;

     label2:
        return i0;
    }

    public long getUserCreationTime(android.os.UserHandle)
    {
        android.os.UserManager r0;
        long l0;
        android.os.IUserManager $r1;
        int $i1;
        android.os.RemoteException $r2;
        java.lang.RuntimeException $r3;
        android.os.UserHandle r4;

        r0 := @this: android.os.UserManager;

        r4 := @parameter0: android.os.UserHandle;

     label1:
        $r1 = r0.<android.os.UserManager: android.os.IUserManager mService>;

        $i1 = virtualinvoke r4.<android.os.UserHandle: int getIdentifier()>();

        l0 = interfaceinvoke $r1.<android.os.IUserManager: long getUserCreationTime(int)>($i1);

     label2:
        return l0;

     label3:
        $r2 := @caughtexception;

        $r3 = virtualinvoke $r2.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r3;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.os.UserHandle getUserForSerialNumber(long)
    {
        android.os.UserManager r0;
        long l0;
        int i1, $i2;
        android.os.UserHandle $r1, r2;

        r0 := @this: android.os.UserManager;

        l0 := @parameter0: long;

        $i2 = (int) l0;

        i1 = virtualinvoke r0.<android.os.UserManager: int getUserHandle(int)>($i2);

        if i1 < 0 goto label1;

        $r1 = new android.os.UserHandle;

        specialinvoke $r1.<android.os.UserHandle: void <init>(int)>(i1);

        r2 = $r1;

        goto label2;

     label1:
        r2 = null;

     label2:
        return r2;
    }

    public int getUserHandle()
    {
        android.os.UserManager r0;
        int $i0;

        r0 := @this: android.os.UserManager;

        $i0 = staticinvoke <android.os.UserHandle: int myUserId()>();

        return $i0;
    }

    public int getUserHandle(int)
    {
        android.os.UserManager r0;
        android.os.IUserManager $r2;
        android.os.RemoteException $r3;
        java.lang.RuntimeException $r4;
        int i0, i1;

        r0 := @this: android.os.UserManager;

        i0 := @parameter0: int;

     label1:
        $r2 = r0.<android.os.UserManager: android.os.IUserManager mService>;

        i1 = interfaceinvoke $r2.<android.os.IUserManager: int getUserHandle(int)>(i0);

     label2:
        return i1;

     label3:
        $r3 := @caughtexception;

        $r4 = virtualinvoke $r3.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r4;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public java.util.List getUserHandles(boolean)
    {
        android.os.UserManager r0;
        boolean z0, $z1;
        java.util.ArrayList $r2;
        int $i0;
        java.lang.Object $r3;
        android.content.pm.UserInfo $r4;
        android.os.UserHandle $r5;
        java.util.List r6;
        java.util.Iterator r7;

        r0 := @this: android.os.UserManager;

        z0 := @parameter0: boolean;

        r6 = virtualinvoke r0.<android.os.UserManager: java.util.List getUsers(boolean)>(z0);

        $r2 = new java.util.ArrayList;

        $i0 = interfaceinvoke r6.<java.util.List: int size()>();

        specialinvoke $r2.<java.util.ArrayList: void <init>(int)>($i0);

        r7 = interfaceinvoke r6.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label2;

        $r3 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (android.content.pm.UserInfo) $r3;

        $r5 = virtualinvoke $r4.<android.content.pm.UserInfo: android.os.UserHandle getUserHandle()>();

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r5);

        goto label1;

     label2:
        return $r2;
    }

    public android.graphics.Bitmap getUserIcon()
    {
        android.os.UserManager r0;
        int $i0;
        android.graphics.Bitmap $r1;

        r0 := @this: android.os.UserManager;

        $i0 = r0.<android.os.UserManager: int mUserId>;

        $r1 = virtualinvoke r0.<android.os.UserManager: android.graphics.Bitmap getUserIcon(int)>($i0);

        return $r1;
    }

    public android.graphics.Bitmap getUserIcon(int)
    {
        android.os.UserManager r0;
        int i0;
        android.os.IUserManager $r1;
        java.io.FileDescriptor $r2;
        android.os.RemoteException $r3;
        java.lang.RuntimeException $r4;
        java.lang.Throwable $r5, $r6, $r7;
        android.os.ParcelFileDescriptor r8;
        android.graphics.Bitmap r9;

        r0 := @this: android.os.UserManager;

        i0 := @parameter0: int;

     label01:
        $r1 = r0.<android.os.UserManager: android.os.IUserManager mService>;

        r8 = interfaceinvoke $r1.<android.os.IUserManager: android.os.ParcelFileDescriptor getUserIcon(int)>(i0);

     label02:
        if r8 == null goto label13;

     label03:
        $r2 = virtualinvoke r8.<android.os.ParcelFileDescriptor: java.io.FileDescriptor getFileDescriptor()>();

        r9 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeFileDescriptor(java.io.FileDescriptor)>($r2);

     label04:
        virtualinvoke r8.<android.os.ParcelFileDescriptor: void close()>();

     label05:
        goto label07;

     label06:
        $r5 := @caughtexception;

     label07:
        return r9;

     label08:
        $r6 := @caughtexception;

     label09:
        virtualinvoke r8.<android.os.ParcelFileDescriptor: void close()>();

     label10:
        goto label12;

     label11:
        $r7 := @caughtexception;

     label12:
        throw $r6;

     label13:
        return null;

     label14:
        $r3 := @caughtexception;

        $r4 = virtualinvoke $r3.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r4;

        catch android.os.RemoteException from label01 to label02 with label14;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.io.IOException from label04 to label05 with label06;
        catch android.os.RemoteException from label04 to label05 with label14;
        catch java.io.IOException from label09 to label10 with label11;
        catch android.os.RemoteException from label09 to label10 with label14;
        catch android.os.RemoteException from label12 to label13 with label14;
    }

    public int getUserIconBadgeResId(int)
    {
        android.os.UserManager r0;
        android.os.IUserManager $r2;
        android.os.RemoteException $r3;
        java.lang.RuntimeException $r4;
        int i0, i1;

        r0 := @this: android.os.UserManager;

        i0 := @parameter0: int;

     label1:
        $r2 = r0.<android.os.UserManager: android.os.IUserManager mService>;

        i1 = interfaceinvoke $r2.<android.os.IUserManager: int getUserIconBadgeResId(int)>(i0);

     label2:
        return i1;

     label3:
        $r3 := @caughtexception;

        $r4 = virtualinvoke $r3.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r4;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.content.pm.UserInfo getUserInfo(int)
    {
        android.os.UserManager r0;
        int i0;
        android.os.IUserManager $r1;
        android.os.RemoteException $r2;
        java.lang.RuntimeException $r3;
        android.content.pm.UserInfo r4;

        r0 := @this: android.os.UserManager;

        i0 := @parameter0: int;

     label1:
        $r1 = r0.<android.os.UserManager: android.os.IUserManager mService>;

        r4 = interfaceinvoke $r1.<android.os.IUserManager: android.content.pm.UserInfo getUserInfo(int)>(i0);

     label2:
        return r4;

     label3:
        $r2 := @caughtexception;

        $r3 = virtualinvoke $r2.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r3;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public java.lang.String getUserName()
    {
        android.os.UserManager r0;
        int i0, i1;
        android.os.IUserManager $r1;
        android.os.RemoteException $r2;
        java.lang.RuntimeException $r3;
        java.lang.String r4, r7;
        android.content.pm.UserInfo r6;

        r0 := @this: android.os.UserManager;

        i0 = staticinvoke <android.os.UserHandle: int myUserId()>();

        i1 = r0.<android.os.UserManager: int mUserId>;

        if i0 != i1 goto label4;

     label1:
        $r1 = r0.<android.os.UserManager: android.os.IUserManager mService>;

        r4 = interfaceinvoke $r1.<android.os.IUserManager: java.lang.String getUserName()>();

     label2:
        return r4;

     label3:
        $r2 := @caughtexception;

        $r3 = virtualinvoke $r2.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r3;

     label4:
        r6 = virtualinvoke r0.<android.os.UserManager: android.content.pm.UserInfo getUserInfo(int)>(i1);

        if r6 != null goto label5;

        r7 = "";

        goto label6;

     label5:
        r7 = r6.<android.content.pm.UserInfo: java.lang.String name>;

     label6:
        return r7;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public java.util.List getUserProfiles()
    {
        android.os.UserManager r0;
        int[] r1;
        int i0, $i1, $i2, $i3, i4;
        java.util.ArrayList $r3;
        android.os.UserHandle $r4;

        r0 := @this: android.os.UserManager;

        $i1 = staticinvoke <android.os.UserHandle: int myUserId()>();

        r1 = virtualinvoke r0.<android.os.UserManager: int[] getProfileIds(int,boolean)>($i1, 1);

        $r3 = new java.util.ArrayList;

        $i2 = lengthof r1;

        specialinvoke $r3.<java.util.ArrayList: void <init>(int)>($i2);

        i0 = lengthof r1;

        i4 = 0;

     label1:
        if i4 >= i0 goto label2;

        $i3 = r1[i4];

        $r4 = staticinvoke <android.os.UserHandle: android.os.UserHandle of(int)>($i3);

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r4);

        i4 = i4 + 1;

        goto label1;

     label2:
        return $r3;
    }

    public int getUserRestrictionSource(java.lang.String, android.os.UserHandle)
    {
        android.os.UserManager r0;
        android.os.UserHandle r1;
        int i0, $i1;
        android.os.IUserManager $r2;
        android.os.RemoteException $r3;
        java.lang.RuntimeException $r4;
        java.lang.String r5;

        r0 := @this: android.os.UserManager;

        r5 := @parameter0: java.lang.String;

        r1 := @parameter1: android.os.UserHandle;

     label1:
        $r2 = r0.<android.os.UserManager: android.os.IUserManager mService>;

        $i1 = virtualinvoke r1.<android.os.UserHandle: int getIdentifier()>();

        i0 = interfaceinvoke $r2.<android.os.IUserManager: int getUserRestrictionSource(java.lang.String,int)>(r5, $i1);

     label2:
        return i0;

     label3:
        $r3 := @caughtexception;

        $r4 = virtualinvoke $r3.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r4;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public java.util.List getUserRestrictionSources(java.lang.String, android.os.UserHandle)
    {
        android.os.UserManager r0;
        android.os.UserHandle r1;
        android.os.IUserManager $r2;
        int $i0;
        android.os.RemoteException $r3;
        java.lang.RuntimeException $r4;
        java.lang.String r5;
        java.util.List r6;

        r0 := @this: android.os.UserManager;

        r5 := @parameter0: java.lang.String;

        r1 := @parameter1: android.os.UserHandle;

     label1:
        $r2 = r0.<android.os.UserManager: android.os.IUserManager mService>;

        $i0 = virtualinvoke r1.<android.os.UserHandle: int getIdentifier()>();

        r6 = interfaceinvoke $r2.<android.os.IUserManager: java.util.List getUserRestrictionSources(java.lang.String,int)>(r5, $i0);

     label2:
        return r6;

     label3:
        $r3 := @caughtexception;

        $r4 = virtualinvoke $r3.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r4;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.os.Bundle getUserRestrictions()
    {
        android.os.UserManager r0;
        android.os.UserHandle $r1;
        android.os.Bundle $r2;

        r0 := @this: android.os.UserManager;

        $r1 = staticinvoke <android.os.Process: android.os.UserHandle myUserHandle()>();

        $r2 = virtualinvoke r0.<android.os.UserManager: android.os.Bundle getUserRestrictions(android.os.UserHandle)>($r1);

        return $r2;
    }

    public android.os.Bundle getUserRestrictions(android.os.UserHandle)
    {
        android.os.UserManager r0;
        android.os.IUserManager $r1;
        int $i0;
        android.os.RemoteException $r2;
        java.lang.RuntimeException $r3;
        android.os.UserHandle r4;
        android.os.Bundle r5;

        r0 := @this: android.os.UserManager;

        r4 := @parameter0: android.os.UserHandle;

     label1:
        $r1 = r0.<android.os.UserManager: android.os.IUserManager mService>;

        $i0 = virtualinvoke r4.<android.os.UserHandle: int getIdentifier()>();

        r5 = interfaceinvoke $r1.<android.os.IUserManager: android.os.Bundle getUserRestrictions(int)>($i0);

     label2:
        return r5;

     label3:
        $r2 := @caughtexception;

        $r3 = virtualinvoke $r2.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r3;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public int getUserSerialNumber(int)
    {
        android.os.UserManager r0;
        android.os.IUserManager $r2;
        android.os.RemoteException $r3;
        java.lang.RuntimeException $r4;
        int i0, i1;

        r0 := @this: android.os.UserManager;

        i0 := @parameter0: int;

     label1:
        $r2 = r0.<android.os.UserManager: android.os.IUserManager mService>;

        i1 = interfaceinvoke $r2.<android.os.IUserManager: int getUserSerialNumber(int)>(i0);

     label2:
        return i1;

     label3:
        $r3 := @caughtexception;

        $r4 = virtualinvoke $r3.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r4;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public long getUserStartRealtime()
    {
        android.os.UserManager r0;
        long l0;
        android.os.IUserManager $r2;
        android.os.RemoteException $r3;
        java.lang.RuntimeException $r4;

        r0 := @this: android.os.UserManager;

     label1:
        $r2 = r0.<android.os.UserManager: android.os.IUserManager mService>;

        l0 = interfaceinvoke $r2.<android.os.IUserManager: long getUserStartRealtime()>();

     label2:
        return l0;

     label3:
        $r3 := @caughtexception;

        $r4 = virtualinvoke $r3.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r4;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public int getUserSwitchability()
    {
        android.os.UserManager r0;
        android.os.UserHandle $r1;
        int $i0;

        r0 := @this: android.os.UserManager;

        $r1 = staticinvoke <android.os.Process: android.os.UserHandle myUserHandle()>();

        $i0 = virtualinvoke r0.<android.os.UserManager: int getUserSwitchability(android.os.UserHandle)>($r1);

        return $i0;
    }

    public int getUserSwitchability(android.os.UserHandle)
    {
        android.os.UserManager r0;
        android.telephony.TelephonyManager r1;
        boolean z0, $z1, $z2, z3;
        android.content.Context $r2, $r4;
        java.lang.Object $r3;
        int $i0, $i1;
        android.os.UserHandle $r5, r6;
        byte b2, b3, b4;
        android.content.ContentResolver r7;

        r0 := @this: android.os.UserManager;

        r6 := @parameter0: android.os.UserHandle;

        $r2 = r0.<android.os.UserManager: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("phone");

        r1 = (android.telephony.TelephonyManager) $r3;

        b2 = 0;

        $i0 = virtualinvoke r1.<android.telephony.TelephonyManager: int getCallState()>();

        if $i0 == 0 goto label1;

        b2 = 0 | 1;

     label1:
        b3 = b2;

        $z1 = virtualinvoke r0.<android.os.UserManager: boolean hasUserRestriction(java.lang.String,android.os.UserHandle)>("no_user_switch", r6);

        if $z1 == 0 goto label2;

        b3 = b2 | 2;

     label2:
        b4 = b3;

        $z2 = staticinvoke <android.os.UserManager: boolean isHeadlessSystemUserMode()>();

        if $z2 != 0 goto label4;

        $r4 = r0.<android.os.UserManager: android.content.Context mContext>;

        r7 = virtualinvoke $r4.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        z3 = 0;

        $i1 = staticinvoke <android.provider.Settings$Global: int getInt(android.content.ContentResolver,java.lang.String,int)>(r7, "allow_user_switching_when_system_user_locked", 0);

        if $i1 == 0 goto label3;

        z3 = 1;

     label3:
        $r5 = <android.os.UserHandle: android.os.UserHandle SYSTEM>;

        z0 = virtualinvoke r0.<android.os.UserManager: boolean isUserUnlocked(android.os.UserHandle)>($r5);

        b4 = b3;

        if z3 != 0 goto label4;

        b4 = b3;

        if z0 != 0 goto label4;

        b4 = b3 | 4;

     label4:
        return b4;
    }

    public long getUserUnlockRealtime()
    {
        android.os.UserManager r0;
        long l0;
        android.os.IUserManager $r2;
        android.os.RemoteException $r3;
        java.lang.RuntimeException $r4;

        r0 := @this: android.os.UserManager;

     label1:
        $r2 = r0.<android.os.UserManager: android.os.IUserManager mService>;

        l0 = interfaceinvoke $r2.<android.os.IUserManager: long getUserUnlockRealtime()>();

     label2:
        return l0;

     label3:
        $r3 := @caughtexception;

        $r4 = virtualinvoke $r3.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r4;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public java.util.List getUsers()
    {
        android.os.UserManager r0;
        java.util.List $r1;

        r0 := @this: android.os.UserManager;

        $r1 = virtualinvoke r0.<android.os.UserManager: java.util.List getUsers(boolean)>(0);

        return $r1;
    }

    public java.util.List getUsers(boolean)
    {
        android.os.UserManager r0;
        boolean z0;
        java.util.List $r1;

        r0 := @this: android.os.UserManager;

        z0 := @parameter0: boolean;

        $r1 = virtualinvoke r0.<android.os.UserManager: java.util.List getUsers(boolean,boolean,boolean)>(1, z0, 1);

        return $r1;
    }

    public java.util.List getUsers(boolean, boolean, boolean)
    {
        android.os.UserManager r0;
        boolean z0, z1, z2;
        android.os.IUserManager $r1;
        android.os.RemoteException $r2;
        java.lang.RuntimeException $r3;
        java.util.List r4;

        r0 := @this: android.os.UserManager;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        z2 := @parameter2: boolean;

     label1:
        $r1 = r0.<android.os.UserManager: android.os.IUserManager mService>;

        r4 = interfaceinvoke $r1.<android.os.IUserManager: java.util.List getUsers(boolean,boolean,boolean)>(z0, z1, z2);

     label2:
        return r4;

     label3:
        $r2 := @caughtexception;

        $r3 = virtualinvoke $r2.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r3;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean hasBadge()
    {
        android.os.UserManager r0;
        int $i0;
        boolean $z0;

        r0 := @this: android.os.UserManager;

        $i0 = r0.<android.os.UserManager: int mUserId>;

        $z0 = virtualinvoke r0.<android.os.UserManager: boolean hasBadge(int)>($i0);

        return $z0;
    }

    public boolean hasBadge(int)
    {
        android.os.UserManager r0;
        int i0;
        boolean z0, $z1;
        android.os.IUserManager $r2;
        android.os.RemoteException $r3;
        java.lang.RuntimeException $r4;

        r0 := @this: android.os.UserManager;

        i0 := @parameter0: int;

        $z1 = specialinvoke r0.<android.os.UserManager: boolean isProfile(int)>(i0);

        if $z1 != 0 goto label1;

        return 0;

     label1:
        $r2 = r0.<android.os.UserManager: android.os.IUserManager mService>;

        z0 = interfaceinvoke $r2.<android.os.IUserManager: boolean hasBadge(int)>(i0);

     label2:
        return z0;

     label3:
        $r3 := @caughtexception;

        $r4 = virtualinvoke $r3.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r4;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean hasBaseUserRestriction(java.lang.String, android.os.UserHandle)
    {
        android.os.UserManager r0;
        android.os.UserHandle r1;
        boolean z0;
        android.os.IUserManager $r2;
        int $i0;
        android.os.RemoteException $r3;
        java.lang.RuntimeException $r4;
        java.lang.String r5;

        r0 := @this: android.os.UserManager;

        r5 := @parameter0: java.lang.String;

        r1 := @parameter1: android.os.UserHandle;

     label1:
        $r2 = r0.<android.os.UserManager: android.os.IUserManager mService>;

        $i0 = virtualinvoke r1.<android.os.UserHandle: int getIdentifier()>();

        z0 = interfaceinvoke $r2.<android.os.IUserManager: boolean hasBaseUserRestriction(java.lang.String,int)>(r5, $i0);

     label2:
        return z0;

     label3:
        $r3 := @caughtexception;

        $r4 = virtualinvoke $r3.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r4;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean hasRestrictedProfiles()
    {
        android.os.UserManager r0;
        boolean z0;
        android.os.IUserManager $r2;
        android.os.RemoteException $r3;
        java.lang.RuntimeException $r4;

        r0 := @this: android.os.UserManager;

     label1:
        $r2 = r0.<android.os.UserManager: android.os.IUserManager mService>;

        z0 = interfaceinvoke $r2.<android.os.IUserManager: boolean hasRestrictedProfiles()>();

     label2:
        return z0;

     label3:
        $r3 := @caughtexception;

        $r4 = virtualinvoke $r3.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r4;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean hasUserRestriction(java.lang.String)
    {
        android.os.UserManager r0;
        java.lang.String r1;
        android.os.UserHandle $r2;
        boolean $z0;

        r0 := @this: android.os.UserManager;

        r1 := @parameter0: java.lang.String;

        $r2 = staticinvoke <android.os.Process: android.os.UserHandle myUserHandle()>();

        $z0 = virtualinvoke r0.<android.os.UserManager: boolean hasUserRestrictionForUser(java.lang.String,android.os.UserHandle)>(r1, $r2);

        return $z0;
    }

    public boolean hasUserRestriction(java.lang.String, android.os.UserHandle)
    {
        android.os.UserManager r0;
        java.lang.String r1;
        android.os.UserHandle r2;
        boolean $z0;

        r0 := @this: android.os.UserManager;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.UserHandle;

        $z0 = virtualinvoke r0.<android.os.UserManager: boolean hasUserRestrictionForUser(java.lang.String,android.os.UserHandle)>(r1, r2);

        return $z0;
    }

    public boolean hasUserRestrictionForUser(java.lang.String, android.os.UserHandle)
    {
        android.os.UserManager r0;
        android.os.UserHandle r1;
        boolean z0;
        android.os.IUserManager $r2;
        int $i0;
        android.os.RemoteException $r3;
        java.lang.RuntimeException $r4;
        java.lang.String r5;

        r0 := @this: android.os.UserManager;

        r5 := @parameter0: java.lang.String;

        r1 := @parameter1: android.os.UserHandle;

     label1:
        $r2 = r0.<android.os.UserManager: android.os.IUserManager mService>;

        $i0 = virtualinvoke r1.<android.os.UserHandle: int getIdentifier()>();

        z0 = interfaceinvoke $r2.<android.os.IUserManager: boolean hasUserRestriction(java.lang.String,int)>(r5, $i0);

     label2:
        return z0;

     label3:
        $r3 := @caughtexception;

        $r4 = virtualinvoke $r3.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r4;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean hasUserRestrictionOnAnyUser(java.lang.String)
    {
        android.os.UserManager r0;
        boolean z0;
        android.os.IUserManager $r1;
        android.os.RemoteException $r2;
        java.lang.RuntimeException $r3;
        java.lang.String r4;

        r0 := @this: android.os.UserManager;

        r4 := @parameter0: java.lang.String;

     label1:
        $r1 = r0.<android.os.UserManager: android.os.IUserManager mService>;

        z0 = interfaceinvoke $r1.<android.os.IUserManager: boolean hasUserRestrictionOnAnyUser(java.lang.String)>(r4);

     label2:
        return z0;

     label3:
        $r2 := @caughtexception;

        $r3 = virtualinvoke $r2.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r3;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean isAdminUser()
    {
        android.os.UserManager r0;
        int $i0;
        boolean $z0;

        r0 := @this: android.os.UserManager;

        $i0 = staticinvoke <android.os.UserHandle: int myUserId()>();

        $z0 = virtualinvoke r0.<android.os.UserManager: boolean isUserAdmin(int)>($i0);

        return $z0;
    }

    public boolean isDemoUser()
    {
        android.os.UserManager r0;
        boolean z0;
        android.os.IUserManager $r2;
        int $i0;
        android.os.RemoteException $r3;
        java.lang.RuntimeException $r4;

        r0 := @this: android.os.UserManager;

     label1:
        $r2 = r0.<android.os.UserManager: android.os.IUserManager mService>;

        $i0 = staticinvoke <android.os.UserHandle: int myUserId()>();

        z0 = interfaceinvoke $r2.<android.os.IUserManager: boolean isDemoUser(int)>($i0);

     label2:
        return z0;

     label3:
        $r3 := @caughtexception;

        $r4 = virtualinvoke $r3.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r4;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean isEphemeralUser()
    {
        android.os.UserManager r0;
        int $i0;
        boolean $z0;

        r0 := @this: android.os.UserManager;

        $i0 = staticinvoke <android.os.UserHandle: int myUserId()>();

        $z0 = virtualinvoke r0.<android.os.UserManager: boolean isUserEphemeral(int)>($i0);

        return $z0;
    }

    public boolean isGuestUser()
    {
        android.os.UserManager r0;
        android.content.pm.UserInfo r1;
        int $i0;
        boolean $z0, z1;

        r0 := @this: android.os.UserManager;

        $i0 = staticinvoke <android.os.UserHandle: int myUserId()>();

        r1 = virtualinvoke r0.<android.os.UserManager: android.content.pm.UserInfo getUserInfo(int)>($i0);

        if r1 == null goto label1;

        $z0 = virtualinvoke r1.<android.content.pm.UserInfo: boolean isGuest()>();

        if $z0 == 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    public boolean isGuestUser(int)
    {
        android.os.UserManager r0;
        int i0;
        android.content.pm.UserInfo r1;
        boolean $z0, z1;

        r0 := @this: android.os.UserManager;

        i0 := @parameter0: int;

        r1 = virtualinvoke r0.<android.os.UserManager: android.content.pm.UserInfo getUserInfo(int)>(i0);

        if r1 == null goto label1;

        $z0 = virtualinvoke r1.<android.content.pm.UserInfo: boolean isGuest()>();

        if $z0 == 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    public boolean isLinkedUser()
    {
        android.os.UserManager r0;
        boolean $z0;

        r0 := @this: android.os.UserManager;

        $z0 = virtualinvoke r0.<android.os.UserManager: boolean isRestrictedProfile()>();

        return $z0;
    }

    public boolean isManagedProfile()
    {
        android.os.UserManager r0;
        boolean z0, $z1, $z2;
        android.os.IUserManager $r1;
        int $i0;
        android.os.RemoteException $r2;
        java.lang.RuntimeException $r3;
        java.lang.Boolean r4, r5;

        r0 := @this: android.os.UserManager;

        r4 = r0.<android.os.UserManager: java.lang.Boolean mIsManagedProfileCached>;

        if r4 == null goto label1;

        $z2 = virtualinvoke r4.<java.lang.Boolean: boolean booleanValue()>();

        return $z2;

     label1:
        $r1 = r0.<android.os.UserManager: android.os.IUserManager mService>;

        $i0 = staticinvoke <android.os.UserHandle: int myUserId()>();

        $z1 = interfaceinvoke $r1.<android.os.IUserManager: boolean isManagedProfile(int)>($i0);

        r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1);

        r0.<android.os.UserManager: java.lang.Boolean mIsManagedProfileCached> = r5;

        z0 = virtualinvoke r5.<java.lang.Boolean: boolean booleanValue()>();

     label2:
        return z0;

     label3:
        $r2 := @caughtexception;

        $r3 = virtualinvoke $r2.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r3;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean isManagedProfile(int)
    {
        android.os.UserManager r0;
        int i0, $i1;
        boolean z0, $z1;
        android.os.IUserManager $r2;
        android.os.RemoteException $r3;
        java.lang.RuntimeException $r4;

        r0 := @this: android.os.UserManager;

        i0 := @parameter0: int;

        $i1 = staticinvoke <android.os.UserHandle: int myUserId()>();

        if i0 != $i1 goto label1;

        $z1 = virtualinvoke r0.<android.os.UserManager: boolean isManagedProfile()>();

        return $z1;

     label1:
        $r2 = r0.<android.os.UserManager: android.os.IUserManager mService>;

        z0 = interfaceinvoke $r2.<android.os.IUserManager: boolean isManagedProfile(int)>(i0);

     label2:
        return z0;

     label3:
        $r3 := @caughtexception;

        $r4 = virtualinvoke $r3.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r4;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean isPrimaryUser()
    {
        android.os.UserManager r0;
        android.content.pm.UserInfo r1;
        int $i0;
        boolean $z0, z1;

        r0 := @this: android.os.UserManager;

        $i0 = staticinvoke <android.os.UserHandle: int myUserId()>();

        r1 = virtualinvoke r0.<android.os.UserManager: android.content.pm.UserInfo getUserInfo(int)>($i0);

        if r1 == null goto label1;

        $z0 = virtualinvoke r1.<android.content.pm.UserInfo: boolean isPrimary()>();

        if $z0 == 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    public boolean isProfile()
    {
        android.os.UserManager r0;
        int $i0;
        boolean $z0;

        r0 := @this: android.os.UserManager;

        $i0 = r0.<android.os.UserManager: int mUserId>;

        $z0 = specialinvoke r0.<android.os.UserManager: boolean isProfile(int)>($i0);

        return $z0;
    }

    public boolean isQuietModeEnabled(android.os.UserHandle)
    {
        android.os.UserManager r0;
        boolean z0;
        android.os.IUserManager $r1;
        int $i0;
        android.os.RemoteException $r2;
        java.lang.RuntimeException $r3;
        android.os.UserHandle r4;

        r0 := @this: android.os.UserManager;

        r4 := @parameter0: android.os.UserHandle;

     label1:
        $r1 = r0.<android.os.UserManager: android.os.IUserManager mService>;

        $i0 = virtualinvoke r4.<android.os.UserHandle: int getIdentifier()>();

        z0 = interfaceinvoke $r1.<android.os.IUserManager: boolean isQuietModeEnabled(int)>($i0);

     label2:
        return z0;

     label3:
        $r2 := @caughtexception;

        $r3 = virtualinvoke $r2.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r3;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean isRestrictedProfile()
    {
        android.os.UserManager r0;
        boolean z0;
        android.os.IUserManager $r2;
        android.os.RemoteException $r3;
        java.lang.RuntimeException $r4;

        r0 := @this: android.os.UserManager;

     label1:
        $r2 = r0.<android.os.UserManager: android.os.IUserManager mService>;

        z0 = interfaceinvoke $r2.<android.os.IUserManager: boolean isRestricted()>();

     label2:
        return z0;

     label3:
        $r3 := @caughtexception;

        $r4 = virtualinvoke $r3.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r4;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean isRestrictedProfile(android.os.UserHandle)
    {
        android.os.UserManager r0;
        boolean z0;
        android.os.IUserManager $r1;
        int $i0;
        android.content.pm.UserInfo $r2;
        android.os.RemoteException $r3;
        java.lang.RuntimeException $r4;
        android.os.UserHandle r5;

        r0 := @this: android.os.UserManager;

        r5 := @parameter0: android.os.UserHandle;

     label1:
        $r1 = r0.<android.os.UserManager: android.os.IUserManager mService>;

        $i0 = virtualinvoke r5.<android.os.UserHandle: int getIdentifier()>();

        $r2 = interfaceinvoke $r1.<android.os.IUserManager: android.content.pm.UserInfo getUserInfo(int)>($i0);

        z0 = virtualinvoke $r2.<android.content.pm.UserInfo: boolean isRestricted()>();

     label2:
        return z0;

     label3:
        $r3 := @caughtexception;

        $r4 = virtualinvoke $r3.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r4;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean isSameProfileGroup(int, int)
    {
        android.os.UserManager r0;
        int i0, i1;
        boolean z0;
        android.os.IUserManager $r2;
        android.os.RemoteException $r3;
        java.lang.RuntimeException $r4;

        r0 := @this: android.os.UserManager;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

     label1:
        $r2 = r0.<android.os.UserManager: android.os.IUserManager mService>;

        z0 = interfaceinvoke $r2.<android.os.IUserManager: boolean isSameProfileGroup(int,int)>(i0, i1);

     label2:
        return z0;

     label3:
        $r3 := @caughtexception;

        $r4 = virtualinvoke $r3.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r4;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean isSameProfileGroup(android.os.UserHandle, android.os.UserHandle)
    {
        android.os.UserManager r0;
        android.os.UserHandle r1, r2;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: android.os.UserManager;

        r1 := @parameter0: android.os.UserHandle;

        r2 := @parameter1: android.os.UserHandle;

        $i0 = virtualinvoke r1.<android.os.UserHandle: int getIdentifier()>();

        $i1 = virtualinvoke r2.<android.os.UserHandle: int getIdentifier()>();

        $z0 = virtualinvoke r0.<android.os.UserManager: boolean isSameProfileGroup(int,int)>($i0, $i1);

        return $z0;
    }

    public boolean isSettingRestrictedForUser(java.lang.String, int, java.lang.String, int)
    {
        android.os.UserManager r0;
        int i0, i1;
        java.lang.String r1, r5;
        boolean z0;
        android.os.IUserManager $r2;
        android.os.RemoteException $r3;
        java.lang.RuntimeException $r4;

        r0 := @this: android.os.UserManager;

        r5 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        i1 := @parameter3: int;

     label1:
        $r2 = r0.<android.os.UserManager: android.os.IUserManager mService>;

        z0 = interfaceinvoke $r2.<android.os.IUserManager: boolean isSettingRestrictedForUser(java.lang.String,int,java.lang.String,int)>(r5, i0, r1, i1);

     label2:
        return z0;

     label3:
        $r3 := @caughtexception;

        $r4 = virtualinvoke $r3.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r4;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean isSystemUser()
    {
        android.os.UserManager r0;
        int $i0;
        boolean z0;

        r0 := @this: android.os.UserManager;

        $i0 = staticinvoke <android.os.UserHandle: int myUserId()>();

        if $i0 != 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public boolean isUserAGoat()
    {
        android.os.UserManager r0;
        android.content.Context $r1, $r3;
        android.content.pm.ApplicationInfo $r2;
        int $i0;
        android.content.pm.PackageManager $r4;
        boolean $z0;

        r0 := @this: android.os.UserManager;

        $r1 = r0.<android.os.UserManager: android.content.Context mContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.pm.ApplicationInfo getApplicationInfo()>();

        $i0 = $r2.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

        if $i0 < 30 goto label1;

        return 0;

     label1:
        $r3 = r0.<android.os.UserManager: android.content.Context mContext>;

        $r4 = virtualinvoke $r3.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $z0 = virtualinvoke $r4.<android.content.pm.PackageManager: boolean isPackageAvailable(java.lang.String)>("com.coffeestainstudios.goatsimulator");

        return $z0;
    }

    public boolean isUserAdmin(int)
    {
        android.os.UserManager r0;
        int i0;
        android.content.pm.UserInfo r1;
        boolean $z0, z1;

        r0 := @this: android.os.UserManager;

        i0 := @parameter0: int;

        r1 = virtualinvoke r0.<android.os.UserManager: android.content.pm.UserInfo getUserInfo(int)>(i0);

        if r1 == null goto label1;

        $z0 = virtualinvoke r1.<android.content.pm.UserInfo: boolean isAdmin()>();

        if $z0 == 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    public boolean isUserEphemeral(int)
    {
        android.os.UserManager r0;
        int i0;
        android.content.pm.UserInfo r1;
        boolean $z0, z1;

        r0 := @this: android.os.UserManager;

        i0 := @parameter0: int;

        r1 = virtualinvoke r0.<android.os.UserManager: android.content.pm.UserInfo getUserInfo(int)>(i0);

        if r1 == null goto label1;

        $z0 = virtualinvoke r1.<android.content.pm.UserInfo: boolean isEphemeral()>();

        if $z0 == 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    public boolean isUserNameSet()
    {
        android.os.UserManager r0;
        boolean z0;
        android.os.IUserManager $r2;
        int $i0;
        android.os.RemoteException $r3;
        java.lang.RuntimeException $r4;

        r0 := @this: android.os.UserManager;

     label1:
        $r2 = r0.<android.os.UserManager: android.os.IUserManager mService>;

        $i0 = virtualinvoke r0.<android.os.UserManager: int getUserHandle()>();

        z0 = interfaceinvoke $r2.<android.os.IUserManager: boolean isUserNameSet(int)>($i0);

     label2:
        return z0;

     label3:
        $r3 := @caughtexception;

        $r4 = virtualinvoke $r3.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r4;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean isUserOfType(java.lang.String)
    {
        android.os.UserManager r0;
        boolean z0;
        int $i0;
        android.os.IUserManager $r1;
        android.os.RemoteException $r2;
        java.lang.RuntimeException $r3;
        java.lang.String r4;

        r0 := @this: android.os.UserManager;

        r4 := @parameter0: java.lang.String;

     label1:
        $r1 = r0.<android.os.UserManager: android.os.IUserManager mService>;

        $i0 = r0.<android.os.UserManager: int mUserId>;

        z0 = interfaceinvoke $r1.<android.os.IUserManager: boolean isUserOfType(int,java.lang.String)>($i0, r4);

     label2:
        return z0;

     label3:
        $r2 := @caughtexception;

        $r3 = virtualinvoke $r2.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r3;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean isUserRunning(int)
    {
        android.os.UserManager r0;
        int i0;
        boolean z0;
        android.os.IUserManager $r2;
        android.os.RemoteException $r3;
        java.lang.RuntimeException $r4;

        r0 := @this: android.os.UserManager;

        i0 := @parameter0: int;

     label1:
        $r2 = r0.<android.os.UserManager: android.os.IUserManager mService>;

        z0 = interfaceinvoke $r2.<android.os.IUserManager: boolean isUserRunning(int)>(i0);

     label2:
        return z0;

     label3:
        $r3 := @caughtexception;

        $r4 = virtualinvoke $r3.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r4;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean isUserRunning(android.os.UserHandle)
    {
        android.os.UserManager r0;
        android.os.UserHandle r1;
        int $i0;
        boolean $z0;

        r0 := @this: android.os.UserManager;

        r1 := @parameter0: android.os.UserHandle;

        $i0 = virtualinvoke r1.<android.os.UserHandle: int getIdentifier()>();

        $z0 = virtualinvoke r0.<android.os.UserManager: boolean isUserRunning(int)>($i0);

        return $z0;
    }

    public boolean isUserRunningOrStopping(android.os.UserHandle)
    {
        android.os.UserManager r0;
        boolean z0;
        android.app.IActivityManager $r1;
        int $i0;
        android.os.RemoteException $r2;
        java.lang.RuntimeException $r3;
        android.os.UserHandle r4;

        r0 := @this: android.os.UserManager;

        r4 := @parameter0: android.os.UserHandle;

     label1:
        $r1 = staticinvoke <android.app.ActivityManager: android.app.IActivityManager getService()>();

        $i0 = virtualinvoke r4.<android.os.UserHandle: int getIdentifier()>();

        z0 = interfaceinvoke $r1.<android.app.IActivityManager: boolean isUserRunning(int,int)>($i0, 1);

     label2:
        return z0;

     label3:
        $r2 := @caughtexception;

        $r3 = virtualinvoke $r2.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r3;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean isUserSwitcherEnabled()
    {
        android.os.UserManager r0;
        boolean $z0;

        r0 := @this: android.os.UserManager;

        $z0 = virtualinvoke r0.<android.os.UserManager: boolean isUserSwitcherEnabled(boolean)>(1);

        return $z0;
    }

    public boolean isUserSwitcherEnabled(boolean)
    {
        android.os.UserManager r0;
        boolean z0, $z2, $z3, $z4, $z5, $z6, z7, z8, z9;
        android.content.Context $r1, $r2;
        android.content.ContentResolver $r3;
        android.content.res.Resources $r4;
        int $i0, i1;

        r0 := @this: android.os.UserManager;

        z7 := @parameter0: boolean;

        z0 = staticinvoke <android.os.UserManager: boolean supportsMultipleUsers()>();

        if z0 != 0 goto label1;

        return 0;

     label1:
        $z2 = virtualinvoke r0.<android.os.UserManager: boolean hasUserRestriction(java.lang.String)>("no_user_switch");

        if $z2 == 0 goto label2;

        return 0;

     label2:
        $r1 = r0.<android.os.UserManager: android.content.Context mContext>;

        $z3 = staticinvoke <android.os.UserManager: boolean isDeviceInDemoMode(android.content.Context)>($r1);

        if $z3 == 0 goto label3;

        return 0;

     label3:
        $r2 = r0.<android.os.UserManager: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r4 = staticinvoke <android.content.res.Resources: android.content.res.Resources getSystem()>();

        $z4 = virtualinvoke $r4.<android.content.res.Resources: boolean getBoolean(int)>(17891526);

        i1 = (int) $z4;

        $i0 = staticinvoke <android.provider.Settings$Global: int getInt(android.content.ContentResolver,java.lang.String,int)>($r3, "user_switcher_enabled", i1);

        if $i0 == 0 goto label4;

        z8 = 1;

        goto label5;

     label4:
        z8 = 0;

     label5:
        if z8 != 0 goto label6;

        return 0;

     label6:
        if z7 != 0 goto label7;

        $z5 = specialinvoke r0.<android.os.UserManager: boolean areThereUsersToWhichToSwitch()>();

        if $z5 != 0 goto label7;

        z9 = 0;

        $z6 = virtualinvoke r0.<android.os.UserManager: boolean hasUserRestriction(java.lang.String)>("no_add_user");

        if $z6 != 0 goto label8;

     label7:
        z9 = 1;

     label8:
        return z9;
    }

    public boolean isUserUnlocked()
    {
        android.os.UserManager r0;
        android.os.UserHandle $r1;
        boolean $z0;

        r0 := @this: android.os.UserManager;

        $r1 = staticinvoke <android.os.Process: android.os.UserHandle myUserHandle()>();

        $z0 = virtualinvoke r0.<android.os.UserManager: boolean isUserUnlocked(android.os.UserHandle)>($r1);

        return $z0;
    }

    public boolean isUserUnlocked(int)
    {
        android.os.UserManager r0;
        int i0;
        android.app.PropertyInvalidatedCache $r1;
        java.lang.Integer $r2;
        java.lang.Object $r3;
        java.lang.Boolean $r4;
        boolean $z0;

        r0 := @this: android.os.UserManager;

        i0 := @parameter0: int;

        $r1 = r0.<android.os.UserManager: android.app.PropertyInvalidatedCache mIsUserUnlockedCache>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r3 = virtualinvoke $r1.<android.app.PropertyInvalidatedCache: java.lang.Object query(java.lang.Object)>($r2);

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        return $z0;
    }

    public boolean isUserUnlocked(android.os.UserHandle)
    {
        android.os.UserManager r0;
        android.os.UserHandle r1;
        int $i0;
        boolean $z0;

        r0 := @this: android.os.UserManager;

        r1 := @parameter0: android.os.UserHandle;

        $i0 = virtualinvoke r1.<android.os.UserHandle: int getIdentifier()>();

        $z0 = virtualinvoke r0.<android.os.UserManager: boolean isUserUnlocked(int)>($i0);

        return $z0;
    }

    public boolean isUserUnlockingOrUnlocked(int)
    {
        android.os.UserManager r0;
        int i0;
        android.app.PropertyInvalidatedCache $r1;
        java.lang.Integer $r2;
        java.lang.Object $r3;
        java.lang.Boolean $r4;
        boolean $z0;

        r0 := @this: android.os.UserManager;

        i0 := @parameter0: int;

        $r1 = r0.<android.os.UserManager: android.app.PropertyInvalidatedCache mIsUserUnlockingOrUnlockedCache>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r3 = virtualinvoke $r1.<android.app.PropertyInvalidatedCache: java.lang.Object query(java.lang.Object)>($r2);

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        return $z0;
    }

    public boolean isUserUnlockingOrUnlocked(android.os.UserHandle)
    {
        android.os.UserManager r0;
        android.os.UserHandle r1;
        int $i0;
        boolean $z0;

        r0 := @this: android.os.UserManager;

        r1 := @parameter0: android.os.UserHandle;

        $i0 = virtualinvoke r1.<android.os.UserHandle: int getIdentifier()>();

        $z0 = virtualinvoke r0.<android.os.UserManager: boolean isUserUnlockingOrUnlocked(int)>($i0);

        return $z0;
    }

    public boolean markGuestForDeletion(int)
    {
        android.os.UserManager r0;
        int i0;
        boolean z0;
        android.os.IUserManager $r2;
        android.os.RemoteException $r3;
        java.lang.RuntimeException $r4;

        r0 := @this: android.os.UserManager;

        i0 := @parameter0: int;

     label1:
        $r2 = r0.<android.os.UserManager: android.os.IUserManager mService>;

        z0 = interfaceinvoke $r2.<android.os.IUserManager: boolean markGuestForDeletion(int)>(i0);

     label2:
        return z0;

     label3:
        $r3 := @caughtexception;

        $r4 = virtualinvoke $r3.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r4;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.content.pm.UserInfo preCreateUser(java.lang.String) throws android.os.UserManager$UserOperationException
    {
        android.os.UserManager r0;
        android.os.IUserManager $r1;
        android.os.RemoteException $r2;
        java.lang.RuntimeException $r3;
        android.os.ServiceSpecificException $r4;
        android.os.UserManager$UserOperationException $r5;
        java.lang.String r6;
        android.content.pm.UserInfo r7;

        r0 := @this: android.os.UserManager;

        r6 := @parameter0: java.lang.String;

     label1:
        $r1 = r0.<android.os.UserManager: android.os.IUserManager mService>;

        r7 = interfaceinvoke $r1.<android.os.IUserManager: android.content.pm.UserInfo preCreateUserWithThrow(java.lang.String)>(r6);

     label2:
        return r7;

     label3:
        $r2 := @caughtexception;

        $r3 = virtualinvoke $r2.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r3;

     label4:
        $r4 := @caughtexception;

        $r5 = staticinvoke <android.os.UserManager$UserOperationException: android.os.UserManager$UserOperationException 'from'(android.os.ServiceSpecificException)>($r4);

        throw $r5;

        catch android.os.ServiceSpecificException from label1 to label2 with label4;
        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean removeUser(int)
    {
        android.os.UserManager r0;
        int i0;
        boolean z0;
        android.os.IUserManager $r2;
        android.os.RemoteException $r3;
        java.lang.RuntimeException $r4;

        r0 := @this: android.os.UserManager;

        i0 := @parameter0: int;

     label1:
        $r2 = r0.<android.os.UserManager: android.os.IUserManager mService>;

        z0 = interfaceinvoke $r2.<android.os.IUserManager: boolean removeUser(int)>(i0);

     label2:
        return z0;

     label3:
        $r3 := @caughtexception;

        $r4 = virtualinvoke $r3.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r4;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean removeUser(android.os.UserHandle)
    {
        android.os.UserManager r0;
        android.os.UserHandle r1;
        java.lang.IllegalArgumentException $r2;
        int $i0;
        boolean $z0;

        r0 := @this: android.os.UserManager;

        r1 := @parameter0: android.os.UserHandle;

        if r1 == null goto label1;

        $i0 = virtualinvoke r1.<android.os.UserHandle: int getIdentifier()>();

        $z0 = virtualinvoke r0.<android.os.UserManager: boolean removeUser(int)>($i0);

        return $z0;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("user cannot be null");

        throw $r2;
    }

    public boolean removeUserEvenWhenDisallowed(int)
    {
        android.os.UserManager r0;
        int i0;
        boolean z0;
        android.os.IUserManager $r2;
        android.os.RemoteException $r3;
        java.lang.RuntimeException $r4;

        r0 := @this: android.os.UserManager;

        i0 := @parameter0: int;

     label1:
        $r2 = r0.<android.os.UserManager: android.os.IUserManager mService>;

        z0 = interfaceinvoke $r2.<android.os.IUserManager: boolean removeUserEvenWhenDisallowed(int)>(i0);

     label2:
        return z0;

     label3:
        $r3 := @caughtexception;

        $r4 = virtualinvoke $r3.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r4;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean requestQuietModeEnabled(boolean, android.os.UserHandle)
    {
        android.os.UserManager r0;
        boolean z0, $z1;
        android.os.UserHandle r1;

        r0 := @this: android.os.UserManager;

        z0 := @parameter0: boolean;

        r1 := @parameter1: android.os.UserHandle;

        $z1 = virtualinvoke r0.<android.os.UserManager: boolean requestQuietModeEnabled(boolean,android.os.UserHandle,android.content.IntentSender)>(z0, r1, null);

        return $z1;
    }

    public boolean requestQuietModeEnabled(boolean, android.os.UserHandle, int)
    {
        android.os.UserManager r0;
        boolean z0, $z1;
        android.os.UserHandle r1;
        int i0;

        r0 := @this: android.os.UserManager;

        z0 := @parameter0: boolean;

        r1 := @parameter1: android.os.UserHandle;

        i0 := @parameter2: int;

        $z1 = virtualinvoke r0.<android.os.UserManager: boolean requestQuietModeEnabled(boolean,android.os.UserHandle,android.content.IntentSender,int)>(z0, r1, null, i0);

        return $z1;
    }

    public boolean requestQuietModeEnabled(boolean, android.os.UserHandle, android.content.IntentSender)
    {
        android.os.UserManager r0;
        boolean z0, $z1;
        android.os.UserHandle r1;
        android.content.IntentSender r2;

        r0 := @this: android.os.UserManager;

        z0 := @parameter0: boolean;

        r1 := @parameter1: android.os.UserHandle;

        r2 := @parameter2: android.content.IntentSender;

        $z1 = virtualinvoke r0.<android.os.UserManager: boolean requestQuietModeEnabled(boolean,android.os.UserHandle,android.content.IntentSender,int)>(z0, r1, r2, 0);

        return $z1;
    }

    public boolean requestQuietModeEnabled(boolean, android.os.UserHandle, android.content.IntentSender, int)
    {
        android.os.UserManager r0;
        android.content.IntentSender r1;
        int i0, $i1;
        android.content.Context $r2;
        android.os.IUserManager $r3;
        java.lang.String $r4;
        android.os.RemoteException $r5;
        java.lang.RuntimeException $r6;
        boolean z0, z1;
        android.os.UserHandle r7;

        r0 := @this: android.os.UserManager;

        z0 := @parameter0: boolean;

        r7 := @parameter1: android.os.UserHandle;

        r1 := @parameter2: android.content.IntentSender;

        i0 := @parameter3: int;

     label1:
        $r3 = r0.<android.os.UserManager: android.os.IUserManager mService>;

        $r2 = r0.<android.os.UserManager: android.content.Context mContext>;

        $r4 = virtualinvoke $r2.<android.content.Context: java.lang.String getPackageName()>();

        $i1 = virtualinvoke r7.<android.os.UserHandle: int getIdentifier()>();

        z1 = interfaceinvoke $r3.<android.os.IUserManager: boolean requestQuietModeEnabled(java.lang.String,boolean,int,android.content.IntentSender,int)>($r4, z0, $i1, r1, i0);

     label2:
        return z1;

     label3:
        $r5 := @caughtexception;

        $r6 = virtualinvoke $r5.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r6;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void setApplicationRestrictions(java.lang.String, android.os.Bundle, android.os.UserHandle)
    {
        android.os.UserManager r0;
        android.os.Bundle r1;
        android.os.UserHandle r2;
        android.os.IUserManager $r3;
        int $i0;
        android.os.RemoteException $r4;
        java.lang.RuntimeException $r5;
        java.lang.String r6;

        r0 := @this: android.os.UserManager;

        r6 := @parameter0: java.lang.String;

        r1 := @parameter1: android.os.Bundle;

        r2 := @parameter2: android.os.UserHandle;

     label1:
        $r3 = r0.<android.os.UserManager: android.os.IUserManager mService>;

        $i0 = virtualinvoke r2.<android.os.UserHandle: int getIdentifier()>();

        interfaceinvoke $r3.<android.os.IUserManager: void setApplicationRestrictions(java.lang.String,android.os.Bundle,int)>(r6, r1, $i0);

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        $r5 = virtualinvoke $r4.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r5;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void setDefaultGuestRestrictions(android.os.Bundle)
    {
        android.os.UserManager r0;
        android.os.IUserManager $r1;
        android.os.RemoteException $r2;
        java.lang.RuntimeException $r3;
        android.os.Bundle r4;

        r0 := @this: android.os.UserManager;

        r4 := @parameter0: android.os.Bundle;

     label1:
        $r1 = r0.<android.os.UserManager: android.os.IUserManager mService>;

        interfaceinvoke $r1.<android.os.IUserManager: void setDefaultGuestRestrictions(android.os.Bundle)>(r4);

     label2:
        return;

     label3:
        $r2 := @caughtexception;

        $r3 = virtualinvoke $r2.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r3;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean setRestrictionsChallenge(java.lang.String)
    {
        android.os.UserManager r0;
        java.lang.String r1;

        r0 := @this: android.os.UserManager;

        r1 := @parameter0: java.lang.String;

        return 0;
    }

    public void setSeedAccountData(int, java.lang.String, java.lang.String, android.os.PersistableBundle)
    {
        android.os.UserManager r0;
        int i0;
        java.lang.String r1, r6;
        android.os.PersistableBundle r2;
        android.os.IUserManager $r3;
        android.os.RemoteException $r4;
        java.lang.RuntimeException $r5;

        r0 := @this: android.os.UserManager;

        i0 := @parameter0: int;

        r6 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

        r2 := @parameter3: android.os.PersistableBundle;

     label1:
        $r3 = r0.<android.os.UserManager: android.os.IUserManager mService>;

        interfaceinvoke $r3.<android.os.IUserManager: void setSeedAccountData(int,java.lang.String,java.lang.String,android.os.PersistableBundle,boolean)>(i0, r6, r1, r2, 1);

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        $r5 = virtualinvoke $r4.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r5;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void setUserAccount(int, java.lang.String)
    {
        android.os.UserManager r0;
        int i0;
        android.os.IUserManager $r1;
        android.os.RemoteException $r2;
        java.lang.RuntimeException $r3;
        java.lang.String r4;

        r0 := @this: android.os.UserManager;

        i0 := @parameter0: int;

        r4 := @parameter1: java.lang.String;

     label1:
        $r1 = r0.<android.os.UserManager: android.os.IUserManager mService>;

        interfaceinvoke $r1.<android.os.IUserManager: void setUserAccount(int,java.lang.String)>(i0, r4);

     label2:
        return;

     label3:
        $r2 := @caughtexception;

        $r3 = virtualinvoke $r2.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r3;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void setUserAdmin(int)
    {
        android.os.UserManager r0;
        int i0;
        android.os.IUserManager $r2;
        android.os.RemoteException $r3;
        java.lang.RuntimeException $r4;

        r0 := @this: android.os.UserManager;

        i0 := @parameter0: int;

     label1:
        $r2 = r0.<android.os.UserManager: android.os.IUserManager mService>;

        interfaceinvoke $r2.<android.os.IUserManager: void setUserAdmin(int)>(i0);

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        $r4 = virtualinvoke $r3.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r4;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void setUserEnabled(int)
    {
        android.os.UserManager r0;
        int i0;
        android.os.IUserManager $r2;
        android.os.RemoteException $r3;
        java.lang.RuntimeException $r4;

        r0 := @this: android.os.UserManager;

        i0 := @parameter0: int;

     label1:
        $r2 = r0.<android.os.UserManager: android.os.IUserManager mService>;

        interfaceinvoke $r2.<android.os.IUserManager: void setUserEnabled(int)>(i0);

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        $r4 = virtualinvoke $r3.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r4;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void setUserIcon(int, android.graphics.Bitmap)
    {
        android.os.UserManager r0;
        int i0;
        android.os.IUserManager $r1;
        android.os.RemoteException $r2;
        java.lang.RuntimeException $r3;
        android.os.ServiceSpecificException $r4;
        android.graphics.Bitmap r5;

        r0 := @this: android.os.UserManager;

        i0 := @parameter0: int;

        r5 := @parameter1: android.graphics.Bitmap;

     label1:
        $r1 = r0.<android.os.UserManager: android.os.IUserManager mService>;

        interfaceinvoke $r1.<android.os.IUserManager: void setUserIcon(int,android.graphics.Bitmap)>(i0, r5);

     label2:
        return;

     label3:
        $r2 := @caughtexception;

        $r3 = virtualinvoke $r2.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r3;

     label4:
        $r4 := @caughtexception;

        return;

        catch android.os.ServiceSpecificException from label1 to label2 with label4;
        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void setUserIcon(android.graphics.Bitmap) throws android.os.UserManager$UserOperationException
    {
        android.os.UserManager r0;
        android.graphics.Bitmap r1;
        int $i0;

        r0 := @this: android.os.UserManager;

        r1 := @parameter0: android.graphics.Bitmap;

        $i0 = r0.<android.os.UserManager: int mUserId>;

        virtualinvoke r0.<android.os.UserManager: void setUserIcon(int,android.graphics.Bitmap)>($i0, r1);

        return;
    }

    public void setUserName(int, java.lang.String)
    {
        android.os.UserManager r0;
        int i0;
        android.os.IUserManager $r1;
        android.os.RemoteException $r2;
        java.lang.RuntimeException $r3;
        java.lang.String r4;

        r0 := @this: android.os.UserManager;

        i0 := @parameter0: int;

        r4 := @parameter1: java.lang.String;

     label1:
        $r1 = r0.<android.os.UserManager: android.os.IUserManager mService>;

        interfaceinvoke $r1.<android.os.IUserManager: void setUserName(int,java.lang.String)>(i0, r4);

     label2:
        return;

     label3:
        $r2 := @caughtexception;

        $r3 = virtualinvoke $r2.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r3;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void setUserName(java.lang.String)
    {
        android.os.UserManager r0;
        java.lang.String r1;
        int $i0;

        r0 := @this: android.os.UserManager;

        r1 := @parameter0: java.lang.String;

        $i0 = r0.<android.os.UserManager: int mUserId>;

        virtualinvoke r0.<android.os.UserManager: void setUserName(int,java.lang.String)>($i0, r1);

        return;
    }

    public void setUserRestriction(java.lang.String, boolean)
    {
        android.os.UserManager r0;
        java.lang.String r1;
        boolean z0;
        android.os.UserHandle $r2;

        r0 := @this: android.os.UserManager;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $r2 = staticinvoke <android.os.Process: android.os.UserHandle myUserHandle()>();

        virtualinvoke r0.<android.os.UserManager: void setUserRestriction(java.lang.String,boolean,android.os.UserHandle)>(r1, z0, $r2);

        return;
    }

    public void setUserRestriction(java.lang.String, boolean, android.os.UserHandle)
    {
        android.os.UserManager r0;
        boolean z0;
        android.os.UserHandle r1;
        android.os.IUserManager $r2;
        int $i0;
        android.os.RemoteException $r3;
        java.lang.RuntimeException $r4;
        java.lang.String r5;

        r0 := @this: android.os.UserManager;

        r5 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        r1 := @parameter2: android.os.UserHandle;

     label1:
        $r2 = r0.<android.os.UserManager: android.os.IUserManager mService>;

        $i0 = virtualinvoke r1.<android.os.UserHandle: int getIdentifier()>();

        interfaceinvoke $r2.<android.os.IUserManager: void setUserRestriction(java.lang.String,boolean,int)>(r5, z0, $i0);

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        $r4 = virtualinvoke $r3.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r4;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void setUserRestrictions(android.os.Bundle)
    {
        android.os.UserManager r0;
        android.os.Bundle r1;
        java.lang.UnsupportedOperationException $r2;

        r0 := @this: android.os.UserManager;

        r1 := @parameter0: android.os.Bundle;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("This method is no longer supported");

        throw $r2;
    }

    public void setUserRestrictions(android.os.Bundle, android.os.UserHandle)
    {
        android.os.UserManager r0;
        android.os.Bundle r1;
        android.os.UserHandle r2;
        java.lang.UnsupportedOperationException $r3;

        r0 := @this: android.os.UserManager;

        r1 := @parameter0: android.os.Bundle;

        r2 := @parameter1: android.os.UserHandle;

        $r3 = new java.lang.UnsupportedOperationException;

        specialinvoke $r3.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("This method is no longer supported");

        throw $r3;
    }

    public boolean someUserHasSeedAccount(java.lang.String, java.lang.String)
    {
        android.os.UserManager r0;
        java.lang.String r1, r5;
        boolean z0;
        android.os.IUserManager $r2;
        android.os.RemoteException $r3;
        java.lang.RuntimeException $r4;

        r0 := @this: android.os.UserManager;

        r5 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

     label1:
        $r2 = r0.<android.os.UserManager: android.os.IUserManager mService>;

        z0 = interfaceinvoke $r2.<android.os.IUserManager: boolean someUserHasSeedAccount(java.lang.String,java.lang.String)>(r5, r1);

     label2:
        return z0;

     label3:
        $r3 := @caughtexception;

        $r4 = virtualinvoke $r3.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r4;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public static void <clinit>()
    {
        <android.os.UserManager: java.lang.String USER_TYPE_SYSTEM_HEADLESS> = "android.os.usertype.system.HEADLESS";

        <android.os.UserManager: java.lang.String USER_TYPE_PROFILE_MANAGED> = "android.os.usertype.profile.MANAGED";

        <android.os.UserManager: java.lang.String USER_TYPE_FULL_SYSTEM> = "android.os.usertype.full.SYSTEM";

        <android.os.UserManager: java.lang.String USER_TYPE_FULL_SECONDARY> = "android.os.usertype.full.SECONDARY";

        <android.os.UserManager: java.lang.String USER_TYPE_FULL_RESTRICTED> = "android.os.usertype.full.RESTRICTED";

        <android.os.UserManager: java.lang.String USER_TYPE_FULL_GUEST> = "android.os.usertype.full.GUEST";

        <android.os.UserManager: java.lang.String USER_TYPE_FULL_DEMO> = "android.os.usertype.full.DEMO";

        <android.os.UserManager: int USER_OPERATION_SUCCESS> = 0;

        <android.os.UserManager: int USER_OPERATION_ERROR_UNKNOWN> = 1;

        <android.os.UserManager: int USER_OPERATION_ERROR_MAX_USERS> = 6;

        <android.os.UserManager: int USER_OPERATION_ERROR_MAX_RUNNING_USERS> = 3;

        <android.os.UserManager: int USER_OPERATION_ERROR_MANAGED_PROFILE> = 2;

        <android.os.UserManager: int USER_OPERATION_ERROR_LOW_STORAGE> = 5;

        <android.os.UserManager: int USER_OPERATION_ERROR_CURRENT_USER> = 4;

        <android.os.UserManager: int USER_CREATION_FAILED_NO_MORE_USERS> = 2;

        <android.os.UserManager: int USER_CREATION_FAILED_NOT_PERMITTED> = 1;

        <android.os.UserManager: java.lang.String TAG> = "UserManager";

        <android.os.UserManager: int SWITCHABILITY_STATUS_USER_SWITCH_DISALLOWED> = 2;

        <android.os.UserManager: int SWITCHABILITY_STATUS_USER_IN_CALL> = 1;

        <android.os.UserManager: int SWITCHABILITY_STATUS_SYSTEM_USER_LOCKED> = 4;

        <android.os.UserManager: int SWITCHABILITY_STATUS_OK> = 0;

        <android.os.UserManager: int RESTRICTION_SOURCE_SYSTEM> = 1;

        <android.os.UserManager: int RESTRICTION_SOURCE_PROFILE_OWNER> = 4;

        <android.os.UserManager: int RESTRICTION_SOURCE_DEVICE_OWNER> = 2;

        <android.os.UserManager: int RESTRICTION_NOT_SET> = 0;

        <android.os.UserManager: int QUIET_MODE_DISABLE_ONLY_IF_CREDENTIAL_NOT_REQUIRED> = 1;

        <android.os.UserManager: int QUIET_MODE_DISABLE_DONT_ASK_CREDENTIAL> = 2;

        <android.os.UserManager: int PIN_VERIFICATION_SUCCESS> = -1;

        <android.os.UserManager: int PIN_VERIFICATION_FAILED_NOT_SET> = -2;

        <android.os.UserManager: int PIN_VERIFICATION_FAILED_INCORRECT> = -3;

        <android.os.UserManager: java.lang.String KEY_RESTRICTIONS_PENDING> = "restrictions_pending";

        <android.os.UserManager: java.lang.String EXTRA_USER_NAME> = "android.os.extra.USER_NAME";

        <android.os.UserManager: java.lang.String EXTRA_USER_ACCOUNT_TYPE> = "android.os.extra.USER_ACCOUNT_TYPE";

        <android.os.UserManager: java.lang.String EXTRA_USER_ACCOUNT_OPTIONS> = "android.os.extra.USER_ACCOUNT_OPTIONS";

        <android.os.UserManager: java.lang.String EXTRA_USER_ACCOUNT_NAME> = "android.os.extra.USER_ACCOUNT_NAME";

        <android.os.UserManager: java.lang.String ENSURE_VERIFY_APPS> = "ensure_verify_apps";

        <android.os.UserManager: java.lang.String DISALLOW_WALLPAPER> = "no_wallpaper";

        <android.os.UserManager: java.lang.String DISALLOW_USER_SWITCH> = "no_user_switch";

        <android.os.UserManager: java.lang.String DISALLOW_USB_FILE_TRANSFER> = "no_usb_file_transfer";

        <android.os.UserManager: java.lang.String DISALLOW_UNMUTE_MICROPHONE> = "no_unmute_microphone";

        <android.os.UserManager: java.lang.String DISALLOW_UNMUTE_DEVICE> = "disallow_unmute_device";

        <android.os.UserManager: java.lang.String DISALLOW_UNINSTALL_APPS> = "no_uninstall_apps";

        <android.os.UserManager: java.lang.String DISALLOW_UNIFIED_PASSWORD> = "no_unified_password";

        <android.os.UserManager: java.lang.String DISALLOW_SYSTEM_ERROR_DIALOGS> = "no_system_error_dialogs";

        <android.os.UserManager: java.lang.String DISALLOW_SMS> = "no_sms";

        <android.os.UserManager: java.lang.String DISALLOW_SHARE_LOCATION> = "no_share_location";

        <android.os.UserManager: java.lang.String DISALLOW_SHARE_INTO_MANAGED_PROFILE> = "no_sharing_into_profile";

        <android.os.UserManager: java.lang.String DISALLOW_SET_WALLPAPER> = "no_set_wallpaper";

        <android.os.UserManager: java.lang.String DISALLOW_SET_USER_ICON> = "no_set_user_icon";

        <android.os.UserManager: java.lang.String DISALLOW_SAFE_BOOT> = "no_safe_boot";

        <android.os.UserManager: java.lang.String DISALLOW_RUN_IN_BACKGROUND> = "no_run_in_background";

        <android.os.UserManager: java.lang.String DISALLOW_REMOVE_USER> = "no_remove_user";

        <android.os.UserManager: java.lang.String DISALLOW_REMOVE_MANAGED_PROFILE> = "no_remove_managed_profile";

        <android.os.UserManager: java.lang.String DISALLOW_RECORD_AUDIO> = "no_record_audio";

        <android.os.UserManager: java.lang.String DISALLOW_PRINTING> = "no_printing";

        <android.os.UserManager: java.lang.String DISALLOW_OUTGOING_CALLS> = "no_outgoing_calls";

        <android.os.UserManager: java.lang.String DISALLOW_OUTGOING_BEAM> = "no_outgoing_beam";

        <android.os.UserManager: java.lang.String DISALLOW_OEM_UNLOCK> = "no_oem_unlock";

        <android.os.UserManager: java.lang.String DISALLOW_NETWORK_RESET> = "no_network_reset";

        <android.os.UserManager: java.lang.String DISALLOW_MOUNT_PHYSICAL_MEDIA> = "no_physical_media";

        <android.os.UserManager: java.lang.String DISALLOW_MODIFY_ACCOUNTS> = "no_modify_accounts";

        <android.os.UserManager: java.lang.String DISALLOW_INSTALL_UNKNOWN_SOURCES_GLOBALLY> = "no_install_unknown_sources_globally";

        <android.os.UserManager: java.lang.String DISALLOW_INSTALL_UNKNOWN_SOURCES> = "no_install_unknown_sources";

        <android.os.UserManager: java.lang.String DISALLOW_INSTALL_APPS> = "no_install_apps";

        <android.os.UserManager: java.lang.String DISALLOW_FUN> = "no_fun";

        <android.os.UserManager: java.lang.String DISALLOW_FACTORY_RESET> = "no_factory_reset";

        <android.os.UserManager: java.lang.String DISALLOW_DEBUGGING_FEATURES> = "no_debugging_features";

        <android.os.UserManager: java.lang.String DISALLOW_DATA_ROAMING> = "no_data_roaming";

        <android.os.UserManager: java.lang.String DISALLOW_CROSS_PROFILE_COPY_PASTE> = "no_cross_profile_copy_paste";

        <android.os.UserManager: java.lang.String DISALLOW_CREATE_WINDOWS> = "no_create_windows";

        <android.os.UserManager: java.lang.String DISALLOW_CONTENT_SUGGESTIONS> = "no_content_suggestions";

        <android.os.UserManager: java.lang.String DISALLOW_CONTENT_CAPTURE> = "no_content_capture";

        <android.os.UserManager: java.lang.String DISALLOW_CONFIG_WIFI> = "no_config_wifi";

        <android.os.UserManager: java.lang.String DISALLOW_CONFIG_VPN> = "no_config_vpn";

        <android.os.UserManager: java.lang.String DISALLOW_CONFIG_TETHERING> = "no_config_tethering";

        <android.os.UserManager: java.lang.String DISALLOW_CONFIG_SCREEN_TIMEOUT> = "no_config_screen_timeout";

        <android.os.UserManager: java.lang.String DISALLOW_CONFIG_PRIVATE_DNS> = "disallow_config_private_dns";

        <android.os.UserManager: java.lang.String DISALLOW_CONFIG_MOBILE_NETWORKS> = "no_config_mobile_networks";

        <android.os.UserManager: java.lang.String DISALLOW_CONFIG_LOCATION> = "no_config_location";

        <android.os.UserManager: java.lang.String DISALLOW_CONFIG_LOCALE> = "no_config_locale";

        <android.os.UserManager: java.lang.String DISALLOW_CONFIG_DATE_TIME> = "no_config_date_time";

        <android.os.UserManager: java.lang.String DISALLOW_CONFIG_CREDENTIALS> = "no_config_credentials";

        <android.os.UserManager: java.lang.String DISALLOW_CONFIG_CELL_BROADCASTS> = "no_config_cell_broadcasts";

        <android.os.UserManager: java.lang.String DISALLOW_CONFIG_BRIGHTNESS> = "no_config_brightness";

        <android.os.UserManager: java.lang.String DISALLOW_CONFIG_BLUETOOTH> = "no_config_bluetooth";

        <android.os.UserManager: java.lang.String DISALLOW_CAMERA> = "no_camera";

        <android.os.UserManager: java.lang.String DISALLOW_BLUETOOTH_SHARING> = "no_bluetooth_sharing";

        <android.os.UserManager: java.lang.String DISALLOW_BLUETOOTH> = "no_bluetooth";

        <android.os.UserManager: java.lang.String DISALLOW_AUTOFILL> = "no_autofill";

        <android.os.UserManager: java.lang.String DISALLOW_APPS_CONTROL> = "no_control_apps";

        <android.os.UserManager: java.lang.String DISALLOW_AMBIENT_DISPLAY> = "no_ambient_display";

        <android.os.UserManager: java.lang.String DISALLOW_AIRPLANE_MODE> = "no_airplane_mode";

        <android.os.UserManager: java.lang.String DISALLOW_ADJUST_VOLUME> = "no_adjust_volume";

        <android.os.UserManager: java.lang.String DISALLOW_ADD_USER> = "no_add_user";

        <android.os.UserManager: java.lang.String DISALLOW_ADD_MANAGED_PROFILE> = "no_add_managed_profile";

        <android.os.UserManager: java.lang.String CACHE_KEY_IS_USER_UNLOCKED_PROPERTY> = "cache_key.is_user_unlocked";

        <android.os.UserManager: java.lang.String ALLOW_PARENT_PROFILE_APP_LINKING> = "allow_parent_profile_app_linking";

        <android.os.UserManager: java.lang.String ACTION_USER_RESTRICTIONS_CHANGED> = "android.os.action.USER_RESTRICTIONS_CHANGED";

        <android.os.UserManager: java.lang.String ACTION_CREATE_USER> = "android.os.action.CREATE_USER";

        return;
    }
}
