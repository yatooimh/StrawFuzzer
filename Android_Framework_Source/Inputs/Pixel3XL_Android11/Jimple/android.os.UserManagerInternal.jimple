public abstract class android.os.UserManagerInternal extends java.lang.Object
{
    public static final int OWNER_TYPE_DEVICE_OWNER;
    public static final int OWNER_TYPE_NO_OWNER;
    public static final int OWNER_TYPE_PROFILE_OWNER;
    public static final int OWNER_TYPE_PROFILE_OWNER_OF_ORGANIZATION_OWNED_DEVICE;

    public void <init>()
    {
        android.os.UserManagerInternal r0;

        r0 := @this: android.os.UserManagerInternal;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public abstract void addUserRestrictionsListener(android.os.UserManagerInternal$UserRestrictionsListener);

    public abstract android.content.pm.UserInfo createUserEvenWhenDisallowed(java.lang.String, java.lang.String, int, java.lang.String[]) throws android.os.UserManager$CheckedUserOperationException;

    public abstract boolean exists(int);

    public abstract android.os.Bundle getBaseUserRestrictions(int);

    public abstract int getProfileParentId(int);

    public abstract int[] getUserIds();

    public abstract android.content.pm.UserInfo getUserInfo(int);

    public abstract android.content.pm.UserInfo[] getUserInfos();

    public abstract boolean getUserRestriction(int, java.lang.String);

    public abstract java.util.List getUsers(boolean);

    public abstract boolean hasUserRestriction(java.lang.String, int);

    public abstract boolean isDeviceManaged();

    public abstract boolean isProfileAccessible(int, int, java.lang.String, boolean);

    public abstract boolean isSettingRestrictedForUser(java.lang.String, int, java.lang.String, int);

    public abstract boolean isUserInitialized(int);

    public abstract boolean isUserManaged(int);

    public abstract boolean isUserRunning(int);

    public abstract boolean isUserUnlocked(int);

    public abstract boolean isUserUnlockingOrUnlocked(int);

    public abstract void onEphemeralUserStop(int);

    public abstract void removeAllUsers();

    public abstract boolean removeUserEvenWhenDisallowed(int);

    public abstract void removeUserRestrictionsListener(android.os.UserManagerInternal$UserRestrictionsListener);

    public abstract void removeUserState(int);

    public abstract void setBaseUserRestrictionsByDpmsForMigration(int, android.os.Bundle);

    public abstract void setDeviceManaged(boolean);

    public abstract void setDevicePolicyUserRestrictions(int, android.os.Bundle, com.android.server.pm.RestrictionsSet, boolean);

    public abstract void setForceEphemeralUsers(boolean);

    public abstract void setUserIcon(int, android.graphics.Bitmap);

    public abstract void setUserManaged(int, boolean);

    public abstract void setUserState(int, int);

    public static void <clinit>()
    {
        <android.os.UserManagerInternal: int OWNER_TYPE_PROFILE_OWNER_OF_ORGANIZATION_OWNED_DEVICE> = 2;

        <android.os.UserManagerInternal: int OWNER_TYPE_PROFILE_OWNER> = 1;

        <android.os.UserManagerInternal: int OWNER_TYPE_NO_OWNER> = 3;

        <android.os.UserManagerInternal: int OWNER_TYPE_DEVICE_OWNER> = 0;

        return;
    }
}
