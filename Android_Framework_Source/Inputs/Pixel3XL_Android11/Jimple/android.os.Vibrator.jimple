public abstract class android.os.Vibrator extends java.lang.Object
{
    private static final java.lang.String TAG;
    public static final int VIBRATION_EFFECT_SUPPORT_NO;
    public static final int VIBRATION_EFFECT_SUPPORT_UNKNOWN;
    public static final int VIBRATION_EFFECT_SUPPORT_YES;
    public static final int VIBRATION_INTENSITY_HIGH;
    public static final int VIBRATION_INTENSITY_LOW;
    public static final int VIBRATION_INTENSITY_MEDIUM;
    public static final int VIBRATION_INTENSITY_OFF;
    private int mDefaultHapticFeedbackIntensity;
    private int mDefaultNotificationVibrationIntensity;
    private int mDefaultRingVibrationIntensity;
    private final java.lang.String mPackageName;

    public void <init>()
    {
        android.os.Vibrator r0;
        java.lang.String $r1;
        android.app.ActivityThread $r2;
        android.app.ContextImpl $r3;

        r0 := @this: android.os.Vibrator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = staticinvoke <android.app.ActivityThread: java.lang.String currentPackageName()>();

        r0.<android.os.Vibrator: java.lang.String mPackageName> = $r1;

        $r2 = staticinvoke <android.app.ActivityThread: android.app.ActivityThread currentActivityThread()>();

        $r3 = virtualinvoke $r2.<android.app.ActivityThread: android.app.ContextImpl getSystemContext()>();

        specialinvoke r0.<android.os.Vibrator: void loadVibrationIntensities(android.content.Context)>($r3);

        return;
    }

    protected void <init>(android.content.Context)
    {
        android.os.Vibrator r0;
        android.content.Context r1;
        java.lang.String $r2;

        r0 := @this: android.os.Vibrator;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = virtualinvoke r1.<android.content.Context: java.lang.String getOpPackageName()>();

        r0.<android.os.Vibrator: java.lang.String mPackageName> = $r2;

        specialinvoke r0.<android.os.Vibrator: void loadVibrationIntensities(android.content.Context)>(r1);

        return;
    }

    private int loadDefaultIntensity(android.content.Context, int)
    {
        android.os.Vibrator r0;
        android.content.Context r1;
        android.content.res.Resources $r2;
        int i0, i1;

        r0 := @this: android.os.Vibrator;

        r1 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        if r1 == null goto label1;

        $r2 = virtualinvoke r1.<android.content.Context: android.content.res.Resources getResources()>();

        i1 = virtualinvoke $r2.<android.content.res.Resources: int getInteger(int)>(i0);

        goto label2;

     label1:
        i1 = 2;

     label2:
        return i1;
    }

    private void loadVibrationIntensities(android.content.Context)
    {
        android.os.Vibrator r0;
        android.content.Context r1;
        int $i0, $i1, $i2;

        r0 := @this: android.os.Vibrator;

        r1 := @parameter0: android.content.Context;

        $i0 = specialinvoke r0.<android.os.Vibrator: int loadDefaultIntensity(android.content.Context,int)>(r1, 17694773);

        r0.<android.os.Vibrator: int mDefaultHapticFeedbackIntensity> = $i0;

        $i1 = specialinvoke r0.<android.os.Vibrator: int loadDefaultIntensity(android.content.Context,int)>(r1, 17694780);

        r0.<android.os.Vibrator: int mDefaultNotificationVibrationIntensity> = $i1;

        $i2 = specialinvoke r0.<android.os.Vibrator: int loadDefaultIntensity(android.content.Context,int)>(r1, 17694785);

        r0.<android.os.Vibrator: int mDefaultRingVibrationIntensity> = $i2;

        return;
    }

    public void addVibratorStateListener(android.os.Vibrator$OnVibratorStateChangedListener)
    {
        android.os.Vibrator r0;
        android.os.Vibrator$OnVibratorStateChangedListener r1;

        r0 := @this: android.os.Vibrator;

        r1 := @parameter0: android.os.Vibrator$OnVibratorStateChangedListener;

        return;
    }

    public void addVibratorStateListener(java.util.concurrent.Executor, android.os.Vibrator$OnVibratorStateChangedListener)
    {
        android.os.Vibrator r0;
        java.util.concurrent.Executor r1;
        android.os.Vibrator$OnVibratorStateChangedListener r2;

        r0 := @this: android.os.Vibrator;

        r1 := @parameter0: java.util.concurrent.Executor;

        r2 := @parameter1: android.os.Vibrator$OnVibratorStateChangedListener;

        return;
    }

    public final transient int areAllEffectsSupported(int[])
    {
        android.os.Vibrator r0;
        int i0, i1, i3;
        int[] r1, r2;
        byte b2;

        r0 := @this: android.os.Vibrator;

        r1 := @parameter0: int[];

        b2 = 1;

        r2 = virtualinvoke r0.<android.os.Vibrator: int[] areEffectsSupported(int[])>(r1);

        i0 = lengthof r2;

        i3 = 0;

     label1:
        if i3 >= i0 goto label4;

        i1 = r2[i3];

        if i1 != 2 goto label2;

        return 2;

     label2:
        if i1 != 0 goto label3;

        b2 = 0;

     label3:
        i3 = i3 + 1;

        goto label1;

     label4:
        return b2;
    }

    public final transient boolean areAllPrimitivesSupported(int[])
    {
        android.os.Vibrator r0;
        int i0, i1;
        boolean $z0;
        int[] r1;
        boolean[] r2;

        r0 := @this: android.os.Vibrator;

        r1 := @parameter0: int[];

        r2 = virtualinvoke r0.<android.os.Vibrator: boolean[] arePrimitivesSupported(int[])>(r1);

        i0 = lengthof r2;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $z0 = r2[i1];

        if $z0 != 0 goto label2;

        return 0;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return 1;
    }

    public transient int[] areEffectsSupported(int[])
    {
        android.os.Vibrator r0;
        int $i0;
        int[] r1, r2;

        r0 := @this: android.os.Vibrator;

        r1 := @parameter0: int[];

        $i0 = lengthof r1;

        r2 = newarray (int)[$i0];

        staticinvoke <java.util.Arrays: void fill(int[],int)>(r2, 2);

        return r2;
    }

    public transient boolean[] arePrimitivesSupported(int[])
    {
        android.os.Vibrator r0;
        int[] r1;
        int $i0;
        boolean[] $r2;

        r0 := @this: android.os.Vibrator;

        r1 := @parameter0: int[];

        $i0 = lengthof r1;

        $r2 = newarray (boolean)[$i0];

        return $r2;
    }

    public abstract void cancel();

    public int getDefaultHapticFeedbackIntensity()
    {
        android.os.Vibrator r0;
        int $i0;

        r0 := @this: android.os.Vibrator;

        $i0 = r0.<android.os.Vibrator: int mDefaultHapticFeedbackIntensity>;

        return $i0;
    }

    public int getDefaultNotificationVibrationIntensity()
    {
        android.os.Vibrator r0;
        int $i0;

        r0 := @this: android.os.Vibrator;

        $i0 = r0.<android.os.Vibrator: int mDefaultNotificationVibrationIntensity>;

        return $i0;
    }

    public int getDefaultRingVibrationIntensity()
    {
        android.os.Vibrator r0;
        int $i0;

        r0 := @this: android.os.Vibrator;

        $i0 = r0.<android.os.Vibrator: int mDefaultRingVibrationIntensity>;

        return $i0;
    }

    public abstract boolean hasAmplitudeControl();

    public abstract boolean hasVibrator();

    public boolean isVibrating()
    {
        android.os.Vibrator r0;

        r0 := @this: android.os.Vibrator;

        return 0;
    }

    public void removeVibratorStateListener(android.os.Vibrator$OnVibratorStateChangedListener)
    {
        android.os.Vibrator r0;
        android.os.Vibrator$OnVibratorStateChangedListener r1;

        r0 := @this: android.os.Vibrator;

        r1 := @parameter0: android.os.Vibrator$OnVibratorStateChangedListener;

        return;
    }

    public boolean setAlwaysOnEffect(int, android.os.VibrationEffect, android.media.AudioAttributes)
    {
        android.os.Vibrator r0;
        int i0, $i1;
        android.os.VibrationEffect r1;
        android.media.AudioAttributes r2;
        java.lang.String $r3;
        boolean $z0;

        r0 := @this: android.os.Vibrator;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.VibrationEffect;

        r2 := @parameter2: android.media.AudioAttributes;

        $i1 = staticinvoke <android.os.Process: int myUid()>();

        $r3 = r0.<android.os.Vibrator: java.lang.String mPackageName>;

        $z0 = virtualinvoke r0.<android.os.Vibrator: boolean setAlwaysOnEffect(int,java.lang.String,int,android.os.VibrationEffect,android.media.AudioAttributes)>($i1, $r3, i0, r1, r2);

        return $z0;
    }

    public boolean setAlwaysOnEffect(int, java.lang.String, int, android.os.VibrationEffect, android.media.AudioAttributes)
    {
        android.os.Vibrator r0;
        int i0, i1;
        java.lang.String r1;
        android.os.VibrationEffect r2;
        android.media.AudioAttributes r3;

        r0 := @this: android.os.Vibrator;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        i1 := @parameter2: int;

        r2 := @parameter3: android.os.VibrationEffect;

        r3 := @parameter4: android.media.AudioAttributes;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("Vibrator", "Always-on effects aren\'t supported");

        return 0;
    }

    public abstract void vibrate(int, java.lang.String, android.os.VibrationEffect, java.lang.String, android.media.AudioAttributes);

    public void vibrate(long)
    {
        android.os.Vibrator r0;
        long l0;

        r0 := @this: android.os.Vibrator;

        l0 := @parameter0: long;

        virtualinvoke r0.<android.os.Vibrator: void vibrate(long,android.media.AudioAttributes)>(l0, null);

        return;
    }

    public void vibrate(long, android.media.AudioAttributes)
    {
        android.os.Vibrator r0;
        long l0;
        android.os.VibrationEffect $r1;
        java.lang.Throwable $r2;
        android.media.AudioAttributes r3;

        r0 := @this: android.os.Vibrator;

        l0 := @parameter0: long;

        r3 := @parameter1: android.media.AudioAttributes;

     label1:
        $r1 = staticinvoke <android.os.VibrationEffect: android.os.VibrationEffect createOneShot(long,int)>(l0, -1);

        virtualinvoke r0.<android.os.Vibrator: void vibrate(android.os.VibrationEffect,android.media.AudioAttributes)>($r1, r3);

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("Vibrator", "Failed to create VibrationEffect", $r2);

     label4:
        return;

        catch java.lang.IllegalArgumentException from label1 to label2 with label3;
    }

    public void vibrate(android.os.VibrationEffect)
    {
        android.os.Vibrator r0;
        android.os.VibrationEffect r1;

        r0 := @this: android.os.Vibrator;

        r1 := @parameter0: android.os.VibrationEffect;

        virtualinvoke r0.<android.os.Vibrator: void vibrate(android.os.VibrationEffect,android.media.AudioAttributes)>(r1, null);

        return;
    }

    public void vibrate(android.os.VibrationEffect, android.media.AudioAttributes)
    {
        android.os.Vibrator r0;
        android.os.VibrationEffect r1;
        android.media.AudioAttributes r2;
        int $i0;
        java.lang.String $r3;

        r0 := @this: android.os.Vibrator;

        r1 := @parameter0: android.os.VibrationEffect;

        r2 := @parameter1: android.media.AudioAttributes;

        $i0 = staticinvoke <android.os.Process: int myUid()>();

        $r3 = r0.<android.os.Vibrator: java.lang.String mPackageName>;

        virtualinvoke r0.<android.os.Vibrator: void vibrate(int,java.lang.String,android.os.VibrationEffect,java.lang.String,android.media.AudioAttributes)>($i0, $r3, r1, null, r2);

        return;
    }

    public void vibrate(long[], int)
    {
        android.os.Vibrator r0;
        long[] r1;
        int i0;

        r0 := @this: android.os.Vibrator;

        r1 := @parameter0: long[];

        i0 := @parameter1: int;

        virtualinvoke r0.<android.os.Vibrator: void vibrate(long[],int,android.media.AudioAttributes)>(r1, i0, null);

        return;
    }

    public void vibrate(long[], int, android.media.AudioAttributes)
    {
        android.os.Vibrator r0;
        int i0, $i1, $i3;
        java.lang.StringBuilder $r1;
        java.lang.String $r7;
        java.lang.ArrayIndexOutOfBoundsException $r8;
        android.os.VibrationEffect $r9;
        java.lang.Throwable $r10;
        long[] r11;
        android.media.AudioAttributes r12;

        r0 := @this: android.os.Vibrator;

        r11 := @parameter0: long[];

        i0 := @parameter1: int;

        r12 := @parameter2: android.media.AudioAttributes;

        if i0 < -1 goto label5;

        $i3 = lengthof r11;

        if i0 >= $i3 goto label5;

     label1:
        $r9 = staticinvoke <android.os.VibrationEffect: android.os.VibrationEffect createWaveform(long[],int)>(r11, i0);

        virtualinvoke r0.<android.os.Vibrator: void vibrate(android.os.VibrationEffect,android.media.AudioAttributes)>($r9, r12);

     label2:
        goto label4;

     label3:
        $r10 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("Vibrator", "Failed to create VibrationEffect", $r10);

     label4:
        return;

     label5:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("vibrate called with repeat index out of bounds (pattern.length=");

        $i1 = lengthof r11;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", index=");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r7 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("Vibrator", $r7);

        $r8 = new java.lang.ArrayIndexOutOfBoundsException;

        specialinvoke $r8.<java.lang.ArrayIndexOutOfBoundsException: void <init>()>();

        throw $r8;

        catch java.lang.IllegalArgumentException from label1 to label2 with label3;
    }

    public static void <clinit>()
    {
        <android.os.Vibrator: int VIBRATION_INTENSITY_OFF> = 0;

        <android.os.Vibrator: int VIBRATION_INTENSITY_MEDIUM> = 2;

        <android.os.Vibrator: int VIBRATION_INTENSITY_LOW> = 1;

        <android.os.Vibrator: int VIBRATION_INTENSITY_HIGH> = 3;

        <android.os.Vibrator: int VIBRATION_EFFECT_SUPPORT_YES> = 1;

        <android.os.Vibrator: int VIBRATION_EFFECT_SUPPORT_UNKNOWN> = 0;

        <android.os.Vibrator: int VIBRATION_EFFECT_SUPPORT_NO> = 2;

        <android.os.Vibrator: java.lang.String TAG> = "Vibrator";

        return;
    }
}
