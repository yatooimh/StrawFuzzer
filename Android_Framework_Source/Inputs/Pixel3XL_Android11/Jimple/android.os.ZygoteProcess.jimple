public class android.os.ZygoteProcess extends java.lang.Object
{
    private static final java.lang.String[] INVALID_USAP_FLAGS;
    private static final java.lang.String LOG_TAG;
    private static final java.lang.String USAP_POOL_ENABLED_DEFAULT;
    private static final int ZYGOTE_CONNECT_RETRY_DELAY_MS;
    private static final int ZYGOTE_CONNECT_TIMEOUT_MS;
    static final int ZYGOTE_RETRY_MILLIS;
    private java.util.List mApiBlacklistExemptions;
    private int mHiddenApiAccessLogSampleRate;
    private int mHiddenApiAccessStatslogSampleRate;
    private boolean mIsFirstPropCheck;
    private long mLastPropCheckTimestamp;
    private final java.lang.Object mLock;
    private boolean mUsapPoolEnabled;
    private final android.net.LocalSocketAddress mUsapPoolSecondarySocketAddress;
    private final android.net.LocalSocketAddress mUsapPoolSocketAddress;
    private final boolean mUsapPoolSupported;
    private final android.net.LocalSocketAddress mZygoteSecondarySocketAddress;
    private final android.net.LocalSocketAddress mZygoteSocketAddress;
    private android.os.ZygoteProcess$ZygoteState primaryZygoteState;
    private android.os.ZygoteProcess$ZygoteState secondaryZygoteState;

    static void <clinit>()
    {
        java.lang.String[] $r0;

        <android.os.ZygoteProcess: int ZYGOTE_RETRY_MILLIS> = 500;

        <android.os.ZygoteProcess: int ZYGOTE_CONNECT_TIMEOUT_MS> = 20000;

        <android.os.ZygoteProcess: int ZYGOTE_CONNECT_RETRY_DELAY_MS> = 50;

        <android.os.ZygoteProcess: java.lang.String USAP_POOL_ENABLED_DEFAULT> = "false";

        <android.os.ZygoteProcess: java.lang.String LOG_TAG> = "ZygoteProcess";

        $r0 = newarray (java.lang.String)[10];

        $r0[0] = "--query-abi-list";

        $r0[1] = "--get-pid";

        $r0[2] = "--preload-default";

        $r0[3] = "--preload-package";

        $r0[4] = "--preload-app";

        $r0[5] = "--start-child-zygote";

        $r0[6] = "--set-api-blacklist-exemptions";

        $r0[7] = "--hidden-api-log-sampling-rate";

        $r0[8] = "--hidden-api-statslog-sampling-rate";

        $r0[9] = "--invoke-with";

        <android.os.ZygoteProcess: java.lang.String[] INVALID_USAP_FLAGS> = $r0;

        return;
    }

    public void <init>()
    {
        android.os.ZygoteProcess r0;
        java.lang.Object $r1;
        java.util.List $r2;
        android.net.LocalSocketAddress $r3, $r5, $r7, $r9;
        android.net.LocalSocketAddress$Namespace $r4, $r6, $r8, $r10;

        r0 := @this: android.os.ZygoteProcess;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.lang.Object;

        specialinvoke $r1.<java.lang.Object: void <init>()>();

        r0.<android.os.ZygoteProcess: java.lang.Object mLock> = $r1;

        $r2 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        r0.<android.os.ZygoteProcess: java.util.List mApiBlacklistExemptions> = $r2;

        r0.<android.os.ZygoteProcess: boolean mUsapPoolEnabled> = 0;

        r0.<android.os.ZygoteProcess: boolean mIsFirstPropCheck> = 1;

        r0.<android.os.ZygoteProcess: long mLastPropCheckTimestamp> = 0L;

        $r3 = new android.net.LocalSocketAddress;

        $r4 = <android.net.LocalSocketAddress$Namespace: android.net.LocalSocketAddress$Namespace RESERVED>;

        specialinvoke $r3.<android.net.LocalSocketAddress: void <init>(java.lang.String,android.net.LocalSocketAddress$Namespace)>("zygote", $r4);

        r0.<android.os.ZygoteProcess: android.net.LocalSocketAddress mZygoteSocketAddress> = $r3;

        $r5 = new android.net.LocalSocketAddress;

        $r6 = <android.net.LocalSocketAddress$Namespace: android.net.LocalSocketAddress$Namespace RESERVED>;

        specialinvoke $r5.<android.net.LocalSocketAddress: void <init>(java.lang.String,android.net.LocalSocketAddress$Namespace)>("zygote_secondary", $r6);

        r0.<android.os.ZygoteProcess: android.net.LocalSocketAddress mZygoteSecondarySocketAddress> = $r5;

        $r7 = new android.net.LocalSocketAddress;

        $r8 = <android.net.LocalSocketAddress$Namespace: android.net.LocalSocketAddress$Namespace RESERVED>;

        specialinvoke $r7.<android.net.LocalSocketAddress: void <init>(java.lang.String,android.net.LocalSocketAddress$Namespace)>("usap_pool_primary", $r8);

        r0.<android.os.ZygoteProcess: android.net.LocalSocketAddress mUsapPoolSocketAddress> = $r7;

        $r9 = new android.net.LocalSocketAddress;

        $r10 = <android.net.LocalSocketAddress$Namespace: android.net.LocalSocketAddress$Namespace RESERVED>;

        specialinvoke $r9.<android.net.LocalSocketAddress: void <init>(java.lang.String,android.net.LocalSocketAddress$Namespace)>("usap_pool_secondary", $r10);

        r0.<android.os.ZygoteProcess: android.net.LocalSocketAddress mUsapPoolSecondarySocketAddress> = $r9;

        r0.<android.os.ZygoteProcess: boolean mUsapPoolSupported> = 1;

        return;
    }

    public void <init>(android.net.LocalSocketAddress, android.net.LocalSocketAddress)
    {
        android.os.ZygoteProcess r0;
        android.net.LocalSocketAddress r1, r2;
        java.lang.Object $r3;
        java.util.List $r4;

        r0 := @this: android.os.ZygoteProcess;

        r1 := @parameter0: android.net.LocalSocketAddress;

        r2 := @parameter1: android.net.LocalSocketAddress;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new java.lang.Object;

        specialinvoke $r3.<java.lang.Object: void <init>()>();

        r0.<android.os.ZygoteProcess: java.lang.Object mLock> = $r3;

        $r4 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        r0.<android.os.ZygoteProcess: java.util.List mApiBlacklistExemptions> = $r4;

        r0.<android.os.ZygoteProcess: boolean mUsapPoolEnabled> = 0;

        r0.<android.os.ZygoteProcess: boolean mIsFirstPropCheck> = 1;

        r0.<android.os.ZygoteProcess: long mLastPropCheckTimestamp> = 0L;

        r0.<android.os.ZygoteProcess: android.net.LocalSocketAddress mZygoteSocketAddress> = r1;

        r0.<android.os.ZygoteProcess: android.net.LocalSocketAddress mZygoteSecondarySocketAddress> = r2;

        r0.<android.os.ZygoteProcess: android.net.LocalSocketAddress mUsapPoolSocketAddress> = null;

        r0.<android.os.ZygoteProcess: android.net.LocalSocketAddress mUsapPoolSecondarySocketAddress> = null;

        r0.<android.os.ZygoteProcess: boolean mUsapPoolSupported> = 0;

        return;
    }

    static java.util.List access$000(java.io.BufferedWriter, java.io.DataInputStream) throws java.io.IOException
    {
        java.io.BufferedWriter r0;
        java.io.DataInputStream r1;
        java.util.List $r2;

        r0 := @parameter0: java.io.BufferedWriter;

        r1 := @parameter1: java.io.DataInputStream;

        $r2 = staticinvoke <android.os.ZygoteProcess: java.util.List getAbiList(java.io.BufferedWriter,java.io.DataInputStream)>(r0, r1);

        return $r2;
    }

    private void attemptConnectionToPrimaryZygote() throws java.io.IOException
    {
        android.os.ZygoteProcess r0;
        android.net.LocalSocketAddress $r1, $r2;
        android.os.ZygoteProcess$ZygoteState $r3, r4, r5;
        boolean $z1;

        r0 := @this: android.os.ZygoteProcess;

        r4 = r0.<android.os.ZygoteProcess: android.os.ZygoteProcess$ZygoteState primaryZygoteState>;

        if r4 == null goto label1;

        $z1 = virtualinvoke r4.<android.os.ZygoteProcess$ZygoteState: boolean isClosed()>();

        if $z1 == 0 goto label2;

     label1:
        $r2 = r0.<android.os.ZygoteProcess: android.net.LocalSocketAddress mZygoteSocketAddress>;

        $r1 = r0.<android.os.ZygoteProcess: android.net.LocalSocketAddress mUsapPoolSocketAddress>;

        r5 = staticinvoke <android.os.ZygoteProcess$ZygoteState: android.os.ZygoteProcess$ZygoteState connect(android.net.LocalSocketAddress,android.net.LocalSocketAddress)>($r2, $r1);

        r0.<android.os.ZygoteProcess: android.os.ZygoteProcess$ZygoteState primaryZygoteState> = r5;

        specialinvoke r0.<android.os.ZygoteProcess: boolean maybeSetApiBlacklistExemptions(android.os.ZygoteProcess$ZygoteState,boolean)>(r5, 0);

        $r3 = r0.<android.os.ZygoteProcess: android.os.ZygoteProcess$ZygoteState primaryZygoteState>;

        specialinvoke r0.<android.os.ZygoteProcess: void maybeSetHiddenApiAccessLogSampleRate(android.os.ZygoteProcess$ZygoteState)>($r3);

     label2:
        return;
    }

    private void attemptConnectionToSecondaryZygote() throws java.io.IOException
    {
        android.os.ZygoteProcess r0;
        android.net.LocalSocketAddress $r1, $r2;
        android.os.ZygoteProcess$ZygoteState $r3, r4, r5;
        boolean $z1;

        r0 := @this: android.os.ZygoteProcess;

        r4 = r0.<android.os.ZygoteProcess: android.os.ZygoteProcess$ZygoteState secondaryZygoteState>;

        if r4 == null goto label1;

        $z1 = virtualinvoke r4.<android.os.ZygoteProcess$ZygoteState: boolean isClosed()>();

        if $z1 == 0 goto label2;

     label1:
        $r2 = r0.<android.os.ZygoteProcess: android.net.LocalSocketAddress mZygoteSecondarySocketAddress>;

        $r1 = r0.<android.os.ZygoteProcess: android.net.LocalSocketAddress mUsapPoolSecondarySocketAddress>;

        r5 = staticinvoke <android.os.ZygoteProcess$ZygoteState: android.os.ZygoteProcess$ZygoteState connect(android.net.LocalSocketAddress,android.net.LocalSocketAddress)>($r2, $r1);

        r0.<android.os.ZygoteProcess: android.os.ZygoteProcess$ZygoteState secondaryZygoteState> = r5;

        specialinvoke r0.<android.os.ZygoteProcess: boolean maybeSetApiBlacklistExemptions(android.os.ZygoteProcess$ZygoteState,boolean)>(r5, 0);

        $r3 = r0.<android.os.ZygoteProcess: android.os.ZygoteProcess$ZygoteState secondaryZygoteState>;

        specialinvoke r0.<android.os.ZygoteProcess: void maybeSetHiddenApiAccessLogSampleRate(android.os.ZygoteProcess$ZygoteState)>($r3);

     label2:
        return;
    }

    private android.os.Process$ProcessStartResult attemptUsapSendArgsAndGetResult(android.os.ZygoteProcess$ZygoteState, java.lang.String) throws android.os.ZygoteStartFailedEx, java.io.IOException
    {
        android.os.ZygoteProcess r0;
        java.io.BufferedWriter r1;
        int i0, $i1;
        java.io.OutputStream $r2;
        java.io.InputStream $r3;
        java.lang.Throwable $r4, $r5;
        android.os.ZygoteProcess$ZygoteState r6;
        java.lang.String r7;
        android.net.LocalSocket r8;
        java.io.OutputStreamWriter r9;
        java.io.DataInputStream r10;
        android.os.Process$ProcessStartResult r11;
        android.os.ZygoteStartFailedEx r12;

        r0 := @this: android.os.ZygoteProcess;

        r6 := @parameter0: android.os.ZygoteProcess$ZygoteState;

        r7 := @parameter1: java.lang.String;

        r8 = virtualinvoke r6.<android.os.ZygoteProcess$ZygoteState: android.net.LocalSocket getUsapSessionSocket()>();

     label1:
        r1 = new java.io.BufferedWriter;

        r9 = new java.io.OutputStreamWriter;

        $r2 = virtualinvoke r8.<android.net.LocalSocket: java.io.OutputStream getOutputStream()>();

        specialinvoke r9.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream)>($r2);

        specialinvoke r1.<java.io.BufferedWriter: void <init>(java.io.Writer,int)>(r9, 256);

        r10 = new java.io.DataInputStream;

        $r3 = virtualinvoke r8.<android.net.LocalSocket: java.io.InputStream getInputStream()>();

        specialinvoke r10.<java.io.DataInputStream: void <init>(java.io.InputStream)>($r3);

        virtualinvoke r1.<java.io.BufferedWriter: void write(java.lang.String)>(r7);

        virtualinvoke r1.<java.io.BufferedWriter: void flush()>();

        r11 = new android.os.Process$ProcessStartResult;

        specialinvoke r11.<android.os.Process$ProcessStartResult: void <init>()>();

        $i1 = virtualinvoke r10.<java.io.DataInputStream: int readInt()>();

        r11.<android.os.Process$ProcessStartResult: int pid> = $i1;

        r11.<android.os.Process$ProcessStartResult: boolean usingWrapper> = 0;

        i0 = r11.<android.os.Process$ProcessStartResult: int pid>;

     label2:
        if i0 < 0 goto label4;

        if r8 == null goto label3;

        virtualinvoke r8.<android.net.LocalSocket: void close()>();

     label3:
        return r11;

     label4:
        r12 = new android.os.ZygoteStartFailedEx;

        specialinvoke r12.<android.os.ZygoteStartFailedEx: void <init>(java.lang.String)>("USAP specialization failed");

        throw r12;

     label5:
        $r5 := @caughtexception;

        if r8 == null goto label9;

     label6:
        virtualinvoke r8.<android.net.LocalSocket: void close()>();

     label7:
        goto label9;

     label8:
        $r4 := @caughtexception;

        virtualinvoke $r5.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r4);

     label9:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label4 to label5 with label5;
        catch java.lang.Throwable from label6 to label7 with label8;
    }

    private android.os.Process$ProcessStartResult attemptZygoteSendArgsAndGetResult(android.os.ZygoteProcess$ZygoteState, java.lang.String) throws android.os.ZygoteStartFailedEx
    {
        android.os.ZygoteProcess r0;
        java.io.BufferedWriter r1;
        java.io.DataInputStream r2;
        int $i0, $i1;
        boolean $z0;
        java.lang.Throwable $r3;
        java.lang.String $r6, $r8, r11;
        android.os.ZygoteProcess$ZygoteState r10;
        android.os.Process$ProcessStartResult r16;
        android.os.ZygoteStartFailedEx r17, r19;
        java.lang.StringBuilder r18;
        java.io.IOException r20;

        r0 := @this: android.os.ZygoteProcess;

        r10 := @parameter0: android.os.ZygoteProcess$ZygoteState;

        r11 := @parameter1: java.lang.String;

     label1:
        r1 = r10.<android.os.ZygoteProcess$ZygoteState: java.io.BufferedWriter mZygoteOutputWriter>;

        r2 = r10.<android.os.ZygoteProcess$ZygoteState: java.io.DataInputStream mZygoteInputStream>;

        virtualinvoke r1.<java.io.BufferedWriter: void write(java.lang.String)>(r11);

        virtualinvoke r1.<java.io.BufferedWriter: void flush()>();

        r16 = new android.os.Process$ProcessStartResult;

        specialinvoke r16.<android.os.Process$ProcessStartResult: void <init>()>();

        $i0 = virtualinvoke r2.<java.io.DataInputStream: int readInt()>();

        r16.<android.os.Process$ProcessStartResult: int pid> = $i0;

        $z0 = virtualinvoke r2.<java.io.DataInputStream: boolean readBoolean()>();

        r16.<android.os.Process$ProcessStartResult: boolean usingWrapper> = $z0;

        $i1 = r16.<android.os.Process$ProcessStartResult: int pid>;

        if $i1 < 0 goto label3;

     label2:
        return r16;

     label3:
        r17 = new android.os.ZygoteStartFailedEx;

        specialinvoke r17.<android.os.ZygoteStartFailedEx: void <init>(java.lang.String)>("fork() failed");

        throw r17;

     label4:
        $r3 := @caughtexception;

        virtualinvoke r10.<android.os.ZygoteProcess$ZygoteState: void close()>();

        r18 = new java.lang.StringBuilder;

        specialinvoke r18.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("IO Exception while communicating with Zygote - ");

        r20 = (java.io.IOException) $r3;

        $r6 = virtualinvoke r20.<java.io.IOException: java.lang.String toString()>();

        virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke r18.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("ZygoteProcess", $r8);

        r19 = new android.os.ZygoteStartFailedEx;

        specialinvoke r19.<android.os.ZygoteStartFailedEx: void <init>(java.lang.Throwable)>($r3);

        throw r19;

        catch java.io.IOException from label1 to label2 with label4;
        catch java.io.IOException from label3 to label4 with label4;
    }

    private void bootCompleted(java.lang.String)
    {
        android.os.ZygoteProcess r0;
        java.lang.Object r1;
        java.io.BufferedWriter $r2, $r3;
        java.io.DataInputStream $r4;
        java.lang.Exception $r5;
        java.lang.RuntimeException $r6;
        java.lang.Throwable $r7;
        java.lang.String r8;
        android.os.ZygoteProcess$ZygoteState r9;

        r0 := @this: android.os.ZygoteProcess;

        r8 := @parameter0: java.lang.String;

     label1:
        r1 = r0.<android.os.ZygoteProcess: java.lang.Object mLock>;

        entermonitor r1;

     label2:
        r9 = specialinvoke r0.<android.os.ZygoteProcess: android.os.ZygoteProcess$ZygoteState openZygoteSocketIfNeeded(java.lang.String)>(r8);

        $r2 = r9.<android.os.ZygoteProcess$ZygoteState: java.io.BufferedWriter mZygoteOutputWriter>;

        virtualinvoke $r2.<java.io.BufferedWriter: void write(java.lang.String)>("1\n--boot-completed\n");

        $r3 = r9.<android.os.ZygoteProcess$ZygoteState: java.io.BufferedWriter mZygoteOutputWriter>;

        virtualinvoke $r3.<java.io.BufferedWriter: void flush()>();

        $r4 = r9.<android.os.ZygoteProcess$ZygoteState: java.io.DataInputStream mZygoteInputStream>;

        virtualinvoke $r4.<java.io.DataInputStream: int readInt()>();

     label3:
        exitmonitor r1;

     label4:
        return;

     label5:
        $r7 := @caughtexception;

     label6:
        exitmonitor r1;

     label7:
        throw $r7;

     label8:
        $r5 := @caughtexception;

        $r6 = new java.lang.RuntimeException;

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Failed to inform zygote of boot_completed", $r5);

        throw $r6;

        catch java.lang.Exception from label1 to label2 with label8;
        catch java.lang.Throwable from label2 to label3 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
        catch java.lang.Exception from label7 to label8 with label8;
    }

    private static boolean commandSupportedByUsap(java.util.ArrayList)
    {
        java.lang.String r0, $r3, $r4, $r5;
        java.lang.String[] r1;
        int i0, i1;
        boolean $z0, $z1, $z2;
        java.lang.Object $r2;
        java.util.ArrayList r6;
        java.util.Iterator r7;

        r6 := @parameter0: java.util.ArrayList;

        r7 = virtualinvoke r6.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r2 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>();

        r0 = (java.lang.String) $r2;

        r1 = <android.os.ZygoteProcess: java.lang.String[] INVALID_USAP_FLAGS>;

        i0 = lengthof r1;

        i1 = 0;

     label2:
        if i1 >= i0 goto label4;

        $r5 = r1[i1];

        $z2 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>($r5);

        if $z2 == 0 goto label3;

        return 0;

     label3:
        i1 = i1 + 1;

        goto label2;

     label4:
        $z1 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>("--nice-name=");

        if $z1 == 0 goto label5;

        $r3 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>(12);

        $r4 = staticinvoke <com.android.internal.os.Zygote: java.lang.String getWrapProperty(java.lang.String)>($r3);

        if $r4 == null goto label5;

        return 0;

     label5:
        goto label1;

     label6:
        return 1;
    }

    private boolean fetchUsapPoolEnabledProp()
    {
        android.os.ZygoteProcess r0;
        java.lang.String $r2, $r6;
        boolean $z0, $z1, $z2, $z3, $z4, z5, z6;
        java.lang.StringBuilder $r3;
        java.lang.Boolean $r7;

        r0 := @this: android.os.ZygoteProcess;

        z5 = r0.<android.os.ZygoteProcess: boolean mUsapPoolEnabled>;

        $r2 = staticinvoke <com.android.internal.os.Zygote: java.lang.String getConfigurationProperty(java.lang.String,java.lang.String)>("usap_pool_enabled", "false");

        $z0 = virtualinvoke $r2.<java.lang.String: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $z3 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>("false");

        $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z3);

        $z4 = staticinvoke <com.android.internal.os.Zygote: boolean getConfigurationPropertyBoolean(java.lang.String,java.lang.Boolean)>("usap_pool_enabled", $r7);

        r0.<android.os.ZygoteProcess: boolean mUsapPoolEnabled> = $z4;

     label1:
        $z1 = r0.<android.os.ZygoteProcess: boolean mUsapPoolEnabled>;

        if z5 == $z1 goto label2;

        z6 = 1;

        goto label3;

     label2:
        z6 = 0;

     label3:
        if z6 == 0 goto label4;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("usapPoolEnabled = ");

        $z2 = r0.<android.os.ZygoteProcess: boolean mUsapPoolEnabled>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z2);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("ZygoteProcess", $r6);

     label4:
        return z6;
    }

    private boolean fetchUsapPoolEnabledPropWithMinInterval()
    {
        android.os.ZygoteProcess r0;
        long l0, $l1, $l2;
        boolean $z0, $z1, $z2;
        byte $b3;

        r0 := @this: android.os.ZygoteProcess;

        $z0 = r0.<android.os.ZygoteProcess: boolean mUsapPoolSupported>;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $z1 = r0.<android.os.ZygoteProcess: boolean mIsFirstPropCheck>;

        if $z1 != 0 goto label3;

        $l1 = r0.<android.os.ZygoteProcess: long mLastPropCheckTimestamp>;

        $l2 = l0 - $l1;

        $b3 = $l2 cmp 60000L;

        if $b3 < 0 goto label2;

        goto label3;

     label2:
        return 0;

     label3:
        r0.<android.os.ZygoteProcess: boolean mIsFirstPropCheck> = 0;

        r0.<android.os.ZygoteProcess: long mLastPropCheckTimestamp> = l0;

        $z2 = specialinvoke r0.<android.os.ZygoteProcess: boolean fetchUsapPoolEnabledProp()>();

        return $z2;
    }

    private static java.util.List getAbiList(java.io.BufferedWriter, java.io.DataInputStream) throws java.io.IOException
    {
        java.io.DataInputStream r0;
        int $i0;
        java.lang.String $r1;
        java.nio.charset.Charset $r2;
        java.lang.String[] $r3;
        java.util.List $r4;
        java.io.BufferedWriter r5;
        byte[] r6;

        r5 := @parameter0: java.io.BufferedWriter;

        r0 := @parameter1: java.io.DataInputStream;

        virtualinvoke r5.<java.io.BufferedWriter: void write(java.lang.String)>("1");

        virtualinvoke r5.<java.io.BufferedWriter: void newLine()>();

        virtualinvoke r5.<java.io.BufferedWriter: void write(java.lang.String)>("--query-abi-list");

        virtualinvoke r5.<java.io.BufferedWriter: void newLine()>();

        virtualinvoke r5.<java.io.BufferedWriter: void flush()>();

        $i0 = virtualinvoke r0.<java.io.DataInputStream: int readInt()>();

        r6 = newarray (byte)[$i0];

        virtualinvoke r0.<java.io.DataInputStream: void readFully(byte[])>(r6);

        $r1 = new java.lang.String;

        $r2 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset US_ASCII>;

        specialinvoke $r1.<java.lang.String: void <init>(byte[],java.nio.charset.Charset)>(r6, $r2);

        $r3 = virtualinvoke $r1.<java.lang.String: java.lang.String[] split(java.lang.String)>(",");

        $r4 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r3);

        return $r4;
    }

    private void informZygotesOfUsapPoolStatus()
    {
        android.os.ZygoteProcess r0;
        boolean $z0, $z1, z2;
        android.os.ZygoteProcess$ZygoteState $r5, $r7, $r9, $r11, $r13, $r31;
        java.io.BufferedWriter $r6, $r8, $r10, $r12;
        java.io.DataInputStream $r14, $r32;
        java.lang.Throwable $r15, $r20, $r21, $r22, $r23;
        java.lang.String $r17, $r19, r25;
        java.lang.Object r26;
        android.net.LocalSocketAddress r27;
        java.lang.StringBuilder r38, r41;
        java.lang.IllegalStateException r39, r40;
        java.io.IOException r42;

        r0 := @this: android.os.ZygoteProcess;

        r38 = new java.lang.StringBuilder;

        specialinvoke r38.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("1\n--usap-pool-enabled=");

        $z0 = r0.<android.os.ZygoteProcess: boolean mUsapPoolEnabled>;

        virtualinvoke r38.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        virtualinvoke r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        r25 = virtualinvoke r38.<java.lang.StringBuilder: java.lang.String toString()>();

        r26 = r0.<android.os.ZygoteProcess: java.lang.Object mLock>;

        entermonitor r26;

     label01:
        specialinvoke r0.<android.os.ZygoteProcess: void attemptConnectionToPrimaryZygote()>();

        $r5 = r0.<android.os.ZygoteProcess: android.os.ZygoteProcess$ZygoteState primaryZygoteState>;

        $r6 = $r5.<android.os.ZygoteProcess$ZygoteState: java.io.BufferedWriter mZygoteOutputWriter>;

        virtualinvoke $r6.<java.io.BufferedWriter: void write(java.lang.String)>(r25);

        $r7 = r0.<android.os.ZygoteProcess: android.os.ZygoteProcess$ZygoteState primaryZygoteState>;

        $r8 = $r7.<android.os.ZygoteProcess$ZygoteState: java.io.BufferedWriter mZygoteOutputWriter>;

        virtualinvoke $r8.<java.io.BufferedWriter: void flush()>();

     label02:
        r27 = r0.<android.os.ZygoteProcess: android.net.LocalSocketAddress mZygoteSecondarySocketAddress>;

     label03:
        if r27 == null goto label10;

     label04:
        specialinvoke r0.<android.os.ZygoteProcess: void attemptConnectionToSecondaryZygote()>();

     label05:
        $r9 = r0.<android.os.ZygoteProcess: android.os.ZygoteProcess$ZygoteState secondaryZygoteState>;

        $r10 = $r9.<android.os.ZygoteProcess$ZygoteState: java.io.BufferedWriter mZygoteOutputWriter>;

        virtualinvoke $r10.<java.io.BufferedWriter: void write(java.lang.String)>(r25);

        $r11 = r0.<android.os.ZygoteProcess: android.os.ZygoteProcess$ZygoteState secondaryZygoteState>;

        $r12 = $r11.<android.os.ZygoteProcess$ZygoteState: java.io.BufferedWriter mZygoteOutputWriter>;

        virtualinvoke $r12.<java.io.BufferedWriter: void flush()>();

        $r13 = r0.<android.os.ZygoteProcess: android.os.ZygoteProcess$ZygoteState secondaryZygoteState>;

        $r14 = $r13.<android.os.ZygoteProcess$ZygoteState: java.io.DataInputStream mZygoteInputStream>;

        virtualinvoke $r14.<java.io.DataInputStream: int readInt()>();

     label06:
        goto label10;

     label07:
        $r22 := @caughtexception;

     label08:
        r39 = new java.lang.IllegalStateException;

        specialinvoke r39.<java.lang.IllegalStateException: void <init>(java.lang.String,java.lang.Throwable)>("USAP pool state change cause an irrecoverable error", $r22);

        throw r39;

     label09:
        $r20 := @caughtexception;

     label10:
        $r31 = r0.<android.os.ZygoteProcess: android.os.ZygoteProcess$ZygoteState primaryZygoteState>;

        $r32 = $r31.<android.os.ZygoteProcess$ZygoteState: java.io.DataInputStream mZygoteInputStream>;

        virtualinvoke $r32.<java.io.DataInputStream: int readInt()>();

     label11:
        exitmonitor r26;

     label12:
        return;

     label13:
        $r21 := @caughtexception;

     label14:
        r40 = new java.lang.IllegalStateException;

        specialinvoke r40.<java.lang.IllegalStateException: void <init>(java.lang.String,java.lang.Throwable)>("USAP pool state change cause an irrecoverable error", $r21);

        throw r40;

     label15:
        $r23 := @caughtexception;

        goto label22;

     label16:
        $r15 := @caughtexception;

     label17:
        $z1 = r0.<android.os.ZygoteProcess: boolean mUsapPoolEnabled>;

        if $z1 != 0 goto label19;

     label18:
        z2 = 1;

        goto label20;

     label19:
        z2 = 0;

     label20:
        r0.<android.os.ZygoteProcess: boolean mUsapPoolEnabled> = z2;

        r41 = new java.lang.StringBuilder;

        specialinvoke r41.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to inform zygotes of USAP pool status: ");

        r42 = (java.io.IOException) $r15;

        $r17 = virtualinvoke r42.<java.io.IOException: java.lang.String getMessage()>();

        virtualinvoke r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r19 = virtualinvoke r41.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ZygoteProcess", $r19);

        exitmonitor r26;

     label21:
        return;

     label22:
        exitmonitor r26;

     label23:
        throw $r23;

        catch java.io.IOException from label01 to label02 with label16;
        catch java.lang.Throwable from label01 to label02 with label15;
        catch java.lang.Throwable from label02 to label03 with label15;
        catch java.io.IOException from label04 to label05 with label09;
        catch java.lang.Throwable from label04 to label05 with label15;
        catch java.io.IOException from label05 to label06 with label07;
        catch java.lang.Throwable from label05 to label06 with label15;
        catch java.io.IOException from label08 to label09 with label09;
        catch java.lang.Throwable from label08 to label09 with label15;
        catch java.io.IOException from label10 to label11 with label13;
        catch java.lang.Throwable from label10 to label11 with label15;
        catch java.lang.Throwable from label11 to label12 with label15;
        catch java.lang.Throwable from label14 to label15 with label15;
        catch java.lang.Throwable from label17 to label18 with label15;
        catch java.lang.Throwable from label20 to label21 with label15;
        catch java.lang.Throwable from label22 to label23 with label15;
    }

    private boolean maybeSetApiBlacklistExemptions(android.os.ZygoteProcess$ZygoteState, boolean)
    {
        android.os.ZygoteProcess r0;
        boolean z0, $z1, $z2;
        java.util.List $r1, $r12, $r17, $r19, $r21;
        java.io.BufferedWriter $r2, $r4, $r5, $r6, $r7, $r13, $r16;
        int $i1, $i2, i5, $i6, i7;
        java.lang.String $r3, $r11, $r15;
        java.io.DataInputStream $r8;
        java.lang.Object $r14;
        java.lang.Throwable $r18;
        android.os.ZygoteProcess$ZygoteState r20;
        java.lang.StringBuilder r22;

        r0 := @this: android.os.ZygoteProcess;

        r20 := @parameter0: android.os.ZygoteProcess$ZygoteState;

        z0 := @parameter1: boolean;

        if r20 == null goto label11;

        $z1 = virtualinvoke r20.<android.os.ZygoteProcess$ZygoteState: boolean isClosed()>();

        if $z1 == 0 goto label01;

        goto label11;

     label01:
        if z0 != 0 goto label02;

        $r17 = r0.<android.os.ZygoteProcess: java.util.List mApiBlacklistExemptions>;

        $z2 = interfaceinvoke $r17.<java.util.List: boolean isEmpty()>();

        if $z2 == 0 goto label02;

        return 1;

     label02:
        $r2 = r20.<android.os.ZygoteProcess$ZygoteState: java.io.BufferedWriter mZygoteOutputWriter>;

        $r1 = r0.<android.os.ZygoteProcess: java.util.List mApiBlacklistExemptions>;

        $i1 = interfaceinvoke $r1.<java.util.List: int size()>();

        $i2 = $i1 + 1;

        $r3 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i2);

        virtualinvoke $r2.<java.io.BufferedWriter: void write(java.lang.String)>($r3);

        $r4 = r20.<android.os.ZygoteProcess$ZygoteState: java.io.BufferedWriter mZygoteOutputWriter>;

        virtualinvoke $r4.<java.io.BufferedWriter: void newLine()>();

        $r5 = r20.<android.os.ZygoteProcess$ZygoteState: java.io.BufferedWriter mZygoteOutputWriter>;

        virtualinvoke $r5.<java.io.BufferedWriter: void write(java.lang.String)>("--set-api-blacklist-exemptions");

        $r6 = r20.<android.os.ZygoteProcess$ZygoteState: java.io.BufferedWriter mZygoteOutputWriter>;

        virtualinvoke $r6.<java.io.BufferedWriter: void newLine()>();

     label03:
        i5 = 0;

     label04:
        $r21 = r0.<android.os.ZygoteProcess: java.util.List mApiBlacklistExemptions>;

        $i6 = interfaceinvoke $r21.<java.util.List: int size()>();

        if i5 >= $i6 goto label06;

        $r13 = r20.<android.os.ZygoteProcess$ZygoteState: java.io.BufferedWriter mZygoteOutputWriter>;

        $r12 = r0.<android.os.ZygoteProcess: java.util.List mApiBlacklistExemptions>;

        $r14 = interfaceinvoke $r12.<java.util.List: java.lang.Object get(int)>(i5);

        $r15 = (java.lang.String) $r14;

        virtualinvoke $r13.<java.io.BufferedWriter: void write(java.lang.String)>($r15);

        $r16 = r20.<android.os.ZygoteProcess$ZygoteState: java.io.BufferedWriter mZygoteOutputWriter>;

        virtualinvoke $r16.<java.io.BufferedWriter: void newLine()>();

     label05:
        i5 = i5 + 1;

        goto label04;

     label06:
        $r7 = r20.<android.os.ZygoteProcess$ZygoteState: java.io.BufferedWriter mZygoteOutputWriter>;

        virtualinvoke $r7.<java.io.BufferedWriter: void flush()>();

        $r8 = r20.<android.os.ZygoteProcess$ZygoteState: java.io.DataInputStream mZygoteInputStream>;

        i7 = virtualinvoke $r8.<java.io.DataInputStream: int readInt()>();

     label07:
        if i7 == 0 goto label09;

     label08:
        r22 = new java.lang.StringBuilder;

        specialinvoke r22.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to set API blacklist exemptions; status ");

        virtualinvoke r22.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i7);

        $r11 = virtualinvoke r22.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("ZygoteProcess", $r11);

     label09:
        return 1;

     label10:
        $r18 := @caughtexception;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ZygoteProcess", "Failed to set API blacklist exemptions", $r18);

        $r19 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        r0.<android.os.ZygoteProcess: java.util.List mApiBlacklistExemptions> = $r19;

        return 0;

     label11:
        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("ZygoteProcess", "Can\'t set API blacklist exemptions: no zygote connection");

        return 0;

        catch java.io.IOException from label02 to label03 with label10;
        catch java.io.IOException from label04 to label05 with label10;
        catch java.io.IOException from label06 to label07 with label10;
        catch java.io.IOException from label08 to label09 with label10;
    }

    private void maybeSetHiddenApiAccessLogSampleRate(android.os.ZygoteProcess$ZygoteState)
    {
        android.os.ZygoteProcess r0;
        java.io.BufferedWriter r1, $r3, $r5, $r9, $r10;
        java.lang.StringBuilder r2, r17;
        int i0, $i1, $i2;
        boolean $z0;
        java.lang.String $r4, $r8, $r14;
        java.io.DataInputStream $r11;
        java.lang.Throwable $r15;
        android.os.ZygoteProcess$ZygoteState r16;

        r0 := @this: android.os.ZygoteProcess;

        r16 := @parameter0: android.os.ZygoteProcess$ZygoteState;

        if r16 == null goto label7;

        $z0 = virtualinvoke r16.<android.os.ZygoteProcess$ZygoteState: boolean isClosed()>();

        if $z0 != 0 goto label7;

        $i1 = r0.<android.os.ZygoteProcess: int mHiddenApiAccessLogSampleRate>;

        if $i1 != -1 goto label1;

        goto label7;

     label1:
        $r3 = r16.<android.os.ZygoteProcess$ZygoteState: java.io.BufferedWriter mZygoteOutputWriter>;

        $r4 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(1);

        virtualinvoke $r3.<java.io.BufferedWriter: void write(java.lang.String)>($r4);

        $r5 = r16.<android.os.ZygoteProcess$ZygoteState: java.io.BufferedWriter mZygoteOutputWriter>;

        virtualinvoke $r5.<java.io.BufferedWriter: void newLine()>();

        r1 = r16.<android.os.ZygoteProcess$ZygoteState: java.io.BufferedWriter mZygoteOutputWriter>;

        r2 = new java.lang.StringBuilder;

        specialinvoke r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("--hidden-api-log-sampling-rate=");

        $i2 = r0.<android.os.ZygoteProcess: int mHiddenApiAccessLogSampleRate>;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r8 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.BufferedWriter: void write(java.lang.String)>($r8);

        $r9 = r16.<android.os.ZygoteProcess$ZygoteState: java.io.BufferedWriter mZygoteOutputWriter>;

        virtualinvoke $r9.<java.io.BufferedWriter: void newLine()>();

        $r10 = r16.<android.os.ZygoteProcess$ZygoteState: java.io.BufferedWriter mZygoteOutputWriter>;

        virtualinvoke $r10.<java.io.BufferedWriter: void flush()>();

        $r11 = r16.<android.os.ZygoteProcess$ZygoteState: java.io.DataInputStream mZygoteInputStream>;

        i0 = virtualinvoke $r11.<java.io.DataInputStream: int readInt()>();

     label2:
        if i0 == 0 goto label4;

     label3:
        r17 = new java.lang.StringBuilder;

        specialinvoke r17.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to set hidden API log sampling rate; status ");

        virtualinvoke r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r14 = virtualinvoke r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("ZygoteProcess", $r14);

     label4:
        goto label6;

     label5:
        $r15 := @caughtexception;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ZygoteProcess", "Failed to set hidden API log sampling rate", $r15);

     label6:
        return;

     label7:
        return;

        catch java.io.IOException from label1 to label2 with label5;
        catch java.io.IOException from label3 to label4 with label5;
    }

    private void maybeSetHiddenApiAccessStatslogSampleRate(android.os.ZygoteProcess$ZygoteState)
    {
        android.os.ZygoteProcess r0;
        java.io.BufferedWriter r1, $r3, $r5, $r9, $r10;
        java.lang.StringBuilder r2, r17;
        int i0, $i1, $i2;
        boolean $z0;
        java.lang.String $r4, $r8, $r14;
        java.io.DataInputStream $r11;
        java.lang.Throwable $r15;
        android.os.ZygoteProcess$ZygoteState r16;

        r0 := @this: android.os.ZygoteProcess;

        r16 := @parameter0: android.os.ZygoteProcess$ZygoteState;

        if r16 == null goto label7;

        $z0 = virtualinvoke r16.<android.os.ZygoteProcess$ZygoteState: boolean isClosed()>();

        if $z0 != 0 goto label7;

        $i1 = r0.<android.os.ZygoteProcess: int mHiddenApiAccessStatslogSampleRate>;

        if $i1 != -1 goto label1;

        goto label7;

     label1:
        $r3 = r16.<android.os.ZygoteProcess$ZygoteState: java.io.BufferedWriter mZygoteOutputWriter>;

        $r4 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(1);

        virtualinvoke $r3.<java.io.BufferedWriter: void write(java.lang.String)>($r4);

        $r5 = r16.<android.os.ZygoteProcess$ZygoteState: java.io.BufferedWriter mZygoteOutputWriter>;

        virtualinvoke $r5.<java.io.BufferedWriter: void newLine()>();

        r1 = r16.<android.os.ZygoteProcess$ZygoteState: java.io.BufferedWriter mZygoteOutputWriter>;

        r2 = new java.lang.StringBuilder;

        specialinvoke r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("--hidden-api-statslog-sampling-rate=");

        $i2 = r0.<android.os.ZygoteProcess: int mHiddenApiAccessStatslogSampleRate>;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r8 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.BufferedWriter: void write(java.lang.String)>($r8);

        $r9 = r16.<android.os.ZygoteProcess$ZygoteState: java.io.BufferedWriter mZygoteOutputWriter>;

        virtualinvoke $r9.<java.io.BufferedWriter: void newLine()>();

        $r10 = r16.<android.os.ZygoteProcess$ZygoteState: java.io.BufferedWriter mZygoteOutputWriter>;

        virtualinvoke $r10.<java.io.BufferedWriter: void flush()>();

        $r11 = r16.<android.os.ZygoteProcess$ZygoteState: java.io.DataInputStream mZygoteInputStream>;

        i0 = virtualinvoke $r11.<java.io.DataInputStream: int readInt()>();

     label2:
        if i0 == 0 goto label4;

     label3:
        r17 = new java.lang.StringBuilder;

        specialinvoke r17.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to set hidden API statslog sampling rate; status ");

        virtualinvoke r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r14 = virtualinvoke r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("ZygoteProcess", $r14);

     label4:
        goto label6;

     label5:
        $r15 := @caughtexception;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ZygoteProcess", "Failed to set hidden API statslog sampling rate", $r15);

     label6:
        return;

     label7:
        return;

        catch java.io.IOException from label1 to label2 with label5;
        catch java.io.IOException from label3 to label4 with label5;
    }

    private android.os.ZygoteProcess$ZygoteState openZygoteSocketIfNeeded(java.lang.String) throws android.os.ZygoteStartFailedEx
    {
        android.os.ZygoteProcess r0;
        android.os.ZygoteProcess$ZygoteState $r2, $r9, $r10, r14;
        boolean $z0, $z1;
        android.net.LocalSocketAddress $r3;
        java.lang.StringBuilder $r4;
        android.os.ZygoteStartFailedEx $r7, $r12;
        java.lang.String $r8, r13;
        java.lang.Throwable $r11;

        r0 := @this: android.os.ZygoteProcess;

        r13 := @parameter0: java.lang.String;

     label1:
        specialinvoke r0.<android.os.ZygoteProcess: void attemptConnectionToPrimaryZygote()>();

        $r2 = r0.<android.os.ZygoteProcess: android.os.ZygoteProcess$ZygoteState primaryZygoteState>;

        $z0 = virtualinvoke $r2.<android.os.ZygoteProcess$ZygoteState: boolean matches(java.lang.String)>(r13);

        if $z0 == 0 goto label2;

        $r10 = r0.<android.os.ZygoteProcess: android.os.ZygoteProcess$ZygoteState primaryZygoteState>;

        return $r10;

     label2:
        $r3 = r0.<android.os.ZygoteProcess: android.net.LocalSocketAddress mZygoteSecondarySocketAddress>;

        if $r3 == null goto label4;

        specialinvoke r0.<android.os.ZygoteProcess: void attemptConnectionToSecondaryZygote()>();

        $r9 = r0.<android.os.ZygoteProcess: android.os.ZygoteProcess$ZygoteState secondaryZygoteState>;

        $z1 = virtualinvoke $r9.<android.os.ZygoteProcess$ZygoteState: boolean matches(java.lang.String)>(r13);

        if $z1 == 0 goto label4;

        r14 = r0.<android.os.ZygoteProcess: android.os.ZygoteProcess$ZygoteState secondaryZygoteState>;

     label3:
        return r14;

     label4:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported zygote ABI: ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r13);

        $r7 = new android.os.ZygoteStartFailedEx;

        $r8 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<android.os.ZygoteStartFailedEx: void <init>(java.lang.String)>($r8);

        throw $r7;

     label5:
        $r11 := @caughtexception;

        $r12 = new android.os.ZygoteStartFailedEx;

        specialinvoke $r12.<android.os.ZygoteStartFailedEx: void <init>(java.lang.String,java.lang.Throwable)>("Error connecting to zygote", $r11);

        throw $r12;

        catch java.io.IOException from label1 to label2 with label5;
        catch java.io.IOException from label2 to label3 with label5;
    }

    private static boolean policySpecifiesUsapPoolLaunch(int)
    {
        int i0, $i1;
        boolean z0;

        i0 := @parameter0: int;

        z0 = 1;

        $i1 = i0 & 5;

        if $i1 != 1 goto label1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    private boolean shouldAttemptUsapLaunch(int, java.util.ArrayList)
    {
        android.os.ZygoteProcess r0;
        int i0;
        java.util.ArrayList r1;
        boolean $z0, $z1, $z2, $z3, z4;

        r0 := @this: android.os.ZygoteProcess;

        i0 := @parameter0: int;

        r1 := @parameter1: java.util.ArrayList;

        $z0 = r0.<android.os.ZygoteProcess: boolean mUsapPoolSupported>;

        if $z0 == 0 goto label1;

        $z1 = r0.<android.os.ZygoteProcess: boolean mUsapPoolEnabled>;

        if $z1 == 0 goto label1;

        $z2 = staticinvoke <android.os.ZygoteProcess: boolean policySpecifiesUsapPoolLaunch(int)>(i0);

        if $z2 == 0 goto label1;

        $z3 = staticinvoke <android.os.ZygoteProcess: boolean commandSupportedByUsap(java.util.ArrayList)>(r1);

        if $z3 == 0 goto label1;

        z4 = 1;

        goto label2;

     label1:
        z4 = 0;

     label2:
        return z4;
    }

    private android.os.Process$ProcessStartResult startViaZygote(java.lang.String, java.lang.String, int, int, int[], int, int, int, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, boolean, java.lang.String, int, boolean, long[], java.util.Map, java.util.Map, boolean, boolean, java.lang.String[]) throws android.os.ZygoteStartFailedEx
    {
        android.os.ZygoteProcess r0;
        int i0, i1, i2, i3, $i4, $i6, $i7, $i8, $i9, i10, i11, i12, i13, i14, i15;
        java.lang.String r1, r2, r3, r4, r5, $r15, $r19, $r23, $r28, $r35, $r38, $r44, $r56, $r59, $r65, $r76, $r80, $r84, $r88, $r92, $r95, r100, r101, r103, $r109;
        boolean z0, z1, z2, z3, $z14, $z16, z36, z37;
        long[] r6;
        java.util.Map r7, r8;
        java.lang.String[] r9;
        java.util.ArrayList $r11;
        java.lang.StringBuilder $r12, $r16, $r20, $r26, $r31, $r52, $r73, $r77, $r81, $r85, $r89, $r93, $r107;
        long $l5;
        java.util.Set $r34, $r55;
        java.lang.Object $r36, $r37, $r41, $r43, $r47, $r49, $r57, $r58, $r62, $r64, $r68, $r70, r123;
        android.util.Pair $r42, $r48, $r63, $r69;
        java.lang.Throwable $r98, $r99, r126;
        int[] r102;
        java.util.Iterator r117, r120;
        java.util.Map$Entry r118, r121;
        android.os.ZygoteProcess$ZygoteState r124;
        android.os.Process$ProcessStartResult r125;

        r0 := @this: android.os.ZygoteProcess;

        r100 := @parameter0: java.lang.String;

        r101 := @parameter1: java.lang.String;

        i10 := @parameter2: int;

        i11 := @parameter3: int;

        r102 := @parameter4: int[];

        i0 := @parameter5: int;

        i1 := @parameter6: int;

        i2 := @parameter7: int;

        r103 := @parameter8: java.lang.String;

        r1 := @parameter9: java.lang.String;

        r2 := @parameter10: java.lang.String;

        r3 := @parameter11: java.lang.String;

        r4 := @parameter12: java.lang.String;

        z0 := @parameter13: boolean;

        r5 := @parameter14: java.lang.String;

        i3 := @parameter15: int;

        z1 := @parameter16: boolean;

        r6 := @parameter17: long[];

        r7 := @parameter18: java.util.Map;

        r8 := @parameter19: java.util.Map;

        z2 := @parameter20: boolean;

        z3 := @parameter21: boolean;

        r9 := @parameter22: java.lang.String[];

        $r11 = new java.util.ArrayList;

        specialinvoke $r11.<java.util.ArrayList: void <init>()>();

        virtualinvoke $r11.<java.util.ArrayList: boolean add(java.lang.Object)>("--runtime-args");

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("--setuid=");

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i10);

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r11.<java.util.ArrayList: boolean add(java.lang.Object)>($r15);

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("--setgid=");

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i11);

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r11.<java.util.ArrayList: boolean add(java.lang.Object)>($r19);

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("--runtime-flags=");

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r23 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r11.<java.util.ArrayList: boolean add(java.lang.Object)>($r23);

        if i1 != 1 goto label01;

        virtualinvoke $r11.<java.util.ArrayList: boolean add(java.lang.Object)>("--mount-external-default");

        goto label08;

     label01:
        if i1 != 2 goto label02;

        virtualinvoke $r11.<java.util.ArrayList: boolean add(java.lang.Object)>("--mount-external-read");

        goto label08;

     label02:
        if i1 != 3 goto label03;

        virtualinvoke $r11.<java.util.ArrayList: boolean add(java.lang.Object)>("--mount-external-write");

        goto label08;

     label03:
        if i1 != 6 goto label04;

        virtualinvoke $r11.<java.util.ArrayList: boolean add(java.lang.Object)>("--mount-external-full");

        goto label08;

     label04:
        if i1 != 5 goto label05;

        virtualinvoke $r11.<java.util.ArrayList: boolean add(java.lang.Object)>("--mount-external-installer");

        goto label08;

     label05:
        if i1 != 4 goto label06;

        virtualinvoke $r11.<java.util.ArrayList: boolean add(java.lang.Object)>("--mount-external-legacy");

        goto label08;

     label06:
        if i1 != 7 goto label07;

        virtualinvoke $r11.<java.util.ArrayList: boolean add(java.lang.Object)>("--mount-external-pass-through");

        goto label08;

     label07:
        if i1 != 8 goto label08;

        virtualinvoke $r11.<java.util.ArrayList: boolean add(java.lang.Object)>("--mount-external-android-writable");

     label08:
        $r107 = new java.lang.StringBuilder;

        specialinvoke $r107.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r107.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("--target-sdk-version=");

        virtualinvoke $r107.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r109 = virtualinvoke $r107.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r11.<java.util.ArrayList: boolean add(java.lang.Object)>($r109);

        if r102 == null goto label12;

        $i8 = lengthof r102;

        if $i8 <= 0 goto label12;

        $r93 = new java.lang.StringBuilder;

        specialinvoke $r93.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r93.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("--setgroups=");

        i12 = lengthof r102;

        i13 = 0;

     label09:
        if i13 >= i12 goto label11;

        if i13 == 0 goto label10;

        virtualinvoke $r93.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(44);

        goto label10;

     label10:
        $i9 = r102[i13];

        virtualinvoke $r93.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i9);

        i13 = i13 + 1;

        goto label09;

     label11:
        $r95 = virtualinvoke $r93.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r11.<java.util.ArrayList: boolean add(java.lang.Object)>($r95);

     label12:
        if r101 == null goto label13;

        $r89 = new java.lang.StringBuilder;

        specialinvoke $r89.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r89.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("--nice-name=");

        virtualinvoke $r89.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r101);

        $r92 = virtualinvoke $r89.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r11.<java.util.ArrayList: boolean add(java.lang.Object)>($r92);

     label13:
        if r103 == null goto label14;

        $r85 = new java.lang.StringBuilder;

        specialinvoke $r85.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r85.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("--seinfo=");

        virtualinvoke $r85.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r103);

        $r88 = virtualinvoke $r85.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r11.<java.util.ArrayList: boolean add(java.lang.Object)>($r88);

     label14:
        if r2 == null goto label15;

        $r81 = new java.lang.StringBuilder;

        specialinvoke $r81.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("--instruction-set=");

        virtualinvoke $r81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r84 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r11.<java.util.ArrayList: boolean add(java.lang.Object)>($r84);

     label15:
        if r3 == null goto label16;

        $r77 = new java.lang.StringBuilder;

        specialinvoke $r77.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("--app-data-dir=");

        virtualinvoke $r77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r80 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r11.<java.util.ArrayList: boolean add(java.lang.Object)>($r80);

     label16:
        if r4 == null goto label17;

        virtualinvoke $r11.<java.util.ArrayList: boolean add(java.lang.Object)>("--invoke-with");

        virtualinvoke $r11.<java.util.ArrayList: boolean add(java.lang.Object)>(r4);

     label17:
        if z0 == 0 goto label18;

        virtualinvoke $r11.<java.util.ArrayList: boolean add(java.lang.Object)>("--start-child-zygote");

     label18:
        if r5 == null goto label19;

        $r73 = new java.lang.StringBuilder;

        specialinvoke $r73.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("--package-name=");

        virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r76 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r11.<java.util.ArrayList: boolean add(java.lang.Object)>($r76);

     label19:
        if z1 == 0 goto label20;

        virtualinvoke $r11.<java.util.ArrayList: boolean add(java.lang.Object)>("--is-top-app");

     label20:
        if r7 == null goto label24;

        $i7 = interfaceinvoke r7.<java.util.Map: int size()>();

        if $i7 <= 0 goto label24;

        $r52 = new java.lang.StringBuilder;

        specialinvoke $r52.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("--pkg-data-info-map");

        virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        z36 = 0;

        $r55 = interfaceinvoke r7.<java.util.Map: java.util.Set entrySet()>();

        r117 = interfaceinvoke $r55.<java.util.Set: java.util.Iterator iterator()>();

     label21:
        $z16 = interfaceinvoke r117.<java.util.Iterator: boolean hasNext()>();

        if $z16 == 0 goto label23;

        $r57 = interfaceinvoke r117.<java.util.Iterator: java.lang.Object next()>();

        r118 = (java.util.Map$Entry) $r57;

        if z36 == 0 goto label22;

        virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(44);

        goto label22;

     label22:
        z36 = 1;

        $r58 = interfaceinvoke r118.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r59 = (java.lang.String) $r58;

        virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r59);

        virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(44);

        $r62 = interfaceinvoke r118.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r63 = (android.util.Pair) $r62;

        $r64 = $r63.<android.util.Pair: java.lang.Object first>;

        $r65 = (java.lang.String) $r64;

        virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r65);

        virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(44);

        $r68 = interfaceinvoke r118.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r69 = (android.util.Pair) $r68;

        $r70 = $r69.<android.util.Pair: java.lang.Object second>;

        virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r70);

        goto label21;

     label23:
        $r56 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r11.<java.util.ArrayList: boolean add(java.lang.Object)>($r56);

     label24:
        if r8 == null goto label28;

        $i6 = interfaceinvoke r8.<java.util.Map: int size()>();

        if $i6 <= 0 goto label28;

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("--whitelisted-data-info-map");

        virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        z37 = 0;

        $r34 = interfaceinvoke r8.<java.util.Map: java.util.Set entrySet()>();

        r120 = interfaceinvoke $r34.<java.util.Set: java.util.Iterator iterator()>();

     label25:
        $z14 = interfaceinvoke r120.<java.util.Iterator: boolean hasNext()>();

        if $z14 == 0 goto label27;

        $r36 = interfaceinvoke r120.<java.util.Iterator: java.lang.Object next()>();

        r121 = (java.util.Map$Entry) $r36;

        if z37 == 0 goto label26;

        virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(44);

        goto label26;

     label26:
        $r37 = interfaceinvoke r121.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r38 = (java.lang.String) $r37;

        virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r38);

        virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(44);

        $r41 = interfaceinvoke r121.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r42 = (android.util.Pair) $r41;

        $r43 = $r42.<android.util.Pair: java.lang.Object first>;

        $r44 = (java.lang.String) $r43;

        virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r44);

        virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(44);

        $r47 = interfaceinvoke r121.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r48 = (android.util.Pair) $r47;

        $r49 = $r48.<android.util.Pair: java.lang.Object second>;

        virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r49);

        z37 = 1;

        goto label25;

     label27:
        $r35 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r11.<java.util.ArrayList: boolean add(java.lang.Object)>($r35);

     label28:
        if z3 == 0 goto label29;

        virtualinvoke $r11.<java.util.ArrayList: boolean add(java.lang.Object)>("--bind-mount-storage-dirs");

     label29:
        if z2 == 0 goto label30;

        virtualinvoke $r11.<java.util.ArrayList: boolean add(java.lang.Object)>("--bind-mount-data-dirs");

     label30:
        if r6 == null goto label34;

        $i4 = lengthof r6;

        if $i4 <= 0 goto label34;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("--disabled-compat-changes=");

        i14 = lengthof r6;

        i15 = 0;

     label31:
        if i15 >= i14 goto label33;

        if i15 == 0 goto label32;

        virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(44);

        goto label32;

     label32:
        $l5 = r6[i15];

        virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l5);

        i15 = i15 + 1;

        goto label31;

     label33:
        $r28 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r11.<java.util.ArrayList: boolean add(java.lang.Object)>($r28);

     label34:
        virtualinvoke $r11.<java.util.ArrayList: boolean add(java.lang.Object)>(r100);

        if r9 == null goto label35;

        staticinvoke <java.util.Collections: boolean addAll(java.util.Collection,java.lang.Object[])>($r11, r9);

     label35:
        r123 = r0.<android.os.ZygoteProcess: java.lang.Object mLock>;

        entermonitor r123;

     label36:
        r124 = specialinvoke r0.<android.os.ZygoteProcess: android.os.ZygoteProcess$ZygoteState openZygoteSocketIfNeeded(java.lang.String)>(r1);

     label37:
        r125 = specialinvoke r0.<android.os.ZygoteProcess: android.os.Process$ProcessStartResult zygoteSendArgsAndGetResult(android.os.ZygoteProcess$ZygoteState,int,java.util.ArrayList)>(r124, i3, $r11);

        exitmonitor r123;

     label38:
        return r125;

     label39:
        $r99 := @caughtexception;

        r126 = $r99;

        goto label41;

     label40:
        $r98 := @caughtexception;

        r126 = $r98;

     label41:
        exitmonitor r123;

     label42:
        throw r126;

        catch java.lang.Throwable from label36 to label37 with label40;
        catch java.lang.Throwable from label37 to label38 with label39;
        catch java.lang.Throwable from label41 to label42 with label39;
    }

    public static void waitForConnectionToZygote(android.net.LocalSocketAddress)
    {
        android.net.LocalSocketAddress r0;
        java.lang.String $r4, $r6, $r12, $r14;
        android.os.ZygoteProcess$ZygoteState $r7;
        java.lang.Throwable $r8, $r9;
        int i2;
        java.lang.StringBuilder r18, r19;
        java.io.IOException r20;

        r0 := @parameter0: android.net.LocalSocketAddress;

        i2 = 400;

     label1:
        if i2 < 0 goto label9;

     label2:
        $r7 = staticinvoke <android.os.ZygoteProcess$ZygoteState: android.os.ZygoteProcess$ZygoteState connect(android.net.LocalSocketAddress,android.net.LocalSocketAddress)>(r0, null);

        virtualinvoke $r7.<android.os.ZygoteProcess$ZygoteState: void close()>();

     label3:
        return;

     label4:
        $r9 := @caughtexception;

        r18 = new java.lang.StringBuilder;

        specialinvoke r18.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Got error connecting to zygote, retrying. msg= ");

        r20 = (java.io.IOException) $r9;

        $r12 = virtualinvoke r20.<java.io.IOException: java.lang.String getMessage()>();

        virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke r18.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ZygoteProcess", $r14);

     label5:
        staticinvoke <java.lang.Thread: void sleep(long)>(50L);

     label6:
        goto label8;

     label7:
        $r8 := @caughtexception;

        goto label6;

     label8:
        i2 = i2 + -1;

        goto label1;

     label9:
        r19 = new java.lang.StringBuilder;

        specialinvoke r19.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to connect to Zygote through socket ");

        $r4 = virtualinvoke r0.<android.net.LocalSocketAddress: java.lang.String getName()>();

        virtualinvoke r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke r19.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>("ZygoteProcess", $r6);

        return;

        catch java.io.IOException from label2 to label3 with label4;
        catch java.lang.InterruptedException from label5 to label6 with label7;
    }

    public static void waitForConnectionToZygote(java.lang.String)
    {
        java.lang.String r0;
        android.net.LocalSocketAddress $r1;
        android.net.LocalSocketAddress$Namespace $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = new android.net.LocalSocketAddress;

        $r2 = <android.net.LocalSocketAddress$Namespace: android.net.LocalSocketAddress$Namespace RESERVED>;

        specialinvoke $r1.<android.net.LocalSocketAddress: void <init>(java.lang.String,android.net.LocalSocketAddress$Namespace)>(r0, $r2);

        staticinvoke <android.os.ZygoteProcess: void waitForConnectionToZygote(android.net.LocalSocketAddress)>($r1);

        return;
    }

    private android.os.Process$ProcessStartResult zygoteSendArgsAndGetResult(android.os.ZygoteProcess$ZygoteState, int, java.util.ArrayList) throws android.os.ZygoteStartFailedEx
    {
        android.os.ZygoteProcess r0;
        android.os.ZygoteProcess$ZygoteState r1;
        int i0, $i1, $i2, $i3;
        boolean $z0, $z1;
        java.lang.String $r5, $r15, $r17, r20, r22;
        android.os.Process$ProcessStartResult $r8, r23;
        java.lang.Object $r9;
        java.lang.Throwable $r12;
        java.util.ArrayList r18;
        java.util.Iterator r19;
        android.os.ZygoteStartFailedEx r26, r27;
        java.lang.StringBuilder r28, r29;
        java.io.IOException r30;

        r0 := @this: android.os.ZygoteProcess;

        r1 := @parameter0: android.os.ZygoteProcess$ZygoteState;

        i0 := @parameter1: int;

        r18 := @parameter2: java.util.ArrayList;

        r19 = virtualinvoke r18.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r19.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r9 = interfaceinvoke r19.<java.util.Iterator: java.lang.Object next()>();

        r20 = (java.lang.String) $r9;

        $i2 = virtualinvoke r20.<java.lang.String: int indexOf(int)>(10);

        if $i2 >= 0 goto label3;

        $i3 = virtualinvoke r20.<java.lang.String: int indexOf(int)>(13);

        if $i3 >= 0 goto label2;

        goto label1;

     label2:
        r26 = new android.os.ZygoteStartFailedEx;

        specialinvoke r26.<android.os.ZygoteStartFailedEx: void <init>(java.lang.String)>("Embedded carriage returns not allowed");

        throw r26;

     label3:
        r27 = new android.os.ZygoteStartFailedEx;

        specialinvoke r27.<android.os.ZygoteStartFailedEx: void <init>(java.lang.String)>("Embedded newlines not allowed");

        throw r27;

     label4:
        r28 = new java.lang.StringBuilder;

        specialinvoke r28.<java.lang.StringBuilder: void <init>()>();

        $i1 = virtualinvoke r18.<java.util.ArrayList: int size()>();

        virtualinvoke r28.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r5 = staticinvoke <java.lang.String: java.lang.String join(java.lang.CharSequence,java.lang.Iterable)>("\n", r18);

        virtualinvoke r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        r22 = virtualinvoke r28.<java.lang.StringBuilder: java.lang.String toString()>();

        $z1 = specialinvoke r0.<android.os.ZygoteProcess: boolean shouldAttemptUsapLaunch(int,java.util.ArrayList)>(i0, r18);

        if $z1 == 0 goto label8;

     label5:
        r23 = specialinvoke r0.<android.os.ZygoteProcess: android.os.Process$ProcessStartResult attemptUsapSendArgsAndGetResult(android.os.ZygoteProcess$ZygoteState,java.lang.String)>(r1, r22);

     label6:
        return r23;

     label7:
        $r12 := @caughtexception;

        r29 = new java.lang.StringBuilder;

        specialinvoke r29.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("IO Exception while communicating with USAP pool - ");

        r30 = (java.io.IOException) $r12;

        $r15 = virtualinvoke r30.<java.io.IOException: java.lang.String getMessage()>();

        virtualinvoke r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke r29.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("ZygoteProcess", $r17);

     label8:
        $r8 = specialinvoke r0.<android.os.ZygoteProcess: android.os.Process$ProcessStartResult attemptZygoteSendArgsAndGetResult(android.os.ZygoteProcess$ZygoteState,java.lang.String)>(r1, r22);

        return $r8;

        catch java.io.IOException from label5 to label6 with label7;
    }

    public void bootCompleted()
    {
        android.os.ZygoteProcess r0;
        java.lang.String[] $r1, $r2, $r3, $r5;
        int $i0, $i1;
        java.lang.String $r4, $r6;

        r0 := @this: android.os.ZygoteProcess;

        $r1 = <android.os.Build: java.lang.String[] SUPPORTED_32_BIT_ABIS>;

        $i0 = lengthof $r1;

        if $i0 <= 0 goto label1;

        $r5 = <android.os.Build: java.lang.String[] SUPPORTED_32_BIT_ABIS>;

        $r6 = $r5[0];

        specialinvoke r0.<android.os.ZygoteProcess: void bootCompleted(java.lang.String)>($r6);

     label1:
        $r2 = <android.os.Build: java.lang.String[] SUPPORTED_64_BIT_ABIS>;

        $i1 = lengthof $r2;

        if $i1 <= 0 goto label2;

        $r3 = <android.os.Build: java.lang.String[] SUPPORTED_64_BIT_ABIS>;

        $r4 = $r3[0];

        specialinvoke r0.<android.os.ZygoteProcess: void bootCompleted(java.lang.String)>($r4);

     label2:
        return;
    }

    public void close()
    {
        android.os.ZygoteProcess r0;
        android.os.ZygoteProcess$ZygoteState r1, r2;

        r0 := @this: android.os.ZygoteProcess;

        r1 = r0.<android.os.ZygoteProcess: android.os.ZygoteProcess$ZygoteState primaryZygoteState>;

        if r1 == null goto label1;

        virtualinvoke r1.<android.os.ZygoteProcess$ZygoteState: void close()>();

     label1:
        r2 = r0.<android.os.ZygoteProcess: android.os.ZygoteProcess$ZygoteState secondaryZygoteState>;

        if r2 == null goto label2;

        virtualinvoke r2.<android.os.ZygoteProcess$ZygoteState: void close()>();

     label2:
        return;
    }

    public void establishZygoteConnectionForAbi(java.lang.String)
    {
        android.os.ZygoteProcess r0;
        java.lang.String r1, $r8;
        android.os.ZygoteStartFailedEx $r3;
        java.lang.StringBuilder $r4;
        java.lang.RuntimeException $r7;
        java.lang.Throwable $r9;
        java.lang.Object r10;

        r0 := @this: android.os.ZygoteProcess;

        r1 := @parameter0: java.lang.String;

     label1:
        r10 = r0.<android.os.ZygoteProcess: java.lang.Object mLock>;

        entermonitor r10;

     label2:
        specialinvoke r0.<android.os.ZygoteProcess: android.os.ZygoteProcess$ZygoteState openZygoteSocketIfNeeded(java.lang.String)>(r1);

        exitmonitor r10;

     label3:
        return;

     label4:
        $r9 := @caughtexception;

     label5:
        exitmonitor r10;

     label6:
        throw $r9;

     label7:
        $r3 := @caughtexception;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to connect to zygote for abi: ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r7 = new java.lang.RuntimeException;

        $r8 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r8, $r3);

        throw $r7;

        catch android.os.ZygoteStartFailedEx from label1 to label2 with label7;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
        catch android.os.ZygoteStartFailedEx from label6 to label7 with label7;
    }

    public android.net.LocalSocketAddress getPrimarySocketAddress()
    {
        android.os.ZygoteProcess r0;
        android.net.LocalSocketAddress $r1;

        r0 := @this: android.os.ZygoteProcess;

        $r1 = r0.<android.os.ZygoteProcess: android.net.LocalSocketAddress mZygoteSocketAddress>;

        return $r1;
    }

    public int getZygotePid(java.lang.String)
    {
        android.os.ZygoteProcess r0;
        java.lang.Object r1;
        int i0, $i1;
        java.io.BufferedWriter $r2, $r3, $r4, $r5, $r6;
        java.io.DataInputStream $r7, $r8;
        java.nio.charset.Charset $r9;
        java.lang.Throwable $r10;
        java.lang.Exception $r11;
        java.lang.RuntimeException $r12;
        java.lang.String r13, r16;
        android.os.ZygoteProcess$ZygoteState r14;
        byte[] r15;

        r0 := @this: android.os.ZygoteProcess;

        r13 := @parameter0: java.lang.String;

     label1:
        r1 = r0.<android.os.ZygoteProcess: java.lang.Object mLock>;

        entermonitor r1;

     label2:
        r14 = specialinvoke r0.<android.os.ZygoteProcess: android.os.ZygoteProcess$ZygoteState openZygoteSocketIfNeeded(java.lang.String)>(r13);

        $r2 = r14.<android.os.ZygoteProcess$ZygoteState: java.io.BufferedWriter mZygoteOutputWriter>;

        virtualinvoke $r2.<java.io.BufferedWriter: void write(java.lang.String)>("1");

        $r3 = r14.<android.os.ZygoteProcess$ZygoteState: java.io.BufferedWriter mZygoteOutputWriter>;

        virtualinvoke $r3.<java.io.BufferedWriter: void newLine()>();

        $r4 = r14.<android.os.ZygoteProcess$ZygoteState: java.io.BufferedWriter mZygoteOutputWriter>;

        virtualinvoke $r4.<java.io.BufferedWriter: void write(java.lang.String)>("--get-pid");

        $r5 = r14.<android.os.ZygoteProcess$ZygoteState: java.io.BufferedWriter mZygoteOutputWriter>;

        virtualinvoke $r5.<java.io.BufferedWriter: void newLine()>();

        $r6 = r14.<android.os.ZygoteProcess$ZygoteState: java.io.BufferedWriter mZygoteOutputWriter>;

        virtualinvoke $r6.<java.io.BufferedWriter: void flush()>();

        $r7 = r14.<android.os.ZygoteProcess$ZygoteState: java.io.DataInputStream mZygoteInputStream>;

        $i1 = virtualinvoke $r7.<java.io.DataInputStream: int readInt()>();

        r15 = newarray (byte)[$i1];

        $r8 = r14.<android.os.ZygoteProcess$ZygoteState: java.io.DataInputStream mZygoteInputStream>;

        virtualinvoke $r8.<java.io.DataInputStream: void readFully(byte[])>(r15);

        r16 = new java.lang.String;

        $r9 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset US_ASCII>;

        specialinvoke r16.<java.lang.String: void <init>(byte[],java.nio.charset.Charset)>(r15, $r9);

        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r16);

        exitmonitor r1;

     label3:
        return i0;

     label4:
        $r10 := @caughtexception;

     label5:
        exitmonitor r1;

     label6:
        throw $r10;

     label7:
        $r11 := @caughtexception;

        $r12 = new java.lang.RuntimeException;

        specialinvoke $r12.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Failure retrieving pid", $r11);

        throw $r12;

        catch java.lang.Exception from label1 to label2 with label7;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
        catch java.lang.Exception from label6 to label7 with label7;
    }

    public boolean preloadApp(android.content.pm.ApplicationInfo, java.lang.String) throws android.os.ZygoteStartFailedEx, java.io.IOException
    {
        android.os.ZygoteProcess r0;
        java.lang.Object r1;
        android.os.Parcel r2;
        java.io.BufferedWriter $r3, $r4, $r5, $r6, $r9, $r10, $r11;
        java.util.Base64$Encoder $r7;
        byte[] $r8;
        java.io.DataInputStream $r12;
        int $i0;
        java.lang.Throwable $r13;
        android.content.pm.ApplicationInfo r14;
        java.lang.String r15, r17;
        android.os.ZygoteProcess$ZygoteState r16;
        boolean z0;

        r0 := @this: android.os.ZygoteProcess;

        r14 := @parameter0: android.content.pm.ApplicationInfo;

        r15 := @parameter1: java.lang.String;

        r1 = r0.<android.os.ZygoteProcess: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        r16 = specialinvoke r0.<android.os.ZygoteProcess: android.os.ZygoteProcess$ZygoteState openZygoteSocketIfNeeded(java.lang.String)>(r15);

        $r3 = r16.<android.os.ZygoteProcess$ZygoteState: java.io.BufferedWriter mZygoteOutputWriter>;

        virtualinvoke $r3.<java.io.BufferedWriter: void write(java.lang.String)>("2");

        $r4 = r16.<android.os.ZygoteProcess$ZygoteState: java.io.BufferedWriter mZygoteOutputWriter>;

        virtualinvoke $r4.<java.io.BufferedWriter: void newLine()>();

        $r5 = r16.<android.os.ZygoteProcess$ZygoteState: java.io.BufferedWriter mZygoteOutputWriter>;

        virtualinvoke $r5.<java.io.BufferedWriter: void write(java.lang.String)>("--preload-app");

        $r6 = r16.<android.os.ZygoteProcess$ZygoteState: java.io.BufferedWriter mZygoteOutputWriter>;

        virtualinvoke $r6.<java.io.BufferedWriter: void newLine()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label02:
        z0 = 0;

     label03:
        virtualinvoke r14.<android.content.pm.ApplicationInfo: void writeToParcel(android.os.Parcel,int)>(r2, 0);

        $r7 = staticinvoke <java.util.Base64: java.util.Base64$Encoder getEncoder()>();

        $r8 = virtualinvoke r2.<android.os.Parcel: byte[] marshall()>();

        r17 = virtualinvoke $r7.<java.util.Base64$Encoder: java.lang.String encodeToString(byte[])>($r8);

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        $r9 = r16.<android.os.ZygoteProcess$ZygoteState: java.io.BufferedWriter mZygoteOutputWriter>;

        virtualinvoke $r9.<java.io.BufferedWriter: void write(java.lang.String)>(r17);

        $r10 = r16.<android.os.ZygoteProcess$ZygoteState: java.io.BufferedWriter mZygoteOutputWriter>;

        virtualinvoke $r10.<java.io.BufferedWriter: void newLine()>();

        $r11 = r16.<android.os.ZygoteProcess$ZygoteState: java.io.BufferedWriter mZygoteOutputWriter>;

        virtualinvoke $r11.<java.io.BufferedWriter: void flush()>();

     label04:
        $r12 = r16.<android.os.ZygoteProcess$ZygoteState: java.io.DataInputStream mZygoteInputStream>;

        $i0 = virtualinvoke $r12.<java.io.DataInputStream: int readInt()>();

        if $i0 != 0 goto label06;

     label05:
        z0 = 1;

     label06:
        exitmonitor r1;

     label07:
        return z0;

     label08:
        $r13 := @caughtexception;

     label09:
        exitmonitor r1;

     label10:
        throw $r13;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    public boolean preloadDefault(java.lang.String) throws android.os.ZygoteStartFailedEx, java.io.IOException
    {
        android.os.ZygoteProcess r0;
        java.lang.Object r1;
        java.io.BufferedWriter $r2, $r3, $r4, $r5, $r6;
        java.io.DataInputStream $r7;
        int $i0;
        java.lang.Throwable $r8;
        java.lang.String r9;
        android.os.ZygoteProcess$ZygoteState r10;
        boolean z0;

        r0 := @this: android.os.ZygoteProcess;

        r9 := @parameter0: java.lang.String;

        r1 = r0.<android.os.ZygoteProcess: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        r10 = specialinvoke r0.<android.os.ZygoteProcess: android.os.ZygoteProcess$ZygoteState openZygoteSocketIfNeeded(java.lang.String)>(r9);

        $r2 = r10.<android.os.ZygoteProcess$ZygoteState: java.io.BufferedWriter mZygoteOutputWriter>;

        virtualinvoke $r2.<java.io.BufferedWriter: void write(java.lang.String)>("1");

        $r3 = r10.<android.os.ZygoteProcess$ZygoteState: java.io.BufferedWriter mZygoteOutputWriter>;

        virtualinvoke $r3.<java.io.BufferedWriter: void newLine()>();

        $r4 = r10.<android.os.ZygoteProcess$ZygoteState: java.io.BufferedWriter mZygoteOutputWriter>;

        virtualinvoke $r4.<java.io.BufferedWriter: void write(java.lang.String)>("--preload-default");

        $r5 = r10.<android.os.ZygoteProcess$ZygoteState: java.io.BufferedWriter mZygoteOutputWriter>;

        virtualinvoke $r5.<java.io.BufferedWriter: void newLine()>();

        $r6 = r10.<android.os.ZygoteProcess$ZygoteState: java.io.BufferedWriter mZygoteOutputWriter>;

        virtualinvoke $r6.<java.io.BufferedWriter: void flush()>();

        $r7 = r10.<android.os.ZygoteProcess$ZygoteState: java.io.DataInputStream mZygoteInputStream>;

        $i0 = virtualinvoke $r7.<java.io.DataInputStream: int readInt()>();

        if $i0 != 0 goto label3;

     label2:
        z0 = 1;

        goto label4;

     label3:
        z0 = 0;

     label4:
        exitmonitor r1;

     label5:
        return z0;

     label6:
        $r8 := @caughtexception;

     label7:
        exitmonitor r1;

     label8:
        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public boolean preloadPackageForAbi(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String) throws android.os.ZygoteStartFailedEx, java.io.IOException
    {
        android.os.ZygoteProcess r0;
        java.lang.String r1, r2, r3, r20, r21;
        java.lang.Object r4;
        java.io.BufferedWriter $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17;
        java.io.DataInputStream $r18;
        int $i0;
        java.lang.Throwable $r19;
        android.os.ZygoteProcess$ZygoteState r22;
        boolean z0;

        r0 := @this: android.os.ZygoteProcess;

        r20 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        r21 := @parameter4: java.lang.String;

        r4 = r0.<android.os.ZygoteProcess: java.lang.Object mLock>;

        entermonitor r4;

     label1:
        r22 = specialinvoke r0.<android.os.ZygoteProcess: android.os.ZygoteProcess$ZygoteState openZygoteSocketIfNeeded(java.lang.String)>(r21);

        $r5 = r22.<android.os.ZygoteProcess$ZygoteState: java.io.BufferedWriter mZygoteOutputWriter>;

        virtualinvoke $r5.<java.io.BufferedWriter: void write(java.lang.String)>("5");

        $r6 = r22.<android.os.ZygoteProcess$ZygoteState: java.io.BufferedWriter mZygoteOutputWriter>;

        virtualinvoke $r6.<java.io.BufferedWriter: void newLine()>();

        $r7 = r22.<android.os.ZygoteProcess$ZygoteState: java.io.BufferedWriter mZygoteOutputWriter>;

        virtualinvoke $r7.<java.io.BufferedWriter: void write(java.lang.String)>("--preload-package");

        $r8 = r22.<android.os.ZygoteProcess$ZygoteState: java.io.BufferedWriter mZygoteOutputWriter>;

        virtualinvoke $r8.<java.io.BufferedWriter: void newLine()>();

        $r9 = r22.<android.os.ZygoteProcess$ZygoteState: java.io.BufferedWriter mZygoteOutputWriter>;

        virtualinvoke $r9.<java.io.BufferedWriter: void write(java.lang.String)>(r20);

        $r10 = r22.<android.os.ZygoteProcess$ZygoteState: java.io.BufferedWriter mZygoteOutputWriter>;

        virtualinvoke $r10.<java.io.BufferedWriter: void newLine()>();

        $r11 = r22.<android.os.ZygoteProcess$ZygoteState: java.io.BufferedWriter mZygoteOutputWriter>;

        virtualinvoke $r11.<java.io.BufferedWriter: void write(java.lang.String)>(r1);

        $r12 = r22.<android.os.ZygoteProcess$ZygoteState: java.io.BufferedWriter mZygoteOutputWriter>;

        virtualinvoke $r12.<java.io.BufferedWriter: void newLine()>();

        $r13 = r22.<android.os.ZygoteProcess$ZygoteState: java.io.BufferedWriter mZygoteOutputWriter>;

        virtualinvoke $r13.<java.io.BufferedWriter: void write(java.lang.String)>(r2);

        $r14 = r22.<android.os.ZygoteProcess$ZygoteState: java.io.BufferedWriter mZygoteOutputWriter>;

        virtualinvoke $r14.<java.io.BufferedWriter: void newLine()>();

        $r15 = r22.<android.os.ZygoteProcess$ZygoteState: java.io.BufferedWriter mZygoteOutputWriter>;

        virtualinvoke $r15.<java.io.BufferedWriter: void write(java.lang.String)>(r3);

        $r16 = r22.<android.os.ZygoteProcess$ZygoteState: java.io.BufferedWriter mZygoteOutputWriter>;

        virtualinvoke $r16.<java.io.BufferedWriter: void newLine()>();

        $r17 = r22.<android.os.ZygoteProcess$ZygoteState: java.io.BufferedWriter mZygoteOutputWriter>;

        virtualinvoke $r17.<java.io.BufferedWriter: void flush()>();

        $r18 = r22.<android.os.ZygoteProcess$ZygoteState: java.io.DataInputStream mZygoteInputStream>;

        $i0 = virtualinvoke $r18.<java.io.DataInputStream: int readInt()>();

        if $i0 != 0 goto label3;

     label2:
        z0 = 1;

        goto label4;

     label3:
        z0 = 0;

     label4:
        exitmonitor r4;

     label5:
        return z0;

     label6:
        $r19 := @caughtexception;

     label7:
        exitmonitor r4;

     label8:
        throw $r19;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public boolean setApiBlacklistExemptions(java.util.List)
    {
        android.os.ZygoteProcess r0;
        java.lang.Object r1;
        boolean z0, z1;
        android.os.ZygoteProcess$ZygoteState $r2, $r3;
        java.lang.Throwable $r4;
        java.util.List r5;

        r0 := @this: android.os.ZygoteProcess;

        r5 := @parameter0: java.util.List;

        r1 = r0.<android.os.ZygoteProcess: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        r0.<android.os.ZygoteProcess: java.util.List mApiBlacklistExemptions> = r5;

        $r2 = r0.<android.os.ZygoteProcess: android.os.ZygoteProcess$ZygoteState primaryZygoteState>;

        z0 = specialinvoke r0.<android.os.ZygoteProcess: boolean maybeSetApiBlacklistExemptions(android.os.ZygoteProcess$ZygoteState,boolean)>($r2, 1);

     label2:
        z1 = z0;

        if z0 == 0 goto label4;

     label3:
        $r3 = r0.<android.os.ZygoteProcess: android.os.ZygoteProcess$ZygoteState secondaryZygoteState>;

        z1 = specialinvoke r0.<android.os.ZygoteProcess: boolean maybeSetApiBlacklistExemptions(android.os.ZygoteProcess$ZygoteState,boolean)>($r3, 1);

     label4:
        exitmonitor r1;

     label5:
        return z1;

     label6:
        $r4 := @caughtexception;

     label7:
        exitmonitor r1;

     label8:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public void setHiddenApiAccessLogSampleRate(int)
    {
        android.os.ZygoteProcess r0;
        int i0;
        java.lang.Object r1;
        android.os.ZygoteProcess$ZygoteState $r3, $r4;
        java.lang.Throwable $r5;

        r0 := @this: android.os.ZygoteProcess;

        i0 := @parameter0: int;

        r1 = r0.<android.os.ZygoteProcess: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        r0.<android.os.ZygoteProcess: int mHiddenApiAccessLogSampleRate> = i0;

        $r3 = r0.<android.os.ZygoteProcess: android.os.ZygoteProcess$ZygoteState primaryZygoteState>;

        specialinvoke r0.<android.os.ZygoteProcess: void maybeSetHiddenApiAccessLogSampleRate(android.os.ZygoteProcess$ZygoteState)>($r3);

        $r4 = r0.<android.os.ZygoteProcess: android.os.ZygoteProcess$ZygoteState secondaryZygoteState>;

        specialinvoke r0.<android.os.ZygoteProcess: void maybeSetHiddenApiAccessLogSampleRate(android.os.ZygoteProcess$ZygoteState)>($r4);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r5 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void setHiddenApiAccessStatslogSampleRate(int)
    {
        android.os.ZygoteProcess r0;
        int i0;
        java.lang.Object r1;
        android.os.ZygoteProcess$ZygoteState $r3, $r4;
        java.lang.Throwable $r5;

        r0 := @this: android.os.ZygoteProcess;

        i0 := @parameter0: int;

        r1 = r0.<android.os.ZygoteProcess: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        r0.<android.os.ZygoteProcess: int mHiddenApiAccessStatslogSampleRate> = i0;

        $r3 = r0.<android.os.ZygoteProcess: android.os.ZygoteProcess$ZygoteState primaryZygoteState>;

        specialinvoke r0.<android.os.ZygoteProcess: void maybeSetHiddenApiAccessStatslogSampleRate(android.os.ZygoteProcess$ZygoteState)>($r3);

        $r4 = r0.<android.os.ZygoteProcess: android.os.ZygoteProcess$ZygoteState secondaryZygoteState>;

        specialinvoke r0.<android.os.ZygoteProcess: void maybeSetHiddenApiAccessStatslogSampleRate(android.os.ZygoteProcess$ZygoteState)>($r4);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r5 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public final android.os.Process$ProcessStartResult start(java.lang.String, java.lang.String, int, int, int[], int, int, int, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, int, boolean, long[], java.util.Map, java.util.Map, boolean, boolean, java.lang.String[])
    {
        android.os.ZygoteProcess r0;
        java.lang.String r1, r3, r4, r5, r6, r7, r8, r15;
        int i0, i1, i2, i3, i4, i5;
        int[] r2;
        boolean z0, z1, z2, $z3;
        long[] r9;
        java.util.Map r10, r11;
        java.lang.String[] r12;
        android.os.ZygoteStartFailedEx $r13;
        java.lang.RuntimeException $r14;
        android.os.Process$ProcessStartResult r16;

        r0 := @this: android.os.ZygoteProcess;

        r15 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        r2 := @parameter4: int[];

        i2 := @parameter5: int;

        i3 := @parameter6: int;

        i4 := @parameter7: int;

        r3 := @parameter8: java.lang.String;

        r4 := @parameter9: java.lang.String;

        r5 := @parameter10: java.lang.String;

        r6 := @parameter11: java.lang.String;

        r7 := @parameter12: java.lang.String;

        r8 := @parameter13: java.lang.String;

        i5 := @parameter14: int;

        z0 := @parameter15: boolean;

        r9 := @parameter16: long[];

        r10 := @parameter17: java.util.Map;

        r11 := @parameter18: java.util.Map;

        z1 := @parameter19: boolean;

        z2 := @parameter20: boolean;

        r12 := @parameter21: java.lang.String[];

        $z3 = specialinvoke r0.<android.os.ZygoteProcess: boolean fetchUsapPoolEnabledPropWithMinInterval()>();

        if $z3 == 0 goto label1;

        specialinvoke r0.<android.os.ZygoteProcess: void informZygotesOfUsapPoolStatus()>();

     label1:
        r16 = specialinvoke r0.<android.os.ZygoteProcess: android.os.Process$ProcessStartResult startViaZygote(java.lang.String,java.lang.String,int,int,int[],int,int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.String,int,boolean,long[],java.util.Map,java.util.Map,boolean,boolean,java.lang.String[])>(r15, r1, i0, i1, r2, i2, i3, i4, r3, r4, r5, r6, r7, 0, r8, i5, z0, r9, r10, r11, z1, z2, r12);

     label2:
        return r16;

     label3:
        $r13 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("ZygoteProcess", "Starting VM process through Zygote failed");

        $r14 = new java.lang.RuntimeException;

        specialinvoke $r14.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Starting VM process through Zygote failed", $r13);

        throw $r14;

        catch android.os.ZygoteStartFailedEx from label1 to label2 with label3;
    }

    public android.os.ChildZygoteProcess startChildZygote(java.lang.String, java.lang.String, int, int, int[], int, java.lang.String, java.lang.String, java.lang.String, java.lang.String, int, int)
    {
        android.os.ZygoteProcess r0;
        java.lang.String r1, r3, r4, r5, $r10, $r13, $r16, r31, r32, r36, r38, r40, r42;
        int i0, i1, i2, i3, i4, $i5;
        int[] r2;
        java.lang.StringBuilder $r6, $r14, $r18, $r21, $r24;
        java.util.UUID $r9;
        android.net.LocalSocketAddress $r12;
        java.lang.String[] $r27;
        android.os.ChildZygoteProcess $r28;
        android.os.ZygoteStartFailedEx $r29;
        java.lang.RuntimeException $r30;
        android.os.Process$ProcessStartResult r43;

        r0 := @this: android.os.ZygoteProcess;

        r31 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        r2 := @parameter4: int[];

        i2 := @parameter5: int;

        r3 := @parameter6: java.lang.String;

        r4 := @parameter7: java.lang.String;

        r32 := @parameter8: java.lang.String;

        r5 := @parameter9: java.lang.String;

        i3 := @parameter10: int;

        i4 := @parameter11: int;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r31);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r9 = staticinvoke <java.util.UUID: java.util.UUID randomUUID()>();

        $r10 = virtualinvoke $r9.<java.util.UUID: java.lang.String toString()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = new android.net.LocalSocketAddress;

        $r13 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<android.net.LocalSocketAddress: void <init>(java.lang.String)>($r13);

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("--zygote-socket=");

        $r16 = virtualinvoke $r12.<android.net.LocalSocketAddress: java.lang.String getName()>();

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        r36 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("--abi-list=");

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r32);

        r38 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("--uid-range-start=");

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        r40 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("--uid-range-end=");

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4);

        r42 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

     label1:
        $r27 = newarray (java.lang.String)[4];

        $r27[0] = r36;

        $r27[1] = r38;

        $r27[2] = r40;

        $r27[3] = r42;

        r43 = specialinvoke r0.<android.os.ZygoteProcess: android.os.Process$ProcessStartResult startViaZygote(java.lang.String,java.lang.String,int,int,int[],int,int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.String,int,boolean,long[],java.util.Map,java.util.Map,boolean,boolean,java.lang.String[])>(r31, r1, i0, i1, r2, i2, 0, 0, r3, r4, r5, null, null, 1, null, 4, 0, null, null, null, 1, 0, $r27);

     label2:
        $r28 = new android.os.ChildZygoteProcess;

        $i5 = r43.<android.os.Process$ProcessStartResult: int pid>;

        specialinvoke $r28.<android.os.ChildZygoteProcess: void <init>(android.net.LocalSocketAddress,int)>($r12, $i5);

        return $r28;

     label3:
        $r29 := @caughtexception;

        $r30 = new java.lang.RuntimeException;

        specialinvoke $r30.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Starting child-zygote through Zygote failed", $r29);

        throw $r30;

        catch android.os.ZygoteStartFailedEx from label1 to label2 with label3;
    }
}
