class android.os.health.HealthKeys$SortedIntArray extends java.lang.Object
{
    int[] mArray;
    int mCount;

    void <init>(int)
    {
        android.os.health.HealthKeys$SortedIntArray r0;
        int i0;
        int[] $r1;

        r0 := @this: android.os.health.HealthKeys$SortedIntArray;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = newarray (int)[i0];

        r0.<android.os.health.HealthKeys$SortedIntArray: int[] mArray> = $r1;

        return;
    }

    void addValue(int)
    {
        android.os.health.HealthKeys$SortedIntArray r0;
        int i0, i1, $i2;
        int[] r1;

        r0 := @this: android.os.health.HealthKeys$SortedIntArray;

        i0 := @parameter0: int;

        r1 = r0.<android.os.health.HealthKeys$SortedIntArray: int[] mArray>;

        i1 = r0.<android.os.health.HealthKeys$SortedIntArray: int mCount>;

        $i2 = i1 + 1;

        r0.<android.os.health.HealthKeys$SortedIntArray: int mCount> = $i2;

        r1[i1] = i0;

        return;
    }

    int[] getArray()
    {
        android.os.health.HealthKeys$SortedIntArray r0;
        int i0, $i1;
        int[] r1, r2, $r3;

        r0 := @this: android.os.health.HealthKeys$SortedIntArray;

        i0 = r0.<android.os.health.HealthKeys$SortedIntArray: int mCount>;

        r1 = r0.<android.os.health.HealthKeys$SortedIntArray: int[] mArray>;

        $i1 = lengthof r1;

        if i0 != $i1 goto label1;

        staticinvoke <java.util.Arrays: void sort(int[])>(r1);

        $r3 = r0.<android.os.health.HealthKeys$SortedIntArray: int[] mArray>;

        return $r3;

     label1:
        r2 = newarray (int)[i0];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, r2, 0, i0);

        staticinvoke <java.util.Arrays: void sort(int[])>(r2);

        return r2;
    }
}
