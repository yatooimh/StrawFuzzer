public class android.os.health.HealthStats extends java.lang.Object
{
    private java.lang.String mDataType;
    private int[] mMeasurementKeys;
    private long[] mMeasurementValues;
    private int[] mMeasurementsKeys;
    private android.util.ArrayMap[] mMeasurementsValues;
    private int[] mStatsKeys;
    private android.util.ArrayMap[] mStatsValues;
    private int[] mTimerCounts;
    private int[] mTimerKeys;
    private long[] mTimerTimes;
    private int[] mTimersKeys;
    private android.util.ArrayMap[] mTimersValues;

    private void <init>()
    {
        android.os.health.HealthStats r0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.os.health.HealthStats;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("unsupported");

        throw $r1;
    }

    public void <init>(android.os.Parcel)
    {
        android.os.health.HealthStats r0;
        android.os.Parcel r1;
        java.lang.String $r2;
        int[] $r3, $r4, $r6, $r8, $r10, $r12, $r14, $r17, $r21, $r24, $r26, $r27;
        long[] $r5, $r7, $r25, $r28;
        android.util.ArrayMap[] $r9, $r11, $r13, $r15, $r19, $r22;
        int $i0, $i1, $i2, $i3, $i5, $i6, i8, i9, i10, i11, i12, i13, i14, i15, i16, i17;
        android.util.ArrayMap $r16, $r20, $r23;
        android.os.Parcelable$Creator $r18;
        long $l4, $l7;

        r0 := @this: android.os.health.HealthStats;

        r1 := @parameter0: android.os.Parcel;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r0.<android.os.health.HealthStats: java.lang.String mDataType> = $r2;

        i8 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $r3 = newarray (int)[i8];

        r0.<android.os.health.HealthStats: int[] mTimerKeys> = $r3;

        $r4 = newarray (int)[i8];

        r0.<android.os.health.HealthStats: int[] mTimerCounts> = $r4;

        $r5 = newarray (long)[i8];

        r0.<android.os.health.HealthStats: long[] mTimerTimes> = $r5;

        i9 = 0;

     label01:
        if i9 >= i8 goto label02;

        $r26 = r0.<android.os.health.HealthStats: int[] mTimerKeys>;

        $i5 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $r26[i9] = $i5;

        $r27 = r0.<android.os.health.HealthStats: int[] mTimerCounts>;

        $i6 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $r27[i9] = $i6;

        $r28 = r0.<android.os.health.HealthStats: long[] mTimerTimes>;

        $l7 = virtualinvoke r1.<android.os.Parcel: long readLong()>();

        $r28[i9] = $l7;

        i9 = i9 + 1;

        goto label01;

     label02:
        i10 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $r6 = newarray (int)[i10];

        r0.<android.os.health.HealthStats: int[] mMeasurementKeys> = $r6;

        $r7 = newarray (long)[i10];

        r0.<android.os.health.HealthStats: long[] mMeasurementValues> = $r7;

        i11 = 0;

     label03:
        if i11 >= i10 goto label04;

        $r24 = r0.<android.os.health.HealthStats: int[] mMeasurementKeys>;

        $i3 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $r24[i11] = $i3;

        $r25 = r0.<android.os.health.HealthStats: long[] mMeasurementValues>;

        $l4 = virtualinvoke r1.<android.os.Parcel: long readLong()>();

        $r25[i11] = $l4;

        i11 = i11 + 1;

        goto label03;

     label04:
        i12 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $r8 = newarray (int)[i12];

        r0.<android.os.health.HealthStats: int[] mStatsKeys> = $r8;

        $r9 = newarray (android.util.ArrayMap)[i12];

        r0.<android.os.health.HealthStats: android.util.ArrayMap[] mStatsValues> = $r9;

        i13 = 0;

     label05:
        if i13 >= i12 goto label06;

        $r21 = r0.<android.os.health.HealthStats: int[] mStatsKeys>;

        $i2 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $r21[i13] = $i2;

        $r22 = r0.<android.os.health.HealthStats: android.util.ArrayMap[] mStatsValues>;

        $r23 = staticinvoke <android.os.health.HealthStats: android.util.ArrayMap createHealthStatsMap(android.os.Parcel)>(r1);

        $r22[i13] = $r23;

        i13 = i13 + 1;

        goto label05;

     label06:
        i14 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $r10 = newarray (int)[i14];

        r0.<android.os.health.HealthStats: int[] mTimersKeys> = $r10;

        $r11 = newarray (android.util.ArrayMap)[i14];

        r0.<android.os.health.HealthStats: android.util.ArrayMap[] mTimersValues> = $r11;

        i15 = 0;

     label07:
        if i15 >= i14 goto label08;

        $r17 = r0.<android.os.health.HealthStats: int[] mTimersKeys>;

        $i1 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $r17[i15] = $i1;

        $r19 = r0.<android.os.health.HealthStats: android.util.ArrayMap[] mTimersValues>;

        $r18 = <android.os.health.TimerStat: android.os.Parcelable$Creator CREATOR>;

        $r20 = staticinvoke <android.os.health.HealthStats: android.util.ArrayMap createParcelableMap(android.os.Parcel,android.os.Parcelable$Creator)>(r1, $r18);

        $r19[i15] = $r20;

        i15 = i15 + 1;

        goto label07;

     label08:
        i16 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $r12 = newarray (int)[i16];

        r0.<android.os.health.HealthStats: int[] mMeasurementsKeys> = $r12;

        $r13 = newarray (android.util.ArrayMap)[i16];

        r0.<android.os.health.HealthStats: android.util.ArrayMap[] mMeasurementsValues> = $r13;

        i17 = 0;

     label09:
        if i17 >= i16 goto label10;

        $r14 = r0.<android.os.health.HealthStats: int[] mMeasurementsKeys>;

        $i0 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $r14[i17] = $i0;

        $r15 = r0.<android.os.health.HealthStats: android.util.ArrayMap[] mMeasurementsValues>;

        $r16 = staticinvoke <android.os.health.HealthStats: android.util.ArrayMap createLongsMap(android.os.Parcel)>(r1);

        $r15[i17] = $r16;

        i17 = i17 + 1;

        goto label09;

     label10:
        return;
    }

    private static android.util.ArrayMap createHealthStatsMap(android.os.Parcel)
    {
        android.os.Parcel r0;
        int i0, i1;
        android.util.ArrayMap $r2;
        java.lang.String $r3;
        android.os.health.HealthStats $r4;

        r0 := @parameter0: android.os.Parcel;

        i0 = virtualinvoke r0.<android.os.Parcel: int readInt()>();

        $r2 = new android.util.ArrayMap;

        specialinvoke $r2.<android.util.ArrayMap: void <init>(int)>(i0);

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r3 = virtualinvoke r0.<android.os.Parcel: java.lang.String readString()>();

        $r4 = new android.os.health.HealthStats;

        specialinvoke $r4.<android.os.health.HealthStats: void <init>(android.os.Parcel)>(r0);

        virtualinvoke $r2.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r4);

        i1 = i1 + 1;

        goto label1;

     label2:
        return $r2;
    }

    private static android.util.ArrayMap createLongsMap(android.os.Parcel)
    {
        android.os.Parcel r0;
        int i0, i2;
        android.util.ArrayMap $r2;
        java.lang.String $r3;
        long $l1;
        java.lang.Long $r4;

        r0 := @parameter0: android.os.Parcel;

        i0 = virtualinvoke r0.<android.os.Parcel: int readInt()>();

        $r2 = new android.util.ArrayMap;

        specialinvoke $r2.<android.util.ArrayMap: void <init>(int)>(i0);

        i2 = 0;

     label1:
        if i2 >= i0 goto label2;

        $r3 = virtualinvoke r0.<android.os.Parcel: java.lang.String readString()>();

        $l1 = virtualinvoke r0.<android.os.Parcel: long readLong()>();

        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        virtualinvoke $r2.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r4);

        i2 = i2 + 1;

        goto label1;

     label2:
        return $r2;
    }

    private static android.util.ArrayMap createParcelableMap(android.os.Parcel, android.os.Parcelable$Creator)
    {
        android.os.Parcel r0;
        android.os.Parcelable$Creator r1;
        int i0, i1;
        android.util.ArrayMap $r3;
        java.lang.String $r4;
        java.lang.Object $r5;
        android.os.Parcelable $r6;

        r0 := @parameter0: android.os.Parcel;

        r1 := @parameter1: android.os.Parcelable$Creator;

        i0 = virtualinvoke r0.<android.os.Parcel: int readInt()>();

        $r3 = new android.util.ArrayMap;

        specialinvoke $r3.<android.util.ArrayMap: void <init>(int)>(i0);

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r4 = virtualinvoke r0.<android.os.Parcel: java.lang.String readString()>();

        $r5 = interfaceinvoke r1.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r0);

        $r6 = (android.os.Parcelable) $r5;

        virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r6);

        i1 = i1 + 1;

        goto label1;

     label2:
        return $r3;
    }

    private static int getIndex(int[], int)
    {
        int[] r0;
        int i0, $i1;

        r0 := @parameter0: int[];

        i0 := @parameter1: int;

        $i1 = staticinvoke <java.util.Arrays: int binarySearch(int[],int)>(r0, i0);

        return $i1;
    }

    public java.lang.String getDataType()
    {
        android.os.health.HealthStats r0;
        java.lang.String $r1;

        r0 := @this: android.os.health.HealthStats;

        $r1 = r0.<android.os.health.HealthStats: java.lang.String mDataType>;

        return $r1;
    }

    public long getMeasurement(int)
    {
        android.os.health.HealthStats r0;
        int i0, i1;
        int[] $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r5, $r10;
        java.lang.IndexOutOfBoundsException $r9;
        long[] $r11;
        long $l2;

        r0 := @this: android.os.health.HealthStats;

        i0 := @parameter0: int;

        $r2 = r0.<android.os.health.HealthStats: int[] mMeasurementKeys>;

        i1 = staticinvoke <android.os.health.HealthStats: int getIndex(int[],int)>($r2, i0);

        if i1 < 0 goto label1;

        $r11 = r0.<android.os.health.HealthStats: long[] mMeasurementValues>;

        $l2 = $r11[i1];

        return $l2;

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad measurement key dataType=");

        $r5 = r0.<android.os.health.HealthStats: java.lang.String mDataType>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" key=");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r9 = new java.lang.IndexOutOfBoundsException;

        $r10 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r10);

        throw $r9;
    }

    public int getMeasurementKeyAt(int)
    {
        android.os.health.HealthStats r0;
        int i0, $i1;
        int[] $r1;

        r0 := @this: android.os.health.HealthStats;

        i0 := @parameter0: int;

        $r1 = r0.<android.os.health.HealthStats: int[] mMeasurementKeys>;

        $i1 = $r1[i0];

        return $i1;
    }

    public int getMeasurementKeyCount()
    {
        android.os.health.HealthStats r0;
        int[] $r1;
        int $i0;

        r0 := @this: android.os.health.HealthStats;

        $r1 = r0.<android.os.health.HealthStats: int[] mMeasurementKeys>;

        $i0 = lengthof $r1;

        return $i0;
    }

    public java.util.Map getMeasurements(int)
    {
        android.os.health.HealthStats r0;
        int i0, i1;
        int[] $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r5, $r10;
        java.lang.IndexOutOfBoundsException $r9;
        android.util.ArrayMap[] $r11;
        android.util.ArrayMap $r12;

        r0 := @this: android.os.health.HealthStats;

        i0 := @parameter0: int;

        $r2 = r0.<android.os.health.HealthStats: int[] mMeasurementsKeys>;

        i1 = staticinvoke <android.os.health.HealthStats: int getIndex(int[],int)>($r2, i0);

        if i1 < 0 goto label1;

        $r11 = r0.<android.os.health.HealthStats: android.util.ArrayMap[] mMeasurementsValues>;

        $r12 = $r11[i1];

        return $r12;

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad measurements key dataType=");

        $r5 = r0.<android.os.health.HealthStats: java.lang.String mDataType>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" key=");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r9 = new java.lang.IndexOutOfBoundsException;

        $r10 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r10);

        throw $r9;
    }

    public int getMeasurementsKeyAt(int)
    {
        android.os.health.HealthStats r0;
        int i0, $i1;
        int[] $r1;

        r0 := @this: android.os.health.HealthStats;

        i0 := @parameter0: int;

        $r1 = r0.<android.os.health.HealthStats: int[] mMeasurementsKeys>;

        $i1 = $r1[i0];

        return $i1;
    }

    public int getMeasurementsKeyCount()
    {
        android.os.health.HealthStats r0;
        int[] $r1;
        int $i0;

        r0 := @this: android.os.health.HealthStats;

        $r1 = r0.<android.os.health.HealthStats: int[] mMeasurementsKeys>;

        $i0 = lengthof $r1;

        return $i0;
    }

    public java.util.Map getStats(int)
    {
        android.os.health.HealthStats r0;
        int i0, i1;
        int[] $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r5, $r10;
        java.lang.IndexOutOfBoundsException $r9;
        android.util.ArrayMap[] $r11;
        android.util.ArrayMap $r12;

        r0 := @this: android.os.health.HealthStats;

        i0 := @parameter0: int;

        $r2 = r0.<android.os.health.HealthStats: int[] mStatsKeys>;

        i1 = staticinvoke <android.os.health.HealthStats: int getIndex(int[],int)>($r2, i0);

        if i1 < 0 goto label1;

        $r11 = r0.<android.os.health.HealthStats: android.util.ArrayMap[] mStatsValues>;

        $r12 = $r11[i1];

        return $r12;

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad stats key dataType=");

        $r5 = r0.<android.os.health.HealthStats: java.lang.String mDataType>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" key=");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r9 = new java.lang.IndexOutOfBoundsException;

        $r10 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r10);

        throw $r9;
    }

    public int getStatsKeyAt(int)
    {
        android.os.health.HealthStats r0;
        int i0, $i1;
        int[] $r1;

        r0 := @this: android.os.health.HealthStats;

        i0 := @parameter0: int;

        $r1 = r0.<android.os.health.HealthStats: int[] mStatsKeys>;

        $i1 = $r1[i0];

        return $i1;
    }

    public int getStatsKeyCount()
    {
        android.os.health.HealthStats r0;
        int[] $r1;
        int $i0;

        r0 := @this: android.os.health.HealthStats;

        $r1 = r0.<android.os.health.HealthStats: int[] mStatsKeys>;

        $i0 = lengthof $r1;

        return $i0;
    }

    public android.os.health.TimerStat getTimer(int)
    {
        android.os.health.HealthStats r0;
        int i0, i1, $i3;
        int[] $r2, $r12;
        java.lang.StringBuilder $r3;
        java.lang.String $r5, $r10;
        java.lang.IndexOutOfBoundsException $r9;
        android.os.health.TimerStat $r11;
        long[] $r13;
        long $l2;

        r0 := @this: android.os.health.HealthStats;

        i0 := @parameter0: int;

        $r2 = r0.<android.os.health.HealthStats: int[] mTimerKeys>;

        i1 = staticinvoke <android.os.health.HealthStats: int getIndex(int[],int)>($r2, i0);

        if i1 < 0 goto label1;

        $r11 = new android.os.health.TimerStat;

        $r12 = r0.<android.os.health.HealthStats: int[] mTimerCounts>;

        $i3 = $r12[i1];

        $r13 = r0.<android.os.health.HealthStats: long[] mTimerTimes>;

        $l2 = $r13[i1];

        specialinvoke $r11.<android.os.health.TimerStat: void <init>(int,long)>($i3, $l2);

        return $r11;

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad timer key dataType=");

        $r5 = r0.<android.os.health.HealthStats: java.lang.String mDataType>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" key=");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r9 = new java.lang.IndexOutOfBoundsException;

        $r10 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r10);

        throw $r9;
    }

    public int getTimerCount(int)
    {
        android.os.health.HealthStats r0;
        int i0, i1, $i2;
        int[] $r2, $r11;
        java.lang.StringBuilder $r3;
        java.lang.String $r5, $r10;
        java.lang.IndexOutOfBoundsException $r9;

        r0 := @this: android.os.health.HealthStats;

        i0 := @parameter0: int;

        $r2 = r0.<android.os.health.HealthStats: int[] mTimerKeys>;

        i1 = staticinvoke <android.os.health.HealthStats: int getIndex(int[],int)>($r2, i0);

        if i1 < 0 goto label1;

        $r11 = r0.<android.os.health.HealthStats: int[] mTimerCounts>;

        $i2 = $r11[i1];

        return $i2;

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad timer key dataType=");

        $r5 = r0.<android.os.health.HealthStats: java.lang.String mDataType>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" key=");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r9 = new java.lang.IndexOutOfBoundsException;

        $r10 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r10);

        throw $r9;
    }

    public int getTimerKeyAt(int)
    {
        android.os.health.HealthStats r0;
        int i0, $i1;
        int[] $r1;

        r0 := @this: android.os.health.HealthStats;

        i0 := @parameter0: int;

        $r1 = r0.<android.os.health.HealthStats: int[] mTimerKeys>;

        $i1 = $r1[i0];

        return $i1;
    }

    public int getTimerKeyCount()
    {
        android.os.health.HealthStats r0;
        int[] $r1;
        int $i0;

        r0 := @this: android.os.health.HealthStats;

        $r1 = r0.<android.os.health.HealthStats: int[] mTimerKeys>;

        $i0 = lengthof $r1;

        return $i0;
    }

    public long getTimerTime(int)
    {
        android.os.health.HealthStats r0;
        int i0, i1;
        int[] $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r5, $r10;
        java.lang.IndexOutOfBoundsException $r9;
        long[] $r11;
        long $l2;

        r0 := @this: android.os.health.HealthStats;

        i0 := @parameter0: int;

        $r2 = r0.<android.os.health.HealthStats: int[] mTimerKeys>;

        i1 = staticinvoke <android.os.health.HealthStats: int getIndex(int[],int)>($r2, i0);

        if i1 < 0 goto label1;

        $r11 = r0.<android.os.health.HealthStats: long[] mTimerTimes>;

        $l2 = $r11[i1];

        return $l2;

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad timer key dataType=");

        $r5 = r0.<android.os.health.HealthStats: java.lang.String mDataType>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" key=");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r9 = new java.lang.IndexOutOfBoundsException;

        $r10 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r10);

        throw $r9;
    }

    public java.util.Map getTimers(int)
    {
        android.os.health.HealthStats r0;
        int i0, i1;
        int[] $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r5, $r10;
        java.lang.IndexOutOfBoundsException $r9;
        android.util.ArrayMap[] $r11;
        android.util.ArrayMap $r12;

        r0 := @this: android.os.health.HealthStats;

        i0 := @parameter0: int;

        $r2 = r0.<android.os.health.HealthStats: int[] mTimersKeys>;

        i1 = staticinvoke <android.os.health.HealthStats: int getIndex(int[],int)>($r2, i0);

        if i1 < 0 goto label1;

        $r11 = r0.<android.os.health.HealthStats: android.util.ArrayMap[] mTimersValues>;

        $r12 = $r11[i1];

        return $r12;

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad timers key dataType=");

        $r5 = r0.<android.os.health.HealthStats: java.lang.String mDataType>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" key=");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r9 = new java.lang.IndexOutOfBoundsException;

        $r10 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r10);

        throw $r9;
    }

    public int getTimersKeyAt(int)
    {
        android.os.health.HealthStats r0;
        int i0, $i1;
        int[] $r1;

        r0 := @this: android.os.health.HealthStats;

        i0 := @parameter0: int;

        $r1 = r0.<android.os.health.HealthStats: int[] mTimersKeys>;

        $i1 = $r1[i0];

        return $i1;
    }

    public int getTimersKeyCount()
    {
        android.os.health.HealthStats r0;
        int[] $r1;
        int $i0;

        r0 := @this: android.os.health.HealthStats;

        $r1 = r0.<android.os.health.HealthStats: int[] mTimersKeys>;

        $i0 = lengthof $r1;

        return $i0;
    }

    public boolean hasMeasurement(int)
    {
        android.os.health.HealthStats r0;
        int i0, $i1;
        int[] $r1;
        boolean z0;

        r0 := @this: android.os.health.HealthStats;

        i0 := @parameter0: int;

        $r1 = r0.<android.os.health.HealthStats: int[] mMeasurementKeys>;

        $i1 = staticinvoke <android.os.health.HealthStats: int getIndex(int[],int)>($r1, i0);

        if $i1 < 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public boolean hasMeasurements(int)
    {
        android.os.health.HealthStats r0;
        int i0, $i1;
        int[] $r1;
        boolean z0;

        r0 := @this: android.os.health.HealthStats;

        i0 := @parameter0: int;

        $r1 = r0.<android.os.health.HealthStats: int[] mMeasurementsKeys>;

        $i1 = staticinvoke <android.os.health.HealthStats: int getIndex(int[],int)>($r1, i0);

        if $i1 < 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public boolean hasStats(int)
    {
        android.os.health.HealthStats r0;
        int i0, $i1;
        int[] $r1;
        boolean z0;

        r0 := @this: android.os.health.HealthStats;

        i0 := @parameter0: int;

        $r1 = r0.<android.os.health.HealthStats: int[] mStatsKeys>;

        $i1 = staticinvoke <android.os.health.HealthStats: int getIndex(int[],int)>($r1, i0);

        if $i1 < 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public boolean hasTimer(int)
    {
        android.os.health.HealthStats r0;
        int i0, $i1;
        int[] $r1;
        boolean z0;

        r0 := @this: android.os.health.HealthStats;

        i0 := @parameter0: int;

        $r1 = r0.<android.os.health.HealthStats: int[] mTimerKeys>;

        $i1 = staticinvoke <android.os.health.HealthStats: int getIndex(int[],int)>($r1, i0);

        if $i1 < 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public boolean hasTimers(int)
    {
        android.os.health.HealthStats r0;
        int i0, $i1;
        int[] $r1;
        boolean z0;

        r0 := @this: android.os.health.HealthStats;

        i0 := @parameter0: int;

        $r1 = r0.<android.os.health.HealthStats: int[] mTimersKeys>;

        $i1 = staticinvoke <android.os.health.HealthStats: int getIndex(int[],int)>($r1, i0);

        if $i1 < 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }
}
