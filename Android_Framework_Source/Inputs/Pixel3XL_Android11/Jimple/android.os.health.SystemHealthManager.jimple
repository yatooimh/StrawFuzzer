public class android.os.health.SystemHealthManager extends java.lang.Object
{
    private final com.android.internal.app.IBatteryStats mBatteryStats;

    public void <init>()
    {
        android.os.health.SystemHealthManager r0;
        android.os.IBinder $r1;
        com.android.internal.app.IBatteryStats $r2;

        r0 := @this: android.os.health.SystemHealthManager;

        $r1 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("batterystats");

        $r2 = staticinvoke <com.android.internal.app.IBatteryStats$Stub: com.android.internal.app.IBatteryStats asInterface(android.os.IBinder)>($r1);

        specialinvoke r0.<android.os.health.SystemHealthManager: void <init>(com.android.internal.app.IBatteryStats)>($r2);

        return;
    }

    public void <init>(com.android.internal.app.IBatteryStats)
    {
        android.os.health.SystemHealthManager r0;
        com.android.internal.app.IBatteryStats r1;

        r0 := @this: android.os.health.SystemHealthManager;

        r1 := @parameter0: com.android.internal.app.IBatteryStats;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.os.health.SystemHealthManager: com.android.internal.app.IBatteryStats mBatteryStats> = r1;

        return;
    }

    public static android.os.health.SystemHealthManager 'from'(android.content.Context)
    {
        android.content.Context r0;
        java.lang.Object $r1;
        android.os.health.SystemHealthManager $r2;

        r0 := @parameter0: android.content.Context;

        $r1 = virtualinvoke r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("systemhealth");

        $r2 = (android.os.health.SystemHealthManager) $r1;

        return $r2;
    }

    public android.os.health.HealthStats takeMyUidSnapshot()
    {
        android.os.health.SystemHealthManager r0;
        int $i0;
        android.os.health.HealthStats $r1;

        r0 := @this: android.os.health.SystemHealthManager;

        $i0 = staticinvoke <android.os.Process: int myUid()>();

        $r1 = virtualinvoke r0.<android.os.health.SystemHealthManager: android.os.health.HealthStats takeUidSnapshot(int)>($i0);

        return $r1;
    }

    public android.os.health.HealthStats takeUidSnapshot(int)
    {
        android.os.health.SystemHealthManager r0;
        int i0;
        com.android.internal.app.IBatteryStats $r1;
        android.os.health.HealthStatsParceler $r2;
        android.os.RemoteException $r3;
        java.lang.RuntimeException $r4;
        android.os.health.HealthStats r5;

        r0 := @this: android.os.health.SystemHealthManager;

        i0 := @parameter0: int;

     label1:
        $r1 = r0.<android.os.health.SystemHealthManager: com.android.internal.app.IBatteryStats mBatteryStats>;

        $r2 = interfaceinvoke $r1.<com.android.internal.app.IBatteryStats: android.os.health.HealthStatsParceler takeUidSnapshot(int)>(i0);

        r5 = virtualinvoke $r2.<android.os.health.HealthStatsParceler: android.os.health.HealthStats getHealthStats()>();

     label2:
        return r5;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r3);

        throw $r4;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.os.health.HealthStats[] takeUidSnapshots(int[])
    {
        android.os.health.SystemHealthManager r0;
        android.os.health.HealthStatsParceler[] r1;
        android.os.health.HealthStats[] r2;
        int i0, $i1, i2;
        com.android.internal.app.IBatteryStats $r3;
        android.os.health.HealthStatsParceler $r4;
        android.os.health.HealthStats $r5;
        android.os.RemoteException $r6;
        java.lang.RuntimeException $r7;
        int[] r8;

        r0 := @this: android.os.health.SystemHealthManager;

        r8 := @parameter0: int[];

     label1:
        $r3 = r0.<android.os.health.SystemHealthManager: com.android.internal.app.IBatteryStats mBatteryStats>;

        r1 = interfaceinvoke $r3.<com.android.internal.app.IBatteryStats: android.os.health.HealthStatsParceler[] takeUidSnapshots(int[])>(r8);

        $i1 = lengthof r8;

        r2 = newarray (android.os.health.HealthStats)[$i1];

        i0 = lengthof r8;

     label2:
        i2 = 0;

     label3:
        if i2 >= i0 goto label6;

     label4:
        $r4 = r1[i2];

        $r5 = virtualinvoke $r4.<android.os.health.HealthStatsParceler: android.os.health.HealthStats getHealthStats()>();

        r2[i2] = $r5;

     label5:
        i2 = i2 + 1;

        goto label3;

     label6:
        return r2;

     label7:
        $r6 := @caughtexception;

        $r7 = new java.lang.RuntimeException;

        specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r6);

        throw $r7;

        catch android.os.RemoteException from label1 to label2 with label7;
        catch android.os.RemoteException from label4 to label5 with label7;
    }
}
