class android.os.incremental.IIncrementalService$Stub$Proxy extends java.lang.Object implements android.os.incremental.IIncrementalService
{
    public static android.os.incremental.IIncrementalService sDefaultImpl;
    private android.os.IBinder mRemote;

    void <init>(android.os.IBinder)
    {
        android.os.incremental.IIncrementalService$Stub$Proxy r0;
        android.os.IBinder r1;

        r0 := @this: android.os.incremental.IIncrementalService$Stub$Proxy;

        r1 := @parameter0: android.os.IBinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.os.incremental.IIncrementalService$Stub$Proxy: android.os.IBinder mRemote> = r1;

        return;
    }

    public android.os.IBinder asBinder()
    {
        android.os.incremental.IIncrementalService$Stub$Proxy r0;
        android.os.IBinder $r1;

        r0 := @this: android.os.incremental.IIncrementalService$Stub$Proxy;

        $r1 = r0.<android.os.incremental.IIncrementalService$Stub$Proxy: android.os.IBinder mRemote>;

        return $r1;
    }

    public boolean configureNativeBinaries(int, java.lang.String, java.lang.String, java.lang.String, boolean) throws android.os.RemoteException
    {
        android.os.incremental.IIncrementalService$Stub$Proxy r0;
        java.lang.String r1, r2, r14;
        android.os.Parcel r3, r4;
        android.os.IBinder $r5;
        boolean $z1, z2, z3, z4;
        android.os.incremental.IIncrementalService $r6, $r7;
        java.lang.Throwable $r8, $r9, $r10, $r11, $r12, $r13, r15;
        int i0, i2;
        byte b1;

        r0 := @this: android.os.incremental.IIncrementalService$Stub$Proxy;

        i0 := @parameter0: int;

        r14 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

        r2 := @parameter3: java.lang.String;

        z2 := @parameter4: boolean;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.incremental.IIncrementalService");

     label02:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(i0);

     label03:
        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r14);

     label04:
        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r1);

     label05:
        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r2);

     label06:
        if z2 == 0 goto label07;

        b1 = 1;

        goto label08;

     label07:
        b1 = 0;

     label08:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(b1);

     label09:
        $r5 = r0.<android.os.incremental.IIncrementalService$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(18, r3, r4, 0);

        if $z1 != 0 goto label11;

        $r6 = staticinvoke <android.os.incremental.IIncrementalService$Stub: android.os.incremental.IIncrementalService getDefaultImpl()>();

        if $r6 == null goto label11;

        $r7 = staticinvoke <android.os.incremental.IIncrementalService$Stub: android.os.incremental.IIncrementalService getDefaultImpl()>();

        z3 = interfaceinvoke $r7.<android.os.incremental.IIncrementalService: boolean configureNativeBinaries(int,java.lang.String,java.lang.String,java.lang.String,boolean)>(i0, r14, r1, r2, z2);

     label10:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return z3;

     label11:
        virtualinvoke r4.<android.os.Parcel: void readException()>();

        i2 = virtualinvoke r4.<android.os.Parcel: int readInt()>();

     label12:
        if i2 == 0 goto label13;

        z4 = 1;

        goto label14;

     label13:
        z4 = 0;

     label14:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return z4;

     label15:
        $r12 := @caughtexception;

        r15 = $r12;

        goto label21;

     label16:
        $r13 := @caughtexception;

        r15 = $r13;

        goto label21;

     label17:
        $r9 := @caughtexception;

        r15 = $r9;

        goto label21;

     label18:
        $r8 := @caughtexception;

        r15 = $r8;

        goto label21;

     label19:
        $r10 := @caughtexception;

        r15 = $r10;

        goto label21;

     label20:
        $r11 := @caughtexception;

        r15 = $r11;

     label21:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw r15;

        catch java.lang.Throwable from label01 to label02 with label20;
        catch java.lang.Throwable from label02 to label03 with label19;
        catch java.lang.Throwable from label03 to label04 with label18;
        catch java.lang.Throwable from label04 to label05 with label17;
        catch java.lang.Throwable from label05 to label06 with label16;
        catch java.lang.Throwable from label08 to label09 with label16;
        catch java.lang.Throwable from label09 to label10 with label15;
        catch java.lang.Throwable from label11 to label12 with label15;
    }

    public int createLinkedStorage(java.lang.String, int, int) throws android.os.RemoteException
    {
        android.os.incremental.IIncrementalService$Stub$Proxy r0;
        int i0, i1, i2, i3;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.os.incremental.IIncrementalService $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7;

        r0 := @this: android.os.incremental.IIncrementalService$Stub$Proxy;

        r7 := @parameter0: java.lang.String;

        i1 := @parameter1: int;

        i0 := @parameter2: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.incremental.IIncrementalService");

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r7);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r3 = r0.<android.os.incremental.IIncrementalService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(3, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.os.incremental.IIncrementalService$Stub: android.os.incremental.IIncrementalService getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.os.incremental.IIncrementalService$Stub: android.os.incremental.IIncrementalService getDefaultImpl()>();

        i2 = interfaceinvoke $r5.<android.os.incremental.IIncrementalService: int createLinkedStorage(java.lang.String,int,int)>(r7, i1, i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i2;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i3 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i3;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public int createStorage(java.lang.String, android.content.pm.DataLoaderParamsParcel, int, android.content.pm.IDataLoaderStatusListener, android.os.incremental.StorageHealthCheckParams, android.os.incremental.IStorageHealthListener) throws android.os.RemoteException
    {
        android.os.incremental.IIncrementalService$Stub$Proxy r0;
        android.content.pm.DataLoaderParamsParcel r1;
        android.content.pm.IDataLoaderStatusListener r2;
        android.os.incremental.StorageHealthCheckParams r3;
        android.os.incremental.IStorageHealthListener r4;
        android.os.Parcel r5, r6;
        android.os.IBinder $r7, r15, r16;
        boolean $z0;
        android.os.incremental.IIncrementalService $r8, $r9;
        java.lang.Throwable $r10, $r11, $r12, $r13, r17;
        java.lang.String r14;
        int i0, i1, i2;

        r0 := @this: android.os.incremental.IIncrementalService$Stub$Proxy;

        r14 := @parameter0: java.lang.String;

        r1 := @parameter1: android.content.pm.DataLoaderParamsParcel;

        i0 := @parameter2: int;

        r2 := @parameter3: android.content.pm.IDataLoaderStatusListener;

        r3 := @parameter4: android.os.incremental.StorageHealthCheckParams;

        r4 := @parameter5: android.os.incremental.IStorageHealthListener;

        r5 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r6 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r5.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.incremental.IIncrementalService");

     label02:
        virtualinvoke r5.<android.os.Parcel: void writeString(java.lang.String)>(r14);

     label03:
        if r1 == null goto label06;

     label04:
        virtualinvoke r5.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<android.content.pm.DataLoaderParamsParcel: void writeToParcel(android.os.Parcel,int)>(r5, 0);

     label05:
        goto label07;

     label06:
        virtualinvoke r5.<android.os.Parcel: void writeInt(int)>(0);

     label07:
        virtualinvoke r5.<android.os.Parcel: void writeInt(int)>(i0);

     label08:
        if r2 == null goto label11;

     label09:
        r15 = interfaceinvoke r2.<android.content.pm.IDataLoaderStatusListener: android.os.IBinder asBinder()>();

     label10:
        goto label12;

     label11:
        r15 = null;

     label12:
        virtualinvoke r5.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r15);

     label13:
        if r3 == null goto label16;

     label14:
        virtualinvoke r5.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r3.<android.os.incremental.StorageHealthCheckParams: void writeToParcel(android.os.Parcel,int)>(r5, 0);

     label15:
        goto label17;

     label16:
        virtualinvoke r5.<android.os.Parcel: void writeInt(int)>(0);

     label17:
        r16 = null;

        if r4 == null goto label19;

     label18:
        r16 = interfaceinvoke r4.<android.os.incremental.IStorageHealthListener: android.os.IBinder asBinder()>();

     label19:
        virtualinvoke r5.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r16);

     label20:
        $r7 = r0.<android.os.incremental.IIncrementalService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r7.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(2, r5, r6, 0);

        if $z0 != 0 goto label22;

        $r8 = staticinvoke <android.os.incremental.IIncrementalService$Stub: android.os.incremental.IIncrementalService getDefaultImpl()>();

        if $r8 == null goto label22;

        $r9 = staticinvoke <android.os.incremental.IIncrementalService$Stub: android.os.incremental.IIncrementalService getDefaultImpl()>();

        i1 = interfaceinvoke $r9.<android.os.incremental.IIncrementalService: int createStorage(java.lang.String,android.content.pm.DataLoaderParamsParcel,int,android.content.pm.IDataLoaderStatusListener,android.os.incremental.StorageHealthCheckParams,android.os.incremental.IStorageHealthListener)>(r14, r1, i0, r2, r3, r4);

     label21:
        virtualinvoke r6.<android.os.Parcel: void recycle()>();

        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        return i1;

     label22:
        virtualinvoke r6.<android.os.Parcel: void readException()>();

        i2 = virtualinvoke r6.<android.os.Parcel: int readInt()>();

     label23:
        virtualinvoke r6.<android.os.Parcel: void recycle()>();

        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        return i2;

     label24:
        $r12 := @caughtexception;

        r17 = $r12;

        goto label28;

     label25:
        $r13 := @caughtexception;

        r17 = $r13;

        goto label28;

     label26:
        $r10 := @caughtexception;

        r17 = $r10;

        goto label28;

     label27:
        $r11 := @caughtexception;

        r17 = $r11;

     label28:
        virtualinvoke r6.<android.os.Parcel: void recycle()>();

        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        throw r17;

        catch java.lang.Throwable from label01 to label02 with label27;
        catch java.lang.Throwable from label02 to label03 with label26;
        catch java.lang.Throwable from label04 to label05 with label26;
        catch java.lang.Throwable from label06 to label07 with label26;
        catch java.lang.Throwable from label07 to label08 with label25;
        catch java.lang.Throwable from label09 to label10 with label25;
        catch java.lang.Throwable from label12 to label13 with label25;
        catch java.lang.Throwable from label14 to label15 with label25;
        catch java.lang.Throwable from label16 to label17 with label25;
        catch java.lang.Throwable from label18 to label19 with label25;
        catch java.lang.Throwable from label19 to label20 with label25;
        catch java.lang.Throwable from label20 to label21 with label24;
        catch java.lang.Throwable from label22 to label23 with label24;
    }

    public int deleteBindMount(int, java.lang.String) throws android.os.RemoteException
    {
        android.os.incremental.IIncrementalService$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.os.incremental.IIncrementalService $r4, $r5;
        java.lang.Throwable $r6;
        int i0, i1, i2;
        java.lang.String r7;

        r0 := @this: android.os.incremental.IIncrementalService$Stub$Proxy;

        i0 := @parameter0: int;

        r7 := @parameter1: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.incremental.IIncrementalService");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r7);

        $r3 = r0.<android.os.incremental.IIncrementalService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(5, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.os.incremental.IIncrementalService$Stub: android.os.incremental.IIncrementalService getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.os.incremental.IIncrementalService$Stub: android.os.incremental.IIncrementalService getDefaultImpl()>();

        i1 = interfaceinvoke $r5.<android.os.incremental.IIncrementalService: int deleteBindMount(int,java.lang.String)>(i0, r7);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i1;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i2 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i2;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void deleteStorage(int) throws android.os.RemoteException
    {
        android.os.incremental.IIncrementalService$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.os.incremental.IIncrementalService $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.os.incremental.IIncrementalService$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.incremental.IIncrementalService");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<android.os.incremental.IIncrementalService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(16, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.os.incremental.IIncrementalService$Stub: android.os.incremental.IIncrementalService getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.os.incremental.IIncrementalService$Stub: android.os.incremental.IIncrementalService getDefaultImpl()>();

        interfaceinvoke $r6.<android.os.incremental.IIncrementalService: void deleteStorage(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void disableReadLogs(int) throws android.os.RemoteException
    {
        android.os.incremental.IIncrementalService$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.os.incremental.IIncrementalService $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.os.incremental.IIncrementalService$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.incremental.IIncrementalService");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<android.os.incremental.IIncrementalService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(17, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.os.incremental.IIncrementalService$Stub: android.os.incremental.IIncrementalService getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.os.incremental.IIncrementalService$Stub: android.os.incremental.IIncrementalService getDefaultImpl()>();

        interfaceinvoke $r6.<android.os.incremental.IIncrementalService: void disableReadLogs(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public java.lang.String getInterfaceDescriptor()
    {
        android.os.incremental.IIncrementalService$Stub$Proxy r0;

        r0 := @this: android.os.incremental.IIncrementalService$Stub$Proxy;

        return "android.os.incremental.IIncrementalService";
    }

    public byte[] getMetadataById(int, byte[]) throws android.os.RemoteException
    {
        android.os.incremental.IIncrementalService$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.os.incremental.IIncrementalService $r4, $r5;
        java.lang.Throwable $r6;
        byte[] r7, r8, r9;

        r0 := @this: android.os.incremental.IIncrementalService$Stub$Proxy;

        i0 := @parameter0: int;

        r7 := @parameter1: byte[];

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.incremental.IIncrementalService");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeByteArray(byte[])>(r7);

        $r3 = r0.<android.os.incremental.IIncrementalService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(14, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.os.incremental.IIncrementalService$Stub: android.os.incremental.IIncrementalService getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.os.incremental.IIncrementalService$Stub: android.os.incremental.IIncrementalService getDefaultImpl()>();

        r8 = interfaceinvoke $r5.<android.os.incremental.IIncrementalService: byte[] getMetadataById(int,byte[])>(i0, r7);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r8;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        r9 = virtualinvoke r2.<android.os.Parcel: byte[] createByteArray()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public byte[] getMetadataByPath(int, java.lang.String) throws android.os.RemoteException
    {
        android.os.incremental.IIncrementalService$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.os.incremental.IIncrementalService $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7;
        byte[] r8, r9;

        r0 := @this: android.os.incremental.IIncrementalService$Stub$Proxy;

        i0 := @parameter0: int;

        r7 := @parameter1: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.incremental.IIncrementalService");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r7);

        $r3 = r0.<android.os.incremental.IIncrementalService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(13, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.os.incremental.IIncrementalService$Stub: android.os.incremental.IIncrementalService getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.os.incremental.IIncrementalService$Stub: android.os.incremental.IIncrementalService getDefaultImpl()>();

        r8 = interfaceinvoke $r5.<android.os.incremental.IIncrementalService: byte[] getMetadataByPath(int,java.lang.String)>(i0, r7);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r8;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        r9 = virtualinvoke r2.<android.os.Parcel: byte[] createByteArray()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public boolean isFileRangeLoaded(int, java.lang.String, long, long) throws android.os.RemoteException
    {
        android.os.incremental.IIncrementalService$Stub$Proxy r0;
        long l0, l1;
        android.os.Parcel r1, r2;
        android.os.IBinder r3;
        boolean $z0, z1, z2;
        android.os.incremental.IIncrementalService $r4, $r5;
        java.lang.Throwable $r6, $r7, $r8, $r9, $r10, r12;
        int i2, i3;
        java.lang.String r11;

        r0 := @this: android.os.incremental.IIncrementalService$Stub$Proxy;

        i2 := @parameter0: int;

        r11 := @parameter1: java.lang.String;

        l0 := @parameter2: long;

        l1 := @parameter3: long;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.incremental.IIncrementalService");

     label02:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i2);

     label03:
        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r11);

     label04:
        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>(l0);

     label05:
        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>(l1);

        r3 = r0.<android.os.incremental.IIncrementalService$Stub$Proxy: android.os.IBinder mRemote>;

     label06:
        z1 = 0;

     label07:
        $z0 = interfaceinvoke r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(12, r1, r2, 0);

        if $z0 != 0 goto label09;

        $r4 = staticinvoke <android.os.incremental.IIncrementalService$Stub: android.os.incremental.IIncrementalService getDefaultImpl()>();

        if $r4 == null goto label09;

        $r5 = staticinvoke <android.os.incremental.IIncrementalService$Stub: android.os.incremental.IIncrementalService getDefaultImpl()>();

        z2 = interfaceinvoke $r5.<android.os.incremental.IIncrementalService: boolean isFileRangeLoaded(int,java.lang.String,long,long)>(i2, r11, l0, l1);

     label08:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label09:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i3 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label10:
        if i3 == 0 goto label11;

        z1 = 1;

     label11:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label12:
        $r6 := @caughtexception;

        r12 = $r6;

        goto label17;

     label13:
        $r7 := @caughtexception;

        r12 = $r7;

        goto label17;

     label14:
        $r10 := @caughtexception;

        r12 = $r10;

        goto label17;

     label15:
        $r8 := @caughtexception;

        r12 = $r8;

        goto label17;

     label16:
        $r9 := @caughtexception;

        r12 = $r9;

     label17:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw r12;

        catch java.lang.Throwable from label01 to label02 with label16;
        catch java.lang.Throwable from label02 to label03 with label15;
        catch java.lang.Throwable from label03 to label04 with label14;
        catch java.lang.Throwable from label04 to label05 with label13;
        catch java.lang.Throwable from label05 to label06 with label12;
        catch java.lang.Throwable from label07 to label08 with label12;
        catch java.lang.Throwable from label09 to label10 with label12;
    }

    public int makeBindMount(int, java.lang.String, java.lang.String, int) throws android.os.RemoteException
    {
        android.os.incremental.IIncrementalService$Stub$Proxy r0;
        java.lang.String r1, r8;
        int i0, i1, i2, i3;
        android.os.Parcel r2, r3;
        android.os.IBinder $r4;
        boolean $z0;
        android.os.incremental.IIncrementalService $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.os.incremental.IIncrementalService$Stub$Proxy;

        i1 := @parameter0: int;

        r8 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.incremental.IIncrementalService");

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i1);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r8);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<android.os.incremental.IIncrementalService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(4, r2, r3, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.os.incremental.IIncrementalService$Stub: android.os.incremental.IIncrementalService getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.os.incremental.IIncrementalService$Stub: android.os.incremental.IIncrementalService getDefaultImpl()>();

        i2 = interfaceinvoke $r6.<android.os.incremental.IIncrementalService: int makeBindMount(int,java.lang.String,java.lang.String,int)>(i1, r8, r1, i0);

     label2:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return i2;

     label3:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

        i3 = virtualinvoke r3.<android.os.Parcel: int readInt()>();

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return i3;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public int makeDirectories(int, java.lang.String) throws android.os.RemoteException
    {
        android.os.incremental.IIncrementalService$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.os.incremental.IIncrementalService $r4, $r5;
        java.lang.Throwable $r6;
        int i0, i1, i2;
        java.lang.String r7;

        r0 := @this: android.os.incremental.IIncrementalService$Stub$Proxy;

        i0 := @parameter0: int;

        r7 := @parameter1: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.incremental.IIncrementalService");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r7);

        $r3 = r0.<android.os.incremental.IIncrementalService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(7, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.os.incremental.IIncrementalService$Stub: android.os.incremental.IIncrementalService getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.os.incremental.IIncrementalService$Stub: android.os.incremental.IIncrementalService getDefaultImpl()>();

        i1 = interfaceinvoke $r5.<android.os.incremental.IIncrementalService: int makeDirectories(int,java.lang.String)>(i0, r7);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i1;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i2 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i2;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public int makeDirectory(int, java.lang.String) throws android.os.RemoteException
    {
        android.os.incremental.IIncrementalService$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.os.incremental.IIncrementalService $r4, $r5;
        java.lang.Throwable $r6;
        int i0, i1, i2;
        java.lang.String r7;

        r0 := @this: android.os.incremental.IIncrementalService$Stub$Proxy;

        i0 := @parameter0: int;

        r7 := @parameter1: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.incremental.IIncrementalService");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r7);

        $r3 = r0.<android.os.incremental.IIncrementalService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(6, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.os.incremental.IIncrementalService$Stub: android.os.incremental.IIncrementalService getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.os.incremental.IIncrementalService$Stub: android.os.incremental.IIncrementalService getDefaultImpl()>();

        i1 = interfaceinvoke $r5.<android.os.incremental.IIncrementalService: int makeDirectory(int,java.lang.String)>(i0, r7);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i1;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i2 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i2;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public int makeFile(int, java.lang.String, android.os.incremental.IncrementalNewFileParams) throws android.os.RemoteException
    {
        android.os.incremental.IIncrementalService$Stub$Proxy r0;
        android.os.incremental.IncrementalNewFileParams r1;
        android.os.Parcel r2, r3;
        android.os.IBinder $r4;
        boolean $z0;
        android.os.incremental.IIncrementalService $r5, $r6;
        java.lang.Throwable $r7;
        int i0, i1, i2;
        java.lang.String r8;

        r0 := @this: android.os.incremental.IIncrementalService$Stub$Proxy;

        i0 := @parameter0: int;

        r8 := @parameter1: java.lang.String;

        r1 := @parameter2: android.os.incremental.IncrementalNewFileParams;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.incremental.IIncrementalService");

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r8);

     label02:
        if r1 == null goto label05;

     label03:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<android.os.incremental.IncrementalNewFileParams: void writeToParcel(android.os.Parcel,int)>(r2, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        $r4 = r0.<android.os.incremental.IIncrementalService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(8, r2, r3, 0);

        if $z0 != 0 goto label08;

        $r5 = staticinvoke <android.os.incremental.IIncrementalService$Stub: android.os.incremental.IIncrementalService getDefaultImpl()>();

        if $r5 == null goto label08;

        $r6 = staticinvoke <android.os.incremental.IIncrementalService$Stub: android.os.incremental.IIncrementalService getDefaultImpl()>();

        i1 = interfaceinvoke $r6.<android.os.incremental.IIncrementalService: int makeFile(int,java.lang.String,android.os.incremental.IncrementalNewFileParams)>(i0, r8, r1);

     label07:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return i1;

     label08:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

        i2 = virtualinvoke r3.<android.os.Parcel: int readInt()>();

     label09:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return i2;

     label10:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public int makeFileFromRange(int, java.lang.String, java.lang.String, long, long) throws android.os.RemoteException
    {
        android.os.incremental.IIncrementalService$Stub$Proxy r0;
        java.lang.String r1, r12;
        long l0, l1;
        android.os.Parcel r2, r3;
        android.os.IBinder $r4;
        boolean $z0;
        android.os.incremental.IIncrementalService $r5, $r6;
        java.lang.Throwable $r7, $r8, $r9, $r10, $r11, r13;
        int i2, i3, i4;

        r0 := @this: android.os.incremental.IIncrementalService$Stub$Proxy;

        i2 := @parameter0: int;

        r12 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

        l0 := @parameter3: long;

        l1 := @parameter4: long;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.incremental.IIncrementalService");

     label02:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i2);

     label03:
        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r12);

     label04:
        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

     label05:
        virtualinvoke r2.<android.os.Parcel: void writeLong(long)>(l0);

        virtualinvoke r2.<android.os.Parcel: void writeLong(long)>(l1);

        $r4 = r0.<android.os.incremental.IIncrementalService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(9, r2, r3, 0);

        if $z0 != 0 goto label07;

        $r5 = staticinvoke <android.os.incremental.IIncrementalService$Stub: android.os.incremental.IIncrementalService getDefaultImpl()>();

        if $r5 == null goto label07;

        $r6 = staticinvoke <android.os.incremental.IIncrementalService$Stub: android.os.incremental.IIncrementalService getDefaultImpl()>();

        i3 = interfaceinvoke $r6.<android.os.incremental.IIncrementalService: int makeFileFromRange(int,java.lang.String,java.lang.String,long,long)>(i2, r12, r1, l0, l1);

     label06:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return i3;

     label07:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

        i4 = virtualinvoke r3.<android.os.Parcel: int readInt()>();

     label08:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return i4;

     label09:
        $r7 := @caughtexception;

        r13 = $r7;

        goto label14;

     label10:
        $r8 := @caughtexception;

        r13 = $r8;

        goto label14;

     label11:
        $r10 := @caughtexception;

        r13 = $r10;

        goto label14;

     label12:
        $r9 := @caughtexception;

        r13 = $r9;

        goto label14;

     label13:
        $r11 := @caughtexception;

        r13 = $r11;

     label14:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r13;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label02 to label03 with label12;
        catch java.lang.Throwable from label03 to label04 with label11;
        catch java.lang.Throwable from label04 to label05 with label10;
        catch java.lang.Throwable from label05 to label06 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
    }

    public int makeLink(int, java.lang.String, int, java.lang.String) throws android.os.RemoteException
    {
        android.os.incremental.IIncrementalService$Stub$Proxy r0;
        int i0, i1, i2, i3;
        java.lang.String r1, r8;
        android.os.Parcel r2, r3;
        android.os.IBinder $r4;
        boolean $z0;
        android.os.incremental.IIncrementalService $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.os.incremental.IIncrementalService$Stub$Proxy;

        i1 := @parameter0: int;

        r8 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r1 := @parameter3: java.lang.String;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.incremental.IIncrementalService");

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i1);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r8);

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r4 = r0.<android.os.incremental.IIncrementalService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(10, r2, r3, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.os.incremental.IIncrementalService$Stub: android.os.incremental.IIncrementalService getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.os.incremental.IIncrementalService$Stub: android.os.incremental.IIncrementalService getDefaultImpl()>();

        i2 = interfaceinvoke $r6.<android.os.incremental.IIncrementalService: int makeLink(int,java.lang.String,int,java.lang.String)>(i1, r8, i0, r1);

     label2:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return i2;

     label3:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

        i3 = virtualinvoke r3.<android.os.Parcel: int readInt()>();

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return i3;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public int openStorage(java.lang.String) throws android.os.RemoteException
    {
        android.os.incremental.IIncrementalService$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.os.incremental.IIncrementalService $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7;
        int i0, i1;

        r0 := @this: android.os.incremental.IIncrementalService$Stub$Proxy;

        r7 := @parameter0: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.incremental.IIncrementalService");

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r7);

        $r3 = r0.<android.os.incremental.IIncrementalService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.os.incremental.IIncrementalService$Stub: android.os.incremental.IIncrementalService getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.os.incremental.IIncrementalService$Stub: android.os.incremental.IIncrementalService getDefaultImpl()>();

        i0 = interfaceinvoke $r5.<android.os.incremental.IIncrementalService: int openStorage(java.lang.String)>(r7);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i0;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i1;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public boolean startLoading(int) throws android.os.RemoteException
    {
        android.os.incremental.IIncrementalService$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        boolean $z0, z1, z2;
        android.os.incremental.IIncrementalService $r3, $r4;
        java.lang.Throwable $r5;
        int i0, i1;
        android.os.IBinder r6;

        r0 := @this: android.os.incremental.IIncrementalService$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.incremental.IIncrementalService");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        r6 = r0.<android.os.incremental.IIncrementalService$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(15, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r3 = staticinvoke <android.os.incremental.IIncrementalService$Stub: android.os.incremental.IIncrementalService getDefaultImpl()>();

        if $r3 == null goto label5;

        $r4 = staticinvoke <android.os.incremental.IIncrementalService$Stub: android.os.incremental.IIncrementalService getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<android.os.incremental.IIncrementalService: boolean startLoading(int)>(i0);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i1 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public int unlink(int, java.lang.String) throws android.os.RemoteException
    {
        android.os.incremental.IIncrementalService$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.os.incremental.IIncrementalService $r4, $r5;
        java.lang.Throwable $r6;
        int i0, i1, i2;
        java.lang.String r7;

        r0 := @this: android.os.incremental.IIncrementalService$Stub$Proxy;

        i0 := @parameter0: int;

        r7 := @parameter1: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.incremental.IIncrementalService");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r7);

        $r3 = r0.<android.os.incremental.IIncrementalService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(11, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.os.incremental.IIncrementalService$Stub: android.os.incremental.IIncrementalService getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.os.incremental.IIncrementalService$Stub: android.os.incremental.IIncrementalService getDefaultImpl()>();

        i1 = interfaceinvoke $r5.<android.os.incremental.IIncrementalService: int unlink(int,java.lang.String)>(i0, r7);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i1;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i2 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i2;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public boolean waitForNativeBinariesExtraction(int) throws android.os.RemoteException
    {
        android.os.incremental.IIncrementalService$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        boolean $z0, z1, z2;
        android.os.incremental.IIncrementalService $r3, $r4;
        java.lang.Throwable $r5;
        int i0, i1;
        android.os.IBinder r6;

        r0 := @this: android.os.incremental.IIncrementalService$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.incremental.IIncrementalService");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        r6 = r0.<android.os.incremental.IIncrementalService$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(19, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r3 = staticinvoke <android.os.incremental.IIncrementalService$Stub: android.os.incremental.IIncrementalService getDefaultImpl()>();

        if $r3 == null goto label5;

        $r4 = staticinvoke <android.os.incremental.IIncrementalService$Stub: android.os.incremental.IIncrementalService getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<android.os.incremental.IIncrementalService: boolean waitForNativeBinariesExtraction(int)>(i0);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i1 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }
}
