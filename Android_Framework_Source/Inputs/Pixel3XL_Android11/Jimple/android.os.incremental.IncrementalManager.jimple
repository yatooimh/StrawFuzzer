public final class android.os.incremental.IncrementalManager extends java.lang.Object
{
    private static final java.lang.String ALLOWED_PROPERTY;
    public static final int CREATE_MODE_CREATE;
    public static final int CREATE_MODE_OPEN_EXISTING;
    public static final int CREATE_MODE_PERMANENT_BIND;
    public static final int CREATE_MODE_TEMPORARY_BIND;
    private static final java.lang.String TAG;
    private final android.os.incremental.IIncrementalService mService;
    private final android.util.SparseArray mStorages;

    public void <init>(android.os.incremental.IIncrementalService)
    {
        android.os.incremental.IncrementalManager r0;
        android.os.incremental.IIncrementalService r1;
        android.util.SparseArray $r2;

        r0 := @this: android.os.incremental.IncrementalManager;

        r1 := @parameter0: android.os.incremental.IIncrementalService;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new android.util.SparseArray;

        specialinvoke $r2.<android.util.SparseArray: void <init>()>();

        r0.<android.os.incremental.IncrementalManager: android.util.SparseArray mStorages> = $r2;

        r0.<android.os.incremental.IncrementalManager: android.os.incremental.IIncrementalService mService> = r1;

        return;
    }

    public static boolean isAllowed()
    {
        boolean z0, $z1, z2;

        z0 = staticinvoke <android.os.incremental.IncrementalManager: boolean isFeatureEnabled()>();

        z2 = 1;

        if z0 == 0 goto label1;

        $z1 = staticinvoke <android.os.SystemProperties: boolean getBoolean(java.lang.String,boolean)>("incremental.allowed", 1);

        if $z1 == 0 goto label1;

        goto label2;

     label1:
        z2 = 0;

     label2:
        return z2;
    }

    public static boolean isFeatureEnabled()
    {
        boolean $z0;

        $z0 = staticinvoke <android.os.incremental.IncrementalManager: boolean nativeIsEnabled()>();

        return $z0;
    }

    public static boolean isIncrementalPath(java.lang.String)
    {
        java.lang.String r0;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        $z0 = staticinvoke <android.os.incremental.IncrementalManager: boolean nativeIsIncrementalPath(java.lang.String)>(r0);

        return $z0;
    }

    private void linkFiles(android.os.incremental.IncrementalStorage, java.io.File, java.lang.String, android.os.incremental.IncrementalStorage, java.lang.String) throws java.io.IOException
    {
        android.os.incremental.IncrementalManager r0;
        android.os.incremental.IncrementalStorage r1, r3;
        java.io.File r2;
        java.nio.file.Path $r4, $r6, r11, r12;
        java.lang.String[] $r5;
        android.os.incremental.IncrementalManager$1 $r7;
        java.lang.String r9, r10;

        r0 := @this: android.os.incremental.IncrementalManager;

        r1 := @parameter0: android.os.incremental.IncrementalStorage;

        r2 := @parameter1: java.io.File;

        r9 := @parameter2: java.lang.String;

        r3 := @parameter3: android.os.incremental.IncrementalStorage;

        r10 := @parameter4: java.lang.String;

        $r4 = virtualinvoke r2.<java.io.File: java.nio.file.Path toPath()>();

        r11 = interfaceinvoke $r4.<java.nio.file.Path: java.nio.file.Path resolve(java.lang.String)>(r9);

        $r5 = newarray (java.lang.String)[0];

        r12 = staticinvoke <java.nio.file.Paths: java.nio.file.Path get(java.lang.String,java.lang.String[])>(r10, $r5);

        $r6 = virtualinvoke r2.<java.io.File: java.nio.file.Path toPath()>();

        $r7 = new android.os.incremental.IncrementalManager$1;

        specialinvoke $r7.<android.os.incremental.IncrementalManager$1: void <init>(android.os.incremental.IncrementalManager,java.nio.file.Path,android.os.incremental.IncrementalStorage,java.nio.file.Path,android.os.incremental.IncrementalStorage)>(r0, r11, r3, r12, r1);

        staticinvoke <java.nio.file.Files: java.nio.file.Path walkFileTree(java.nio.file.Path,java.nio.file.FileVisitor)>($r6, $r7);

        return;
    }

    private static native boolean nativeIsEnabled();

    private static native boolean nativeIsIncrementalPath(java.lang.String);

    private static native byte[] nativeUnsafeGetFileSignature(java.lang.String);

    public static byte[] unsafeGetFileSignature(java.lang.String)
    {
        java.lang.String r0;
        byte[] $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <android.os.incremental.IncrementalManager: byte[] nativeUnsafeGetFileSignature(java.lang.String)>(r0);

        return $r1;
    }

    public void closeStorage(java.lang.String)
    {
        android.os.incremental.IncrementalManager r0;
        int i0;
        android.util.SparseArray r1, $r4;
        android.os.incremental.IIncrementalService $r2, $r3;
        java.lang.Throwable $r5;
        android.os.RemoteException $r6;
        java.lang.RuntimeException $r7;
        java.lang.String r8;

        r0 := @this: android.os.incremental.IncrementalManager;

        r8 := @parameter0: java.lang.String;

     label1:
        $r2 = r0.<android.os.incremental.IncrementalManager: android.os.incremental.IIncrementalService mService>;

        i0 = interfaceinvoke $r2.<android.os.incremental.IIncrementalService: int openStorage(java.lang.String)>(r8);

     label2:
        if i0 >= 0 goto label3;

        return;

     label3:
        $r3 = r0.<android.os.incremental.IncrementalManager: android.os.incremental.IIncrementalService mService>;

        interfaceinvoke $r3.<android.os.incremental.IIncrementalService: void deleteStorage(int)>(i0);

        r1 = r0.<android.os.incremental.IncrementalManager: android.util.SparseArray mStorages>;

        entermonitor r1;

     label4:
        $r4 = r0.<android.os.incremental.IncrementalManager: android.util.SparseArray mStorages>;

        virtualinvoke $r4.<android.util.SparseArray: void remove(int)>(i0);

        exitmonitor r1;

     label5:
        return;

     label6:
        $r5 := @caughtexception;

     label7:
        exitmonitor r1;

     label8:
        throw $r5;

     label9:
        $r6 := @caughtexception;

        $r7 = virtualinvoke $r6.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r7;

        catch android.os.RemoteException from label1 to label2 with label9;
        catch android.os.RemoteException from label3 to label4 with label9;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
        catch android.os.RemoteException from label8 to label9 with label9;
    }

    public android.os.incremental.IncrementalStorage createStorage(java.lang.String, android.content.pm.DataLoaderParams, int, boolean, android.content.pm.IDataLoaderStatusListener, android.os.incremental.StorageHealthCheckParams, android.os.incremental.IStorageHealthListener)
    {
        android.os.incremental.IncrementalManager r0;
        boolean z0;
        android.content.pm.IDataLoaderStatusListener r1;
        android.os.incremental.StorageHealthCheckParams r2;
        android.os.incremental.IStorageHealthListener r3;
        android.os.incremental.IIncrementalService $r4, $r6;
        android.content.pm.DataLoaderParamsParcel $r5;
        android.util.SparseArray $r7, r14;
        java.lang.Throwable $r8;
        android.os.RemoteException $r9;
        java.lang.RuntimeException $r10;
        java.lang.String r11;
        android.content.pm.DataLoaderParams r12;
        int i0, i1;
        android.os.incremental.IncrementalStorage r13;

        r0 := @this: android.os.incremental.IncrementalManager;

        r11 := @parameter0: java.lang.String;

        r12 := @parameter1: android.content.pm.DataLoaderParams;

        i0 := @parameter2: int;

        z0 := @parameter3: boolean;

        r1 := @parameter4: android.content.pm.IDataLoaderStatusListener;

        r2 := @parameter5: android.os.incremental.StorageHealthCheckParams;

        r3 := @parameter6: android.os.incremental.IStorageHealthListener;

     label01:
        $r4 = r0.<android.os.incremental.IncrementalManager: android.os.incremental.IIncrementalService mService>;

        $r5 = virtualinvoke r12.<android.content.pm.DataLoaderParams: android.content.pm.DataLoaderParamsParcel getData()>();

        i1 = interfaceinvoke $r4.<android.os.incremental.IIncrementalService: int createStorage(java.lang.String,android.content.pm.DataLoaderParamsParcel,int,android.content.pm.IDataLoaderStatusListener,android.os.incremental.StorageHealthCheckParams,android.os.incremental.IStorageHealthListener)>(r11, $r5, i0, r1, r2, r3);

     label02:
        if i1 >= 0 goto label03;

        return null;

     label03:
        r13 = new android.os.incremental.IncrementalStorage;

        $r6 = r0.<android.os.incremental.IncrementalManager: android.os.incremental.IIncrementalService mService>;

        specialinvoke r13.<android.os.incremental.IncrementalStorage: void <init>(android.os.incremental.IIncrementalService,int)>($r6, i1);

        r14 = r0.<android.os.incremental.IncrementalManager: android.util.SparseArray mStorages>;

        entermonitor r14;

     label04:
        $r7 = r0.<android.os.incremental.IncrementalManager: android.util.SparseArray mStorages>;

        virtualinvoke $r7.<android.util.SparseArray: void put(int,java.lang.Object)>(i1, r13);

        exitmonitor r14;

     label05:
        if z0 == 0 goto label07;

     label06:
        virtualinvoke r13.<android.os.incremental.IncrementalStorage: boolean startLoading()>();

     label07:
        return r13;

     label08:
        $r8 := @caughtexception;

     label09:
        exitmonitor r14;

     label10:
        throw $r8;

     label11:
        $r9 := @caughtexception;

        $r10 = virtualinvoke $r9.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r10;

        catch android.os.RemoteException from label01 to label02 with label11;
        catch android.os.RemoteException from label03 to label04 with label11;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch android.os.RemoteException from label06 to label07 with label11;
        catch java.lang.Throwable from label09 to label10 with label08;
        catch android.os.RemoteException from label10 to label11 with label11;
    }

    public android.os.incremental.IncrementalStorage createStorage(java.lang.String, android.os.incremental.IncrementalStorage, int)
    {
        android.os.incremental.IncrementalManager r0;
        android.os.incremental.IIncrementalService $r1, $r2;
        int $i0, i1, i2;
        android.util.SparseArray $r3, r10;
        android.os.RemoteException $r4;
        java.lang.RuntimeException $r5;
        java.lang.Throwable $r6;
        java.lang.String r7;
        android.os.incremental.IncrementalStorage r8, r9;

        r0 := @this: android.os.incremental.IncrementalManager;

        r7 := @parameter0: java.lang.String;

        r8 := @parameter1: android.os.incremental.IncrementalStorage;

        i1 := @parameter2: int;

     label1:
        $r1 = r0.<android.os.incremental.IncrementalManager: android.os.incremental.IIncrementalService mService>;

        $i0 = virtualinvoke r8.<android.os.incremental.IncrementalStorage: int getId()>();

        i2 = interfaceinvoke $r1.<android.os.incremental.IIncrementalService: int createLinkedStorage(java.lang.String,int,int)>(r7, $i0, i1);

     label2:
        if i2 >= 0 goto label3;

        return null;

     label3:
        r9 = new android.os.incremental.IncrementalStorage;

        $r2 = r0.<android.os.incremental.IncrementalManager: android.os.incremental.IIncrementalService mService>;

        specialinvoke r9.<android.os.incremental.IncrementalStorage: void <init>(android.os.incremental.IIncrementalService,int)>($r2, i2);

        r10 = r0.<android.os.incremental.IncrementalManager: android.util.SparseArray mStorages>;

        entermonitor r10;

     label4:
        $r3 = r0.<android.os.incremental.IncrementalManager: android.util.SparseArray mStorages>;

        virtualinvoke $r3.<android.util.SparseArray: void put(int,java.lang.Object)>(i2, r9);

        exitmonitor r10;

     label5:
        return r9;

     label6:
        $r6 := @caughtexception;

     label7:
        exitmonitor r10;

     label8:
        throw $r6;

     label9:
        $r4 := @caughtexception;

        $r5 = virtualinvoke $r4.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r5;

        catch android.os.RemoteException from label1 to label2 with label9;
        catch android.os.RemoteException from label3 to label4 with label9;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
        catch android.os.RemoteException from label8 to label9 with label9;
    }

    public android.os.incremental.IncrementalStorage getStorage(int)
    {
        android.os.incremental.IncrementalManager r0;
        int i0;
        android.util.SparseArray r1, $r2;
        java.lang.Object $r3;
        java.lang.Throwable $r4;
        android.os.incremental.IncrementalStorage r5;

        r0 := @this: android.os.incremental.IncrementalManager;

        i0 := @parameter0: int;

        r1 = r0.<android.os.incremental.IncrementalManager: android.util.SparseArray mStorages>;

        entermonitor r1;

     label1:
        $r2 = r0.<android.os.incremental.IncrementalManager: android.util.SparseArray mStorages>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r5 = (android.os.incremental.IncrementalStorage) $r3;

        exitmonitor r1;

     label2:
        return r5;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public android.os.incremental.IncrementalStorage openStorage(java.lang.String)
    {
        android.os.incremental.IncrementalManager r0;
        int i0;
        android.os.incremental.IIncrementalService $r1, $r2;
        android.util.SparseArray $r3, r9;
        java.lang.Throwable $r4;
        android.os.RemoteException $r5;
        java.lang.RuntimeException $r6;
        java.lang.String r7;
        android.os.incremental.IncrementalStorage r8;

        r0 := @this: android.os.incremental.IncrementalManager;

        r7 := @parameter0: java.lang.String;

     label1:
        $r1 = r0.<android.os.incremental.IncrementalManager: android.os.incremental.IIncrementalService mService>;

        i0 = interfaceinvoke $r1.<android.os.incremental.IIncrementalService: int openStorage(java.lang.String)>(r7);

     label2:
        if i0 >= 0 goto label3;

        return null;

     label3:
        r8 = new android.os.incremental.IncrementalStorage;

        $r2 = r0.<android.os.incremental.IncrementalManager: android.os.incremental.IIncrementalService mService>;

        specialinvoke r8.<android.os.incremental.IncrementalStorage: void <init>(android.os.incremental.IIncrementalService,int)>($r2, i0);

        r9 = r0.<android.os.incremental.IncrementalManager: android.util.SparseArray mStorages>;

        entermonitor r9;

     label4:
        $r3 = r0.<android.os.incremental.IncrementalManager: android.util.SparseArray mStorages>;

        virtualinvoke $r3.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, r8);

        exitmonitor r9;

     label5:
        return r8;

     label6:
        $r4 := @caughtexception;

     label7:
        exitmonitor r9;

     label8:
        throw $r4;

     label9:
        $r5 := @caughtexception;

        $r6 = virtualinvoke $r5.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r6;

        catch android.os.RemoteException from label1 to label2 with label9;
        catch android.os.RemoteException from label3 to label4 with label9;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
        catch android.os.RemoteException from label8 to label9 with label9;
    }

    public void renameCodePath(java.io.File, java.io.File) throws java.lang.IllegalArgumentException, java.io.IOException
    {
        android.os.incremental.IncrementalManager r0;
        java.io.File r1, $r10, r19, r20;
        android.os.incremental.IncrementalStorage r2, r3;
        java.lang.String $r4, $r9, $r15, $r16, $r17, r21;
        java.lang.StringBuilder $r5, $r11;
        java.lang.IllegalArgumentException $r8;
        java.io.IOException $r14;
        java.lang.Exception $r18;

        r0 := @this: android.os.incremental.IncrementalManager;

        r19 := @parameter0: java.io.File;

        r20 := @parameter1: java.io.File;

        r1 = virtualinvoke r19.<java.io.File: java.io.File getAbsoluteFile()>();

        $r4 = virtualinvoke r1.<java.io.File: java.lang.String toString()>();

        r2 = virtualinvoke r0.<android.os.incremental.IncrementalManager: android.os.incremental.IncrementalStorage openStorage(java.lang.String)>($r4);

        if r2 == null goto label5;

        $r10 = virtualinvoke r20.<java.io.File: java.io.File getAbsoluteFile()>();

        r21 = virtualinvoke $r10.<java.io.File: java.lang.String getParent()>();

        r3 = virtualinvoke r0.<android.os.incremental.IncrementalManager: android.os.incremental.IncrementalStorage createStorage(java.lang.String,android.os.incremental.IncrementalStorage,int)>(r21, r2, 6);

        if r3 == null goto label4;

     label1:
        $r16 = virtualinvoke r20.<java.io.File: java.lang.String getName()>();

        specialinvoke r0.<android.os.incremental.IncrementalManager: void linkFiles(android.os.incremental.IncrementalStorage,java.io.File,java.lang.String,android.os.incremental.IncrementalStorage,java.lang.String)>(r2, r1, "", r3, $r16);

        $r17 = virtualinvoke r1.<java.io.File: java.lang.String toString()>();

        virtualinvoke r2.<android.os.incremental.IncrementalStorage: void unBind(java.lang.String)>($r17);

     label2:
        return;

     label3:
        $r18 := @caughtexception;

        virtualinvoke r3.<android.os.incremental.IncrementalStorage: void unBind(java.lang.String)>(r21);

        throw $r18;

     label4:
        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to create linked storage at dir: ");

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r21);

        $r14 = new java.io.IOException;

        $r15 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<java.io.IOException: void <init>(java.lang.String)>($r15);

        throw $r14;

     label5:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not an Incremental path: ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r8 = new java.lang.IllegalArgumentException;

        $r9 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r8;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public static void <clinit>()
    {
        <android.os.incremental.IncrementalManager: java.lang.String TAG> = "IncrementalManager";

        <android.os.incremental.IncrementalManager: int CREATE_MODE_TEMPORARY_BIND> = 1;

        <android.os.incremental.IncrementalManager: int CREATE_MODE_PERMANENT_BIND> = 2;

        <android.os.incremental.IncrementalManager: int CREATE_MODE_OPEN_EXISTING> = 8;

        <android.os.incremental.IncrementalManager: int CREATE_MODE_CREATE> = 4;

        <android.os.incremental.IncrementalManager: java.lang.String ALLOWED_PROPERTY> = "incremental.allowed";

        return;
    }
}
