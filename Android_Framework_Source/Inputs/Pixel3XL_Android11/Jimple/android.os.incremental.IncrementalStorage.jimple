public final class android.os.incremental.IncrementalStorage extends java.lang.Object
{
    private static final int INCFS_MAX_ADD_DATA_SIZE;
    private static final int INCFS_MAX_HASH_SIZE;
    private static final java.lang.String TAG;
    private static final int UUID_BYTE_SIZE;
    private final int mId;
    private final android.os.incremental.IIncrementalService mService;

    public void <init>(android.os.incremental.IIncrementalService, int)
    {
        android.os.incremental.IncrementalStorage r0;
        android.os.incremental.IIncrementalService r1;
        int i0;

        r0 := @this: android.os.incremental.IncrementalStorage;

        r1 := @parameter0: android.os.incremental.IIncrementalService;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.os.incremental.IncrementalStorage: android.os.incremental.IIncrementalService mService> = r1;

        r0.<android.os.incremental.IncrementalStorage: int mId> = i0;

        return;
    }

    public static java.util.UUID bytesToId(byte[]) throws java.lang.IllegalArgumentException
    {
        int $i0, $i1;
        java.lang.StringBuilder $r1;
        java.lang.IllegalArgumentException $r4;
        java.lang.String $r5;
        java.util.UUID $r6;
        long $l2, $l3;
        byte[] r7;
        java.nio.ByteBuffer r8;

        r7 := @parameter0: byte[];

        $i0 = lengthof r7;

        if $i0 != 16 goto label1;

        r8 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>(r7);

        $r6 = new java.util.UUID;

        $l2 = virtualinvoke r8.<java.nio.ByteBuffer: long getLong()>();

        $l3 = virtualinvoke r8.<java.nio.ByteBuffer: long getLong()>();

        specialinvoke $r6.<java.util.UUID: void <init>(long,long)>($l2, $l3);

        return $r6;

     label1:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected array of size 16, got ");

        $i1 = lengthof r7;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r4;
    }

    public static byte[] idToBytes(java.util.UUID)
    {
        java.util.UUID r0;
        java.nio.ByteBuffer r1;
        byte[] $r2, $r5, $r6;
        long $l0, $l1;

        r0 := @parameter0: java.util.UUID;

        if r0 != null goto label1;

        $r6 = newarray (byte)[0];

        return $r6;

     label1:
        $r2 = newarray (byte)[16];

        r1 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>($r2);

        $l0 = virtualinvoke r0.<java.util.UUID: long getMostSignificantBits()>();

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer putLong(long)>($l0);

        $l1 = virtualinvoke r0.<java.util.UUID: long getLeastSignificantBits()>();

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer putLong(long)>($l1);

        $r5 = virtualinvoke r1.<java.nio.ByteBuffer: byte[] array()>();

        return $r5;
    }

    private static void validateV4Signature(byte[]) throws java.io.IOException
    {
        int $i0, $i1, $i2, $i3, $i6, $i7, $i8;
        boolean $z0;
        java.lang.StringBuilder $r0, $r8, $r13, $r24;
        java.io.IOException $r4, $r11, $r16, $r20, $r22, $r28, $r31;
        java.lang.String $r5, $r12, $r17, $r29;
        byte[] $r6, $r7, $r18, $r19, $r21, $r23, $r26, r32;
        byte $b4, $b5;
        java.lang.Throwable $r30;
        android.os.incremental.V4Signature r33;
        android.os.incremental.V4Signature$HashingInfo r34;
        android.os.incremental.V4Signature$SigningInfo r35;

        r32 := @parameter0: byte[];

        if r32 == null goto label11;

        $i0 = lengthof r32;

        if $i0 != 0 goto label01;

        goto label11;

     label01:
        r33 = staticinvoke <android.os.incremental.V4Signature: android.os.incremental.V4Signature readFrom(byte[])>(r32);

     label02:
        $z0 = virtualinvoke r33.<android.os.incremental.V4Signature: boolean isVersionSupported()>();

        if $z0 == 0 goto label09;

        $r6 = r33.<android.os.incremental.V4Signature: byte[] hashingInfo>;

        r34 = staticinvoke <android.os.incremental.V4Signature$HashingInfo: android.os.incremental.V4Signature$HashingInfo fromByteArray(byte[])>($r6);

        $r7 = r33.<android.os.incremental.V4Signature: byte[] signingInfo>;

        r35 = staticinvoke <android.os.incremental.V4Signature$SigningInfo: android.os.incremental.V4Signature$SigningInfo fromByteArray(byte[])>($r7);

        $i2 = r34.<android.os.incremental.V4Signature$HashingInfo: int hashAlgorithm>;

        if $i2 != 1 goto label08;

        $b4 = r34.<android.os.incremental.V4Signature$HashingInfo: byte log2BlockSize>;

        if $b4 != 12 goto label07;

        $r18 = r34.<android.os.incremental.V4Signature$HashingInfo: byte[] salt>;

        if $r18 == null goto label04;

        $r23 = r34.<android.os.incremental.V4Signature$HashingInfo: byte[] salt>;

        $i8 = lengthof $r23;

        if $i8 > 0 goto label03;

        goto label04;

     label03:
        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported salt: ");

        $r26 = r34.<android.os.incremental.V4Signature$HashingInfo: byte[] salt>;

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r26);

        $r28 = new java.io.IOException;

        $r29 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r28.<java.io.IOException: void <init>(java.lang.String)>($r29);

        throw $r28;

     label04:
        $r19 = r34.<android.os.incremental.V4Signature$HashingInfo: byte[] rawRootHash>;

        $i6 = lengthof $r19;

        if $i6 != 32 goto label06;

        $r21 = r35.<android.os.incremental.V4Signature$SigningInfo: byte[] additionalData>;

        $i7 = lengthof $r21;

        if $i7 > 128 goto label05;

        return;

     label05:
        $r22 = new java.io.IOException;

        specialinvoke $r22.<java.io.IOException: void <init>(java.lang.String)>("additionalData has to be at most 128 bytes");

        throw $r22;

     label06:
        $r20 = new java.io.IOException;

        specialinvoke $r20.<java.io.IOException: void <init>(java.lang.String)>("rawRootHash has to be 32 bytes");

        throw $r20;

     label07:
        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported log2BlockSize: ");

        $b5 = r34.<android.os.incremental.V4Signature$HashingInfo: byte log2BlockSize>;

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($b5);

        $r16 = new java.io.IOException;

        $r17 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r16.<java.io.IOException: void <init>(java.lang.String)>($r17);

        throw $r16;

     label08:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported hashAlgorithm: ");

        $i3 = r34.<android.os.incremental.V4Signature$HashingInfo: int hashAlgorithm>;

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r11 = new java.io.IOException;

        $r12 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.io.IOException: void <init>(java.lang.String)>($r12);

        throw $r11;

     label09:
        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("v4 signature version ");

        $i1 = r33.<android.os.incremental.V4Signature: int version>;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not supported");

        $r4 = new java.io.IOException;

        $r5 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.io.IOException: void <init>(java.lang.String)>($r5);

        throw $r4;

     label10:
        $r30 := @caughtexception;

        $r31 = new java.io.IOException;

        specialinvoke $r31.<java.io.IOException: void <init>(java.lang.String,java.lang.Throwable)>("Failed to read v4 signature:", $r30);

        throw $r31;

     label11:
        return;

        catch java.io.IOException from label01 to label02 with label10;
    }

    public void bind(java.lang.String) throws java.io.IOException
    {
        android.os.incremental.IncrementalStorage r0;
        java.lang.String r1;

        r0 := @this: android.os.incremental.IncrementalStorage;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<android.os.incremental.IncrementalStorage: void bind(java.lang.String,java.lang.String)>("", r1);

        return;
    }

    public void bind(java.lang.String, java.lang.String) throws java.io.IOException
    {
        android.os.incremental.IncrementalStorage r0;
        int i0, $i1, $i2;
        android.os.incremental.IIncrementalService $r1;
        java.lang.String $r4, r7, r8;
        android.os.RemoteException $r5;
        java.io.IOException r9;
        java.lang.StringBuilder r10;

        r0 := @this: android.os.incremental.IncrementalStorage;

        r7 := @parameter0: java.lang.String;

        r8 := @parameter1: java.lang.String;

     label1:
        $r1 = r0.<android.os.incremental.IncrementalStorage: android.os.incremental.IIncrementalService mService>;

        $i1 = r0.<android.os.incremental.IncrementalStorage: int mId>;

        i0 = interfaceinvoke $r1.<android.os.incremental.IIncrementalService: int makeBindMount(int,java.lang.String,java.lang.String,int)>($i1, r7, r8, 0);

     label2:
        if i0 < 0 goto label3;

        goto label5;

     label3:
        r9 = new java.io.IOException;

        r10 = new java.lang.StringBuilder;

        specialinvoke r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bind() failed with errno ");

        $i2 = neg i0;

        virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r4 = virtualinvoke r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r9.<java.io.IOException: void <init>(java.lang.String)>($r4);

        throw r9;

     label4:
        $r5 := @caughtexception;

        virtualinvoke $r5.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

     label5:
        return;

        catch android.os.RemoteException from label1 to label2 with label4;
        catch android.os.RemoteException from label3 to label4 with label4;
    }

    public void bindPermanent(java.lang.String) throws java.io.IOException
    {
        android.os.incremental.IncrementalStorage r0;
        java.lang.String r1;

        r0 := @this: android.os.incremental.IncrementalStorage;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<android.os.incremental.IncrementalStorage: void bindPermanent(java.lang.String,java.lang.String)>("", r1);

        return;
    }

    public void bindPermanent(java.lang.String, java.lang.String) throws java.io.IOException
    {
        android.os.incremental.IncrementalStorage r0;
        int i0, $i1, $i2;
        android.os.incremental.IIncrementalService $r1;
        java.lang.String $r4, r7, r8;
        android.os.RemoteException $r5;
        java.io.IOException r9;
        java.lang.StringBuilder r10;

        r0 := @this: android.os.incremental.IncrementalStorage;

        r7 := @parameter0: java.lang.String;

        r8 := @parameter1: java.lang.String;

     label1:
        $r1 = r0.<android.os.incremental.IncrementalStorage: android.os.incremental.IIncrementalService mService>;

        $i1 = r0.<android.os.incremental.IncrementalStorage: int mId>;

        i0 = interfaceinvoke $r1.<android.os.incremental.IIncrementalService: int makeBindMount(int,java.lang.String,java.lang.String,int)>($i1, r7, r8, 1);

     label2:
        if i0 < 0 goto label3;

        goto label5;

     label3:
        r9 = new java.io.IOException;

        r10 = new java.lang.StringBuilder;

        specialinvoke r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bind() permanent failed with errno ");

        $i2 = neg i0;

        virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r4 = virtualinvoke r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r9.<java.io.IOException: void <init>(java.lang.String)>($r4);

        throw r9;

     label4:
        $r5 := @caughtexception;

        virtualinvoke $r5.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

     label5:
        return;

        catch android.os.RemoteException from label1 to label2 with label4;
        catch android.os.RemoteException from label3 to label4 with label4;
    }

    public boolean configureNativeBinaries(java.lang.String, java.lang.String, java.lang.String, boolean)
    {
        android.os.incremental.IncrementalStorage r0;
        java.lang.String r1, r2, r6;
        int $i0;
        android.os.incremental.IIncrementalService $r3;
        android.os.RemoteException $r4;
        boolean z0, z1;

        r0 := @this: android.os.incremental.IncrementalStorage;

        r6 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        z0 := @parameter3: boolean;

     label1:
        $r3 = r0.<android.os.incremental.IncrementalStorage: android.os.incremental.IIncrementalService mService>;

        $i0 = r0.<android.os.incremental.IncrementalStorage: int mId>;

        z1 = interfaceinvoke $r3.<android.os.incremental.IIncrementalService: boolean configureNativeBinaries(int,java.lang.String,java.lang.String,java.lang.String,boolean)>($i0, r6, r1, r2, z0);

     label2:
        return z1;

     label3:
        $r4 := @caughtexception;

        virtualinvoke $r4.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void disableReadLogs()
    {
        android.os.incremental.IncrementalStorage r0;
        int $i0;
        android.os.incremental.IIncrementalService $r2;
        android.os.RemoteException $r3;

        r0 := @this: android.os.incremental.IncrementalStorage;

     label1:
        $r2 = r0.<android.os.incremental.IncrementalStorage: android.os.incremental.IIncrementalService mService>;

        $i0 = r0.<android.os.incremental.IncrementalStorage: int mId>;

        interfaceinvoke $r2.<android.os.incremental.IIncrementalService: void disableReadLogs(int)>($i0);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        virtualinvoke $r3.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public byte[] getFileMetadata(java.lang.String)
    {
        android.os.incremental.IncrementalStorage r0;
        int $i0;
        android.os.incremental.IIncrementalService $r1;
        android.os.RemoteException $r2;
        java.lang.String r4;
        byte[] r5;

        r0 := @this: android.os.incremental.IncrementalStorage;

        r4 := @parameter0: java.lang.String;

     label1:
        $r1 = r0.<android.os.incremental.IncrementalStorage: android.os.incremental.IIncrementalService mService>;

        $i0 = r0.<android.os.incremental.IncrementalStorage: int mId>;

        r5 = interfaceinvoke $r1.<android.os.incremental.IIncrementalService: byte[] getMetadataByPath(int,java.lang.String)>($i0, r4);

     label2:
        return r5;

     label3:
        $r2 := @caughtexception;

        virtualinvoke $r2.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        return null;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public byte[] getFileMetadata(java.util.UUID)
    {
        android.os.incremental.IncrementalStorage r0;
        int $i0;
        android.os.incremental.IIncrementalService $r1;
        android.os.RemoteException $r2;
        java.util.UUID r4;
        byte[] r5, r6;

        r0 := @this: android.os.incremental.IncrementalStorage;

        r4 := @parameter0: java.util.UUID;

     label1:
        r5 = staticinvoke <android.os.incremental.IncrementalStorage: byte[] idToBytes(java.util.UUID)>(r4);

        $r1 = r0.<android.os.incremental.IncrementalStorage: android.os.incremental.IIncrementalService mService>;

        $i0 = r0.<android.os.incremental.IncrementalStorage: int mId>;

        r6 = interfaceinvoke $r1.<android.os.incremental.IIncrementalService: byte[] getMetadataById(int,byte[])>($i0, r5);

     label2:
        return r6;

     label3:
        $r2 := @caughtexception;

        virtualinvoke $r2.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        return null;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public int getId()
    {
        android.os.incremental.IncrementalStorage r0;
        int $i0;

        r0 := @this: android.os.incremental.IncrementalStorage;

        $i0 = r0.<android.os.incremental.IncrementalStorage: int mId>;

        return $i0;
    }

    public boolean isFileFullyLoaded(java.lang.String)
    {
        android.os.incremental.IncrementalStorage r0;
        java.lang.String r1;
        boolean $z0;

        r0 := @this: android.os.incremental.IncrementalStorage;

        r1 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<android.os.incremental.IncrementalStorage: boolean isFileRangeLoaded(java.lang.String,long,long)>(r1, 0L, -1L);

        return $z0;
    }

    public boolean isFileRangeLoaded(java.lang.String, long, long)
    {
        android.os.incremental.IncrementalStorage r0;
        long l0, l1;
        boolean z0;
        int $i2;
        android.os.incremental.IIncrementalService $r1;
        android.os.RemoteException $r2;
        java.lang.String r4;

        r0 := @this: android.os.incremental.IncrementalStorage;

        r4 := @parameter0: java.lang.String;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

     label1:
        $r1 = r0.<android.os.incremental.IncrementalStorage: android.os.incremental.IIncrementalService mService>;

        $i2 = r0.<android.os.incremental.IncrementalStorage: int mId>;

        z0 = interfaceinvoke $r1.<android.os.incremental.IIncrementalService: boolean isFileRangeLoaded(int,java.lang.String,long,long)>($i2, r4, l0, l1);

     label2:
        return z0;

     label3:
        $r2 := @caughtexception;

        virtualinvoke $r2.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void makeDirectories(java.lang.String) throws java.io.IOException
    {
        android.os.incremental.IncrementalStorage r0;
        int i0, $i1, $i2;
        java.io.IOException r1;
        android.os.incremental.IIncrementalService $r2;
        java.lang.String $r5, r8;
        android.os.RemoteException $r6;
        java.lang.StringBuilder r9;

        r0 := @this: android.os.incremental.IncrementalStorage;

        r8 := @parameter0: java.lang.String;

     label1:
        $r2 = r0.<android.os.incremental.IncrementalStorage: android.os.incremental.IIncrementalService mService>;

        $i1 = r0.<android.os.incremental.IncrementalStorage: int mId>;

        i0 = interfaceinvoke $r2.<android.os.incremental.IIncrementalService: int makeDirectories(int,java.lang.String)>($i1, r8);

     label2:
        if i0 < 0 goto label3;

        goto label5;

     label3:
        r1 = new java.io.IOException;

        r9 = new java.lang.StringBuilder;

        specialinvoke r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("makeDirectory() failed with errno ");

        $i2 = neg i0;

        virtualinvoke r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r5 = virtualinvoke r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r1.<java.io.IOException: void <init>(java.lang.String)>($r5);

        throw r1;

     label4:
        $r6 := @caughtexception;

        virtualinvoke $r6.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

     label5:
        return;

        catch android.os.RemoteException from label1 to label2 with label4;
        catch android.os.RemoteException from label3 to label4 with label4;
    }

    public void makeDirectory(java.lang.String) throws java.io.IOException
    {
        android.os.incremental.IncrementalStorage r0;
        int i0, $i1, $i2;
        java.lang.StringBuilder r1;
        android.os.incremental.IIncrementalService $r2;
        java.lang.String $r5, r8;
        android.os.RemoteException $r6;
        java.io.IOException r9;

        r0 := @this: android.os.incremental.IncrementalStorage;

        r8 := @parameter0: java.lang.String;

     label1:
        $r2 = r0.<android.os.incremental.IncrementalStorage: android.os.incremental.IIncrementalService mService>;

        $i1 = r0.<android.os.incremental.IncrementalStorage: int mId>;

        i0 = interfaceinvoke $r2.<android.os.incremental.IIncrementalService: int makeDirectory(int,java.lang.String)>($i1, r8);

     label2:
        if i0 < 0 goto label3;

        goto label5;

     label3:
        r9 = new java.io.IOException;

        r1 = new java.lang.StringBuilder;

        specialinvoke r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("makeDirectory() failed with errno ");

        $i2 = neg i0;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r5 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r9.<java.io.IOException: void <init>(java.lang.String)>($r5);

        throw r9;

     label4:
        $r6 := @caughtexception;

        virtualinvoke $r6.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

     label5:
        return;

        catch android.os.RemoteException from label1 to label2 with label4;
        catch android.os.RemoteException from label3 to label4 with label4;
    }

    public void makeFile(java.lang.String, long, java.util.UUID, byte[], byte[]) throws java.io.IOException
    {
        android.os.incremental.IncrementalStorage r0;
        long l0;
        byte[] r1, $r3, r12;
        android.os.incremental.IncrementalNewFileParams r2;
        int i1, $i2, $i3;
        android.os.incremental.IIncrementalService $r4;
        java.lang.String $r7, r10;
        android.os.RemoteException $r8;
        java.util.UUID r11;
        java.io.IOException r13, r14;
        java.lang.StringBuilder r15;

        r0 := @this: android.os.incremental.IncrementalStorage;

        r10 := @parameter0: java.lang.String;

        l0 := @parameter1: long;

        r11 := @parameter2: java.util.UUID;

        r12 := @parameter3: byte[];

        r1 := @parameter4: byte[];

        if r11 != null goto label02;

        if r12 == null goto label01;

        goto label02;

     label01:
        r13 = new java.io.IOException;

        specialinvoke r13.<java.io.IOException: void <init>(java.lang.String)>("File ID and metadata cannot both be null");

        throw r13;

     label02:
        staticinvoke <android.os.incremental.IncrementalStorage: void validateV4Signature(byte[])>(r1);

        r2 = new android.os.incremental.IncrementalNewFileParams;

        specialinvoke r2.<android.os.incremental.IncrementalNewFileParams: void <init>()>();

        r2.<android.os.incremental.IncrementalNewFileParams: long size> = l0;

     label03:
        if r12 != null goto label06;

     label04:
        r12 = newarray (byte)[0];

     label05:
        goto label06;

     label06:
        r2.<android.os.incremental.IncrementalNewFileParams: byte[] metadata> = r12;

        $r3 = staticinvoke <android.os.incremental.IncrementalStorage: byte[] idToBytes(java.util.UUID)>(r11);

        r2.<android.os.incremental.IncrementalNewFileParams: byte[] fileId> = $r3;

        r2.<android.os.incremental.IncrementalNewFileParams: byte[] signature> = r1;

        $r4 = r0.<android.os.incremental.IncrementalStorage: android.os.incremental.IIncrementalService mService>;

        $i2 = r0.<android.os.incremental.IncrementalStorage: int mId>;

        i1 = interfaceinvoke $r4.<android.os.incremental.IIncrementalService: int makeFile(int,java.lang.String,android.os.incremental.IncrementalNewFileParams)>($i2, r10, r2);

     label07:
        if i1 != 0 goto label08;

        goto label10;

     label08:
        r14 = new java.io.IOException;

        r15 = new java.lang.StringBuilder;

        specialinvoke r15.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("makeFile() failed with errno ");

        $i3 = neg i1;

        virtualinvoke r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r7 = virtualinvoke r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r14.<java.io.IOException: void <init>(java.lang.String)>($r7);

        throw r14;

     label09:
        $r8 := @caughtexception;

        virtualinvoke $r8.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

     label10:
        return;

        catch android.os.RemoteException from label01 to label02 with label09;
        catch android.os.RemoteException from label02 to label03 with label09;
        catch android.os.RemoteException from label04 to label05 with label09;
        catch android.os.RemoteException from label06 to label07 with label09;
        catch android.os.RemoteException from label08 to label09 with label09;
    }

    public void makeFileFromRange(java.lang.String, java.lang.String, long, long) throws java.io.IOException
    {
        android.os.incremental.IncrementalStorage r0;
        long l0, l1;
        int i2, $i3, $i4;
        android.os.incremental.IIncrementalService $r1;
        java.lang.String $r4, r7, r8;
        android.os.RemoteException $r5;
        java.io.IOException r9;
        java.lang.StringBuilder r10;

        r0 := @this: android.os.incremental.IncrementalStorage;

        r7 := @parameter0: java.lang.String;

        r8 := @parameter1: java.lang.String;

        l0 := @parameter2: long;

        l1 := @parameter3: long;

     label1:
        $r1 = r0.<android.os.incremental.IncrementalStorage: android.os.incremental.IIncrementalService mService>;

        $i3 = r0.<android.os.incremental.IncrementalStorage: int mId>;

        i2 = interfaceinvoke $r1.<android.os.incremental.IIncrementalService: int makeFileFromRange(int,java.lang.String,java.lang.String,long,long)>($i3, r7, r8, l0, l1);

     label2:
        if i2 < 0 goto label3;

        goto label5;

     label3:
        r9 = new java.io.IOException;

        r10 = new java.lang.StringBuilder;

        specialinvoke r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("makeFileFromRange() failed, errno ");

        $i4 = neg i2;

        virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r4 = virtualinvoke r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r9.<java.io.IOException: void <init>(java.lang.String)>($r4);

        throw r9;

     label4:
        $r5 := @caughtexception;

        virtualinvoke $r5.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

     label5:
        return;

        catch android.os.RemoteException from label1 to label2 with label4;
        catch android.os.RemoteException from label3 to label4 with label4;
    }

    public void makeLink(java.lang.String, android.os.incremental.IncrementalStorage, java.lang.String) throws java.io.IOException
    {
        android.os.incremental.IncrementalStorage r0, r9;
        java.lang.String r1, $r5, r8;
        int i0, $i1, $i2, $i3;
        android.os.incremental.IIncrementalService $r2;
        android.os.RemoteException $r6;
        java.io.IOException r10;
        java.lang.StringBuilder r11;

        r0 := @this: android.os.incremental.IncrementalStorage;

        r8 := @parameter0: java.lang.String;

        r9 := @parameter1: android.os.incremental.IncrementalStorage;

        r1 := @parameter2: java.lang.String;

     label1:
        $r2 = r0.<android.os.incremental.IncrementalStorage: android.os.incremental.IIncrementalService mService>;

        $i1 = r0.<android.os.incremental.IncrementalStorage: int mId>;

        $i2 = virtualinvoke r9.<android.os.incremental.IncrementalStorage: int getId()>();

        i0 = interfaceinvoke $r2.<android.os.incremental.IIncrementalService: int makeLink(int,java.lang.String,int,java.lang.String)>($i1, r8, $i2, r1);

     label2:
        if i0 < 0 goto label3;

        goto label5;

     label3:
        r10 = new java.io.IOException;

        r11 = new java.lang.StringBuilder;

        specialinvoke r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("makeLink() failed with errno ");

        $i3 = neg i0;

        virtualinvoke r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r5 = virtualinvoke r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r10.<java.io.IOException: void <init>(java.lang.String)>($r5);

        throw r10;

     label4:
        $r6 := @caughtexception;

        virtualinvoke $r6.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

     label5:
        return;

        catch android.os.RemoteException from label1 to label2 with label4;
        catch android.os.RemoteException from label3 to label4 with label4;
    }

    public void moveDir(java.lang.String, java.lang.String) throws java.io.IOException
    {
        android.os.incremental.IncrementalStorage r0;
        int i0, $i1, $i2, $i3;
        java.io.IOException r1, $r3;
        java.io.File $r2;
        boolean $z0;
        android.os.incremental.IIncrementalService $r4, $r8;
        java.lang.String $r7, r12, r13;
        android.os.RemoteException $r9, $r10;
        java.lang.StringBuilder r14;

        r0 := @this: android.os.incremental.IncrementalStorage;

        r12 := @parameter0: java.lang.String;

        r13 := @parameter1: java.lang.String;

        $r2 = new java.io.File;

        specialinvoke $r2.<java.io.File: void <init>(java.lang.String)>(r13);

        $z0 = virtualinvoke $r2.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label9;

     label1:
        $r4 = r0.<android.os.incremental.IncrementalStorage: android.os.incremental.IIncrementalService mService>;

        $i1 = r0.<android.os.incremental.IncrementalStorage: int mId>;

        i0 = interfaceinvoke $r4.<android.os.incremental.IIncrementalService: int makeBindMount(int,java.lang.String,java.lang.String,int)>($i1, r12, r13, 1);

     label2:
        if i0 < 0 goto label3;

        goto label5;

     label3:
        r1 = new java.io.IOException;

        r14 = new java.lang.StringBuilder;

        specialinvoke r14.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("moveDir() failed at making bind mount, errno ");

        $i2 = neg i0;

        virtualinvoke r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r7 = virtualinvoke r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r1.<java.io.IOException: void <init>(java.lang.String)>($r7);

        throw r1;

     label4:
        $r10 := @caughtexception;

        virtualinvoke $r10.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

     label5:
        $r8 = r0.<android.os.incremental.IncrementalStorage: android.os.incremental.IIncrementalService mService>;

        $i3 = r0.<android.os.incremental.IncrementalStorage: int mId>;

        interfaceinvoke $r8.<android.os.incremental.IIncrementalService: int deleteBindMount(int,java.lang.String)>($i3, r12);

     label6:
        goto label8;

     label7:
        $r9 := @caughtexception;

     label8:
        return;

     label9:
        $r3 = new java.io.IOException;

        specialinvoke $r3.<java.io.IOException: void <init>(java.lang.String)>("moveDir() requires that destination dir already exists.");

        throw $r3;

        catch android.os.RemoteException from label1 to label2 with label4;
        catch android.os.RemoteException from label3 to label4 with label4;
        catch android.os.RemoteException from label5 to label6 with label7;
    }

    public void moveFile(java.lang.String, java.lang.String) throws java.io.IOException
    {
        android.os.incremental.IncrementalStorage r0;
        int i0, $i1, $i2, $i3, $i4;
        java.lang.StringBuilder r1;
        android.os.incremental.IIncrementalService $r2, $r6;
        java.lang.String $r5, r10, r11;
        android.os.RemoteException $r7, $r8;
        java.io.IOException r12;

        r0 := @this: android.os.incremental.IncrementalStorage;

        r10 := @parameter0: java.lang.String;

        r11 := @parameter1: java.lang.String;

     label1:
        $r2 = r0.<android.os.incremental.IncrementalStorage: android.os.incremental.IIncrementalService mService>;

        $i2 = r0.<android.os.incremental.IncrementalStorage: int mId>;

        $i1 = r0.<android.os.incremental.IncrementalStorage: int mId>;

        i0 = interfaceinvoke $r2.<android.os.incremental.IIncrementalService: int makeLink(int,java.lang.String,int,java.lang.String)>($i2, r10, $i1, r11);

     label2:
        if i0 < 0 goto label3;

        goto label5;

     label3:
        r12 = new java.io.IOException;

        r1 = new java.lang.StringBuilder;

        specialinvoke r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("moveFile() failed at makeLink(), errno ");

        $i3 = neg i0;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r5 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r12.<java.io.IOException: void <init>(java.lang.String)>($r5);

        throw r12;

     label4:
        $r8 := @caughtexception;

        virtualinvoke $r8.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

     label5:
        $r6 = r0.<android.os.incremental.IncrementalStorage: android.os.incremental.IIncrementalService mService>;

        $i4 = r0.<android.os.incremental.IncrementalStorage: int mId>;

        interfaceinvoke $r6.<android.os.incremental.IIncrementalService: int unlink(int,java.lang.String)>($i4, r10);

     label6:
        goto label8;

     label7:
        $r7 := @caughtexception;

     label8:
        return;

        catch android.os.RemoteException from label1 to label2 with label4;
        catch android.os.RemoteException from label3 to label4 with label4;
        catch android.os.RemoteException from label5 to label6 with label7;
    }

    public boolean startLoading()
    {
        android.os.incremental.IncrementalStorage r0;
        boolean z0;
        int $i0;
        android.os.incremental.IIncrementalService $r2;
        android.os.RemoteException $r3;

        r0 := @this: android.os.incremental.IncrementalStorage;

     label1:
        $r2 = r0.<android.os.incremental.IncrementalStorage: android.os.incremental.IIncrementalService mService>;

        $i0 = r0.<android.os.incremental.IncrementalStorage: int mId>;

        z0 = interfaceinvoke $r2.<android.os.incremental.IIncrementalService: boolean startLoading(int)>($i0);

     label2:
        return z0;

     label3:
        $r3 := @caughtexception;

        virtualinvoke $r3.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void unBind(java.lang.String) throws java.io.IOException
    {
        android.os.incremental.IncrementalStorage r0;
        int i0, $i1, $i2;
        java.lang.StringBuilder r1;
        android.os.incremental.IIncrementalService $r2;
        java.lang.String $r5, r8;
        android.os.RemoteException $r6;
        java.io.IOException r9;

        r0 := @this: android.os.incremental.IncrementalStorage;

        r8 := @parameter0: java.lang.String;

     label1:
        $r2 = r0.<android.os.incremental.IncrementalStorage: android.os.incremental.IIncrementalService mService>;

        $i1 = r0.<android.os.incremental.IncrementalStorage: int mId>;

        i0 = interfaceinvoke $r2.<android.os.incremental.IIncrementalService: int deleteBindMount(int,java.lang.String)>($i1, r8);

     label2:
        if i0 < 0 goto label3;

        goto label5;

     label3:
        r9 = new java.io.IOException;

        r1 = new java.lang.StringBuilder;

        specialinvoke r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unbind() failed with errno ");

        $i2 = neg i0;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r5 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r9.<java.io.IOException: void <init>(java.lang.String)>($r5);

        throw r9;

     label4:
        $r6 := @caughtexception;

        virtualinvoke $r6.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

     label5:
        return;

        catch android.os.RemoteException from label1 to label2 with label4;
        catch android.os.RemoteException from label3 to label4 with label4;
    }

    public void unlink(java.lang.String) throws java.io.IOException
    {
        android.os.incremental.IncrementalStorage r0;
        int i0, $i1, $i2;
        java.lang.StringBuilder r1;
        android.os.incremental.IIncrementalService $r2;
        java.lang.String $r5, r8;
        android.os.RemoteException $r6;
        java.io.IOException r9;

        r0 := @this: android.os.incremental.IncrementalStorage;

        r8 := @parameter0: java.lang.String;

     label1:
        $r2 = r0.<android.os.incremental.IncrementalStorage: android.os.incremental.IIncrementalService mService>;

        $i1 = r0.<android.os.incremental.IncrementalStorage: int mId>;

        i0 = interfaceinvoke $r2.<android.os.incremental.IIncrementalService: int unlink(int,java.lang.String)>($i1, r8);

     label2:
        if i0 < 0 goto label3;

        goto label5;

     label3:
        r9 = new java.io.IOException;

        r1 = new java.lang.StringBuilder;

        specialinvoke r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unlink() failed with errno ");

        $i2 = neg i0;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r5 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r9.<java.io.IOException: void <init>(java.lang.String)>($r5);

        throw r9;

     label4:
        $r6 := @caughtexception;

        virtualinvoke $r6.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

     label5:
        return;

        catch android.os.RemoteException from label1 to label2 with label4;
        catch android.os.RemoteException from label3 to label4 with label4;
    }

    public boolean waitForNativeBinariesExtraction()
    {
        android.os.incremental.IncrementalStorage r0;
        boolean z0;
        int $i0;
        android.os.incremental.IIncrementalService $r2;
        android.os.RemoteException $r3;

        r0 := @this: android.os.incremental.IncrementalStorage;

     label1:
        $r2 = r0.<android.os.incremental.IncrementalStorage: android.os.incremental.IIncrementalService mService>;

        $i0 = r0.<android.os.incremental.IncrementalStorage: int mId>;

        z0 = interfaceinvoke $r2.<android.os.incremental.IIncrementalService: boolean waitForNativeBinariesExtraction(int)>($i0);

     label2:
        return z0;

     label3:
        $r3 := @caughtexception;

        virtualinvoke $r3.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public static void <clinit>()
    {
        <android.os.incremental.IncrementalStorage: int UUID_BYTE_SIZE> = 16;

        <android.os.incremental.IncrementalStorage: java.lang.String TAG> = "IncrementalStorage";

        <android.os.incremental.IncrementalStorage: int INCFS_MAX_HASH_SIZE> = 32;

        <android.os.incremental.IncrementalStorage: int INCFS_MAX_ADD_DATA_SIZE> = 128;

        return;
    }
}
