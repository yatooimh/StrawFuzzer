public class android.os.storage.DiskInfo extends java.lang.Object implements android.os.Parcelable
{
    public static final java.lang.String ACTION_DISK_SCANNED;
    public static final android.os.Parcelable$Creator CREATOR;
    public static final java.lang.String EXTRA_DISK_ID;
    public static final java.lang.String EXTRA_VOLUME_COUNT;
    public static final int FLAG_ADOPTABLE;
    public static final int FLAG_DEFAULT_PRIMARY;
    public static final int FLAG_SD;
    public static final int FLAG_USB;
    public final int flags;
    public final java.lang.String id;
    public java.lang.String label;
    public long size;
    public java.lang.String sysPath;
    public int volumeCount;

    static void <clinit>()
    {
        android.os.storage.DiskInfo$1 $r0;

        <android.os.storage.DiskInfo: int FLAG_USB> = 8;

        <android.os.storage.DiskInfo: int FLAG_SD> = 4;

        <android.os.storage.DiskInfo: int FLAG_DEFAULT_PRIMARY> = 2;

        <android.os.storage.DiskInfo: int FLAG_ADOPTABLE> = 1;

        <android.os.storage.DiskInfo: java.lang.String EXTRA_VOLUME_COUNT> = "android.os.storage.extra.VOLUME_COUNT";

        <android.os.storage.DiskInfo: java.lang.String EXTRA_DISK_ID> = "android.os.storage.extra.DISK_ID";

        <android.os.storage.DiskInfo: java.lang.String ACTION_DISK_SCANNED> = "android.os.storage.action.DISK_SCANNED";

        $r0 = new android.os.storage.DiskInfo$1;

        specialinvoke $r0.<android.os.storage.DiskInfo$1: void <init>()>();

        <android.os.storage.DiskInfo: android.os.Parcelable$Creator CREATOR> = $r0;

        return;
    }

    public void <init>(android.os.Parcel)
    {
        android.os.storage.DiskInfo r0;
        android.os.Parcel r1;
        java.lang.String $r2, $r3, $r4;
        int $i0, $i2;
        long $l1;

        r0 := @this: android.os.storage.DiskInfo;

        r1 := @parameter0: android.os.Parcel;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r0.<android.os.storage.DiskInfo: java.lang.String id> = $r2;

        $i0 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.os.storage.DiskInfo: int flags> = $i0;

        $l1 = virtualinvoke r1.<android.os.Parcel: long readLong()>();

        r0.<android.os.storage.DiskInfo: long size> = $l1;

        $r3 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r0.<android.os.storage.DiskInfo: java.lang.String label> = $r3;

        $i2 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.os.storage.DiskInfo: int volumeCount> = $i2;

        $r4 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r0.<android.os.storage.DiskInfo: java.lang.String sysPath> = $r4;

        return;
    }

    public void <init>(java.lang.String, int)
    {
        android.os.storage.DiskInfo r0;
        java.lang.String r1, $r3;
        int i0;
        java.lang.Object $r2;

        r0 := @this: android.os.storage.DiskInfo;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r3 = (java.lang.String) $r2;

        r0.<android.os.storage.DiskInfo: java.lang.String id> = $r3;

        r0.<android.os.storage.DiskInfo: int flags> = i0;

        return;
    }

    private boolean isInteresting(java.lang.String)
    {
        android.os.storage.DiskInfo r0;
        java.lang.String r1, $r2, $r3, $r4;
        boolean $z0, $z1, $z2, $z3, $z4;

        r0 := @this: android.os.storage.DiskInfo;

        r1 := @parameter0: java.lang.String;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $z1 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("ata");

        if $z1 == 0 goto label2;

        return 0;

     label2:
        $r2 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase()>();

        $z2 = virtualinvoke $r2.<java.lang.String: boolean contains(java.lang.CharSequence)>("generic");

        if $z2 == 0 goto label3;

        return 0;

     label3:
        $r3 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase()>();

        $z3 = virtualinvoke $r3.<java.lang.String: boolean startsWith(java.lang.String)>("usb");

        if $z3 == 0 goto label4;

        return 0;

     label4:
        $r4 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase()>();

        $z4 = virtualinvoke $r4.<java.lang.String: boolean startsWith(java.lang.String)>("multiple");

        if $z4 == 0 goto label5;

        return 0;

     label5:
        return 1;
    }

    public android.os.storage.DiskInfo clone()
    {
        android.os.storage.DiskInfo r0, r5;
        android.os.Parcel r1;
        android.os.Parcelable$Creator $r2;
        java.lang.Object $r3;
        java.lang.Throwable $r4;

        r0 := @this: android.os.storage.DiskInfo;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r0.<android.os.storage.DiskInfo: void writeToParcel(android.os.Parcel,int)>(r1, 0);

        virtualinvoke r1.<android.os.Parcel: void setDataPosition(int)>(0);

        $r2 = <android.os.storage.DiskInfo: android.os.Parcelable$Creator CREATOR>;

        $r3 = interfaceinvoke $r2.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r1);

        r5 = (android.os.storage.DiskInfo) $r3;

     label2:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r5;

     label3:
        $r4 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public volatile java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        android.os.storage.DiskInfo r0, $r1;

        r0 := @this: android.os.storage.DiskInfo;

        $r1 = virtualinvoke r0.<android.os.storage.DiskInfo: android.os.storage.DiskInfo clone()>();

        return $r1;
    }

    public int describeContents()
    {
        android.os.storage.DiskInfo r0;

        r0 := @this: android.os.storage.DiskInfo;

        return 0;
    }

    public void dump(com.android.internal.util.IndentingPrintWriter)
    {
        android.os.storage.DiskInfo r0;
        com.android.internal.util.IndentingPrintWriter r1;
        java.lang.StringBuilder $r3;
        java.lang.String $r5, $r8, $r11, $r15, $r17;
        java.lang.Class $r10;
        int $i0;
        long $l1;
        java.lang.Long $r13;

        r0 := @this: android.os.storage.DiskInfo;

        r1 := @parameter0: com.android.internal.util.IndentingPrintWriter;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DiskInfo{");

        $r5 = r0.<android.os.storage.DiskInfo: java.lang.String id>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}:");

        $r8 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>($r8);

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter increaseIndent()>();

        $r10 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $i0 = r0.<android.os.storage.DiskInfo: int flags>;

        $r11 = staticinvoke <android.util.DebugUtils: java.lang.String flagsToString(java.lang.Class,java.lang.String,int)>($r10, "FLAG_", $i0);

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter printPair(java.lang.String,java.lang.Object)>("flags", $r11);

        $l1 = r0.<android.os.storage.DiskInfo: long size>;

        $r13 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter printPair(java.lang.String,java.lang.Object)>("size", $r13);

        $r15 = r0.<android.os.storage.DiskInfo: java.lang.String label>;

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter printPair(java.lang.String,java.lang.Object)>("label", $r15);

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void println()>();

        $r17 = r0.<android.os.storage.DiskInfo: java.lang.String sysPath>;

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter printPair(java.lang.String,java.lang.Object)>("sysPath", $r17);

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter decreaseIndent()>();

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void println()>();

        return;
    }

    public boolean equals(java.lang.Object)
    {
        android.os.storage.DiskInfo r0, $r2;
        java.lang.Object r1;
        boolean $z0, $z1;
        java.lang.String $r3, $r4;

        r0 := @this: android.os.storage.DiskInfo;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof android.os.storage.DiskInfo;

        if $z0 == 0 goto label1;

        $r4 = r0.<android.os.storage.DiskInfo: java.lang.String id>;

        $r2 = (android.os.storage.DiskInfo) r1;

        $r3 = $r2.<android.os.storage.DiskInfo: java.lang.String id>;

        $z1 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r4, $r3);

        return $z1;

     label1:
        return 0;
    }

    public java.lang.String getDescription()
    {
        android.os.storage.DiskInfo r0;
        android.content.res.Resources r1;
        int i0, $i1, $i2;
        java.lang.String $r2, $r3, $r5, $r6, $r7, $r8, $r10, $r11;
        boolean $z0, $z1;
        java.lang.Object[] $r4, $r9;

        r0 := @this: android.os.storage.DiskInfo;

        r1 = staticinvoke <android.content.res.Resources: android.content.res.Resources getSystem()>();

        i0 = r0.<android.os.storage.DiskInfo: int flags>;

        $i1 = i0 & 4;

        if $i1 == 0 goto label2;

        $r7 = r0.<android.os.storage.DiskInfo: java.lang.String label>;

        $z1 = specialinvoke r0.<android.os.storage.DiskInfo: boolean isInteresting(java.lang.String)>($r7);

        if $z1 == 0 goto label1;

        $r9 = newarray (java.lang.Object)[1];

        $r10 = r0.<android.os.storage.DiskInfo: java.lang.String label>;

        $r9[0] = $r10;

        $r11 = virtualinvoke r1.<android.content.res.Resources: java.lang.String getString(int,java.lang.Object[])>(17041327, $r9);

        return $r11;

     label1:
        $r8 = virtualinvoke r1.<android.content.res.Resources: java.lang.String getString(int)>(17041326);

        return $r8;

     label2:
        $i2 = i0 & 8;

        if $i2 == 0 goto label4;

        $r2 = r0.<android.os.storage.DiskInfo: java.lang.String label>;

        $z0 = specialinvoke r0.<android.os.storage.DiskInfo: boolean isInteresting(java.lang.String)>($r2);

        if $z0 == 0 goto label3;

        $r4 = newarray (java.lang.Object)[1];

        $r5 = r0.<android.os.storage.DiskInfo: java.lang.String label>;

        $r4[0] = $r5;

        $r6 = virtualinvoke r1.<android.content.res.Resources: java.lang.String getString(int,java.lang.Object[])>(17041330, $r4);

        return $r6;

     label3:
        $r3 = virtualinvoke r1.<android.content.res.Resources: java.lang.String getString(int)>(17041329);

        return $r3;

     label4:
        return null;
    }

    public java.lang.String getId()
    {
        android.os.storage.DiskInfo r0;
        java.lang.String $r1;

        r0 := @this: android.os.storage.DiskInfo;

        $r1 = r0.<android.os.storage.DiskInfo: java.lang.String id>;

        return $r1;
    }

    public java.lang.String getShortDescription()
    {
        android.os.storage.DiskInfo r0;
        android.content.res.Resources r1;
        boolean $z0, $z1;
        java.lang.String $r2, $r3;

        r0 := @this: android.os.storage.DiskInfo;

        r1 = staticinvoke <android.content.res.Resources: android.content.res.Resources getSystem()>();

        $z0 = virtualinvoke r0.<android.os.storage.DiskInfo: boolean isSd()>();

        if $z0 == 0 goto label1;

        $r3 = virtualinvoke r1.<android.content.res.Resources: java.lang.String getString(int)>(17041326);

        return $r3;

     label1:
        $z1 = virtualinvoke r0.<android.os.storage.DiskInfo: boolean isUsb()>();

        if $z1 == 0 goto label2;

        $r2 = virtualinvoke r1.<android.content.res.Resources: java.lang.String getString(int)>(17041329);

        return $r2;

     label2:
        return null;
    }

    public int hashCode()
    {
        android.os.storage.DiskInfo r0;
        java.lang.String $r1;
        int $i0;

        r0 := @this: android.os.storage.DiskInfo;

        $r1 = r0.<android.os.storage.DiskInfo: java.lang.String id>;

        $i0 = virtualinvoke $r1.<java.lang.String: int hashCode()>();

        return $i0;
    }

    public boolean isAdoptable()
    {
        android.os.storage.DiskInfo r0;
        int i0, $i1;
        boolean z0;

        r0 := @this: android.os.storage.DiskInfo;

        i0 = r0.<android.os.storage.DiskInfo: int flags>;

        z0 = 1;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public boolean isDefaultPrimary()
    {
        android.os.storage.DiskInfo r0;
        int $i0, $i1;
        boolean z0;

        r0 := @this: android.os.storage.DiskInfo;

        $i0 = r0.<android.os.storage.DiskInfo: int flags>;

        $i1 = $i0 & 2;

        if $i1 == 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public boolean isSd()
    {
        android.os.storage.DiskInfo r0;
        int $i0, $i1;
        boolean z0;

        r0 := @this: android.os.storage.DiskInfo;

        $i0 = r0.<android.os.storage.DiskInfo: int flags>;

        $i1 = $i0 & 4;

        if $i1 == 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public boolean isUsb()
    {
        android.os.storage.DiskInfo r0;
        int $i0, $i1;
        boolean z0;

        r0 := @this: android.os.storage.DiskInfo;

        $i0 = r0.<android.os.storage.DiskInfo: int flags>;

        $i1 = $i0 & 8;

        if $i1 == 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public java.lang.String toString()
    {
        android.os.storage.DiskInfo r0;
        java.io.CharArrayWriter $r2;
        com.android.internal.util.IndentingPrintWriter $r3;
        java.lang.String $r4;

        r0 := @this: android.os.storage.DiskInfo;

        $r2 = new java.io.CharArrayWriter;

        specialinvoke $r2.<java.io.CharArrayWriter: void <init>()>();

        $r3 = new com.android.internal.util.IndentingPrintWriter;

        specialinvoke $r3.<com.android.internal.util.IndentingPrintWriter: void <init>(java.io.Writer,java.lang.String,int)>($r2, "    ", 80);

        virtualinvoke r0.<android.os.storage.DiskInfo: void dump(com.android.internal.util.IndentingPrintWriter)>($r3);

        $r4 = virtualinvoke $r2.<java.io.CharArrayWriter: java.lang.String toString()>();

        return $r4;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.os.storage.DiskInfo r0;
        android.os.Parcel r1;
        int i0, $i1, $i3;
        java.lang.String $r2, $r3, $r4;
        long $l2;

        r0 := @this: android.os.storage.DiskInfo;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        $r2 = r0.<android.os.storage.DiskInfo: java.lang.String id>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r2);

        $i1 = r0.<android.os.storage.DiskInfo: int flags>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i1);

        $l2 = r0.<android.os.storage.DiskInfo: long size>;

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l2);

        $r3 = r0.<android.os.storage.DiskInfo: java.lang.String label>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r3);

        $i3 = r0.<android.os.storage.DiskInfo: int volumeCount>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i3);

        $r4 = r0.<android.os.storage.DiskInfo: java.lang.String sysPath>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r4);

        return;
    }
}
