class android.os.storage.IStorageManager$Stub$Proxy extends java.lang.Object implements android.os.storage.IStorageManager
{
    public static android.os.storage.IStorageManager sDefaultImpl;
    private android.os.IBinder mRemote;

    void <init>(android.os.IBinder)
    {
        android.os.storage.IStorageManager$Stub$Proxy r0;
        android.os.IBinder r1;

        r0 := @this: android.os.storage.IStorageManager$Stub$Proxy;

        r1 := @parameter0: android.os.IBinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.os.storage.IStorageManager$Stub$Proxy: android.os.IBinder mRemote> = r1;

        return;
    }

    public void abortChanges(java.lang.String, boolean) throws android.os.RemoteException
    {
        android.os.storage.IStorageManager$Stub$Proxy r0;
        boolean z0, $z1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        android.os.storage.IStorageManager $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7;
        byte b0;

        r0 := @this: android.os.storage.IStorageManager$Stub$Proxy;

        r7 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.storage.IStorageManager");

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r7);

     label2:
        if z0 == 0 goto label3;

        b0 = 1;

        goto label4;

     label3:
        b0 = 0;

     label4:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b0);

        $r3 = r0.<android.os.storage.IStorageManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(88, r1, r2, 0);

        if $z1 != 0 goto label6;

        $r4 = staticinvoke <android.os.storage.IStorageManager$Stub: android.os.storage.IStorageManager getDefaultImpl()>();

        if $r4 == null goto label6;

        $r5 = staticinvoke <android.os.storage.IStorageManager$Stub: android.os.storage.IStorageManager getDefaultImpl()>();

        interfaceinvoke $r5.<android.os.storage.IStorageManager: void abortChanges(java.lang.String,boolean)>(r7, z0);

     label5:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label6:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label8:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label4 to label5 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
    }

    public void abortIdleMaintenance() throws android.os.RemoteException
    {
        android.os.storage.IStorageManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.os.storage.IStorageManager $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.os.storage.IStorageManager$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.storage.IStorageManager");

        $r4 = r0.<android.os.storage.IStorageManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(81, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.os.storage.IStorageManager$Stub: android.os.storage.IStorageManager getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.os.storage.IStorageManager$Stub: android.os.storage.IStorageManager getDefaultImpl()>();

        interfaceinvoke $r6.<android.os.storage.IStorageManager: void abortIdleMaintenance()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void addUserKeyAuth(int, int, byte[], byte[]) throws android.os.RemoteException
    {
        android.os.storage.IStorageManager$Stub$Proxy r0;
        int i0, i1;
        byte[] r1, r8;
        android.os.Parcel r2, r3;
        android.os.IBinder $r4;
        boolean $z0;
        android.os.storage.IStorageManager $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.os.storage.IStorageManager$Stub$Proxy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r8 := @parameter2: byte[];

        r1 := @parameter3: byte[];

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.storage.IStorageManager");

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i1);

        virtualinvoke r2.<android.os.Parcel: void writeByteArray(byte[])>(r8);

        virtualinvoke r2.<android.os.Parcel: void writeByteArray(byte[])>(r1);

        $r4 = r0.<android.os.storage.IStorageManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(71, r2, r3, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.os.storage.IStorageManager$Stub: android.os.storage.IStorageManager getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.os.storage.IStorageManager$Stub: android.os.storage.IStorageManager getDefaultImpl()>();

        interfaceinvoke $r6.<android.os.storage.IStorageManager: void addUserKeyAuth(int,int,byte[],byte[])>(i0, i1, r8, r1);

     label2:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void allocateBytes(java.lang.String, long, int, java.lang.String) throws android.os.RemoteException
    {
        android.os.storage.IStorageManager$Stub$Proxy r0;
        long l0;
        int i1;
        java.lang.String r1, r8;
        android.os.Parcel r2, r3;
        android.os.IBinder $r4;
        boolean $z0;
        android.os.storage.IStorageManager $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.os.storage.IStorageManager$Stub$Proxy;

        r8 := @parameter0: java.lang.String;

        l0 := @parameter1: long;

        i1 := @parameter2: int;

        r1 := @parameter3: java.lang.String;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.storage.IStorageManager");

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r8);

        virtualinvoke r2.<android.os.Parcel: void writeLong(long)>(l0);

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i1);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r4 = r0.<android.os.storage.IStorageManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(79, r2, r3, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.os.storage.IStorageManager$Stub: android.os.storage.IStorageManager getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.os.storage.IStorageManager$Stub: android.os.storage.IStorageManager getDefaultImpl()>();

        interfaceinvoke $r6.<android.os.storage.IStorageManager: void allocateBytes(java.lang.String,long,int,java.lang.String)>(r8, l0, i1, r1);

     label2:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public android.os.IBinder asBinder()
    {
        android.os.storage.IStorageManager$Stub$Proxy r0;
        android.os.IBinder $r1;

        r0 := @this: android.os.storage.IStorageManager$Stub$Proxy;

        $r1 = r0.<android.os.storage.IStorageManager$Stub$Proxy: android.os.IBinder mRemote>;

        return $r1;
    }

    public void benchmark(java.lang.String, android.os.IVoldTaskListener) throws android.os.RemoteException
    {
        android.os.storage.IStorageManager$Stub$Proxy r0;
        android.os.IVoldTaskListener r1;
        android.os.Parcel r2, r3;
        android.os.IBinder $r4, r9;
        boolean $z0;
        android.os.storage.IStorageManager $r5, $r6;
        java.lang.Throwable $r7;
        java.lang.String r8;

        r0 := @this: android.os.storage.IStorageManager$Stub$Proxy;

        r8 := @parameter0: java.lang.String;

        r1 := @parameter1: android.os.IVoldTaskListener;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.storage.IStorageManager");

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r8);

     label02:
        if r1 == null goto label05;

     label03:
        r9 = interfaceinvoke r1.<android.os.IVoldTaskListener: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r9 = null;

     label06:
        virtualinvoke r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r9);

        $r4 = r0.<android.os.storage.IStorageManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(60, r2, r3, 0);

        if $z0 != 0 goto label08;

        $r5 = staticinvoke <android.os.storage.IStorageManager$Stub: android.os.storage.IStorageManager getDefaultImpl()>();

        if $r5 == null goto label08;

        $r6 = staticinvoke <android.os.storage.IStorageManager$Stub: android.os.storage.IStorageManager getDefaultImpl()>();

        interfaceinvoke $r6.<android.os.storage.IStorageManager: void benchmark(java.lang.String,android.os.IVoldTaskListener)>(r8, r1);

     label07:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public int changeEncryptionPassword(int, java.lang.String) throws android.os.RemoteException
    {
        android.os.storage.IStorageManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.os.storage.IStorageManager $r4, $r5;
        java.lang.Throwable $r6;
        int i0, i1, i2;
        java.lang.String r7;

        r0 := @this: android.os.storage.IStorageManager$Stub$Proxy;

        i0 := @parameter0: int;

        r7 := @parameter1: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.storage.IStorageManager");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r7);

        $r3 = r0.<android.os.storage.IStorageManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(29, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.os.storage.IStorageManager$Stub: android.os.storage.IStorageManager getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.os.storage.IStorageManager$Stub: android.os.storage.IStorageManager getDefaultImpl()>();

        i1 = interfaceinvoke $r5.<android.os.storage.IStorageManager: int changeEncryptionPassword(int,java.lang.String)>(i0, r7);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i1;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i2 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i2;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void clearPassword() throws android.os.RemoteException
    {
        android.os.storage.IStorageManager$Stub$Proxy r0;
        android.os.Parcel r1;
        android.os.IBinder $r3;
        boolean $z0;
        android.os.storage.IStorageManager $r4, $r5;
        java.lang.Throwable $r6;

        r0 := @this: android.os.storage.IStorageManager$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.storage.IStorageManager");

        $r3 = r0.<android.os.storage.IStorageManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(38, r1, null, 1);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.os.storage.IStorageManager$Stub: android.os.storage.IStorageManager getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.os.storage.IStorageManager$Stub: android.os.storage.IStorageManager getDefaultImpl()>();

        interfaceinvoke $r5.<android.os.storage.IStorageManager: void clearPassword()>();

     label2:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label4:
        $r6 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public void clearUserKeyAuth(int, int, byte[], byte[]) throws android.os.RemoteException
    {
        android.os.storage.IStorageManager$Stub$Proxy r0;
        int i0, i1;
        byte[] r1, r8;
        android.os.Parcel r2, r3;
        android.os.IBinder $r4;
        boolean $z0;
        android.os.storage.IStorageManager $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.os.storage.IStorageManager$Stub$Proxy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r8 := @parameter2: byte[];

        r1 := @parameter3: byte[];

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.storage.IStorageManager");

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i1);

        virtualinvoke r2.<android.os.Parcel: void writeByteArray(byte[])>(r8);

        virtualinvoke r2.<android.os.Parcel: void writeByteArray(byte[])>(r1);

        $r4 = r0.<android.os.storage.IStorageManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(89, r2, r3, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.os.storage.IStorageManager$Stub: android.os.storage.IStorageManager getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.os.storage.IStorageManager$Stub: android.os.storage.IStorageManager getDefaultImpl()>();

        interfaceinvoke $r6.<android.os.storage.IStorageManager: void clearUserKeyAuth(int,int,byte[],byte[])>(i0, i1, r8, r1);

     label2:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void commitChanges() throws android.os.RemoteException
    {
        android.os.storage.IStorageManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.os.storage.IStorageManager $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.os.storage.IStorageManager$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.storage.IStorageManager");

        $r4 = r0.<android.os.storage.IStorageManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(84, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.os.storage.IStorageManager$Stub: android.os.storage.IStorageManager getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.os.storage.IStorageManager$Stub: android.os.storage.IStorageManager getDefaultImpl()>();

        interfaceinvoke $r6.<android.os.storage.IStorageManager: void commitChanges()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void createUserKey(int, int, boolean) throws android.os.RemoteException
    {
        android.os.storage.IStorageManager$Stub$Proxy r0;
        int i0, i1;
        boolean z0, $z1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        android.os.storage.IStorageManager $r5, $r6;
        java.lang.Throwable $r7;
        byte b2;

        r0 := @this: android.os.storage.IStorageManager$Stub$Proxy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        z0 := @parameter2: boolean;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.storage.IStorageManager");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

     label2:
        if z0 == 0 goto label3;

        b2 = 1;

        goto label4;

     label3:
        b2 = 0;

     label4:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b2);

        $r4 = r0.<android.os.storage.IStorageManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(62, r1, r2, 0);

        if $z1 != 0 goto label6;

        $r5 = staticinvoke <android.os.storage.IStorageManager$Stub: android.os.storage.IStorageManager getDefaultImpl()>();

        if $r5 == null goto label6;

        $r6 = staticinvoke <android.os.storage.IStorageManager$Stub: android.os.storage.IStorageManager getDefaultImpl()>();

        interfaceinvoke $r6.<android.os.storage.IStorageManager: void createUserKey(int,int,boolean)>(i0, i1, z0);

     label5:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label6:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label8:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label4 to label5 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
    }

    public int decryptStorage(java.lang.String) throws android.os.RemoteException
    {
        android.os.storage.IStorageManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.os.storage.IStorageManager $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7;
        int i0, i1;

        r0 := @this: android.os.storage.IStorageManager$Stub$Proxy;

        r7 := @parameter0: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.storage.IStorageManager");

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r7);

        $r3 = r0.<android.os.storage.IStorageManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(27, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.os.storage.IStorageManager$Stub: android.os.storage.IStorageManager getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.os.storage.IStorageManager$Stub: android.os.storage.IStorageManager getDefaultImpl()>();

        i0 = interfaceinvoke $r5.<android.os.storage.IStorageManager: int decryptStorage(java.lang.String)>(r7);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i0;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i1;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void destroyUserKey(int) throws android.os.RemoteException
    {
        android.os.storage.IStorageManager$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.os.storage.IStorageManager $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.os.storage.IStorageManager$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.storage.IStorageManager");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<android.os.storage.IStorageManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(63, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.os.storage.IStorageManager$Stub: android.os.storage.IStorageManager getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.os.storage.IStorageManager$Stub: android.os.storage.IStorageManager getDefaultImpl()>();

        interfaceinvoke $r6.<android.os.storage.IStorageManager: void destroyUserKey(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void destroyUserStorage(java.lang.String, int, int) throws android.os.RemoteException
    {
        android.os.storage.IStorageManager$Stub$Proxy r0;
        int i0, i1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.os.storage.IStorageManager $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7;

        r0 := @this: android.os.storage.IStorageManager$Stub$Proxy;

        r7 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.storage.IStorageManager");

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r7);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        $r3 = r0.<android.os.storage.IStorageManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(68, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.os.storage.IStorageManager$Stub: android.os.storage.IStorageManager getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.os.storage.IStorageManager$Stub: android.os.storage.IStorageManager getDefaultImpl()>();

        interfaceinvoke $r5.<android.os.storage.IStorageManager: void destroyUserStorage(java.lang.String,int,int)>(r7, i0, i1);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public int encryptStorage(int, java.lang.String) throws android.os.RemoteException
    {
        android.os.storage.IStorageManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.os.storage.IStorageManager $r4, $r5;
        java.lang.Throwable $r6;
        int i0, i1, i2;
        java.lang.String r7;

        r0 := @this: android.os.storage.IStorageManager$Stub$Proxy;

        i0 := @parameter0: int;

        r7 := @parameter1: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.storage.IStorageManager");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r7);

        $r3 = r0.<android.os.storage.IStorageManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(28, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.os.storage.IStorageManager$Stub: android.os.storage.IStorageManager getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.os.storage.IStorageManager$Stub: android.os.storage.IStorageManager getDefaultImpl()>();

        i1 = interfaceinvoke $r5.<android.os.storage.IStorageManager: int encryptStorage(int,java.lang.String)>(i0, r7);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i1;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i2 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i2;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void fixateNewestUserKeyAuth(int) throws android.os.RemoteException
    {
        android.os.storage.IStorageManager$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.os.storage.IStorageManager $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.os.storage.IStorageManager$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.storage.IStorageManager");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<android.os.storage.IStorageManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(72, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.os.storage.IStorageManager$Stub: android.os.storage.IStorageManager getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.os.storage.IStorageManager$Stub: android.os.storage.IStorageManager getDefaultImpl()>();

        interfaceinvoke $r6.<android.os.storage.IStorageManager: void fixateNewestUserKeyAuth(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void fixupAppDir(java.lang.String) throws android.os.RemoteException
    {
        android.os.storage.IStorageManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.os.storage.IStorageManager $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7;

        r0 := @this: android.os.storage.IStorageManager$Stub$Proxy;

        r7 := @parameter0: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.storage.IStorageManager");

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r7);

        $r3 = r0.<android.os.storage.IStorageManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(90, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.os.storage.IStorageManager$Stub: android.os.storage.IStorageManager getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.os.storage.IStorageManager$Stub: android.os.storage.IStorageManager getDefaultImpl()>();

        interfaceinvoke $r5.<android.os.storage.IStorageManager: void fixupAppDir(java.lang.String)>(r7);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void forgetAllVolumes() throws android.os.RemoteException
    {
        android.os.storage.IStorageManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.os.storage.IStorageManager $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.os.storage.IStorageManager$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.storage.IStorageManager");

        $r4 = r0.<android.os.storage.IStorageManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(57, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.os.storage.IStorageManager$Stub: android.os.storage.IStorageManager getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.os.storage.IStorageManager$Stub: android.os.storage.IStorageManager getDefaultImpl()>();

        interfaceinvoke $r6.<android.os.storage.IStorageManager: void forgetAllVolumes()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void forgetVolume(java.lang.String) throws android.os.RemoteException
    {
        android.os.storage.IStorageManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.os.storage.IStorageManager $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7;

        r0 := @this: android.os.storage.IStorageManager$Stub$Proxy;

        r7 := @parameter0: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.storage.IStorageManager");

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r7);

        $r3 = r0.<android.os.storage.IStorageManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(56, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.os.storage.IStorageManager$Stub: android.os.storage.IStorageManager getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.os.storage.IStorageManager$Stub: android.os.storage.IStorageManager getDefaultImpl()>();

        interfaceinvoke $r5.<android.os.storage.IStorageManager: void forgetVolume(java.lang.String)>(r7);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void format(java.lang.String) throws android.os.RemoteException
    {
        android.os.storage.IStorageManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.os.storage.IStorageManager $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7;

        r0 := @this: android.os.storage.IStorageManager$Stub$Proxy;

        r7 := @parameter0: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.storage.IStorageManager");

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r7);

        $r3 = r0.<android.os.storage.IStorageManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(50, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.os.storage.IStorageManager$Stub: android.os.storage.IStorageManager getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.os.storage.IStorageManager$Stub: android.os.storage.IStorageManager getDefaultImpl()>();

        interfaceinvoke $r5.<android.os.storage.IStorageManager: void format(java.lang.String)>(r7);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void fstrim(int, android.os.IVoldTaskListener) throws android.os.RemoteException
    {
        android.os.storage.IStorageManager$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r8;
        boolean $z0;
        android.os.storage.IStorageManager $r4, $r5;
        java.lang.Throwable $r6;
        android.os.IVoldTaskListener r7;

        r0 := @this: android.os.storage.IStorageManager$Stub$Proxy;

        i0 := @parameter0: int;

        r7 := @parameter1: android.os.IVoldTaskListener;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.storage.IStorageManager");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

     label02:
        if r7 == null goto label05;

     label03:
        r8 = interfaceinvoke r7.<android.os.IVoldTaskListener: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r8 = null;

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r8);

        $r3 = r0.<android.os.storage.IStorageManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(73, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.os.storage.IStorageManager$Stub: android.os.storage.IStorageManager getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.os.storage.IStorageManager$Stub: android.os.storage.IStorageManager getDefaultImpl()>();

        interfaceinvoke $r5.<android.os.storage.IStorageManager: void fstrim(int,android.os.IVoldTaskListener)>(i0, r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public long getAllocatableBytes(java.lang.String, int, java.lang.String) throws android.os.RemoteException
    {
        android.os.storage.IStorageManager$Stub$Proxy r0;
        int i0;
        java.lang.String r1, r8;
        android.os.Parcel r2, r3;
        android.os.IBinder $r4;
        boolean $z0;
        android.os.storage.IStorageManager $r5, $r6;
        java.lang.Throwable $r7;
        long l1, l2;

        r0 := @this: android.os.storage.IStorageManager$Stub$Proxy;

        r8 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.storage.IStorageManager");

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r8);

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r4 = r0.<android.os.storage.IStorageManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(78, r2, r3, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.os.storage.IStorageManager$Stub: android.os.storage.IStorageManager getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.os.storage.IStorageManager$Stub: android.os.storage.IStorageManager getDefaultImpl()>();

        l1 = interfaceinvoke $r6.<android.os.storage.IStorageManager: long getAllocatableBytes(java.lang.String,int,java.lang.String)>(r8, i0, r1);

     label2:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return l1;

     label3:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

        l2 = virtualinvoke r3.<android.os.Parcel: long readLong()>();

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return l2;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public long getCacheQuotaBytes(java.lang.String, int) throws android.os.RemoteException
    {
        android.os.storage.IStorageManager$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.os.storage.IStorageManager $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7;
        long l1, l2;

        r0 := @this: android.os.storage.IStorageManager$Stub$Proxy;

        r7 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.storage.IStorageManager");

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r7);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r3 = r0.<android.os.storage.IStorageManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(76, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.os.storage.IStorageManager$Stub: android.os.storage.IStorageManager getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.os.storage.IStorageManager$Stub: android.os.storage.IStorageManager getDefaultImpl()>();

        l1 = interfaceinvoke $r5.<android.os.storage.IStorageManager: long getCacheQuotaBytes(java.lang.String,int)>(r7, i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return l1;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        l2 = virtualinvoke r2.<android.os.Parcel: long readLong()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return l2;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public long getCacheSizeBytes(java.lang.String, int) throws android.os.RemoteException
    {
        android.os.storage.IStorageManager$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.os.storage.IStorageManager $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7;
        long l1, l2;

        r0 := @this: android.os.storage.IStorageManager$Stub$Proxy;

        r7 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.storage.IStorageManager");

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r7);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r3 = r0.<android.os.storage.IStorageManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(77, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.os.storage.IStorageManager$Stub: android.os.storage.IStorageManager getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.os.storage.IStorageManager$Stub: android.os.storage.IStorageManager getDefaultImpl()>();

        l1 = interfaceinvoke $r5.<android.os.storage.IStorageManager: long getCacheSizeBytes(java.lang.String,int)>(r7, i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return l1;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        l2 = virtualinvoke r2.<android.os.Parcel: long readLong()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return l2;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public android.os.storage.DiskInfo[] getDisks() throws android.os.RemoteException
    {
        android.os.storage.IStorageManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.os.Parcelable$Creator $r4;
        java.lang.Object[] $r5;
        android.os.storage.IStorageManager $r6, $r7;
        java.lang.Throwable $r8;
        android.os.storage.DiskInfo[] r9, r10;

        r0 := @this: android.os.storage.IStorageManager$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.storage.IStorageManager");

        $r3 = r0.<android.os.storage.IStorageManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(45, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <android.os.storage.IStorageManager$Stub: android.os.storage.IStorageManager getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <android.os.storage.IStorageManager$Stub: android.os.storage.IStorageManager getDefaultImpl()>();

        r9 = interfaceinvoke $r7.<android.os.storage.IStorageManager: android.os.storage.DiskInfo[] getDisks()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $r4 = <android.os.storage.DiskInfo: android.os.Parcelable$Creator CREATOR>;

        $r5 = virtualinvoke r2.<android.os.Parcel: java.lang.Object[] createTypedArray(android.os.Parcelable$Creator)>($r4);

        r10 = (android.os.storage.DiskInfo[]) $r5;

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r10;

     label5:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public int getEncryptionState() throws android.os.RemoteException
    {
        android.os.storage.IStorageManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.os.storage.IStorageManager $r5, $r6;
        java.lang.Throwable $r7;
        int i0, i1;

        r0 := @this: android.os.storage.IStorageManager$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.storage.IStorageManager");

        $r4 = r0.<android.os.storage.IStorageManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(32, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.os.storage.IStorageManager$Stub: android.os.storage.IStorageManager getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.os.storage.IStorageManager$Stub: android.os.storage.IStorageManager getDefaultImpl()>();

        i0 = interfaceinvoke $r6.<android.os.storage.IStorageManager: int getEncryptionState()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i0;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i1;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public java.lang.String getField(java.lang.String) throws android.os.RemoteException
    {
        android.os.storage.IStorageManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.os.storage.IStorageManager $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7, r8, r9;

        r0 := @this: android.os.storage.IStorageManager$Stub$Proxy;

        r7 := @parameter0: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.storage.IStorageManager");

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r7);

        $r3 = r0.<android.os.storage.IStorageManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(40, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.os.storage.IStorageManager$Stub: android.os.storage.IStorageManager getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.os.storage.IStorageManager$Stub: android.os.storage.IStorageManager getDefaultImpl()>();

        r8 = interfaceinvoke $r5.<android.os.storage.IStorageManager: java.lang.String getField(java.lang.String)>(r7);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r8;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        r9 = virtualinvoke r2.<android.os.Parcel: java.lang.String readString()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public java.lang.String getInterfaceDescriptor()
    {
        android.os.storage.IStorageManager$Stub$Proxy r0;

        r0 := @this: android.os.storage.IStorageManager$Stub$Proxy;

        return "android.os.storage.IStorageManager";
    }

    public java.lang.String getMountedObbPath(java.lang.String) throws android.os.RemoteException
    {
        android.os.storage.IStorageManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.os.storage.IStorageManager $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7, r8, r9;

        r0 := @this: android.os.storage.IStorageManager$Stub$Proxy;

        r7 := @parameter0: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.storage.IStorageManager");

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r7);

        $r3 = r0.<android.os.storage.IStorageManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(25, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.os.storage.IStorageManager$Stub: android.os.storage.IStorageManager getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.os.storage.IStorageManager$Stub: android.os.storage.IStorageManager getDefaultImpl()>();

        r8 = interfaceinvoke $r5.<android.os.storage.IStorageManager: java.lang.String getMountedObbPath(java.lang.String)>(r7);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r8;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        r9 = virtualinvoke r2.<android.os.Parcel: java.lang.String readString()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public java.lang.String getPassword() throws android.os.RemoteException
    {
        android.os.storage.IStorageManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.os.storage.IStorageManager $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7, r8;

        r0 := @this: android.os.storage.IStorageManager$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.storage.IStorageManager");

        $r3 = r0.<android.os.storage.IStorageManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(37, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.os.storage.IStorageManager$Stub: android.os.storage.IStorageManager getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.os.storage.IStorageManager$Stub: android.os.storage.IStorageManager getDefaultImpl()>();

        r7 = interfaceinvoke $r5.<android.os.storage.IStorageManager: java.lang.String getPassword()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r7;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        r8 = virtualinvoke r2.<android.os.Parcel: java.lang.String readString()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r8;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public int getPasswordType() throws android.os.RemoteException
    {
        android.os.storage.IStorageManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.os.storage.IStorageManager $r5, $r6;
        java.lang.Throwable $r7;
        int i0, i1;

        r0 := @this: android.os.storage.IStorageManager$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.storage.IStorageManager");

        $r4 = r0.<android.os.storage.IStorageManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(36, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.os.storage.IStorageManager$Stub: android.os.storage.IStorageManager getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.os.storage.IStorageManager$Stub: android.os.storage.IStorageManager getDefaultImpl()>();

        i0 = interfaceinvoke $r6.<android.os.storage.IStorageManager: int getPasswordType()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i0;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i1;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public java.lang.String getPrimaryStorageUuid() throws android.os.RemoteException
    {
        android.os.storage.IStorageManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.os.storage.IStorageManager $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7, r8;

        r0 := @this: android.os.storage.IStorageManager$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.storage.IStorageManager");

        $r3 = r0.<android.os.storage.IStorageManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(58, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.os.storage.IStorageManager$Stub: android.os.storage.IStorageManager getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.os.storage.IStorageManager$Stub: android.os.storage.IStorageManager getDefaultImpl()>();

        r7 = interfaceinvoke $r5.<android.os.storage.IStorageManager: java.lang.String getPrimaryStorageUuid()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r7;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        r8 = virtualinvoke r2.<android.os.Parcel: java.lang.String readString()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r8;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public android.os.storage.StorageVolume[] getVolumeList(int, java.lang.String, int) throws android.os.RemoteException
    {
        android.os.storage.IStorageManager$Stub$Proxy r0;
        int i0, i1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.os.Parcelable$Creator $r4;
        java.lang.Object[] $r5;
        android.os.storage.IStorageManager $r6, $r7;
        java.lang.Throwable $r8;
        java.lang.String r9;
        android.os.storage.StorageVolume[] r10, r11;

        r0 := @this: android.os.storage.IStorageManager$Stub$Proxy;

        i0 := @parameter0: int;

        r9 := @parameter1: java.lang.String;

        i1 := @parameter2: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.storage.IStorageManager");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r9);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        $r3 = r0.<android.os.storage.IStorageManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(30, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <android.os.storage.IStorageManager$Stub: android.os.storage.IStorageManager getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <android.os.storage.IStorageManager$Stub: android.os.storage.IStorageManager getDefaultImpl()>();

        r10 = interfaceinvoke $r7.<android.os.storage.IStorageManager: android.os.storage.StorageVolume[] getVolumeList(int,java.lang.String,int)>(i0, r9, i1);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r10;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $r4 = <android.os.storage.StorageVolume: android.os.Parcelable$Creator CREATOR>;

        $r5 = virtualinvoke r2.<android.os.Parcel: java.lang.Object[] createTypedArray(android.os.Parcelable$Creator)>($r4);

        r11 = (android.os.storage.StorageVolume[]) $r5;

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r11;

     label5:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public android.os.storage.VolumeRecord[] getVolumeRecords(int) throws android.os.RemoteException
    {
        android.os.storage.IStorageManager$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.os.Parcelable$Creator $r4;
        java.lang.Object[] $r5;
        android.os.storage.IStorageManager $r6, $r7;
        java.lang.Throwable $r8;
        android.os.storage.VolumeRecord[] r9, r10;

        r0 := @this: android.os.storage.IStorageManager$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.storage.IStorageManager");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r3 = r0.<android.os.storage.IStorageManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(47, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <android.os.storage.IStorageManager$Stub: android.os.storage.IStorageManager getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <android.os.storage.IStorageManager$Stub: android.os.storage.IStorageManager getDefaultImpl()>();

        r9 = interfaceinvoke $r7.<android.os.storage.IStorageManager: android.os.storage.VolumeRecord[] getVolumeRecords(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $r4 = <android.os.storage.VolumeRecord: android.os.Parcelable$Creator CREATOR>;

        $r5 = virtualinvoke r2.<android.os.Parcel: java.lang.Object[] createTypedArray(android.os.Parcelable$Creator)>($r4);

        r10 = (android.os.storage.VolumeRecord[]) $r5;

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r10;

     label5:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public android.os.storage.VolumeInfo[] getVolumes(int) throws android.os.RemoteException
    {
        android.os.storage.IStorageManager$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.os.Parcelable$Creator $r4;
        java.lang.Object[] $r5;
        android.os.storage.IStorageManager $r6, $r7;
        java.lang.Throwable $r8;
        android.os.storage.VolumeInfo[] r9, r10;

        r0 := @this: android.os.storage.IStorageManager$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.storage.IStorageManager");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r3 = r0.<android.os.storage.IStorageManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(46, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <android.os.storage.IStorageManager$Stub: android.os.storage.IStorageManager getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <android.os.storage.IStorageManager$Stub: android.os.storage.IStorageManager getDefaultImpl()>();

        r9 = interfaceinvoke $r7.<android.os.storage.IStorageManager: android.os.storage.VolumeInfo[] getVolumes(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $r4 = <android.os.storage.VolumeInfo: android.os.Parcelable$Creator CREATOR>;

        $r5 = virtualinvoke r2.<android.os.Parcel: java.lang.Object[] createTypedArray(android.os.Parcelable$Creator)>($r4);

        r10 = (android.os.storage.VolumeInfo[]) $r5;

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r10;

     label5:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public boolean isConvertibleToFBE() throws android.os.RemoteException
    {
        android.os.storage.IStorageManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        int i0;
        boolean $z0, z1, z2;
        android.os.storage.IStorageManager $r3, $r4;
        java.lang.Throwable $r5;
        android.os.IBinder r6;

        r0 := @this: android.os.storage.IStorageManager$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.storage.IStorageManager");

        r6 = r0.<android.os.storage.IStorageManager$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(69, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r3 = staticinvoke <android.os.storage.IStorageManager$Stub: android.os.storage.IStorageManager getDefaultImpl()>();

        if $r3 == null goto label5;

        $r4 = staticinvoke <android.os.storage.IStorageManager$Stub: android.os.storage.IStorageManager getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<android.os.storage.IStorageManager: boolean isConvertibleToFBE()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i0 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public boolean isObbMounted(java.lang.String) throws android.os.RemoteException
    {
        android.os.storage.IStorageManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder r3;
        int i0;
        boolean $z0, z1, z2;
        android.os.storage.IStorageManager $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7;

        r0 := @this: android.os.storage.IStorageManager$Stub$Proxy;

        r7 := @parameter0: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.storage.IStorageManager");

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r7);

        r3 = r0.<android.os.storage.IStorageManager$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(24, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r4 = staticinvoke <android.os.storage.IStorageManager$Stub: android.os.storage.IStorageManager getDefaultImpl()>();

        if $r4 == null goto label5;

        $r5 = staticinvoke <android.os.storage.IStorageManager$Stub: android.os.storage.IStorageManager getDefaultImpl()>();

        z2 = interfaceinvoke $r5.<android.os.storage.IStorageManager: boolean isObbMounted(java.lang.String)>(r7);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i0 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public boolean isUserKeyUnlocked(int) throws android.os.RemoteException
    {
        android.os.storage.IStorageManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        boolean $z0, z1, z2;
        android.os.storage.IStorageManager $r3, $r4;
        java.lang.Throwable $r5;
        int i0, i1;
        android.os.IBinder r6;

        r0 := @this: android.os.storage.IStorageManager$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.storage.IStorageManager");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        r6 = r0.<android.os.storage.IStorageManager$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(66, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r3 = staticinvoke <android.os.storage.IStorageManager$Stub: android.os.storage.IStorageManager getDefaultImpl()>();

        if $r3 == null goto label5;

        $r4 = staticinvoke <android.os.storage.IStorageManager$Stub: android.os.storage.IStorageManager getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<android.os.storage.IStorageManager: boolean isUserKeyUnlocked(int)>(i0);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i1 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public long lastMaintenance() throws android.os.RemoteException
    {
        android.os.storage.IStorageManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.os.storage.IStorageManager $r5, $r6;
        java.lang.Throwable $r7;
        long l0, l1;

        r0 := @this: android.os.storage.IStorageManager$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.storage.IStorageManager");

        $r4 = r0.<android.os.storage.IStorageManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(42, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.os.storage.IStorageManager$Stub: android.os.storage.IStorageManager getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.os.storage.IStorageManager$Stub: android.os.storage.IStorageManager getDefaultImpl()>();

        l0 = interfaceinvoke $r6.<android.os.storage.IStorageManager: long lastMaintenance()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return l0;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        l1 = virtualinvoke r2.<android.os.Parcel: long readLong()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return l1;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void lockUserKey(int) throws android.os.RemoteException
    {
        android.os.storage.IStorageManager$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.os.storage.IStorageManager $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.os.storage.IStorageManager$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.storage.IStorageManager");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<android.os.storage.IStorageManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(65, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.os.storage.IStorageManager$Stub: android.os.storage.IStorageManager getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.os.storage.IStorageManager$Stub: android.os.storage.IStorageManager getDefaultImpl()>();

        interfaceinvoke $r6.<android.os.storage.IStorageManager: void lockUserKey(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void mkdirs(java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        android.os.storage.IStorageManager$Stub$Proxy r0;
        java.lang.String r1, r8;
        android.os.Parcel r2, r3;
        android.os.IBinder $r4;
        boolean $z0;
        android.os.storage.IStorageManager $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.os.storage.IStorageManager$Stub$Proxy;

        r8 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.storage.IStorageManager");

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r8);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r4 = r0.<android.os.storage.IStorageManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(35, r2, r3, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.os.storage.IStorageManager$Stub: android.os.storage.IStorageManager getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.os.storage.IStorageManager$Stub: android.os.storage.IStorageManager getDefaultImpl()>();

        interfaceinvoke $r6.<android.os.storage.IStorageManager: void mkdirs(java.lang.String,java.lang.String)>(r8, r1);

     label2:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void mount(java.lang.String) throws android.os.RemoteException
    {
        android.os.storage.IStorageManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.os.storage.IStorageManager $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7;

        r0 := @this: android.os.storage.IStorageManager$Stub$Proxy;

        r7 := @parameter0: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.storage.IStorageManager");

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r7);

        $r3 = r0.<android.os.storage.IStorageManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(48, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.os.storage.IStorageManager$Stub: android.os.storage.IStorageManager getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.os.storage.IStorageManager$Stub: android.os.storage.IStorageManager getDefaultImpl()>();

        interfaceinvoke $r5.<android.os.storage.IStorageManager: void mount(java.lang.String)>(r7);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void mountObb(java.lang.String, java.lang.String, java.lang.String, android.os.storage.IObbActionListener, int, android.content.res.ObbInfo) throws android.os.RemoteException
    {
        android.os.storage.IStorageManager$Stub$Proxy r0;
        java.lang.String r1, r2, r16;
        android.os.storage.IObbActionListener r3;
        int i0;
        android.content.res.ObbInfo r4;
        android.os.Parcel r5, r6;
        android.os.IBinder $r7, r17;
        boolean $z0;
        android.os.storage.IStorageManager $r8, $r9;
        java.lang.Throwable $r10, $r11, $r12, $r13, $r14, $r15, r18;

        r0 := @this: android.os.storage.IStorageManager$Stub$Proxy;

        r16 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: android.os.storage.IObbActionListener;

        i0 := @parameter4: int;

        r4 := @parameter5: android.content.res.ObbInfo;

        r5 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r6 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r5.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.storage.IStorageManager");

     label02:
        virtualinvoke r5.<android.os.Parcel: void writeString(java.lang.String)>(r16);

     label03:
        virtualinvoke r5.<android.os.Parcel: void writeString(java.lang.String)>(r1);

     label04:
        virtualinvoke r5.<android.os.Parcel: void writeString(java.lang.String)>(r2);

     label05:
        if r3 == null goto label08;

     label06:
        r17 = interfaceinvoke r3.<android.os.storage.IObbActionListener: android.os.IBinder asBinder()>();

     label07:
        goto label09;

     label08:
        r17 = null;

     label09:
        virtualinvoke r5.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r17);

     label10:
        virtualinvoke r5.<android.os.Parcel: void writeInt(int)>(i0);

     label11:
        if r4 == null goto label14;

     label12:
        virtualinvoke r5.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r4.<android.content.res.ObbInfo: void writeToParcel(android.os.Parcel,int)>(r5, 0);

     label13:
        goto label15;

     label14:
        virtualinvoke r5.<android.os.Parcel: void writeInt(int)>(0);

     label15:
        $r7 = r0.<android.os.storage.IStorageManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r7.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(22, r5, r6, 0);

        if $z0 != 0 goto label17;

        $r8 = staticinvoke <android.os.storage.IStorageManager$Stub: android.os.storage.IStorageManager getDefaultImpl()>();

        if $r8 == null goto label17;

        $r9 = staticinvoke <android.os.storage.IStorageManager$Stub: android.os.storage.IStorageManager getDefaultImpl()>();

        interfaceinvoke $r9.<android.os.storage.IStorageManager: void mountObb(java.lang.String,java.lang.String,java.lang.String,android.os.storage.IObbActionListener,int,android.content.res.ObbInfo)>(r16, r1, r2, r3, i0, r4);

     label16:
        virtualinvoke r6.<android.os.Parcel: void recycle()>();

        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        return;

     label17:
        virtualinvoke r6.<android.os.Parcel: void readException()>();

     label18:
        virtualinvoke r6.<android.os.Parcel: void recycle()>();

        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        return;

     label19:
        $r11 := @caughtexception;

        r18 = $r11;

        goto label25;

     label20:
        $r12 := @caughtexception;

        r18 = $r12;

        goto label25;

     label21:
        $r14 := @caughtexception;

        r18 = $r14;

        goto label25;

     label22:
        $r15 := @caughtexception;

        r18 = $r15;

        goto label25;

     label23:
        $r13 := @caughtexception;

        r18 = $r13;

        goto label25;

     label24:
        $r10 := @caughtexception;

        r18 = $r10;

     label25:
        virtualinvoke r6.<android.os.Parcel: void recycle()>();

        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        throw r18;

        catch java.lang.Throwable from label01 to label02 with label24;
        catch java.lang.Throwable from label02 to label03 with label23;
        catch java.lang.Throwable from label03 to label04 with label22;
        catch java.lang.Throwable from label04 to label05 with label21;
        catch java.lang.Throwable from label06 to label07 with label21;
        catch java.lang.Throwable from label09 to label10 with label21;
        catch java.lang.Throwable from label10 to label11 with label20;
        catch java.lang.Throwable from label12 to label13 with label20;
        catch java.lang.Throwable from label14 to label15 with label20;
        catch java.lang.Throwable from label15 to label16 with label19;
        catch java.lang.Throwable from label17 to label18 with label19;
    }

    public com.android.internal.os.AppFuseMount mountProxyFileDescriptorBridge() throws android.os.RemoteException
    {
        android.os.storage.IStorageManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        int $i0;
        android.os.Parcelable$Creator $r4;
        java.lang.Object $r5;
        android.os.storage.IStorageManager $r6, $r7;
        java.lang.Throwable $r8;
        com.android.internal.os.AppFuseMount r9, r10;

        r0 := @this: android.os.storage.IStorageManager$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.storage.IStorageManager");

        $r3 = r0.<android.os.storage.IStorageManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(74, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <android.os.storage.IStorageManager$Stub: android.os.storage.IStorageManager getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <android.os.storage.IStorageManager$Stub: android.os.storage.IStorageManager getDefaultImpl()>();

        r9 = interfaceinvoke $r7.<android.os.storage.IStorageManager: com.android.internal.os.AppFuseMount mountProxyFileDescriptorBridge()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

        if $i0 == 0 goto label5;

        $r4 = <com.android.internal.os.AppFuseMount: android.os.Parcelable$Creator CREATOR>;

        $r5 = interfaceinvoke $r4.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r2);

        r10 = (com.android.internal.os.AppFuseMount) $r5;

     label4:
        goto label6;

     label5:
        r10 = null;

     label6:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r10;

     label7:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
    }

    public boolean needsCheckpoint() throws android.os.RemoteException
    {
        android.os.storage.IStorageManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        int i0;
        boolean $z0, z1, z2;
        android.os.storage.IStorageManager $r3, $r4;
        java.lang.Throwable $r5;
        android.os.IBinder r6;

        r0 := @this: android.os.storage.IStorageManager$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.storage.IStorageManager");

        r6 = r0.<android.os.storage.IStorageManager$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(87, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r3 = staticinvoke <android.os.storage.IStorageManager$Stub: android.os.storage.IStorageManager getDefaultImpl()>();

        if $r3 == null goto label5;

        $r4 = staticinvoke <android.os.storage.IStorageManager$Stub: android.os.storage.IStorageManager getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<android.os.storage.IStorageManager: boolean needsCheckpoint()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i0 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public android.os.ParcelFileDescriptor openProxyFileDescriptor(int, int, int) throws android.os.RemoteException
    {
        android.os.storage.IStorageManager$Stub$Proxy r0;
        int i0, i1, i2, $i3;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.os.Parcelable$Creator $r4;
        java.lang.Object $r5;
        android.os.storage.IStorageManager $r6, $r7;
        java.lang.Throwable $r8;
        android.os.ParcelFileDescriptor r9, r10;

        r0 := @this: android.os.storage.IStorageManager$Stub$Proxy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.storage.IStorageManager");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i2);

        $r3 = r0.<android.os.storage.IStorageManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(75, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <android.os.storage.IStorageManager$Stub: android.os.storage.IStorageManager getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <android.os.storage.IStorageManager$Stub: android.os.storage.IStorageManager getDefaultImpl()>();

        r9 = interfaceinvoke $r7.<android.os.storage.IStorageManager: android.os.ParcelFileDescriptor openProxyFileDescriptor(int,int,int)>(i0, i1, i2);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $i3 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

        if $i3 == 0 goto label5;

        $r4 = <android.os.ParcelFileDescriptor: android.os.Parcelable$Creator CREATOR>;

        $r5 = interfaceinvoke $r4.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r2);

        r10 = (android.os.ParcelFileDescriptor) $r5;

     label4:
        goto label6;

     label5:
        r10 = null;

     label6:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r10;

     label7:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
    }

    public void partitionMixed(java.lang.String, int) throws android.os.RemoteException
    {
        android.os.storage.IStorageManager$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.os.storage.IStorageManager $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7;

        r0 := @this: android.os.storage.IStorageManager$Stub$Proxy;

        r7 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.storage.IStorageManager");

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r7);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r3 = r0.<android.os.storage.IStorageManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(53, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.os.storage.IStorageManager$Stub: android.os.storage.IStorageManager getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.os.storage.IStorageManager$Stub: android.os.storage.IStorageManager getDefaultImpl()>();

        interfaceinvoke $r5.<android.os.storage.IStorageManager: void partitionMixed(java.lang.String,int)>(r7, i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void partitionPrivate(java.lang.String) throws android.os.RemoteException
    {
        android.os.storage.IStorageManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.os.storage.IStorageManager $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7;

        r0 := @this: android.os.storage.IStorageManager$Stub$Proxy;

        r7 := @parameter0: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.storage.IStorageManager");

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r7);

        $r3 = r0.<android.os.storage.IStorageManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(52, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.os.storage.IStorageManager$Stub: android.os.storage.IStorageManager getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.os.storage.IStorageManager$Stub: android.os.storage.IStorageManager getDefaultImpl()>();

        interfaceinvoke $r5.<android.os.storage.IStorageManager: void partitionPrivate(java.lang.String)>(r7);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void partitionPublic(java.lang.String) throws android.os.RemoteException
    {
        android.os.storage.IStorageManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.os.storage.IStorageManager $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7;

        r0 := @this: android.os.storage.IStorageManager$Stub$Proxy;

        r7 := @parameter0: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.storage.IStorageManager");

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r7);

        $r3 = r0.<android.os.storage.IStorageManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(51, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.os.storage.IStorageManager$Stub: android.os.storage.IStorageManager getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.os.storage.IStorageManager$Stub: android.os.storage.IStorageManager getDefaultImpl()>();

        interfaceinvoke $r5.<android.os.storage.IStorageManager: void partitionPublic(java.lang.String)>(r7);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void prepareUserStorage(java.lang.String, int, int, int) throws android.os.RemoteException
    {
        android.os.storage.IStorageManager$Stub$Proxy r0;
        int i0, i1, i2;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.os.storage.IStorageManager $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7;

        r0 := @this: android.os.storage.IStorageManager$Stub$Proxy;

        r7 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.storage.IStorageManager");

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r7);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i2);

        $r3 = r0.<android.os.storage.IStorageManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(67, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.os.storage.IStorageManager$Stub: android.os.storage.IStorageManager getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.os.storage.IStorageManager$Stub: android.os.storage.IStorageManager getDefaultImpl()>();

        interfaceinvoke $r5.<android.os.storage.IStorageManager: void prepareUserStorage(java.lang.String,int,int,int)>(r7, i0, i1, i2);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void registerListener(android.os.storage.IStorageEventListener) throws android.os.RemoteException
    {
        android.os.storage.IStorageManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r8;
        boolean $z0;
        android.os.storage.IStorageManager $r4, $r5;
        java.lang.Throwable $r6;
        android.os.storage.IStorageEventListener r7;

        r0 := @this: android.os.storage.IStorageManager$Stub$Proxy;

        r7 := @parameter0: android.os.storage.IStorageEventListener;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.storage.IStorageManager");

     label02:
        if r7 == null goto label05;

     label03:
        r8 = interfaceinvoke r7.<android.os.storage.IStorageEventListener: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r8 = null;

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r8);

        $r3 = r0.<android.os.storage.IStorageManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.os.storage.IStorageManager$Stub: android.os.storage.IStorageManager getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.os.storage.IStorageManager$Stub: android.os.storage.IStorageManager getDefaultImpl()>();

        interfaceinvoke $r5.<android.os.storage.IStorageManager: void registerListener(android.os.storage.IStorageEventListener)>(r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void runIdleMaintenance() throws android.os.RemoteException
    {
        android.os.storage.IStorageManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.os.storage.IStorageManager $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.os.storage.IStorageManager$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.storage.IStorageManager");

        $r4 = r0.<android.os.storage.IStorageManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(80, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.os.storage.IStorageManager$Stub: android.os.storage.IStorageManager getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.os.storage.IStorageManager$Stub: android.os.storage.IStorageManager getDefaultImpl()>();

        interfaceinvoke $r6.<android.os.storage.IStorageManager: void runIdleMaintenance()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void runMaintenance() throws android.os.RemoteException
    {
        android.os.storage.IStorageManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.os.storage.IStorageManager $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.os.storage.IStorageManager$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.storage.IStorageManager");

        $r4 = r0.<android.os.storage.IStorageManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(43, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.os.storage.IStorageManager$Stub: android.os.storage.IStorageManager getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.os.storage.IStorageManager$Stub: android.os.storage.IStorageManager getDefaultImpl()>();

        interfaceinvoke $r6.<android.os.storage.IStorageManager: void runMaintenance()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void setDebugFlags(int, int) throws android.os.RemoteException
    {
        android.os.storage.IStorageManager$Stub$Proxy r0;
        int i0, i1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.os.storage.IStorageManager $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.os.storage.IStorageManager$Stub$Proxy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.storage.IStorageManager");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        $r4 = r0.<android.os.storage.IStorageManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(61, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.os.storage.IStorageManager$Stub: android.os.storage.IStorageManager getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.os.storage.IStorageManager$Stub: android.os.storage.IStorageManager getDefaultImpl()>();

        interfaceinvoke $r6.<android.os.storage.IStorageManager: void setDebugFlags(int,int)>(i0, i1);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void setField(java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        android.os.storage.IStorageManager$Stub$Proxy r0;
        java.lang.String r1, r7;
        android.os.Parcel r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.os.storage.IStorageManager $r4, $r5;
        java.lang.Throwable $r6;

        r0 := @this: android.os.storage.IStorageManager$Stub$Proxy;

        r7 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.storage.IStorageManager");

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r7);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r3 = r0.<android.os.storage.IStorageManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(39, r2, null, 1);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.os.storage.IStorageManager$Stub: android.os.storage.IStorageManager getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.os.storage.IStorageManager$Stub: android.os.storage.IStorageManager getDefaultImpl()>();

        interfaceinvoke $r5.<android.os.storage.IStorageManager: void setField(java.lang.String,java.lang.String)>(r7, r1);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label4:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public void setPrimaryStorageUuid(java.lang.String, android.content.pm.IPackageMoveObserver) throws android.os.RemoteException
    {
        android.os.storage.IStorageManager$Stub$Proxy r0;
        android.content.pm.IPackageMoveObserver r1;
        android.os.Parcel r2, r3;
        android.os.IBinder $r4, r9;
        boolean $z0;
        android.os.storage.IStorageManager $r5, $r6;
        java.lang.Throwable $r7;
        java.lang.String r8;

        r0 := @this: android.os.storage.IStorageManager$Stub$Proxy;

        r8 := @parameter0: java.lang.String;

        r1 := @parameter1: android.content.pm.IPackageMoveObserver;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.storage.IStorageManager");

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r8);

     label02:
        if r1 == null goto label05;

     label03:
        r9 = interfaceinvoke r1.<android.content.pm.IPackageMoveObserver: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r9 = null;

     label06:
        virtualinvoke r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r9);

        $r4 = r0.<android.os.storage.IStorageManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(59, r2, r3, 0);

        if $z0 != 0 goto label08;

        $r5 = staticinvoke <android.os.storage.IStorageManager$Stub: android.os.storage.IStorageManager getDefaultImpl()>();

        if $r5 == null goto label08;

        $r6 = staticinvoke <android.os.storage.IStorageManager$Stub: android.os.storage.IStorageManager getDefaultImpl()>();

        interfaceinvoke $r6.<android.os.storage.IStorageManager: void setPrimaryStorageUuid(java.lang.String,android.content.pm.IPackageMoveObserver)>(r8, r1);

     label07:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void setVolumeNickname(java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        android.os.storage.IStorageManager$Stub$Proxy r0;
        java.lang.String r1, r8;
        android.os.Parcel r2, r3;
        android.os.IBinder $r4;
        boolean $z0;
        android.os.storage.IStorageManager $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.os.storage.IStorageManager$Stub$Proxy;

        r8 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.storage.IStorageManager");

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r8);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r4 = r0.<android.os.storage.IStorageManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(54, r2, r3, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.os.storage.IStorageManager$Stub: android.os.storage.IStorageManager getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.os.storage.IStorageManager$Stub: android.os.storage.IStorageManager getDefaultImpl()>();

        interfaceinvoke $r6.<android.os.storage.IStorageManager: void setVolumeNickname(java.lang.String,java.lang.String)>(r8, r1);

     label2:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void setVolumeUserFlags(java.lang.String, int, int) throws android.os.RemoteException
    {
        android.os.storage.IStorageManager$Stub$Proxy r0;
        int i0, i1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.os.storage.IStorageManager $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7;

        r0 := @this: android.os.storage.IStorageManager$Stub$Proxy;

        r7 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.storage.IStorageManager");

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r7);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        $r3 = r0.<android.os.storage.IStorageManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(55, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.os.storage.IStorageManager$Stub: android.os.storage.IStorageManager getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.os.storage.IStorageManager$Stub: android.os.storage.IStorageManager getDefaultImpl()>();

        interfaceinvoke $r5.<android.os.storage.IStorageManager: void setVolumeUserFlags(java.lang.String,int,int)>(r7, i0, i1);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void shutdown(android.os.storage.IStorageShutdownObserver) throws android.os.RemoteException
    {
        android.os.storage.IStorageManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r8;
        boolean $z0;
        android.os.storage.IStorageManager $r4, $r5;
        java.lang.Throwable $r6;
        android.os.storage.IStorageShutdownObserver r7;

        r0 := @this: android.os.storage.IStorageManager$Stub$Proxy;

        r7 := @parameter0: android.os.storage.IStorageShutdownObserver;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.storage.IStorageManager");

     label02:
        if r7 == null goto label05;

     label03:
        r8 = interfaceinvoke r7.<android.os.storage.IStorageShutdownObserver: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r8 = null;

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r8);

        $r3 = r0.<android.os.storage.IStorageManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(20, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.os.storage.IStorageManager$Stub: android.os.storage.IStorageManager getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.os.storage.IStorageManager$Stub: android.os.storage.IStorageManager getDefaultImpl()>();

        interfaceinvoke $r5.<android.os.storage.IStorageManager: void shutdown(android.os.storage.IStorageShutdownObserver)>(r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void startCheckpoint(int) throws android.os.RemoteException
    {
        android.os.storage.IStorageManager$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.os.storage.IStorageManager $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.os.storage.IStorageManager$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.storage.IStorageManager");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<android.os.storage.IStorageManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(86, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.os.storage.IStorageManager$Stub: android.os.storage.IStorageManager getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.os.storage.IStorageManager$Stub: android.os.storage.IStorageManager getDefaultImpl()>();

        interfaceinvoke $r6.<android.os.storage.IStorageManager: void startCheckpoint(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public boolean supportsCheckpoint() throws android.os.RemoteException
    {
        android.os.storage.IStorageManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        int i0;
        boolean $z0, z1, z2;
        android.os.storage.IStorageManager $r3, $r4;
        java.lang.Throwable $r5;
        android.os.IBinder r6;

        r0 := @this: android.os.storage.IStorageManager$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.storage.IStorageManager");

        r6 = r0.<android.os.storage.IStorageManager$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(85, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r3 = staticinvoke <android.os.storage.IStorageManager$Stub: android.os.storage.IStorageManager getDefaultImpl()>();

        if $r3 == null goto label5;

        $r4 = staticinvoke <android.os.storage.IStorageManager$Stub: android.os.storage.IStorageManager getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<android.os.storage.IStorageManager: boolean supportsCheckpoint()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i0 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public void unlockUserKey(int, int, byte[], byte[]) throws android.os.RemoteException
    {
        android.os.storage.IStorageManager$Stub$Proxy r0;
        int i0, i1;
        byte[] r1, r8;
        android.os.Parcel r2, r3;
        android.os.IBinder $r4;
        boolean $z0;
        android.os.storage.IStorageManager $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.os.storage.IStorageManager$Stub$Proxy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r8 := @parameter2: byte[];

        r1 := @parameter3: byte[];

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.storage.IStorageManager");

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i1);

        virtualinvoke r2.<android.os.Parcel: void writeByteArray(byte[])>(r8);

        virtualinvoke r2.<android.os.Parcel: void writeByteArray(byte[])>(r1);

        $r4 = r0.<android.os.storage.IStorageManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(64, r2, r3, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.os.storage.IStorageManager$Stub: android.os.storage.IStorageManager getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.os.storage.IStorageManager$Stub: android.os.storage.IStorageManager getDefaultImpl()>();

        interfaceinvoke $r6.<android.os.storage.IStorageManager: void unlockUserKey(int,int,byte[],byte[])>(i0, i1, r8, r1);

     label2:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void unmount(java.lang.String) throws android.os.RemoteException
    {
        android.os.storage.IStorageManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.os.storage.IStorageManager $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7;

        r0 := @this: android.os.storage.IStorageManager$Stub$Proxy;

        r7 := @parameter0: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.storage.IStorageManager");

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r7);

        $r3 = r0.<android.os.storage.IStorageManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(49, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.os.storage.IStorageManager$Stub: android.os.storage.IStorageManager getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.os.storage.IStorageManager$Stub: android.os.storage.IStorageManager getDefaultImpl()>();

        interfaceinvoke $r5.<android.os.storage.IStorageManager: void unmount(java.lang.String)>(r7);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void unmountObb(java.lang.String, boolean, android.os.storage.IObbActionListener, int) throws android.os.RemoteException
    {
        android.os.storage.IStorageManager$Stub$Proxy r0;
        boolean z0, $z1;
        android.os.storage.IObbActionListener r1;
        int i0;
        android.os.Parcel r2, r3;
        android.os.IBinder $r4, r9;
        android.os.storage.IStorageManager $r5, $r6;
        java.lang.Throwable $r7;
        java.lang.String r8;
        byte b1;

        r0 := @this: android.os.storage.IStorageManager$Stub$Proxy;

        r8 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        r1 := @parameter2: android.os.storage.IObbActionListener;

        i0 := @parameter3: int;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.storage.IStorageManager");

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r8);

     label02:
        if z0 == 0 goto label03;

        b1 = 1;

        goto label04;

     label03:
        b1 = 0;

     label04:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(b1);

     label05:
        if r1 == null goto label08;

     label06:
        r9 = interfaceinvoke r1.<android.os.storage.IObbActionListener: android.os.IBinder asBinder()>();

     label07:
        goto label09;

     label08:
        r9 = null;

     label09:
        virtualinvoke r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r9);

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<android.os.storage.IStorageManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(23, r2, r3, 0);

        if $z1 != 0 goto label11;

        $r5 = staticinvoke <android.os.storage.IStorageManager$Stub: android.os.storage.IStorageManager getDefaultImpl()>();

        if $r5 == null goto label11;

        $r6 = staticinvoke <android.os.storage.IStorageManager$Stub: android.os.storage.IStorageManager getDefaultImpl()>();

        interfaceinvoke $r6.<android.os.storage.IStorageManager: void unmountObb(java.lang.String,boolean,android.os.storage.IObbActionListener,int)>(r8, z0, r1, i0);

     label10:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label11:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label12:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label13:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label04 to label05 with label13;
        catch java.lang.Throwable from label06 to label07 with label13;
        catch java.lang.Throwable from label09 to label10 with label13;
        catch java.lang.Throwable from label11 to label12 with label13;
    }

    public void unregisterListener(android.os.storage.IStorageEventListener) throws android.os.RemoteException
    {
        android.os.storage.IStorageManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r8;
        boolean $z0;
        android.os.storage.IStorageManager $r4, $r5;
        java.lang.Throwable $r6;
        android.os.storage.IStorageEventListener r7;

        r0 := @this: android.os.storage.IStorageManager$Stub$Proxy;

        r7 := @parameter0: android.os.storage.IStorageEventListener;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.storage.IStorageManager");

     label02:
        if r7 == null goto label05;

     label03:
        r8 = interfaceinvoke r7.<android.os.storage.IStorageEventListener: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r8 = null;

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r8);

        $r3 = r0.<android.os.storage.IStorageManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(2, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.os.storage.IStorageManager$Stub: android.os.storage.IStorageManager getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.os.storage.IStorageManager$Stub: android.os.storage.IStorageManager getDefaultImpl()>();

        interfaceinvoke $r5.<android.os.storage.IStorageManager: void unregisterListener(android.os.storage.IStorageEventListener)>(r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public int verifyEncryptionPassword(java.lang.String) throws android.os.RemoteException
    {
        android.os.storage.IStorageManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.os.storage.IStorageManager $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7;
        int i0, i1;

        r0 := @this: android.os.storage.IStorageManager$Stub$Proxy;

        r7 := @parameter0: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.storage.IStorageManager");

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r7);

        $r3 = r0.<android.os.storage.IStorageManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(33, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.os.storage.IStorageManager$Stub: android.os.storage.IStorageManager getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.os.storage.IStorageManager$Stub: android.os.storage.IStorageManager getDefaultImpl()>();

        i0 = interfaceinvoke $r5.<android.os.storage.IStorageManager: int verifyEncryptionPassword(java.lang.String)>(r7);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i0;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i1;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }
}
