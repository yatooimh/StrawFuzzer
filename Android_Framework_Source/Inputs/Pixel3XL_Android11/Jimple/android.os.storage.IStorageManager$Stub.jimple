public abstract class android.os.storage.IStorageManager$Stub extends android.os.Binder implements android.os.storage.IStorageManager
{
    private static final java.lang.String DESCRIPTOR;
    static final int TRANSACTION_abortChanges;
    static final int TRANSACTION_abortIdleMaintenance;
    static final int TRANSACTION_addUserKeyAuth;
    static final int TRANSACTION_allocateBytes;
    static final int TRANSACTION_benchmark;
    static final int TRANSACTION_changeEncryptionPassword;
    static final int TRANSACTION_clearPassword;
    static final int TRANSACTION_clearUserKeyAuth;
    static final int TRANSACTION_commitChanges;
    static final int TRANSACTION_createUserKey;
    static final int TRANSACTION_decryptStorage;
    static final int TRANSACTION_destroyUserKey;
    static final int TRANSACTION_destroyUserStorage;
    static final int TRANSACTION_encryptStorage;
    static final int TRANSACTION_fixateNewestUserKeyAuth;
    static final int TRANSACTION_fixupAppDir;
    static final int TRANSACTION_forgetAllVolumes;
    static final int TRANSACTION_forgetVolume;
    static final int TRANSACTION_format;
    static final int TRANSACTION_fstrim;
    static final int TRANSACTION_getAllocatableBytes;
    static final int TRANSACTION_getCacheQuotaBytes;
    static final int TRANSACTION_getCacheSizeBytes;
    static final int TRANSACTION_getDisks;
    static final int TRANSACTION_getEncryptionState;
    static final int TRANSACTION_getField;
    static final int TRANSACTION_getMountedObbPath;
    static final int TRANSACTION_getPassword;
    static final int TRANSACTION_getPasswordType;
    static final int TRANSACTION_getPrimaryStorageUuid;
    static final int TRANSACTION_getVolumeList;
    static final int TRANSACTION_getVolumeRecords;
    static final int TRANSACTION_getVolumes;
    static final int TRANSACTION_isConvertibleToFBE;
    static final int TRANSACTION_isObbMounted;
    static final int TRANSACTION_isUserKeyUnlocked;
    static final int TRANSACTION_lastMaintenance;
    static final int TRANSACTION_lockUserKey;
    static final int TRANSACTION_mkdirs;
    static final int TRANSACTION_mount;
    static final int TRANSACTION_mountObb;
    static final int TRANSACTION_mountProxyFileDescriptorBridge;
    static final int TRANSACTION_needsCheckpoint;
    static final int TRANSACTION_openProxyFileDescriptor;
    static final int TRANSACTION_partitionMixed;
    static final int TRANSACTION_partitionPrivate;
    static final int TRANSACTION_partitionPublic;
    static final int TRANSACTION_prepareUserStorage;
    static final int TRANSACTION_registerListener;
    static final int TRANSACTION_runIdleMaintenance;
    static final int TRANSACTION_runMaintenance;
    static final int TRANSACTION_setDebugFlags;
    static final int TRANSACTION_setField;
    static final int TRANSACTION_setPrimaryStorageUuid;
    static final int TRANSACTION_setVolumeNickname;
    static final int TRANSACTION_setVolumeUserFlags;
    static final int TRANSACTION_shutdown;
    static final int TRANSACTION_startCheckpoint;
    static final int TRANSACTION_supportsCheckpoint;
    static final int TRANSACTION_unlockUserKey;
    static final int TRANSACTION_unmount;
    static final int TRANSACTION_unmountObb;
    static final int TRANSACTION_unregisterListener;
    static final int TRANSACTION_verifyEncryptionPassword;

    public void <init>()
    {
        android.os.storage.IStorageManager$Stub r0;

        r0 := @this: android.os.storage.IStorageManager$Stub;

        specialinvoke r0.<android.os.Binder: void <init>()>();

        virtualinvoke r0.<android.os.storage.IStorageManager$Stub: void attachInterface(android.os.IInterface,java.lang.String)>(r0, "android.os.storage.IStorageManager");

        return;
    }

    public static android.os.storage.IStorageManager asInterface(android.os.IBinder)
    {
        android.os.IBinder r0;
        android.os.IInterface r1;
        android.os.storage.IStorageManager$Stub$Proxy $r2;
        boolean $z0;
        android.os.storage.IStorageManager $r3;

        r0 := @parameter0: android.os.IBinder;

        if r0 != null goto label1;

        return null;

     label1:
        r1 = interfaceinvoke r0.<android.os.IBinder: android.os.IInterface queryLocalInterface(java.lang.String)>("android.os.storage.IStorageManager");

        if r1 == null goto label2;

        $z0 = r1 instanceof android.os.storage.IStorageManager;

        if $z0 == 0 goto label2;

        $r3 = (android.os.storage.IStorageManager) r1;

        return $r3;

     label2:
        $r2 = new android.os.storage.IStorageManager$Stub$Proxy;

        specialinvoke $r2.<android.os.storage.IStorageManager$Stub$Proxy: void <init>(android.os.IBinder)>(r0);

        return $r2;
    }

    public static android.os.storage.IStorageManager getDefaultImpl()
    {
        android.os.storage.IStorageManager $r0;

        $r0 = <android.os.storage.IStorageManager$Stub$Proxy: android.os.storage.IStorageManager sDefaultImpl>;

        return $r0;
    }

    public static java.lang.String getDefaultTransactionName(int)
    {
        int i0;

        i0 := @parameter0: int;

        if i0 == 1 goto label70;

        if i0 == 2 goto label69;

        if i0 == 20 goto label68;

        if i0 == 32 goto label67;

        if i0 == 33 goto label66;

        if i0 == 42 goto label65;

        if i0 == 43 goto label64;

        tableswitch(i0)
        {
            case 22: goto label63;
            case 23: goto label62;
            case 24: goto label61;
            case 25: goto label60;
            default: goto label01;
        };

     label01:
        tableswitch(i0)
        {
            case 27: goto label59;
            case 28: goto label58;
            case 29: goto label57;
            case 30: goto label56;
            default: goto label02;
        };

     label02:
        tableswitch(i0)
        {
            case 35: goto label55;
            case 36: goto label54;
            case 37: goto label53;
            case 38: goto label52;
            case 39: goto label51;
            case 40: goto label50;
            default: goto label03;
        };

     label03:
        tableswitch(i0)
        {
            case 45: goto label49;
            case 46: goto label48;
            case 47: goto label47;
            case 48: goto label46;
            case 49: goto label45;
            case 50: goto label44;
            case 51: goto label43;
            case 52: goto label42;
            case 53: goto label41;
            case 54: goto label40;
            case 55: goto label39;
            case 56: goto label38;
            case 57: goto label37;
            case 58: goto label36;
            case 59: goto label35;
            case 60: goto label34;
            case 61: goto label33;
            case 62: goto label32;
            case 63: goto label31;
            case 64: goto label30;
            case 65: goto label29;
            case 66: goto label28;
            case 67: goto label27;
            case 68: goto label26;
            case 69: goto label25;
            default: goto label04;
        };

     label04:
        tableswitch(i0)
        {
            case 71: goto label24;
            case 72: goto label23;
            case 73: goto label22;
            case 74: goto label21;
            case 75: goto label20;
            case 76: goto label19;
            case 77: goto label18;
            case 78: goto label17;
            case 79: goto label16;
            case 80: goto label15;
            case 81: goto label14;
            default: goto label05;
        };

     label05:
        tableswitch(i0)
        {
            case 84: goto label13;
            case 85: goto label12;
            case 86: goto label11;
            case 87: goto label10;
            case 88: goto label09;
            case 89: goto label08;
            case 90: goto label07;
            default: goto label06;
        };

     label06:
        return null;

     label07:
        return "fixupAppDir";

     label08:
        return "clearUserKeyAuth";

     label09:
        return "abortChanges";

     label10:
        return "needsCheckpoint";

     label11:
        return "startCheckpoint";

     label12:
        return "supportsCheckpoint";

     label13:
        return "commitChanges";

     label14:
        return "abortIdleMaintenance";

     label15:
        return "runIdleMaintenance";

     label16:
        return "allocateBytes";

     label17:
        return "getAllocatableBytes";

     label18:
        return "getCacheSizeBytes";

     label19:
        return "getCacheQuotaBytes";

     label20:
        return "openProxyFileDescriptor";

     label21:
        return "mountProxyFileDescriptorBridge";

     label22:
        return "fstrim";

     label23:
        return "fixateNewestUserKeyAuth";

     label24:
        return "addUserKeyAuth";

     label25:
        return "isConvertibleToFBE";

     label26:
        return "destroyUserStorage";

     label27:
        return "prepareUserStorage";

     label28:
        return "isUserKeyUnlocked";

     label29:
        return "lockUserKey";

     label30:
        return "unlockUserKey";

     label31:
        return "destroyUserKey";

     label32:
        return "createUserKey";

     label33:
        return "setDebugFlags";

     label34:
        return "benchmark";

     label35:
        return "setPrimaryStorageUuid";

     label36:
        return "getPrimaryStorageUuid";

     label37:
        return "forgetAllVolumes";

     label38:
        return "forgetVolume";

     label39:
        return "setVolumeUserFlags";

     label40:
        return "setVolumeNickname";

     label41:
        return "partitionMixed";

     label42:
        return "partitionPrivate";

     label43:
        return "partitionPublic";

     label44:
        return "format";

     label45:
        return "unmount";

     label46:
        return "mount";

     label47:
        return "getVolumeRecords";

     label48:
        return "getVolumes";

     label49:
        return "getDisks";

     label50:
        return "getField";

     label51:
        return "setField";

     label52:
        return "clearPassword";

     label53:
        return "getPassword";

     label54:
        return "getPasswordType";

     label55:
        return "mkdirs";

     label56:
        return "getVolumeList";

     label57:
        return "changeEncryptionPassword";

     label58:
        return "encryptStorage";

     label59:
        return "decryptStorage";

     label60:
        return "getMountedObbPath";

     label61:
        return "isObbMounted";

     label62:
        return "unmountObb";

     label63:
        return "mountObb";

     label64:
        return "runMaintenance";

     label65:
        return "lastMaintenance";

     label66:
        return "verifyEncryptionPassword";

     label67:
        return "getEncryptionState";

     label68:
        return "shutdown";

     label69:
        return "unregisterListener";

     label70:
        return "registerListener";
    }

    public static boolean setDefaultImpl(android.os.storage.IStorageManager)
    {
        android.os.storage.IStorageManager r0, $r1;
        java.lang.IllegalStateException $r2;

        r0 := @parameter0: android.os.storage.IStorageManager;

        $r1 = <android.os.storage.IStorageManager$Stub$Proxy: android.os.storage.IStorageManager sDefaultImpl>;

        if $r1 != null goto label2;

        if r0 == null goto label1;

        <android.os.storage.IStorageManager$Stub$Proxy: android.os.storage.IStorageManager sDefaultImpl> = r0;

        return 1;

     label1:
        return 0;

     label2:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("setDefaultImpl() called twice");

        throw $r2;
    }

    public android.os.IBinder asBinder()
    {
        android.os.storage.IStorageManager$Stub r0;

        r0 := @this: android.os.storage.IStorageManager$Stub;

        return r0;
    }

    public java.lang.String getTransactionName(int)
    {
        android.os.storage.IStorageManager$Stub r0;
        int i0;
        java.lang.String $r1;

        r0 := @this: android.os.storage.IStorageManager$Stub;

        i0 := @parameter0: int;

        $r1 = staticinvoke <android.os.storage.IStorageManager$Stub: java.lang.String getDefaultTransactionName(int)>(i0);

        return $r1;
    }

    public boolean onTransact(int, android.os.Parcel, android.os.Parcel, int) throws android.os.RemoteException
    {
        android.os.storage.IStorageManager$Stub r0;
        android.os.Parcel r1, r61;
        java.lang.String r2, r3, $r11, $r12, $r13, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r32, $r35, $r38, $r39, $r40, $r41, $r42, $r43, $r44, $r45, $r46, $r47, $r48, $r49, $r50, $r51, $r52, $r53, $r58, r62, r65, r69, r70, r72, r73, r74;
        android.os.storage.IObbActionListener r4, $r15;
        android.os.IBinder $r5, $r7, $r9, $r14, $r16, $r33, $r36, $r54;
        android.os.storage.IStorageEventListener $r6, $r8;
        android.os.storage.IStorageShutdownObserver $r10;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, i41, i42, i46, i47, i48, i49, i50, i51, i52, i54, i55, i56, i57, i58, i59, i60;
        android.os.Parcelable$Creator $r17;
        java.lang.Object $r18;
        byte[] $r30, $r31, $r56, $r57, $r59, $r60;
        android.os.IVoldTaskListener $r34, $r55;
        android.content.pm.IPackageMoveObserver $r37;
        long $l25, l43, l44, l45, l53;
        boolean $z2, z3, z4, z5, z6, z7, z8, z9, z10;
        android.os.ParcelFileDescriptor r63;
        com.android.internal.os.AppFuseMount r64;
        android.os.storage.VolumeRecord[] r66;
        android.os.storage.VolumeInfo[] r67;
        android.os.storage.DiskInfo[] r68;
        android.os.storage.StorageVolume[] r71;
        android.content.res.ObbInfo r75;

        r0 := @this: android.os.storage.IStorageManager$Stub;

        i41 := @parameter0: int;

        r61 := @parameter1: android.os.Parcel;

        r1 := @parameter2: android.os.Parcel;

        i42 := @parameter3: int;

        if i41 == 1 goto label80;

        if i41 == 2 goto label79;

        if i41 == 20 goto label78;

        if i41 == 1598968902 goto label77;

        if i41 == 32 goto label76;

        if i41 == 33 goto label75;

        if i41 == 42 goto label74;

        if i41 == 43 goto label73;

        z3 = 0;

        tableswitch(i41)
        {
            case 22: goto label70;
            case 23: goto label68;
            case 24: goto label67;
            case 25: goto label66;
            default: goto label01;
        };

     label01:
        tableswitch(i41)
        {
            case 27: goto label65;
            case 28: goto label64;
            case 29: goto label63;
            case 30: goto label62;
            default: goto label02;
        };

     label02:
        tableswitch(i41)
        {
            case 35: goto label61;
            case 36: goto label60;
            case 37: goto label59;
            case 38: goto label58;
            case 39: goto label57;
            case 40: goto label56;
            default: goto label03;
        };

     label03:
        tableswitch(i41)
        {
            case 45: goto label55;
            case 46: goto label54;
            case 47: goto label53;
            case 48: goto label52;
            case 49: goto label51;
            case 50: goto label50;
            case 51: goto label49;
            case 52: goto label48;
            case 53: goto label47;
            case 54: goto label46;
            case 55: goto label45;
            case 56: goto label44;
            case 57: goto label43;
            case 58: goto label42;
            case 59: goto label41;
            case 60: goto label40;
            case 61: goto label39;
            case 62: goto label37;
            case 63: goto label36;
            case 64: goto label35;
            case 65: goto label34;
            case 66: goto label33;
            case 67: goto label32;
            case 68: goto label31;
            case 69: goto label30;
            default: goto label04;
        };

     label04:
        tableswitch(i41)
        {
            case 71: goto label29;
            case 72: goto label28;
            case 73: goto label27;
            case 74: goto label24;
            case 75: goto label21;
            case 76: goto label20;
            case 77: goto label19;
            case 78: goto label18;
            case 79: goto label17;
            case 80: goto label16;
            case 81: goto label15;
            default: goto label05;
        };

     label05:
        tableswitch(i41)
        {
            case 84: goto label14;
            case 85: goto label13;
            case 86: goto label12;
            case 87: goto label11;
            case 88: goto label09;
            case 89: goto label08;
            case 90: goto label07;
            default: goto label06;
        };

     label06:
        $z2 = specialinvoke r0.<android.os.Binder: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>(i41, r61, r1, i42);

        return $z2;

     label07:
        virtualinvoke r61.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.storage.IStorageManager");

        $r58 = virtualinvoke r61.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke r0.<android.os.storage.IStorageManager$Stub: void fixupAppDir(java.lang.String)>($r58);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label08:
        virtualinvoke r61.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.storage.IStorageManager");

        $i37 = virtualinvoke r61.<android.os.Parcel: int readInt()>();

        $i38 = virtualinvoke r61.<android.os.Parcel: int readInt()>();

        $r59 = virtualinvoke r61.<android.os.Parcel: byte[] createByteArray()>();

        $r60 = virtualinvoke r61.<android.os.Parcel: byte[] createByteArray()>();

        virtualinvoke r0.<android.os.storage.IStorageManager$Stub: void clearUserKeyAuth(int,int,byte[],byte[])>($i37, $i38, $r59, $r60);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label09:
        virtualinvoke r61.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.storage.IStorageManager");

        r62 = virtualinvoke r61.<android.os.Parcel: java.lang.String readString()>();

        $i39 = virtualinvoke r61.<android.os.Parcel: int readInt()>();

        if $i39 == 0 goto label10;

        z3 = 1;

     label10:
        virtualinvoke r0.<android.os.storage.IStorageManager$Stub: void abortChanges(java.lang.String,boolean)>(r62, z3);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label11:
        virtualinvoke r61.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.storage.IStorageManager");

        z4 = virtualinvoke r0.<android.os.storage.IStorageManager$Stub: boolean needsCheckpoint()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i56 = (int) z4;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i56);

        return 1;

     label12:
        virtualinvoke r61.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.storage.IStorageManager");

        $i40 = virtualinvoke r61.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.os.storage.IStorageManager$Stub: void startCheckpoint(int)>($i40);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label13:
        virtualinvoke r61.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.storage.IStorageManager");

        z5 = virtualinvoke r0.<android.os.storage.IStorageManager$Stub: boolean supportsCheckpoint()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i57 = (int) z5;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i57);

        return 1;

     label14:
        virtualinvoke r61.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.storage.IStorageManager");

        virtualinvoke r0.<android.os.storage.IStorageManager$Stub: void commitChanges()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label15:
        virtualinvoke r61.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.storage.IStorageManager");

        virtualinvoke r0.<android.os.storage.IStorageManager$Stub: void abortIdleMaintenance()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label16:
        virtualinvoke r61.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.storage.IStorageManager");

        virtualinvoke r0.<android.os.storage.IStorageManager$Stub: void runIdleMaintenance()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label17:
        virtualinvoke r61.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.storage.IStorageManager");

        $r48 = virtualinvoke r61.<android.os.Parcel: java.lang.String readString()>();

        $l25 = virtualinvoke r61.<android.os.Parcel: long readLong()>();

        $i26 = virtualinvoke r61.<android.os.Parcel: int readInt()>();

        $r49 = virtualinvoke r61.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke r0.<android.os.storage.IStorageManager$Stub: void allocateBytes(java.lang.String,long,int,java.lang.String)>($r48, $l25, $i26, $r49);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label18:
        virtualinvoke r61.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.storage.IStorageManager");

        $r50 = virtualinvoke r61.<android.os.Parcel: java.lang.String readString()>();

        $i27 = virtualinvoke r61.<android.os.Parcel: int readInt()>();

        $r51 = virtualinvoke r61.<android.os.Parcel: java.lang.String readString()>();

        l43 = virtualinvoke r0.<android.os.storage.IStorageManager$Stub: long getAllocatableBytes(java.lang.String,int,java.lang.String)>($r50, $i27, $r51);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>(l43);

        return 1;

     label19:
        virtualinvoke r61.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.storage.IStorageManager");

        $r52 = virtualinvoke r61.<android.os.Parcel: java.lang.String readString()>();

        $i28 = virtualinvoke r61.<android.os.Parcel: int readInt()>();

        l44 = virtualinvoke r0.<android.os.storage.IStorageManager$Stub: long getCacheSizeBytes(java.lang.String,int)>($r52, $i28);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>(l44);

        return 1;

     label20:
        virtualinvoke r61.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.storage.IStorageManager");

        $r53 = virtualinvoke r61.<android.os.Parcel: java.lang.String readString()>();

        $i29 = virtualinvoke r61.<android.os.Parcel: int readInt()>();

        l45 = virtualinvoke r0.<android.os.storage.IStorageManager$Stub: long getCacheQuotaBytes(java.lang.String,int)>($r53, $i29);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>(l45);

        return 1;

     label21:
        virtualinvoke r61.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.storage.IStorageManager");

        $i30 = virtualinvoke r61.<android.os.Parcel: int readInt()>();

        $i31 = virtualinvoke r61.<android.os.Parcel: int readInt()>();

        $i32 = virtualinvoke r61.<android.os.Parcel: int readInt()>();

        r63 = virtualinvoke r0.<android.os.storage.IStorageManager$Stub: android.os.ParcelFileDescriptor openProxyFileDescriptor(int,int,int)>($i30, $i31, $i32);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        if r63 == null goto label22;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r63.<android.os.ParcelFileDescriptor: void writeToParcel(android.os.Parcel,int)>(r1, 1);

        goto label23;

     label22:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label23:
        return 1;

     label24:
        virtualinvoke r61.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.storage.IStorageManager");

        r64 = virtualinvoke r0.<android.os.storage.IStorageManager$Stub: com.android.internal.os.AppFuseMount mountProxyFileDescriptorBridge()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        if r64 == null goto label25;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r64.<com.android.internal.os.AppFuseMount: void writeToParcel(android.os.Parcel,int)>(r1, 1);

        goto label26;

     label25:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label26:
        return 1;

     label27:
        virtualinvoke r61.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.storage.IStorageManager");

        $i33 = virtualinvoke r61.<android.os.Parcel: int readInt()>();

        $r54 = virtualinvoke r61.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r55 = staticinvoke <android.os.IVoldTaskListener$Stub: android.os.IVoldTaskListener asInterface(android.os.IBinder)>($r54);

        virtualinvoke r0.<android.os.storage.IStorageManager$Stub: void fstrim(int,android.os.IVoldTaskListener)>($i33, $r55);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label28:
        virtualinvoke r61.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.storage.IStorageManager");

        $i34 = virtualinvoke r61.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.os.storage.IStorageManager$Stub: void fixateNewestUserKeyAuth(int)>($i34);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label29:
        virtualinvoke r61.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.storage.IStorageManager");

        $i35 = virtualinvoke r61.<android.os.Parcel: int readInt()>();

        $i36 = virtualinvoke r61.<android.os.Parcel: int readInt()>();

        $r56 = virtualinvoke r61.<android.os.Parcel: byte[] createByteArray()>();

        $r57 = virtualinvoke r61.<android.os.Parcel: byte[] createByteArray()>();

        virtualinvoke r0.<android.os.storage.IStorageManager$Stub: void addUserKeyAuth(int,int,byte[],byte[])>($i35, $i36, $r56, $r57);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label30:
        virtualinvoke r61.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.storage.IStorageManager");

        z6 = virtualinvoke r0.<android.os.storage.IStorageManager$Stub: boolean isConvertibleToFBE()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i58 = (int) z6;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i58);

        return 1;

     label31:
        virtualinvoke r61.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.storage.IStorageManager");

        $r28 = virtualinvoke r61.<android.os.Parcel: java.lang.String readString()>();

        $i7 = virtualinvoke r61.<android.os.Parcel: int readInt()>();

        $i8 = virtualinvoke r61.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.os.storage.IStorageManager$Stub: void destroyUserStorage(java.lang.String,int,int)>($r28, $i7, $i8);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label32:
        virtualinvoke r61.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.storage.IStorageManager");

        $r29 = virtualinvoke r61.<android.os.Parcel: java.lang.String readString()>();

        $i9 = virtualinvoke r61.<android.os.Parcel: int readInt()>();

        $i10 = virtualinvoke r61.<android.os.Parcel: int readInt()>();

        $i11 = virtualinvoke r61.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.os.storage.IStorageManager$Stub: void prepareUserStorage(java.lang.String,int,int,int)>($r29, $i9, $i10, $i11);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label33:
        virtualinvoke r61.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.storage.IStorageManager");

        $i12 = virtualinvoke r61.<android.os.Parcel: int readInt()>();

        z7 = virtualinvoke r0.<android.os.storage.IStorageManager$Stub: boolean isUserKeyUnlocked(int)>($i12);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i59 = (int) z7;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i59);

        return 1;

     label34:
        virtualinvoke r61.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.storage.IStorageManager");

        $i13 = virtualinvoke r61.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.os.storage.IStorageManager$Stub: void lockUserKey(int)>($i13);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label35:
        virtualinvoke r61.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.storage.IStorageManager");

        $i14 = virtualinvoke r61.<android.os.Parcel: int readInt()>();

        $i15 = virtualinvoke r61.<android.os.Parcel: int readInt()>();

        $r30 = virtualinvoke r61.<android.os.Parcel: byte[] createByteArray()>();

        $r31 = virtualinvoke r61.<android.os.Parcel: byte[] createByteArray()>();

        virtualinvoke r0.<android.os.storage.IStorageManager$Stub: void unlockUserKey(int,int,byte[],byte[])>($i14, $i15, $r30, $r31);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label36:
        virtualinvoke r61.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.storage.IStorageManager");

        $i16 = virtualinvoke r61.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.os.storage.IStorageManager$Stub: void destroyUserKey(int)>($i16);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label37:
        virtualinvoke r61.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.storage.IStorageManager");

        i46 = virtualinvoke r61.<android.os.Parcel: int readInt()>();

        i47 = virtualinvoke r61.<android.os.Parcel: int readInt()>();

        z8 = 0;

        $i17 = virtualinvoke r61.<android.os.Parcel: int readInt()>();

        if $i17 == 0 goto label38;

        z8 = 1;

     label38:
        virtualinvoke r0.<android.os.storage.IStorageManager$Stub: void createUserKey(int,int,boolean)>(i46, i47, z8);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label39:
        virtualinvoke r61.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.storage.IStorageManager");

        $i18 = virtualinvoke r61.<android.os.Parcel: int readInt()>();

        $i19 = virtualinvoke r61.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.os.storage.IStorageManager$Stub: void setDebugFlags(int,int)>($i18, $i19);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label40:
        virtualinvoke r61.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.storage.IStorageManager");

        $r32 = virtualinvoke r61.<android.os.Parcel: java.lang.String readString()>();

        $r33 = virtualinvoke r61.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r34 = staticinvoke <android.os.IVoldTaskListener$Stub: android.os.IVoldTaskListener asInterface(android.os.IBinder)>($r33);

        virtualinvoke r0.<android.os.storage.IStorageManager$Stub: void benchmark(java.lang.String,android.os.IVoldTaskListener)>($r32, $r34);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label41:
        virtualinvoke r61.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.storage.IStorageManager");

        $r35 = virtualinvoke r61.<android.os.Parcel: java.lang.String readString()>();

        $r36 = virtualinvoke r61.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r37 = staticinvoke <android.content.pm.IPackageMoveObserver$Stub: android.content.pm.IPackageMoveObserver asInterface(android.os.IBinder)>($r36);

        virtualinvoke r0.<android.os.storage.IStorageManager$Stub: void setPrimaryStorageUuid(java.lang.String,android.content.pm.IPackageMoveObserver)>($r35, $r37);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label42:
        virtualinvoke r61.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.storage.IStorageManager");

        r65 = virtualinvoke r0.<android.os.storage.IStorageManager$Stub: java.lang.String getPrimaryStorageUuid()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r65);

        return 1;

     label43:
        virtualinvoke r61.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.storage.IStorageManager");

        virtualinvoke r0.<android.os.storage.IStorageManager$Stub: void forgetAllVolumes()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label44:
        virtualinvoke r61.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.storage.IStorageManager");

        $r38 = virtualinvoke r61.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke r0.<android.os.storage.IStorageManager$Stub: void forgetVolume(java.lang.String)>($r38);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label45:
        virtualinvoke r61.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.storage.IStorageManager");

        $r39 = virtualinvoke r61.<android.os.Parcel: java.lang.String readString()>();

        $i20 = virtualinvoke r61.<android.os.Parcel: int readInt()>();

        $i21 = virtualinvoke r61.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.os.storage.IStorageManager$Stub: void setVolumeUserFlags(java.lang.String,int,int)>($r39, $i20, $i21);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label46:
        virtualinvoke r61.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.storage.IStorageManager");

        $r40 = virtualinvoke r61.<android.os.Parcel: java.lang.String readString()>();

        $r41 = virtualinvoke r61.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke r0.<android.os.storage.IStorageManager$Stub: void setVolumeNickname(java.lang.String,java.lang.String)>($r40, $r41);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label47:
        virtualinvoke r61.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.storage.IStorageManager");

        $r42 = virtualinvoke r61.<android.os.Parcel: java.lang.String readString()>();

        $i22 = virtualinvoke r61.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.os.storage.IStorageManager$Stub: void partitionMixed(java.lang.String,int)>($r42, $i22);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label48:
        virtualinvoke r61.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.storage.IStorageManager");

        $r43 = virtualinvoke r61.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke r0.<android.os.storage.IStorageManager$Stub: void partitionPrivate(java.lang.String)>($r43);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label49:
        virtualinvoke r61.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.storage.IStorageManager");

        $r44 = virtualinvoke r61.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke r0.<android.os.storage.IStorageManager$Stub: void partitionPublic(java.lang.String)>($r44);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label50:
        virtualinvoke r61.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.storage.IStorageManager");

        $r45 = virtualinvoke r61.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke r0.<android.os.storage.IStorageManager$Stub: void format(java.lang.String)>($r45);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label51:
        virtualinvoke r61.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.storage.IStorageManager");

        $r46 = virtualinvoke r61.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke r0.<android.os.storage.IStorageManager$Stub: void unmount(java.lang.String)>($r46);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label52:
        virtualinvoke r61.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.storage.IStorageManager");

        $r47 = virtualinvoke r61.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke r0.<android.os.storage.IStorageManager$Stub: void mount(java.lang.String)>($r47);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label53:
        virtualinvoke r61.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.storage.IStorageManager");

        $i23 = virtualinvoke r61.<android.os.Parcel: int readInt()>();

        r66 = virtualinvoke r0.<android.os.storage.IStorageManager$Stub: android.os.storage.VolumeRecord[] getVolumeRecords(int)>($i23);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeTypedArray(android.os.Parcelable[],int)>(r66, 1);

        return 1;

     label54:
        virtualinvoke r61.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.storage.IStorageManager");

        $i24 = virtualinvoke r61.<android.os.Parcel: int readInt()>();

        r67 = virtualinvoke r0.<android.os.storage.IStorageManager$Stub: android.os.storage.VolumeInfo[] getVolumes(int)>($i24);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeTypedArray(android.os.Parcelable[],int)>(r67, 1);

        return 1;

     label55:
        virtualinvoke r61.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.storage.IStorageManager");

        r68 = virtualinvoke r0.<android.os.storage.IStorageManager$Stub: android.os.storage.DiskInfo[] getDisks()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeTypedArray(android.os.Parcelable[],int)>(r68, 1);

        return 1;

     label56:
        virtualinvoke r61.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.storage.IStorageManager");

        $r23 = virtualinvoke r61.<android.os.Parcel: java.lang.String readString()>();

        r69 = virtualinvoke r0.<android.os.storage.IStorageManager$Stub: java.lang.String getField(java.lang.String)>($r23);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r69);

        return 1;

     label57:
        virtualinvoke r61.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.storage.IStorageManager");

        $r24 = virtualinvoke r61.<android.os.Parcel: java.lang.String readString()>();

        $r25 = virtualinvoke r61.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke r0.<android.os.storage.IStorageManager$Stub: void setField(java.lang.String,java.lang.String)>($r24, $r25);

        return 1;

     label58:
        virtualinvoke r61.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.storage.IStorageManager");

        virtualinvoke r0.<android.os.storage.IStorageManager$Stub: void clearPassword()>();

        return 1;

     label59:
        virtualinvoke r61.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.storage.IStorageManager");

        r70 = virtualinvoke r0.<android.os.storage.IStorageManager$Stub: java.lang.String getPassword()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r70);

        return 1;

     label60:
        virtualinvoke r61.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.storage.IStorageManager");

        i48 = virtualinvoke r0.<android.os.storage.IStorageManager$Stub: int getPasswordType()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i48);

        return 1;

     label61:
        virtualinvoke r61.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.storage.IStorageManager");

        $r26 = virtualinvoke r61.<android.os.Parcel: java.lang.String readString()>();

        $r27 = virtualinvoke r61.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke r0.<android.os.storage.IStorageManager$Stub: void mkdirs(java.lang.String,java.lang.String)>($r26, $r27);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label62:
        virtualinvoke r61.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.storage.IStorageManager");

        $i3 = virtualinvoke r61.<android.os.Parcel: int readInt()>();

        $r19 = virtualinvoke r61.<android.os.Parcel: java.lang.String readString()>();

        $i4 = virtualinvoke r61.<android.os.Parcel: int readInt()>();

        r71 = virtualinvoke r0.<android.os.storage.IStorageManager$Stub: android.os.storage.StorageVolume[] getVolumeList(int,java.lang.String,int)>($i3, $r19, $i4);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeTypedArray(android.os.Parcelable[],int)>(r71, 1);

        return 1;

     label63:
        virtualinvoke r61.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.storage.IStorageManager");

        $i5 = virtualinvoke r61.<android.os.Parcel: int readInt()>();

        $r20 = virtualinvoke r61.<android.os.Parcel: java.lang.String readString()>();

        i49 = virtualinvoke r0.<android.os.storage.IStorageManager$Stub: int changeEncryptionPassword(int,java.lang.String)>($i5, $r20);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i49);

        return 1;

     label64:
        virtualinvoke r61.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.storage.IStorageManager");

        $i6 = virtualinvoke r61.<android.os.Parcel: int readInt()>();

        $r21 = virtualinvoke r61.<android.os.Parcel: java.lang.String readString()>();

        i50 = virtualinvoke r0.<android.os.storage.IStorageManager$Stub: int encryptStorage(int,java.lang.String)>($i6, $r21);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i50);

        return 1;

     label65:
        virtualinvoke r61.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.storage.IStorageManager");

        $r22 = virtualinvoke r61.<android.os.Parcel: java.lang.String readString()>();

        i51 = virtualinvoke r0.<android.os.storage.IStorageManager$Stub: int decryptStorage(java.lang.String)>($r22);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i51);

        return 1;

     label66:
        virtualinvoke r61.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.storage.IStorageManager");

        $r12 = virtualinvoke r61.<android.os.Parcel: java.lang.String readString()>();

        r72 = virtualinvoke r0.<android.os.storage.IStorageManager$Stub: java.lang.String getMountedObbPath(java.lang.String)>($r12);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r72);

        return 1;

     label67:
        virtualinvoke r61.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.storage.IStorageManager");

        $r13 = virtualinvoke r61.<android.os.Parcel: java.lang.String readString()>();

        z9 = virtualinvoke r0.<android.os.storage.IStorageManager$Stub: boolean isObbMounted(java.lang.String)>($r13);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i60 = (int) z9;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i60);

        return 1;

     label68:
        virtualinvoke r61.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.storage.IStorageManager");

        r73 = virtualinvoke r61.<android.os.Parcel: java.lang.String readString()>();

        z10 = 0;

        $i0 = virtualinvoke r61.<android.os.Parcel: int readInt()>();

        if $i0 == 0 goto label69;

        z10 = 1;

     label69:
        $r14 = virtualinvoke r61.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r15 = staticinvoke <android.os.storage.IObbActionListener$Stub: android.os.storage.IObbActionListener asInterface(android.os.IBinder)>($r14);

        $i1 = virtualinvoke r61.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.os.storage.IStorageManager$Stub: void unmountObb(java.lang.String,boolean,android.os.storage.IObbActionListener,int)>(r73, z10, $r15, $i1);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label70:
        virtualinvoke r61.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.storage.IStorageManager");

        r2 = virtualinvoke r61.<android.os.Parcel: java.lang.String readString()>();

        r3 = virtualinvoke r61.<android.os.Parcel: java.lang.String readString()>();

        r74 = virtualinvoke r61.<android.os.Parcel: java.lang.String readString()>();

        $r16 = virtualinvoke r61.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        r4 = staticinvoke <android.os.storage.IObbActionListener$Stub: android.os.storage.IObbActionListener asInterface(android.os.IBinder)>($r16);

        i52 = virtualinvoke r61.<android.os.Parcel: int readInt()>();

        $i2 = virtualinvoke r61.<android.os.Parcel: int readInt()>();

        if $i2 == 0 goto label71;

        $r17 = <android.content.res.ObbInfo: android.os.Parcelable$Creator CREATOR>;

        $r18 = interfaceinvoke $r17.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r61);

        r75 = (android.content.res.ObbInfo) $r18;

        goto label72;

     label71:
        r75 = null;

     label72:
        virtualinvoke r0.<android.os.storage.IStorageManager$Stub: void mountObb(java.lang.String,java.lang.String,java.lang.String,android.os.storage.IObbActionListener,int,android.content.res.ObbInfo)>(r2, r3, r74, r4, i52, r75);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label73:
        virtualinvoke r61.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.storage.IStorageManager");

        virtualinvoke r0.<android.os.storage.IStorageManager$Stub: void runMaintenance()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label74:
        virtualinvoke r61.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.storage.IStorageManager");

        l53 = virtualinvoke r0.<android.os.storage.IStorageManager$Stub: long lastMaintenance()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>(l53);

        return 1;

     label75:
        virtualinvoke r61.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.storage.IStorageManager");

        $r11 = virtualinvoke r61.<android.os.Parcel: java.lang.String readString()>();

        i54 = virtualinvoke r0.<android.os.storage.IStorageManager$Stub: int verifyEncryptionPassword(java.lang.String)>($r11);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i54);

        return 1;

     label76:
        virtualinvoke r61.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.storage.IStorageManager");

        i55 = virtualinvoke r0.<android.os.storage.IStorageManager$Stub: int getEncryptionState()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i55);

        return 1;

     label77:
        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>("android.os.storage.IStorageManager");

        return 1;

     label78:
        virtualinvoke r61.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.storage.IStorageManager");

        $r9 = virtualinvoke r61.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r10 = staticinvoke <android.os.storage.IStorageShutdownObserver$Stub: android.os.storage.IStorageShutdownObserver asInterface(android.os.IBinder)>($r9);

        virtualinvoke r0.<android.os.storage.IStorageManager$Stub: void shutdown(android.os.storage.IStorageShutdownObserver)>($r10);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label79:
        virtualinvoke r61.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.storage.IStorageManager");

        $r7 = virtualinvoke r61.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r8 = staticinvoke <android.os.storage.IStorageEventListener$Stub: android.os.storage.IStorageEventListener asInterface(android.os.IBinder)>($r7);

        virtualinvoke r0.<android.os.storage.IStorageManager$Stub: void unregisterListener(android.os.storage.IStorageEventListener)>($r8);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label80:
        virtualinvoke r61.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.storage.IStorageManager");

        $r5 = virtualinvoke r61.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r6 = staticinvoke <android.os.storage.IStorageEventListener$Stub: android.os.storage.IStorageEventListener asInterface(android.os.IBinder)>($r5);

        virtualinvoke r0.<android.os.storage.IStorageManager$Stub: void registerListener(android.os.storage.IStorageEventListener)>($r6);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;
    }

    public static void <clinit>()
    {
        <android.os.storage.IStorageManager$Stub: int TRANSACTION_verifyEncryptionPassword> = 33;

        <android.os.storage.IStorageManager$Stub: int TRANSACTION_unregisterListener> = 2;

        <android.os.storage.IStorageManager$Stub: int TRANSACTION_unmountObb> = 23;

        <android.os.storage.IStorageManager$Stub: int TRANSACTION_unmount> = 49;

        <android.os.storage.IStorageManager$Stub: int TRANSACTION_unlockUserKey> = 64;

        <android.os.storage.IStorageManager$Stub: int TRANSACTION_supportsCheckpoint> = 85;

        <android.os.storage.IStorageManager$Stub: int TRANSACTION_startCheckpoint> = 86;

        <android.os.storage.IStorageManager$Stub: int TRANSACTION_shutdown> = 20;

        <android.os.storage.IStorageManager$Stub: int TRANSACTION_setVolumeUserFlags> = 55;

        <android.os.storage.IStorageManager$Stub: int TRANSACTION_setVolumeNickname> = 54;

        <android.os.storage.IStorageManager$Stub: int TRANSACTION_setPrimaryStorageUuid> = 59;

        <android.os.storage.IStorageManager$Stub: int TRANSACTION_setField> = 39;

        <android.os.storage.IStorageManager$Stub: int TRANSACTION_setDebugFlags> = 61;

        <android.os.storage.IStorageManager$Stub: int TRANSACTION_runMaintenance> = 43;

        <android.os.storage.IStorageManager$Stub: int TRANSACTION_runIdleMaintenance> = 80;

        <android.os.storage.IStorageManager$Stub: int TRANSACTION_registerListener> = 1;

        <android.os.storage.IStorageManager$Stub: int TRANSACTION_prepareUserStorage> = 67;

        <android.os.storage.IStorageManager$Stub: int TRANSACTION_partitionPublic> = 51;

        <android.os.storage.IStorageManager$Stub: int TRANSACTION_partitionPrivate> = 52;

        <android.os.storage.IStorageManager$Stub: int TRANSACTION_partitionMixed> = 53;

        <android.os.storage.IStorageManager$Stub: int TRANSACTION_openProxyFileDescriptor> = 75;

        <android.os.storage.IStorageManager$Stub: int TRANSACTION_needsCheckpoint> = 87;

        <android.os.storage.IStorageManager$Stub: int TRANSACTION_mountProxyFileDescriptorBridge> = 74;

        <android.os.storage.IStorageManager$Stub: int TRANSACTION_mountObb> = 22;

        <android.os.storage.IStorageManager$Stub: int TRANSACTION_mount> = 48;

        <android.os.storage.IStorageManager$Stub: int TRANSACTION_mkdirs> = 35;

        <android.os.storage.IStorageManager$Stub: int TRANSACTION_lockUserKey> = 65;

        <android.os.storage.IStorageManager$Stub: int TRANSACTION_lastMaintenance> = 42;

        <android.os.storage.IStorageManager$Stub: int TRANSACTION_isUserKeyUnlocked> = 66;

        <android.os.storage.IStorageManager$Stub: int TRANSACTION_isObbMounted> = 24;

        <android.os.storage.IStorageManager$Stub: int TRANSACTION_isConvertibleToFBE> = 69;

        <android.os.storage.IStorageManager$Stub: int TRANSACTION_getVolumes> = 46;

        <android.os.storage.IStorageManager$Stub: int TRANSACTION_getVolumeRecords> = 47;

        <android.os.storage.IStorageManager$Stub: int TRANSACTION_getVolumeList> = 30;

        <android.os.storage.IStorageManager$Stub: int TRANSACTION_getPrimaryStorageUuid> = 58;

        <android.os.storage.IStorageManager$Stub: int TRANSACTION_getPasswordType> = 36;

        <android.os.storage.IStorageManager$Stub: int TRANSACTION_getPassword> = 37;

        <android.os.storage.IStorageManager$Stub: int TRANSACTION_getMountedObbPath> = 25;

        <android.os.storage.IStorageManager$Stub: int TRANSACTION_getField> = 40;

        <android.os.storage.IStorageManager$Stub: int TRANSACTION_getEncryptionState> = 32;

        <android.os.storage.IStorageManager$Stub: int TRANSACTION_getDisks> = 45;

        <android.os.storage.IStorageManager$Stub: int TRANSACTION_getCacheSizeBytes> = 77;

        <android.os.storage.IStorageManager$Stub: int TRANSACTION_getCacheQuotaBytes> = 76;

        <android.os.storage.IStorageManager$Stub: int TRANSACTION_getAllocatableBytes> = 78;

        <android.os.storage.IStorageManager$Stub: int TRANSACTION_fstrim> = 73;

        <android.os.storage.IStorageManager$Stub: int TRANSACTION_format> = 50;

        <android.os.storage.IStorageManager$Stub: int TRANSACTION_forgetVolume> = 56;

        <android.os.storage.IStorageManager$Stub: int TRANSACTION_forgetAllVolumes> = 57;

        <android.os.storage.IStorageManager$Stub: int TRANSACTION_fixupAppDir> = 90;

        <android.os.storage.IStorageManager$Stub: int TRANSACTION_fixateNewestUserKeyAuth> = 72;

        <android.os.storage.IStorageManager$Stub: int TRANSACTION_encryptStorage> = 28;

        <android.os.storage.IStorageManager$Stub: int TRANSACTION_destroyUserStorage> = 68;

        <android.os.storage.IStorageManager$Stub: int TRANSACTION_destroyUserKey> = 63;

        <android.os.storage.IStorageManager$Stub: int TRANSACTION_decryptStorage> = 27;

        <android.os.storage.IStorageManager$Stub: int TRANSACTION_createUserKey> = 62;

        <android.os.storage.IStorageManager$Stub: int TRANSACTION_commitChanges> = 84;

        <android.os.storage.IStorageManager$Stub: int TRANSACTION_clearUserKeyAuth> = 89;

        <android.os.storage.IStorageManager$Stub: int TRANSACTION_clearPassword> = 38;

        <android.os.storage.IStorageManager$Stub: int TRANSACTION_changeEncryptionPassword> = 29;

        <android.os.storage.IStorageManager$Stub: int TRANSACTION_benchmark> = 60;

        <android.os.storage.IStorageManager$Stub: int TRANSACTION_allocateBytes> = 79;

        <android.os.storage.IStorageManager$Stub: int TRANSACTION_addUserKeyAuth> = 71;

        <android.os.storage.IStorageManager$Stub: int TRANSACTION_abortIdleMaintenance> = 81;

        <android.os.storage.IStorageManager$Stub: int TRANSACTION_abortChanges> = 88;

        <android.os.storage.IStorageManager$Stub: java.lang.String DESCRIPTOR> = "android.os.storage.IStorageManager";

        return;
    }
}
