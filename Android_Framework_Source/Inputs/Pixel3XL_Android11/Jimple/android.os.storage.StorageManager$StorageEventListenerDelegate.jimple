class android.os.storage.StorageManager$StorageEventListenerDelegate extends android.os.storage.IStorageEventListener$Stub
{
    final android.os.storage.StorageManager$StorageVolumeCallback mCallback;
    final java.util.concurrent.Executor mExecutor;
    final android.os.storage.StorageEventListener mListener;
    final android.os.storage.StorageManager this$0;

    public void <init>(android.os.storage.StorageManager, java.util.concurrent.Executor, android.os.storage.StorageEventListener, android.os.storage.StorageManager$StorageVolumeCallback)
    {
        android.os.storage.StorageManager$StorageEventListenerDelegate r0;
        android.os.storage.StorageManager r1;
        java.util.concurrent.Executor r2;
        android.os.storage.StorageEventListener r3;
        android.os.storage.StorageManager$StorageVolumeCallback r4;

        r0 := @this: android.os.storage.StorageManager$StorageEventListenerDelegate;

        r1 := @parameter0: android.os.storage.StorageManager;

        r2 := @parameter1: java.util.concurrent.Executor;

        r3 := @parameter2: android.os.storage.StorageEventListener;

        r4 := @parameter3: android.os.storage.StorageManager$StorageVolumeCallback;

        r0.<android.os.storage.StorageManager$StorageEventListenerDelegate: android.os.storage.StorageManager this$0> = r1;

        specialinvoke r0.<android.os.storage.IStorageEventListener$Stub: void <init>()>();

        r0.<android.os.storage.StorageManager$StorageEventListenerDelegate: java.util.concurrent.Executor mExecutor> = r2;

        r0.<android.os.storage.StorageManager$StorageEventListenerDelegate: android.os.storage.StorageEventListener mListener> = r3;

        r0.<android.os.storage.StorageManager$StorageEventListenerDelegate: android.os.storage.StorageManager$StorageVolumeCallback mCallback> = r4;

        return;
    }

    public void lambda$onDiskDestroyed$6$StorageManager$StorageEventListenerDelegate(android.os.storage.DiskInfo)
    {
        android.os.storage.StorageManager$StorageEventListenerDelegate r0;
        android.os.storage.DiskInfo r1;
        android.os.storage.StorageEventListener $r2;

        r0 := @this: android.os.storage.StorageManager$StorageEventListenerDelegate;

        r1 := @parameter0: android.os.storage.DiskInfo;

        $r2 = r0.<android.os.storage.StorageManager$StorageEventListenerDelegate: android.os.storage.StorageEventListener mListener>;

        virtualinvoke $r2.<android.os.storage.StorageEventListener: void onDiskDestroyed(android.os.storage.DiskInfo)>(r1);

        return;
    }

    public void lambda$onDiskScanned$5$StorageManager$StorageEventListenerDelegate(android.os.storage.DiskInfo, int)
    {
        android.os.storage.StorageManager$StorageEventListenerDelegate r0;
        android.os.storage.DiskInfo r1;
        int i0;
        android.os.storage.StorageEventListener $r2;

        r0 := @this: android.os.storage.StorageManager$StorageEventListenerDelegate;

        r1 := @parameter0: android.os.storage.DiskInfo;

        i0 := @parameter1: int;

        $r2 = r0.<android.os.storage.StorageManager$StorageEventListenerDelegate: android.os.storage.StorageEventListener mListener>;

        virtualinvoke $r2.<android.os.storage.StorageEventListener: void onDiskScanned(android.os.storage.DiskInfo,int)>(r1, i0);

        return;
    }

    public void lambda$onStorageStateChanged$1$StorageManager$StorageEventListenerDelegate(java.lang.String, java.lang.String, java.lang.String)
    {
        android.os.storage.StorageManager$StorageEventListenerDelegate r0;
        java.lang.String r1, $r6, r8, r9;
        android.os.storage.StorageEventListener $r2;
        android.os.storage.StorageManager $r3;
        java.util.List $r4;
        boolean $z0, $z1;
        java.lang.Object $r5;
        android.os.storage.StorageManager$StorageVolumeCallback $r7;
        java.util.Iterator r10;
        android.os.storage.StorageVolume r11;

        r0 := @this: android.os.storage.StorageManager$StorageEventListenerDelegate;

        r1 := @parameter0: java.lang.String;

        r8 := @parameter1: java.lang.String;

        r9 := @parameter2: java.lang.String;

        $r2 = r0.<android.os.storage.StorageManager$StorageEventListenerDelegate: android.os.storage.StorageEventListener mListener>;

        virtualinvoke $r2.<android.os.storage.StorageEventListener: void onStorageStateChanged(java.lang.String,java.lang.String,java.lang.String)>(r1, r8, r9);

        if r1 == null goto label3;

        $r3 = r0.<android.os.storage.StorageManager$StorageEventListenerDelegate: android.os.storage.StorageManager this$0>;

        $r4 = virtualinvoke $r3.<android.os.storage.StorageManager: java.util.List getStorageVolumes()>();

        r10 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke r10.<java.util.Iterator: java.lang.Object next()>();

        r11 = (android.os.storage.StorageVolume) $r5;

        $r6 = virtualinvoke r11.<android.os.storage.StorageVolume: java.lang.String getPath()>();

        $z1 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>(r1, $r6);

        if $z1 == 0 goto label2;

        $r7 = r0.<android.os.storage.StorageManager$StorageEventListenerDelegate: android.os.storage.StorageManager$StorageVolumeCallback mCallback>;

        virtualinvoke $r7.<android.os.storage.StorageManager$StorageVolumeCallback: void onStateChanged(android.os.storage.StorageVolume)>(r11);

     label2:
        goto label1;

     label3:
        return;
    }

    public void lambda$onUsbMassStorageConnectionChanged$0$StorageManager$StorageEventListenerDelegate(boolean)
    {
        android.os.storage.StorageManager$StorageEventListenerDelegate r0;
        boolean z0;
        android.os.storage.StorageEventListener $r1;

        r0 := @this: android.os.storage.StorageManager$StorageEventListenerDelegate;

        z0 := @parameter0: boolean;

        $r1 = r0.<android.os.storage.StorageManager$StorageEventListenerDelegate: android.os.storage.StorageEventListener mListener>;

        virtualinvoke $r1.<android.os.storage.StorageEventListener: void onUsbMassStorageConnectionChanged(boolean)>(z0);

        return;
    }

    public void lambda$onVolumeForgotten$4$StorageManager$StorageEventListenerDelegate(java.lang.String)
    {
        android.os.storage.StorageManager$StorageEventListenerDelegate r0;
        java.lang.String r1;
        android.os.storage.StorageEventListener $r2;

        r0 := @this: android.os.storage.StorageManager$StorageEventListenerDelegate;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<android.os.storage.StorageManager$StorageEventListenerDelegate: android.os.storage.StorageEventListener mListener>;

        virtualinvoke $r2.<android.os.storage.StorageEventListener: void onVolumeForgotten(java.lang.String)>(r1);

        return;
    }

    public void lambda$onVolumeRecordChanged$3$StorageManager$StorageEventListenerDelegate(android.os.storage.VolumeRecord)
    {
        android.os.storage.StorageManager$StorageEventListenerDelegate r0;
        android.os.storage.VolumeRecord r1;
        android.os.storage.StorageEventListener $r2;

        r0 := @this: android.os.storage.StorageManager$StorageEventListenerDelegate;

        r1 := @parameter0: android.os.storage.VolumeRecord;

        $r2 = r0.<android.os.storage.StorageManager$StorageEventListenerDelegate: android.os.storage.StorageEventListener mListener>;

        virtualinvoke $r2.<android.os.storage.StorageEventListener: void onVolumeRecordChanged(android.os.storage.VolumeRecord)>(r1);

        return;
    }

    public void lambda$onVolumeStateChanged$2$StorageManager$StorageEventListenerDelegate(android.os.storage.VolumeInfo, int, int)
    {
        android.os.storage.StorageManager$StorageEventListenerDelegate r0;
        int i0, i1, $i2;
        java.io.File r1;
        android.os.storage.StorageVolume r2;
        android.os.storage.StorageEventListener $r3;
        android.os.storage.StorageManager $r4;
        java.util.List $r5;
        boolean $z0, $z1;
        java.lang.Object $r6;
        java.lang.String $r7, $r8;
        android.os.storage.StorageManager$StorageVolumeCallback $r9;
        android.os.storage.VolumeInfo r10;
        java.util.Iterator r11;

        r0 := @this: android.os.storage.StorageManager$StorageEventListenerDelegate;

        r10 := @parameter0: android.os.storage.VolumeInfo;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r3 = r0.<android.os.storage.StorageManager$StorageEventListenerDelegate: android.os.storage.StorageEventListener mListener>;

        virtualinvoke $r3.<android.os.storage.StorageEventListener: void onVolumeStateChanged(android.os.storage.VolumeInfo,int,int)>(r10, i0, i1);

        $i2 = staticinvoke <android.os.UserHandle: int myUserId()>();

        r1 = virtualinvoke r10.<android.os.storage.VolumeInfo: java.io.File getPathForUser(int)>($i2);

        if r1 == null goto label3;

        $r4 = r0.<android.os.storage.StorageManager$StorageEventListenerDelegate: android.os.storage.StorageManager this$0>;

        $r5 = virtualinvoke $r4.<android.os.storage.StorageManager: java.util.List getStorageVolumes()>();

        r11 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r6 = interfaceinvoke r11.<java.util.Iterator: java.lang.Object next()>();

        r2 = (android.os.storage.StorageVolume) $r6;

        $r7 = virtualinvoke r1.<java.io.File: java.lang.String getAbsolutePath()>();

        $r8 = virtualinvoke r2.<android.os.storage.StorageVolume: java.lang.String getPath()>();

        $z1 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r7, $r8);

        if $z1 == 0 goto label2;

        $r9 = r0.<android.os.storage.StorageManager$StorageEventListenerDelegate: android.os.storage.StorageManager$StorageVolumeCallback mCallback>;

        virtualinvoke $r9.<android.os.storage.StorageManager$StorageVolumeCallback: void onStateChanged(android.os.storage.StorageVolume)>(r2);

     label2:
        goto label1;

     label3:
        return;
    }

    public void onDiskDestroyed(android.os.storage.DiskInfo) throws android.os.RemoteException
    {
        android.os.storage.StorageManager$StorageEventListenerDelegate r0;
        android.os.storage.DiskInfo r1;
        android.os.storage._$$Lambda$StorageManager$StorageEventListenerDelegate$WWIVLHEAL8WGcsLlQCXFZ9b3vCg $r2;
        java.util.concurrent.Executor $r3;

        r0 := @this: android.os.storage.StorageManager$StorageEventListenerDelegate;

        r1 := @parameter0: android.os.storage.DiskInfo;

        $r3 = r0.<android.os.storage.StorageManager$StorageEventListenerDelegate: java.util.concurrent.Executor mExecutor>;

        $r2 = new android.os.storage._$$Lambda$StorageManager$StorageEventListenerDelegate$WWIVLHEAL8WGcsLlQCXFZ9b3vCg;

        specialinvoke $r2.<android.os.storage._$$Lambda$StorageManager$StorageEventListenerDelegate$WWIVLHEAL8WGcsLlQCXFZ9b3vCg: void <init>(android.os.storage.StorageManager$StorageEventListenerDelegate,android.os.storage.DiskInfo)>(r0, r1);

        interfaceinvoke $r3.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r2);

        return;
    }

    public void onDiskScanned(android.os.storage.DiskInfo, int)
    {
        android.os.storage.StorageManager$StorageEventListenerDelegate r0;
        android.os.storage.DiskInfo r1;
        int i0;
        android.os.storage._$$Lambda$StorageManager$StorageEventListenerDelegate$omFTtK_HVLnUiKLog2nIDD0yvGg $r2;
        java.util.concurrent.Executor $r3;

        r0 := @this: android.os.storage.StorageManager$StorageEventListenerDelegate;

        r1 := @parameter0: android.os.storage.DiskInfo;

        i0 := @parameter1: int;

        $r3 = r0.<android.os.storage.StorageManager$StorageEventListenerDelegate: java.util.concurrent.Executor mExecutor>;

        $r2 = new android.os.storage._$$Lambda$StorageManager$StorageEventListenerDelegate$omFTtK_HVLnUiKLog2nIDD0yvGg;

        specialinvoke $r2.<android.os.storage._$$Lambda$StorageManager$StorageEventListenerDelegate$omFTtK_HVLnUiKLog2nIDD0yvGg: void <init>(android.os.storage.StorageManager$StorageEventListenerDelegate,android.os.storage.DiskInfo,int)>(r0, r1, i0);

        interfaceinvoke $r3.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r2);

        return;
    }

    public void onStorageStateChanged(java.lang.String, java.lang.String, java.lang.String)
    {
        android.os.storage.StorageManager$StorageEventListenerDelegate r0;
        java.lang.String r1, r2, r3;
        android.os.storage._$$Lambda$StorageManager$StorageEventListenerDelegate$GoEFKT1rhv7KuSkGeH69DO738lA $r4;
        java.util.concurrent.Executor $r5;

        r0 := @this: android.os.storage.StorageManager$StorageEventListenerDelegate;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        $r5 = r0.<android.os.storage.StorageManager$StorageEventListenerDelegate: java.util.concurrent.Executor mExecutor>;

        $r4 = new android.os.storage._$$Lambda$StorageManager$StorageEventListenerDelegate$GoEFKT1rhv7KuSkGeH69DO738lA;

        specialinvoke $r4.<android.os.storage._$$Lambda$StorageManager$StorageEventListenerDelegate$GoEFKT1rhv7KuSkGeH69DO738lA: void <init>(android.os.storage.StorageManager$StorageEventListenerDelegate,java.lang.String,java.lang.String,java.lang.String)>(r0, r1, r2, r3);

        interfaceinvoke $r5.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r4);

        return;
    }

    public void onUsbMassStorageConnectionChanged(boolean) throws android.os.RemoteException
    {
        android.os.storage.StorageManager$StorageEventListenerDelegate r0;
        boolean z0;
        android.os.storage._$$Lambda$StorageManager$StorageEventListenerDelegate$CPp_W20gR1fGCkqpcUmxn_igDvo $r1;
        java.util.concurrent.Executor $r2;

        r0 := @this: android.os.storage.StorageManager$StorageEventListenerDelegate;

        z0 := @parameter0: boolean;

        $r2 = r0.<android.os.storage.StorageManager$StorageEventListenerDelegate: java.util.concurrent.Executor mExecutor>;

        $r1 = new android.os.storage._$$Lambda$StorageManager$StorageEventListenerDelegate$CPp_W20gR1fGCkqpcUmxn_igDvo;

        specialinvoke $r1.<android.os.storage._$$Lambda$StorageManager$StorageEventListenerDelegate$CPp_W20gR1fGCkqpcUmxn_igDvo: void <init>(android.os.storage.StorageManager$StorageEventListenerDelegate,boolean)>(r0, z0);

        interfaceinvoke $r2.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r1);

        return;
    }

    public void onVolumeForgotten(java.lang.String)
    {
        android.os.storage.StorageManager$StorageEventListenerDelegate r0;
        java.lang.String r1;
        android.os.storage._$$Lambda$StorageManager$StorageEventListenerDelegate$yvuDY9iE3nJ_9H3lnLN54G_Lqb8 $r2;
        java.util.concurrent.Executor $r3;

        r0 := @this: android.os.storage.StorageManager$StorageEventListenerDelegate;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<android.os.storage.StorageManager$StorageEventListenerDelegate: java.util.concurrent.Executor mExecutor>;

        $r2 = new android.os.storage._$$Lambda$StorageManager$StorageEventListenerDelegate$yvuDY9iE3nJ_9H3lnLN54G_Lqb8;

        specialinvoke $r2.<android.os.storage._$$Lambda$StorageManager$StorageEventListenerDelegate$yvuDY9iE3nJ_9H3lnLN54G_Lqb8: void <init>(android.os.storage.StorageManager$StorageEventListenerDelegate,java.lang.String)>(r0, r1);

        interfaceinvoke $r3.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r2);

        return;
    }

    public void onVolumeRecordChanged(android.os.storage.VolumeRecord)
    {
        android.os.storage.StorageManager$StorageEventListenerDelegate r0;
        android.os.storage.VolumeRecord r1;
        android.os.storage._$$Lambda$StorageManager$StorageEventListenerDelegate$4eBMYk2W7Kja0aFJXtF_mwY_0ZA $r2;
        java.util.concurrent.Executor $r3;

        r0 := @this: android.os.storage.StorageManager$StorageEventListenerDelegate;

        r1 := @parameter0: android.os.storage.VolumeRecord;

        $r3 = r0.<android.os.storage.StorageManager$StorageEventListenerDelegate: java.util.concurrent.Executor mExecutor>;

        $r2 = new android.os.storage._$$Lambda$StorageManager$StorageEventListenerDelegate$4eBMYk2W7Kja0aFJXtF_mwY_0ZA;

        specialinvoke $r2.<android.os.storage._$$Lambda$StorageManager$StorageEventListenerDelegate$4eBMYk2W7Kja0aFJXtF_mwY_0ZA: void <init>(android.os.storage.StorageManager$StorageEventListenerDelegate,android.os.storage.VolumeRecord)>(r0, r1);

        interfaceinvoke $r3.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r2);

        return;
    }

    public void onVolumeStateChanged(android.os.storage.VolumeInfo, int, int)
    {
        android.os.storage.StorageManager$StorageEventListenerDelegate r0;
        android.os.storage.VolumeInfo r1;
        int i0, i1;
        android.os.storage._$$Lambda$StorageManager$StorageEventListenerDelegate$pyZP4UQS232_tqmtk5lSCyZx9qU $r2;
        java.util.concurrent.Executor $r3;

        r0 := @this: android.os.storage.StorageManager$StorageEventListenerDelegate;

        r1 := @parameter0: android.os.storage.VolumeInfo;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r3 = r0.<android.os.storage.StorageManager$StorageEventListenerDelegate: java.util.concurrent.Executor mExecutor>;

        $r2 = new android.os.storage._$$Lambda$StorageManager$StorageEventListenerDelegate$pyZP4UQS232_tqmtk5lSCyZx9qU;

        specialinvoke $r2.<android.os.storage._$$Lambda$StorageManager$StorageEventListenerDelegate$pyZP4UQS232_tqmtk5lSCyZx9qU: void <init>(android.os.storage.StorageManager$StorageEventListenerDelegate,android.os.storage.VolumeInfo,int,int)>(r0, r1, i0, i1);

        interfaceinvoke $r3.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r2);

        return;
    }
}
