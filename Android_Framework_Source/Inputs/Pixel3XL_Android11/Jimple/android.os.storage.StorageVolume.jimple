public final class android.os.storage.StorageVolume extends java.lang.Object implements android.os.Parcelable
{
    private static final java.lang.String ACTION_OPEN_EXTERNAL_DIRECTORY;
    public static final android.os.Parcelable$Creator CREATOR;
    public static final java.lang.String EXTRA_DIRECTORY_NAME;
    public static final java.lang.String EXTRA_STORAGE_VOLUME;
    public static final int STORAGE_ID_INVALID;
    public static final int STORAGE_ID_PRIMARY;
    private final boolean mAllowMassStorage;
    private final java.lang.String mDescription;
    private final boolean mEmulated;
    private final java.lang.String mFsUuid;
    private final java.lang.String mId;
    private final java.io.File mInternalPath;
    private final long mMaxFileSize;
    private final android.os.UserHandle mOwner;
    private final java.io.File mPath;
    private final boolean mPrimary;
    private final boolean mRemovable;
    private final java.lang.String mState;

    static void <clinit>()
    {
        android.os.storage.StorageVolume$1 $r0;

        <android.os.storage.StorageVolume: int STORAGE_ID_PRIMARY> = 65537;

        <android.os.storage.StorageVolume: int STORAGE_ID_INVALID> = 0;

        <android.os.storage.StorageVolume: java.lang.String EXTRA_STORAGE_VOLUME> = "android.os.storage.extra.STORAGE_VOLUME";

        <android.os.storage.StorageVolume: java.lang.String EXTRA_DIRECTORY_NAME> = "android.os.storage.extra.DIRECTORY_NAME";

        <android.os.storage.StorageVolume: java.lang.String ACTION_OPEN_EXTERNAL_DIRECTORY> = "android.os.storage.action.OPEN_EXTERNAL_DIRECTORY";

        $r0 = new android.os.storage.StorageVolume$1;

        specialinvoke $r0.<android.os.storage.StorageVolume$1: void <init>()>();

        <android.os.storage.StorageVolume: android.os.Parcelable$Creator CREATOR> = $r0;

        return;
    }

    private void <init>(android.os.Parcel)
    {
        android.os.storage.StorageVolume r0;
        android.os.Parcel r1;
        int i0, $i1, $i2, $i3;
        java.lang.String $r2, $r4, $r6, $r7, $r10, $r11;
        java.io.File $r3, $r5;
        long $l4;
        android.os.Parcelable $r8;
        android.os.UserHandle $r9;
        boolean z1, z2, z3, z4;

        r0 := @this: android.os.storage.StorageVolume;

        r1 := @parameter0: android.os.Parcel;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString8()>();

        r0.<android.os.storage.StorageVolume: java.lang.String mId> = $r2;

        $r3 = new java.io.File;

        $r4 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString8()>();

        specialinvoke $r3.<java.io.File: void <init>(java.lang.String)>($r4);

        r0.<android.os.storage.StorageVolume: java.io.File mPath> = $r3;

        $r5 = new java.io.File;

        $r6 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString8()>();

        specialinvoke $r5.<java.io.File: void <init>(java.lang.String)>($r6);

        r0.<android.os.storage.StorageVolume: java.io.File mInternalPath> = $r5;

        $r7 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString8()>();

        r0.<android.os.storage.StorageVolume: java.lang.String mDescription> = $r7;

        i0 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if i0 == 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        r0.<android.os.storage.StorageVolume: boolean mPrimary> = z1;

        $i1 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i1 == 0 goto label3;

        z2 = 1;

        goto label4;

     label3:
        z2 = 0;

     label4:
        r0.<android.os.storage.StorageVolume: boolean mRemovable> = z2;

        $i2 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i2 == 0 goto label5;

        z3 = 1;

        goto label6;

     label5:
        z3 = 0;

     label6:
        r0.<android.os.storage.StorageVolume: boolean mEmulated> = z3;

        $i3 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i3 == 0 goto label7;

        z4 = 1;

        goto label8;

     label7:
        z4 = 0;

     label8:
        r0.<android.os.storage.StorageVolume: boolean mAllowMassStorage> = z4;

        $l4 = virtualinvoke r1.<android.os.Parcel: long readLong()>();

        r0.<android.os.storage.StorageVolume: long mMaxFileSize> = $l4;

        $r8 = virtualinvoke r1.<android.os.Parcel: android.os.Parcelable readParcelable(java.lang.ClassLoader)>(null);

        $r9 = (android.os.UserHandle) $r8;

        r0.<android.os.storage.StorageVolume: android.os.UserHandle mOwner> = $r9;

        $r10 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString8()>();

        r0.<android.os.storage.StorageVolume: java.lang.String mFsUuid> = $r10;

        $r11 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString8()>();

        r0.<android.os.storage.StorageVolume: java.lang.String mState> = $r11;

        return;
    }

    void <init>(android.os.Parcel, android.os.storage.StorageVolume$1)
    {
        android.os.storage.StorageVolume r0;
        android.os.Parcel r1;
        android.os.storage.StorageVolume$1 r2;

        r0 := @this: android.os.storage.StorageVolume;

        r1 := @parameter0: android.os.Parcel;

        r2 := @parameter1: android.os.storage.StorageVolume$1;

        specialinvoke r0.<android.os.storage.StorageVolume: void <init>(android.os.Parcel)>(r1);

        return;
    }

    public void <init>(java.lang.String, java.io.File, java.io.File, java.lang.String, boolean, boolean, boolean, boolean, long, android.os.UserHandle, java.lang.String, java.lang.String)
    {
        android.os.storage.StorageVolume r0;
        java.lang.String r1, r4, r6, r7, $r9, $r15, $r19;
        java.io.File r2, r3, $r11, $r13;
        boolean z0, z1, z2, z3;
        long l0;
        android.os.UserHandle r5, $r17;
        java.lang.Object $r8, $r10, $r12, $r14, $r16, $r18;

        r0 := @this: android.os.storage.StorageVolume;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.io.File;

        r3 := @parameter2: java.io.File;

        r4 := @parameter3: java.lang.String;

        z0 := @parameter4: boolean;

        z1 := @parameter5: boolean;

        z2 := @parameter6: boolean;

        z3 := @parameter7: boolean;

        l0 := @parameter8: long;

        r5 := @parameter9: android.os.UserHandle;

        r6 := @parameter10: java.lang.String;

        r7 := @parameter11: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r8 = staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r9 = (java.lang.String) $r8;

        r0.<android.os.storage.StorageVolume: java.lang.String mId> = $r9;

        $r10 = staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r2);

        $r11 = (java.io.File) $r10;

        r0.<android.os.storage.StorageVolume: java.io.File mPath> = $r11;

        $r12 = staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r3);

        $r13 = (java.io.File) $r12;

        r0.<android.os.storage.StorageVolume: java.io.File mInternalPath> = $r13;

        $r14 = staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r4);

        $r15 = (java.lang.String) $r14;

        r0.<android.os.storage.StorageVolume: java.lang.String mDescription> = $r15;

        r0.<android.os.storage.StorageVolume: boolean mPrimary> = z0;

        r0.<android.os.storage.StorageVolume: boolean mRemovable> = z1;

        r0.<android.os.storage.StorageVolume: boolean mEmulated> = z2;

        r0.<android.os.storage.StorageVolume: boolean mAllowMassStorage> = z3;

        r0.<android.os.storage.StorageVolume: long mMaxFileSize> = l0;

        $r16 = staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r5);

        $r17 = (android.os.UserHandle) $r16;

        r0.<android.os.storage.StorageVolume: android.os.UserHandle mOwner> = $r17;

        r0.<android.os.storage.StorageVolume: java.lang.String mFsUuid> = r6;

        $r18 = staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r7);

        $r19 = (java.lang.String) $r18;

        r0.<android.os.storage.StorageVolume: java.lang.String mState> = $r19;

        return;
    }

    public static java.lang.String normalizeUuid(java.lang.String)
    {
        java.util.Locale $r0;
        java.lang.String r1, r2;

        r1 := @parameter0: java.lang.String;

        if r1 == null goto label1;

        $r0 = <java.util.Locale: java.util.Locale US>;

        r2 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r0);

        goto label2;

     label1:
        r2 = null;

     label2:
        return r2;
    }

    public boolean allowMassStorage()
    {
        android.os.storage.StorageVolume r0;
        boolean $z0;

        r0 := @this: android.os.storage.StorageVolume;

        $z0 = r0.<android.os.storage.StorageVolume: boolean mAllowMassStorage>;

        return $z0;
    }

    public android.content.Intent createAccessIntent(java.lang.String)
    {
        android.os.storage.StorageVolume r0;
        java.lang.String r1;
        boolean $z0, $z1;
        android.content.Intent $r3;

        r0 := @this: android.os.storage.StorageVolume;

        r1 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<android.os.storage.StorageVolume: boolean isPrimary()>();

        if $z0 == 0 goto label1;

        if r1 == null goto label2;

     label1:
        if r1 == null goto label3;

        $z1 = staticinvoke <android.os.Environment: boolean isStandardDirectory(java.lang.String)>(r1);

        if $z1 != 0 goto label3;

     label2:
        return null;

     label3:
        $r3 = new android.content.Intent;

        specialinvoke $r3.<android.content.Intent: void <init>(java.lang.String)>("android.os.storage.action.OPEN_EXTERNAL_DIRECTORY");

        virtualinvoke $r3.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("android.os.storage.extra.STORAGE_VOLUME", r0);

        virtualinvoke $r3.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("android.os.storage.extra.DIRECTORY_NAME", r1);

        return $r3;
    }

    public android.content.Intent createOpenDocumentTreeIntent()
    {
        android.os.storage.StorageVolume r0;
        boolean $z0;
        android.content.Intent $r1, $r2, $r3;
        java.lang.String r4;
        android.net.Uri r5;

        r0 := @this: android.os.storage.StorageVolume;

        $z0 = virtualinvoke r0.<android.os.storage.StorageVolume: boolean isEmulated()>();

        if $z0 == 0 goto label1;

        r4 = "primary";

        goto label2;

     label1:
        r4 = r0.<android.os.storage.StorageVolume: java.lang.String mFsUuid>;

     label2:
        r5 = staticinvoke <android.provider.DocumentsContract: android.net.Uri buildRootUri(java.lang.String,java.lang.String)>("com.android.externalstorage.documents", r4);

        $r1 = new android.content.Intent;

        specialinvoke $r1.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.OPEN_DOCUMENT_TREE");

        $r2 = virtualinvoke $r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("android.provider.extra.INITIAL_URI", r5);

        $r3 = virtualinvoke $r2.<android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)>("android.provider.extra.SHOW_ADVANCED", 1);

        return $r3;
    }

    public int describeContents()
    {
        android.os.storage.StorageVolume r0;

        r0 := @this: android.os.storage.StorageVolume;

        return 0;
    }

    public java.lang.String dump()
    {
        android.os.storage.StorageVolume r0;
        java.io.CharArrayWriter $r2;
        com.android.internal.util.IndentingPrintWriter $r3;
        java.lang.String $r4;

        r0 := @this: android.os.storage.StorageVolume;

        $r2 = new java.io.CharArrayWriter;

        specialinvoke $r2.<java.io.CharArrayWriter: void <init>()>();

        $r3 = new com.android.internal.util.IndentingPrintWriter;

        specialinvoke $r3.<com.android.internal.util.IndentingPrintWriter: void <init>(java.io.Writer,java.lang.String,int)>($r2, "    ", 80);

        virtualinvoke r0.<android.os.storage.StorageVolume: void dump(com.android.internal.util.IndentingPrintWriter)>($r3);

        $r4 = virtualinvoke $r2.<java.io.CharArrayWriter: java.lang.String toString()>();

        return $r4;
    }

    public void dump(com.android.internal.util.IndentingPrintWriter)
    {
        android.os.storage.StorageVolume r0;
        com.android.internal.util.IndentingPrintWriter r1;
        java.lang.String $r3, $r9, $r23, $r25;
        java.io.File $r5, $r7;
        boolean $z0, $z1, $z2, $z3;
        java.lang.Boolean $r11, $r13, $r15, $r17;
        long $l0;
        java.lang.Long $r19;
        android.os.UserHandle $r21;

        r0 := @this: android.os.storage.StorageVolume;

        r1 := @parameter0: com.android.internal.util.IndentingPrintWriter;

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>("StorageVolume:");

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter increaseIndent()>();

        $r3 = r0.<android.os.storage.StorageVolume: java.lang.String mId>;

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter printPair(java.lang.String,java.lang.Object)>("mId", $r3);

        $r5 = r0.<android.os.storage.StorageVolume: java.io.File mPath>;

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter printPair(java.lang.String,java.lang.Object)>("mPath", $r5);

        $r7 = r0.<android.os.storage.StorageVolume: java.io.File mInternalPath>;

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter printPair(java.lang.String,java.lang.Object)>("mInternalPath", $r7);

        $r9 = r0.<android.os.storage.StorageVolume: java.lang.String mDescription>;

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter printPair(java.lang.String,java.lang.Object)>("mDescription", $r9);

        $z0 = r0.<android.os.storage.StorageVolume: boolean mPrimary>;

        $r11 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter printPair(java.lang.String,java.lang.Object)>("mPrimary", $r11);

        $z1 = r0.<android.os.storage.StorageVolume: boolean mRemovable>;

        $r13 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1);

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter printPair(java.lang.String,java.lang.Object)>("mRemovable", $r13);

        $z2 = r0.<android.os.storage.StorageVolume: boolean mEmulated>;

        $r15 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z2);

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter printPair(java.lang.String,java.lang.Object)>("mEmulated", $r15);

        $z3 = r0.<android.os.storage.StorageVolume: boolean mAllowMassStorage>;

        $r17 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z3);

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter printPair(java.lang.String,java.lang.Object)>("mAllowMassStorage", $r17);

        $l0 = r0.<android.os.storage.StorageVolume: long mMaxFileSize>;

        $r19 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter printPair(java.lang.String,java.lang.Object)>("mMaxFileSize", $r19);

        $r21 = r0.<android.os.storage.StorageVolume: android.os.UserHandle mOwner>;

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter printPair(java.lang.String,java.lang.Object)>("mOwner", $r21);

        $r23 = r0.<android.os.storage.StorageVolume: java.lang.String mFsUuid>;

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter printPair(java.lang.String,java.lang.Object)>("mFsUuid", $r23);

        $r25 = r0.<android.os.storage.StorageVolume: java.lang.String mState>;

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter printPair(java.lang.String,java.lang.Object)>("mState", $r25);

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter decreaseIndent()>();

        return;
    }

    public boolean equals(java.lang.Object)
    {
        android.os.storage.StorageVolume r0, $r3;
        java.lang.Object r1;
        java.io.File r2, $r4;
        boolean $z0, $z1;

        r0 := @this: android.os.storage.StorageVolume;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof android.os.storage.StorageVolume;

        if $z0 == 0 goto label1;

        r2 = r0.<android.os.storage.StorageVolume: java.io.File mPath>;

        if r2 == null goto label1;

        $r3 = (android.os.storage.StorageVolume) r1;

        $r4 = $r3.<android.os.storage.StorageVolume: java.io.File mPath>;

        $z1 = virtualinvoke r2.<java.io.File: boolean equals(java.lang.Object)>($r4);

        return $z1;

     label1:
        return 0;
    }

    public java.lang.String getDescription(android.content.Context)
    {
        android.os.storage.StorageVolume r0;
        android.content.Context r1;
        java.lang.String $r2;

        r0 := @this: android.os.storage.StorageVolume;

        r1 := @parameter0: android.content.Context;

        $r2 = r0.<android.os.storage.StorageVolume: java.lang.String mDescription>;

        return $r2;
    }

    public java.io.File getDirectory()
    {
        android.os.storage.StorageVolume r0;
        java.lang.String r1;
        boolean $z0, $z1;
        java.io.File $r2;
        int i0;
        byte b1;

        r0 := @this: android.os.storage.StorageVolume;

        r1 = r0.<android.os.storage.StorageVolume: java.lang.String mState>;

        i0 = virtualinvoke r1.<java.lang.String: int hashCode()>();

        if i0 == 1242932856 goto label3;

        if i0 == 1299749220 goto label2;

     label1:
        goto label4;

     label2:
        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("mounted_ro");

        if $z1 == 0 goto label1;

        b1 = 1;

        goto label5;

     label3:
        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("mounted");

        if $z0 == 0 goto label1;

        b1 = 0;

        goto label5;

     label4:
        b1 = -1;

     label5:
        if b1 == 0 goto label6;

        if b1 == 1 goto label6;

        return null;

     label6:
        $r2 = r0.<android.os.storage.StorageVolume: java.io.File mPath>;

        return $r2;
    }

    public int getFatVolumeId()
    {
        android.os.storage.StorageVolume r0;
        long l0;
        int $i1, $i2;
        java.lang.String $r1, $r2, r4;
        java.lang.Throwable $r3;

        r0 := @this: android.os.storage.StorageVolume;

        r4 = r0.<android.os.storage.StorageVolume: java.lang.String mFsUuid>;

        if r4 == null goto label4;

        $i1 = virtualinvoke r4.<java.lang.String: int length()>();

        if $i1 == 9 goto label1;

        goto label4;

     label1:
        $r1 = r0.<android.os.storage.StorageVolume: java.lang.String mFsUuid>;

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("-", "");

        l0 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>($r2, 16);

     label2:
        $i2 = (int) l0;

        return $i2;

     label3:
        $r3 := @caughtexception;

        return -1;

     label4:
        return -1;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    public java.lang.String getId()
    {
        android.os.storage.StorageVolume r0;
        java.lang.String $r1;

        r0 := @this: android.os.storage.StorageVolume;

        $r1 = r0.<android.os.storage.StorageVolume: java.lang.String mId>;

        return $r1;
    }

    public java.lang.String getInternalPath()
    {
        android.os.storage.StorageVolume r0;
        java.io.File $r1;
        java.lang.String $r2;

        r0 := @this: android.os.storage.StorageVolume;

        $r1 = r0.<android.os.storage.StorageVolume: java.io.File mInternalPath>;

        $r2 = virtualinvoke $r1.<java.io.File: java.lang.String toString()>();

        return $r2;
    }

    public long getMaxFileSize()
    {
        android.os.storage.StorageVolume r0;
        long $l0;

        r0 := @this: android.os.storage.StorageVolume;

        $l0 = r0.<android.os.storage.StorageVolume: long mMaxFileSize>;

        return $l0;
    }

    public java.lang.String getMediaStoreVolumeName()
    {
        android.os.storage.StorageVolume r0;
        boolean $z0;
        java.lang.String $r1;

        r0 := @this: android.os.storage.StorageVolume;

        $z0 = virtualinvoke r0.<android.os.storage.StorageVolume: boolean isPrimary()>();

        if $z0 == 0 goto label1;

        return "external_primary";

     label1:
        $r1 = virtualinvoke r0.<android.os.storage.StorageVolume: java.lang.String getNormalizedUuid()>();

        return $r1;
    }

    public java.lang.String getNormalizedUuid()
    {
        android.os.storage.StorageVolume r0;
        java.lang.String $r1, $r2;

        r0 := @this: android.os.storage.StorageVolume;

        $r1 = r0.<android.os.storage.StorageVolume: java.lang.String mFsUuid>;

        $r2 = staticinvoke <android.os.storage.StorageVolume: java.lang.String normalizeUuid(java.lang.String)>($r1);

        return $r2;
    }

    public android.os.UserHandle getOwner()
    {
        android.os.storage.StorageVolume r0;
        android.os.UserHandle $r1;

        r0 := @this: android.os.storage.StorageVolume;

        $r1 = r0.<android.os.storage.StorageVolume: android.os.UserHandle mOwner>;

        return $r1;
    }

    public java.lang.String getPath()
    {
        android.os.storage.StorageVolume r0;
        java.io.File $r1;
        java.lang.String $r2;

        r0 := @this: android.os.storage.StorageVolume;

        $r1 = r0.<android.os.storage.StorageVolume: java.io.File mPath>;

        $r2 = virtualinvoke $r1.<java.io.File: java.lang.String toString()>();

        return $r2;
    }

    public java.io.File getPathFile()
    {
        android.os.storage.StorageVolume r0;
        java.io.File $r1;

        r0 := @this: android.os.storage.StorageVolume;

        $r1 = r0.<android.os.storage.StorageVolume: java.io.File mPath>;

        return $r1;
    }

    public java.lang.String getState()
    {
        android.os.storage.StorageVolume r0;
        java.lang.String $r1;

        r0 := @this: android.os.storage.StorageVolume;

        $r1 = r0.<android.os.storage.StorageVolume: java.lang.String mState>;

        return $r1;
    }

    public java.lang.String getUserLabel()
    {
        android.os.storage.StorageVolume r0;
        java.lang.String $r1;

        r0 := @this: android.os.storage.StorageVolume;

        $r1 = r0.<android.os.storage.StorageVolume: java.lang.String mDescription>;

        return $r1;
    }

    public java.lang.String getUuid()
    {
        android.os.storage.StorageVolume r0;
        java.lang.String $r1;

        r0 := @this: android.os.storage.StorageVolume;

        $r1 = r0.<android.os.storage.StorageVolume: java.lang.String mFsUuid>;

        return $r1;
    }

    public int hashCode()
    {
        android.os.storage.StorageVolume r0;
        java.io.File $r1;
        int $i0;

        r0 := @this: android.os.storage.StorageVolume;

        $r1 = r0.<android.os.storage.StorageVolume: java.io.File mPath>;

        $i0 = virtualinvoke $r1.<java.io.File: int hashCode()>();

        return $i0;
    }

    public boolean isEmulated()
    {
        android.os.storage.StorageVolume r0;
        boolean $z0;

        r0 := @this: android.os.storage.StorageVolume;

        $z0 = r0.<android.os.storage.StorageVolume: boolean mEmulated>;

        return $z0;
    }

    public boolean isPrimary()
    {
        android.os.storage.StorageVolume r0;
        boolean $z0;

        r0 := @this: android.os.storage.StorageVolume;

        $z0 = r0.<android.os.storage.StorageVolume: boolean mPrimary>;

        return $z0;
    }

    public boolean isRemovable()
    {
        android.os.storage.StorageVolume r0;
        boolean $z0;

        r0 := @this: android.os.storage.StorageVolume;

        $z0 = r0.<android.os.storage.StorageVolume: boolean mRemovable>;

        return $z0;
    }

    public java.lang.String toString()
    {
        android.os.storage.StorageVolume r0;
        java.lang.StringBuilder r1, $r2;
        java.lang.String $r3, $r4, $r5, $r7;

        r0 := @this: android.os.storage.StorageVolume;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("StorageVolume: ");

        $r3 = r0.<android.os.storage.StorageVolume: java.lang.String mDescription>;

        r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r4 = r0.<android.os.storage.StorageVolume: java.lang.String mFsUuid>;

        if $r4 == null goto label1;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $r7 = r0.<android.os.storage.StorageVolume: java.lang.String mFsUuid>;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

     label1:
        $r5 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.os.storage.StorageVolume r0;
        android.os.Parcel r1;
        int i0, i2, i3, i4, i5;
        java.lang.String $r2, $r4, $r6, $r7, $r9, $r10;
        java.io.File $r3, $r5;
        boolean $z0, $z1, $z2, $z3;
        long $l1;
        android.os.UserHandle $r8;

        r0 := @this: android.os.storage.StorageVolume;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        $r2 = r0.<android.os.storage.StorageVolume: java.lang.String mId>;

        virtualinvoke r1.<android.os.Parcel: void writeString8(java.lang.String)>($r2);

        $r3 = r0.<android.os.storage.StorageVolume: java.io.File mPath>;

        $r4 = virtualinvoke $r3.<java.io.File: java.lang.String toString()>();

        virtualinvoke r1.<android.os.Parcel: void writeString8(java.lang.String)>($r4);

        $r5 = r0.<android.os.storage.StorageVolume: java.io.File mInternalPath>;

        $r6 = virtualinvoke $r5.<java.io.File: java.lang.String toString()>();

        virtualinvoke r1.<android.os.Parcel: void writeString8(java.lang.String)>($r6);

        $r7 = r0.<android.os.storage.StorageVolume: java.lang.String mDescription>;

        virtualinvoke r1.<android.os.Parcel: void writeString8(java.lang.String)>($r7);

        $z0 = r0.<android.os.storage.StorageVolume: boolean mPrimary>;

        i2 = (int) $z0;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i2);

        $z1 = r0.<android.os.storage.StorageVolume: boolean mRemovable>;

        i3 = (int) $z1;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i3);

        $z2 = r0.<android.os.storage.StorageVolume: boolean mEmulated>;

        i4 = (int) $z2;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i4);

        $z3 = r0.<android.os.storage.StorageVolume: boolean mAllowMassStorage>;

        i5 = (int) $z3;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i5);

        $l1 = r0.<android.os.storage.StorageVolume: long mMaxFileSize>;

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l1);

        $r8 = r0.<android.os.storage.StorageVolume: android.os.UserHandle mOwner>;

        virtualinvoke r1.<android.os.Parcel: void writeParcelable(android.os.Parcelable,int)>($r8, i0);

        $r9 = r0.<android.os.storage.StorageVolume: java.lang.String mFsUuid>;

        virtualinvoke r1.<android.os.Parcel: void writeString8(java.lang.String)>($r9);

        $r10 = r0.<android.os.storage.StorageVolume: java.lang.String mState>;

        virtualinvoke r1.<android.os.Parcel: void writeString8(java.lang.String)>($r10);

        return;
    }
}
