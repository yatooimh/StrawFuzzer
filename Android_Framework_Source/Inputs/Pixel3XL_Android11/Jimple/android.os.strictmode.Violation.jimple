public abstract class android.os.strictmode.Violation extends java.lang.Throwable
{
    private int mHashCode;
    private boolean mHashCodeValid;

    void <init>(java.lang.String)
    {
        android.os.strictmode.Violation r0;
        java.lang.String r1;

        r0 := @this: android.os.strictmode.Violation;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Throwable: void <init>(java.lang.String)>(r1);

        return;
    }

    private static int calcStackTraceHashCode(java.lang.StackTraceElement[])
    {
        java.lang.StackTraceElement[] r0;
        int $i0, $i1, $i2, i3, i4, i5, i6;
        java.lang.StackTraceElement $r1, $r2;

        r0 := @parameter0: java.lang.StackTraceElement[];

        i3 = 17;

        i4 = 17;

        if r0 == null goto label3;

        i5 = 0;

     label1:
        i4 = i3;

        $i0 = lengthof r0;

        if i5 >= $i0 goto label3;

        i6 = i3;

        $r1 = r0[i5];

        if $r1 == null goto label2;

        $i1 = i3 * 37;

        $r2 = r0[i5];

        $i2 = virtualinvoke $r2.<java.lang.StackTraceElement: int hashCode()>();

        i6 = $i1 + $i2;

     label2:
        i5 = i5 + 1;

        i3 = i6;

        goto label1;

     label3:
        return i4;
    }

    public java.lang.Throwable fillInStackTrace()
    {
        android.os.strictmode.Violation r0;
        java.lang.Throwable $r1, r2;

        r0 := @this: android.os.strictmode.Violation;

        entermonitor r0;

     label1:
        r0.<android.os.strictmode.Violation: boolean mHashCodeValid> = 0;

        r2 = specialinvoke r0.<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>();

     label2:
        exitmonitor r0;

        return r2;

     label3:
        $r1 := @caughtexception;

        exitmonitor r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public int hashCode()
    {
        android.os.strictmode.Violation r0;
        java.lang.String r1, $r4;
        int i0, $i1, $i2, $i3, i4, i5, i6, i7;
        boolean $z0;
        java.lang.Class $r2;
        java.lang.StackTraceElement[] $r3;
        java.lang.Throwable $r5, r6;

        r0 := @this: android.os.strictmode.Violation;

        entermonitor r0;

     label01:
        $z0 = r0.<android.os.strictmode.Violation: boolean mHashCodeValid>;

        if $z0 == 0 goto label03;

        i4 = r0.<android.os.strictmode.Violation: int mHashCode>;

        exitmonitor r0;

     label02:
        return i4;

     label03:
        r1 = virtualinvoke r0.<android.os.strictmode.Violation: java.lang.String getMessage()>();

        r6 = virtualinvoke r0.<android.os.strictmode.Violation: java.lang.Throwable getCause()>();

     label04:
        if r1 == null goto label07;

     label05:
        i5 = virtualinvoke r1.<java.lang.String: int hashCode()>();

     label06:
        goto label08;

     label07:
        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        i5 = virtualinvoke $r2.<java.lang.Object: int hashCode()>();

     label08:
        $r3 = virtualinvoke r0.<android.os.strictmode.Violation: java.lang.StackTraceElement[] getStackTrace()>();

        i0 = staticinvoke <android.os.strictmode.Violation: int calcStackTraceHashCode(java.lang.StackTraceElement[])>($r3);

     label09:
        if r6 == null goto label12;

     label10:
        $r4 = virtualinvoke r6.<java.lang.Throwable: java.lang.String toString()>();

        i6 = virtualinvoke $r4.<java.lang.String: int hashCode()>();

     label11:
        goto label13;

     label12:
        i6 = 0;

     label13:
        $i1 = i5 * 37;

        $i2 = $i1 + i0;

        $i3 = $i2 * 37;

        i7 = $i3 + i6;

     label14:
        r0.<android.os.strictmode.Violation: boolean mHashCodeValid> = 1;

        r0.<android.os.strictmode.Violation: int mHashCode> = i7;

        exitmonitor r0;

     label15:
        return i7;

     label16:
        $r5 := @caughtexception;

     label17:
        exitmonitor r0;

     label18:
        throw $r5;

        catch java.lang.Throwable from label01 to label02 with label16;
        catch java.lang.Throwable from label03 to label04 with label16;
        catch java.lang.Throwable from label05 to label06 with label16;
        catch java.lang.Throwable from label07 to label08 with label16;
        catch java.lang.Throwable from label08 to label09 with label16;
        catch java.lang.Throwable from label10 to label11 with label16;
        catch java.lang.Throwable from label14 to label15 with label16;
        catch java.lang.Throwable from label17 to label18 with label16;
    }

    public java.lang.Throwable initCause(java.lang.Throwable)
    {
        android.os.strictmode.Violation r0;
        java.lang.Throwable $r1, r2, r3;

        r0 := @this: android.os.strictmode.Violation;

        r2 := @parameter0: java.lang.Throwable;

        entermonitor r0;

     label1:
        r0.<android.os.strictmode.Violation: boolean mHashCodeValid> = 0;

        r3 = specialinvoke r0.<java.lang.Throwable: java.lang.Throwable initCause(java.lang.Throwable)>(r2);

     label2:
        exitmonitor r0;

        return r3;

     label3:
        $r1 := @caughtexception;

        exitmonitor r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void setStackTrace(java.lang.StackTraceElement[])
    {
        android.os.strictmode.Violation r0;
        java.lang.Throwable $r1;
        java.lang.StackTraceElement[] r2;

        r0 := @this: android.os.strictmode.Violation;

        r2 := @parameter0: java.lang.StackTraceElement[];

        specialinvoke r0.<java.lang.Throwable: void setStackTrace(java.lang.StackTraceElement[])>(r2);

        entermonitor r0;

     label1:
        r0.<android.os.strictmode.Violation: boolean mHashCodeValid> = 0;

        exitmonitor r0;

     label2:
        return;

     label3:
        $r1 := @caughtexception;

     label4:
        exitmonitor r0;

     label5:
        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }
}
