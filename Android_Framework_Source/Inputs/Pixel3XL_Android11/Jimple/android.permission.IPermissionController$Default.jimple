public class android.permission.IPermissionController$Default extends java.lang.Object implements android.permission.IPermissionController
{

    public void <init>()
    {
        android.permission.IPermissionController$Default r0;

        r0 := @this: android.permission.IPermissionController$Default;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void applyStagedRuntimePermissionBackup(java.lang.String, android.os.UserHandle, com.android.internal.infra.AndroidFuture) throws android.os.RemoteException
    {
        android.permission.IPermissionController$Default r0;
        java.lang.String r1;
        android.os.UserHandle r2;
        com.android.internal.infra.AndroidFuture r3;

        r0 := @this: android.permission.IPermissionController$Default;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.UserHandle;

        r3 := @parameter2: com.android.internal.infra.AndroidFuture;

        return;
    }

    public android.os.IBinder asBinder()
    {
        android.permission.IPermissionController$Default r0;

        r0 := @this: android.permission.IPermissionController$Default;

        return null;
    }

    public void countPermissionApps(java.util.List, int, com.android.internal.infra.AndroidFuture) throws android.os.RemoteException
    {
        android.permission.IPermissionController$Default r0;
        java.util.List r1;
        int i0;
        com.android.internal.infra.AndroidFuture r2;

        r0 := @this: android.permission.IPermissionController$Default;

        r1 := @parameter0: java.util.List;

        i0 := @parameter1: int;

        r2 := @parameter2: com.android.internal.infra.AndroidFuture;

        return;
    }

    public void getAppPermissions(java.lang.String, com.android.internal.infra.AndroidFuture) throws android.os.RemoteException
    {
        android.permission.IPermissionController$Default r0;
        java.lang.String r1;
        com.android.internal.infra.AndroidFuture r2;

        r0 := @this: android.permission.IPermissionController$Default;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: com.android.internal.infra.AndroidFuture;

        return;
    }

    public void getPermissionUsages(boolean, long, com.android.internal.infra.AndroidFuture) throws android.os.RemoteException
    {
        android.permission.IPermissionController$Default r0;
        boolean z0;
        long l0;
        com.android.internal.infra.AndroidFuture r1;

        r0 := @this: android.permission.IPermissionController$Default;

        z0 := @parameter0: boolean;

        l0 := @parameter1: long;

        r1 := @parameter2: com.android.internal.infra.AndroidFuture;

        return;
    }

    public void getRuntimePermissionBackup(android.os.UserHandle, android.os.ParcelFileDescriptor) throws android.os.RemoteException
    {
        android.permission.IPermissionController$Default r0;
        android.os.UserHandle r1;
        android.os.ParcelFileDescriptor r2;

        r0 := @this: android.permission.IPermissionController$Default;

        r1 := @parameter0: android.os.UserHandle;

        r2 := @parameter1: android.os.ParcelFileDescriptor;

        return;
    }

    public void grantOrUpgradeDefaultRuntimePermissions(com.android.internal.infra.AndroidFuture) throws android.os.RemoteException
    {
        android.permission.IPermissionController$Default r0;
        com.android.internal.infra.AndroidFuture r1;

        r0 := @this: android.permission.IPermissionController$Default;

        r1 := @parameter0: com.android.internal.infra.AndroidFuture;

        return;
    }

    public void notifyOneTimePermissionSessionTimeout(java.lang.String) throws android.os.RemoteException
    {
        android.permission.IPermissionController$Default r0;
        java.lang.String r1;

        r0 := @this: android.permission.IPermissionController$Default;

        r1 := @parameter0: java.lang.String;

        return;
    }

    public void revokeRuntimePermission(java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        android.permission.IPermissionController$Default r0;
        java.lang.String r1, r2;

        r0 := @this: android.permission.IPermissionController$Default;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        return;
    }

    public void revokeRuntimePermissions(android.os.Bundle, boolean, int, java.lang.String, com.android.internal.infra.AndroidFuture) throws android.os.RemoteException
    {
        android.permission.IPermissionController$Default r0;
        android.os.Bundle r1;
        boolean z0;
        int i0;
        java.lang.String r2;
        com.android.internal.infra.AndroidFuture r3;

        r0 := @this: android.permission.IPermissionController$Default;

        r1 := @parameter0: android.os.Bundle;

        z0 := @parameter1: boolean;

        i0 := @parameter2: int;

        r2 := @parameter3: java.lang.String;

        r3 := @parameter4: com.android.internal.infra.AndroidFuture;

        return;
    }

    public void setRuntimePermissionGrantStateByDeviceAdmin(java.lang.String, java.lang.String, java.lang.String, int, com.android.internal.infra.AndroidFuture) throws android.os.RemoteException
    {
        android.permission.IPermissionController$Default r0;
        java.lang.String r1, r2, r3;
        int i0;
        com.android.internal.infra.AndroidFuture r4;

        r0 := @this: android.permission.IPermissionController$Default;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        r4 := @parameter4: com.android.internal.infra.AndroidFuture;

        return;
    }

    public void stageAndApplyRuntimePermissionsBackup(android.os.UserHandle, android.os.ParcelFileDescriptor) throws android.os.RemoteException
    {
        android.permission.IPermissionController$Default r0;
        android.os.UserHandle r1;
        android.os.ParcelFileDescriptor r2;

        r0 := @this: android.permission.IPermissionController$Default;

        r1 := @parameter0: android.os.UserHandle;

        r2 := @parameter1: android.os.ParcelFileDescriptor;

        return;
    }

    public void updateUserSensitiveForApp(int, com.android.internal.infra.AndroidFuture) throws android.os.RemoteException
    {
        android.permission.IPermissionController$Default r0;
        int i0;
        com.android.internal.infra.AndroidFuture r1;

        r0 := @this: android.permission.IPermissionController$Default;

        i0 := @parameter0: int;

        r1 := @parameter1: com.android.internal.infra.AndroidFuture;

        return;
    }
}
