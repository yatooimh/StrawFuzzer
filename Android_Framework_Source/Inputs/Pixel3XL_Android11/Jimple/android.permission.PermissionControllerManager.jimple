public final class android.permission.PermissionControllerManager extends java.lang.Object
{
    private static final int CHUNK_SIZE;
    public static final int COUNT_ONLY_WHEN_GRANTED;
    public static final int COUNT_WHEN_SYSTEM;
    public static final int REASON_INSTALLER_POLICY_VIOLATION;
    public static final int REASON_MALWARE;
    private static final long REQUEST_TIMEOUT_MILLIS;
    private static final java.lang.String TAG;
    private static final long UNBIND_TIMEOUT_MILLIS;
    private static final java.lang.Object sLock;
    private static android.util.ArrayMap sRemoteServices;
    private final android.content.Context mContext;
    private final android.os.Handler mHandler;
    private final com.android.internal.infra.ServiceConnector mRemoteService;

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;
        java.lang.Object $r2;
        android.util.ArrayMap $r3;

        <android.permission.PermissionControllerManager: long UNBIND_TIMEOUT_MILLIS> = 10000L;

        <android.permission.PermissionControllerManager: long REQUEST_TIMEOUT_MILLIS> = 60000L;

        <android.permission.PermissionControllerManager: int REASON_MALWARE> = 1;

        <android.permission.PermissionControllerManager: int REASON_INSTALLER_POLICY_VIOLATION> = 2;

        <android.permission.PermissionControllerManager: int COUNT_WHEN_SYSTEM> = 2;

        <android.permission.PermissionControllerManager: int COUNT_ONLY_WHEN_GRANTED> = 1;

        <android.permission.PermissionControllerManager: int CHUNK_SIZE> = 4096;

        $r0 = class "Landroid/permission/PermissionControllerManager;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getSimpleName()>();

        <android.permission.PermissionControllerManager: java.lang.String TAG> = $r1;

        $r2 = new java.lang.Object;

        specialinvoke $r2.<java.lang.Object: void <init>()>();

        <android.permission.PermissionControllerManager: java.lang.Object sLock> = $r2;

        $r3 = new android.util.ArrayMap;

        specialinvoke $r3.<android.util.ArrayMap: void <init>(int)>(1);

        <android.permission.PermissionControllerManager: android.util.ArrayMap sRemoteServices> = $r3;

        return;
    }

    public void <init>(android.content.Context, android.os.Handler)
    {
        android.permission.PermissionControllerManager r0;
        android.os.Handler r1;
        java.lang.Object r2, $r10;
        android.app.Application r4;
        int $i0, $i1;
        java.lang.Integer $r6;
        android.os.Looper $r7;
        java.lang.Thread $r8;
        android.util.ArrayMap $r9, $r19;
        android.content.pm.PackageManager $r11, $r14;
        java.lang.String $r12;
        android.content.pm.ComponentInfo $r15;
        android.content.ComponentName $r16;
        android.content.Intent $r17, r30, r31;
        android.permission.'-$$Lambda$ViMr_PAGHrCLBQPYNzqdYUNU5zI' $r18;
        java.lang.Throwable $r21, $r22, r28;
        android.content.Context r23;
        com.android.internal.infra.ServiceConnector r24, r25;
        android.content.pm.ResolveInfo r27;
        android.util.Pair r29;
        android.permission.PermissionControllerManager$1 r32;
        java.util.function.Function r33;

        r0 := @this: android.permission.PermissionControllerManager;

        r23 := @parameter0: android.content.Context;

        r1 := @parameter1: android.os.Handler;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r2 = <android.permission.PermissionControllerManager: java.lang.Object sLock>;

        entermonitor r2;

     label01:
        r29 = new android.util.Pair;

        $i0 = virtualinvoke r23.<android.content.Context: int getUserId()>();

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r7 = virtualinvoke r1.<android.os.Handler: android.os.Looper getLooper()>();

        $r8 = virtualinvoke $r7.<android.os.Looper: java.lang.Thread getThread()>();

        specialinvoke r29.<android.util.Pair: void <init>(java.lang.Object,java.lang.Object)>($r6, $r8);

        $r9 = <android.permission.PermissionControllerManager: android.util.ArrayMap sRemoteServices>;

        $r10 = virtualinvoke $r9.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r29);

        r24 = (com.android.internal.infra.ServiceConnector) $r10;

     label02:
        r25 = r24;

        if r24 != null goto label05;

     label03:
        r30 = new android.content.Intent;

        specialinvoke r30.<android.content.Intent: void <init>(java.lang.String)>("android.permission.PermissionControllerService");

        $r11 = virtualinvoke r23.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r12 = virtualinvoke $r11.<android.content.pm.PackageManager: java.lang.String getPermissionControllerPackageName()>();

        virtualinvoke r30.<android.content.Intent: android.content.Intent setPackage(java.lang.String)>($r12);

        $r14 = virtualinvoke r23.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        r27 = virtualinvoke $r14.<android.content.pm.PackageManager: android.content.pm.ResolveInfo resolveService(android.content.Intent,int)>(r30, 0);

        r32 = new android.permission.PermissionControllerManager$1;

        r25 = r32;

        r4 = staticinvoke <android.app.ActivityThread: android.app.Application currentApplication()>();

        r31 = new android.content.Intent;

        specialinvoke r31.<android.content.Intent: void <init>(java.lang.String)>("android.permission.PermissionControllerService");

        $r15 = virtualinvoke r27.<android.content.pm.ResolveInfo: android.content.pm.ComponentInfo getComponentInfo()>();

        $r16 = virtualinvoke $r15.<android.content.pm.ComponentInfo: android.content.ComponentName getComponentName()>();

        $r17 = virtualinvoke r31.<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>($r16);

        $i1 = virtualinvoke r23.<android.content.Context: int getUserId()>();

        $r18 = <android.permission._$$Lambda$ViMr_PAGHrCLBQPYNzqdYUNU5zI: android.permission.'-$$Lambda$ViMr_PAGHrCLBQPYNzqdYUNU5zI' INSTANCE>;

        r33 = (java.util.function.Function) $r18;

        specialinvoke r32.<android.permission.PermissionControllerManager$1: void <init>(android.permission.PermissionControllerManager,android.content.Context,android.content.Intent,int,int,java.util.function.Function,android.os.Handler)>(r0, r4, $r17, 0, $i1, r33, r1);

     label04:
        $r19 = <android.permission.PermissionControllerManager: android.util.ArrayMap sRemoteServices>;

        virtualinvoke $r19.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r29, r32);

     label05:
        r0.<android.permission.PermissionControllerManager: com.android.internal.infra.ServiceConnector mRemoteService> = r25;

        exitmonitor r2;

     label06:
        r0.<android.permission.PermissionControllerManager: android.content.Context mContext> = r23;

        r0.<android.permission.PermissionControllerManager: android.os.Handler mHandler> = r1;

        return;

     label07:
        $r22 := @caughtexception;

        r28 = $r22;

     label08:
        exitmonitor r2;

     label09:
        throw r28;

     label10:
        $r21 := @caughtexception;

        r28 = $r21;

        goto label08;

        catch java.lang.Throwable from label01 to label02 with label07;
        catch java.lang.Throwable from label03 to label04 with label07;
        catch java.lang.Throwable from label04 to label05 with label07;
        catch java.lang.Throwable from label05 to label06 with label07;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    private transient void enforceSomePermissionsGrantedToSelf(java.lang.String[])
    {
        android.permission.PermissionControllerManager r0;
        java.lang.String[] r1;
        int i0, $i1, i2;
        java.lang.StringBuilder $r2;
        java.lang.String $r4, $r7, r9;
        java.lang.SecurityException $r6;
        android.content.Context $r8;

        r0 := @this: android.permission.PermissionControllerManager;

        r1 := @parameter0: java.lang.String[];

        i0 = lengthof r1;

        i2 = 0;

     label1:
        if i2 >= i0 goto label3;

        r9 = r1[i2];

        $r8 = r0.<android.permission.PermissionControllerManager: android.content.Context mContext>;

        $i1 = virtualinvoke $r8.<android.content.Context: int checkSelfPermission(java.lang.String)>(r9);

        if $i1 != 0 goto label2;

        return;

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("At lest one of the following permissions is required: ");

        $r4 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>(r1);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = new java.lang.SecurityException;

        $r7 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.SecurityException: void <init>(java.lang.String)>($r7);

        throw $r6;
    }

    static java.util.concurrent.CompletableFuture lambda$applyStagedRuntimePermissionBackup$10(java.lang.String, android.os.UserHandle, android.permission.IPermissionController) throws java.lang.Exception
    {
        java.lang.String r0;
        android.os.UserHandle r1;
        android.permission.IPermissionController r2;
        com.android.internal.infra.AndroidFuture $r4;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: android.os.UserHandle;

        r2 := @parameter2: android.permission.IPermissionController;

        $r4 = new com.android.internal.infra.AndroidFuture;

        specialinvoke $r4.<com.android.internal.infra.AndroidFuture: void <init>()>();

        interfaceinvoke r2.<android.permission.IPermissionController: void applyStagedRuntimePermissionBackup(java.lang.String,android.os.UserHandle,com.android.internal.infra.AndroidFuture)>(r0, r1, $r4);

        return $r4;
    }

    static void lambda$applyStagedRuntimePermissionBackup$11(java.lang.String, java.util.function.Consumer, java.lang.Boolean, java.lang.Throwable)
    {
        java.util.function.Consumer r0;
        java.lang.Throwable r1, $r9;
        long l0;
        java.lang.String r2, $r7, r10;
        java.lang.Boolean $r3, $r4, $r8, r11;
        boolean $z0;
        java.lang.StringBuilder r12;

        r10 := @parameter0: java.lang.String;

        r0 := @parameter1: java.util.function.Consumer;

        r11 := @parameter2: java.lang.Boolean;

        r1 := @parameter3: java.lang.Throwable;

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        if r1 == null goto label3;

     label1:
        r2 = <android.permission.PermissionControllerManager: java.lang.String TAG>;

        r12 = new java.lang.StringBuilder;

        specialinvoke r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error restoring delayed permissions for ");

        virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10);

        $r7 = virtualinvoke r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>(r2, $r7, r1);

        $r8 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke r0.<java.util.function.Consumer: void accept(java.lang.Object)>($r8);

     label2:
        goto label4;

     label3:
        $r3 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        $z0 = virtualinvoke $r3.<java.lang.Boolean: boolean equals(java.lang.Object)>(r11);

        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        interfaceinvoke r0.<java.util.function.Consumer: void accept(java.lang.Object)>($r4);

     label4:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return;

     label5:
        $r9 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r9;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    static java.util.concurrent.CompletableFuture lambda$countPermissionApps$17(java.util.List, int, android.permission.IPermissionController) throws java.lang.Exception
    {
        java.util.List r0;
        int i0;
        android.permission.IPermissionController r1;
        com.android.internal.infra.AndroidFuture $r3;

        r0 := @parameter0: java.util.List;

        i0 := @parameter1: int;

        r1 := @parameter2: android.permission.IPermissionController;

        $r3 = new com.android.internal.infra.AndroidFuture;

        specialinvoke $r3.<com.android.internal.infra.AndroidFuture: void <init>()>();

        interfaceinvoke r1.<android.permission.IPermissionController: void countPermissionApps(java.util.List,int,com.android.internal.infra.AndroidFuture)>(r0, i0, $r3);

        return $r3;
    }

    static void lambda$countPermissionApps$18(java.lang.Throwable, android.permission.PermissionControllerManager$OnCountPermissionAppsResultCallback, java.lang.Integer)
    {
        java.lang.Throwable r0;
        android.permission.PermissionControllerManager$OnCountPermissionAppsResultCallback r1;
        java.lang.Integer r2;
        int $i0;
        java.lang.String $r3;

        r0 := @parameter0: java.lang.Throwable;

        r1 := @parameter1: android.permission.PermissionControllerManager$OnCountPermissionAppsResultCallback;

        r2 := @parameter2: java.lang.Integer;

        if r0 == null goto label1;

        $r3 = <android.permission.PermissionControllerManager: java.lang.String TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r3, "Error counting permission apps", r0);

        interfaceinvoke r1.<android.permission.PermissionControllerManager$OnCountPermissionAppsResultCallback: void onCountPermissionApps(int)>(0);

        goto label2;

     label1:
        $i0 = virtualinvoke r2.<java.lang.Integer: int intValue()>();

        interfaceinvoke r1.<android.permission.PermissionControllerManager$OnCountPermissionAppsResultCallback: void onCountPermissionApps(int)>($i0);

     label2:
        return;
    }

    static void lambda$countPermissionApps$19(android.os.Handler, android.permission.PermissionControllerManager$OnCountPermissionAppsResultCallback, java.lang.Integer, java.lang.Throwable)
    {
        android.os.Handler r0;
        android.permission.PermissionControllerManager$OnCountPermissionAppsResultCallback r1;
        java.lang.Integer r2;
        java.lang.Throwable r3;
        android.permission._$$Lambda$PermissionControllerManager$TDPE_yM_sr87lWH1NcSHItfBmxI $r4;

        r0 := @parameter0: android.os.Handler;

        r1 := @parameter1: android.permission.PermissionControllerManager$OnCountPermissionAppsResultCallback;

        r2 := @parameter2: java.lang.Integer;

        r3 := @parameter3: java.lang.Throwable;

        $r4 = new android.permission._$$Lambda$PermissionControllerManager$TDPE_yM_sr87lWH1NcSHItfBmxI;

        specialinvoke $r4.<android.permission._$$Lambda$PermissionControllerManager$TDPE_yM_sr87lWH1NcSHItfBmxI: void <init>(java.lang.Throwable,android.permission.PermissionControllerManager$OnCountPermissionAppsResultCallback,java.lang.Integer)>(r3, r1, r2);

        virtualinvoke r0.<android.os.Handler: boolean post(java.lang.Runnable)>($r4);

        return;
    }

    static void lambda$dump$12(java.io.FileDescriptor, java.lang.String[], android.permission.IPermissionController) throws java.lang.Exception
    {
        java.io.FileDescriptor r0;
        java.lang.String[] r1;
        android.permission.IPermissionController r2;
        android.os.IBinder $r3;

        r0 := @parameter0: java.io.FileDescriptor;

        r1 := @parameter1: java.lang.String[];

        r2 := @parameter2: android.permission.IPermissionController;

        $r3 = interfaceinvoke r2.<android.permission.IPermissionController: android.os.IBinder asBinder()>();

        interfaceinvoke $r3.<android.os.IBinder: void dump(java.io.FileDescriptor,java.lang.String[])>(r0, r1);

        return;
    }

    static java.util.concurrent.CompletableFuture lambda$getAppPermissions$13(java.lang.String, android.permission.IPermissionController) throws java.lang.Exception
    {
        java.lang.String r0;
        android.permission.IPermissionController r1;
        com.android.internal.infra.AndroidFuture $r3;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: android.permission.IPermissionController;

        $r3 = new com.android.internal.infra.AndroidFuture;

        specialinvoke $r3.<com.android.internal.infra.AndroidFuture: void <init>()>();

        interfaceinvoke r1.<android.permission.IPermissionController: void getAppPermissions(java.lang.String,com.android.internal.infra.AndroidFuture)>(r0, $r3);

        return $r3;
    }

    static void lambda$getAppPermissions$14(java.lang.Throwable, android.permission.PermissionControllerManager$OnGetAppPermissionResultCallback, java.util.List)
    {
        java.lang.Throwable r0;
        android.permission.PermissionControllerManager$OnGetAppPermissionResultCallback r1;
        java.util.List r2, $r3, $r5;
        java.lang.String $r4;

        r0 := @parameter0: java.lang.Throwable;

        r1 := @parameter1: android.permission.PermissionControllerManager$OnGetAppPermissionResultCallback;

        r2 := @parameter2: java.util.List;

        if r0 == null goto label1;

        $r4 = <android.permission.PermissionControllerManager: java.lang.String TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r4, "Error getting app permission", r0);

        $r5 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        interfaceinvoke r1.<android.permission.PermissionControllerManager$OnGetAppPermissionResultCallback: void onGetAppPermissions(java.util.List)>($r5);

        goto label2;

     label1:
        $r3 = staticinvoke <com.android.internal.util.CollectionUtils: java.util.List emptyIfNull(java.util.List)>(r2);

        interfaceinvoke r1.<android.permission.PermissionControllerManager$OnGetAppPermissionResultCallback: void onGetAppPermissions(java.util.List)>($r3);

     label2:
        return;
    }

    static void lambda$getAppPermissions$15(android.os.Handler, android.permission.PermissionControllerManager$OnGetAppPermissionResultCallback, java.util.List, java.lang.Throwable)
    {
        android.os.Handler r0;
        android.permission.PermissionControllerManager$OnGetAppPermissionResultCallback r1;
        java.util.List r2;
        java.lang.Throwable r3;
        android.permission._$$Lambda$PermissionControllerManager$a1mv0hj0w2CVT_PkiUJ634frWCM $r4;

        r0 := @parameter0: android.os.Handler;

        r1 := @parameter1: android.permission.PermissionControllerManager$OnGetAppPermissionResultCallback;

        r2 := @parameter2: java.util.List;

        r3 := @parameter3: java.lang.Throwable;

        $r4 = new android.permission._$$Lambda$PermissionControllerManager$a1mv0hj0w2CVT_PkiUJ634frWCM;

        specialinvoke $r4.<android.permission._$$Lambda$PermissionControllerManager$a1mv0hj0w2CVT_PkiUJ634frWCM: void <init>(java.lang.Throwable,android.permission.PermissionControllerManager$OnGetAppPermissionResultCallback,java.util.List)>(r3, r1, r2);

        virtualinvoke r0.<android.os.Handler: boolean post(java.lang.Runnable)>($r4);

        return;
    }

    static java.util.concurrent.CompletableFuture lambda$getPermissionUsages$20(boolean, long, android.permission.IPermissionController) throws java.lang.Exception
    {
        boolean z0;
        long l0;
        android.permission.IPermissionController r0;
        com.android.internal.infra.AndroidFuture $r2;

        z0 := @parameter0: boolean;

        l0 := @parameter1: long;

        r0 := @parameter2: android.permission.IPermissionController;

        $r2 = new com.android.internal.infra.AndroidFuture;

        specialinvoke $r2.<com.android.internal.infra.AndroidFuture: void <init>()>();

        interfaceinvoke r0.<android.permission.IPermissionController: void getPermissionUsages(boolean,long,com.android.internal.infra.AndroidFuture)>(z0, l0, $r2);

        return $r2;
    }

    static void lambda$getPermissionUsages$21(android.permission.PermissionControllerManager$OnPermissionUsageResultCallback, java.util.List, java.lang.Throwable)
    {
        java.util.List r0, $r2, $r4;
        java.lang.Throwable r1, $r5;
        long l0;
        java.lang.String $r3;
        android.permission.PermissionControllerManager$OnPermissionUsageResultCallback r6;

        r6 := @parameter0: android.permission.PermissionControllerManager$OnPermissionUsageResultCallback;

        r0 := @parameter1: java.util.List;

        r1 := @parameter2: java.lang.Throwable;

        if r1 == null goto label1;

        $r3 = <android.permission.PermissionControllerManager: java.lang.String TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r3, "Error getting permission usages", r1);

        $r4 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        interfaceinvoke r6.<android.permission.PermissionControllerManager$OnPermissionUsageResultCallback: void onPermissionUsageResult(java.util.List)>($r4);

        goto label4;

     label1:
        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label2:
        $r2 = staticinvoke <com.android.internal.util.CollectionUtils: java.util.List emptyIfNull(java.util.List)>(r0);

        interfaceinvoke r6.<android.permission.PermissionControllerManager$OnPermissionUsageResultCallback: void onPermissionUsageResult(java.util.List)>($r2);

     label3:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

     label4:
        return;

     label5:
        $r5 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r5;

        catch java.lang.Throwable from label2 to label3 with label5;
    }

    static void lambda$getRuntimePermissionBackup$4(android.permission.IPermissionController, android.os.UserHandle, android.os.ParcelFileDescriptor) throws java.lang.Exception
    {
        android.permission.IPermissionController r0;
        android.os.UserHandle r1;
        android.os.ParcelFileDescriptor r2;

        r0 := @parameter0: android.permission.IPermissionController;

        r1 := @parameter1: android.os.UserHandle;

        r2 := @parameter2: android.os.ParcelFileDescriptor;

        interfaceinvoke r0.<android.permission.IPermissionController: void getRuntimePermissionBackup(android.os.UserHandle,android.os.ParcelFileDescriptor)>(r1, r2);

        return;
    }

    static java.util.concurrent.CompletableFuture lambda$getRuntimePermissionBackup$5(android.os.UserHandle, android.permission.IPermissionController) throws java.lang.Exception
    {
        android.os.UserHandle r0;
        android.permission.IPermissionController r1;
        android.permission._$$Lambda$PermissionControllerManager$eHuRmDpRAUfA3qanHHMVMV_C0lI $r2;
        com.android.internal.infra.AndroidFuture $r3;

        r0 := @parameter0: android.os.UserHandle;

        r1 := @parameter1: android.permission.IPermissionController;

        $r2 = new android.permission._$$Lambda$PermissionControllerManager$eHuRmDpRAUfA3qanHHMVMV_C0lI;

        specialinvoke $r2.<android.permission._$$Lambda$PermissionControllerManager$eHuRmDpRAUfA3qanHHMVMV_C0lI: void <init>(android.permission.IPermissionController,android.os.UserHandle)>(r1, r0);

        $r3 = staticinvoke <com.android.internal.infra.RemoteStream: com.android.internal.infra.AndroidFuture receiveBytes(com.android.internal.util.FunctionalUtils$ThrowingConsumer)>($r2);

        return $r3;
    }

    static void lambda$getRuntimePermissionBackup$6(java.util.function.Consumer, byte[], java.lang.Throwable)
    {
        java.util.function.Consumer r0;
        byte[] r1, $r4;
        java.lang.Throwable r2;
        java.lang.String $r3;

        r0 := @parameter0: java.util.function.Consumer;

        r1 := @parameter1: byte[];

        r2 := @parameter2: java.lang.Throwable;

        if r2 == null goto label1;

        $r3 = <android.permission.PermissionControllerManager: java.lang.String TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r3, "Error getting permission backup", r2);

        $r4 = <libcore.util.EmptyArray: byte[] BYTE>;

        interfaceinvoke r0.<java.util.function.Consumer: void accept(java.lang.Object)>($r4);

        goto label2;

     label1:
        interfaceinvoke r0.<java.util.function.Consumer: void accept(java.lang.Object)>(r1);

     label2:
        return;
    }

    static java.util.concurrent.CompletableFuture lambda$grantOrUpgradeDefaultRuntimePermissions$22(android.permission.IPermissionController) throws java.lang.Exception
    {
        android.permission.IPermissionController r0;
        com.android.internal.infra.AndroidFuture $r2;

        r0 := @parameter0: android.permission.IPermissionController;

        $r2 = new com.android.internal.infra.AndroidFuture;

        specialinvoke $r2.<com.android.internal.infra.AndroidFuture: void <init>()>();

        interfaceinvoke r0.<android.permission.IPermissionController: void grantOrUpgradeDefaultRuntimePermissions(com.android.internal.infra.AndroidFuture)>($r2);

        return $r2;
    }

    static void lambda$grantOrUpgradeDefaultRuntimePermissions$23(java.util.function.Consumer, java.lang.Boolean, java.lang.Throwable)
    {
        java.util.function.Consumer r0;
        java.lang.Boolean r1, $r3, $r4, $r6;
        java.lang.Throwable r2;
        boolean $z0;
        java.lang.String $r5;

        r0 := @parameter0: java.util.function.Consumer;

        r1 := @parameter1: java.lang.Boolean;

        r2 := @parameter2: java.lang.Throwable;

        if r2 == null goto label1;

        $r5 = <android.permission.PermissionControllerManager: java.lang.String TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r5, "Error granting or upgrading runtime permissions", r2);

        $r6 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        interfaceinvoke r0.<java.util.function.Consumer: void accept(java.lang.Object)>($r6);

        goto label2;

     label1:
        $r3 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        $z0 = virtualinvoke $r3.<java.lang.Boolean: boolean equals(java.lang.Object)>(r1);

        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        interfaceinvoke r0.<java.util.function.Consumer: void accept(java.lang.Object)>($r4);

     label2:
        return;
    }

    static void lambda$notifyOneTimePermissionSessionTimeout$26(java.lang.String, android.permission.IPermissionController) throws java.lang.Exception
    {
        java.lang.String r0;
        android.permission.IPermissionController r1;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: android.permission.IPermissionController;

        interfaceinvoke r1.<android.permission.IPermissionController: void notifyOneTimePermissionSessionTimeout(java.lang.String)>(r0);

        return;
    }

    static void lambda$revokeRuntimePermission$16(java.lang.String, java.lang.String, android.permission.IPermissionController) throws java.lang.Exception
    {
        java.lang.String r0, r1;
        android.permission.IPermissionController r2;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.permission.IPermissionController;

        interfaceinvoke r2.<android.permission.IPermissionController: void revokeRuntimePermission(java.lang.String,java.lang.String)>(r0, r1);

        return;
    }

    static void lambda$revokeRuntimePermissions$1(android.permission.PermissionControllerManager$OnRevokeRuntimePermissionsCallback, java.util.Map, java.lang.Throwable)
    {
        java.util.Map r0, $r7;
        java.lang.Throwable r1, $r8;
        long l0;
        java.lang.String r2, $r6;
        java.lang.StringBuilder r3;
        android.permission.PermissionControllerManager$OnRevokeRuntimePermissionsCallback r9;

        r9 := @parameter0: android.permission.PermissionControllerManager$OnRevokeRuntimePermissionsCallback;

        r0 := @parameter1: java.util.Map;

        r1 := @parameter2: java.lang.Throwable;

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        if r1 == null goto label3;

     label1:
        r2 = <android.permission.PermissionControllerManager: java.lang.String TAG>;

        r3 = new java.lang.StringBuilder;

        specialinvoke r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failure when revoking runtime permissions ");

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r6 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>(r2, $r6, r1);

        $r7 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();

        virtualinvoke r9.<android.permission.PermissionControllerManager$OnRevokeRuntimePermissionsCallback: void onRevokeRuntimePermissions(java.util.Map)>($r7);

     label2:
        goto label4;

     label3:
        virtualinvoke r9.<android.permission.PermissionControllerManager$OnRevokeRuntimePermissionsCallback: void onRevokeRuntimePermissions(java.util.Map)>(r0);

     label4:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return;

     label5:
        $r8 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    static java.util.concurrent.CompletableFuture lambda$setRuntimePermissionGrantStateByDeviceAdmin$2(java.lang.String, java.lang.String, java.lang.String, int, android.permission.IPermissionController) throws java.lang.Exception
    {
        java.lang.String r0, r1, r2;
        int i0;
        android.permission.IPermissionController r3;
        com.android.internal.infra.AndroidFuture $r5;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        r3 := @parameter4: android.permission.IPermissionController;

        $r5 = new com.android.internal.infra.AndroidFuture;

        specialinvoke $r5.<com.android.internal.infra.AndroidFuture: void <init>()>();

        interfaceinvoke r3.<android.permission.IPermissionController: void setRuntimePermissionGrantStateByDeviceAdmin(java.lang.String,java.lang.String,java.lang.String,int,com.android.internal.infra.AndroidFuture)>(r0, r1, r2, i0, $r5);

        return $r5;
    }

    static void lambda$setRuntimePermissionGrantStateByDeviceAdmin$3(java.lang.String, java.util.function.Consumer, java.lang.Boolean, java.lang.Throwable)
    {
        java.util.function.Consumer r0;
        java.lang.Throwable r1, $r9;
        long l0;
        java.lang.String r2, $r7, r10;
        java.lang.Boolean $r3, $r4, $r8, r11;
        boolean $z0;
        java.lang.StringBuilder r12;

        r10 := @parameter0: java.lang.String;

        r0 := @parameter1: java.util.function.Consumer;

        r11 := @parameter2: java.lang.Boolean;

        r1 := @parameter3: java.lang.Throwable;

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        if r1 == null goto label3;

     label1:
        r2 = <android.permission.PermissionControllerManager: java.lang.String TAG>;

        r12 = new java.lang.StringBuilder;

        specialinvoke r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error setting permissions state for device admin ");

        virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10);

        $r7 = virtualinvoke r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>(r2, $r7, r1);

        $r8 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        interfaceinvoke r0.<java.util.function.Consumer: void accept(java.lang.Object)>($r8);

     label2:
        goto label4;

     label3:
        $r3 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        $z0 = virtualinvoke $r3.<java.lang.Boolean: boolean equals(java.lang.Object)>(r11);

        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        interfaceinvoke r0.<java.util.function.Consumer: void accept(java.lang.Object)>($r4);

     label4:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return;

     label5:
        $r9 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r9;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    static void lambda$stageAndApplyRuntimePermissionsBackup$7(android.permission.IPermissionController, android.os.UserHandle, android.os.ParcelFileDescriptor) throws java.lang.Exception
    {
        android.permission.IPermissionController r0;
        android.os.UserHandle r1;
        android.os.ParcelFileDescriptor r2;

        r0 := @parameter0: android.permission.IPermissionController;

        r1 := @parameter1: android.os.UserHandle;

        r2 := @parameter2: android.os.ParcelFileDescriptor;

        interfaceinvoke r0.<android.permission.IPermissionController: void stageAndApplyRuntimePermissionsBackup(android.os.UserHandle,android.os.ParcelFileDescriptor)>(r1, r2);

        return;
    }

    static java.util.concurrent.CompletableFuture lambda$stageAndApplyRuntimePermissionsBackup$8(android.os.UserHandle, byte[], android.permission.IPermissionController) throws java.lang.Exception
    {
        android.os.UserHandle r0;
        byte[] r1;
        android.permission.IPermissionController r2;
        android.permission._$$Lambda$PermissionControllerManager$ofaZqHrEKxR5dyXeNlRSyB1Lawk $r3;
        com.android.internal.infra.AndroidFuture $r4;

        r0 := @parameter0: android.os.UserHandle;

        r1 := @parameter1: byte[];

        r2 := @parameter2: android.permission.IPermissionController;

        $r3 = new android.permission._$$Lambda$PermissionControllerManager$ofaZqHrEKxR5dyXeNlRSyB1Lawk;

        specialinvoke $r3.<android.permission._$$Lambda$PermissionControllerManager$ofaZqHrEKxR5dyXeNlRSyB1Lawk: void <init>(android.permission.IPermissionController,android.os.UserHandle)>(r2, r0);

        $r4 = staticinvoke <com.android.internal.infra.RemoteStream: com.android.internal.infra.AndroidFuture sendBytes(com.android.internal.util.FunctionalUtils$ThrowingConsumer,byte[])>($r3, r1);

        return $r4;
    }

    static void lambda$stageAndApplyRuntimePermissionsBackup$9(java.lang.Void, java.lang.Throwable)
    {
        java.lang.Void r0;
        java.lang.Throwable r1;
        java.lang.String $r2;

        r0 := @parameter0: java.lang.Void;

        r1 := @parameter1: java.lang.Throwable;

        if r1 == null goto label1;

        $r2 = <android.permission.PermissionControllerManager: java.lang.String TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r2, "Error sending permission backup", r1);

     label1:
        return;
    }

    static java.util.concurrent.CompletableFuture lambda$updateUserSensitiveForApp$24(int, android.permission.IPermissionController) throws java.lang.Exception
    {
        int i0;
        android.permission.IPermissionController r0;
        com.android.internal.infra.AndroidFuture $r2;

        i0 := @parameter0: int;

        r0 := @parameter1: android.permission.IPermissionController;

        $r2 = new com.android.internal.infra.AndroidFuture;

        specialinvoke $r2.<com.android.internal.infra.AndroidFuture: void <init>()>();

        interfaceinvoke r0.<android.permission.IPermissionController: void updateUserSensitiveForApp(int,com.android.internal.infra.AndroidFuture)>(i0, $r2);

        return $r2;
    }

    static void lambda$updateUserSensitiveForApp$25(int, java.lang.Void, java.lang.Throwable)
    {
        int i0;
        java.lang.Throwable r0;
        java.lang.StringBuilder $r2;
        java.lang.String $r5, r7;
        java.lang.Void r6;

        i0 := @parameter0: int;

        r6 := @parameter1: java.lang.Void;

        r0 := @parameter2: java.lang.Throwable;

        if r0 == null goto label1;

        r7 = <android.permission.PermissionControllerManager: java.lang.String TAG>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error updating user_sensitive flags for uid ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>(r7, $r5, r0);

     label1:
        return;
    }

    public void applyStagedRuntimePermissionBackup(java.lang.String, android.os.UserHandle, java.util.concurrent.Executor, java.util.function.Consumer)
    {
        android.permission.PermissionControllerManager r0;
        java.lang.String r1;
        android.os.UserHandle r2;
        java.util.concurrent.Executor r3;
        java.util.function.Consumer r4;
        java.lang.String[] $r9;
        android.permission._$$Lambda$PermissionControllerManager$2gyb4miANgsuR_Cn3HPTnP6sL54 $r10;
        com.android.internal.infra.ServiceConnector $r11;
        com.android.internal.infra.AndroidFuture $r12;
        android.permission._$$Lambda$PermissionControllerManager$vBYanTuMAWBbfOp_XdHzQXYNpXY $r13;

        r0 := @this: android.permission.PermissionControllerManager;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.UserHandle;

        r3 := @parameter2: java.util.concurrent.Executor;

        r4 := @parameter3: java.util.function.Consumer;

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r2);

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r3);

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r4);

        $r9 = newarray (java.lang.String)[2];

        $r9[0] = "android.permission.GRANT_RUNTIME_PERMISSIONS";

        $r9[1] = "android.permission.RESTORE_RUNTIME_PERMISSIONS";

        specialinvoke r0.<android.permission.PermissionControllerManager: void enforceSomePermissionsGrantedToSelf(java.lang.String[])>($r9);

        $r11 = r0.<android.permission.PermissionControllerManager: com.android.internal.infra.ServiceConnector mRemoteService>;

        $r10 = new android.permission._$$Lambda$PermissionControllerManager$2gyb4miANgsuR_Cn3HPTnP6sL54;

        specialinvoke $r10.<android.permission._$$Lambda$PermissionControllerManager$2gyb4miANgsuR_Cn3HPTnP6sL54: void <init>(java.lang.String,android.os.UserHandle)>(r1, r2);

        $r12 = interfaceinvoke $r11.<com.android.internal.infra.ServiceConnector: com.android.internal.infra.AndroidFuture postAsync(com.android.internal.infra.ServiceConnector$Job)>($r10);

        $r13 = new android.permission._$$Lambda$PermissionControllerManager$vBYanTuMAWBbfOp_XdHzQXYNpXY;

        specialinvoke $r13.<android.permission._$$Lambda$PermissionControllerManager$vBYanTuMAWBbfOp_XdHzQXYNpXY: void <init>(java.lang.String,java.util.function.Consumer)>(r1, r4);

        virtualinvoke $r12.<com.android.internal.infra.AndroidFuture: com.android.internal.infra.AndroidFuture whenCompleteAsync(java.util.function.BiConsumer,java.util.concurrent.Executor)>($r13, r3);

        return;
    }

    public void countPermissionApps(java.util.List, int, android.permission.PermissionControllerManager$OnCountPermissionAppsResultCallback, android.os.Handler)
    {
        android.permission.PermissionControllerManager r0;
        java.util.List r1;
        int i0;
        android.permission.PermissionControllerManager$OnCountPermissionAppsResultCallback r2;
        android.permission._$$Lambda$PermissionControllerManager$F3XGmg9VDZwhqc9cSceeDfZkCBo $r5;
        com.android.internal.infra.ServiceConnector $r6;
        com.android.internal.infra.AndroidFuture $r7;
        android.permission._$$Lambda$PermissionControllerManager$3DXENZY34HBEEqo36SfSnKNAHK4 $r8;
        android.os.Handler r10;

        r0 := @this: android.permission.PermissionControllerManager;

        r1 := @parameter0: java.util.List;

        i0 := @parameter1: int;

        r2 := @parameter2: android.permission.PermissionControllerManager$OnCountPermissionAppsResultCallback;

        r10 := @parameter3: android.os.Handler;

        staticinvoke <com.android.internal.util.Preconditions: java.util.Collection checkCollectionElementsNotNull(java.util.Collection,java.lang.String)>(r1, "permissionNames");

        staticinvoke <com.android.internal.util.Preconditions: int checkFlagsArgument(int,int)>(i0, 3);

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r2);

        if r10 == null goto label1;

        goto label2;

     label1:
        r10 = r0.<android.permission.PermissionControllerManager: android.os.Handler mHandler>;

     label2:
        $r6 = r0.<android.permission.PermissionControllerManager: com.android.internal.infra.ServiceConnector mRemoteService>;

        $r5 = new android.permission._$$Lambda$PermissionControllerManager$F3XGmg9VDZwhqc9cSceeDfZkCBo;

        specialinvoke $r5.<android.permission._$$Lambda$PermissionControllerManager$F3XGmg9VDZwhqc9cSceeDfZkCBo: void <init>(java.util.List,int)>(r1, i0);

        $r7 = interfaceinvoke $r6.<com.android.internal.infra.ServiceConnector: com.android.internal.infra.AndroidFuture postAsync(com.android.internal.infra.ServiceConnector$Job)>($r5);

        $r8 = new android.permission._$$Lambda$PermissionControllerManager$3DXENZY34HBEEqo36SfSnKNAHK4;

        specialinvoke $r8.<android.permission._$$Lambda$PermissionControllerManager$3DXENZY34HBEEqo36SfSnKNAHK4: void <init>(android.os.Handler,android.permission.PermissionControllerManager$OnCountPermissionAppsResultCallback)>(r10, r2);

        virtualinvoke $r7.<com.android.internal.infra.AndroidFuture: com.android.internal.infra.AndroidFuture whenComplete(java.util.function.BiConsumer)>($r8);

        return;
    }

    public void dump(java.io.FileDescriptor, java.lang.String[])
    {
        android.permission.PermissionControllerManager r0;
        java.lang.String[] r1;
        com.android.internal.infra.ServiceConnector r2;
        android.permission._$$Lambda$PermissionControllerManager$QKXRZuAcOE3JWRlH0VmPcShX4LM r3;
        com.android.internal.infra.AndroidFuture $r4;
        java.util.concurrent.TimeUnit $r5;
        java.lang.Exception $r7;
        java.lang.String $r8;
        java.io.FileDescriptor r9;

        r0 := @this: android.permission.PermissionControllerManager;

        r9 := @parameter0: java.io.FileDescriptor;

        r1 := @parameter1: java.lang.String[];

     label1:
        r2 = r0.<android.permission.PermissionControllerManager: com.android.internal.infra.ServiceConnector mRemoteService>;

        r3 = new android.permission._$$Lambda$PermissionControllerManager$QKXRZuAcOE3JWRlH0VmPcShX4LM;

        specialinvoke r3.<android.permission._$$Lambda$PermissionControllerManager$QKXRZuAcOE3JWRlH0VmPcShX4LM: void <init>(java.io.FileDescriptor,java.lang.String[])>(r9, r1);

        $r4 = interfaceinvoke r2.<com.android.internal.infra.ServiceConnector: com.android.internal.infra.AndroidFuture post(com.android.internal.infra.ServiceConnector$VoidJob)>(r3);

        $r5 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>;

        virtualinvoke $r4.<com.android.internal.infra.AndroidFuture: java.lang.Object get(long,java.util.concurrent.TimeUnit)>(60000L, $r5);

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

        $r8 = <android.permission.PermissionControllerManager: java.lang.String TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r8, "Could not get dump", $r7);

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public void getAppPermissions(java.lang.String, android.permission.PermissionControllerManager$OnGetAppPermissionResultCallback, android.os.Handler)
    {
        android.permission.PermissionControllerManager r0;
        java.lang.String r1;
        android.permission.PermissionControllerManager$OnGetAppPermissionResultCallback r2;
        android.permission._$$Lambda$PermissionControllerManager$qbjquKkizobHfe5rpkz_pBZGMm0 $r5;
        com.android.internal.infra.ServiceConnector $r6;
        com.android.internal.infra.AndroidFuture $r7;
        android.permission._$$Lambda$PermissionControllerManager$6Ag5ugR0frhyp44qzIn5jlbtZRg $r8;
        android.os.Handler r10;

        r0 := @this: android.permission.PermissionControllerManager;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.permission.PermissionControllerManager$OnGetAppPermissionResultCallback;

        r10 := @parameter2: android.os.Handler;

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r2);

        if r10 == null goto label1;

        goto label2;

     label1:
        r10 = r0.<android.permission.PermissionControllerManager: android.os.Handler mHandler>;

     label2:
        $r6 = r0.<android.permission.PermissionControllerManager: com.android.internal.infra.ServiceConnector mRemoteService>;

        $r5 = new android.permission._$$Lambda$PermissionControllerManager$qbjquKkizobHfe5rpkz_pBZGMm0;

        specialinvoke $r5.<android.permission._$$Lambda$PermissionControllerManager$qbjquKkizobHfe5rpkz_pBZGMm0: void <init>(java.lang.String)>(r1);

        $r7 = interfaceinvoke $r6.<com.android.internal.infra.ServiceConnector: com.android.internal.infra.AndroidFuture postAsync(com.android.internal.infra.ServiceConnector$Job)>($r5);

        $r8 = new android.permission._$$Lambda$PermissionControllerManager$6Ag5ugR0frhyp44qzIn5jlbtZRg;

        specialinvoke $r8.<android.permission._$$Lambda$PermissionControllerManager$6Ag5ugR0frhyp44qzIn5jlbtZRg: void <init>(android.os.Handler,android.permission.PermissionControllerManager$OnGetAppPermissionResultCallback)>(r10, r2);

        virtualinvoke $r7.<com.android.internal.infra.AndroidFuture: com.android.internal.infra.AndroidFuture whenComplete(java.util.function.BiConsumer)>($r8);

        return;
    }

    public void getPermissionUsages(boolean, long, java.util.concurrent.Executor, android.permission.PermissionControllerManager$OnPermissionUsageResultCallback)
    {
        android.permission.PermissionControllerManager r0;
        boolean z0;
        long l0;
        java.util.concurrent.Executor r1;
        android.permission.PermissionControllerManager$OnPermissionUsageResultCallback r2;
        android.permission._$$Lambda$PermissionControllerManager$qxGLAK8X0GMfe_vQr0NFGapPRN4 $r5;
        com.android.internal.infra.ServiceConnector $r6;
        com.android.internal.infra.AndroidFuture $r7;
        android.permission._$$Lambda$PermissionControllerManager$bTHE_ox64GS5Ys00_8kOUGjAWhY $r8;

        r0 := @this: android.permission.PermissionControllerManager;

        z0 := @parameter0: boolean;

        l0 := @parameter1: long;

        r1 := @parameter2: java.util.concurrent.Executor;

        r2 := @parameter3: android.permission.PermissionControllerManager$OnPermissionUsageResultCallback;

        staticinvoke <com.android.internal.util.Preconditions: long checkArgumentNonnegative(long)>(l0);

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r2);

        $r6 = r0.<android.permission.PermissionControllerManager: com.android.internal.infra.ServiceConnector mRemoteService>;

        $r5 = new android.permission._$$Lambda$PermissionControllerManager$qxGLAK8X0GMfe_vQr0NFGapPRN4;

        specialinvoke $r5.<android.permission._$$Lambda$PermissionControllerManager$qxGLAK8X0GMfe_vQr0NFGapPRN4: void <init>(boolean,long)>(z0, l0);

        $r7 = interfaceinvoke $r6.<com.android.internal.infra.ServiceConnector: com.android.internal.infra.AndroidFuture postAsync(com.android.internal.infra.ServiceConnector$Job)>($r5);

        $r8 = new android.permission._$$Lambda$PermissionControllerManager$bTHE_ox64GS5Ys00_8kOUGjAWhY;

        specialinvoke $r8.<android.permission._$$Lambda$PermissionControllerManager$bTHE_ox64GS5Ys00_8kOUGjAWhY: void <init>(android.permission.PermissionControllerManager$OnPermissionUsageResultCallback)>(r2);

        virtualinvoke $r7.<com.android.internal.infra.AndroidFuture: com.android.internal.infra.AndroidFuture whenCompleteAsync(java.util.function.BiConsumer,java.util.concurrent.Executor)>($r8, r1);

        return;
    }

    public void getRuntimePermissionBackup(android.os.UserHandle, java.util.concurrent.Executor, java.util.function.Consumer)
    {
        android.permission.PermissionControllerManager r0;
        android.os.UserHandle r1;
        java.util.concurrent.Executor r2;
        java.util.function.Consumer r3;
        java.lang.String[] $r7;
        android.permission._$$Lambda$PermissionControllerManager$Iy_7wiKMCV_MFSPGyIJxP_DSf8E $r8;
        com.android.internal.infra.ServiceConnector $r9;
        com.android.internal.infra.AndroidFuture $r10;
        android.permission._$$Lambda$PermissionControllerManager$wPNqW0yZff7KXoWmrKVyzMgY2jc $r11;

        r0 := @this: android.permission.PermissionControllerManager;

        r1 := @parameter0: android.os.UserHandle;

        r2 := @parameter1: java.util.concurrent.Executor;

        r3 := @parameter2: java.util.function.Consumer;

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r2);

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r3);

        $r7 = newarray (java.lang.String)[1];

        $r7[0] = "android.permission.GET_RUNTIME_PERMISSIONS";

        specialinvoke r0.<android.permission.PermissionControllerManager: void enforceSomePermissionsGrantedToSelf(java.lang.String[])>($r7);

        $r9 = r0.<android.permission.PermissionControllerManager: com.android.internal.infra.ServiceConnector mRemoteService>;

        $r8 = new android.permission._$$Lambda$PermissionControllerManager$Iy_7wiKMCV_MFSPGyIJxP_DSf8E;

        specialinvoke $r8.<android.permission._$$Lambda$PermissionControllerManager$Iy_7wiKMCV_MFSPGyIJxP_DSf8E: void <init>(android.os.UserHandle)>(r1);

        $r10 = interfaceinvoke $r9.<com.android.internal.infra.ServiceConnector: com.android.internal.infra.AndroidFuture postAsync(com.android.internal.infra.ServiceConnector$Job)>($r8);

        $r11 = new android.permission._$$Lambda$PermissionControllerManager$wPNqW0yZff7KXoWmrKVyzMgY2jc;

        specialinvoke $r11.<android.permission._$$Lambda$PermissionControllerManager$wPNqW0yZff7KXoWmrKVyzMgY2jc: void <init>(java.util.function.Consumer)>(r3);

        virtualinvoke $r10.<com.android.internal.infra.AndroidFuture: com.android.internal.infra.AndroidFuture whenCompleteAsync(java.util.function.BiConsumer,java.util.concurrent.Executor)>($r11, r2);

        return;
    }

    public void grantOrUpgradeDefaultRuntimePermissions(java.util.concurrent.Executor, java.util.function.Consumer)
    {
        android.permission.PermissionControllerManager r0;
        java.util.concurrent.Executor r1;
        java.util.function.Consumer r2;
        android.permission.'-$$Lambda$PermissionControllerManager$cn7Tw4pO8bRiaLbV2UGd6fgcSO4' $r3;
        com.android.internal.infra.ServiceConnector $r4;
        com.android.internal.infra.AndroidFuture $r5;
        android.permission._$$Lambda$PermissionControllerManager$iZg46VI1PF4HbTl45C2Rv0XwOm0 r8;
        com.android.internal.infra.ServiceConnector$Job r9;

        r0 := @this: android.permission.PermissionControllerManager;

        r1 := @parameter0: java.util.concurrent.Executor;

        r2 := @parameter1: java.util.function.Consumer;

        $r4 = r0.<android.permission.PermissionControllerManager: com.android.internal.infra.ServiceConnector mRemoteService>;

        $r3 = <android.permission._$$Lambda$PermissionControllerManager$cn7Tw4pO8bRiaLbV2UGd6fgcSO4: android.permission.'-$$Lambda$PermissionControllerManager$cn7Tw4pO8bRiaLbV2UGd6fgcSO4' INSTANCE>;

        r9 = (com.android.internal.infra.ServiceConnector$Job) $r3;

        $r5 = interfaceinvoke $r4.<com.android.internal.infra.ServiceConnector: com.android.internal.infra.AndroidFuture postAsync(com.android.internal.infra.ServiceConnector$Job)>(r9);

        r8 = new android.permission._$$Lambda$PermissionControllerManager$iZg46VI1PF4HbTl45C2Rv0XwOm0;

        specialinvoke r8.<android.permission._$$Lambda$PermissionControllerManager$iZg46VI1PF4HbTl45C2Rv0XwOm0: void <init>(java.util.function.Consumer)>(r2);

        virtualinvoke $r5.<com.android.internal.infra.AndroidFuture: com.android.internal.infra.AndroidFuture whenCompleteAsync(java.util.function.BiConsumer,java.util.concurrent.Executor)>(r8, r1);

        return;
    }

    public java.util.concurrent.CompletableFuture lambda$revokeRuntimePermissions$0$PermissionControllerManager(java.util.Map, boolean, int, android.permission.IPermissionController) throws java.lang.Exception
    {
        android.permission.PermissionControllerManager r0;
        boolean z0, $z1;
        int i0;
        android.permission.IPermissionController r1;
        java.util.Iterator r3;
        android.os.Bundle $r4;
        java.util.Set $r5;
        com.android.internal.infra.AndroidFuture $r6;
        android.content.Context $r7;
        java.lang.String $r8, $r12;
        java.lang.Object $r9, $r10, $r13;
        java.util.ArrayList $r11;
        java.util.Collection $r14;
        java.util.Map r15;
        java.util.Map$Entry r16;

        r0 := @this: android.permission.PermissionControllerManager;

        r15 := @parameter0: java.util.Map;

        z0 := @parameter1: boolean;

        i0 := @parameter2: int;

        r1 := @parameter3: android.permission.IPermissionController;

        $r4 = new android.os.Bundle;

        specialinvoke $r4.<android.os.Bundle: void <init>()>();

        $r5 = interfaceinvoke r15.<java.util.Map: java.util.Set entrySet()>();

        r3 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label2;

        $r9 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r16 = (java.util.Map$Entry) $r9;

        $r10 = interfaceinvoke r16.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r12 = (java.lang.String) $r10;

        $r11 = new java.util.ArrayList;

        $r13 = interfaceinvoke r16.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r14 = (java.util.Collection) $r13;

        specialinvoke $r11.<java.util.ArrayList: void <init>(java.util.Collection)>($r14);

        virtualinvoke $r4.<android.os.Bundle: void putStringArrayList(java.lang.String,java.util.ArrayList)>($r12, $r11);

        goto label1;

     label2:
        $r6 = new com.android.internal.infra.AndroidFuture;

        specialinvoke $r6.<com.android.internal.infra.AndroidFuture: void <init>()>();

        $r7 = r0.<android.permission.PermissionControllerManager: android.content.Context mContext>;

        $r8 = virtualinvoke $r7.<android.content.Context: java.lang.String getPackageName()>();

        interfaceinvoke r1.<android.permission.IPermissionController: void revokeRuntimePermissions(android.os.Bundle,boolean,int,java.lang.String,com.android.internal.infra.AndroidFuture)>($r4, z0, i0, $r8, $r6);

        return $r6;
    }

    public void notifyOneTimePermissionSessionTimeout(java.lang.String)
    {
        android.permission.PermissionControllerManager r0;
        java.lang.String r1;
        android.permission._$$Lambda$PermissionControllerManager$MqYq3LpSVm_2tnlerpH7tgxg0Us $r2;
        com.android.internal.infra.ServiceConnector $r3;

        r0 := @this: android.permission.PermissionControllerManager;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<android.permission.PermissionControllerManager: com.android.internal.infra.ServiceConnector mRemoteService>;

        $r2 = new android.permission._$$Lambda$PermissionControllerManager$MqYq3LpSVm_2tnlerpH7tgxg0Us;

        specialinvoke $r2.<android.permission._$$Lambda$PermissionControllerManager$MqYq3LpSVm_2tnlerpH7tgxg0Us: void <init>(java.lang.String)>(r1);

        interfaceinvoke $r3.<com.android.internal.infra.ServiceConnector: boolean run(com.android.internal.infra.ServiceConnector$VoidJob)>($r2);

        return;
    }

    public void revokeRuntimePermission(java.lang.String, java.lang.String)
    {
        android.permission.PermissionControllerManager r0;
        java.lang.String r1, r2;
        android.permission._$$Lambda$PermissionControllerManager$fCp0CnfICduEKFO6T7fn3jMOSBI $r5;
        com.android.internal.infra.ServiceConnector $r6;

        r0 := @this: android.permission.PermissionControllerManager;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r2);

        $r6 = r0.<android.permission.PermissionControllerManager: com.android.internal.infra.ServiceConnector mRemoteService>;

        $r5 = new android.permission._$$Lambda$PermissionControllerManager$fCp0CnfICduEKFO6T7fn3jMOSBI;

        specialinvoke $r5.<android.permission._$$Lambda$PermissionControllerManager$fCp0CnfICduEKFO6T7fn3jMOSBI: void <init>(java.lang.String,java.lang.String)>(r1, r2);

        interfaceinvoke $r6.<com.android.internal.infra.ServiceConnector: boolean run(com.android.internal.infra.ServiceConnector$VoidJob)>($r5);

        return;
    }

    public void revokeRuntimePermissions(java.util.Map, boolean, int, java.util.concurrent.Executor, android.permission.PermissionControllerManager$OnRevokeRuntimePermissionsCallback)
    {
        android.permission.PermissionControllerManager r0;
        java.util.Map r1;
        boolean z0, $z1;
        int i0;
        java.util.concurrent.Executor r2;
        android.permission.PermissionControllerManager$OnRevokeRuntimePermissionsCallback r3;
        java.util.Iterator r4;
        java.util.Map$Entry r5;
        java.util.Set $r9;
        java.lang.String[] $r10;
        android.permission._$$Lambda$PermissionControllerManager$_00c_YE4DXfkvjweKlMro3pl_G8 $r11;
        com.android.internal.infra.ServiceConnector $r12;
        com.android.internal.infra.AndroidFuture $r13;
        android.permission._$$Lambda$PermissionControllerManager$EuAUoa5oQvhIEr2FodjehlRNmHY $r14;
        java.lang.Object $r16, $r17, $r20;
        java.lang.String $r18;
        java.util.List $r21;

        r0 := @this: android.permission.PermissionControllerManager;

        r1 := @parameter0: java.util.Map;

        z0 := @parameter1: boolean;

        i0 := @parameter2: int;

        r2 := @parameter3: java.util.concurrent.Executor;

        r3 := @parameter4: android.permission.PermissionControllerManager$OnRevokeRuntimePermissionsCallback;

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r2);

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r3);

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r9 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>();

        r4 = interfaceinvoke $r9.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label2;

        $r16 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.util.Map$Entry) $r16;

        $r17 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r18 = (java.lang.String) $r17;

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r18);

        $r20 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r21 = (java.util.List) $r20;

        staticinvoke <com.android.internal.util.Preconditions: java.util.Collection checkCollectionElementsNotNull(java.util.Collection,java.lang.String)>($r21, "permissions");

        goto label1;

     label2:
        $r10 = newarray (java.lang.String)[1];

        $r10[0] = "android.permission.REVOKE_RUNTIME_PERMISSIONS";

        specialinvoke r0.<android.permission.PermissionControllerManager: void enforceSomePermissionsGrantedToSelf(java.lang.String[])>($r10);

        $r12 = r0.<android.permission.PermissionControllerManager: com.android.internal.infra.ServiceConnector mRemoteService>;

        $r11 = new android.permission._$$Lambda$PermissionControllerManager$_00c_YE4DXfkvjweKlMro3pl_G8;

        specialinvoke $r11.<android.permission._$$Lambda$PermissionControllerManager$_00c_YE4DXfkvjweKlMro3pl_G8: void <init>(android.permission.PermissionControllerManager,java.util.Map,boolean,int)>(r0, r1, z0, i0);

        $r13 = interfaceinvoke $r12.<com.android.internal.infra.ServiceConnector: com.android.internal.infra.AndroidFuture postAsync(com.android.internal.infra.ServiceConnector$Job)>($r11);

        $r14 = new android.permission._$$Lambda$PermissionControllerManager$EuAUoa5oQvhIEr2FodjehlRNmHY;

        specialinvoke $r14.<android.permission._$$Lambda$PermissionControllerManager$EuAUoa5oQvhIEr2FodjehlRNmHY: void <init>(android.permission.PermissionControllerManager$OnRevokeRuntimePermissionsCallback)>(r3);

        virtualinvoke $r13.<com.android.internal.infra.AndroidFuture: com.android.internal.infra.AndroidFuture whenCompleteAsync(java.util.function.BiConsumer,java.util.concurrent.Executor)>($r14, r2);

        return;
    }

    public void setRuntimePermissionGrantStateByDeviceAdmin(java.lang.String, java.lang.String, java.lang.String, int, java.util.concurrent.Executor, java.util.function.Consumer)
    {
        android.permission.PermissionControllerManager r0;
        java.lang.String r1, r2, r3;
        int i0;
        java.util.concurrent.Executor r4;
        java.util.function.Consumer r5;
        boolean z1;
        com.android.internal.infra.ServiceConnector $r12;
        android.permission._$$Lambda$PermissionControllerManager$ESMSOXHMTX1zwjBZlBwmbWKWJso $r13;
        com.android.internal.infra.AndroidFuture $r14;
        android.permission._$$Lambda$PermissionControllerManager$nFhNDDZWDMvY1EMapbsu7_rktxg $r15;

        r0 := @this: android.permission.PermissionControllerManager;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        r4 := @parameter4: java.util.concurrent.Executor;

        r5 := @parameter5: java.util.function.Consumer;

        staticinvoke <com.android.internal.util.Preconditions: java.lang.CharSequence checkStringNotEmpty(java.lang.CharSequence)>(r1);

        staticinvoke <com.android.internal.util.Preconditions: java.lang.CharSequence checkStringNotEmpty(java.lang.CharSequence)>(r2);

        staticinvoke <com.android.internal.util.Preconditions: java.lang.CharSequence checkStringNotEmpty(java.lang.CharSequence)>(r3);

        z1 = 1;

        if i0 == 1 goto label2;

        z1 = 1;

        if i0 == 2 goto label2;

        if i0 != 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        staticinvoke <com.android.internal.util.Preconditions: void checkArgument(boolean)>(z1);

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r4);

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r5);

        $r12 = r0.<android.permission.PermissionControllerManager: com.android.internal.infra.ServiceConnector mRemoteService>;

        $r13 = new android.permission._$$Lambda$PermissionControllerManager$ESMSOXHMTX1zwjBZlBwmbWKWJso;

        specialinvoke $r13.<android.permission._$$Lambda$PermissionControllerManager$ESMSOXHMTX1zwjBZlBwmbWKWJso: void <init>(java.lang.String,java.lang.String,java.lang.String,int)>(r1, r2, r3, i0);

        $r14 = interfaceinvoke $r12.<com.android.internal.infra.ServiceConnector: com.android.internal.infra.AndroidFuture postAsync(com.android.internal.infra.ServiceConnector$Job)>($r13);

        $r15 = new android.permission._$$Lambda$PermissionControllerManager$nFhNDDZWDMvY1EMapbsu7_rktxg;

        specialinvoke $r15.<android.permission._$$Lambda$PermissionControllerManager$nFhNDDZWDMvY1EMapbsu7_rktxg: void <init>(java.lang.String,java.util.function.Consumer)>(r2, r5);

        virtualinvoke $r14.<com.android.internal.infra.AndroidFuture: com.android.internal.infra.AndroidFuture whenCompleteAsync(java.util.function.BiConsumer,java.util.concurrent.Executor)>($r15, r4);

        return;
    }

    public void stageAndApplyRuntimePermissionsBackup(byte[], android.os.UserHandle)
    {
        android.permission.PermissionControllerManager r0;
        byte[] r1;
        android.os.UserHandle r2;
        java.lang.String[] $r5;
        com.android.internal.infra.ServiceConnector $r7;
        com.android.internal.infra.AndroidFuture $r8;
        android.permission.'-$$Lambda$PermissionControllerManager$S2VSU3Pp--uq4UNaUiz9gMU65xU' $r9;
        android.permission._$$Lambda$PermissionControllerManager$DtZA5ILHLibh9MBqPQNGrWZ0CSw r11;
        java.util.function.BiConsumer r12;

        r0 := @this: android.permission.PermissionControllerManager;

        r1 := @parameter0: byte[];

        r2 := @parameter1: android.os.UserHandle;

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r2);

        $r5 = newarray (java.lang.String)[2];

        $r5[0] = "android.permission.GRANT_RUNTIME_PERMISSIONS";

        $r5[1] = "android.permission.RESTORE_RUNTIME_PERMISSIONS";

        specialinvoke r0.<android.permission.PermissionControllerManager: void enforceSomePermissionsGrantedToSelf(java.lang.String[])>($r5);

        $r7 = r0.<android.permission.PermissionControllerManager: com.android.internal.infra.ServiceConnector mRemoteService>;

        r11 = new android.permission._$$Lambda$PermissionControllerManager$DtZA5ILHLibh9MBqPQNGrWZ0CSw;

        specialinvoke r11.<android.permission._$$Lambda$PermissionControllerManager$DtZA5ILHLibh9MBqPQNGrWZ0CSw: void <init>(android.os.UserHandle,byte[])>(r2, r1);

        $r8 = interfaceinvoke $r7.<com.android.internal.infra.ServiceConnector: com.android.internal.infra.AndroidFuture postAsync(com.android.internal.infra.ServiceConnector$Job)>(r11);

        $r9 = <android.permission._$$Lambda$PermissionControllerManager$S2VSU3Pp__uq4UNaUiz9gMU65xU: android.permission.'-$$Lambda$PermissionControllerManager$S2VSU3Pp--uq4UNaUiz9gMU65xU' INSTANCE>;

        r12 = (java.util.function.BiConsumer) $r9;

        virtualinvoke $r8.<com.android.internal.infra.AndroidFuture: com.android.internal.infra.AndroidFuture whenComplete(java.util.function.BiConsumer)>(r12);

        return;
    }

    public void updateUserSensitive()
    {
        android.permission.PermissionControllerManager r0;

        r0 := @this: android.permission.PermissionControllerManager;

        virtualinvoke r0.<android.permission.PermissionControllerManager: void updateUserSensitiveForApp(int)>(-1);

        return;
    }

    public void updateUserSensitiveForApp(int)
    {
        android.permission.PermissionControllerManager r0;
        int i0;
        android.permission._$$Lambda$PermissionControllerManager$MqIts8mfNZAqQWR1_qc2_3bh08M $r1;
        com.android.internal.infra.ServiceConnector $r2;
        com.android.internal.infra.AndroidFuture $r3;
        android.permission._$$Lambda$PermissionControllerManager$LeLHpbJU3pY1PZAWD3x9Fi9QxHI $r4;

        r0 := @this: android.permission.PermissionControllerManager;

        i0 := @parameter0: int;

        $r2 = r0.<android.permission.PermissionControllerManager: com.android.internal.infra.ServiceConnector mRemoteService>;

        $r1 = new android.permission._$$Lambda$PermissionControllerManager$MqIts8mfNZAqQWR1_qc2_3bh08M;

        specialinvoke $r1.<android.permission._$$Lambda$PermissionControllerManager$MqIts8mfNZAqQWR1_qc2_3bh08M: void <init>(int)>(i0);

        $r3 = interfaceinvoke $r2.<com.android.internal.infra.ServiceConnector: com.android.internal.infra.AndroidFuture postAsync(com.android.internal.infra.ServiceConnector$Job)>($r1);

        $r4 = new android.permission._$$Lambda$PermissionControllerManager$LeLHpbJU3pY1PZAWD3x9Fi9QxHI;

        specialinvoke $r4.<android.permission._$$Lambda$PermissionControllerManager$LeLHpbJU3pY1PZAWD3x9Fi9QxHI: void <init>(int)>(i0);

        virtualinvoke $r3.<com.android.internal.infra.AndroidFuture: com.android.internal.infra.AndroidFuture whenComplete(java.util.function.BiConsumer)>($r4);

        return;
    }
}
