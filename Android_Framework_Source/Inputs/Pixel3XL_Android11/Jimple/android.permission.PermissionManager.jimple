public final class android.permission.PermissionManager extends java.lang.Object
{
    public static final java.lang.String CACHE_KEY_PACKAGE_INFO;
    public static final java.lang.String KILL_APP_REASON_GIDS_CHANGED;
    public static final java.lang.String KILL_APP_REASON_PERMISSIONS_REVOKED;
    private static final java.lang.String TAG;
    private static android.app.PropertyInvalidatedCache sPackageNamePermissionCache;
    private static final android.app.PropertyInvalidatedCache sPermissionCache;
    private final android.content.Context mContext;
    private final android.content.pm.IPackageManager mPackageManager;
    private final android.permission.IPermissionManager mPermissionManager;
    private java.util.List mSplitPermissionInfos;

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;
        android.permission.PermissionManager$1 $r2;
        android.permission.PermissionManager$2 $r3;

        <android.permission.PermissionManager: java.lang.String KILL_APP_REASON_PERMISSIONS_REVOKED> = "permissions revoked";

        <android.permission.PermissionManager: java.lang.String KILL_APP_REASON_GIDS_CHANGED> = "permission grant or revoke changed gids";

        <android.permission.PermissionManager: java.lang.String CACHE_KEY_PACKAGE_INFO> = "cache_key.package_info";

        $r0 = class "Landroid/permission/PermissionManager;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        <android.permission.PermissionManager: java.lang.String TAG> = $r1;

        $r2 = new android.permission.PermissionManager$1;

        specialinvoke $r2.<android.permission.PermissionManager$1: void <init>(int,java.lang.String)>(16, "cache_key.package_info");

        <android.permission.PermissionManager: android.app.PropertyInvalidatedCache sPermissionCache> = $r2;

        $r3 = new android.permission.PermissionManager$2;

        specialinvoke $r3.<android.permission.PermissionManager$2: void <init>(int,java.lang.String)>(16, "cache_key.package_info");

        <android.permission.PermissionManager: android.app.PropertyInvalidatedCache sPackageNamePermissionCache> = $r3;

        return;
    }

    public void <init>(android.content.Context, android.content.pm.IPackageManager) throws android.os.ServiceManager$ServiceNotFoundException
    {
        android.permission.PermissionManager r0;
        android.content.Context r1;
        android.content.pm.IPackageManager r2;
        android.os.IBinder $r3;
        android.permission.IPermissionManager $r4;

        r0 := @this: android.permission.PermissionManager;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.content.pm.IPackageManager;

        $r3 = staticinvoke <android.os.ServiceManager: android.os.IBinder getServiceOrThrow(java.lang.String)>("permissionmgr");

        $r4 = staticinvoke <android.permission.IPermissionManager$Stub: android.permission.IPermissionManager asInterface(android.os.IBinder)>($r3);

        specialinvoke r0.<android.permission.PermissionManager: void <init>(android.content.Context,android.content.pm.IPackageManager,android.permission.IPermissionManager)>(r1, r2, $r4);

        return;
    }

    public void <init>(android.content.Context, android.content.pm.IPackageManager, android.permission.IPermissionManager)
    {
        android.permission.PermissionManager r0;
        android.content.Context r1;
        android.content.pm.IPackageManager r2;
        android.permission.IPermissionManager r3;

        r0 := @this: android.permission.PermissionManager;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.content.pm.IPackageManager;

        r3 := @parameter2: android.permission.IPermissionManager;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.permission.PermissionManager: android.content.Context mContext> = r1;

        r0.<android.permission.PermissionManager: android.content.pm.IPackageManager mPackageManager> = r2;

        r0.<android.permission.PermissionManager: android.permission.IPermissionManager mPermissionManager> = r3;

        return;
    }

    static int access$100(java.lang.String, int, int)
    {
        java.lang.String r0;
        int i0, i1, $i2;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $i2 = staticinvoke <android.permission.PermissionManager: int checkPermissionUncached(java.lang.String,int,int)>(r0, i0, i1);

        return $i2;
    }

    static int access$200(java.lang.String, java.lang.String, int)
    {
        java.lang.String r0, r1;
        int i0, $i1;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $i1 = staticinvoke <android.permission.PermissionManager: int checkPackageNamePermissionUncached(java.lang.String,java.lang.String,int)>(r0, r1, i0);

        return $i1;
    }

    public static int checkPackageNamePermission(java.lang.String, java.lang.String, int)
    {
        java.lang.String r0, r1;
        int i0, $i1;
        android.permission.PermissionManager$PackageNamePermissionQuery $r2;
        android.app.PropertyInvalidatedCache $r3;
        java.lang.Object $r4;
        java.lang.Integer $r5;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $r3 = <android.permission.PermissionManager: android.app.PropertyInvalidatedCache sPackageNamePermissionCache>;

        $r2 = new android.permission.PermissionManager$PackageNamePermissionQuery;

        specialinvoke $r2.<android.permission.PermissionManager$PackageNamePermissionQuery: void <init>(java.lang.String,java.lang.String,int)>(r0, r1, i0);

        $r4 = virtualinvoke $r3.<android.app.PropertyInvalidatedCache: java.lang.Object query(java.lang.Object)>($r2);

        $r5 = (java.lang.Integer) $r4;

        $i1 = virtualinvoke $r5.<java.lang.Integer: int intValue()>();

        return $i1;
    }

    private static int checkPackageNamePermissionUncached(java.lang.String, java.lang.String, int)
    {
        java.lang.String r0, r4;
        android.permission.IPermissionManager $r1;
        android.os.RemoteException $r2;
        java.lang.RuntimeException $r3;
        int i0, i1;

        r4 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

     label1:
        $r1 = staticinvoke <android.app.ActivityThread: android.permission.IPermissionManager getPermissionManager()>();

        i1 = interfaceinvoke $r1.<android.permission.IPermissionManager: int checkPermission(java.lang.String,java.lang.String,int)>(r4, r0, i0);

     label2:
        return i1;

     label3:
        $r2 := @caughtexception;

        $r3 = virtualinvoke $r2.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r3;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public static int checkPermission(java.lang.String, int, int)
    {
        java.lang.String r0;
        int i0, i1, $i2;
        android.permission.PermissionManager$PermissionQuery $r1;
        android.app.PropertyInvalidatedCache $r2;
        java.lang.Object $r3;
        java.lang.Integer $r4;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = <android.permission.PermissionManager: android.app.PropertyInvalidatedCache sPermissionCache>;

        $r1 = new android.permission.PermissionManager$PermissionQuery;

        specialinvoke $r1.<android.permission.PermissionManager$PermissionQuery: void <init>(java.lang.String,int,int)>(r0, i0, i1);

        $r3 = virtualinvoke $r2.<android.app.PropertyInvalidatedCache: java.lang.Object query(java.lang.Object)>($r1);

        $r4 = (java.lang.Integer) $r3;

        $i2 = virtualinvoke $r4.<java.lang.Integer: int intValue()>();

        return $i2;
    }

    private static int checkPermissionUncached(java.lang.String, int, int)
    {
        int i0, i3, i4, i5;
        java.lang.StringBuilder $r0, $r6;
        java.lang.String $r5, $r11, r14, r16, r18;
        android.os.RemoteException $r12;
        java.lang.RuntimeException $r13;
        android.app.IActivityManager r15;

        r14 := @parameter0: java.lang.String;

        i3 := @parameter1: int;

        i0 := @parameter2: int;

        r15 = staticinvoke <android.app.ActivityManager: android.app.IActivityManager getService()>();

        if r15 != null goto label3;

        i4 = staticinvoke <android.os.UserHandle: int getAppId(int)>(i0);

        if i4 == 0 goto label2;

        if i4 != 1000 goto label1;

        goto label2;

     label1:
        r16 = <android.permission.PermissionManager: java.lang.String TAG>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Missing ActivityManager; assuming ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not hold ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r14);

        $r11 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>(r16, $r11);

        return -1;

     label2:
        r18 = <android.permission.PermissionManager: java.lang.String TAG>;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Missing ActivityManager; assuming ");

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" holds ");

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r14);

        $r5 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>(r18, $r5);

        return 0;

     label3:
        i5 = interfaceinvoke r15.<android.app.IActivityManager: int checkPermission(java.lang.String,int,int)>(r14, i3, i0);

     label4:
        return i5;

     label5:
        $r12 := @caughtexception;

        $r13 = virtualinvoke $r12.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r13;

        catch android.os.RemoteException from label3 to label4 with label5;
    }

    public static void disablePackageNamePermissionCache()
    {
        android.app.PropertyInvalidatedCache $r0;

        $r0 = <android.permission.PermissionManager: android.app.PropertyInvalidatedCache sPackageNamePermissionCache>;

        virtualinvoke $r0.<android.app.PropertyInvalidatedCache: void disableLocal()>();

        return;
    }

    public static void disablePermissionCache()
    {
        android.app.PropertyInvalidatedCache $r0;

        $r0 = <android.permission.PermissionManager: android.app.PropertyInvalidatedCache sPermissionCache>;

        virtualinvoke $r0.<android.app.PropertyInvalidatedCache: void disableLocal()>();

        return;
    }

    static void lambda$grantDefaultPermissionsToEnabledCarrierApps$5(java.util.function.Consumer)
    {
        java.util.function.Consumer r0;
        java.lang.Boolean $r1;

        r0 := @parameter0: java.util.function.Consumer;

        $r1 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke r0.<java.util.function.Consumer: void accept(java.lang.Object)>($r1);

        return;
    }

    static void lambda$grantDefaultPermissionsToEnabledImsServices$2(java.util.function.Consumer)
    {
        java.util.function.Consumer r0;
        java.lang.Boolean $r1;

        r0 := @parameter0: java.util.function.Consumer;

        $r1 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke r0.<java.util.function.Consumer: void accept(java.lang.Object)>($r1);

        return;
    }

    static void lambda$grantDefaultPermissionsToEnabledTelephonyDataServices$3(java.util.function.Consumer)
    {
        java.util.function.Consumer r0;
        java.lang.Boolean $r1;

        r0 := @parameter0: java.util.function.Consumer;

        $r1 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke r0.<java.util.function.Consumer: void accept(java.lang.Object)>($r1);

        return;
    }

    static void lambda$grantDefaultPermissionsToLuiApp$0(java.util.function.Consumer)
    {
        java.util.function.Consumer r0;
        java.lang.Boolean $r1;

        r0 := @parameter0: java.util.function.Consumer;

        $r1 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke r0.<java.util.function.Consumer: void accept(java.lang.Object)>($r1);

        return;
    }

    static void lambda$revokeDefaultPermissionsFromDisabledTelephonyDataServices$4(java.util.function.Consumer)
    {
        java.util.function.Consumer r0;
        java.lang.Boolean $r1;

        r0 := @parameter0: java.util.function.Consumer;

        $r1 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke r0.<java.util.function.Consumer: void accept(java.lang.Object)>($r1);

        return;
    }

    static void lambda$revokeDefaultPermissionsFromLuiApps$1(java.util.function.Consumer)
    {
        java.util.function.Consumer r0;
        java.lang.Boolean $r1;

        r0 := @parameter0: java.util.function.Consumer;

        $r1 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke r0.<java.util.function.Consumer: void accept(java.lang.Object)>($r1);

        return;
    }

    private java.util.List splitPermissionInfoListToNonParcelableList(java.util.List)
    {
        android.permission.PermissionManager r0;
        java.util.List r1;
        int i0, i1;
        java.util.ArrayList $r3;
        android.permission.PermissionManager$SplitPermissionInfo $r4;
        java.lang.Object $r5;
        android.content.pm.permission.SplitPermissionInfoParcelable $r6;

        r0 := @this: android.permission.PermissionManager;

        r1 := @parameter0: java.util.List;

        i0 = interfaceinvoke r1.<java.util.List: int size()>();

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>(int)>(i0);

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r4 = new android.permission.PermissionManager$SplitPermissionInfo;

        $r5 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i1);

        $r6 = (android.content.pm.permission.SplitPermissionInfoParcelable) $r5;

        specialinvoke $r4.<android.permission.PermissionManager$SplitPermissionInfo: void <init>(android.content.pm.permission.SplitPermissionInfoParcelable,android.permission.PermissionManager$1)>($r6, null);

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r4);

        i1 = i1 + 1;

        goto label1;

     label2:
        return $r3;
    }

    public static java.util.List splitPermissionInfoListToParcelableList(java.util.List)
    {
        java.util.List r0, $r7;
        int i0, $i1, i2;
        android.permission.PermissionManager$SplitPermissionInfo r2;
        java.util.ArrayList $r3;
        java.lang.Object $r4;
        android.content.pm.permission.SplitPermissionInfoParcelable $r5;
        java.lang.String $r6;

        r0 := @parameter0: java.util.List;

        i0 = interfaceinvoke r0.<java.util.List: int size()>();

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>(int)>(i0);

        i2 = 0;

     label1:
        if i2 >= i0 goto label2;

        $r4 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i2);

        r2 = (android.permission.PermissionManager$SplitPermissionInfo) $r4;

        $r5 = new android.content.pm.permission.SplitPermissionInfoParcelable;

        $r6 = virtualinvoke r2.<android.permission.PermissionManager$SplitPermissionInfo: java.lang.String getSplitPermission()>();

        $r7 = virtualinvoke r2.<android.permission.PermissionManager$SplitPermissionInfo: java.util.List getNewPermissions()>();

        $i1 = virtualinvoke r2.<android.permission.PermissionManager$SplitPermissionInfo: int getTargetSdk()>();

        specialinvoke $r5.<android.content.pm.permission.SplitPermissionInfoParcelable: void <init>(java.lang.String,java.util.List,int)>($r6, $r7, $i1);

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r5);

        i2 = i2 + 1;

        goto label1;

     label2:
        return $r3;
    }

    public int checkDeviceIdentifierAccess(java.lang.String, java.lang.String, java.lang.String, int, int)
    {
        android.permission.PermissionManager r0;
        java.lang.String r1, r2, r6;
        int i0, i1, i2;
        android.permission.IPermissionManager $r3;
        android.os.RemoteException $r4;
        java.lang.RuntimeException $r5;

        r0 := @this: android.permission.PermissionManager;

        r6 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        i1 := @parameter3: int;

        i0 := @parameter4: int;

     label1:
        $r3 = r0.<android.permission.PermissionManager: android.permission.IPermissionManager mPermissionManager>;

        i2 = interfaceinvoke $r3.<android.permission.IPermissionManager: int checkDeviceIdentifierAccess(java.lang.String,java.lang.String,java.lang.String,int,int)>(r6, r1, r2, i1, i0);

     label2:
        return i2;

     label3:
        $r4 := @caughtexception;

        $r5 = virtualinvoke $r4.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r5;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public java.util.Set getAutoRevokeExemptionGrantedPackages()
    {
        android.permission.PermissionManager r0;
        android.content.Context $r1;
        android.permission.IPermissionManager $r2;
        android.os.UserHandle $r3;
        int $i0;
        java.util.List $r4;
        android.os.RemoteException $r5;
        java.lang.RuntimeException $r6;
        java.util.Set r7;

        r0 := @this: android.permission.PermissionManager;

     label1:
        $r2 = r0.<android.permission.PermissionManager: android.permission.IPermissionManager mPermissionManager>;

        $r1 = r0.<android.permission.PermissionManager: android.content.Context mContext>;

        $r3 = virtualinvoke $r1.<android.content.Context: android.os.UserHandle getUser()>();

        $i0 = virtualinvoke $r3.<android.os.UserHandle: int getIdentifier()>();

        $r4 = interfaceinvoke $r2.<android.permission.IPermissionManager: java.util.List getAutoRevokeExemptionGrantedPackages(int)>($i0);

        r7 = staticinvoke <com.android.internal.util.CollectionUtils: java.util.Set toSet(java.util.Collection)>($r4);

     label2:
        return r7;

     label3:
        $r5 := @caughtexception;

        $r6 = virtualinvoke $r5.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r6;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public java.util.Set getAutoRevokeExemptionRequestedPackages()
    {
        android.permission.PermissionManager r0;
        android.content.Context $r1;
        android.permission.IPermissionManager $r2;
        android.os.UserHandle $r3;
        int $i0;
        java.util.List $r4;
        android.os.RemoteException $r5;
        java.lang.RuntimeException $r6;
        java.util.Set r7;

        r0 := @this: android.permission.PermissionManager;

     label1:
        $r2 = r0.<android.permission.PermissionManager: android.permission.IPermissionManager mPermissionManager>;

        $r1 = r0.<android.permission.PermissionManager: android.content.Context mContext>;

        $r3 = virtualinvoke $r1.<android.content.Context: android.os.UserHandle getUser()>();

        $i0 = virtualinvoke $r3.<android.os.UserHandle: int getIdentifier()>();

        $r4 = interfaceinvoke $r2.<android.permission.IPermissionManager: java.util.List getAutoRevokeExemptionRequestedPackages(int)>($i0);

        r7 = staticinvoke <com.android.internal.util.CollectionUtils: java.util.Set toSet(java.util.Collection)>($r4);

     label2:
        return r7;

     label3:
        $r5 := @caughtexception;

        $r6 = virtualinvoke $r5.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r6;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public int getRuntimePermissionsVersion()
    {
        android.permission.PermissionManager r0;
        int i0, $i1;
        android.content.Context $r2;
        android.content.pm.IPackageManager $r3;
        android.os.RemoteException $r4;
        java.lang.RuntimeException $r5;

        r0 := @this: android.permission.PermissionManager;

     label1:
        $r3 = r0.<android.permission.PermissionManager: android.content.pm.IPackageManager mPackageManager>;

        $r2 = r0.<android.permission.PermissionManager: android.content.Context mContext>;

        $i1 = virtualinvoke $r2.<android.content.Context: int getUserId()>();

        i0 = interfaceinvoke $r3.<android.content.pm.IPackageManager: int getRuntimePermissionsVersion(int)>($i1);

     label2:
        return i0;

     label3:
        $r4 := @caughtexception;

        $r5 = virtualinvoke $r4.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r5;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public java.util.List getSplitPermissions()
    {
        android.permission.PermissionManager r0;
        android.permission.IPermissionManager $r1;
        android.os.RemoteException $r2;
        java.lang.String $r3;
        java.util.List $r4, r5, r6, r7;

        r0 := @this: android.permission.PermissionManager;

        r5 = r0.<android.permission.PermissionManager: java.util.List mSplitPermissionInfos>;

        if r5 == null goto label1;

        return r5;

     label1:
        $r1 = staticinvoke <android.app.ActivityThread: android.permission.IPermissionManager getPermissionManager()>();

        r6 = interfaceinvoke $r1.<android.permission.IPermissionManager: java.util.List getSplitPermissions()>();

     label2:
        r7 = specialinvoke r0.<android.permission.PermissionManager: java.util.List splitPermissionInfoListToNonParcelableList(java.util.List)>(r6);

        r0.<android.permission.PermissionManager: java.util.List mSplitPermissionInfos> = r7;

        return r7;

     label3:
        $r2 := @caughtexception;

        $r3 = <android.permission.PermissionManager: java.lang.String TAG>;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r3, "Error getting split permissions", $r2);

        $r4 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $r4;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void grantDefaultPermissionsToEnabledCarrierApps(java.lang.String[], android.os.UserHandle, java.util.concurrent.Executor, java.util.function.Consumer)
    {
        android.permission.PermissionManager r0;
        android.os.UserHandle r1;
        java.util.concurrent.Executor r2;
        java.util.function.Consumer r3;
        android.permission.IPermissionManager $r4;
        int $i0;
        android.os.RemoteException $r5;
        java.lang.String[] r7;
        android.permission._$$Lambda$PermissionManager$FyB4K5KfEKqwp_uJUXvNLbTkmAg r8;

        r0 := @this: android.permission.PermissionManager;

        r7 := @parameter0: java.lang.String[];

        r1 := @parameter1: android.os.UserHandle;

        r2 := @parameter2: java.util.concurrent.Executor;

        r3 := @parameter3: java.util.function.Consumer;

     label1:
        $r4 = r0.<android.permission.PermissionManager: android.permission.IPermissionManager mPermissionManager>;

        $i0 = virtualinvoke r1.<android.os.UserHandle: int getIdentifier()>();

        interfaceinvoke $r4.<android.permission.IPermissionManager: void grantDefaultPermissionsToEnabledCarrierApps(java.lang.String[],int)>(r7, $i0);

        r8 = new android.permission._$$Lambda$PermissionManager$FyB4K5KfEKqwp_uJUXvNLbTkmAg;

        specialinvoke r8.<android.permission._$$Lambda$PermissionManager$FyB4K5KfEKqwp_uJUXvNLbTkmAg: void <init>(java.util.function.Consumer)>(r3);

        interfaceinvoke r2.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>(r8);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        virtualinvoke $r5.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void grantDefaultPermissionsToEnabledImsServices(java.lang.String[], android.os.UserHandle, java.util.concurrent.Executor, java.util.function.Consumer)
    {
        android.permission.PermissionManager r0;
        android.os.UserHandle r1;
        java.util.concurrent.Executor r2;
        java.util.function.Consumer r3;
        android.permission.IPermissionManager $r4;
        int $i0;
        android.os.RemoteException $r5;
        java.lang.String[] r7;
        android.permission._$$Lambda$PermissionManager$614OrkjHJQ8919GHESV4U3WEYEY r8;

        r0 := @this: android.permission.PermissionManager;

        r7 := @parameter0: java.lang.String[];

        r1 := @parameter1: android.os.UserHandle;

        r2 := @parameter2: java.util.concurrent.Executor;

        r3 := @parameter3: java.util.function.Consumer;

     label1:
        $r4 = r0.<android.permission.PermissionManager: android.permission.IPermissionManager mPermissionManager>;

        $i0 = virtualinvoke r1.<android.os.UserHandle: int getIdentifier()>();

        interfaceinvoke $r4.<android.permission.IPermissionManager: void grantDefaultPermissionsToEnabledImsServices(java.lang.String[],int)>(r7, $i0);

        r8 = new android.permission._$$Lambda$PermissionManager$614OrkjHJQ8919GHESV4U3WEYEY;

        specialinvoke r8.<android.permission._$$Lambda$PermissionManager$614OrkjHJQ8919GHESV4U3WEYEY: void <init>(java.util.function.Consumer)>(r3);

        interfaceinvoke r2.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>(r8);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        virtualinvoke $r5.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void grantDefaultPermissionsToEnabledTelephonyDataServices(java.lang.String[], android.os.UserHandle, java.util.concurrent.Executor, java.util.function.Consumer)
    {
        android.permission.PermissionManager r0;
        android.os.UserHandle r1;
        java.util.concurrent.Executor r2;
        java.util.function.Consumer r3;
        android.permission.IPermissionManager $r4;
        int $i0;
        android.os.RemoteException $r5;
        java.lang.String[] r7;
        android.permission._$$Lambda$PermissionManager$akRjCijSz__ZCVgA58pgpRUIzHU r8;

        r0 := @this: android.permission.PermissionManager;

        r7 := @parameter0: java.lang.String[];

        r1 := @parameter1: android.os.UserHandle;

        r2 := @parameter2: java.util.concurrent.Executor;

        r3 := @parameter3: java.util.function.Consumer;

     label1:
        $r4 = r0.<android.permission.PermissionManager: android.permission.IPermissionManager mPermissionManager>;

        $i0 = virtualinvoke r1.<android.os.UserHandle: int getIdentifier()>();

        interfaceinvoke $r4.<android.permission.IPermissionManager: void grantDefaultPermissionsToEnabledTelephonyDataServices(java.lang.String[],int)>(r7, $i0);

        r8 = new android.permission._$$Lambda$PermissionManager$akRjCijSz__ZCVgA58pgpRUIzHU;

        specialinvoke r8.<android.permission._$$Lambda$PermissionManager$akRjCijSz__ZCVgA58pgpRUIzHU: void <init>(java.util.function.Consumer)>(r3);

        interfaceinvoke r2.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>(r8);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        virtualinvoke $r5.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void grantDefaultPermissionsToLuiApp(java.lang.String, android.os.UserHandle, java.util.concurrent.Executor, java.util.function.Consumer)
    {
        android.permission.PermissionManager r0;
        android.os.UserHandle r1;
        java.util.concurrent.Executor r2;
        java.util.function.Consumer r3;
        android.permission.IPermissionManager $r4;
        int $i0;
        android.os.RemoteException $r5;
        java.lang.String r7;
        android.permission._$$Lambda$PermissionManager$0l4DEq2HXCCVCBUfdxUjWk3qCIU r8;

        r0 := @this: android.permission.PermissionManager;

        r7 := @parameter0: java.lang.String;

        r1 := @parameter1: android.os.UserHandle;

        r2 := @parameter2: java.util.concurrent.Executor;

        r3 := @parameter3: java.util.function.Consumer;

     label1:
        $r4 = r0.<android.permission.PermissionManager: android.permission.IPermissionManager mPermissionManager>;

        $i0 = virtualinvoke r1.<android.os.UserHandle: int getIdentifier()>();

        interfaceinvoke $r4.<android.permission.IPermissionManager: void grantDefaultPermissionsToActiveLuiApp(java.lang.String,int)>(r7, $i0);

        r8 = new android.permission._$$Lambda$PermissionManager$0l4DEq2HXCCVCBUfdxUjWk3qCIU;

        specialinvoke r8.<android.permission._$$Lambda$PermissionManager$0l4DEq2HXCCVCBUfdxUjWk3qCIU: void <init>(java.util.function.Consumer)>(r3);

        interfaceinvoke r2.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>(r8);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        virtualinvoke $r5.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void revokeDefaultPermissionsFromDisabledTelephonyDataServices(java.lang.String[], android.os.UserHandle, java.util.concurrent.Executor, java.util.function.Consumer)
    {
        android.permission.PermissionManager r0;
        android.os.UserHandle r1;
        java.util.concurrent.Executor r2;
        java.util.function.Consumer r3;
        android.permission.IPermissionManager $r4;
        int $i0;
        android.os.RemoteException $r5;
        java.lang.String[] r7;
        android.permission._$$Lambda$PermissionManager$DhpssISwP0aRU4I94NcrcBz5vI0 r8;

        r0 := @this: android.permission.PermissionManager;

        r7 := @parameter0: java.lang.String[];

        r1 := @parameter1: android.os.UserHandle;

        r2 := @parameter2: java.util.concurrent.Executor;

        r3 := @parameter3: java.util.function.Consumer;

     label1:
        $r4 = r0.<android.permission.PermissionManager: android.permission.IPermissionManager mPermissionManager>;

        $i0 = virtualinvoke r1.<android.os.UserHandle: int getIdentifier()>();

        interfaceinvoke $r4.<android.permission.IPermissionManager: void revokeDefaultPermissionsFromDisabledTelephonyDataServices(java.lang.String[],int)>(r7, $i0);

        r8 = new android.permission._$$Lambda$PermissionManager$DhpssISwP0aRU4I94NcrcBz5vI0;

        specialinvoke r8.<android.permission._$$Lambda$PermissionManager$DhpssISwP0aRU4I94NcrcBz5vI0: void <init>(java.util.function.Consumer)>(r3);

        interfaceinvoke r2.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>(r8);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        virtualinvoke $r5.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void revokeDefaultPermissionsFromLuiApps(java.lang.String[], android.os.UserHandle, java.util.concurrent.Executor, java.util.function.Consumer)
    {
        android.permission.PermissionManager r0;
        android.os.UserHandle r1;
        java.util.concurrent.Executor r2;
        java.util.function.Consumer r3;
        android.permission.IPermissionManager $r4;
        int $i0;
        android.os.RemoteException $r5;
        java.lang.String[] r7;
        android.permission._$$Lambda$PermissionManager$06sjxg82u271BU6DexEeXFtA39s r8;

        r0 := @this: android.permission.PermissionManager;

        r7 := @parameter0: java.lang.String[];

        r1 := @parameter1: android.os.UserHandle;

        r2 := @parameter2: java.util.concurrent.Executor;

        r3 := @parameter3: java.util.function.Consumer;

     label1:
        $r4 = r0.<android.permission.PermissionManager: android.permission.IPermissionManager mPermissionManager>;

        $i0 = virtualinvoke r1.<android.os.UserHandle: int getIdentifier()>();

        interfaceinvoke $r4.<android.permission.IPermissionManager: void revokeDefaultPermissionsFromLuiApps(java.lang.String[],int)>(r7, $i0);

        r8 = new android.permission._$$Lambda$PermissionManager$06sjxg82u271BU6DexEeXFtA39s;

        specialinvoke r8.<android.permission._$$Lambda$PermissionManager$06sjxg82u271BU6DexEeXFtA39s: void <init>(java.util.function.Consumer)>(r3);

        interfaceinvoke r2.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>(r8);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        virtualinvoke $r5.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void setRuntimePermissionsVersion(int)
    {
        android.permission.PermissionManager r0;
        int i0, $i1;
        android.content.Context $r2;
        android.content.pm.IPackageManager $r3;
        android.os.RemoteException $r4;
        java.lang.RuntimeException $r5;

        r0 := @this: android.permission.PermissionManager;

        i0 := @parameter0: int;

     label1:
        $r3 = r0.<android.permission.PermissionManager: android.content.pm.IPackageManager mPackageManager>;

        $r2 = r0.<android.permission.PermissionManager: android.content.Context mContext>;

        $i1 = virtualinvoke $r2.<android.content.Context: int getUserId()>();

        interfaceinvoke $r3.<android.content.pm.IPackageManager: void setRuntimePermissionsVersion(int,int)>(i0, $i1);

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        $r5 = virtualinvoke $r4.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r5;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void startOneTimePermissionSession(java.lang.String, long, int, int)
    {
        android.permission.PermissionManager r0;
        long l0;
        int i1, i2, $i3;
        android.content.Context $r1;
        android.permission.IPermissionManager $r2;
        android.os.RemoteException $r3;
        java.lang.String r5;

        r0 := @this: android.permission.PermissionManager;

        r5 := @parameter0: java.lang.String;

        l0 := @parameter1: long;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

     label1:
        $r2 = r0.<android.permission.PermissionManager: android.permission.IPermissionManager mPermissionManager>;

        $r1 = r0.<android.permission.PermissionManager: android.content.Context mContext>;

        $i3 = virtualinvoke $r1.<android.content.Context: int getUserId()>();

        interfaceinvoke $r2.<android.permission.IPermissionManager: void startOneTimePermissionSession(java.lang.String,int,long,int,int)>(r5, $i3, l0, i1, i2);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        virtualinvoke $r3.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void stopOneTimePermissionSession(java.lang.String)
    {
        android.permission.PermissionManager r0;
        android.content.Context $r1;
        android.permission.IPermissionManager $r2;
        int $i0;
        android.os.RemoteException $r3;
        java.lang.String r5;

        r0 := @this: android.permission.PermissionManager;

        r5 := @parameter0: java.lang.String;

     label1:
        $r2 = r0.<android.permission.PermissionManager: android.permission.IPermissionManager mPermissionManager>;

        $r1 = r0.<android.permission.PermissionManager: android.content.Context mContext>;

        $i0 = virtualinvoke $r1.<android.content.Context: int getUserId()>();

        interfaceinvoke $r2.<android.permission.IPermissionManager: void stopOneTimePermissionSession(java.lang.String,int)>(r5, $i0);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        virtualinvoke $r3.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }
}
