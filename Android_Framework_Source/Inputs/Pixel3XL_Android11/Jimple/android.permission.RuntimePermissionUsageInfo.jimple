public final class android.permission.RuntimePermissionUsageInfo extends java.lang.Object implements android.os.Parcelable
{
    public static final android.os.Parcelable$Creator CREATOR;
    private final java.lang.String mName;
    private final int mNumUsers;

    static void <clinit>()
    {
        android.permission.RuntimePermissionUsageInfo$1 $r0;

        $r0 = new android.permission.RuntimePermissionUsageInfo$1;

        specialinvoke $r0.<android.permission.RuntimePermissionUsageInfo$1: void <init>()>();

        <android.permission.RuntimePermissionUsageInfo: android.os.Parcelable$Creator CREATOR> = $r0;

        return;
    }

    private void <init>(android.os.Parcel)
    {
        android.permission.RuntimePermissionUsageInfo r0;
        android.os.Parcel r1;
        java.lang.String $r2;
        int $i0;

        r0 := @this: android.permission.RuntimePermissionUsageInfo;

        r1 := @parameter0: android.os.Parcel;

        $r2 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        $i0 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        specialinvoke r0.<android.permission.RuntimePermissionUsageInfo: void <init>(java.lang.String,int)>($r2, $i0);

        return;
    }

    void <init>(android.os.Parcel, android.permission.RuntimePermissionUsageInfo$1)
    {
        android.permission.RuntimePermissionUsageInfo r0;
        android.os.Parcel r1;
        android.permission.RuntimePermissionUsageInfo$1 r2;

        r0 := @this: android.permission.RuntimePermissionUsageInfo;

        r1 := @parameter0: android.os.Parcel;

        r2 := @parameter1: android.permission.RuntimePermissionUsageInfo$1;

        specialinvoke r0.<android.permission.RuntimePermissionUsageInfo: void <init>(android.os.Parcel)>(r1);

        return;
    }

    public void <init>(java.lang.String, int)
    {
        android.permission.RuntimePermissionUsageInfo r0;
        java.lang.String r1;
        int i0;

        r0 := @this: android.permission.RuntimePermissionUsageInfo;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        staticinvoke <com.android.internal.util.Preconditions: int checkArgumentNonnegative(int)>(i0);

        r0.<android.permission.RuntimePermissionUsageInfo: java.lang.String mName> = r1;

        r0.<android.permission.RuntimePermissionUsageInfo: int mNumUsers> = i0;

        return;
    }

    public int describeContents()
    {
        android.permission.RuntimePermissionUsageInfo r0;

        r0 := @this: android.permission.RuntimePermissionUsageInfo;

        return 0;
    }

    public int getAppAccessCount()
    {
        android.permission.RuntimePermissionUsageInfo r0;
        int $i0;

        r0 := @this: android.permission.RuntimePermissionUsageInfo;

        $i0 = r0.<android.permission.RuntimePermissionUsageInfo: int mNumUsers>;

        return $i0;
    }

    public java.lang.String getName()
    {
        android.permission.RuntimePermissionUsageInfo r0;
        java.lang.String $r1;

        r0 := @this: android.permission.RuntimePermissionUsageInfo;

        $r1 = r0.<android.permission.RuntimePermissionUsageInfo: java.lang.String mName>;

        return $r1;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.permission.RuntimePermissionUsageInfo r0;
        android.os.Parcel r1;
        int i0, $i1;
        java.lang.String $r2;

        r0 := @this: android.permission.RuntimePermissionUsageInfo;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        $r2 = r0.<android.permission.RuntimePermissionUsageInfo: java.lang.String mName>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r2);

        $i1 = r0.<android.permission.RuntimePermissionUsageInfo: int mNumUsers>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i1);

        return;
    }
}
