public abstract class android.permissionpresenterservice.RuntimePermissionPresenterService extends android.app.Service
{
    private static final java.lang.String KEY_RESULT;
    public static final java.lang.String SERVICE_INTERFACE;
    private android.os.Handler mHandler;

    public void <init>()
    {
        android.permissionpresenterservice.RuntimePermissionPresenterService r0;

        r0 := @this: android.permissionpresenterservice.RuntimePermissionPresenterService;

        specialinvoke r0.<android.app.Service: void <init>()>();

        return;
    }

    static android.os.Handler access$000(android.permissionpresenterservice.RuntimePermissionPresenterService)
    {
        android.permissionpresenterservice.RuntimePermissionPresenterService r0;
        android.os.Handler $r1;

        r0 := @parameter0: android.permissionpresenterservice.RuntimePermissionPresenterService;

        $r1 = r0.<android.permissionpresenterservice.RuntimePermissionPresenterService: android.os.Handler mHandler>;

        return $r1;
    }

    static void access$100(android.permissionpresenterservice.RuntimePermissionPresenterService, java.lang.String, android.os.RemoteCallback)
    {
        android.permissionpresenterservice.RuntimePermissionPresenterService r0;
        java.lang.String r1;
        android.os.RemoteCallback r2;

        r0 := @parameter0: android.permissionpresenterservice.RuntimePermissionPresenterService;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.os.RemoteCallback;

        specialinvoke r0.<android.permissionpresenterservice.RuntimePermissionPresenterService: void getAppPermissions(java.lang.String,android.os.RemoteCallback)>(r1, r2);

        return;
    }

    private void getAppPermissions(java.lang.String, android.os.RemoteCallback)
    {
        android.permissionpresenterservice.RuntimePermissionPresenterService r0;
        android.os.RemoteCallback r1;
        java.util.List r2;
        boolean $z0;
        android.os.Bundle $r3;
        java.lang.String r4;

        r0 := @this: android.permissionpresenterservice.RuntimePermissionPresenterService;

        r4 := @parameter0: java.lang.String;

        r1 := @parameter1: android.os.RemoteCallback;

        r2 = virtualinvoke r0.<android.permissionpresenterservice.RuntimePermissionPresenterService: java.util.List onGetAppPermissions(java.lang.String)>(r4);

        if r2 == null goto label1;

        $z0 = interfaceinvoke r2.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $r3 = new android.os.Bundle;

        specialinvoke $r3.<android.os.Bundle: void <init>()>();

        virtualinvoke $r3.<android.os.Bundle: void putParcelableList(java.lang.String,java.util.List)>("android.content.pm.permission.RuntimePermissionPresenter.key.result", r2);

        virtualinvoke r1.<android.os.RemoteCallback: void sendResult(android.os.Bundle)>($r3);

        goto label2;

     label1:
        virtualinvoke r1.<android.os.RemoteCallback: void sendResult(android.os.Bundle)>(null);

     label2:
        return;
    }

    public final void attachBaseContext(android.content.Context)
    {
        android.permissionpresenterservice.RuntimePermissionPresenterService r0;
        android.content.Context r1;
        android.os.Handler $r2;
        android.os.Looper $r3;

        r0 := @this: android.permissionpresenterservice.RuntimePermissionPresenterService;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.app.Service: void attachBaseContext(android.content.Context)>(r1);

        $r2 = new android.os.Handler;

        $r3 = virtualinvoke r1.<android.content.Context: android.os.Looper getMainLooper()>();

        specialinvoke $r2.<android.os.Handler: void <init>(android.os.Looper)>($r3);

        r0.<android.permissionpresenterservice.RuntimePermissionPresenterService: android.os.Handler mHandler> = $r2;

        return;
    }

    public final android.os.IBinder onBind(android.content.Intent)
    {
        android.permissionpresenterservice.RuntimePermissionPresenterService r0;
        android.content.Intent r1;
        android.permissionpresenterservice.RuntimePermissionPresenterService$1 $r2;

        r0 := @this: android.permissionpresenterservice.RuntimePermissionPresenterService;

        r1 := @parameter0: android.content.Intent;

        $r2 = new android.permissionpresenterservice.RuntimePermissionPresenterService$1;

        specialinvoke $r2.<android.permissionpresenterservice.RuntimePermissionPresenterService$1: void <init>(android.permissionpresenterservice.RuntimePermissionPresenterService)>(r0);

        return $r2;
    }

    public abstract java.util.List onGetAppPermissions(java.lang.String);

    public static void <clinit>()
    {
        <android.permissionpresenterservice.RuntimePermissionPresenterService: java.lang.String SERVICE_INTERFACE> = "android.permissionpresenterservice.RuntimePermissionPresenterService";

        <android.permissionpresenterservice.RuntimePermissionPresenterService: java.lang.String KEY_RESULT> = "android.content.pm.permission.RuntimePermissionPresenter.key.result";

        return;
    }
}
