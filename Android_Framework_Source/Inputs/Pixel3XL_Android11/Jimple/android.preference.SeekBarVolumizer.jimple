public class android.preference.SeekBarVolumizer extends java.lang.Object implements android.widget.SeekBar$OnSeekBarChangeListener, android.os.Handler$Callback
{
    private static final int CHECK_RINGTONE_PLAYBACK_DELAY_MS;
    private static final int MSG_GROUP_VOLUME_CHANGED;
    private static final int MSG_INIT_SAMPLE;
    private static final int MSG_SET_STREAM_VOLUME;
    private static final int MSG_START_SAMPLE;
    private static final int MSG_STOP_SAMPLE;
    private static final java.lang.String TAG;
    private boolean mAffectedByRingerMode;
    private boolean mAllowAlarms;
    private boolean mAllowMedia;
    private boolean mAllowRinger;
    private android.media.AudioAttributes mAttributes;
    private final android.media.AudioManager mAudioManager;
    private final android.preference.SeekBarVolumizer$Callback mCallback;
    private final android.content.Context mContext;
    private final android.net.Uri mDefaultUri;
    private android.os.Handler mHandler;
    private int mLastAudibleStreamVolume;
    private int mLastProgress;
    private final int mMaxStreamVolume;
    private boolean mMuted;
    private final android.app.NotificationManager mNotificationManager;
    private boolean mNotificationOrRing;
    private android.app.NotificationManager$Policy mNotificationPolicy;
    private int mOriginalStreamVolume;
    private boolean mPlaySample;
    private final android.preference.SeekBarVolumizer$Receiver mReceiver;
    private int mRingerMode;
    private android.media.Ringtone mRingtone;
    private android.widget.SeekBar mSeekBar;
    private final int mStreamType;
    private final android.preference.SeekBarVolumizer$H mUiHandler;
    private int mVolumeBeforeMute;
    private final android.media.AudioManager$VolumeGroupCallback mVolumeGroupCallback;
    private int mVolumeGroupId;
    private final android.os.Handler mVolumeHandler;
    private android.preference.SeekBarVolumizer$Observer mVolumeObserver;
    private int mZenMode;

    public void <init>(android.content.Context, int, android.net.Uri, android.preference.SeekBarVolumizer$Callback)
    {
        android.preference.SeekBarVolumizer r0;
        android.content.Context r1;
        int i0;
        android.net.Uri r2;
        android.preference.SeekBarVolumizer$Callback r3;

        r0 := @this: android.preference.SeekBarVolumizer;

        r1 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        r2 := @parameter2: android.net.Uri;

        r3 := @parameter3: android.preference.SeekBarVolumizer$Callback;

        specialinvoke r0.<android.preference.SeekBarVolumizer: void <init>(android.content.Context,int,android.net.Uri,android.preference.SeekBarVolumizer$Callback,boolean)>(r1, i0, r2, r3, 1);

        return;
    }

    public void <init>(android.content.Context, int, android.net.Uri, android.preference.SeekBarVolumizer$Callback, boolean)
    {
        android.preference.SeekBarVolumizer r0;
        android.net.Uri r1, r24;
        android.preference.SeekBarVolumizer$Callback r2, r23;
        boolean z0, $z2, $z3, $z4, $z5, $z6, z7, z8, z9, z10;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, i17, i18;
        android.preference.SeekBarVolumizer$VolumeHandler $r3;
        android.preference.SeekBarVolumizer$1 $r4;
        android.preference.SeekBarVolumizer$H $r5;
        android.preference.SeekBarVolumizer$Receiver $r6;
        java.lang.Object $r7, $r9;
        android.media.AudioManager $r8, $r12, $r14, $r15, $r16, $r17, $r19;
        android.app.NotificationManager$Policy $r10, $r11, r22;
        android.app.NotificationManager $r13, r21;
        android.media.AudioAttributes $r18;
        android.content.Context r20;

        r0 := @this: android.preference.SeekBarVolumizer;

        r20 := @parameter0: android.content.Context;

        i17 := @parameter1: int;

        r1 := @parameter2: android.net.Uri;

        r2 := @parameter3: android.preference.SeekBarVolumizer$Callback;

        z0 := @parameter4: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new android.preference.SeekBarVolumizer$VolumeHandler;

        specialinvoke $r3.<android.preference.SeekBarVolumizer$VolumeHandler: void <init>(android.preference.SeekBarVolumizer,android.preference.SeekBarVolumizer$1)>(r0, null);

        r0.<android.preference.SeekBarVolumizer: android.os.Handler mVolumeHandler> = $r3;

        $r4 = new android.preference.SeekBarVolumizer$1;

        specialinvoke $r4.<android.preference.SeekBarVolumizer$1: void <init>(android.preference.SeekBarVolumizer)>(r0);

        r0.<android.preference.SeekBarVolumizer: android.media.AudioManager$VolumeGroupCallback mVolumeGroupCallback> = $r4;

        $r5 = new android.preference.SeekBarVolumizer$H;

        specialinvoke $r5.<android.preference.SeekBarVolumizer$H: void <init>(android.preference.SeekBarVolumizer,android.preference.SeekBarVolumizer$1)>(r0, null);

        r0.<android.preference.SeekBarVolumizer: android.preference.SeekBarVolumizer$H mUiHandler> = $r5;

        $r6 = new android.preference.SeekBarVolumizer$Receiver;

        specialinvoke $r6.<android.preference.SeekBarVolumizer$Receiver: void <init>(android.preference.SeekBarVolumizer,android.preference.SeekBarVolumizer$1)>(r0, null);

        r0.<android.preference.SeekBarVolumizer: android.preference.SeekBarVolumizer$Receiver mReceiver> = $r6;

        r0.<android.preference.SeekBarVolumizer: int mLastProgress> = -1;

        r0.<android.preference.SeekBarVolumizer: int mVolumeBeforeMute> = -1;

        r0.<android.preference.SeekBarVolumizer: android.content.Context mContext> = r20;

        $r7 = virtualinvoke r20.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/media/AudioManager;");

        $r8 = (android.media.AudioManager) $r7;

        r0.<android.preference.SeekBarVolumizer: android.media.AudioManager mAudioManager> = $r8;

        $r9 = virtualinvoke r20.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/app/NotificationManager;");

        r21 = (android.app.NotificationManager) $r9;

        r0.<android.preference.SeekBarVolumizer: android.app.NotificationManager mNotificationManager> = r21;

        r22 = virtualinvoke r21.<android.app.NotificationManager: android.app.NotificationManager$Policy getConsolidatedNotificationPolicy()>();

        r0.<android.preference.SeekBarVolumizer: android.app.NotificationManager$Policy mNotificationPolicy> = r22;

        i0 = r22.<android.app.NotificationManager$Policy: int priorityCategories>;

        $i1 = i0 & 32;

        if $i1 == 0 goto label1;

        z7 = 1;

        goto label2;

     label1:
        z7 = 0;

     label2:
        r0.<android.preference.SeekBarVolumizer: boolean mAllowAlarms> = z7;

        z8 = 0;

        $r10 = r0.<android.preference.SeekBarVolumizer: android.app.NotificationManager$Policy mNotificationPolicy>;

        $i2 = $r10.<android.app.NotificationManager$Policy: int priorityCategories>;

        $i3 = $i2 & 64;

        if $i3 == 0 goto label3;

        z8 = 1;

     label3:
        r0.<android.preference.SeekBarVolumizer: boolean mAllowMedia> = z8;

        $r11 = r0.<android.preference.SeekBarVolumizer: android.app.NotificationManager$Policy mNotificationPolicy>;

        $z2 = staticinvoke <android.service.notification.ZenModeConfig: boolean areAllPriorityOnlyRingerSoundsMuted(android.app.NotificationManager$Policy)>($r11);

        $z3 = $z2 ^ 1;

        r0.<android.preference.SeekBarVolumizer: boolean mAllowRinger> = $z3;

        r0.<android.preference.SeekBarVolumizer: int mStreamType> = i17;

        $r12 = r0.<android.preference.SeekBarVolumizer: android.media.AudioManager mAudioManager>;

        $z4 = virtualinvoke $r12.<android.media.AudioManager: boolean isStreamAffectedByRingerMode(int)>(i17);

        r0.<android.preference.SeekBarVolumizer: boolean mAffectedByRingerMode> = $z4;

        $i4 = r0.<android.preference.SeekBarVolumizer: int mStreamType>;

        z9 = staticinvoke <android.preference.SeekBarVolumizer: boolean isNotificationOrRing(int)>($i4);

        r0.<android.preference.SeekBarVolumizer: boolean mNotificationOrRing> = z9;

        if z9 == 0 goto label4;

        $r19 = r0.<android.preference.SeekBarVolumizer: android.media.AudioManager mAudioManager>;

        $i16 = virtualinvoke $r19.<android.media.AudioManager: int getRingerModeInternal()>();

        r0.<android.preference.SeekBarVolumizer: int mRingerMode> = $i16;

     label4:
        $r13 = r0.<android.preference.SeekBarVolumizer: android.app.NotificationManager mNotificationManager>;

        $i5 = virtualinvoke $r13.<android.app.NotificationManager: int getZenMode()>();

        r0.<android.preference.SeekBarVolumizer: int mZenMode> = $i5;

        $z5 = specialinvoke r0.<android.preference.SeekBarVolumizer: boolean hasAudioProductStrategies()>();

        if $z5 == 0 goto label5;

        $i13 = r0.<android.preference.SeekBarVolumizer: int mStreamType>;

        $i14 = specialinvoke r0.<android.preference.SeekBarVolumizer: int getVolumeGroupIdForLegacyStreamType(int)>($i13);

        r0.<android.preference.SeekBarVolumizer: int mVolumeGroupId> = $i14;

        $i15 = r0.<android.preference.SeekBarVolumizer: int mStreamType>;

        $r18 = specialinvoke r0.<android.preference.SeekBarVolumizer: android.media.AudioAttributes getAudioAttributesForLegacyStreamType(int)>($i15);

        r0.<android.preference.SeekBarVolumizer: android.media.AudioAttributes mAttributes> = $r18;

     label5:
        $r14 = r0.<android.preference.SeekBarVolumizer: android.media.AudioManager mAudioManager>;

        $i6 = r0.<android.preference.SeekBarVolumizer: int mStreamType>;

        $i7 = virtualinvoke $r14.<android.media.AudioManager: int getStreamMaxVolume(int)>($i6);

        r0.<android.preference.SeekBarVolumizer: int mMaxStreamVolume> = $i7;

        r0.<android.preference.SeekBarVolumizer: android.preference.SeekBarVolumizer$Callback mCallback> = r2;

        $r15 = r0.<android.preference.SeekBarVolumizer: android.media.AudioManager mAudioManager>;

        $i8 = r0.<android.preference.SeekBarVolumizer: int mStreamType>;

        $i9 = virtualinvoke $r15.<android.media.AudioManager: int getStreamVolume(int)>($i8);

        r0.<android.preference.SeekBarVolumizer: int mOriginalStreamVolume> = $i9;

        $r16 = r0.<android.preference.SeekBarVolumizer: android.media.AudioManager mAudioManager>;

        $i10 = r0.<android.preference.SeekBarVolumizer: int mStreamType>;

        $i11 = virtualinvoke $r16.<android.media.AudioManager: int getLastAudibleStreamVolume(int)>($i10);

        r0.<android.preference.SeekBarVolumizer: int mLastAudibleStreamVolume> = $i11;

        $r17 = r0.<android.preference.SeekBarVolumizer: android.media.AudioManager mAudioManager>;

        $i12 = r0.<android.preference.SeekBarVolumizer: int mStreamType>;

        z10 = virtualinvoke $r17.<android.media.AudioManager: boolean isStreamMute(int)>($i12);

        r0.<android.preference.SeekBarVolumizer: boolean mMuted> = z10;

        r0.<android.preference.SeekBarVolumizer: boolean mPlaySample> = z0;

        r23 = r0.<android.preference.SeekBarVolumizer: android.preference.SeekBarVolumizer$Callback mCallback>;

        if r23 == null goto label6;

        $z6 = specialinvoke r0.<android.preference.SeekBarVolumizer: boolean isZenMuted()>();

        interfaceinvoke r23.<android.preference.SeekBarVolumizer$Callback: void onMuted(boolean,boolean)>(z10, $z6);

     label6:
        r24 = r1;

        if r1 != null goto label9;

        i18 = r0.<android.preference.SeekBarVolumizer: int mStreamType>;

        if i18 != 2 goto label7;

        r24 = <android.provider.Settings$System: android.net.Uri DEFAULT_RINGTONE_URI>;

        goto label9;

     label7:
        if i18 != 5 goto label8;

        r24 = <android.provider.Settings$System: android.net.Uri DEFAULT_NOTIFICATION_URI>;

        goto label9;

     label8:
        r24 = <android.provider.Settings$System: android.net.Uri DEFAULT_ALARM_ALERT_URI>;

     label9:
        r0.<android.preference.SeekBarVolumizer: android.net.Uri mDefaultUri> = r24;

        return;
    }

    static android.os.Handler access$100(android.preference.SeekBarVolumizer)
    {
        android.preference.SeekBarVolumizer r0;
        android.os.Handler $r1;

        r0 := @parameter0: android.preference.SeekBarVolumizer;

        $r1 = r0.<android.preference.SeekBarVolumizer: android.os.Handler mHandler>;

        return $r1;
    }

    static boolean access$1000(android.preference.SeekBarVolumizer)
    {
        android.preference.SeekBarVolumizer r0;
        boolean $z0;

        r0 := @parameter0: android.preference.SeekBarVolumizer;

        $z0 = specialinvoke r0.<android.preference.SeekBarVolumizer: boolean isZenMuted()>();

        return $z0;
    }

    static void access$1100(android.preference.SeekBarVolumizer)
    {
        android.preference.SeekBarVolumizer r0;

        r0 := @parameter0: android.preference.SeekBarVolumizer;

        specialinvoke r0.<android.preference.SeekBarVolumizer: void updateSlider()>();

        return;
    }

    static android.content.Context access$1200(android.preference.SeekBarVolumizer)
    {
        android.preference.SeekBarVolumizer r0;
        android.content.Context $r1;

        r0 := @parameter0: android.preference.SeekBarVolumizer;

        $r1 = r0.<android.preference.SeekBarVolumizer: android.content.Context mContext>;

        return $r1;
    }

    static boolean access$1300(android.preference.SeekBarVolumizer)
    {
        android.preference.SeekBarVolumizer r0;
        boolean $z0;

        r0 := @parameter0: android.preference.SeekBarVolumizer;

        $z0 = specialinvoke r0.<android.preference.SeekBarVolumizer: boolean hasAudioProductStrategies()>();

        return $z0;
    }

    static boolean access$1400(android.preference.SeekBarVolumizer)
    {
        android.preference.SeekBarVolumizer r0;
        boolean $z0;

        r0 := @parameter0: android.preference.SeekBarVolumizer;

        $z0 = r0.<android.preference.SeekBarVolumizer: boolean mNotificationOrRing>;

        return $z0;
    }

    static int access$1502(android.preference.SeekBarVolumizer, int)
    {
        android.preference.SeekBarVolumizer r0;
        int i0;

        r0 := @parameter0: android.preference.SeekBarVolumizer;

        i0 := @parameter1: int;

        r0.<android.preference.SeekBarVolumizer: int mRingerMode> = i0;

        return i0;
    }

    static android.media.AudioManager access$1600(android.preference.SeekBarVolumizer)
    {
        android.preference.SeekBarVolumizer r0;
        android.media.AudioManager $r1;

        r0 := @parameter0: android.preference.SeekBarVolumizer;

        $r1 = r0.<android.preference.SeekBarVolumizer: android.media.AudioManager mAudioManager>;

        return $r1;
    }

    static boolean access$1700(android.preference.SeekBarVolumizer)
    {
        android.preference.SeekBarVolumizer r0;
        boolean $z0;

        r0 := @parameter0: android.preference.SeekBarVolumizer;

        $z0 = r0.<android.preference.SeekBarVolumizer: boolean mAffectedByRingerMode>;

        return $z0;
    }

    static int access$1800(android.preference.SeekBarVolumizer, int)
    {
        android.preference.SeekBarVolumizer r0;
        int i0, $i1;

        r0 := @parameter0: android.preference.SeekBarVolumizer;

        i0 := @parameter1: int;

        $i1 = specialinvoke r0.<android.preference.SeekBarVolumizer: int getVolumeGroupIdForLegacyStreamType(int)>(i0);

        return $i1;
    }

    static int access$1900(android.preference.SeekBarVolumizer)
    {
        android.preference.SeekBarVolumizer r0;
        int $i0;

        r0 := @parameter0: android.preference.SeekBarVolumizer;

        $i0 = r0.<android.preference.SeekBarVolumizer: int mVolumeGroupId>;

        return $i0;
    }

    static android.os.Handler access$200(android.preference.SeekBarVolumizer)
    {
        android.preference.SeekBarVolumizer r0;
        android.os.Handler $r1;

        r0 := @parameter0: android.preference.SeekBarVolumizer;

        $r1 = r0.<android.preference.SeekBarVolumizer: android.os.Handler mVolumeHandler>;

        return $r1;
    }

    static int access$2002(android.preference.SeekBarVolumizer, int)
    {
        android.preference.SeekBarVolumizer r0;
        int i0;

        r0 := @parameter0: android.preference.SeekBarVolumizer;

        i0 := @parameter1: int;

        r0.<android.preference.SeekBarVolumizer: int mZenMode> = i0;

        return i0;
    }

    static android.app.NotificationManager access$2100(android.preference.SeekBarVolumizer)
    {
        android.preference.SeekBarVolumizer r0;
        android.app.NotificationManager $r1;

        r0 := @parameter0: android.preference.SeekBarVolumizer;

        $r1 = r0.<android.preference.SeekBarVolumizer: android.app.NotificationManager mNotificationManager>;

        return $r1;
    }

    static android.app.NotificationManager$Policy access$2200(android.preference.SeekBarVolumizer)
    {
        android.preference.SeekBarVolumizer r0;
        android.app.NotificationManager$Policy $r1;

        r0 := @parameter0: android.preference.SeekBarVolumizer;

        $r1 = r0.<android.preference.SeekBarVolumizer: android.app.NotificationManager$Policy mNotificationPolicy>;

        return $r1;
    }

    static android.app.NotificationManager$Policy access$2202(android.preference.SeekBarVolumizer, android.app.NotificationManager$Policy)
    {
        android.preference.SeekBarVolumizer r0;
        android.app.NotificationManager$Policy r1;

        r0 := @parameter0: android.preference.SeekBarVolumizer;

        r1 := @parameter1: android.app.NotificationManager$Policy;

        r0.<android.preference.SeekBarVolumizer: android.app.NotificationManager$Policy mNotificationPolicy> = r1;

        return r1;
    }

    static boolean access$2302(android.preference.SeekBarVolumizer, boolean)
    {
        android.preference.SeekBarVolumizer r0;
        boolean z0;

        r0 := @parameter0: android.preference.SeekBarVolumizer;

        z0 := @parameter1: boolean;

        r0.<android.preference.SeekBarVolumizer: boolean mAllowAlarms> = z0;

        return z0;
    }

    static boolean access$2402(android.preference.SeekBarVolumizer, boolean)
    {
        android.preference.SeekBarVolumizer r0;
        boolean z0;

        r0 := @parameter0: android.preference.SeekBarVolumizer;

        z0 := @parameter1: boolean;

        r0.<android.preference.SeekBarVolumizer: boolean mAllowMedia> = z0;

        return z0;
    }

    static boolean access$2502(android.preference.SeekBarVolumizer, boolean)
    {
        android.preference.SeekBarVolumizer r0;
        boolean z0;

        r0 := @parameter0: android.preference.SeekBarVolumizer;

        z0 := @parameter1: boolean;

        r0.<android.preference.SeekBarVolumizer: boolean mAllowRinger> = z0;

        return z0;
    }

    static boolean access$2600(int)
    {
        int i0;
        boolean $z0;

        i0 := @parameter0: int;

        $z0 = staticinvoke <android.preference.SeekBarVolumizer: boolean isNotificationOrRing(int)>(i0);

        return $z0;
    }

    static int access$2700(android.preference.SeekBarVolumizer)
    {
        android.preference.SeekBarVolumizer r0;
        int $i0;

        r0 := @parameter0: android.preference.SeekBarVolumizer;

        $i0 = r0.<android.preference.SeekBarVolumizer: int mStreamType>;

        return $i0;
    }

    static android.preference.SeekBarVolumizer$H access$2800(android.preference.SeekBarVolumizer)
    {
        android.preference.SeekBarVolumizer r0;
        android.preference.SeekBarVolumizer$H $r1;

        r0 := @parameter0: android.preference.SeekBarVolumizer;

        $r1 = r0.<android.preference.SeekBarVolumizer: android.preference.SeekBarVolumizer$H mUiHandler>;

        return $r1;
    }

    static android.widget.SeekBar access$500(android.preference.SeekBarVolumizer)
    {
        android.preference.SeekBarVolumizer r0;
        android.widget.SeekBar $r1;

        r0 := @parameter0: android.preference.SeekBarVolumizer;

        $r1 = r0.<android.preference.SeekBarVolumizer: android.widget.SeekBar mSeekBar>;

        return $r1;
    }

    static int access$602(android.preference.SeekBarVolumizer, int)
    {
        android.preference.SeekBarVolumizer r0;
        int i0;

        r0 := @parameter0: android.preference.SeekBarVolumizer;

        i0 := @parameter1: int;

        r0.<android.preference.SeekBarVolumizer: int mLastProgress> = i0;

        return i0;
    }

    static int access$700(android.preference.SeekBarVolumizer)
    {
        android.preference.SeekBarVolumizer r0;
        int $i0;

        r0 := @parameter0: android.preference.SeekBarVolumizer;

        $i0 = r0.<android.preference.SeekBarVolumizer: int mLastAudibleStreamVolume>;

        return $i0;
    }

    static int access$702(android.preference.SeekBarVolumizer, int)
    {
        android.preference.SeekBarVolumizer r0;
        int i0;

        r0 := @parameter0: android.preference.SeekBarVolumizer;

        i0 := @parameter1: int;

        r0.<android.preference.SeekBarVolumizer: int mLastAudibleStreamVolume> = i0;

        return i0;
    }

    static boolean access$800(android.preference.SeekBarVolumizer)
    {
        android.preference.SeekBarVolumizer r0;
        boolean $z0;

        r0 := @parameter0: android.preference.SeekBarVolumizer;

        $z0 = r0.<android.preference.SeekBarVolumizer: boolean mMuted>;

        return $z0;
    }

    static boolean access$802(android.preference.SeekBarVolumizer, boolean)
    {
        android.preference.SeekBarVolumizer r0;
        boolean z0;

        r0 := @parameter0: android.preference.SeekBarVolumizer;

        z0 := @parameter1: boolean;

        r0.<android.preference.SeekBarVolumizer: boolean mMuted> = z0;

        return z0;
    }

    static android.preference.SeekBarVolumizer$Callback access$900(android.preference.SeekBarVolumizer)
    {
        android.preference.SeekBarVolumizer r0;
        android.preference.SeekBarVolumizer$Callback $r1;

        r0 := @parameter0: android.preference.SeekBarVolumizer;

        $r1 = r0.<android.preference.SeekBarVolumizer: android.preference.SeekBarVolumizer$Callback mCallback>;

        return $r1;
    }

    private android.media.AudioAttributes getAudioAttributesForLegacyStreamType(int)
    {
        android.preference.SeekBarVolumizer r0;
        int i0;
        java.util.Iterator r1;
        android.media.AudioAttributes r2, $r7;
        java.util.List $r3;
        boolean $z0;
        android.media.AudioAttributes$Builder $r4, $r5, $r6;
        java.lang.Object $r8;
        android.media.audiopolicy.AudioProductStrategy $r9;

        r0 := @this: android.preference.SeekBarVolumizer;

        i0 := @parameter0: int;

        $r3 = staticinvoke <android.media.AudioManager: java.util.List getAudioProductStrategies()>();

        r1 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r8 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        $r9 = (android.media.audiopolicy.AudioProductStrategy) $r8;

        r2 = virtualinvoke $r9.<android.media.audiopolicy.AudioProductStrategy: android.media.AudioAttributes getAudioAttributesForLegacyStreamType(int)>(i0);

        if r2 == null goto label2;

        return r2;

     label2:
        goto label1;

     label3:
        $r4 = new android.media.AudioAttributes$Builder;

        specialinvoke $r4.<android.media.AudioAttributes$Builder: void <init>()>();

        $r5 = virtualinvoke $r4.<android.media.AudioAttributes$Builder: android.media.AudioAttributes$Builder setContentType(int)>(0);

        $r6 = virtualinvoke $r5.<android.media.AudioAttributes$Builder: android.media.AudioAttributes$Builder setUsage(int)>(0);

        $r7 = virtualinvoke $r6.<android.media.AudioAttributes$Builder: android.media.AudioAttributes build()>();

        return $r7;
    }

    private int getVolumeGroupIdForLegacyStreamType(int)
    {
        android.preference.SeekBarVolumizer r0;
        int i0, i1, $i2;
        java.util.Iterator r1;
        java.util.List $r2, $r3;
        boolean $z0;
        java.util.stream.Stream $r4, $r6, $r8;
        android.preference.'-$$Lambda$SeekBarVolumizer$ezNr2aLs33rVlzIsAVW8OXqqpIs' $r5;
        android.preference.'-$$Lambda$SeekBarVolumizer$pv2-5S-FjgAtIix6Vp68yZJoqvQ' $r7;
        java.util.Optional $r9;
        java.lang.Integer $r10, $r12;
        java.lang.Object $r11, $r13;
        android.media.audiopolicy.AudioProductStrategy $r14;
        java.util.function.Function r15;
        java.util.function.Predicate r16;

        r0 := @this: android.preference.SeekBarVolumizer;

        i0 := @parameter0: int;

        $r2 = staticinvoke <android.media.AudioManager: java.util.List getAudioProductStrategies()>();

        r1 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r13 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        $r14 = (android.media.audiopolicy.AudioProductStrategy) $r13;

        i1 = virtualinvoke $r14.<android.media.audiopolicy.AudioProductStrategy: int getVolumeGroupIdForLegacyStreamType(int)>(i0);

        if i1 == -1 goto label2;

        return i1;

     label2:
        goto label1;

     label3:
        $r3 = staticinvoke <android.media.AudioManager: java.util.List getAudioProductStrategies()>();

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.stream.Stream stream()>();

        $r5 = <android.preference._$$Lambda$SeekBarVolumizer$ezNr2aLs33rVlzIsAVW8OXqqpIs: android.preference.'-$$Lambda$SeekBarVolumizer$ezNr2aLs33rVlzIsAVW8OXqqpIs' INSTANCE>;

        r15 = (java.util.function.Function) $r5;

        $r6 = interfaceinvoke $r4.<java.util.stream.Stream: java.util.stream.Stream map(java.util.function.Function)>(r15);

        $r7 = <android.preference._$$Lambda$SeekBarVolumizer$pv2_5S_FjgAtIix6Vp68yZJoqvQ: android.preference.'-$$Lambda$SeekBarVolumizer$pv2-5S-FjgAtIix6Vp68yZJoqvQ' INSTANCE>;

        r16 = (java.util.function.Predicate) $r7;

        $r8 = interfaceinvoke $r6.<java.util.stream.Stream: java.util.stream.Stream filter(java.util.function.Predicate)>(r16);

        $r9 = interfaceinvoke $r8.<java.util.stream.Stream: java.util.Optional findFirst()>();

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-1);

        $r11 = virtualinvoke $r9.<java.util.Optional: java.lang.Object orElse(java.lang.Object)>($r10);

        $r12 = (java.lang.Integer) $r11;

        $i2 = virtualinvoke $r12.<java.lang.Integer: int intValue()>();

        return $i2;
    }

    private boolean hasAudioProductStrategies()
    {
        android.preference.SeekBarVolumizer r0;
        java.util.List $r1;
        int $i0;
        boolean z0;

        r0 := @this: android.preference.SeekBarVolumizer;

        $r1 = staticinvoke <android.media.AudioManager: java.util.List getAudioProductStrategies()>();

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i0 <= 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    private static boolean isAlarmsStream(int)
    {
        int i0;
        boolean z0;

        i0 := @parameter0: int;

        if i0 != 4 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    private static boolean isMediaStream(int)
    {
        int i0;
        boolean z0;

        i0 := @parameter0: int;

        if i0 != 3 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    private static boolean isNotificationOrRing(int)
    {
        int i0;
        boolean z0;

        i0 := @parameter0: int;

        if i0 == 2 goto label2;

        if i0 != 5 goto label1;

        goto label2;

     label1:
        z0 = 0;

        goto label3;

     label2:
        z0 = 1;

     label3:
        return z0;
    }

    private boolean isZenMuted()
    {
        android.preference.SeekBarVolumizer r0;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, z7;
        int i0, $i1, $i2, $i3, $i4;

        r0 := @this: android.preference.SeekBarVolumizer;

        z0 = r0.<android.preference.SeekBarVolumizer: boolean mNotificationOrRing>;

        z7 = 1;

        if z0 == 0 goto label1;

        $i4 = r0.<android.preference.SeekBarVolumizer: int mZenMode>;

        if $i4 == 3 goto label5;

     label1:
        i0 = r0.<android.preference.SeekBarVolumizer: int mZenMode>;

        if i0 == 2 goto label5;

        if i0 != 1 goto label4;

        $z1 = r0.<android.preference.SeekBarVolumizer: boolean mAllowAlarms>;

        if $z1 != 0 goto label2;

        $i3 = r0.<android.preference.SeekBarVolumizer: int mStreamType>;

        $z6 = staticinvoke <android.preference.SeekBarVolumizer: boolean isAlarmsStream(int)>($i3);

        if $z6 != 0 goto label5;

     label2:
        $z2 = r0.<android.preference.SeekBarVolumizer: boolean mAllowMedia>;

        if $z2 != 0 goto label3;

        $i2 = r0.<android.preference.SeekBarVolumizer: int mStreamType>;

        $z5 = staticinvoke <android.preference.SeekBarVolumizer: boolean isMediaStream(int)>($i2);

        if $z5 != 0 goto label5;

     label3:
        $z3 = r0.<android.preference.SeekBarVolumizer: boolean mAllowRinger>;

        if $z3 != 0 goto label4;

        $i1 = r0.<android.preference.SeekBarVolumizer: int mStreamType>;

        $z4 = staticinvoke <android.preference.SeekBarVolumizer: boolean isNotificationOrRing(int)>($i1);

        if $z4 == 0 goto label4;

        goto label5;

     label4:
        z7 = 0;

        goto label5;

     label5:
        return z7;
    }

    static java.lang.Integer lambda$getVolumeGroupIdForLegacyStreamType$0(android.media.audiopolicy.AudioProductStrategy)
    {
        android.media.audiopolicy.AudioProductStrategy r0;
        android.media.AudioAttributes $r1;
        int $i0;
        java.lang.Integer $r2;

        r0 := @parameter0: android.media.audiopolicy.AudioProductStrategy;

        $r1 = <android.media.audiopolicy.AudioProductStrategy: android.media.AudioAttributes sDefaultAttributes>;

        $i0 = virtualinvoke r0.<android.media.audiopolicy.AudioProductStrategy: int getVolumeGroupIdForAudioAttributes(android.media.AudioAttributes)>($r1);

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        return $r2;
    }

    static boolean lambda$getVolumeGroupIdForLegacyStreamType$1(java.lang.Integer)
    {
        java.lang.Integer r0;
        int $i0;
        boolean z0;

        r0 := @parameter0: java.lang.Integer;

        $i0 = virtualinvoke r0.<java.lang.Integer: int intValue()>();

        if $i0 == -1 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    private void onInitSample()
    {
        android.preference.SeekBarVolumizer r0;
        android.net.Uri $r1;
        android.content.Context $r2;
        int $i0;
        java.lang.Throwable $r3;
        android.media.Ringtone r4;

        r0 := @this: android.preference.SeekBarVolumizer;

        entermonitor r0;

     label1:
        $r2 = r0.<android.preference.SeekBarVolumizer: android.content.Context mContext>;

        $r1 = r0.<android.preference.SeekBarVolumizer: android.net.Uri mDefaultUri>;

        r4 = staticinvoke <android.media.RingtoneManager: android.media.Ringtone getRingtone(android.content.Context,android.net.Uri)>($r2, $r1);

        r0.<android.preference.SeekBarVolumizer: android.media.Ringtone mRingtone> = r4;

     label2:
        if r4 == null goto label4;

     label3:
        $i0 = r0.<android.preference.SeekBarVolumizer: int mStreamType>;

        virtualinvoke r4.<android.media.Ringtone: void setStreamType(int)>($i0);

     label4:
        exitmonitor r0;

     label5:
        return;

     label6:
        $r3 := @caughtexception;

     label7:
        exitmonitor r0;

     label8:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    private void onStartSample()
    {
        android.preference.SeekBarVolumizer r0;
        boolean $z0;
        android.media.Ringtone $r1, $r5, r12, r13;
        android.media.AudioAttributes $r2, $r4;
        android.media.AudioAttributes$Builder $r3, r14;
        java.lang.Throwable $r6, $r7;
        int $i0;
        java.lang.String $r10;
        android.preference.SeekBarVolumizer$Callback r11;
        java.lang.StringBuilder r16;

        r0 := @this: android.preference.SeekBarVolumizer;

        $z0 = virtualinvoke r0.<android.preference.SeekBarVolumizer: boolean isSamplePlaying()>();

        if $z0 != 0 goto label13;

        r11 = r0.<android.preference.SeekBarVolumizer: android.preference.SeekBarVolumizer$Callback mCallback>;

        if r11 == null goto label01;

        interfaceinvoke r11.<android.preference.SeekBarVolumizer$Callback: void onSampleStarting(android.preference.SeekBarVolumizer)>(r0);

     label01:
        entermonitor r0;

     label02:
        r12 = r0.<android.preference.SeekBarVolumizer: android.media.Ringtone mRingtone>;

     label03:
        if r12 == null goto label08;

     label04:
        r13 = r0.<android.preference.SeekBarVolumizer: android.media.Ringtone mRingtone>;

        r14 = new android.media.AudioAttributes$Builder;

        $r1 = r0.<android.preference.SeekBarVolumizer: android.media.Ringtone mRingtone>;

        $r2 = virtualinvoke $r1.<android.media.Ringtone: android.media.AudioAttributes getAudioAttributes()>();

        specialinvoke r14.<android.media.AudioAttributes$Builder: void <init>(android.media.AudioAttributes)>($r2);

        $r3 = virtualinvoke r14.<android.media.AudioAttributes$Builder: android.media.AudioAttributes$Builder setFlags(int)>(128);

        $r4 = virtualinvoke $r3.<android.media.AudioAttributes$Builder: android.media.AudioAttributes build()>();

        virtualinvoke r13.<android.media.Ringtone: void setAudioAttributes(android.media.AudioAttributes)>($r4);

        $r5 = r0.<android.preference.SeekBarVolumizer: android.media.Ringtone mRingtone>;

        virtualinvoke $r5.<android.media.Ringtone: void play()>();

     label05:
        goto label08;

     label06:
        $r7 := @caughtexception;

     label07:
        r16 = new java.lang.StringBuilder;

        specialinvoke r16.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error playing ringtone, stream ");

        $i0 = r0.<android.preference.SeekBarVolumizer: int mStreamType>;

        virtualinvoke r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r10 = virtualinvoke r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("SeekBarVolumizer", $r10, $r7);

     label08:
        exitmonitor r0;

     label09:
        goto label13;

     label10:
        $r6 := @caughtexception;

     label11:
        exitmonitor r0;

     label12:
        throw $r6;

     label13:
        return;

        catch java.lang.Throwable from label02 to label03 with label10;
        catch java.lang.Throwable from label04 to label05 with label06;
        catch java.lang.Throwable from label07 to label08 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
    }

    private void onStopSample()
    {
        android.preference.SeekBarVolumizer r0;
        android.media.Ringtone $r2, $r3;
        java.lang.Throwable $r4;

        r0 := @this: android.preference.SeekBarVolumizer;

        entermonitor r0;

     label1:
        $r2 = r0.<android.preference.SeekBarVolumizer: android.media.Ringtone mRingtone>;

        if $r2 == null goto label2;

        $r3 = r0.<android.preference.SeekBarVolumizer: android.media.Ringtone mRingtone>;

        virtualinvoke $r3.<android.media.Ringtone: void stop()>();

     label2:
        exitmonitor r0;

     label3:
        return;

     label4:
        $r4 := @caughtexception;

     label5:
        exitmonitor r0;

     label6:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    private void postSetVolume(int)
    {
        android.preference.SeekBarVolumizer r0;
        int i0;
        android.os.Message $r1;
        android.os.Handler r2, r3;

        r0 := @this: android.preference.SeekBarVolumizer;

        i0 := @parameter0: int;

        r2 = r0.<android.preference.SeekBarVolumizer: android.os.Handler mHandler>;

        if r2 != null goto label1;

        return;

     label1:
        r0.<android.preference.SeekBarVolumizer: int mLastProgress> = i0;

        virtualinvoke r2.<android.os.Handler: void removeMessages(int)>(0);

        r3 = r0.<android.preference.SeekBarVolumizer: android.os.Handler mHandler>;

        $r1 = virtualinvoke r3.<android.os.Handler: android.os.Message obtainMessage(int)>(0);

        virtualinvoke r3.<android.os.Handler: boolean sendMessage(android.os.Message)>($r1);

        return;
    }

    private void postStartSample()
    {
        android.preference.SeekBarVolumizer r0;
        android.os.Handler r1, r2;
        boolean $z0;
        android.os.Message r3;
        long l0;

        r0 := @this: android.preference.SeekBarVolumizer;

        r2 = r0.<android.preference.SeekBarVolumizer: android.os.Handler mHandler>;

        if r2 != null goto label1;

        return;

     label1:
        virtualinvoke r2.<android.os.Handler: void removeMessages(int)>(1);

        r1 = r0.<android.preference.SeekBarVolumizer: android.os.Handler mHandler>;

        r3 = virtualinvoke r1.<android.os.Handler: android.os.Message obtainMessage(int)>(1);

        $z0 = virtualinvoke r0.<android.preference.SeekBarVolumizer: boolean isSamplePlaying()>();

        if $z0 == 0 goto label2;

        l0 = 1000L;

        goto label3;

     label2:
        l0 = 0L;

     label3:
        virtualinvoke r1.<android.os.Handler: boolean sendMessageDelayed(android.os.Message,long)>(r3, l0);

        return;
    }

    private void postStopSample()
    {
        android.preference.SeekBarVolumizer r0;
        android.os.Handler $r1, r3, r4;
        android.os.Message $r2;

        r0 := @this: android.preference.SeekBarVolumizer;

        r3 = r0.<android.preference.SeekBarVolumizer: android.os.Handler mHandler>;

        if r3 != null goto label1;

        return;

     label1:
        virtualinvoke r3.<android.os.Handler: void removeMessages(int)>(1);

        $r1 = r0.<android.preference.SeekBarVolumizer: android.os.Handler mHandler>;

        virtualinvoke $r1.<android.os.Handler: void removeMessages(int)>(2);

        r4 = r0.<android.preference.SeekBarVolumizer: android.os.Handler mHandler>;

        $r2 = virtualinvoke r4.<android.os.Handler: android.os.Message obtainMessage(int)>(2);

        virtualinvoke r4.<android.os.Handler: boolean sendMessage(android.os.Message)>($r2);

        return;
    }

    private void registerVolumeGroupCb()
    {
        android.preference.SeekBarVolumizer r0;
        int $i0;
        android.media.AudioManager$VolumeGroupCallback $r1;
        android.preference.'-$$Lambda$_14QHG018Z6p13d3hzJuGTWnNeo' $r2;
        android.media.AudioManager $r3;
        java.util.concurrent.Executor r4;

        r0 := @this: android.preference.SeekBarVolumizer;

        $i0 = r0.<android.preference.SeekBarVolumizer: int mVolumeGroupId>;

        if $i0 == -1 goto label1;

        $r3 = r0.<android.preference.SeekBarVolumizer: android.media.AudioManager mAudioManager>;

        $r2 = <android.preference._$$Lambda$_14QHG018Z6p13d3hzJuGTWnNeo: android.preference.'-$$Lambda$_14QHG018Z6p13d3hzJuGTWnNeo' INSTANCE>;

        $r1 = r0.<android.preference.SeekBarVolumizer: android.media.AudioManager$VolumeGroupCallback mVolumeGroupCallback>;

        r4 = (java.util.concurrent.Executor) $r2;

        virtualinvoke $r3.<android.media.AudioManager: void registerVolumeGroupCallback(java.util.concurrent.Executor,android.media.AudioManager$VolumeGroupCallback)>(r4, $r1);

        specialinvoke r0.<android.preference.SeekBarVolumizer: void updateSlider()>();

     label1:
        return;
    }

    private void unregisterVolumeGroupCb()
    {
        android.preference.SeekBarVolumizer r0;
        int $i0;
        android.media.AudioManager$VolumeGroupCallback $r1;
        android.media.AudioManager $r2;

        r0 := @this: android.preference.SeekBarVolumizer;

        $i0 = r0.<android.preference.SeekBarVolumizer: int mVolumeGroupId>;

        if $i0 == -1 goto label1;

        $r2 = r0.<android.preference.SeekBarVolumizer: android.media.AudioManager mAudioManager>;

        $r1 = r0.<android.preference.SeekBarVolumizer: android.media.AudioManager$VolumeGroupCallback mVolumeGroupCallback>;

        virtualinvoke $r2.<android.media.AudioManager: void unregisterVolumeGroupCallback(android.media.AudioManager$VolumeGroupCallback)>($r1);

     label1:
        return;
    }

    private void updateSlider()
    {
        android.preference.SeekBarVolumizer r0;
        android.media.AudioManager r1, $r3, $r4;
        int i0, i1, $i2, $i3, $i4;
        boolean z0;
        android.widget.SeekBar $r2;
        android.preference.SeekBarVolumizer$H $r5;

        r0 := @this: android.preference.SeekBarVolumizer;

        $r2 = r0.<android.preference.SeekBarVolumizer: android.widget.SeekBar mSeekBar>;

        if $r2 == null goto label1;

        r1 = r0.<android.preference.SeekBarVolumizer: android.media.AudioManager mAudioManager>;

        if r1 == null goto label1;

        $i2 = r0.<android.preference.SeekBarVolumizer: int mStreamType>;

        i0 = virtualinvoke r1.<android.media.AudioManager: int getStreamVolume(int)>($i2);

        $r3 = r0.<android.preference.SeekBarVolumizer: android.media.AudioManager mAudioManager>;

        $i3 = r0.<android.preference.SeekBarVolumizer: int mStreamType>;

        i1 = virtualinvoke $r3.<android.media.AudioManager: int getLastAudibleStreamVolume(int)>($i3);

        $r4 = r0.<android.preference.SeekBarVolumizer: android.media.AudioManager mAudioManager>;

        $i4 = r0.<android.preference.SeekBarVolumizer: int mStreamType>;

        z0 = virtualinvoke $r4.<android.media.AudioManager: boolean isStreamMute(int)>($i4);

        $r5 = r0.<android.preference.SeekBarVolumizer: android.preference.SeekBarVolumizer$H mUiHandler>;

        virtualinvoke $r5.<android.preference.SeekBarVolumizer$H: void postUpdateSlider(int,int,boolean)>(i0, i1, z0);

     label1:
        return;
    }

    public void changeVolumeBy(int)
    {
        android.preference.SeekBarVolumizer r0;
        int i0, $i1;
        android.widget.SeekBar $r1, $r2;

        r0 := @this: android.preference.SeekBarVolumizer;

        i0 := @parameter0: int;

        $r1 = r0.<android.preference.SeekBarVolumizer: android.widget.SeekBar mSeekBar>;

        virtualinvoke $r1.<android.widget.SeekBar: void incrementProgressBy(int)>(i0);

        $r2 = r0.<android.preference.SeekBarVolumizer: android.widget.SeekBar mSeekBar>;

        $i1 = virtualinvoke $r2.<android.widget.SeekBar: int getProgress()>();

        specialinvoke r0.<android.preference.SeekBarVolumizer: void postSetVolume(int)>($i1);

        specialinvoke r0.<android.preference.SeekBarVolumizer: void postStartSample()>();

        r0.<android.preference.SeekBarVolumizer: int mVolumeBeforeMute> = -1;

        return;
    }

    public android.widget.SeekBar getSeekBar()
    {
        android.preference.SeekBarVolumizer r0;
        android.widget.SeekBar $r1;

        r0 := @this: android.preference.SeekBarVolumizer;

        $r1 = r0.<android.preference.SeekBarVolumizer: android.widget.SeekBar mSeekBar>;

        return $r1;
    }

    public boolean handleMessage(android.os.Message)
    {
        android.preference.SeekBarVolumizer r0;
        android.os.Message r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i7, $i8;
        boolean $z0, $z1, $z2, $z3, $z4;
        android.media.AudioManager $r3, $r4, $r9;
        java.lang.StringBuilder $r5;
        java.lang.String $r8;

        r0 := @this: android.preference.SeekBarVolumizer;

        r1 := @parameter0: android.os.Message;

        i0 = r1.<android.os.Message: int what>;

        if i0 == 0 goto label4;

        if i0 == 1 goto label3;

        if i0 == 2 goto label2;

        if i0 == 3 goto label1;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("invalid SeekBarVolumizer message: ");

        $i5 = r1.<android.os.Message: int what>;

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("SeekBarVolumizer", $r8);

        goto label7;

     label1:
        $z4 = r0.<android.preference.SeekBarVolumizer: boolean mPlaySample>;

        if $z4 == 0 goto label7;

        specialinvoke r0.<android.preference.SeekBarVolumizer: void onInitSample()>();

        goto label7;

     label2:
        $z3 = r0.<android.preference.SeekBarVolumizer: boolean mPlaySample>;

        if $z3 == 0 goto label7;

        specialinvoke r0.<android.preference.SeekBarVolumizer: void onStopSample()>();

        goto label7;

     label3:
        $z2 = r0.<android.preference.SeekBarVolumizer: boolean mPlaySample>;

        if $z2 == 0 goto label7;

        specialinvoke r0.<android.preference.SeekBarVolumizer: void onStartSample()>();

        goto label7;

     label4:
        $z0 = r0.<android.preference.SeekBarVolumizer: boolean mMuted>;

        if $z0 == 0 goto label5;

        $i3 = r0.<android.preference.SeekBarVolumizer: int mLastProgress>;

        if $i3 <= 0 goto label5;

        $r4 = r0.<android.preference.SeekBarVolumizer: android.media.AudioManager mAudioManager>;

        $i4 = r0.<android.preference.SeekBarVolumizer: int mStreamType>;

        virtualinvoke $r4.<android.media.AudioManager: void adjustStreamVolume(int,int,int)>($i4, 100, 0);

        goto label6;

     label5:
        $z1 = r0.<android.preference.SeekBarVolumizer: boolean mMuted>;

        if $z1 != 0 goto label6;

        $i1 = r0.<android.preference.SeekBarVolumizer: int mLastProgress>;

        if $i1 != 0 goto label6;

        $r3 = r0.<android.preference.SeekBarVolumizer: android.media.AudioManager mAudioManager>;

        $i2 = r0.<android.preference.SeekBarVolumizer: int mStreamType>;

        virtualinvoke $r3.<android.media.AudioManager: void adjustStreamVolume(int,int,int)>($i2, -100, 0);

     label6:
        $r9 = r0.<android.preference.SeekBarVolumizer: android.media.AudioManager mAudioManager>;

        $i7 = r0.<android.preference.SeekBarVolumizer: int mStreamType>;

        $i8 = r0.<android.preference.SeekBarVolumizer: int mLastProgress>;

        virtualinvoke $r9.<android.media.AudioManager: void setStreamVolume(int,int,int)>($i7, $i8, 1024);

     label7:
        return 1;
    }

    public boolean isSamplePlaying()
    {
        android.preference.SeekBarVolumizer r0;
        android.media.Ringtone $r2, $r3;
        boolean $z0, z1;
        java.lang.Throwable $r4;

        r0 := @this: android.preference.SeekBarVolumizer;

        entermonitor r0;

     label1:
        $r2 = r0.<android.preference.SeekBarVolumizer: android.media.Ringtone mRingtone>;

        if $r2 == null goto label3;

        $r3 = r0.<android.preference.SeekBarVolumizer: android.media.Ringtone mRingtone>;

        $z0 = virtualinvoke $r3.<android.media.Ringtone: boolean isPlaying()>();

        if $z0 == 0 goto label3;

     label2:
        z1 = 1;

        goto label4;

     label3:
        z1 = 0;

     label4:
        exitmonitor r0;

     label5:
        return z1;

     label6:
        $r4 := @caughtexception;

     label7:
        exitmonitor r0;

     label8:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public void muteVolume()
    {
        android.preference.SeekBarVolumizer r0;
        int i0, $i1, $i2;
        android.widget.SeekBar $r1, $r2, $r3;

        r0 := @this: android.preference.SeekBarVolumizer;

        i0 = r0.<android.preference.SeekBarVolumizer: int mVolumeBeforeMute>;

        if i0 == -1 goto label1;

        $r3 = r0.<android.preference.SeekBarVolumizer: android.widget.SeekBar mSeekBar>;

        virtualinvoke $r3.<android.widget.SeekBar: void setProgress(int,boolean)>(i0, 1);

        $i2 = r0.<android.preference.SeekBarVolumizer: int mVolumeBeforeMute>;

        specialinvoke r0.<android.preference.SeekBarVolumizer: void postSetVolume(int)>($i2);

        specialinvoke r0.<android.preference.SeekBarVolumizer: void postStartSample()>();

        r0.<android.preference.SeekBarVolumizer: int mVolumeBeforeMute> = -1;

        goto label2;

     label1:
        $r1 = r0.<android.preference.SeekBarVolumizer: android.widget.SeekBar mSeekBar>;

        $i1 = virtualinvoke $r1.<android.widget.SeekBar: int getProgress()>();

        r0.<android.preference.SeekBarVolumizer: int mVolumeBeforeMute> = $i1;

        $r2 = r0.<android.preference.SeekBarVolumizer: android.widget.SeekBar mSeekBar>;

        virtualinvoke $r2.<android.widget.SeekBar: void setProgress(int,boolean)>(0, 1);

        specialinvoke r0.<android.preference.SeekBarVolumizer: void postStopSample()>();

        specialinvoke r0.<android.preference.SeekBarVolumizer: void postSetVolume(int)>(0);

     label2:
        return;
    }

    public void onProgressChanged(android.widget.SeekBar, int, boolean)
    {
        android.preference.SeekBarVolumizer r0;
        android.widget.SeekBar r1;
        int i0;
        boolean z0;
        android.preference.SeekBarVolumizer$Callback r2;

        r0 := @this: android.preference.SeekBarVolumizer;

        r1 := @parameter0: android.widget.SeekBar;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        if z0 == 0 goto label1;

        specialinvoke r0.<android.preference.SeekBarVolumizer: void postSetVolume(int)>(i0);

     label1:
        r2 = r0.<android.preference.SeekBarVolumizer: android.preference.SeekBarVolumizer$Callback mCallback>;

        if r2 == null goto label2;

        interfaceinvoke r2.<android.preference.SeekBarVolumizer$Callback: void onProgressChanged(android.widget.SeekBar,int,boolean)>(r1, i0, z0);

     label2:
        return;
    }

    public void onRestoreInstanceState(android.preference.VolumePreference$VolumeStore)
    {
        android.preference.SeekBarVolumizer r0;
        android.preference.VolumePreference$VolumeStore r1;
        int i0, $i1, $i2;

        r0 := @this: android.preference.SeekBarVolumizer;

        r1 := @parameter0: android.preference.VolumePreference$VolumeStore;

        $i1 = r1.<android.preference.VolumePreference$VolumeStore: int volume>;

        if $i1 == -1 goto label1;

        $i2 = r1.<android.preference.VolumePreference$VolumeStore: int originalVolume>;

        r0.<android.preference.SeekBarVolumizer: int mOriginalStreamVolume> = $i2;

        i0 = r1.<android.preference.VolumePreference$VolumeStore: int volume>;

        r0.<android.preference.SeekBarVolumizer: int mLastProgress> = i0;

        specialinvoke r0.<android.preference.SeekBarVolumizer: void postSetVolume(int)>(i0);

     label1:
        return;
    }

    public void onSaveInstanceState(android.preference.VolumePreference$VolumeStore)
    {
        android.preference.SeekBarVolumizer r0;
        android.preference.VolumePreference$VolumeStore r1;
        int i0, $i1;

        r0 := @this: android.preference.SeekBarVolumizer;

        r1 := @parameter0: android.preference.VolumePreference$VolumeStore;

        i0 = r0.<android.preference.SeekBarVolumizer: int mLastProgress>;

        if i0 < 0 goto label1;

        r1.<android.preference.VolumePreference$VolumeStore: int volume> = i0;

        $i1 = r0.<android.preference.SeekBarVolumizer: int mOriginalStreamVolume>;

        r1.<android.preference.VolumePreference$VolumeStore: int originalVolume> = $i1;

     label1:
        return;
    }

    public void onStartTrackingTouch(android.widget.SeekBar)
    {
        android.preference.SeekBarVolumizer r0;
        android.widget.SeekBar r1;

        r0 := @this: android.preference.SeekBarVolumizer;

        r1 := @parameter0: android.widget.SeekBar;

        return;
    }

    public void onStopTrackingTouch(android.widget.SeekBar)
    {
        android.preference.SeekBarVolumizer r0;
        android.widget.SeekBar r1;

        r0 := @this: android.preference.SeekBarVolumizer;

        r1 := @parameter0: android.widget.SeekBar;

        specialinvoke r0.<android.preference.SeekBarVolumizer: void postStartSample()>();

        return;
    }

    public void revertVolume()
    {
        android.preference.SeekBarVolumizer r0;
        int $i0, $i1;
        android.media.AudioManager $r1;

        r0 := @this: android.preference.SeekBarVolumizer;

        $r1 = r0.<android.preference.SeekBarVolumizer: android.media.AudioManager mAudioManager>;

        $i1 = r0.<android.preference.SeekBarVolumizer: int mStreamType>;

        $i0 = r0.<android.preference.SeekBarVolumizer: int mOriginalStreamVolume>;

        virtualinvoke $r1.<android.media.AudioManager: void setStreamVolume(int,int,int)>($i1, $i0, 0);

        return;
    }

    public void setSeekBar(android.widget.SeekBar)
    {
        android.preference.SeekBarVolumizer r0;
        android.widget.SeekBar r1, r2, $r3, $r4;
        int $i0;

        r0 := @this: android.preference.SeekBarVolumizer;

        r1 := @parameter0: android.widget.SeekBar;

        r2 = r0.<android.preference.SeekBarVolumizer: android.widget.SeekBar mSeekBar>;

        if r2 == null goto label1;

        virtualinvoke r2.<android.widget.SeekBar: void setOnSeekBarChangeListener(android.widget.SeekBar$OnSeekBarChangeListener)>(null);

     label1:
        r0.<android.preference.SeekBarVolumizer: android.widget.SeekBar mSeekBar> = r1;

        virtualinvoke r1.<android.widget.SeekBar: void setOnSeekBarChangeListener(android.widget.SeekBar$OnSeekBarChangeListener)>(null);

        $r3 = r0.<android.preference.SeekBarVolumizer: android.widget.SeekBar mSeekBar>;

        $i0 = r0.<android.preference.SeekBarVolumizer: int mMaxStreamVolume>;

        virtualinvoke $r3.<android.widget.SeekBar: void setMax(int)>($i0);

        virtualinvoke r0.<android.preference.SeekBarVolumizer: void updateSeekBar()>();

        $r4 = r0.<android.preference.SeekBarVolumizer: android.widget.SeekBar mSeekBar>;

        virtualinvoke $r4.<android.widget.SeekBar: void setOnSeekBarChangeListener(android.widget.SeekBar$OnSeekBarChangeListener)>(r0);

        return;
    }

    public void start()
    {
        android.preference.SeekBarVolumizer r0;
        android.os.Handler $r1, $r3, $r6;
        android.os.HandlerThread $r2;
        android.os.Looper $r4;
        android.preference.SeekBarVolumizer$Observer $r5, $r12;
        android.content.Context $r7;
        android.content.ContentResolver $r8;
        int $i0;
        java.lang.String[] $r9;
        java.lang.String $r10;
        android.net.Uri $r11;
        android.preference.SeekBarVolumizer$Receiver $r13;
        boolean $z1;

        r0 := @this: android.preference.SeekBarVolumizer;

        $r1 = r0.<android.preference.SeekBarVolumizer: android.os.Handler mHandler>;

        if $r1 == null goto label1;

        return;

     label1:
        $r2 = new android.os.HandlerThread;

        specialinvoke $r2.<android.os.HandlerThread: void <init>(java.lang.String)>("SeekBarVolumizer.CallbackHandler");

        virtualinvoke $r2.<android.os.HandlerThread: void start()>();

        $r3 = new android.os.Handler;

        $r4 = virtualinvoke $r2.<android.os.HandlerThread: android.os.Looper getLooper()>();

        specialinvoke $r3.<android.os.Handler: void <init>(android.os.Looper,android.os.Handler$Callback)>($r4, r0);

        r0.<android.preference.SeekBarVolumizer: android.os.Handler mHandler> = $r3;

        virtualinvoke $r3.<android.os.Handler: boolean sendEmptyMessage(int)>(3);

        $r5 = new android.preference.SeekBarVolumizer$Observer;

        $r6 = r0.<android.preference.SeekBarVolumizer: android.os.Handler mHandler>;

        specialinvoke $r5.<android.preference.SeekBarVolumizer$Observer: void <init>(android.preference.SeekBarVolumizer,android.os.Handler)>(r0, $r6);

        r0.<android.preference.SeekBarVolumizer: android.preference.SeekBarVolumizer$Observer mVolumeObserver> = $r5;

        $r7 = r0.<android.preference.SeekBarVolumizer: android.content.Context mContext>;

        $r8 = virtualinvoke $r7.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r9 = <android.provider.Settings$System: java.lang.String[] VOLUME_SETTINGS_INT>;

        $i0 = r0.<android.preference.SeekBarVolumizer: int mStreamType>;

        $r10 = $r9[$i0];

        $r11 = staticinvoke <android.provider.Settings$System: android.net.Uri getUriFor(java.lang.String)>($r10);

        $r12 = r0.<android.preference.SeekBarVolumizer: android.preference.SeekBarVolumizer$Observer mVolumeObserver>;

        virtualinvoke $r8.<android.content.ContentResolver: void registerContentObserver(android.net.Uri,boolean,android.database.ContentObserver)>($r11, 0, $r12);

        $r13 = r0.<android.preference.SeekBarVolumizer: android.preference.SeekBarVolumizer$Receiver mReceiver>;

        virtualinvoke $r13.<android.preference.SeekBarVolumizer$Receiver: void setListening(boolean)>(1);

        $z1 = specialinvoke r0.<android.preference.SeekBarVolumizer: boolean hasAudioProductStrategies()>();

        if $z1 == 0 goto label2;

        specialinvoke r0.<android.preference.SeekBarVolumizer: void registerVolumeGroupCb()>();

     label2:
        return;
    }

    public void startSample()
    {
        android.preference.SeekBarVolumizer r0;

        r0 := @this: android.preference.SeekBarVolumizer;

        specialinvoke r0.<android.preference.SeekBarVolumizer: void postStartSample()>();

        return;
    }

    public void stop()
    {
        android.preference.SeekBarVolumizer r0;
        android.os.Handler $r1, $r7;
        android.content.Context $r2;
        android.content.ContentResolver $r3;
        android.preference.SeekBarVolumizer$Observer $r4;
        android.preference.SeekBarVolumizer$Receiver $r5;
        boolean $z0;
        android.widget.SeekBar $r6;
        android.os.Looper $r8;

        r0 := @this: android.preference.SeekBarVolumizer;

        $r1 = r0.<android.preference.SeekBarVolumizer: android.os.Handler mHandler>;

        if $r1 != null goto label1;

        return;

     label1:
        specialinvoke r0.<android.preference.SeekBarVolumizer: void postStopSample()>();

        $r2 = r0.<android.preference.SeekBarVolumizer: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r4 = r0.<android.preference.SeekBarVolumizer: android.preference.SeekBarVolumizer$Observer mVolumeObserver>;

        virtualinvoke $r3.<android.content.ContentResolver: void unregisterContentObserver(android.database.ContentObserver)>($r4);

        $r5 = r0.<android.preference.SeekBarVolumizer: android.preference.SeekBarVolumizer$Receiver mReceiver>;

        virtualinvoke $r5.<android.preference.SeekBarVolumizer$Receiver: void setListening(boolean)>(0);

        $z0 = specialinvoke r0.<android.preference.SeekBarVolumizer: boolean hasAudioProductStrategies()>();

        if $z0 == 0 goto label2;

        specialinvoke r0.<android.preference.SeekBarVolumizer: void unregisterVolumeGroupCb()>();

     label2:
        $r6 = r0.<android.preference.SeekBarVolumizer: android.widget.SeekBar mSeekBar>;

        virtualinvoke $r6.<android.widget.SeekBar: void setOnSeekBarChangeListener(android.widget.SeekBar$OnSeekBarChangeListener)>(null);

        $r7 = r0.<android.preference.SeekBarVolumizer: android.os.Handler mHandler>;

        $r8 = virtualinvoke $r7.<android.os.Handler: android.os.Looper getLooper()>();

        virtualinvoke $r8.<android.os.Looper: void quitSafely()>();

        r0.<android.preference.SeekBarVolumizer: android.os.Handler mHandler> = null;

        r0.<android.preference.SeekBarVolumizer: android.preference.SeekBarVolumizer$Observer mVolumeObserver> = null;

        return;
    }

    public void stopSample()
    {
        android.preference.SeekBarVolumizer r0;

        r0 := @this: android.preference.SeekBarVolumizer;

        specialinvoke r0.<android.preference.SeekBarVolumizer: void postStopSample()>();

        return;
    }

    protected void updateSeekBar()
    {
        android.preference.SeekBarVolumizer r0;
        boolean z0, $z1, $z2, $z3;
        android.widget.SeekBar r1, $r2, $r3, $r4, $r5;
        int $i0, $i1, i2;

        r0 := @this: android.preference.SeekBarVolumizer;

        z0 = specialinvoke r0.<android.preference.SeekBarVolumizer: boolean isZenMuted()>();

        $r2 = r0.<android.preference.SeekBarVolumizer: android.widget.SeekBar mSeekBar>;

        $z1 = z0 ^ 1;

        virtualinvoke $r2.<android.widget.SeekBar: void setEnabled(boolean)>($z1);

        if z0 == 0 goto label1;

        $r5 = r0.<android.preference.SeekBarVolumizer: android.widget.SeekBar mSeekBar>;

        $i1 = r0.<android.preference.SeekBarVolumizer: int mLastAudibleStreamVolume>;

        virtualinvoke $r5.<android.widget.SeekBar: void setProgress(int,boolean)>($i1, 1);

        goto label6;

     label1:
        $z2 = r0.<android.preference.SeekBarVolumizer: boolean mNotificationOrRing>;

        if $z2 == 0 goto label2;

        $i0 = r0.<android.preference.SeekBarVolumizer: int mRingerMode>;

        if $i0 != 1 goto label2;

        $r4 = r0.<android.preference.SeekBarVolumizer: android.widget.SeekBar mSeekBar>;

        virtualinvoke $r4.<android.widget.SeekBar: void setProgress(int,boolean)>(0, 1);

        goto label6;

     label2:
        $z3 = r0.<android.preference.SeekBarVolumizer: boolean mMuted>;

        if $z3 == 0 goto label3;

        $r3 = r0.<android.preference.SeekBarVolumizer: android.widget.SeekBar mSeekBar>;

        virtualinvoke $r3.<android.widget.SeekBar: void setProgress(int,boolean)>(0, 1);

        goto label6;

     label3:
        r1 = r0.<android.preference.SeekBarVolumizer: android.widget.SeekBar mSeekBar>;

        i2 = r0.<android.preference.SeekBarVolumizer: int mLastProgress>;

        if i2 <= -1 goto label4;

        goto label5;

     label4:
        i2 = r0.<android.preference.SeekBarVolumizer: int mOriginalStreamVolume>;

     label5:
        virtualinvoke r1.<android.widget.SeekBar: void setProgress(int,boolean)>(i2, 1);

     label6:
        return;
    }

    public static void <clinit>()
    {
        <android.preference.SeekBarVolumizer: java.lang.String TAG> = "SeekBarVolumizer";

        <android.preference.SeekBarVolumizer: int MSG_STOP_SAMPLE> = 2;

        <android.preference.SeekBarVolumizer: int MSG_START_SAMPLE> = 1;

        <android.preference.SeekBarVolumizer: int MSG_SET_STREAM_VOLUME> = 0;

        <android.preference.SeekBarVolumizer: int MSG_INIT_SAMPLE> = 3;

        <android.preference.SeekBarVolumizer: int MSG_GROUP_VOLUME_CHANGED> = 1;

        <android.preference.SeekBarVolumizer: int CHECK_RINGTONE_PLAYBACK_DELAY_MS> = 1000;

        return;
    }
}
