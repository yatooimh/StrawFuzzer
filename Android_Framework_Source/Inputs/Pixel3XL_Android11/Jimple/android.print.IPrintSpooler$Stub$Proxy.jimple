class android.print.IPrintSpooler$Stub$Proxy extends java.lang.Object implements android.print.IPrintSpooler
{
    public static android.print.IPrintSpooler sDefaultImpl;
    private android.os.IBinder mRemote;

    void <init>(android.os.IBinder)
    {
        android.print.IPrintSpooler$Stub$Proxy r0;
        android.os.IBinder r1;

        r0 := @this: android.print.IPrintSpooler$Stub$Proxy;

        r1 := @parameter0: android.os.IBinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.print.IPrintSpooler$Stub$Proxy: android.os.IBinder mRemote> = r1;

        return;
    }

    public android.os.IBinder asBinder()
    {
        android.print.IPrintSpooler$Stub$Proxy r0;
        android.os.IBinder $r1;

        r0 := @this: android.print.IPrintSpooler$Stub$Proxy;

        $r1 = r0.<android.print.IPrintSpooler$Stub$Proxy: android.os.IBinder mRemote>;

        return $r1;
    }

    public void clearCustomPrinterIconCache(android.print.IPrintSpoolerCallbacks, int) throws android.os.RemoteException
    {
        android.print.IPrintSpooler$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1;
        android.os.IBinder $r2, r7;
        boolean $z0;
        android.print.IPrintSpooler $r3, $r4;
        java.lang.Throwable $r5;
        android.print.IPrintSpoolerCallbacks r6;

        r0 := @this: android.print.IPrintSpooler$Stub$Proxy;

        r6 := @parameter0: android.print.IPrintSpoolerCallbacks;

        i0 := @parameter1: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.print.IPrintSpooler");

     label2:
        if r6 == null goto label5;

     label3:
        r7 = interfaceinvoke r6.<android.print.IPrintSpoolerCallbacks: android.os.IBinder asBinder()>();

     label4:
        goto label6;

     label5:
        r7 = null;

     label6:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r7);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r2 = r0.<android.print.IPrintSpooler$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r2.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(11, r1, null, 1);

        if $z0 != 0 goto label8;

        $r3 = staticinvoke <android.print.IPrintSpooler$Stub: android.print.IPrintSpooler getDefaultImpl()>();

        if $r3 == null goto label8;

        $r4 = staticinvoke <android.print.IPrintSpooler$Stub: android.print.IPrintSpooler getDefaultImpl()>();

        interfaceinvoke $r4.<android.print.IPrintSpooler: void clearCustomPrinterIconCache(android.print.IPrintSpoolerCallbacks,int)>(r6, i0);

     label7:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label8:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label9:
        $r5 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.Throwable from label3 to label4 with label9;
        catch java.lang.Throwable from label6 to label7 with label9;
    }

    public void createPrintJob(android.print.PrintJobInfo) throws android.os.RemoteException
    {
        android.print.IPrintSpooler$Stub$Proxy r0;
        android.os.Parcel r1;
        android.os.IBinder $r2;
        boolean $z0;
        android.print.IPrintSpooler $r3, $r4;
        java.lang.Throwable $r5;
        android.print.PrintJobInfo r6;

        r0 := @this: android.print.IPrintSpooler$Stub$Proxy;

        r6 := @parameter0: android.print.PrintJobInfo;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.print.IPrintSpooler");

     label2:
        if r6 == null goto label5;

     label3:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r6.<android.print.PrintJobInfo: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label4:
        goto label6;

     label5:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label6:
        $r2 = r0.<android.print.IPrintSpooler$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r2.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(4, r1, null, 1);

        if $z0 != 0 goto label8;

        $r3 = staticinvoke <android.print.IPrintSpooler$Stub: android.print.IPrintSpooler getDefaultImpl()>();

        if $r3 == null goto label8;

        $r4 = staticinvoke <android.print.IPrintSpooler$Stub: android.print.IPrintSpooler getDefaultImpl()>();

        interfaceinvoke $r4.<android.print.IPrintSpooler: void createPrintJob(android.print.PrintJobInfo)>(r6);

     label7:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label8:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label9:
        $r5 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.Throwable from label3 to label4 with label9;
        catch java.lang.Throwable from label5 to label6 with label9;
        catch java.lang.Throwable from label6 to label7 with label9;
    }

    public void getCustomPrinterIcon(android.print.PrinterId, android.print.IPrintSpoolerCallbacks, int) throws android.os.RemoteException
    {
        android.print.IPrintSpooler$Stub$Proxy r0;
        android.print.IPrintSpoolerCallbacks r1;
        int i0;
        android.os.Parcel r2;
        android.os.IBinder $r3, r8;
        boolean $z0;
        android.print.IPrintSpooler $r4, $r5;
        java.lang.Throwable $r6;
        android.print.PrinterId r7;

        r0 := @this: android.print.IPrintSpooler$Stub$Proxy;

        r7 := @parameter0: android.print.PrinterId;

        r1 := @parameter1: android.print.IPrintSpoolerCallbacks;

        i0 := @parameter2: int;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.print.IPrintSpooler");

     label02:
        if r7 == null goto label05;

     label03:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r7.<android.print.PrinterId: void writeToParcel(android.os.Parcel,int)>(r2, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        if r1 == null goto label09;

     label07:
        r8 = interfaceinvoke r1.<android.print.IPrintSpoolerCallbacks: android.os.IBinder asBinder()>();

     label08:
        goto label10;

     label09:
        r8 = null;

     label10:
        virtualinvoke r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r8);

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

        $r3 = r0.<android.print.IPrintSpooler$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(10, r2, null, 1);

        if $z0 != 0 goto label12;

        $r4 = staticinvoke <android.print.IPrintSpooler$Stub: android.print.IPrintSpooler getDefaultImpl()>();

        if $r4 == null goto label12;

        $r5 = staticinvoke <android.print.IPrintSpooler$Stub: android.print.IPrintSpooler getDefaultImpl()>();

        interfaceinvoke $r5.<android.print.IPrintSpooler: void getCustomPrinterIcon(android.print.PrinterId,android.print.IPrintSpoolerCallbacks,int)>(r7, r1, i0);

     label11:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label12:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label13:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label03 to label04 with label13;
        catch java.lang.Throwable from label05 to label06 with label13;
        catch java.lang.Throwable from label07 to label08 with label13;
        catch java.lang.Throwable from label10 to label11 with label13;
    }

    public java.lang.String getInterfaceDescriptor()
    {
        android.print.IPrintSpooler$Stub$Proxy r0;

        r0 := @this: android.print.IPrintSpooler$Stub$Proxy;

        return "android.print.IPrintSpooler";
    }

    public void getPrintJobInfo(android.print.PrintJobId, android.print.IPrintSpoolerCallbacks, int, int) throws android.os.RemoteException
    {
        android.print.IPrintSpooler$Stub$Proxy r0;
        android.print.IPrintSpoolerCallbacks r1;
        int i0, i1;
        android.os.Parcel r2;
        android.os.IBinder $r3, r8;
        boolean $z0;
        android.print.IPrintSpooler $r4, $r5;
        java.lang.Throwable $r6;
        android.print.PrintJobId r7;

        r0 := @this: android.print.IPrintSpooler$Stub$Proxy;

        r7 := @parameter0: android.print.PrintJobId;

        r1 := @parameter1: android.print.IPrintSpoolerCallbacks;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.print.IPrintSpooler");

     label02:
        if r7 == null goto label05;

     label03:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r7.<android.print.PrintJobId: void writeToParcel(android.os.Parcel,int)>(r2, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        if r1 == null goto label09;

     label07:
        r8 = interfaceinvoke r1.<android.print.IPrintSpoolerCallbacks: android.os.IBinder asBinder()>();

     label08:
        goto label10;

     label09:
        r8 = null;

     label10:
        virtualinvoke r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r8);

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i1);

        $r3 = r0.<android.print.IPrintSpooler$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(3, r2, null, 1);

        if $z0 != 0 goto label12;

        $r4 = staticinvoke <android.print.IPrintSpooler$Stub: android.print.IPrintSpooler getDefaultImpl()>();

        if $r4 == null goto label12;

        $r5 = staticinvoke <android.print.IPrintSpooler$Stub: android.print.IPrintSpooler getDefaultImpl()>();

        interfaceinvoke $r5.<android.print.IPrintSpooler: void getPrintJobInfo(android.print.PrintJobId,android.print.IPrintSpoolerCallbacks,int,int)>(r7, r1, i0, i1);

     label11:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label12:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label13:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label03 to label04 with label13;
        catch java.lang.Throwable from label05 to label06 with label13;
        catch java.lang.Throwable from label07 to label08 with label13;
        catch java.lang.Throwable from label10 to label11 with label13;
    }

    public void getPrintJobInfos(android.print.IPrintSpoolerCallbacks, android.content.ComponentName, int, int, int) throws android.os.RemoteException
    {
        android.print.IPrintSpooler$Stub$Proxy r0;
        android.content.ComponentName r1;
        int i0, i1, i2;
        android.os.Parcel r2;
        android.os.IBinder $r3, r8;
        boolean $z0;
        android.print.IPrintSpooler $r4, $r5;
        java.lang.Throwable $r6;
        android.print.IPrintSpoolerCallbacks r7;

        r0 := @this: android.print.IPrintSpooler$Stub$Proxy;

        r7 := @parameter0: android.print.IPrintSpoolerCallbacks;

        r1 := @parameter1: android.content.ComponentName;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.print.IPrintSpooler");

     label02:
        if r7 == null goto label05;

     label03:
        r8 = interfaceinvoke r7.<android.print.IPrintSpoolerCallbacks: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r8 = null;

     label06:
        virtualinvoke r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r8);

     label07:
        if r1 == null goto label10;

     label08:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<android.content.ComponentName: void writeToParcel(android.os.Parcel,int)>(r2, 0);

     label09:
        goto label11;

     label10:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label11:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i1);

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i2);

        $r3 = r0.<android.print.IPrintSpooler$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(2, r2, null, 1);

        if $z0 != 0 goto label13;

        $r4 = staticinvoke <android.print.IPrintSpooler$Stub: android.print.IPrintSpooler getDefaultImpl()>();

        if $r4 == null goto label13;

        $r5 = staticinvoke <android.print.IPrintSpooler$Stub: android.print.IPrintSpooler getDefaultImpl()>();

        interfaceinvoke $r5.<android.print.IPrintSpooler: void getPrintJobInfos(android.print.IPrintSpoolerCallbacks,android.content.ComponentName,int,int,int)>(r7, r1, i0, i1, i2);

     label12:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label13:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label14:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label14;
        catch java.lang.Throwable from label03 to label04 with label14;
        catch java.lang.Throwable from label06 to label07 with label14;
        catch java.lang.Throwable from label08 to label09 with label14;
        catch java.lang.Throwable from label10 to label11 with label14;
        catch java.lang.Throwable from label11 to label12 with label14;
    }

    public void onCustomPrinterIconLoaded(android.print.PrinterId, android.graphics.drawable.Icon, android.print.IPrintSpoolerCallbacks, int) throws android.os.RemoteException
    {
        android.print.IPrintSpooler$Stub$Proxy r0;
        android.graphics.drawable.Icon r1;
        android.print.IPrintSpoolerCallbacks r2;
        int i0;
        android.os.Parcel r3;
        android.os.IBinder $r4, r9;
        boolean $z0;
        android.print.IPrintSpooler $r5, $r6;
        java.lang.Throwable $r7;
        android.print.PrinterId r8;

        r0 := @this: android.print.IPrintSpooler$Stub$Proxy;

        r8 := @parameter0: android.print.PrinterId;

        r1 := @parameter1: android.graphics.drawable.Icon;

        r2 := @parameter2: android.print.IPrintSpoolerCallbacks;

        i0 := @parameter3: int;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.print.IPrintSpooler");

     label02:
        if r8 == null goto label05;

     label03:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r8.<android.print.PrinterId: void writeToParcel(android.os.Parcel,int)>(r3, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        if r1 == null goto label09;

     label07:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<android.graphics.drawable.Icon: void writeToParcel(android.os.Parcel,int)>(r3, 0);

     label08:
        goto label10;

     label09:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(0);

     label10:
        if r2 == null goto label13;

     label11:
        r9 = interfaceinvoke r2.<android.print.IPrintSpoolerCallbacks: android.os.IBinder asBinder()>();

     label12:
        goto label14;

     label13:
        r9 = null;

     label14:
        virtualinvoke r3.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r9);

        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<android.print.IPrintSpooler$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(9, r3, null, 1);

        if $z0 != 0 goto label16;

        $r5 = staticinvoke <android.print.IPrintSpooler$Stub: android.print.IPrintSpooler getDefaultImpl()>();

        if $r5 == null goto label16;

        $r6 = staticinvoke <android.print.IPrintSpooler$Stub: android.print.IPrintSpooler getDefaultImpl()>();

        interfaceinvoke $r6.<android.print.IPrintSpooler: void onCustomPrinterIconLoaded(android.print.PrinterId,android.graphics.drawable.Icon,android.print.IPrintSpoolerCallbacks,int)>(r8, r1, r2, i0);

     label15:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label16:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label17:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label17;
        catch java.lang.Throwable from label03 to label04 with label17;
        catch java.lang.Throwable from label05 to label06 with label17;
        catch java.lang.Throwable from label07 to label08 with label17;
        catch java.lang.Throwable from label09 to label10 with label17;
        catch java.lang.Throwable from label11 to label12 with label17;
        catch java.lang.Throwable from label14 to label15 with label17;
    }

    public void pruneApprovedPrintServices(java.util.List) throws android.os.RemoteException
    {
        android.print.IPrintSpooler$Stub$Proxy r0;
        android.os.Parcel r1;
        android.os.IBinder $r2;
        boolean $z0;
        android.print.IPrintSpooler $r3, $r4;
        java.lang.Throwable $r5;
        java.util.List r6;

        r0 := @this: android.print.IPrintSpooler$Stub$Proxy;

        r6 := @parameter0: java.util.List;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.print.IPrintSpooler");

        virtualinvoke r1.<android.os.Parcel: void writeTypedList(java.util.List)>(r6);

        $r2 = r0.<android.print.IPrintSpooler$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r2.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(16, r1, null, 1);

        if $z0 != 0 goto label3;

        $r3 = staticinvoke <android.print.IPrintSpooler$Stub: android.print.IPrintSpooler getDefaultImpl()>();

        if $r3 == null goto label3;

        $r4 = staticinvoke <android.print.IPrintSpooler$Stub: android.print.IPrintSpooler getDefaultImpl()>();

        interfaceinvoke $r4.<android.print.IPrintSpooler: void pruneApprovedPrintServices(java.util.List)>(r6);

     label2:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label4:
        $r5 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public void removeObsoletePrintJobs() throws android.os.RemoteException
    {
        android.print.IPrintSpooler$Stub$Proxy r0;
        android.os.Parcel r1;
        android.os.IBinder $r3;
        boolean $z0;
        android.print.IPrintSpooler $r4, $r5;
        java.lang.Throwable $r6;

        r0 := @this: android.print.IPrintSpooler$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.print.IPrintSpooler");

        $r3 = r0.<android.print.IPrintSpooler$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1, r1, null, 1);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.print.IPrintSpooler$Stub: android.print.IPrintSpooler getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.print.IPrintSpooler$Stub: android.print.IPrintSpooler getDefaultImpl()>();

        interfaceinvoke $r5.<android.print.IPrintSpooler: void removeObsoletePrintJobs()>();

     label2:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label4:
        $r6 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public void setClient(android.print.IPrintSpoolerClient) throws android.os.RemoteException
    {
        android.print.IPrintSpooler$Stub$Proxy r0;
        android.os.Parcel r1;
        android.os.IBinder $r2, r7;
        boolean $z0;
        android.print.IPrintSpooler $r3, $r4;
        java.lang.Throwable $r5;
        android.print.IPrintSpoolerClient r6;

        r0 := @this: android.print.IPrintSpooler$Stub$Proxy;

        r6 := @parameter0: android.print.IPrintSpoolerClient;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.print.IPrintSpooler");

     label2:
        if r6 == null goto label5;

     label3:
        r7 = interfaceinvoke r6.<android.print.IPrintSpoolerClient: android.os.IBinder asBinder()>();

     label4:
        goto label6;

     label5:
        r7 = null;

     label6:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r7);

        $r2 = r0.<android.print.IPrintSpooler$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r2.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(14, r1, null, 1);

        if $z0 != 0 goto label8;

        $r3 = staticinvoke <android.print.IPrintSpooler$Stub: android.print.IPrintSpooler getDefaultImpl()>();

        if $r3 == null goto label8;

        $r4 = staticinvoke <android.print.IPrintSpooler$Stub: android.print.IPrintSpooler getDefaultImpl()>();

        interfaceinvoke $r4.<android.print.IPrintSpooler: void setClient(android.print.IPrintSpoolerClient)>(r6);

     label7:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label8:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label9:
        $r5 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.Throwable from label3 to label4 with label9;
        catch java.lang.Throwable from label6 to label7 with label9;
    }

    public void setPrintJobCancelling(android.print.PrintJobId, boolean) throws android.os.RemoteException
    {
        android.print.IPrintSpooler$Stub$Proxy r0;
        boolean z0, $z1;
        android.os.Parcel r1;
        android.os.IBinder $r2;
        android.print.IPrintSpooler $r3, $r4;
        java.lang.Throwable $r5;
        android.print.PrintJobId r6;
        byte b0;

        r0 := @this: android.print.IPrintSpooler$Stub$Proxy;

        r6 := @parameter0: android.print.PrintJobId;

        z0 := @parameter1: boolean;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.print.IPrintSpooler");

     label02:
        b0 = 0;

        if r6 == null goto label05;

     label03:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r6.<android.print.PrintJobId: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        if z0 == 0 goto label07;

        b0 = 1;

     label07:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b0);

        $r2 = r0.<android.print.IPrintSpooler$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r2.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(15, r1, null, 1);

        if $z1 != 0 goto label09;

        $r3 = staticinvoke <android.print.IPrintSpooler$Stub: android.print.IPrintSpooler getDefaultImpl()>();

        if $r3 == null goto label09;

        $r4 = staticinvoke <android.print.IPrintSpooler$Stub: android.print.IPrintSpooler getDefaultImpl()>();

        interfaceinvoke $r4.<android.print.IPrintSpooler: void setPrintJobCancelling(android.print.PrintJobId,boolean)>(r6, z0);

     label08:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label09:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r5 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label07 to label08 with label10;
    }

    public void setPrintJobState(android.print.PrintJobId, int, java.lang.String, android.print.IPrintSpoolerCallbacks, int) throws android.os.RemoteException
    {
        android.print.IPrintSpooler$Stub$Proxy r0;
        int i0, i1;
        java.lang.String r1;
        android.print.IPrintSpoolerCallbacks r2;
        android.os.Parcel r3;
        android.os.IBinder $r4, r9;
        boolean $z0;
        android.print.IPrintSpooler $r5, $r6;
        java.lang.Throwable $r7;
        android.print.PrintJobId r8;

        r0 := @this: android.print.IPrintSpooler$Stub$Proxy;

        r8 := @parameter0: android.print.PrintJobId;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        r2 := @parameter3: android.print.IPrintSpoolerCallbacks;

        i1 := @parameter4: int;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.print.IPrintSpooler");

     label02:
        if r8 == null goto label05;

     label03:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r8.<android.print.PrintJobId: void writeToParcel(android.os.Parcel,int)>(r3, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r1);

     label07:
        if r2 == null goto label10;

     label08:
        r9 = interfaceinvoke r2.<android.print.IPrintSpoolerCallbacks: android.os.IBinder asBinder()>();

     label09:
        goto label11;

     label10:
        r9 = null;

     label11:
        virtualinvoke r3.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r9);

        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(i1);

        $r4 = r0.<android.print.IPrintSpooler$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(5, r3, null, 1);

        if $z0 != 0 goto label13;

        $r5 = staticinvoke <android.print.IPrintSpooler$Stub: android.print.IPrintSpooler getDefaultImpl()>();

        if $r5 == null goto label13;

        $r6 = staticinvoke <android.print.IPrintSpooler$Stub: android.print.IPrintSpooler getDefaultImpl()>();

        interfaceinvoke $r6.<android.print.IPrintSpooler: void setPrintJobState(android.print.PrintJobId,int,java.lang.String,android.print.IPrintSpoolerCallbacks,int)>(r8, i0, r1, r2, i1);

     label12:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label13:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label14:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label14;
        catch java.lang.Throwable from label03 to label04 with label14;
        catch java.lang.Throwable from label05 to label06 with label14;
        catch java.lang.Throwable from label06 to label07 with label14;
        catch java.lang.Throwable from label08 to label09 with label14;
        catch java.lang.Throwable from label11 to label12 with label14;
    }

    public void setPrintJobTag(android.print.PrintJobId, java.lang.String, android.print.IPrintSpoolerCallbacks, int) throws android.os.RemoteException
    {
        android.print.IPrintSpooler$Stub$Proxy r0;
        java.lang.String r1;
        android.print.IPrintSpoolerCallbacks r2;
        int i0;
        android.os.Parcel r3;
        android.os.IBinder $r4, r9;
        boolean $z0;
        android.print.IPrintSpooler $r5, $r6;
        java.lang.Throwable $r7;
        android.print.PrintJobId r8;

        r0 := @this: android.print.IPrintSpooler$Stub$Proxy;

        r8 := @parameter0: android.print.PrintJobId;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.print.IPrintSpoolerCallbacks;

        i0 := @parameter3: int;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.print.IPrintSpooler");

     label02:
        if r8 == null goto label05;

     label03:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r8.<android.print.PrintJobId: void writeToParcel(android.os.Parcel,int)>(r3, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r1);

     label07:
        if r2 == null goto label10;

     label08:
        r9 = interfaceinvoke r2.<android.print.IPrintSpoolerCallbacks: android.os.IBinder asBinder()>();

     label09:
        goto label11;

     label10:
        r9 = null;

     label11:
        virtualinvoke r3.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r9);

        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<android.print.IPrintSpooler$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(12, r3, null, 1);

        if $z0 != 0 goto label13;

        $r5 = staticinvoke <android.print.IPrintSpooler$Stub: android.print.IPrintSpooler getDefaultImpl()>();

        if $r5 == null goto label13;

        $r6 = staticinvoke <android.print.IPrintSpooler$Stub: android.print.IPrintSpooler getDefaultImpl()>();

        interfaceinvoke $r6.<android.print.IPrintSpooler: void setPrintJobTag(android.print.PrintJobId,java.lang.String,android.print.IPrintSpoolerCallbacks,int)>(r8, r1, r2, i0);

     label12:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label13:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label14:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label14;
        catch java.lang.Throwable from label03 to label04 with label14;
        catch java.lang.Throwable from label05 to label06 with label14;
        catch java.lang.Throwable from label06 to label07 with label14;
        catch java.lang.Throwable from label08 to label09 with label14;
        catch java.lang.Throwable from label11 to label12 with label14;
    }

    public void setProgress(android.print.PrintJobId, float) throws android.os.RemoteException
    {
        android.print.IPrintSpooler$Stub$Proxy r0;
        float f0;
        android.os.Parcel r1;
        android.os.IBinder $r2;
        boolean $z0;
        android.print.IPrintSpooler $r3, $r4;
        java.lang.Throwable $r5;
        android.print.PrintJobId r6;

        r0 := @this: android.print.IPrintSpooler$Stub$Proxy;

        r6 := @parameter0: android.print.PrintJobId;

        f0 := @parameter1: float;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.print.IPrintSpooler");

     label2:
        if r6 == null goto label5;

     label3:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r6.<android.print.PrintJobId: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label4:
        goto label6;

     label5:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label6:
        virtualinvoke r1.<android.os.Parcel: void writeFloat(float)>(f0);

        $r2 = r0.<android.print.IPrintSpooler$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r2.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(6, r1, null, 1);

        if $z0 != 0 goto label8;

        $r3 = staticinvoke <android.print.IPrintSpooler$Stub: android.print.IPrintSpooler getDefaultImpl()>();

        if $r3 == null goto label8;

        $r4 = staticinvoke <android.print.IPrintSpooler$Stub: android.print.IPrintSpooler getDefaultImpl()>();

        interfaceinvoke $r4.<android.print.IPrintSpooler: void setProgress(android.print.PrintJobId,float)>(r6, f0);

     label7:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label8:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label9:
        $r5 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.Throwable from label3 to label4 with label9;
        catch java.lang.Throwable from label5 to label6 with label9;
        catch java.lang.Throwable from label6 to label7 with label9;
    }

    public void setStatus(android.print.PrintJobId, java.lang.CharSequence) throws android.os.RemoteException
    {
        android.print.IPrintSpooler$Stub$Proxy r0;
        java.lang.CharSequence r1;
        android.os.Parcel r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.print.IPrintSpooler $r4, $r5;
        java.lang.Throwable $r6;
        android.print.PrintJobId r7;

        r0 := @this: android.print.IPrintSpooler$Stub$Proxy;

        r7 := @parameter0: android.print.PrintJobId;

        r1 := @parameter1: java.lang.CharSequence;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.print.IPrintSpooler");

     label02:
        if r7 == null goto label05;

     label03:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r7.<android.print.PrintJobId: void writeToParcel(android.os.Parcel,int)>(r2, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        if r1 == null goto label09;

     label07:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        staticinvoke <android.text.TextUtils: void writeToParcel(java.lang.CharSequence,android.os.Parcel,int)>(r1, r2, 0);

     label08:
        goto label10;

     label09:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label10:
        $r3 = r0.<android.print.IPrintSpooler$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(7, r2, null, 1);

        if $z0 != 0 goto label12;

        $r4 = staticinvoke <android.print.IPrintSpooler$Stub: android.print.IPrintSpooler getDefaultImpl()>();

        if $r4 == null goto label12;

        $r5 = staticinvoke <android.print.IPrintSpooler$Stub: android.print.IPrintSpooler getDefaultImpl()>();

        interfaceinvoke $r5.<android.print.IPrintSpooler: void setStatus(android.print.PrintJobId,java.lang.CharSequence)>(r7, r1);

     label11:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label12:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label13:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label03 to label04 with label13;
        catch java.lang.Throwable from label05 to label06 with label13;
        catch java.lang.Throwable from label07 to label08 with label13;
        catch java.lang.Throwable from label09 to label10 with label13;
        catch java.lang.Throwable from label10 to label11 with label13;
    }

    public void setStatusRes(android.print.PrintJobId, int, java.lang.CharSequence) throws android.os.RemoteException
    {
        android.print.IPrintSpooler$Stub$Proxy r0;
        int i0;
        java.lang.CharSequence r1;
        android.os.Parcel r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.print.IPrintSpooler $r4, $r5;
        java.lang.Throwable $r6;
        android.print.PrintJobId r7;

        r0 := @this: android.print.IPrintSpooler$Stub$Proxy;

        r7 := @parameter0: android.print.PrintJobId;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.CharSequence;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.print.IPrintSpooler");

     label02:
        if r7 == null goto label05;

     label03:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r7.<android.print.PrintJobId: void writeToParcel(android.os.Parcel,int)>(r2, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

     label07:
        if r1 == null goto label10;

     label08:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        staticinvoke <android.text.TextUtils: void writeToParcel(java.lang.CharSequence,android.os.Parcel,int)>(r1, r2, 0);

     label09:
        goto label11;

     label10:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label11:
        $r3 = r0.<android.print.IPrintSpooler$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(8, r2, null, 1);

        if $z0 != 0 goto label13;

        $r4 = staticinvoke <android.print.IPrintSpooler$Stub: android.print.IPrintSpooler getDefaultImpl()>();

        if $r4 == null goto label13;

        $r5 = staticinvoke <android.print.IPrintSpooler$Stub: android.print.IPrintSpooler getDefaultImpl()>();

        interfaceinvoke $r5.<android.print.IPrintSpooler: void setStatusRes(android.print.PrintJobId,int,java.lang.CharSequence)>(r7, i0, r1);

     label12:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label13:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label14:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label14;
        catch java.lang.Throwable from label03 to label04 with label14;
        catch java.lang.Throwable from label05 to label06 with label14;
        catch java.lang.Throwable from label06 to label07 with label14;
        catch java.lang.Throwable from label08 to label09 with label14;
        catch java.lang.Throwable from label10 to label11 with label14;
        catch java.lang.Throwable from label11 to label12 with label14;
    }

    public void writePrintJobData(android.os.ParcelFileDescriptor, android.print.PrintJobId) throws android.os.RemoteException
    {
        android.print.IPrintSpooler$Stub$Proxy r0;
        android.print.PrintJobId r1;
        android.os.Parcel r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.print.IPrintSpooler $r4, $r5;
        java.lang.Throwable $r6;
        android.os.ParcelFileDescriptor r7;

        r0 := @this: android.print.IPrintSpooler$Stub$Proxy;

        r7 := @parameter0: android.os.ParcelFileDescriptor;

        r1 := @parameter1: android.print.PrintJobId;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.print.IPrintSpooler");

     label02:
        if r7 == null goto label05;

     label03:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r7.<android.os.ParcelFileDescriptor: void writeToParcel(android.os.Parcel,int)>(r2, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        if r1 == null goto label09;

     label07:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<android.print.PrintJobId: void writeToParcel(android.os.Parcel,int)>(r2, 0);

     label08:
        goto label10;

     label09:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label10:
        $r3 = r0.<android.print.IPrintSpooler$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(13, r2, null, 1);

        if $z0 != 0 goto label12;

        $r4 = staticinvoke <android.print.IPrintSpooler$Stub: android.print.IPrintSpooler getDefaultImpl()>();

        if $r4 == null goto label12;

        $r5 = staticinvoke <android.print.IPrintSpooler$Stub: android.print.IPrintSpooler getDefaultImpl()>();

        interfaceinvoke $r5.<android.print.IPrintSpooler: void writePrintJobData(android.os.ParcelFileDescriptor,android.print.PrintJobId)>(r7, r1);

     label11:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label12:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label13:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label03 to label04 with label13;
        catch java.lang.Throwable from label05 to label06 with label13;
        catch java.lang.Throwable from label07 to label08 with label13;
        catch java.lang.Throwable from label09 to label10 with label13;
        catch java.lang.Throwable from label10 to label11 with label13;
    }
}
