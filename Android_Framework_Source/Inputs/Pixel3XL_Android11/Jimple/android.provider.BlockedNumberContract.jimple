public class android.provider.BlockedNumberContract extends java.lang.Object
{
    public static final java.lang.String AUTHORITY;
    public static final android.net.Uri AUTHORITY_URI;
    public static final java.lang.String EXTRA_CALL_PRESENTATION;
    public static final java.lang.String EXTRA_CONTACT_EXIST;
    public static final java.lang.String EXTRA_ENHANCED_SETTING_KEY;
    public static final java.lang.String EXTRA_ENHANCED_SETTING_VALUE;
    private static final java.lang.String LOG_TAG;
    public static final java.lang.String METHOD_CAN_CURRENT_USER_BLOCK_NUMBERS;
    public static final java.lang.String METHOD_IS_BLOCKED;
    public static final java.lang.String METHOD_UNBLOCK;
    public static final java.lang.String RES_BLOCK_STATUS;
    public static final java.lang.String RES_CAN_BLOCK_NUMBERS;
    public static final java.lang.String RES_ENHANCED_SETTING_IS_ENABLED;
    public static final java.lang.String RES_NUMBER_IS_BLOCKED;
    public static final java.lang.String RES_NUM_ROWS_DELETED;
    public static final java.lang.String RES_SHOW_EMERGENCY_CALL_NOTIFICATION;
    public static final int STATUS_BLOCKED_IN_LIST;
    public static final int STATUS_BLOCKED_NOT_IN_CONTACTS;
    public static final int STATUS_BLOCKED_PAYPHONE;
    public static final int STATUS_BLOCKED_RESTRICTED;
    public static final int STATUS_BLOCKED_UNKNOWN_NUMBER;
    public static final int STATUS_NOT_BLOCKED;

    static void <clinit>()
    {
        android.net.Uri $r0;
        java.lang.Class $r1;
        java.lang.String $r2;

        <android.provider.BlockedNumberContract: int STATUS_NOT_BLOCKED> = 0;

        <android.provider.BlockedNumberContract: int STATUS_BLOCKED_UNKNOWN_NUMBER> = 3;

        <android.provider.BlockedNumberContract: int STATUS_BLOCKED_RESTRICTED> = 2;

        <android.provider.BlockedNumberContract: int STATUS_BLOCKED_PAYPHONE> = 4;

        <android.provider.BlockedNumberContract: int STATUS_BLOCKED_NOT_IN_CONTACTS> = 5;

        <android.provider.BlockedNumberContract: int STATUS_BLOCKED_IN_LIST> = 1;

        <android.provider.BlockedNumberContract: java.lang.String RES_SHOW_EMERGENCY_CALL_NOTIFICATION> = "show_emergency_call_notification";

        <android.provider.BlockedNumberContract: java.lang.String RES_NUM_ROWS_DELETED> = "num_deleted";

        <android.provider.BlockedNumberContract: java.lang.String RES_NUMBER_IS_BLOCKED> = "blocked";

        <android.provider.BlockedNumberContract: java.lang.String RES_ENHANCED_SETTING_IS_ENABLED> = "enhanced_setting_enabled";

        <android.provider.BlockedNumberContract: java.lang.String RES_CAN_BLOCK_NUMBERS> = "can_block";

        <android.provider.BlockedNumberContract: java.lang.String RES_BLOCK_STATUS> = "block_status";

        <android.provider.BlockedNumberContract: java.lang.String METHOD_UNBLOCK> = "unblock";

        <android.provider.BlockedNumberContract: java.lang.String METHOD_IS_BLOCKED> = "is_blocked";

        <android.provider.BlockedNumberContract: java.lang.String METHOD_CAN_CURRENT_USER_BLOCK_NUMBERS> = "can_current_user_block_numbers";

        <android.provider.BlockedNumberContract: java.lang.String EXTRA_ENHANCED_SETTING_VALUE> = "extra_enhanced_setting_value";

        <android.provider.BlockedNumberContract: java.lang.String EXTRA_ENHANCED_SETTING_KEY> = "extra_enhanced_setting_key";

        <android.provider.BlockedNumberContract: java.lang.String EXTRA_CONTACT_EXIST> = "extra_contact_exist";

        <android.provider.BlockedNumberContract: java.lang.String EXTRA_CALL_PRESENTATION> = "extra_call_presentation";

        <android.provider.BlockedNumberContract: java.lang.String AUTHORITY> = "com.android.blockednumber";

        $r0 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>("content://com.android.blockednumber");

        <android.provider.BlockedNumberContract: android.net.Uri AUTHORITY_URI> = $r0;

        $r1 = class "Landroid/provider/BlockedNumberContract;";

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getSimpleName()>();

        <android.provider.BlockedNumberContract: java.lang.String LOG_TAG> = $r2;

        return;
    }

    private void <init>()
    {
        android.provider.BlockedNumberContract r0;

        r0 := @this: android.provider.BlockedNumberContract;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static java.lang.String access$000()
    {
        java.lang.String $r0;

        $r0 = <android.provider.BlockedNumberContract: java.lang.String LOG_TAG>;

        return $r0;
    }

    public static boolean canCurrentUserBlockNumbers(android.content.Context)
    {
        boolean z1, z2;
        android.content.ContentResolver $r0;
        android.net.Uri $r1;
        java.lang.Throwable $r2;
        java.lang.Object[] $r3;
        android.content.Context r4;
        android.os.Bundle r5;

        r4 := @parameter0: android.content.Context;

     label1:
        $r0 = virtualinvoke r4.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r1 = <android.provider.BlockedNumberContract: android.net.Uri AUTHORITY_URI>;

        r5 = virtualinvoke $r0.<android.content.ContentResolver: android.os.Bundle call(android.net.Uri,java.lang.String,java.lang.String,android.os.Bundle)>($r1, "can_current_user_block_numbers", null, null);

     label2:
        z2 = 0;

        if r5 == null goto label5;

     label3:
        z1 = virtualinvoke r5.<android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>("can_block", 0);

     label4:
        z2 = 0;

        if z1 == 0 goto label5;

        z2 = 1;

     label5:
        return z2;

     label6:
        $r2 := @caughtexception;

        $r3 = newarray (java.lang.Object)[0];

        staticinvoke <android.telecom.Log: void w(java.lang.String,java.lang.String,java.lang.Object[])>(null, "canCurrentUserBlockNumbers: provider not ready.", $r3);

        return 0;

        catch java.lang.NullPointerException from label1 to label2 with label6;
        catch java.lang.IllegalArgumentException from label1 to label2 with label6;
        catch java.lang.NullPointerException from label3 to label4 with label6;
        catch java.lang.IllegalArgumentException from label3 to label4 with label6;
    }

    public static boolean isBlocked(android.content.Context, java.lang.String)
    {
        java.lang.String r0, $r7, $r9;
        android.content.ContentResolver $r1;
        android.net.Uri $r2;
        boolean $z0, z1;
        java.lang.Throwable $r3;
        java.lang.Object[] $r4, $r8;
        android.content.Context r5;
        android.os.Bundle r6;
        java.lang.Boolean $r10;

        r5 := @parameter0: android.content.Context;

        r0 := @parameter1: java.lang.String;

     label1:
        $r1 = virtualinvoke r5.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r2 = <android.provider.BlockedNumberContract: android.net.Uri AUTHORITY_URI>;

        r6 = virtualinvoke $r1.<android.content.ContentResolver: android.os.Bundle call(android.net.Uri,java.lang.String,java.lang.String,android.os.Bundle)>($r2, "is_blocked", r0, null);

     label2:
        if r6 == null goto label5;

     label3:
        $z0 = virtualinvoke r6.<android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>("blocked", 0);

        if $z0 == 0 goto label5;

     label4:
        z1 = 1;

        goto label6;

     label5:
        z1 = 0;

     label6:
        $r7 = <android.provider.BlockedNumberContract: java.lang.String LOG_TAG>;

        $r8 = newarray (java.lang.Object)[2];

        $r9 = staticinvoke <android.telecom.Log: java.lang.String piiHandle(java.lang.Object)>(r0);

        $r8[0] = $r9;

        $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z1);

        $r8[1] = $r10;

        staticinvoke <android.telecom.Log: void d(java.lang.String,java.lang.String,java.lang.Object[])>($r7, "isBlocked: phoneNumber=%s, isBlocked=%b", $r8);

     label7:
        return z1;

     label8:
        $r3 := @caughtexception;

        $r4 = newarray (java.lang.Object)[0];

        staticinvoke <android.telecom.Log: void w(java.lang.String,java.lang.String,java.lang.Object[])>(null, "isBlocked: provider not ready.", $r4);

        return 0;

        catch java.lang.NullPointerException from label1 to label2 with label8;
        catch java.lang.IllegalArgumentException from label1 to label2 with label8;
        catch java.lang.NullPointerException from label3 to label4 with label8;
        catch java.lang.IllegalArgumentException from label3 to label4 with label8;
        catch java.lang.NullPointerException from label6 to label7 with label8;
        catch java.lang.IllegalArgumentException from label6 to label7 with label8;
    }

    public static int unblock(android.content.Context, java.lang.String)
    {
        android.content.Context r0;
        java.lang.String r1, $r3, $r4;
        java.lang.Object[] $r2;
        android.content.ContentResolver $r5;
        android.net.Uri $r6;
        android.os.Bundle $r7;
        int $i0;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.String;

        $r3 = <android.provider.BlockedNumberContract: java.lang.String LOG_TAG>;

        $r2 = newarray (java.lang.Object)[1];

        $r4 = staticinvoke <android.telecom.Log: java.lang.String piiHandle(java.lang.Object)>(r1);

        $r2[0] = $r4;

        staticinvoke <android.telecom.Log: void d(java.lang.String,java.lang.String,java.lang.Object[])>($r3, "unblock: phoneNumber=%s", $r2);

        $r5 = virtualinvoke r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r6 = <android.provider.BlockedNumberContract: android.net.Uri AUTHORITY_URI>;

        $r7 = virtualinvoke $r5.<android.content.ContentResolver: android.os.Bundle call(android.net.Uri,java.lang.String,java.lang.String,android.os.Bundle)>($r6, "unblock", r1, null);

        $i0 = virtualinvoke $r7.<android.os.Bundle: int getInt(java.lang.String,int)>("num_deleted", 0);

        return $i0;
    }
}
