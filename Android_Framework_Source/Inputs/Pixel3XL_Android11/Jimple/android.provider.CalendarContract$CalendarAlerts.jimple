public final class android.provider.CalendarContract$CalendarAlerts extends java.lang.Object implements android.provider.BaseColumns, android.provider.CalendarContract$CalendarAlertsColumns, android.provider.CalendarContract$EventsColumns, android.provider.CalendarContract$CalendarColumns
{
    public static final android.net.Uri CONTENT_URI;
    public static final android.net.Uri CONTENT_URI_BY_INSTANCE;
    private static final boolean DEBUG;
    private static final java.lang.String SORT_ORDER_ALARMTIME_ASC;
    public static final java.lang.String TABLE_NAME;
    private static final java.lang.String WHERE_ALARM_EXISTS;
    private static final java.lang.String WHERE_FINDNEXTALARMTIME;
    private static final java.lang.String WHERE_RESCHEDULE_MISSED_ALARMS;

    static void <clinit>()
    {
        android.net.Uri $r0, $r1;

        <android.provider.CalendarContract$CalendarAlerts: java.lang.String WHERE_RESCHEDULE_MISSED_ALARMS> = "state=0 AND alarmTime<? AND alarmTime>? AND end>=?";

        <android.provider.CalendarContract$CalendarAlerts: java.lang.String WHERE_FINDNEXTALARMTIME> = "alarmTime>=?";

        <android.provider.CalendarContract$CalendarAlerts: java.lang.String WHERE_ALARM_EXISTS> = "event_id=? AND begin=? AND alarmTime=?";

        <android.provider.CalendarContract$CalendarAlerts: java.lang.String TABLE_NAME> = "CalendarAlerts";

        <android.provider.CalendarContract$CalendarAlerts: java.lang.String SORT_ORDER_ALARMTIME_ASC> = "alarmTime ASC";

        <android.provider.CalendarContract$CalendarAlerts: boolean DEBUG> = 0;

        $r0 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>("content://com.android.calendar/calendar_alerts");

        <android.provider.CalendarContract$CalendarAlerts: android.net.Uri CONTENT_URI> = $r0;

        $r1 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>("content://com.android.calendar/calendar_alerts/by_instance");

        <android.provider.CalendarContract$CalendarAlerts: android.net.Uri CONTENT_URI_BY_INSTANCE> = $r1;

        return;
    }

    private void <init>()
    {
        android.provider.CalendarContract$CalendarAlerts r0;

        r0 := @this: android.provider.CalendarContract$CalendarAlerts;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static final boolean alarmExists(android.content.ContentResolver, long, long, long)
    {
        long l0, l1, l2;
        android.net.Uri r0;
        java.lang.String r1, r2, r7;
        int i3;
        java.lang.String[] $r3, $r4;
        java.lang.Throwable $r5;
        android.content.ContentResolver r6;
        android.database.Cursor r8;
        boolean z1;

        r6 := @parameter0: android.content.ContentResolver;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        l2 := @parameter3: long;

        r0 = <android.provider.CalendarContract$CalendarAlerts: android.net.Uri CONTENT_URI>;

        r1 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0);

        r2 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l1);

        r7 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l2);

        $r3 = newarray (java.lang.String)[1];

        $r3[0] = "alarmTime";

        $r4 = newarray (java.lang.String)[3];

        $r4[0] = r1;

        $r4[1] = r2;

        $r4[2] = r7;

        r8 = virtualinvoke r6.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>(r0, $r3, "event_id=? AND begin=? AND alarmTime=?", $r4, null);

        z1 = 0;

        if r8 == null goto label5;

     label1:
        i3 = interfaceinvoke r8.<android.database.Cursor: int getCount()>();

     label2:
        z1 = 0;

        if i3 <= 0 goto label5;

        z1 = 1;

        goto label5;

     label3:
        $r5 := @caughtexception;

        if r8 == null goto label4;

        interfaceinvoke r8.<android.database.Cursor: void close()>();

     label4:
        throw $r5;

     label5:
        if r8 == null goto label6;

        interfaceinvoke r8.<android.database.Cursor: void close()>();

     label6:
        return z1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public static final long findNextAlarmTime(android.content.ContentResolver, long)
    {
        java.lang.String r0;
        java.lang.StringBuilder $r1;
        java.lang.String[] $r5, $r6;
        boolean $z0;
        java.lang.Throwable $r7;
        android.content.ContentResolver r8;
        long l1, l2;
        android.net.Uri r10;
        android.database.Cursor r11;

        r8 := @parameter0: android.content.ContentResolver;

        l1 := @parameter1: long;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("alarmTime>=");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l1);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        r10 = <android.provider.CalendarContract$CalendarAlerts: android.net.Uri CONTENT_URI>;

        r0 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l1);

        $r5 = newarray (java.lang.String)[1];

        $r5[0] = "alarmTime";

        $r6 = newarray (java.lang.String)[1];

        $r6[0] = r0;

        r11 = virtualinvoke r8.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>(r10, $r5, "alarmTime>=?", $r6, "alarmTime ASC");

        l2 = -1L;

        if r11 == null goto label5;

        l2 = -1L;

     label1:
        $z0 = interfaceinvoke r11.<android.database.Cursor: boolean moveToFirst()>();

        if $z0 == 0 goto label5;

        l2 = interfaceinvoke r11.<android.database.Cursor: long getLong(int)>(0);

     label2:
        goto label5;

     label3:
        $r7 := @caughtexception;

        if r11 == null goto label4;

        interfaceinvoke r11.<android.database.Cursor: void close()>();

     label4:
        throw $r7;

     label5:
        if r11 == null goto label6;

        interfaceinvoke r11.<android.database.Cursor: void close()>();

     label6:
        return l2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public static final android.net.Uri insert(android.content.ContentResolver, long, long, long, long, int)
    {
        android.content.ContentResolver r0;
        long l0, l1, l2, l3, $l5;
        int i4;
        java.lang.Integer r2, $r9;
        android.content.ContentValues $r3;
        java.lang.Long $r4, $r5, $r6, $r7, $r8;
        android.net.Uri $r10, $r11;

        r0 := @parameter0: android.content.ContentResolver;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        l2 := @parameter3: long;

        l3 := @parameter4: long;

        i4 := @parameter5: int;

        $r3 = new android.content.ContentValues;

        specialinvoke $r3.<android.content.ContentValues: void <init>()>();

        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        virtualinvoke $r3.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("event_id", $r4);

        $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l1);

        virtualinvoke $r3.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("begin", $r5);

        $r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l2);

        virtualinvoke $r3.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("end", $r6);

        $r7 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l3);

        virtualinvoke $r3.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("alarmTime", $r7);

        $l5 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r8 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l5);

        virtualinvoke $r3.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("creationTime", $r8);

        r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        virtualinvoke $r3.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("receivedTime", r2);

        virtualinvoke $r3.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("notifyTime", r2);

        virtualinvoke $r3.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("state", r2);

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i4);

        virtualinvoke $r3.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("minutes", $r9);

        $r10 = <android.provider.CalendarContract$CalendarAlerts: android.net.Uri CONTENT_URI>;

        $r11 = virtualinvoke r0.<android.content.ContentResolver: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>($r10, $r3);

        return $r11;
    }

    public static final void rescheduleMissedAlarms(android.content.ContentResolver, android.content.Context, android.app.AlarmManager)
    {
        android.app.AlarmManager r0;
        android.net.Uri r1;
        java.lang.String r2, r3, r4;
        long l0, $l1, l3, l4, l5;
        java.lang.String[] $r5, $r6;
        boolean $z0;
        byte $b2;
        java.lang.Throwable $r7;
        android.content.ContentResolver r8;
        android.content.Context r9;
        android.database.Cursor r10;

        r8 := @parameter0: android.content.ContentResolver;

        r9 := @parameter1: android.content.Context;

        r0 := @parameter2: android.app.AlarmManager;

        l3 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r1 = <android.provider.CalendarContract$CalendarAlerts: android.net.Uri CONTENT_URI>;

        r2 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l3);

        $l1 = l3 - 86400000L;

        r3 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l1);

        r4 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l3);

        $r5 = newarray (java.lang.String)[1];

        $r5[0] = "alarmTime";

        $r6 = newarray (java.lang.String)[3];

        $r6[0] = r2;

        $r6[1] = r3;

        $r6[2] = r4;

        r10 = virtualinvoke r8.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>(r1, $r5, "state=0 AND alarmTime<? AND alarmTime>? AND end>=?", $r6, "alarmTime ASC");

        if r10 != null goto label1;

        return;

     label1:
        l4 = -1L;

     label2:
        $z0 = interfaceinvoke r10.<android.database.Cursor: boolean moveToNext()>();

        if $z0 == 0 goto label7;

        l0 = interfaceinvoke r10.<android.database.Cursor: long getLong(int)>(0);

     label3:
        l5 = l4;

        $b2 = l4 cmp l0;

        if $b2 == 0 goto label6;

     label4:
        staticinvoke <android.provider.CalendarContract$CalendarAlerts: void scheduleAlarm(android.content.Context,android.app.AlarmManager,long)>(r9, r0, l0);

     label5:
        l5 = l0;

     label6:
        l4 = l5;

        goto label2;

     label7:
        interfaceinvoke r10.<android.database.Cursor: void close()>();

        return;

     label8:
        $r7 := @caughtexception;

        interfaceinvoke r10.<android.database.Cursor: void close()>();

        throw $r7;

        catch java.lang.Throwable from label2 to label3 with label8;
        catch java.lang.Throwable from label4 to label5 with label8;
    }

    public static void scheduleAlarm(android.content.Context, android.app.AlarmManager, long)
    {
        android.content.Context r0;
        long l0;
        android.content.Intent $r1;
        android.net.Uri $r2, $r3;
        android.app.PendingIntent $r7;
        java.lang.Object $r8;
        android.app.AlarmManager r9, r10;

        r0 := @parameter0: android.content.Context;

        r9 := @parameter1: android.app.AlarmManager;

        l0 := @parameter2: long;

        r10 = r9;

        if r9 != null goto label1;

        $r8 = virtualinvoke r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("alarm");

        r10 = (android.app.AlarmManager) $r8;

     label1:
        $r1 = new android.content.Intent;

        specialinvoke $r1.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.EVENT_REMINDER");

        $r2 = <android.provider.CalendarContract: android.net.Uri CONTENT_URI>;

        $r3 = staticinvoke <android.content.ContentUris: android.net.Uri withAppendedId(android.net.Uri,long)>($r2, l0);

        virtualinvoke $r1.<android.content.Intent: android.content.Intent setData(android.net.Uri)>($r3);

        virtualinvoke $r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,long)>("alarmTime", l0);

        virtualinvoke $r1.<android.content.Intent: android.content.Intent setFlags(int)>(16777216);

        $r7 = staticinvoke <android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)>(r0, 0, $r1, 0);

        virtualinvoke r10.<android.app.AlarmManager: void setExactAndAllowWhileIdle(int,long,android.app.PendingIntent)>(0, l0, $r7);

        return;
    }
}
