class android.provider.CalendarContract$EventsEntity$EntityIteratorImpl extends android.content.CursorEntityIterator
{
    private static final java.lang.String[] ATTENDEES_PROJECTION;
    private static final int COLUMN_ATTENDEE_EMAIL;
    private static final int COLUMN_ATTENDEE_IDENTITY;
    private static final int COLUMN_ATTENDEE_ID_NAMESPACE;
    private static final int COLUMN_ATTENDEE_NAME;
    private static final int COLUMN_ATTENDEE_RELATIONSHIP;
    private static final int COLUMN_ATTENDEE_STATUS;
    private static final int COLUMN_ATTENDEE_TYPE;
    private static final int COLUMN_ID;
    private static final int COLUMN_METHOD;
    private static final int COLUMN_MINUTES;
    private static final int COLUMN_NAME;
    private static final int COLUMN_VALUE;
    private static final java.lang.String[] EXTENDED_PROJECTION;
    private static final java.lang.String[] REMINDERS_PROJECTION;
    private static final java.lang.String WHERE_EVENT_ID;
    private final android.content.ContentProviderClient mProvider;
    private final android.content.ContentResolver mResolver;

    static void <clinit>()
    {
        java.lang.String[] $r0, $r1, $r2;

        <android.provider.CalendarContract$EventsEntity$EntityIteratorImpl: java.lang.String WHERE_EVENT_ID> = "event_id=?";

        <android.provider.CalendarContract$EventsEntity$EntityIteratorImpl: int COLUMN_VALUE> = 2;

        <android.provider.CalendarContract$EventsEntity$EntityIteratorImpl: int COLUMN_NAME> = 1;

        <android.provider.CalendarContract$EventsEntity$EntityIteratorImpl: int COLUMN_MINUTES> = 0;

        <android.provider.CalendarContract$EventsEntity$EntityIteratorImpl: int COLUMN_METHOD> = 1;

        <android.provider.CalendarContract$EventsEntity$EntityIteratorImpl: int COLUMN_ID> = 0;

        <android.provider.CalendarContract$EventsEntity$EntityIteratorImpl: int COLUMN_ATTENDEE_TYPE> = 3;

        <android.provider.CalendarContract$EventsEntity$EntityIteratorImpl: int COLUMN_ATTENDEE_STATUS> = 4;

        <android.provider.CalendarContract$EventsEntity$EntityIteratorImpl: int COLUMN_ATTENDEE_RELATIONSHIP> = 2;

        <android.provider.CalendarContract$EventsEntity$EntityIteratorImpl: int COLUMN_ATTENDEE_NAME> = 0;

        <android.provider.CalendarContract$EventsEntity$EntityIteratorImpl: int COLUMN_ATTENDEE_ID_NAMESPACE> = 6;

        <android.provider.CalendarContract$EventsEntity$EntityIteratorImpl: int COLUMN_ATTENDEE_IDENTITY> = 5;

        <android.provider.CalendarContract$EventsEntity$EntityIteratorImpl: int COLUMN_ATTENDEE_EMAIL> = 1;

        $r0 = newarray (java.lang.String)[2];

        $r0[0] = "minutes";

        $r0[1] = "method";

        <android.provider.CalendarContract$EventsEntity$EntityIteratorImpl: java.lang.String[] REMINDERS_PROJECTION> = $r0;

        $r1 = newarray (java.lang.String)[7];

        $r1[0] = "attendeeName";

        $r1[1] = "attendeeEmail";

        $r1[2] = "attendeeRelationship";

        $r1[3] = "attendeeType";

        $r1[4] = "attendeeStatus";

        $r1[5] = "attendeeIdentity";

        $r1[6] = "attendeeIdNamespace";

        <android.provider.CalendarContract$EventsEntity$EntityIteratorImpl: java.lang.String[] ATTENDEES_PROJECTION> = $r1;

        $r2 = newarray (java.lang.String)[3];

        $r2[0] = "_id";

        $r2[1] = "name";

        $r2[2] = "value";

        <android.provider.CalendarContract$EventsEntity$EntityIteratorImpl: java.lang.String[] EXTENDED_PROJECTION> = $r2;

        return;
    }

    public void <init>(android.database.Cursor, android.content.ContentProviderClient)
    {
        android.provider.CalendarContract$EventsEntity$EntityIteratorImpl r0;
        android.database.Cursor r1;
        android.content.ContentProviderClient r2;

        r0 := @this: android.provider.CalendarContract$EventsEntity$EntityIteratorImpl;

        r1 := @parameter0: android.database.Cursor;

        r2 := @parameter1: android.content.ContentProviderClient;

        specialinvoke r0.<android.content.CursorEntityIterator: void <init>(android.database.Cursor)>(r1);

        r0.<android.provider.CalendarContract$EventsEntity$EntityIteratorImpl: android.content.ContentResolver mResolver> = null;

        r0.<android.provider.CalendarContract$EventsEntity$EntityIteratorImpl: android.content.ContentProviderClient mProvider> = r2;

        return;
    }

    public void <init>(android.database.Cursor, android.content.ContentResolver)
    {
        android.provider.CalendarContract$EventsEntity$EntityIteratorImpl r0;
        android.database.Cursor r1;
        android.content.ContentResolver r2;

        r0 := @this: android.provider.CalendarContract$EventsEntity$EntityIteratorImpl;

        r1 := @parameter0: android.database.Cursor;

        r2 := @parameter1: android.content.ContentResolver;

        specialinvoke r0.<android.content.CursorEntityIterator: void <init>(android.database.Cursor)>(r1);

        r0.<android.provider.CalendarContract$EventsEntity$EntityIteratorImpl: android.content.ContentResolver mResolver> = r2;

        r0.<android.provider.CalendarContract$EventsEntity$EntityIteratorImpl: android.content.ContentProviderClient mProvider> = null;

        return;
    }

    public android.content.Entity getEntityAndIncrementCursor(android.database.Cursor) throws android.os.RemoteException
    {
        android.provider.CalendarContract$EventsEntity$EntityIteratorImpl r0;
        long l0;
        int $i1, $i2, $i3, $i4, $i5, $i6;
        android.content.ContentValues $r2, r54, r57, r60;
        java.lang.Long $r3;
        android.content.Entity $r4;
        java.lang.String[] $r5, $r8, $r10, $r13, $r15, $r18, $r24, $r26, $r36, $r38, $r43, $r45;
        android.content.ContentProviderClient $r6, $r11, $r16;
        android.net.Uri $r7, $r12, $r17, $r23, $r25, $r35, $r37, $r42, $r44;
        java.lang.String $r9, $r14, $r19, $r20, $r21, $r22, $r27, $r28, $r29, $r33, $r34, $r39, $r46;
        java.lang.Integer $r30, $r31, $r32, $r40, $r41;
        java.lang.Throwable $r47, $r48, $r49;
        android.database.Cursor r50, r53, r56, r59;
        android.content.ContentResolver r52, r55, r58;
        boolean $z1, $z2, $z3;

        r0 := @this: android.provider.CalendarContract$EventsEntity$EntityIteratorImpl;

        r50 := @parameter0: android.database.Cursor;

        $i1 = interfaceinvoke r50.<android.database.Cursor: int getColumnIndexOrThrow(java.lang.String)>("_id");

        l0 = interfaceinvoke r50.<android.database.Cursor: long getLong(int)>($i1);

        $r2 = new android.content.ContentValues;

        specialinvoke $r2.<android.content.ContentValues: void <init>()>();

        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        virtualinvoke $r2.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("_id", $r3);

        staticinvoke <android.database.DatabaseUtils: void cursorIntToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r50, $r2, "calendar_id");

        staticinvoke <android.database.DatabaseUtils: void cursorStringToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r50, $r2, "title");

        staticinvoke <android.database.DatabaseUtils: void cursorStringToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r50, $r2, "description");

        staticinvoke <android.database.DatabaseUtils: void cursorStringToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r50, $r2, "eventLocation");

        staticinvoke <android.database.DatabaseUtils: void cursorIntToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r50, $r2, "eventStatus");

        staticinvoke <android.database.DatabaseUtils: void cursorIntToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r50, $r2, "selfAttendeeStatus");

        staticinvoke <android.database.DatabaseUtils: void cursorLongToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r50, $r2, "dtstart");

        staticinvoke <android.database.DatabaseUtils: void cursorLongToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r50, $r2, "dtend");

        staticinvoke <android.database.DatabaseUtils: void cursorStringToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r50, $r2, "duration");

        staticinvoke <android.database.DatabaseUtils: void cursorStringToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r50, $r2, "eventTimezone");

        staticinvoke <android.database.DatabaseUtils: void cursorStringToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r50, $r2, "eventEndTimezone");

        staticinvoke <android.database.DatabaseUtils: void cursorStringToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r50, $r2, "allDay");

        staticinvoke <android.database.DatabaseUtils: void cursorIntToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r50, $r2, "accessLevel");

        staticinvoke <android.database.DatabaseUtils: void cursorIntToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r50, $r2, "availability");

        staticinvoke <android.database.DatabaseUtils: void cursorIntToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r50, $r2, "eventColor");

        staticinvoke <android.database.DatabaseUtils: void cursorStringToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r50, $r2, "eventColor_index");

        staticinvoke <android.database.DatabaseUtils: void cursorStringToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r50, $r2, "hasAlarm");

        staticinvoke <android.database.DatabaseUtils: void cursorStringToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r50, $r2, "hasExtendedProperties");

        staticinvoke <android.database.DatabaseUtils: void cursorStringToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r50, $r2, "rrule");

        staticinvoke <android.database.DatabaseUtils: void cursorStringToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r50, $r2, "rdate");

        staticinvoke <android.database.DatabaseUtils: void cursorStringToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r50, $r2, "exrule");

        staticinvoke <android.database.DatabaseUtils: void cursorStringToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r50, $r2, "exdate");

        staticinvoke <android.database.DatabaseUtils: void cursorStringToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r50, $r2, "original_sync_id");

        staticinvoke <android.database.DatabaseUtils: void cursorStringToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r50, $r2, "original_id");

        staticinvoke <android.database.DatabaseUtils: void cursorLongToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r50, $r2, "originalInstanceTime");

        staticinvoke <android.database.DatabaseUtils: void cursorIntToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r50, $r2, "originalAllDay");

        staticinvoke <android.database.DatabaseUtils: void cursorLongToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r50, $r2, "lastDate");

        staticinvoke <android.database.DatabaseUtils: void cursorIntToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r50, $r2, "hasAttendeeData");

        staticinvoke <android.database.DatabaseUtils: void cursorIntToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r50, $r2, "guestsCanInviteOthers");

        staticinvoke <android.database.DatabaseUtils: void cursorIntToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r50, $r2, "guestsCanModify");

        staticinvoke <android.database.DatabaseUtils: void cursorIntToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r50, $r2, "guestsCanSeeGuests");

        staticinvoke <android.database.DatabaseUtils: void cursorStringToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r50, $r2, "customAppPackage");

        staticinvoke <android.database.DatabaseUtils: void cursorStringToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r50, $r2, "customAppUri");

        staticinvoke <android.database.DatabaseUtils: void cursorStringToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r50, $r2, "uid2445");

        staticinvoke <android.database.DatabaseUtils: void cursorStringToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r50, $r2, "organizer");

        staticinvoke <android.database.DatabaseUtils: void cursorStringToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r50, $r2, "isOrganizer");

        staticinvoke <android.database.DatabaseUtils: void cursorStringToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r50, $r2, "_sync_id");

        staticinvoke <android.database.DatabaseUtils: void cursorLongToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r50, $r2, "dirty");

        staticinvoke <android.database.DatabaseUtils: void cursorStringToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r50, $r2, "mutators");

        staticinvoke <android.database.DatabaseUtils: void cursorLongToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r50, $r2, "lastSynced");

        staticinvoke <android.database.DatabaseUtils: void cursorIntToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r50, $r2, "deleted");

        staticinvoke <android.database.DatabaseUtils: void cursorStringToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r50, $r2, "sync_data1");

        staticinvoke <android.database.DatabaseUtils: void cursorStringToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r50, $r2, "sync_data2");

        staticinvoke <android.database.DatabaseUtils: void cursorStringToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r50, $r2, "sync_data3");

        staticinvoke <android.database.DatabaseUtils: void cursorStringToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r50, $r2, "sync_data4");

        staticinvoke <android.database.DatabaseUtils: void cursorStringToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r50, $r2, "sync_data5");

        staticinvoke <android.database.DatabaseUtils: void cursorStringToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r50, $r2, "sync_data6");

        staticinvoke <android.database.DatabaseUtils: void cursorStringToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r50, $r2, "sync_data7");

        staticinvoke <android.database.DatabaseUtils: void cursorStringToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r50, $r2, "sync_data8");

        staticinvoke <android.database.DatabaseUtils: void cursorStringToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r50, $r2, "sync_data9");

        staticinvoke <android.database.DatabaseUtils: void cursorStringToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r50, $r2, "sync_data10");

        staticinvoke <android.database.DatabaseUtils: void cursorStringToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r50, $r2, "cal_sync1");

        staticinvoke <android.database.DatabaseUtils: void cursorStringToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r50, $r2, "cal_sync2");

        staticinvoke <android.database.DatabaseUtils: void cursorStringToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r50, $r2, "cal_sync3");

        staticinvoke <android.database.DatabaseUtils: void cursorStringToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r50, $r2, "cal_sync4");

        staticinvoke <android.database.DatabaseUtils: void cursorStringToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r50, $r2, "cal_sync5");

        staticinvoke <android.database.DatabaseUtils: void cursorStringToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r50, $r2, "cal_sync6");

        staticinvoke <android.database.DatabaseUtils: void cursorStringToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r50, $r2, "cal_sync7");

        staticinvoke <android.database.DatabaseUtils: void cursorStringToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r50, $r2, "cal_sync8");

        staticinvoke <android.database.DatabaseUtils: void cursorStringToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r50, $r2, "cal_sync9");

        staticinvoke <android.database.DatabaseUtils: void cursorStringToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r50, $r2, "cal_sync10");

        $r4 = new android.content.Entity;

        specialinvoke $r4.<android.content.Entity: void <init>(android.content.ContentValues)>($r2);

        r52 = r0.<android.provider.CalendarContract$EventsEntity$EntityIteratorImpl: android.content.ContentResolver mResolver>;

        if r52 == null goto label01;

        $r44 = <android.provider.CalendarContract$Reminders: android.net.Uri CONTENT_URI>;

        $r45 = <android.provider.CalendarContract$EventsEntity$EntityIteratorImpl: java.lang.String[] REMINDERS_PROJECTION>;

        $r43 = newarray (java.lang.String)[1];

        $r46 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0);

        $r43[0] = $r46;

        r53 = virtualinvoke r52.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($r44, $r45, "event_id=?", $r43, null);

        goto label02;

     label01:
        $r6 = r0.<android.provider.CalendarContract$EventsEntity$EntityIteratorImpl: android.content.ContentProviderClient mProvider>;

        $r7 = <android.provider.CalendarContract$Reminders: android.net.Uri CONTENT_URI>;

        $r8 = <android.provider.CalendarContract$EventsEntity$EntityIteratorImpl: java.lang.String[] REMINDERS_PROJECTION>;

        $r5 = newarray (java.lang.String)[1];

        $r9 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0);

        $r5[0] = $r9;

        r53 = virtualinvoke $r6.<android.content.ContentProviderClient: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($r7, $r8, "event_id=?", $r5, null);

     label02:
        $z1 = interfaceinvoke r53.<android.database.Cursor: boolean moveToNext()>();

        if $z1 == 0 goto label04;

        r54 = new android.content.ContentValues;

        specialinvoke r54.<android.content.ContentValues: void <init>()>();

        $i5 = interfaceinvoke r53.<android.database.Cursor: int getInt(int)>(0);

        $r40 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5);

        virtualinvoke r54.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("minutes", $r40);

        $i6 = interfaceinvoke r53.<android.database.Cursor: int getInt(int)>(1);

        $r41 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i6);

        virtualinvoke r54.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("method", $r41);

        $r42 = <android.provider.CalendarContract$Reminders: android.net.Uri CONTENT_URI>;

        virtualinvoke $r4.<android.content.Entity: void addSubValue(android.net.Uri,android.content.ContentValues)>($r42, r54);

     label03:
        goto label02;

     label04:
        interfaceinvoke r53.<android.database.Cursor: void close()>();

        r55 = r0.<android.provider.CalendarContract$EventsEntity$EntityIteratorImpl: android.content.ContentResolver mResolver>;

        if r55 == null goto label05;

        $r37 = <android.provider.CalendarContract$Attendees: android.net.Uri CONTENT_URI>;

        $r38 = <android.provider.CalendarContract$EventsEntity$EntityIteratorImpl: java.lang.String[] ATTENDEES_PROJECTION>;

        $r36 = newarray (java.lang.String)[1];

        $r39 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0);

        $r36[0] = $r39;

        r56 = virtualinvoke r55.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($r37, $r38, "event_id=?", $r36, null);

        goto label06;

     label05:
        $r11 = r0.<android.provider.CalendarContract$EventsEntity$EntityIteratorImpl: android.content.ContentProviderClient mProvider>;

        $r12 = <android.provider.CalendarContract$Attendees: android.net.Uri CONTENT_URI>;

        $r13 = <android.provider.CalendarContract$EventsEntity$EntityIteratorImpl: java.lang.String[] ATTENDEES_PROJECTION>;

        $r10 = newarray (java.lang.String)[1];

        $r14 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0);

        $r10[0] = $r14;

        r56 = virtualinvoke $r11.<android.content.ContentProviderClient: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($r12, $r13, "event_id=?", $r10, null);

     label06:
        $z2 = interfaceinvoke r56.<android.database.Cursor: boolean moveToNext()>();

        if $z2 == 0 goto label08;

        r57 = new android.content.ContentValues;

        specialinvoke r57.<android.content.ContentValues: void <init>()>();

        $r28 = interfaceinvoke r56.<android.database.Cursor: java.lang.String getString(int)>(0);

        virtualinvoke r57.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("attendeeName", $r28);

        $r29 = interfaceinvoke r56.<android.database.Cursor: java.lang.String getString(int)>(1);

        virtualinvoke r57.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("attendeeEmail", $r29);

        $i2 = interfaceinvoke r56.<android.database.Cursor: int getInt(int)>(2);

        $r30 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        virtualinvoke r57.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("attendeeRelationship", $r30);

        $i3 = interfaceinvoke r56.<android.database.Cursor: int getInt(int)>(3);

        $r31 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        virtualinvoke r57.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("attendeeType", $r31);

        $i4 = interfaceinvoke r56.<android.database.Cursor: int getInt(int)>(4);

        $r32 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        virtualinvoke r57.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("attendeeStatus", $r32);

        $r33 = interfaceinvoke r56.<android.database.Cursor: java.lang.String getString(int)>(5);

        virtualinvoke r57.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("attendeeIdentity", $r33);

        $r34 = interfaceinvoke r56.<android.database.Cursor: java.lang.String getString(int)>(6);

        virtualinvoke r57.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("attendeeIdNamespace", $r34);

        $r35 = <android.provider.CalendarContract$Attendees: android.net.Uri CONTENT_URI>;

        virtualinvoke $r4.<android.content.Entity: void addSubValue(android.net.Uri,android.content.ContentValues)>($r35, r57);

     label07:
        goto label06;

     label08:
        interfaceinvoke r56.<android.database.Cursor: void close()>();

        r58 = r0.<android.provider.CalendarContract$EventsEntity$EntityIteratorImpl: android.content.ContentResolver mResolver>;

        if r58 == null goto label09;

        $r25 = <android.provider.CalendarContract$ExtendedProperties: android.net.Uri CONTENT_URI>;

        $r26 = <android.provider.CalendarContract$EventsEntity$EntityIteratorImpl: java.lang.String[] EXTENDED_PROJECTION>;

        $r24 = newarray (java.lang.String)[1];

        $r27 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0);

        $r24[0] = $r27;

        r59 = virtualinvoke r58.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($r25, $r26, "event_id=?", $r24, null);

        goto label10;

     label09:
        $r16 = r0.<android.provider.CalendarContract$EventsEntity$EntityIteratorImpl: android.content.ContentProviderClient mProvider>;

        $r17 = <android.provider.CalendarContract$ExtendedProperties: android.net.Uri CONTENT_URI>;

        $r18 = <android.provider.CalendarContract$EventsEntity$EntityIteratorImpl: java.lang.String[] EXTENDED_PROJECTION>;

        $r15 = newarray (java.lang.String)[1];

        $r19 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0);

        $r15[0] = $r19;

        r59 = virtualinvoke $r16.<android.content.ContentProviderClient: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($r17, $r18, "event_id=?", $r15, null);

     label10:
        $z3 = interfaceinvoke r59.<android.database.Cursor: boolean moveToNext()>();

        if $z3 == 0 goto label13;

        r60 = new android.content.ContentValues;

        specialinvoke r60.<android.content.ContentValues: void <init>()>();

     label11:
        $r20 = interfaceinvoke r59.<android.database.Cursor: java.lang.String getString(int)>(0);

        virtualinvoke r60.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("_id", $r20);

        $r21 = interfaceinvoke r59.<android.database.Cursor: java.lang.String getString(int)>(1);

        virtualinvoke r60.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("name", $r21);

        $r22 = interfaceinvoke r59.<android.database.Cursor: java.lang.String getString(int)>(2);

        virtualinvoke r60.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("value", $r22);

        $r23 = <android.provider.CalendarContract$ExtendedProperties: android.net.Uri CONTENT_URI>;

        virtualinvoke $r4.<android.content.Entity: void addSubValue(android.net.Uri,android.content.ContentValues)>($r23, r60);

     label12:
        goto label10;

     label13:
        interfaceinvoke r59.<android.database.Cursor: void close()>();

        interfaceinvoke r50.<android.database.Cursor: boolean moveToNext()>();

        return $r4;

     label14:
        $r48 := @caughtexception;

        interfaceinvoke r59.<android.database.Cursor: void close()>();

        throw $r48;

     label15:
        $r49 := @caughtexception;

        interfaceinvoke r56.<android.database.Cursor: void close()>();

        throw $r49;

     label16:
        $r47 := @caughtexception;

        interfaceinvoke r53.<android.database.Cursor: void close()>();

        throw $r47;

        catch java.lang.Throwable from label02 to label03 with label16;
        catch java.lang.Throwable from label06 to label07 with label15;
        catch java.lang.Throwable from label10 to label11 with label14;
        catch java.lang.Throwable from label11 to label12 with label14;
    }
}
