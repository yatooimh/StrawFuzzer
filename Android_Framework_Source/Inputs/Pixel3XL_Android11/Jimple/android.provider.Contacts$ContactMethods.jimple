public final class android.provider.Contacts$ContactMethods extends java.lang.Object implements android.provider.BaseColumns, android.provider.Contacts$ContactMethodsColumns, android.provider.Contacts$PeopleColumns
{
    public static final java.lang.String CONTENT_EMAIL_ITEM_TYPE;
    public static final java.lang.String CONTENT_EMAIL_TYPE;
    public static final android.net.Uri CONTENT_EMAIL_URI;
    public static final java.lang.String CONTENT_IM_ITEM_TYPE;
    public static final java.lang.String CONTENT_POSTAL_ITEM_TYPE;
    public static final java.lang.String CONTENT_POSTAL_TYPE;
    public static final java.lang.String CONTENT_TYPE;
    public static final android.net.Uri CONTENT_URI;
    public static final java.lang.String DEFAULT_SORT_ORDER;
    public static final java.lang.String PERSON_ID;
    public static final java.lang.String POSTAL_LOCATION_LATITUDE;
    public static final java.lang.String POSTAL_LOCATION_LONGITUDE;
    public static final int PROTOCOL_AIM;
    public static final int PROTOCOL_GOOGLE_TALK;
    public static final int PROTOCOL_ICQ;
    public static final int PROTOCOL_JABBER;
    public static final int PROTOCOL_MSN;
    public static final int PROTOCOL_QQ;
    public static final int PROTOCOL_SKYPE;
    public static final int PROTOCOL_YAHOO;

    static void <clinit>()
    {
        android.net.Uri $r0, $r1;

        <android.provider.Contacts$ContactMethods: int PROTOCOL_YAHOO> = 2;

        <android.provider.Contacts$ContactMethods: int PROTOCOL_SKYPE> = 3;

        <android.provider.Contacts$ContactMethods: int PROTOCOL_QQ> = 4;

        <android.provider.Contacts$ContactMethods: int PROTOCOL_MSN> = 1;

        <android.provider.Contacts$ContactMethods: int PROTOCOL_JABBER> = 7;

        <android.provider.Contacts$ContactMethods: int PROTOCOL_ICQ> = 6;

        <android.provider.Contacts$ContactMethods: int PROTOCOL_GOOGLE_TALK> = 5;

        <android.provider.Contacts$ContactMethods: int PROTOCOL_AIM> = 0;

        <android.provider.Contacts$ContactMethods: java.lang.String POSTAL_LOCATION_LONGITUDE> = "aux_data";

        <android.provider.Contacts$ContactMethods: java.lang.String POSTAL_LOCATION_LATITUDE> = "data";

        <android.provider.Contacts$ContactMethods: java.lang.String PERSON_ID> = "person";

        <android.provider.Contacts$ContactMethods: java.lang.String DEFAULT_SORT_ORDER> = "name ASC";

        <android.provider.Contacts$ContactMethods: java.lang.String CONTENT_TYPE> = "vnd.android.cursor.dir/contact-methods";

        <android.provider.Contacts$ContactMethods: java.lang.String CONTENT_POSTAL_TYPE> = "vnd.android.cursor.dir/postal-address";

        <android.provider.Contacts$ContactMethods: java.lang.String CONTENT_POSTAL_ITEM_TYPE> = "vnd.android.cursor.item/postal-address";

        <android.provider.Contacts$ContactMethods: java.lang.String CONTENT_IM_ITEM_TYPE> = "vnd.android.cursor.item/jabber-im";

        <android.provider.Contacts$ContactMethods: java.lang.String CONTENT_EMAIL_TYPE> = "vnd.android.cursor.dir/email";

        <android.provider.Contacts$ContactMethods: java.lang.String CONTENT_EMAIL_ITEM_TYPE> = "vnd.android.cursor.item/email";

        $r0 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>("content://contacts/contact_methods");

        <android.provider.Contacts$ContactMethods: android.net.Uri CONTENT_URI> = $r0;

        $r1 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>("content://contacts/contact_methods/email");

        <android.provider.Contacts$ContactMethods: android.net.Uri CONTENT_EMAIL_URI> = $r1;

        return;
    }

    private void <init>()
    {
        android.provider.Contacts$ContactMethods r0;

        r0 := @this: android.provider.Contacts$ContactMethods;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.Object decodeImProtocol(java.lang.String)
    {
        java.lang.String r0, $r6, $r7, $r8;
        boolean $z0, $z1;
        java.lang.StringBuilder $r2;
        java.lang.IllegalArgumentException $r5;
        int $i0;
        java.lang.Integer $r9;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        return null;

     label1:
        $z0 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>("pre:");

        if $z0 == 0 goto label2;

        $r8 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>(4);

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r8);

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        return $r9;

     label2:
        $z1 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>("custom:");

        if $z1 == 0 goto label3;

        $r7 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>(7);

        return $r7;

     label3:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("the value is not a valid encoded protocol, ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r5;
    }

    public static java.lang.String encodeCustomImProtocol(java.lang.String)
    {
        java.lang.String r0, $r5;
        java.lang.StringBuilder $r2;

        r0 := @parameter0: java.lang.String;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("custom:");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    public static java.lang.String encodePredefinedImProtocol(int)
    {
        int i0;
        java.lang.StringBuilder $r1;
        java.lang.String $r4;

        i0 := @parameter0: int;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("pre:");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }

    public static final java.lang.CharSequence getDisplayLabel(android.content.Context, int, int, java.lang.CharSequence)
    {
        int i0, i1, $i2, $i3;
        java.lang.CharSequence r0, r8;
        boolean $z0, $z1;
        android.content.res.Resources $r2, $r3;
        android.content.Context r4;
        java.lang.Object r5;
        java.lang.CharSequence[] r6, r7;

        r4 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r0 := @parameter3: java.lang.CharSequence;

        if i0 == 1 goto label4;

        if i0 == 2 goto label1;

        r5 = virtualinvoke r4.<android.content.Context: java.lang.String getString(int)>(17039375);

        goto label7;

     label1:
        if i1 == 0 goto label3;

        $r3 = virtualinvoke r4.<android.content.Context: android.content.res.Resources getResources()>();

        r6 = virtualinvoke $r3.<android.content.res.Resources: java.lang.CharSequence[] getTextArray(int)>(17235972);

        $i3 = i1 - 1;

        r5 = r6[$i3];

        goto label2;

     label2:
        goto label7;

     label3:
        r5 = "";

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r0);

        if $z1 != 0 goto label7;

        r5 = r0;

        goto label7;

     label4:
        if i1 == 0 goto label6;

        $r2 = virtualinvoke r4.<android.content.Context: android.content.res.Resources getResources()>();

        r7 = virtualinvoke $r2.<android.content.res.Resources: java.lang.CharSequence[] getTextArray(int)>(17235968);

        $i2 = i1 - 1;

        r5 = r7[$i2];

        goto label5;

     label5:
        goto label7;

     label6:
        r5 = "";

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r0);

        if $z0 != 0 goto label7;

        r5 = r0;

     label7:
        r8 = (java.lang.CharSequence) r5;

        return r8;
    }

    public static java.lang.String lookupProviderNameFromId(int)
    {
        int i0;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 0: goto label9;
            case 1: goto label8;
            case 2: goto label7;
            case 3: goto label6;
            case 4: goto label5;
            case 5: goto label4;
            case 6: goto label3;
            case 7: goto label2;
            default: goto label1;
        };

     label1:
        return null;

     label2:
        return "JABBER";

     label3:
        return "ICQ";

     label4:
        return "GTalk";

     label5:
        return "QQ";

     label6:
        return "SKYPE";

     label7:
        return "Yahoo";

     label8:
        return "MSN";

     label9:
        return "AIM";
    }

    public void addPostalLocation(android.content.Context, long, double, double)
    {
        android.provider.Contacts$ContactMethods r0;
        long l0, l1;
        double d0, d1;
        android.content.ContentValues $r2;
        java.lang.Double $r3, $r4;
        android.net.Uri $r5, $r6, $r8, $r9;
        java.lang.Long $r7;
        android.content.Context r10;
        android.content.ContentResolver r11;

        r0 := @this: android.provider.Contacts$ContactMethods;

        r10 := @parameter0: android.content.Context;

        l0 := @parameter1: long;

        d0 := @parameter2: double;

        d1 := @parameter3: double;

        r11 = virtualinvoke r10.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r2 = new android.content.ContentValues;

        specialinvoke $r2.<android.content.ContentValues: void <init>(int)>(2);

        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        virtualinvoke $r2.<android.content.ContentValues: void put(java.lang.String,java.lang.Double)>("data", $r3);

        $r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d1);

        virtualinvoke $r2.<android.content.ContentValues: void put(java.lang.String,java.lang.Double)>("aux_data", $r4);

        $r5 = <android.provider.Contacts$ContactMethods: android.net.Uri CONTENT_URI>;

        $r6 = virtualinvoke r11.<android.content.ContentResolver: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>($r5, $r2);

        l1 = staticinvoke <android.content.ContentUris: long parseId(android.net.Uri)>($r6);

        virtualinvoke $r2.<android.content.ContentValues: void clear()>();

        $r7 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l1);

        virtualinvoke $r2.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("aux_data", $r7);

        $r8 = <android.provider.Contacts$ContactMethods: android.net.Uri CONTENT_URI>;

        $r9 = staticinvoke <android.content.ContentUris: android.net.Uri withAppendedId(android.net.Uri,long)>($r8, l0);

        virtualinvoke r11.<android.content.ContentResolver: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>($r9, $r2, null, null);

        return;
    }
}
