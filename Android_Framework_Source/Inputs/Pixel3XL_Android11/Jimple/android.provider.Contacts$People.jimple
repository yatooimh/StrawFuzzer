public final class android.provider.Contacts$People extends java.lang.Object implements android.provider.BaseColumns, android.provider.Contacts$PeopleColumns, android.provider.Contacts$PhonesColumns, android.provider.Contacts$PresenceColumns
{
    public static final android.net.Uri CONTENT_FILTER_URI;
    public static final java.lang.String CONTENT_ITEM_TYPE;
    public static final java.lang.String CONTENT_TYPE;
    public static final android.net.Uri CONTENT_URI;
    public static final java.lang.String DEFAULT_SORT_ORDER;
    public static final android.net.Uri DELETED_CONTENT_URI;
    private static final java.lang.String[] GROUPS_PROJECTION;
    public static final java.lang.String PRIMARY_EMAIL_ID;
    public static final java.lang.String PRIMARY_ORGANIZATION_ID;
    public static final java.lang.String PRIMARY_PHONE_ID;
    public static final android.net.Uri WITH_EMAIL_OR_IM_FILTER_URI;

    static void <clinit>()
    {
        android.net.Uri $r0, $r1, $r2, $r3;
        java.lang.String[] $r4;

        <android.provider.Contacts$People: java.lang.String PRIMARY_PHONE_ID> = "primary_phone";

        <android.provider.Contacts$People: java.lang.String PRIMARY_ORGANIZATION_ID> = "primary_organization";

        <android.provider.Contacts$People: java.lang.String PRIMARY_EMAIL_ID> = "primary_email";

        <android.provider.Contacts$People: java.lang.String DEFAULT_SORT_ORDER> = "name ASC";

        <android.provider.Contacts$People: java.lang.String CONTENT_TYPE> = "vnd.android.cursor.dir/person";

        <android.provider.Contacts$People: java.lang.String CONTENT_ITEM_TYPE> = "vnd.android.cursor.item/person";

        $r0 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>("content://contacts/people");

        <android.provider.Contacts$People: android.net.Uri CONTENT_URI> = $r0;

        $r1 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>("content://contacts/people/filter");

        <android.provider.Contacts$People: android.net.Uri CONTENT_FILTER_URI> = $r1;

        $r2 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>("content://contacts/deleted_people");

        <android.provider.Contacts$People: android.net.Uri DELETED_CONTENT_URI> = $r2;

        $r3 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>("content://contacts/people/with_email_or_im_filter");

        <android.provider.Contacts$People: android.net.Uri WITH_EMAIL_OR_IM_FILTER_URI> = $r3;

        $r4 = newarray (java.lang.String)[1];

        $r4[0] = "_id";

        <android.provider.Contacts$People: java.lang.String[] GROUPS_PROJECTION> = $r4;

        return;
    }

    private void <init>()
    {
        android.provider.Contacts$People r0;

        r0 := @this: android.provider.Contacts$People;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static android.net.Uri addToGroup(android.content.ContentResolver, long, long)
    {
        android.content.ContentResolver r0;
        long l0, l1;
        android.content.ContentValues $r2;
        java.lang.Long $r3, $r4;
        android.net.Uri $r5, $r6;

        r0 := @parameter0: android.content.ContentResolver;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        $r2 = new android.content.ContentValues;

        specialinvoke $r2.<android.content.ContentValues: void <init>()>();

        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        virtualinvoke $r2.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("person", $r3);

        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l1);

        virtualinvoke $r2.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("group_id", $r4);

        $r5 = <android.provider.Contacts$GroupMembership: android.net.Uri CONTENT_URI>;

        $r6 = virtualinvoke r0.<android.content.ContentResolver: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>($r5, $r2);

        return $r6;
    }

    public static android.net.Uri addToGroup(android.content.ContentResolver, long, java.lang.String)
    {
        long l0, l2, l3;
        java.lang.String[] $r0, $r1;
        android.net.Uri $r2, $r4;
        byte $b1;
        java.lang.IllegalStateException $r3;
        boolean $z0;
        java.lang.Throwable $r5;
        android.content.ContentResolver r6;
        java.lang.String r7;
        android.database.Cursor r8;

        r6 := @parameter0: android.content.ContentResolver;

        l0 := @parameter1: long;

        r7 := @parameter2: java.lang.String;

        l2 = 0L;

        $r2 = <android.provider.Contacts$Groups: android.net.Uri CONTENT_URI>;

        $r1 = <android.provider.Contacts$People: java.lang.String[] GROUPS_PROJECTION>;

        $r0 = newarray (java.lang.String)[1];

        $r0[0] = r7;

        r8 = virtualinvoke r6.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($r2, $r1, "name=?", $r0, null);

        l3 = 0L;

        if r8 == null goto label4;

     label1:
        $z0 = interfaceinvoke r8.<android.database.Cursor: boolean moveToFirst()>();

        if $z0 == 0 goto label2;

        l2 = interfaceinvoke r8.<android.database.Cursor: long getLong(int)>(0);

     label2:
        interfaceinvoke r8.<android.database.Cursor: void close()>();

        l3 = l2;

        goto label4;

     label3:
        $r5 := @caughtexception;

        interfaceinvoke r8.<android.database.Cursor: void close()>();

        throw $r5;

     label4:
        $b1 = l3 cmp 0L;

        if $b1 == 0 goto label5;

        $r4 = staticinvoke <android.provider.Contacts$People: android.net.Uri addToGroup(android.content.ContentResolver,long,long)>(r6, l0, l3);

        return $r4;

     label5:
        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Failed to find the My Contacts group");

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public static android.net.Uri addToMyContactsGroup(android.content.ContentResolver, long)
    {
        android.content.ContentResolver r0;
        long l0, l1;
        byte $b2;
        java.lang.IllegalStateException $r1;
        android.net.Uri $r2;

        r0 := @parameter0: android.content.ContentResolver;

        l0 := @parameter1: long;

        l1 = staticinvoke <android.provider.Contacts$People: long tryGetMyContactsGroupId(android.content.ContentResolver)>(r0);

        $b2 = l1 cmp 0L;

        if $b2 == 0 goto label1;

        $r2 = staticinvoke <android.provider.Contacts$People: android.net.Uri addToGroup(android.content.ContentResolver,long,long)>(r0, l0, l1);

        return $r2;

     label1:
        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Failed to find the My Contacts group");

        throw $r1;
    }

    public static android.net.Uri createPersonInMyContactsGroup(android.content.ContentResolver, android.content.ContentValues)
    {
        android.content.ContentResolver r0;
        android.net.Uri $r1, $r2, r4;
        long $l0;
        android.content.ContentValues r3;

        r0 := @parameter0: android.content.ContentResolver;

        r3 := @parameter1: android.content.ContentValues;

        $r1 = <android.provider.Contacts$People: android.net.Uri CONTENT_URI>;

        r4 = virtualinvoke r0.<android.content.ContentResolver: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>($r1, r3);

        if r4 != null goto label1;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("Contacts", "Failed to create the contact");

        return null;

     label1:
        $l0 = staticinvoke <android.content.ContentUris: long parseId(android.net.Uri)>(r4);

        $r2 = staticinvoke <android.provider.Contacts$People: android.net.Uri addToMyContactsGroup(android.content.ContentResolver,long)>(r0, $l0);

        if $r2 != null goto label2;

        virtualinvoke r0.<android.content.ContentResolver: int delete(android.net.Uri,java.lang.String,java.lang.String[])>(r4, null, null);

        return null;

     label2:
        return r4;
    }

    public static android.graphics.Bitmap loadContactPhoto(android.content.Context, android.net.Uri, int, android.graphics.BitmapFactory$Options)
    {
        android.content.Context r0;
        int i0;
        android.graphics.BitmapFactory$Options r1;
        android.content.ContentResolver $r2;
        android.graphics.Bitmap $r3, r6, r7;
        android.net.Uri r4;
        java.io.InputStream r5;

        r0 := @parameter0: android.content.Context;

        r4 := @parameter1: android.net.Uri;

        i0 := @parameter2: int;

        r1 := @parameter3: android.graphics.BitmapFactory$Options;

        if r4 != null goto label1;

        $r3 = staticinvoke <android.provider.Contacts$People: android.graphics.Bitmap loadPlaceholderPhoto(int,android.content.Context,android.graphics.BitmapFactory$Options)>(i0, r0, r1);

        return $r3;

     label1:
        $r2 = virtualinvoke r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        r5 = staticinvoke <android.provider.Contacts$People: java.io.InputStream openContactPhotoInputStream(android.content.ContentResolver,android.net.Uri)>($r2, r4);

        r6 = null;

        if r5 == null goto label2;

        r6 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream,android.graphics.Rect,android.graphics.BitmapFactory$Options)>(r5, null, r1);

     label2:
        r7 = r6;

        if r6 != null goto label3;

        r7 = staticinvoke <android.provider.Contacts$People: android.graphics.Bitmap loadPlaceholderPhoto(int,android.content.Context,android.graphics.BitmapFactory$Options)>(i0, r0, r1);

     label3:
        return r7;
    }

    private static android.graphics.Bitmap loadPlaceholderPhoto(int, android.content.Context, android.graphics.BitmapFactory$Options)
    {
        int i0;
        android.content.Context r0;
        android.graphics.BitmapFactory$Options r1;
        android.content.res.Resources $r2;
        android.graphics.Bitmap $r3;

        i0 := @parameter0: int;

        r0 := @parameter1: android.content.Context;

        r1 := @parameter2: android.graphics.BitmapFactory$Options;

        if i0 != 0 goto label1;

        return null;

     label1:
        $r2 = virtualinvoke r0.<android.content.Context: android.content.res.Resources getResources()>();

        $r3 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeResource(android.content.res.Resources,int,android.graphics.BitmapFactory$Options)>($r2, i0, r1);

        return $r3;
    }

    public static void markAsContacted(android.content.ContentResolver, long)
    {
        android.content.ContentResolver r0;
        long l0;

        r0 := @parameter0: android.content.ContentResolver;

        l0 := @parameter1: long;

        return;
    }

    public static java.io.InputStream openContactPhotoInputStream(android.content.ContentResolver, android.net.Uri)
    {
        android.net.Uri $r0, r5;
        java.lang.String[] $r1;
        boolean $z0;
        java.io.ByteArrayInputStream $r2;
        java.lang.Throwable $r3;
        android.content.ContentResolver r4;
        android.database.Cursor r6;
        byte[] r7;

        r4 := @parameter0: android.content.ContentResolver;

        r5 := @parameter1: android.net.Uri;

        $r0 = staticinvoke <android.net.Uri: android.net.Uri withAppendedPath(android.net.Uri,java.lang.String)>(r5, "photo");

        $r1 = newarray (java.lang.String)[1];

        $r1[0] = "data";

        r6 = virtualinvoke r4.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($r0, $r1, null, null, null);

        if r6 == null goto label11;

     label01:
        $z0 = interfaceinvoke r6.<android.database.Cursor: boolean moveToNext()>();

        if $z0 != 0 goto label03;

     label02:
        goto label11;

     label03:
        r7 = interfaceinvoke r6.<android.database.Cursor: byte[] getBlob(int)>(0);

     label04:
        if r7 != null goto label06;

        if r6 == null goto label05;

        interfaceinvoke r6.<android.database.Cursor: void close()>();

     label05:
        return null;

     label06:
        $r2 = new java.io.ByteArrayInputStream;

        specialinvoke $r2.<java.io.ByteArrayInputStream: void <init>(byte[])>(r7);

     label07:
        if r6 == null goto label08;

        interfaceinvoke r6.<android.database.Cursor: void close()>();

     label08:
        return $r2;

     label09:
        $r3 := @caughtexception;

        if r6 == null goto label10;

        interfaceinvoke r6.<android.database.Cursor: void close()>();

     label10:
        throw $r3;

     label11:
        if r6 == null goto label12;

        interfaceinvoke r6.<android.database.Cursor: void close()>();

     label12:
        return null;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label06 to label07 with label09;
    }

    public static android.database.Cursor queryGroups(android.content.ContentResolver, long)
    {
        android.content.ContentResolver r0;
        long l0;
        java.lang.String[] $r1;
        android.net.Uri $r2;
        java.lang.String $r3;
        android.database.Cursor $r4;

        r0 := @parameter0: android.content.ContentResolver;

        l0 := @parameter1: long;

        $r2 = <android.provider.Contacts$GroupMembership: android.net.Uri CONTENT_URI>;

        $r1 = newarray (java.lang.String)[1];

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>(l0);

        $r1[0] = $r3;

        $r4 = virtualinvoke r0.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($r2, null, "person=?", $r1, "name ASC");

        return $r4;
    }

    public static void setPhotoData(android.content.ContentResolver, android.net.Uri, byte[])
    {
        android.content.ContentResolver r0;
        byte[] r1;
        android.content.ContentValues $r3;
        android.net.Uri r4, r5;

        r0 := @parameter0: android.content.ContentResolver;

        r4 := @parameter1: android.net.Uri;

        r1 := @parameter2: byte[];

        r5 = staticinvoke <android.net.Uri: android.net.Uri withAppendedPath(android.net.Uri,java.lang.String)>(r4, "photo");

        $r3 = new android.content.ContentValues;

        specialinvoke $r3.<android.content.ContentValues: void <init>()>();

        virtualinvoke $r3.<android.content.ContentValues: void put(java.lang.String,byte[])>("data", r1);

        virtualinvoke r0.<android.content.ContentResolver: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>(r5, $r3, null, null);

        return;
    }

    public static long tryGetMyContactsGroupId(android.content.ContentResolver)
    {
        long l0;
        java.lang.String[] $r1;
        android.net.Uri $r2;
        boolean $z0;
        java.lang.Throwable $r3;
        android.content.ContentResolver r4;
        android.database.Cursor r5;

        r4 := @parameter0: android.content.ContentResolver;

        $r2 = <android.provider.Contacts$Groups: android.net.Uri CONTENT_URI>;

        $r1 = <android.provider.Contacts$People: java.lang.String[] GROUPS_PROJECTION>;

        r5 = virtualinvoke r4.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($r2, $r1, "system_id=\'Contacts\'", null, null);

        if r5 == null goto label5;

     label1:
        $z0 = interfaceinvoke r5.<android.database.Cursor: boolean moveToFirst()>();

        if $z0 == 0 goto label3;

        l0 = interfaceinvoke r5.<android.database.Cursor: long getLong(int)>(0);

     label2:
        interfaceinvoke r5.<android.database.Cursor: void close()>();

        return l0;

     label3:
        interfaceinvoke r5.<android.database.Cursor: void close()>();

        goto label5;

     label4:
        $r3 := @caughtexception;

        interfaceinvoke r5.<android.database.Cursor: void close()>();

        throw $r3;

     label5:
        return 0L;

        catch java.lang.Throwable from label1 to label2 with label4;
    }
}
