public class android.provider.ContactsContract$Contacts extends java.lang.Object implements android.provider.BaseColumns, android.provider.ContactsContract$ContactsColumns, android.provider.ContactsContract$ContactOptionsColumns, android.provider.ContactsContract$ContactNameColumns, android.provider.ContactsContract$ContactStatusColumns, android.provider.ContactsContract$ContactCounts
{
    public static final android.net.Uri CONTENT_FILTER_URI;
    public static final android.net.Uri CONTENT_FREQUENT_URI;
    public static final android.net.Uri CONTENT_GROUP_URI;
    public static final java.lang.String CONTENT_ITEM_TYPE;
    public static final android.net.Uri CONTENT_LOOKUP_URI;
    public static final android.net.Uri CONTENT_MULTI_VCARD_URI;
    public static final android.net.Uri CONTENT_STREQUENT_FILTER_URI;
    public static final android.net.Uri CONTENT_STREQUENT_URI;
    public static final java.lang.String CONTENT_TYPE;
    public static final android.net.Uri CONTENT_URI;
    public static final java.lang.String CONTENT_VCARD_TYPE;
    public static final android.net.Uri CONTENT_VCARD_URI;
    public static final android.net.Uri CORP_CONTENT_URI;
    public static long ENTERPRISE_CONTACT_ID_BASE;
    public static java.lang.String ENTERPRISE_CONTACT_LOOKUP_PREFIX;
    public static final android.net.Uri ENTERPRISE_CONTENT_FILTER_URI;
    public static final java.lang.String QUERY_PARAMETER_VCARD_NO_PHOTO;

    static void <clinit>()
    {
        android.net.Uri $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21;

        <android.provider.ContactsContract$Contacts: java.lang.String QUERY_PARAMETER_VCARD_NO_PHOTO> = "no_photo";

        <android.provider.ContactsContract$Contacts: java.lang.String CONTENT_VCARD_TYPE> = "text/x-vcard";

        <android.provider.ContactsContract$Contacts: java.lang.String CONTENT_TYPE> = "vnd.android.cursor.dir/contact";

        <android.provider.ContactsContract$Contacts: java.lang.String CONTENT_ITEM_TYPE> = "vnd.android.cursor.item/contact";

        $r0 = <android.provider.ContactsContract: android.net.Uri AUTHORITY_URI>;

        $r1 = staticinvoke <android.net.Uri: android.net.Uri withAppendedPath(android.net.Uri,java.lang.String)>($r0, "contacts");

        <android.provider.ContactsContract$Contacts: android.net.Uri CONTENT_URI> = $r1;

        $r2 = <android.provider.ContactsContract: android.net.Uri AUTHORITY_URI>;

        $r3 = staticinvoke <android.net.Uri: android.net.Uri withAppendedPath(android.net.Uri,java.lang.String)>($r2, "contacts_corp");

        <android.provider.ContactsContract$Contacts: android.net.Uri CORP_CONTENT_URI> = $r3;

        $r4 = <android.provider.ContactsContract$Contacts: android.net.Uri CONTENT_URI>;

        $r5 = staticinvoke <android.net.Uri: android.net.Uri withAppendedPath(android.net.Uri,java.lang.String)>($r4, "lookup");

        <android.provider.ContactsContract$Contacts: android.net.Uri CONTENT_LOOKUP_URI> = $r5;

        $r6 = <android.provider.ContactsContract$Contacts: android.net.Uri CONTENT_URI>;

        $r7 = staticinvoke <android.net.Uri: android.net.Uri withAppendedPath(android.net.Uri,java.lang.String)>($r6, "as_vcard");

        <android.provider.ContactsContract$Contacts: android.net.Uri CONTENT_VCARD_URI> = $r7;

        $r8 = <android.provider.ContactsContract$Contacts: android.net.Uri CONTENT_URI>;

        $r9 = staticinvoke <android.net.Uri: android.net.Uri withAppendedPath(android.net.Uri,java.lang.String)>($r8, "as_multi_vcard");

        <android.provider.ContactsContract$Contacts: android.net.Uri CONTENT_MULTI_VCARD_URI> = $r9;

        $r10 = <android.provider.ContactsContract$Contacts: android.net.Uri CONTENT_URI>;

        $r11 = staticinvoke <android.net.Uri: android.net.Uri withAppendedPath(android.net.Uri,java.lang.String)>($r10, "filter");

        <android.provider.ContactsContract$Contacts: android.net.Uri CONTENT_FILTER_URI> = $r11;

        $r12 = <android.provider.ContactsContract$Contacts: android.net.Uri CONTENT_URI>;

        $r13 = staticinvoke <android.net.Uri: android.net.Uri withAppendedPath(android.net.Uri,java.lang.String)>($r12, "filter_enterprise");

        <android.provider.ContactsContract$Contacts: android.net.Uri ENTERPRISE_CONTENT_FILTER_URI> = $r13;

        $r14 = <android.provider.ContactsContract$Contacts: android.net.Uri CONTENT_URI>;

        $r15 = staticinvoke <android.net.Uri: android.net.Uri withAppendedPath(android.net.Uri,java.lang.String)>($r14, "strequent");

        <android.provider.ContactsContract$Contacts: android.net.Uri CONTENT_STREQUENT_URI> = $r15;

        $r16 = <android.provider.ContactsContract$Contacts: android.net.Uri CONTENT_URI>;

        $r17 = staticinvoke <android.net.Uri: android.net.Uri withAppendedPath(android.net.Uri,java.lang.String)>($r16, "frequent");

        <android.provider.ContactsContract$Contacts: android.net.Uri CONTENT_FREQUENT_URI> = $r17;

        $r18 = <android.provider.ContactsContract$Contacts: android.net.Uri CONTENT_STREQUENT_URI>;

        $r19 = staticinvoke <android.net.Uri: android.net.Uri withAppendedPath(android.net.Uri,java.lang.String)>($r18, "filter");

        <android.provider.ContactsContract$Contacts: android.net.Uri CONTENT_STREQUENT_FILTER_URI> = $r19;

        $r20 = <android.provider.ContactsContract$Contacts: android.net.Uri CONTENT_URI>;

        $r21 = staticinvoke <android.net.Uri: android.net.Uri withAppendedPath(android.net.Uri,java.lang.String)>($r20, "group");

        <android.provider.ContactsContract$Contacts: android.net.Uri CONTENT_GROUP_URI> = $r21;

        <android.provider.ContactsContract$Contacts: long ENTERPRISE_CONTACT_ID_BASE> = 1000000000L;

        <android.provider.ContactsContract$Contacts: java.lang.String ENTERPRISE_CONTACT_LOOKUP_PREFIX> = "c-";

        return;
    }

    private void <init>()
    {
        android.provider.ContactsContract$Contacts r0;

        r0 := @this: android.provider.ContactsContract$Contacts;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static android.net.Uri createCorpLookupUriFromEnterpriseLookupUri(android.net.Uri)
    {
        int $i0, $i1;
        java.lang.Object $r0;
        boolean $z0, $z1;
        java.lang.String $r1, $r2, r7, r8;
        android.net.Uri $r3, $r4, r5;
        java.util.List r6;

        r5 := @parameter0: android.net.Uri;

        r6 = virtualinvoke r5.<android.net.Uri: java.util.List getPathSegments()>();

        if r6 == null goto label4;

        $i0 = interfaceinvoke r6.<java.util.List: int size()>();

        if $i0 > 2 goto label1;

        goto label4;

     label1:
        $r0 = interfaceinvoke r6.<java.util.List: java.lang.Object get(int)>(2);

        r7 = (java.lang.String) $r0;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r7);

        if $z0 != 0 goto label3;

        $r1 = <android.provider.ContactsContract$Contacts: java.lang.String ENTERPRISE_CONTACT_LOOKUP_PREFIX>;

        $z1 = virtualinvoke r7.<java.lang.String: boolean startsWith(java.lang.String)>($r1);

        if $z1 != 0 goto label2;

        goto label3;

     label2:
        $r2 = <android.provider.ContactsContract$Contacts: java.lang.String ENTERPRISE_CONTACT_LOOKUP_PREFIX>;

        $i1 = virtualinvoke $r2.<java.lang.String: int length()>();

        r8 = virtualinvoke r7.<java.lang.String: java.lang.String substring(int)>($i1);

        $r3 = <android.provider.ContactsContract$Contacts: android.net.Uri CONTENT_LOOKUP_URI>;

        $r4 = staticinvoke <android.net.Uri: android.net.Uri withAppendedPath(android.net.Uri,java.lang.String)>($r3, r8);

        return $r4;

     label3:
        return null;

     label4:
        return null;
    }

    public static android.net.Uri getLookupUri(long, java.lang.String)
    {
        long l0;
        java.lang.String r0;
        boolean $z0;
        android.net.Uri $r1, $r2, $r3;

        l0 := @parameter0: long;

        r0 := @parameter1: java.lang.String;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r0);

        if $z0 == 0 goto label1;

        return null;

     label1:
        $r1 = <android.provider.ContactsContract$Contacts: android.net.Uri CONTENT_LOOKUP_URI>;

        $r2 = staticinvoke <android.net.Uri: android.net.Uri withAppendedPath(android.net.Uri,java.lang.String)>($r1, r0);

        $r3 = staticinvoke <android.content.ContentUris: android.net.Uri withAppendedId(android.net.Uri,long)>($r2, l0);

        return $r3;
    }

    public static android.net.Uri getLookupUri(android.content.ContentResolver, android.net.Uri)
    {
        java.lang.String[] $r0;
        boolean $z0;
        long $l0;
        java.lang.Throwable $r1;
        android.content.ContentResolver r2;
        android.net.Uri r3, r6;
        android.database.Cursor r4;
        java.lang.String r5;

        r2 := @parameter0: android.content.ContentResolver;

        r3 := @parameter1: android.net.Uri;

        $r0 = newarray (java.lang.String)[2];

        $r0[0] = "lookup";

        $r0[1] = "_id";

        r4 = virtualinvoke r2.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>(r3, $r0, null, null, null);

        if r4 != null goto label1;

        return null;

     label1:
        $z0 = interfaceinvoke r4.<android.database.Cursor: boolean moveToFirst()>();

        if $z0 == 0 goto label3;

        r5 = interfaceinvoke r4.<android.database.Cursor: java.lang.String getString(int)>(0);

        $l0 = interfaceinvoke r4.<android.database.Cursor: long getLong(int)>(1);

        r6 = staticinvoke <android.provider.ContactsContract$Contacts: android.net.Uri getLookupUri(long,java.lang.String)>($l0, r5);

     label2:
        interfaceinvoke r4.<android.database.Cursor: void close()>();

        return r6;

     label3:
        interfaceinvoke r4.<android.database.Cursor: void close()>();

        return null;

     label4:
        $r1 := @caughtexception;

        interfaceinvoke r4.<android.database.Cursor: void close()>();

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public static boolean isEnterpriseContactId(long)
    {
        long l0, $l1;
        byte $b2, $b3;
        boolean z0;

        l0 := @parameter0: long;

        $l1 = <android.provider.ContactsContract$Contacts: long ENTERPRISE_CONTACT_ID_BASE>;

        $b2 = l0 cmp $l1;

        if $b2 < 0 goto label1;

        $b3 = l0 cmp 9223372034707292160L;

        if $b3 >= 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public static android.net.Uri lookupContact(android.content.ContentResolver, android.net.Uri)
    {
        long l0;
        java.lang.String[] $r0;
        boolean $z0;
        android.net.Uri $r1, r4, r6;
        java.lang.Throwable $r2;
        android.content.ContentResolver r3;
        android.database.Cursor r5;

        r3 := @parameter0: android.content.ContentResolver;

        r4 := @parameter1: android.net.Uri;

        if r4 != null goto label1;

        return null;

     label1:
        $r0 = newarray (java.lang.String)[1];

        $r0[0] = "_id";

        r5 = virtualinvoke r3.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>(r4, $r0, null, null, null);

        if r5 != null goto label2;

        return null;

     label2:
        $z0 = interfaceinvoke r5.<android.database.Cursor: boolean moveToFirst()>();

        if $z0 == 0 goto label4;

        l0 = interfaceinvoke r5.<android.database.Cursor: long getLong(int)>(0);

        $r1 = <android.provider.ContactsContract$Contacts: android.net.Uri CONTENT_URI>;

        r6 = staticinvoke <android.content.ContentUris: android.net.Uri withAppendedId(android.net.Uri,long)>($r1, l0);

     label3:
        interfaceinvoke r5.<android.database.Cursor: void close()>();

        return r6;

     label4:
        interfaceinvoke r5.<android.database.Cursor: void close()>();

        return null;

     label5:
        $r2 := @caughtexception;

        interfaceinvoke r5.<android.database.Cursor: void close()>();

        throw $r2;

        catch java.lang.Throwable from label2 to label3 with label5;
    }

    public static void markAsContacted(android.content.ContentResolver, long)
    {
        android.content.ContentResolver r0;
        long l0;

        r0 := @parameter0: android.content.ContentResolver;

        l0 := @parameter1: long;

        return;
    }

    public static java.io.InputStream openContactPhotoInputStream(android.content.ContentResolver, android.net.Uri)
    {
        android.content.ContentResolver r0;
        android.net.Uri r1;
        java.io.InputStream $r2;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: android.net.Uri;

        $r2 = staticinvoke <android.provider.ContactsContract$Contacts: java.io.InputStream openContactPhotoInputStream(android.content.ContentResolver,android.net.Uri,boolean)>(r0, r1, 0);

        return $r2;
    }

    public static java.io.InputStream openContactPhotoInputStream(android.content.ContentResolver, android.net.Uri, boolean)
    {
        boolean z0, $z1;
        java.lang.String[] $r0;
        java.io.ByteArrayInputStream $r1;
        java.lang.Throwable $r2, $r3;
        android.content.ContentResolver r4;
        android.net.Uri r5, r6, r10;
        android.content.res.AssetFileDescriptor r7;
        java.io.FileInputStream r8;
        android.database.Cursor r11;
        byte[] r12;

        r4 := @parameter0: android.content.ContentResolver;

        r5 := @parameter1: android.net.Uri;

        z0 := @parameter2: boolean;

        if z0 == 0 goto label07;

        r6 = staticinvoke <android.net.Uri: android.net.Uri withAppendedPath(android.net.Uri,java.lang.String)>(r5, "display_photo");

     label01:
        r7 = virtualinvoke r4.<android.content.ContentResolver: android.content.res.AssetFileDescriptor openAssetFileDescriptor(android.net.Uri,java.lang.String)>(r6, "r");

     label02:
        if r7 == null goto label05;

     label03:
        r8 = virtualinvoke r7.<android.content.res.AssetFileDescriptor: java.io.FileInputStream createInputStream()>();

     label04:
        return r8;

     label05:
        goto label07;

     label06:
        $r3 := @caughtexception;

     label07:
        r10 = staticinvoke <android.net.Uri: android.net.Uri withAppendedPath(android.net.Uri,java.lang.String)>(r5, "photo");

        if r10 != null goto label08;

        return null;

     label08:
        $r0 = newarray (java.lang.String)[1];

        $r0[0] = "data15";

        r11 = virtualinvoke r4.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>(r10, $r0, null, null, null);

        if r11 == null goto label19;

     label09:
        $z1 = interfaceinvoke r11.<android.database.Cursor: boolean moveToNext()>();

        if $z1 != 0 goto label11;

     label10:
        goto label19;

     label11:
        r12 = interfaceinvoke r11.<android.database.Cursor: byte[] getBlob(int)>(0);

     label12:
        if r12 != null goto label14;

        if r11 == null goto label13;

        interfaceinvoke r11.<android.database.Cursor: void close()>();

     label13:
        return null;

     label14:
        $r1 = new java.io.ByteArrayInputStream;

        specialinvoke $r1.<java.io.ByteArrayInputStream: void <init>(byte[])>(r12);

     label15:
        if r11 == null goto label16;

        interfaceinvoke r11.<android.database.Cursor: void close()>();

     label16:
        return $r1;

     label17:
        $r2 := @caughtexception;

        if r11 == null goto label18;

        interfaceinvoke r11.<android.database.Cursor: void close()>();

     label18:
        throw $r2;

     label19:
        if r11 == null goto label20;

        interfaceinvoke r11.<android.database.Cursor: void close()>();

     label20:
        return null;

        catch java.io.IOException from label01 to label02 with label06;
        catch java.io.IOException from label03 to label04 with label06;
        catch java.lang.Throwable from label09 to label10 with label17;
        catch java.lang.Throwable from label11 to label12 with label17;
        catch java.lang.Throwable from label14 to label15 with label17;
    }
}
