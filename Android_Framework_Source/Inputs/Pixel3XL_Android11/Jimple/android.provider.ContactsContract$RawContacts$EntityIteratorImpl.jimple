class android.provider.ContactsContract$RawContacts$EntityIteratorImpl extends android.content.CursorEntityIterator
{
    private static final java.lang.String[] DATA_KEYS;

    static void <clinit>()
    {
        java.lang.String[] $r0;

        $r0 = newarray (java.lang.String)[19];

        $r0[0] = "data1";

        $r0[1] = "data2";

        $r0[2] = "data3";

        $r0[3] = "data4";

        $r0[4] = "data5";

        $r0[5] = "data6";

        $r0[6] = "data7";

        $r0[7] = "data8";

        $r0[8] = "data9";

        $r0[9] = "data10";

        $r0[10] = "data11";

        $r0[11] = "data12";

        $r0[12] = "data13";

        $r0[13] = "data14";

        $r0[14] = "data15";

        $r0[15] = "data_sync1";

        $r0[16] = "data_sync2";

        $r0[17] = "data_sync3";

        $r0[18] = "data_sync4";

        <android.provider.ContactsContract$RawContacts$EntityIteratorImpl: java.lang.String[] DATA_KEYS> = $r0;

        return;
    }

    public void <init>(android.database.Cursor)
    {
        android.provider.ContactsContract$RawContacts$EntityIteratorImpl r0;
        android.database.Cursor r1;

        r0 := @this: android.provider.ContactsContract$RawContacts$EntityIteratorImpl;

        r1 := @parameter0: android.database.Cursor;

        specialinvoke r0.<android.content.CursorEntityIterator: void <init>(android.database.Cursor)>(r1);

        return;
    }

    public android.content.Entity getEntityAndIncrementCursor(android.database.Cursor) throws android.os.RemoteException
    {
        android.provider.ContactsContract$RawContacts$EntityIteratorImpl r0;
        android.database.Cursor r1;
        int i0, i2, i3, i4, $i7, i9;
        long l1, $l5, $l8;
        java.lang.String[] r4;
        android.content.ContentValues $r5, $r7;
        android.content.Entity $r6;
        byte $b6;
        java.lang.Long $r8;
        android.net.Uri $r9;
        boolean $z0;
        java.lang.IllegalStateException $r10;
        byte[] $r11;
        java.lang.String r13, $r14;

        r0 := @this: android.provider.ContactsContract$RawContacts$EntityIteratorImpl;

        r1 := @parameter0: android.database.Cursor;

        i0 = interfaceinvoke r1.<android.database.Cursor: int getColumnIndexOrThrow(java.lang.String)>("_id");

        l1 = interfaceinvoke r1.<android.database.Cursor: long getLong(int)>(i0);

        $r5 = new android.content.ContentValues;

        specialinvoke $r5.<android.content.ContentValues: void <init>()>();

        staticinvoke <android.database.DatabaseUtils: void cursorStringToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r1, $r5, "account_name");

        staticinvoke <android.database.DatabaseUtils: void cursorStringToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r1, $r5, "account_type");

        staticinvoke <android.database.DatabaseUtils: void cursorStringToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r1, $r5, "data_set");

        staticinvoke <android.database.DatabaseUtils: void cursorLongToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r1, $r5, "_id");

        staticinvoke <android.database.DatabaseUtils: void cursorLongToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r1, $r5, "dirty");

        staticinvoke <android.database.DatabaseUtils: void cursorLongToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r1, $r5, "version");

        staticinvoke <android.database.DatabaseUtils: void cursorStringToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r1, $r5, "sourceid");

        staticinvoke <android.database.DatabaseUtils: void cursorStringToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r1, $r5, "sync1");

        staticinvoke <android.database.DatabaseUtils: void cursorStringToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r1, $r5, "sync2");

        staticinvoke <android.database.DatabaseUtils: void cursorStringToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r1, $r5, "sync3");

        staticinvoke <android.database.DatabaseUtils: void cursorStringToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r1, $r5, "sync4");

        staticinvoke <android.database.DatabaseUtils: void cursorLongToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r1, $r5, "deleted");

        staticinvoke <android.database.DatabaseUtils: void cursorLongToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r1, $r5, "contact_id");

        staticinvoke <android.database.DatabaseUtils: void cursorLongToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r1, $r5, "starred");

        $r6 = new android.content.Entity;

        specialinvoke $r6.<android.content.Entity: void <init>(android.content.ContentValues)>($r5);

     label1:
        $l5 = interfaceinvoke r1.<android.database.Cursor: long getLong(int)>(i0);

        $b6 = l1 cmp $l5;

        if $b6 == 0 goto label2;

        goto label8;

     label2:
        $r7 = new android.content.ContentValues;

        specialinvoke $r7.<android.content.ContentValues: void <init>()>();

        $i7 = interfaceinvoke r1.<android.database.Cursor: int getColumnIndexOrThrow(java.lang.String)>("data_id");

        $l8 = interfaceinvoke r1.<android.database.Cursor: long getLong(int)>($i7);

        $r8 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l8);

        virtualinvoke $r7.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("_id", $r8);

        staticinvoke <android.database.DatabaseUtils: void cursorStringToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r1, $r7, "res_package");

        staticinvoke <android.database.DatabaseUtils: void cursorStringToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r1, $r7, "mimetype");

        staticinvoke <android.database.DatabaseUtils: void cursorLongToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r1, $r7, "is_primary");

        staticinvoke <android.database.DatabaseUtils: void cursorLongToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r1, $r7, "is_super_primary");

        staticinvoke <android.database.DatabaseUtils: void cursorLongToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r1, $r7, "data_version");

        staticinvoke <android.database.DatabaseUtils: void cursorStringToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r1, $r7, "group_sourceid");

        staticinvoke <android.database.DatabaseUtils: void cursorStringToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r1, $r7, "data_version");

        r4 = <android.provider.ContactsContract$RawContacts$EntityIteratorImpl: java.lang.String[] DATA_KEYS>;

        i2 = lengthof r4;

        i9 = 0;

     label3:
        if i9 >= i2 goto label7;

        r13 = r4[i9];

        i3 = interfaceinvoke r1.<android.database.Cursor: int getColumnIndexOrThrow(java.lang.String)>(r13);

        i4 = interfaceinvoke r1.<android.database.Cursor: int getType(int)>(i3);

        if i4 == 0 goto label6;

        if i4 == 1 goto label5;

        if i4 == 2 goto label5;

        if i4 == 3 goto label5;

        if i4 != 4 goto label4;

        $r11 = interfaceinvoke r1.<android.database.Cursor: byte[] getBlob(int)>(i3);

        virtualinvoke $r7.<android.content.ContentValues: void put(java.lang.String,byte[])>(r13, $r11);

        goto label6;

     label4:
        $r10 = new java.lang.IllegalStateException;

        specialinvoke $r10.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Invalid or unhandled data type");

        throw $r10;

     label5:
        $r14 = interfaceinvoke r1.<android.database.Cursor: java.lang.String getString(int)>(i3);

        virtualinvoke $r7.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>(r13, $r14);

        goto label6;

     label6:
        i9 = i9 + 1;

        goto label3;

     label7:
        $r9 = <android.provider.ContactsContract$Data: android.net.Uri CONTENT_URI>;

        virtualinvoke $r6.<android.content.Entity: void addSubValue(android.net.Uri,android.content.ContentValues)>($r9, $r7);

        $z0 = interfaceinvoke r1.<android.database.Cursor: boolean moveToNext()>();

        if $z0 != 0 goto label1;

     label8:
        return $r6;
    }
}
