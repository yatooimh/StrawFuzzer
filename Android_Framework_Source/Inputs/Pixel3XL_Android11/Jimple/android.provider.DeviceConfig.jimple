public final class android.provider.DeviceConfig extends java.lang.Object
{
    public static final android.net.Uri CONTENT_URI;
    public static final java.lang.String NAMESPACE_ACTIVITY_MANAGER;
    public static final java.lang.String NAMESPACE_ACTIVITY_MANAGER_NATIVE_BOOT;
    public static final java.lang.String NAMESPACE_ANDROID;
    public static final java.lang.String NAMESPACE_APP_COMPAT;
    public static final java.lang.String NAMESPACE_ATTENTION_MANAGER_SERVICE;
    public static final java.lang.String NAMESPACE_AUTOFILL;
    public static final java.lang.String NAMESPACE_BIOMETRICS;
    public static final java.lang.String NAMESPACE_BLOBSTORE;
    public static final java.lang.String NAMESPACE_CONFIGURATION;
    public static final java.lang.String NAMESPACE_CONNECTIVITY;
    public static final java.lang.String NAMESPACE_CONNECTIVITY_THERMAL_POWER_MANAGER;
    public static final java.lang.String NAMESPACE_CONTACTS_PROVIDER;
    public static final java.lang.String NAMESPACE_CONTENT_CAPTURE;
    public static final java.lang.String NAMESPACE_DEX_BOOT;
    public static final java.lang.String NAMESPACE_DISPLAY_MANAGER;
    public static final java.lang.String NAMESPACE_GAME_DRIVER;
    public static final java.lang.String NAMESPACE_INPUT_NATIVE_BOOT;
    public static final java.lang.String NAMESPACE_INTELLIGENCE_ATTENTION;
    public static final java.lang.String NAMESPACE_INTELLIGENCE_CONTENT_SUGGESTIONS;
    public static final java.lang.String NAMESPACE_MEDIA_NATIVE;
    public static final java.lang.String NAMESPACE_NETD_NATIVE;
    public static final java.lang.String NAMESPACE_PACKAGE_MANAGER_SERVICE;
    public static final java.lang.String NAMESPACE_PERMISSIONS;
    public static final java.lang.String NAMESPACE_PRIVACY;
    public static final java.lang.String NAMESPACE_ROLLBACK;
    public static final java.lang.String NAMESPACE_ROLLBACK_BOOT;
    public static final java.lang.String NAMESPACE_RUNTIME;
    public static final java.lang.String NAMESPACE_RUNTIME_NATIVE;
    public static final java.lang.String NAMESPACE_RUNTIME_NATIVE_BOOT;
    public static final java.lang.String NAMESPACE_SCHEDULER;
    public static final java.lang.String NAMESPACE_SETTINGS_STATS;
    public static final java.lang.String NAMESPACE_SETTINGS_UI;
    public static final java.lang.String NAMESPACE_STORAGE;
    public static final java.lang.String NAMESPACE_STORAGE_NATIVE_BOOT;
    public static final java.lang.String NAMESPACE_SYSTEMUI;
    public static final java.lang.String NAMESPACE_TELEPHONY;
    public static final java.lang.String NAMESPACE_TEXTCLASSIFIER;
    public static final java.lang.String NAMESPACE_WIDGET;
    public static final java.lang.String NAMESPACE_WINDOW_MANAGER;
    public static final java.lang.String NAMESPACE_WINDOW_MANAGER_NATIVE_BOOT;
    private static final java.util.List PUBLIC_NAMESPACES;
    private static final java.lang.String TAG;
    private static android.util.ArrayMap sListeners;
    private static final java.lang.Object sLock;
    private static java.util.Map sNamespaces;

    static void <clinit>()
    {
        android.net.Uri $r0;
        java.lang.String[] $r1;
        java.util.List $r2;
        java.lang.Object $r3;
        android.util.ArrayMap $r4;
        java.util.HashMap $r5;

        <android.provider.DeviceConfig: java.lang.String TAG> = "DeviceConfig";

        <android.provider.DeviceConfig: java.lang.String NAMESPACE_WINDOW_MANAGER_NATIVE_BOOT> = "window_manager_native_boot";

        <android.provider.DeviceConfig: java.lang.String NAMESPACE_WINDOW_MANAGER> = "window_manager";

        <android.provider.DeviceConfig: java.lang.String NAMESPACE_WIDGET> = "widget";

        <android.provider.DeviceConfig: java.lang.String NAMESPACE_TEXTCLASSIFIER> = "textclassifier";

        <android.provider.DeviceConfig: java.lang.String NAMESPACE_TELEPHONY> = "telephony";

        <android.provider.DeviceConfig: java.lang.String NAMESPACE_SYSTEMUI> = "systemui";

        <android.provider.DeviceConfig: java.lang.String NAMESPACE_STORAGE_NATIVE_BOOT> = "storage_native_boot";

        <android.provider.DeviceConfig: java.lang.String NAMESPACE_STORAGE> = "storage";

        <android.provider.DeviceConfig: java.lang.String NAMESPACE_SETTINGS_UI> = "settings_ui";

        <android.provider.DeviceConfig: java.lang.String NAMESPACE_SETTINGS_STATS> = "settings_stats";

        <android.provider.DeviceConfig: java.lang.String NAMESPACE_SCHEDULER> = "scheduler";

        <android.provider.DeviceConfig: java.lang.String NAMESPACE_RUNTIME_NATIVE_BOOT> = "runtime_native_boot";

        <android.provider.DeviceConfig: java.lang.String NAMESPACE_RUNTIME_NATIVE> = "runtime_native";

        <android.provider.DeviceConfig: java.lang.String NAMESPACE_RUNTIME> = "runtime";

        <android.provider.DeviceConfig: java.lang.String NAMESPACE_ROLLBACK_BOOT> = "rollback_boot";

        <android.provider.DeviceConfig: java.lang.String NAMESPACE_ROLLBACK> = "rollback";

        <android.provider.DeviceConfig: java.lang.String NAMESPACE_PRIVACY> = "privacy";

        <android.provider.DeviceConfig: java.lang.String NAMESPACE_PERMISSIONS> = "permissions";

        <android.provider.DeviceConfig: java.lang.String NAMESPACE_PACKAGE_MANAGER_SERVICE> = "package_manager_service";

        <android.provider.DeviceConfig: java.lang.String NAMESPACE_NETD_NATIVE> = "netd_native";

        <android.provider.DeviceConfig: java.lang.String NAMESPACE_MEDIA_NATIVE> = "media_native";

        <android.provider.DeviceConfig: java.lang.String NAMESPACE_INTELLIGENCE_CONTENT_SUGGESTIONS> = "intelligence_content_suggestions";

        <android.provider.DeviceConfig: java.lang.String NAMESPACE_INTELLIGENCE_ATTENTION> = "intelligence_attention";

        <android.provider.DeviceConfig: java.lang.String NAMESPACE_INPUT_NATIVE_BOOT> = "input_native_boot";

        <android.provider.DeviceConfig: java.lang.String NAMESPACE_GAME_DRIVER> = "game_driver";

        <android.provider.DeviceConfig: java.lang.String NAMESPACE_DISPLAY_MANAGER> = "display_manager";

        <android.provider.DeviceConfig: java.lang.String NAMESPACE_DEX_BOOT> = "dex_boot";

        <android.provider.DeviceConfig: java.lang.String NAMESPACE_CONTENT_CAPTURE> = "content_capture";

        <android.provider.DeviceConfig: java.lang.String NAMESPACE_CONTACTS_PROVIDER> = "contacts_provider";

        <android.provider.DeviceConfig: java.lang.String NAMESPACE_CONNECTIVITY_THERMAL_POWER_MANAGER> = "connectivity_thermal_power_manager";

        <android.provider.DeviceConfig: java.lang.String NAMESPACE_CONNECTIVITY> = "connectivity";

        <android.provider.DeviceConfig: java.lang.String NAMESPACE_CONFIGURATION> = "configuration";

        <android.provider.DeviceConfig: java.lang.String NAMESPACE_BLOBSTORE> = "blobstore";

        <android.provider.DeviceConfig: java.lang.String NAMESPACE_BIOMETRICS> = "biometrics";

        <android.provider.DeviceConfig: java.lang.String NAMESPACE_AUTOFILL> = "autofill";

        <android.provider.DeviceConfig: java.lang.String NAMESPACE_ATTENTION_MANAGER_SERVICE> = "attention_manager_service";

        <android.provider.DeviceConfig: java.lang.String NAMESPACE_APP_COMPAT> = "app_compat";

        <android.provider.DeviceConfig: java.lang.String NAMESPACE_ANDROID> = "android";

        <android.provider.DeviceConfig: java.lang.String NAMESPACE_ACTIVITY_MANAGER_NATIVE_BOOT> = "activity_manager_native_boot";

        <android.provider.DeviceConfig: java.lang.String NAMESPACE_ACTIVITY_MANAGER> = "activity_manager";

        $r0 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>("content://settings/config");

        <android.provider.DeviceConfig: android.net.Uri CONTENT_URI> = $r0;

        $r1 = newarray (java.lang.String)[2];

        $r1[0] = "textclassifier";

        $r1[1] = "runtime";

        $r2 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r1);

        <android.provider.DeviceConfig: java.util.List PUBLIC_NAMESPACES> = $r2;

        $r3 = new java.lang.Object;

        specialinvoke $r3.<java.lang.Object: void <init>()>();

        <android.provider.DeviceConfig: java.lang.Object sLock> = $r3;

        $r4 = new android.util.ArrayMap;

        specialinvoke $r4.<android.util.ArrayMap: void <init>()>();

        <android.provider.DeviceConfig: android.util.ArrayMap sListeners> = $r4;

        $r5 = new java.util.HashMap;

        specialinvoke $r5.<java.util.HashMap: void <init>()>();

        <android.provider.DeviceConfig: java.util.Map sNamespaces> = $r5;

        return;
    }

    private void <init>()
    {
        android.provider.DeviceConfig r0;

        r0 := @this: android.provider.DeviceConfig;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static void access$100(android.net.Uri)
    {
        android.net.Uri r0;

        r0 := @parameter0: android.net.Uri;

        staticinvoke <android.provider.DeviceConfig: void handleChange(android.net.Uri)>(r0);

        return;
    }

    public static void addOnPropertiesChangedListener(java.lang.String, java.util.concurrent.Executor, android.provider.DeviceConfig$OnPropertiesChangedListener)
    {
        java.util.concurrent.Executor r0;
        android.provider.DeviceConfig$OnPropertiesChangedListener r1;
        java.lang.Object r2, $r6, $r7, $r9, $r11;
        android.app.Application $r3;
        android.content.Context $r4;
        android.util.ArrayMap $r5, $r8, r19, r21, r23;
        boolean $z0;
        android.util.Pair $r10, r18, r20, r22, r24;
        java.lang.String $r12, r17;
        java.lang.Throwable $r16;

        r17 := @parameter0: java.lang.String;

        r0 := @parameter1: java.util.concurrent.Executor;

        r1 := @parameter2: android.provider.DeviceConfig$OnPropertiesChangedListener;

        $r3 = staticinvoke <android.app.ActivityThread: android.app.Application currentApplication()>();

        $r4 = virtualinvoke $r3.<android.app.Application: android.content.Context getApplicationContext()>();

        staticinvoke <android.provider.DeviceConfig: void enforceReadPermission(android.content.Context,java.lang.String)>($r4, r17);

        r2 = <android.provider.DeviceConfig: java.lang.Object sLock>;

        entermonitor r2;

     label01:
        $r5 = <android.provider.DeviceConfig: android.util.ArrayMap sListeners>;

        $r6 = virtualinvoke $r5.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        r18 = (android.util.Pair) $r6;

     label02:
        if r18 != null goto label05;

     label03:
        r19 = <android.provider.DeviceConfig: android.util.ArrayMap sListeners>;

        r20 = new android.util.Pair;

        specialinvoke r20.<android.util.Pair: void <init>(java.lang.Object,java.lang.Object)>(r17, r0);

        virtualinvoke r19.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r20);

        staticinvoke <android.provider.DeviceConfig: void incrementNamespace(java.lang.String)>(r17);

     label04:
        goto label08;

     label05:
        $r7 = r18.<android.util.Pair: java.lang.Object first>;

        $z0 = virtualinvoke r17.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z0 == 0 goto label07;

        r21 = <android.provider.DeviceConfig: android.util.ArrayMap sListeners>;

        r22 = new android.util.Pair;

        specialinvoke r22.<android.util.Pair: void <init>(java.lang.Object,java.lang.Object)>(r17, r0);

        virtualinvoke r21.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r22);

     label06:
        goto label08;

     label07:
        $r8 = <android.provider.DeviceConfig: android.util.ArrayMap sListeners>;

        $r9 = virtualinvoke $r8.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        $r10 = (android.util.Pair) $r9;

        $r11 = $r10.<android.util.Pair: java.lang.Object first>;

        $r12 = (java.lang.String) $r11;

        staticinvoke <android.provider.DeviceConfig: void decrementNamespace(java.lang.String)>($r12);

        r23 = <android.provider.DeviceConfig: android.util.ArrayMap sListeners>;

        r24 = new android.util.Pair;

        specialinvoke r24.<android.util.Pair: void <init>(java.lang.Object,java.lang.Object)>(r17, r0);

        virtualinvoke r23.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r24);

        staticinvoke <android.provider.DeviceConfig: void incrementNamespace(java.lang.String)>(r17);

     label08:
        exitmonitor r2;

     label09:
        return;

     label10:
        $r16 := @caughtexception;

     label11:
        exitmonitor r2;

     label12:
        throw $r16;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label07 to label08 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
    }

    private static android.net.Uri createNamespaceUri(java.lang.String)
    {
        java.lang.String r0;
        android.net.Uri $r2, $r5;
        android.net.Uri$Builder $r3, $r4;

        r0 := @parameter0: java.lang.String;

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r0);

        $r2 = <android.provider.DeviceConfig: android.net.Uri CONTENT_URI>;

        $r3 = virtualinvoke $r2.<android.net.Uri: android.net.Uri$Builder buildUpon()>();

        $r4 = virtualinvoke $r3.<android.net.Uri$Builder: android.net.Uri$Builder appendPath(java.lang.String)>(r0);

        $r5 = virtualinvoke $r4.<android.net.Uri$Builder: android.net.Uri build()>();

        return $r5;
    }

    private static void decrementNamespace(java.lang.String)
    {
        java.lang.String r0;
        android.util.Pair r1, $r13;
        java.util.Map $r3, $r11, $r17;
        java.lang.Object $r4, $r5, $r9, $r14, $r15;
        java.lang.Integer $r6, $r16, $r19;
        int $i0, $i1, $i2;
        android.app.Application $r7;
        android.content.ContentResolver $r8;
        android.database.ContentObserver $r10, $r18;

        r0 := @parameter0: java.lang.String;

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r0);

        $r3 = <android.provider.DeviceConfig: java.util.Map sNamespaces>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        r1 = (android.util.Pair) $r4;

        if r1 != null goto label1;

        return;

     label1:
        $r5 = r1.<android.util.Pair: java.lang.Object second>;

        $r6 = (java.lang.Integer) $r5;

        $i0 = virtualinvoke $r6.<java.lang.Integer: int intValue()>();

        if $i0 <= 1 goto label2;

        $r17 = <android.provider.DeviceConfig: java.util.Map sNamespaces>;

        $r13 = new android.util.Pair;

        $r14 = r1.<android.util.Pair: java.lang.Object first>;

        $r18 = (android.database.ContentObserver) $r14;

        $r15 = r1.<android.util.Pair: java.lang.Object second>;

        $r16 = (java.lang.Integer) $r15;

        $i1 = virtualinvoke $r16.<java.lang.Integer: int intValue()>();

        $i2 = $i1 - 1;

        $r19 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        specialinvoke $r13.<android.util.Pair: void <init>(java.lang.Object,java.lang.Object)>($r18, $r19);

        interfaceinvoke $r17.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, $r13);

        goto label3;

     label2:
        $r7 = staticinvoke <android.app.ActivityThread: android.app.Application currentApplication()>();

        $r8 = virtualinvoke $r7.<android.app.Application: android.content.ContentResolver getContentResolver()>();

        $r9 = r1.<android.util.Pair: java.lang.Object first>;

        $r10 = (android.database.ContentObserver) $r9;

        virtualinvoke $r8.<android.content.ContentResolver: void unregisterContentObserver(android.database.ContentObserver)>($r10);

        $r11 = <android.provider.DeviceConfig: java.util.Map sNamespaces>;

        interfaceinvoke $r11.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r0);

     label3:
        return;
    }

    public static void enforceReadPermission(android.content.Context, java.lang.String)
    {
        android.content.Context r0;
        java.lang.String r1;
        int $i0;
        java.util.List $r2;
        boolean $z0;
        java.lang.SecurityException $r3;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.String;

        $i0 = virtualinvoke r0.<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>("android.permission.READ_DEVICE_CONFIG");

        if $i0 == 0 goto label2;

        $r2 = <android.provider.DeviceConfig: java.util.List PUBLIC_NAMESPACES>;

        $z0 = interfaceinvoke $r2.<java.util.List: boolean contains(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        goto label2;

     label1:
        $r3 = new java.lang.SecurityException;

        specialinvoke $r3.<java.lang.SecurityException: void <init>(java.lang.String)>("Permission denial: reading from settings requires:android.permission.READ_DEVICE_CONFIG");

        throw $r3;

     label2:
        return;
    }

    public static boolean getBoolean(java.lang.String, java.lang.String, boolean)
    {
        java.lang.String r0, r1, r2;
        boolean z0;

        r1 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        r2 = staticinvoke <android.provider.DeviceConfig: java.lang.String getProperty(java.lang.String,java.lang.String)>(r1, r0);

        if r2 == null goto label1;

        z0 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>(r2);

        goto label1;

     label1:
        return z0;
    }

    public static float getFloat(java.lang.String, java.lang.String, float)
    {
        java.lang.String r0, r1, $r8, r9;
        float f0, f1;
        java.lang.Throwable $r2;
        java.lang.StringBuilder $r3;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        f0 := @parameter2: float;

        r9 = staticinvoke <android.provider.DeviceConfig: java.lang.String getProperty(java.lang.String,java.lang.String)>(r0, r1);

        if r9 != null goto label1;

        return f0;

     label1:
        f1 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>(r9);

     label2:
        return f1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Parsing float failed for ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r8 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("DeviceConfig", $r8);

        return f0;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    public static int getInt(java.lang.String, java.lang.String, int)
    {
        java.lang.String r0, r1, $r8, r9;
        int i0, i1;
        java.lang.Throwable $r2;
        java.lang.StringBuilder $r3;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r9 = staticinvoke <android.provider.DeviceConfig: java.lang.String getProperty(java.lang.String,java.lang.String)>(r0, r1);

        if r9 != null goto label1;

        return i0;

     label1:
        i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r9);

     label2:
        return i1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Parsing integer failed for ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r8 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("DeviceConfig", $r8);

        return i0;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    public static long getLong(java.lang.String, java.lang.String, long)
    {
        java.lang.String r0, r1, $r8, r9;
        long l0, l1;
        java.lang.Throwable $r2;
        java.lang.StringBuilder $r3;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        l0 := @parameter2: long;

        r9 = staticinvoke <android.provider.DeviceConfig: java.lang.String getProperty(java.lang.String,java.lang.String)>(r0, r1);

        if r9 != null goto label1;

        return l0;

     label1:
        l1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(r9);

     label2:
        return l1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Parsing long failed for ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r8 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("DeviceConfig", $r8);

        return l0;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    public static transient android.provider.DeviceConfig$Properties getProperties(java.lang.String, java.lang.String[])
    {
        java.lang.String r0;
        java.lang.String[] r1;
        android.provider.DeviceConfig$Properties $r2;
        android.app.Application $r3;
        android.content.ContentResolver $r4;
        java.util.List $r5;
        java.util.Map $r6;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String[];

        $r2 = new android.provider.DeviceConfig$Properties;

        $r3 = staticinvoke <android.app.ActivityThread: android.app.Application currentApplication()>();

        $r4 = virtualinvoke $r3.<android.app.Application: android.content.ContentResolver getContentResolver()>();

        $r5 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r1);

        $r6 = staticinvoke <android.provider.Settings$Config: java.util.Map getStrings(android.content.ContentResolver,java.lang.String,java.util.List)>($r4, r0, $r5);

        specialinvoke $r2.<android.provider.DeviceConfig$Properties: void <init>(java.lang.String,java.util.Map)>(r0, $r6);

        return $r2;
    }

    public static java.lang.String getProperty(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1, $r4;
        java.lang.String[] $r2;
        android.provider.DeviceConfig$Properties $r3;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $r2 = newarray (java.lang.String)[1];

        $r2[0] = r1;

        $r3 = staticinvoke <android.provider.DeviceConfig: android.provider.DeviceConfig$Properties getProperties(java.lang.String,java.lang.String[])>(r0, $r2);

        $r4 = virtualinvoke $r3.<android.provider.DeviceConfig$Properties: java.lang.String getString(java.lang.String,java.lang.String)>(r1, null);

        return $r4;
    }

    public static java.util.List getPublicNamespaces()
    {
        java.util.List $r0;

        $r0 = <android.provider.DeviceConfig: java.util.List PUBLIC_NAMESPACES>;

        return $r0;
    }

    public static java.lang.String getString(java.lang.String, java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1, r2, r3;

        r1 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 = staticinvoke <android.provider.DeviceConfig: java.lang.String getProperty(java.lang.String,java.lang.String)>(r1, r0);

        if r3 == null goto label1;

        r2 = r3;

        goto label1;

     label1:
        return r2;
    }

    private static void handleChange(android.net.Uri)
    {
        android.provider.DeviceConfig$Properties r0, r25;
        java.lang.Object $r2, $r7, $r9, $r11, $r13, $r15, $r16, r27;
        android.provider.DeviceConfig$Properties$Builder $r3;
        java.lang.String[] $r4;
        int $i0, $i1, i3, i4;
        android.util.ArrayMap $r5, $r6, $r10, $r12;
        android.util.Pair $r8, $r14;
        boolean $z0;
        java.lang.String $r17, r23, r26;
        java.lang.Throwable $r19, $r20;
        android.net.Uri r21;
        java.util.List r22;
        android.provider.DeviceConfig$OnPropertiesChangedListener r28;
        java.util.concurrent.Executor r29;
        android.provider._$$Lambda$DeviceConfig$6U9gBH6h5Oab2DB_e83az4n_WEo r30;

        r21 := @parameter0: android.net.Uri;

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r21);

        r22 = virtualinvoke r21.<android.net.Uri: java.util.List getPathSegments()>();

        $r2 = interfaceinvoke r22.<java.util.List: java.lang.Object get(int)>(1);

        r23 = (java.lang.String) $r2;

        $r3 = new android.provider.DeviceConfig$Properties$Builder;

        specialinvoke $r3.<android.provider.DeviceConfig$Properties$Builder: void <init>(java.lang.String)>(r23);

     label01:
        $r4 = newarray (java.lang.String)[0];

        r25 = staticinvoke <android.provider.DeviceConfig: android.provider.DeviceConfig$Properties getProperties(java.lang.String,java.lang.String[])>(r23, $r4);

     label02:
        i3 = 2;

     label03:
        $i0 = interfaceinvoke r22.<java.util.List: int size()>();

        if i3 >= $i0 goto label05;

        $r16 = interfaceinvoke r22.<java.util.List: java.lang.Object get(int)>(i3);

        r26 = (java.lang.String) $r16;

        $r17 = virtualinvoke r25.<android.provider.DeviceConfig$Properties: java.lang.String getString(java.lang.String,java.lang.String)>(r26, null);

        virtualinvoke $r3.<android.provider.DeviceConfig$Properties$Builder: android.provider.DeviceConfig$Properties$Builder setString(java.lang.String,java.lang.String)>(r26, $r17);

     label04:
        i3 = i3 + 1;

        goto label03;

     label05:
        r0 = virtualinvoke $r3.<android.provider.DeviceConfig$Properties$Builder: android.provider.DeviceConfig$Properties build()>();

        r27 = <android.provider.DeviceConfig: java.lang.Object sLock>;

        entermonitor r27;

        i4 = 0;

     label06:
        $r5 = <android.provider.DeviceConfig: android.util.ArrayMap sListeners>;

        $i1 = virtualinvoke $r5.<android.util.ArrayMap: int size()>();

        if i4 >= $i1 goto label08;

        $r6 = <android.provider.DeviceConfig: android.util.ArrayMap sListeners>;

        $r7 = virtualinvoke $r6.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i4);

        $r8 = (android.util.Pair) $r7;

        $r9 = $r8.<android.util.Pair: java.lang.Object first>;

        $z0 = virtualinvoke r23.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        if $z0 == 0 goto label07;

        $r10 = <android.provider.DeviceConfig: android.util.ArrayMap sListeners>;

        $r11 = virtualinvoke $r10.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i4);

        r28 = (android.provider.DeviceConfig$OnPropertiesChangedListener) $r11;

        $r12 = <android.provider.DeviceConfig: android.util.ArrayMap sListeners>;

        $r13 = virtualinvoke $r12.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i4);

        $r14 = (android.util.Pair) $r13;

        $r15 = $r14.<android.util.Pair: java.lang.Object second>;

        r29 = (java.util.concurrent.Executor) $r15;

        r30 = new android.provider._$$Lambda$DeviceConfig$6U9gBH6h5Oab2DB_e83az4n_WEo;

        specialinvoke r30.<android.provider._$$Lambda$DeviceConfig$6U9gBH6h5Oab2DB_e83az4n_WEo: void <init>(android.provider.DeviceConfig$OnPropertiesChangedListener,android.provider.DeviceConfig$Properties)>(r28, r0);

        interfaceinvoke r29.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>(r30);

     label07:
        i4 = i4 + 1;

        goto label06;

     label08:
        exitmonitor r27;

     label09:
        return;

     label10:
        $r19 := @caughtexception;

     label11:
        exitmonitor r27;

     label12:
        throw $r19;

     label13:
        $r20 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("DeviceConfig", "OnPropertyChangedListener update failed: permission violation.");

        return;

        catch java.lang.SecurityException from label01 to label02 with label13;
        catch java.lang.SecurityException from label03 to label04 with label13;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
    }

    private static void incrementNamespace(java.lang.String)
    {
        java.lang.String r0;
        java.util.Map $r2, $r9, $r16;
        java.lang.Object $r3, $r13, $r14;
        android.provider.DeviceConfig$1 $r4;
        android.app.Application $r5;
        android.content.ContentResolver $r6;
        android.net.Uri $r7;
        android.util.Pair $r8, $r12, r20;
        java.lang.Integer $r10, $r15, $r18;
        android.database.ContentObserver $r17;
        int $i0, $i1;

        r0 := @parameter0: java.lang.String;

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r0);

        $r2 = <android.provider.DeviceConfig: java.util.Map sNamespaces>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        r20 = (android.util.Pair) $r3;

        if r20 == null goto label1;

        $r16 = <android.provider.DeviceConfig: java.util.Map sNamespaces>;

        $r12 = new android.util.Pair;

        $r13 = r20.<android.util.Pair: java.lang.Object first>;

        $r17 = (android.database.ContentObserver) $r13;

        $r14 = r20.<android.util.Pair: java.lang.Object second>;

        $r15 = (java.lang.Integer) $r14;

        $i0 = virtualinvoke $r15.<java.lang.Integer: int intValue()>();

        $i1 = $i0 + 1;

        $r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        specialinvoke $r12.<android.util.Pair: void <init>(java.lang.Object,java.lang.Object)>($r17, $r18);

        interfaceinvoke $r16.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, $r12);

        goto label2;

     label1:
        $r4 = new android.provider.DeviceConfig$1;

        specialinvoke $r4.<android.provider.DeviceConfig$1: void <init>(android.os.Handler)>(null);

        $r5 = staticinvoke <android.app.ActivityThread: android.app.Application currentApplication()>();

        $r6 = virtualinvoke $r5.<android.app.Application: android.content.ContentResolver getContentResolver()>();

        $r7 = staticinvoke <android.provider.DeviceConfig: android.net.Uri createNamespaceUri(java.lang.String)>(r0);

        virtualinvoke $r6.<android.content.ContentResolver: void registerContentObserver(android.net.Uri,boolean,android.database.ContentObserver)>($r7, 1, $r4);

        $r9 = <android.provider.DeviceConfig: java.util.Map sNamespaces>;

        $r8 = new android.util.Pair;

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        specialinvoke $r8.<android.util.Pair: void <init>(java.lang.Object,java.lang.Object)>($r4, $r10);

        interfaceinvoke $r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, $r8);

     label2:
        return;
    }

    static void lambda$handleChange$0(android.provider.DeviceConfig$OnPropertiesChangedListener, android.provider.DeviceConfig$Properties)
    {
        android.provider.DeviceConfig$OnPropertiesChangedListener r0;
        android.provider.DeviceConfig$Properties r1;

        r0 := @parameter0: android.provider.DeviceConfig$OnPropertiesChangedListener;

        r1 := @parameter1: android.provider.DeviceConfig$Properties;

        interfaceinvoke r0.<android.provider.DeviceConfig$OnPropertiesChangedListener: void onPropertiesChanged(android.provider.DeviceConfig$Properties)>(r1);

        return;
    }

    public static void removeOnPropertiesChangedListener(android.provider.DeviceConfig$OnPropertiesChangedListener)
    {
        java.lang.Object r0, $r4, $r6;
        android.util.ArrayMap $r2, $r3, $r8;
        boolean $z0;
        android.util.Pair $r5;
        java.lang.String $r7;
        java.lang.Throwable $r10;
        android.provider.DeviceConfig$OnPropertiesChangedListener r11;

        r11 := @parameter0: android.provider.DeviceConfig$OnPropertiesChangedListener;

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r11);

        r0 = <android.provider.DeviceConfig: java.lang.Object sLock>;

        entermonitor r0;

     label1:
        $r2 = <android.provider.DeviceConfig: android.util.ArrayMap sListeners>;

        $z0 = virtualinvoke $r2.<android.util.ArrayMap: boolean containsKey(java.lang.Object)>(r11);

        if $z0 == 0 goto label2;

        $r3 = <android.provider.DeviceConfig: android.util.ArrayMap sListeners>;

        $r4 = virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r11);

        $r5 = (android.util.Pair) $r4;

        $r6 = $r5.<android.util.Pair: java.lang.Object first>;

        $r7 = (java.lang.String) $r6;

        staticinvoke <android.provider.DeviceConfig: void decrementNamespace(java.lang.String)>($r7);

        $r8 = <android.provider.DeviceConfig: android.util.ArrayMap sListeners>;

        virtualinvoke $r8.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>(r11);

     label2:
        exitmonitor r0;

     label3:
        return;

     label4:
        $r10 := @caughtexception;

     label5:
        exitmonitor r0;

     label6:
        throw $r10;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public static void resetToDefaults(int, java.lang.String)
    {
        int i0;
        java.lang.String r0;
        android.app.Application $r1;
        android.content.ContentResolver $r2;

        i0 := @parameter0: int;

        r0 := @parameter1: java.lang.String;

        $r1 = staticinvoke <android.app.ActivityThread: android.app.Application currentApplication()>();

        $r2 = virtualinvoke $r1.<android.app.Application: android.content.ContentResolver getContentResolver()>();

        staticinvoke <android.provider.Settings$Config: void resetToDefaults(android.content.ContentResolver,int,java.lang.String)>($r2, i0, r0);

        return;
    }

    public static boolean setProperties(android.provider.DeviceConfig$Properties) throws android.provider.DeviceConfig$BadConfigException
    {
        android.provider.DeviceConfig$Properties r0;
        android.app.Application $r1;
        android.content.ContentResolver $r2;
        java.lang.String $r3;
        java.util.HashMap $r4;
        boolean $z0;

        r0 := @parameter0: android.provider.DeviceConfig$Properties;

        $r1 = staticinvoke <android.app.ActivityThread: android.app.Application currentApplication()>();

        $r2 = virtualinvoke $r1.<android.app.Application: android.content.ContentResolver getContentResolver()>();

        $r3 = virtualinvoke r0.<android.provider.DeviceConfig$Properties: java.lang.String getNamespace()>();

        $r4 = staticinvoke <android.provider.DeviceConfig$Properties: java.util.HashMap access$000(android.provider.DeviceConfig$Properties)>(r0);

        $z0 = staticinvoke <android.provider.Settings$Config: boolean setStrings(android.content.ContentResolver,java.lang.String,java.util.Map)>($r2, $r3, $r4);

        return $z0;
    }

    public static boolean setProperty(java.lang.String, java.lang.String, java.lang.String, boolean)
    {
        java.lang.String r0, r1, r2;
        boolean z0, $z1;
        android.app.Application $r3;
        android.content.ContentResolver $r4;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        z0 := @parameter3: boolean;

        $r3 = staticinvoke <android.app.ActivityThread: android.app.Application currentApplication()>();

        $r4 = virtualinvoke $r3.<android.app.Application: android.content.ContentResolver getContentResolver()>();

        $z1 = staticinvoke <android.provider.Settings$Config: boolean putString(android.content.ContentResolver,java.lang.String,java.lang.String,java.lang.String,boolean)>($r4, r0, r1, r2, z0);

        return $z1;
    }
}
