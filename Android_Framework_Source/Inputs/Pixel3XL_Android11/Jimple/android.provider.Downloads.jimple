public final class android.provider.Downloads extends java.lang.Object
{
    public static final java.lang.String CALL_CREATE_EXTERNAL_PUBLIC_DIR;
    public static final java.lang.String CALL_MEDIASTORE_DOWNLOADS_DELETED;
    public static final java.lang.String CALL_REVOKE_MEDIASTORE_URI_PERMS;
    public static final java.lang.String DIR_TYPE;
    public static final java.lang.String EXTRA_IDS;
    public static final java.lang.String EXTRA_MIME_TYPES;
    private static final java.lang.String QUERY_WHERE_CLAUSE;

    private void <init>()
    {
        android.provider.Downloads r0;

        r0 := @this: android.provider.Downloads;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static final void removeAllDownloadsByPackage(android.content.Context, java.lang.String, java.lang.String)
    {
        android.content.Context r0;
        java.lang.String r1, r2;
        android.content.ContentResolver $r3;
        java.lang.String[] $r4;
        android.net.Uri $r5;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        $r3 = virtualinvoke r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r5 = <android.provider.Downloads$Impl: android.net.Uri CONTENT_URI>;

        $r4 = newarray (java.lang.String)[2];

        $r4[0] = r1;

        $r4[1] = r2;

        virtualinvoke $r3.<android.content.ContentResolver: int delete(android.net.Uri,java.lang.String,java.lang.String[])>($r5, "notificationpackage=? AND notificationclass=?", $r4);

        return;
    }

    public static void <clinit>()
    {
        <android.provider.Downloads: java.lang.String QUERY_WHERE_CLAUSE> = "notificationpackage=? AND notificationclass=?";

        <android.provider.Downloads: java.lang.String EXTRA_MIME_TYPES> = "mime_types";

        <android.provider.Downloads: java.lang.String EXTRA_IDS> = "ids";

        <android.provider.Downloads: java.lang.String DIR_TYPE> = "dir_type";

        <android.provider.Downloads: java.lang.String CALL_REVOKE_MEDIASTORE_URI_PERMS> = "revoke_mediastore_uri_perms";

        <android.provider.Downloads: java.lang.String CALL_MEDIASTORE_DOWNLOADS_DELETED> = "mediastore_downloads_deleted";

        <android.provider.Downloads: java.lang.String CALL_CREATE_EXTERNAL_PUBLIC_DIR> = "create_external_public_dir";

        return;
    }
}
