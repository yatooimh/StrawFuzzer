public abstract class android.provider.OneTimeUseBuilder extends java.lang.Object
{
    private boolean used;

    public void <init>()
    {
        android.provider.OneTimeUseBuilder r0;

        r0 := @this: android.provider.OneTimeUseBuilder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.provider.OneTimeUseBuilder: boolean used> = 0;

        return;
    }

    public abstract java.lang.Object build();

    protected void checkNotUsed()
    {
        android.provider.OneTimeUseBuilder r0;
        boolean $z0;
        java.lang.IllegalStateException $r1;

        r0 := @this: android.provider.OneTimeUseBuilder;

        $z0 = r0.<android.provider.OneTimeUseBuilder: boolean used>;

        if $z0 != 0 goto label1;

        return;

     label1:
        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This Builder should not be reused. Use a new Builder instance instead");

        throw $r1;
    }

    protected void markUsed()
    {
        android.provider.OneTimeUseBuilder r0;

        r0 := @this: android.provider.OneTimeUseBuilder;

        virtualinvoke r0.<android.provider.OneTimeUseBuilder: void checkNotUsed()>();

        r0.<android.provider.OneTimeUseBuilder: boolean used> = 1;

        return;
    }
}
