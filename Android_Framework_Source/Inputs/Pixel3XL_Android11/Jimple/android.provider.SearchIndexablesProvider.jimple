public abstract class android.provider.SearchIndexablesProvider extends android.content.ContentProvider
{
    private static final int MATCH_DYNAMIC_RAW_CODE;
    private static final int MATCH_NON_INDEXABLE_KEYS_CODE;
    private static final int MATCH_RAW_CODE;
    private static final int MATCH_RES_CODE;
    private static final int MATCH_SITE_MAP_PAIRS_CODE;
    private static final int MATCH_SLICE_URI_PAIRS_CODE;
    private static final java.lang.String TAG;
    private java.lang.String mAuthority;
    private android.content.UriMatcher mMatcher;

    public void <init>()
    {
        android.provider.SearchIndexablesProvider r0;

        r0 := @this: android.provider.SearchIndexablesProvider;

        specialinvoke r0.<android.content.ContentProvider: void <init>()>();

        return;
    }

    public void attachInfo(android.content.Context, android.content.pm.ProviderInfo)
    {
        android.provider.SearchIndexablesProvider r0;
        android.content.Context r1;
        android.content.pm.ProviderInfo r2;
        java.lang.String $r4, $r6, $r7, $r9, $r11, $r13, $r15, $r19, $r20;
        android.content.UriMatcher $r5, $r8, $r10, $r12, $r14, $r16;
        boolean $z0, $z1, $z2;
        java.lang.SecurityException $r17, $r18, $r21;

        r0 := @this: android.provider.SearchIndexablesProvider;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.content.pm.ProviderInfo;

        $r4 = r2.<android.content.pm.ProviderInfo: java.lang.String authority>;

        r0.<android.provider.SearchIndexablesProvider: java.lang.String mAuthority> = $r4;

        $r5 = new android.content.UriMatcher;

        specialinvoke $r5.<android.content.UriMatcher: void <init>(int)>(-1);

        r0.<android.provider.SearchIndexablesProvider: android.content.UriMatcher mMatcher> = $r5;

        $r6 = r0.<android.provider.SearchIndexablesProvider: java.lang.String mAuthority>;

        virtualinvoke $r5.<android.content.UriMatcher: void addURI(java.lang.String,java.lang.String,int)>($r6, "settings/indexables_xml_res", 1);

        $r8 = r0.<android.provider.SearchIndexablesProvider: android.content.UriMatcher mMatcher>;

        $r7 = r0.<android.provider.SearchIndexablesProvider: java.lang.String mAuthority>;

        virtualinvoke $r8.<android.content.UriMatcher: void addURI(java.lang.String,java.lang.String,int)>($r7, "settings/indexables_raw", 2);

        $r10 = r0.<android.provider.SearchIndexablesProvider: android.content.UriMatcher mMatcher>;

        $r9 = r0.<android.provider.SearchIndexablesProvider: java.lang.String mAuthority>;

        virtualinvoke $r10.<android.content.UriMatcher: void addURI(java.lang.String,java.lang.String,int)>($r9, "settings/non_indexables_key", 3);

        $r12 = r0.<android.provider.SearchIndexablesProvider: android.content.UriMatcher mMatcher>;

        $r11 = r0.<android.provider.SearchIndexablesProvider: java.lang.String mAuthority>;

        virtualinvoke $r12.<android.content.UriMatcher: void addURI(java.lang.String,java.lang.String,int)>($r11, "settings/site_map_pairs", 4);

        $r14 = r0.<android.provider.SearchIndexablesProvider: android.content.UriMatcher mMatcher>;

        $r13 = r0.<android.provider.SearchIndexablesProvider: java.lang.String mAuthority>;

        virtualinvoke $r14.<android.content.UriMatcher: void addURI(java.lang.String,java.lang.String,int)>($r13, "settings/slice_uri_pairs", 5);

        $r16 = r0.<android.provider.SearchIndexablesProvider: android.content.UriMatcher mMatcher>;

        $r15 = r0.<android.provider.SearchIndexablesProvider: java.lang.String mAuthority>;

        virtualinvoke $r16.<android.content.UriMatcher: void addURI(java.lang.String,java.lang.String,int)>($r15, "settings/dynamic_indexables_raw", 6);

        $z0 = r2.<android.content.pm.ProviderInfo: boolean exported>;

        if $z0 == 0 goto label3;

        $z1 = r2.<android.content.pm.ProviderInfo: boolean grantUriPermissions>;

        if $z1 == 0 goto label2;

        $r20 = "android.permission.READ_SEARCH_INDEXABLES";

        $r19 = r2.<android.content.pm.ProviderInfo: java.lang.String readPermission>;

        $z2 = virtualinvoke $r20.<java.lang.String: boolean equals(java.lang.Object)>($r19);

        if $z2 == 0 goto label1;

        specialinvoke r0.<android.content.ContentProvider: void attachInfo(android.content.Context,android.content.pm.ProviderInfo)>(r1, r2);

        return;

     label1:
        $r21 = new java.lang.SecurityException;

        specialinvoke $r21.<java.lang.SecurityException: void <init>(java.lang.String)>("Provider must be protected by READ_SEARCH_INDEXABLES");

        throw $r21;

     label2:
        $r18 = new java.lang.SecurityException;

        specialinvoke $r18.<java.lang.SecurityException: void <init>(java.lang.String)>("Provider must grantUriPermissions");

        throw $r18;

     label3:
        $r17 = new java.lang.SecurityException;

        specialinvoke $r17.<java.lang.SecurityException: void <init>(java.lang.String)>("Provider must be exported");

        throw $r17;
    }

    public final int delete(android.net.Uri, java.lang.String, java.lang.String[])
    {
        android.provider.SearchIndexablesProvider r0;
        android.net.Uri r1;
        java.lang.String r2;
        java.lang.String[] r3;
        java.lang.UnsupportedOperationException $r4;

        r0 := @this: android.provider.SearchIndexablesProvider;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String[];

        $r4 = new java.lang.UnsupportedOperationException;

        specialinvoke $r4.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Delete not supported");

        throw $r4;
    }

    public java.lang.String getType(android.net.Uri)
    {
        android.provider.SearchIndexablesProvider r0;
        android.net.Uri r1;
        int i0;
        android.content.UriMatcher $r3;
        java.lang.StringBuilder $r4;
        java.lang.IllegalArgumentException $r7;
        java.lang.String $r8;

        r0 := @this: android.provider.SearchIndexablesProvider;

        r1 := @parameter0: android.net.Uri;

        $r3 = r0.<android.provider.SearchIndexablesProvider: android.content.UriMatcher mMatcher>;

        i0 = virtualinvoke $r3.<android.content.UriMatcher: int match(android.net.Uri)>(r1);

        if i0 == 1 goto label4;

        if i0 == 2 goto label3;

        if i0 == 3 goto label2;

        if i0 != 6 goto label1;

        goto label3;

     label1:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown URI ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r7 = new java.lang.IllegalArgumentException;

        $r8 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r7;

     label2:
        return "vnd.android.cursor.dir/non_indexables_key";

     label3:
        return "vnd.android.cursor.dir/indexables_raw";

     label4:
        return "vnd.android.cursor.dir/indexables_xml_res";
    }

    public final android.net.Uri insert(android.net.Uri, android.content.ContentValues)
    {
        android.provider.SearchIndexablesProvider r0;
        android.net.Uri r1;
        android.content.ContentValues r2;
        java.lang.UnsupportedOperationException $r3;

        r0 := @this: android.provider.SearchIndexablesProvider;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: android.content.ContentValues;

        $r3 = new java.lang.UnsupportedOperationException;

        specialinvoke $r3.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Insert not supported");

        throw $r3;
    }

    public android.database.Cursor query(android.net.Uri, java.lang.String[], java.lang.String, java.lang.String[], java.lang.String)
    {
        android.provider.SearchIndexablesProvider r0;
        java.lang.String[] r1, r16;
        java.lang.String r2, $r12, r17;
        android.content.UriMatcher $r3;
        int $i0;
        android.database.Cursor $r4, $r5, $r6, $r7, $r8, $r9;
        java.lang.Exception $r13;
        java.lang.Throwable $r14;
        android.net.Uri r15;
        java.lang.UnsupportedOperationException r18;
        java.lang.StringBuilder r19;

        r0 := @this: android.provider.SearchIndexablesProvider;

        r15 := @parameter0: android.net.Uri;

        r16 := @parameter1: java.lang.String[];

        r17 := @parameter2: java.lang.String;

        r1 := @parameter3: java.lang.String[];

        r2 := @parameter4: java.lang.String;

     label01:
        $r3 = r0.<android.provider.SearchIndexablesProvider: android.content.UriMatcher mMatcher>;

        $i0 = virtualinvoke $r3.<android.content.UriMatcher: int match(android.net.Uri)>(r15);

        tableswitch($i0)
        {
            case 1: goto label09;
            case 2: goto label08;
            case 3: goto label07;
            case 4: goto label06;
            case 5: goto label05;
            case 6: goto label04;
            default: goto label02;
        };

     label02:
        r18 = new java.lang.UnsupportedOperationException;

     label03:
        goto label10;

     label04:
        $r4 = virtualinvoke r0.<android.provider.SearchIndexablesProvider: android.database.Cursor queryDynamicRawData(java.lang.String[])>(null);

        return $r4;

     label05:
        $r5 = virtualinvoke r0.<android.provider.SearchIndexablesProvider: android.database.Cursor querySliceUriPairs()>();

        return $r5;

     label06:
        $r6 = virtualinvoke r0.<android.provider.SearchIndexablesProvider: android.database.Cursor querySiteMapPairs()>();

        return $r6;

     label07:
        $r7 = virtualinvoke r0.<android.provider.SearchIndexablesProvider: android.database.Cursor queryNonIndexableKeys(java.lang.String[])>(null);

        return $r7;

     label08:
        $r8 = virtualinvoke r0.<android.provider.SearchIndexablesProvider: android.database.Cursor queryRawData(java.lang.String[])>(null);

        return $r8;

     label09:
        $r9 = virtualinvoke r0.<android.provider.SearchIndexablesProvider: android.database.Cursor queryXmlResources(java.lang.String[])>(null);

        return $r9;

     label10:
        r19 = new java.lang.StringBuilder;

        specialinvoke r19.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown Uri ");

        virtualinvoke r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r15);

        $r12 = virtualinvoke r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r18.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r12);

        throw r18;

     label11:
        $r13 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("IndexablesProvider", "Provider querying exception:", $r13);

        return null;

     label12:
        $r14 := @caughtexception;

        throw $r14;

        catch java.lang.UnsupportedOperationException from label01 to label02 with label12;
        catch java.lang.Exception from label01 to label02 with label11;
        catch java.lang.UnsupportedOperationException from label02 to label03 with label12;
        catch java.lang.Exception from label02 to label03 with label11;
        catch java.lang.UnsupportedOperationException from label04 to label05 with label12;
        catch java.lang.Exception from label04 to label05 with label11;
        catch java.lang.UnsupportedOperationException from label05 to label06 with label12;
        catch java.lang.Exception from label05 to label06 with label11;
        catch java.lang.UnsupportedOperationException from label06 to label07 with label12;
        catch java.lang.Exception from label06 to label07 with label11;
        catch java.lang.UnsupportedOperationException from label07 to label08 with label12;
        catch java.lang.Exception from label07 to label08 with label11;
        catch java.lang.UnsupportedOperationException from label08 to label09 with label12;
        catch java.lang.Exception from label08 to label09 with label11;
        catch java.lang.UnsupportedOperationException from label09 to label10 with label12;
        catch java.lang.Exception from label09 to label10 with label11;
        catch java.lang.UnsupportedOperationException from label10 to label11 with label12;
        catch java.lang.Exception from label10 to label11 with label11;
    }

    public android.database.Cursor queryDynamicRawData(java.lang.String[])
    {
        android.provider.SearchIndexablesProvider r0;
        java.lang.String[] r1;

        r0 := @this: android.provider.SearchIndexablesProvider;

        r1 := @parameter0: java.lang.String[];

        return null;
    }

    public abstract android.database.Cursor queryNonIndexableKeys(java.lang.String[]);

    public abstract android.database.Cursor queryRawData(java.lang.String[]);

    public android.database.Cursor querySiteMapPairs()
    {
        android.provider.SearchIndexablesProvider r0;

        r0 := @this: android.provider.SearchIndexablesProvider;

        return null;
    }

    public android.database.Cursor querySliceUriPairs()
    {
        android.provider.SearchIndexablesProvider r0;

        r0 := @this: android.provider.SearchIndexablesProvider;

        return null;
    }

    public abstract android.database.Cursor queryXmlResources(java.lang.String[]);

    public final int update(android.net.Uri, android.content.ContentValues, java.lang.String, java.lang.String[])
    {
        android.provider.SearchIndexablesProvider r0;
        android.net.Uri r1;
        android.content.ContentValues r2;
        java.lang.String r3;
        java.lang.String[] r4;
        java.lang.UnsupportedOperationException $r5;

        r0 := @this: android.provider.SearchIndexablesProvider;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: android.content.ContentValues;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String[];

        $r5 = new java.lang.UnsupportedOperationException;

        specialinvoke $r5.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Update not supported");

        throw $r5;
    }

    public static void <clinit>()
    {
        <android.provider.SearchIndexablesProvider: java.lang.String TAG> = "IndexablesProvider";

        <android.provider.SearchIndexablesProvider: int MATCH_SLICE_URI_PAIRS_CODE> = 5;

        <android.provider.SearchIndexablesProvider: int MATCH_SITE_MAP_PAIRS_CODE> = 4;

        <android.provider.SearchIndexablesProvider: int MATCH_RES_CODE> = 1;

        <android.provider.SearchIndexablesProvider: int MATCH_RAW_CODE> = 2;

        <android.provider.SearchIndexablesProvider: int MATCH_NON_INDEXABLE_KEYS_CODE> = 3;

        <android.provider.SearchIndexablesProvider: int MATCH_DYNAMIC_RAW_CODE> = 6;

        return;
    }
}
