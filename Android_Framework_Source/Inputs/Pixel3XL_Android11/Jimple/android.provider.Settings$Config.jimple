public final class android.provider.Settings$Config extends android.provider.Settings$NameValueTable
{
    private static final android.provider.Settings$NameValueCache sNameValueCache;
    private static final android.provider.Settings$ContentProviderHolder sProviderHolder;

    static void <clinit>()
    {
        android.provider.Settings$ContentProviderHolder $r0, $r3;
        android.net.Uri $r1, $r4;
        android.provider.Settings$NameValueCache $r2;

        $r0 = new android.provider.Settings$ContentProviderHolder;

        $r1 = <android.provider.DeviceConfig: android.net.Uri CONTENT_URI>;

        specialinvoke $r0.<android.provider.Settings$ContentProviderHolder: void <init>(android.net.Uri)>($r1);

        <android.provider.Settings$Config: android.provider.Settings$ContentProviderHolder sProviderHolder> = $r0;

        $r2 = new android.provider.Settings$NameValueCache;

        $r4 = <android.provider.DeviceConfig: android.net.Uri CONTENT_URI>;

        $r3 = <android.provider.Settings$Config: android.provider.Settings$ContentProviderHolder sProviderHolder>;

        specialinvoke $r2.<android.provider.Settings$NameValueCache: void <init>(android.net.Uri,java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.provider.Settings$ContentProviderHolder)>($r4, "GET_config", "PUT_config", "LIST_config", "SET_ALL_config", $r3);

        <android.provider.Settings$Config: android.provider.Settings$NameValueCache sNameValueCache> = $r2;

        return;
    }

    public void <init>()
    {
        android.provider.Settings$Config r0;

        r0 := @this: android.provider.Settings$Config;

        specialinvoke r0.<android.provider.Settings$NameValueTable: void <init>()>();

        return;
    }

    public static void clearProviderForTest()
    {
        android.provider.Settings$ContentProviderHolder $r0;
        android.provider.Settings$NameValueCache $r1;

        $r0 = <android.provider.Settings$Config: android.provider.Settings$ContentProviderHolder sProviderHolder>;

        virtualinvoke $r0.<android.provider.Settings$ContentProviderHolder: void clearProviderForTest()>();

        $r1 = <android.provider.Settings$Config: android.provider.Settings$NameValueCache sNameValueCache>;

        virtualinvoke $r1.<android.provider.Settings$NameValueCache: void clearGenerationTrackerForTest()>();

        return;
    }

    private static java.lang.String createCompositeName(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1, $r6, $r9;
        java.lang.StringBuilder $r5;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r0);

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = staticinvoke <android.provider.Settings$Config: java.lang.String createPrefix(java.lang.String)>(r0);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r9 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;
    }

    private static java.lang.String createPrefix(java.lang.String)
    {
        java.lang.String r0, $r6;
        java.lang.StringBuilder $r3;

        r0 := @parameter0: java.lang.String;

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r0);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    static java.lang.String getString(android.content.ContentResolver, java.lang.String)
    {
        android.content.ContentResolver r0;
        java.lang.String r1, $r3;
        android.provider.Settings$NameValueCache $r2;
        int $i0;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: java.lang.String;

        $r2 = <android.provider.Settings$Config: android.provider.Settings$NameValueCache sNameValueCache>;

        $i0 = virtualinvoke r0.<android.content.ContentResolver: int getUserId()>();

        $r3 = virtualinvoke $r2.<android.provider.Settings$NameValueCache: java.lang.String getStringForUser(android.content.ContentResolver,java.lang.String,int)>(r0, r1, $i0);

        return $r3;
    }

    public static java.util.Map getStrings(android.content.ContentResolver, java.lang.String, java.util.List)
    {
        int i0, i1, $i2, i3;
        java.util.ArrayList $r1;
        boolean $z0;
        android.provider.Settings$NameValueCache $r2;
        android.util.ArrayMap $r3, r18;
        java.lang.Object $r4, $r7, $r10;
        java.lang.String $r5, $r6, $r8, $r11, $r12, r14, r17;
        android.content.ContentResolver r13;
        java.util.List r15;
        java.util.Iterator r16;

        r13 := @parameter0: android.content.ContentResolver;

        r14 := @parameter1: java.lang.String;

        r15 := @parameter2: java.util.List;

        $r1 = new java.util.ArrayList;

        $i2 = interfaceinvoke r15.<java.util.List: int size()>();

        specialinvoke $r1.<java.util.ArrayList: void <init>(int)>($i2);

        r16 = interfaceinvoke r15.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r16.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r10 = interfaceinvoke r16.<java.util.Iterator: java.lang.Object next()>();

        $r11 = (java.lang.String) $r10;

        $r12 = staticinvoke <android.provider.Settings$Config: java.lang.String createCompositeName(java.lang.String,java.lang.String)>(r14, $r11);

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r12);

        goto label1;

     label2:
        r17 = staticinvoke <android.provider.Settings$Config: java.lang.String createPrefix(java.lang.String)>(r14);

        $r2 = <android.provider.Settings$Config: android.provider.Settings$NameValueCache sNameValueCache>;

        r18 = virtualinvoke $r2.<android.provider.Settings$NameValueCache: android.util.ArrayMap getStringsForPrefix(android.content.ContentResolver,java.lang.String,java.util.List)>(r13, r17, $r1);

        i0 = virtualinvoke r18.<android.util.ArrayMap: int size()>();

        i1 = virtualinvoke r17.<java.lang.String: int length()>();

        $r3 = new android.util.ArrayMap;

        specialinvoke $r3.<android.util.ArrayMap: void <init>(int)>(i0);

        i3 = 0;

     label3:
        if i3 >= i0 goto label4;

        $r4 = virtualinvoke r18.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i3);

        $r5 = (java.lang.String) $r4;

        $r6 = virtualinvoke $r5.<java.lang.String: java.lang.String substring(int)>(i1);

        $r7 = virtualinvoke r18.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i3);

        $r8 = (java.lang.String) $r7;

        virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, $r8);

        i3 = i3 + 1;

        goto label3;

     label4:
        return $r3;
    }

    static boolean putString(android.content.ContentResolver, java.lang.String, java.lang.String, java.lang.String, boolean)
    {
        android.content.ContentResolver r0;
        java.lang.String r1, r2, r3, $r5;
        boolean z0, $z1;
        android.provider.Settings$NameValueCache $r4;
        int $i0;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        z0 := @parameter4: boolean;

        $r4 = <android.provider.Settings$Config: android.provider.Settings$NameValueCache sNameValueCache>;

        $r5 = staticinvoke <android.provider.Settings$Config: java.lang.String createCompositeName(java.lang.String,java.lang.String)>(r1, r2);

        $i0 = virtualinvoke r0.<android.content.ContentResolver: int getUserId()>();

        $z1 = virtualinvoke $r4.<android.provider.Settings$NameValueCache: boolean putStringForUser(android.content.ContentResolver,java.lang.String,java.lang.String,java.lang.String,boolean,int,boolean)>(r0, $r5, r3, null, z0, $i0, 0);

        return $z1;
    }

    public static void registerMonitorCallback(android.content.ContentResolver, android.os.RemoteCallback)
    {
        android.content.ContentResolver r0;
        android.os.RemoteCallback r1;
        int $i0;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: android.os.RemoteCallback;

        $i0 = virtualinvoke r0.<android.content.ContentResolver: int getUserId()>();

        staticinvoke <android.provider.Settings$Config: void registerMonitorCallbackAsUser(android.content.ContentResolver,int,android.os.RemoteCallback)>(r0, $i0, r1);

        return;
    }

    private static void registerMonitorCallbackAsUser(android.content.ContentResolver, int, android.os.RemoteCallback)
    {
        int i0;
        android.os.RemoteCallback r0;
        android.os.Bundle r1;
        android.provider.Settings$ContentProviderHolder $r2, $r6;
        android.content.IContentProvider $r3;
        java.lang.String $r4, $r5, $r8;
        android.net.Uri $r7;
        android.os.RemoteException $r10;
        android.content.ContentResolver r11;

        r11 := @parameter0: android.content.ContentResolver;

        i0 := @parameter1: int;

        r0 := @parameter2: android.os.RemoteCallback;

     label1:
        r1 = new android.os.Bundle;

        specialinvoke r1.<android.os.Bundle: void <init>()>();

        virtualinvoke r1.<android.os.Bundle: void putInt(java.lang.String,int)>("_user", i0);

        virtualinvoke r1.<android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)>("_monitor_callback_key", r0);

        $r2 = <android.provider.Settings$Config: android.provider.Settings$ContentProviderHolder sProviderHolder>;

        $r3 = virtualinvoke $r2.<android.provider.Settings$ContentProviderHolder: android.content.IContentProvider getProvider(android.content.ContentResolver)>(r11);

        $r4 = virtualinvoke r11.<android.content.ContentResolver: java.lang.String getPackageName()>();

        $r5 = virtualinvoke r11.<android.content.ContentResolver: java.lang.String getAttributionTag()>();

        $r6 = <android.provider.Settings$Config: android.provider.Settings$ContentProviderHolder sProviderHolder>;

        $r7 = staticinvoke <android.provider.Settings$ContentProviderHolder: android.net.Uri access$000(android.provider.Settings$ContentProviderHolder)>($r6);

        $r8 = virtualinvoke $r7.<android.net.Uri: java.lang.String getAuthority()>();

        interfaceinvoke $r3.<android.content.IContentProvider: android.os.Bundle call(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.os.Bundle)>($r4, $r5, $r8, "REGISTER_MONITOR_CALLBACK_config", null, r1);

     label2:
        goto label4;

     label3:
        $r10 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("Settings", "Can\'t register config monitor callback", $r10);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    static void resetToDefaults(android.content.ContentResolver, int, java.lang.String)
    {
        int i0, $i1;
        android.os.Bundle r0;
        android.provider.Settings$ContentProviderHolder $r1, $r5;
        android.content.IContentProvider $r2;
        java.lang.String $r3, $r4, $r7, $r9, $r15, r17;
        android.net.Uri $r6, $r13;
        android.os.RemoteException $r10;
        java.lang.StringBuilder $r11;
        android.content.ContentResolver r16;

        r16 := @parameter0: android.content.ContentResolver;

        i0 := @parameter1: int;

        r17 := @parameter2: java.lang.String;

     label1:
        r0 = new android.os.Bundle;

        specialinvoke r0.<android.os.Bundle: void <init>()>();

        $i1 = virtualinvoke r16.<android.content.ContentResolver: int getUserId()>();

        virtualinvoke r0.<android.os.Bundle: void putInt(java.lang.String,int)>("_user", $i1);

        virtualinvoke r0.<android.os.Bundle: void putInt(java.lang.String,int)>("_reset_mode", i0);

     label2:
        if r17 == null goto label4;

     label3:
        $r9 = staticinvoke <android.provider.Settings$Config: java.lang.String createPrefix(java.lang.String)>(r17);

        virtualinvoke r0.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("_prefix", $r9);

     label4:
        $r1 = <android.provider.Settings$Config: android.provider.Settings$ContentProviderHolder sProviderHolder>;

        $r2 = virtualinvoke $r1.<android.provider.Settings$ContentProviderHolder: android.content.IContentProvider getProvider(android.content.ContentResolver)>(r16);

        $r3 = virtualinvoke r16.<android.content.ContentResolver: java.lang.String getPackageName()>();

        $r4 = virtualinvoke r16.<android.content.ContentResolver: java.lang.String getAttributionTag()>();

        $r5 = <android.provider.Settings$Config: android.provider.Settings$ContentProviderHolder sProviderHolder>;

        $r6 = staticinvoke <android.provider.Settings$ContentProviderHolder: android.net.Uri access$000(android.provider.Settings$ContentProviderHolder)>($r5);

        $r7 = virtualinvoke $r6.<android.net.Uri: java.lang.String getAuthority()>();

        interfaceinvoke $r2.<android.content.IContentProvider: android.os.Bundle call(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.os.Bundle)>($r3, $r4, $r7, "RESET_config", null, r0);

     label5:
        goto label7;

     label6:
        $r10 := @caughtexception;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t reset to defaults for ");

        $r13 = <android.provider.DeviceConfig: android.net.Uri CONTENT_URI>;

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r13);

        $r15 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("Settings", $r15, $r10);

     label7:
        return;

        catch android.os.RemoteException from label1 to label2 with label6;
        catch android.os.RemoteException from label3 to label4 with label6;
        catch android.os.RemoteException from label4 to label5 with label6;
    }

    public static boolean setStrings(android.content.ContentResolver, java.lang.String, java.util.Map) throws android.provider.DeviceConfig$BadConfigException
    {
        android.content.ContentResolver r0;
        java.lang.String r1, $r8, $r12, $r13, $r15;
        java.util.Iterator r3;
        java.util.HashMap $r4;
        java.util.Set $r5, $r6;
        int $i0;
        boolean $z0, $z1;
        android.provider.Settings$NameValueCache $r7;
        android.provider.DeviceConfig$BadConfigException $r9;
        java.lang.Object $r10, $r11, $r14;
        java.util.Map r17;
        java.util.Map$Entry r18;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: java.lang.String;

        r17 := @parameter2: java.util.Map;

        $r4 = new java.util.HashMap;

        $r5 = interfaceinvoke r17.<java.util.Map: java.util.Set keySet()>();

        $i0 = interfaceinvoke $r5.<java.util.Set: int size()>();

        specialinvoke $r4.<java.util.HashMap: void <init>(int)>($i0);

        $r6 = interfaceinvoke r17.<java.util.Map: java.util.Set entrySet()>();

        r3 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r10 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r18 = (java.util.Map$Entry) $r10;

        $r11 = interfaceinvoke r18.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r12 = (java.lang.String) $r11;

        $r13 = staticinvoke <android.provider.Settings$Config: java.lang.String createCompositeName(java.lang.String,java.lang.String)>(r1, $r12);

        $r14 = interfaceinvoke r18.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r15 = (java.lang.String) $r14;

        virtualinvoke $r4.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r13, $r15);

        goto label1;

     label2:
        $r7 = <android.provider.Settings$Config: android.provider.Settings$NameValueCache sNameValueCache>;

        $r8 = staticinvoke <android.provider.Settings$Config: java.lang.String createPrefix(java.lang.String)>(r1);

        $z1 = virtualinvoke $r7.<android.provider.Settings$NameValueCache: boolean setStringsForPrefix(android.content.ContentResolver,java.lang.String,java.util.HashMap)>(r0, $r8, $r4);

        if $z1 == 0 goto label3;

        return 1;

     label3:
        $r9 = new android.provider.DeviceConfig$BadConfigException;

        specialinvoke $r9.<android.provider.DeviceConfig$BadConfigException: void <init>()>();

        throw $r9;
    }
}
