final class android.provider.Settings$ContentProviderHolder extends java.lang.Object
{
    private android.content.IContentProvider mContentProvider;
    private final java.lang.Object mLock;
    private final android.net.Uri mUri;

    public void <init>(android.net.Uri)
    {
        android.provider.Settings$ContentProviderHolder r0;
        android.net.Uri r1;
        java.lang.Object $r2;

        r0 := @this: android.provider.Settings$ContentProviderHolder;

        r1 := @parameter0: android.net.Uri;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.lang.Object;

        specialinvoke $r2.<java.lang.Object: void <init>()>();

        r0.<android.provider.Settings$ContentProviderHolder: java.lang.Object mLock> = $r2;

        r0.<android.provider.Settings$ContentProviderHolder: android.net.Uri mUri> = r1;

        return;
    }

    static android.net.Uri access$000(android.provider.Settings$ContentProviderHolder)
    {
        android.provider.Settings$ContentProviderHolder r0;
        android.net.Uri $r1;

        r0 := @parameter0: android.provider.Settings$ContentProviderHolder;

        $r1 = r0.<android.provider.Settings$ContentProviderHolder: android.net.Uri mUri>;

        return $r1;
    }

    public void clearProviderForTest()
    {
        android.provider.Settings$ContentProviderHolder r0;
        java.lang.Object r1;
        java.lang.Throwable $r3;

        r0 := @this: android.provider.Settings$ContentProviderHolder;

        r1 = r0.<android.provider.Settings$ContentProviderHolder: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        r0.<android.provider.Settings$ContentProviderHolder: android.content.IContentProvider mContentProvider> = null;

        exitmonitor r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public android.content.IContentProvider getProvider(android.content.ContentResolver)
    {
        android.provider.Settings$ContentProviderHolder r0;
        java.lang.Object r1;
        android.content.IContentProvider $r2, $r5, r8;
        android.net.Uri $r3;
        java.lang.String $r4;
        java.lang.Throwable $r6;
        android.content.ContentResolver r7;

        r0 := @this: android.provider.Settings$ContentProviderHolder;

        r7 := @parameter0: android.content.ContentResolver;

        r1 = r0.<android.provider.Settings$ContentProviderHolder: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r2 = r0.<android.provider.Settings$ContentProviderHolder: android.content.IContentProvider mContentProvider>;

        if $r2 != null goto label2;

        $r3 = r0.<android.provider.Settings$ContentProviderHolder: android.net.Uri mUri>;

        $r4 = virtualinvoke $r3.<android.net.Uri: java.lang.String getAuthority()>();

        $r5 = virtualinvoke r7.<android.content.ContentResolver: android.content.IContentProvider acquireProvider(java.lang.String)>($r4);

        r0.<android.provider.Settings$ContentProviderHolder: android.content.IContentProvider mContentProvider> = $r5;

     label2:
        r8 = r0.<android.provider.Settings$ContentProviderHolder: android.content.IContentProvider mContentProvider>;

        exitmonitor r1;

     label3:
        return r8;

     label4:
        $r6 := @caughtexception;

     label5:
        exitmonitor r1;

     label6:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }
}
