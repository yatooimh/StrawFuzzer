public final class android.provider.Settings$Secure extends android.provider.Settings$NameValueTable
{
    public static final java.lang.String ACCESSIBILITY_AUTOCLICK_DELAY;
    public static final java.lang.String ACCESSIBILITY_AUTOCLICK_ENABLED;
    public static final java.lang.String ACCESSIBILITY_BUTTON_TARGETS;
    public static final java.lang.String ACCESSIBILITY_BUTTON_TARGET_COMPONENT;
    public static final java.lang.String ACCESSIBILITY_CAPTIONING_BACKGROUND_COLOR;
    public static final java.lang.String ACCESSIBILITY_CAPTIONING_EDGE_COLOR;
    public static final java.lang.String ACCESSIBILITY_CAPTIONING_EDGE_TYPE;
    public static final java.lang.String ACCESSIBILITY_CAPTIONING_ENABLED;
    public static final java.lang.String ACCESSIBILITY_CAPTIONING_FONT_SCALE;
    public static final java.lang.String ACCESSIBILITY_CAPTIONING_FOREGROUND_COLOR;
    public static final java.lang.String ACCESSIBILITY_CAPTIONING_LOCALE;
    public static final java.lang.String ACCESSIBILITY_CAPTIONING_PRESET;
    public static final java.lang.String ACCESSIBILITY_CAPTIONING_TYPEFACE;
    public static final java.lang.String ACCESSIBILITY_CAPTIONING_WINDOW_COLOR;
    public static final java.lang.String ACCESSIBILITY_DISPLAY_DALTONIZER;
    public static final java.lang.String ACCESSIBILITY_DISPLAY_DALTONIZER_ENABLED;
    public static final java.lang.String ACCESSIBILITY_DISPLAY_INVERSION_ENABLED;
    public static final java.lang.String ACCESSIBILITY_DISPLAY_MAGNIFICATION_AUTO_UPDATE;
    public static final java.lang.String ACCESSIBILITY_DISPLAY_MAGNIFICATION_ENABLED;
    public static final java.lang.String ACCESSIBILITY_DISPLAY_MAGNIFICATION_NAVBAR_ENABLED;
    public static final java.lang.String ACCESSIBILITY_DISPLAY_MAGNIFICATION_SCALE;
    public static final java.lang.String ACCESSIBILITY_ENABLED;
    public static final java.lang.String ACCESSIBILITY_HIGH_TEXT_CONTRAST_ENABLED;
    public static final java.lang.String ACCESSIBILITY_INTERACTIVE_UI_TIMEOUT_MS;
    public static final java.lang.String ACCESSIBILITY_LARGE_POINTER_ICON;
    public static final java.lang.String ACCESSIBILITY_MAGNIFICATION_MODE;
    public static final int ACCESSIBILITY_MAGNIFICATION_MODE_FULLSCREEN;
    public static final int ACCESSIBILITY_MAGNIFICATION_MODE_WINDOW;
    public static final java.lang.String ACCESSIBILITY_NON_INTERACTIVE_UI_TIMEOUT_MS;
    public static final java.lang.String ACCESSIBILITY_SHORTCUT_DIALOG_SHOWN;
    public static final java.lang.String ACCESSIBILITY_SHORTCUT_ON_LOCK_SCREEN;
    public static final java.lang.String ACCESSIBILITY_SHORTCUT_TARGET_MAGNIFICATION_CONTROLLER;
    public static final java.lang.String ACCESSIBILITY_SHORTCUT_TARGET_SERVICE;
    public static final java.lang.String ACCESSIBILITY_SOFT_KEYBOARD_MODE;
    public static final java.lang.String ACCESSIBILITY_SPEAK_PASSWORD;
    public static final java.lang.String ADAPTIVE_SLEEP;
    public static final java.lang.String ADB_ENABLED;
    public static final java.lang.String ALLOWED_GEOLOCATION_ORIGINS;
    public static final java.lang.String ALLOW_MOCK_LOCATION;
    public static final java.lang.String ALWAYS_ON_VPN_APP;
    public static final java.lang.String ALWAYS_ON_VPN_LOCKDOWN;
    public static final java.lang.String ALWAYS_ON_VPN_LOCKDOWN_WHITELIST;
    public static final java.lang.String ANDROID_ID;
    public static final java.lang.String ANR_SHOW_BACKGROUND;
    public static final java.lang.String ASSISTANT;
    public static final java.lang.String ASSIST_DISCLOSURE_ENABLED;
    public static final java.lang.String ASSIST_GESTURE_ENABLED;
    public static final java.lang.String ASSIST_GESTURE_SENSITIVITY;
    public static final java.lang.String ASSIST_GESTURE_SETUP_COMPLETE;
    public static final java.lang.String ASSIST_GESTURE_SILENCE_ALERTS_ENABLED;
    public static final java.lang.String ASSIST_GESTURE_WAKE_ENABLED;
    public static final java.lang.String ASSIST_SCREENSHOT_ENABLED;
    public static final java.lang.String ASSIST_STRUCTURE_ENABLED;
    public static final java.lang.String ATTENTIVE_TIMEOUT;
    public static final java.lang.String AUTOFILL_FEATURE_FIELD_CLASSIFICATION;
    public static final java.lang.String AUTOFILL_SERVICE;
    public static final java.lang.String AUTOFILL_SERVICE_SEARCH_URI;
    public static final java.lang.String AUTOFILL_USER_DATA_MAX_CATEGORY_COUNT;
    public static final java.lang.String AUTOFILL_USER_DATA_MAX_FIELD_CLASSIFICATION_IDS_SIZE;
    public static final java.lang.String AUTOFILL_USER_DATA_MAX_USER_DATA_SIZE;
    public static final java.lang.String AUTOFILL_USER_DATA_MAX_VALUE_LENGTH;
    public static final java.lang.String AUTOFILL_USER_DATA_MIN_VALUE_LENGTH;
    public static final java.lang.String AUTOMATIC_STORAGE_MANAGER_BYTES_CLEARED;
    public static final java.lang.String AUTOMATIC_STORAGE_MANAGER_DAYS_TO_RETAIN;
    public static final int AUTOMATIC_STORAGE_MANAGER_DAYS_TO_RETAIN_DEFAULT;
    public static final java.lang.String AUTOMATIC_STORAGE_MANAGER_ENABLED;
    public static final java.lang.String AUTOMATIC_STORAGE_MANAGER_LAST_RUN;
    public static final java.lang.String AUTOMATIC_STORAGE_MANAGER_TURNED_OFF_BY_POLICY;
    public static final java.lang.String AUTO_REVOKE_DISABLED;
    public static final java.lang.String AWARE_ENABLED;
    public static final java.lang.String AWARE_LOCK_ENABLED;
    public static final java.lang.String AWARE_TAP_PAUSE_GESTURE_COUNT;
    public static final java.lang.String AWARE_TAP_PAUSE_TOUCH_COUNT;
    public static final java.lang.String BACKGROUND_DATA;
    public static final java.lang.String BACKUP_AUTO_RESTORE;
    public static final java.lang.String BACKUP_ENABLED;
    public static final java.lang.String BACKUP_LOCAL_TRANSPORT_PARAMETERS;
    public static final java.lang.String BACKUP_MANAGER_CONSTANTS;
    public static final java.lang.String BACKUP_PROVISIONED;
    public static final java.lang.String BACKUP_TRANSPORT;
    public static final java.lang.String BACK_GESTURE_INSET_SCALE_LEFT;
    public static final java.lang.String BACK_GESTURE_INSET_SCALE_RIGHT;
    public static final java.lang.String BIOMETRIC_DEBUG_ENABLED;
    public static final java.lang.String BLUETOOTH_ON;
    public static final java.lang.String BLUETOOTH_ON_WHILE_DRIVING;
    public static final java.lang.String BUBBLE_IMPORTANT_CONVERSATIONS;
    public static final java.lang.String BUGREPORT_IN_POWER_MENU;
    public static final java.lang.String CALL_SCREENING_DEFAULT_COMPONENT;
    public static final java.lang.String CAMERA_DOUBLE_TAP_POWER_GESTURE_DISABLED;
    public static final java.lang.String CAMERA_DOUBLE_TWIST_TO_FLIP_ENABLED;
    public static final java.lang.String CAMERA_GESTURE_DISABLED;
    public static final java.lang.String CAMERA_LIFT_TRIGGER_ENABLED;
    public static final int CAMERA_LIFT_TRIGGER_ENABLED_DEFAULT;
    public static final java.lang.String CARRIER_APPS_HANDLED;
    public static final java.lang.String CHARGING_SOUNDS_ENABLED;
    public static final java.lang.String CHARGING_VIBRATION_ENABLED;
    private static final java.util.Set CLONE_TO_MANAGED_PROFILE;
    public static final java.lang.String CMAS_ADDITIONAL_BROADCAST_PKG;
    public static final java.lang.String COMPLETED_CATEGORY_PREFIX;
    public static final java.lang.String CONNECTIVITY_RELEASE_PENDING_INTENT_DELAY_MS;
    public static final java.lang.String CONTENT_CAPTURE_ENABLED;
    public static final android.net.Uri CONTENT_URI;
    public static final java.lang.String CONTROLS_ENABLED;
    public static final java.lang.String CROSS_PROFILE_CALENDAR_ENABLED;
    public static final java.lang.String DARK_MODE_DIALOG_SEEN;
    public static final java.lang.String DARK_THEME_CUSTOM_END_TIME;
    public static final java.lang.String DARK_THEME_CUSTOM_START_TIME;
    public static final java.lang.String DATA_ROAMING;
    public static final java.lang.String DEFAULT_INPUT_METHOD;
    public static final java.lang.String DEVELOPMENT_SETTINGS_ENABLED;
    public static final java.lang.String DEVICE_PAIRED;
    public static final java.lang.String DEVICE_PROVISIONED;
    public static final java.lang.String DIALER_DEFAULT_APPLICATION;
    public static final java.lang.String DISABLED_PRINT_SERVICES;
    public static final java.lang.String DISABLED_SYSTEM_INPUT_METHODS;
    public static final java.lang.String DISPLAY_DENSITY_FORCED;
    public static final java.lang.String DISPLAY_WHITE_BALANCE_ENABLED;
    public static final java.lang.String DOCKED_CLOCK_FACE;
    public static final java.lang.String DOUBLE_TAP_TO_WAKE;
    public static final java.lang.String DOZE_ALWAYS_ON;
    public static final java.lang.String DOZE_DOUBLE_TAP_GESTURE;
    public static final java.lang.String DOZE_ENABLED;
    public static final java.lang.String DOZE_PICK_UP_GESTURE;
    public static final java.lang.String DOZE_PULSE_ON_LONG_PRESS;
    public static final java.lang.String DOZE_TAP_SCREEN_GESTURE;
    public static final java.lang.String DOZE_WAKE_DISPLAY_GESTURE;
    public static final java.lang.String DOZE_WAKE_LOCK_SCREEN_GESTURE;
    public static final java.lang.String EMERGENCY_ASSISTANCE_APPLICATION;
    public static final java.lang.String ENABLED_ACCESSIBILITY_SERVICES;
    public static final java.lang.String ENABLED_INPUT_METHODS;
    public static final java.lang.String ENABLED_NOTIFICATION_ASSISTANT;
    public static final java.lang.String ENABLED_NOTIFICATION_LISTENERS;
    public static final java.lang.String ENABLED_NOTIFICATION_POLICY_ACCESS_PACKAGES;
    public static final java.lang.String ENABLED_PRINT_SERVICES;
    public static final java.lang.String ENABLED_VR_LISTENERS;
    public static final java.lang.String ENHANCED_VOICE_PRIVACY_ENABLED;
    public static final java.lang.String FACE_UNLOCK_ALWAYS_REQUIRE_CONFIRMATION;
    public static final java.lang.String FACE_UNLOCK_APP_ENABLED;
    public static final java.lang.String FACE_UNLOCK_ATTENTION_REQUIRED;
    public static final java.lang.String FACE_UNLOCK_DISMISSES_KEYGUARD;
    public static final java.lang.String FACE_UNLOCK_DIVERSITY_REQUIRED;
    public static final java.lang.String FACE_UNLOCK_KEYGUARD_ENABLED;
    public static final java.lang.String FACE_UNLOCK_RE_ENROLL;
    public static final java.lang.String FLASHLIGHT_AVAILABLE;
    public static final java.lang.String FLASHLIGHT_ENABLED;
    public static final java.lang.String GLOBAL_ACTIONS_PANEL_AVAILABLE;
    public static final java.lang.String GLOBAL_ACTIONS_PANEL_DEBUG_ENABLED;
    public static final java.lang.String GLOBAL_ACTIONS_PANEL_ENABLED;
    public static final java.lang.String HTTP_PROXY;
    public static final java.lang.String HUSH_GESTURE_USED;
    public static final java.lang.String IMMERSIVE_MODE_CONFIRMATIONS;
    public static final java.lang.String INCALL_BACK_BUTTON_BEHAVIOR;
    public static final int INCALL_BACK_BUTTON_BEHAVIOR_DEFAULT;
    public static final int INCALL_BACK_BUTTON_BEHAVIOR_HANGUP;
    public static final int INCALL_BACK_BUTTON_BEHAVIOR_NONE;
    public static final java.lang.String INCALL_POWER_BUTTON_BEHAVIOR;
    public static final int INCALL_POWER_BUTTON_BEHAVIOR_DEFAULT;
    public static final int INCALL_POWER_BUTTON_BEHAVIOR_HANGUP;
    public static final int INCALL_POWER_BUTTON_BEHAVIOR_SCREEN_OFF;
    public static final java.lang.String INPUT_METHODS_SUBTYPE_HISTORY;
    public static final java.lang.String INPUT_METHOD_SELECTOR_VISIBILITY;
    public static final java.lang.String INSTALL_NON_MARKET_APPS;
    public static final java.lang.String INSTANT_APPS_ENABLED;
    public static final java.util.Set INSTANT_APP_SETTINGS;
    public static final java.lang.String IN_CALL_NOTIFICATION_ENABLED;
    public static final java.lang.String KEYGUARD_SLICE_URI;
    public static final java.lang.String LAST_SETUP_SHOWN;
    public static final java.lang.String[] LEGACY_RESTORE_SETTINGS;
    public static final java.lang.String LOCATION_ACCESS_CHECK_DELAY_MILLIS;
    public static final java.lang.String LOCATION_ACCESS_CHECK_INTERVAL_MILLIS;
    public static final java.lang.String LOCATION_CHANGER;
    public static final int LOCATION_CHANGER_QUICK_SETTINGS;
    public static final int LOCATION_CHANGER_SYSTEM_SETTINGS;
    public static final int LOCATION_CHANGER_UNKNOWN;
    public static final java.lang.String LOCATION_COARSE_ACCURACY_M;
    public static final java.lang.String LOCATION_MODE;
    public static final int LOCATION_MODE_BATTERY_SAVING;
    public static final int LOCATION_MODE_HIGH_ACCURACY;
    public static final int LOCATION_MODE_OFF;
    public static final int LOCATION_MODE_ON;
    public static final int LOCATION_MODE_SENSORS_ONLY;
    public static final java.lang.String LOCATION_PERMISSIONS_UPGRADE_TO_Q_MODE;
    public static final java.lang.String LOCATION_PROVIDERS_ALLOWED;
    public static final java.lang.String LOCKDOWN_IN_POWER_MENU;
    public static final java.lang.String LOCK_BIOMETRIC_WEAK_FLAGS;
    public static final java.lang.String LOCK_PATTERN_ENABLED;
    public static final java.lang.String LOCK_PATTERN_TACTILE_FEEDBACK_ENABLED;
    public static final java.lang.String LOCK_PATTERN_VISIBLE;
    public static final java.lang.String LOCK_SCREEN_ALLOW_PRIVATE_NOTIFICATIONS;
    public static final java.lang.String LOCK_SCREEN_ALLOW_REMOTE_INPUT;
    public static final java.lang.String LOCK_SCREEN_APPWIDGET_IDS;
    public static final java.lang.String LOCK_SCREEN_CUSTOM_CLOCK_FACE;
    public static final java.lang.String LOCK_SCREEN_FALLBACK_APPWIDGET_ID;
    public static final java.lang.String LOCK_SCREEN_LOCK_AFTER_TIMEOUT;
    public static final java.lang.String LOCK_SCREEN_OWNER_INFO;
    public static final java.lang.String LOCK_SCREEN_OWNER_INFO_ENABLED;
    public static final java.lang.String LOCK_SCREEN_SHOW_NOTIFICATIONS;
    public static final java.lang.String LOCK_SCREEN_SHOW_SILENT_NOTIFICATIONS;
    public static final java.lang.String LOCK_SCREEN_STICKY_APPWIDGET;
    public static final java.lang.String LOCK_SCREEN_WHEN_TRUST_LOST;
    public static final java.lang.String LOCK_TO_APP_EXIT_LOCKED;
    public static final java.lang.String LOGGING_ID;
    public static final java.lang.String LONG_PRESS_TIMEOUT;
    public static final java.lang.String LOW_POWER_MANUAL_ACTIVATION_COUNT;
    public static final java.lang.String LOW_POWER_WARNING_ACKNOWLEDGED;
    public static final java.lang.String MANAGED_PROFILE_CONTACT_REMOTE_SEARCH;
    public static final java.lang.String MANAGED_PROVISIONING_DPC_DOWNLOADED;
    public static final java.lang.String MANUAL_RINGER_TOGGLE_COUNT;
    public static final java.lang.String MEDIA_CONTROLS_RESUME;
    public static final java.lang.String MINIMAL_POST_PROCESSING_ALLOWED;
    public static final java.lang.String MOUNT_PLAY_NOTIFICATION_SND;
    public static final java.lang.String MOUNT_UMS_AUTOSTART;
    public static final java.lang.String MOUNT_UMS_NOTIFY_ENABLED;
    public static final java.lang.String MOUNT_UMS_PROMPT;
    private static final java.util.HashSet MOVED_TO_GLOBAL;
    private static final java.util.HashSet MOVED_TO_LOCK_SETTINGS;
    public static final java.lang.String MULTI_PRESS_TIMEOUT;
    public static final java.lang.String NAVIGATION_MODE;
    public static final java.lang.String NEARBY_SHARING_COMPONENT;
    public static final java.lang.String NETWORK_PREFERENCE;
    public static final java.lang.String NFC_PAYMENT_DEFAULT_COMPONENT;
    public static final java.lang.String NFC_PAYMENT_FOREGROUND;
    public static final java.lang.String NIGHT_DISPLAY_ACTIVATED;
    public static final java.lang.String NIGHT_DISPLAY_AUTO_MODE;
    public static final java.lang.String NIGHT_DISPLAY_COLOR_TEMPERATURE;
    public static final java.lang.String NIGHT_DISPLAY_CUSTOM_END_TIME;
    public static final java.lang.String NIGHT_DISPLAY_CUSTOM_START_TIME;
    public static final java.lang.String NIGHT_DISPLAY_LAST_ACTIVATED_TIME;
    public static final java.lang.String NOTIFICATION_BADGING;
    public static final java.lang.String NOTIFICATION_DISMISS_RTL;
    public static final java.lang.String NOTIFICATION_HISTORY_ENABLED;
    public static final java.lang.String NOTIFICATION_NEW_INTERRUPTION_MODEL;
    public static final java.lang.String NUM_ROTATION_SUGGESTIONS_ACCEPTED;
    public static final java.lang.String ODI_CAPTIONS_ENABLED;
    public static final java.lang.String PACKAGES_TO_CLEAR_DATA_BEFORE_FULL_RESTORE;
    public static final java.lang.String PARENTAL_CONTROL_ENABLED;
    public static final java.lang.String PARENTAL_CONTROL_LAST_UPDATE;
    public static final java.lang.String PARENTAL_CONTROL_REDIRECT_URL;
    public static final java.lang.String PAYMENT_SERVICE_SEARCH_URI;
    public static final java.lang.String PEOPLE_STRIP;
    public static final java.lang.String POWER_MENU_LOCKED_SHOW_CONTENT;
    public static final java.lang.String PREFERRED_TTY_MODE;
    public static final java.lang.String PRINT_SERVICE_SEARCH_URI;
    public static final java.lang.String QS_AUTO_ADDED_TILES;
    public static final java.lang.String QS_TILES;
    public static final java.lang.String RTT_CALLING_MODE;
    public static final java.lang.String SCREENSAVER_ACTIVATE_ON_DOCK;
    public static final java.lang.String SCREENSAVER_ACTIVATE_ON_SLEEP;
    public static final java.lang.String SCREENSAVER_COMPONENTS;
    public static final java.lang.String SCREENSAVER_DEFAULT_COMPONENT;
    public static final java.lang.String SCREENSAVER_ENABLED;
    public static final java.lang.String SEARCH_GLOBAL_SEARCH_ACTIVITY;
    public static final java.lang.String SEARCH_MAX_RESULTS_PER_SOURCE;
    public static final java.lang.String SEARCH_MAX_RESULTS_TO_DISPLAY;
    public static final java.lang.String SEARCH_MAX_SHORTCUTS_RETURNED;
    public static final java.lang.String SEARCH_MAX_SOURCE_EVENT_AGE_MILLIS;
    public static final java.lang.String SEARCH_MAX_STAT_AGE_MILLIS;
    public static final java.lang.String SEARCH_MIN_CLICKS_FOR_SOURCE_RANKING;
    public static final java.lang.String SEARCH_MIN_IMPRESSIONS_FOR_SOURCE_RANKING;
    public static final java.lang.String SEARCH_NUM_PROMOTED_SOURCES;
    public static final java.lang.String SEARCH_PER_SOURCE_CONCURRENT_QUERY_LIMIT;
    public static final java.lang.String SEARCH_PREFILL_MILLIS;
    public static final java.lang.String SEARCH_PROMOTED_SOURCE_DEADLINE_MILLIS;
    public static final java.lang.String SEARCH_QUERY_THREAD_CORE_POOL_SIZE;
    public static final java.lang.String SEARCH_QUERY_THREAD_MAX_POOL_SIZE;
    public static final java.lang.String SEARCH_SHORTCUT_REFRESH_CORE_POOL_SIZE;
    public static final java.lang.String SEARCH_SHORTCUT_REFRESH_MAX_POOL_SIZE;
    public static final java.lang.String SEARCH_SOURCE_TIMEOUT_MILLIS;
    public static final java.lang.String SEARCH_THREAD_KEEPALIVE_SECONDS;
    public static final java.lang.String SEARCH_WEB_RESULTS_OVERRIDE_LIMIT;
    public static final java.lang.String SECURE_FRP_MODE;
    public static final java.lang.String SELECTED_INPUT_METHOD_SUBTYPE;
    public static final java.lang.String SELECTED_SPELL_CHECKER;
    public static final java.lang.String SELECTED_SPELL_CHECKER_SUBTYPE;
    public static final java.lang.String SETTINGS_CLASSNAME;
    public static final java.lang.String SHOW_FIRST_CRASH_DIALOG_DEV_OPTION;
    public static final java.lang.String SHOW_IME_WITH_HARD_KEYBOARD;
    public static final java.lang.String SHOW_MEDIA_WHEN_BYPASSING;
    public static final int SHOW_MODE_AUTO;
    public static final int SHOW_MODE_HIDDEN;
    public static final java.lang.String SHOW_NOTE_ABOUT_NOTIFICATION_HIDING;
    public static final java.lang.String SHOW_NOTIFICATION_SNOOZE;
    public static final java.lang.String SHOW_ROTATION_SUGGESTIONS;
    public static final int SHOW_ROTATION_SUGGESTIONS_DEFAULT;
    public static final int SHOW_ROTATION_SUGGESTIONS_DISABLED;
    public static final int SHOW_ROTATION_SUGGESTIONS_ENABLED;
    public static final java.lang.String SHOW_ZEN_SETTINGS_SUGGESTION;
    public static final java.lang.String SHOW_ZEN_UPGRADE_NOTIFICATION;
    public static final java.lang.String SILENCE_ALARMS_GESTURE_COUNT;
    public static final java.lang.String SILENCE_ALARMS_TOUCH_COUNT;
    public static final java.lang.String SILENCE_CALL_GESTURE_COUNT;
    public static final java.lang.String SILENCE_CALL_TOUCH_COUNT;
    public static final java.lang.String SILENCE_GESTURE;
    public static final java.lang.String SILENCE_TIMER_GESTURE_COUNT;
    public static final java.lang.String SILENCE_TIMER_TOUCH_COUNT;
    public static final java.lang.String SKIP_DIRECTION;
    public static final java.lang.String SKIP_FIRST_USE_HINTS;
    public static final java.lang.String SKIP_GESTURE;
    public static final java.lang.String SKIP_GESTURE_COUNT;
    public static final java.lang.String SKIP_TOUCH_COUNT;
    public static final java.lang.String SLEEP_TIMEOUT;
    public static final java.lang.String SMS_DEFAULT_APPLICATION;
    public static final java.lang.String SPELL_CHECKER_ENABLED;
    public static final java.lang.String SUPPRESS_AUTO_BATTERY_SAVER_SUGGESTION;
    public static final java.lang.String SUPPRESS_DOZE;
    public static final java.lang.String SYNC_PARENT_SOUNDS;
    public static final java.lang.String SYSTEM_NAVIGATION_KEYS_ENABLED;
    public static final java.lang.String TAP_GESTURE;
    public static final java.lang.String THEME_CUSTOMIZATION_OVERLAY_PACKAGES;
    public static final java.lang.String TOUCH_EXPLORATION_ENABLED;
    public static final java.lang.String TOUCH_EXPLORATION_GRANTED_ACCESSIBILITY_SERVICES;
    public static final java.lang.String TRUST_AGENTS_EXTEND_UNLOCK;
    public static final java.lang.String TRUST_AGENTS_INITIALIZED;
    public static final java.lang.String TTS_DEFAULT_COUNTRY;
    public static final java.lang.String TTS_DEFAULT_LANG;
    public static final java.lang.String TTS_DEFAULT_LOCALE;
    public static final java.lang.String TTS_DEFAULT_PITCH;
    public static final java.lang.String TTS_DEFAULT_RATE;
    public static final java.lang.String TTS_DEFAULT_SYNTH;
    public static final java.lang.String TTS_DEFAULT_VARIANT;
    public static final java.lang.String TTS_ENABLED_PLUGINS;
    public static final java.lang.String TTS_USE_DEFAULTS;
    public static final java.lang.String TTY_MODE_ENABLED;
    public static final java.lang.String TV_APP_USES_NON_SYSTEM_INPUTS;
    public static final java.lang.String TV_INPUT_CUSTOM_LABELS;
    public static final java.lang.String TV_INPUT_HIDDEN_INPUTS;
    public static final java.lang.String TV_USER_SETUP_COMPLETE;
    public static final java.lang.String UI_NIGHT_MODE;
    public static final java.lang.String UI_NIGHT_MODE_OVERRIDE_OFF;
    public static final java.lang.String UI_NIGHT_MODE_OVERRIDE_ON;
    public static final java.lang.String UNKNOWN_SOURCES_DEFAULT_REVERSED;
    public static final java.lang.String UNSAFE_VOLUME_MUSIC_ACTIVE_MS;
    public static final java.lang.String USB_AUDIO_AUTOMATIC_ROUTING_DISABLED;
    public static final java.lang.String USB_MASS_STORAGE_ENABLED;
    public static final java.lang.String USER_SETUP_COMPLETE;
    public static final int USER_SETUP_PERSONALIZATION_COMPLETE;
    public static final int USER_SETUP_PERSONALIZATION_NOT_STARTED;
    public static final int USER_SETUP_PERSONALIZATION_PAUSED;
    public static final int USER_SETUP_PERSONALIZATION_STARTED;
    public static final java.lang.String USER_SETUP_PERSONALIZATION_STATE;
    public static final java.lang.String USE_GOOGLE_MAIL;
    public static final java.lang.String VOICE_INTERACTION_SERVICE;
    public static final java.lang.String VOICE_RECOGNITION_SERVICE;
    public static final java.lang.String VOLUME_HUSH_GESTURE;
    public static final int VOLUME_HUSH_MUTE;
    public static final int VOLUME_HUSH_OFF;
    public static final int VOLUME_HUSH_VIBRATE;
    public static final java.lang.String VR_DISPLAY_MODE;
    public static final int VR_DISPLAY_MODE_LOW_PERSISTENCE;
    public static final int VR_DISPLAY_MODE_OFF;
    public static final java.lang.String WAKE_GESTURE_ENABLED;
    public static final java.lang.String WIFI_IDLE_MS;
    public static final java.lang.String WIFI_MAX_DHCP_RETRY_COUNT;
    public static final java.lang.String WIFI_MOBILE_DATA_TRANSITION_WAKELOCK_TIMEOUT_MS;
    public static final java.lang.String WIFI_NETWORKS_AVAILABLE_NOTIFICATION_ON;
    public static final java.lang.String WIFI_NETWORKS_AVAILABLE_REPEAT_DELAY;
    public static final java.lang.String WIFI_NUM_OPEN_NETWORKS_KEPT;
    public static final java.lang.String WIFI_ON;
    public static final java.lang.String WIFI_WATCHDOG_ACCEPTABLE_PACKET_LOSS_PERCENTAGE;
    public static final java.lang.String WIFI_WATCHDOG_AP_COUNT;
    public static final java.lang.String WIFI_WATCHDOG_BACKGROUND_CHECK_DELAY_MS;
    public static final java.lang.String WIFI_WATCHDOG_BACKGROUND_CHECK_ENABLED;
    public static final java.lang.String WIFI_WATCHDOG_BACKGROUND_CHECK_TIMEOUT_MS;
    public static final java.lang.String WIFI_WATCHDOG_INITIAL_IGNORED_PING_COUNT;
    public static final java.lang.String WIFI_WATCHDOG_MAX_AP_CHECKS;
    public static final java.lang.String WIFI_WATCHDOG_ON;
    public static final java.lang.String WIFI_WATCHDOG_PING_COUNT;
    public static final java.lang.String WIFI_WATCHDOG_PING_DELAY_MS;
    public static final java.lang.String WIFI_WATCHDOG_PING_TIMEOUT_MS;
    public static final java.lang.String WIFI_WATCHDOG_WATCH_LIST;
    public static final java.lang.String WINDOW_MAGNIFICATION;
    public static final java.lang.String ZEN_DURATION;
    public static final int ZEN_DURATION_FOREVER;
    public static final int ZEN_DURATION_PROMPT;
    public static final java.lang.String ZEN_SETTINGS_SUGGESTION_VIEWED;
    public static final java.lang.String ZEN_SETTINGS_UPDATED;
    private static boolean sIsSystemProcess;
    private static com.android.internal.widget.ILockSettings sLockSettings;
    private static final android.provider.Settings$NameValueCache sNameValueCache;
    private static final android.provider.Settings$ContentProviderHolder sProviderHolder;

    static void <clinit>()
    {
        android.provider.Settings$ContentProviderHolder $r0, $r2;
        android.provider.Settings$NameValueCache $r1;
        android.net.Uri $r3, r148;
        java.util.HashSet $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r38, $r39, $r40, $r41, $r42, $r43, $r44, $r45, $r46, $r47, $r48, $r49, $r50, $r51, $r52, $r53, $r54, $r55, $r56, $r57, $r58, $r59, $r60, $r61, $r62, $r63, $r64, $r65, $r66, $r67, $r68, $r69, $r70, $r71, $r72, $r73, $r74, $r75, $r76, $r77, $r78, $r79, $r80, $r81, $r82, $r83, $r84, $r85, $r86, $r87, $r88, $r89, $r90, $r91, $r92, $r93, $r94, $r95, $r96, $r97, $r98, $r99, $r100, $r101, $r102, $r103, $r104, $r105, $r106, $r107, $r108, $r109, $r110, $r111, $r112, $r113, $r114, $r115;
        java.lang.String[] $r116;
        android.util.ArraySet $r117, $r126;
        java.util.Set $r118, $r119, $r120, $r121, $r122, $r123, $r124, $r125, $r127, $r128, $r129, $r130, $r131, $r132, $r133, $r134, $r135, $r136, $r137, $r138, $r139, $r140, $r141, $r142, $r143, $r144, $r145, $r146, $r147;

        <android.provider.Settings$Secure: java.lang.String ZEN_SETTINGS_UPDATED> = "zen_settings_updated";

        <android.provider.Settings$Secure: java.lang.String ZEN_SETTINGS_SUGGESTION_VIEWED> = "zen_settings_suggestion_viewed";

        <android.provider.Settings$Secure: int ZEN_DURATION_PROMPT> = -1;

        <android.provider.Settings$Secure: int ZEN_DURATION_FOREVER> = 0;

        <android.provider.Settings$Secure: java.lang.String ZEN_DURATION> = "zen_duration";

        <android.provider.Settings$Secure: java.lang.String WINDOW_MAGNIFICATION> = "window_magnification";

        <android.provider.Settings$Secure: java.lang.String WIFI_WATCHDOG_WATCH_LIST> = "wifi_watchdog_watch_list";

        <android.provider.Settings$Secure: java.lang.String WIFI_WATCHDOG_PING_TIMEOUT_MS> = "wifi_watchdog_ping_timeout_ms";

        <android.provider.Settings$Secure: java.lang.String WIFI_WATCHDOG_PING_DELAY_MS> = "wifi_watchdog_ping_delay_ms";

        <android.provider.Settings$Secure: java.lang.String WIFI_WATCHDOG_PING_COUNT> = "wifi_watchdog_ping_count";

        <android.provider.Settings$Secure: java.lang.String WIFI_WATCHDOG_ON> = "wifi_watchdog_on";

        <android.provider.Settings$Secure: java.lang.String WIFI_WATCHDOG_MAX_AP_CHECKS> = "wifi_watchdog_max_ap_checks";

        <android.provider.Settings$Secure: java.lang.String WIFI_WATCHDOG_INITIAL_IGNORED_PING_COUNT> = "wifi_watchdog_initial_ignored_ping_count";

        <android.provider.Settings$Secure: java.lang.String WIFI_WATCHDOG_BACKGROUND_CHECK_TIMEOUT_MS> = "wifi_watchdog_background_check_timeout_ms";

        <android.provider.Settings$Secure: java.lang.String WIFI_WATCHDOG_BACKGROUND_CHECK_ENABLED> = "wifi_watchdog_background_check_enabled";

        <android.provider.Settings$Secure: java.lang.String WIFI_WATCHDOG_BACKGROUND_CHECK_DELAY_MS> = "wifi_watchdog_background_check_delay_ms";

        <android.provider.Settings$Secure: java.lang.String WIFI_WATCHDOG_AP_COUNT> = "wifi_watchdog_ap_count";

        <android.provider.Settings$Secure: java.lang.String WIFI_WATCHDOG_ACCEPTABLE_PACKET_LOSS_PERCENTAGE> = "wifi_watchdog_acceptable_packet_loss_percentage";

        <android.provider.Settings$Secure: java.lang.String WIFI_ON> = "wifi_on";

        <android.provider.Settings$Secure: java.lang.String WIFI_NUM_OPEN_NETWORKS_KEPT> = "wifi_num_open_networks_kept";

        <android.provider.Settings$Secure: java.lang.String WIFI_NETWORKS_AVAILABLE_REPEAT_DELAY> = "wifi_networks_available_repeat_delay";

        <android.provider.Settings$Secure: java.lang.String WIFI_NETWORKS_AVAILABLE_NOTIFICATION_ON> = "wifi_networks_available_notification_on";

        <android.provider.Settings$Secure: java.lang.String WIFI_MOBILE_DATA_TRANSITION_WAKELOCK_TIMEOUT_MS> = "wifi_mobile_data_transition_wakelock_timeout_ms";

        <android.provider.Settings$Secure: java.lang.String WIFI_MAX_DHCP_RETRY_COUNT> = "wifi_max_dhcp_retry_count";

        <android.provider.Settings$Secure: java.lang.String WIFI_IDLE_MS> = "wifi_idle_ms";

        <android.provider.Settings$Secure: java.lang.String WAKE_GESTURE_ENABLED> = "wake_gesture_enabled";

        <android.provider.Settings$Secure: int VR_DISPLAY_MODE_OFF> = 1;

        <android.provider.Settings$Secure: int VR_DISPLAY_MODE_LOW_PERSISTENCE> = 0;

        <android.provider.Settings$Secure: java.lang.String VR_DISPLAY_MODE> = "vr_display_mode";

        <android.provider.Settings$Secure: int VOLUME_HUSH_VIBRATE> = 1;

        <android.provider.Settings$Secure: int VOLUME_HUSH_OFF> = 0;

        <android.provider.Settings$Secure: int VOLUME_HUSH_MUTE> = 2;

        <android.provider.Settings$Secure: java.lang.String VOLUME_HUSH_GESTURE> = "volume_hush_gesture";

        <android.provider.Settings$Secure: java.lang.String VOICE_RECOGNITION_SERVICE> = "voice_recognition_service";

        <android.provider.Settings$Secure: java.lang.String VOICE_INTERACTION_SERVICE> = "voice_interaction_service";

        <android.provider.Settings$Secure: java.lang.String USE_GOOGLE_MAIL> = "use_google_mail";

        <android.provider.Settings$Secure: java.lang.String USER_SETUP_PERSONALIZATION_STATE> = "user_setup_personalization_state";

        <android.provider.Settings$Secure: int USER_SETUP_PERSONALIZATION_STARTED> = 1;

        <android.provider.Settings$Secure: int USER_SETUP_PERSONALIZATION_PAUSED> = 2;

        <android.provider.Settings$Secure: int USER_SETUP_PERSONALIZATION_NOT_STARTED> = 0;

        <android.provider.Settings$Secure: int USER_SETUP_PERSONALIZATION_COMPLETE> = 10;

        <android.provider.Settings$Secure: java.lang.String USER_SETUP_COMPLETE> = "user_setup_complete";

        <android.provider.Settings$Secure: java.lang.String USB_MASS_STORAGE_ENABLED> = "usb_mass_storage_enabled";

        <android.provider.Settings$Secure: java.lang.String USB_AUDIO_AUTOMATIC_ROUTING_DISABLED> = "usb_audio_automatic_routing_disabled";

        <android.provider.Settings$Secure: java.lang.String UNSAFE_VOLUME_MUSIC_ACTIVE_MS> = "unsafe_volume_music_active_ms";

        <android.provider.Settings$Secure: java.lang.String UNKNOWN_SOURCES_DEFAULT_REVERSED> = "unknown_sources_default_reversed";

        <android.provider.Settings$Secure: java.lang.String UI_NIGHT_MODE_OVERRIDE_ON> = "ui_night_mode_override_on";

        <android.provider.Settings$Secure: java.lang.String UI_NIGHT_MODE_OVERRIDE_OFF> = "ui_night_mode_override_off";

        <android.provider.Settings$Secure: java.lang.String UI_NIGHT_MODE> = "ui_night_mode";

        <android.provider.Settings$Secure: java.lang.String TV_USER_SETUP_COMPLETE> = "tv_user_setup_complete";

        <android.provider.Settings$Secure: java.lang.String TV_INPUT_HIDDEN_INPUTS> = "tv_input_hidden_inputs";

        <android.provider.Settings$Secure: java.lang.String TV_INPUT_CUSTOM_LABELS> = "tv_input_custom_labels";

        <android.provider.Settings$Secure: java.lang.String TV_APP_USES_NON_SYSTEM_INPUTS> = "tv_app_uses_non_system_inputs";

        <android.provider.Settings$Secure: java.lang.String TTY_MODE_ENABLED> = "tty_mode_enabled";

        <android.provider.Settings$Secure: java.lang.String TTS_USE_DEFAULTS> = "tts_use_defaults";

        <android.provider.Settings$Secure: java.lang.String TTS_ENABLED_PLUGINS> = "tts_enabled_plugins";

        <android.provider.Settings$Secure: java.lang.String TTS_DEFAULT_VARIANT> = "tts_default_variant";

        <android.provider.Settings$Secure: java.lang.String TTS_DEFAULT_SYNTH> = "tts_default_synth";

        <android.provider.Settings$Secure: java.lang.String TTS_DEFAULT_RATE> = "tts_default_rate";

        <android.provider.Settings$Secure: java.lang.String TTS_DEFAULT_PITCH> = "tts_default_pitch";

        <android.provider.Settings$Secure: java.lang.String TTS_DEFAULT_LOCALE> = "tts_default_locale";

        <android.provider.Settings$Secure: java.lang.String TTS_DEFAULT_LANG> = "tts_default_lang";

        <android.provider.Settings$Secure: java.lang.String TTS_DEFAULT_COUNTRY> = "tts_default_country";

        <android.provider.Settings$Secure: java.lang.String TRUST_AGENTS_INITIALIZED> = "trust_agents_initialized";

        <android.provider.Settings$Secure: java.lang.String TRUST_AGENTS_EXTEND_UNLOCK> = "trust_agents_extend_unlock";

        <android.provider.Settings$Secure: java.lang.String TOUCH_EXPLORATION_GRANTED_ACCESSIBILITY_SERVICES> = "touch_exploration_granted_accessibility_services";

        <android.provider.Settings$Secure: java.lang.String TOUCH_EXPLORATION_ENABLED> = "touch_exploration_enabled";

        <android.provider.Settings$Secure: java.lang.String THEME_CUSTOMIZATION_OVERLAY_PACKAGES> = "theme_customization_overlay_packages";

        <android.provider.Settings$Secure: java.lang.String TAP_GESTURE> = "tap_gesture";

        <android.provider.Settings$Secure: java.lang.String SYSTEM_NAVIGATION_KEYS_ENABLED> = "system_navigation_keys_enabled";

        <android.provider.Settings$Secure: java.lang.String SYNC_PARENT_SOUNDS> = "sync_parent_sounds";

        <android.provider.Settings$Secure: java.lang.String SUPPRESS_DOZE> = "suppress_doze";

        <android.provider.Settings$Secure: java.lang.String SUPPRESS_AUTO_BATTERY_SAVER_SUGGESTION> = "suppress_auto_battery_saver_suggestion";

        <android.provider.Settings$Secure: java.lang.String SPELL_CHECKER_ENABLED> = "spell_checker_enabled";

        <android.provider.Settings$Secure: java.lang.String SMS_DEFAULT_APPLICATION> = "sms_default_application";

        <android.provider.Settings$Secure: java.lang.String SLEEP_TIMEOUT> = "sleep_timeout";

        <android.provider.Settings$Secure: java.lang.String SKIP_TOUCH_COUNT> = "skip_touch_count";

        <android.provider.Settings$Secure: java.lang.String SKIP_GESTURE_COUNT> = "skip_gesture_count";

        <android.provider.Settings$Secure: java.lang.String SKIP_GESTURE> = "skip_gesture";

        <android.provider.Settings$Secure: java.lang.String SKIP_FIRST_USE_HINTS> = "skip_first_use_hints";

        <android.provider.Settings$Secure: java.lang.String SKIP_DIRECTION> = "skip_gesture_direction";

        <android.provider.Settings$Secure: java.lang.String SILENCE_TIMER_TOUCH_COUNT> = "silence_timer_touch_count";

        <android.provider.Settings$Secure: java.lang.String SILENCE_TIMER_GESTURE_COUNT> = "silence_timer_gesture_count";

        <android.provider.Settings$Secure: java.lang.String SILENCE_GESTURE> = "silence_gesture";

        <android.provider.Settings$Secure: java.lang.String SILENCE_CALL_TOUCH_COUNT> = "silence_call_touch_count";

        <android.provider.Settings$Secure: java.lang.String SILENCE_CALL_GESTURE_COUNT> = "silence_call_gesture_count";

        <android.provider.Settings$Secure: java.lang.String SILENCE_ALARMS_TOUCH_COUNT> = "silence_alarms_touch_count";

        <android.provider.Settings$Secure: java.lang.String SILENCE_ALARMS_GESTURE_COUNT> = "silence_alarms_gesture_count";

        <android.provider.Settings$Secure: java.lang.String SHOW_ZEN_UPGRADE_NOTIFICATION> = "show_zen_upgrade_notification";

        <android.provider.Settings$Secure: java.lang.String SHOW_ZEN_SETTINGS_SUGGESTION> = "show_zen_settings_suggestion";

        <android.provider.Settings$Secure: int SHOW_ROTATION_SUGGESTIONS_ENABLED> = 1;

        <android.provider.Settings$Secure: int SHOW_ROTATION_SUGGESTIONS_DISABLED> = 0;

        <android.provider.Settings$Secure: int SHOW_ROTATION_SUGGESTIONS_DEFAULT> = 1;

        <android.provider.Settings$Secure: java.lang.String SHOW_ROTATION_SUGGESTIONS> = "show_rotation_suggestions";

        <android.provider.Settings$Secure: java.lang.String SHOW_NOTIFICATION_SNOOZE> = "show_notification_snooze";

        <android.provider.Settings$Secure: java.lang.String SHOW_NOTE_ABOUT_NOTIFICATION_HIDING> = "show_note_about_notification_hiding";

        <android.provider.Settings$Secure: int SHOW_MODE_HIDDEN> = 1;

        <android.provider.Settings$Secure: int SHOW_MODE_AUTO> = 0;

        <android.provider.Settings$Secure: java.lang.String SHOW_MEDIA_WHEN_BYPASSING> = "show_media_when_bypassing";

        <android.provider.Settings$Secure: java.lang.String SHOW_IME_WITH_HARD_KEYBOARD> = "show_ime_with_hard_keyboard";

        <android.provider.Settings$Secure: java.lang.String SHOW_FIRST_CRASH_DIALOG_DEV_OPTION> = "show_first_crash_dialog_dev_option";

        <android.provider.Settings$Secure: java.lang.String SETTINGS_CLASSNAME> = "settings_classname";

        <android.provider.Settings$Secure: java.lang.String SELECTED_SPELL_CHECKER_SUBTYPE> = "selected_spell_checker_subtype";

        <android.provider.Settings$Secure: java.lang.String SELECTED_SPELL_CHECKER> = "selected_spell_checker";

        <android.provider.Settings$Secure: java.lang.String SELECTED_INPUT_METHOD_SUBTYPE> = "selected_input_method_subtype";

        <android.provider.Settings$Secure: java.lang.String SECURE_FRP_MODE> = "secure_frp_mode";

        <android.provider.Settings$Secure: java.lang.String SEARCH_WEB_RESULTS_OVERRIDE_LIMIT> = "search_web_results_override_limit";

        <android.provider.Settings$Secure: java.lang.String SEARCH_THREAD_KEEPALIVE_SECONDS> = "search_thread_keepalive_seconds";

        <android.provider.Settings$Secure: java.lang.String SEARCH_SOURCE_TIMEOUT_MILLIS> = "search_source_timeout_millis";

        <android.provider.Settings$Secure: java.lang.String SEARCH_SHORTCUT_REFRESH_MAX_POOL_SIZE> = "search_shortcut_refresh_max_pool_size";

        <android.provider.Settings$Secure: java.lang.String SEARCH_SHORTCUT_REFRESH_CORE_POOL_SIZE> = "search_shortcut_refresh_core_pool_size";

        <android.provider.Settings$Secure: java.lang.String SEARCH_QUERY_THREAD_MAX_POOL_SIZE> = "search_query_thread_max_pool_size";

        <android.provider.Settings$Secure: java.lang.String SEARCH_QUERY_THREAD_CORE_POOL_SIZE> = "search_query_thread_core_pool_size";

        <android.provider.Settings$Secure: java.lang.String SEARCH_PROMOTED_SOURCE_DEADLINE_MILLIS> = "search_promoted_source_deadline_millis";

        <android.provider.Settings$Secure: java.lang.String SEARCH_PREFILL_MILLIS> = "search_prefill_millis";

        <android.provider.Settings$Secure: java.lang.String SEARCH_PER_SOURCE_CONCURRENT_QUERY_LIMIT> = "search_per_source_concurrent_query_limit";

        <android.provider.Settings$Secure: java.lang.String SEARCH_NUM_PROMOTED_SOURCES> = "search_num_promoted_sources";

        <android.provider.Settings$Secure: java.lang.String SEARCH_MIN_IMPRESSIONS_FOR_SOURCE_RANKING> = "search_min_impressions_for_source_ranking";

        <android.provider.Settings$Secure: java.lang.String SEARCH_MIN_CLICKS_FOR_SOURCE_RANKING> = "search_min_clicks_for_source_ranking";

        <android.provider.Settings$Secure: java.lang.String SEARCH_MAX_STAT_AGE_MILLIS> = "search_max_stat_age_millis";

        <android.provider.Settings$Secure: java.lang.String SEARCH_MAX_SOURCE_EVENT_AGE_MILLIS> = "search_max_source_event_age_millis";

        <android.provider.Settings$Secure: java.lang.String SEARCH_MAX_SHORTCUTS_RETURNED> = "search_max_shortcuts_returned";

        <android.provider.Settings$Secure: java.lang.String SEARCH_MAX_RESULTS_TO_DISPLAY> = "search_max_results_to_display";

        <android.provider.Settings$Secure: java.lang.String SEARCH_MAX_RESULTS_PER_SOURCE> = "search_max_results_per_source";

        <android.provider.Settings$Secure: java.lang.String SEARCH_GLOBAL_SEARCH_ACTIVITY> = "search_global_search_activity";

        <android.provider.Settings$Secure: java.lang.String SCREENSAVER_ENABLED> = "screensaver_enabled";

        <android.provider.Settings$Secure: java.lang.String SCREENSAVER_DEFAULT_COMPONENT> = "screensaver_default_component";

        <android.provider.Settings$Secure: java.lang.String SCREENSAVER_COMPONENTS> = "screensaver_components";

        <android.provider.Settings$Secure: java.lang.String SCREENSAVER_ACTIVATE_ON_SLEEP> = "screensaver_activate_on_sleep";

        <android.provider.Settings$Secure: java.lang.String SCREENSAVER_ACTIVATE_ON_DOCK> = "screensaver_activate_on_dock";

        <android.provider.Settings$Secure: java.lang.String RTT_CALLING_MODE> = "rtt_calling_mode";

        <android.provider.Settings$Secure: java.lang.String QS_TILES> = "sysui_qs_tiles";

        <android.provider.Settings$Secure: java.lang.String QS_AUTO_ADDED_TILES> = "qs_auto_tiles";

        <android.provider.Settings$Secure: java.lang.String PRINT_SERVICE_SEARCH_URI> = "print_service_search_uri";

        <android.provider.Settings$Secure: java.lang.String PREFERRED_TTY_MODE> = "preferred_tty_mode";

        <android.provider.Settings$Secure: java.lang.String POWER_MENU_LOCKED_SHOW_CONTENT> = "power_menu_locked_show_content";

        <android.provider.Settings$Secure: java.lang.String PEOPLE_STRIP> = "people_strip";

        <android.provider.Settings$Secure: java.lang.String PAYMENT_SERVICE_SEARCH_URI> = "payment_service_search_uri";

        <android.provider.Settings$Secure: java.lang.String PARENTAL_CONTROL_REDIRECT_URL> = "parental_control_redirect_url";

        <android.provider.Settings$Secure: java.lang.String PARENTAL_CONTROL_LAST_UPDATE> = "parental_control_last_update";

        <android.provider.Settings$Secure: java.lang.String PARENTAL_CONTROL_ENABLED> = "parental_control_enabled";

        <android.provider.Settings$Secure: java.lang.String PACKAGES_TO_CLEAR_DATA_BEFORE_FULL_RESTORE> = "packages_to_clear_data_before_full_restore";

        <android.provider.Settings$Secure: java.lang.String ODI_CAPTIONS_ENABLED> = "odi_captions_enabled";

        <android.provider.Settings$Secure: java.lang.String NUM_ROTATION_SUGGESTIONS_ACCEPTED> = "num_rotation_suggestions_accepted";

        <android.provider.Settings$Secure: java.lang.String NOTIFICATION_NEW_INTERRUPTION_MODEL> = "new_interruption_model";

        <android.provider.Settings$Secure: java.lang.String NOTIFICATION_HISTORY_ENABLED> = "notification_history_enabled";

        <android.provider.Settings$Secure: java.lang.String NOTIFICATION_DISMISS_RTL> = "notification_dismiss_rtl";

        <android.provider.Settings$Secure: java.lang.String NOTIFICATION_BADGING> = "notification_badging";

        <android.provider.Settings$Secure: java.lang.String NIGHT_DISPLAY_LAST_ACTIVATED_TIME> = "night_display_last_activated_time";

        <android.provider.Settings$Secure: java.lang.String NIGHT_DISPLAY_CUSTOM_START_TIME> = "night_display_custom_start_time";

        <android.provider.Settings$Secure: java.lang.String NIGHT_DISPLAY_CUSTOM_END_TIME> = "night_display_custom_end_time";

        <android.provider.Settings$Secure: java.lang.String NIGHT_DISPLAY_COLOR_TEMPERATURE> = "night_display_color_temperature";

        <android.provider.Settings$Secure: java.lang.String NIGHT_DISPLAY_AUTO_MODE> = "night_display_auto_mode";

        <android.provider.Settings$Secure: java.lang.String NIGHT_DISPLAY_ACTIVATED> = "night_display_activated";

        <android.provider.Settings$Secure: java.lang.String NFC_PAYMENT_FOREGROUND> = "nfc_payment_foreground";

        <android.provider.Settings$Secure: java.lang.String NFC_PAYMENT_DEFAULT_COMPONENT> = "nfc_payment_default_component";

        <android.provider.Settings$Secure: java.lang.String NETWORK_PREFERENCE> = "network_preference";

        <android.provider.Settings$Secure: java.lang.String NEARBY_SHARING_COMPONENT> = "nearby_sharing_component";

        <android.provider.Settings$Secure: java.lang.String NAVIGATION_MODE> = "navigation_mode";

        <android.provider.Settings$Secure: java.lang.String MULTI_PRESS_TIMEOUT> = "multi_press_timeout";

        <android.provider.Settings$Secure: java.lang.String MOUNT_UMS_PROMPT> = "mount_ums_prompt";

        <android.provider.Settings$Secure: java.lang.String MOUNT_UMS_NOTIFY_ENABLED> = "mount_ums_notify_enabled";

        <android.provider.Settings$Secure: java.lang.String MOUNT_UMS_AUTOSTART> = "mount_ums_autostart";

        <android.provider.Settings$Secure: java.lang.String MOUNT_PLAY_NOTIFICATION_SND> = "mount_play_not_snd";

        <android.provider.Settings$Secure: java.lang.String MINIMAL_POST_PROCESSING_ALLOWED> = "minimal_post_processing_allowed";

        <android.provider.Settings$Secure: java.lang.String MEDIA_CONTROLS_RESUME> = "qs_media_resumption";

        <android.provider.Settings$Secure: java.lang.String MANUAL_RINGER_TOGGLE_COUNT> = "manual_ringer_toggle_count";

        <android.provider.Settings$Secure: java.lang.String MANAGED_PROVISIONING_DPC_DOWNLOADED> = "managed_provisioning_dpc_downloaded";

        <android.provider.Settings$Secure: java.lang.String MANAGED_PROFILE_CONTACT_REMOTE_SEARCH> = "managed_profile_contact_remote_search";

        <android.provider.Settings$Secure: java.lang.String LOW_POWER_WARNING_ACKNOWLEDGED> = "low_power_warning_acknowledged";

        <android.provider.Settings$Secure: java.lang.String LOW_POWER_MANUAL_ACTIVATION_COUNT> = "low_power_manual_activation_count";

        <android.provider.Settings$Secure: java.lang.String LONG_PRESS_TIMEOUT> = "long_press_timeout";

        <android.provider.Settings$Secure: java.lang.String LOGGING_ID> = "logging_id";

        <android.provider.Settings$Secure: java.lang.String LOCK_TO_APP_EXIT_LOCKED> = "lock_to_app_exit_locked";

        <android.provider.Settings$Secure: java.lang.String LOCK_SCREEN_WHEN_TRUST_LOST> = "lock_screen_when_trust_lost";

        <android.provider.Settings$Secure: java.lang.String LOCK_SCREEN_STICKY_APPWIDGET> = "lock_screen_sticky_appwidget";

        <android.provider.Settings$Secure: java.lang.String LOCK_SCREEN_SHOW_SILENT_NOTIFICATIONS> = "lock_screen_show_silent_notifications";

        <android.provider.Settings$Secure: java.lang.String LOCK_SCREEN_SHOW_NOTIFICATIONS> = "lock_screen_show_notifications";

        <android.provider.Settings$Secure: java.lang.String LOCK_SCREEN_OWNER_INFO_ENABLED> = "lock_screen_owner_info_enabled";

        <android.provider.Settings$Secure: java.lang.String LOCK_SCREEN_OWNER_INFO> = "lock_screen_owner_info";

        <android.provider.Settings$Secure: java.lang.String LOCK_SCREEN_LOCK_AFTER_TIMEOUT> = "lock_screen_lock_after_timeout";

        <android.provider.Settings$Secure: java.lang.String LOCK_SCREEN_FALLBACK_APPWIDGET_ID> = "lock_screen_fallback_appwidget_id";

        <android.provider.Settings$Secure: java.lang.String LOCK_SCREEN_CUSTOM_CLOCK_FACE> = "lock_screen_custom_clock_face";

        <android.provider.Settings$Secure: java.lang.String LOCK_SCREEN_APPWIDGET_IDS> = "lock_screen_appwidget_ids";

        <android.provider.Settings$Secure: java.lang.String LOCK_SCREEN_ALLOW_REMOTE_INPUT> = "lock_screen_allow_remote_input";

        <android.provider.Settings$Secure: java.lang.String LOCK_SCREEN_ALLOW_PRIVATE_NOTIFICATIONS> = "lock_screen_allow_private_notifications";

        <android.provider.Settings$Secure: java.lang.String LOCK_PATTERN_VISIBLE> = "lock_pattern_visible_pattern";

        <android.provider.Settings$Secure: java.lang.String LOCK_PATTERN_TACTILE_FEEDBACK_ENABLED> = "lock_pattern_tactile_feedback_enabled";

        <android.provider.Settings$Secure: java.lang.String LOCK_PATTERN_ENABLED> = "lock_pattern_autolock";

        <android.provider.Settings$Secure: java.lang.String LOCK_BIOMETRIC_WEAK_FLAGS> = "lock_biometric_weak_flags";

        <android.provider.Settings$Secure: java.lang.String LOCKDOWN_IN_POWER_MENU> = "lockdown_in_power_menu";

        <android.provider.Settings$Secure: java.lang.String LOCATION_PROVIDERS_ALLOWED> = "location_providers_allowed";

        <android.provider.Settings$Secure: java.lang.String LOCATION_PERMISSIONS_UPGRADE_TO_Q_MODE> = "location_permissions_upgrade_to_q_mode";

        <android.provider.Settings$Secure: int LOCATION_MODE_SENSORS_ONLY> = 1;

        <android.provider.Settings$Secure: int LOCATION_MODE_ON> = 3;

        <android.provider.Settings$Secure: int LOCATION_MODE_OFF> = 0;

        <android.provider.Settings$Secure: int LOCATION_MODE_HIGH_ACCURACY> = 3;

        <android.provider.Settings$Secure: int LOCATION_MODE_BATTERY_SAVING> = 2;

        <android.provider.Settings$Secure: java.lang.String LOCATION_MODE> = "location_mode";

        <android.provider.Settings$Secure: java.lang.String LOCATION_COARSE_ACCURACY_M> = "locationCoarseAccuracy";

        <android.provider.Settings$Secure: int LOCATION_CHANGER_UNKNOWN> = 0;

        <android.provider.Settings$Secure: int LOCATION_CHANGER_SYSTEM_SETTINGS> = 1;

        <android.provider.Settings$Secure: int LOCATION_CHANGER_QUICK_SETTINGS> = 2;

        <android.provider.Settings$Secure: java.lang.String LOCATION_CHANGER> = "location_changer";

        <android.provider.Settings$Secure: java.lang.String LOCATION_ACCESS_CHECK_INTERVAL_MILLIS> = "location_access_check_interval_millis";

        <android.provider.Settings$Secure: java.lang.String LOCATION_ACCESS_CHECK_DELAY_MILLIS> = "location_access_check_delay_millis";

        <android.provider.Settings$Secure: java.lang.String LAST_SETUP_SHOWN> = "last_setup_shown";

        <android.provider.Settings$Secure: java.lang.String KEYGUARD_SLICE_URI> = "keyguard_slice_uri";

        <android.provider.Settings$Secure: java.lang.String IN_CALL_NOTIFICATION_ENABLED> = "in_call_notification_enabled";

        <android.provider.Settings$Secure: java.lang.String INSTANT_APPS_ENABLED> = "instant_apps_enabled";

        <android.provider.Settings$Secure: java.lang.String INSTALL_NON_MARKET_APPS> = "install_non_market_apps";

        <android.provider.Settings$Secure: java.lang.String INPUT_METHOD_SELECTOR_VISIBILITY> = "input_method_selector_visibility";

        <android.provider.Settings$Secure: java.lang.String INPUT_METHODS_SUBTYPE_HISTORY> = "input_methods_subtype_history";

        <android.provider.Settings$Secure: int INCALL_POWER_BUTTON_BEHAVIOR_SCREEN_OFF> = 1;

        <android.provider.Settings$Secure: int INCALL_POWER_BUTTON_BEHAVIOR_HANGUP> = 2;

        <android.provider.Settings$Secure: int INCALL_POWER_BUTTON_BEHAVIOR_DEFAULT> = 1;

        <android.provider.Settings$Secure: java.lang.String INCALL_POWER_BUTTON_BEHAVIOR> = "incall_power_button_behavior";

        <android.provider.Settings$Secure: int INCALL_BACK_BUTTON_BEHAVIOR_NONE> = 0;

        <android.provider.Settings$Secure: int INCALL_BACK_BUTTON_BEHAVIOR_HANGUP> = 1;

        <android.provider.Settings$Secure: int INCALL_BACK_BUTTON_BEHAVIOR_DEFAULT> = 0;

        <android.provider.Settings$Secure: java.lang.String INCALL_BACK_BUTTON_BEHAVIOR> = "incall_back_button_behavior";

        <android.provider.Settings$Secure: java.lang.String IMMERSIVE_MODE_CONFIRMATIONS> = "immersive_mode_confirmations";

        <android.provider.Settings$Secure: java.lang.String HUSH_GESTURE_USED> = "hush_gesture_used";

        <android.provider.Settings$Secure: java.lang.String HTTP_PROXY> = "http_proxy";

        <android.provider.Settings$Secure: java.lang.String GLOBAL_ACTIONS_PANEL_ENABLED> = "global_actions_panel_enabled";

        <android.provider.Settings$Secure: java.lang.String GLOBAL_ACTIONS_PANEL_DEBUG_ENABLED> = "global_actions_panel_debug_enabled";

        <android.provider.Settings$Secure: java.lang.String GLOBAL_ACTIONS_PANEL_AVAILABLE> = "global_actions_panel_available";

        <android.provider.Settings$Secure: java.lang.String FLASHLIGHT_ENABLED> = "flashlight_enabled";

        <android.provider.Settings$Secure: java.lang.String FLASHLIGHT_AVAILABLE> = "flashlight_available";

        <android.provider.Settings$Secure: java.lang.String FACE_UNLOCK_RE_ENROLL> = "face_unlock_re_enroll";

        <android.provider.Settings$Secure: java.lang.String FACE_UNLOCK_KEYGUARD_ENABLED> = "face_unlock_keyguard_enabled";

        <android.provider.Settings$Secure: java.lang.String FACE_UNLOCK_DIVERSITY_REQUIRED> = "face_unlock_diversity_required";

        <android.provider.Settings$Secure: java.lang.String FACE_UNLOCK_DISMISSES_KEYGUARD> = "face_unlock_dismisses_keyguard";

        <android.provider.Settings$Secure: java.lang.String FACE_UNLOCK_ATTENTION_REQUIRED> = "face_unlock_attention_required";

        <android.provider.Settings$Secure: java.lang.String FACE_UNLOCK_APP_ENABLED> = "face_unlock_app_enabled";

        <android.provider.Settings$Secure: java.lang.String FACE_UNLOCK_ALWAYS_REQUIRE_CONFIRMATION> = "face_unlock_always_require_confirmation";

        <android.provider.Settings$Secure: java.lang.String ENHANCED_VOICE_PRIVACY_ENABLED> = "enhanced_voice_privacy_enabled";

        <android.provider.Settings$Secure: java.lang.String ENABLED_VR_LISTENERS> = "enabled_vr_listeners";

        <android.provider.Settings$Secure: java.lang.String ENABLED_PRINT_SERVICES> = "enabled_print_services";

        <android.provider.Settings$Secure: java.lang.String ENABLED_NOTIFICATION_POLICY_ACCESS_PACKAGES> = "enabled_notification_policy_access_packages";

        <android.provider.Settings$Secure: java.lang.String ENABLED_NOTIFICATION_LISTENERS> = "enabled_notification_listeners";

        <android.provider.Settings$Secure: java.lang.String ENABLED_NOTIFICATION_ASSISTANT> = "enabled_notification_assistant";

        <android.provider.Settings$Secure: java.lang.String ENABLED_INPUT_METHODS> = "enabled_input_methods";

        <android.provider.Settings$Secure: java.lang.String ENABLED_ACCESSIBILITY_SERVICES> = "enabled_accessibility_services";

        <android.provider.Settings$Secure: java.lang.String EMERGENCY_ASSISTANCE_APPLICATION> = "emergency_assistance_application";

        <android.provider.Settings$Secure: java.lang.String DOZE_WAKE_LOCK_SCREEN_GESTURE> = "doze_wake_screen_gesture";

        <android.provider.Settings$Secure: java.lang.String DOZE_WAKE_DISPLAY_GESTURE> = "doze_wake_display_gesture";

        <android.provider.Settings$Secure: java.lang.String DOZE_TAP_SCREEN_GESTURE> = "doze_tap_gesture";

        <android.provider.Settings$Secure: java.lang.String DOZE_PULSE_ON_LONG_PRESS> = "doze_pulse_on_long_press";

        <android.provider.Settings$Secure: java.lang.String DOZE_PICK_UP_GESTURE> = "doze_pulse_on_pick_up";

        <android.provider.Settings$Secure: java.lang.String DOZE_ENABLED> = "doze_enabled";

        <android.provider.Settings$Secure: java.lang.String DOZE_DOUBLE_TAP_GESTURE> = "doze_pulse_on_double_tap";

        <android.provider.Settings$Secure: java.lang.String DOZE_ALWAYS_ON> = "doze_always_on";

        <android.provider.Settings$Secure: java.lang.String DOUBLE_TAP_TO_WAKE> = "double_tap_to_wake";

        <android.provider.Settings$Secure: java.lang.String DOCKED_CLOCK_FACE> = "docked_clock_face";

        <android.provider.Settings$Secure: java.lang.String DISPLAY_WHITE_BALANCE_ENABLED> = "display_white_balance_enabled";

        <android.provider.Settings$Secure: java.lang.String DISPLAY_DENSITY_FORCED> = "display_density_forced";

        <android.provider.Settings$Secure: java.lang.String DISABLED_SYSTEM_INPUT_METHODS> = "disabled_system_input_methods";

        <android.provider.Settings$Secure: java.lang.String DISABLED_PRINT_SERVICES> = "disabled_print_services";

        <android.provider.Settings$Secure: java.lang.String DIALER_DEFAULT_APPLICATION> = "dialer_default_application";

        <android.provider.Settings$Secure: java.lang.String DEVICE_PROVISIONED> = "device_provisioned";

        <android.provider.Settings$Secure: java.lang.String DEVICE_PAIRED> = "device_paired";

        <android.provider.Settings$Secure: java.lang.String DEVELOPMENT_SETTINGS_ENABLED> = "development_settings_enabled";

        <android.provider.Settings$Secure: java.lang.String DEFAULT_INPUT_METHOD> = "default_input_method";

        <android.provider.Settings$Secure: java.lang.String DATA_ROAMING> = "data_roaming";

        <android.provider.Settings$Secure: java.lang.String DARK_THEME_CUSTOM_START_TIME> = "dark_theme_custom_start_time";

        <android.provider.Settings$Secure: java.lang.String DARK_THEME_CUSTOM_END_TIME> = "dark_theme_custom_end_time";

        <android.provider.Settings$Secure: java.lang.String DARK_MODE_DIALOG_SEEN> = "dark_mode_dialog_seen";

        <android.provider.Settings$Secure: java.lang.String CROSS_PROFILE_CALENDAR_ENABLED> = "cross_profile_calendar_enabled";

        <android.provider.Settings$Secure: java.lang.String CONTROLS_ENABLED> = "controls_enabled";

        <android.provider.Settings$Secure: java.lang.String CONTENT_CAPTURE_ENABLED> = "content_capture_enabled";

        <android.provider.Settings$Secure: java.lang.String CONNECTIVITY_RELEASE_PENDING_INTENT_DELAY_MS> = "connectivity_release_pending_intent_delay_ms";

        <android.provider.Settings$Secure: java.lang.String COMPLETED_CATEGORY_PREFIX> = "suggested.completed_category.";

        <android.provider.Settings$Secure: java.lang.String CMAS_ADDITIONAL_BROADCAST_PKG> = "cmas_additional_broadcast_pkg";

        <android.provider.Settings$Secure: java.lang.String CHARGING_VIBRATION_ENABLED> = "charging_vibration_enabled";

        <android.provider.Settings$Secure: java.lang.String CHARGING_SOUNDS_ENABLED> = "charging_sounds_enabled";

        <android.provider.Settings$Secure: java.lang.String CARRIER_APPS_HANDLED> = "carrier_apps_handled";

        <android.provider.Settings$Secure: int CAMERA_LIFT_TRIGGER_ENABLED_DEFAULT> = 1;

        <android.provider.Settings$Secure: java.lang.String CAMERA_LIFT_TRIGGER_ENABLED> = "camera_lift_trigger_enabled";

        <android.provider.Settings$Secure: java.lang.String CAMERA_GESTURE_DISABLED> = "camera_gesture_disabled";

        <android.provider.Settings$Secure: java.lang.String CAMERA_DOUBLE_TWIST_TO_FLIP_ENABLED> = "camera_double_twist_to_flip_enabled";

        <android.provider.Settings$Secure: java.lang.String CAMERA_DOUBLE_TAP_POWER_GESTURE_DISABLED> = "camera_double_tap_power_gesture_disabled";

        <android.provider.Settings$Secure: java.lang.String CALL_SCREENING_DEFAULT_COMPONENT> = "call_screening_default_component";

        <android.provider.Settings$Secure: java.lang.String BUGREPORT_IN_POWER_MENU> = "bugreport_in_power_menu";

        <android.provider.Settings$Secure: java.lang.String BUBBLE_IMPORTANT_CONVERSATIONS> = "bubble_important_conversations";

        <android.provider.Settings$Secure: java.lang.String BLUETOOTH_ON_WHILE_DRIVING> = "bluetooth_on_while_driving";

        <android.provider.Settings$Secure: java.lang.String BLUETOOTH_ON> = "bluetooth_on";

        <android.provider.Settings$Secure: java.lang.String BIOMETRIC_DEBUG_ENABLED> = "biometric_debug_enabled";

        <android.provider.Settings$Secure: java.lang.String BACK_GESTURE_INSET_SCALE_RIGHT> = "back_gesture_inset_scale_right";

        <android.provider.Settings$Secure: java.lang.String BACK_GESTURE_INSET_SCALE_LEFT> = "back_gesture_inset_scale_left";

        <android.provider.Settings$Secure: java.lang.String BACKUP_TRANSPORT> = "backup_transport";

        <android.provider.Settings$Secure: java.lang.String BACKUP_PROVISIONED> = "backup_provisioned";

        <android.provider.Settings$Secure: java.lang.String BACKUP_MANAGER_CONSTANTS> = "backup_manager_constants";

        <android.provider.Settings$Secure: java.lang.String BACKUP_LOCAL_TRANSPORT_PARAMETERS> = "backup_local_transport_parameters";

        <android.provider.Settings$Secure: java.lang.String BACKUP_ENABLED> = "backup_enabled";

        <android.provider.Settings$Secure: java.lang.String BACKUP_AUTO_RESTORE> = "backup_auto_restore";

        <android.provider.Settings$Secure: java.lang.String BACKGROUND_DATA> = "background_data";

        <android.provider.Settings$Secure: java.lang.String AWARE_TAP_PAUSE_TOUCH_COUNT> = "aware_tap_pause_touch_count";

        <android.provider.Settings$Secure: java.lang.String AWARE_TAP_PAUSE_GESTURE_COUNT> = "aware_tap_pause_gesture_count";

        <android.provider.Settings$Secure: java.lang.String AWARE_LOCK_ENABLED> = "aware_lock_enabled";

        <android.provider.Settings$Secure: java.lang.String AWARE_ENABLED> = "aware_enabled";

        <android.provider.Settings$Secure: java.lang.String AUTO_REVOKE_DISABLED> = "auto_revoke_disabled";

        <android.provider.Settings$Secure: java.lang.String AUTOMATIC_STORAGE_MANAGER_TURNED_OFF_BY_POLICY> = "automatic_storage_manager_turned_off_by_policy";

        <android.provider.Settings$Secure: java.lang.String AUTOMATIC_STORAGE_MANAGER_LAST_RUN> = "automatic_storage_manager_last_run";

        <android.provider.Settings$Secure: java.lang.String AUTOMATIC_STORAGE_MANAGER_ENABLED> = "automatic_storage_manager_enabled";

        <android.provider.Settings$Secure: int AUTOMATIC_STORAGE_MANAGER_DAYS_TO_RETAIN_DEFAULT> = 90;

        <android.provider.Settings$Secure: java.lang.String AUTOMATIC_STORAGE_MANAGER_DAYS_TO_RETAIN> = "automatic_storage_manager_days_to_retain";

        <android.provider.Settings$Secure: java.lang.String AUTOMATIC_STORAGE_MANAGER_BYTES_CLEARED> = "automatic_storage_manager_bytes_cleared";

        <android.provider.Settings$Secure: java.lang.String AUTOFILL_USER_DATA_MIN_VALUE_LENGTH> = "autofill_user_data_min_value_length";

        <android.provider.Settings$Secure: java.lang.String AUTOFILL_USER_DATA_MAX_VALUE_LENGTH> = "autofill_user_data_max_value_length";

        <android.provider.Settings$Secure: java.lang.String AUTOFILL_USER_DATA_MAX_USER_DATA_SIZE> = "autofill_user_data_max_user_data_size";

        <android.provider.Settings$Secure: java.lang.String AUTOFILL_USER_DATA_MAX_FIELD_CLASSIFICATION_IDS_SIZE> = "autofill_user_data_max_field_classification_size";

        <android.provider.Settings$Secure: java.lang.String AUTOFILL_USER_DATA_MAX_CATEGORY_COUNT> = "autofill_user_data_max_category_count";

        <android.provider.Settings$Secure: java.lang.String AUTOFILL_SERVICE_SEARCH_URI> = "autofill_service_search_uri";

        <android.provider.Settings$Secure: java.lang.String AUTOFILL_SERVICE> = "autofill_service";

        <android.provider.Settings$Secure: java.lang.String AUTOFILL_FEATURE_FIELD_CLASSIFICATION> = "autofill_field_classification";

        <android.provider.Settings$Secure: java.lang.String ATTENTIVE_TIMEOUT> = "attentive_timeout";

        <android.provider.Settings$Secure: java.lang.String ASSIST_STRUCTURE_ENABLED> = "assist_structure_enabled";

        <android.provider.Settings$Secure: java.lang.String ASSIST_SCREENSHOT_ENABLED> = "assist_screenshot_enabled";

        <android.provider.Settings$Secure: java.lang.String ASSIST_GESTURE_WAKE_ENABLED> = "assist_gesture_wake_enabled";

        <android.provider.Settings$Secure: java.lang.String ASSIST_GESTURE_SILENCE_ALERTS_ENABLED> = "assist_gesture_silence_alerts_enabled";

        <android.provider.Settings$Secure: java.lang.String ASSIST_GESTURE_SETUP_COMPLETE> = "assist_gesture_setup_complete";

        <android.provider.Settings$Secure: java.lang.String ASSIST_GESTURE_SENSITIVITY> = "assist_gesture_sensitivity";

        <android.provider.Settings$Secure: java.lang.String ASSIST_GESTURE_ENABLED> = "assist_gesture_enabled";

        <android.provider.Settings$Secure: java.lang.String ASSIST_DISCLOSURE_ENABLED> = "assist_disclosure_enabled";

        <android.provider.Settings$Secure: java.lang.String ASSISTANT> = "assistant";

        <android.provider.Settings$Secure: java.lang.String ANR_SHOW_BACKGROUND> = "anr_show_background";

        <android.provider.Settings$Secure: java.lang.String ANDROID_ID> = "android_id";

        <android.provider.Settings$Secure: java.lang.String ALWAYS_ON_VPN_LOCKDOWN_WHITELIST> = "always_on_vpn_lockdown_whitelist";

        <android.provider.Settings$Secure: java.lang.String ALWAYS_ON_VPN_LOCKDOWN> = "always_on_vpn_lockdown";

        <android.provider.Settings$Secure: java.lang.String ALWAYS_ON_VPN_APP> = "always_on_vpn_app";

        <android.provider.Settings$Secure: java.lang.String ALLOW_MOCK_LOCATION> = "mock_location";

        <android.provider.Settings$Secure: java.lang.String ALLOWED_GEOLOCATION_ORIGINS> = "allowed_geolocation_origins";

        <android.provider.Settings$Secure: java.lang.String ADB_ENABLED> = "adb_enabled";

        <android.provider.Settings$Secure: java.lang.String ADAPTIVE_SLEEP> = "adaptive_sleep";

        <android.provider.Settings$Secure: java.lang.String ACCESSIBILITY_SPEAK_PASSWORD> = "speak_password";

        <android.provider.Settings$Secure: java.lang.String ACCESSIBILITY_SOFT_KEYBOARD_MODE> = "accessibility_soft_keyboard_mode";

        <android.provider.Settings$Secure: java.lang.String ACCESSIBILITY_SHORTCUT_TARGET_SERVICE> = "accessibility_shortcut_target_service";

        <android.provider.Settings$Secure: java.lang.String ACCESSIBILITY_SHORTCUT_TARGET_MAGNIFICATION_CONTROLLER> = "com.android.server.accessibility.MagnificationController";

        <android.provider.Settings$Secure: java.lang.String ACCESSIBILITY_SHORTCUT_ON_LOCK_SCREEN> = "accessibility_shortcut_on_lock_screen";

        <android.provider.Settings$Secure: java.lang.String ACCESSIBILITY_SHORTCUT_DIALOG_SHOWN> = "accessibility_shortcut_dialog_shown";

        <android.provider.Settings$Secure: java.lang.String ACCESSIBILITY_NON_INTERACTIVE_UI_TIMEOUT_MS> = "accessibility_non_interactive_ui_timeout_ms";

        <android.provider.Settings$Secure: int ACCESSIBILITY_MAGNIFICATION_MODE_WINDOW> = 2;

        <android.provider.Settings$Secure: int ACCESSIBILITY_MAGNIFICATION_MODE_FULLSCREEN> = 1;

        <android.provider.Settings$Secure: java.lang.String ACCESSIBILITY_MAGNIFICATION_MODE> = "accessibility_magnification_mode";

        <android.provider.Settings$Secure: java.lang.String ACCESSIBILITY_LARGE_POINTER_ICON> = "accessibility_large_pointer_icon";

        <android.provider.Settings$Secure: java.lang.String ACCESSIBILITY_INTERACTIVE_UI_TIMEOUT_MS> = "accessibility_interactive_ui_timeout_ms";

        <android.provider.Settings$Secure: java.lang.String ACCESSIBILITY_HIGH_TEXT_CONTRAST_ENABLED> = "high_text_contrast_enabled";

        <android.provider.Settings$Secure: java.lang.String ACCESSIBILITY_ENABLED> = "accessibility_enabled";

        <android.provider.Settings$Secure: java.lang.String ACCESSIBILITY_DISPLAY_MAGNIFICATION_SCALE> = "accessibility_display_magnification_scale";

        <android.provider.Settings$Secure: java.lang.String ACCESSIBILITY_DISPLAY_MAGNIFICATION_NAVBAR_ENABLED> = "accessibility_display_magnification_navbar_enabled";

        <android.provider.Settings$Secure: java.lang.String ACCESSIBILITY_DISPLAY_MAGNIFICATION_ENABLED> = "accessibility_display_magnification_enabled";

        <android.provider.Settings$Secure: java.lang.String ACCESSIBILITY_DISPLAY_MAGNIFICATION_AUTO_UPDATE> = "accessibility_display_magnification_auto_update";

        <android.provider.Settings$Secure: java.lang.String ACCESSIBILITY_DISPLAY_INVERSION_ENABLED> = "accessibility_display_inversion_enabled";

        <android.provider.Settings$Secure: java.lang.String ACCESSIBILITY_DISPLAY_DALTONIZER_ENABLED> = "accessibility_display_daltonizer_enabled";

        <android.provider.Settings$Secure: java.lang.String ACCESSIBILITY_DISPLAY_DALTONIZER> = "accessibility_display_daltonizer";

        <android.provider.Settings$Secure: java.lang.String ACCESSIBILITY_CAPTIONING_WINDOW_COLOR> = "accessibility_captioning_window_color";

        <android.provider.Settings$Secure: java.lang.String ACCESSIBILITY_CAPTIONING_TYPEFACE> = "accessibility_captioning_typeface";

        <android.provider.Settings$Secure: java.lang.String ACCESSIBILITY_CAPTIONING_PRESET> = "accessibility_captioning_preset";

        <android.provider.Settings$Secure: java.lang.String ACCESSIBILITY_CAPTIONING_LOCALE> = "accessibility_captioning_locale";

        <android.provider.Settings$Secure: java.lang.String ACCESSIBILITY_CAPTIONING_FOREGROUND_COLOR> = "accessibility_captioning_foreground_color";

        <android.provider.Settings$Secure: java.lang.String ACCESSIBILITY_CAPTIONING_FONT_SCALE> = "accessibility_captioning_font_scale";

        <android.provider.Settings$Secure: java.lang.String ACCESSIBILITY_CAPTIONING_ENABLED> = "accessibility_captioning_enabled";

        <android.provider.Settings$Secure: java.lang.String ACCESSIBILITY_CAPTIONING_EDGE_TYPE> = "accessibility_captioning_edge_type";

        <android.provider.Settings$Secure: java.lang.String ACCESSIBILITY_CAPTIONING_EDGE_COLOR> = "accessibility_captioning_edge_color";

        <android.provider.Settings$Secure: java.lang.String ACCESSIBILITY_CAPTIONING_BACKGROUND_COLOR> = "accessibility_captioning_background_color";

        <android.provider.Settings$Secure: java.lang.String ACCESSIBILITY_BUTTON_TARGET_COMPONENT> = "accessibility_button_target_component";

        <android.provider.Settings$Secure: java.lang.String ACCESSIBILITY_BUTTON_TARGETS> = "accessibility_button_targets";

        <android.provider.Settings$Secure: java.lang.String ACCESSIBILITY_AUTOCLICK_ENABLED> = "accessibility_autoclick_enabled";

        <android.provider.Settings$Secure: java.lang.String ACCESSIBILITY_AUTOCLICK_DELAY> = "accessibility_autoclick_delay";

        r148 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>("content://settings/secure");

        <android.provider.Settings$Secure: android.net.Uri CONTENT_URI> = r148;

        $r0 = new android.provider.Settings$ContentProviderHolder;

        specialinvoke $r0.<android.provider.Settings$ContentProviderHolder: void <init>(android.net.Uri)>(r148);

        <android.provider.Settings$Secure: android.provider.Settings$ContentProviderHolder sProviderHolder> = $r0;

        $r1 = new android.provider.Settings$NameValueCache;

        $r3 = <android.provider.Settings$Secure: android.net.Uri CONTENT_URI>;

        $r2 = <android.provider.Settings$Secure: android.provider.Settings$ContentProviderHolder sProviderHolder>;

        specialinvoke $r1.<android.provider.Settings$NameValueCache: void <init>(android.net.Uri,java.lang.String,java.lang.String,android.provider.Settings$ContentProviderHolder)>($r3, "GET_secure", "PUT_secure", $r2);

        <android.provider.Settings$Secure: android.provider.Settings$NameValueCache sNameValueCache> = $r1;

        <android.provider.Settings$Secure: com.android.internal.widget.ILockSettings sLockSettings> = null;

        $r4 = new java.util.HashSet;

        specialinvoke $r4.<java.util.HashSet: void <init>(int)>(3);

        <android.provider.Settings$Secure: java.util.HashSet MOVED_TO_LOCK_SETTINGS> = $r4;

        virtualinvoke $r4.<java.util.HashSet: boolean add(java.lang.Object)>("lock_pattern_autolock");

        $r5 = <android.provider.Settings$Secure: java.util.HashSet MOVED_TO_LOCK_SETTINGS>;

        virtualinvoke $r5.<java.util.HashSet: boolean add(java.lang.Object)>("lock_pattern_visible_pattern");

        $r6 = <android.provider.Settings$Secure: java.util.HashSet MOVED_TO_LOCK_SETTINGS>;

        virtualinvoke $r6.<java.util.HashSet: boolean add(java.lang.Object)>("lock_pattern_tactile_feedback_enabled");

        $r7 = new java.util.HashSet;

        specialinvoke $r7.<java.util.HashSet: void <init>()>();

        <android.provider.Settings$Secure: java.util.HashSet MOVED_TO_GLOBAL> = $r7;

        virtualinvoke $r7.<java.util.HashSet: boolean add(java.lang.Object)>("adb_enabled");

        $r8 = <android.provider.Settings$Secure: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r8.<java.util.HashSet: boolean add(java.lang.Object)>("assisted_gps_enabled");

        $r9 = <android.provider.Settings$Secure: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r9.<java.util.HashSet: boolean add(java.lang.Object)>("bluetooth_on");

        $r10 = <android.provider.Settings$Secure: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r10.<java.util.HashSet: boolean add(java.lang.Object)>("bugreport_in_power_menu");

        $r11 = <android.provider.Settings$Secure: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r11.<java.util.HashSet: boolean add(java.lang.Object)>("cdma_cell_broadcast_sms");

        $r12 = <android.provider.Settings$Secure: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r12.<java.util.HashSet: boolean add(java.lang.Object)>("roaming_settings");

        $r13 = <android.provider.Settings$Secure: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r13.<java.util.HashSet: boolean add(java.lang.Object)>("subscription_mode");

        $r14 = <android.provider.Settings$Secure: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r14.<java.util.HashSet: boolean add(java.lang.Object)>("data_activity_timeout_mobile");

        $r15 = <android.provider.Settings$Secure: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r15.<java.util.HashSet: boolean add(java.lang.Object)>("data_activity_timeout_wifi");

        $r16 = <android.provider.Settings$Secure: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r16.<java.util.HashSet: boolean add(java.lang.Object)>("data_roaming");

        $r17 = <android.provider.Settings$Secure: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r17.<java.util.HashSet: boolean add(java.lang.Object)>("development_settings_enabled");

        $r18 = <android.provider.Settings$Secure: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r18.<java.util.HashSet: boolean add(java.lang.Object)>("device_provisioned");

        $r19 = <android.provider.Settings$Secure: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r19.<java.util.HashSet: boolean add(java.lang.Object)>("display_size_forced");

        $r20 = <android.provider.Settings$Secure: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r20.<java.util.HashSet: boolean add(java.lang.Object)>("download_manager_max_bytes_over_mobile");

        $r21 = <android.provider.Settings$Secure: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r21.<java.util.HashSet: boolean add(java.lang.Object)>("download_manager_recommended_max_bytes_over_mobile");

        $r22 = <android.provider.Settings$Secure: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r22.<java.util.HashSet: boolean add(java.lang.Object)>("mobile_data");

        $r23 = <android.provider.Settings$Secure: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r23.<java.util.HashSet: boolean add(java.lang.Object)>("netstats_dev_bucket_duration");

        $r24 = <android.provider.Settings$Secure: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r24.<java.util.HashSet: boolean add(java.lang.Object)>("netstats_dev_delete_age");

        $r25 = <android.provider.Settings$Secure: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r25.<java.util.HashSet: boolean add(java.lang.Object)>("netstats_dev_persist_bytes");

        $r26 = <android.provider.Settings$Secure: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r26.<java.util.HashSet: boolean add(java.lang.Object)>("netstats_dev_rotate_age");

        $r27 = <android.provider.Settings$Secure: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r27.<java.util.HashSet: boolean add(java.lang.Object)>("netstats_enabled");

        $r28 = <android.provider.Settings$Secure: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r28.<java.util.HashSet: boolean add(java.lang.Object)>("netstats_global_alert_bytes");

        $r29 = <android.provider.Settings$Secure: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r29.<java.util.HashSet: boolean add(java.lang.Object)>("netstats_poll_interval");

        $r30 = <android.provider.Settings$Secure: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r30.<java.util.HashSet: boolean add(java.lang.Object)>("netstats_sample_enabled");

        $r31 = <android.provider.Settings$Secure: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r31.<java.util.HashSet: boolean add(java.lang.Object)>("netstats_time_cache_max_age");

        $r32 = <android.provider.Settings$Secure: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r32.<java.util.HashSet: boolean add(java.lang.Object)>("netstats_uid_bucket_duration");

        $r33 = <android.provider.Settings$Secure: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r33.<java.util.HashSet: boolean add(java.lang.Object)>("netstats_uid_delete_age");

        $r34 = <android.provider.Settings$Secure: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r34.<java.util.HashSet: boolean add(java.lang.Object)>("netstats_uid_persist_bytes");

        $r35 = <android.provider.Settings$Secure: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r35.<java.util.HashSet: boolean add(java.lang.Object)>("netstats_uid_rotate_age");

        $r36 = <android.provider.Settings$Secure: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r36.<java.util.HashSet: boolean add(java.lang.Object)>("netstats_uid_tag_bucket_duration");

        $r37 = <android.provider.Settings$Secure: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r37.<java.util.HashSet: boolean add(java.lang.Object)>("netstats_uid_tag_delete_age");

        $r38 = <android.provider.Settings$Secure: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r38.<java.util.HashSet: boolean add(java.lang.Object)>("netstats_uid_tag_persist_bytes");

        $r39 = <android.provider.Settings$Secure: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r39.<java.util.HashSet: boolean add(java.lang.Object)>("netstats_uid_tag_rotate_age");

        $r40 = <android.provider.Settings$Secure: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r40.<java.util.HashSet: boolean add(java.lang.Object)>("network_preference");

        $r41 = <android.provider.Settings$Secure: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r41.<java.util.HashSet: boolean add(java.lang.Object)>("nitz_update_diff");

        $r42 = <android.provider.Settings$Secure: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r42.<java.util.HashSet: boolean add(java.lang.Object)>("nitz_update_spacing");

        $r43 = <android.provider.Settings$Secure: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r43.<java.util.HashSet: boolean add(java.lang.Object)>("ntp_server");

        $r44 = <android.provider.Settings$Secure: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r44.<java.util.HashSet: boolean add(java.lang.Object)>("ntp_timeout");

        $r45 = <android.provider.Settings$Secure: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r45.<java.util.HashSet: boolean add(java.lang.Object)>("pdp_watchdog_error_poll_count");

        $r46 = <android.provider.Settings$Secure: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r46.<java.util.HashSet: boolean add(java.lang.Object)>("pdp_watchdog_long_poll_interval_ms");

        $r47 = <android.provider.Settings$Secure: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r47.<java.util.HashSet: boolean add(java.lang.Object)>("pdp_watchdog_max_pdp_reset_fail_count");

        $r48 = <android.provider.Settings$Secure: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r48.<java.util.HashSet: boolean add(java.lang.Object)>("pdp_watchdog_poll_interval_ms");

        $r49 = <android.provider.Settings$Secure: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r49.<java.util.HashSet: boolean add(java.lang.Object)>("pdp_watchdog_trigger_packet_count");

        $r50 = <android.provider.Settings$Secure: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r50.<java.util.HashSet: boolean add(java.lang.Object)>("setup_prepaid_data_service_url");

        $r51 = <android.provider.Settings$Secure: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r51.<java.util.HashSet: boolean add(java.lang.Object)>("setup_prepaid_detection_redir_host");

        $r52 = <android.provider.Settings$Secure: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r52.<java.util.HashSet: boolean add(java.lang.Object)>("setup_prepaid_detection_target_url");

        $r53 = <android.provider.Settings$Secure: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r53.<java.util.HashSet: boolean add(java.lang.Object)>("tether_dun_apn");

        $r54 = <android.provider.Settings$Secure: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r54.<java.util.HashSet: boolean add(java.lang.Object)>("tether_dun_required");

        $r55 = <android.provider.Settings$Secure: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r55.<java.util.HashSet: boolean add(java.lang.Object)>("tether_supported");

        $r56 = <android.provider.Settings$Secure: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r56.<java.util.HashSet: boolean add(java.lang.Object)>("usb_mass_storage_enabled");

        $r57 = <android.provider.Settings$Secure: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r57.<java.util.HashSet: boolean add(java.lang.Object)>("use_google_mail");

        $r58 = <android.provider.Settings$Secure: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r58.<java.util.HashSet: boolean add(java.lang.Object)>("wifi_country_code");

        $r59 = <android.provider.Settings$Secure: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r59.<java.util.HashSet: boolean add(java.lang.Object)>("wifi_framework_scan_interval_ms");

        $r60 = <android.provider.Settings$Secure: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r60.<java.util.HashSet: boolean add(java.lang.Object)>("wifi_frequency_band");

        $r61 = <android.provider.Settings$Secure: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r61.<java.util.HashSet: boolean add(java.lang.Object)>("wifi_idle_ms");

        $r62 = <android.provider.Settings$Secure: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r62.<java.util.HashSet: boolean add(java.lang.Object)>("wifi_max_dhcp_retry_count");

        $r63 = <android.provider.Settings$Secure: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r63.<java.util.HashSet: boolean add(java.lang.Object)>("wifi_mobile_data_transition_wakelock_timeout_ms");

        $r64 = <android.provider.Settings$Secure: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r64.<java.util.HashSet: boolean add(java.lang.Object)>("wifi_networks_available_notification_on");

        $r65 = <android.provider.Settings$Secure: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r65.<java.util.HashSet: boolean add(java.lang.Object)>("wifi_networks_available_repeat_delay");

        $r66 = <android.provider.Settings$Secure: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r66.<java.util.HashSet: boolean add(java.lang.Object)>("wifi_num_open_networks_kept");

        $r67 = <android.provider.Settings$Secure: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r67.<java.util.HashSet: boolean add(java.lang.Object)>("wifi_on");

        $r68 = <android.provider.Settings$Secure: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r68.<java.util.HashSet: boolean add(java.lang.Object)>("wifi_p2p_device_name");

        $r69 = <android.provider.Settings$Secure: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r69.<java.util.HashSet: boolean add(java.lang.Object)>("wifi_supplicant_scan_interval_ms");

        $r70 = <android.provider.Settings$Secure: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r70.<java.util.HashSet: boolean add(java.lang.Object)>("wifi_verbose_logging_enabled");

        $r71 = <android.provider.Settings$Secure: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r71.<java.util.HashSet: boolean add(java.lang.Object)>("wifi_enhanced_auto_join");

        $r72 = <android.provider.Settings$Secure: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r72.<java.util.HashSet: boolean add(java.lang.Object)>("wifi_network_show_rssi");

        $r73 = <android.provider.Settings$Secure: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r73.<java.util.HashSet: boolean add(java.lang.Object)>("wifi_watchdog_on");

        $r74 = <android.provider.Settings$Secure: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r74.<java.util.HashSet: boolean add(java.lang.Object)>("wifi_watchdog_poor_network_test_enabled");

        $r75 = <android.provider.Settings$Secure: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r75.<java.util.HashSet: boolean add(java.lang.Object)>("wifi_p2p_pending_factory_reset");

        $r76 = <android.provider.Settings$Secure: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r76.<java.util.HashSet: boolean add(java.lang.Object)>("wimax_networks_available_notification_on");

        $r77 = <android.provider.Settings$Secure: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r77.<java.util.HashSet: boolean add(java.lang.Object)>("verifier_timeout");

        $r78 = <android.provider.Settings$Secure: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r78.<java.util.HashSet: boolean add(java.lang.Object)>("verifier_default_response");

        $r79 = <android.provider.Settings$Secure: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r79.<java.util.HashSet: boolean add(java.lang.Object)>("data_stall_alarm_non_aggressive_delay_in_ms");

        $r80 = <android.provider.Settings$Secure: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r80.<java.util.HashSet: boolean add(java.lang.Object)>("data_stall_alarm_aggressive_delay_in_ms");

        $r81 = <android.provider.Settings$Secure: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r81.<java.util.HashSet: boolean add(java.lang.Object)>("gprs_register_check_period_ms");

        $r82 = <android.provider.Settings$Secure: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r82.<java.util.HashSet: boolean add(java.lang.Object)>("wtf_is_fatal");

        $r83 = <android.provider.Settings$Secure: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r83.<java.util.HashSet: boolean add(java.lang.Object)>("battery_discharge_duration_threshold");

        $r84 = <android.provider.Settings$Secure: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r84.<java.util.HashSet: boolean add(java.lang.Object)>("battery_discharge_threshold");

        $r85 = <android.provider.Settings$Secure: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r85.<java.util.HashSet: boolean add(java.lang.Object)>("send_action_app_error");

        $r86 = <android.provider.Settings$Secure: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r86.<java.util.HashSet: boolean add(java.lang.Object)>("dropbox_age_seconds");

        $r87 = <android.provider.Settings$Secure: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r87.<java.util.HashSet: boolean add(java.lang.Object)>("dropbox_max_files");

        $r88 = <android.provider.Settings$Secure: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r88.<java.util.HashSet: boolean add(java.lang.Object)>("dropbox_quota_kb");

        $r89 = <android.provider.Settings$Secure: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r89.<java.util.HashSet: boolean add(java.lang.Object)>("dropbox_quota_percent");

        $r90 = <android.provider.Settings$Secure: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r90.<java.util.HashSet: boolean add(java.lang.Object)>("dropbox_reserve_percent");

        $r91 = <android.provider.Settings$Secure: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r91.<java.util.HashSet: boolean add(java.lang.Object)>("dropbox:");

        $r92 = <android.provider.Settings$Secure: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r92.<java.util.HashSet: boolean add(java.lang.Object)>("logcat_for_");

        $r93 = <android.provider.Settings$Secure: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r93.<java.util.HashSet: boolean add(java.lang.Object)>("sys_free_storage_log_interval");

        $r94 = <android.provider.Settings$Secure: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r94.<java.util.HashSet: boolean add(java.lang.Object)>("disk_free_change_reporting_threshold");

        $r95 = <android.provider.Settings$Secure: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r95.<java.util.HashSet: boolean add(java.lang.Object)>("sys_storage_threshold_percentage");

        $r96 = <android.provider.Settings$Secure: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r96.<java.util.HashSet: boolean add(java.lang.Object)>("sys_storage_threshold_max_bytes");

        $r97 = <android.provider.Settings$Secure: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r97.<java.util.HashSet: boolean add(java.lang.Object)>("sys_storage_full_threshold_bytes");

        $r98 = <android.provider.Settings$Secure: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r98.<java.util.HashSet: boolean add(java.lang.Object)>("sync_max_retry_delay_in_seconds");

        $r99 = <android.provider.Settings$Secure: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r99.<java.util.HashSet: boolean add(java.lang.Object)>("connectivity_change_delay");

        $r100 = <android.provider.Settings$Secure: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r100.<java.util.HashSet: boolean add(java.lang.Object)>("captive_portal_detection_enabled");

        $r101 = <android.provider.Settings$Secure: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r101.<java.util.HashSet: boolean add(java.lang.Object)>("captive_portal_server");

        $r102 = <android.provider.Settings$Secure: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r102.<java.util.HashSet: boolean add(java.lang.Object)>("nsd_on");

        $r103 = <android.provider.Settings$Secure: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r103.<java.util.HashSet: boolean add(java.lang.Object)>("set_install_location");

        $r104 = <android.provider.Settings$Secure: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r104.<java.util.HashSet: boolean add(java.lang.Object)>("default_install_location");

        $r105 = <android.provider.Settings$Secure: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r105.<java.util.HashSet: boolean add(java.lang.Object)>("inet_condition_debounce_up_delay");

        $r106 = <android.provider.Settings$Secure: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r106.<java.util.HashSet: boolean add(java.lang.Object)>("inet_condition_debounce_down_delay");

        $r107 = <android.provider.Settings$Secure: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r107.<java.util.HashSet: boolean add(java.lang.Object)>("read_external_storage_enforced_default");

        $r108 = <android.provider.Settings$Secure: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r108.<java.util.HashSet: boolean add(java.lang.Object)>("http_proxy");

        $r109 = <android.provider.Settings$Secure: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r109.<java.util.HashSet: boolean add(java.lang.Object)>("global_http_proxy_host");

        $r110 = <android.provider.Settings$Secure: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r110.<java.util.HashSet: boolean add(java.lang.Object)>("global_http_proxy_port");

        $r111 = <android.provider.Settings$Secure: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r111.<java.util.HashSet: boolean add(java.lang.Object)>("global_http_proxy_exclusion_list");

        $r112 = <android.provider.Settings$Secure: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r112.<java.util.HashSet: boolean add(java.lang.Object)>("set_global_http_proxy");

        $r113 = <android.provider.Settings$Secure: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r113.<java.util.HashSet: boolean add(java.lang.Object)>("default_dns_server");

        $r114 = <android.provider.Settings$Secure: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r114.<java.util.HashSet: boolean add(java.lang.Object)>("preferred_network_mode");

        $r115 = <android.provider.Settings$Secure: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r115.<java.util.HashSet: boolean add(java.lang.Object)>("webview_data_reduction_proxy_key");

        $r116 = newarray (java.lang.String)[3];

        $r116[0] = "enabled_notification_listeners";

        $r116[1] = "enabled_notification_assistant";

        $r116[2] = "enabled_notification_policy_access_packages";

        <android.provider.Settings$Secure: java.lang.String[] LEGACY_RESTORE_SETTINGS> = $r116;

        $r117 = new android.util.ArraySet;

        specialinvoke $r117.<android.util.ArraySet: void <init>()>();

        <android.provider.Settings$Secure: java.util.Set CLONE_TO_MANAGED_PROFILE> = $r117;

        interfaceinvoke $r117.<java.util.Set: boolean add(java.lang.Object)>("accessibility_enabled");

        $r118 = <android.provider.Settings$Secure: java.util.Set CLONE_TO_MANAGED_PROFILE>;

        interfaceinvoke $r118.<java.util.Set: boolean add(java.lang.Object)>("mock_location");

        $r119 = <android.provider.Settings$Secure: java.util.Set CLONE_TO_MANAGED_PROFILE>;

        interfaceinvoke $r119.<java.util.Set: boolean add(java.lang.Object)>("allowed_geolocation_origins");

        $r120 = <android.provider.Settings$Secure: java.util.Set CLONE_TO_MANAGED_PROFILE>;

        interfaceinvoke $r120.<java.util.Set: boolean add(java.lang.Object)>("content_capture_enabled");

        $r121 = <android.provider.Settings$Secure: java.util.Set CLONE_TO_MANAGED_PROFILE>;

        interfaceinvoke $r121.<java.util.Set: boolean add(java.lang.Object)>("enabled_accessibility_services");

        $r122 = <android.provider.Settings$Secure: java.util.Set CLONE_TO_MANAGED_PROFILE>;

        interfaceinvoke $r122.<java.util.Set: boolean add(java.lang.Object)>("location_changer");

        $r123 = <android.provider.Settings$Secure: java.util.Set CLONE_TO_MANAGED_PROFILE>;

        interfaceinvoke $r123.<java.util.Set: boolean add(java.lang.Object)>("location_mode");

        $r124 = <android.provider.Settings$Secure: java.util.Set CLONE_TO_MANAGED_PROFILE>;

        interfaceinvoke $r124.<java.util.Set: boolean add(java.lang.Object)>("location_providers_allowed");

        $r125 = <android.provider.Settings$Secure: java.util.Set CLONE_TO_MANAGED_PROFILE>;

        interfaceinvoke $r125.<java.util.Set: boolean add(java.lang.Object)>("show_ime_with_hard_keyboard");

        $r126 = new android.util.ArraySet;

        specialinvoke $r126.<android.util.ArraySet: void <init>()>();

        <android.provider.Settings$Secure: java.util.Set INSTANT_APP_SETTINGS> = $r126;

        interfaceinvoke $r126.<java.util.Set: boolean add(java.lang.Object)>("enabled_accessibility_services");

        $r127 = <android.provider.Settings$Secure: java.util.Set INSTANT_APP_SETTINGS>;

        interfaceinvoke $r127.<java.util.Set: boolean add(java.lang.Object)>("speak_password");

        $r128 = <android.provider.Settings$Secure: java.util.Set INSTANT_APP_SETTINGS>;

        interfaceinvoke $r128.<java.util.Set: boolean add(java.lang.Object)>("accessibility_display_inversion_enabled");

        $r129 = <android.provider.Settings$Secure: java.util.Set INSTANT_APP_SETTINGS>;

        interfaceinvoke $r129.<java.util.Set: boolean add(java.lang.Object)>("accessibility_captioning_enabled");

        $r130 = <android.provider.Settings$Secure: java.util.Set INSTANT_APP_SETTINGS>;

        interfaceinvoke $r130.<java.util.Set: boolean add(java.lang.Object)>("accessibility_captioning_preset");

        $r131 = <android.provider.Settings$Secure: java.util.Set INSTANT_APP_SETTINGS>;

        interfaceinvoke $r131.<java.util.Set: boolean add(java.lang.Object)>("accessibility_captioning_edge_type");

        $r132 = <android.provider.Settings$Secure: java.util.Set INSTANT_APP_SETTINGS>;

        interfaceinvoke $r132.<java.util.Set: boolean add(java.lang.Object)>("accessibility_captioning_edge_color");

        $r133 = <android.provider.Settings$Secure: java.util.Set INSTANT_APP_SETTINGS>;

        interfaceinvoke $r133.<java.util.Set: boolean add(java.lang.Object)>("accessibility_captioning_locale");

        $r134 = <android.provider.Settings$Secure: java.util.Set INSTANT_APP_SETTINGS>;

        interfaceinvoke $r134.<java.util.Set: boolean add(java.lang.Object)>("accessibility_captioning_background_color");

        $r135 = <android.provider.Settings$Secure: java.util.Set INSTANT_APP_SETTINGS>;

        interfaceinvoke $r135.<java.util.Set: boolean add(java.lang.Object)>("accessibility_captioning_foreground_color");

        $r136 = <android.provider.Settings$Secure: java.util.Set INSTANT_APP_SETTINGS>;

        interfaceinvoke $r136.<java.util.Set: boolean add(java.lang.Object)>("accessibility_captioning_typeface");

        $r137 = <android.provider.Settings$Secure: java.util.Set INSTANT_APP_SETTINGS>;

        interfaceinvoke $r137.<java.util.Set: boolean add(java.lang.Object)>("accessibility_captioning_font_scale");

        $r138 = <android.provider.Settings$Secure: java.util.Set INSTANT_APP_SETTINGS>;

        interfaceinvoke $r138.<java.util.Set: boolean add(java.lang.Object)>("accessibility_captioning_window_color");

        $r139 = <android.provider.Settings$Secure: java.util.Set INSTANT_APP_SETTINGS>;

        interfaceinvoke $r139.<java.util.Set: boolean add(java.lang.Object)>("accessibility_display_daltonizer_enabled");

        $r140 = <android.provider.Settings$Secure: java.util.Set INSTANT_APP_SETTINGS>;

        interfaceinvoke $r140.<java.util.Set: boolean add(java.lang.Object)>("accessibility_display_daltonizer");

        $r141 = <android.provider.Settings$Secure: java.util.Set INSTANT_APP_SETTINGS>;

        interfaceinvoke $r141.<java.util.Set: boolean add(java.lang.Object)>("accessibility_autoclick_delay");

        $r142 = <android.provider.Settings$Secure: java.util.Set INSTANT_APP_SETTINGS>;

        interfaceinvoke $r142.<java.util.Set: boolean add(java.lang.Object)>("accessibility_autoclick_enabled");

        $r143 = <android.provider.Settings$Secure: java.util.Set INSTANT_APP_SETTINGS>;

        interfaceinvoke $r143.<java.util.Set: boolean add(java.lang.Object)>("accessibility_large_pointer_icon");

        $r144 = <android.provider.Settings$Secure: java.util.Set INSTANT_APP_SETTINGS>;

        interfaceinvoke $r144.<java.util.Set: boolean add(java.lang.Object)>("default_input_method");

        $r145 = <android.provider.Settings$Secure: java.util.Set INSTANT_APP_SETTINGS>;

        interfaceinvoke $r145.<java.util.Set: boolean add(java.lang.Object)>("enabled_input_methods");

        $r146 = <android.provider.Settings$Secure: java.util.Set INSTANT_APP_SETTINGS>;

        interfaceinvoke $r146.<java.util.Set: boolean add(java.lang.Object)>("android_id");

        $r147 = <android.provider.Settings$Secure: java.util.Set INSTANT_APP_SETTINGS>;

        interfaceinvoke $r147.<java.util.Set: boolean add(java.lang.Object)>("mock_location");

        return;
    }

    public void <init>()
    {
        android.provider.Settings$Secure r0;

        r0 := @this: android.provider.Settings$Secure;

        specialinvoke r0.<android.provider.Settings$NameValueTable: void <init>()>();

        return;
    }

    public static void clearProviderForTest()
    {
        android.provider.Settings$ContentProviderHolder $r0;
        android.provider.Settings$NameValueCache $r1;

        $r0 = <android.provider.Settings$Secure: android.provider.Settings$ContentProviderHolder sProviderHolder>;

        virtualinvoke $r0.<android.provider.Settings$ContentProviderHolder: void clearProviderForTest()>();

        $r1 = <android.provider.Settings$Secure: android.provider.Settings$NameValueCache sNameValueCache>;

        virtualinvoke $r1.<android.provider.Settings$NameValueCache: void clearGenerationTrackerForTest()>();

        return;
    }

    public static void getCloneToManagedProfileSettings(java.util.Set)
    {
        java.util.Set r0, $r1;

        r0 := @parameter0: java.util.Set;

        $r1 = <android.provider.Settings$Secure: java.util.Set CLONE_TO_MANAGED_PROFILE>;

        interfaceinvoke r0.<java.util.Set: boolean addAll(java.util.Collection)>($r1);

        return;
    }

    public static float getFloat(android.content.ContentResolver, java.lang.String) throws android.provider.Settings$SettingNotFoundException
    {
        android.content.ContentResolver r0;
        java.lang.String r1;
        int $i0;
        float $f0;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: java.lang.String;

        $i0 = virtualinvoke r0.<android.content.ContentResolver: int getUserId()>();

        $f0 = staticinvoke <android.provider.Settings$Secure: float getFloatForUser(android.content.ContentResolver,java.lang.String,int)>(r0, r1, $i0);

        return $f0;
    }

    public static float getFloat(android.content.ContentResolver, java.lang.String, float)
    {
        android.content.ContentResolver r0;
        java.lang.String r1;
        float f0, $f1;
        int $i0;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: java.lang.String;

        f0 := @parameter2: float;

        $i0 = virtualinvoke r0.<android.content.ContentResolver: int getUserId()>();

        $f1 = staticinvoke <android.provider.Settings$Secure: float getFloatForUser(android.content.ContentResolver,java.lang.String,float,int)>(r0, r1, f0, $i0);

        return $f1;
    }

    public static float getFloatForUser(android.content.ContentResolver, java.lang.String, float, int)
    {
        java.lang.String r0, r3;
        int i0;
        float f0, f1;
        java.lang.Throwable $r1;
        android.content.ContentResolver r2;

        r2 := @parameter0: android.content.ContentResolver;

        r0 := @parameter1: java.lang.String;

        f1 := @parameter2: float;

        i0 := @parameter3: int;

        r3 = staticinvoke <android.provider.Settings$Secure: java.lang.String getStringForUser(android.content.ContentResolver,java.lang.String,int)>(r2, r0, i0);

        if r3 == null goto label4;

     label1:
        f0 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>(r3);

     label2:
        f1 = f0;

        goto label4;

     label3:
        $r1 := @caughtexception;

        return f1;

     label4:
        return f1;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    public static float getFloatForUser(android.content.ContentResolver, java.lang.String, int) throws android.provider.Settings$SettingNotFoundException
    {
        java.lang.String r0, r5;
        int i0;
        float f0;
        android.provider.Settings$SettingNotFoundException $r1, $r3;
        java.lang.Throwable $r2;
        android.content.ContentResolver r4;

        r4 := @parameter0: android.content.ContentResolver;

        r0 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r5 = staticinvoke <android.provider.Settings$Secure: java.lang.String getStringForUser(android.content.ContentResolver,java.lang.String,int)>(r4, r0, i0);

        if r5 == null goto label4;

     label1:
        f0 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>(r5);

     label2:
        return f0;

     label3:
        $r2 := @caughtexception;

        $r3 = new android.provider.Settings$SettingNotFoundException;

        specialinvoke $r3.<android.provider.Settings$SettingNotFoundException: void <init>(java.lang.String)>(r0);

        throw $r3;

     label4:
        $r1 = new android.provider.Settings$SettingNotFoundException;

        specialinvoke $r1.<android.provider.Settings$SettingNotFoundException: void <init>(java.lang.String)>(r0);

        throw $r1;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    public static int getInt(android.content.ContentResolver, java.lang.String) throws android.provider.Settings$SettingNotFoundException
    {
        android.content.ContentResolver r0;
        java.lang.String r1;
        int $i0, $i1;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: java.lang.String;

        $i0 = virtualinvoke r0.<android.content.ContentResolver: int getUserId()>();

        $i1 = staticinvoke <android.provider.Settings$Secure: int getIntForUser(android.content.ContentResolver,java.lang.String,int)>(r0, r1, $i0);

        return $i1;
    }

    public static int getInt(android.content.ContentResolver, java.lang.String, int)
    {
        android.content.ContentResolver r0;
        java.lang.String r1;
        int i0, $i1, $i2;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $i1 = virtualinvoke r0.<android.content.ContentResolver: int getUserId()>();

        $i2 = staticinvoke <android.provider.Settings$Secure: int getIntForUser(android.content.ContentResolver,java.lang.String,int,int)>(r0, r1, i0, $i1);

        return $i2;
    }

    public static int getIntForUser(android.content.ContentResolver, java.lang.String, int) throws android.provider.Settings$SettingNotFoundException
    {
        java.lang.String r0, r4;
        java.lang.Throwable $r1;
        android.provider.Settings$SettingNotFoundException $r2;
        android.content.ContentResolver r3;
        int i0, i1;

        r3 := @parameter0: android.content.ContentResolver;

        r0 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r4 = staticinvoke <android.provider.Settings$Secure: java.lang.String getStringForUser(android.content.ContentResolver,java.lang.String,int)>(r3, r0, i0);

     label1:
        i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r4);

     label2:
        return i1;

     label3:
        $r1 := @caughtexception;

        $r2 = new android.provider.Settings$SettingNotFoundException;

        specialinvoke $r2.<android.provider.Settings$SettingNotFoundException: void <init>(java.lang.String)>(r0);

        throw $r2;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    public static int getIntForUser(android.content.ContentResolver, java.lang.String, int, int)
    {
        java.lang.String r0, r3;
        java.lang.Throwable $r1;
        android.content.ContentResolver r2;
        int i0, i1, i2;

        r2 := @parameter0: android.content.ContentResolver;

        r0 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        r3 = staticinvoke <android.provider.Settings$Secure: java.lang.String getStringForUser(android.content.ContentResolver,java.lang.String,int)>(r2, r0, i1);

        if r3 == null goto label4;

     label1:
        i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r3);

     label2:
        i0 = i2;

        goto label4;

     label3:
        $r1 := @caughtexception;

        return i0;

     label4:
        return i0;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    public static long getLong(android.content.ContentResolver, java.lang.String) throws android.provider.Settings$SettingNotFoundException
    {
        android.content.ContentResolver r0;
        java.lang.String r1;
        int $i0;
        long $l1;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: java.lang.String;

        $i0 = virtualinvoke r0.<android.content.ContentResolver: int getUserId()>();

        $l1 = staticinvoke <android.provider.Settings$Secure: long getLongForUser(android.content.ContentResolver,java.lang.String,int)>(r0, r1, $i0);

        return $l1;
    }

    public static long getLong(android.content.ContentResolver, java.lang.String, long)
    {
        android.content.ContentResolver r0;
        java.lang.String r1;
        long l0, $l2;
        int $i1;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: java.lang.String;

        l0 := @parameter2: long;

        $i1 = virtualinvoke r0.<android.content.ContentResolver: int getUserId()>();

        $l2 = staticinvoke <android.provider.Settings$Secure: long getLongForUser(android.content.ContentResolver,java.lang.String,long,int)>(r0, r1, l0, $i1);

        return $l2;
    }

    public static long getLongForUser(android.content.ContentResolver, java.lang.String, int) throws android.provider.Settings$SettingNotFoundException
    {
        java.lang.String r0, r4;
        int i0;
        long l1;
        java.lang.Throwable $r1;
        android.provider.Settings$SettingNotFoundException $r2;
        android.content.ContentResolver r3;

        r3 := @parameter0: android.content.ContentResolver;

        r0 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r4 = staticinvoke <android.provider.Settings$Secure: java.lang.String getStringForUser(android.content.ContentResolver,java.lang.String,int)>(r3, r0, i0);

     label1:
        l1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(r4);

     label2:
        return l1;

     label3:
        $r1 := @caughtexception;

        $r2 = new android.provider.Settings$SettingNotFoundException;

        specialinvoke $r2.<android.provider.Settings$SettingNotFoundException: void <init>(java.lang.String)>(r0);

        throw $r2;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    public static long getLongForUser(android.content.ContentResolver, java.lang.String, long, int)
    {
        java.lang.String r0, r3;
        int i0;
        long l1, l2;
        java.lang.Throwable $r1;
        android.content.ContentResolver r2;

        r2 := @parameter0: android.content.ContentResolver;

        r0 := @parameter1: java.lang.String;

        l2 := @parameter2: long;

        i0 := @parameter3: int;

        r3 = staticinvoke <android.provider.Settings$Secure: java.lang.String getStringForUser(android.content.ContentResolver,java.lang.String,int)>(r2, r0, i0);

        if r3 == null goto label4;

     label1:
        l1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(r3);

     label2:
        l2 = l1;

        goto label4;

     label3:
        $r1 := @caughtexception;

        goto label4;

     label4:
        return l2;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    public static void getMovedToGlobalSettings(java.util.Set)
    {
        java.util.Set r0;
        java.util.HashSet $r1;

        r0 := @parameter0: java.util.Set;

        $r1 = <android.provider.Settings$Secure: java.util.HashSet MOVED_TO_GLOBAL>;

        interfaceinvoke r0.<java.util.Set: boolean addAll(java.util.Collection)>($r1);

        return;
    }

    public static java.lang.String getString(android.content.ContentResolver, java.lang.String)
    {
        android.content.ContentResolver r0;
        java.lang.String r1, $r2;
        int $i0;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: java.lang.String;

        $i0 = virtualinvoke r0.<android.content.ContentResolver: int getUserId()>();

        $r2 = staticinvoke <android.provider.Settings$Secure: java.lang.String getStringForUser(android.content.ContentResolver,java.lang.String,int)>(r0, r1, $i0);

        return $r2;
    }

    public static java.lang.String getStringForUser(android.content.ContentResolver, java.lang.String, int)
    {
        java.lang.String r0, $r8, $r18, $r19, r27, $r32;
        int i0, $i1, $i2;
        java.util.HashSet $r1, $r2;
        boolean $z0, $z1, $z2, z3, z4;
        java.lang.StringBuilder $r3, $r14;
        java.lang.SecurityException $r7;
        com.android.internal.widget.ILockSettings $r9, $r13, r24, $r25;
        android.content.pm.ApplicationInfo $r10, $r11;
        android.os.IBinder $r12;
        android.os.RemoteException $r20;
        java.lang.Throwable $r21;
        android.content.ContentResolver r22;
        android.app.Application r26;
        android.provider.Settings$NameValueCache $r31;

        r22 := @parameter0: android.content.ContentResolver;

        r0 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $r1 = <android.provider.Settings$Secure: java.util.HashSet MOVED_TO_GLOBAL>;

        $z0 = virtualinvoke $r1.<java.util.HashSet: boolean contains(java.lang.Object)>(r0);

        if $z0 == 0 goto label01;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Setting ");

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has moved from android.provider.Settings.Secure to android.provider.Settings.Global.");

        $r18 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("Settings", $r18);

        $r19 = staticinvoke <android.provider.Settings$Global: java.lang.String getStringForUser(android.content.ContentResolver,java.lang.String,int)>(r22, r0, i0);

        return $r19;

     label01:
        $r2 = <android.provider.Settings$Secure: java.util.HashSet MOVED_TO_LOCK_SETTINGS>;

        $z1 = virtualinvoke $r2.<java.util.HashSet: boolean contains(java.lang.Object)>(r0);

        if $z1 == 0 goto label19;

        entermonitor class "Landroid/provider/Settings$Secure;";

     label02:
        r24 = <android.provider.Settings$Secure: com.android.internal.widget.ILockSettings sLockSettings>;

     label03:
        z3 = 1;

        if r24 != null goto label08;

     label04:
        $r12 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("lock_settings");

        $r13 = staticinvoke <com.android.internal.widget.ILockSettings$Stub: com.android.internal.widget.ILockSettings asInterface(android.os.IBinder)>($r12);

        <android.provider.Settings$Secure: com.android.internal.widget.ILockSettings sLockSettings> = $r13;

        $i2 = staticinvoke <android.os.Process: int myUid()>();

        if $i2 != 1000 goto label06;

     label05:
        z4 = 1;

        goto label07;

     label06:
        z4 = 0;

     label07:
        <android.provider.Settings$Secure: boolean sIsSystemProcess> = z4;

     label08:
        exitmonitor class "Landroid/provider/Settings$Secure;";

     label09:
        $r25 = <android.provider.Settings$Secure: com.android.internal.widget.ILockSettings sLockSettings>;

        if $r25 == null goto label19;

        $z2 = <android.provider.Settings$Secure: boolean sIsSystemProcess>;

        if $z2 != 0 goto label19;

        r26 = staticinvoke <android.app.ActivityThread: android.app.Application currentApplication()>();

        if r26 == null goto label10;

        $r10 = virtualinvoke r26.<android.app.Application: android.content.pm.ApplicationInfo getApplicationInfo()>();

        if $r10 == null goto label10;

        $r11 = virtualinvoke r26.<android.app.Application: android.content.pm.ApplicationInfo getApplicationInfo()>();

        $i1 = $r11.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

        if $i1 > 22 goto label10;

        goto label11;

     label10:
        z3 = 0;

     label11:
        if z3 == 0 goto label15;

     label12:
        $r9 = <android.provider.Settings$Secure: com.android.internal.widget.ILockSettings sLockSettings>;

        r27 = interfaceinvoke $r9.<com.android.internal.widget.ILockSettings: java.lang.String getString(java.lang.String,java.lang.String,int)>(r0, "0", i0);

     label13:
        return r27;

     label14:
        $r20 := @caughtexception;

        goto label19;

     label15:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Settings.Secure.");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is deprecated and no longer accessible. See API documentation for potential replacements.");

        $r7 = new java.lang.SecurityException;

        $r8 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.SecurityException: void <init>(java.lang.String)>($r8);

        throw $r7;

     label16:
        $r21 := @caughtexception;

     label17:
        exitmonitor class "Landroid/provider/Settings$Secure;";

     label18:
        throw $r21;

     label19:
        $r31 = <android.provider.Settings$Secure: android.provider.Settings$NameValueCache sNameValueCache>;

        $r32 = virtualinvoke $r31.<android.provider.Settings$NameValueCache: java.lang.String getStringForUser(android.content.ContentResolver,java.lang.String,int)>(r22, r0, i0);

        return $r32;

        catch java.lang.Throwable from label02 to label03 with label16;
        catch java.lang.Throwable from label04 to label05 with label16;
        catch java.lang.Throwable from label07 to label08 with label16;
        catch java.lang.Throwable from label08 to label09 with label16;
        catch android.os.RemoteException from label12 to label13 with label14;
        catch java.lang.Throwable from label17 to label18 with label16;
    }

    public static android.net.Uri getUriFor(java.lang.String)
    {
        java.lang.String r0, $r9;
        java.util.HashSet $r2;
        boolean $z0;
        android.net.Uri $r3, $r4, $r10, $r11;
        java.lang.StringBuilder $r5;

        r0 := @parameter0: java.lang.String;

        $r2 = <android.provider.Settings$Secure: java.util.HashSet MOVED_TO_GLOBAL>;

        $z0 = virtualinvoke $r2.<java.util.HashSet: boolean contains(java.lang.Object)>(r0);

        if $z0 == 0 goto label1;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Setting ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has moved from android.provider.Settings.Secure to android.provider.Settings.Global, returning global URI.");

        $r9 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("Settings", $r9);

        $r10 = <android.provider.Settings$Global: android.net.Uri CONTENT_URI>;

        $r11 = staticinvoke <android.provider.Settings$Global: android.net.Uri getUriFor(android.net.Uri,java.lang.String)>($r10, r0);

        return $r11;

     label1:
        $r3 = <android.provider.Settings$Secure: android.net.Uri CONTENT_URI>;

        $r4 = staticinvoke <android.provider.Settings$Secure: android.net.Uri getUriFor(android.net.Uri,java.lang.String)>($r3, r0);

        return $r4;
    }

    public static boolean isLocationProviderEnabled(android.content.ContentResolver, java.lang.String)
    {
        android.content.ContentResolver r0;
        java.lang.String r1, $r2;
        int $i0;
        boolean $z0;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: java.lang.String;

        $i0 = virtualinvoke r0.<android.content.ContentResolver: int getUserId()>();

        $r2 = staticinvoke <android.provider.Settings$Secure: java.lang.String getStringForUser(android.content.ContentResolver,java.lang.String,int)>(r0, "location_providers_allowed", $i0);

        $z0 = staticinvoke <android.text.TextUtils: boolean delimitedStringContains(java.lang.String,char,java.lang.String)>($r2, 44, r1);

        return $z0;
    }

    public static boolean putFloat(android.content.ContentResolver, java.lang.String, float)
    {
        android.content.ContentResolver r0;
        java.lang.String r1;
        float f0;
        int $i0;
        boolean $z0;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: java.lang.String;

        f0 := @parameter2: float;

        $i0 = virtualinvoke r0.<android.content.ContentResolver: int getUserId()>();

        $z0 = staticinvoke <android.provider.Settings$Secure: boolean putFloatForUser(android.content.ContentResolver,java.lang.String,float,int)>(r0, r1, f0, $i0);

        return $z0;
    }

    public static boolean putFloatForUser(android.content.ContentResolver, java.lang.String, float, int)
    {
        android.content.ContentResolver r0;
        java.lang.String r1, $r2;
        float f0;
        int i0;
        boolean $z0;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: java.lang.String;

        f0 := @parameter2: float;

        i0 := @parameter3: int;

        $r2 = staticinvoke <java.lang.Float: java.lang.String toString(float)>(f0);

        $z0 = staticinvoke <android.provider.Settings$Secure: boolean putStringForUser(android.content.ContentResolver,java.lang.String,java.lang.String,int)>(r0, r1, $r2, i0);

        return $z0;
    }

    public static boolean putInt(android.content.ContentResolver, java.lang.String, int)
    {
        android.content.ContentResolver r0;
        java.lang.String r1;
        int i0, $i1;
        boolean $z0;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $i1 = virtualinvoke r0.<android.content.ContentResolver: int getUserId()>();

        $z0 = staticinvoke <android.provider.Settings$Secure: boolean putIntForUser(android.content.ContentResolver,java.lang.String,int,int)>(r0, r1, i0, $i1);

        return $z0;
    }

    public static boolean putIntForUser(android.content.ContentResolver, java.lang.String, int, int)
    {
        android.content.ContentResolver r0;
        java.lang.String r1, $r2;
        int i0, i1;
        boolean $z0;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        $r2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0);

        $z0 = staticinvoke <android.provider.Settings$Secure: boolean putStringForUser(android.content.ContentResolver,java.lang.String,java.lang.String,int)>(r0, r1, $r2, i1);

        return $z0;
    }

    public static boolean putLong(android.content.ContentResolver, java.lang.String, long)
    {
        android.content.ContentResolver r0;
        java.lang.String r1;
        long l0;
        int $i1;
        boolean $z0;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: java.lang.String;

        l0 := @parameter2: long;

        $i1 = virtualinvoke r0.<android.content.ContentResolver: int getUserId()>();

        $z0 = staticinvoke <android.provider.Settings$Secure: boolean putLongForUser(android.content.ContentResolver,java.lang.String,long,int)>(r0, r1, l0, $i1);

        return $z0;
    }

    public static boolean putLongForUser(android.content.ContentResolver, java.lang.String, long, int)
    {
        android.content.ContentResolver r0;
        java.lang.String r1, $r2;
        long l0;
        int i1;
        boolean $z0;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: java.lang.String;

        l0 := @parameter2: long;

        i1 := @parameter3: int;

        $r2 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0);

        $z0 = staticinvoke <android.provider.Settings$Secure: boolean putStringForUser(android.content.ContentResolver,java.lang.String,java.lang.String,int)>(r0, r1, $r2, i1);

        return $z0;
    }

    public static boolean putString(android.content.ContentResolver, java.lang.String, java.lang.String)
    {
        android.content.ContentResolver r0;
        java.lang.String r1, r2;
        int $i0;
        boolean $z0;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        $i0 = virtualinvoke r0.<android.content.ContentResolver: int getUserId()>();

        $z0 = staticinvoke <android.provider.Settings$Secure: boolean putStringForUser(android.content.ContentResolver,java.lang.String,java.lang.String,int)>(r0, r1, r2, $i0);

        return $z0;
    }

    public static boolean putString(android.content.ContentResolver, java.lang.String, java.lang.String, java.lang.String, boolean)
    {
        android.content.ContentResolver r0;
        java.lang.String r1, r2, r3;
        boolean z0, $z1;
        int $i0;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        z0 := @parameter4: boolean;

        $i0 = virtualinvoke r0.<android.content.ContentResolver: int getUserId()>();

        $z1 = staticinvoke <android.provider.Settings$Secure: boolean putStringForUser(android.content.ContentResolver,java.lang.String,java.lang.String,java.lang.String,boolean,int,boolean)>(r0, r1, r2, r3, z0, $i0, 0);

        return $z1;
    }

    public static boolean putString(android.content.ContentResolver, java.lang.String, java.lang.String, boolean)
    {
        android.content.ContentResolver r0;
        java.lang.String r1, r2;
        boolean z0, $z1;
        int $i0;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        z0 := @parameter3: boolean;

        $i0 = virtualinvoke r0.<android.content.ContentResolver: int getUserId()>();

        $z1 = staticinvoke <android.provider.Settings$Secure: boolean putStringForUser(android.content.ContentResolver,java.lang.String,java.lang.String,java.lang.String,boolean,int,boolean)>(r0, r1, r2, null, 0, $i0, z0);

        return $z1;
    }

    public static boolean putStringForUser(android.content.ContentResolver, java.lang.String, java.lang.String, int)
    {
        android.content.ContentResolver r0;
        java.lang.String r1, r2;
        int i0;
        boolean $z0;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        $z0 = staticinvoke <android.provider.Settings$Secure: boolean putStringForUser(android.content.ContentResolver,java.lang.String,java.lang.String,java.lang.String,boolean,int,boolean)>(r0, r1, r2, null, 0, i0, 0);

        return $z0;
    }

    public static boolean putStringForUser(android.content.ContentResolver, java.lang.String, java.lang.String, java.lang.String, boolean, int, boolean)
    {
        android.content.ContentResolver r0;
        java.lang.String r1, r2, r3, $r11;
        boolean z0, z1, $z2, $z3, $z4;
        int i0;
        java.util.HashSet $r5;
        android.provider.Settings$NameValueCache $r6;
        java.lang.StringBuilder $r7;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        z0 := @parameter4: boolean;

        i0 := @parameter5: int;

        z1 := @parameter6: boolean;

        $r5 = <android.provider.Settings$Secure: java.util.HashSet MOVED_TO_GLOBAL>;

        $z2 = virtualinvoke $r5.<java.util.HashSet: boolean contains(java.lang.Object)>(r1);

        if $z2 == 0 goto label1;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Setting ");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has moved from android.provider.Settings.Secure to android.provider.Settings.Global");

        $r11 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("Settings", $r11);

        $z4 = staticinvoke <android.provider.Settings$Global: boolean putStringForUser(android.content.ContentResolver,java.lang.String,java.lang.String,java.lang.String,boolean,int,boolean)>(r0, r1, r2, r3, z0, i0, 0);

        return $z4;

     label1:
        $r6 = <android.provider.Settings$Secure: android.provider.Settings$NameValueCache sNameValueCache>;

        $z3 = virtualinvoke $r6.<android.provider.Settings$NameValueCache: boolean putStringForUser(android.content.ContentResolver,java.lang.String,java.lang.String,java.lang.String,boolean,int,boolean)>(r0, r1, r2, r3, z0, i0, z1);

        return $z3;
    }

    public static void resetToDefaults(android.content.ContentResolver, java.lang.String)
    {
        android.content.ContentResolver r0;
        java.lang.String r1;
        int $i0;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: java.lang.String;

        $i0 = virtualinvoke r0.<android.content.ContentResolver: int getUserId()>();

        staticinvoke <android.provider.Settings$Secure: void resetToDefaultsAsUser(android.content.ContentResolver,java.lang.String,int,int)>(r0, r1, 1, $i0);

        return;
    }

    public static void resetToDefaultsAsUser(android.content.ContentResolver, java.lang.String, int, int)
    {
        int i0, i1;
        android.os.Bundle r0;
        android.provider.Settings$ContentProviderHolder $r1, $r5;
        android.content.IContentProvider $r2;
        java.lang.String $r3, $r4, $r7, $r14, r16;
        android.net.Uri $r6, $r12;
        android.os.RemoteException $r9;
        java.lang.StringBuilder $r10;
        android.content.ContentResolver r15;

        r15 := @parameter0: android.content.ContentResolver;

        r16 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

     label1:
        r0 = new android.os.Bundle;

        specialinvoke r0.<android.os.Bundle: void <init>()>();

        virtualinvoke r0.<android.os.Bundle: void putInt(java.lang.String,int)>("_user", i1);

     label2:
        if r16 == null goto label4;

     label3:
        virtualinvoke r0.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("_tag", r16);

     label4:
        virtualinvoke r0.<android.os.Bundle: void putInt(java.lang.String,int)>("_reset_mode", i0);

        $r1 = <android.provider.Settings$Secure: android.provider.Settings$ContentProviderHolder sProviderHolder>;

        $r2 = virtualinvoke $r1.<android.provider.Settings$ContentProviderHolder: android.content.IContentProvider getProvider(android.content.ContentResolver)>(r15);

        $r3 = virtualinvoke r15.<android.content.ContentResolver: java.lang.String getPackageName()>();

        $r4 = virtualinvoke r15.<android.content.ContentResolver: java.lang.String getAttributionTag()>();

        $r5 = <android.provider.Settings$Secure: android.provider.Settings$ContentProviderHolder sProviderHolder>;

        $r6 = staticinvoke <android.provider.Settings$ContentProviderHolder: android.net.Uri access$000(android.provider.Settings$ContentProviderHolder)>($r5);

        $r7 = virtualinvoke $r6.<android.net.Uri: java.lang.String getAuthority()>();

        interfaceinvoke $r2.<android.content.IContentProvider: android.os.Bundle call(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.os.Bundle)>($r3, $r4, $r7, "RESET_secure", null, r0);

     label5:
        goto label7;

     label6:
        $r9 := @caughtexception;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t reset do defaults for ");

        $r12 = <android.provider.Settings$Secure: android.net.Uri CONTENT_URI>;

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r12);

        $r14 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("Settings", $r14, $r9);

     label7:
        return;

        catch android.os.RemoteException from label1 to label2 with label6;
        catch android.os.RemoteException from label3 to label4 with label6;
        catch android.os.RemoteException from label4 to label5 with label6;
    }

    public static void setLocationProviderEnabled(android.content.ContentResolver, java.lang.String, boolean)
    {
        android.content.ContentResolver r0;
        java.lang.String r1;
        boolean z0;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        return;
    }
}
