public final class android.provider.Settings$System extends android.provider.Settings$NameValueTable
{
    public static final java.lang.String ACCELEROMETER_ROTATION;
    public static final java.lang.String ADAPTIVE_SLEEP;
    public static final java.lang.String ADB_ENABLED;
    public static final java.lang.String ADVANCED_SETTINGS;
    public static final int ADVANCED_SETTINGS_DEFAULT;
    public static final java.lang.String AIRPLANE_MODE_ON;
    public static final java.lang.String AIRPLANE_MODE_RADIOS;
    public static final java.lang.String AIRPLANE_MODE_TOGGLEABLE_RADIOS;
    public static final java.lang.String ALARM_ALERT;
    public static final java.lang.String ALARM_ALERT_CACHE;
    public static final android.net.Uri ALARM_ALERT_CACHE_URI;
    public static final java.lang.String ALWAYS_FINISH_ACTIVITIES;
    public static final java.lang.String ANDROID_ID;
    public static final java.lang.String ANIMATOR_DURATION_SCALE;
    public static final java.lang.String APPEND_FOR_LAST_AUDIBLE;
    public static final java.lang.String AUTO_TIME;
    public static final java.lang.String AUTO_TIME_ZONE;
    public static final java.lang.String BLUETOOTH_DISCOVERABILITY;
    public static final java.lang.String BLUETOOTH_DISCOVERABILITY_TIMEOUT;
    public static final java.lang.String BLUETOOTH_ON;
    public static final java.lang.String CAR_DOCK_SOUND;
    public static final java.lang.String CAR_UNDOCK_SOUND;
    public static final java.util.Map CLONE_FROM_PARENT_ON_VALUE;
    private static final java.util.Set CLONE_TO_MANAGED_PROFILE;
    public static final android.net.Uri CONTENT_URI;
    public static final java.lang.String DATA_ROAMING;
    public static final java.lang.String DATE_FORMAT;
    public static final java.lang.String DEBUG_APP;
    public static final java.lang.String DEBUG_ENABLE_ENHANCED_CALL_BLOCKING;
    public static final android.net.Uri DEFAULT_ALARM_ALERT_URI;
    private static final float DEFAULT_FONT_SCALE;
    public static final android.net.Uri DEFAULT_NOTIFICATION_URI;
    public static final android.net.Uri DEFAULT_RINGTONE_URI;
    public static final java.lang.String DESK_DOCK_SOUND;
    public static final java.lang.String DESK_UNDOCK_SOUND;
    public static final java.lang.String DEVICE_PROVISIONED;
    public static final java.lang.String DIM_SCREEN;
    public static final java.lang.String DISPLAY_COLOR_MODE;
    public static final java.lang.String DOCK_SOUNDS_ENABLED;
    public static final java.lang.String DTMF_TONE_TYPE_WHEN_DIALING;
    public static final java.lang.String DTMF_TONE_WHEN_DIALING;
    public static final java.lang.String EGG_MODE;
    public static final java.lang.String END_BUTTON_BEHAVIOR;
    public static final int END_BUTTON_BEHAVIOR_DEFAULT;
    public static final int END_BUTTON_BEHAVIOR_HOME;
    public static final int END_BUTTON_BEHAVIOR_SLEEP;
    public static final java.lang.String FONT_SCALE;
    public static final java.lang.String HAPTIC_FEEDBACK_ENABLED;
    public static final java.lang.String HAPTIC_FEEDBACK_INTENSITY;
    public static final java.lang.String HEARING_AID;
    public static final java.lang.String HIDE_ROTATION_LOCK_TOGGLE_FOR_ACCESSIBILITY;
    public static final java.lang.String HTTP_PROXY;
    public static final java.lang.String INSTALL_NON_MARKET_APPS;
    public static final java.util.Set INSTANT_APP_SETTINGS;
    public static final java.lang.String[] LEGACY_RESTORE_SETTINGS;
    public static final java.lang.String LOCATION_PROVIDERS_ALLOWED;
    public static final java.lang.String LOCKSCREEN_DISABLED;
    public static final java.lang.String LOCKSCREEN_SOUNDS_ENABLED;
    public static final java.lang.String LOCK_PATTERN_ENABLED;
    public static final java.lang.String LOCK_PATTERN_TACTILE_FEEDBACK_ENABLED;
    public static final java.lang.String LOCK_PATTERN_VISIBLE;
    public static final java.lang.String LOCK_SOUND;
    public static final java.lang.String LOCK_TO_APP_ENABLED;
    public static final java.lang.String LOGGING_ID;
    public static final java.lang.String LOW_BATTERY_SOUND;
    public static final java.lang.String MASTER_BALANCE;
    public static final java.lang.String MASTER_MONO;
    public static final java.lang.String MEDIA_BUTTON_RECEIVER;
    public static final java.lang.String MIN_REFRESH_RATE;
    public static final java.lang.String MODE_RINGER;
    public static final java.lang.String MODE_RINGER_STREAMS_AFFECTED;
    private static final java.util.HashSet MOVED_TO_GLOBAL;
    private static final java.util.HashSet MOVED_TO_SECURE;
    private static final java.util.HashSet MOVED_TO_SECURE_THEN_GLOBAL;
    public static final java.lang.String MULTI_AUDIO_FOCUS_ENABLED;
    public static final java.lang.String MUTE_STREAMS_AFFECTED;
    public static final java.lang.String NETWORK_PREFERENCE;
    public static final java.lang.String NEXT_ALARM_FORMATTED;
    public static final java.lang.String NOTIFICATIONS_USE_RING_VOLUME;
    public static final java.lang.String NOTIFICATION_LIGHT_PULSE;
    public static final java.lang.String NOTIFICATION_SOUND;
    public static final java.lang.String NOTIFICATION_SOUND_CACHE;
    public static final android.net.Uri NOTIFICATION_SOUND_CACHE_URI;
    public static final java.lang.String NOTIFICATION_VIBRATION_INTENSITY;
    public static final java.lang.String PARENTAL_CONTROL_ENABLED;
    public static final java.lang.String PARENTAL_CONTROL_LAST_UPDATE;
    public static final java.lang.String PARENTAL_CONTROL_REDIRECT_URL;
    public static final java.lang.String PEAK_REFRESH_RATE;
    public static final java.lang.String POINTER_LOCATION;
    public static final java.lang.String POINTER_SPEED;
    public static final java.lang.String POWER_SOUNDS_ENABLED;
    public static final java.util.Set PRIVATE_SETTINGS;
    public static final java.util.Set PUBLIC_SETTINGS;
    public static final java.lang.String RADIO_BLUETOOTH;
    public static final java.lang.String RADIO_CELL;
    public static final java.lang.String RADIO_NFC;
    public static final java.lang.String RADIO_WIFI;
    public static final java.lang.String RADIO_WIMAX;
    public static final java.lang.String RINGTONE;
    public static final java.lang.String RINGTONE_CACHE;
    public static final android.net.Uri RINGTONE_CACHE_URI;
    public static final java.lang.String RING_VIBRATION_INTENSITY;
    public static final java.lang.String SCREEN_AUTO_BRIGHTNESS_ADJ;
    public static final java.lang.String SCREEN_BRIGHTNESS;
    public static final java.lang.String SCREEN_BRIGHTNESS_FLOAT;
    public static final java.lang.String SCREEN_BRIGHTNESS_FOR_VR;
    public static final java.lang.String SCREEN_BRIGHTNESS_FOR_VR_FLOAT;
    public static final java.lang.String SCREEN_BRIGHTNESS_MODE;
    public static final int SCREEN_BRIGHTNESS_MODE_AUTOMATIC;
    public static final int SCREEN_BRIGHTNESS_MODE_MANUAL;
    public static final java.lang.String SCREEN_OFF_TIMEOUT;
    public static final java.lang.String SETTINGS_CLASSNAME;
    public static final java.lang.String SETUP_WIZARD_HAS_RUN;
    public static final java.lang.String SHOW_BATTERY_PERCENT;
    public static final java.lang.String SHOW_GTALK_SERVICE_STATUS;
    public static final java.lang.String SHOW_PROCESSES;
    public static final java.lang.String SHOW_TOUCHES;
    public static final java.lang.String SHOW_WEB_SUGGESTIONS;
    public static final java.lang.String SIP_ADDRESS_ONLY;
    public static final java.lang.String SIP_ALWAYS;
    public static final java.lang.String SIP_ASK_ME_EACH_TIME;
    public static final java.lang.String SIP_CALL_OPTIONS;
    public static final java.lang.String SIP_RECEIVE_CALLS;
    public static final java.lang.String SOUND_EFFECTS_ENABLED;
    public static final java.lang.String STAY_ON_WHILE_PLUGGED_IN;
    public static final java.lang.String SYSTEM_LOCALES;
    public static final java.lang.String TEXT_AUTO_CAPS;
    public static final java.lang.String TEXT_AUTO_PUNCTUATE;
    public static final java.lang.String TEXT_AUTO_REPLACE;
    public static final java.lang.String TEXT_SHOW_PASSWORD;
    public static final java.lang.String TIME_12_24;
    public static final java.lang.String TRANSITION_ANIMATION_SCALE;
    public static final java.lang.String TTY_MODE;
    public static final java.lang.String UNLOCK_SOUND;
    public static final java.lang.String USB_MASS_STORAGE_ENABLED;
    public static final java.lang.String USER_ROTATION;
    public static final java.lang.String USE_GOOGLE_MAIL;
    public static final java.lang.String VIBRATE_INPUT_DEVICES;
    public static final java.lang.String VIBRATE_IN_SILENT;
    public static final java.lang.String VIBRATE_ON;
    public static final java.lang.String VIBRATE_WHEN_RINGING;
    public static final java.lang.String VOLUME_ACCESSIBILITY;
    public static final java.lang.String VOLUME_ALARM;
    public static final java.lang.String VOLUME_ASSISTANT;
    public static final java.lang.String VOLUME_BLUETOOTH_SCO;
    public static final java.lang.String VOLUME_MASTER;
    public static final java.lang.String VOLUME_MUSIC;
    public static final java.lang.String VOLUME_NOTIFICATION;
    public static final java.lang.String VOLUME_RING;
    public static final java.lang.String[] VOLUME_SETTINGS;
    public static final java.lang.String[] VOLUME_SETTINGS_INT;
    public static final java.lang.String VOLUME_SYSTEM;
    public static final java.lang.String VOLUME_VOICE;
    public static final java.lang.String WAIT_FOR_DEBUGGER;
    public static final java.lang.String WALLPAPER_ACTIVITY;
    public static final java.lang.String WHEN_TO_MAKE_WIFI_CALLS;
    public static final java.lang.String WIFI_MAX_DHCP_RETRY_COUNT;
    public static final java.lang.String WIFI_MOBILE_DATA_TRANSITION_WAKELOCK_TIMEOUT_MS;
    public static final java.lang.String WIFI_NETWORKS_AVAILABLE_NOTIFICATION_ON;
    public static final java.lang.String WIFI_NETWORKS_AVAILABLE_REPEAT_DELAY;
    public static final java.lang.String WIFI_NUM_OPEN_NETWORKS_KEPT;
    public static final java.lang.String WIFI_ON;
    public static final java.lang.String WIFI_SLEEP_POLICY;
    public static final int WIFI_SLEEP_POLICY_DEFAULT;
    public static final int WIFI_SLEEP_POLICY_NEVER;
    public static final int WIFI_SLEEP_POLICY_NEVER_WHILE_PLUGGED;
    public static final java.lang.String WIFI_STATIC_DNS1;
    public static final java.lang.String WIFI_STATIC_DNS2;
    public static final java.lang.String WIFI_STATIC_GATEWAY;
    public static final java.lang.String WIFI_STATIC_IP;
    public static final java.lang.String WIFI_STATIC_NETMASK;
    public static final java.lang.String WIFI_USE_STATIC_IP;
    public static final java.lang.String WIFI_WATCHDOG_ACCEPTABLE_PACKET_LOSS_PERCENTAGE;
    public static final java.lang.String WIFI_WATCHDOG_AP_COUNT;
    public static final java.lang.String WIFI_WATCHDOG_BACKGROUND_CHECK_DELAY_MS;
    public static final java.lang.String WIFI_WATCHDOG_BACKGROUND_CHECK_ENABLED;
    public static final java.lang.String WIFI_WATCHDOG_BACKGROUND_CHECK_TIMEOUT_MS;
    public static final java.lang.String WIFI_WATCHDOG_INITIAL_IGNORED_PING_COUNT;
    public static final java.lang.String WIFI_WATCHDOG_MAX_AP_CHECKS;
    public static final java.lang.String WIFI_WATCHDOG_ON;
    public static final java.lang.String WIFI_WATCHDOG_PING_COUNT;
    public static final java.lang.String WIFI_WATCHDOG_PING_DELAY_MS;
    public static final java.lang.String WIFI_WATCHDOG_PING_TIMEOUT_MS;
    public static final java.lang.String WINDOW_ANIMATION_SCALE;
    public static final java.lang.String WINDOW_ORIENTATION_LISTENER_LOG;
    private static final android.provider.Settings$NameValueCache sNameValueCache;
    private static final android.provider.Settings$ContentProviderHolder sProviderHolder;

    static void <clinit>()
    {
        android.provider.Settings$ContentProviderHolder $r0, $r2;
        android.provider.Settings$NameValueCache $r1;
        android.net.Uri $r3, $r78, $r79, $r80, $r81, $r82, $r83, r195;
        java.util.HashSet $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r38, $r39, $r40, $r41, $r42, $r43, $r44, $r45, $r46, $r47, $r48, $r49, $r50, $r51, $r52, $r53, $r54, $r55, $r56, $r57, $r58, $r59, $r60, $r61, $r62, $r63, $r64, $r65, $r66, $r67, $r68, $r69, $r70, $r71, $r72, $r73, $r74, $r75;
        java.lang.String[] $r76, $r77, $r84;
        android.util.ArraySet $r85, $r134, $r174, $r185;
        java.util.Set $r86, $r87, $r88, $r89, $r90, $r91, $r92, $r93, $r94, $r95, $r96, $r97, $r98, $r99, $r100, $r101, $r102, $r103, $r104, $r105, $r106, $r107, $r108, $r109, $r110, $r111, $r112, $r113, $r114, $r115, $r116, $r117, $r118, $r119, $r120, $r121, $r122, $r123, $r124, $r125, $r126, $r127, $r128, $r129, $r130, $r131, $r132, $r133, $r135, $r136, $r137, $r138, $r139, $r140, $r141, $r142, $r143, $r144, $r145, $r146, $r147, $r148, $r149, $r150, $r151, $r152, $r153, $r154, $r155, $r156, $r157, $r158, $r159, $r160, $r161, $r162, $r163, $r164, $r165, $r166, $r167, $r168, $r169, $r170, $r171, $r172, $r173, $r175, $r176, $r177, $r178, $r186, $r187, $r188, $r189, $r190, $r191, $r192, $r193, $r194;
        android.util.ArrayMap $r179;
        java.util.Map $r181, $r183;

        <android.provider.Settings$System: java.lang.String WINDOW_ORIENTATION_LISTENER_LOG> = "window_orientation_listener_log";

        <android.provider.Settings$System: java.lang.String WINDOW_ANIMATION_SCALE> = "window_animation_scale";

        <android.provider.Settings$System: java.lang.String WIFI_WATCHDOG_PING_TIMEOUT_MS> = "wifi_watchdog_ping_timeout_ms";

        <android.provider.Settings$System: java.lang.String WIFI_WATCHDOG_PING_DELAY_MS> = "wifi_watchdog_ping_delay_ms";

        <android.provider.Settings$System: java.lang.String WIFI_WATCHDOG_PING_COUNT> = "wifi_watchdog_ping_count";

        <android.provider.Settings$System: java.lang.String WIFI_WATCHDOG_ON> = "wifi_watchdog_on";

        <android.provider.Settings$System: java.lang.String WIFI_WATCHDOG_MAX_AP_CHECKS> = "wifi_watchdog_max_ap_checks";

        <android.provider.Settings$System: java.lang.String WIFI_WATCHDOG_INITIAL_IGNORED_PING_COUNT> = "wifi_watchdog_initial_ignored_ping_count";

        <android.provider.Settings$System: java.lang.String WIFI_WATCHDOG_BACKGROUND_CHECK_TIMEOUT_MS> = "wifi_watchdog_background_check_timeout_ms";

        <android.provider.Settings$System: java.lang.String WIFI_WATCHDOG_BACKGROUND_CHECK_ENABLED> = "wifi_watchdog_background_check_enabled";

        <android.provider.Settings$System: java.lang.String WIFI_WATCHDOG_BACKGROUND_CHECK_DELAY_MS> = "wifi_watchdog_background_check_delay_ms";

        <android.provider.Settings$System: java.lang.String WIFI_WATCHDOG_AP_COUNT> = "wifi_watchdog_ap_count";

        <android.provider.Settings$System: java.lang.String WIFI_WATCHDOG_ACCEPTABLE_PACKET_LOSS_PERCENTAGE> = "wifi_watchdog_acceptable_packet_loss_percentage";

        <android.provider.Settings$System: java.lang.String WIFI_USE_STATIC_IP> = "wifi_use_static_ip";

        <android.provider.Settings$System: java.lang.String WIFI_STATIC_NETMASK> = "wifi_static_netmask";

        <android.provider.Settings$System: java.lang.String WIFI_STATIC_IP> = "wifi_static_ip";

        <android.provider.Settings$System: java.lang.String WIFI_STATIC_GATEWAY> = "wifi_static_gateway";

        <android.provider.Settings$System: java.lang.String WIFI_STATIC_DNS2> = "wifi_static_dns2";

        <android.provider.Settings$System: java.lang.String WIFI_STATIC_DNS1> = "wifi_static_dns1";

        <android.provider.Settings$System: int WIFI_SLEEP_POLICY_NEVER_WHILE_PLUGGED> = 1;

        <android.provider.Settings$System: int WIFI_SLEEP_POLICY_NEVER> = 2;

        <android.provider.Settings$System: int WIFI_SLEEP_POLICY_DEFAULT> = 0;

        <android.provider.Settings$System: java.lang.String WIFI_SLEEP_POLICY> = "wifi_sleep_policy";

        <android.provider.Settings$System: java.lang.String WIFI_ON> = "wifi_on";

        <android.provider.Settings$System: java.lang.String WIFI_NUM_OPEN_NETWORKS_KEPT> = "wifi_num_open_networks_kept";

        <android.provider.Settings$System: java.lang.String WIFI_NETWORKS_AVAILABLE_REPEAT_DELAY> = "wifi_networks_available_repeat_delay";

        <android.provider.Settings$System: java.lang.String WIFI_NETWORKS_AVAILABLE_NOTIFICATION_ON> = "wifi_networks_available_notification_on";

        <android.provider.Settings$System: java.lang.String WIFI_MOBILE_DATA_TRANSITION_WAKELOCK_TIMEOUT_MS> = "wifi_mobile_data_transition_wakelock_timeout_ms";

        <android.provider.Settings$System: java.lang.String WIFI_MAX_DHCP_RETRY_COUNT> = "wifi_max_dhcp_retry_count";

        <android.provider.Settings$System: java.lang.String WHEN_TO_MAKE_WIFI_CALLS> = "when_to_make_wifi_calls";

        <android.provider.Settings$System: java.lang.String WALLPAPER_ACTIVITY> = "wallpaper_activity";

        <android.provider.Settings$System: java.lang.String WAIT_FOR_DEBUGGER> = "wait_for_debugger";

        <android.provider.Settings$System: java.lang.String VOLUME_VOICE> = "volume_voice";

        <android.provider.Settings$System: java.lang.String VOLUME_SYSTEM> = "volume_system";

        <android.provider.Settings$System: java.lang.String VOLUME_RING> = "volume_ring";

        <android.provider.Settings$System: java.lang.String VOLUME_NOTIFICATION> = "volume_notification";

        <android.provider.Settings$System: java.lang.String VOLUME_MUSIC> = "volume_music";

        <android.provider.Settings$System: java.lang.String VOLUME_MASTER> = "volume_master";

        <android.provider.Settings$System: java.lang.String VOLUME_BLUETOOTH_SCO> = "volume_bluetooth_sco";

        <android.provider.Settings$System: java.lang.String VOLUME_ASSISTANT> = "volume_assistant";

        <android.provider.Settings$System: java.lang.String VOLUME_ALARM> = "volume_alarm";

        <android.provider.Settings$System: java.lang.String VOLUME_ACCESSIBILITY> = "volume_a11y";

        <android.provider.Settings$System: java.lang.String VIBRATE_WHEN_RINGING> = "vibrate_when_ringing";

        <android.provider.Settings$System: java.lang.String VIBRATE_ON> = "vibrate_on";

        <android.provider.Settings$System: java.lang.String VIBRATE_IN_SILENT> = "vibrate_in_silent";

        <android.provider.Settings$System: java.lang.String VIBRATE_INPUT_DEVICES> = "vibrate_input_devices";

        <android.provider.Settings$System: java.lang.String USE_GOOGLE_MAIL> = "use_google_mail";

        <android.provider.Settings$System: java.lang.String USER_ROTATION> = "user_rotation";

        <android.provider.Settings$System: java.lang.String USB_MASS_STORAGE_ENABLED> = "usb_mass_storage_enabled";

        <android.provider.Settings$System: java.lang.String UNLOCK_SOUND> = "unlock_sound";

        <android.provider.Settings$System: java.lang.String TTY_MODE> = "tty_mode";

        <android.provider.Settings$System: java.lang.String TRANSITION_ANIMATION_SCALE> = "transition_animation_scale";

        <android.provider.Settings$System: java.lang.String TIME_12_24> = "time_12_24";

        <android.provider.Settings$System: java.lang.String TEXT_SHOW_PASSWORD> = "show_password";

        <android.provider.Settings$System: java.lang.String TEXT_AUTO_REPLACE> = "auto_replace";

        <android.provider.Settings$System: java.lang.String TEXT_AUTO_PUNCTUATE> = "auto_punctuate";

        <android.provider.Settings$System: java.lang.String TEXT_AUTO_CAPS> = "auto_caps";

        <android.provider.Settings$System: java.lang.String SYSTEM_LOCALES> = "system_locales";

        <android.provider.Settings$System: java.lang.String STAY_ON_WHILE_PLUGGED_IN> = "stay_on_while_plugged_in";

        <android.provider.Settings$System: java.lang.String SOUND_EFFECTS_ENABLED> = "sound_effects_enabled";

        <android.provider.Settings$System: java.lang.String SIP_RECEIVE_CALLS> = "sip_receive_calls";

        <android.provider.Settings$System: java.lang.String SIP_CALL_OPTIONS> = "sip_call_options";

        <android.provider.Settings$System: java.lang.String SIP_ASK_ME_EACH_TIME> = "SIP_ASK_ME_EACH_TIME";

        <android.provider.Settings$System: java.lang.String SIP_ALWAYS> = "SIP_ALWAYS";

        <android.provider.Settings$System: java.lang.String SIP_ADDRESS_ONLY> = "SIP_ADDRESS_ONLY";

        <android.provider.Settings$System: java.lang.String SHOW_WEB_SUGGESTIONS> = "show_web_suggestions";

        <android.provider.Settings$System: java.lang.String SHOW_TOUCHES> = "show_touches";

        <android.provider.Settings$System: java.lang.String SHOW_PROCESSES> = "show_processes";

        <android.provider.Settings$System: java.lang.String SHOW_GTALK_SERVICE_STATUS> = "SHOW_GTALK_SERVICE_STATUS";

        <android.provider.Settings$System: java.lang.String SHOW_BATTERY_PERCENT> = "status_bar_show_battery_percent";

        <android.provider.Settings$System: java.lang.String SETUP_WIZARD_HAS_RUN> = "setup_wizard_has_run";

        <android.provider.Settings$System: java.lang.String SETTINGS_CLASSNAME> = "settings_classname";

        <android.provider.Settings$System: java.lang.String SCREEN_OFF_TIMEOUT> = "screen_off_timeout";

        <android.provider.Settings$System: int SCREEN_BRIGHTNESS_MODE_MANUAL> = 0;

        <android.provider.Settings$System: int SCREEN_BRIGHTNESS_MODE_AUTOMATIC> = 1;

        <android.provider.Settings$System: java.lang.String SCREEN_BRIGHTNESS_MODE> = "screen_brightness_mode";

        <android.provider.Settings$System: java.lang.String SCREEN_BRIGHTNESS_FOR_VR_FLOAT> = "screen_brightness_for_vr_float";

        <android.provider.Settings$System: java.lang.String SCREEN_BRIGHTNESS_FOR_VR> = "screen_brightness_for_vr";

        <android.provider.Settings$System: java.lang.String SCREEN_BRIGHTNESS_FLOAT> = "screen_brightness_float";

        <android.provider.Settings$System: java.lang.String SCREEN_BRIGHTNESS> = "screen_brightness";

        <android.provider.Settings$System: java.lang.String SCREEN_AUTO_BRIGHTNESS_ADJ> = "screen_auto_brightness_adj";

        <android.provider.Settings$System: java.lang.String RING_VIBRATION_INTENSITY> = "ring_vibration_intensity";

        <android.provider.Settings$System: java.lang.String RINGTONE_CACHE> = "ringtone_cache";

        <android.provider.Settings$System: java.lang.String RINGTONE> = "ringtone";

        <android.provider.Settings$System: java.lang.String RADIO_WIMAX> = "wimax";

        <android.provider.Settings$System: java.lang.String RADIO_WIFI> = "wifi";

        <android.provider.Settings$System: java.lang.String RADIO_NFC> = "nfc";

        <android.provider.Settings$System: java.lang.String RADIO_CELL> = "cell";

        <android.provider.Settings$System: java.lang.String RADIO_BLUETOOTH> = "bluetooth";

        <android.provider.Settings$System: java.lang.String POWER_SOUNDS_ENABLED> = "power_sounds_enabled";

        <android.provider.Settings$System: java.lang.String POINTER_SPEED> = "pointer_speed";

        <android.provider.Settings$System: java.lang.String POINTER_LOCATION> = "pointer_location";

        <android.provider.Settings$System: java.lang.String PEAK_REFRESH_RATE> = "peak_refresh_rate";

        <android.provider.Settings$System: java.lang.String PARENTAL_CONTROL_REDIRECT_URL> = "parental_control_redirect_url";

        <android.provider.Settings$System: java.lang.String PARENTAL_CONTROL_LAST_UPDATE> = "parental_control_last_update";

        <android.provider.Settings$System: java.lang.String PARENTAL_CONTROL_ENABLED> = "parental_control_enabled";

        <android.provider.Settings$System: java.lang.String NOTIFICATION_VIBRATION_INTENSITY> = "notification_vibration_intensity";

        <android.provider.Settings$System: java.lang.String NOTIFICATION_SOUND_CACHE> = "notification_sound_cache";

        <android.provider.Settings$System: java.lang.String NOTIFICATION_SOUND> = "notification_sound";

        <android.provider.Settings$System: java.lang.String NOTIFICATION_LIGHT_PULSE> = "notification_light_pulse";

        <android.provider.Settings$System: java.lang.String NOTIFICATIONS_USE_RING_VOLUME> = "notifications_use_ring_volume";

        <android.provider.Settings$System: java.lang.String NEXT_ALARM_FORMATTED> = "next_alarm_formatted";

        <android.provider.Settings$System: java.lang.String NETWORK_PREFERENCE> = "network_preference";

        <android.provider.Settings$System: java.lang.String MUTE_STREAMS_AFFECTED> = "mute_streams_affected";

        <android.provider.Settings$System: java.lang.String MULTI_AUDIO_FOCUS_ENABLED> = "multi_audio_focus_enabled";

        <android.provider.Settings$System: java.lang.String MODE_RINGER_STREAMS_AFFECTED> = "mode_ringer_streams_affected";

        <android.provider.Settings$System: java.lang.String MODE_RINGER> = "mode_ringer";

        <android.provider.Settings$System: java.lang.String MIN_REFRESH_RATE> = "min_refresh_rate";

        <android.provider.Settings$System: java.lang.String MEDIA_BUTTON_RECEIVER> = "media_button_receiver";

        <android.provider.Settings$System: java.lang.String MASTER_MONO> = "master_mono";

        <android.provider.Settings$System: java.lang.String MASTER_BALANCE> = "master_balance";

        <android.provider.Settings$System: java.lang.String LOW_BATTERY_SOUND> = "low_battery_sound";

        <android.provider.Settings$System: java.lang.String LOGGING_ID> = "logging_id";

        <android.provider.Settings$System: java.lang.String LOCK_TO_APP_ENABLED> = "lock_to_app_enabled";

        <android.provider.Settings$System: java.lang.String LOCK_SOUND> = "lock_sound";

        <android.provider.Settings$System: java.lang.String LOCK_PATTERN_VISIBLE> = "lock_pattern_visible_pattern";

        <android.provider.Settings$System: java.lang.String LOCK_PATTERN_TACTILE_FEEDBACK_ENABLED> = "lock_pattern_tactile_feedback_enabled";

        <android.provider.Settings$System: java.lang.String LOCK_PATTERN_ENABLED> = "lock_pattern_autolock";

        <android.provider.Settings$System: java.lang.String LOCKSCREEN_SOUNDS_ENABLED> = "lockscreen_sounds_enabled";

        <android.provider.Settings$System: java.lang.String LOCKSCREEN_DISABLED> = "lockscreen.disabled";

        <android.provider.Settings$System: java.lang.String LOCATION_PROVIDERS_ALLOWED> = "location_providers_allowed";

        <android.provider.Settings$System: java.lang.String INSTALL_NON_MARKET_APPS> = "install_non_market_apps";

        <android.provider.Settings$System: java.lang.String HTTP_PROXY> = "http_proxy";

        <android.provider.Settings$System: java.lang.String HIDE_ROTATION_LOCK_TOGGLE_FOR_ACCESSIBILITY> = "hide_rotation_lock_toggle_for_accessibility";

        <android.provider.Settings$System: java.lang.String HEARING_AID> = "hearing_aid";

        <android.provider.Settings$System: java.lang.String HAPTIC_FEEDBACK_INTENSITY> = "haptic_feedback_intensity";

        <android.provider.Settings$System: java.lang.String HAPTIC_FEEDBACK_ENABLED> = "haptic_feedback_enabled";

        <android.provider.Settings$System: java.lang.String FONT_SCALE> = "font_scale";

        <android.provider.Settings$System: int END_BUTTON_BEHAVIOR_SLEEP> = 2;

        <android.provider.Settings$System: int END_BUTTON_BEHAVIOR_HOME> = 1;

        <android.provider.Settings$System: int END_BUTTON_BEHAVIOR_DEFAULT> = 2;

        <android.provider.Settings$System: java.lang.String END_BUTTON_BEHAVIOR> = "end_button_behavior";

        <android.provider.Settings$System: java.lang.String EGG_MODE> = "egg_mode";

        <android.provider.Settings$System: java.lang.String DTMF_TONE_WHEN_DIALING> = "dtmf_tone";

        <android.provider.Settings$System: java.lang.String DTMF_TONE_TYPE_WHEN_DIALING> = "dtmf_tone_type";

        <android.provider.Settings$System: java.lang.String DOCK_SOUNDS_ENABLED> = "dock_sounds_enabled";

        <android.provider.Settings$System: java.lang.String DISPLAY_COLOR_MODE> = "display_color_mode";

        <android.provider.Settings$System: java.lang.String DIM_SCREEN> = "dim_screen";

        <android.provider.Settings$System: java.lang.String DEVICE_PROVISIONED> = "device_provisioned";

        <android.provider.Settings$System: java.lang.String DESK_UNDOCK_SOUND> = "desk_undock_sound";

        <android.provider.Settings$System: java.lang.String DESK_DOCK_SOUND> = "desk_dock_sound";

        <android.provider.Settings$System: float DEFAULT_FONT_SCALE> = 1.0F;

        <android.provider.Settings$System: java.lang.String DEBUG_ENABLE_ENHANCED_CALL_BLOCKING> = "debug.enable_enhanced_calling";

        <android.provider.Settings$System: java.lang.String DEBUG_APP> = "debug_app";

        <android.provider.Settings$System: java.lang.String DATE_FORMAT> = "date_format";

        <android.provider.Settings$System: java.lang.String DATA_ROAMING> = "data_roaming";

        <android.provider.Settings$System: java.lang.String CAR_UNDOCK_SOUND> = "car_undock_sound";

        <android.provider.Settings$System: java.lang.String CAR_DOCK_SOUND> = "car_dock_sound";

        <android.provider.Settings$System: java.lang.String BLUETOOTH_ON> = "bluetooth_on";

        <android.provider.Settings$System: java.lang.String BLUETOOTH_DISCOVERABILITY_TIMEOUT> = "bluetooth_discoverability_timeout";

        <android.provider.Settings$System: java.lang.String BLUETOOTH_DISCOVERABILITY> = "bluetooth_discoverability";

        <android.provider.Settings$System: java.lang.String AUTO_TIME_ZONE> = "auto_time_zone";

        <android.provider.Settings$System: java.lang.String AUTO_TIME> = "auto_time";

        <android.provider.Settings$System: java.lang.String APPEND_FOR_LAST_AUDIBLE> = "_last_audible";

        <android.provider.Settings$System: java.lang.String ANIMATOR_DURATION_SCALE> = "animator_duration_scale";

        <android.provider.Settings$System: java.lang.String ANDROID_ID> = "android_id";

        <android.provider.Settings$System: java.lang.String ALWAYS_FINISH_ACTIVITIES> = "always_finish_activities";

        <android.provider.Settings$System: java.lang.String ALARM_ALERT_CACHE> = "alarm_alert_cache";

        <android.provider.Settings$System: java.lang.String ALARM_ALERT> = "alarm_alert";

        <android.provider.Settings$System: java.lang.String AIRPLANE_MODE_TOGGLEABLE_RADIOS> = "airplane_mode_toggleable_radios";

        <android.provider.Settings$System: java.lang.String AIRPLANE_MODE_RADIOS> = "airplane_mode_radios";

        <android.provider.Settings$System: java.lang.String AIRPLANE_MODE_ON> = "airplane_mode_on";

        <android.provider.Settings$System: int ADVANCED_SETTINGS_DEFAULT> = 0;

        <android.provider.Settings$System: java.lang.String ADVANCED_SETTINGS> = "advanced_settings";

        <android.provider.Settings$System: java.lang.String ADB_ENABLED> = "adb_enabled";

        <android.provider.Settings$System: java.lang.String ADAPTIVE_SLEEP> = "adaptive_sleep";

        <android.provider.Settings$System: java.lang.String ACCELEROMETER_ROTATION> = "accelerometer_rotation";

        r195 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>("content://settings/system");

        <android.provider.Settings$System: android.net.Uri CONTENT_URI> = r195;

        $r0 = new android.provider.Settings$ContentProviderHolder;

        specialinvoke $r0.<android.provider.Settings$ContentProviderHolder: void <init>(android.net.Uri)>(r195);

        <android.provider.Settings$System: android.provider.Settings$ContentProviderHolder sProviderHolder> = $r0;

        $r1 = new android.provider.Settings$NameValueCache;

        $r3 = <android.provider.Settings$System: android.net.Uri CONTENT_URI>;

        $r2 = <android.provider.Settings$System: android.provider.Settings$ContentProviderHolder sProviderHolder>;

        specialinvoke $r1.<android.provider.Settings$NameValueCache: void <init>(android.net.Uri,java.lang.String,java.lang.String,android.provider.Settings$ContentProviderHolder)>($r3, "GET_system", "PUT_system", $r2);

        <android.provider.Settings$System: android.provider.Settings$NameValueCache sNameValueCache> = $r1;

        $r4 = new java.util.HashSet;

        specialinvoke $r4.<java.util.HashSet: void <init>(int)>(30);

        <android.provider.Settings$System: java.util.HashSet MOVED_TO_SECURE> = $r4;

        virtualinvoke $r4.<java.util.HashSet: boolean add(java.lang.Object)>("adaptive_sleep");

        $r5 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_SECURE>;

        virtualinvoke $r5.<java.util.HashSet: boolean add(java.lang.Object)>("android_id");

        $r6 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_SECURE>;

        virtualinvoke $r6.<java.util.HashSet: boolean add(java.lang.Object)>("http_proxy");

        $r7 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_SECURE>;

        virtualinvoke $r7.<java.util.HashSet: boolean add(java.lang.Object)>("location_providers_allowed");

        $r8 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_SECURE>;

        virtualinvoke $r8.<java.util.HashSet: boolean add(java.lang.Object)>("lock_biometric_weak_flags");

        $r9 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_SECURE>;

        virtualinvoke $r9.<java.util.HashSet: boolean add(java.lang.Object)>("lock_pattern_autolock");

        $r10 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_SECURE>;

        virtualinvoke $r10.<java.util.HashSet: boolean add(java.lang.Object)>("lock_pattern_visible_pattern");

        $r11 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_SECURE>;

        virtualinvoke $r11.<java.util.HashSet: boolean add(java.lang.Object)>("lock_pattern_tactile_feedback_enabled");

        $r12 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_SECURE>;

        virtualinvoke $r12.<java.util.HashSet: boolean add(java.lang.Object)>("logging_id");

        $r13 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_SECURE>;

        virtualinvoke $r13.<java.util.HashSet: boolean add(java.lang.Object)>("parental_control_enabled");

        $r14 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_SECURE>;

        virtualinvoke $r14.<java.util.HashSet: boolean add(java.lang.Object)>("parental_control_last_update");

        $r15 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_SECURE>;

        virtualinvoke $r15.<java.util.HashSet: boolean add(java.lang.Object)>("parental_control_redirect_url");

        $r16 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_SECURE>;

        virtualinvoke $r16.<java.util.HashSet: boolean add(java.lang.Object)>("settings_classname");

        $r17 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_SECURE>;

        virtualinvoke $r17.<java.util.HashSet: boolean add(java.lang.Object)>("use_google_mail");

        $r18 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_SECURE>;

        virtualinvoke $r18.<java.util.HashSet: boolean add(java.lang.Object)>("wifi_networks_available_notification_on");

        $r19 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_SECURE>;

        virtualinvoke $r19.<java.util.HashSet: boolean add(java.lang.Object)>("wifi_networks_available_repeat_delay");

        $r20 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_SECURE>;

        virtualinvoke $r20.<java.util.HashSet: boolean add(java.lang.Object)>("wifi_num_open_networks_kept");

        $r21 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_SECURE>;

        virtualinvoke $r21.<java.util.HashSet: boolean add(java.lang.Object)>("wifi_on");

        $r22 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_SECURE>;

        virtualinvoke $r22.<java.util.HashSet: boolean add(java.lang.Object)>("wifi_watchdog_acceptable_packet_loss_percentage");

        $r23 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_SECURE>;

        virtualinvoke $r23.<java.util.HashSet: boolean add(java.lang.Object)>("wifi_watchdog_ap_count");

        $r24 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_SECURE>;

        virtualinvoke $r24.<java.util.HashSet: boolean add(java.lang.Object)>("wifi_watchdog_background_check_delay_ms");

        $r25 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_SECURE>;

        virtualinvoke $r25.<java.util.HashSet: boolean add(java.lang.Object)>("wifi_watchdog_background_check_enabled");

        $r26 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_SECURE>;

        virtualinvoke $r26.<java.util.HashSet: boolean add(java.lang.Object)>("wifi_watchdog_background_check_timeout_ms");

        $r27 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_SECURE>;

        virtualinvoke $r27.<java.util.HashSet: boolean add(java.lang.Object)>("wifi_watchdog_initial_ignored_ping_count");

        $r28 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_SECURE>;

        virtualinvoke $r28.<java.util.HashSet: boolean add(java.lang.Object)>("wifi_watchdog_max_ap_checks");

        $r29 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_SECURE>;

        virtualinvoke $r29.<java.util.HashSet: boolean add(java.lang.Object)>("wifi_watchdog_on");

        $r30 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_SECURE>;

        virtualinvoke $r30.<java.util.HashSet: boolean add(java.lang.Object)>("wifi_watchdog_ping_count");

        $r31 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_SECURE>;

        virtualinvoke $r31.<java.util.HashSet: boolean add(java.lang.Object)>("wifi_watchdog_ping_delay_ms");

        $r32 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_SECURE>;

        virtualinvoke $r32.<java.util.HashSet: boolean add(java.lang.Object)>("wifi_watchdog_ping_timeout_ms");

        $r33 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_SECURE>;

        virtualinvoke $r33.<java.util.HashSet: boolean add(java.lang.Object)>("install_non_market_apps");

        $r34 = new java.util.HashSet;

        specialinvoke $r34.<java.util.HashSet: void <init>()>();

        <android.provider.Settings$System: java.util.HashSet MOVED_TO_GLOBAL> = $r34;

        $r35 = new java.util.HashSet;

        specialinvoke $r35.<java.util.HashSet: void <init>()>();

        <android.provider.Settings$System: java.util.HashSet MOVED_TO_SECURE_THEN_GLOBAL> = $r35;

        virtualinvoke $r35.<java.util.HashSet: boolean add(java.lang.Object)>("adb_enabled");

        $r36 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_SECURE_THEN_GLOBAL>;

        virtualinvoke $r36.<java.util.HashSet: boolean add(java.lang.Object)>("bluetooth_on");

        $r37 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_SECURE_THEN_GLOBAL>;

        virtualinvoke $r37.<java.util.HashSet: boolean add(java.lang.Object)>("data_roaming");

        $r38 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_SECURE_THEN_GLOBAL>;

        virtualinvoke $r38.<java.util.HashSet: boolean add(java.lang.Object)>("device_provisioned");

        $r39 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_SECURE_THEN_GLOBAL>;

        virtualinvoke $r39.<java.util.HashSet: boolean add(java.lang.Object)>("usb_mass_storage_enabled");

        $r40 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_SECURE_THEN_GLOBAL>;

        virtualinvoke $r40.<java.util.HashSet: boolean add(java.lang.Object)>("http_proxy");

        $r41 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r41.<java.util.HashSet: boolean add(java.lang.Object)>("airplane_mode_on");

        $r42 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r42.<java.util.HashSet: boolean add(java.lang.Object)>("airplane_mode_radios");

        $r43 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r43.<java.util.HashSet: boolean add(java.lang.Object)>("airplane_mode_toggleable_radios");

        $r44 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r44.<java.util.HashSet: boolean add(java.lang.Object)>("auto_time");

        $r45 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r45.<java.util.HashSet: boolean add(java.lang.Object)>("auto_time_zone");

        $r46 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r46.<java.util.HashSet: boolean add(java.lang.Object)>("car_dock_sound");

        $r47 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r47.<java.util.HashSet: boolean add(java.lang.Object)>("car_undock_sound");

        $r48 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r48.<java.util.HashSet: boolean add(java.lang.Object)>("desk_dock_sound");

        $r49 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r49.<java.util.HashSet: boolean add(java.lang.Object)>("desk_undock_sound");

        $r50 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r50.<java.util.HashSet: boolean add(java.lang.Object)>("dock_sounds_enabled");

        $r51 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r51.<java.util.HashSet: boolean add(java.lang.Object)>("lock_sound");

        $r52 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r52.<java.util.HashSet: boolean add(java.lang.Object)>("unlock_sound");

        $r53 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r53.<java.util.HashSet: boolean add(java.lang.Object)>("low_battery_sound");

        $r54 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r54.<java.util.HashSet: boolean add(java.lang.Object)>("power_sounds_enabled");

        $r55 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r55.<java.util.HashSet: boolean add(java.lang.Object)>("stay_on_while_plugged_in");

        $r56 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r56.<java.util.HashSet: boolean add(java.lang.Object)>("wifi_sleep_policy");

        $r57 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r57.<java.util.HashSet: boolean add(java.lang.Object)>("mode_ringer");

        $r58 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r58.<java.util.HashSet: boolean add(java.lang.Object)>("window_animation_scale");

        $r59 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r59.<java.util.HashSet: boolean add(java.lang.Object)>("transition_animation_scale");

        $r60 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r60.<java.util.HashSet: boolean add(java.lang.Object)>("animator_duration_scale");

        $r61 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r61.<java.util.HashSet: boolean add(java.lang.Object)>("fancy_ime_animations");

        $r62 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r62.<java.util.HashSet: boolean add(java.lang.Object)>("compatibility_mode");

        $r63 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r63.<java.util.HashSet: boolean add(java.lang.Object)>("emergency_tone");

        $r64 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r64.<java.util.HashSet: boolean add(java.lang.Object)>("call_auto_retry");

        $r65 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r65.<java.util.HashSet: boolean add(java.lang.Object)>("debug_app");

        $r66 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r66.<java.util.HashSet: boolean add(java.lang.Object)>("wait_for_debugger");

        $r67 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r67.<java.util.HashSet: boolean add(java.lang.Object)>("always_finish_activities");

        $r68 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r68.<java.util.HashSet: boolean add(java.lang.Object)>("tzinfo_content_url");

        $r69 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r69.<java.util.HashSet: boolean add(java.lang.Object)>("tzinfo_metadata_url");

        $r70 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r70.<java.util.HashSet: boolean add(java.lang.Object)>("selinux_content_url");

        $r71 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r71.<java.util.HashSet: boolean add(java.lang.Object)>("selinux_metadata_url");

        $r72 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r72.<java.util.HashSet: boolean add(java.lang.Object)>("sms_short_codes_content_url");

        $r73 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r73.<java.util.HashSet: boolean add(java.lang.Object)>("sms_short_codes_metadata_url");

        $r74 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r74.<java.util.HashSet: boolean add(java.lang.Object)>("cert_pin_content_url");

        $r75 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r75.<java.util.HashSet: boolean add(java.lang.Object)>("cert_pin_metadata_url");

        $r76 = newarray (java.lang.String)[7];

        $r76[0] = "volume_voice";

        $r76[1] = "volume_system";

        $r76[2] = "volume_ring";

        $r76[3] = "volume_music";

        $r76[4] = "volume_alarm";

        $r76[5] = "volume_notification";

        $r76[6] = "volume_bluetooth_sco";

        <android.provider.Settings$System: java.lang.String[] VOLUME_SETTINGS> = $r76;

        $r77 = newarray (java.lang.String)[12];

        $r77[0] = "volume_voice";

        $r77[1] = "volume_system";

        $r77[2] = "volume_ring";

        $r77[3] = "volume_music";

        $r77[4] = "volume_alarm";

        $r77[5] = "volume_notification";

        $r77[6] = "volume_bluetooth_sco";

        $r77[7] = "";

        $r77[8] = "";

        $r77[9] = "";

        $r77[10] = "volume_a11y";

        $r77[11] = "volume_assistant";

        <android.provider.Settings$System: java.lang.String[] VOLUME_SETTINGS_INT> = $r77;

        $r78 = staticinvoke <android.provider.Settings$System: android.net.Uri getUriFor(java.lang.String)>("ringtone");

        <android.provider.Settings$System: android.net.Uri DEFAULT_RINGTONE_URI> = $r78;

        $r79 = staticinvoke <android.provider.Settings$System: android.net.Uri getUriFor(java.lang.String)>("ringtone_cache");

        <android.provider.Settings$System: android.net.Uri RINGTONE_CACHE_URI> = $r79;

        $r80 = staticinvoke <android.provider.Settings$System: android.net.Uri getUriFor(java.lang.String)>("notification_sound");

        <android.provider.Settings$System: android.net.Uri DEFAULT_NOTIFICATION_URI> = $r80;

        $r81 = staticinvoke <android.provider.Settings$System: android.net.Uri getUriFor(java.lang.String)>("notification_sound_cache");

        <android.provider.Settings$System: android.net.Uri NOTIFICATION_SOUND_CACHE_URI> = $r81;

        $r82 = staticinvoke <android.provider.Settings$System: android.net.Uri getUriFor(java.lang.String)>("alarm_alert");

        <android.provider.Settings$System: android.net.Uri DEFAULT_ALARM_ALERT_URI> = $r82;

        $r83 = staticinvoke <android.provider.Settings$System: android.net.Uri getUriFor(java.lang.String)>("alarm_alert_cache");

        <android.provider.Settings$System: android.net.Uri ALARM_ALERT_CACHE_URI> = $r83;

        $r84 = newarray (java.lang.String)[0];

        <android.provider.Settings$System: java.lang.String[] LEGACY_RESTORE_SETTINGS> = $r84;

        $r85 = new android.util.ArraySet;

        specialinvoke $r85.<android.util.ArraySet: void <init>()>();

        <android.provider.Settings$System: java.util.Set PUBLIC_SETTINGS> = $r85;

        interfaceinvoke $r85.<java.util.Set: boolean add(java.lang.Object)>("end_button_behavior");

        $r86 = <android.provider.Settings$System: java.util.Set PUBLIC_SETTINGS>;

        interfaceinvoke $r86.<java.util.Set: boolean add(java.lang.Object)>("wifi_use_static_ip");

        $r87 = <android.provider.Settings$System: java.util.Set PUBLIC_SETTINGS>;

        interfaceinvoke $r87.<java.util.Set: boolean add(java.lang.Object)>("wifi_static_ip");

        $r88 = <android.provider.Settings$System: java.util.Set PUBLIC_SETTINGS>;

        interfaceinvoke $r88.<java.util.Set: boolean add(java.lang.Object)>("wifi_static_gateway");

        $r89 = <android.provider.Settings$System: java.util.Set PUBLIC_SETTINGS>;

        interfaceinvoke $r89.<java.util.Set: boolean add(java.lang.Object)>("wifi_static_netmask");

        $r90 = <android.provider.Settings$System: java.util.Set PUBLIC_SETTINGS>;

        interfaceinvoke $r90.<java.util.Set: boolean add(java.lang.Object)>("wifi_static_dns1");

        $r91 = <android.provider.Settings$System: java.util.Set PUBLIC_SETTINGS>;

        interfaceinvoke $r91.<java.util.Set: boolean add(java.lang.Object)>("wifi_static_dns2");

        $r92 = <android.provider.Settings$System: java.util.Set PUBLIC_SETTINGS>;

        interfaceinvoke $r92.<java.util.Set: boolean add(java.lang.Object)>("bluetooth_discoverability");

        $r93 = <android.provider.Settings$System: java.util.Set PUBLIC_SETTINGS>;

        interfaceinvoke $r93.<java.util.Set: boolean add(java.lang.Object)>("bluetooth_discoverability_timeout");

        $r94 = <android.provider.Settings$System: java.util.Set PUBLIC_SETTINGS>;

        interfaceinvoke $r94.<java.util.Set: boolean add(java.lang.Object)>("next_alarm_formatted");

        $r95 = <android.provider.Settings$System: java.util.Set PUBLIC_SETTINGS>;

        interfaceinvoke $r95.<java.util.Set: boolean add(java.lang.Object)>("font_scale");

        $r96 = <android.provider.Settings$System: java.util.Set PUBLIC_SETTINGS>;

        interfaceinvoke $r96.<java.util.Set: boolean add(java.lang.Object)>("system_locales");

        $r97 = <android.provider.Settings$System: java.util.Set PUBLIC_SETTINGS>;

        interfaceinvoke $r97.<java.util.Set: boolean add(java.lang.Object)>("dim_screen");

        $r98 = <android.provider.Settings$System: java.util.Set PUBLIC_SETTINGS>;

        interfaceinvoke $r98.<java.util.Set: boolean add(java.lang.Object)>("screen_off_timeout");

        $r99 = <android.provider.Settings$System: java.util.Set PUBLIC_SETTINGS>;

        interfaceinvoke $r99.<java.util.Set: boolean add(java.lang.Object)>("screen_brightness");

        $r100 = <android.provider.Settings$System: java.util.Set PUBLIC_SETTINGS>;

        interfaceinvoke $r100.<java.util.Set: boolean add(java.lang.Object)>("screen_brightness_float");

        $r101 = <android.provider.Settings$System: java.util.Set PUBLIC_SETTINGS>;

        interfaceinvoke $r101.<java.util.Set: boolean add(java.lang.Object)>("screen_brightness_for_vr");

        $r102 = <android.provider.Settings$System: java.util.Set PUBLIC_SETTINGS>;

        interfaceinvoke $r102.<java.util.Set: boolean add(java.lang.Object)>("screen_brightness_for_vr_float");

        $r103 = <android.provider.Settings$System: java.util.Set PUBLIC_SETTINGS>;

        interfaceinvoke $r103.<java.util.Set: boolean add(java.lang.Object)>("screen_brightness_mode");

        $r104 = <android.provider.Settings$System: java.util.Set PUBLIC_SETTINGS>;

        interfaceinvoke $r104.<java.util.Set: boolean add(java.lang.Object)>("mode_ringer_streams_affected");

        $r105 = <android.provider.Settings$System: java.util.Set PUBLIC_SETTINGS>;

        interfaceinvoke $r105.<java.util.Set: boolean add(java.lang.Object)>("mute_streams_affected");

        $r106 = <android.provider.Settings$System: java.util.Set PUBLIC_SETTINGS>;

        interfaceinvoke $r106.<java.util.Set: boolean add(java.lang.Object)>("vibrate_on");

        $r107 = <android.provider.Settings$System: java.util.Set PUBLIC_SETTINGS>;

        interfaceinvoke $r107.<java.util.Set: boolean add(java.lang.Object)>("volume_ring");

        $r108 = <android.provider.Settings$System: java.util.Set PUBLIC_SETTINGS>;

        interfaceinvoke $r108.<java.util.Set: boolean add(java.lang.Object)>("volume_system");

        $r109 = <android.provider.Settings$System: java.util.Set PUBLIC_SETTINGS>;

        interfaceinvoke $r109.<java.util.Set: boolean add(java.lang.Object)>("volume_voice");

        $r110 = <android.provider.Settings$System: java.util.Set PUBLIC_SETTINGS>;

        interfaceinvoke $r110.<java.util.Set: boolean add(java.lang.Object)>("volume_music");

        $r111 = <android.provider.Settings$System: java.util.Set PUBLIC_SETTINGS>;

        interfaceinvoke $r111.<java.util.Set: boolean add(java.lang.Object)>("volume_alarm");

        $r112 = <android.provider.Settings$System: java.util.Set PUBLIC_SETTINGS>;

        interfaceinvoke $r112.<java.util.Set: boolean add(java.lang.Object)>("volume_notification");

        $r113 = <android.provider.Settings$System: java.util.Set PUBLIC_SETTINGS>;

        interfaceinvoke $r113.<java.util.Set: boolean add(java.lang.Object)>("volume_bluetooth_sco");

        $r114 = <android.provider.Settings$System: java.util.Set PUBLIC_SETTINGS>;

        interfaceinvoke $r114.<java.util.Set: boolean add(java.lang.Object)>("volume_assistant");

        $r115 = <android.provider.Settings$System: java.util.Set PUBLIC_SETTINGS>;

        interfaceinvoke $r115.<java.util.Set: boolean add(java.lang.Object)>("ringtone");

        $r116 = <android.provider.Settings$System: java.util.Set PUBLIC_SETTINGS>;

        interfaceinvoke $r116.<java.util.Set: boolean add(java.lang.Object)>("notification_sound");

        $r117 = <android.provider.Settings$System: java.util.Set PUBLIC_SETTINGS>;

        interfaceinvoke $r117.<java.util.Set: boolean add(java.lang.Object)>("alarm_alert");

        $r118 = <android.provider.Settings$System: java.util.Set PUBLIC_SETTINGS>;

        interfaceinvoke $r118.<java.util.Set: boolean add(java.lang.Object)>("auto_replace");

        $r119 = <android.provider.Settings$System: java.util.Set PUBLIC_SETTINGS>;

        interfaceinvoke $r119.<java.util.Set: boolean add(java.lang.Object)>("auto_caps");

        $r120 = <android.provider.Settings$System: java.util.Set PUBLIC_SETTINGS>;

        interfaceinvoke $r120.<java.util.Set: boolean add(java.lang.Object)>("auto_punctuate");

        $r121 = <android.provider.Settings$System: java.util.Set PUBLIC_SETTINGS>;

        interfaceinvoke $r121.<java.util.Set: boolean add(java.lang.Object)>("show_password");

        $r122 = <android.provider.Settings$System: java.util.Set PUBLIC_SETTINGS>;

        interfaceinvoke $r122.<java.util.Set: boolean add(java.lang.Object)>("SHOW_GTALK_SERVICE_STATUS");

        $r123 = <android.provider.Settings$System: java.util.Set PUBLIC_SETTINGS>;

        interfaceinvoke $r123.<java.util.Set: boolean add(java.lang.Object)>("wallpaper_activity");

        $r124 = <android.provider.Settings$System: java.util.Set PUBLIC_SETTINGS>;

        interfaceinvoke $r124.<java.util.Set: boolean add(java.lang.Object)>("time_12_24");

        $r125 = <android.provider.Settings$System: java.util.Set PUBLIC_SETTINGS>;

        interfaceinvoke $r125.<java.util.Set: boolean add(java.lang.Object)>("date_format");

        $r126 = <android.provider.Settings$System: java.util.Set PUBLIC_SETTINGS>;

        interfaceinvoke $r126.<java.util.Set: boolean add(java.lang.Object)>("setup_wizard_has_run");

        $r127 = <android.provider.Settings$System: java.util.Set PUBLIC_SETTINGS>;

        interfaceinvoke $r127.<java.util.Set: boolean add(java.lang.Object)>("accelerometer_rotation");

        $r128 = <android.provider.Settings$System: java.util.Set PUBLIC_SETTINGS>;

        interfaceinvoke $r128.<java.util.Set: boolean add(java.lang.Object)>("user_rotation");

        $r129 = <android.provider.Settings$System: java.util.Set PUBLIC_SETTINGS>;

        interfaceinvoke $r129.<java.util.Set: boolean add(java.lang.Object)>("dtmf_tone");

        $r130 = <android.provider.Settings$System: java.util.Set PUBLIC_SETTINGS>;

        interfaceinvoke $r130.<java.util.Set: boolean add(java.lang.Object)>("sound_effects_enabled");

        $r131 = <android.provider.Settings$System: java.util.Set PUBLIC_SETTINGS>;

        interfaceinvoke $r131.<java.util.Set: boolean add(java.lang.Object)>("haptic_feedback_enabled");

        $r132 = <android.provider.Settings$System: java.util.Set PUBLIC_SETTINGS>;

        interfaceinvoke $r132.<java.util.Set: boolean add(java.lang.Object)>("show_web_suggestions");

        $r133 = <android.provider.Settings$System: java.util.Set PUBLIC_SETTINGS>;

        interfaceinvoke $r133.<java.util.Set: boolean add(java.lang.Object)>("vibrate_when_ringing");

        $r134 = new android.util.ArraySet;

        specialinvoke $r134.<android.util.ArraySet: void <init>()>();

        <android.provider.Settings$System: java.util.Set PRIVATE_SETTINGS> = $r134;

        interfaceinvoke $r134.<java.util.Set: boolean add(java.lang.Object)>("wifi_use_static_ip");

        $r135 = <android.provider.Settings$System: java.util.Set PRIVATE_SETTINGS>;

        interfaceinvoke $r135.<java.util.Set: boolean add(java.lang.Object)>("end_button_behavior");

        $r136 = <android.provider.Settings$System: java.util.Set PRIVATE_SETTINGS>;

        interfaceinvoke $r136.<java.util.Set: boolean add(java.lang.Object)>("advanced_settings");

        $r137 = <android.provider.Settings$System: java.util.Set PRIVATE_SETTINGS>;

        interfaceinvoke $r137.<java.util.Set: boolean add(java.lang.Object)>("screen_auto_brightness_adj");

        $r138 = <android.provider.Settings$System: java.util.Set PRIVATE_SETTINGS>;

        interfaceinvoke $r138.<java.util.Set: boolean add(java.lang.Object)>("vibrate_input_devices");

        $r139 = <android.provider.Settings$System: java.util.Set PRIVATE_SETTINGS>;

        interfaceinvoke $r139.<java.util.Set: boolean add(java.lang.Object)>("volume_master");

        $r140 = <android.provider.Settings$System: java.util.Set PRIVATE_SETTINGS>;

        interfaceinvoke $r140.<java.util.Set: boolean add(java.lang.Object)>("master_mono");

        $r141 = <android.provider.Settings$System: java.util.Set PRIVATE_SETTINGS>;

        interfaceinvoke $r141.<java.util.Set: boolean add(java.lang.Object)>("master_balance");

        $r142 = <android.provider.Settings$System: java.util.Set PRIVATE_SETTINGS>;

        interfaceinvoke $r142.<java.util.Set: boolean add(java.lang.Object)>("notifications_use_ring_volume");

        $r143 = <android.provider.Settings$System: java.util.Set PRIVATE_SETTINGS>;

        interfaceinvoke $r143.<java.util.Set: boolean add(java.lang.Object)>("vibrate_in_silent");

        $r144 = <android.provider.Settings$System: java.util.Set PRIVATE_SETTINGS>;

        interfaceinvoke $r144.<java.util.Set: boolean add(java.lang.Object)>("media_button_receiver");

        $r145 = <android.provider.Settings$System: java.util.Set PRIVATE_SETTINGS>;

        interfaceinvoke $r145.<java.util.Set: boolean add(java.lang.Object)>("hide_rotation_lock_toggle_for_accessibility");

        $r146 = <android.provider.Settings$System: java.util.Set PRIVATE_SETTINGS>;

        interfaceinvoke $r146.<java.util.Set: boolean add(java.lang.Object)>("dtmf_tone_type");

        $r147 = <android.provider.Settings$System: java.util.Set PRIVATE_SETTINGS>;

        interfaceinvoke $r147.<java.util.Set: boolean add(java.lang.Object)>("hearing_aid");

        $r148 = <android.provider.Settings$System: java.util.Set PRIVATE_SETTINGS>;

        interfaceinvoke $r148.<java.util.Set: boolean add(java.lang.Object)>("tty_mode");

        $r149 = <android.provider.Settings$System: java.util.Set PRIVATE_SETTINGS>;

        interfaceinvoke $r149.<java.util.Set: boolean add(java.lang.Object)>("notification_light_pulse");

        $r150 = <android.provider.Settings$System: java.util.Set PRIVATE_SETTINGS>;

        interfaceinvoke $r150.<java.util.Set: boolean add(java.lang.Object)>("pointer_location");

        $r151 = <android.provider.Settings$System: java.util.Set PRIVATE_SETTINGS>;

        interfaceinvoke $r151.<java.util.Set: boolean add(java.lang.Object)>("show_touches");

        $r152 = <android.provider.Settings$System: java.util.Set PRIVATE_SETTINGS>;

        interfaceinvoke $r152.<java.util.Set: boolean add(java.lang.Object)>("window_orientation_listener_log");

        $r153 = <android.provider.Settings$System: java.util.Set PRIVATE_SETTINGS>;

        interfaceinvoke $r153.<java.util.Set: boolean add(java.lang.Object)>("power_sounds_enabled");

        $r154 = <android.provider.Settings$System: java.util.Set PRIVATE_SETTINGS>;

        interfaceinvoke $r154.<java.util.Set: boolean add(java.lang.Object)>("dock_sounds_enabled");

        $r155 = <android.provider.Settings$System: java.util.Set PRIVATE_SETTINGS>;

        interfaceinvoke $r155.<java.util.Set: boolean add(java.lang.Object)>("lockscreen_sounds_enabled");

        $r156 = <android.provider.Settings$System: java.util.Set PRIVATE_SETTINGS>;

        interfaceinvoke $r156.<java.util.Set: boolean add(java.lang.Object)>("lockscreen.disabled");

        $r157 = <android.provider.Settings$System: java.util.Set PRIVATE_SETTINGS>;

        interfaceinvoke $r157.<java.util.Set: boolean add(java.lang.Object)>("low_battery_sound");

        $r158 = <android.provider.Settings$System: java.util.Set PRIVATE_SETTINGS>;

        interfaceinvoke $r158.<java.util.Set: boolean add(java.lang.Object)>("desk_dock_sound");

        $r159 = <android.provider.Settings$System: java.util.Set PRIVATE_SETTINGS>;

        interfaceinvoke $r159.<java.util.Set: boolean add(java.lang.Object)>("desk_undock_sound");

        $r160 = <android.provider.Settings$System: java.util.Set PRIVATE_SETTINGS>;

        interfaceinvoke $r160.<java.util.Set: boolean add(java.lang.Object)>("car_dock_sound");

        $r161 = <android.provider.Settings$System: java.util.Set PRIVATE_SETTINGS>;

        interfaceinvoke $r161.<java.util.Set: boolean add(java.lang.Object)>("car_undock_sound");

        $r162 = <android.provider.Settings$System: java.util.Set PRIVATE_SETTINGS>;

        interfaceinvoke $r162.<java.util.Set: boolean add(java.lang.Object)>("lock_sound");

        $r163 = <android.provider.Settings$System: java.util.Set PRIVATE_SETTINGS>;

        interfaceinvoke $r163.<java.util.Set: boolean add(java.lang.Object)>("unlock_sound");

        $r164 = <android.provider.Settings$System: java.util.Set PRIVATE_SETTINGS>;

        interfaceinvoke $r164.<java.util.Set: boolean add(java.lang.Object)>("sip_receive_calls");

        $r165 = <android.provider.Settings$System: java.util.Set PRIVATE_SETTINGS>;

        interfaceinvoke $r165.<java.util.Set: boolean add(java.lang.Object)>("sip_call_options");

        $r166 = <android.provider.Settings$System: java.util.Set PRIVATE_SETTINGS>;

        interfaceinvoke $r166.<java.util.Set: boolean add(java.lang.Object)>("SIP_ALWAYS");

        $r167 = <android.provider.Settings$System: java.util.Set PRIVATE_SETTINGS>;

        interfaceinvoke $r167.<java.util.Set: boolean add(java.lang.Object)>("SIP_ADDRESS_ONLY");

        $r168 = <android.provider.Settings$System: java.util.Set PRIVATE_SETTINGS>;

        interfaceinvoke $r168.<java.util.Set: boolean add(java.lang.Object)>("SIP_ASK_ME_EACH_TIME");

        $r169 = <android.provider.Settings$System: java.util.Set PRIVATE_SETTINGS>;

        interfaceinvoke $r169.<java.util.Set: boolean add(java.lang.Object)>("pointer_speed");

        $r170 = <android.provider.Settings$System: java.util.Set PRIVATE_SETTINGS>;

        interfaceinvoke $r170.<java.util.Set: boolean add(java.lang.Object)>("lock_to_app_enabled");

        $r171 = <android.provider.Settings$System: java.util.Set PRIVATE_SETTINGS>;

        interfaceinvoke $r171.<java.util.Set: boolean add(java.lang.Object)>("egg_mode");

        $r172 = <android.provider.Settings$System: java.util.Set PRIVATE_SETTINGS>;

        interfaceinvoke $r172.<java.util.Set: boolean add(java.lang.Object)>("status_bar_show_battery_percent");

        $r173 = <android.provider.Settings$System: java.util.Set PRIVATE_SETTINGS>;

        interfaceinvoke $r173.<java.util.Set: boolean add(java.lang.Object)>("display_color_mode");

        $r174 = new android.util.ArraySet;

        specialinvoke $r174.<android.util.ArraySet: void <init>()>();

        <android.provider.Settings$System: java.util.Set CLONE_TO_MANAGED_PROFILE> = $r174;

        interfaceinvoke $r174.<java.util.Set: boolean add(java.lang.Object)>("date_format");

        $r175 = <android.provider.Settings$System: java.util.Set CLONE_TO_MANAGED_PROFILE>;

        interfaceinvoke $r175.<java.util.Set: boolean add(java.lang.Object)>("haptic_feedback_enabled");

        $r176 = <android.provider.Settings$System: java.util.Set CLONE_TO_MANAGED_PROFILE>;

        interfaceinvoke $r176.<java.util.Set: boolean add(java.lang.Object)>("sound_effects_enabled");

        $r177 = <android.provider.Settings$System: java.util.Set CLONE_TO_MANAGED_PROFILE>;

        interfaceinvoke $r177.<java.util.Set: boolean add(java.lang.Object)>("show_password");

        $r178 = <android.provider.Settings$System: java.util.Set CLONE_TO_MANAGED_PROFILE>;

        interfaceinvoke $r178.<java.util.Set: boolean add(java.lang.Object)>("time_12_24");

        $r179 = new android.util.ArrayMap;

        specialinvoke $r179.<android.util.ArrayMap: void <init>()>();

        <android.provider.Settings$System: java.util.Map CLONE_FROM_PARENT_ON_VALUE> = $r179;

        interfaceinvoke $r179.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("ringtone", "sync_parent_sounds");

        $r181 = <android.provider.Settings$System: java.util.Map CLONE_FROM_PARENT_ON_VALUE>;

        interfaceinvoke $r181.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("notification_sound", "sync_parent_sounds");

        $r183 = <android.provider.Settings$System: java.util.Map CLONE_FROM_PARENT_ON_VALUE>;

        interfaceinvoke $r183.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("alarm_alert", "sync_parent_sounds");

        $r185 = new android.util.ArraySet;

        specialinvoke $r185.<android.util.ArraySet: void <init>()>();

        <android.provider.Settings$System: java.util.Set INSTANT_APP_SETTINGS> = $r185;

        interfaceinvoke $r185.<java.util.Set: boolean add(java.lang.Object)>("auto_replace");

        $r186 = <android.provider.Settings$System: java.util.Set INSTANT_APP_SETTINGS>;

        interfaceinvoke $r186.<java.util.Set: boolean add(java.lang.Object)>("auto_caps");

        $r187 = <android.provider.Settings$System: java.util.Set INSTANT_APP_SETTINGS>;

        interfaceinvoke $r187.<java.util.Set: boolean add(java.lang.Object)>("auto_punctuate");

        $r188 = <android.provider.Settings$System: java.util.Set INSTANT_APP_SETTINGS>;

        interfaceinvoke $r188.<java.util.Set: boolean add(java.lang.Object)>("show_password");

        $r189 = <android.provider.Settings$System: java.util.Set INSTANT_APP_SETTINGS>;

        interfaceinvoke $r189.<java.util.Set: boolean add(java.lang.Object)>("date_format");

        $r190 = <android.provider.Settings$System: java.util.Set INSTANT_APP_SETTINGS>;

        interfaceinvoke $r190.<java.util.Set: boolean add(java.lang.Object)>("font_scale");

        $r191 = <android.provider.Settings$System: java.util.Set INSTANT_APP_SETTINGS>;

        interfaceinvoke $r191.<java.util.Set: boolean add(java.lang.Object)>("haptic_feedback_enabled");

        $r192 = <android.provider.Settings$System: java.util.Set INSTANT_APP_SETTINGS>;

        interfaceinvoke $r192.<java.util.Set: boolean add(java.lang.Object)>("time_12_24");

        $r193 = <android.provider.Settings$System: java.util.Set INSTANT_APP_SETTINGS>;

        interfaceinvoke $r193.<java.util.Set: boolean add(java.lang.Object)>("sound_effects_enabled");

        $r194 = <android.provider.Settings$System: java.util.Set INSTANT_APP_SETTINGS>;

        interfaceinvoke $r194.<java.util.Set: boolean add(java.lang.Object)>("accelerometer_rotation");

        return;
    }

    public void <init>()
    {
        android.provider.Settings$System r0;

        r0 := @this: android.provider.Settings$System;

        specialinvoke r0.<android.provider.Settings$NameValueTable: void <init>()>();

        return;
    }

    public static void adjustConfigurationForUser(android.content.ContentResolver, android.content.res.Configuration, int, boolean)
    {
        android.content.ContentResolver r0;
        android.content.res.Configuration r1;
        int i0;
        boolean z0;
        java.lang.String r2, $r4;
        float $f0, $f1;
        byte $b1;
        android.os.LocaleList $r3, $r5;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: android.content.res.Configuration;

        i0 := @parameter2: int;

        z0 := @parameter3: boolean;

        $f0 = staticinvoke <android.provider.Settings$System: float getFloatForUser(android.content.ContentResolver,java.lang.String,float,int)>(r0, "font_scale", 1.0F, i0);

        r1.<android.content.res.Configuration: float fontScale> = $f0;

        $f1 = r1.<android.content.res.Configuration: float fontScale>;

        $b1 = $f1 cmpg 0.0F;

        if $b1 >= 0 goto label1;

        r1.<android.content.res.Configuration: float fontScale> = 1.0F;

     label1:
        r2 = staticinvoke <android.provider.Settings$System: java.lang.String getStringForUser(android.content.ContentResolver,java.lang.String,int)>(r0, "system_locales", i0);

        if r2 == null goto label2;

        $r5 = staticinvoke <android.os.LocaleList: android.os.LocaleList forLanguageTags(java.lang.String)>(r2);

        virtualinvoke r1.<android.content.res.Configuration: void setLocales(android.os.LocaleList)>($r5);

        goto label3;

     label2:
        if z0 == 0 goto label3;

        $r3 = virtualinvoke r1.<android.content.res.Configuration: android.os.LocaleList getLocales()>();

        $r4 = virtualinvoke $r3.<android.os.LocaleList: java.lang.String toLanguageTags()>();

        staticinvoke <android.provider.Settings$System: boolean putStringForUser(android.content.ContentResolver,java.lang.String,java.lang.String,int,boolean)>(r0, "system_locales", $r4, i0, 0);

     label3:
        return;
    }

    public static boolean canWrite(android.content.Context)
    {
        android.content.Context r0;
        int $i0;
        java.lang.String $r1;
        boolean $z0;

        r0 := @parameter0: android.content.Context;

        $i0 = staticinvoke <android.os.Process: int myUid()>();

        $r1 = virtualinvoke r0.<android.content.Context: java.lang.String getOpPackageName()>();

        $z0 = staticinvoke <android.provider.Settings: boolean isCallingPackageAllowedToWriteSettings(android.content.Context,int,java.lang.String,boolean)>(r0, $i0, $r1, 0);

        return $z0;
    }

    public static void clearConfiguration(android.content.res.Configuration)
    {
        android.content.res.Configuration r0;
        boolean $z0, $z1;
        android.os.LocaleList $r1;

        r0 := @parameter0: android.content.res.Configuration;

        r0.<android.content.res.Configuration: float fontScale> = 0.0F;

        $z0 = r0.<android.content.res.Configuration: boolean userSetLocale>;

        if $z0 != 0 goto label1;

        $r1 = virtualinvoke r0.<android.content.res.Configuration: android.os.LocaleList getLocales()>();

        $z1 = virtualinvoke $r1.<android.os.LocaleList: boolean isEmpty()>();

        if $z1 != 0 goto label1;

        virtualinvoke r0.<android.content.res.Configuration: void clearLocales()>();

     label1:
        return;
    }

    public static void clearProviderForTest()
    {
        android.provider.Settings$ContentProviderHolder $r0;
        android.provider.Settings$NameValueCache $r1;

        $r0 = <android.provider.Settings$System: android.provider.Settings$ContentProviderHolder sProviderHolder>;

        virtualinvoke $r0.<android.provider.Settings$ContentProviderHolder: void clearProviderForTest()>();

        $r1 = <android.provider.Settings$System: android.provider.Settings$NameValueCache sNameValueCache>;

        virtualinvoke $r1.<android.provider.Settings$NameValueCache: void clearGenerationTrackerForTest()>();

        return;
    }

    public static void getCloneFromParentOnValueSettings(java.util.Map)
    {
        java.util.Map r0, $r1;

        r0 := @parameter0: java.util.Map;

        $r1 = <android.provider.Settings$System: java.util.Map CLONE_FROM_PARENT_ON_VALUE>;

        interfaceinvoke r0.<java.util.Map: void putAll(java.util.Map)>($r1);

        return;
    }

    public static void getCloneToManagedProfileSettings(java.util.Set)
    {
        java.util.Set r0, $r1;

        r0 := @parameter0: java.util.Set;

        $r1 = <android.provider.Settings$System: java.util.Set CLONE_TO_MANAGED_PROFILE>;

        interfaceinvoke r0.<java.util.Set: boolean addAll(java.util.Collection)>($r1);

        return;
    }

    public static void getConfiguration(android.content.ContentResolver, android.content.res.Configuration)
    {
        android.content.ContentResolver r0;
        android.content.res.Configuration r1;
        int $i0;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: android.content.res.Configuration;

        $i0 = virtualinvoke r0.<android.content.ContentResolver: int getUserId()>();

        staticinvoke <android.provider.Settings$System: void adjustConfigurationForUser(android.content.ContentResolver,android.content.res.Configuration,int,boolean)>(r0, r1, $i0, 0);

        return;
    }

    public static float getFloat(android.content.ContentResolver, java.lang.String) throws android.provider.Settings$SettingNotFoundException
    {
        android.content.ContentResolver r0;
        java.lang.String r1;
        int $i0;
        float $f0;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: java.lang.String;

        $i0 = virtualinvoke r0.<android.content.ContentResolver: int getUserId()>();

        $f0 = staticinvoke <android.provider.Settings$System: float getFloatForUser(android.content.ContentResolver,java.lang.String,int)>(r0, r1, $i0);

        return $f0;
    }

    public static float getFloat(android.content.ContentResolver, java.lang.String, float)
    {
        android.content.ContentResolver r0;
        java.lang.String r1;
        float f0, $f1;
        int $i0;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: java.lang.String;

        f0 := @parameter2: float;

        $i0 = virtualinvoke r0.<android.content.ContentResolver: int getUserId()>();

        $f1 = staticinvoke <android.provider.Settings$System: float getFloatForUser(android.content.ContentResolver,java.lang.String,float,int)>(r0, r1, f0, $i0);

        return $f1;
    }

    public static float getFloatForUser(android.content.ContentResolver, java.lang.String, float, int)
    {
        java.lang.String r0, r3;
        int i0;
        float f0, f1;
        java.lang.Throwable $r1;
        android.content.ContentResolver r2;

        r2 := @parameter0: android.content.ContentResolver;

        r0 := @parameter1: java.lang.String;

        f1 := @parameter2: float;

        i0 := @parameter3: int;

        r3 = staticinvoke <android.provider.Settings$System: java.lang.String getStringForUser(android.content.ContentResolver,java.lang.String,int)>(r2, r0, i0);

        if r3 == null goto label4;

     label1:
        f0 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>(r3);

     label2:
        f1 = f0;

        goto label4;

     label3:
        $r1 := @caughtexception;

        return f1;

     label4:
        return f1;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    public static float getFloatForUser(android.content.ContentResolver, java.lang.String, int) throws android.provider.Settings$SettingNotFoundException
    {
        java.lang.String r0, r5;
        int i0;
        float f0;
        android.provider.Settings$SettingNotFoundException $r1, $r3;
        java.lang.Throwable $r2;
        android.content.ContentResolver r4;

        r4 := @parameter0: android.content.ContentResolver;

        r0 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r5 = staticinvoke <android.provider.Settings$System: java.lang.String getStringForUser(android.content.ContentResolver,java.lang.String,int)>(r4, r0, i0);

        if r5 == null goto label4;

     label1:
        f0 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>(r5);

     label2:
        return f0;

     label3:
        $r2 := @caughtexception;

        $r3 = new android.provider.Settings$SettingNotFoundException;

        specialinvoke $r3.<android.provider.Settings$SettingNotFoundException: void <init>(java.lang.String)>(r0);

        throw $r3;

     label4:
        $r1 = new android.provider.Settings$SettingNotFoundException;

        specialinvoke $r1.<android.provider.Settings$SettingNotFoundException: void <init>(java.lang.String)>(r0);

        throw $r1;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    public static int getInt(android.content.ContentResolver, java.lang.String) throws android.provider.Settings$SettingNotFoundException
    {
        android.content.ContentResolver r0;
        java.lang.String r1;
        int $i0, $i1;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: java.lang.String;

        $i0 = virtualinvoke r0.<android.content.ContentResolver: int getUserId()>();

        $i1 = staticinvoke <android.provider.Settings$System: int getIntForUser(android.content.ContentResolver,java.lang.String,int)>(r0, r1, $i0);

        return $i1;
    }

    public static int getInt(android.content.ContentResolver, java.lang.String, int)
    {
        android.content.ContentResolver r0;
        java.lang.String r1;
        int i0, $i1, $i2;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $i1 = virtualinvoke r0.<android.content.ContentResolver: int getUserId()>();

        $i2 = staticinvoke <android.provider.Settings$System: int getIntForUser(android.content.ContentResolver,java.lang.String,int,int)>(r0, r1, i0, $i1);

        return $i2;
    }

    public static int getIntForUser(android.content.ContentResolver, java.lang.String, int) throws android.provider.Settings$SettingNotFoundException
    {
        java.lang.String r0, r4;
        java.lang.Throwable $r1;
        android.provider.Settings$SettingNotFoundException $r2;
        android.content.ContentResolver r3;
        int i0, i1;

        r3 := @parameter0: android.content.ContentResolver;

        r0 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r4 = staticinvoke <android.provider.Settings$System: java.lang.String getStringForUser(android.content.ContentResolver,java.lang.String,int)>(r3, r0, i0);

     label1:
        i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r4);

     label2:
        return i1;

     label3:
        $r1 := @caughtexception;

        $r2 = new android.provider.Settings$SettingNotFoundException;

        specialinvoke $r2.<android.provider.Settings$SettingNotFoundException: void <init>(java.lang.String)>(r0);

        throw $r2;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    public static int getIntForUser(android.content.ContentResolver, java.lang.String, int, int)
    {
        java.lang.String r0, r3;
        java.lang.Throwable $r1;
        android.content.ContentResolver r2;
        int i0, i1, i2;

        r2 := @parameter0: android.content.ContentResolver;

        r0 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        r3 = staticinvoke <android.provider.Settings$System: java.lang.String getStringForUser(android.content.ContentResolver,java.lang.String,int)>(r2, r0, i1);

        if r3 == null goto label4;

     label1:
        i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r3);

     label2:
        i0 = i2;

        goto label4;

     label3:
        $r1 := @caughtexception;

        return i0;

     label4:
        return i0;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    public static long getLong(android.content.ContentResolver, java.lang.String) throws android.provider.Settings$SettingNotFoundException
    {
        android.content.ContentResolver r0;
        java.lang.String r1;
        int $i0;
        long $l1;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: java.lang.String;

        $i0 = virtualinvoke r0.<android.content.ContentResolver: int getUserId()>();

        $l1 = staticinvoke <android.provider.Settings$System: long getLongForUser(android.content.ContentResolver,java.lang.String,int)>(r0, r1, $i0);

        return $l1;
    }

    public static long getLong(android.content.ContentResolver, java.lang.String, long)
    {
        android.content.ContentResolver r0;
        java.lang.String r1;
        long l0, $l2;
        int $i1;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: java.lang.String;

        l0 := @parameter2: long;

        $i1 = virtualinvoke r0.<android.content.ContentResolver: int getUserId()>();

        $l2 = staticinvoke <android.provider.Settings$System: long getLongForUser(android.content.ContentResolver,java.lang.String,long,int)>(r0, r1, l0, $i1);

        return $l2;
    }

    public static long getLongForUser(android.content.ContentResolver, java.lang.String, int) throws android.provider.Settings$SettingNotFoundException
    {
        java.lang.String r0, r4;
        int i0;
        long l1;
        java.lang.Throwable $r1;
        android.provider.Settings$SettingNotFoundException $r2;
        android.content.ContentResolver r3;

        r3 := @parameter0: android.content.ContentResolver;

        r0 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r4 = staticinvoke <android.provider.Settings$System: java.lang.String getStringForUser(android.content.ContentResolver,java.lang.String,int)>(r3, r0, i0);

     label1:
        l1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(r4);

     label2:
        return l1;

     label3:
        $r1 := @caughtexception;

        $r2 = new android.provider.Settings$SettingNotFoundException;

        specialinvoke $r2.<android.provider.Settings$SettingNotFoundException: void <init>(java.lang.String)>(r0);

        throw $r2;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    public static long getLongForUser(android.content.ContentResolver, java.lang.String, long, int)
    {
        java.lang.String r0, r3;
        int i0;
        long l1, l2;
        java.lang.Throwable $r1;
        android.content.ContentResolver r2;

        r2 := @parameter0: android.content.ContentResolver;

        r0 := @parameter1: java.lang.String;

        l2 := @parameter2: long;

        i0 := @parameter3: int;

        r3 = staticinvoke <android.provider.Settings$System: java.lang.String getStringForUser(android.content.ContentResolver,java.lang.String,int)>(r2, r0, i0);

        if r3 == null goto label4;

     label1:
        l1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(r3);

     label2:
        l2 = l1;

        goto label4;

     label3:
        $r1 := @caughtexception;

        goto label4;

     label4:
        return l2;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    public static void getMovedToGlobalSettings(java.util.Set)
    {
        java.util.Set r0;
        java.util.HashSet $r1, $r2;

        r0 := @parameter0: java.util.Set;

        $r1 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_GLOBAL>;

        interfaceinvoke r0.<java.util.Set: boolean addAll(java.util.Collection)>($r1);

        $r2 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_SECURE_THEN_GLOBAL>;

        interfaceinvoke r0.<java.util.Set: boolean addAll(java.util.Collection)>($r2);

        return;
    }

    public static void getMovedToSecureSettings(java.util.Set)
    {
        java.util.Set r0;
        java.util.HashSet $r1;

        r0 := @parameter0: java.util.Set;

        $r1 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_SECURE>;

        interfaceinvoke r0.<java.util.Set: boolean addAll(java.util.Collection)>($r1);

        return;
    }

    public static void getNonLegacyMovedKeys(java.util.HashSet)
    {
        java.util.HashSet r0, $r1;

        r0 := @parameter0: java.util.HashSet;

        $r1 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke r0.<java.util.HashSet: boolean addAll(java.util.Collection)>($r1);

        return;
    }

    public static boolean getShowGTalkServiceStatus(android.content.ContentResolver)
    {
        android.content.ContentResolver r0;
        int $i0;
        boolean $z0;

        r0 := @parameter0: android.content.ContentResolver;

        $i0 = virtualinvoke r0.<android.content.ContentResolver: int getUserId()>();

        $z0 = staticinvoke <android.provider.Settings$System: boolean getShowGTalkServiceStatusForUser(android.content.ContentResolver,int)>(r0, $i0);

        return $z0;
    }

    public static boolean getShowGTalkServiceStatusForUser(android.content.ContentResolver, int)
    {
        android.content.ContentResolver r0;
        int i0, $i1;
        boolean z0;

        r0 := @parameter0: android.content.ContentResolver;

        i0 := @parameter1: int;

        z0 = 0;

        $i1 = staticinvoke <android.provider.Settings$System: int getIntForUser(android.content.ContentResolver,java.lang.String,int,int)>(r0, "SHOW_GTALK_SERVICE_STATUS", 0, i0);

        if $i1 == 0 goto label1;

        z0 = 1;

     label1:
        return z0;
    }

    public static java.lang.String getString(android.content.ContentResolver, java.lang.String)
    {
        android.content.ContentResolver r0;
        java.lang.String r1, $r2;
        int $i0;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: java.lang.String;

        $i0 = virtualinvoke r0.<android.content.ContentResolver: int getUserId()>();

        $r2 = staticinvoke <android.provider.Settings$System: java.lang.String getStringForUser(android.content.ContentResolver,java.lang.String,int)>(r0, r1, $i0);

        return $r2;
    }

    public static java.lang.String getStringForUser(android.content.ContentResolver, java.lang.String, int)
    {
        android.content.ContentResolver r0;
        java.lang.String r1, $r8, $r9, $r12, $r17, $r18;
        int i0;
        java.util.HashSet $r2, $r3, $r10;
        boolean $z0, $z1, $z2;
        java.lang.StringBuilder $r4, $r13;
        android.provider.Settings$NameValueCache $r11;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $r2 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_SECURE>;

        $z0 = virtualinvoke $r2.<java.util.HashSet: boolean contains(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Setting ");

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has moved from android.provider.Settings.System to android.provider.Settings.Secure, returning read-only value.");

        $r17 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("Settings", $r17);

        $r18 = staticinvoke <android.provider.Settings$Secure: java.lang.String getStringForUser(android.content.ContentResolver,java.lang.String,int)>(r0, r1, i0);

        return $r18;

     label1:
        $r3 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_GLOBAL>;

        $z1 = virtualinvoke $r3.<java.util.HashSet: boolean contains(java.lang.Object)>(r1);

        if $z1 != 0 goto label3;

        $r10 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_SECURE_THEN_GLOBAL>;

        $z2 = virtualinvoke $r10.<java.util.HashSet: boolean contains(java.lang.Object)>(r1);

        if $z2 == 0 goto label2;

        goto label3;

     label2:
        $r11 = <android.provider.Settings$System: android.provider.Settings$NameValueCache sNameValueCache>;

        $r12 = virtualinvoke $r11.<android.provider.Settings$NameValueCache: java.lang.String getStringForUser(android.content.ContentResolver,java.lang.String,int)>(r0, r1, i0);

        return $r12;

     label3:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Setting ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has moved from android.provider.Settings.System to android.provider.Settings.Global, returning read-only value.");

        $r8 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("Settings", $r8);

        $r9 = staticinvoke <android.provider.Settings$Global: java.lang.String getStringForUser(android.content.ContentResolver,java.lang.String,int)>(r0, r1, i0);

        return $r9;
    }

    public static android.net.Uri getUriFor(java.lang.String)
    {
        java.lang.String r0, $r7, $r17;
        java.util.HashSet $r1, $r2, $r10;
        boolean $z0, $z1, $z2;
        java.lang.StringBuilder $r3, $r13;
        android.net.Uri $r8, $r9, $r11, $r12, $r18, $r19;

        r0 := @parameter0: java.lang.String;

        $r1 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_SECURE>;

        $z0 = virtualinvoke $r1.<java.util.HashSet: boolean contains(java.lang.Object)>(r0);

        if $z0 == 0 goto label1;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Setting ");

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has moved from android.provider.Settings.System to android.provider.Settings.Secure, returning Secure URI.");

        $r17 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("Settings", $r17);

        $r18 = <android.provider.Settings$Secure: android.net.Uri CONTENT_URI>;

        $r19 = staticinvoke <android.provider.Settings$Secure: android.net.Uri getUriFor(android.net.Uri,java.lang.String)>($r18, r0);

        return $r19;

     label1:
        $r2 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_GLOBAL>;

        $z1 = virtualinvoke $r2.<java.util.HashSet: boolean contains(java.lang.Object)>(r0);

        if $z1 != 0 goto label3;

        $r10 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_SECURE_THEN_GLOBAL>;

        $z2 = virtualinvoke $r10.<java.util.HashSet: boolean contains(java.lang.Object)>(r0);

        if $z2 == 0 goto label2;

        goto label3;

     label2:
        $r11 = <android.provider.Settings$System: android.net.Uri CONTENT_URI>;

        $r12 = staticinvoke <android.provider.Settings$System: android.net.Uri getUriFor(android.net.Uri,java.lang.String)>($r11, r0);

        return $r12;

     label3:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Setting ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has moved from android.provider.Settings.System to android.provider.Settings.Global, returning read-only global URI.");

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("Settings", $r7);

        $r8 = <android.provider.Settings$Global: android.net.Uri CONTENT_URI>;

        $r9 = staticinvoke <android.provider.Settings$Global: android.net.Uri getUriFor(android.net.Uri,java.lang.String)>($r8, r0);

        return $r9;
    }

    public static boolean hasInterestingConfigurationChanges(int)
    {
        int i0, $i1, $i2;
        boolean z0;

        i0 := @parameter0: int;

        $i1 = 1073741824 & i0;

        if $i1 != 0 goto label2;

        $i2 = i0 & 4;

        if $i2 == 0 goto label1;

        goto label2;

     label1:
        z0 = 0;

        goto label3;

     label2:
        z0 = 1;

     label3:
        return z0;
    }

    public static boolean putConfiguration(android.content.ContentResolver, android.content.res.Configuration)
    {
        android.content.ContentResolver r0;
        android.content.res.Configuration r1;
        int $i0;
        boolean $z0;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: android.content.res.Configuration;

        $i0 = virtualinvoke r0.<android.content.ContentResolver: int getUserId()>();

        $z0 = staticinvoke <android.provider.Settings$System: boolean putConfigurationForUser(android.content.ContentResolver,android.content.res.Configuration,int)>(r0, r1, $i0);

        return $z0;
    }

    public static boolean putConfigurationForUser(android.content.ContentResolver, android.content.res.Configuration, int)
    {
        android.content.ContentResolver r0;
        android.content.res.Configuration r1;
        int i0;
        boolean z0, $z1, z2;
        float $f0;
        android.os.LocaleList $r2;
        java.lang.String $r3;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: android.content.res.Configuration;

        i0 := @parameter2: int;

        $f0 = r1.<android.content.res.Configuration: float fontScale>;

        z0 = staticinvoke <android.provider.Settings$System: boolean putFloatForUser(android.content.ContentResolver,java.lang.String,float,int)>(r0, "font_scale", $f0, i0);

        z2 = 0;

        if z0 == 0 goto label1;

        $r2 = virtualinvoke r1.<android.content.res.Configuration: android.os.LocaleList getLocales()>();

        $r3 = virtualinvoke $r2.<android.os.LocaleList: java.lang.String toLanguageTags()>();

        $z1 = staticinvoke <android.provider.Settings$System: boolean putStringForUser(android.content.ContentResolver,java.lang.String,java.lang.String,int,boolean)>(r0, "system_locales", $r3, i0, 0);

        if $z1 == 0 goto label1;

        z2 = 1;

        goto label1;

     label1:
        return z2;
    }

    public static boolean putFloat(android.content.ContentResolver, java.lang.String, float)
    {
        android.content.ContentResolver r0;
        java.lang.String r1;
        float f0;
        int $i0;
        boolean $z0;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: java.lang.String;

        f0 := @parameter2: float;

        $i0 = virtualinvoke r0.<android.content.ContentResolver: int getUserId()>();

        $z0 = staticinvoke <android.provider.Settings$System: boolean putFloatForUser(android.content.ContentResolver,java.lang.String,float,int)>(r0, r1, f0, $i0);

        return $z0;
    }

    public static boolean putFloatForUser(android.content.ContentResolver, java.lang.String, float, int)
    {
        android.content.ContentResolver r0;
        java.lang.String r1, $r2;
        float f0;
        int i0;
        boolean $z0;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: java.lang.String;

        f0 := @parameter2: float;

        i0 := @parameter3: int;

        $r2 = staticinvoke <java.lang.Float: java.lang.String toString(float)>(f0);

        $z0 = staticinvoke <android.provider.Settings$System: boolean putStringForUser(android.content.ContentResolver,java.lang.String,java.lang.String,int)>(r0, r1, $r2, i0);

        return $z0;
    }

    public static boolean putInt(android.content.ContentResolver, java.lang.String, int)
    {
        android.content.ContentResolver r0;
        java.lang.String r1;
        int i0, $i1;
        boolean $z0;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $i1 = virtualinvoke r0.<android.content.ContentResolver: int getUserId()>();

        $z0 = staticinvoke <android.provider.Settings$System: boolean putIntForUser(android.content.ContentResolver,java.lang.String,int,int)>(r0, r1, i0, $i1);

        return $z0;
    }

    public static boolean putIntForUser(android.content.ContentResolver, java.lang.String, int, int)
    {
        android.content.ContentResolver r0;
        java.lang.String r1, $r2;
        int i0, i1;
        boolean $z0;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        $r2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0);

        $z0 = staticinvoke <android.provider.Settings$System: boolean putStringForUser(android.content.ContentResolver,java.lang.String,java.lang.String,int)>(r0, r1, $r2, i1);

        return $z0;
    }

    public static boolean putLong(android.content.ContentResolver, java.lang.String, long)
    {
        android.content.ContentResolver r0;
        java.lang.String r1;
        long l0;
        int $i1;
        boolean $z0;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: java.lang.String;

        l0 := @parameter2: long;

        $i1 = virtualinvoke r0.<android.content.ContentResolver: int getUserId()>();

        $z0 = staticinvoke <android.provider.Settings$System: boolean putLongForUser(android.content.ContentResolver,java.lang.String,long,int)>(r0, r1, l0, $i1);

        return $z0;
    }

    public static boolean putLongForUser(android.content.ContentResolver, java.lang.String, long, int)
    {
        android.content.ContentResolver r0;
        java.lang.String r1, $r2;
        long l0;
        int i1;
        boolean $z0;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: java.lang.String;

        l0 := @parameter2: long;

        i1 := @parameter3: int;

        $r2 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0);

        $z0 = staticinvoke <android.provider.Settings$System: boolean putStringForUser(android.content.ContentResolver,java.lang.String,java.lang.String,int)>(r0, r1, $r2, i1);

        return $z0;
    }

    public static boolean putString(android.content.ContentResolver, java.lang.String, java.lang.String)
    {
        android.content.ContentResolver r0;
        java.lang.String r1, r2;
        int $i0;
        boolean $z0;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        $i0 = virtualinvoke r0.<android.content.ContentResolver: int getUserId()>();

        $z0 = staticinvoke <android.provider.Settings$System: boolean putStringForUser(android.content.ContentResolver,java.lang.String,java.lang.String,int)>(r0, r1, r2, $i0);

        return $z0;
    }

    public static boolean putString(android.content.ContentResolver, java.lang.String, java.lang.String, boolean)
    {
        android.content.ContentResolver r0;
        java.lang.String r1, r2;
        boolean z0, $z1;
        int $i0;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        z0 := @parameter3: boolean;

        $i0 = virtualinvoke r0.<android.content.ContentResolver: int getUserId()>();

        $z1 = staticinvoke <android.provider.Settings$System: boolean putStringForUser(android.content.ContentResolver,java.lang.String,java.lang.String,int,boolean)>(r0, r1, r2, $i0, z0);

        return $z1;
    }

    public static boolean putStringForUser(android.content.ContentResolver, java.lang.String, java.lang.String, int)
    {
        android.content.ContentResolver r0;
        java.lang.String r1, r2;
        int i0;
        boolean $z0;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        $z0 = staticinvoke <android.provider.Settings$System: boolean putStringForUser(android.content.ContentResolver,java.lang.String,java.lang.String,int,boolean)>(r0, r1, r2, i0, 0);

        return $z0;
    }

    private static boolean putStringForUser(android.content.ContentResolver, java.lang.String, java.lang.String, int, boolean)
    {
        java.lang.String r0, r1, $r8, $r15;
        int i0;
        boolean z0, $z1, $z2, $z3, $z4;
        java.util.HashSet $r2, $r3, $r9;
        java.lang.StringBuilder $r4, $r11;
        android.provider.Settings$NameValueCache $r10;
        android.content.ContentResolver r16;

        r16 := @parameter0: android.content.ContentResolver;

        r0 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        z0 := @parameter4: boolean;

        $r2 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_SECURE>;

        $z1 = virtualinvoke $r2.<java.util.HashSet: boolean contains(java.lang.Object)>(r0);

        if $z1 == 0 goto label1;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Setting ");

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has moved from android.provider.Settings.System to android.provider.Settings.Secure, value is unchanged.");

        $r15 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("Settings", $r15);

        return 0;

     label1:
        $r3 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_GLOBAL>;

        $z2 = virtualinvoke $r3.<java.util.HashSet: boolean contains(java.lang.Object)>(r0);

        if $z2 != 0 goto label3;

        $r9 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_SECURE_THEN_GLOBAL>;

        $z3 = virtualinvoke $r9.<java.util.HashSet: boolean contains(java.lang.Object)>(r0);

        if $z3 == 0 goto label2;

        goto label3;

     label2:
        $r10 = <android.provider.Settings$System: android.provider.Settings$NameValueCache sNameValueCache>;

        $z4 = virtualinvoke $r10.<android.provider.Settings$NameValueCache: boolean putStringForUser(android.content.ContentResolver,java.lang.String,java.lang.String,java.lang.String,boolean,int,boolean)>(r16, r0, r1, null, 0, i0, z0);

        return $z4;

     label3:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Setting ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has moved from android.provider.Settings.System to android.provider.Settings.Global, value is unchanged.");

        $r8 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("Settings", $r8);

        return 0;
    }

    public static void setShowGTalkServiceStatus(android.content.ContentResolver, boolean)
    {
        android.content.ContentResolver r0;
        boolean z0;
        int $i0;

        r0 := @parameter0: android.content.ContentResolver;

        z0 := @parameter1: boolean;

        $i0 = virtualinvoke r0.<android.content.ContentResolver: int getUserId()>();

        staticinvoke <android.provider.Settings$System: void setShowGTalkServiceStatusForUser(android.content.ContentResolver,boolean,int)>(r0, z0, $i0);

        return;
    }

    public static void setShowGTalkServiceStatusForUser(android.content.ContentResolver, boolean, int)
    {
        android.content.ContentResolver r0;
        boolean z0;
        int i0, i1;

        r0 := @parameter0: android.content.ContentResolver;

        z0 := @parameter1: boolean;

        i0 := @parameter2: int;

        i1 = (int) z0;

        staticinvoke <android.provider.Settings$System: boolean putIntForUser(android.content.ContentResolver,java.lang.String,int,int)>(r0, "SHOW_GTALK_SERVICE_STATUS", i1, i0);

        return;
    }
}
