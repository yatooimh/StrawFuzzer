public final class android.provider.Telephony$Threads extends java.lang.Object implements android.provider.Telephony$ThreadsColumns
{
    public static final int BROADCAST_THREAD;
    public static final int COMMON_THREAD;
    public static final android.net.Uri CONTENT_URI;
    private static final java.lang.String[] ID_PROJECTION;
    public static final android.net.Uri OBSOLETE_THREADS_URI;
    private static final android.net.Uri THREAD_ID_CONTENT_URI;

    static void <clinit>()
    {
        android.net.Uri r0, $r2, $r3, $r4;
        java.lang.String[] $r1;

        <android.provider.Telephony$Threads: int COMMON_THREAD> = 0;

        <android.provider.Telephony$Threads: int BROADCAST_THREAD> = 1;

        $r1 = newarray (java.lang.String)[1];

        $r1[0] = "_id";

        <android.provider.Telephony$Threads: java.lang.String[] ID_PROJECTION> = $r1;

        $r2 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>("content://mms-sms/threadID");

        <android.provider.Telephony$Threads: android.net.Uri THREAD_ID_CONTENT_URI> = $r2;

        $r3 = <android.provider.Telephony$MmsSms: android.net.Uri CONTENT_URI>;

        r0 = staticinvoke <android.net.Uri: android.net.Uri withAppendedPath(android.net.Uri,java.lang.String)>($r3, "conversations");

        <android.provider.Telephony$Threads: android.net.Uri CONTENT_URI> = r0;

        $r4 = staticinvoke <android.net.Uri: android.net.Uri withAppendedPath(android.net.Uri,java.lang.String)>(r0, "obsolete");

        <android.provider.Telephony$Threads: android.net.Uri OBSOLETE_THREADS_URI> = $r4;

        return;
    }

    private void <init>()
    {
        android.provider.Telephony$Threads r0;

        r0 := @this: android.provider.Telephony$Threads;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static long getOrCreateThreadId(android.content.Context, java.lang.String)
    {
        android.content.Context r0;
        java.lang.String r1;
        java.util.HashSet $r3;
        long $l0;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.String;

        $r3 = new java.util.HashSet;

        specialinvoke $r3.<java.util.HashSet: void <init>()>();

        interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>(r1);

        $l0 = staticinvoke <android.provider.Telephony$Threads: long getOrCreateThreadId(android.content.Context,java.util.Set)>(r0, $r3);

        return $l0;
    }

    public static long getOrCreateThreadId(android.content.Context, java.util.Set)
    {
        android.net.Uri$Builder r0;
        java.util.Iterator r1;
        java.lang.String r2, $r10, r17;
        long l0;
        android.net.Uri $r3, r18;
        boolean $z0, $z1, $z2;
        android.content.ContentResolver $r4;
        java.lang.String[] $r5;
        java.lang.StringBuilder $r6;
        int $i1;
        java.lang.IllegalArgumentException $r11;
        java.lang.Object $r12;
        java.lang.Throwable $r14;
        android.content.Context r15;
        java.util.Set r16;
        android.database.Cursor r19;

        r15 := @parameter0: android.content.Context;

        r16 := @parameter1: java.util.Set;

        $r3 = <android.provider.Telephony$Threads: android.net.Uri THREAD_ID_CONTENT_URI>;

        r0 = virtualinvoke $r3.<android.net.Uri: android.net.Uri$Builder buildUpon()>();

        r1 = interfaceinvoke r16.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r12 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (java.lang.String) $r12;

        r17 = r2;

        $z2 = staticinvoke <android.provider.Telephony$Mms: boolean isEmailAddress(java.lang.String)>(r2);

        if $z2 == 0 goto label2;

        r17 = staticinvoke <android.provider.Telephony$Mms: java.lang.String extractAddrSpec(java.lang.String)>(r2);

     label2:
        virtualinvoke r0.<android.net.Uri$Builder: android.net.Uri$Builder appendQueryParameter(java.lang.String,java.lang.String)>("recipient", r17);

        goto label1;

     label3:
        r18 = virtualinvoke r0.<android.net.Uri$Builder: android.net.Uri build()>();

        $r4 = virtualinvoke r15.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r5 = <android.provider.Telephony$Threads: java.lang.String[] ID_PROJECTION>;

        r19 = staticinvoke <android.database.sqlite.SqliteWrapper: android.database.Cursor query(android.content.Context,android.content.ContentResolver,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>(r15, $r4, r18, $r5, null, null, null);

        if r19 == null goto label9;

     label4:
        $z1 = interfaceinvoke r19.<android.database.Cursor: boolean moveToFirst()>();

        if $z1 == 0 goto label6;

        l0 = interfaceinvoke r19.<android.database.Cursor: long getLong(int)>(0);

     label5:
        interfaceinvoke r19.<android.database.Cursor: void close()>();

        return l0;

     label6:
        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("Telephony", "getOrCreateThreadId returned no rows!");

     label7:
        interfaceinvoke r19.<android.database.Cursor: void close()>();

        goto label9;

     label8:
        $r14 := @caughtexception;

        interfaceinvoke r19.<android.database.Cursor: void close()>();

        throw $r14;

     label9:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getOrCreateThreadId failed with ");

        $i1 = interfaceinvoke r16.<java.util.Set: int size()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" recipients");

        $r10 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("Telephony", $r10);

        $r11 = new java.lang.IllegalArgumentException;

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Unable to find or allocate a thread ID.");

        throw $r11;

        catch java.lang.Throwable from label4 to label5 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
    }
}
