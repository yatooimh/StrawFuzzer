public class android.renderscript.Element$Builder extends java.lang.Object
{
    int[] mArraySizes;
    int mCount;
    java.lang.String[] mElementNames;
    android.renderscript.Element[] mElements;
    android.renderscript.RenderScript mRS;
    int mSkipPadding;

    public void <init>(android.renderscript.RenderScript)
    {
        android.renderscript.Element$Builder r0;
        android.renderscript.RenderScript r1;
        android.renderscript.Element[] $r2;
        java.lang.String[] $r3;
        int[] $r4;

        r0 := @this: android.renderscript.Element$Builder;

        r1 := @parameter0: android.renderscript.RenderScript;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.renderscript.Element$Builder: android.renderscript.RenderScript mRS> = r1;

        r0.<android.renderscript.Element$Builder: int mCount> = 0;

        $r2 = newarray (android.renderscript.Element)[8];

        r0.<android.renderscript.Element$Builder: android.renderscript.Element[] mElements> = $r2;

        $r3 = newarray (java.lang.String)[8];

        r0.<android.renderscript.Element$Builder: java.lang.String[] mElementNames> = $r3;

        $r4 = newarray (int)[8];

        r0.<android.renderscript.Element$Builder: int[] mArraySizes> = $r4;

        return;
    }

    public android.renderscript.Element$Builder add(android.renderscript.Element, java.lang.String)
    {
        android.renderscript.Element$Builder r0, $r3;
        android.renderscript.Element r1;
        java.lang.String r2;

        r0 := @this: android.renderscript.Element$Builder;

        r1 := @parameter0: android.renderscript.Element;

        r2 := @parameter1: java.lang.String;

        $r3 = virtualinvoke r0.<android.renderscript.Element$Builder: android.renderscript.Element$Builder add(android.renderscript.Element,java.lang.String,int)>(r1, r2, 1);

        return $r3;
    }

    public android.renderscript.Element$Builder add(android.renderscript.Element, java.lang.String, int)
    {
        android.renderscript.Element$Builder r0;
        android.renderscript.Element r1;
        java.lang.String r2;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10, i11;
        android.renderscript.Element[] r3, r4, r12;
        java.lang.String[] r5, $r7, $r9;
        android.renderscript.RSIllegalArgumentException $r6;
        int[] $r8, $r10, r11;
        boolean $z0;

        r0 := @this: android.renderscript.Element$Builder;

        r1 := @parameter0: android.renderscript.Element;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        if i0 < 1 goto label5;

        $i1 = r0.<android.renderscript.Element$Builder: int mSkipPadding>;

        if $i1 == 0 goto label1;

        $z0 = virtualinvoke r2.<java.lang.String: boolean startsWith(java.lang.String)>("#padding_");

        if $z0 == 0 goto label1;

        r0.<android.renderscript.Element$Builder: int mSkipPadding> = 0;

        return r0;

     label1:
        $i2 = r1.<android.renderscript.Element: int mVectorSize>;

        if $i2 != 3 goto label2;

        r0.<android.renderscript.Element$Builder: int mSkipPadding> = 1;

        goto label3;

     label2:
        r0.<android.renderscript.Element$Builder: int mSkipPadding> = 0;

     label3:
        i10 = r0.<android.renderscript.Element$Builder: int mCount>;

        r3 = r0.<android.renderscript.Element$Builder: android.renderscript.Element[] mElements>;

        $i3 = lengthof r3;

        if i10 != $i3 goto label4;

        $i5 = i10 + 8;

        r4 = newarray (android.renderscript.Element)[$i5];

        $i6 = i10 + 8;

        r5 = newarray (java.lang.String)[$i6];

        $i7 = i10 + 8;

        r11 = newarray (int)[$i7];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r3, 0, r4, 0, i10);

        $r9 = r0.<android.renderscript.Element$Builder: java.lang.String[] mElementNames>;

        $i8 = r0.<android.renderscript.Element$Builder: int mCount>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r9, 0, r5, 0, $i8);

        $r10 = r0.<android.renderscript.Element$Builder: int[] mArraySizes>;

        $i9 = r0.<android.renderscript.Element$Builder: int mCount>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r10, 0, r11, 0, $i9);

        r0.<android.renderscript.Element$Builder: android.renderscript.Element[] mElements> = r4;

        r0.<android.renderscript.Element$Builder: java.lang.String[] mElementNames> = r5;

        r0.<android.renderscript.Element$Builder: int[] mArraySizes> = r11;

     label4:
        r12 = r0.<android.renderscript.Element$Builder: android.renderscript.Element[] mElements>;

        i11 = r0.<android.renderscript.Element$Builder: int mCount>;

        r12[i11] = r1;

        $r7 = r0.<android.renderscript.Element$Builder: java.lang.String[] mElementNames>;

        $r7[i11] = r2;

        $r8 = r0.<android.renderscript.Element$Builder: int[] mArraySizes>;

        $r8[i11] = i0;

        $i4 = i11 + 1;

        r0.<android.renderscript.Element$Builder: int mCount> = $i4;

        return r0;

     label5:
        $r6 = new android.renderscript.RSIllegalArgumentException;

        specialinvoke $r6.<android.renderscript.RSIllegalArgumentException: void <init>(java.lang.String)>("Array size cannot be less than 1.");

        throw $r6;
    }

    public android.renderscript.Element create()
    {
        android.renderscript.Element$Builder r0;
        android.renderscript.Element[] r1, $r6;
        java.lang.String[] r2, $r7;
        int[] r3, $r8;
        long[] r4;
        android.renderscript.RenderScript $r5, $r10, $r11, $r12;
        int $i0, $i1, $i2, $i3, i6, i7;
        android.renderscript.Element $r9, $r13;
        long $l4, $l5;

        r0 := @this: android.renderscript.Element$Builder;

        $r5 = r0.<android.renderscript.Element$Builder: android.renderscript.RenderScript mRS>;

        virtualinvoke $r5.<android.renderscript.RenderScript: void validate()>();

        i6 = r0.<android.renderscript.Element$Builder: int mCount>;

        r1 = newarray (android.renderscript.Element)[i6];

        r2 = newarray (java.lang.String)[i6];

        r3 = newarray (int)[i6];

        $r6 = r0.<android.renderscript.Element$Builder: android.renderscript.Element[] mElements>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r6, 0, r1, 0, i6);

        $r7 = r0.<android.renderscript.Element$Builder: java.lang.String[] mElementNames>;

        $i0 = r0.<android.renderscript.Element$Builder: int mCount>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r7, 0, r2, 0, $i0);

        $r8 = r0.<android.renderscript.Element$Builder: int[] mArraySizes>;

        $i1 = r0.<android.renderscript.Element$Builder: int mCount>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r8, 0, r3, 0, $i1);

        $i2 = lengthof r1;

        r4 = newarray (long)[$i2];

        i7 = 0;

     label1:
        $i3 = lengthof r1;

        if i7 >= $i3 goto label2;

        $r13 = r1[i7];

        $r12 = r0.<android.renderscript.Element$Builder: android.renderscript.RenderScript mRS>;

        $l5 = virtualinvoke $r13.<android.renderscript.Element: long getID(android.renderscript.RenderScript)>($r12);

        r4[i7] = $l5;

        i7 = i7 + 1;

        goto label1;

     label2:
        $r9 = new android.renderscript.Element;

        $r10 = r0.<android.renderscript.Element$Builder: android.renderscript.RenderScript mRS>;

        $l4 = virtualinvoke $r10.<android.renderscript.RenderScript: long nElementCreate2(long[],java.lang.String[],int[])>(r4, r2, r3);

        $r11 = r0.<android.renderscript.Element$Builder: android.renderscript.RenderScript mRS>;

        specialinvoke $r9.<android.renderscript.Element: void <init>(long,android.renderscript.RenderScript,android.renderscript.Element[],java.lang.String[],int[])>($l4, $r11, r1, r2, r3);

        return $r9;
    }
}
