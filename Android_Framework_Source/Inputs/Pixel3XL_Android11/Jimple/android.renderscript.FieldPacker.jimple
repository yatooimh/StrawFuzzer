public class android.renderscript.FieldPacker extends java.lang.Object
{
    private java.util.BitSet mAlignment;
    private byte[] mData;
    private int mLen;
    private int mPos;

    public void <init>(int)
    {
        android.renderscript.FieldPacker r0;
        int i0;
        byte[] $r1;
        java.util.BitSet $r2;

        r0 := @this: android.renderscript.FieldPacker;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.renderscript.FieldPacker: int mPos> = 0;

        r0.<android.renderscript.FieldPacker: int mLen> = i0;

        $r1 = newarray (byte)[i0];

        r0.<android.renderscript.FieldPacker: byte[] mData> = $r1;

        $r2 = new java.util.BitSet;

        specialinvoke $r2.<java.util.BitSet: void <init>()>();

        r0.<android.renderscript.FieldPacker: java.util.BitSet mAlignment> = $r2;

        return;
    }

    public void <init>(byte[])
    {
        android.renderscript.FieldPacker r0;
        byte[] r1;
        int $i0, $i1;
        java.util.BitSet $r2;

        r0 := @this: android.renderscript.FieldPacker;

        r1 := @parameter0: byte[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i0 = lengthof r1;

        r0.<android.renderscript.FieldPacker: int mPos> = $i0;

        $i1 = lengthof r1;

        r0.<android.renderscript.FieldPacker: int mLen> = $i1;

        r0.<android.renderscript.FieldPacker: byte[] mData> = r1;

        $r2 = new java.util.BitSet;

        specialinvoke $r2.<java.util.BitSet: void <init>()>();

        r0.<android.renderscript.FieldPacker: java.util.BitSet mAlignment> = $r2;

        return;
    }

    private void add(java.lang.Object)
    {
        android.renderscript.FieldPacker r0;
        java.lang.Object r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26, $z27, $z28, $z29;
        android.renderscript.BaseObj $r2;
        android.renderscript.Matrix4f $r3;
        android.renderscript.Matrix3f $r4;
        android.renderscript.Matrix2f $r5;
        android.renderscript.Double4 $r6;
        android.renderscript.Double3 $r7;
        android.renderscript.Double2 $r8;
        android.renderscript.Float4 $r9;
        android.renderscript.Float3 $r10;
        android.renderscript.Float2 $r11;
        android.renderscript.Long4 $r12;
        android.renderscript.Long3 $r13;
        android.renderscript.Long2 $r14;
        android.renderscript.Int4 $r15;
        android.renderscript.Int3 $r16;
        android.renderscript.Int2 $r17;
        android.renderscript.Short4 $r18;
        android.renderscript.Short3 $r19;
        android.renderscript.Short2 $r20;
        android.renderscript.Byte4 $r21;
        android.renderscript.Byte3 $r22;
        android.renderscript.Byte2 $r23;
        java.lang.Double $r24;
        double $d0;
        java.lang.Float $r25;
        float $f0;
        java.lang.Long $r26;
        long $l0;
        java.lang.Integer $r27;
        int $i1;
        java.lang.Short $r28;
        short $s2;
        java.lang.Byte $r29;
        byte $b3;
        java.lang.Boolean $r30;

        r0 := @this: android.renderscript.FieldPacker;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof java.lang.Boolean;

        if $z0 == 0 goto label01;

        $r30 = (java.lang.Boolean) r1;

        $z29 = virtualinvoke $r30.<java.lang.Boolean: boolean booleanValue()>();

        virtualinvoke r0.<android.renderscript.FieldPacker: void addBoolean(boolean)>($z29);

        return;

     label01:
        $z1 = r1 instanceof java.lang.Byte;

        if $z1 == 0 goto label02;

        $r29 = (java.lang.Byte) r1;

        $b3 = virtualinvoke $r29.<java.lang.Byte: byte byteValue()>();

        virtualinvoke r0.<android.renderscript.FieldPacker: void addI8(byte)>($b3);

        return;

     label02:
        $z2 = r1 instanceof java.lang.Short;

        if $z2 == 0 goto label03;

        $r28 = (java.lang.Short) r1;

        $s2 = virtualinvoke $r28.<java.lang.Short: short shortValue()>();

        virtualinvoke r0.<android.renderscript.FieldPacker: void addI16(short)>($s2);

        return;

     label03:
        $z3 = r1 instanceof java.lang.Integer;

        if $z3 == 0 goto label04;

        $r27 = (java.lang.Integer) r1;

        $i1 = virtualinvoke $r27.<java.lang.Integer: int intValue()>();

        virtualinvoke r0.<android.renderscript.FieldPacker: void addI32(int)>($i1);

        return;

     label04:
        $z4 = r1 instanceof java.lang.Long;

        if $z4 == 0 goto label05;

        $r26 = (java.lang.Long) r1;

        $l0 = virtualinvoke $r26.<java.lang.Long: long longValue()>();

        virtualinvoke r0.<android.renderscript.FieldPacker: void addI64(long)>($l0);

        return;

     label05:
        $z5 = r1 instanceof java.lang.Float;

        if $z5 == 0 goto label06;

        $r25 = (java.lang.Float) r1;

        $f0 = virtualinvoke $r25.<java.lang.Float: float floatValue()>();

        virtualinvoke r0.<android.renderscript.FieldPacker: void addF32(float)>($f0);

        return;

     label06:
        $z6 = r1 instanceof java.lang.Double;

        if $z6 == 0 goto label07;

        $r24 = (java.lang.Double) r1;

        $d0 = virtualinvoke $r24.<java.lang.Double: double doubleValue()>();

        virtualinvoke r0.<android.renderscript.FieldPacker: void addF64(double)>($d0);

        return;

     label07:
        $z7 = r1 instanceof android.renderscript.Byte2;

        if $z7 == 0 goto label08;

        $r23 = (android.renderscript.Byte2) r1;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addI8(android.renderscript.Byte2)>($r23);

        return;

     label08:
        $z8 = r1 instanceof android.renderscript.Byte3;

        if $z8 == 0 goto label09;

        $r22 = (android.renderscript.Byte3) r1;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addI8(android.renderscript.Byte3)>($r22);

        return;

     label09:
        $z9 = r1 instanceof android.renderscript.Byte4;

        if $z9 == 0 goto label10;

        $r21 = (android.renderscript.Byte4) r1;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addI8(android.renderscript.Byte4)>($r21);

        return;

     label10:
        $z10 = r1 instanceof android.renderscript.Short2;

        if $z10 == 0 goto label11;

        $r20 = (android.renderscript.Short2) r1;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addI16(android.renderscript.Short2)>($r20);

        return;

     label11:
        $z11 = r1 instanceof android.renderscript.Short3;

        if $z11 == 0 goto label12;

        $r19 = (android.renderscript.Short3) r1;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addI16(android.renderscript.Short3)>($r19);

        return;

     label12:
        $z12 = r1 instanceof android.renderscript.Short4;

        if $z12 == 0 goto label13;

        $r18 = (android.renderscript.Short4) r1;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addI16(android.renderscript.Short4)>($r18);

        return;

     label13:
        $z13 = r1 instanceof android.renderscript.Int2;

        if $z13 == 0 goto label14;

        $r17 = (android.renderscript.Int2) r1;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addI32(android.renderscript.Int2)>($r17);

        return;

     label14:
        $z14 = r1 instanceof android.renderscript.Int3;

        if $z14 == 0 goto label15;

        $r16 = (android.renderscript.Int3) r1;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addI32(android.renderscript.Int3)>($r16);

        return;

     label15:
        $z15 = r1 instanceof android.renderscript.Int4;

        if $z15 == 0 goto label16;

        $r15 = (android.renderscript.Int4) r1;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addI32(android.renderscript.Int4)>($r15);

        return;

     label16:
        $z16 = r1 instanceof android.renderscript.Long2;

        if $z16 == 0 goto label17;

        $r14 = (android.renderscript.Long2) r1;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addI64(android.renderscript.Long2)>($r14);

        return;

     label17:
        $z17 = r1 instanceof android.renderscript.Long3;

        if $z17 == 0 goto label18;

        $r13 = (android.renderscript.Long3) r1;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addI64(android.renderscript.Long3)>($r13);

        return;

     label18:
        $z18 = r1 instanceof android.renderscript.Long4;

        if $z18 == 0 goto label19;

        $r12 = (android.renderscript.Long4) r1;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addI64(android.renderscript.Long4)>($r12);

        return;

     label19:
        $z19 = r1 instanceof android.renderscript.Float2;

        if $z19 == 0 goto label20;

        $r11 = (android.renderscript.Float2) r1;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addF32(android.renderscript.Float2)>($r11);

        return;

     label20:
        $z20 = r1 instanceof android.renderscript.Float3;

        if $z20 == 0 goto label21;

        $r10 = (android.renderscript.Float3) r1;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addF32(android.renderscript.Float3)>($r10);

        return;

     label21:
        $z21 = r1 instanceof android.renderscript.Float4;

        if $z21 == 0 goto label22;

        $r9 = (android.renderscript.Float4) r1;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addF32(android.renderscript.Float4)>($r9);

        return;

     label22:
        $z22 = r1 instanceof android.renderscript.Double2;

        if $z22 == 0 goto label23;

        $r8 = (android.renderscript.Double2) r1;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addF64(android.renderscript.Double2)>($r8);

        return;

     label23:
        $z23 = r1 instanceof android.renderscript.Double3;

        if $z23 == 0 goto label24;

        $r7 = (android.renderscript.Double3) r1;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addF64(android.renderscript.Double3)>($r7);

        return;

     label24:
        $z24 = r1 instanceof android.renderscript.Double4;

        if $z24 == 0 goto label25;

        $r6 = (android.renderscript.Double4) r1;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addF64(android.renderscript.Double4)>($r6);

        return;

     label25:
        $z25 = r1 instanceof android.renderscript.Matrix2f;

        if $z25 == 0 goto label26;

        $r5 = (android.renderscript.Matrix2f) r1;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addMatrix(android.renderscript.Matrix2f)>($r5);

        return;

     label26:
        $z26 = r1 instanceof android.renderscript.Matrix3f;

        if $z26 == 0 goto label27;

        $r4 = (android.renderscript.Matrix3f) r1;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addMatrix(android.renderscript.Matrix3f)>($r4);

        return;

     label27:
        $z27 = r1 instanceof android.renderscript.Matrix4f;

        if $z27 == 0 goto label28;

        $r3 = (android.renderscript.Matrix4f) r1;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addMatrix(android.renderscript.Matrix4f)>($r3);

        return;

     label28:
        $z28 = r1 instanceof android.renderscript.BaseObj;

        if $z28 == 0 goto label29;

        $r2 = (android.renderscript.BaseObj) r1;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addObj(android.renderscript.BaseObj)>($r2);

        return;

     label29:
        return;
    }

    private void addSafely(java.lang.Object)
    {
        android.renderscript.FieldPacker r0;
        java.lang.Object r1;
        int i0, $i1, $i2;
        java.lang.ArrayIndexOutOfBoundsException $r3;
        boolean z1;

        r0 := @this: android.renderscript.FieldPacker;

        r1 := @parameter0: java.lang.Object;

        i0 = r0.<android.renderscript.FieldPacker: int mPos>;

     label1:
        z1 = 0;

     label2:
        specialinvoke r0.<android.renderscript.FieldPacker: void add(java.lang.Object)>(r1);

     label3:
        goto label5;

     label4:
        $r3 := @caughtexception;

        r0.<android.renderscript.FieldPacker: int mPos> = i0;

        $i1 = r0.<android.renderscript.FieldPacker: int mLen>;

        $i2 = $i1 * 2;

        specialinvoke r0.<android.renderscript.FieldPacker: boolean resize(int)>($i2);

        z1 = 1;

     label5:
        if z1 != 0 goto label6;

        return;

     label6:
        goto label1;

        catch java.lang.ArrayIndexOutOfBoundsException from label2 to label3 with label4;
    }

    static android.renderscript.FieldPacker createFromArray(java.lang.Object[])
    {
        java.lang.Object[] r0;
        int i0, $i1, $i2, $i3, i4;
        android.renderscript.FieldPacker $r2;
        java.lang.Object $r3;

        r0 := @parameter0: java.lang.Object[];

        $r2 = new android.renderscript.FieldPacker;

        $i1 = <android.renderscript.RenderScript: int sPointerSize>;

        $i2 = $i1 * 8;

        specialinvoke $r2.<android.renderscript.FieldPacker: void <init>(int)>($i2);

        i0 = lengthof r0;

        i4 = 0;

     label1:
        if i4 >= i0 goto label2;

        $r3 = r0[i4];

        specialinvoke $r2.<android.renderscript.FieldPacker: void addSafely(java.lang.Object)>($r3);

        i4 = i4 + 1;

        goto label1;

     label2:
        $i3 = $r2.<android.renderscript.FieldPacker: int mPos>;

        specialinvoke $r2.<android.renderscript.FieldPacker: boolean resize(int)>($i3);

        return $r2;
    }

    private boolean resize(int)
    {
        android.renderscript.FieldPacker r0;
        int i0, $i1, $i2;
        byte[] r1, $r2;

        r0 := @this: android.renderscript.FieldPacker;

        i0 := @parameter0: int;

        $i1 = r0.<android.renderscript.FieldPacker: int mLen>;

        if i0 != $i1 goto label1;

        return 0;

     label1:
        r1 = newarray (byte)[i0];

        $r2 = r0.<android.renderscript.FieldPacker: byte[] mData>;

        $i2 = r0.<android.renderscript.FieldPacker: int mPos>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, r1, 0, $i2);

        r0.<android.renderscript.FieldPacker: byte[] mData> = r1;

        r0.<android.renderscript.FieldPacker: int mLen> = i0;

        return 1;
    }

    public void addBoolean(boolean)
    {
        android.renderscript.FieldPacker r0;
        boolean z0;
        byte $b0;

        r0 := @this: android.renderscript.FieldPacker;

        z0 := @parameter0: boolean;

        $b0 = (byte) z0;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addI8(byte)>($b0);

        return;
    }

    public void addF32(float)
    {
        android.renderscript.FieldPacker r0;
        float f0;
        int $i0;

        r0 := @this: android.renderscript.FieldPacker;

        f0 := @parameter0: float;

        $i0 = staticinvoke <java.lang.Float: int floatToRawIntBits(float)>(f0);

        virtualinvoke r0.<android.renderscript.FieldPacker: void addI32(int)>($i0);

        return;
    }

    public void addF32(android.renderscript.Float2)
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Float2 r1;
        float $f0, $f1;

        r0 := @this: android.renderscript.FieldPacker;

        r1 := @parameter0: android.renderscript.Float2;

        $f0 = r1.<android.renderscript.Float2: float x>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addF32(float)>($f0);

        $f1 = r1.<android.renderscript.Float2: float y>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addF32(float)>($f1);

        return;
    }

    public void addF32(android.renderscript.Float3)
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Float3 r1;
        float $f0, $f1, $f2;

        r0 := @this: android.renderscript.FieldPacker;

        r1 := @parameter0: android.renderscript.Float3;

        $f0 = r1.<android.renderscript.Float3: float x>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addF32(float)>($f0);

        $f1 = r1.<android.renderscript.Float3: float y>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addF32(float)>($f1);

        $f2 = r1.<android.renderscript.Float3: float z>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addF32(float)>($f2);

        return;
    }

    public void addF32(android.renderscript.Float4)
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Float4 r1;
        float $f0, $f1, $f2, $f3;

        r0 := @this: android.renderscript.FieldPacker;

        r1 := @parameter0: android.renderscript.Float4;

        $f0 = r1.<android.renderscript.Float4: float x>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addF32(float)>($f0);

        $f1 = r1.<android.renderscript.Float4: float y>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addF32(float)>($f1);

        $f2 = r1.<android.renderscript.Float4: float z>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addF32(float)>($f2);

        $f3 = r1.<android.renderscript.Float4: float w>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addF32(float)>($f3);

        return;
    }

    public void addF64(double)
    {
        android.renderscript.FieldPacker r0;
        double d0;
        long $l0;

        r0 := @this: android.renderscript.FieldPacker;

        d0 := @parameter0: double;

        $l0 = staticinvoke <java.lang.Double: long doubleToRawLongBits(double)>(d0);

        virtualinvoke r0.<android.renderscript.FieldPacker: void addI64(long)>($l0);

        return;
    }

    public void addF64(android.renderscript.Double2)
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Double2 r1;
        double $d0, $d1;

        r0 := @this: android.renderscript.FieldPacker;

        r1 := @parameter0: android.renderscript.Double2;

        $d0 = r1.<android.renderscript.Double2: double x>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addF64(double)>($d0);

        $d1 = r1.<android.renderscript.Double2: double y>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addF64(double)>($d1);

        return;
    }

    public void addF64(android.renderscript.Double3)
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Double3 r1;
        double $d0, $d1, $d2;

        r0 := @this: android.renderscript.FieldPacker;

        r1 := @parameter0: android.renderscript.Double3;

        $d0 = r1.<android.renderscript.Double3: double x>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addF64(double)>($d0);

        $d1 = r1.<android.renderscript.Double3: double y>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addF64(double)>($d1);

        $d2 = r1.<android.renderscript.Double3: double z>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addF64(double)>($d2);

        return;
    }

    public void addF64(android.renderscript.Double4)
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Double4 r1;
        double $d0, $d1, $d2, $d3;

        r0 := @this: android.renderscript.FieldPacker;

        r1 := @parameter0: android.renderscript.Double4;

        $d0 = r1.<android.renderscript.Double4: double x>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addF64(double)>($d0);

        $d1 = r1.<android.renderscript.Double4: double y>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addF64(double)>($d1);

        $d2 = r1.<android.renderscript.Double4: double z>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addF64(double)>($d2);

        $d3 = r1.<android.renderscript.Double4: double w>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addF64(double)>($d3);

        return;
    }

    public void addI16(android.renderscript.Short2)
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Short2 r1;
        short $s0, $s1;

        r0 := @this: android.renderscript.FieldPacker;

        r1 := @parameter0: android.renderscript.Short2;

        $s0 = r1.<android.renderscript.Short2: short x>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addI16(short)>($s0);

        $s1 = r1.<android.renderscript.Short2: short y>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addI16(short)>($s1);

        return;
    }

    public void addI16(android.renderscript.Short3)
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Short3 r1;
        short $s0, $s1, $s2;

        r0 := @this: android.renderscript.FieldPacker;

        r1 := @parameter0: android.renderscript.Short3;

        $s0 = r1.<android.renderscript.Short3: short x>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addI16(short)>($s0);

        $s1 = r1.<android.renderscript.Short3: short y>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addI16(short)>($s1);

        $s2 = r1.<android.renderscript.Short3: short z>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addI16(short)>($s2);

        return;
    }

    public void addI16(android.renderscript.Short4)
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Short4 r1;
        short $s0, $s1, $s2, $s3;

        r0 := @this: android.renderscript.FieldPacker;

        r1 := @parameter0: android.renderscript.Short4;

        $s0 = r1.<android.renderscript.Short4: short x>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addI16(short)>($s0);

        $s1 = r1.<android.renderscript.Short4: short y>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addI16(short)>($s1);

        $s2 = r1.<android.renderscript.Short4: short z>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addI16(short)>($s2);

        $s3 = r1.<android.renderscript.Short4: short w>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addI16(short)>($s3);

        return;
    }

    public void addI16(short)
    {
        android.renderscript.FieldPacker r0;
        short s0, $s3, $s7;
        byte[] r1;
        int i1, i2, $i6;
        byte $b4, $b5, $b8, $b9;

        r0 := @this: android.renderscript.FieldPacker;

        s0 := @parameter0: short;

        virtualinvoke r0.<android.renderscript.FieldPacker: void align(int)>(2);

        r1 = r0.<android.renderscript.FieldPacker: byte[] mData>;

        i1 = r0.<android.renderscript.FieldPacker: int mPos>;

        i2 = i1 + 1;

        r0.<android.renderscript.FieldPacker: int mPos> = i2;

        $s3 = s0 & 255;

        $b4 = (byte) $s3;

        $b5 = (byte) $b4;

        r1[i1] = $b5;

        $i6 = i2 + 1;

        r0.<android.renderscript.FieldPacker: int mPos> = $i6;

        $s7 = s0 >> 8;

        $b8 = (byte) $s7;

        $b9 = (byte) $b8;

        r1[i2] = $b9;

        return;
    }

    public void addI32(int)
    {
        android.renderscript.FieldPacker r0;
        int i0, $i1, $i4, $i5, $i8, $i9, $i12, $i13, $i14, i17, i18, i19, i20;
        byte[] r1;
        byte $b2, $b3, $b6, $b7, $b10, $b11, $b15, $b16;

        r0 := @this: android.renderscript.FieldPacker;

        i0 := @parameter0: int;

        virtualinvoke r0.<android.renderscript.FieldPacker: void align(int)>(4);

        r1 = r0.<android.renderscript.FieldPacker: byte[] mData>;

        i17 = r0.<android.renderscript.FieldPacker: int mPos>;

        i18 = i17 + 1;

        r0.<android.renderscript.FieldPacker: int mPos> = i18;

        $i1 = i0 & 255;

        $b2 = (byte) $i1;

        $b3 = (byte) $b2;

        r1[i17] = $b3;

        i19 = i18 + 1;

        r0.<android.renderscript.FieldPacker: int mPos> = i19;

        $i4 = i0 >> 8;

        $i5 = $i4 & 255;

        $b6 = (byte) $i5;

        $b7 = (byte) $b6;

        r1[i18] = $b7;

        i20 = i19 + 1;

        r0.<android.renderscript.FieldPacker: int mPos> = i20;

        $i8 = i0 >> 16;

        $i9 = $i8 & 255;

        $b10 = (byte) $i9;

        $b11 = (byte) $b10;

        r1[i19] = $b11;

        $i12 = i20 + 1;

        r0.<android.renderscript.FieldPacker: int mPos> = $i12;

        $i13 = i0 >> 24;

        $i14 = $i13 & 255;

        $b15 = (byte) $i14;

        $b16 = (byte) $b15;

        r1[i20] = $b16;

        return;
    }

    public void addI32(android.renderscript.Int2)
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Int2 r1;
        int $i0, $i1;

        r0 := @this: android.renderscript.FieldPacker;

        r1 := @parameter0: android.renderscript.Int2;

        $i0 = r1.<android.renderscript.Int2: int x>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addI32(int)>($i0);

        $i1 = r1.<android.renderscript.Int2: int y>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addI32(int)>($i1);

        return;
    }

    public void addI32(android.renderscript.Int3)
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Int3 r1;
        int $i0, $i1, $i2;

        r0 := @this: android.renderscript.FieldPacker;

        r1 := @parameter0: android.renderscript.Int3;

        $i0 = r1.<android.renderscript.Int3: int x>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addI32(int)>($i0);

        $i1 = r1.<android.renderscript.Int3: int y>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addI32(int)>($i1);

        $i2 = r1.<android.renderscript.Int3: int z>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addI32(int)>($i2);

        return;
    }

    public void addI32(android.renderscript.Int4)
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Int4 r1;
        int $i0, $i1, $i2, $i3;

        r0 := @this: android.renderscript.FieldPacker;

        r1 := @parameter0: android.renderscript.Int4;

        $i0 = r1.<android.renderscript.Int4: int x>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addI32(int)>($i0);

        $i1 = r1.<android.renderscript.Int4: int y>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addI32(int)>($i1);

        $i2 = r1.<android.renderscript.Int4: int z>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addI32(int)>($i2);

        $i3 = r1.<android.renderscript.Int4: int w>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addI32(int)>($i3);

        return;
    }

    public void addI64(long)
    {
        android.renderscript.FieldPacker r0;
        long l0, $l2, $l6, $l7, $l11, $l12, $l16, $l17, $l21, $l22, $l26, $l27, $l31, $l32, $l37, $l38;
        byte[] r1;
        int i1, $i3, $i8, $i13, $i18, $i23, $i28, $i33, $i36, $i39, i42, i43, i44, i45, i46, i47, i48;
        byte $b4, $b5, $b9, $b10, $b14, $b15, $b19, $b20, $b24, $b25, $b29, $b30, $b34, $b35, $b40, $b41;

        r0 := @this: android.renderscript.FieldPacker;

        l0 := @parameter0: long;

        virtualinvoke r0.<android.renderscript.FieldPacker: void align(int)>(8);

        r1 = r0.<android.renderscript.FieldPacker: byte[] mData>;

        i42 = r0.<android.renderscript.FieldPacker: int mPos>;

        i43 = i42 + 1;

        r0.<android.renderscript.FieldPacker: int mPos> = i43;

        $l2 = l0 & 255L;

        $i3 = (int) $l2;

        $b4 = (byte) $i3;

        $b5 = (byte) $b4;

        r1[i42] = $b5;

        i44 = i43 + 1;

        r0.<android.renderscript.FieldPacker: int mPos> = i44;

        $l6 = l0 >> 8;

        $l7 = $l6 & 255L;

        $i8 = (int) $l7;

        $b9 = (byte) $i8;

        $b10 = (byte) $b9;

        r1[i43] = $b10;

        i45 = i44 + 1;

        r0.<android.renderscript.FieldPacker: int mPos> = i45;

        $l11 = l0 >> 16;

        $l12 = $l11 & 255L;

        $i13 = (int) $l12;

        $b14 = (byte) $i13;

        $b15 = (byte) $b14;

        r1[i44] = $b15;

        i1 = i45 + 1;

        r0.<android.renderscript.FieldPacker: int mPos> = i1;

        $l16 = l0 >> 24;

        $l17 = $l16 & 255L;

        $i18 = (int) $l17;

        $b19 = (byte) $i18;

        $b20 = (byte) $b19;

        r1[i45] = $b20;

        i46 = i1 + 1;

        r0.<android.renderscript.FieldPacker: int mPos> = i46;

        $l21 = l0 >> 32;

        $l22 = $l21 & 255L;

        $i23 = (int) $l22;

        $b24 = (byte) $i23;

        $b25 = (byte) $b24;

        r1[i1] = $b25;

        i47 = i46 + 1;

        r0.<android.renderscript.FieldPacker: int mPos> = i47;

        $l26 = l0 >> 40;

        $l27 = $l26 & 255L;

        $i28 = (int) $l27;

        $b29 = (byte) $i28;

        $b30 = (byte) $b29;

        r1[i46] = $b30;

        i48 = i47 + 1;

        r0.<android.renderscript.FieldPacker: int mPos> = i48;

        $l31 = l0 >> 48;

        $l32 = $l31 & 255L;

        $i33 = (int) $l32;

        $b34 = (byte) $i33;

        $b35 = (byte) $b34;

        r1[i47] = $b35;

        $i36 = i48 + 1;

        r0.<android.renderscript.FieldPacker: int mPos> = $i36;

        $l37 = l0 >> 56;

        $l38 = $l37 & 255L;

        $i39 = (int) $l38;

        $b40 = (byte) $i39;

        $b41 = (byte) $b40;

        r1[i48] = $b41;

        return;
    }

    public void addI64(android.renderscript.Long2)
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Long2 r1;
        long $l0, $l1;

        r0 := @this: android.renderscript.FieldPacker;

        r1 := @parameter0: android.renderscript.Long2;

        $l0 = r1.<android.renderscript.Long2: long x>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addI64(long)>($l0);

        $l1 = r1.<android.renderscript.Long2: long y>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addI64(long)>($l1);

        return;
    }

    public void addI64(android.renderscript.Long3)
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Long3 r1;
        long $l0, $l1, $l2;

        r0 := @this: android.renderscript.FieldPacker;

        r1 := @parameter0: android.renderscript.Long3;

        $l0 = r1.<android.renderscript.Long3: long x>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addI64(long)>($l0);

        $l1 = r1.<android.renderscript.Long3: long y>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addI64(long)>($l1);

        $l2 = r1.<android.renderscript.Long3: long z>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addI64(long)>($l2);

        return;
    }

    public void addI64(android.renderscript.Long4)
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Long4 r1;
        long $l0, $l1, $l2, $l3;

        r0 := @this: android.renderscript.FieldPacker;

        r1 := @parameter0: android.renderscript.Long4;

        $l0 = r1.<android.renderscript.Long4: long x>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addI64(long)>($l0);

        $l1 = r1.<android.renderscript.Long4: long y>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addI64(long)>($l1);

        $l2 = r1.<android.renderscript.Long4: long z>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addI64(long)>($l2);

        $l3 = r1.<android.renderscript.Long4: long w>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addI64(long)>($l3);

        return;
    }

    public void addI8(byte)
    {
        android.renderscript.FieldPacker r0;
        byte b0, $b3;
        byte[] r1;
        int i1, $i2;

        r0 := @this: android.renderscript.FieldPacker;

        b0 := @parameter0: byte;

        r1 = r0.<android.renderscript.FieldPacker: byte[] mData>;

        i1 = r0.<android.renderscript.FieldPacker: int mPos>;

        $i2 = i1 + 1;

        r0.<android.renderscript.FieldPacker: int mPos> = $i2;

        $b3 = (byte) b0;

        r1[i1] = $b3;

        return;
    }

    public void addI8(android.renderscript.Byte2)
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Byte2 r1;
        byte $b0, $b1;

        r0 := @this: android.renderscript.FieldPacker;

        r1 := @parameter0: android.renderscript.Byte2;

        $b0 = r1.<android.renderscript.Byte2: byte x>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addI8(byte)>($b0);

        $b1 = r1.<android.renderscript.Byte2: byte y>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addI8(byte)>($b1);

        return;
    }

    public void addI8(android.renderscript.Byte3)
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Byte3 r1;
        byte $b0, $b1, $b2;

        r0 := @this: android.renderscript.FieldPacker;

        r1 := @parameter0: android.renderscript.Byte3;

        $b0 = r1.<android.renderscript.Byte3: byte x>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addI8(byte)>($b0);

        $b1 = r1.<android.renderscript.Byte3: byte y>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addI8(byte)>($b1);

        $b2 = r1.<android.renderscript.Byte3: byte z>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addI8(byte)>($b2);

        return;
    }

    public void addI8(android.renderscript.Byte4)
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Byte4 r1;
        byte $b0, $b1, $b2, $b3;

        r0 := @this: android.renderscript.FieldPacker;

        r1 := @parameter0: android.renderscript.Byte4;

        $b0 = r1.<android.renderscript.Byte4: byte x>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addI8(byte)>($b0);

        $b1 = r1.<android.renderscript.Byte4: byte y>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addI8(byte)>($b1);

        $b2 = r1.<android.renderscript.Byte4: byte z>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addI8(byte)>($b2);

        $b3 = r1.<android.renderscript.Byte4: byte w>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addI8(byte)>($b3);

        return;
    }

    public void addMatrix(android.renderscript.Matrix2f)
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Matrix2f r1;
        float[] $r2, $r3;
        int $i0, i1;
        float $f0;

        r0 := @this: android.renderscript.FieldPacker;

        r1 := @parameter0: android.renderscript.Matrix2f;

        i1 = 0;

     label1:
        $r2 = r1.<android.renderscript.Matrix2f: float[] mMat>;

        $i0 = lengthof $r2;

        if i1 >= $i0 goto label2;

        $r3 = r1.<android.renderscript.Matrix2f: float[] mMat>;

        $f0 = $r3[i1];

        virtualinvoke r0.<android.renderscript.FieldPacker: void addF32(float)>($f0);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public void addMatrix(android.renderscript.Matrix3f)
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Matrix3f r1;
        float[] $r2, $r3;
        int $i0, i1;
        float $f0;

        r0 := @this: android.renderscript.FieldPacker;

        r1 := @parameter0: android.renderscript.Matrix3f;

        i1 = 0;

     label1:
        $r2 = r1.<android.renderscript.Matrix3f: float[] mMat>;

        $i0 = lengthof $r2;

        if i1 >= $i0 goto label2;

        $r3 = r1.<android.renderscript.Matrix3f: float[] mMat>;

        $f0 = $r3[i1];

        virtualinvoke r0.<android.renderscript.FieldPacker: void addF32(float)>($f0);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public void addMatrix(android.renderscript.Matrix4f)
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Matrix4f r1;
        float[] $r2, $r3;
        int $i0, i1;
        float $f0;

        r0 := @this: android.renderscript.FieldPacker;

        r1 := @parameter0: android.renderscript.Matrix4f;

        i1 = 0;

     label1:
        $r2 = r1.<android.renderscript.Matrix4f: float[] mMat>;

        $i0 = lengthof $r2;

        if i1 >= $i0 goto label2;

        $r3 = r1.<android.renderscript.Matrix4f: float[] mMat>;

        $f0 = $r3[i1];

        virtualinvoke r0.<android.renderscript.FieldPacker: void addF32(float)>($f0);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public void addObj(android.renderscript.BaseObj)
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.BaseObj r1;
        int $i0, $i1, $i3;
        long $l2, $l4;

        r0 := @this: android.renderscript.FieldPacker;

        r1 := @parameter0: android.renderscript.BaseObj;

        if r1 == null goto label2;

        $i1 = <android.renderscript.RenderScript: int sPointerSize>;

        if $i1 != 8 goto label1;

        $l4 = virtualinvoke r1.<android.renderscript.BaseObj: long getID(android.renderscript.RenderScript)>(null);

        virtualinvoke r0.<android.renderscript.FieldPacker: void addI64(long)>($l4);

        virtualinvoke r0.<android.renderscript.FieldPacker: void addI64(long)>(0L);

        virtualinvoke r0.<android.renderscript.FieldPacker: void addI64(long)>(0L);

        virtualinvoke r0.<android.renderscript.FieldPacker: void addI64(long)>(0L);

        goto label4;

     label1:
        $l2 = virtualinvoke r1.<android.renderscript.BaseObj: long getID(android.renderscript.RenderScript)>(null);

        $i3 = (int) $l2;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addI32(int)>($i3);

        goto label4;

     label2:
        $i0 = <android.renderscript.RenderScript: int sPointerSize>;

        if $i0 != 8 goto label3;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addI64(long)>(0L);

        virtualinvoke r0.<android.renderscript.FieldPacker: void addI64(long)>(0L);

        virtualinvoke r0.<android.renderscript.FieldPacker: void addI64(long)>(0L);

        virtualinvoke r0.<android.renderscript.FieldPacker: void addI64(long)>(0L);

        goto label4;

     label3:
        virtualinvoke r0.<android.renderscript.FieldPacker: void addI32(int)>(0);

     label4:
        return;
    }

    public void addU16(int)
    {
        android.renderscript.FieldPacker r0;
        int i0, i1, i2, $i4, $i7, $i8;
        java.lang.StringBuilder $r1;
        java.lang.String $r5;
        java.lang.IllegalArgumentException $r6;
        byte $b5, $b6, $b9, $b10;
        byte[] r7;

        r0 := @this: android.renderscript.FieldPacker;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        if i0 > 65535 goto label1;

        virtualinvoke r0.<android.renderscript.FieldPacker: void align(int)>(2);

        r7 = r0.<android.renderscript.FieldPacker: byte[] mData>;

        i1 = r0.<android.renderscript.FieldPacker: int mPos>;

        i2 = i1 + 1;

        r0.<android.renderscript.FieldPacker: int mPos> = i2;

        $i4 = i0 & 255;

        $b5 = (byte) $i4;

        $b6 = (byte) $b5;

        r7[i1] = $b6;

        $i7 = i2 + 1;

        r0.<android.renderscript.FieldPacker: int mPos> = $i7;

        $i8 = i0 >> 8;

        $b9 = (byte) $i8;

        $b10 = (byte) $b9;

        r7[i2] = $b10;

        return;

     label1:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FieldPacker.addU16( ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" )");

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("rs", $r5);

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Saving value out of range for type");

        throw $r6;
    }

    public void addU16(android.renderscript.Int2)
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Int2 r1;
        int $i0, $i1;

        r0 := @this: android.renderscript.FieldPacker;

        r1 := @parameter0: android.renderscript.Int2;

        $i0 = r1.<android.renderscript.Int2: int x>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addU16(int)>($i0);

        $i1 = r1.<android.renderscript.Int2: int y>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addU16(int)>($i1);

        return;
    }

    public void addU16(android.renderscript.Int3)
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Int3 r1;
        int $i0, $i1, $i2;

        r0 := @this: android.renderscript.FieldPacker;

        r1 := @parameter0: android.renderscript.Int3;

        $i0 = r1.<android.renderscript.Int3: int x>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addU16(int)>($i0);

        $i1 = r1.<android.renderscript.Int3: int y>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addU16(int)>($i1);

        $i2 = r1.<android.renderscript.Int3: int z>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addU16(int)>($i2);

        return;
    }

    public void addU16(android.renderscript.Int4)
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Int4 r1;
        int $i0, $i1, $i2, $i3;

        r0 := @this: android.renderscript.FieldPacker;

        r1 := @parameter0: android.renderscript.Int4;

        $i0 = r1.<android.renderscript.Int4: int x>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addU16(int)>($i0);

        $i1 = r1.<android.renderscript.Int4: int y>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addU16(int)>($i1);

        $i2 = r1.<android.renderscript.Int4: int z>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addU16(int)>($i2);

        $i3 = r1.<android.renderscript.Int4: int w>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addU16(int)>($i3);

        return;
    }

    public void addU32(long)
    {
        android.renderscript.FieldPacker r0;
        long l0, $l4, $l8, $l9, $l13, $l14, $l19, $l20;
        byte $b1, $b3, $b6, $b7, $b11, $b12, $b16, $b17, $b22, $b23;
        java.lang.StringBuilder $r1;
        java.lang.String $r5;
        java.lang.IllegalArgumentException $r6;
        int $i5, $i10, $i15, $i18, $i21, i24, i25, i26, i27;
        byte[] r7;

        r0 := @this: android.renderscript.FieldPacker;

        l0 := @parameter0: long;

        $b1 = l0 cmp 0L;

        if $b1 < 0 goto label1;

        $b3 = l0 cmp 4294967295L;

        if $b3 > 0 goto label1;

        virtualinvoke r0.<android.renderscript.FieldPacker: void align(int)>(4);

        r7 = r0.<android.renderscript.FieldPacker: byte[] mData>;

        i24 = r0.<android.renderscript.FieldPacker: int mPos>;

        i25 = i24 + 1;

        r0.<android.renderscript.FieldPacker: int mPos> = i25;

        $l4 = l0 & 255L;

        $i5 = (int) $l4;

        $b6 = (byte) $i5;

        $b7 = (byte) $b6;

        r7[i24] = $b7;

        i26 = i25 + 1;

        r0.<android.renderscript.FieldPacker: int mPos> = i26;

        $l8 = l0 >> 8;

        $l9 = $l8 & 255L;

        $i10 = (int) $l9;

        $b11 = (byte) $i10;

        $b12 = (byte) $b11;

        r7[i25] = $b12;

        i27 = i26 + 1;

        r0.<android.renderscript.FieldPacker: int mPos> = i27;

        $l13 = l0 >> 16;

        $l14 = $l13 & 255L;

        $i15 = (int) $l14;

        $b16 = (byte) $i15;

        $b17 = (byte) $b16;

        r7[i26] = $b17;

        $i18 = i27 + 1;

        r0.<android.renderscript.FieldPacker: int mPos> = $i18;

        $l19 = l0 >> 24;

        $l20 = 255L & $l19;

        $i21 = (int) $l20;

        $b22 = (byte) $i21;

        $b23 = (byte) $b22;

        r7[i27] = $b23;

        return;

     label1:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FieldPacker.addU32( ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" )");

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("rs", $r5);

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Saving value out of range for type");

        throw $r6;
    }

    public void addU32(android.renderscript.Long2)
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Long2 r1;
        long $l0, $l1;

        r0 := @this: android.renderscript.FieldPacker;

        r1 := @parameter0: android.renderscript.Long2;

        $l0 = r1.<android.renderscript.Long2: long x>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addU32(long)>($l0);

        $l1 = r1.<android.renderscript.Long2: long y>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addU32(long)>($l1);

        return;
    }

    public void addU32(android.renderscript.Long3)
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Long3 r1;
        long $l0, $l1, $l2;

        r0 := @this: android.renderscript.FieldPacker;

        r1 := @parameter0: android.renderscript.Long3;

        $l0 = r1.<android.renderscript.Long3: long x>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addU32(long)>($l0);

        $l1 = r1.<android.renderscript.Long3: long y>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addU32(long)>($l1);

        $l2 = r1.<android.renderscript.Long3: long z>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addU32(long)>($l2);

        return;
    }

    public void addU32(android.renderscript.Long4)
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Long4 r1;
        long $l0, $l1, $l2, $l3;

        r0 := @this: android.renderscript.FieldPacker;

        r1 := @parameter0: android.renderscript.Long4;

        $l0 = r1.<android.renderscript.Long4: long x>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addU32(long)>($l0);

        $l1 = r1.<android.renderscript.Long4: long y>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addU32(long)>($l1);

        $l2 = r1.<android.renderscript.Long4: long z>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addU32(long)>($l2);

        $l3 = r1.<android.renderscript.Long4: long w>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addU32(long)>($l3);

        return;
    }

    public void addU64(long)
    {
        android.renderscript.FieldPacker r0;
        long l0, $l3, $l7, $l8, $l12, $l13, $l17, $l18, $l22, $l23, $l27, $l28, $l32, $l33, $l38, $l39;
        byte $b1, $b5, $b6, $b10, $b11, $b15, $b16, $b20, $b21, $b25, $b26, $b30, $b31, $b35, $b36, $b41, $b42;
        java.lang.StringBuilder $r1;
        java.lang.String $r5;
        java.lang.IllegalArgumentException $r6;
        int $i4, $i9, $i14, $i19, $i24, $i29, $i34, $i37, $i40, i43, i44, i45, i46, i47, i48, i49, i50;
        byte[] r7;

        r0 := @this: android.renderscript.FieldPacker;

        l0 := @parameter0: long;

        $b1 = l0 cmp 0L;

        if $b1 < 0 goto label1;

        virtualinvoke r0.<android.renderscript.FieldPacker: void align(int)>(8);

        r7 = r0.<android.renderscript.FieldPacker: byte[] mData>;

        i43 = r0.<android.renderscript.FieldPacker: int mPos>;

        i44 = i43 + 1;

        r0.<android.renderscript.FieldPacker: int mPos> = i44;

        $l3 = l0 & 255L;

        $i4 = (int) $l3;

        $b5 = (byte) $i4;

        $b6 = (byte) $b5;

        r7[i43] = $b6;

        i45 = i44 + 1;

        r0.<android.renderscript.FieldPacker: int mPos> = i45;

        $l7 = l0 >> 8;

        $l8 = $l7 & 255L;

        $i9 = (int) $l8;

        $b10 = (byte) $i9;

        $b11 = (byte) $b10;

        r7[i44] = $b11;

        i46 = i45 + 1;

        r0.<android.renderscript.FieldPacker: int mPos> = i46;

        $l12 = l0 >> 16;

        $l13 = $l12 & 255L;

        $i14 = (int) $l13;

        $b15 = (byte) $i14;

        $b16 = (byte) $b15;

        r7[i45] = $b16;

        i47 = i46 + 1;

        r0.<android.renderscript.FieldPacker: int mPos> = i47;

        $l17 = l0 >> 24;

        $l18 = $l17 & 255L;

        $i19 = (int) $l18;

        $b20 = (byte) $i19;

        $b21 = (byte) $b20;

        r7[i46] = $b21;

        i48 = i47 + 1;

        r0.<android.renderscript.FieldPacker: int mPos> = i48;

        $l22 = l0 >> 32;

        $l23 = $l22 & 255L;

        $i24 = (int) $l23;

        $b25 = (byte) $i24;

        $b26 = (byte) $b25;

        r7[i47] = $b26;

        i49 = i48 + 1;

        r0.<android.renderscript.FieldPacker: int mPos> = i49;

        $l27 = l0 >> 40;

        $l28 = $l27 & 255L;

        $i29 = (int) $l28;

        $b30 = (byte) $i29;

        $b31 = (byte) $b30;

        r7[i48] = $b31;

        i50 = i49 + 1;

        r0.<android.renderscript.FieldPacker: int mPos> = i50;

        $l32 = l0 >> 48;

        $l33 = $l32 & 255L;

        $i34 = (int) $l33;

        $b35 = (byte) $i34;

        $b36 = (byte) $b35;

        r7[i49] = $b36;

        $i37 = i50 + 1;

        r0.<android.renderscript.FieldPacker: int mPos> = $i37;

        $l38 = l0 >> 56;

        $l39 = $l38 & 255L;

        $i40 = (int) $l39;

        $b41 = (byte) $i40;

        $b42 = (byte) $b41;

        r7[i50] = $b42;

        return;

     label1:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FieldPacker.addU64( ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" )");

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("rs", $r5);

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Saving value out of range for type");

        throw $r6;
    }

    public void addU64(android.renderscript.Long2)
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Long2 r1;
        long $l0, $l1;

        r0 := @this: android.renderscript.FieldPacker;

        r1 := @parameter0: android.renderscript.Long2;

        $l0 = r1.<android.renderscript.Long2: long x>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addU64(long)>($l0);

        $l1 = r1.<android.renderscript.Long2: long y>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addU64(long)>($l1);

        return;
    }

    public void addU64(android.renderscript.Long3)
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Long3 r1;
        long $l0, $l1, $l2;

        r0 := @this: android.renderscript.FieldPacker;

        r1 := @parameter0: android.renderscript.Long3;

        $l0 = r1.<android.renderscript.Long3: long x>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addU64(long)>($l0);

        $l1 = r1.<android.renderscript.Long3: long y>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addU64(long)>($l1);

        $l2 = r1.<android.renderscript.Long3: long z>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addU64(long)>($l2);

        return;
    }

    public void addU64(android.renderscript.Long4)
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Long4 r1;
        long $l0, $l1, $l2, $l3;

        r0 := @this: android.renderscript.FieldPacker;

        r1 := @parameter0: android.renderscript.Long4;

        $l0 = r1.<android.renderscript.Long4: long x>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addU64(long)>($l0);

        $l1 = r1.<android.renderscript.Long4: long y>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addU64(long)>($l1);

        $l2 = r1.<android.renderscript.Long4: long z>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addU64(long)>($l2);

        $l3 = r1.<android.renderscript.Long4: long w>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addU64(long)>($l3);

        return;
    }

    public void addU8(android.renderscript.Short2)
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Short2 r1;
        short $s0, $s1;

        r0 := @this: android.renderscript.FieldPacker;

        r1 := @parameter0: android.renderscript.Short2;

        $s0 = r1.<android.renderscript.Short2: short x>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addU8(short)>($s0);

        $s1 = r1.<android.renderscript.Short2: short y>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addU8(short)>($s1);

        return;
    }

    public void addU8(android.renderscript.Short3)
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Short3 r1;
        short $s0, $s1, $s2;

        r0 := @this: android.renderscript.FieldPacker;

        r1 := @parameter0: android.renderscript.Short3;

        $s0 = r1.<android.renderscript.Short3: short x>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addU8(short)>($s0);

        $s1 = r1.<android.renderscript.Short3: short y>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addU8(short)>($s1);

        $s2 = r1.<android.renderscript.Short3: short z>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addU8(short)>($s2);

        return;
    }

    public void addU8(android.renderscript.Short4)
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Short4 r1;
        short $s0, $s1, $s2, $s3;

        r0 := @this: android.renderscript.FieldPacker;

        r1 := @parameter0: android.renderscript.Short4;

        $s0 = r1.<android.renderscript.Short4: short x>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addU8(short)>($s0);

        $s1 = r1.<android.renderscript.Short4: short y>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addU8(short)>($s1);

        $s2 = r1.<android.renderscript.Short4: short z>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addU8(short)>($s2);

        $s3 = r1.<android.renderscript.Short4: short w>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addU8(short)>($s3);

        return;
    }

    public void addU8(short)
    {
        android.renderscript.FieldPacker r0;
        short s0;
        int i1, $i3;
        java.lang.StringBuilder $r1;
        java.lang.String $r5;
        java.lang.IllegalArgumentException $r6;
        byte $b4, $b5;
        byte[] r7;

        r0 := @this: android.renderscript.FieldPacker;

        s0 := @parameter0: short;

        if s0 < 0 goto label1;

        if s0 > 255 goto label1;

        r7 = r0.<android.renderscript.FieldPacker: byte[] mData>;

        i1 = r0.<android.renderscript.FieldPacker: int mPos>;

        $i3 = i1 + 1;

        r0.<android.renderscript.FieldPacker: int mPos> = $i3;

        $b4 = (byte) s0;

        $b5 = (byte) $b4;

        r7[i1] = $b5;

        return;

     label1:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FieldPacker.addU8( ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(s0);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" )");

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("rs", $r5);

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Saving value out of range for type");

        throw $r6;
    }

    public void align(int)
    {
        android.renderscript.FieldPacker r0;
        int i0, $i1, $i2, $i3, $i4, $i5, i7, i8;
        java.lang.StringBuilder $r1;
        android.renderscript.RSIllegalArgumentException $r4;
        java.lang.String $r5;
        java.util.BitSet $r6;
        byte $b6;
        byte[] r7;

        r0 := @this: android.renderscript.FieldPacker;

        i0 := @parameter0: int;

        if i0 <= 0 goto label3;

        $i1 = i0 - 1;

        $i2 = $i1 & i0;

        if $i2 != 0 goto label3;

     label1:
        i7 = r0.<android.renderscript.FieldPacker: int mPos>;

        $i3 = i0 - 1;

        $i4 = $i3 & i7;

        if $i4 == 0 goto label2;

        $r6 = r0.<android.renderscript.FieldPacker: java.util.BitSet mAlignment>;

        virtualinvoke $r6.<java.util.BitSet: void flip(int)>(i7);

        r7 = r0.<android.renderscript.FieldPacker: byte[] mData>;

        i8 = r0.<android.renderscript.FieldPacker: int mPos>;

        $i5 = i8 + 1;

        r0.<android.renderscript.FieldPacker: int mPos> = $i5;

        $b6 = (byte) 0;

        r7[i8] = $b6;

        goto label1;

     label2:
        return;

     label3:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("argument must be a non-negative non-zero power of 2: ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = new android.renderscript.RSIllegalArgumentException;

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<android.renderscript.RSIllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r4;
    }

    public final byte[] getData()
    {
        android.renderscript.FieldPacker r0;
        byte[] $r1;

        r0 := @this: android.renderscript.FieldPacker;

        $r1 = r0.<android.renderscript.FieldPacker: byte[] mData>;

        return $r1;
    }

    public int getPos()
    {
        android.renderscript.FieldPacker r0;
        int $i0;

        r0 := @this: android.renderscript.FieldPacker;

        $i0 = r0.<android.renderscript.FieldPacker: int mPos>;

        return $i0;
    }

    public void reset()
    {
        android.renderscript.FieldPacker r0;

        r0 := @this: android.renderscript.FieldPacker;

        r0.<android.renderscript.FieldPacker: int mPos> = 0;

        return;
    }

    public void reset(int)
    {
        android.renderscript.FieldPacker r0;
        int i0, $i1;
        java.lang.StringBuilder $r2;
        android.renderscript.RSIllegalArgumentException $r5;
        java.lang.String $r6;

        r0 := @this: android.renderscript.FieldPacker;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        $i1 = r0.<android.renderscript.FieldPacker: int mLen>;

        if i0 > $i1 goto label1;

        r0.<android.renderscript.FieldPacker: int mPos> = i0;

        return;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("out of range argument: ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = new android.renderscript.RSIllegalArgumentException;

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<android.renderscript.RSIllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r5;
    }

    public void skip(int)
    {
        android.renderscript.FieldPacker r0;
        int i0, i1, $i2, $i3;
        java.lang.StringBuilder $r2;
        android.renderscript.RSIllegalArgumentException $r5;
        java.lang.String $r6;

        r0 := @this: android.renderscript.FieldPacker;

        i0 := @parameter0: int;

        $i2 = r0.<android.renderscript.FieldPacker: int mPos>;

        i1 = $i2 + i0;

        if i1 < 0 goto label1;

        $i3 = r0.<android.renderscript.FieldPacker: int mLen>;

        if i1 > $i3 goto label1;

        r0.<android.renderscript.FieldPacker: int mPos> = i1;

        return;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("out of range argument: ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = new android.renderscript.RSIllegalArgumentException;

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<android.renderscript.RSIllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r5;
    }

    public boolean subBoolean()
    {
        android.renderscript.FieldPacker r0;
        byte $b0;

        r0 := @this: android.renderscript.FieldPacker;

        $b0 = virtualinvoke r0.<android.renderscript.FieldPacker: byte subI8()>();

        if $b0 != 1 goto label1;

        return 1;

     label1:
        return 0;
    }

    public android.renderscript.Byte2 subByte2()
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Byte2 $r2;
        byte $b0, $b1;

        r0 := @this: android.renderscript.FieldPacker;

        $r2 = new android.renderscript.Byte2;

        specialinvoke $r2.<android.renderscript.Byte2: void <init>()>();

        $b0 = virtualinvoke r0.<android.renderscript.FieldPacker: byte subI8()>();

        $r2.<android.renderscript.Byte2: byte y> = $b0;

        $b1 = virtualinvoke r0.<android.renderscript.FieldPacker: byte subI8()>();

        $r2.<android.renderscript.Byte2: byte x> = $b1;

        return $r2;
    }

    public android.renderscript.Byte3 subByte3()
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Byte3 $r2;
        byte $b0, $b1, $b2;

        r0 := @this: android.renderscript.FieldPacker;

        $r2 = new android.renderscript.Byte3;

        specialinvoke $r2.<android.renderscript.Byte3: void <init>()>();

        $b0 = virtualinvoke r0.<android.renderscript.FieldPacker: byte subI8()>();

        $r2.<android.renderscript.Byte3: byte z> = $b0;

        $b1 = virtualinvoke r0.<android.renderscript.FieldPacker: byte subI8()>();

        $r2.<android.renderscript.Byte3: byte y> = $b1;

        $b2 = virtualinvoke r0.<android.renderscript.FieldPacker: byte subI8()>();

        $r2.<android.renderscript.Byte3: byte x> = $b2;

        return $r2;
    }

    public android.renderscript.Byte4 subByte4()
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Byte4 $r2;
        byte $b0, $b1, $b2, $b3;

        r0 := @this: android.renderscript.FieldPacker;

        $r2 = new android.renderscript.Byte4;

        specialinvoke $r2.<android.renderscript.Byte4: void <init>()>();

        $b0 = virtualinvoke r0.<android.renderscript.FieldPacker: byte subI8()>();

        $r2.<android.renderscript.Byte4: byte w> = $b0;

        $b1 = virtualinvoke r0.<android.renderscript.FieldPacker: byte subI8()>();

        $r2.<android.renderscript.Byte4: byte z> = $b1;

        $b2 = virtualinvoke r0.<android.renderscript.FieldPacker: byte subI8()>();

        $r2.<android.renderscript.Byte4: byte y> = $b2;

        $b3 = virtualinvoke r0.<android.renderscript.FieldPacker: byte subI8()>();

        $r2.<android.renderscript.Byte4: byte x> = $b3;

        return $r2;
    }

    public android.renderscript.Double2 subDouble2()
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Double2 $r2;
        double $d0, $d1;

        r0 := @this: android.renderscript.FieldPacker;

        $r2 = new android.renderscript.Double2;

        specialinvoke $r2.<android.renderscript.Double2: void <init>()>();

        $d0 = virtualinvoke r0.<android.renderscript.FieldPacker: double subF64()>();

        $r2.<android.renderscript.Double2: double y> = $d0;

        $d1 = virtualinvoke r0.<android.renderscript.FieldPacker: double subF64()>();

        $r2.<android.renderscript.Double2: double x> = $d1;

        return $r2;
    }

    public android.renderscript.Double3 subDouble3()
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Double3 $r2;
        double $d0, $d1, $d2;

        r0 := @this: android.renderscript.FieldPacker;

        $r2 = new android.renderscript.Double3;

        specialinvoke $r2.<android.renderscript.Double3: void <init>()>();

        $d0 = virtualinvoke r0.<android.renderscript.FieldPacker: double subF64()>();

        $r2.<android.renderscript.Double3: double z> = $d0;

        $d1 = virtualinvoke r0.<android.renderscript.FieldPacker: double subF64()>();

        $r2.<android.renderscript.Double3: double y> = $d1;

        $d2 = virtualinvoke r0.<android.renderscript.FieldPacker: double subF64()>();

        $r2.<android.renderscript.Double3: double x> = $d2;

        return $r2;
    }

    public android.renderscript.Double4 subDouble4()
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Double4 $r2;
        double $d0, $d1, $d2, $d3;

        r0 := @this: android.renderscript.FieldPacker;

        $r2 = new android.renderscript.Double4;

        specialinvoke $r2.<android.renderscript.Double4: void <init>()>();

        $d0 = virtualinvoke r0.<android.renderscript.FieldPacker: double subF64()>();

        $r2.<android.renderscript.Double4: double w> = $d0;

        $d1 = virtualinvoke r0.<android.renderscript.FieldPacker: double subF64()>();

        $r2.<android.renderscript.Double4: double z> = $d1;

        $d2 = virtualinvoke r0.<android.renderscript.FieldPacker: double subF64()>();

        $r2.<android.renderscript.Double4: double y> = $d2;

        $d3 = virtualinvoke r0.<android.renderscript.FieldPacker: double subF64()>();

        $r2.<android.renderscript.Double4: double x> = $d3;

        return $r2;
    }

    public float subF32()
    {
        android.renderscript.FieldPacker r0;
        int $i0;
        float $f0;

        r0 := @this: android.renderscript.FieldPacker;

        $i0 = virtualinvoke r0.<android.renderscript.FieldPacker: int subI32()>();

        $f0 = staticinvoke <java.lang.Float: float intBitsToFloat(int)>($i0);

        return $f0;
    }

    public double subF64()
    {
        android.renderscript.FieldPacker r0;
        long $l0;
        double $d0;

        r0 := @this: android.renderscript.FieldPacker;

        $l0 = virtualinvoke r0.<android.renderscript.FieldPacker: long subI64()>();

        $d0 = staticinvoke <java.lang.Double: double longBitsToDouble(long)>($l0);

        return $d0;
    }

    public android.renderscript.Float2 subFloat2()
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Float2 $r2;
        float $f0, $f1;

        r0 := @this: android.renderscript.FieldPacker;

        $r2 = new android.renderscript.Float2;

        specialinvoke $r2.<android.renderscript.Float2: void <init>()>();

        $f0 = virtualinvoke r0.<android.renderscript.FieldPacker: float subF32()>();

        $r2.<android.renderscript.Float2: float y> = $f0;

        $f1 = virtualinvoke r0.<android.renderscript.FieldPacker: float subF32()>();

        $r2.<android.renderscript.Float2: float x> = $f1;

        return $r2;
    }

    public android.renderscript.Float3 subFloat3()
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Float3 $r2;
        float $f0, $f1, $f2;

        r0 := @this: android.renderscript.FieldPacker;

        $r2 = new android.renderscript.Float3;

        specialinvoke $r2.<android.renderscript.Float3: void <init>()>();

        $f0 = virtualinvoke r0.<android.renderscript.FieldPacker: float subF32()>();

        $r2.<android.renderscript.Float3: float z> = $f0;

        $f1 = virtualinvoke r0.<android.renderscript.FieldPacker: float subF32()>();

        $r2.<android.renderscript.Float3: float y> = $f1;

        $f2 = virtualinvoke r0.<android.renderscript.FieldPacker: float subF32()>();

        $r2.<android.renderscript.Float3: float x> = $f2;

        return $r2;
    }

    public android.renderscript.Float4 subFloat4()
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Float4 $r2;
        float $f0, $f1, $f2, $f3;

        r0 := @this: android.renderscript.FieldPacker;

        $r2 = new android.renderscript.Float4;

        specialinvoke $r2.<android.renderscript.Float4: void <init>()>();

        $f0 = virtualinvoke r0.<android.renderscript.FieldPacker: float subF32()>();

        $r2.<android.renderscript.Float4: float w> = $f0;

        $f1 = virtualinvoke r0.<android.renderscript.FieldPacker: float subF32()>();

        $r2.<android.renderscript.Float4: float z> = $f1;

        $f2 = virtualinvoke r0.<android.renderscript.FieldPacker: float subF32()>();

        $r2.<android.renderscript.Float4: float y> = $f2;

        $f3 = virtualinvoke r0.<android.renderscript.FieldPacker: float subF32()>();

        $r2.<android.renderscript.Float4: float x> = $f3;

        return $r2;
    }

    public short subI16()
    {
        android.renderscript.FieldPacker r0;
        byte[] r1;
        short s0, $s3, $s6, $s7, $s8, $s9;
        int $i1, $i4, i10, i11;
        byte $b2, $b5;

        r0 := @this: android.renderscript.FieldPacker;

        virtualinvoke r0.<android.renderscript.FieldPacker: void subalign(int)>(2);

        r1 = r0.<android.renderscript.FieldPacker: byte[] mData>;

        $i1 = r0.<android.renderscript.FieldPacker: int mPos>;

        i10 = $i1 - 1;

        r0.<android.renderscript.FieldPacker: int mPos> = i10;

        $b2 = r1[i10];

        $s3 = $b2 & 255;

        $i4 = $s3 << 8;

        s0 = (short) $i4;

        i11 = i10 + -1;

        r0.<android.renderscript.FieldPacker: int mPos> = i11;

        $b5 = r1[i11];

        $s6 = $b5 & 255;

        $s7 = (short) $s6;

        $s8 = $s7 | s0;

        $s9 = (short) $s8;

        return $s9;
    }

    public int subI32()
    {
        android.renderscript.FieldPacker r0;
        byte[] r1;
        byte b0, $b9, b15, b17;
        int $i1, $i4, $i5, $i7, $i8, $i11, $i12, i13, i14, i16, i18;
        short $s2, $s3, $s6, $s10;

        r0 := @this: android.renderscript.FieldPacker;

        virtualinvoke r0.<android.renderscript.FieldPacker: void subalign(int)>(4);

        r1 = r0.<android.renderscript.FieldPacker: byte[] mData>;

        $i1 = r0.<android.renderscript.FieldPacker: int mPos>;

        i13 = $i1 - 1;

        r0.<android.renderscript.FieldPacker: int mPos> = i13;

        b0 = r1[i13];

        i14 = i13 - 1;

        r0.<android.renderscript.FieldPacker: int mPos> = i14;

        b15 = r1[i14];

        i16 = i14 - 1;

        r0.<android.renderscript.FieldPacker: int mPos> = i16;

        b17 = r1[i16];

        i18 = i16 + -1;

        r0.<android.renderscript.FieldPacker: int mPos> = i18;

        $s2 = b0 & 255;

        $i5 = $s2 << 24;

        $s3 = b15 & 255;

        $i4 = $s3 << 16;

        $i8 = $i5 | $i4;

        $s6 = b17 & 255;

        $i7 = $s6 << 8;

        $i11 = $i8 | $i7;

        $b9 = r1[i18];

        $s10 = $b9 & 255;

        $i12 = $i11 | $s10;

        return $i12;
    }

    public long subI64()
    {
        android.renderscript.FieldPacker r0;
        byte[] r1;
        long l0, l1, l2, l3, l4, l5, l6, $l15, $l16, $l17, $l18, $l19, $l20, $l21, $l22, $l23, $l24, $l25, $l26, $l27, $l28, $l29, $l30, $l31, $l32, $l33, $l34, $l36, $l37, $l38, $l39;
        int $i7, i40, i41, i42, i43, i44, i45, i46, i47;
        byte $b8, $b9, $b10, $b11, $b12, $b13, $b14, $b35;

        r0 := @this: android.renderscript.FieldPacker;

        virtualinvoke r0.<android.renderscript.FieldPacker: void subalign(int)>(8);

        r1 = r0.<android.renderscript.FieldPacker: byte[] mData>;

        $i7 = r0.<android.renderscript.FieldPacker: int mPos>;

        i40 = $i7 - 1;

        r0.<android.renderscript.FieldPacker: int mPos> = i40;

        $b8 = r1[i40];

        l0 = (long) $b8;

        i41 = i40 + -1;

        r0.<android.renderscript.FieldPacker: int mPos> = i41;

        $b9 = r1[i41];

        l1 = (long) $b9;

        i42 = i41 + -1;

        r0.<android.renderscript.FieldPacker: int mPos> = i42;

        $b10 = r1[i42];

        l2 = (long) $b10;

        i43 = i42 + -1;

        r0.<android.renderscript.FieldPacker: int mPos> = i43;

        $b11 = r1[i43];

        l3 = (long) $b11;

        i44 = i43 + -1;

        r0.<android.renderscript.FieldPacker: int mPos> = i44;

        $b12 = r1[i44];

        l4 = (long) $b12;

        i45 = i44 + -1;

        r0.<android.renderscript.FieldPacker: int mPos> = i45;

        $b13 = r1[i45];

        l5 = (long) $b13;

        i46 = i45 + -1;

        r0.<android.renderscript.FieldPacker: int mPos> = i46;

        $b14 = r1[i46];

        l6 = (long) $b14;

        i47 = i46 + -1;

        r0.<android.renderscript.FieldPacker: int mPos> = i47;

        $l15 = l0 & 255L;

        $l16 = $l15 << 56;

        $l19 = 0L | $l16;

        $l17 = l1 & 255L;

        $l18 = $l17 << 48;

        $l22 = $l19 | $l18;

        $l20 = l2 & 255L;

        $l21 = $l20 << 40;

        $l25 = $l22 | $l21;

        $l23 = l3 & 255L;

        $l24 = $l23 << 32;

        $l28 = $l25 | $l24;

        $l26 = l4 & 255L;

        $l27 = $l26 << 24;

        $l31 = $l28 | $l27;

        $l29 = l5 & 255L;

        $l30 = $l29 << 16;

        $l34 = $l31 | $l30;

        $l32 = l6 & 255L;

        $l33 = $l32 << 8;

        $l38 = $l34 | $l33;

        $b35 = r1[i47];

        $l36 = (long) $b35;

        $l37 = $l36 & 255L;

        $l39 = $l38 | $l37;

        return $l39;
    }

    public byte subI8()
    {
        android.renderscript.FieldPacker r0;
        byte[] r1;
        int i0, $i1;
        byte $b2;

        r0 := @this: android.renderscript.FieldPacker;

        virtualinvoke r0.<android.renderscript.FieldPacker: void subalign(int)>(1);

        r1 = r0.<android.renderscript.FieldPacker: byte[] mData>;

        $i1 = r0.<android.renderscript.FieldPacker: int mPos>;

        i0 = $i1 - 1;

        r0.<android.renderscript.FieldPacker: int mPos> = i0;

        $b2 = r1[i0];

        return $b2;
    }

    public android.renderscript.Int2 subInt2()
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Int2 $r2;
        int $i0, $i1;

        r0 := @this: android.renderscript.FieldPacker;

        $r2 = new android.renderscript.Int2;

        specialinvoke $r2.<android.renderscript.Int2: void <init>()>();

        $i0 = virtualinvoke r0.<android.renderscript.FieldPacker: int subI32()>();

        $r2.<android.renderscript.Int2: int y> = $i0;

        $i1 = virtualinvoke r0.<android.renderscript.FieldPacker: int subI32()>();

        $r2.<android.renderscript.Int2: int x> = $i1;

        return $r2;
    }

    public android.renderscript.Int3 subInt3()
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Int3 $r2;
        int $i0, $i1, $i2;

        r0 := @this: android.renderscript.FieldPacker;

        $r2 = new android.renderscript.Int3;

        specialinvoke $r2.<android.renderscript.Int3: void <init>()>();

        $i0 = virtualinvoke r0.<android.renderscript.FieldPacker: int subI32()>();

        $r2.<android.renderscript.Int3: int z> = $i0;

        $i1 = virtualinvoke r0.<android.renderscript.FieldPacker: int subI32()>();

        $r2.<android.renderscript.Int3: int y> = $i1;

        $i2 = virtualinvoke r0.<android.renderscript.FieldPacker: int subI32()>();

        $r2.<android.renderscript.Int3: int x> = $i2;

        return $r2;
    }

    public android.renderscript.Int4 subInt4()
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Int4 $r2;
        int $i0, $i1, $i2, $i3;

        r0 := @this: android.renderscript.FieldPacker;

        $r2 = new android.renderscript.Int4;

        specialinvoke $r2.<android.renderscript.Int4: void <init>()>();

        $i0 = virtualinvoke r0.<android.renderscript.FieldPacker: int subI32()>();

        $r2.<android.renderscript.Int4: int w> = $i0;

        $i1 = virtualinvoke r0.<android.renderscript.FieldPacker: int subI32()>();

        $r2.<android.renderscript.Int4: int z> = $i1;

        $i2 = virtualinvoke r0.<android.renderscript.FieldPacker: int subI32()>();

        $r2.<android.renderscript.Int4: int y> = $i2;

        $i3 = virtualinvoke r0.<android.renderscript.FieldPacker: int subI32()>();

        $r2.<android.renderscript.Int4: int x> = $i3;

        return $r2;
    }

    public android.renderscript.Long2 subLong2()
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Long2 $r2;
        long $l0, $l1;

        r0 := @this: android.renderscript.FieldPacker;

        $r2 = new android.renderscript.Long2;

        specialinvoke $r2.<android.renderscript.Long2: void <init>()>();

        $l0 = virtualinvoke r0.<android.renderscript.FieldPacker: long subI64()>();

        $r2.<android.renderscript.Long2: long y> = $l0;

        $l1 = virtualinvoke r0.<android.renderscript.FieldPacker: long subI64()>();

        $r2.<android.renderscript.Long2: long x> = $l1;

        return $r2;
    }

    public android.renderscript.Long3 subLong3()
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Long3 $r2;
        long $l0, $l1, $l2;

        r0 := @this: android.renderscript.FieldPacker;

        $r2 = new android.renderscript.Long3;

        specialinvoke $r2.<android.renderscript.Long3: void <init>()>();

        $l0 = virtualinvoke r0.<android.renderscript.FieldPacker: long subI64()>();

        $r2.<android.renderscript.Long3: long z> = $l0;

        $l1 = virtualinvoke r0.<android.renderscript.FieldPacker: long subI64()>();

        $r2.<android.renderscript.Long3: long y> = $l1;

        $l2 = virtualinvoke r0.<android.renderscript.FieldPacker: long subI64()>();

        $r2.<android.renderscript.Long3: long x> = $l2;

        return $r2;
    }

    public android.renderscript.Long4 subLong4()
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Long4 $r2;
        long $l0, $l1, $l2, $l3;

        r0 := @this: android.renderscript.FieldPacker;

        $r2 = new android.renderscript.Long4;

        specialinvoke $r2.<android.renderscript.Long4: void <init>()>();

        $l0 = virtualinvoke r0.<android.renderscript.FieldPacker: long subI64()>();

        $r2.<android.renderscript.Long4: long w> = $l0;

        $l1 = virtualinvoke r0.<android.renderscript.FieldPacker: long subI64()>();

        $r2.<android.renderscript.Long4: long z> = $l1;

        $l2 = virtualinvoke r0.<android.renderscript.FieldPacker: long subI64()>();

        $r2.<android.renderscript.Long4: long y> = $l2;

        $l3 = virtualinvoke r0.<android.renderscript.FieldPacker: long subI64()>();

        $r2.<android.renderscript.Long4: long x> = $l3;

        return $r2;
    }

    public android.renderscript.Matrix2f subMatrix2f()
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Matrix2f $r2;
        float[] $r3, $r4;
        int $i0, i1;
        float $f0;

        r0 := @this: android.renderscript.FieldPacker;

        $r2 = new android.renderscript.Matrix2f;

        specialinvoke $r2.<android.renderscript.Matrix2f: void <init>()>();

        $r3 = $r2.<android.renderscript.Matrix2f: float[] mMat>;

        $i0 = lengthof $r3;

        i1 = $i0 - 1;

     label1:
        if i1 < 0 goto label2;

        $r4 = $r2.<android.renderscript.Matrix2f: float[] mMat>;

        $f0 = virtualinvoke r0.<android.renderscript.FieldPacker: float subF32()>();

        $r4[i1] = $f0;

        i1 = i1 + -1;

        goto label1;

     label2:
        return $r2;
    }

    public android.renderscript.Matrix3f subMatrix3f()
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Matrix3f $r2;
        float[] $r3, $r4;
        int $i0, i1;
        float $f0;

        r0 := @this: android.renderscript.FieldPacker;

        $r2 = new android.renderscript.Matrix3f;

        specialinvoke $r2.<android.renderscript.Matrix3f: void <init>()>();

        $r3 = $r2.<android.renderscript.Matrix3f: float[] mMat>;

        $i0 = lengthof $r3;

        i1 = $i0 - 1;

     label1:
        if i1 < 0 goto label2;

        $r4 = $r2.<android.renderscript.Matrix3f: float[] mMat>;

        $f0 = virtualinvoke r0.<android.renderscript.FieldPacker: float subF32()>();

        $r4[i1] = $f0;

        i1 = i1 + -1;

        goto label1;

     label2:
        return $r2;
    }

    public android.renderscript.Matrix4f subMatrix4f()
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Matrix4f $r2;
        float[] $r3, $r4;
        int $i0, i1;
        float $f0;

        r0 := @this: android.renderscript.FieldPacker;

        $r2 = new android.renderscript.Matrix4f;

        specialinvoke $r2.<android.renderscript.Matrix4f: void <init>()>();

        $r3 = $r2.<android.renderscript.Matrix4f: float[] mMat>;

        $i0 = lengthof $r3;

        i1 = $i0 - 1;

     label1:
        if i1 < 0 goto label2;

        $r4 = $r2.<android.renderscript.Matrix4f: float[] mMat>;

        $f0 = virtualinvoke r0.<android.renderscript.FieldPacker: float subF32()>();

        $r4[i1] = $f0;

        i1 = i1 + -1;

        goto label1;

     label2:
        return $r2;
    }

    public android.renderscript.Short2 subShort2()
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Short2 $r2;
        short $s0, $s1;

        r0 := @this: android.renderscript.FieldPacker;

        $r2 = new android.renderscript.Short2;

        specialinvoke $r2.<android.renderscript.Short2: void <init>()>();

        $s0 = virtualinvoke r0.<android.renderscript.FieldPacker: short subI16()>();

        $r2.<android.renderscript.Short2: short y> = $s0;

        $s1 = virtualinvoke r0.<android.renderscript.FieldPacker: short subI16()>();

        $r2.<android.renderscript.Short2: short x> = $s1;

        return $r2;
    }

    public android.renderscript.Short3 subShort3()
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Short3 $r2;
        short $s0, $s1, $s2;

        r0 := @this: android.renderscript.FieldPacker;

        $r2 = new android.renderscript.Short3;

        specialinvoke $r2.<android.renderscript.Short3: void <init>()>();

        $s0 = virtualinvoke r0.<android.renderscript.FieldPacker: short subI16()>();

        $r2.<android.renderscript.Short3: short z> = $s0;

        $s1 = virtualinvoke r0.<android.renderscript.FieldPacker: short subI16()>();

        $r2.<android.renderscript.Short3: short y> = $s1;

        $s2 = virtualinvoke r0.<android.renderscript.FieldPacker: short subI16()>();

        $r2.<android.renderscript.Short3: short x> = $s2;

        return $r2;
    }

    public android.renderscript.Short4 subShort4()
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Short4 $r2;
        short $s0, $s1, $s2, $s3;

        r0 := @this: android.renderscript.FieldPacker;

        $r2 = new android.renderscript.Short4;

        specialinvoke $r2.<android.renderscript.Short4: void <init>()>();

        $s0 = virtualinvoke r0.<android.renderscript.FieldPacker: short subI16()>();

        $r2.<android.renderscript.Short4: short w> = $s0;

        $s1 = virtualinvoke r0.<android.renderscript.FieldPacker: short subI16()>();

        $r2.<android.renderscript.Short4: short z> = $s1;

        $s2 = virtualinvoke r0.<android.renderscript.FieldPacker: short subI16()>();

        $r2.<android.renderscript.Short4: short y> = $s2;

        $s3 = virtualinvoke r0.<android.renderscript.FieldPacker: short subI16()>();

        $r2.<android.renderscript.Short4: short x> = $s3;

        return $r2;
    }

    public void subalign(int)
    {
        android.renderscript.FieldPacker r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9, i10;
        java.lang.StringBuilder $r2;
        android.renderscript.RSIllegalArgumentException $r5;
        java.lang.String $r6;
        java.util.BitSet $r7, $r8;
        boolean $z0;

        r0 := @this: android.renderscript.FieldPacker;

        i9 := @parameter0: int;

        $i1 = i9 - 1;

        $i2 = $i1 & i9;

        if $i2 != 0 goto label5;

     label1:
        i0 = r0.<android.renderscript.FieldPacker: int mPos>;

        $i3 = i9 - 1;

        $i4 = $i3 & i0;

        if $i4 == 0 goto label2;

        $i8 = i0 - 1;

        r0.<android.renderscript.FieldPacker: int mPos> = $i8;

        goto label1;

     label2:
        if i0 <= 0 goto label4;

     label3:
        $r7 = r0.<android.renderscript.FieldPacker: java.util.BitSet mAlignment>;

        $i5 = r0.<android.renderscript.FieldPacker: int mPos>;

        $i6 = $i5 - 1;

        $z0 = virtualinvoke $r7.<java.util.BitSet: boolean get(int)>($i6);

        if $z0 != 1 goto label4;

        $i7 = r0.<android.renderscript.FieldPacker: int mPos>;

        i10 = $i7 - 1;

        r0.<android.renderscript.FieldPacker: int mPos> = i10;

        $r8 = r0.<android.renderscript.FieldPacker: java.util.BitSet mAlignment>;

        virtualinvoke $r8.<java.util.BitSet: void flip(int)>(i10);

        goto label3;

     label4:
        return;

     label5:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("argument must be a non-negative non-zero power of 2: ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i9);

        $r5 = new android.renderscript.RSIllegalArgumentException;

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<android.renderscript.RSIllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r5;
    }
}
