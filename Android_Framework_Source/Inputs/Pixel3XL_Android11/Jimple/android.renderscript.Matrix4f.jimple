public class android.renderscript.Matrix4f extends java.lang.Object
{
    final float[] mMat;

    public void <init>()
    {
        android.renderscript.Matrix4f r0;
        float[] $r1;

        r0 := @this: android.renderscript.Matrix4f;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = newarray (float)[16];

        r0.<android.renderscript.Matrix4f: float[] mMat> = $r1;

        virtualinvoke r0.<android.renderscript.Matrix4f: void loadIdentity()>();

        return;
    }

    public void <init>(float[])
    {
        android.renderscript.Matrix4f r0;
        float[] r1, r2;
        int $i0;

        r0 := @this: android.renderscript.Matrix4f;

        r1 := @parameter0: float[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r2 = newarray (float)[16];

        r0.<android.renderscript.Matrix4f: float[] mMat> = r2;

        $i0 = lengthof r2;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, r2, 0, $i0);

        return;
    }

    private float computeCofactor(int, int)
    {
        android.renderscript.Matrix4f r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45;
        float[] r1;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25, $f26, $f27, f28;

        r0 := @this: android.renderscript.Matrix4f;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i8 = i0 + 1;

        i2 = $i8 % 4;

        $i9 = i0 + 2;

        i3 = $i9 % 4;

        $i10 = i0 + 3;

        i4 = $i10 % 4;

        $i11 = i1 + 1;

        i5 = $i11 % 4;

        $i12 = i1 + 2;

        i6 = $i12 % 4;

        $i13 = i1 + 3;

        i7 = $i13 % 4;

        r1 = r0.<android.renderscript.Matrix4f: float[] mMat>;

        $i14 = i5 * 4;

        $i15 = $i14 + i2;

        $f7 = r1[$i15];

        $i16 = i6 * 4;

        $i17 = $i16 + i3;

        $f1 = r1[$i17];

        $i18 = i7 * 4;

        $i19 = $i18 + i4;

        $f0 = r1[$i19];

        $f5 = $f1 * $f0;

        $i20 = i7 * 4;

        $i21 = $i20 + i3;

        $f3 = r1[$i21];

        $i22 = i6 * 4;

        $i23 = $i22 + i4;

        $f2 = r1[$i23];

        $f4 = $f3 * $f2;

        $f6 = $f5 - $f4;

        $f17 = $f7 * $f6;

        $i24 = i6 * 4;

        $i25 = $i24 + i2;

        $f15 = r1[$i25];

        $i26 = i5 * 4;

        $i27 = $i26 + i3;

        $f9 = r1[$i27];

        $i28 = i7 * 4;

        $i29 = $i28 + i4;

        $f8 = r1[$i29];

        $f13 = $f9 * $f8;

        $i30 = i7 * 4;

        $i31 = $i30 + i3;

        $f11 = r1[$i31];

        $i32 = i5 * 4;

        $i33 = $i32 + i4;

        $f10 = r1[$i33];

        $f12 = $f11 * $f10;

        $f14 = $f13 - $f12;

        $f16 = $f15 * $f14;

        $f27 = $f17 - $f16;

        $i34 = i7 * 4;

        $i35 = $i34 + i2;

        $f25 = r1[$i35];

        $i36 = i5 * 4;

        $i37 = $i36 + i3;

        $f19 = r1[$i37];

        $i38 = i6 * 4;

        $i39 = $i38 + i4;

        $f18 = r1[$i39];

        $f23 = $f19 * $f18;

        $i40 = i6 * 4;

        $i41 = $i40 + i3;

        $f21 = r1[$i41];

        $i42 = i5 * 4;

        $i43 = $i42 + i4;

        $f20 = r1[$i43];

        $f22 = $f21 * $f20;

        $f24 = $f23 - $f22;

        $f26 = $f25 * $f24;

        f28 = $f27 + $f26;

        $i44 = i0 + i1;

        $i45 = $i44 & 1;

        if $i45 == 0 goto label1;

        f28 = neg f28;

        goto label1;

     label1:
        return f28;
    }

    public float get(int, int)
    {
        android.renderscript.Matrix4f r0;
        int i0, i1, $i2, $i3;
        float[] $r1;
        float $f0;

        r0 := @this: android.renderscript.Matrix4f;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<android.renderscript.Matrix4f: float[] mMat>;

        $i2 = i0 * 4;

        $i3 = $i2 + i1;

        $f0 = $r1[$i3];

        return $f0;
    }

    public float[] getArray()
    {
        android.renderscript.Matrix4f r0;
        float[] $r1;

        r0 := @this: android.renderscript.Matrix4f;

        $r1 = r0.<android.renderscript.Matrix4f: float[] mMat>;

        return $r1;
    }

    public boolean inverse()
    {
        android.renderscript.Matrix4f r0, $r4;
        float[] r2, r3, $r5, $r6, $r7;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, f17, f18, f19;
        double $d0;
        byte $b0;
        int $i1, $i2, i3, i4, i5;

        r0 := @this: android.renderscript.Matrix4f;

        $r4 = new android.renderscript.Matrix4f;

        specialinvoke $r4.<android.renderscript.Matrix4f: void <init>()>();

        i3 = 0;

     label1:
        if i3 >= 4 goto label4;

        i4 = 0;

     label2:
        if i4 >= 4 goto label3;

        $r7 = $r4.<android.renderscript.Matrix4f: float[] mMat>;

        $i1 = i3 * 4;

        $i2 = $i1 + i4;

        $f16 = specialinvoke r0.<android.renderscript.Matrix4f: float computeCofactor(int,int)>(i3, i4);

        $r7[$i2] = $f16;

        i4 = i4 + 1;

        goto label2;

     label3:
        i3 = i3 + 1;

        goto label1;

     label4:
        r2 = r0.<android.renderscript.Matrix4f: float[] mMat>;

        f17 = r2[0];

        r3 = $r4.<android.renderscript.Matrix4f: float[] mMat>;

        $f0 = r3[0];

        $f4 = f17 * $f0;

        $f2 = r2[4];

        $f1 = r3[1];

        $f3 = $f2 * $f1;

        $f8 = $f4 + $f3;

        $f6 = r2[8];

        $f5 = r3[2];

        $f7 = $f6 * $f5;

        $f12 = $f8 + $f7;

        $f10 = r2[12];

        $f9 = r3[3];

        $f11 = $f10 * $f9;

        f18 = $f12 + $f11;

        $f13 = staticinvoke <java.lang.Math: float abs(float)>(f18);

        $d0 = (double) $f13;

        $b0 = $d0 cmpg 1.0E-6;

        if $b0 >= 0 goto label5;

        return 0;

     label5:
        f19 = 1.0F / f18;

        i5 = 0;

     label6:
        if i5 >= 16 goto label7;

        $r6 = r0.<android.renderscript.Matrix4f: float[] mMat>;

        $r5 = $r4.<android.renderscript.Matrix4f: float[] mMat>;

        $f14 = $r5[i5];

        $f15 = $f14 * f19;

        $r6[i5] = $f15;

        i5 = i5 + 1;

        goto label6;

     label7:
        return 1;
    }

    public boolean inverseTranspose()
    {
        android.renderscript.Matrix4f r0, $r4;
        float[] r2, r3, $r5, $r6, $r7;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, f17, f18, f19;
        double $d0;
        byte $b0;
        int $i1, $i2, i3, i4, i5;

        r0 := @this: android.renderscript.Matrix4f;

        $r4 = new android.renderscript.Matrix4f;

        specialinvoke $r4.<android.renderscript.Matrix4f: void <init>()>();

        i3 = 0;

     label1:
        if i3 >= 4 goto label4;

        i4 = 0;

     label2:
        if i4 >= 4 goto label3;

        $r7 = $r4.<android.renderscript.Matrix4f: float[] mMat>;

        $i1 = i4 * 4;

        $i2 = $i1 + i3;

        $f16 = specialinvoke r0.<android.renderscript.Matrix4f: float computeCofactor(int,int)>(i3, i4);

        $r7[$i2] = $f16;

        i4 = i4 + 1;

        goto label2;

     label3:
        i3 = i3 + 1;

        goto label1;

     label4:
        r2 = r0.<android.renderscript.Matrix4f: float[] mMat>;

        f17 = r2[0];

        r3 = $r4.<android.renderscript.Matrix4f: float[] mMat>;

        $f0 = r3[0];

        $f4 = f17 * $f0;

        $f2 = r2[4];

        $f1 = r3[4];

        $f3 = $f2 * $f1;

        $f8 = $f4 + $f3;

        $f6 = r2[8];

        $f5 = r3[8];

        $f7 = $f6 * $f5;

        $f12 = $f8 + $f7;

        $f10 = r2[12];

        $f9 = r3[12];

        $f11 = $f10 * $f9;

        f18 = $f12 + $f11;

        $f13 = staticinvoke <java.lang.Math: float abs(float)>(f18);

        $d0 = (double) $f13;

        $b0 = $d0 cmpg 1.0E-6;

        if $b0 >= 0 goto label5;

        return 0;

     label5:
        f19 = 1.0F / f18;

        i5 = 0;

     label6:
        if i5 >= 16 goto label7;

        $r6 = r0.<android.renderscript.Matrix4f: float[] mMat>;

        $r5 = $r4.<android.renderscript.Matrix4f: float[] mMat>;

        $f14 = $r5[i5];

        $f15 = $f14 * f19;

        $r6[i5] = $f15;

        i5 = i5 + 1;

        goto label6;

     label7:
        return 1;
    }

    public void load(android.renderscript.Matrix3f)
    {
        android.renderscript.Matrix4f r0;
        float[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, r18, r19, r20;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8;
        android.renderscript.Matrix3f r17;

        r0 := @this: android.renderscript.Matrix4f;

        r17 := @parameter0: android.renderscript.Matrix3f;

        $r2 = r0.<android.renderscript.Matrix4f: float[] mMat>;

        $r1 = r17.<android.renderscript.Matrix3f: float[] mMat>;

        $f0 = $r1[0];

        $r2[0] = $f0;

        $r4 = r0.<android.renderscript.Matrix4f: float[] mMat>;

        $r3 = r17.<android.renderscript.Matrix3f: float[] mMat>;

        $f1 = $r3[1];

        $r4[1] = $f1;

        $r6 = r0.<android.renderscript.Matrix4f: float[] mMat>;

        $r5 = r17.<android.renderscript.Matrix3f: float[] mMat>;

        $f2 = $r5[2];

        $r6[2] = $f2;

        r18 = r0.<android.renderscript.Matrix4f: float[] mMat>;

        r18[3] = 0.0F;

        $r7 = r17.<android.renderscript.Matrix3f: float[] mMat>;

        $f3 = $r7[3];

        r18[4] = $f3;

        $r9 = r0.<android.renderscript.Matrix4f: float[] mMat>;

        $r8 = r17.<android.renderscript.Matrix3f: float[] mMat>;

        $f4 = $r8[4];

        $r9[5] = $f4;

        $r11 = r0.<android.renderscript.Matrix4f: float[] mMat>;

        $r10 = r17.<android.renderscript.Matrix3f: float[] mMat>;

        $f5 = $r10[5];

        $r11[6] = $f5;

        r19 = r0.<android.renderscript.Matrix4f: float[] mMat>;

        r19[7] = 0.0F;

        $r12 = r17.<android.renderscript.Matrix3f: float[] mMat>;

        $f6 = $r12[6];

        r19[8] = $f6;

        $r14 = r0.<android.renderscript.Matrix4f: float[] mMat>;

        $r13 = r17.<android.renderscript.Matrix3f: float[] mMat>;

        $f7 = $r13[7];

        $r14[9] = $f7;

        $r16 = r0.<android.renderscript.Matrix4f: float[] mMat>;

        $r15 = r17.<android.renderscript.Matrix3f: float[] mMat>;

        $f8 = $r15[8];

        $r16[10] = $f8;

        r20 = r0.<android.renderscript.Matrix4f: float[] mMat>;

        r20[11] = 0.0F;

        r20[12] = 0.0F;

        r20[13] = 0.0F;

        r20[14] = 0.0F;

        r20[15] = 1.0F;

        return;
    }

    public void load(android.renderscript.Matrix4f)
    {
        android.renderscript.Matrix4f r0, r2;
        float[] r1, r3;
        int $i0;

        r0 := @this: android.renderscript.Matrix4f;

        r2 := @parameter0: android.renderscript.Matrix4f;

        r1 = virtualinvoke r2.<android.renderscript.Matrix4f: float[] getArray()>();

        r3 = r0.<android.renderscript.Matrix4f: float[] mMat>;

        $i0 = lengthof r3;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, r3, 0, $i0);

        return;
    }

    public void loadFrustum(float, float, float, float, float, float)
    {
        android.renderscript.Matrix4f r0;
        float f0, f1, f2, f3, f4, f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25;
        float[] r1;

        r0 := @this: android.renderscript.Matrix4f;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        f3 := @parameter3: float;

        f4 := @parameter4: float;

        f5 := @parameter5: float;

        virtualinvoke r0.<android.renderscript.Matrix4f: void loadIdentity()>();

        r1 = r0.<android.renderscript.Matrix4f: float[] mMat>;

        $f7 = f4 * 2.0F;

        $f6 = f1 - f0;

        $f8 = $f7 / $f6;

        r1[0] = $f8;

        $f10 = 2.0F * f4;

        $f9 = f3 - f2;

        $f11 = $f10 / $f9;

        r1[5] = $f11;

        $f13 = f1 + f0;

        $f12 = f1 - f0;

        $f14 = $f13 / $f12;

        r1[8] = $f14;

        $f16 = f3 + f2;

        $f15 = f3 - f2;

        $f17 = $f16 / $f15;

        r1[9] = $f17;

        $f18 = f5 + f4;

        $f20 = neg $f18;

        $f19 = f5 - f4;

        $f21 = $f20 / $f19;

        r1[10] = $f21;

        r1[11] = -1.0F;

        $f22 = -2.0F * f5;

        $f24 = $f22 * f4;

        $f23 = f5 - f4;

        $f25 = $f24 / $f23;

        r1[14] = $f25;

        r1[15] = 0.0F;

        return;
    }

    public void loadIdentity()
    {
        android.renderscript.Matrix4f r0;
        float[] r1;

        r0 := @this: android.renderscript.Matrix4f;

        r1 = r0.<android.renderscript.Matrix4f: float[] mMat>;

        r1[0] = 1.0F;

        r1[1] = 0.0F;

        r1[2] = 0.0F;

        r1[3] = 0.0F;

        r1[4] = 0.0F;

        r1[5] = 1.0F;

        r1[6] = 0.0F;

        r1[7] = 0.0F;

        r1[8] = 0.0F;

        r1[9] = 0.0F;

        r1[10] = 1.0F;

        r1[11] = 0.0F;

        r1[12] = 0.0F;

        r1[13] = 0.0F;

        r1[14] = 0.0F;

        r1[15] = 1.0F;

        return;
    }

    public void loadMultiply(android.renderscript.Matrix4f, android.renderscript.Matrix4f)
    {
        android.renderscript.Matrix4f r0, r1, r2;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, f9, f10, f11, f12;
        int i0, i1;

        r0 := @this: android.renderscript.Matrix4f;

        r1 := @parameter0: android.renderscript.Matrix4f;

        r2 := @parameter1: android.renderscript.Matrix4f;

        i0 = 0;

     label1:
        if i0 >= 4 goto label4;

        f9 = 0.0F;

        f10 = 0.0F;

        f11 = 0.0F;

        f12 = 0.0F;

        i1 = 0;

     label2:
        if i1 >= 4 goto label3;

        f0 = virtualinvoke r2.<android.renderscript.Matrix4f: float get(int,int)>(i0, i1);

        $f1 = virtualinvoke r1.<android.renderscript.Matrix4f: float get(int,int)>(i1, 0);

        $f2 = $f1 * f0;

        f9 = f9 + $f2;

        $f3 = virtualinvoke r1.<android.renderscript.Matrix4f: float get(int,int)>(i1, 1);

        $f4 = $f3 * f0;

        f10 = f10 + $f4;

        $f5 = virtualinvoke r1.<android.renderscript.Matrix4f: float get(int,int)>(i1, 2);

        $f6 = $f5 * f0;

        f11 = f11 + $f6;

        $f7 = virtualinvoke r1.<android.renderscript.Matrix4f: float get(int,int)>(i1, 3);

        $f8 = $f7 * f0;

        f12 = f12 + $f8;

        i1 = i1 + 1;

        goto label2;

     label3:
        virtualinvoke r0.<android.renderscript.Matrix4f: void set(int,int,float)>(i0, 0, f9);

        virtualinvoke r0.<android.renderscript.Matrix4f: void set(int,int,float)>(i0, 1, f10);

        virtualinvoke r0.<android.renderscript.Matrix4f: void set(int,int,float)>(i0, 2, f11);

        virtualinvoke r0.<android.renderscript.Matrix4f: void set(int,int,float)>(i0, 3, f12);

        i0 = i0 + 1;

        goto label1;

     label4:
        return;
    }

    public void loadOrtho(float, float, float, float, float, float)
    {
        android.renderscript.Matrix4f r0;
        float f0, f1, f2, f3, f4, f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23;
        float[] r1;

        r0 := @this: android.renderscript.Matrix4f;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        f3 := @parameter3: float;

        f4 := @parameter4: float;

        f5 := @parameter5: float;

        virtualinvoke r0.<android.renderscript.Matrix4f: void loadIdentity()>();

        r1 = r0.<android.renderscript.Matrix4f: float[] mMat>;

        $f6 = f1 - f0;

        $f7 = 2.0F / $f6;

        r1[0] = $f7;

        $f8 = f3 - f2;

        $f9 = 2.0F / $f8;

        r1[5] = $f9;

        $f10 = f5 - f4;

        $f11 = -2.0F / $f10;

        r1[10] = $f11;

        $f12 = f1 + f0;

        $f14 = neg $f12;

        $f13 = f1 - f0;

        $f15 = $f14 / $f13;

        r1[12] = $f15;

        $f16 = f3 + f2;

        $f18 = neg $f16;

        $f17 = f3 - f2;

        $f19 = $f18 / $f17;

        r1[13] = $f19;

        $f20 = f5 + f4;

        $f22 = neg $f20;

        $f21 = f5 - f4;

        $f23 = $f22 / $f21;

        r1[14] = $f23;

        return;
    }

    public void loadOrthoWindow(int, int)
    {
        android.renderscript.Matrix4f r0;
        int i0, i1;
        float $f0, $f1;

        r0 := @this: android.renderscript.Matrix4f;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $f1 = (float) i0;

        $f0 = (float) i1;

        virtualinvoke r0.<android.renderscript.Matrix4f: void loadOrtho(float,float,float,float,float,float)>(0.0F, $f1, $f0, 0.0F, -1.0F, 1.0F);

        return;
    }

    public void loadPerspective(float, float, float, float)
    {
        android.renderscript.Matrix4f r0;
        float f0, f1, f2, f3, $f4, $f5, $f6, $f7, f8, f9;
        double $d0, $d1, $d2, $d3, $d4;

        r0 := @this: android.renderscript.Matrix4f;

        f8 := @parameter0: float;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        f2 := @parameter3: float;

        $d0 = (double) f8;

        $d1 = $d0 * 3.141592653589793;

        $d2 = $d1 / 360.0;

        $f4 = (float) $d2;

        $d3 = (double) $f4;

        $d4 = staticinvoke <java.lang.Math: double tan(double)>($d3);

        $f5 = (float) $d4;

        f9 = $f5 * f1;

        f3 = neg f9;

        $f7 = f3 * f0;

        $f6 = f9 * f0;

        virtualinvoke r0.<android.renderscript.Matrix4f: void loadFrustum(float,float,float,float,float,float)>($f7, $f6, f3, f9, f1, f2);

        return;
    }

    public void loadProjectionNormalized(int, int)
    {
        android.renderscript.Matrix4f r0, $r3, $r4;
        int i0, i1;
        float $f0, $f1, $f2, $f3, $f4, $f5, f6, f7;

        r0 := @this: android.renderscript.Matrix4f;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r3 = new android.renderscript.Matrix4f;

        specialinvoke $r3.<android.renderscript.Matrix4f: void <init>()>();

        $r4 = new android.renderscript.Matrix4f;

        specialinvoke $r4.<android.renderscript.Matrix4f: void <init>()>();

        if i0 <= i1 goto label1;

        $f4 = (float) i0;

        $f3 = (float) i1;

        f6 = $f4 / $f3;

        $f5 = neg f6;

        virtualinvoke $r3.<android.renderscript.Matrix4f: void loadFrustum(float,float,float,float,float,float)>($f5, f6, -1.0F, 1.0F, 1.0F, 100.0F);

        goto label2;

     label1:
        $f1 = (float) i1;

        $f0 = (float) i0;

        f7 = $f1 / $f0;

        $f2 = neg f7;

        virtualinvoke $r3.<android.renderscript.Matrix4f: void loadFrustum(float,float,float,float,float,float)>(-1.0F, 1.0F, $f2, f7, 1.0F, 100.0F);

     label2:
        virtualinvoke $r4.<android.renderscript.Matrix4f: void loadRotate(float,float,float,float)>(180.0F, 0.0F, 1.0F, 0.0F);

        virtualinvoke $r3.<android.renderscript.Matrix4f: void loadMultiply(android.renderscript.Matrix4f,android.renderscript.Matrix4f)>($r3, $r4);

        virtualinvoke $r4.<android.renderscript.Matrix4f: void loadScale(float,float,float)>(-2.0F, 2.0F, 1.0F);

        virtualinvoke $r3.<android.renderscript.Matrix4f: void loadMultiply(android.renderscript.Matrix4f,android.renderscript.Matrix4f)>($r3, $r4);

        virtualinvoke $r4.<android.renderscript.Matrix4f: void loadTranslate(float,float,float)>(0.0F, 0.0F, 2.0F);

        virtualinvoke $r3.<android.renderscript.Matrix4f: void loadMultiply(android.renderscript.Matrix4f,android.renderscript.Matrix4f)>($r3, $r4);

        virtualinvoke r0.<android.renderscript.Matrix4f: void load(android.renderscript.Matrix4f)>($r3);

        return;
    }

    public void loadRotate(float, float, float, float)
    {
        android.renderscript.Matrix4f r0;
        float f0, f1, f2, f3, f4, f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25, $f26, $f27, $f28, $f29, $f30, $f31, f32, f33, f34, f35, f36, f37, f38, f39, f40, f41, f42;
        double $d0, $d1, $d2, $d3, $d4, $d5;
        byte $b0;
        float[] r1, r2;

        r0 := @this: android.renderscript.Matrix4f;

        f32 := @parameter0: float;

        f33 := @parameter1: float;

        f34 := @parameter2: float;

        f35 := @parameter3: float;

        r1 = r0.<android.renderscript.Matrix4f: float[] mMat>;

        r1[3] = 0.0F;

        r1[7] = 0.0F;

        r1[11] = 0.0F;

        r1[12] = 0.0F;

        r1[13] = 0.0F;

        r1[14] = 0.0F;

        r1[15] = 1.0F;

        f36 = 0.017453292F * f32;

        $d0 = (double) f36;

        $d1 = staticinvoke <java.lang.Math: double cos(double)>($d0);

        f0 = (float) $d1;

        $d2 = (double) f36;

        $d3 = staticinvoke <java.lang.Math: double sin(double)>($d2);

        f37 = (float) $d3;

        $f7 = f33 * f33;

        $f6 = f34 * f34;

        $f9 = $f7 + $f6;

        $f8 = f35 * f35;

        $f10 = $f9 + $f8;

        $d4 = (double) $f10;

        $d5 = staticinvoke <java.lang.Math: double sqrt(double)>($d4);

        f38 = (float) $d5;

        $b0 = f38 cmpl 1.0F;

        if $b0 != 0 goto label1;

        f39 = 1.0F / f38;

        f33 = f33 * f39;

        f34 = f34 * f39;

        f40 = f35 * f39;

        goto label2;

     label1:
        f40 = f35;

     label2:
        f41 = 1.0F - f0;

        f1 = f33 * f34;

        f2 = f34 * f40;

        f3 = f40 * f33;

        f4 = f33 * f37;

        f5 = f34 * f37;

        f42 = f40 * f37;

        r2 = r0.<android.renderscript.Matrix4f: float[] mMat>;

        $f11 = f33 * f33;

        $f12 = $f11 * f41;

        $f13 = $f12 + f0;

        r2[0] = $f13;

        $f14 = f1 * f41;

        $f15 = $f14 - f42;

        r2[4] = $f15;

        $f16 = f3 * f41;

        $f17 = $f16 + f5;

        r2[8] = $f17;

        $f18 = f1 * f41;

        $f19 = $f18 + f42;

        r2[1] = $f19;

        $f20 = f34 * f34;

        $f21 = $f20 * f41;

        $f22 = $f21 + f0;

        r2[5] = $f22;

        $f23 = f2 * f41;

        $f24 = $f23 - f4;

        r2[9] = $f24;

        $f25 = f3 * f41;

        $f26 = $f25 - f5;

        r2[2] = $f26;

        $f27 = f2 * f41;

        $f28 = $f27 + f4;

        r2[6] = $f28;

        $f29 = f40 * f40;

        $f30 = $f29 * f41;

        $f31 = $f30 + f0;

        r2[10] = $f31;

        return;
    }

    public void loadScale(float, float, float)
    {
        android.renderscript.Matrix4f r0;
        float f0, f1, f2;
        float[] r1;

        r0 := @this: android.renderscript.Matrix4f;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        virtualinvoke r0.<android.renderscript.Matrix4f: void loadIdentity()>();

        r1 = r0.<android.renderscript.Matrix4f: float[] mMat>;

        r1[0] = f0;

        r1[5] = f1;

        r1[10] = f2;

        return;
    }

    public void loadTranslate(float, float, float)
    {
        android.renderscript.Matrix4f r0;
        float f0, f1, f2;
        float[] r1;

        r0 := @this: android.renderscript.Matrix4f;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        virtualinvoke r0.<android.renderscript.Matrix4f: void loadIdentity()>();

        r1 = r0.<android.renderscript.Matrix4f: float[] mMat>;

        r1[12] = f0;

        r1[13] = f1;

        r1[14] = f2;

        return;
    }

    public void multiply(android.renderscript.Matrix4f)
    {
        android.renderscript.Matrix4f r0, r1, $r3;

        r0 := @this: android.renderscript.Matrix4f;

        r1 := @parameter0: android.renderscript.Matrix4f;

        $r3 = new android.renderscript.Matrix4f;

        specialinvoke $r3.<android.renderscript.Matrix4f: void <init>()>();

        virtualinvoke $r3.<android.renderscript.Matrix4f: void loadMultiply(android.renderscript.Matrix4f,android.renderscript.Matrix4f)>(r0, r1);

        virtualinvoke r0.<android.renderscript.Matrix4f: void load(android.renderscript.Matrix4f)>($r3);

        return;
    }

    public void rotate(float, float, float, float)
    {
        android.renderscript.Matrix4f r0, $r2;
        float f0, f1, f2, f3;

        r0 := @this: android.renderscript.Matrix4f;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        f3 := @parameter3: float;

        $r2 = new android.renderscript.Matrix4f;

        specialinvoke $r2.<android.renderscript.Matrix4f: void <init>()>();

        virtualinvoke $r2.<android.renderscript.Matrix4f: void loadRotate(float,float,float,float)>(f0, f1, f2, f3);

        virtualinvoke r0.<android.renderscript.Matrix4f: void multiply(android.renderscript.Matrix4f)>($r2);

        return;
    }

    public void scale(float, float, float)
    {
        android.renderscript.Matrix4f r0, $r2;
        float f0, f1, f2;

        r0 := @this: android.renderscript.Matrix4f;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        $r2 = new android.renderscript.Matrix4f;

        specialinvoke $r2.<android.renderscript.Matrix4f: void <init>()>();

        virtualinvoke $r2.<android.renderscript.Matrix4f: void loadScale(float,float,float)>(f0, f1, f2);

        virtualinvoke r0.<android.renderscript.Matrix4f: void multiply(android.renderscript.Matrix4f)>($r2);

        return;
    }

    public void set(int, int, float)
    {
        android.renderscript.Matrix4f r0;
        int i0, i1, $i2, $i3;
        float f0;
        float[] $r1;

        r0 := @this: android.renderscript.Matrix4f;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        f0 := @parameter2: float;

        $r1 = r0.<android.renderscript.Matrix4f: float[] mMat>;

        $i2 = i0 * 4;

        $i3 = $i2 + i1;

        $r1[$i3] = f0;

        return;
    }

    public void translate(float, float, float)
    {
        android.renderscript.Matrix4f r0, $r2;
        float f0, f1, f2;

        r0 := @this: android.renderscript.Matrix4f;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        $r2 = new android.renderscript.Matrix4f;

        specialinvoke $r2.<android.renderscript.Matrix4f: void <init>()>();

        virtualinvoke $r2.<android.renderscript.Matrix4f: void loadTranslate(float,float,float)>(f0, f1, f2);

        virtualinvoke r0.<android.renderscript.Matrix4f: void multiply(android.renderscript.Matrix4f)>($r2);

        return;
    }

    public void transpose()
    {
        android.renderscript.Matrix4f r0;
        float[] r1;
        float f0, $f1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, i9;

        r0 := @this: android.renderscript.Matrix4f;

        i8 = 0;

     label1:
        if i8 >= 3 goto label4;

        i9 = i8 + 1;

     label2:
        if i9 >= 4 goto label3;

        r1 = r0.<android.renderscript.Matrix4f: float[] mMat>;

        $i0 = i8 * 4;

        $i1 = $i0 + i9;

        f0 = r1[$i1];

        $i2 = i8 * 4;

        $i5 = $i2 + i9;

        $i3 = i9 * 4;

        $i4 = $i3 + i8;

        $f1 = r1[$i4];

        r1[$i5] = $f1;

        $i6 = i9 * 4;

        $i7 = $i6 + i8;

        r1[$i7] = f0;

        i9 = i9 + 1;

        goto label2;

     label3:
        i8 = i8 + 1;

        goto label1;

     label4:
        return;
    }
}
