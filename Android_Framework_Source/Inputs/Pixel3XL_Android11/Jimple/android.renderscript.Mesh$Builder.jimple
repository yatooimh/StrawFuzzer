public class android.renderscript.Mesh$Builder extends java.lang.Object
{
    java.util.Vector mIndexTypes;
    android.renderscript.RenderScript mRS;
    int mUsage;
    int mVertexTypeCount;
    android.renderscript.Mesh$Builder$Entry[] mVertexTypes;

    public void <init>(android.renderscript.RenderScript, int)
    {
        android.renderscript.Mesh$Builder r0;
        android.renderscript.RenderScript r1;
        int i0;
        android.renderscript.Mesh$Builder$Entry[] $r2;
        java.util.Vector $r3;

        r0 := @this: android.renderscript.Mesh$Builder;

        r1 := @parameter0: android.renderscript.RenderScript;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.renderscript.Mesh$Builder: android.renderscript.RenderScript mRS> = r1;

        r0.<android.renderscript.Mesh$Builder: int mUsage> = i0;

        r0.<android.renderscript.Mesh$Builder: int mVertexTypeCount> = 0;

        $r2 = newarray (android.renderscript.Mesh$Builder$Entry)[16];

        r0.<android.renderscript.Mesh$Builder: android.renderscript.Mesh$Builder$Entry[] mVertexTypes> = $r2;

        $r3 = new java.util.Vector;

        specialinvoke $r3.<java.util.Vector: void <init>()>();

        r0.<android.renderscript.Mesh$Builder: java.util.Vector mIndexTypes> = $r3;

        return;
    }

    public android.renderscript.Mesh$Builder addIndexSetType(android.renderscript.Element, int, android.renderscript.Mesh$Primitive)
    {
        android.renderscript.Mesh$Builder r0;
        android.renderscript.Element r1;
        int i0;
        android.renderscript.Mesh$Primitive r2;
        android.renderscript.Mesh$Builder$Entry $r4;
        java.util.Vector $r5;

        r0 := @this: android.renderscript.Mesh$Builder;

        r1 := @parameter0: android.renderscript.Element;

        i0 := @parameter1: int;

        r2 := @parameter2: android.renderscript.Mesh$Primitive;

        $r4 = new android.renderscript.Mesh$Builder$Entry;

        specialinvoke $r4.<android.renderscript.Mesh$Builder$Entry: void <init>(android.renderscript.Mesh$Builder)>(r0);

        $r4.<android.renderscript.Mesh$Builder$Entry: android.renderscript.Type t> = null;

        $r4.<android.renderscript.Mesh$Builder$Entry: android.renderscript.Element e> = r1;

        $r4.<android.renderscript.Mesh$Builder$Entry: int size> = i0;

        $r4.<android.renderscript.Mesh$Builder$Entry: android.renderscript.Mesh$Primitive prim> = r2;

        $r5 = r0.<android.renderscript.Mesh$Builder: java.util.Vector mIndexTypes>;

        virtualinvoke $r5.<java.util.Vector: void addElement(java.lang.Object)>($r4);

        return r0;
    }

    public android.renderscript.Mesh$Builder addIndexSetType(android.renderscript.Mesh$Primitive)
    {
        android.renderscript.Mesh$Builder r0;
        android.renderscript.Mesh$Primitive r1;
        android.renderscript.Mesh$Builder$Entry $r3;
        java.util.Vector $r4;

        r0 := @this: android.renderscript.Mesh$Builder;

        r1 := @parameter0: android.renderscript.Mesh$Primitive;

        $r3 = new android.renderscript.Mesh$Builder$Entry;

        specialinvoke $r3.<android.renderscript.Mesh$Builder$Entry: void <init>(android.renderscript.Mesh$Builder)>(r0);

        $r3.<android.renderscript.Mesh$Builder$Entry: android.renderscript.Type t> = null;

        $r3.<android.renderscript.Mesh$Builder$Entry: android.renderscript.Element e> = null;

        $r3.<android.renderscript.Mesh$Builder$Entry: int size> = 0;

        $r3.<android.renderscript.Mesh$Builder$Entry: android.renderscript.Mesh$Primitive prim> = r1;

        $r4 = r0.<android.renderscript.Mesh$Builder: java.util.Vector mIndexTypes>;

        virtualinvoke $r4.<java.util.Vector: void addElement(java.lang.Object)>($r3);

        return r0;
    }

    public android.renderscript.Mesh$Builder addIndexSetType(android.renderscript.Type, android.renderscript.Mesh$Primitive)
    {
        android.renderscript.Mesh$Builder r0;
        android.renderscript.Type r1;
        android.renderscript.Mesh$Primitive r2;
        android.renderscript.Mesh$Builder$Entry $r4;
        java.util.Vector $r5;

        r0 := @this: android.renderscript.Mesh$Builder;

        r1 := @parameter0: android.renderscript.Type;

        r2 := @parameter1: android.renderscript.Mesh$Primitive;

        $r4 = new android.renderscript.Mesh$Builder$Entry;

        specialinvoke $r4.<android.renderscript.Mesh$Builder$Entry: void <init>(android.renderscript.Mesh$Builder)>(r0);

        $r4.<android.renderscript.Mesh$Builder$Entry: android.renderscript.Type t> = r1;

        $r4.<android.renderscript.Mesh$Builder$Entry: android.renderscript.Element e> = null;

        $r4.<android.renderscript.Mesh$Builder$Entry: int size> = 0;

        $r4.<android.renderscript.Mesh$Builder$Entry: android.renderscript.Mesh$Primitive prim> = r2;

        $r5 = r0.<android.renderscript.Mesh$Builder: java.util.Vector mIndexTypes>;

        virtualinvoke $r5.<java.util.Vector: void addElement(java.lang.Object)>($r4);

        return r0;
    }

    public android.renderscript.Mesh$Builder addVertexType(android.renderscript.Element, int) throws java.lang.IllegalStateException
    {
        android.renderscript.Mesh$Builder r0;
        android.renderscript.Element r1;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7;
        android.renderscript.Mesh$Builder$Entry[] r2, $r5, $r7, $r9;
        java.lang.IllegalStateException $r3;
        android.renderscript.Mesh$Builder$Entry $r4, $r6, $r8, $r10;

        r0 := @this: android.renderscript.Mesh$Builder;

        r1 := @parameter0: android.renderscript.Element;

        i0 := @parameter1: int;

        i1 = r0.<android.renderscript.Mesh$Builder: int mVertexTypeCount>;

        r2 = r0.<android.renderscript.Mesh$Builder: android.renderscript.Mesh$Builder$Entry[] mVertexTypes>;

        $i2 = lengthof r2;

        if i1 >= $i2 goto label1;

        $r4 = new android.renderscript.Mesh$Builder$Entry;

        specialinvoke $r4.<android.renderscript.Mesh$Builder$Entry: void <init>(android.renderscript.Mesh$Builder)>(r0);

        r2[i1] = $r4;

        $r5 = r0.<android.renderscript.Mesh$Builder: android.renderscript.Mesh$Builder$Entry[] mVertexTypes>;

        $i3 = r0.<android.renderscript.Mesh$Builder: int mVertexTypeCount>;

        $r6 = $r5[$i3];

        $r6.<android.renderscript.Mesh$Builder$Entry: android.renderscript.Type t> = null;

        $r7 = r0.<android.renderscript.Mesh$Builder: android.renderscript.Mesh$Builder$Entry[] mVertexTypes>;

        $i4 = r0.<android.renderscript.Mesh$Builder: int mVertexTypeCount>;

        $r8 = $r7[$i4];

        $r8.<android.renderscript.Mesh$Builder$Entry: android.renderscript.Element e> = r1;

        $r9 = r0.<android.renderscript.Mesh$Builder: android.renderscript.Mesh$Builder$Entry[] mVertexTypes>;

        $i5 = r0.<android.renderscript.Mesh$Builder: int mVertexTypeCount>;

        $r10 = $r9[$i5];

        $r10.<android.renderscript.Mesh$Builder$Entry: int size> = i0;

        $i6 = r0.<android.renderscript.Mesh$Builder: int mVertexTypeCount>;

        $i7 = $i6 + 1;

        r0.<android.renderscript.Mesh$Builder: int mVertexTypeCount> = $i7;

        return r0;

     label1:
        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Max vertex types exceeded.");

        throw $r3;
    }

    public android.renderscript.Mesh$Builder addVertexType(android.renderscript.Type) throws java.lang.IllegalStateException
    {
        android.renderscript.Mesh$Builder r0;
        android.renderscript.Type r1;
        int i0, $i1, $i2, $i3, $i4, $i5;
        android.renderscript.Mesh$Builder$Entry[] r2, $r5, $r7;
        java.lang.IllegalStateException $r3;
        android.renderscript.Mesh$Builder$Entry $r4, $r6, $r8;

        r0 := @this: android.renderscript.Mesh$Builder;

        r1 := @parameter0: android.renderscript.Type;

        i0 = r0.<android.renderscript.Mesh$Builder: int mVertexTypeCount>;

        r2 = r0.<android.renderscript.Mesh$Builder: android.renderscript.Mesh$Builder$Entry[] mVertexTypes>;

        $i1 = lengthof r2;

        if i0 >= $i1 goto label1;

        $r4 = new android.renderscript.Mesh$Builder$Entry;

        specialinvoke $r4.<android.renderscript.Mesh$Builder$Entry: void <init>(android.renderscript.Mesh$Builder)>(r0);

        r2[i0] = $r4;

        $r5 = r0.<android.renderscript.Mesh$Builder: android.renderscript.Mesh$Builder$Entry[] mVertexTypes>;

        $i2 = r0.<android.renderscript.Mesh$Builder: int mVertexTypeCount>;

        $r6 = $r5[$i2];

        $r6.<android.renderscript.Mesh$Builder$Entry: android.renderscript.Type t> = r1;

        $r7 = r0.<android.renderscript.Mesh$Builder: android.renderscript.Mesh$Builder$Entry[] mVertexTypes>;

        $i3 = r0.<android.renderscript.Mesh$Builder: int mVertexTypeCount>;

        $r8 = $r7[$i3];

        $r8.<android.renderscript.Mesh$Builder$Entry: android.renderscript.Element e> = null;

        $i4 = r0.<android.renderscript.Mesh$Builder: int mVertexTypeCount>;

        $i5 = $i4 + 1;

        r0.<android.renderscript.Mesh$Builder: int mVertexTypeCount> = $i5;

        return r0;

     label1:
        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Max vertex types exceeded.");

        throw $r3;
    }

    public android.renderscript.Mesh create()
    {
        android.renderscript.Mesh$Builder r0;
        long[] r1, r2;
        int[] r3;
        android.renderscript.Allocation[] r4, r5;
        android.renderscript.Mesh$Primitive[] r6;
        android.renderscript.Mesh$Builder$Entry r7, r38;
        android.renderscript.RenderScript $r8, $r15, $r16, $r23, $r24, $r28, $r34, $r35, $r37;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i9, $i10, $i11, $i12, $i13, $i14, $i16, i17, i18;
        java.util.Vector $r9, $r10, $r11, $r12, $r13, $r17;
        android.renderscript.Mesh $r14;
        long $l8, $l15, l19;
        java.lang.Object $r18;
        android.renderscript.Type $r19, $r27, $r30, $r36;
        android.renderscript.Element $r20, $r22, $r31, $r33;
        java.lang.IllegalStateException $r21, $r32;
        android.renderscript.Mesh$Primitive $r25, $r26;
        android.renderscript.Mesh$Builder$Entry[] $r29;
        android.renderscript.Allocation r39, r40;

        r0 := @this: android.renderscript.Mesh$Builder;

        $r8 = r0.<android.renderscript.Mesh$Builder: android.renderscript.RenderScript mRS>;

        virtualinvoke $r8.<android.renderscript.RenderScript: void validate()>();

        $i0 = r0.<android.renderscript.Mesh$Builder: int mVertexTypeCount>;

        r1 = newarray (long)[$i0];

        $r9 = r0.<android.renderscript.Mesh$Builder: java.util.Vector mIndexTypes>;

        $i1 = virtualinvoke $r9.<java.util.Vector: int size()>();

        r2 = newarray (long)[$i1];

        $r10 = r0.<android.renderscript.Mesh$Builder: java.util.Vector mIndexTypes>;

        $i2 = virtualinvoke $r10.<java.util.Vector: int size()>();

        r3 = newarray (int)[$i2];

        $i3 = r0.<android.renderscript.Mesh$Builder: int mVertexTypeCount>;

        r4 = newarray (android.renderscript.Allocation)[$i3];

        $r11 = r0.<android.renderscript.Mesh$Builder: java.util.Vector mIndexTypes>;

        $i4 = virtualinvoke $r11.<java.util.Vector: int size()>();

        r5 = newarray (android.renderscript.Allocation)[$i4];

        $r12 = r0.<android.renderscript.Mesh$Builder: java.util.Vector mIndexTypes>;

        $i5 = virtualinvoke $r12.<java.util.Vector: int size()>();

        r6 = newarray (android.renderscript.Mesh$Primitive)[$i5];

        i17 = 0;

     label01:
        $i6 = r0.<android.renderscript.Mesh$Builder: int mVertexTypeCount>;

        if i17 >= $i6 goto label05;

        $r29 = r0.<android.renderscript.Mesh$Builder: android.renderscript.Mesh$Builder$Entry[] mVertexTypes>;

        r38 = $r29[i17];

        $r30 = r38.<android.renderscript.Mesh$Builder$Entry: android.renderscript.Type t>;

        if $r30 == null goto label02;

        $r37 = r0.<android.renderscript.Mesh$Builder: android.renderscript.RenderScript mRS>;

        $r36 = r38.<android.renderscript.Mesh$Builder$Entry: android.renderscript.Type t>;

        $i16 = r0.<android.renderscript.Mesh$Builder: int mUsage>;

        r39 = staticinvoke <android.renderscript.Allocation: android.renderscript.Allocation createTyped(android.renderscript.RenderScript,android.renderscript.Type,int)>($r37, $r36, $i16);

        goto label03;

     label02:
        $r31 = r38.<android.renderscript.Mesh$Builder$Entry: android.renderscript.Element e>;

        if $r31 == null goto label04;

        $r34 = r0.<android.renderscript.Mesh$Builder: android.renderscript.RenderScript mRS>;

        $r33 = r38.<android.renderscript.Mesh$Builder$Entry: android.renderscript.Element e>;

        $i14 = r38.<android.renderscript.Mesh$Builder$Entry: int size>;

        $i13 = r0.<android.renderscript.Mesh$Builder: int mUsage>;

        r39 = staticinvoke <android.renderscript.Allocation: android.renderscript.Allocation createSized(android.renderscript.RenderScript,android.renderscript.Element,int,int)>($r34, $r33, $i14, $i13);

     label03:
        r4[i17] = r39;

        $r35 = r0.<android.renderscript.Mesh$Builder: android.renderscript.RenderScript mRS>;

        $l15 = virtualinvoke r39.<android.renderscript.Allocation: long getID(android.renderscript.RenderScript)>($r35);

        r1[i17] = $l15;

        i17 = i17 + 1;

        goto label01;

     label04:
        $r32 = new java.lang.IllegalStateException;

        specialinvoke $r32.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Builder corrupt, no valid element in entry.");

        throw $r32;

     label05:
        i18 = 0;

     label06:
        $r13 = r0.<android.renderscript.Mesh$Builder: java.util.Vector mIndexTypes>;

        $i7 = virtualinvoke $r13.<java.util.Vector: int size()>();

        if i18 >= $i7 goto label12;

        $r17 = r0.<android.renderscript.Mesh$Builder: java.util.Vector mIndexTypes>;

        $r18 = virtualinvoke $r17.<java.util.Vector: java.lang.Object elementAt(int)>(i18);

        r7 = (android.renderscript.Mesh$Builder$Entry) $r18;

        $r19 = r7.<android.renderscript.Mesh$Builder$Entry: android.renderscript.Type t>;

        if $r19 == null goto label07;

        $r28 = r0.<android.renderscript.Mesh$Builder: android.renderscript.RenderScript mRS>;

        $r27 = r7.<android.renderscript.Mesh$Builder$Entry: android.renderscript.Type t>;

        $i12 = r0.<android.renderscript.Mesh$Builder: int mUsage>;

        r40 = staticinvoke <android.renderscript.Allocation: android.renderscript.Allocation createTyped(android.renderscript.RenderScript,android.renderscript.Type,int)>($r28, $r27, $i12);

        goto label08;

     label07:
        $r20 = r7.<android.renderscript.Mesh$Builder$Entry: android.renderscript.Element e>;

        if $r20 == null goto label11;

        $r23 = r0.<android.renderscript.Mesh$Builder: android.renderscript.RenderScript mRS>;

        $r22 = r7.<android.renderscript.Mesh$Builder$Entry: android.renderscript.Element e>;

        $i10 = r7.<android.renderscript.Mesh$Builder$Entry: int size>;

        $i9 = r0.<android.renderscript.Mesh$Builder: int mUsage>;

        r40 = staticinvoke <android.renderscript.Allocation: android.renderscript.Allocation createSized(android.renderscript.RenderScript,android.renderscript.Element,int,int)>($r23, $r22, $i10, $i9);

     label08:
        if r40 != null goto label09;

        l19 = 0L;

        goto label10;

     label09:
        $r24 = r0.<android.renderscript.Mesh$Builder: android.renderscript.RenderScript mRS>;

        l19 = virtualinvoke r40.<android.renderscript.Allocation: long getID(android.renderscript.RenderScript)>($r24);

     label10:
        r5[i18] = r40;

        $r25 = r7.<android.renderscript.Mesh$Builder$Entry: android.renderscript.Mesh$Primitive prim>;

        r6[i18] = $r25;

        r2[i18] = l19;

        $r26 = r7.<android.renderscript.Mesh$Builder$Entry: android.renderscript.Mesh$Primitive prim>;

        $i11 = $r26.<android.renderscript.Mesh$Primitive: int mID>;

        r3[i18] = $i11;

        i18 = i18 + 1;

        goto label06;

     label11:
        $r21 = new java.lang.IllegalStateException;

        specialinvoke $r21.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Builder corrupt, no valid element in entry.");

        throw $r21;

     label12:
        $r14 = new android.renderscript.Mesh;

        $r15 = r0.<android.renderscript.Mesh$Builder: android.renderscript.RenderScript mRS>;

        $l8 = virtualinvoke $r15.<android.renderscript.RenderScript: long nMeshCreate(long[],long[],int[])>(r1, r2, r3);

        $r16 = r0.<android.renderscript.Mesh$Builder: android.renderscript.RenderScript mRS>;

        specialinvoke $r14.<android.renderscript.Mesh: void <init>(long,android.renderscript.RenderScript)>($l8, $r16);

        $r14.<android.renderscript.Mesh: android.renderscript.Allocation[] mVertexBuffers> = r4;

        $r14.<android.renderscript.Mesh: android.renderscript.Allocation[] mIndexBuffers> = r5;

        $r14.<android.renderscript.Mesh: android.renderscript.Mesh$Primitive[] mPrimitives> = r6;

        return $r14;
    }

    public int getCurrentIndexSetIndex()
    {
        android.renderscript.Mesh$Builder r0;
        java.util.Vector $r1;
        int $i0, $i1;

        r0 := @this: android.renderscript.Mesh$Builder;

        $r1 = r0.<android.renderscript.Mesh$Builder: java.util.Vector mIndexTypes>;

        $i0 = virtualinvoke $r1.<java.util.Vector: int size()>();

        $i1 = $i0 - 1;

        return $i1;
    }

    public int getCurrentVertexTypeIndex()
    {
        android.renderscript.Mesh$Builder r0;
        int $i0, $i1;

        r0 := @this: android.renderscript.Mesh$Builder;

        $i0 = r0.<android.renderscript.Mesh$Builder: int mVertexTypeCount>;

        $i1 = $i0 - 1;

        return $i1;
    }

    android.renderscript.Type newType(android.renderscript.Element, int)
    {
        android.renderscript.Mesh$Builder r0;
        int i0;
        android.renderscript.Type$Builder $r1;
        android.renderscript.RenderScript $r2;
        android.renderscript.Type $r4;
        android.renderscript.Element r5;

        r0 := @this: android.renderscript.Mesh$Builder;

        r5 := @parameter0: android.renderscript.Element;

        i0 := @parameter1: int;

        $r1 = new android.renderscript.Type$Builder;

        $r2 = r0.<android.renderscript.Mesh$Builder: android.renderscript.RenderScript mRS>;

        specialinvoke $r1.<android.renderscript.Type$Builder: void <init>(android.renderscript.RenderScript,android.renderscript.Element)>($r2, r5);

        virtualinvoke $r1.<android.renderscript.Type$Builder: android.renderscript.Type$Builder setX(int)>(i0);

        $r4 = virtualinvoke $r1.<android.renderscript.Type$Builder: android.renderscript.Type create()>();

        return $r4;
    }
}
