public class android.renderscript.Mesh$TriangleMeshBuilder extends java.lang.Object
{
    public static final int COLOR;
    public static final int NORMAL;
    public static final int TEXTURE_0;
    float mA;
    float mB;
    android.renderscript.Element mElement;
    int mFlags;
    float mG;
    int mIndexCount;
    short[] mIndexData;
    int mMaxIndex;
    float mNX;
    float mNY;
    float mNZ;
    float mR;
    android.renderscript.RenderScript mRS;
    float mS0;
    float mT0;
    int mVtxCount;
    float[] mVtxData;
    int mVtxSize;

    public void <init>(android.renderscript.RenderScript, int, int)
    {
        android.renderscript.Mesh$TriangleMeshBuilder r0;
        android.renderscript.RenderScript r1;
        int i0, i1;
        float[] $r2;
        short[] $r3;
        java.lang.IllegalArgumentException $r4;

        r0 := @this: android.renderscript.Mesh$TriangleMeshBuilder;

        r1 := @parameter0: android.renderscript.RenderScript;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.renderscript.Mesh$TriangleMeshBuilder: float mNX> = 0.0F;

        r0.<android.renderscript.Mesh$TriangleMeshBuilder: float mNY> = 0.0F;

        r0.<android.renderscript.Mesh$TriangleMeshBuilder: float mNZ> = -1.0F;

        r0.<android.renderscript.Mesh$TriangleMeshBuilder: float mS0> = 0.0F;

        r0.<android.renderscript.Mesh$TriangleMeshBuilder: float mT0> = 0.0F;

        r0.<android.renderscript.Mesh$TriangleMeshBuilder: float mR> = 1.0F;

        r0.<android.renderscript.Mesh$TriangleMeshBuilder: float mG> = 1.0F;

        r0.<android.renderscript.Mesh$TriangleMeshBuilder: float mB> = 1.0F;

        r0.<android.renderscript.Mesh$TriangleMeshBuilder: float mA> = 1.0F;

        r0.<android.renderscript.Mesh$TriangleMeshBuilder: android.renderscript.RenderScript mRS> = r1;

        r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mVtxCount> = 0;

        r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mMaxIndex> = 0;

        r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mIndexCount> = 0;

        $r2 = newarray (float)[128];

        r0.<android.renderscript.Mesh$TriangleMeshBuilder: float[] mVtxData> = $r2;

        $r3 = newarray (short)[128];

        r0.<android.renderscript.Mesh$TriangleMeshBuilder: short[] mIndexData> = $r3;

        r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mVtxSize> = i0;

        r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mFlags> = i1;

        if i0 < 2 goto label1;

        if i0 > 3 goto label1;

        return;

     label1:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Vertex size out of range.");

        throw $r4;
    }

    private void latch()
    {
        android.renderscript.Mesh$TriangleMeshBuilder r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i11, i12, i13, i14, i15, i16, i17, i18, i19, i20;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8;
        float[] r1, r2, r3;

        r0 := @this: android.renderscript.Mesh$TriangleMeshBuilder;

        $i0 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mFlags>;

        $i1 = $i0 & 1;

        if $i1 == 0 goto label1;

        specialinvoke r0.<android.renderscript.Mesh$TriangleMeshBuilder: void makeSpace(int)>(4);

        r1 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: float[] mVtxData>;

        i11 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mVtxCount>;

        i12 = i11 + 1;

        r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mVtxCount> = i12;

        $f5 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: float mR>;

        r1[i11] = $f5;

        i13 = i12 + 1;

        r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mVtxCount> = i13;

        $f6 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: float mG>;

        r1[i12] = $f6;

        i14 = i13 + 1;

        r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mVtxCount> = i14;

        $f7 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: float mB>;

        r1[i13] = $f7;

        $i10 = i14 + 1;

        r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mVtxCount> = $i10;

        $f8 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: float mA>;

        r1[i14] = $f8;

     label1:
        $i2 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mFlags>;

        $i3 = $i2 & 256;

        if $i3 == 0 goto label2;

        specialinvoke r0.<android.renderscript.Mesh$TriangleMeshBuilder: void makeSpace(int)>(2);

        r2 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: float[] mVtxData>;

        i15 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mVtxCount>;

        i16 = i15 + 1;

        r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mVtxCount> = i16;

        $f3 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: float mS0>;

        r2[i15] = $f3;

        $i9 = i16 + 1;

        r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mVtxCount> = $i9;

        $f4 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: float mT0>;

        r2[i16] = $f4;

     label2:
        $i4 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mFlags>;

        $i5 = $i4 & 2;

        if $i5 == 0 goto label3;

        specialinvoke r0.<android.renderscript.Mesh$TriangleMeshBuilder: void makeSpace(int)>(4);

        r3 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: float[] mVtxData>;

        i17 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mVtxCount>;

        i18 = i17 + 1;

        r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mVtxCount> = i18;

        $f0 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: float mNX>;

        r3[i17] = $f0;

        i19 = i18 + 1;

        r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mVtxCount> = i19;

        $f1 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: float mNY>;

        r3[i18] = $f1;

        i20 = i19 + 1;

        r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mVtxCount> = i20;

        $f2 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: float mNZ>;

        r3[i19] = $f2;

        $i8 = i20 + 1;

        r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mVtxCount> = $i8;

        r3[i20] = 0.0F;

     label3:
        $i6 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mMaxIndex>;

        $i7 = $i6 + 1;

        r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mMaxIndex> = $i7;

        return;
    }

    private void makeSpace(int)
    {
        android.renderscript.Mesh$TriangleMeshBuilder r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6;
        float[] r1, r2;

        r0 := @this: android.renderscript.Mesh$TriangleMeshBuilder;

        i0 := @parameter0: int;

        i1 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mVtxCount>;

        r1 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: float[] mVtxData>;

        $i3 = i1 + i0;

        $i2 = lengthof r1;

        if $i3 < $i2 goto label1;

        $i4 = lengthof r1;

        $i5 = $i4 * 2;

        r2 = newarray (float)[$i5];

        $i6 = lengthof r1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, r2, 0, $i6);

        r0.<android.renderscript.Mesh$TriangleMeshBuilder: float[] mVtxData> = r2;

     label1:
        return;
    }

    public android.renderscript.Mesh$TriangleMeshBuilder addTriangle(int, int, int)
    {
        android.renderscript.Mesh$TriangleMeshBuilder r0;
        int i0, i1, i2, $i3, $i4, $i9, $i12, $i13, $i14, i15, i16, i17, i18, i19;
        short[] r1, r2, r3;
        short $s5, $s6, $s7, $s8, $s10, $s11;
        java.lang.IllegalStateException $r4;

        r0 := @this: android.renderscript.Mesh$TriangleMeshBuilder;

        i15 := @parameter0: int;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i16 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mMaxIndex>;

        if i15 >= i16 goto label2;

        if i15 < 0 goto label2;

        if i0 >= i16 goto label2;

        if i0 < 0 goto label2;

        if i1 >= i16 goto label2;

        if i1 < 0 goto label2;

        i17 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mIndexCount>;

        r2 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: short[] mIndexData>;

        $i4 = i17 + 3;

        $i3 = lengthof r2;

        if $i4 < $i3 goto label1;

        $i12 = lengthof r2;

        $i13 = $i12 * 2;

        r1 = newarray (short)[$i13];

        $i14 = lengthof r2;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, 0, r1, 0, $i14);

        r0.<android.renderscript.Mesh$TriangleMeshBuilder: short[] mIndexData> = r1;

     label1:
        r3 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: short[] mIndexData>;

        i2 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mIndexCount>;

        i18 = i2 + 1;

        r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mIndexCount> = i18;

        $s5 = (short) i15;

        $s6 = (short) $s5;

        r3[i2] = $s6;

        i19 = i18 + 1;

        r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mIndexCount> = i19;

        $s7 = (short) i0;

        $s8 = (short) $s7;

        r3[i18] = $s8;

        $i9 = i19 + 1;

        r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mIndexCount> = $i9;

        $s10 = (short) i1;

        $s11 = (short) $s10;

        r3[i19] = $s11;

        return r0;

     label2:
        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Index provided greater than vertex count.");

        throw $r4;
    }

    public android.renderscript.Mesh$TriangleMeshBuilder addVertex(float, float)
    {
        android.renderscript.Mesh$TriangleMeshBuilder r0;
        float f0, f1;
        float[] r1;
        int i0, i1, $i2, $i3;
        java.lang.IllegalStateException $r2;

        r0 := @this: android.renderscript.Mesh$TriangleMeshBuilder;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $i2 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mVtxSize>;

        if $i2 != 2 goto label1;

        specialinvoke r0.<android.renderscript.Mesh$TriangleMeshBuilder: void makeSpace(int)>(2);

        r1 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: float[] mVtxData>;

        i0 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mVtxCount>;

        i1 = i0 + 1;

        r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mVtxCount> = i1;

        r1[i0] = f0;

        $i3 = i1 + 1;

        r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mVtxCount> = $i3;

        r1[i1] = f1;

        specialinvoke r0.<android.renderscript.Mesh$TriangleMeshBuilder: void latch()>();

        return r0;

     label1:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("add mistmatch with declared components.");

        throw $r2;
    }

    public android.renderscript.Mesh$TriangleMeshBuilder addVertex(float, float, float)
    {
        android.renderscript.Mesh$TriangleMeshBuilder r0;
        float f0, f1, f2;
        float[] r1;
        int $i0, $i1, i2, i3, i4, i5;
        java.lang.IllegalStateException $r2;

        r0 := @this: android.renderscript.Mesh$TriangleMeshBuilder;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        $i0 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mVtxSize>;

        if $i0 != 3 goto label1;

        specialinvoke r0.<android.renderscript.Mesh$TriangleMeshBuilder: void makeSpace(int)>(4);

        r1 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: float[] mVtxData>;

        i2 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mVtxCount>;

        i3 = i2 + 1;

        r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mVtxCount> = i3;

        r1[i2] = f0;

        i4 = i3 + 1;

        r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mVtxCount> = i4;

        r1[i3] = f1;

        i5 = i4 + 1;

        r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mVtxCount> = i5;

        r1[i4] = f2;

        $i1 = i5 + 1;

        r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mVtxCount> = $i1;

        r1[i5] = 1.0F;

        specialinvoke r0.<android.renderscript.Mesh$TriangleMeshBuilder: void latch()>();

        return r0;

     label1:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("add mistmatch with declared components.");

        throw $r2;
    }

    public android.renderscript.Mesh create(boolean)
    {
        android.renderscript.Mesh$TriangleMeshBuilder r0;
        boolean z0;
        android.renderscript.Element$Builder $r1;
        android.renderscript.RenderScript $r2, $r4, $r9, $r12, $r22, $r25, $r28;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        android.renderscript.Element$DataType $r3;
        android.renderscript.Element $r5, $r7, $r10, $r13, $r23, $r26, $r29;
        android.renderscript.Mesh$Builder $r8;
        android.renderscript.Mesh$Primitive $r14;
        android.renderscript.Allocation $r16, $r18, $r20, $r21;
        float[] $r17;
        short[] $r19;
        byte b11;
        android.renderscript.Mesh r33;

        r0 := @this: android.renderscript.Mesh$TriangleMeshBuilder;

        z0 := @parameter0: boolean;

        $r1 = new android.renderscript.Element$Builder;

        $r2 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: android.renderscript.RenderScript mRS>;

        specialinvoke $r1.<android.renderscript.Element$Builder: void <init>(android.renderscript.RenderScript)>($r2);

        $r4 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: android.renderscript.RenderScript mRS>;

        $r3 = <android.renderscript.Element$DataType: android.renderscript.Element$DataType FLOAT_32>;

        $i0 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mVtxSize>;

        $r5 = staticinvoke <android.renderscript.Element: android.renderscript.Element createVector(android.renderscript.RenderScript,android.renderscript.Element$DataType,int)>($r4, $r3, $i0);

        virtualinvoke $r1.<android.renderscript.Element$Builder: android.renderscript.Element$Builder add(android.renderscript.Element,java.lang.String)>($r5, "position");

        $i1 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mFlags>;

        $i2 = $i1 & 1;

        if $i2 == 0 goto label1;

        $r28 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: android.renderscript.RenderScript mRS>;

        $r29 = staticinvoke <android.renderscript.Element: android.renderscript.Element F32_4(android.renderscript.RenderScript)>($r28);

        virtualinvoke $r1.<android.renderscript.Element$Builder: android.renderscript.Element$Builder add(android.renderscript.Element,java.lang.String)>($r29, "color");

     label1:
        $i3 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mFlags>;

        $i4 = $i3 & 256;

        if $i4 == 0 goto label2;

        $r25 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: android.renderscript.RenderScript mRS>;

        $r26 = staticinvoke <android.renderscript.Element: android.renderscript.Element F32_2(android.renderscript.RenderScript)>($r25);

        virtualinvoke $r1.<android.renderscript.Element$Builder: android.renderscript.Element$Builder add(android.renderscript.Element,java.lang.String)>($r26, "texture0");

     label2:
        $i5 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mFlags>;

        $i6 = $i5 & 2;

        if $i6 == 0 goto label3;

        $r22 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: android.renderscript.RenderScript mRS>;

        $r23 = staticinvoke <android.renderscript.Element: android.renderscript.Element F32_3(android.renderscript.RenderScript)>($r22);

        virtualinvoke $r1.<android.renderscript.Element$Builder: android.renderscript.Element$Builder add(android.renderscript.Element,java.lang.String)>($r23, "normal");

     label3:
        $r7 = virtualinvoke $r1.<android.renderscript.Element$Builder: android.renderscript.Element create()>();

        r0.<android.renderscript.Mesh$TriangleMeshBuilder: android.renderscript.Element mElement> = $r7;

        b11 = 1;

        if z0 == 0 goto label4;

        b11 = 1 | 4;

     label4:
        $r8 = new android.renderscript.Mesh$Builder;

        $r9 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: android.renderscript.RenderScript mRS>;

        specialinvoke $r8.<android.renderscript.Mesh$Builder: void <init>(android.renderscript.RenderScript,int)>($r9, b11);

        $r10 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: android.renderscript.Element mElement>;

        $i7 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mMaxIndex>;

        virtualinvoke $r8.<android.renderscript.Mesh$Builder: android.renderscript.Mesh$Builder addVertexType(android.renderscript.Element,int)>($r10, $i7);

        $r12 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: android.renderscript.RenderScript mRS>;

        $r13 = staticinvoke <android.renderscript.Element: android.renderscript.Element U16(android.renderscript.RenderScript)>($r12);

        $i8 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mIndexCount>;

        $r14 = <android.renderscript.Mesh$Primitive: android.renderscript.Mesh$Primitive TRIANGLE>;

        virtualinvoke $r8.<android.renderscript.Mesh$Builder: android.renderscript.Mesh$Builder addIndexSetType(android.renderscript.Element,int,android.renderscript.Mesh$Primitive)>($r13, $i8, $r14);

        r33 = virtualinvoke $r8.<android.renderscript.Mesh$Builder: android.renderscript.Mesh create()>();

        $r16 = virtualinvoke r33.<android.renderscript.Mesh: android.renderscript.Allocation getVertexAllocation(int)>(0);

        $i9 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mMaxIndex>;

        $r17 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: float[] mVtxData>;

        virtualinvoke $r16.<android.renderscript.Allocation: void copy1DRangeFromUnchecked(int,int,float[])>(0, $i9, $r17);

        if z0 == 0 goto label5;

        $r21 = virtualinvoke r33.<android.renderscript.Mesh: android.renderscript.Allocation getVertexAllocation(int)>(0);

        virtualinvoke $r21.<android.renderscript.Allocation: void syncAll(int)>(1);

     label5:
        $r18 = virtualinvoke r33.<android.renderscript.Mesh: android.renderscript.Allocation getIndexSetAllocation(int)>(0);

        $i10 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mIndexCount>;

        $r19 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: short[] mIndexData>;

        virtualinvoke $r18.<android.renderscript.Allocation: void copy1DRangeFromUnchecked(int,int,short[])>(0, $i10, $r19);

        if z0 == 0 goto label6;

        $r20 = virtualinvoke r33.<android.renderscript.Mesh: android.renderscript.Allocation getIndexSetAllocation(int)>(0);

        virtualinvoke $r20.<android.renderscript.Allocation: void syncAll(int)>(1);

     label6:
        return r33;
    }

    public android.renderscript.Mesh$TriangleMeshBuilder setColor(float, float, float, float)
    {
        android.renderscript.Mesh$TriangleMeshBuilder r0;
        float f0, f1, f2, f3;
        int $i0, $i1;
        java.lang.IllegalStateException $r1;

        r0 := @this: android.renderscript.Mesh$TriangleMeshBuilder;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        f3 := @parameter3: float;

        $i0 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mFlags>;

        $i1 = $i0 & 1;

        if $i1 == 0 goto label1;

        r0.<android.renderscript.Mesh$TriangleMeshBuilder: float mR> = f0;

        r0.<android.renderscript.Mesh$TriangleMeshBuilder: float mG> = f1;

        r0.<android.renderscript.Mesh$TriangleMeshBuilder: float mB> = f2;

        r0.<android.renderscript.Mesh$TriangleMeshBuilder: float mA> = f3;

        return r0;

     label1:
        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("add mistmatch with declared components.");

        throw $r1;
    }

    public android.renderscript.Mesh$TriangleMeshBuilder setNormal(float, float, float)
    {
        android.renderscript.Mesh$TriangleMeshBuilder r0;
        float f0, f1, f2;
        int $i0, $i1;
        java.lang.IllegalStateException $r1;

        r0 := @this: android.renderscript.Mesh$TriangleMeshBuilder;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        $i0 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mFlags>;

        $i1 = $i0 & 2;

        if $i1 == 0 goto label1;

        r0.<android.renderscript.Mesh$TriangleMeshBuilder: float mNX> = f0;

        r0.<android.renderscript.Mesh$TriangleMeshBuilder: float mNY> = f1;

        r0.<android.renderscript.Mesh$TriangleMeshBuilder: float mNZ> = f2;

        return r0;

     label1:
        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("add mistmatch with declared components.");

        throw $r1;
    }

    public android.renderscript.Mesh$TriangleMeshBuilder setTexture(float, float)
    {
        android.renderscript.Mesh$TriangleMeshBuilder r0;
        float f0, f1;
        int $i0, $i1;
        java.lang.IllegalStateException $r1;

        r0 := @this: android.renderscript.Mesh$TriangleMeshBuilder;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $i0 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mFlags>;

        $i1 = $i0 & 256;

        if $i1 == 0 goto label1;

        r0.<android.renderscript.Mesh$TriangleMeshBuilder: float mS0> = f0;

        r0.<android.renderscript.Mesh$TriangleMeshBuilder: float mT0> = f1;

        return r0;

     label1:
        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("add mistmatch with declared components.");

        throw $r1;
    }

    public static void <clinit>()
    {
        <android.renderscript.Mesh$TriangleMeshBuilder: int TEXTURE_0> = 256;

        <android.renderscript.Mesh$TriangleMeshBuilder: int NORMAL> = 2;

        <android.renderscript.Mesh$TriangleMeshBuilder: int COLOR> = 1;

        return;
    }
}
