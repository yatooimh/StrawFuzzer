public class android.renderscript.ProgramVertexFixedFunction$Builder extends java.lang.Object
{
    android.renderscript.RenderScript mRS;
    java.lang.String mShader;
    boolean mTextureMatrixEnable;

    public void <init>(android.renderscript.RenderScript)
    {
        android.renderscript.ProgramVertexFixedFunction$Builder r0;
        android.renderscript.RenderScript r1;

        r0 := @this: android.renderscript.ProgramVertexFixedFunction$Builder;

        r1 := @parameter0: android.renderscript.RenderScript;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.renderscript.ProgramVertexFixedFunction$Builder: android.renderscript.RenderScript mRS> = r1;

        return;
    }

    private void buildShaderString()
    {
        android.renderscript.ProgramVertexFixedFunction$Builder r0;
        java.lang.StringBuilder $r1, $r6, $r11, $r16, $r21, $r26, $r31, $r36, $r41;
        java.lang.String $r2, $r5, $r7, $r10, $r12, $r15, $r17, $r20, $r22, $r25, $r27, $r30, $r32, $r35, $r37, $r40, $r42, $r45;
        boolean $z0;

        r0 := @this: android.renderscript.ProgramVertexFixedFunction$Builder;

        r0.<android.renderscript.ProgramVertexFixedFunction$Builder: java.lang.String mShader> = "//rs_shader_internal\n";

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = r0.<android.renderscript.ProgramVertexFixedFunction$Builder: java.lang.String mShader>;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("varying vec4 varColor;\n");

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<android.renderscript.ProgramVertexFixedFunction$Builder: java.lang.String mShader> = $r5;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = r0.<android.renderscript.ProgramVertexFixedFunction$Builder: java.lang.String mShader>;

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("varying vec2 varTex0;\n");

        $r10 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<android.renderscript.ProgramVertexFixedFunction$Builder: java.lang.String mShader> = $r10;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = r0.<android.renderscript.ProgramVertexFixedFunction$Builder: java.lang.String mShader>;

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("void main() {\n");

        $r15 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<android.renderscript.ProgramVertexFixedFunction$Builder: java.lang.String mShader> = $r15;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r17 = r0.<android.renderscript.ProgramVertexFixedFunction$Builder: java.lang.String mShader>;

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  gl_Position = UNI_MVP * ATTRIB_position;\n");

        $r20 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<android.renderscript.ProgramVertexFixedFunction$Builder: java.lang.String mShader> = $r20;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r22 = r0.<android.renderscript.ProgramVertexFixedFunction$Builder: java.lang.String mShader>;

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  gl_PointSize = 1.0;\n");

        $r25 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<android.renderscript.ProgramVertexFixedFunction$Builder: java.lang.String mShader> = $r25;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r27 = r0.<android.renderscript.ProgramVertexFixedFunction$Builder: java.lang.String mShader>;

        virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

        virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  varColor = ATTRIB_color;\n");

        $r30 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<android.renderscript.ProgramVertexFixedFunction$Builder: java.lang.String mShader> = $r30;

        $z0 = r0.<android.renderscript.ProgramVertexFixedFunction$Builder: boolean mTextureMatrixEnable>;

        if $z0 == 0 goto label1;

        $r41 = new java.lang.StringBuilder;

        specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();

        $r42 = r0.<android.renderscript.ProgramVertexFixedFunction$Builder: java.lang.String mShader>;

        virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r42);

        virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  varTex0 = (UNI_TexMatrix * vec4(ATTRIB_texture0, 0.0, 1.0)).xy;\n");

        $r45 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<android.renderscript.ProgramVertexFixedFunction$Builder: java.lang.String mShader> = $r45;

        goto label2;

     label1:
        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        $r32 = r0.<android.renderscript.ProgramVertexFixedFunction$Builder: java.lang.String mShader>;

        virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32);

        virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  varTex0 = ATTRIB_texture0;\n");

        $r35 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<android.renderscript.ProgramVertexFixedFunction$Builder: java.lang.String mShader> = $r35;

     label2:
        $r36 = new java.lang.StringBuilder;

        specialinvoke $r36.<java.lang.StringBuilder: void <init>()>();

        $r37 = r0.<android.renderscript.ProgramVertexFixedFunction$Builder: java.lang.String mShader>;

        virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r37);

        virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}\n");

        $r40 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<android.renderscript.ProgramVertexFixedFunction$Builder: java.lang.String mShader> = $r40;

        return;
    }

    static android.renderscript.Type getConstantInputType(android.renderscript.RenderScript)
    {
        android.renderscript.Element$Builder $r1;
        android.renderscript.Element $r2, $r4, $r6, $r8, $r11;
        android.renderscript.Type$Builder $r10;
        android.renderscript.Type $r13;
        android.renderscript.RenderScript r14;

        r14 := @parameter0: android.renderscript.RenderScript;

        $r1 = new android.renderscript.Element$Builder;

        specialinvoke $r1.<android.renderscript.Element$Builder: void <init>(android.renderscript.RenderScript)>(r14);

        $r2 = staticinvoke <android.renderscript.Element: android.renderscript.Element MATRIX4X4(android.renderscript.RenderScript)>(r14);

        virtualinvoke $r1.<android.renderscript.Element$Builder: android.renderscript.Element$Builder add(android.renderscript.Element,java.lang.String)>($r2, "MV");

        $r4 = staticinvoke <android.renderscript.Element: android.renderscript.Element MATRIX4X4(android.renderscript.RenderScript)>(r14);

        virtualinvoke $r1.<android.renderscript.Element$Builder: android.renderscript.Element$Builder add(android.renderscript.Element,java.lang.String)>($r4, "P");

        $r6 = staticinvoke <android.renderscript.Element: android.renderscript.Element MATRIX4X4(android.renderscript.RenderScript)>(r14);

        virtualinvoke $r1.<android.renderscript.Element$Builder: android.renderscript.Element$Builder add(android.renderscript.Element,java.lang.String)>($r6, "TexMatrix");

        $r8 = staticinvoke <android.renderscript.Element: android.renderscript.Element MATRIX4X4(android.renderscript.RenderScript)>(r14);

        virtualinvoke $r1.<android.renderscript.Element$Builder: android.renderscript.Element$Builder add(android.renderscript.Element,java.lang.String)>($r8, "MVP");

        $r10 = new android.renderscript.Type$Builder;

        $r11 = virtualinvoke $r1.<android.renderscript.Element$Builder: android.renderscript.Element create()>();

        specialinvoke $r10.<android.renderscript.Type$Builder: void <init>(android.renderscript.RenderScript,android.renderscript.Element)>(r14, $r11);

        virtualinvoke $r10.<android.renderscript.Type$Builder: android.renderscript.Type$Builder setX(int)>(1);

        $r13 = virtualinvoke $r10.<android.renderscript.Type$Builder: android.renderscript.Type create()>();

        return $r13;
    }

    public android.renderscript.ProgramVertexFixedFunction create()
    {
        android.renderscript.ProgramVertexFixedFunction$Builder r0;
        android.renderscript.ProgramVertexFixedFunction$InternalBuilder $r3;
        android.renderscript.RenderScript $r4, $r7, $r11, $r12, $r15, $r18, $r21;
        java.lang.String $r5;
        android.renderscript.Type $r8;
        android.renderscript.Element$Builder $r10;
        android.renderscript.Element $r13, $r16, $r19, $r22, $r24;
        android.renderscript.ProgramVertexFixedFunction $r26;

        r0 := @this: android.renderscript.ProgramVertexFixedFunction$Builder;

        specialinvoke r0.<android.renderscript.ProgramVertexFixedFunction$Builder: void buildShaderString()>();

        $r3 = new android.renderscript.ProgramVertexFixedFunction$InternalBuilder;

        $r4 = r0.<android.renderscript.ProgramVertexFixedFunction$Builder: android.renderscript.RenderScript mRS>;

        specialinvoke $r3.<android.renderscript.ProgramVertexFixedFunction$InternalBuilder: void <init>(android.renderscript.RenderScript)>($r4);

        $r5 = r0.<android.renderscript.ProgramVertexFixedFunction$Builder: java.lang.String mShader>;

        virtualinvoke $r3.<android.renderscript.ProgramVertexFixedFunction$InternalBuilder: android.renderscript.Program$BaseProgramBuilder setShader(java.lang.String)>($r5);

        $r7 = r0.<android.renderscript.ProgramVertexFixedFunction$Builder: android.renderscript.RenderScript mRS>;

        $r8 = staticinvoke <android.renderscript.ProgramVertexFixedFunction$Builder: android.renderscript.Type getConstantInputType(android.renderscript.RenderScript)>($r7);

        virtualinvoke $r3.<android.renderscript.ProgramVertexFixedFunction$InternalBuilder: android.renderscript.Program$BaseProgramBuilder addConstant(android.renderscript.Type)>($r8);

        $r10 = new android.renderscript.Element$Builder;

        $r11 = r0.<android.renderscript.ProgramVertexFixedFunction$Builder: android.renderscript.RenderScript mRS>;

        specialinvoke $r10.<android.renderscript.Element$Builder: void <init>(android.renderscript.RenderScript)>($r11);

        $r12 = r0.<android.renderscript.ProgramVertexFixedFunction$Builder: android.renderscript.RenderScript mRS>;

        $r13 = staticinvoke <android.renderscript.Element: android.renderscript.Element F32_4(android.renderscript.RenderScript)>($r12);

        virtualinvoke $r10.<android.renderscript.Element$Builder: android.renderscript.Element$Builder add(android.renderscript.Element,java.lang.String)>($r13, "position");

        $r15 = r0.<android.renderscript.ProgramVertexFixedFunction$Builder: android.renderscript.RenderScript mRS>;

        $r16 = staticinvoke <android.renderscript.Element: android.renderscript.Element F32_4(android.renderscript.RenderScript)>($r15);

        virtualinvoke $r10.<android.renderscript.Element$Builder: android.renderscript.Element$Builder add(android.renderscript.Element,java.lang.String)>($r16, "color");

        $r18 = r0.<android.renderscript.ProgramVertexFixedFunction$Builder: android.renderscript.RenderScript mRS>;

        $r19 = staticinvoke <android.renderscript.Element: android.renderscript.Element F32_3(android.renderscript.RenderScript)>($r18);

        virtualinvoke $r10.<android.renderscript.Element$Builder: android.renderscript.Element$Builder add(android.renderscript.Element,java.lang.String)>($r19, "normal");

        $r21 = r0.<android.renderscript.ProgramVertexFixedFunction$Builder: android.renderscript.RenderScript mRS>;

        $r22 = staticinvoke <android.renderscript.Element: android.renderscript.Element F32_2(android.renderscript.RenderScript)>($r21);

        virtualinvoke $r10.<android.renderscript.Element$Builder: android.renderscript.Element$Builder add(android.renderscript.Element,java.lang.String)>($r22, "texture0");

        $r24 = virtualinvoke $r10.<android.renderscript.Element$Builder: android.renderscript.Element create()>();

        virtualinvoke $r3.<android.renderscript.ProgramVertexFixedFunction$InternalBuilder: android.renderscript.ProgramVertexFixedFunction$InternalBuilder addInput(android.renderscript.Element)>($r24);

        $r26 = virtualinvoke $r3.<android.renderscript.ProgramVertexFixedFunction$InternalBuilder: android.renderscript.ProgramVertexFixedFunction create()>();

        return $r26;
    }

    public android.renderscript.ProgramVertexFixedFunction$Builder setTextureMatrixEnable(boolean)
    {
        android.renderscript.ProgramVertexFixedFunction$Builder r0;
        boolean z0;

        r0 := @this: android.renderscript.ProgramVertexFixedFunction$Builder;

        z0 := @parameter0: boolean;

        r0.<android.renderscript.ProgramVertexFixedFunction$Builder: boolean mTextureMatrixEnable> = z0;

        return r0;
    }
}
