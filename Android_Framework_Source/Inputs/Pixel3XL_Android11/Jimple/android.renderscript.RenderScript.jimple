public class android.renderscript.RenderScript extends java.lang.Object
{
    public static final int CREATE_FLAG_LOW_LATENCY;
    public static final int CREATE_FLAG_LOW_POWER;
    public static final int CREATE_FLAG_NONE;
    public static final int CREATE_FLAG_WAIT_FOR_ATTACH;
    static final boolean DEBUG;
    static final boolean LOG_ENABLED;
    static final java.lang.String LOG_TAG;
    static final long TRACE_TAG;
    private static java.lang.String mCachePath;
    private static java.util.ArrayList mProcessContextList;
    static java.lang.reflect.Method registerNativeAllocation;
    static java.lang.reflect.Method registerNativeFree;
    static boolean sInitialized;
    static final long sMinorVersion;
    static int sPointerSize;
    static java.lang.Object sRuntime;
    private android.content.Context mApplicationContext;
    long mContext;
    private int mContextFlags;
    private int mContextSdkVersion;
    android.renderscript.RenderScript$ContextType mContextType;
    private boolean mDestroyed;
    volatile android.renderscript.Element mElement_ALLOCATION;
    volatile android.renderscript.Element mElement_A_8;
    volatile android.renderscript.Element mElement_BOOLEAN;
    volatile android.renderscript.Element mElement_CHAR_2;
    volatile android.renderscript.Element mElement_CHAR_3;
    volatile android.renderscript.Element mElement_CHAR_4;
    volatile android.renderscript.Element mElement_DOUBLE_2;
    volatile android.renderscript.Element mElement_DOUBLE_3;
    volatile android.renderscript.Element mElement_DOUBLE_4;
    volatile android.renderscript.Element mElement_ELEMENT;
    volatile android.renderscript.Element mElement_F16;
    volatile android.renderscript.Element mElement_F32;
    volatile android.renderscript.Element mElement_F64;
    volatile android.renderscript.Element mElement_FLOAT_2;
    volatile android.renderscript.Element mElement_FLOAT_3;
    volatile android.renderscript.Element mElement_FLOAT_4;
    volatile android.renderscript.Element mElement_FONT;
    volatile android.renderscript.Element mElement_HALF_2;
    volatile android.renderscript.Element mElement_HALF_3;
    volatile android.renderscript.Element mElement_HALF_4;
    volatile android.renderscript.Element mElement_I16;
    volatile android.renderscript.Element mElement_I32;
    volatile android.renderscript.Element mElement_I64;
    volatile android.renderscript.Element mElement_I8;
    volatile android.renderscript.Element mElement_INT_2;
    volatile android.renderscript.Element mElement_INT_3;
    volatile android.renderscript.Element mElement_INT_4;
    volatile android.renderscript.Element mElement_LONG_2;
    volatile android.renderscript.Element mElement_LONG_3;
    volatile android.renderscript.Element mElement_LONG_4;
    volatile android.renderscript.Element mElement_MATRIX_2X2;
    volatile android.renderscript.Element mElement_MATRIX_3X3;
    volatile android.renderscript.Element mElement_MATRIX_4X4;
    volatile android.renderscript.Element mElement_MESH;
    volatile android.renderscript.Element mElement_PROGRAM_FRAGMENT;
    volatile android.renderscript.Element mElement_PROGRAM_RASTER;
    volatile android.renderscript.Element mElement_PROGRAM_STORE;
    volatile android.renderscript.Element mElement_PROGRAM_VERTEX;
    volatile android.renderscript.Element mElement_RGBA_4444;
    volatile android.renderscript.Element mElement_RGBA_5551;
    volatile android.renderscript.Element mElement_RGBA_8888;
    volatile android.renderscript.Element mElement_RGB_565;
    volatile android.renderscript.Element mElement_RGB_888;
    volatile android.renderscript.Element mElement_SAMPLER;
    volatile android.renderscript.Element mElement_SCRIPT;
    volatile android.renderscript.Element mElement_SHORT_2;
    volatile android.renderscript.Element mElement_SHORT_3;
    volatile android.renderscript.Element mElement_SHORT_4;
    volatile android.renderscript.Element mElement_TYPE;
    volatile android.renderscript.Element mElement_U16;
    volatile android.renderscript.Element mElement_U32;
    volatile android.renderscript.Element mElement_U64;
    volatile android.renderscript.Element mElement_U8;
    volatile android.renderscript.Element mElement_UCHAR_2;
    volatile android.renderscript.Element mElement_UCHAR_3;
    volatile android.renderscript.Element mElement_UCHAR_4;
    volatile android.renderscript.Element mElement_UINT_2;
    volatile android.renderscript.Element mElement_UINT_3;
    volatile android.renderscript.Element mElement_UINT_4;
    volatile android.renderscript.Element mElement_ULONG_2;
    volatile android.renderscript.Element mElement_ULONG_3;
    volatile android.renderscript.Element mElement_ULONG_4;
    volatile android.renderscript.Element mElement_USHORT_2;
    volatile android.renderscript.Element mElement_USHORT_3;
    volatile android.renderscript.Element mElement_USHORT_4;
    volatile android.renderscript.Element mElement_YUV;
    android.renderscript.RenderScript$RSErrorHandler mErrorCallback;
    private boolean mIsProcessContext;
    android.renderscript.RenderScript$RSMessageHandler mMessageCallback;
    android.renderscript.RenderScript$MessageThread mMessageThread;
    android.renderscript.ProgramRaster mProgramRaster_CULL_BACK;
    android.renderscript.ProgramRaster mProgramRaster_CULL_FRONT;
    android.renderscript.ProgramRaster mProgramRaster_CULL_NONE;
    android.renderscript.ProgramStore mProgramStore_BLEND_ALPHA_DEPTH_NO_DEPTH;
    android.renderscript.ProgramStore mProgramStore_BLEND_ALPHA_DEPTH_TEST;
    android.renderscript.ProgramStore mProgramStore_BLEND_NONE_DEPTH_NO_DEPTH;
    android.renderscript.ProgramStore mProgramStore_BLEND_NONE_DEPTH_TEST;
    java.util.concurrent.locks.ReentrantReadWriteLock mRWLock;
    volatile android.renderscript.Sampler mSampler_CLAMP_LINEAR;
    volatile android.renderscript.Sampler mSampler_CLAMP_LINEAR_MIP_LINEAR;
    volatile android.renderscript.Sampler mSampler_CLAMP_NEAREST;
    volatile android.renderscript.Sampler mSampler_MIRRORED_REPEAT_LINEAR;
    volatile android.renderscript.Sampler mSampler_MIRRORED_REPEAT_LINEAR_MIP_LINEAR;
    volatile android.renderscript.Sampler mSampler_MIRRORED_REPEAT_NEAREST;
    volatile android.renderscript.Sampler mSampler_WRAP_LINEAR;
    volatile android.renderscript.Sampler mSampler_WRAP_LINEAR_MIP_LINEAR;
    volatile android.renderscript.Sampler mSampler_WRAP_NEAREST;

    static void <clinit>()
    {
        java.util.ArrayList $r0;
        boolean $z0;
        java.lang.Class[] $r1, $r5, $r8;
        java.lang.reflect.Method $r2, $r7, $r10;
        java.lang.Object[] $r3;
        java.lang.Object $r4;
        java.lang.Class $r6, $r9, r31;
        int $i0;
        java.lang.UnsatisfiedLinkError $r11;
        java.lang.StringBuilder $r12, $r16, $r22, $r26;
        java.lang.String $r15, $r20, $r25, $r30;
        android.renderscript.RSRuntimeException $r19, $r29;
        java.lang.Exception $r21;

        <android.renderscript.RenderScript: long sMinorVersion> = 1L;

        <android.renderscript.RenderScript: long TRACE_TAG> = 32768L;

        <android.renderscript.RenderScript: java.lang.String LOG_TAG> = "RenderScript_jni";

        <android.renderscript.RenderScript: boolean LOG_ENABLED> = 0;

        <android.renderscript.RenderScript: boolean DEBUG> = 0;

        <android.renderscript.RenderScript: int CREATE_FLAG_WAIT_FOR_ATTACH> = 8;

        <android.renderscript.RenderScript: int CREATE_FLAG_NONE> = 0;

        <android.renderscript.RenderScript: int CREATE_FLAG_LOW_POWER> = 4;

        <android.renderscript.RenderScript: int CREATE_FLAG_LOW_LATENCY> = 2;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        <android.renderscript.RenderScript: java.util.ArrayList mProcessContextList> = $r0;

        <android.renderscript.RenderScript: boolean sInitialized> = 0;

        $z0 = staticinvoke <android.os.SystemProperties: boolean getBoolean(java.lang.String,boolean)>("config.disable_renderscript", 0);

        if $z0 != 0 goto label6;

     label1:
        r31 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("dalvik.system.VMRuntime");

        $r1 = newarray (java.lang.Class)[0];

        $r2 = virtualinvoke r31.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("getRuntime", $r1);

        $r3 = newarray (java.lang.Object)[0];

        $r4 = virtualinvoke $r2.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $r3);

        <android.renderscript.RenderScript: java.lang.Object sRuntime> = $r4;

        $r5 = newarray (java.lang.Class)[1];

        $r6 = <java.lang.Long: java.lang.Class TYPE>;

        $r5[0] = $r6;

        $r7 = virtualinvoke r31.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("registerNativeAllocation", $r5);

        <android.renderscript.RenderScript: java.lang.reflect.Method registerNativeAllocation> = $r7;

        $r8 = newarray (java.lang.Class)[1];

        $r9 = <java.lang.Long: java.lang.Class TYPE>;

        $r8[0] = $r9;

        $r10 = virtualinvoke r31.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("registerNativeFree", $r8);

        <android.renderscript.RenderScript: java.lang.reflect.Method registerNativeFree> = $r10;

     label2:
        staticinvoke <java.lang.System: void loadLibrary(java.lang.String)>("rs_jni");

        staticinvoke <android.renderscript.RenderScript: void _nInit()>();

        <android.renderscript.RenderScript: boolean sInitialized> = 1;

        $i0 = staticinvoke <android.renderscript.RenderScript: int rsnSystemGetPointerSize()>();

        <android.renderscript.RenderScript: int sPointerSize> = $i0;

     label3:
        goto label6;

     label4:
        $r11 := @caughtexception;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error loading RS jni library: ");

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11);

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("RenderScript_jni", $r15);

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error loading RS jni library: ");

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11);

        $r19 = new android.renderscript.RSRuntimeException;

        $r20 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r19.<android.renderscript.RSRuntimeException: void <init>(java.lang.String)>($r20);

        throw $r19;

     label5:
        $r21 := @caughtexception;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error loading GC methods: ");

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r21);

        $r25 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("RenderScript_jni", $r25);

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error loading GC methods: ");

        virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r21);

        $r29 = new android.renderscript.RSRuntimeException;

        $r30 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r29.<android.renderscript.RSRuntimeException: void <init>(java.lang.String)>($r30);

        throw $r29;

     label6:
        return;

        catch java.lang.Exception from label1 to label2 with label5;
        catch java.lang.UnsatisfiedLinkError from label2 to label3 with label4;
    }

    void <init>(android.content.Context)
    {
        android.renderscript.RenderScript r0;
        android.renderscript.RenderScript$ContextType $r1;
        java.util.concurrent.locks.ReentrantReadWriteLock $r2;
        java.lang.Object[] $r3;
        java.lang.reflect.Method $r4;
        java.lang.Object $r5;
        java.lang.Integer $r6;
        android.content.Context $r8, r19;
        java.lang.Exception $r9;
        java.lang.StringBuilder $r10, $r14;
        java.lang.String $r13, $r18;
        android.renderscript.RSRuntimeException $r17;

        r0 := @this: android.renderscript.RenderScript;

        r19 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.renderscript.RenderScript: boolean mIsProcessContext> = 0;

        r0.<android.renderscript.RenderScript: int mContextFlags> = 0;

        r0.<android.renderscript.RenderScript: int mContextSdkVersion> = 0;

        r0.<android.renderscript.RenderScript: boolean mDestroyed> = 0;

        r0.<android.renderscript.RenderScript: android.renderscript.RenderScript$RSMessageHandler mMessageCallback> = null;

        r0.<android.renderscript.RenderScript: android.renderscript.RenderScript$RSErrorHandler mErrorCallback> = null;

        $r1 = <android.renderscript.RenderScript$ContextType: android.renderscript.RenderScript$ContextType NORMAL>;

        r0.<android.renderscript.RenderScript: android.renderscript.RenderScript$ContextType mContextType> = $r1;

        if r19 == null goto label1;

        $r8 = virtualinvoke r19.<android.content.Context: android.content.Context getApplicationContext()>();

        r0.<android.renderscript.RenderScript: android.content.Context mApplicationContext> = $r8;

     label1:
        $r2 = new java.util.concurrent.locks.ReentrantReadWriteLock;

        specialinvoke $r2.<java.util.concurrent.locks.ReentrantReadWriteLock: void <init>()>();

        r0.<android.renderscript.RenderScript: java.util.concurrent.locks.ReentrantReadWriteLock mRWLock> = $r2;

     label2:
        $r4 = <android.renderscript.RenderScript: java.lang.reflect.Method registerNativeAllocation>;

        $r5 = <android.renderscript.RenderScript: java.lang.Object sRuntime>;

        $r3 = newarray (java.lang.Object)[1];

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4194304);

        $r3[0] = $r6;

        virtualinvoke $r4.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r5, $r3);

     label3:
        return;

     label4:
        $r9 := @caughtexception;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Couldn\'t invoke registerNativeAllocation:");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("RenderScript_jni", $r13);

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Couldn\'t invoke registerNativeAllocation:");

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r17 = new android.renderscript.RSRuntimeException;

        $r18 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r17.<android.renderscript.RSRuntimeException: void <init>(java.lang.String)>($r18);

        throw $r17;

        catch java.lang.Exception from label2 to label3 with label4;
    }

    static native void _nInit();

    public static android.renderscript.RenderScript create(android.content.Context)
    {
        android.content.Context r0;
        android.renderscript.RenderScript$ContextType $r1;
        android.renderscript.RenderScript $r2;

        r0 := @parameter0: android.content.Context;

        $r1 = <android.renderscript.RenderScript$ContextType: android.renderscript.RenderScript$ContextType NORMAL>;

        $r2 = staticinvoke <android.renderscript.RenderScript: android.renderscript.RenderScript create(android.content.Context,android.renderscript.RenderScript$ContextType)>(r0, $r1);

        return $r2;
    }

    public static android.renderscript.RenderScript create(android.content.Context, int)
    {
        android.content.Context r0;
        int i0;
        android.renderscript.RenderScript$ContextType $r1;
        android.renderscript.RenderScript $r2;

        r0 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        $r1 = <android.renderscript.RenderScript$ContextType: android.renderscript.RenderScript$ContextType NORMAL>;

        $r2 = staticinvoke <android.renderscript.RenderScript: android.renderscript.RenderScript create(android.content.Context,int,android.renderscript.RenderScript$ContextType,int)>(r0, i0, $r1, 0);

        return $r2;
    }

    private static android.renderscript.RenderScript create(android.content.Context, int, android.renderscript.RenderScript$ContextType, int)
    {
        int i0, i1, $i2, $i3;
        android.renderscript.RenderScript$ContextType r0, $r7;
        java.util.ArrayList r1, $r4, $r5;
        java.util.Iterator r2;
        android.renderscript.RenderScript r3, $r8, r11;
        boolean $z0;
        java.lang.Object $r6;
        java.lang.Throwable $r9;
        android.content.Context r10;

        r10 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        r0 := @parameter2: android.renderscript.RenderScript$ContextType;

        i1 := @parameter3: int;

        if i0 >= 23 goto label01;

        $r8 = staticinvoke <android.renderscript.RenderScript: android.renderscript.RenderScript internalCreate(android.content.Context,int,android.renderscript.RenderScript$ContextType,int)>(r10, i0, r0, i1);

        return $r8;

     label01:
        r1 = <android.renderscript.RenderScript: java.util.ArrayList mProcessContextList>;

        entermonitor r1;

     label02:
        $r4 = <android.renderscript.RenderScript: java.util.ArrayList mProcessContextList>;

        r2 = virtualinvoke $r4.<java.util.ArrayList: java.util.Iterator iterator()>();

     label03:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label06;

        $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.renderscript.RenderScript) $r6;

        $r7 = r3.<android.renderscript.RenderScript: android.renderscript.RenderScript$ContextType mContextType>;

        if $r7 != r0 goto label05;

        $i2 = r3.<android.renderscript.RenderScript: int mContextFlags>;

        if $i2 != i1 goto label05;

        $i3 = r3.<android.renderscript.RenderScript: int mContextSdkVersion>;

        if $i3 != i0 goto label05;

        exitmonitor r1;

     label04:
        return r3;

     label05:
        goto label03;

     label06:
        r11 = staticinvoke <android.renderscript.RenderScript: android.renderscript.RenderScript internalCreate(android.content.Context,int,android.renderscript.RenderScript$ContextType,int)>(r10, i0, r0, i1);

        r11.<android.renderscript.RenderScript: boolean mIsProcessContext> = 1;

        $r5 = <android.renderscript.RenderScript: java.util.ArrayList mProcessContextList>;

        virtualinvoke $r5.<java.util.ArrayList: boolean add(java.lang.Object)>(r11);

        exitmonitor r1;

     label07:
        return r11;

     label08:
        $r9 := @caughtexception;

     label09:
        exitmonitor r1;

     label10:
        throw $r9;

        catch java.lang.Throwable from label02 to label03 with label08;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    public static android.renderscript.RenderScript create(android.content.Context, android.renderscript.RenderScript$ContextType)
    {
        android.content.Context r0;
        android.renderscript.RenderScript$ContextType r1;
        android.renderscript.RenderScript $r2;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: android.renderscript.RenderScript$ContextType;

        $r2 = staticinvoke <android.renderscript.RenderScript: android.renderscript.RenderScript create(android.content.Context,android.renderscript.RenderScript$ContextType,int)>(r0, r1, 0);

        return $r2;
    }

    public static android.renderscript.RenderScript create(android.content.Context, android.renderscript.RenderScript$ContextType, int)
    {
        android.content.Context r0;
        android.renderscript.RenderScript$ContextType r1;
        int i0, $i1;
        android.content.pm.ApplicationInfo $r2;
        android.renderscript.RenderScript $r3;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: android.renderscript.RenderScript$ContextType;

        i0 := @parameter2: int;

        $r2 = virtualinvoke r0.<android.content.Context: android.content.pm.ApplicationInfo getApplicationInfo()>();

        $i1 = $r2.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

        $r3 = staticinvoke <android.renderscript.RenderScript: android.renderscript.RenderScript create(android.content.Context,int,android.renderscript.RenderScript$ContextType,int)>(r0, $i1, r1, i0);

        return $r3;
    }

    public static android.renderscript.RenderScript createMultiContext(android.content.Context, android.renderscript.RenderScript$ContextType, int, int)
    {
        android.content.Context r0;
        android.renderscript.RenderScript$ContextType r1;
        int i0, i1;
        android.renderscript.RenderScript $r2;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: android.renderscript.RenderScript$ContextType;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        $r2 = staticinvoke <android.renderscript.RenderScript: android.renderscript.RenderScript internalCreate(android.content.Context,int,android.renderscript.RenderScript$ContextType,int)>(r0, i1, r1, i0);

        return $r2;
    }

    static java.lang.String getCachePath()
    {
        java.lang.String $r0, $r3, r7;
        java.io.File $r1, $r2, r5;
        java.lang.Throwable $r4;
        android.renderscript.RSRuntimeException r6;

        entermonitor class "Landroid/renderscript/RenderScript;";

     label1:
        $r0 = <android.renderscript.RenderScript: java.lang.String mCachePath>;

        if $r0 != null goto label4;

        $r1 = <android.renderscript.RenderScriptCacheDir: java.io.File mCacheDir>;

        if $r1 == null goto label3;

        r5 = new java.io.File;

        $r2 = <android.renderscript.RenderScriptCacheDir: java.io.File mCacheDir>;

        specialinvoke r5.<java.io.File: void <init>(java.io.File,java.lang.String)>($r2, "com.android.renderscript.cache");

        $r3 = virtualinvoke r5.<java.io.File: java.lang.String getAbsolutePath()>();

        <android.renderscript.RenderScript: java.lang.String mCachePath> = $r3;

        virtualinvoke r5.<java.io.File: boolean mkdirs()>();

     label2:
        goto label4;

     label3:
        r6 = new android.renderscript.RSRuntimeException;

        specialinvoke r6.<android.renderscript.RSRuntimeException: void <init>(java.lang.String)>("RenderScript code cache directory uninitialized.");

        throw r6;

     label4:
        r7 = <android.renderscript.RenderScript: java.lang.String mCachePath>;

     label5:
        exitmonitor class "Landroid/renderscript/RenderScript;";

        return r7;

     label6:
        $r4 := @caughtexception;

        exitmonitor class "Landroid/renderscript/RenderScript;";

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
    }

    public static long getMinorID()
    {
        return 1L;
    }

    public static long getMinorVersion()
    {
        return 1L;
    }

    private void helpDestroy()
    {
        android.renderscript.RenderScript r0;
        boolean $z0, z1, z2, z3;
        long $l0;
        android.renderscript.RenderScript$MessageThread $r1, $r2, $r4;
        java.lang.Thread $r3;
        java.lang.Throwable $r5, $r6;

        r0 := @this: android.renderscript.RenderScript;

        z1 = 0;

        entermonitor r0;

     label01:
        $z0 = r0.<android.renderscript.RenderScript: boolean mDestroyed>;

        if $z0 != 0 goto label04;

     label02:
        z1 = 1;

     label03:
        r0.<android.renderscript.RenderScript: boolean mDestroyed> = 1;

     label04:
        exitmonitor r0;

     label05:
        if z1 == 0 goto label13;

        virtualinvoke r0.<android.renderscript.RenderScript: void nContextFinish()>();

        $l0 = r0.<android.renderscript.RenderScript: long mContext>;

        virtualinvoke r0.<android.renderscript.RenderScript: void nContextDeinitToClient(long)>($l0);

        $r1 = r0.<android.renderscript.RenderScript: android.renderscript.RenderScript$MessageThread mMessageThread>;

        $r1.<android.renderscript.RenderScript$MessageThread: boolean mRun> = 0;

        $r2 = r0.<android.renderscript.RenderScript: android.renderscript.RenderScript$MessageThread mMessageThread>;

        virtualinvoke $r2.<android.renderscript.RenderScript$MessageThread: void interrupt()>();

        z2 = 0;

        z3 = 0;

     label06:
        if z2 != 0 goto label11;

     label07:
        $r4 = r0.<android.renderscript.RenderScript: android.renderscript.RenderScript$MessageThread mMessageThread>;

        virtualinvoke $r4.<android.renderscript.RenderScript$MessageThread: void join()>();

     label08:
        z2 = 1;

        goto label10;

     label09:
        $r5 := @caughtexception;

        z3 = 1;

     label10:
        goto label06;

     label11:
        if z3 == 0 goto label12;

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("RenderScript_jni", "Interrupted during wait for MessageThread to join");

        $r3 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        virtualinvoke $r3.<java.lang.Thread: void interrupt()>();

     label12:
        virtualinvoke r0.<android.renderscript.RenderScript: void nContextDestroy()>();

     label13:
        return;

     label14:
        $r6 := @caughtexception;

     label15:
        exitmonitor r0;

     label16:
        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label14;
        catch java.lang.Throwable from label03 to label04 with label14;
        catch java.lang.Throwable from label04 to label05 with label14;
        catch java.lang.InterruptedException from label07 to label08 with label09;
        catch java.lang.Throwable from label15 to label16 with label14;
    }

    private static android.renderscript.RenderScript internalCreate(android.content.Context, int, android.renderscript.RenderScript$ContextType, int)
    {
        int i0, i1, $i3, $i5;
        long l2, $l4;
        boolean $z0;
        android.renderscript.RSIllegalArgumentException $r0;
        android.renderscript.RenderScript $r1;
        byte $b6;
        android.renderscript.RSDriverException $r2;
        java.lang.String $r3;
        android.renderscript.RenderScript$MessageThread $r4;
        android.content.Context r5;
        android.renderscript.RenderScript$ContextType r6;

        r5 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        r6 := @parameter2: android.renderscript.RenderScript$ContextType;

        i1 := @parameter3: int;

        $z0 = <android.renderscript.RenderScript: boolean sInitialized>;

        if $z0 != 0 goto label1;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("RenderScript_jni", "RenderScript.create() called when disabled; someone is likely to crash");

        return null;

     label1:
        $i3 = i1 & -15;

        if $i3 != 0 goto label3;

        $r1 = new android.renderscript.RenderScript;

        specialinvoke $r1.<android.renderscript.RenderScript: void <init>(android.content.Context)>(r5);

        $l4 = virtualinvoke $r1.<android.renderscript.RenderScript: long nDeviceCreate()>();

        $i5 = r6.<android.renderscript.RenderScript$ContextType: int mID>;

        l2 = virtualinvoke $r1.<android.renderscript.RenderScript: long nContextCreate(long,int,int,int)>($l4, i1, i0, $i5);

        $r1.<android.renderscript.RenderScript: long mContext> = l2;

        $r1.<android.renderscript.RenderScript: android.renderscript.RenderScript$ContextType mContextType> = r6;

        $r1.<android.renderscript.RenderScript: int mContextFlags> = i1;

        $r1.<android.renderscript.RenderScript: int mContextSdkVersion> = i0;

        $b6 = l2 cmp 0L;

        if $b6 == 0 goto label2;

        $r3 = staticinvoke <android.renderscript.RenderScript: java.lang.String getCachePath()>();

        virtualinvoke $r1.<android.renderscript.RenderScript: void nContextSetCacheDir(java.lang.String)>($r3);

        $r4 = new android.renderscript.RenderScript$MessageThread;

        specialinvoke $r4.<android.renderscript.RenderScript$MessageThread: void <init>(android.renderscript.RenderScript)>($r1);

        $r1.<android.renderscript.RenderScript: android.renderscript.RenderScript$MessageThread mMessageThread> = $r4;

        virtualinvoke $r4.<android.renderscript.RenderScript$MessageThread: void start()>();

        return $r1;

     label2:
        $r2 = new android.renderscript.RSDriverException;

        specialinvoke $r2.<android.renderscript.RSDriverException: void <init>(java.lang.String)>("Failed to create RS context.");

        throw $r2;

     label3:
        $r0 = new android.renderscript.RSIllegalArgumentException;

        specialinvoke $r0.<android.renderscript.RSIllegalArgumentException: void <init>(java.lang.String)>("Invalid flags passed.");

        throw $r0;
    }

    public static void releaseAllContexts()
    {
        boolean $z0;
        java.lang.Object $r0;
        java.lang.Throwable $r1;
        java.util.ArrayList r2, r3, r4;
        java.util.Iterator r5;
        android.renderscript.RenderScript r6;

        r2 = <android.renderscript.RenderScript: java.util.ArrayList mProcessContextList>;

        entermonitor r2;

     label1:
        r3 = <android.renderscript.RenderScript: java.util.ArrayList mProcessContextList>;

        r4 = new java.util.ArrayList;

        specialinvoke r4.<java.util.ArrayList: void <init>()>();

        <android.renderscript.RenderScript: java.util.ArrayList mProcessContextList> = r4;

        exitmonitor r2;

     label2:
        r5 = virtualinvoke r3.<java.util.ArrayList: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r0 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r6 = (android.renderscript.RenderScript) $r0;

        r6.<android.renderscript.RenderScript: boolean mIsProcessContext> = 0;

        virtualinvoke r6.<android.renderscript.RenderScript: void destroy()>();

        goto label3;

     label4:
        virtualinvoke r3.<java.util.ArrayList: void clear()>();

        return;

     label5:
        $r1 := @caughtexception;

     label6:
        exitmonitor r2;

     label7:
        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    static native int rsnSystemGetPointerSize();

    public void contextDump()
    {
        android.renderscript.RenderScript r0;

        r0 := @this: android.renderscript.RenderScript;

        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        virtualinvoke r0.<android.renderscript.RenderScript: void nContextDump(int)>(0);

        return;
    }

    public void destroy()
    {
        android.renderscript.RenderScript r0;
        boolean $z0;

        r0 := @this: android.renderscript.RenderScript;

        $z0 = r0.<android.renderscript.RenderScript: boolean mIsProcessContext>;

        if $z0 == 0 goto label1;

        return;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        specialinvoke r0.<android.renderscript.RenderScript: void helpDestroy()>();

        return;
    }

    protected void finalize() throws java.lang.Throwable
    {
        android.renderscript.RenderScript r0;

        r0 := @this: android.renderscript.RenderScript;

        specialinvoke r0.<android.renderscript.RenderScript: void helpDestroy()>();

        specialinvoke r0.<java.lang.Object: void finalize()>();

        return;
    }

    public void finish()
    {
        android.renderscript.RenderScript r0;

        r0 := @this: android.renderscript.RenderScript;

        virtualinvoke r0.<android.renderscript.RenderScript: void nContextFinish()>();

        return;
    }

    public final android.content.Context getApplicationContext()
    {
        android.renderscript.RenderScript r0;
        android.content.Context $r1;

        r0 := @this: android.renderscript.RenderScript;

        $r1 = r0.<android.renderscript.RenderScript: android.content.Context mApplicationContext>;

        return $r1;
    }

    public android.renderscript.RenderScript$RSErrorHandler getErrorHandler()
    {
        android.renderscript.RenderScript r0;
        android.renderscript.RenderScript$RSErrorHandler $r1;

        r0 := @this: android.renderscript.RenderScript;

        $r1 = r0.<android.renderscript.RenderScript: android.renderscript.RenderScript$RSErrorHandler mErrorCallback>;

        return $r1;
    }

    public android.renderscript.RenderScript$RSMessageHandler getMessageHandler()
    {
        android.renderscript.RenderScript r0;
        android.renderscript.RenderScript$RSMessageHandler $r1;

        r0 := @this: android.renderscript.RenderScript;

        $r1 = r0.<android.renderscript.RenderScript: android.renderscript.RenderScript$RSMessageHandler mMessageCallback>;

        return $r1;
    }

    boolean isAlive()
    {
        android.renderscript.RenderScript r0;
        long $l0;
        byte $b1;
        boolean z0;

        r0 := @this: android.renderscript.RenderScript;

        $l0 = r0.<android.renderscript.RenderScript: long mContext>;

        $b1 = $l0 cmp 0L;

        if $b1 == 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    long nAllocationAdapterCreate(long, long)
    {
        android.renderscript.RenderScript r0;
        long l0, $l1, l2, l3;
        java.lang.Throwable $r2;

        r0 := @this: android.renderscript.RenderScript;

        l2 := @parameter0: long;

        l0 := @parameter1: long;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $l1 = r0.<android.renderscript.RenderScript: long mContext>;

        l3 = virtualinvoke r0.<android.renderscript.RenderScript: long rsnAllocationAdapterCreate(long,long,long)>($l1, l2, l0);

     label2:
        exitmonitor r0;

        return l3;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void nAllocationAdapterOffset(long, int, int, int, int, int, int, int, int, int)
    {
        android.renderscript.RenderScript r0;
        long l0, $l10;
        int i1, i2, i3, i4, i5, i6, i7, i8, i9;
        java.lang.Throwable $r2;

        r0 := @this: android.renderscript.RenderScript;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        i5 := @parameter5: int;

        i6 := @parameter6: int;

        i7 := @parameter7: int;

        i8 := @parameter8: int;

        i9 := @parameter9: int;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $l10 = r0.<android.renderscript.RenderScript: long mContext>;

        virtualinvoke r0.<android.renderscript.RenderScript: void rsnAllocationAdapterOffset(long,long,int,int,int,int,int,int,int,int,int)>($l10, l0, i1, i2, i3, i4, i5, i6, i7, i8, i9);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void nAllocationCopyFromBitmap(long, android.graphics.Bitmap)
    {
        android.renderscript.RenderScript r0;
        long l0, $l1;
        java.lang.Throwable $r1;
        android.graphics.Bitmap r2;

        r0 := @this: android.renderscript.RenderScript;

        l0 := @parameter0: long;

        r2 := @parameter1: android.graphics.Bitmap;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $l1 = r0.<android.renderscript.RenderScript: long mContext>;

        virtualinvoke r0.<android.renderscript.RenderScript: void rsnAllocationCopyFromBitmap(long,long,android.graphics.Bitmap)>($l1, l0, r2);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r1 := @caughtexception;

        exitmonitor r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void nAllocationCopyToBitmap(long, android.graphics.Bitmap)
    {
        android.renderscript.RenderScript r0;
        long l0, $l1;
        java.lang.Throwable $r1;
        android.graphics.Bitmap r2;

        r0 := @this: android.renderscript.RenderScript;

        l0 := @parameter0: long;

        r2 := @parameter1: android.graphics.Bitmap;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $l1 = r0.<android.renderscript.RenderScript: long mContext>;

        virtualinvoke r0.<android.renderscript.RenderScript: void rsnAllocationCopyToBitmap(long,long,android.graphics.Bitmap)>($l1, l0, r2);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r1 := @caughtexception;

        exitmonitor r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    long nAllocationCreateBitmapBackedAllocation(long, int, android.graphics.Bitmap, int)
    {
        android.renderscript.RenderScript r0;
        int i0, i1;
        long $l2, l3, l4;
        java.lang.Throwable $r1;
        android.graphics.Bitmap r2;

        r0 := @this: android.renderscript.RenderScript;

        l3 := @parameter0: long;

        i0 := @parameter1: int;

        r2 := @parameter2: android.graphics.Bitmap;

        i1 := @parameter3: int;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $l2 = r0.<android.renderscript.RenderScript: long mContext>;

        l4 = virtualinvoke r0.<android.renderscript.RenderScript: long rsnAllocationCreateBitmapBackedAllocation(long,long,int,android.graphics.Bitmap,int)>($l2, l3, i0, r2, i1);

     label2:
        exitmonitor r0;

        return l4;

     label3:
        $r1 := @caughtexception;

        exitmonitor r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    long nAllocationCreateFromBitmap(long, int, android.graphics.Bitmap, int)
    {
        android.renderscript.RenderScript r0;
        int i0, i1;
        long $l2, l3, l4;
        java.lang.Throwable $r1;
        android.graphics.Bitmap r2;

        r0 := @this: android.renderscript.RenderScript;

        l3 := @parameter0: long;

        i0 := @parameter1: int;

        r2 := @parameter2: android.graphics.Bitmap;

        i1 := @parameter3: int;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $l2 = r0.<android.renderscript.RenderScript: long mContext>;

        l4 = virtualinvoke r0.<android.renderscript.RenderScript: long rsnAllocationCreateFromBitmap(long,long,int,android.graphics.Bitmap,int)>($l2, l3, i0, r2, i1);

     label2:
        exitmonitor r0;

        return l4;

     label3:
        $r1 := @caughtexception;

        exitmonitor r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    long nAllocationCreateTyped(long, int, int, long)
    {
        android.renderscript.RenderScript r0;
        int i0, i1;
        long l2, $l3, l4, l5;
        java.lang.Throwable $r2;

        r0 := @this: android.renderscript.RenderScript;

        l4 := @parameter0: long;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        l2 := @parameter3: long;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $l3 = r0.<android.renderscript.RenderScript: long mContext>;

        l5 = virtualinvoke r0.<android.renderscript.RenderScript: long rsnAllocationCreateTyped(long,long,int,int,long)>($l3, l4, i0, i1, l2);

     label2:
        exitmonitor r0;

        return l5;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    long nAllocationCubeCreateFromBitmap(long, int, android.graphics.Bitmap, int)
    {
        android.renderscript.RenderScript r0;
        int i0, i1;
        long $l2, l3, l4;
        java.lang.Throwable $r1;
        android.graphics.Bitmap r2;

        r0 := @this: android.renderscript.RenderScript;

        l3 := @parameter0: long;

        i0 := @parameter1: int;

        r2 := @parameter2: android.graphics.Bitmap;

        i1 := @parameter3: int;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $l2 = r0.<android.renderscript.RenderScript: long mContext>;

        l4 = virtualinvoke r0.<android.renderscript.RenderScript: long rsnAllocationCubeCreateFromBitmap(long,long,int,android.graphics.Bitmap,int)>($l2, l3, i0, r2, i1);

     label2:
        exitmonitor r0;

        return l4;

     label3:
        $r1 := @caughtexception;

        exitmonitor r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void nAllocationData1D(long, int, int, int, java.lang.Object, int, android.renderscript.Element$DataType, int, boolean)
    {
        android.renderscript.RenderScript r0;
        long l0, $l7;
        int i1, i2, i3, i4, i5, $i6;
        android.renderscript.Element$DataType r1;
        boolean z0;
        java.lang.Throwable $r2;
        java.lang.Object r3;

        r0 := @this: android.renderscript.RenderScript;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        r3 := @parameter4: java.lang.Object;

        i4 := @parameter5: int;

        r1 := @parameter6: android.renderscript.Element$DataType;

        i5 := @parameter7: int;

        z0 := @parameter8: boolean;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $l7 = r0.<android.renderscript.RenderScript: long mContext>;

        $i6 = r1.<android.renderscript.Element$DataType: int mID>;

        virtualinvoke r0.<android.renderscript.RenderScript: void rsnAllocationData1D(long,long,int,int,int,java.lang.Object,int,int,int,boolean)>($l7, l0, i1, i2, i3, r3, i4, $i6, i5, z0);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void nAllocationData2D(long, int, int, int, int, int, int, long, int, int, int, int)
    {
        android.renderscript.RenderScript r0;
        long l0, l7, $l12;
        int i1, i2, i3, i4, i5, i6, i8, i9, i10, i11;
        java.lang.Throwable $r2;

        r0 := @this: android.renderscript.RenderScript;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        i5 := @parameter5: int;

        i6 := @parameter6: int;

        l7 := @parameter7: long;

        i8 := @parameter8: int;

        i9 := @parameter9: int;

        i10 := @parameter10: int;

        i11 := @parameter11: int;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $l12 = r0.<android.renderscript.RenderScript: long mContext>;

        virtualinvoke r0.<android.renderscript.RenderScript: void rsnAllocationData2D(long,long,int,int,int,int,int,int,long,int,int,int,int)>($l12, l0, i1, i2, i3, i4, i5, i6, l7, i8, i9, i10, i11);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void nAllocationData2D(long, int, int, int, int, int, int, java.lang.Object, int, android.renderscript.Element$DataType, int, boolean)
    {
        android.renderscript.RenderScript r0;
        long l0, $l10;
        int i1, i2, i3, i4, i5, i6, i7, i8, $i9;
        android.renderscript.Element$DataType r1;
        boolean z0;
        java.lang.Throwable $r2;
        java.lang.Object r3;

        r0 := @this: android.renderscript.RenderScript;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        i5 := @parameter5: int;

        i6 := @parameter6: int;

        r3 := @parameter7: java.lang.Object;

        i7 := @parameter8: int;

        r1 := @parameter9: android.renderscript.Element$DataType;

        i8 := @parameter10: int;

        z0 := @parameter11: boolean;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $l10 = r0.<android.renderscript.RenderScript: long mContext>;

        $i9 = r1.<android.renderscript.Element$DataType: int mID>;

        virtualinvoke r0.<android.renderscript.RenderScript: void rsnAllocationData2D(long,long,int,int,int,int,int,int,java.lang.Object,int,int,int,boolean)>($l10, l0, i1, i2, i3, i4, i5, i6, r3, i7, $i9, i8, z0);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void nAllocationData2D(long, int, int, int, int, android.graphics.Bitmap)
    {
        android.renderscript.RenderScript r0;
        long l0, $l5;
        int i1, i2, i3, i4;
        java.lang.Throwable $r1;
        android.graphics.Bitmap r2;

        r0 := @this: android.renderscript.RenderScript;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        r2 := @parameter5: android.graphics.Bitmap;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $l5 = r0.<android.renderscript.RenderScript: long mContext>;

        virtualinvoke r0.<android.renderscript.RenderScript: void rsnAllocationData2D(long,long,int,int,int,int,android.graphics.Bitmap)>($l5, l0, i1, i2, i3, i4, r2);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r1 := @caughtexception;

        exitmonitor r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void nAllocationData3D(long, int, int, int, int, int, int, int, long, int, int, int, int)
    {
        android.renderscript.RenderScript r0;
        long l0, l8, $l13;
        int i1, i2, i3, i4, i5, i6, i7, i9, i10, i11, i12;
        java.lang.Throwable $r2;

        r0 := @this: android.renderscript.RenderScript;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        i5 := @parameter5: int;

        i6 := @parameter6: int;

        i7 := @parameter7: int;

        l8 := @parameter8: long;

        i9 := @parameter9: int;

        i10 := @parameter10: int;

        i11 := @parameter11: int;

        i12 := @parameter12: int;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $l13 = r0.<android.renderscript.RenderScript: long mContext>;

        virtualinvoke r0.<android.renderscript.RenderScript: void rsnAllocationData3D(long,long,int,int,int,int,int,int,int,long,int,int,int,int)>($l13, l0, i1, i2, i3, i4, i5, i6, i7, l8, i9, i10, i11, i12);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void nAllocationData3D(long, int, int, int, int, int, int, int, java.lang.Object, int, android.renderscript.Element$DataType, int, boolean)
    {
        android.renderscript.RenderScript r0;
        long l0, $l11;
        int i1, i2, i3, i4, i5, i6, i7, i8, i9, $i10;
        android.renderscript.Element$DataType r1;
        boolean z0;
        java.lang.Throwable $r2;
        java.lang.Object r3;

        r0 := @this: android.renderscript.RenderScript;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        i5 := @parameter5: int;

        i6 := @parameter6: int;

        i7 := @parameter7: int;

        r3 := @parameter8: java.lang.Object;

        i8 := @parameter9: int;

        r1 := @parameter10: android.renderscript.Element$DataType;

        i9 := @parameter11: int;

        z0 := @parameter12: boolean;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $l11 = r0.<android.renderscript.RenderScript: long mContext>;

        $i10 = r1.<android.renderscript.Element$DataType: int mID>;

        virtualinvoke r0.<android.renderscript.RenderScript: void rsnAllocationData3D(long,long,int,int,int,int,int,int,int,java.lang.Object,int,int,int,boolean)>($l11, l0, i1, i2, i3, i4, i5, i6, i7, r3, i8, $i10, i9, z0);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void nAllocationElementData(long, int, int, int, int, int, byte[], int)
    {
        android.renderscript.RenderScript r0;
        long l0, $l7;
        int i1, i2, i3, i4, i5, i6;
        java.lang.Throwable $r1;
        byte[] r2;

        r0 := @this: android.renderscript.RenderScript;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        i5 := @parameter5: int;

        r2 := @parameter6: byte[];

        i6 := @parameter7: int;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $l7 = r0.<android.renderscript.RenderScript: long mContext>;

        virtualinvoke r0.<android.renderscript.RenderScript: void rsnAllocationElementData(long,long,int,int,int,int,int,byte[],int)>($l7, l0, i1, i2, i3, i4, i5, r2, i6);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r1 := @caughtexception;

        exitmonitor r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void nAllocationElementRead(long, int, int, int, int, int, byte[], int)
    {
        android.renderscript.RenderScript r0;
        long l0, $l7;
        int i1, i2, i3, i4, i5, i6;
        java.lang.Throwable $r1;
        byte[] r2;

        r0 := @this: android.renderscript.RenderScript;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        i5 := @parameter5: int;

        r2 := @parameter6: byte[];

        i6 := @parameter7: int;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $l7 = r0.<android.renderscript.RenderScript: long mContext>;

        virtualinvoke r0.<android.renderscript.RenderScript: void rsnAllocationElementRead(long,long,int,int,int,int,int,byte[],int)>($l7, l0, i1, i2, i3, i4, i5, r2, i6);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r1 := @caughtexception;

        exitmonitor r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void nAllocationGenerateMipmaps(long)
    {
        android.renderscript.RenderScript r0;
        long l0, $l1;
        java.lang.Throwable $r2;

        r0 := @this: android.renderscript.RenderScript;

        l0 := @parameter0: long;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $l1 = r0.<android.renderscript.RenderScript: long mContext>;

        virtualinvoke r0.<android.renderscript.RenderScript: void rsnAllocationGenerateMipmaps(long,long)>($l1, l0);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    java.nio.ByteBuffer nAllocationGetByteBuffer(long, long[], int, int, int)
    {
        android.renderscript.RenderScript r0;
        long l0, $l4;
        int i1, i2, i3;
        java.lang.Throwable $r1;
        long[] r2;
        java.nio.ByteBuffer r3;

        r0 := @this: android.renderscript.RenderScript;

        l0 := @parameter0: long;

        r2 := @parameter1: long[];

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $l4 = r0.<android.renderscript.RenderScript: long mContext>;

        r3 = virtualinvoke r0.<android.renderscript.RenderScript: java.nio.ByteBuffer rsnAllocationGetByteBuffer(long,long,long[],int,int,int)>($l4, l0, r2, i1, i2, i3);

     label2:
        exitmonitor r0;

        return r3;

     label3:
        $r1 := @caughtexception;

        exitmonitor r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    android.view.Surface nAllocationGetSurface(long)
    {
        android.renderscript.RenderScript r0;
        long l0, $l1;
        java.lang.Throwable $r1;
        android.view.Surface r2;

        r0 := @this: android.renderscript.RenderScript;

        l0 := @parameter0: long;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $l1 = r0.<android.renderscript.RenderScript: long mContext>;

        r2 = virtualinvoke r0.<android.renderscript.RenderScript: android.view.Surface rsnAllocationGetSurface(long,long)>($l1, l0);

     label2:
        exitmonitor r0;

        return r2;

     label3:
        $r1 := @caughtexception;

        exitmonitor r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    long nAllocationGetType(long)
    {
        android.renderscript.RenderScript r0;
        long $l0, l1, l2;
        java.lang.Throwable $r2;

        r0 := @this: android.renderscript.RenderScript;

        l1 := @parameter0: long;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $l0 = r0.<android.renderscript.RenderScript: long mContext>;

        l2 = virtualinvoke r0.<android.renderscript.RenderScript: long rsnAllocationGetType(long,long)>($l0, l1);

     label2:
        exitmonitor r0;

        return l2;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    long nAllocationIoReceive(long)
    {
        android.renderscript.RenderScript r0;
        long $l0, l1, l2;
        java.lang.Throwable $r2;

        r0 := @this: android.renderscript.RenderScript;

        l1 := @parameter0: long;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $l0 = r0.<android.renderscript.RenderScript: long mContext>;

        l2 = virtualinvoke r0.<android.renderscript.RenderScript: long rsnAllocationIoReceive(long,long)>($l0, l1);

     label2:
        exitmonitor r0;

        return l2;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void nAllocationIoSend(long)
    {
        android.renderscript.RenderScript r0;
        long l0, $l1;
        java.lang.Throwable $r2;

        r0 := @this: android.renderscript.RenderScript;

        l0 := @parameter0: long;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $l1 = r0.<android.renderscript.RenderScript: long mContext>;

        virtualinvoke r0.<android.renderscript.RenderScript: void rsnAllocationIoSend(long,long)>($l1, l0);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void nAllocationRead(long, java.lang.Object, android.renderscript.Element$DataType, int, boolean)
    {
        android.renderscript.RenderScript r0;
        long l0, $l3;
        android.renderscript.Element$DataType r1;
        int i1, $i2;
        boolean z0;
        java.lang.Throwable $r2;
        java.lang.Object r3;

        r0 := @this: android.renderscript.RenderScript;

        l0 := @parameter0: long;

        r3 := @parameter1: java.lang.Object;

        r1 := @parameter2: android.renderscript.Element$DataType;

        i1 := @parameter3: int;

        z0 := @parameter4: boolean;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $l3 = r0.<android.renderscript.RenderScript: long mContext>;

        $i2 = r1.<android.renderscript.Element$DataType: int mID>;

        virtualinvoke r0.<android.renderscript.RenderScript: void rsnAllocationRead(long,long,java.lang.Object,int,int,boolean)>($l3, l0, r3, $i2, i1, z0);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void nAllocationRead1D(long, int, int, int, java.lang.Object, int, android.renderscript.Element$DataType, int, boolean)
    {
        android.renderscript.RenderScript r0;
        long l0, $l7;
        int i1, i2, i3, i4, i5, $i6;
        android.renderscript.Element$DataType r1;
        boolean z0;
        java.lang.Throwable $r2;
        java.lang.Object r3;

        r0 := @this: android.renderscript.RenderScript;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        r3 := @parameter4: java.lang.Object;

        i4 := @parameter5: int;

        r1 := @parameter6: android.renderscript.Element$DataType;

        i5 := @parameter7: int;

        z0 := @parameter8: boolean;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $l7 = r0.<android.renderscript.RenderScript: long mContext>;

        $i6 = r1.<android.renderscript.Element$DataType: int mID>;

        virtualinvoke r0.<android.renderscript.RenderScript: void rsnAllocationRead1D(long,long,int,int,int,java.lang.Object,int,int,int,boolean)>($l7, l0, i1, i2, i3, r3, i4, $i6, i5, z0);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void nAllocationRead2D(long, int, int, int, int, int, int, java.lang.Object, int, android.renderscript.Element$DataType, int, boolean)
    {
        android.renderscript.RenderScript r0;
        long l0, $l10;
        int i1, i2, i3, i4, i5, i6, i7, i8, $i9;
        android.renderscript.Element$DataType r1;
        boolean z0;
        java.lang.Throwable $r2;
        java.lang.Object r3;

        r0 := @this: android.renderscript.RenderScript;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        i5 := @parameter5: int;

        i6 := @parameter6: int;

        r3 := @parameter7: java.lang.Object;

        i7 := @parameter8: int;

        r1 := @parameter9: android.renderscript.Element$DataType;

        i8 := @parameter10: int;

        z0 := @parameter11: boolean;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $l10 = r0.<android.renderscript.RenderScript: long mContext>;

        $i9 = r1.<android.renderscript.Element$DataType: int mID>;

        virtualinvoke r0.<android.renderscript.RenderScript: void rsnAllocationRead2D(long,long,int,int,int,int,int,int,java.lang.Object,int,int,int,boolean)>($l10, l0, i1, i2, i3, i4, i5, i6, r3, i7, $i9, i8, z0);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void nAllocationRead3D(long, int, int, int, int, int, int, int, java.lang.Object, int, android.renderscript.Element$DataType, int, boolean)
    {
        android.renderscript.RenderScript r0;
        long l0, $l11;
        int i1, i2, i3, i4, i5, i6, i7, i8, i9, $i10;
        android.renderscript.Element$DataType r1;
        boolean z0;
        java.lang.Throwable $r2;
        java.lang.Object r3;

        r0 := @this: android.renderscript.RenderScript;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        i5 := @parameter5: int;

        i6 := @parameter6: int;

        i7 := @parameter7: int;

        r3 := @parameter8: java.lang.Object;

        i8 := @parameter9: int;

        r1 := @parameter10: android.renderscript.Element$DataType;

        i9 := @parameter11: int;

        z0 := @parameter12: boolean;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $l11 = r0.<android.renderscript.RenderScript: long mContext>;

        $i10 = r1.<android.renderscript.Element$DataType: int mID>;

        virtualinvoke r0.<android.renderscript.RenderScript: void rsnAllocationRead3D(long,long,int,int,int,int,int,int,int,java.lang.Object,int,int,int,boolean)>($l11, l0, i1, i2, i3, i4, i5, i6, i7, r3, i8, $i10, i9, z0);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void nAllocationResize1D(long, int)
    {
        android.renderscript.RenderScript r0;
        long l0, $l2;
        int i1;
        java.lang.Throwable $r2;

        r0 := @this: android.renderscript.RenderScript;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $l2 = r0.<android.renderscript.RenderScript: long mContext>;

        virtualinvoke r0.<android.renderscript.RenderScript: void rsnAllocationResize1D(long,long,int)>($l2, l0, i1);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void nAllocationSetSurface(long, android.view.Surface)
    {
        android.renderscript.RenderScript r0;
        long l0, $l1;
        java.lang.Throwable $r1;
        android.view.Surface r2;

        r0 := @this: android.renderscript.RenderScript;

        l0 := @parameter0: long;

        r2 := @parameter1: android.view.Surface;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $l1 = r0.<android.renderscript.RenderScript: long mContext>;

        virtualinvoke r0.<android.renderscript.RenderScript: void rsnAllocationSetSurface(long,long,android.view.Surface)>($l1, l0, r2);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r1 := @caughtexception;

        exitmonitor r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void nAllocationSetupBufferQueue(long, int)
    {
        android.renderscript.RenderScript r0;
        long l0, $l2;
        int i1;
        java.lang.Throwable $r2;

        r0 := @this: android.renderscript.RenderScript;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $l2 = r0.<android.renderscript.RenderScript: long mContext>;

        virtualinvoke r0.<android.renderscript.RenderScript: void rsnAllocationSetupBufferQueue(long,long,int)>($l2, l0, i1);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void nAllocationShareBufferQueue(long, long)
    {
        android.renderscript.RenderScript r0;
        long l0, l1, $l2;
        java.lang.Throwable $r2;

        r0 := @this: android.renderscript.RenderScript;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $l2 = r0.<android.renderscript.RenderScript: long mContext>;

        virtualinvoke r0.<android.renderscript.RenderScript: void rsnAllocationShareBufferQueue(long,long,long)>($l2, l0, l1);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void nAllocationSyncAll(long, int)
    {
        android.renderscript.RenderScript r0;
        long l0, $l2;
        int i1;
        java.lang.Throwable $r2;

        r0 := @this: android.renderscript.RenderScript;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $l2 = r0.<android.renderscript.RenderScript: long mContext>;

        virtualinvoke r0.<android.renderscript.RenderScript: void rsnAllocationSyncAll(long,long,int)>($l2, l0, i1);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void nAssignName(long, byte[])
    {
        android.renderscript.RenderScript r0;
        long l0, $l1;
        java.lang.Throwable $r1;
        byte[] r2;

        r0 := @this: android.renderscript.RenderScript;

        l0 := @parameter0: long;

        r2 := @parameter1: byte[];

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $l1 = r0.<android.renderscript.RenderScript: long mContext>;

        virtualinvoke r0.<android.renderscript.RenderScript: void rsnAssignName(long,long,byte[])>($l1, l0, r2);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r1 := @caughtexception;

        exitmonitor r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    long nClosureCreate(long, long, long[], long[], int[], long[], long[])
    {
        android.renderscript.RenderScript r0;
        long l0, $l1, l3, l4;
        long[] r1, r3, r4, r6;
        int[] r2;
        byte $b2;
        java.lang.Throwable $r5;
        android.renderscript.RSRuntimeException r7;

        r0 := @this: android.renderscript.RenderScript;

        l3 := @parameter0: long;

        l0 := @parameter1: long;

        r6 := @parameter2: long[];

        r1 := @parameter3: long[];

        r2 := @parameter4: int[];

        r3 := @parameter5: long[];

        r4 := @parameter6: long[];

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $l1 = r0.<android.renderscript.RenderScript: long mContext>;

        l4 = virtualinvoke r0.<android.renderscript.RenderScript: long rsnClosureCreate(long,long,long,long[],long[],int[],long[],long[])>($l1, l3, l0, r6, r1, r2, r3, r4);

     label2:
        $b2 = l4 cmp 0L;

        if $b2 == 0 goto label3;

        exitmonitor r0;

        return l4;

     label3:
        r7 = new android.renderscript.RSRuntimeException;

        specialinvoke r7.<android.renderscript.RSRuntimeException: void <init>(java.lang.String)>("Failed creating closure.");

        throw r7;

     label4:
        $r5 := @caughtexception;

        exitmonitor r0;

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label3 to label4 with label4;
    }

    void nClosureSetArg(long, int, long, int)
    {
        android.renderscript.RenderScript r0;
        long l0, l2, $l4;
        int i1, i3;
        java.lang.Throwable $r2;

        r0 := @this: android.renderscript.RenderScript;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        l2 := @parameter2: long;

        i3 := @parameter3: int;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $l4 = r0.<android.renderscript.RenderScript: long mContext>;

        virtualinvoke r0.<android.renderscript.RenderScript: void rsnClosureSetArg(long,long,int,long,int)>($l4, l0, i1, l2, i3);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void nClosureSetGlobal(long, long, long, int)
    {
        android.renderscript.RenderScript r0;
        long l0, l1, l2, $l4;
        int i3;
        java.lang.Throwable $r2;

        r0 := @this: android.renderscript.RenderScript;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        l2 := @parameter2: long;

        i3 := @parameter3: int;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $l4 = r0.<android.renderscript.RenderScript: long mContext>;

        virtualinvoke r0.<android.renderscript.RenderScript: void rsnClosureSetGlobal(long,long,long,long,int)>($l4, l0, l1, l2, i3);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void nContextBindProgramFragment(long)
    {
        android.renderscript.RenderScript r0;
        long l0, $l1;
        java.lang.Throwable $r2;

        r0 := @this: android.renderscript.RenderScript;

        l0 := @parameter0: long;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $l1 = r0.<android.renderscript.RenderScript: long mContext>;

        virtualinvoke r0.<android.renderscript.RenderScript: void rsnContextBindProgramFragment(long,long)>($l1, l0);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void nContextBindProgramRaster(long)
    {
        android.renderscript.RenderScript r0;
        long l0, $l1;
        java.lang.Throwable $r2;

        r0 := @this: android.renderscript.RenderScript;

        l0 := @parameter0: long;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $l1 = r0.<android.renderscript.RenderScript: long mContext>;

        virtualinvoke r0.<android.renderscript.RenderScript: void rsnContextBindProgramRaster(long,long)>($l1, l0);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void nContextBindProgramStore(long)
    {
        android.renderscript.RenderScript r0;
        long l0, $l1;
        java.lang.Throwable $r2;

        r0 := @this: android.renderscript.RenderScript;

        l0 := @parameter0: long;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $l1 = r0.<android.renderscript.RenderScript: long mContext>;

        virtualinvoke r0.<android.renderscript.RenderScript: void rsnContextBindProgramStore(long,long)>($l1, l0);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void nContextBindProgramVertex(long)
    {
        android.renderscript.RenderScript r0;
        long l0, $l1;
        java.lang.Throwable $r2;

        r0 := @this: android.renderscript.RenderScript;

        l0 := @parameter0: long;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $l1 = r0.<android.renderscript.RenderScript: long mContext>;

        virtualinvoke r0.<android.renderscript.RenderScript: void rsnContextBindProgramVertex(long,long)>($l1, l0);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void nContextBindRootScript(long)
    {
        android.renderscript.RenderScript r0;
        long l0, $l1;
        java.lang.Throwable $r2;

        r0 := @this: android.renderscript.RenderScript;

        l0 := @parameter0: long;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $l1 = r0.<android.renderscript.RenderScript: long mContext>;

        virtualinvoke r0.<android.renderscript.RenderScript: void rsnContextBindRootScript(long,long)>($l1, l0);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void nContextBindSampler(int, int)
    {
        android.renderscript.RenderScript r0;
        int i0, i1;
        long $l2;
        java.lang.Throwable $r2;

        r0 := @this: android.renderscript.RenderScript;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $l2 = r0.<android.renderscript.RenderScript: long mContext>;

        virtualinvoke r0.<android.renderscript.RenderScript: void rsnContextBindSampler(long,int,int)>($l2, i0, i1);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    long nContextCreate(long, int, int, int)
    {
        android.renderscript.RenderScript r0;
        int i0, i1, i2;
        java.lang.Throwable $r2;
        long l3, l4;

        r0 := @this: android.renderscript.RenderScript;

        l3 := @parameter0: long;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        entermonitor r0;

     label1:
        l4 = virtualinvoke r0.<android.renderscript.RenderScript: long rsnContextCreate(long,int,int,int)>(l3, i0, i1, i2);

     label2:
        exitmonitor r0;

        return l4;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    long nContextCreateGL(long, int, int, int, int, int, int, int, int, int, int, int, int, float, int)
    {
        android.renderscript.RenderScript r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12;
        float f0;
        java.lang.Throwable $r2;
        long l13, l14;

        r0 := @this: android.renderscript.RenderScript;

        l13 := @parameter0: long;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        i4 := @parameter5: int;

        i5 := @parameter6: int;

        i6 := @parameter7: int;

        i7 := @parameter8: int;

        i8 := @parameter9: int;

        i9 := @parameter10: int;

        i10 := @parameter11: int;

        i11 := @parameter12: int;

        f0 := @parameter13: float;

        i12 := @parameter14: int;

        entermonitor r0;

     label1:
        l14 = virtualinvoke r0.<android.renderscript.RenderScript: long rsnContextCreateGL(long,int,int,int,int,int,int,int,int,int,int,int,int,float,int)>(l13, i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, f0, i12);

     label2:
        exitmonitor r0;

        return l14;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    native void nContextDeinitToClient(long);

    void nContextDestroy()
    {
        android.renderscript.RenderScript r0;
        long l0;
        java.util.concurrent.locks.ReentrantReadWriteLock $r1;
        java.lang.Throwable $r2;
        java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock r3;

        r0 := @this: android.renderscript.RenderScript;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $r1 = r0.<android.renderscript.RenderScript: java.util.concurrent.locks.ReentrantReadWriteLock mRWLock>;

        r3 = virtualinvoke $r1.<java.util.concurrent.locks.ReentrantReadWriteLock: java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock writeLock()>();

        virtualinvoke r3.<java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock: void lock()>();

        l0 = r0.<android.renderscript.RenderScript: long mContext>;

        r0.<android.renderscript.RenderScript: long mContext> = 0L;

        virtualinvoke r3.<java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock: void unlock()>();

        virtualinvoke r0.<android.renderscript.RenderScript: void rsnContextDestroy(long)>(l0);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void nContextDump(int)
    {
        android.renderscript.RenderScript r0;
        int i0;
        long $l1;
        java.lang.Throwable $r2;

        r0 := @this: android.renderscript.RenderScript;

        i0 := @parameter0: int;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $l1 = r0.<android.renderscript.RenderScript: long mContext>;

        virtualinvoke r0.<android.renderscript.RenderScript: void rsnContextDump(long,int)>($l1, i0);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void nContextFinish()
    {
        android.renderscript.RenderScript r0;
        long $l0;
        java.lang.Throwable $r2;

        r0 := @this: android.renderscript.RenderScript;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $l0 = r0.<android.renderscript.RenderScript: long mContext>;

        virtualinvoke r0.<android.renderscript.RenderScript: void rsnContextFinish(long)>($l0);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    native java.lang.String nContextGetErrorMessage(long);

    native int nContextGetUserMessage(long, int[]);

    native void nContextInitToClient(long);

    void nContextPause()
    {
        android.renderscript.RenderScript r0;
        long $l0;
        java.lang.Throwable $r2;

        r0 := @this: android.renderscript.RenderScript;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $l0 = r0.<android.renderscript.RenderScript: long mContext>;

        virtualinvoke r0.<android.renderscript.RenderScript: void rsnContextPause(long)>($l0);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    native int nContextPeekMessage(long, int[]);

    void nContextResume()
    {
        android.renderscript.RenderScript r0;
        long $l0;
        java.lang.Throwable $r2;

        r0 := @this: android.renderscript.RenderScript;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $l0 = r0.<android.renderscript.RenderScript: long mContext>;

        virtualinvoke r0.<android.renderscript.RenderScript: void rsnContextResume(long)>($l0);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void nContextSendMessage(int, int[])
    {
        android.renderscript.RenderScript r0;
        int i0;
        long $l1;
        java.lang.Throwable $r1;
        int[] r2;

        r0 := @this: android.renderscript.RenderScript;

        i0 := @parameter0: int;

        r2 := @parameter1: int[];

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $l1 = r0.<android.renderscript.RenderScript: long mContext>;

        virtualinvoke r0.<android.renderscript.RenderScript: void rsnContextSendMessage(long,int,int[])>($l1, i0, r2);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r1 := @caughtexception;

        exitmonitor r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void nContextSetCacheDir(java.lang.String)
    {
        android.renderscript.RenderScript r0;
        long $l0;
        java.lang.Throwable $r1;
        java.lang.String r2;

        r0 := @this: android.renderscript.RenderScript;

        r2 := @parameter0: java.lang.String;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $l0 = r0.<android.renderscript.RenderScript: long mContext>;

        virtualinvoke r0.<android.renderscript.RenderScript: void rsnContextSetCacheDir(long,java.lang.String)>($l0, r2);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r1 := @caughtexception;

        exitmonitor r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void nContextSetPriority(int)
    {
        android.renderscript.RenderScript r0;
        int i0;
        long $l1;
        java.lang.Throwable $r2;

        r0 := @this: android.renderscript.RenderScript;

        i0 := @parameter0: int;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $l1 = r0.<android.renderscript.RenderScript: long mContext>;

        virtualinvoke r0.<android.renderscript.RenderScript: void rsnContextSetPriority(long,int)>($l1, i0);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void nContextSetSurface(int, int, android.view.Surface)
    {
        android.renderscript.RenderScript r0;
        int i0, i1;
        long $l2;
        java.lang.Throwable $r1;
        android.view.Surface r2;

        r0 := @this: android.renderscript.RenderScript;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r2 := @parameter2: android.view.Surface;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $l2 = r0.<android.renderscript.RenderScript: long mContext>;

        virtualinvoke r0.<android.renderscript.RenderScript: void rsnContextSetSurface(long,int,int,android.view.Surface)>($l2, i0, i1, r2);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r1 := @caughtexception;

        exitmonitor r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void nContextSetSurfaceTexture(int, int, android.graphics.SurfaceTexture)
    {
        android.renderscript.RenderScript r0;
        int i0, i1;
        long $l2;
        java.lang.Throwable $r1;
        android.graphics.SurfaceTexture r2;

        r0 := @this: android.renderscript.RenderScript;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r2 := @parameter2: android.graphics.SurfaceTexture;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $l2 = r0.<android.renderscript.RenderScript: long mContext>;

        virtualinvoke r0.<android.renderscript.RenderScript: void rsnContextSetSurfaceTexture(long,int,int,android.graphics.SurfaceTexture)>($l2, i0, i1, r2);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r1 := @caughtexception;

        exitmonitor r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    native long nDeviceCreate();

    native void nDeviceDestroy(long);

    native void nDeviceSetConfig(long, int, int);

    long nElementCreate(long, int, boolean, int)
    {
        android.renderscript.RenderScript r0;
        int i0, i1;
        boolean z0;
        long $l2, l3, l4;
        java.lang.Throwable $r2;

        r0 := @this: android.renderscript.RenderScript;

        l3 := @parameter0: long;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        i1 := @parameter3: int;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $l2 = r0.<android.renderscript.RenderScript: long mContext>;

        l4 = virtualinvoke r0.<android.renderscript.RenderScript: long rsnElementCreate(long,long,int,boolean,int)>($l2, l3, i0, z0, i1);

     label2:
        exitmonitor r0;

        return l4;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    long nElementCreate2(long[], java.lang.String[], int[])
    {
        android.renderscript.RenderScript r0;
        java.lang.String[] r1;
        int[] r2;
        long l0, $l1;
        java.lang.Throwable $r3;
        long[] r4;

        r0 := @this: android.renderscript.RenderScript;

        r4 := @parameter0: long[];

        r1 := @parameter1: java.lang.String[];

        r2 := @parameter2: int[];

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $l1 = r0.<android.renderscript.RenderScript: long mContext>;

        l0 = virtualinvoke r0.<android.renderscript.RenderScript: long rsnElementCreate2(long,long[],java.lang.String[],int[])>($l1, r4, r1, r2);

     label2:
        exitmonitor r0;

        return l0;

     label3:
        $r3 := @caughtexception;

        exitmonitor r0;

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void nElementGetNativeData(long, int[])
    {
        android.renderscript.RenderScript r0;
        long l0, $l1;
        java.lang.Throwable $r1;
        int[] r2;

        r0 := @this: android.renderscript.RenderScript;

        l0 := @parameter0: long;

        r2 := @parameter1: int[];

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $l1 = r0.<android.renderscript.RenderScript: long mContext>;

        virtualinvoke r0.<android.renderscript.RenderScript: void rsnElementGetNativeData(long,long,int[])>($l1, l0, r2);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r1 := @caughtexception;

        exitmonitor r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void nElementGetSubElements(long, long[], java.lang.String[], int[])
    {
        android.renderscript.RenderScript r0;
        long l0, $l1;
        java.lang.String[] r1;
        int[] r2;
        java.lang.Throwable $r3;
        long[] r4;

        r0 := @this: android.renderscript.RenderScript;

        l0 := @parameter0: long;

        r4 := @parameter1: long[];

        r1 := @parameter2: java.lang.String[];

        r2 := @parameter3: int[];

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $l1 = r0.<android.renderscript.RenderScript: long mContext>;

        virtualinvoke r0.<android.renderscript.RenderScript: void rsnElementGetSubElements(long,long,long[],java.lang.String[],int[])>($l1, l0, r4, r1, r2);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r3 := @caughtexception;

        exitmonitor r0;

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    long nFileA3DCreateFromAsset(android.content.res.AssetManager, java.lang.String)
    {
        android.renderscript.RenderScript r0;
        java.lang.String r1;
        long l0, $l1;
        java.lang.Throwable $r2;
        android.content.res.AssetManager r3;

        r0 := @this: android.renderscript.RenderScript;

        r3 := @parameter0: android.content.res.AssetManager;

        r1 := @parameter1: java.lang.String;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $l1 = r0.<android.renderscript.RenderScript: long mContext>;

        l0 = virtualinvoke r0.<android.renderscript.RenderScript: long rsnFileA3DCreateFromAsset(long,android.content.res.AssetManager,java.lang.String)>($l1, r3, r1);

     label2:
        exitmonitor r0;

        return l0;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    long nFileA3DCreateFromAssetStream(long)
    {
        android.renderscript.RenderScript r0;
        long $l0, l1, l2;
        java.lang.Throwable $r2;

        r0 := @this: android.renderscript.RenderScript;

        l1 := @parameter0: long;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $l0 = r0.<android.renderscript.RenderScript: long mContext>;

        l2 = virtualinvoke r0.<android.renderscript.RenderScript: long rsnFileA3DCreateFromAssetStream(long,long)>($l0, l1);

     label2:
        exitmonitor r0;

        return l2;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    long nFileA3DCreateFromFile(java.lang.String)
    {
        android.renderscript.RenderScript r0;
        long l0, $l1;
        java.lang.Throwable $r1;
        java.lang.String r2;

        r0 := @this: android.renderscript.RenderScript;

        r2 := @parameter0: java.lang.String;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $l1 = r0.<android.renderscript.RenderScript: long mContext>;

        l0 = virtualinvoke r0.<android.renderscript.RenderScript: long rsnFileA3DCreateFromFile(long,java.lang.String)>($l1, r2);

     label2:
        exitmonitor r0;

        return l0;

     label3:
        $r1 := @caughtexception;

        exitmonitor r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    long nFileA3DGetEntryByIndex(long, int)
    {
        android.renderscript.RenderScript r0;
        int i0;
        long $l1, l2, l3;
        java.lang.Throwable $r2;

        r0 := @this: android.renderscript.RenderScript;

        l2 := @parameter0: long;

        i0 := @parameter1: int;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $l1 = r0.<android.renderscript.RenderScript: long mContext>;

        l3 = virtualinvoke r0.<android.renderscript.RenderScript: long rsnFileA3DGetEntryByIndex(long,long,int)>($l1, l2, i0);

     label2:
        exitmonitor r0;

        return l3;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void nFileA3DGetIndexEntries(long, int, int[], java.lang.String[])
    {
        android.renderscript.RenderScript r0;
        long l0, $l2;
        int i1;
        java.lang.String[] r1;
        java.lang.Throwable $r2;
        int[] r3;

        r0 := @this: android.renderscript.RenderScript;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        r3 := @parameter2: int[];

        r1 := @parameter3: java.lang.String[];

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $l2 = r0.<android.renderscript.RenderScript: long mContext>;

        virtualinvoke r0.<android.renderscript.RenderScript: void rsnFileA3DGetIndexEntries(long,long,int,int[],java.lang.String[])>($l2, l0, i1, r3, r1);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    int nFileA3DGetNumIndexEntries(long)
    {
        android.renderscript.RenderScript r0;
        long l0, $l2;
        int i1;
        java.lang.Throwable $r2;

        r0 := @this: android.renderscript.RenderScript;

        l0 := @parameter0: long;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $l2 = r0.<android.renderscript.RenderScript: long mContext>;

        i1 = virtualinvoke r0.<android.renderscript.RenderScript: int rsnFileA3DGetNumIndexEntries(long,long)>($l2, l0);

     label2:
        exitmonitor r0;

        return i1;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    long nFontCreateFromAsset(android.content.res.AssetManager, java.lang.String, float, int)
    {
        android.renderscript.RenderScript r0;
        java.lang.String r1;
        float f0;
        int i0;
        long l1, $l2;
        java.lang.Throwable $r2;
        android.content.res.AssetManager r3;

        r0 := @this: android.renderscript.RenderScript;

        r3 := @parameter0: android.content.res.AssetManager;

        r1 := @parameter1: java.lang.String;

        f0 := @parameter2: float;

        i0 := @parameter3: int;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $l2 = r0.<android.renderscript.RenderScript: long mContext>;

        l1 = virtualinvoke r0.<android.renderscript.RenderScript: long rsnFontCreateFromAsset(long,android.content.res.AssetManager,java.lang.String,float,int)>($l2, r3, r1, f0, i0);

     label2:
        exitmonitor r0;

        return l1;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    long nFontCreateFromAssetStream(java.lang.String, float, int, long)
    {
        android.renderscript.RenderScript r0;
        float f0;
        int i0;
        long $l1, l2, l3;
        java.lang.Throwable $r1;
        java.lang.String r2;

        r0 := @this: android.renderscript.RenderScript;

        r2 := @parameter0: java.lang.String;

        f0 := @parameter1: float;

        i0 := @parameter2: int;

        l2 := @parameter3: long;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $l1 = r0.<android.renderscript.RenderScript: long mContext>;

        l3 = virtualinvoke r0.<android.renderscript.RenderScript: long rsnFontCreateFromAssetStream(long,java.lang.String,float,int,long)>($l1, r2, f0, i0, l2);

     label2:
        exitmonitor r0;

        return l3;

     label3:
        $r1 := @caughtexception;

        exitmonitor r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    long nFontCreateFromFile(java.lang.String, float, int)
    {
        android.renderscript.RenderScript r0;
        float f0;
        int i0;
        long l1, $l2;
        java.lang.Throwable $r1;
        java.lang.String r2;

        r0 := @this: android.renderscript.RenderScript;

        r2 := @parameter0: java.lang.String;

        f0 := @parameter1: float;

        i0 := @parameter2: int;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $l2 = r0.<android.renderscript.RenderScript: long mContext>;

        l1 = virtualinvoke r0.<android.renderscript.RenderScript: long rsnFontCreateFromFile(long,java.lang.String,float,int)>($l2, r2, f0, i0);

     label2:
        exitmonitor r0;

        return l1;

     label3:
        $r1 := @caughtexception;

        exitmonitor r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    java.lang.String nGetName(long)
    {
        android.renderscript.RenderScript r0;
        long l0, $l1;
        java.lang.Throwable $r1;
        java.lang.String r2;

        r0 := @this: android.renderscript.RenderScript;

        l0 := @parameter0: long;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $l1 = r0.<android.renderscript.RenderScript: long mContext>;

        r2 = virtualinvoke r0.<android.renderscript.RenderScript: java.lang.String rsnGetName(long,long)>($l1, l0);

     label2:
        exitmonitor r0;

        return r2;

     label3:
        $r1 := @caughtexception;

        exitmonitor r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    long nInvokeClosureCreate(long, byte[], long[], long[], int[])
    {
        android.renderscript.RenderScript r0;
        long[] r1, r2;
        int[] r3;
        long $l0, l2, l3;
        byte $b1;
        java.lang.Throwable $r4;
        byte[] r5;
        android.renderscript.RSRuntimeException r6;

        r0 := @this: android.renderscript.RenderScript;

        l2 := @parameter0: long;

        r5 := @parameter1: byte[];

        r1 := @parameter2: long[];

        r2 := @parameter3: long[];

        r3 := @parameter4: int[];

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $l0 = r0.<android.renderscript.RenderScript: long mContext>;

        l3 = virtualinvoke r0.<android.renderscript.RenderScript: long rsnInvokeClosureCreate(long,long,byte[],long[],long[],int[])>($l0, l2, r5, r1, r2, r3);

     label2:
        $b1 = l3 cmp 0L;

        if $b1 == 0 goto label3;

        exitmonitor r0;

        return l3;

     label3:
        r6 = new android.renderscript.RSRuntimeException;

        specialinvoke r6.<android.renderscript.RSRuntimeException: void <init>(java.lang.String)>("Failed creating closure.");

        throw r6;

     label4:
        $r4 := @caughtexception;

        exitmonitor r0;

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label3 to label4 with label4;
    }

    long nMeshCreate(long[], long[], int[])
    {
        android.renderscript.RenderScript r0;
        long[] r1, r4;
        int[] r2;
        long l0, $l1;
        java.lang.Throwable $r3;

        r0 := @this: android.renderscript.RenderScript;

        r4 := @parameter0: long[];

        r1 := @parameter1: long[];

        r2 := @parameter2: int[];

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $l1 = r0.<android.renderscript.RenderScript: long mContext>;

        l0 = virtualinvoke r0.<android.renderscript.RenderScript: long rsnMeshCreate(long,long[],long[],int[])>($l1, r4, r1, r2);

     label2:
        exitmonitor r0;

        return l0;

     label3:
        $r3 := @caughtexception;

        exitmonitor r0;

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    int nMeshGetIndexCount(long)
    {
        android.renderscript.RenderScript r0;
        long l0, $l2;
        int i1;
        java.lang.Throwable $r2;

        r0 := @this: android.renderscript.RenderScript;

        l0 := @parameter0: long;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $l2 = r0.<android.renderscript.RenderScript: long mContext>;

        i1 = virtualinvoke r0.<android.renderscript.RenderScript: int rsnMeshGetIndexCount(long,long)>($l2, l0);

     label2:
        exitmonitor r0;

        return i1;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void nMeshGetIndices(long, long[], int[], int)
    {
        android.renderscript.RenderScript r0;
        long l0, $l2;
        int[] r1;
        int i1;
        java.lang.Throwable $r2;
        long[] r3;

        r0 := @this: android.renderscript.RenderScript;

        l0 := @parameter0: long;

        r3 := @parameter1: long[];

        r1 := @parameter2: int[];

        i1 := @parameter3: int;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $l2 = r0.<android.renderscript.RenderScript: long mContext>;

        virtualinvoke r0.<android.renderscript.RenderScript: void rsnMeshGetIndices(long,long,long[],int[],int)>($l2, l0, r3, r1, i1);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    int nMeshGetVertexBufferCount(long)
    {
        android.renderscript.RenderScript r0;
        long l0, $l2;
        int i1;
        java.lang.Throwable $r2;

        r0 := @this: android.renderscript.RenderScript;

        l0 := @parameter0: long;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $l2 = r0.<android.renderscript.RenderScript: long mContext>;

        i1 = virtualinvoke r0.<android.renderscript.RenderScript: int rsnMeshGetVertexBufferCount(long,long)>($l2, l0);

     label2:
        exitmonitor r0;

        return i1;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void nMeshGetVertices(long, long[], int)
    {
        android.renderscript.RenderScript r0;
        long l0, $l2;
        int i1;
        java.lang.Throwable $r1;
        long[] r2;

        r0 := @this: android.renderscript.RenderScript;

        l0 := @parameter0: long;

        r2 := @parameter1: long[];

        i1 := @parameter2: int;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $l2 = r0.<android.renderscript.RenderScript: long mContext>;

        virtualinvoke r0.<android.renderscript.RenderScript: void rsnMeshGetVertices(long,long,long[],int)>($l2, l0, r2, i1);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r1 := @caughtexception;

        exitmonitor r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void nObjDestroy(long)
    {
        android.renderscript.RenderScript r0;
        long l0, l1;
        byte $b2;

        r0 := @this: android.renderscript.RenderScript;

        l0 := @parameter0: long;

        l1 = r0.<android.renderscript.RenderScript: long mContext>;

        $b2 = l1 cmp 0L;

        if $b2 == 0 goto label1;

        virtualinvoke r0.<android.renderscript.RenderScript: void rsnObjDestroy(long,long)>(l1, l0);

     label1:
        return;
    }

    void nProgramBindConstants(long, int, long)
    {
        android.renderscript.RenderScript r0;
        long l0, l2, $l3;
        int i1;
        java.lang.Throwable $r2;

        r0 := @this: android.renderscript.RenderScript;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        l2 := @parameter2: long;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $l3 = r0.<android.renderscript.RenderScript: long mContext>;

        virtualinvoke r0.<android.renderscript.RenderScript: void rsnProgramBindConstants(long,long,int,long)>($l3, l0, i1, l2);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void nProgramBindSampler(long, int, long)
    {
        android.renderscript.RenderScript r0;
        long l0, l2, $l3;
        int i1;
        java.lang.Throwable $r2;

        r0 := @this: android.renderscript.RenderScript;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        l2 := @parameter2: long;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $l3 = r0.<android.renderscript.RenderScript: long mContext>;

        virtualinvoke r0.<android.renderscript.RenderScript: void rsnProgramBindSampler(long,long,int,long)>($l3, l0, i1, l2);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void nProgramBindTexture(long, int, long)
    {
        android.renderscript.RenderScript r0;
        long l0, l2, $l3;
        int i1;
        java.lang.Throwable $r2;

        r0 := @this: android.renderscript.RenderScript;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        l2 := @parameter2: long;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $l3 = r0.<android.renderscript.RenderScript: long mContext>;

        virtualinvoke r0.<android.renderscript.RenderScript: void rsnProgramBindTexture(long,long,int,long)>($l3, l0, i1, l2);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    long nProgramFragmentCreate(java.lang.String, java.lang.String[], long[])
    {
        android.renderscript.RenderScript r0;
        java.lang.String[] r1;
        long[] r2;
        long l0, $l1;
        java.lang.Throwable $r3;
        java.lang.String r4;

        r0 := @this: android.renderscript.RenderScript;

        r4 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String[];

        r2 := @parameter2: long[];

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $l1 = r0.<android.renderscript.RenderScript: long mContext>;

        l0 = virtualinvoke r0.<android.renderscript.RenderScript: long rsnProgramFragmentCreate(long,java.lang.String,java.lang.String[],long[])>($l1, r4, r1, r2);

     label2:
        exitmonitor r0;

        return l0;

     label3:
        $r3 := @caughtexception;

        exitmonitor r0;

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    long nProgramRasterCreate(boolean, int)
    {
        android.renderscript.RenderScript r0;
        boolean z0;
        int i0;
        long l1, $l2;
        java.lang.Throwable $r2;

        r0 := @this: android.renderscript.RenderScript;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $l2 = r0.<android.renderscript.RenderScript: long mContext>;

        l1 = virtualinvoke r0.<android.renderscript.RenderScript: long rsnProgramRasterCreate(long,boolean,int)>($l2, z0, i0);

     label2:
        exitmonitor r0;

        return l1;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    long nProgramStoreCreate(boolean, boolean, boolean, boolean, boolean, boolean, int, int, int)
    {
        android.renderscript.RenderScript r0;
        boolean z0, z1, z2, z3, z4, z5;
        int i0, i1, i2;
        long l3, $l4;
        java.lang.Throwable $r2;

        r0 := @this: android.renderscript.RenderScript;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        z2 := @parameter2: boolean;

        z3 := @parameter3: boolean;

        z4 := @parameter4: boolean;

        z5 := @parameter5: boolean;

        i0 := @parameter6: int;

        i1 := @parameter7: int;

        i2 := @parameter8: int;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $l4 = r0.<android.renderscript.RenderScript: long mContext>;

        l3 = virtualinvoke r0.<android.renderscript.RenderScript: long rsnProgramStoreCreate(long,boolean,boolean,boolean,boolean,boolean,boolean,int,int,int)>($l4, z0, z1, z2, z3, z4, z5, i0, i1, i2);

     label2:
        exitmonitor r0;

        return l3;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    long nProgramVertexCreate(java.lang.String, java.lang.String[], long[])
    {
        android.renderscript.RenderScript r0;
        java.lang.String[] r1;
        long[] r2;
        long l0, $l1;
        java.lang.Throwable $r3;
        java.lang.String r4;

        r0 := @this: android.renderscript.RenderScript;

        r4 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String[];

        r2 := @parameter2: long[];

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $l1 = r0.<android.renderscript.RenderScript: long mContext>;

        l0 = virtualinvoke r0.<android.renderscript.RenderScript: long rsnProgramVertexCreate(long,java.lang.String,java.lang.String[],long[])>($l1, r4, r1, r2);

     label2:
        exitmonitor r0;

        return l0;

     label3:
        $r3 := @caughtexception;

        exitmonitor r0;

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    long nSamplerCreate(int, int, int, int, int, float)
    {
        android.renderscript.RenderScript r0;
        int i0, i1, i2, i3, i4;
        float f0;
        long l5, $l6;
        java.lang.Throwable $r2;

        r0 := @this: android.renderscript.RenderScript;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        f0 := @parameter5: float;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $l6 = r0.<android.renderscript.RenderScript: long mContext>;

        l5 = virtualinvoke r0.<android.renderscript.RenderScript: long rsnSamplerCreate(long,int,int,int,int,int,float)>($l6, i0, i1, i2, i3, i4, f0);

     label2:
        exitmonitor r0;

        return l5;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void nScriptBindAllocation(long, long, int)
    {
        android.renderscript.RenderScript r0;
        long l0, l1, $l3;
        int i2;
        java.lang.Throwable $r2;

        r0 := @this: android.renderscript.RenderScript;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        i2 := @parameter2: int;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $l3 = r0.<android.renderscript.RenderScript: long mContext>;

        virtualinvoke r0.<android.renderscript.RenderScript: void rsnScriptBindAllocation(long,long,long,int)>($l3, l0, l1, i2);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    long nScriptCCreate(java.lang.String, java.lang.String, byte[], int)
    {
        android.renderscript.RenderScript r0;
        java.lang.String r1, r4;
        byte[] r2;
        int i0;
        long l1, $l2;
        java.lang.Throwable $r3;

        r0 := @this: android.renderscript.RenderScript;

        r4 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: byte[];

        i0 := @parameter3: int;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $l2 = r0.<android.renderscript.RenderScript: long mContext>;

        l1 = virtualinvoke r0.<android.renderscript.RenderScript: long rsnScriptCCreate(long,java.lang.String,java.lang.String,byte[],int)>($l2, r4, r1, r2, i0);

     label2:
        exitmonitor r0;

        return l1;

     label3:
        $r3 := @caughtexception;

        exitmonitor r0;

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    long nScriptFieldIDCreate(long, int)
    {
        android.renderscript.RenderScript r0;
        int i0;
        long $l1, l2, l3;
        java.lang.Throwable $r2;

        r0 := @this: android.renderscript.RenderScript;

        l2 := @parameter0: long;

        i0 := @parameter1: int;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $l1 = r0.<android.renderscript.RenderScript: long mContext>;

        l3 = virtualinvoke r0.<android.renderscript.RenderScript: long rsnScriptFieldIDCreate(long,long,int)>($l1, l2, i0);

     label2:
        exitmonitor r0;

        return l3;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void nScriptForEach(long, int, long[], long, byte[], int[])
    {
        android.renderscript.RenderScript r0;
        long l0, l2, $l3;
        int i1;
        byte[] r1;
        int[] r2;
        java.lang.Throwable $r3;
        long[] r4;

        r0 := @this: android.renderscript.RenderScript;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        r4 := @parameter2: long[];

        l2 := @parameter3: long;

        r1 := @parameter4: byte[];

        r2 := @parameter5: int[];

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $l3 = r0.<android.renderscript.RenderScript: long mContext>;

        virtualinvoke r0.<android.renderscript.RenderScript: void rsnScriptForEach(long,long,int,long[],long,byte[],int[])>($l3, l0, i1, r4, l2, r1, r2);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r3 := @caughtexception;

        exitmonitor r0;

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    double nScriptGetVarD(long, int)
    {
        android.renderscript.RenderScript r0;
        long l0, $l2;
        int i1;
        double d0;
        java.lang.Throwable $r2;

        r0 := @this: android.renderscript.RenderScript;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $l2 = r0.<android.renderscript.RenderScript: long mContext>;

        d0 = virtualinvoke r0.<android.renderscript.RenderScript: double rsnScriptGetVarD(long,long,int)>($l2, l0, i1);

     label2:
        exitmonitor r0;

        return d0;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    float nScriptGetVarF(long, int)
    {
        android.renderscript.RenderScript r0;
        long l0, $l2;
        int i1;
        float f0;
        java.lang.Throwable $r2;

        r0 := @this: android.renderscript.RenderScript;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $l2 = r0.<android.renderscript.RenderScript: long mContext>;

        f0 = virtualinvoke r0.<android.renderscript.RenderScript: float rsnScriptGetVarF(long,long,int)>($l2, l0, i1);

     label2:
        exitmonitor r0;

        return f0;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    int nScriptGetVarI(long, int)
    {
        android.renderscript.RenderScript r0;
        long l0, $l1;
        java.lang.Throwable $r2;
        int i2, i3;

        r0 := @this: android.renderscript.RenderScript;

        l0 := @parameter0: long;

        i2 := @parameter1: int;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $l1 = r0.<android.renderscript.RenderScript: long mContext>;

        i3 = virtualinvoke r0.<android.renderscript.RenderScript: int rsnScriptGetVarI(long,long,int)>($l1, l0, i2);

     label2:
        exitmonitor r0;

        return i3;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    long nScriptGetVarJ(long, int)
    {
        android.renderscript.RenderScript r0;
        int i0;
        long $l1, l2, l3;
        java.lang.Throwable $r2;

        r0 := @this: android.renderscript.RenderScript;

        l2 := @parameter0: long;

        i0 := @parameter1: int;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $l1 = r0.<android.renderscript.RenderScript: long mContext>;

        l3 = virtualinvoke r0.<android.renderscript.RenderScript: long rsnScriptGetVarJ(long,long,int)>($l1, l2, i0);

     label2:
        exitmonitor r0;

        return l3;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void nScriptGetVarV(long, int, byte[])
    {
        android.renderscript.RenderScript r0;
        long l0, $l2;
        int i1;
        java.lang.Throwable $r1;
        byte[] r2;

        r0 := @this: android.renderscript.RenderScript;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        r2 := @parameter2: byte[];

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $l2 = r0.<android.renderscript.RenderScript: long mContext>;

        virtualinvoke r0.<android.renderscript.RenderScript: void rsnScriptGetVarV(long,long,int,byte[])>($l2, l0, i1, r2);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r1 := @caughtexception;

        exitmonitor r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    long nScriptGroup2Create(java.lang.String, java.lang.String, long[])
    {
        android.renderscript.RenderScript r0;
        java.lang.String r1, r4;
        long[] r2;
        long l0, $l1;
        byte $b2;
        java.lang.Throwable $r3;
        android.renderscript.RSRuntimeException r5;

        r0 := @this: android.renderscript.RenderScript;

        r4 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: long[];

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $l1 = r0.<android.renderscript.RenderScript: long mContext>;

        l0 = virtualinvoke r0.<android.renderscript.RenderScript: long rsnScriptGroup2Create(long,java.lang.String,java.lang.String,long[])>($l1, r4, r1, r2);

     label2:
        $b2 = l0 cmp 0L;

        if $b2 == 0 goto label3;

        exitmonitor r0;

        return l0;

     label3:
        r5 = new android.renderscript.RSRuntimeException;

        specialinvoke r5.<android.renderscript.RSRuntimeException: void <init>(java.lang.String)>("Failed creating script group.");

        throw r5;

     label4:
        $r3 := @caughtexception;

        exitmonitor r0;

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label3 to label4 with label4;
    }

    void nScriptGroup2Execute(long)
    {
        android.renderscript.RenderScript r0;
        long l0, $l1;
        java.lang.Throwable $r2;

        r0 := @this: android.renderscript.RenderScript;

        l0 := @parameter0: long;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $l1 = r0.<android.renderscript.RenderScript: long mContext>;

        virtualinvoke r0.<android.renderscript.RenderScript: void rsnScriptGroup2Execute(long,long)>($l1, l0);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    long nScriptGroupCreate(long[], long[], long[], long[], long[])
    {
        android.renderscript.RenderScript r0;
        long[] r1, r2, r3, r4, r6;
        long l0, $l1;
        java.lang.Throwable $r5;

        r0 := @this: android.renderscript.RenderScript;

        r6 := @parameter0: long[];

        r1 := @parameter1: long[];

        r2 := @parameter2: long[];

        r3 := @parameter3: long[];

        r4 := @parameter4: long[];

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $l1 = r0.<android.renderscript.RenderScript: long mContext>;

        l0 = virtualinvoke r0.<android.renderscript.RenderScript: long rsnScriptGroupCreate(long,long[],long[],long[],long[],long[])>($l1, r6, r1, r2, r3, r4);

     label2:
        exitmonitor r0;

        return l0;

     label3:
        $r5 := @caughtexception;

        exitmonitor r0;

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void nScriptGroupExecute(long)
    {
        android.renderscript.RenderScript r0;
        long l0, $l1;
        java.lang.Throwable $r2;

        r0 := @this: android.renderscript.RenderScript;

        l0 := @parameter0: long;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $l1 = r0.<android.renderscript.RenderScript: long mContext>;

        virtualinvoke r0.<android.renderscript.RenderScript: void rsnScriptGroupExecute(long,long)>($l1, l0);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void nScriptGroupSetInput(long, long, long)
    {
        android.renderscript.RenderScript r0;
        long l0, l1, l2, $l3;
        java.lang.Throwable $r2;

        r0 := @this: android.renderscript.RenderScript;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        l2 := @parameter2: long;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $l3 = r0.<android.renderscript.RenderScript: long mContext>;

        virtualinvoke r0.<android.renderscript.RenderScript: void rsnScriptGroupSetInput(long,long,long,long)>($l3, l0, l1, l2);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void nScriptGroupSetOutput(long, long, long)
    {
        android.renderscript.RenderScript r0;
        long l0, l1, l2, $l3;
        java.lang.Throwable $r2;

        r0 := @this: android.renderscript.RenderScript;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        l2 := @parameter2: long;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $l3 = r0.<android.renderscript.RenderScript: long mContext>;

        virtualinvoke r0.<android.renderscript.RenderScript: void rsnScriptGroupSetOutput(long,long,long,long)>($l3, l0, l1, l2);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void nScriptIntrinsicBLAS_BNNM(long, int, int, int, long, int, long, int, long, int, int)
    {
        android.renderscript.RenderScript r0;
        long l0, l4, l6, l8, $l11;
        int i1, i2, i3, i5, i7, i9, i10;
        java.lang.Throwable $r2;

        r0 := @this: android.renderscript.RenderScript;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        l4 := @parameter4: long;

        i5 := @parameter5: int;

        l6 := @parameter6: long;

        i7 := @parameter7: int;

        l8 := @parameter8: long;

        i9 := @parameter9: int;

        i10 := @parameter10: int;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $l11 = r0.<android.renderscript.RenderScript: long mContext>;

        virtualinvoke r0.<android.renderscript.RenderScript: void rsnScriptIntrinsicBLAS_BNNM(long,long,int,int,int,long,int,long,int,long,int,int)>($l11, l0, i1, i2, i3, l4, i5, l6, i7, l8, i9, i10);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void nScriptIntrinsicBLAS_Complex(long, int, int, int, int, int, int, int, int, int, float, float, long, long, float, float, long, int, int, int, int)
    {
        android.renderscript.RenderScript r0;
        long l0, l10, l11, l12, $l17;
        int i1, i2, i3, i4, i5, i6, i7, i8, i9, i13, i14, i15, i16;
        float f0, f1, f2, f3;
        java.lang.Throwable $r2;

        r0 := @this: android.renderscript.RenderScript;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        i5 := @parameter5: int;

        i6 := @parameter6: int;

        i7 := @parameter7: int;

        i8 := @parameter8: int;

        i9 := @parameter9: int;

        f0 := @parameter10: float;

        f1 := @parameter11: float;

        l10 := @parameter12: long;

        l11 := @parameter13: long;

        f2 := @parameter14: float;

        f3 := @parameter15: float;

        l12 := @parameter16: long;

        i13 := @parameter17: int;

        i14 := @parameter18: int;

        i15 := @parameter19: int;

        i16 := @parameter20: int;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $l17 = r0.<android.renderscript.RenderScript: long mContext>;

        virtualinvoke r0.<android.renderscript.RenderScript: void rsnScriptIntrinsicBLAS_Complex(long,long,int,int,int,int,int,int,int,int,int,float,float,long,long,float,float,long,int,int,int,int)>($l17, l0, i1, i2, i3, i4, i5, i6, i7, i8, i9, f0, f1, l10, l11, f2, f3, l12, i13, i14, i15, i16);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void nScriptIntrinsicBLAS_Double(long, int, int, int, int, int, int, int, int, int, double, long, long, double, long, int, int, int, int)
    {
        android.renderscript.RenderScript r0;
        long l0, l10, l11, l12, $l17;
        int i1, i2, i3, i4, i5, i6, i7, i8, i9, i13, i14, i15, i16;
        double d0, d1;
        java.lang.Throwable $r2;

        r0 := @this: android.renderscript.RenderScript;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        i5 := @parameter5: int;

        i6 := @parameter6: int;

        i7 := @parameter7: int;

        i8 := @parameter8: int;

        i9 := @parameter9: int;

        d0 := @parameter10: double;

        l10 := @parameter11: long;

        l11 := @parameter12: long;

        d1 := @parameter13: double;

        l12 := @parameter14: long;

        i13 := @parameter15: int;

        i14 := @parameter16: int;

        i15 := @parameter17: int;

        i16 := @parameter18: int;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $l17 = r0.<android.renderscript.RenderScript: long mContext>;

        virtualinvoke r0.<android.renderscript.RenderScript: void rsnScriptIntrinsicBLAS_Double(long,long,int,int,int,int,int,int,int,int,int,double,long,long,double,long,int,int,int,int)>($l17, l0, i1, i2, i3, i4, i5, i6, i7, i8, i9, d0, l10, l11, d1, l12, i13, i14, i15, i16);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void nScriptIntrinsicBLAS_Single(long, int, int, int, int, int, int, int, int, int, float, long, long, float, long, int, int, int, int)
    {
        android.renderscript.RenderScript r0;
        long l0, l10, l11, l12, $l17;
        int i1, i2, i3, i4, i5, i6, i7, i8, i9, i13, i14, i15, i16;
        float f0, f1;
        java.lang.Throwable $r2;

        r0 := @this: android.renderscript.RenderScript;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        i5 := @parameter5: int;

        i6 := @parameter6: int;

        i7 := @parameter7: int;

        i8 := @parameter8: int;

        i9 := @parameter9: int;

        f0 := @parameter10: float;

        l10 := @parameter11: long;

        l11 := @parameter12: long;

        f1 := @parameter13: float;

        l12 := @parameter14: long;

        i13 := @parameter15: int;

        i14 := @parameter16: int;

        i15 := @parameter17: int;

        i16 := @parameter18: int;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $l17 = r0.<android.renderscript.RenderScript: long mContext>;

        virtualinvoke r0.<android.renderscript.RenderScript: void rsnScriptIntrinsicBLAS_Single(long,long,int,int,int,int,int,int,int,int,int,float,long,long,float,long,int,int,int,int)>($l17, l0, i1, i2, i3, i4, i5, i6, i7, i8, i9, f0, l10, l11, f1, l12, i13, i14, i15, i16);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void nScriptIntrinsicBLAS_Z(long, int, int, int, int, int, int, int, int, int, double, double, long, long, double, double, long, int, int, int, int)
    {
        android.renderscript.RenderScript r0;
        long l0, l10, l11, l12, $l17;
        int i1, i2, i3, i4, i5, i6, i7, i8, i9, i13, i14, i15, i16;
        double d0, d1, d2, d3;
        java.lang.Throwable $r2;

        r0 := @this: android.renderscript.RenderScript;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        i5 := @parameter5: int;

        i6 := @parameter6: int;

        i7 := @parameter7: int;

        i8 := @parameter8: int;

        i9 := @parameter9: int;

        d0 := @parameter10: double;

        d1 := @parameter11: double;

        l10 := @parameter12: long;

        l11 := @parameter13: long;

        d2 := @parameter14: double;

        d3 := @parameter15: double;

        l12 := @parameter16: long;

        i13 := @parameter17: int;

        i14 := @parameter18: int;

        i15 := @parameter19: int;

        i16 := @parameter20: int;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $l17 = r0.<android.renderscript.RenderScript: long mContext>;

        virtualinvoke r0.<android.renderscript.RenderScript: void rsnScriptIntrinsicBLAS_Z(long,long,int,int,int,int,int,int,int,int,int,double,double,long,long,double,double,long,int,int,int,int)>($l17, l0, i1, i2, i3, i4, i5, i6, i7, i8, i9, d0, d1, l10, l11, d2, d3, l12, i13, i14, i15, i16);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    long nScriptIntrinsicCreate(int, long)
    {
        android.renderscript.RenderScript r0;
        int i0;
        long $l1, l2, l3;
        java.lang.Throwable $r2;

        r0 := @this: android.renderscript.RenderScript;

        i0 := @parameter0: int;

        l2 := @parameter1: long;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $l1 = r0.<android.renderscript.RenderScript: long mContext>;

        l3 = virtualinvoke r0.<android.renderscript.RenderScript: long rsnScriptIntrinsicCreate(long,int,long)>($l1, i0, l2);

     label2:
        exitmonitor r0;

        return l3;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void nScriptInvoke(long, int)
    {
        android.renderscript.RenderScript r0;
        long l0, $l2;
        int i1;
        java.lang.Throwable $r2;

        r0 := @this: android.renderscript.RenderScript;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $l2 = r0.<android.renderscript.RenderScript: long mContext>;

        virtualinvoke r0.<android.renderscript.RenderScript: void rsnScriptInvoke(long,long,int)>($l2, l0, i1);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    long nScriptInvokeIDCreate(long, int)
    {
        android.renderscript.RenderScript r0;
        int i0;
        long $l1, l2, l3;
        java.lang.Throwable $r2;

        r0 := @this: android.renderscript.RenderScript;

        l2 := @parameter0: long;

        i0 := @parameter1: int;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $l1 = r0.<android.renderscript.RenderScript: long mContext>;

        l3 = virtualinvoke r0.<android.renderscript.RenderScript: long rsnScriptInvokeIDCreate(long,long,int)>($l1, l2, i0);

     label2:
        exitmonitor r0;

        return l3;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void nScriptInvokeV(long, int, byte[])
    {
        android.renderscript.RenderScript r0;
        long l0, $l2;
        int i1;
        java.lang.Throwable $r1;
        byte[] r2;

        r0 := @this: android.renderscript.RenderScript;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        r2 := @parameter2: byte[];

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $l2 = r0.<android.renderscript.RenderScript: long mContext>;

        virtualinvoke r0.<android.renderscript.RenderScript: void rsnScriptInvokeV(long,long,int,byte[])>($l2, l0, i1, r2);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r1 := @caughtexception;

        exitmonitor r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    long nScriptKernelIDCreate(long, int, int)
    {
        android.renderscript.RenderScript r0;
        int i0, i1;
        long $l2, l3, l4;
        java.lang.Throwable $r2;

        r0 := @this: android.renderscript.RenderScript;

        l3 := @parameter0: long;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $l2 = r0.<android.renderscript.RenderScript: long mContext>;

        l4 = virtualinvoke r0.<android.renderscript.RenderScript: long rsnScriptKernelIDCreate(long,long,int,int)>($l2, l3, i0, i1);

     label2:
        exitmonitor r0;

        return l4;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void nScriptReduce(long, int, long[], long, int[])
    {
        android.renderscript.RenderScript r0;
        long l0, l2, $l3;
        int i1;
        int[] r1;
        java.lang.Throwable $r2;
        long[] r3;

        r0 := @this: android.renderscript.RenderScript;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        r3 := @parameter2: long[];

        l2 := @parameter3: long;

        r1 := @parameter4: int[];

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $l3 = r0.<android.renderscript.RenderScript: long mContext>;

        virtualinvoke r0.<android.renderscript.RenderScript: void rsnScriptReduce(long,long,int,long[],long,int[])>($l3, l0, i1, r3, l2, r1);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void nScriptSetTimeZone(long, byte[])
    {
        android.renderscript.RenderScript r0;
        long l0, $l1;
        java.lang.Throwable $r1;
        byte[] r2;

        r0 := @this: android.renderscript.RenderScript;

        l0 := @parameter0: long;

        r2 := @parameter1: byte[];

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $l1 = r0.<android.renderscript.RenderScript: long mContext>;

        virtualinvoke r0.<android.renderscript.RenderScript: void rsnScriptSetTimeZone(long,long,byte[])>($l1, l0, r2);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r1 := @caughtexception;

        exitmonitor r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void nScriptSetVarD(long, int, double)
    {
        android.renderscript.RenderScript r0;
        long l0, $l2;
        int i1;
        double d0;
        java.lang.Throwable $r2;

        r0 := @this: android.renderscript.RenderScript;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        d0 := @parameter2: double;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $l2 = r0.<android.renderscript.RenderScript: long mContext>;

        virtualinvoke r0.<android.renderscript.RenderScript: void rsnScriptSetVarD(long,long,int,double)>($l2, l0, i1, d0);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void nScriptSetVarF(long, int, float)
    {
        android.renderscript.RenderScript r0;
        long l0, $l2;
        int i1;
        float f0;
        java.lang.Throwable $r2;

        r0 := @this: android.renderscript.RenderScript;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        f0 := @parameter2: float;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $l2 = r0.<android.renderscript.RenderScript: long mContext>;

        virtualinvoke r0.<android.renderscript.RenderScript: void rsnScriptSetVarF(long,long,int,float)>($l2, l0, i1, f0);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void nScriptSetVarI(long, int, int)
    {
        android.renderscript.RenderScript r0;
        long l0, $l3;
        int i1, i2;
        java.lang.Throwable $r2;

        r0 := @this: android.renderscript.RenderScript;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $l3 = r0.<android.renderscript.RenderScript: long mContext>;

        virtualinvoke r0.<android.renderscript.RenderScript: void rsnScriptSetVarI(long,long,int,int)>($l3, l0, i1, i2);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void nScriptSetVarJ(long, int, long)
    {
        android.renderscript.RenderScript r0;
        long l0, l2, $l3;
        int i1;
        java.lang.Throwable $r2;

        r0 := @this: android.renderscript.RenderScript;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        l2 := @parameter2: long;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $l3 = r0.<android.renderscript.RenderScript: long mContext>;

        virtualinvoke r0.<android.renderscript.RenderScript: void rsnScriptSetVarJ(long,long,int,long)>($l3, l0, i1, l2);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void nScriptSetVarObj(long, int, long)
    {
        android.renderscript.RenderScript r0;
        long l0, l2, $l3;
        int i1;
        java.lang.Throwable $r2;

        r0 := @this: android.renderscript.RenderScript;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        l2 := @parameter2: long;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $l3 = r0.<android.renderscript.RenderScript: long mContext>;

        virtualinvoke r0.<android.renderscript.RenderScript: void rsnScriptSetVarObj(long,long,int,long)>($l3, l0, i1, l2);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void nScriptSetVarV(long, int, byte[])
    {
        android.renderscript.RenderScript r0;
        long l0, $l2;
        int i1;
        java.lang.Throwable $r1;
        byte[] r2;

        r0 := @this: android.renderscript.RenderScript;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        r2 := @parameter2: byte[];

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $l2 = r0.<android.renderscript.RenderScript: long mContext>;

        virtualinvoke r0.<android.renderscript.RenderScript: void rsnScriptSetVarV(long,long,int,byte[])>($l2, l0, i1, r2);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r1 := @caughtexception;

        exitmonitor r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void nScriptSetVarVE(long, int, byte[], long, int[])
    {
        android.renderscript.RenderScript r0;
        long l0, l2, $l3;
        int i1;
        int[] r1;
        java.lang.Throwable $r2;
        byte[] r3;

        r0 := @this: android.renderscript.RenderScript;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        r3 := @parameter2: byte[];

        l2 := @parameter3: long;

        r1 := @parameter4: int[];

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $l3 = r0.<android.renderscript.RenderScript: long mContext>;

        virtualinvoke r0.<android.renderscript.RenderScript: void rsnScriptSetVarVE(long,long,int,byte[],long,int[])>($l3, l0, i1, r3, l2, r1);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    long nTypeCreate(long, int, int, int, boolean, boolean, int)
    {
        android.renderscript.RenderScript r0;
        int i0, i1, i2, i3;
        boolean z0, z1;
        long $l4, l5, l6;
        java.lang.Throwable $r2;

        r0 := @this: android.renderscript.RenderScript;

        l5 := @parameter0: long;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        z0 := @parameter4: boolean;

        z1 := @parameter5: boolean;

        i3 := @parameter6: int;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $l4 = r0.<android.renderscript.RenderScript: long mContext>;

        l6 = virtualinvoke r0.<android.renderscript.RenderScript: long rsnTypeCreate(long,long,int,int,int,boolean,boolean,int)>($l4, l5, i0, i1, i2, z0, z1, i3);

     label2:
        exitmonitor r0;

        return l6;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void nTypeGetNativeData(long, long[])
    {
        android.renderscript.RenderScript r0;
        long l0, $l1;
        java.lang.Throwable $r1;
        long[] r2;

        r0 := @this: android.renderscript.RenderScript;

        l0 := @parameter0: long;

        r2 := @parameter1: long[];

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $l1 = r0.<android.renderscript.RenderScript: long mContext>;

        virtualinvoke r0.<android.renderscript.RenderScript: void rsnTypeGetNativeData(long,long,long[])>($l1, l0, r2);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r1 := @caughtexception;

        exitmonitor r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    native long rsnAllocationAdapterCreate(long, long, long);

    native void rsnAllocationAdapterOffset(long, long, int, int, int, int, int, int, int, int, int);

    native void rsnAllocationCopyFromBitmap(long, long, android.graphics.Bitmap);

    native void rsnAllocationCopyToBitmap(long, long, android.graphics.Bitmap);

    native long rsnAllocationCreateBitmapBackedAllocation(long, long, int, android.graphics.Bitmap, int);

    native long rsnAllocationCreateFromBitmap(long, long, int, android.graphics.Bitmap, int);

    native long rsnAllocationCreateTyped(long, long, int, int, long);

    native long rsnAllocationCubeCreateFromBitmap(long, long, int, android.graphics.Bitmap, int);

    native void rsnAllocationData1D(long, long, int, int, int, java.lang.Object, int, int, int, boolean);

    native void rsnAllocationData2D(long, long, int, int, int, int, int, int, long, int, int, int, int);

    native void rsnAllocationData2D(long, long, int, int, int, int, int, int, java.lang.Object, int, int, int, boolean);

    native void rsnAllocationData2D(long, long, int, int, int, int, android.graphics.Bitmap);

    native void rsnAllocationData3D(long, long, int, int, int, int, int, int, int, long, int, int, int, int);

    native void rsnAllocationData3D(long, long, int, int, int, int, int, int, int, java.lang.Object, int, int, int, boolean);

    native void rsnAllocationElementData(long, long, int, int, int, int, int, byte[], int);

    native void rsnAllocationElementRead(long, long, int, int, int, int, int, byte[], int);

    native void rsnAllocationGenerateMipmaps(long, long);

    native java.nio.ByteBuffer rsnAllocationGetByteBuffer(long, long, long[], int, int, int);

    native android.view.Surface rsnAllocationGetSurface(long, long);

    native long rsnAllocationGetType(long, long);

    native long rsnAllocationIoReceive(long, long);

    native void rsnAllocationIoSend(long, long);

    native void rsnAllocationRead(long, long, java.lang.Object, int, int, boolean);

    native void rsnAllocationRead1D(long, long, int, int, int, java.lang.Object, int, int, int, boolean);

    native void rsnAllocationRead2D(long, long, int, int, int, int, int, int, java.lang.Object, int, int, int, boolean);

    native void rsnAllocationRead3D(long, long, int, int, int, int, int, int, int, java.lang.Object, int, int, int, boolean);

    native void rsnAllocationResize1D(long, long, int);

    native void rsnAllocationSetSurface(long, long, android.view.Surface);

    native void rsnAllocationSetupBufferQueue(long, long, int);

    native void rsnAllocationShareBufferQueue(long, long, long);

    native void rsnAllocationSyncAll(long, long, int);

    native void rsnAssignName(long, long, byte[]);

    native long rsnClosureCreate(long, long, long, long[], long[], int[], long[], long[]);

    native void rsnClosureSetArg(long, long, int, long, int);

    native void rsnClosureSetGlobal(long, long, long, long, int);

    native void rsnContextBindProgramFragment(long, long);

    native void rsnContextBindProgramRaster(long, long);

    native void rsnContextBindProgramStore(long, long);

    native void rsnContextBindProgramVertex(long, long);

    native void rsnContextBindRootScript(long, long);

    native void rsnContextBindSampler(long, int, int);

    native long rsnContextCreate(long, int, int, int);

    native long rsnContextCreateGL(long, int, int, int, int, int, int, int, int, int, int, int, int, float, int);

    native void rsnContextDestroy(long);

    native void rsnContextDump(long, int);

    native void rsnContextFinish(long);

    native void rsnContextPause(long);

    native void rsnContextResume(long);

    native void rsnContextSendMessage(long, int, int[]);

    native void rsnContextSetCacheDir(long, java.lang.String);

    native void rsnContextSetPriority(long, int);

    native void rsnContextSetSurface(long, int, int, android.view.Surface);

    native void rsnContextSetSurfaceTexture(long, int, int, android.graphics.SurfaceTexture);

    native long rsnElementCreate(long, long, int, boolean, int);

    native long rsnElementCreate2(long, long[], java.lang.String[], int[]);

    native void rsnElementGetNativeData(long, long, int[]);

    native void rsnElementGetSubElements(long, long, long[], java.lang.String[], int[]);

    native long rsnFileA3DCreateFromAsset(long, android.content.res.AssetManager, java.lang.String);

    native long rsnFileA3DCreateFromAssetStream(long, long);

    native long rsnFileA3DCreateFromFile(long, java.lang.String);

    native long rsnFileA3DGetEntryByIndex(long, long, int);

    native void rsnFileA3DGetIndexEntries(long, long, int, int[], java.lang.String[]);

    native int rsnFileA3DGetNumIndexEntries(long, long);

    native long rsnFontCreateFromAsset(long, android.content.res.AssetManager, java.lang.String, float, int);

    native long rsnFontCreateFromAssetStream(long, java.lang.String, float, int, long);

    native long rsnFontCreateFromFile(long, java.lang.String, float, int);

    native java.lang.String rsnGetName(long, long);

    native long rsnInvokeClosureCreate(long, long, byte[], long[], long[], int[]);

    native long rsnMeshCreate(long, long[], long[], int[]);

    native int rsnMeshGetIndexCount(long, long);

    native void rsnMeshGetIndices(long, long, long[], int[], int);

    native int rsnMeshGetVertexBufferCount(long, long);

    native void rsnMeshGetVertices(long, long, long[], int);

    native void rsnObjDestroy(long, long);

    native void rsnProgramBindConstants(long, long, int, long);

    native void rsnProgramBindSampler(long, long, int, long);

    native void rsnProgramBindTexture(long, long, int, long);

    native long rsnProgramFragmentCreate(long, java.lang.String, java.lang.String[], long[]);

    native long rsnProgramRasterCreate(long, boolean, int);

    native long rsnProgramStoreCreate(long, boolean, boolean, boolean, boolean, boolean, boolean, int, int, int);

    native long rsnProgramVertexCreate(long, java.lang.String, java.lang.String[], long[]);

    native long rsnSamplerCreate(long, int, int, int, int, int, float);

    native void rsnScriptBindAllocation(long, long, long, int);

    native long rsnScriptCCreate(long, java.lang.String, java.lang.String, byte[], int);

    native long rsnScriptFieldIDCreate(long, long, int);

    native void rsnScriptForEach(long, long, int, long[], long, byte[], int[]);

    native double rsnScriptGetVarD(long, long, int);

    native float rsnScriptGetVarF(long, long, int);

    native int rsnScriptGetVarI(long, long, int);

    native long rsnScriptGetVarJ(long, long, int);

    native void rsnScriptGetVarV(long, long, int, byte[]);

    native long rsnScriptGroup2Create(long, java.lang.String, java.lang.String, long[]);

    native void rsnScriptGroup2Execute(long, long);

    native long rsnScriptGroupCreate(long, long[], long[], long[], long[], long[]);

    native void rsnScriptGroupExecute(long, long);

    native void rsnScriptGroupSetInput(long, long, long, long);

    native void rsnScriptGroupSetOutput(long, long, long, long);

    native void rsnScriptIntrinsicBLAS_BNNM(long, long, int, int, int, long, int, long, int, long, int, int);

    native void rsnScriptIntrinsicBLAS_Complex(long, long, int, int, int, int, int, int, int, int, int, float, float, long, long, float, float, long, int, int, int, int);

    native void rsnScriptIntrinsicBLAS_Double(long, long, int, int, int, int, int, int, int, int, int, double, long, long, double, long, int, int, int, int);

    native void rsnScriptIntrinsicBLAS_Single(long, long, int, int, int, int, int, int, int, int, int, float, long, long, float, long, int, int, int, int);

    native void rsnScriptIntrinsicBLAS_Z(long, long, int, int, int, int, int, int, int, int, int, double, double, long, long, double, double, long, int, int, int, int);

    native long rsnScriptIntrinsicCreate(long, int, long);

    native void rsnScriptInvoke(long, long, int);

    native long rsnScriptInvokeIDCreate(long, long, int);

    native void rsnScriptInvokeV(long, long, int, byte[]);

    native long rsnScriptKernelIDCreate(long, long, int, int);

    native void rsnScriptReduce(long, long, int, long[], long, int[]);

    native void rsnScriptSetTimeZone(long, long, byte[]);

    native void rsnScriptSetVarD(long, long, int, double);

    native void rsnScriptSetVarF(long, long, int, float);

    native void rsnScriptSetVarI(long, long, int, int);

    native void rsnScriptSetVarJ(long, long, int, long);

    native void rsnScriptSetVarObj(long, long, int, long);

    native void rsnScriptSetVarV(long, long, int, byte[]);

    native void rsnScriptSetVarVE(long, long, int, byte[], long, int[]);

    native long rsnTypeCreate(long, long, int, int, int, boolean, boolean, int);

    native void rsnTypeGetNativeData(long, long, long[]);

    long safeID(android.renderscript.BaseObj)
    {
        android.renderscript.RenderScript r0;
        android.renderscript.BaseObj r1;
        long $l0;

        r0 := @this: android.renderscript.RenderScript;

        r1 := @parameter0: android.renderscript.BaseObj;

        if r1 == null goto label1;

        $l0 = virtualinvoke r1.<android.renderscript.BaseObj: long getID(android.renderscript.RenderScript)>(r0);

        return $l0;

     label1:
        return 0L;
    }

    public void sendMessage(int, int[])
    {
        android.renderscript.RenderScript r0;
        int i0;
        int[] r1;

        r0 := @this: android.renderscript.RenderScript;

        i0 := @parameter0: int;

        r1 := @parameter1: int[];

        virtualinvoke r0.<android.renderscript.RenderScript: void nContextSendMessage(int,int[])>(i0, r1);

        return;
    }

    public void setErrorHandler(android.renderscript.RenderScript$RSErrorHandler)
    {
        android.renderscript.RenderScript r0;
        android.renderscript.RenderScript$RSErrorHandler r1;

        r0 := @this: android.renderscript.RenderScript;

        r1 := @parameter0: android.renderscript.RenderScript$RSErrorHandler;

        r0.<android.renderscript.RenderScript: android.renderscript.RenderScript$RSErrorHandler mErrorCallback> = r1;

        return;
    }

    public void setMessageHandler(android.renderscript.RenderScript$RSMessageHandler)
    {
        android.renderscript.RenderScript r0;
        android.renderscript.RenderScript$RSMessageHandler r1;

        r0 := @this: android.renderscript.RenderScript;

        r1 := @parameter0: android.renderscript.RenderScript$RSMessageHandler;

        r0.<android.renderscript.RenderScript: android.renderscript.RenderScript$RSMessageHandler mMessageCallback> = r1;

        return;
    }

    public void setPriority(android.renderscript.RenderScript$Priority)
    {
        android.renderscript.RenderScript r0;
        android.renderscript.RenderScript$Priority r1;
        int $i0;

        r0 := @this: android.renderscript.RenderScript;

        r1 := @parameter0: android.renderscript.RenderScript$Priority;

        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $i0 = r1.<android.renderscript.RenderScript$Priority: int mID>;

        virtualinvoke r0.<android.renderscript.RenderScript: void nContextSetPriority(int)>($i0);

        return;
    }

    void validate()
    {
        android.renderscript.RenderScript r0;
        long $l0;
        byte $b1;
        android.renderscript.RSInvalidStateException $r1;

        r0 := @this: android.renderscript.RenderScript;

        $l0 = r0.<android.renderscript.RenderScript: long mContext>;

        $b1 = $l0 cmp 0L;

        if $b1 == 0 goto label1;

        return;

     label1:
        $r1 = new android.renderscript.RSInvalidStateException;

        specialinvoke $r1.<android.renderscript.RSInvalidStateException: void <init>(java.lang.String)>("Calling RS with no Context active.");

        throw $r1;
    }

    void validateObject(android.renderscript.BaseObj)
    {
        android.renderscript.RenderScript r0, $r2;
        android.renderscript.BaseObj r1;
        android.renderscript.RSIllegalArgumentException $r3;

        r0 := @this: android.renderscript.RenderScript;

        r1 := @parameter0: android.renderscript.BaseObj;

        if r1 == null goto label2;

        $r2 = r1.<android.renderscript.BaseObj: android.renderscript.RenderScript mRS>;

        if $r2 != r0 goto label1;

        goto label2;

     label1:
        $r3 = new android.renderscript.RSIllegalArgumentException;

        specialinvoke $r3.<android.renderscript.RSIllegalArgumentException: void <init>(java.lang.String)>("Attempting to use an object across contexts.");

        throw $r3;

     label2:
        return;
    }
}
