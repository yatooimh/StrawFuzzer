public class android.renderscript.RenderScriptGL extends android.renderscript.RenderScript
{
    int mHeight;
    android.renderscript.RenderScriptGL$SurfaceConfig mSurfaceConfig;
    int mWidth;

    public void <init>(android.content.Context, android.renderscript.RenderScriptGL$SurfaceConfig)
    {
        android.renderscript.RenderScriptGL r0;
        android.content.Context r1;
        android.renderscript.RenderScriptGL$SurfaceConfig r2, $r3, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17;
        int i0, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        long l1, $l13, $l14;
        android.content.pm.ApplicationInfo $r4;
        android.content.res.Resources $r5;
        android.util.DisplayMetrics $r6;
        float $f0;
        byte $b15;
        android.renderscript.RSDriverException $r18;
        android.renderscript.RenderScript$MessageThread $r19, $r20;

        r0 := @this: android.renderscript.RenderScriptGL;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.renderscript.RenderScriptGL$SurfaceConfig;

        specialinvoke r0.<android.renderscript.RenderScript: void <init>(android.content.Context)>(r1);

        $r3 = new android.renderscript.RenderScriptGL$SurfaceConfig;

        specialinvoke $r3.<android.renderscript.RenderScriptGL$SurfaceConfig: void <init>(android.renderscript.RenderScriptGL$SurfaceConfig)>(r2);

        r0.<android.renderscript.RenderScriptGL: android.renderscript.RenderScriptGL$SurfaceConfig mSurfaceConfig> = $r3;

        $r4 = virtualinvoke r1.<android.content.Context: android.content.pm.ApplicationInfo getApplicationInfo()>();

        i0 = $r4.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

        r0.<android.renderscript.RenderScriptGL: int mWidth> = 0;

        r0.<android.renderscript.RenderScriptGL: int mHeight> = 0;

        l1 = virtualinvoke r0.<android.renderscript.RenderScriptGL: long nDeviceCreate()>();

        $r5 = virtualinvoke r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r6 = virtualinvoke $r5.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        i2 = $r6.<android.util.DisplayMetrics: int densityDpi>;

        $r7 = r0.<android.renderscript.RenderScriptGL: android.renderscript.RenderScriptGL$SurfaceConfig mSurfaceConfig>;

        $i12 = $r7.<android.renderscript.RenderScriptGL$SurfaceConfig: int mColorMin>;

        $r8 = r0.<android.renderscript.RenderScriptGL: android.renderscript.RenderScriptGL$SurfaceConfig mSurfaceConfig>;

        $i11 = $r8.<android.renderscript.RenderScriptGL$SurfaceConfig: int mColorPref>;

        $r9 = r0.<android.renderscript.RenderScriptGL: android.renderscript.RenderScriptGL$SurfaceConfig mSurfaceConfig>;

        $i10 = $r9.<android.renderscript.RenderScriptGL$SurfaceConfig: int mAlphaMin>;

        $r10 = r0.<android.renderscript.RenderScriptGL: android.renderscript.RenderScriptGL$SurfaceConfig mSurfaceConfig>;

        $i9 = $r10.<android.renderscript.RenderScriptGL$SurfaceConfig: int mAlphaPref>;

        $r11 = r0.<android.renderscript.RenderScriptGL: android.renderscript.RenderScriptGL$SurfaceConfig mSurfaceConfig>;

        $i8 = $r11.<android.renderscript.RenderScriptGL$SurfaceConfig: int mDepthMin>;

        $r12 = r0.<android.renderscript.RenderScriptGL: android.renderscript.RenderScriptGL$SurfaceConfig mSurfaceConfig>;

        $i7 = $r12.<android.renderscript.RenderScriptGL$SurfaceConfig: int mDepthPref>;

        $r13 = r0.<android.renderscript.RenderScriptGL: android.renderscript.RenderScriptGL$SurfaceConfig mSurfaceConfig>;

        $i6 = $r13.<android.renderscript.RenderScriptGL$SurfaceConfig: int mStencilMin>;

        $r14 = r0.<android.renderscript.RenderScriptGL: android.renderscript.RenderScriptGL$SurfaceConfig mSurfaceConfig>;

        $i5 = $r14.<android.renderscript.RenderScriptGL$SurfaceConfig: int mStencilPref>;

        $r15 = r0.<android.renderscript.RenderScriptGL: android.renderscript.RenderScriptGL$SurfaceConfig mSurfaceConfig>;

        $i4 = $r15.<android.renderscript.RenderScriptGL$SurfaceConfig: int mSamplesMin>;

        $r16 = r0.<android.renderscript.RenderScriptGL: android.renderscript.RenderScriptGL$SurfaceConfig mSurfaceConfig>;

        $i3 = $r16.<android.renderscript.RenderScriptGL$SurfaceConfig: int mSamplesPref>;

        $r17 = r0.<android.renderscript.RenderScriptGL: android.renderscript.RenderScriptGL$SurfaceConfig mSurfaceConfig>;

        $f0 = $r17.<android.renderscript.RenderScriptGL$SurfaceConfig: float mSamplesQ>;

        $l13 = virtualinvoke r0.<android.renderscript.RenderScriptGL: long nContextCreateGL(long,int,int,int,int,int,int,int,int,int,int,int,int,float,int)>(l1, 0, i0, $i12, $i11, $i10, $i9, $i8, $i7, $i6, $i5, $i4, $i3, $f0, i2);

        r0.<android.renderscript.RenderScriptGL: long mContext> = $l13;

        $l14 = r0.<android.renderscript.RenderScriptGL: long mContext>;

        $b15 = $l14 cmp 0L;

        if $b15 == 0 goto label1;

        $r19 = new android.renderscript.RenderScript$MessageThread;

        specialinvoke $r19.<android.renderscript.RenderScript$MessageThread: void <init>(android.renderscript.RenderScript)>(r0);

        r0.<android.renderscript.RenderScriptGL: android.renderscript.RenderScript$MessageThread mMessageThread> = $r19;

        $r20 = r0.<android.renderscript.RenderScriptGL: android.renderscript.RenderScript$MessageThread mMessageThread>;

        virtualinvoke $r20.<android.renderscript.RenderScript$MessageThread: void start()>();

        return;

     label1:
        $r18 = new android.renderscript.RSDriverException;

        specialinvoke $r18.<android.renderscript.RSDriverException: void <init>(java.lang.String)>("Failed to create RS context.");

        throw $r18;
    }

    public void bindProgramFragment(android.renderscript.ProgramFragment)
    {
        android.renderscript.RenderScriptGL r0;
        android.renderscript.ProgramFragment r1;
        long $l0, $l2;
        int $i1;

        r0 := @this: android.renderscript.RenderScriptGL;

        r1 := @parameter0: android.renderscript.ProgramFragment;

        virtualinvoke r0.<android.renderscript.RenderScriptGL: void validate()>();

        $l0 = virtualinvoke r0.<android.renderscript.RenderScriptGL: long safeID(android.renderscript.BaseObj)>(r1);

        $i1 = (int) $l0;

        $l2 = (long) $i1;

        virtualinvoke r0.<android.renderscript.RenderScriptGL: void nContextBindProgramFragment(long)>($l2);

        return;
    }

    public void bindProgramRaster(android.renderscript.ProgramRaster)
    {
        android.renderscript.RenderScriptGL r0;
        android.renderscript.ProgramRaster r1;
        long $l0, $l2;
        int $i1;

        r0 := @this: android.renderscript.RenderScriptGL;

        r1 := @parameter0: android.renderscript.ProgramRaster;

        virtualinvoke r0.<android.renderscript.RenderScriptGL: void validate()>();

        $l0 = virtualinvoke r0.<android.renderscript.RenderScriptGL: long safeID(android.renderscript.BaseObj)>(r1);

        $i1 = (int) $l0;

        $l2 = (long) $i1;

        virtualinvoke r0.<android.renderscript.RenderScriptGL: void nContextBindProgramRaster(long)>($l2);

        return;
    }

    public void bindProgramStore(android.renderscript.ProgramStore)
    {
        android.renderscript.RenderScriptGL r0;
        android.renderscript.ProgramStore r1;
        long $l0, $l2;
        int $i1;

        r0 := @this: android.renderscript.RenderScriptGL;

        r1 := @parameter0: android.renderscript.ProgramStore;

        virtualinvoke r0.<android.renderscript.RenderScriptGL: void validate()>();

        $l0 = virtualinvoke r0.<android.renderscript.RenderScriptGL: long safeID(android.renderscript.BaseObj)>(r1);

        $i1 = (int) $l0;

        $l2 = (long) $i1;

        virtualinvoke r0.<android.renderscript.RenderScriptGL: void nContextBindProgramStore(long)>($l2);

        return;
    }

    public void bindProgramVertex(android.renderscript.ProgramVertex)
    {
        android.renderscript.RenderScriptGL r0;
        android.renderscript.ProgramVertex r1;
        long $l0, $l2;
        int $i1;

        r0 := @this: android.renderscript.RenderScriptGL;

        r1 := @parameter0: android.renderscript.ProgramVertex;

        virtualinvoke r0.<android.renderscript.RenderScriptGL: void validate()>();

        $l0 = virtualinvoke r0.<android.renderscript.RenderScriptGL: long safeID(android.renderscript.BaseObj)>(r1);

        $i1 = (int) $l0;

        $l2 = (long) $i1;

        virtualinvoke r0.<android.renderscript.RenderScriptGL: void nContextBindProgramVertex(long)>($l2);

        return;
    }

    public void bindRootScript(android.renderscript.Script)
    {
        android.renderscript.RenderScriptGL r0;
        android.renderscript.Script r1;
        long $l0, $l2;
        int $i1;

        r0 := @this: android.renderscript.RenderScriptGL;

        r1 := @parameter0: android.renderscript.Script;

        virtualinvoke r0.<android.renderscript.RenderScriptGL: void validate()>();

        $l0 = virtualinvoke r0.<android.renderscript.RenderScriptGL: long safeID(android.renderscript.BaseObj)>(r1);

        $i1 = (int) $l0;

        $l2 = (long) $i1;

        virtualinvoke r0.<android.renderscript.RenderScriptGL: void nContextBindRootScript(long)>($l2);

        return;
    }

    public int getHeight()
    {
        android.renderscript.RenderScriptGL r0;
        int $i0;

        r0 := @this: android.renderscript.RenderScriptGL;

        $i0 = r0.<android.renderscript.RenderScriptGL: int mHeight>;

        return $i0;
    }

    public int getWidth()
    {
        android.renderscript.RenderScriptGL r0;
        int $i0;

        r0 := @this: android.renderscript.RenderScriptGL;

        $i0 = r0.<android.renderscript.RenderScriptGL: int mWidth>;

        return $i0;
    }

    public void pause()
    {
        android.renderscript.RenderScriptGL r0;

        r0 := @this: android.renderscript.RenderScriptGL;

        virtualinvoke r0.<android.renderscript.RenderScriptGL: void validate()>();

        virtualinvoke r0.<android.renderscript.RenderScriptGL: void nContextPause()>();

        return;
    }

    public void resume()
    {
        android.renderscript.RenderScriptGL r0;

        r0 := @this: android.renderscript.RenderScriptGL;

        virtualinvoke r0.<android.renderscript.RenderScriptGL: void validate()>();

        virtualinvoke r0.<android.renderscript.RenderScriptGL: void nContextResume()>();

        return;
    }

    public void setSurface(android.view.SurfaceHolder, int, int)
    {
        android.renderscript.RenderScriptGL r0;
        android.view.SurfaceHolder r1;
        int i0, i1;
        android.view.Surface r2;

        r0 := @this: android.renderscript.RenderScriptGL;

        r1 := @parameter0: android.view.SurfaceHolder;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        virtualinvoke r0.<android.renderscript.RenderScriptGL: void validate()>();

        r2 = null;

        if r1 == null goto label1;

        r2 = interfaceinvoke r1.<android.view.SurfaceHolder: android.view.Surface getSurface()>();

     label1:
        r0.<android.renderscript.RenderScriptGL: int mWidth> = i0;

        r0.<android.renderscript.RenderScriptGL: int mHeight> = i1;

        virtualinvoke r0.<android.renderscript.RenderScriptGL: void nContextSetSurface(int,int,android.view.Surface)>(i0, i1, r2);

        return;
    }

    public void setSurfaceTexture(android.graphics.SurfaceTexture, int, int)
    {
        android.renderscript.RenderScriptGL r0;
        android.graphics.SurfaceTexture r1;
        int i0, i1;
        android.view.Surface $r2, r3;

        r0 := @this: android.renderscript.RenderScriptGL;

        r1 := @parameter0: android.graphics.SurfaceTexture;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        virtualinvoke r0.<android.renderscript.RenderScriptGL: void validate()>();

        r3 = null;

        if r1 == null goto label1;

        $r2 = new android.view.Surface;

        specialinvoke $r2.<android.view.Surface: void <init>(android.graphics.SurfaceTexture)>(r1);

        r3 = $r2;

     label1:
        r0.<android.renderscript.RenderScriptGL: int mWidth> = i0;

        r0.<android.renderscript.RenderScriptGL: int mHeight> = i1;

        virtualinvoke r0.<android.renderscript.RenderScriptGL: void nContextSetSurface(int,int,android.view.Surface)>(i0, i1, r3);

        return;
    }
}
