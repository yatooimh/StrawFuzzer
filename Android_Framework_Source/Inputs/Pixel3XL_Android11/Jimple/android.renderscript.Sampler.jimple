public class android.renderscript.Sampler extends android.renderscript.BaseObj
{
    float mAniso;
    android.renderscript.Sampler$Value mMag;
    android.renderscript.Sampler$Value mMin;
    android.renderscript.Sampler$Value mWrapR;
    android.renderscript.Sampler$Value mWrapS;
    android.renderscript.Sampler$Value mWrapT;

    void <init>(long, android.renderscript.RenderScript)
    {
        android.renderscript.Sampler r0;
        long l0;
        android.renderscript.RenderScript r1;
        dalvik.system.CloseGuard $r2;

        r0 := @this: android.renderscript.Sampler;

        l0 := @parameter0: long;

        r1 := @parameter1: android.renderscript.RenderScript;

        specialinvoke r0.<android.renderscript.BaseObj: void <init>(long,android.renderscript.RenderScript)>(l0, r1);

        $r2 = r0.<android.renderscript.Sampler: dalvik.system.CloseGuard guard>;

        virtualinvoke $r2.<dalvik.system.CloseGuard: void open(java.lang.String)>("destroy");

        return;
    }

    public static android.renderscript.Sampler CLAMP_LINEAR(android.renderscript.RenderScript)
    {
        android.renderscript.RenderScript r0;
        android.renderscript.Sampler $r1, $r2, $r3, $r8;
        android.renderscript.Sampler$Value $r4, $r5, $r6, $r7;
        java.lang.Throwable $r9;
        android.renderscript.Sampler$Builder r10;

        r0 := @parameter0: android.renderscript.RenderScript;

        $r1 = r0.<android.renderscript.RenderScript: android.renderscript.Sampler mSampler_CLAMP_LINEAR>;

        if $r1 != null goto label7;

        entermonitor r0;

     label1:
        $r3 = r0.<android.renderscript.RenderScript: android.renderscript.Sampler mSampler_CLAMP_LINEAR>;

        if $r3 != null goto label2;

        r10 = new android.renderscript.Sampler$Builder;

        specialinvoke r10.<android.renderscript.Sampler$Builder: void <init>(android.renderscript.RenderScript)>(r0);

        $r4 = <android.renderscript.Sampler$Value: android.renderscript.Sampler$Value LINEAR>;

        virtualinvoke r10.<android.renderscript.Sampler$Builder: void setMinification(android.renderscript.Sampler$Value)>($r4);

        $r5 = <android.renderscript.Sampler$Value: android.renderscript.Sampler$Value LINEAR>;

        virtualinvoke r10.<android.renderscript.Sampler$Builder: void setMagnification(android.renderscript.Sampler$Value)>($r5);

        $r6 = <android.renderscript.Sampler$Value: android.renderscript.Sampler$Value CLAMP>;

        virtualinvoke r10.<android.renderscript.Sampler$Builder: void setWrapS(android.renderscript.Sampler$Value)>($r6);

        $r7 = <android.renderscript.Sampler$Value: android.renderscript.Sampler$Value CLAMP>;

        virtualinvoke r10.<android.renderscript.Sampler$Builder: void setWrapT(android.renderscript.Sampler$Value)>($r7);

        $r8 = virtualinvoke r10.<android.renderscript.Sampler$Builder: android.renderscript.Sampler create()>();

        r0.<android.renderscript.RenderScript: android.renderscript.Sampler mSampler_CLAMP_LINEAR> = $r8;

     label2:
        exitmonitor r0;

     label3:
        goto label7;

     label4:
        $r9 := @caughtexception;

     label5:
        exitmonitor r0;

     label6:
        throw $r9;

     label7:
        $r2 = r0.<android.renderscript.RenderScript: android.renderscript.Sampler mSampler_CLAMP_LINEAR>;

        return $r2;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public static android.renderscript.Sampler CLAMP_LINEAR_MIP_LINEAR(android.renderscript.RenderScript)
    {
        android.renderscript.RenderScript r0;
        android.renderscript.Sampler $r1, $r2, $r3, $r8;
        android.renderscript.Sampler$Value $r4, $r5, $r6, $r7;
        java.lang.Throwable $r9;
        android.renderscript.Sampler$Builder r10;

        r0 := @parameter0: android.renderscript.RenderScript;

        $r1 = r0.<android.renderscript.RenderScript: android.renderscript.Sampler mSampler_CLAMP_LINEAR_MIP_LINEAR>;

        if $r1 != null goto label7;

        entermonitor r0;

     label1:
        $r3 = r0.<android.renderscript.RenderScript: android.renderscript.Sampler mSampler_CLAMP_LINEAR_MIP_LINEAR>;

        if $r3 != null goto label2;

        r10 = new android.renderscript.Sampler$Builder;

        specialinvoke r10.<android.renderscript.Sampler$Builder: void <init>(android.renderscript.RenderScript)>(r0);

        $r4 = <android.renderscript.Sampler$Value: android.renderscript.Sampler$Value LINEAR_MIP_LINEAR>;

        virtualinvoke r10.<android.renderscript.Sampler$Builder: void setMinification(android.renderscript.Sampler$Value)>($r4);

        $r5 = <android.renderscript.Sampler$Value: android.renderscript.Sampler$Value LINEAR>;

        virtualinvoke r10.<android.renderscript.Sampler$Builder: void setMagnification(android.renderscript.Sampler$Value)>($r5);

        $r6 = <android.renderscript.Sampler$Value: android.renderscript.Sampler$Value CLAMP>;

        virtualinvoke r10.<android.renderscript.Sampler$Builder: void setWrapS(android.renderscript.Sampler$Value)>($r6);

        $r7 = <android.renderscript.Sampler$Value: android.renderscript.Sampler$Value CLAMP>;

        virtualinvoke r10.<android.renderscript.Sampler$Builder: void setWrapT(android.renderscript.Sampler$Value)>($r7);

        $r8 = virtualinvoke r10.<android.renderscript.Sampler$Builder: android.renderscript.Sampler create()>();

        r0.<android.renderscript.RenderScript: android.renderscript.Sampler mSampler_CLAMP_LINEAR_MIP_LINEAR> = $r8;

     label2:
        exitmonitor r0;

     label3:
        goto label7;

     label4:
        $r9 := @caughtexception;

     label5:
        exitmonitor r0;

     label6:
        throw $r9;

     label7:
        $r2 = r0.<android.renderscript.RenderScript: android.renderscript.Sampler mSampler_CLAMP_LINEAR_MIP_LINEAR>;

        return $r2;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public static android.renderscript.Sampler CLAMP_NEAREST(android.renderscript.RenderScript)
    {
        android.renderscript.RenderScript r0;
        android.renderscript.Sampler $r1, $r2, $r3, $r8;
        android.renderscript.Sampler$Value $r4, $r5, $r6, $r7;
        java.lang.Throwable $r9;
        android.renderscript.Sampler$Builder r10;

        r0 := @parameter0: android.renderscript.RenderScript;

        $r1 = r0.<android.renderscript.RenderScript: android.renderscript.Sampler mSampler_CLAMP_NEAREST>;

        if $r1 != null goto label7;

        entermonitor r0;

     label1:
        $r3 = r0.<android.renderscript.RenderScript: android.renderscript.Sampler mSampler_CLAMP_NEAREST>;

        if $r3 != null goto label2;

        r10 = new android.renderscript.Sampler$Builder;

        specialinvoke r10.<android.renderscript.Sampler$Builder: void <init>(android.renderscript.RenderScript)>(r0);

        $r4 = <android.renderscript.Sampler$Value: android.renderscript.Sampler$Value NEAREST>;

        virtualinvoke r10.<android.renderscript.Sampler$Builder: void setMinification(android.renderscript.Sampler$Value)>($r4);

        $r5 = <android.renderscript.Sampler$Value: android.renderscript.Sampler$Value NEAREST>;

        virtualinvoke r10.<android.renderscript.Sampler$Builder: void setMagnification(android.renderscript.Sampler$Value)>($r5);

        $r6 = <android.renderscript.Sampler$Value: android.renderscript.Sampler$Value CLAMP>;

        virtualinvoke r10.<android.renderscript.Sampler$Builder: void setWrapS(android.renderscript.Sampler$Value)>($r6);

        $r7 = <android.renderscript.Sampler$Value: android.renderscript.Sampler$Value CLAMP>;

        virtualinvoke r10.<android.renderscript.Sampler$Builder: void setWrapT(android.renderscript.Sampler$Value)>($r7);

        $r8 = virtualinvoke r10.<android.renderscript.Sampler$Builder: android.renderscript.Sampler create()>();

        r0.<android.renderscript.RenderScript: android.renderscript.Sampler mSampler_CLAMP_NEAREST> = $r8;

     label2:
        exitmonitor r0;

     label3:
        goto label7;

     label4:
        $r9 := @caughtexception;

     label5:
        exitmonitor r0;

     label6:
        throw $r9;

     label7:
        $r2 = r0.<android.renderscript.RenderScript: android.renderscript.Sampler mSampler_CLAMP_NEAREST>;

        return $r2;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public static android.renderscript.Sampler MIRRORED_REPEAT_LINEAR(android.renderscript.RenderScript)
    {
        android.renderscript.RenderScript r0;
        android.renderscript.Sampler $r1, $r2, $r3, $r8;
        android.renderscript.Sampler$Value $r4, $r5, $r6, $r7;
        java.lang.Throwable $r9;
        android.renderscript.Sampler$Builder r10;

        r0 := @parameter0: android.renderscript.RenderScript;

        $r1 = r0.<android.renderscript.RenderScript: android.renderscript.Sampler mSampler_MIRRORED_REPEAT_LINEAR>;

        if $r1 != null goto label7;

        entermonitor r0;

     label1:
        $r3 = r0.<android.renderscript.RenderScript: android.renderscript.Sampler mSampler_MIRRORED_REPEAT_LINEAR>;

        if $r3 != null goto label2;

        r10 = new android.renderscript.Sampler$Builder;

        specialinvoke r10.<android.renderscript.Sampler$Builder: void <init>(android.renderscript.RenderScript)>(r0);

        $r4 = <android.renderscript.Sampler$Value: android.renderscript.Sampler$Value LINEAR>;

        virtualinvoke r10.<android.renderscript.Sampler$Builder: void setMinification(android.renderscript.Sampler$Value)>($r4);

        $r5 = <android.renderscript.Sampler$Value: android.renderscript.Sampler$Value LINEAR>;

        virtualinvoke r10.<android.renderscript.Sampler$Builder: void setMagnification(android.renderscript.Sampler$Value)>($r5);

        $r6 = <android.renderscript.Sampler$Value: android.renderscript.Sampler$Value MIRRORED_REPEAT>;

        virtualinvoke r10.<android.renderscript.Sampler$Builder: void setWrapS(android.renderscript.Sampler$Value)>($r6);

        $r7 = <android.renderscript.Sampler$Value: android.renderscript.Sampler$Value MIRRORED_REPEAT>;

        virtualinvoke r10.<android.renderscript.Sampler$Builder: void setWrapT(android.renderscript.Sampler$Value)>($r7);

        $r8 = virtualinvoke r10.<android.renderscript.Sampler$Builder: android.renderscript.Sampler create()>();

        r0.<android.renderscript.RenderScript: android.renderscript.Sampler mSampler_MIRRORED_REPEAT_LINEAR> = $r8;

     label2:
        exitmonitor r0;

     label3:
        goto label7;

     label4:
        $r9 := @caughtexception;

     label5:
        exitmonitor r0;

     label6:
        throw $r9;

     label7:
        $r2 = r0.<android.renderscript.RenderScript: android.renderscript.Sampler mSampler_MIRRORED_REPEAT_LINEAR>;

        return $r2;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public static android.renderscript.Sampler MIRRORED_REPEAT_LINEAR_MIP_LINEAR(android.renderscript.RenderScript)
    {
        android.renderscript.RenderScript r0;
        android.renderscript.Sampler $r1, $r2, $r3, $r8;
        android.renderscript.Sampler$Value $r4, $r5, $r6, $r7;
        java.lang.Throwable $r9;
        android.renderscript.Sampler$Builder r10;

        r0 := @parameter0: android.renderscript.RenderScript;

        $r1 = r0.<android.renderscript.RenderScript: android.renderscript.Sampler mSampler_MIRRORED_REPEAT_LINEAR_MIP_LINEAR>;

        if $r1 != null goto label7;

        entermonitor r0;

     label1:
        $r3 = r0.<android.renderscript.RenderScript: android.renderscript.Sampler mSampler_MIRRORED_REPEAT_LINEAR_MIP_LINEAR>;

        if $r3 != null goto label2;

        r10 = new android.renderscript.Sampler$Builder;

        specialinvoke r10.<android.renderscript.Sampler$Builder: void <init>(android.renderscript.RenderScript)>(r0);

        $r4 = <android.renderscript.Sampler$Value: android.renderscript.Sampler$Value LINEAR_MIP_LINEAR>;

        virtualinvoke r10.<android.renderscript.Sampler$Builder: void setMinification(android.renderscript.Sampler$Value)>($r4);

        $r5 = <android.renderscript.Sampler$Value: android.renderscript.Sampler$Value LINEAR>;

        virtualinvoke r10.<android.renderscript.Sampler$Builder: void setMagnification(android.renderscript.Sampler$Value)>($r5);

        $r6 = <android.renderscript.Sampler$Value: android.renderscript.Sampler$Value MIRRORED_REPEAT>;

        virtualinvoke r10.<android.renderscript.Sampler$Builder: void setWrapS(android.renderscript.Sampler$Value)>($r6);

        $r7 = <android.renderscript.Sampler$Value: android.renderscript.Sampler$Value MIRRORED_REPEAT>;

        virtualinvoke r10.<android.renderscript.Sampler$Builder: void setWrapT(android.renderscript.Sampler$Value)>($r7);

        $r8 = virtualinvoke r10.<android.renderscript.Sampler$Builder: android.renderscript.Sampler create()>();

        r0.<android.renderscript.RenderScript: android.renderscript.Sampler mSampler_MIRRORED_REPEAT_LINEAR_MIP_LINEAR> = $r8;

     label2:
        exitmonitor r0;

     label3:
        goto label7;

     label4:
        $r9 := @caughtexception;

     label5:
        exitmonitor r0;

     label6:
        throw $r9;

     label7:
        $r2 = r0.<android.renderscript.RenderScript: android.renderscript.Sampler mSampler_MIRRORED_REPEAT_LINEAR_MIP_LINEAR>;

        return $r2;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public static android.renderscript.Sampler MIRRORED_REPEAT_NEAREST(android.renderscript.RenderScript)
    {
        android.renderscript.RenderScript r0;
        android.renderscript.Sampler $r1, $r2, $r3, $r8;
        android.renderscript.Sampler$Value $r4, $r5, $r6, $r7;
        java.lang.Throwable $r9;
        android.renderscript.Sampler$Builder r10;

        r0 := @parameter0: android.renderscript.RenderScript;

        $r1 = r0.<android.renderscript.RenderScript: android.renderscript.Sampler mSampler_MIRRORED_REPEAT_NEAREST>;

        if $r1 != null goto label7;

        entermonitor r0;

     label1:
        $r3 = r0.<android.renderscript.RenderScript: android.renderscript.Sampler mSampler_MIRRORED_REPEAT_NEAREST>;

        if $r3 != null goto label2;

        r10 = new android.renderscript.Sampler$Builder;

        specialinvoke r10.<android.renderscript.Sampler$Builder: void <init>(android.renderscript.RenderScript)>(r0);

        $r4 = <android.renderscript.Sampler$Value: android.renderscript.Sampler$Value NEAREST>;

        virtualinvoke r10.<android.renderscript.Sampler$Builder: void setMinification(android.renderscript.Sampler$Value)>($r4);

        $r5 = <android.renderscript.Sampler$Value: android.renderscript.Sampler$Value NEAREST>;

        virtualinvoke r10.<android.renderscript.Sampler$Builder: void setMagnification(android.renderscript.Sampler$Value)>($r5);

        $r6 = <android.renderscript.Sampler$Value: android.renderscript.Sampler$Value MIRRORED_REPEAT>;

        virtualinvoke r10.<android.renderscript.Sampler$Builder: void setWrapS(android.renderscript.Sampler$Value)>($r6);

        $r7 = <android.renderscript.Sampler$Value: android.renderscript.Sampler$Value MIRRORED_REPEAT>;

        virtualinvoke r10.<android.renderscript.Sampler$Builder: void setWrapT(android.renderscript.Sampler$Value)>($r7);

        $r8 = virtualinvoke r10.<android.renderscript.Sampler$Builder: android.renderscript.Sampler create()>();

        r0.<android.renderscript.RenderScript: android.renderscript.Sampler mSampler_MIRRORED_REPEAT_NEAREST> = $r8;

     label2:
        exitmonitor r0;

     label3:
        goto label7;

     label4:
        $r9 := @caughtexception;

     label5:
        exitmonitor r0;

     label6:
        throw $r9;

     label7:
        $r2 = r0.<android.renderscript.RenderScript: android.renderscript.Sampler mSampler_MIRRORED_REPEAT_NEAREST>;

        return $r2;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public static android.renderscript.Sampler WRAP_LINEAR(android.renderscript.RenderScript)
    {
        android.renderscript.RenderScript r0;
        android.renderscript.Sampler $r1, $r2, $r3, $r8;
        android.renderscript.Sampler$Value $r4, $r5, $r6, $r7;
        java.lang.Throwable $r9;
        android.renderscript.Sampler$Builder r10;

        r0 := @parameter0: android.renderscript.RenderScript;

        $r1 = r0.<android.renderscript.RenderScript: android.renderscript.Sampler mSampler_WRAP_LINEAR>;

        if $r1 != null goto label7;

        entermonitor r0;

     label1:
        $r3 = r0.<android.renderscript.RenderScript: android.renderscript.Sampler mSampler_WRAP_LINEAR>;

        if $r3 != null goto label2;

        r10 = new android.renderscript.Sampler$Builder;

        specialinvoke r10.<android.renderscript.Sampler$Builder: void <init>(android.renderscript.RenderScript)>(r0);

        $r4 = <android.renderscript.Sampler$Value: android.renderscript.Sampler$Value LINEAR>;

        virtualinvoke r10.<android.renderscript.Sampler$Builder: void setMinification(android.renderscript.Sampler$Value)>($r4);

        $r5 = <android.renderscript.Sampler$Value: android.renderscript.Sampler$Value LINEAR>;

        virtualinvoke r10.<android.renderscript.Sampler$Builder: void setMagnification(android.renderscript.Sampler$Value)>($r5);

        $r6 = <android.renderscript.Sampler$Value: android.renderscript.Sampler$Value WRAP>;

        virtualinvoke r10.<android.renderscript.Sampler$Builder: void setWrapS(android.renderscript.Sampler$Value)>($r6);

        $r7 = <android.renderscript.Sampler$Value: android.renderscript.Sampler$Value WRAP>;

        virtualinvoke r10.<android.renderscript.Sampler$Builder: void setWrapT(android.renderscript.Sampler$Value)>($r7);

        $r8 = virtualinvoke r10.<android.renderscript.Sampler$Builder: android.renderscript.Sampler create()>();

        r0.<android.renderscript.RenderScript: android.renderscript.Sampler mSampler_WRAP_LINEAR> = $r8;

     label2:
        exitmonitor r0;

     label3:
        goto label7;

     label4:
        $r9 := @caughtexception;

     label5:
        exitmonitor r0;

     label6:
        throw $r9;

     label7:
        $r2 = r0.<android.renderscript.RenderScript: android.renderscript.Sampler mSampler_WRAP_LINEAR>;

        return $r2;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public static android.renderscript.Sampler WRAP_LINEAR_MIP_LINEAR(android.renderscript.RenderScript)
    {
        android.renderscript.RenderScript r0;
        android.renderscript.Sampler $r1, $r2, $r3, $r8;
        android.renderscript.Sampler$Value $r4, $r5, $r6, $r7;
        java.lang.Throwable $r9;
        android.renderscript.Sampler$Builder r10;

        r0 := @parameter0: android.renderscript.RenderScript;

        $r1 = r0.<android.renderscript.RenderScript: android.renderscript.Sampler mSampler_WRAP_LINEAR_MIP_LINEAR>;

        if $r1 != null goto label7;

        entermonitor r0;

     label1:
        $r3 = r0.<android.renderscript.RenderScript: android.renderscript.Sampler mSampler_WRAP_LINEAR_MIP_LINEAR>;

        if $r3 != null goto label2;

        r10 = new android.renderscript.Sampler$Builder;

        specialinvoke r10.<android.renderscript.Sampler$Builder: void <init>(android.renderscript.RenderScript)>(r0);

        $r4 = <android.renderscript.Sampler$Value: android.renderscript.Sampler$Value LINEAR_MIP_LINEAR>;

        virtualinvoke r10.<android.renderscript.Sampler$Builder: void setMinification(android.renderscript.Sampler$Value)>($r4);

        $r5 = <android.renderscript.Sampler$Value: android.renderscript.Sampler$Value LINEAR>;

        virtualinvoke r10.<android.renderscript.Sampler$Builder: void setMagnification(android.renderscript.Sampler$Value)>($r5);

        $r6 = <android.renderscript.Sampler$Value: android.renderscript.Sampler$Value WRAP>;

        virtualinvoke r10.<android.renderscript.Sampler$Builder: void setWrapS(android.renderscript.Sampler$Value)>($r6);

        $r7 = <android.renderscript.Sampler$Value: android.renderscript.Sampler$Value WRAP>;

        virtualinvoke r10.<android.renderscript.Sampler$Builder: void setWrapT(android.renderscript.Sampler$Value)>($r7);

        $r8 = virtualinvoke r10.<android.renderscript.Sampler$Builder: android.renderscript.Sampler create()>();

        r0.<android.renderscript.RenderScript: android.renderscript.Sampler mSampler_WRAP_LINEAR_MIP_LINEAR> = $r8;

     label2:
        exitmonitor r0;

     label3:
        goto label7;

     label4:
        $r9 := @caughtexception;

     label5:
        exitmonitor r0;

     label6:
        throw $r9;

     label7:
        $r2 = r0.<android.renderscript.RenderScript: android.renderscript.Sampler mSampler_WRAP_LINEAR_MIP_LINEAR>;

        return $r2;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public static android.renderscript.Sampler WRAP_NEAREST(android.renderscript.RenderScript)
    {
        android.renderscript.RenderScript r0;
        android.renderscript.Sampler $r1, $r2, $r3, $r8;
        android.renderscript.Sampler$Value $r4, $r5, $r6, $r7;
        java.lang.Throwable $r9;
        android.renderscript.Sampler$Builder r10;

        r0 := @parameter0: android.renderscript.RenderScript;

        $r1 = r0.<android.renderscript.RenderScript: android.renderscript.Sampler mSampler_WRAP_NEAREST>;

        if $r1 != null goto label7;

        entermonitor r0;

     label1:
        $r3 = r0.<android.renderscript.RenderScript: android.renderscript.Sampler mSampler_WRAP_NEAREST>;

        if $r3 != null goto label2;

        r10 = new android.renderscript.Sampler$Builder;

        specialinvoke r10.<android.renderscript.Sampler$Builder: void <init>(android.renderscript.RenderScript)>(r0);

        $r4 = <android.renderscript.Sampler$Value: android.renderscript.Sampler$Value NEAREST>;

        virtualinvoke r10.<android.renderscript.Sampler$Builder: void setMinification(android.renderscript.Sampler$Value)>($r4);

        $r5 = <android.renderscript.Sampler$Value: android.renderscript.Sampler$Value NEAREST>;

        virtualinvoke r10.<android.renderscript.Sampler$Builder: void setMagnification(android.renderscript.Sampler$Value)>($r5);

        $r6 = <android.renderscript.Sampler$Value: android.renderscript.Sampler$Value WRAP>;

        virtualinvoke r10.<android.renderscript.Sampler$Builder: void setWrapS(android.renderscript.Sampler$Value)>($r6);

        $r7 = <android.renderscript.Sampler$Value: android.renderscript.Sampler$Value WRAP>;

        virtualinvoke r10.<android.renderscript.Sampler$Builder: void setWrapT(android.renderscript.Sampler$Value)>($r7);

        $r8 = virtualinvoke r10.<android.renderscript.Sampler$Builder: android.renderscript.Sampler create()>();

        r0.<android.renderscript.RenderScript: android.renderscript.Sampler mSampler_WRAP_NEAREST> = $r8;

     label2:
        exitmonitor r0;

     label3:
        goto label7;

     label4:
        $r9 := @caughtexception;

     label5:
        exitmonitor r0;

     label6:
        throw $r9;

     label7:
        $r2 = r0.<android.renderscript.RenderScript: android.renderscript.Sampler mSampler_WRAP_NEAREST>;

        return $r2;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public float getAnisotropy()
    {
        android.renderscript.Sampler r0;
        float $f0;

        r0 := @this: android.renderscript.Sampler;

        $f0 = r0.<android.renderscript.Sampler: float mAniso>;

        return $f0;
    }

    public android.renderscript.Sampler$Value getMagnification()
    {
        android.renderscript.Sampler r0;
        android.renderscript.Sampler$Value $r1;

        r0 := @this: android.renderscript.Sampler;

        $r1 = r0.<android.renderscript.Sampler: android.renderscript.Sampler$Value mMag>;

        return $r1;
    }

    public android.renderscript.Sampler$Value getMinification()
    {
        android.renderscript.Sampler r0;
        android.renderscript.Sampler$Value $r1;

        r0 := @this: android.renderscript.Sampler;

        $r1 = r0.<android.renderscript.Sampler: android.renderscript.Sampler$Value mMin>;

        return $r1;
    }

    public android.renderscript.Sampler$Value getWrapS()
    {
        android.renderscript.Sampler r0;
        android.renderscript.Sampler$Value $r1;

        r0 := @this: android.renderscript.Sampler;

        $r1 = r0.<android.renderscript.Sampler: android.renderscript.Sampler$Value mWrapS>;

        return $r1;
    }

    public android.renderscript.Sampler$Value getWrapT()
    {
        android.renderscript.Sampler r0;
        android.renderscript.Sampler$Value $r1;

        r0 := @this: android.renderscript.Sampler;

        $r1 = r0.<android.renderscript.Sampler: android.renderscript.Sampler$Value mWrapT>;

        return $r1;
    }
}
