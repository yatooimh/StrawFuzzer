public final class android.renderscript.ScriptGroup$Builder2 extends java.lang.Object
{
    private static final java.lang.String TAG;
    java.util.List mClosures;
    java.util.List mInputs;
    android.renderscript.RenderScript mRS;

    public void <init>(android.renderscript.RenderScript)
    {
        android.renderscript.ScriptGroup$Builder2 r0;
        android.renderscript.RenderScript r1;
        java.util.ArrayList $r2, $r3;

        r0 := @this: android.renderscript.ScriptGroup$Builder2;

        r1 := @parameter0: android.renderscript.RenderScript;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.renderscript.ScriptGroup$Builder2: android.renderscript.RenderScript mRS> = r1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<android.renderscript.ScriptGroup$Builder2: java.util.List mClosures> = $r2;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<android.renderscript.ScriptGroup$Builder2: java.util.List mInputs> = $r3;

        return;
    }

    private android.renderscript.ScriptGroup$Closure addInvokeInternal(android.renderscript.Script$InvokeID, java.lang.Object[], java.util.Map)
    {
        android.renderscript.ScriptGroup$Builder2 r0;
        java.lang.Object[] r1;
        java.util.Map r2;
        android.renderscript.ScriptGroup$Closure $r3;
        android.renderscript.RenderScript $r4;
        java.util.List $r5;
        android.renderscript.Script$InvokeID r6;

        r0 := @this: android.renderscript.ScriptGroup$Builder2;

        r6 := @parameter0: android.renderscript.Script$InvokeID;

        r1 := @parameter1: java.lang.Object[];

        r2 := @parameter2: java.util.Map;

        $r3 = new android.renderscript.ScriptGroup$Closure;

        $r4 = r0.<android.renderscript.ScriptGroup$Builder2: android.renderscript.RenderScript mRS>;

        specialinvoke $r3.<android.renderscript.ScriptGroup$Closure: void <init>(android.renderscript.RenderScript,android.renderscript.Script$InvokeID,java.lang.Object[],java.util.Map)>($r4, r6, r1, r2);

        $r5 = r0.<android.renderscript.ScriptGroup$Builder2: java.util.List mClosures>;

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r3);

        return $r3;
    }

    private android.renderscript.ScriptGroup$Closure addKernelInternal(android.renderscript.Script$KernelID, android.renderscript.Type, java.lang.Object[], java.util.Map)
    {
        android.renderscript.ScriptGroup$Builder2 r0;
        android.renderscript.Type r1;
        java.lang.Object[] r2;
        java.util.Map r3;
        android.renderscript.ScriptGroup$Closure $r4;
        android.renderscript.RenderScript $r5;
        java.util.List $r6;
        android.renderscript.Script$KernelID r7;

        r0 := @this: android.renderscript.ScriptGroup$Builder2;

        r7 := @parameter0: android.renderscript.Script$KernelID;

        r1 := @parameter1: android.renderscript.Type;

        r2 := @parameter2: java.lang.Object[];

        r3 := @parameter3: java.util.Map;

        $r4 = new android.renderscript.ScriptGroup$Closure;

        $r5 = r0.<android.renderscript.ScriptGroup$Builder2: android.renderscript.RenderScript mRS>;

        specialinvoke $r4.<android.renderscript.ScriptGroup$Closure: void <init>(android.renderscript.RenderScript,android.renderscript.Script$KernelID,android.renderscript.Type,java.lang.Object[],java.util.Map)>($r5, r7, r1, r2, r3);

        $r6 = r0.<android.renderscript.ScriptGroup$Builder2: java.util.List mClosures>;

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>($r4);

        return $r4;
    }

    private boolean seperateArgsAndBindings(java.lang.Object[], java.util.ArrayList, java.util.Map)
    {
        android.renderscript.ScriptGroup$Builder2 r0;
        java.lang.Object[] r1;
        java.util.Map r2;
        int $i0, i1, i2, $i3;
        java.lang.Object $r3, $r4, $r6, $r8, $r9;
        boolean $z0, $z1;
        android.renderscript.Script$FieldID $r5;
        java.util.ArrayList r10;
        android.renderscript.ScriptGroup$Binding r11;

        r0 := @this: android.renderscript.ScriptGroup$Builder2;

        r1 := @parameter0: java.lang.Object[];

        r10 := @parameter1: java.util.ArrayList;

        r2 := @parameter2: java.util.Map;

        i1 = 0;

     label1:
        i2 = i1;

        $i0 = lengthof r1;

        if i1 >= $i0 goto label3;

        $r8 = r1[i1];

        $z1 = $r8 instanceof android.renderscript.ScriptGroup$Binding;

        if $z1 == 0 goto label2;

        i2 = i1;

        goto label3;

     label2:
        $r9 = r1[i1];

        virtualinvoke r10.<java.util.ArrayList: boolean add(java.lang.Object)>($r9);

        i1 = i1 + 1;

        goto label1;

     label3:
        $i3 = lengthof r1;

        if i2 >= $i3 goto label5;

        $r3 = r1[i2];

        $z0 = $r3 instanceof android.renderscript.ScriptGroup$Binding;

        if $z0 != 0 goto label4;

        return 0;

     label4:
        $r4 = r1[i2];

        r11 = (android.renderscript.ScriptGroup$Binding) $r4;

        $r5 = virtualinvoke r11.<android.renderscript.ScriptGroup$Binding: android.renderscript.Script$FieldID getField()>();

        $r6 = virtualinvoke r11.<android.renderscript.ScriptGroup$Binding: java.lang.Object getValue()>();

        interfaceinvoke r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r6);

        i2 = i2 + 1;

        goto label3;

     label5:
        return 1;
    }

    public android.renderscript.ScriptGroup$Input addInput()
    {
        android.renderscript.ScriptGroup$Builder2 r0;
        android.renderscript.ScriptGroup$Input $r2;
        java.util.List $r3;

        r0 := @this: android.renderscript.ScriptGroup$Builder2;

        $r2 = new android.renderscript.ScriptGroup$Input;

        specialinvoke $r2.<android.renderscript.ScriptGroup$Input: void <init>()>();

        $r3 = r0.<android.renderscript.ScriptGroup$Builder2: java.util.List mInputs>;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r2);

        return $r2;
    }

    public transient android.renderscript.ScriptGroup$Closure addInvoke(android.renderscript.Script$InvokeID, java.lang.Object[])
    {
        android.renderscript.ScriptGroup$Builder2 r0;
        android.renderscript.Script$InvokeID r1;
        java.lang.Object[] r2, $r7;
        java.util.ArrayList $r5;
        java.util.HashMap $r6;
        boolean $z0;
        android.renderscript.ScriptGroup$Closure $r8;

        r0 := @this: android.renderscript.ScriptGroup$Builder2;

        r1 := @parameter0: android.renderscript.Script$InvokeID;

        r2 := @parameter1: java.lang.Object[];

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        $r6 = new java.util.HashMap;

        specialinvoke $r6.<java.util.HashMap: void <init>()>();

        $z0 = specialinvoke r0.<android.renderscript.ScriptGroup$Builder2: boolean seperateArgsAndBindings(java.lang.Object[],java.util.ArrayList,java.util.Map)>(r2, $r5, $r6);

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r7 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object[] toArray()>();

        $r8 = specialinvoke r0.<android.renderscript.ScriptGroup$Builder2: android.renderscript.ScriptGroup$Closure addInvokeInternal(android.renderscript.Script$InvokeID,java.lang.Object[],java.util.Map)>(r1, $r7, $r6);

        return $r8;
    }

    public transient android.renderscript.ScriptGroup$Closure addKernel(android.renderscript.Script$KernelID, android.renderscript.Type, java.lang.Object[])
    {
        android.renderscript.ScriptGroup$Builder2 r0;
        android.renderscript.Script$KernelID r1;
        android.renderscript.Type r2;
        java.lang.Object[] r3, $r8;
        java.util.ArrayList $r6;
        java.util.HashMap $r7;
        boolean $z0;
        android.renderscript.ScriptGroup$Closure $r9;

        r0 := @this: android.renderscript.ScriptGroup$Builder2;

        r1 := @parameter0: android.renderscript.Script$KernelID;

        r2 := @parameter1: android.renderscript.Type;

        r3 := @parameter2: java.lang.Object[];

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        $r7 = new java.util.HashMap;

        specialinvoke $r7.<java.util.HashMap: void <init>()>();

        $z0 = specialinvoke r0.<android.renderscript.ScriptGroup$Builder2: boolean seperateArgsAndBindings(java.lang.Object[],java.util.ArrayList,java.util.Map)>(r3, $r6, $r7);

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r8 = virtualinvoke $r6.<java.util.ArrayList: java.lang.Object[] toArray()>();

        $r9 = specialinvoke r0.<android.renderscript.ScriptGroup$Builder2: android.renderscript.ScriptGroup$Closure addKernelInternal(android.renderscript.Script$KernelID,android.renderscript.Type,java.lang.Object[],java.util.Map)>(r1, r2, $r8, $r7);

        return $r9;
    }

    public transient android.renderscript.ScriptGroup create(java.lang.String, android.renderscript.ScriptGroup$Future[])
    {
        android.renderscript.ScriptGroup$Builder2 r0;
        android.renderscript.ScriptGroup$Future[] r1;
        boolean $z0, $z1;
        int $i0;
        java.lang.String $r2, r9;
        android.renderscript.ScriptGroup $r3;
        java.util.List $r4, $r5;
        android.renderscript.RenderScript $r6;
        java.util.ArrayList $r7, $r8;
        android.renderscript.RSIllegalArgumentException $r11;

        r0 := @this: android.renderscript.ScriptGroup$Builder2;

        r9 := @parameter0: java.lang.String;

        r1 := @parameter1: android.renderscript.ScriptGroup$Future[];

        if r9 == null goto label1;

        $z0 = virtualinvoke r9.<java.lang.String: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $i0 = virtualinvoke r9.<java.lang.String: int length()>();

        if $i0 > 100 goto label1;

        $r2 = virtualinvoke r9.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("[^a-zA-Z0-9-]", "_");

        $z1 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z1 == 0 goto label1;

        $r3 = new android.renderscript.ScriptGroup;

        $r6 = r0.<android.renderscript.ScriptGroup$Builder2: android.renderscript.RenderScript mRS>;

        $r5 = r0.<android.renderscript.ScriptGroup$Builder2: java.util.List mClosures>;

        $r4 = r0.<android.renderscript.ScriptGroup$Builder2: java.util.List mInputs>;

        specialinvoke $r3.<android.renderscript.ScriptGroup: void <init>(android.renderscript.RenderScript,java.lang.String,java.util.List,java.util.List,android.renderscript.ScriptGroup$Future[])>($r6, r9, $r5, $r4, r1);

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        r0.<android.renderscript.ScriptGroup$Builder2: java.util.List mClosures> = $r7;

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

        r0.<android.renderscript.ScriptGroup$Builder2: java.util.List mInputs> = $r8;

        return $r3;

     label1:
        $r11 = new android.renderscript.RSIllegalArgumentException;

        specialinvoke $r11.<android.renderscript.RSIllegalArgumentException: void <init>(java.lang.String)>("invalid script group name");

        throw $r11;
    }

    public static void <clinit>()
    {
        <android.renderscript.ScriptGroup$Builder2: java.lang.String TAG> = "ScriptGroup.Builder2";

        return;
    }
}
