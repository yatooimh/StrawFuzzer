public final class android.renderscript.ScriptGroup$Closure extends android.renderscript.BaseObj
{
    private static final java.lang.String TAG;
    private java.lang.Object[] mArgs;
    private java.util.Map mBindings;
    private android.renderscript.FieldPacker mFP;
    private java.util.Map mGlobalFuture;
    private android.renderscript.ScriptGroup$Future mReturnFuture;
    private android.renderscript.Allocation mReturnValue;

    void <init>(long, android.renderscript.RenderScript)
    {
        android.renderscript.ScriptGroup$Closure r0;
        long l0;
        android.renderscript.RenderScript r1;

        r0 := @this: android.renderscript.ScriptGroup$Closure;

        l0 := @parameter0: long;

        r1 := @parameter1: android.renderscript.RenderScript;

        specialinvoke r0.<android.renderscript.BaseObj: void <init>(long,android.renderscript.RenderScript)>(l0, r1);

        return;
    }

    void <init>(android.renderscript.RenderScript, android.renderscript.Script$InvokeID, java.lang.Object[], java.util.Map)
    {
        android.renderscript.ScriptGroup$Closure r0;
        android.renderscript.RenderScript r1;
        android.renderscript.Script$InvokeID r2;
        long[] r3, r4, r5, r18;
        java.util.Iterator r6;
        android.renderscript.FieldPacker $r7, $r10;
        java.util.HashMap $r8;
        java.util.Set $r9;
        boolean $z0;
        long $l0, $l1, $l2;
        byte[] $r11;
        dalvik.system.CloseGuard $r12;
        java.lang.Object $r13, $r14, r21;
        java.lang.Object[] r15;
        java.util.Map r16;
        int i3, i4;
        int[] r17;
        java.util.Map$Entry r20;
        android.renderscript.Script$FieldID r22;

        r0 := @this: android.renderscript.ScriptGroup$Closure;

        r1 := @parameter0: android.renderscript.RenderScript;

        r2 := @parameter1: android.renderscript.Script$InvokeID;

        r15 := @parameter2: java.lang.Object[];

        r16 := @parameter3: java.util.Map;

        specialinvoke r0.<android.renderscript.BaseObj: void <init>(long,android.renderscript.RenderScript)>(0L, r1);

        $r7 = staticinvoke <android.renderscript.FieldPacker: android.renderscript.FieldPacker createFromArray(java.lang.Object[])>(r15);

        r0.<android.renderscript.ScriptGroup$Closure: android.renderscript.FieldPacker mFP> = $r7;

        r0.<android.renderscript.ScriptGroup$Closure: java.lang.Object[] mArgs> = r15;

        r0.<android.renderscript.ScriptGroup$Closure: java.util.Map mBindings> = r16;

        $r8 = new java.util.HashMap;

        specialinvoke $r8.<java.util.HashMap: void <init>()>();

        r0.<android.renderscript.ScriptGroup$Closure: java.util.Map mGlobalFuture> = $r8;

        i3 = interfaceinvoke r16.<java.util.Map: int size()>();

        r3 = newarray (long)[i3];

        r4 = newarray (long)[i3];

        r17 = newarray (int)[i3];

        r5 = newarray (long)[i3];

        r18 = newarray (long)[i3];

        $r9 = interfaceinvoke r16.<java.util.Map: java.util.Set entrySet()>();

        r6 = interfaceinvoke $r9.<java.util.Set: java.util.Iterator iterator()>();

        i4 = 0;

     label1:
        $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r13 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();

        r20 = (java.util.Map$Entry) $r13;

        r21 = interfaceinvoke r20.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r14 = interfaceinvoke r20.<java.util.Map$Entry: java.lang.Object getKey()>();

        r22 = (android.renderscript.Script$FieldID) $r14;

        $l2 = virtualinvoke r22.<android.renderscript.Script$FieldID: long getID(android.renderscript.RenderScript)>(r1);

        r3[i4] = $l2;

        specialinvoke r0.<android.renderscript.ScriptGroup$Closure: void retrieveValueAndDependenceInfo(android.renderscript.RenderScript,int,android.renderscript.Script$FieldID,java.lang.Object,long[],int[],long[],long[])>(r1, i4, r22, r21, r4, r17, r5, r18);

        i4 = i4 + 1;

        goto label1;

     label2:
        $l0 = virtualinvoke r2.<android.renderscript.Script$InvokeID: long getID(android.renderscript.RenderScript)>(r1);

        $r10 = r0.<android.renderscript.ScriptGroup$Closure: android.renderscript.FieldPacker mFP>;

        $r11 = virtualinvoke $r10.<android.renderscript.FieldPacker: byte[] getData()>();

        $l1 = virtualinvoke r1.<android.renderscript.RenderScript: long nInvokeClosureCreate(long,byte[],long[],long[],int[])>($l0, $r11, r3, r4, r17);

        virtualinvoke r0.<android.renderscript.ScriptGroup$Closure: void setID(long)>($l1);

        $r12 = r0.<android.renderscript.ScriptGroup$Closure: dalvik.system.CloseGuard guard>;

        virtualinvoke $r12.<dalvik.system.CloseGuard: void open(java.lang.String)>("destroy");

        return;
    }

    void <init>(android.renderscript.RenderScript, android.renderscript.Script$KernelID, android.renderscript.Type, java.lang.Object[], java.util.Map)
    {
        android.renderscript.ScriptGroup$Closure r0;
        android.renderscript.RenderScript r1;
        android.renderscript.Script$KernelID r2;
        int i0, $i1, $i2, $i3, i8;
        long[] r3, r5, r6, r18;
        int[] r4;
        android.renderscript.Allocation $r7, $r10;
        java.util.HashMap $r8;
        java.util.Set $r9;
        boolean $z0;
        long $l4, $l5, $l6, $l7;
        dalvik.system.CloseGuard $r11;
        java.lang.Object $r12, $r13, $r14, r21;
        android.renderscript.Type r15;
        java.lang.Object[] r16;
        java.util.Map r17;
        java.util.Iterator r19;
        java.util.Map$Entry r20;
        android.renderscript.Script$FieldID r22;

        r0 := @this: android.renderscript.ScriptGroup$Closure;

        r1 := @parameter0: android.renderscript.RenderScript;

        r2 := @parameter1: android.renderscript.Script$KernelID;

        r15 := @parameter2: android.renderscript.Type;

        r16 := @parameter3: java.lang.Object[];

        r17 := @parameter4: java.util.Map;

        specialinvoke r0.<android.renderscript.BaseObj: void <init>(long,android.renderscript.RenderScript)>(0L, r1);

        r0.<android.renderscript.ScriptGroup$Closure: java.lang.Object[] mArgs> = r16;

        $r7 = staticinvoke <android.renderscript.Allocation: android.renderscript.Allocation createTyped(android.renderscript.RenderScript,android.renderscript.Type)>(r1, r15);

        r0.<android.renderscript.ScriptGroup$Closure: android.renderscript.Allocation mReturnValue> = $r7;

        r0.<android.renderscript.ScriptGroup$Closure: java.util.Map mBindings> = r17;

        $r8 = new java.util.HashMap;

        specialinvoke $r8.<java.util.HashMap: void <init>()>();

        r0.<android.renderscript.ScriptGroup$Closure: java.util.Map mGlobalFuture> = $r8;

        $i1 = lengthof r16;

        $i2 = interfaceinvoke r17.<java.util.Map: int size()>();

        i0 = $i1 + $i2;

        r18 = newarray (long)[i0];

        r3 = newarray (long)[i0];

        r4 = newarray (int)[i0];

        r5 = newarray (long)[i0];

        r6 = newarray (long)[i0];

        i8 = 0;

     label1:
        $i3 = lengthof r16;

        if i8 >= $i3 goto label2;

        r18[i8] = 0L;

        $r14 = r16[i8];

        specialinvoke r0.<android.renderscript.ScriptGroup$Closure: void retrieveValueAndDependenceInfo(android.renderscript.RenderScript,int,android.renderscript.Script$FieldID,java.lang.Object,long[],int[],long[],long[])>(r1, i8, null, $r14, r3, r4, r5, r6);

        i8 = i8 + 1;

        goto label1;

     label2:
        $r9 = interfaceinvoke r17.<java.util.Map: java.util.Set entrySet()>();

        r19 = interfaceinvoke $r9.<java.util.Set: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke r19.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r12 = interfaceinvoke r19.<java.util.Iterator: java.lang.Object next()>();

        r20 = (java.util.Map$Entry) $r12;

        r21 = interfaceinvoke r20.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r13 = interfaceinvoke r20.<java.util.Map$Entry: java.lang.Object getKey()>();

        r22 = (android.renderscript.Script$FieldID) $r13;

        $l7 = virtualinvoke r22.<android.renderscript.Script$FieldID: long getID(android.renderscript.RenderScript)>(r1);

        r18[i8] = $l7;

        specialinvoke r0.<android.renderscript.ScriptGroup$Closure: void retrieveValueAndDependenceInfo(android.renderscript.RenderScript,int,android.renderscript.Script$FieldID,java.lang.Object,long[],int[],long[],long[])>(r1, i8, r22, r21, r3, r4, r5, r6);

        i8 = i8 + 1;

        goto label3;

     label4:
        $l4 = virtualinvoke r2.<android.renderscript.Script$KernelID: long getID(android.renderscript.RenderScript)>(r1);

        $r10 = r0.<android.renderscript.ScriptGroup$Closure: android.renderscript.Allocation mReturnValue>;

        $l5 = virtualinvoke $r10.<android.renderscript.Allocation: long getID(android.renderscript.RenderScript)>(r1);

        $l6 = virtualinvoke r1.<android.renderscript.RenderScript: long nClosureCreate(long,long,long[],long[],int[],long[],long[])>($l4, $l5, r18, r3, r4, r5, r6);

        virtualinvoke r0.<android.renderscript.ScriptGroup$Closure: void setID(long)>($l6);

        $r11 = r0.<android.renderscript.ScriptGroup$Closure: dalvik.system.CloseGuard guard>;

        virtualinvoke $r11.<dalvik.system.CloseGuard: void open(java.lang.String)>("destroy");

        return;
    }

    private void retrieveValueAndDependenceInfo(android.renderscript.RenderScript, int, android.renderscript.Script$FieldID, java.lang.Object, long[], int[], long[], long[])
    {
        android.renderscript.ScriptGroup$Closure r0, $r8;
        int i0, $i2, $i3;
        android.renderscript.Script$FieldID r1, r12;
        long[] r2, r4, r11;
        int[] r3;
        android.renderscript.ScriptGroup$Future r5;
        boolean $z0, $z1;
        android.renderscript.ScriptGroup$Closure$ValueAndSize $r6;
        long $l1, $l4, l5;
        java.lang.Object[] $r7;
        android.renderscript.RenderScript r9;
        java.lang.Object r10;
        android.renderscript.ScriptGroup$Input r13;

        r0 := @this: android.renderscript.ScriptGroup$Closure;

        r9 := @parameter0: android.renderscript.RenderScript;

        i0 := @parameter1: int;

        r1 := @parameter2: android.renderscript.Script$FieldID;

        r10 := @parameter3: java.lang.Object;

        r2 := @parameter4: long[];

        r3 := @parameter5: int[];

        r11 := @parameter6: long[];

        r4 := @parameter7: long[];

        $z0 = r10 instanceof android.renderscript.ScriptGroup$Future;

        if $z0 == 0 goto label3;

        r5 = (android.renderscript.ScriptGroup$Future) r10;

        r10 = virtualinvoke r5.<android.renderscript.ScriptGroup$Future: java.lang.Object getValue()>();

        $r8 = virtualinvoke r5.<android.renderscript.ScriptGroup$Future: android.renderscript.ScriptGroup$Closure getClosure()>();

        $l4 = virtualinvoke $r8.<android.renderscript.ScriptGroup$Closure: long getID(android.renderscript.RenderScript)>(r9);

        r11[i0] = $l4;

        r12 = virtualinvoke r5.<android.renderscript.ScriptGroup$Future: android.renderscript.Script$FieldID getFieldID()>();

        if r12 == null goto label1;

        l5 = virtualinvoke r12.<android.renderscript.Script$FieldID: long getID(android.renderscript.RenderScript)>(r9);

        goto label2;

     label1:
        l5 = 0L;

     label2:
        r4[i0] = l5;

        goto label4;

     label3:
        r11[i0] = 0L;

        r4[i0] = 0L;

     label4:
        $z1 = r10 instanceof android.renderscript.ScriptGroup$Input;

        if $z1 == 0 goto label7;

        r13 = (android.renderscript.ScriptGroup$Input) r10;

        $r7 = r0.<android.renderscript.ScriptGroup$Closure: java.lang.Object[] mArgs>;

        $i3 = lengthof $r7;

        if i0 >= $i3 goto label5;

        virtualinvoke r13.<android.renderscript.ScriptGroup$Input: void addReference(android.renderscript.ScriptGroup$Closure,int)>(r0, i0);

        goto label6;

     label5:
        virtualinvoke r13.<android.renderscript.ScriptGroup$Input: void addReference(android.renderscript.ScriptGroup$Closure,android.renderscript.Script$FieldID)>(r0, r1);

     label6:
        r2[i0] = 0L;

        r3[i0] = 0;

        goto label8;

     label7:
        $r6 = new android.renderscript.ScriptGroup$Closure$ValueAndSize;

        specialinvoke $r6.<android.renderscript.ScriptGroup$Closure$ValueAndSize: void <init>(android.renderscript.RenderScript,java.lang.Object)>(r9, r10);

        $l1 = $r6.<android.renderscript.ScriptGroup$Closure$ValueAndSize: long value>;

        r2[i0] = $l1;

        $i2 = $r6.<android.renderscript.ScriptGroup$Closure$ValueAndSize: int size>;

        r3[i0] = $i2;

     label8:
        return;
    }

    public void destroy()
    {
        android.renderscript.ScriptGroup$Closure r0;
        android.renderscript.Allocation r1;

        r0 := @this: android.renderscript.ScriptGroup$Closure;

        specialinvoke r0.<android.renderscript.BaseObj: void destroy()>();

        r1 = r0.<android.renderscript.ScriptGroup$Closure: android.renderscript.Allocation mReturnValue>;

        if r1 == null goto label1;

        virtualinvoke r1.<android.renderscript.Allocation: void destroy()>();

     label1:
        return;
    }

    protected void finalize() throws java.lang.Throwable
    {
        android.renderscript.ScriptGroup$Closure r0;

        r0 := @this: android.renderscript.ScriptGroup$Closure;

        r0.<android.renderscript.ScriptGroup$Closure: android.renderscript.Allocation mReturnValue> = null;

        specialinvoke r0.<android.renderscript.BaseObj: void finalize()>();

        return;
    }

    public android.renderscript.ScriptGroup$Future getGlobal(android.renderscript.Script$FieldID)
    {
        android.renderscript.ScriptGroup$Closure r0;
        android.renderscript.Script$FieldID r1;
        java.util.Map $r2, $r4, $r6;
        java.lang.Object $r3, r11, r12;
        boolean $z0;
        android.renderscript.ScriptGroup$Future $r5, $r8, r9, r10;

        r0 := @this: android.renderscript.ScriptGroup$Closure;

        r1 := @parameter0: android.renderscript.Script$FieldID;

        $r2 = r0.<android.renderscript.ScriptGroup$Closure: java.util.Map mGlobalFuture>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r9 = (android.renderscript.ScriptGroup$Future) $r3;

        r10 = r9;

        if r9 != null goto label2;

        $r4 = r0.<android.renderscript.ScriptGroup$Closure: java.util.Map mBindings>;

        r11 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r12 = r11;

        $z0 = r11 instanceof android.renderscript.ScriptGroup$Future;

        if $z0 == 0 goto label1;

        $r8 = (android.renderscript.ScriptGroup$Future) r11;

        r12 = virtualinvoke $r8.<android.renderscript.ScriptGroup$Future: java.lang.Object getValue()>();

     label1:
        $r5 = new android.renderscript.ScriptGroup$Future;

        specialinvoke $r5.<android.renderscript.ScriptGroup$Future: void <init>(android.renderscript.ScriptGroup$Closure,android.renderscript.Script$FieldID,java.lang.Object)>(r0, r1, r12);

        r10 = $r5;

        $r6 = r0.<android.renderscript.ScriptGroup$Closure: java.util.Map mGlobalFuture>;

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r5);

     label2:
        return r10;
    }

    public android.renderscript.ScriptGroup$Future getReturn()
    {
        android.renderscript.ScriptGroup$Closure r0;
        android.renderscript.ScriptGroup$Future $r1, $r2, $r3;
        android.renderscript.Allocation $r4;

        r0 := @this: android.renderscript.ScriptGroup$Closure;

        $r1 = r0.<android.renderscript.ScriptGroup$Closure: android.renderscript.ScriptGroup$Future mReturnFuture>;

        if $r1 != null goto label1;

        $r3 = new android.renderscript.ScriptGroup$Future;

        $r4 = r0.<android.renderscript.ScriptGroup$Closure: android.renderscript.Allocation mReturnValue>;

        specialinvoke $r3.<android.renderscript.ScriptGroup$Future: void <init>(android.renderscript.ScriptGroup$Closure,android.renderscript.Script$FieldID,java.lang.Object)>(r0, null, $r4);

        r0.<android.renderscript.ScriptGroup$Closure: android.renderscript.ScriptGroup$Future mReturnFuture> = $r3;

     label1:
        $r2 = r0.<android.renderscript.ScriptGroup$Closure: android.renderscript.ScriptGroup$Future mReturnFuture>;

        return $r2;
    }

    void setArg(int, java.lang.Object)
    {
        android.renderscript.ScriptGroup$Closure r0;
        int i0, $i2;
        boolean $z0;
        java.lang.Object[] $r1;
        android.renderscript.ScriptGroup$Closure$ValueAndSize $r2;
        android.renderscript.RenderScript $r3, $r4, $r5;
        long $l1, $l3;
        android.renderscript.ScriptGroup$Future $r6;
        java.lang.Object r7, r8;

        r0 := @this: android.renderscript.ScriptGroup$Closure;

        i0 := @parameter0: int;

        r7 := @parameter1: java.lang.Object;

        r8 = r7;

        $z0 = r7 instanceof android.renderscript.ScriptGroup$Future;

        if $z0 == 0 goto label1;

        $r6 = (android.renderscript.ScriptGroup$Future) r7;

        r8 = virtualinvoke $r6.<android.renderscript.ScriptGroup$Future: java.lang.Object getValue()>();

     label1:
        $r1 = r0.<android.renderscript.ScriptGroup$Closure: java.lang.Object[] mArgs>;

        $r1[i0] = r8;

        $r2 = new android.renderscript.ScriptGroup$Closure$ValueAndSize;

        $r3 = r0.<android.renderscript.ScriptGroup$Closure: android.renderscript.RenderScript mRS>;

        specialinvoke $r2.<android.renderscript.ScriptGroup$Closure$ValueAndSize: void <init>(android.renderscript.RenderScript,java.lang.Object)>($r3, r8);

        $r5 = r0.<android.renderscript.ScriptGroup$Closure: android.renderscript.RenderScript mRS>;

        $r4 = r0.<android.renderscript.ScriptGroup$Closure: android.renderscript.RenderScript mRS>;

        $l1 = virtualinvoke r0.<android.renderscript.ScriptGroup$Closure: long getID(android.renderscript.RenderScript)>($r4);

        $l3 = $r2.<android.renderscript.ScriptGroup$Closure$ValueAndSize: long value>;

        $i2 = $r2.<android.renderscript.ScriptGroup$Closure$ValueAndSize: int size>;

        virtualinvoke $r5.<android.renderscript.RenderScript: void nClosureSetArg(long,int,long,int)>($l1, i0, $l3, $i2);

        return;
    }

    void setGlobal(android.renderscript.Script$FieldID, java.lang.Object)
    {
        android.renderscript.ScriptGroup$Closure r0;
        android.renderscript.Script$FieldID r1;
        boolean $z0;
        java.util.Map $r2;
        android.renderscript.ScriptGroup$Closure$ValueAndSize $r4;
        android.renderscript.RenderScript $r5, $r6, $r7, $r8;
        long $l0, $l1, $l3;
        int $i2;
        android.renderscript.ScriptGroup$Future $r9;
        java.lang.Object r10, r11;

        r0 := @this: android.renderscript.ScriptGroup$Closure;

        r1 := @parameter0: android.renderscript.Script$FieldID;

        r10 := @parameter1: java.lang.Object;

        r11 = r10;

        $z0 = r10 instanceof android.renderscript.ScriptGroup$Future;

        if $z0 == 0 goto label1;

        $r9 = (android.renderscript.ScriptGroup$Future) r10;

        r11 = virtualinvoke $r9.<android.renderscript.ScriptGroup$Future: java.lang.Object getValue()>();

     label1:
        $r2 = r0.<android.renderscript.ScriptGroup$Closure: java.util.Map mBindings>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r11);

        $r4 = new android.renderscript.ScriptGroup$Closure$ValueAndSize;

        $r5 = r0.<android.renderscript.ScriptGroup$Closure: android.renderscript.RenderScript mRS>;

        specialinvoke $r4.<android.renderscript.ScriptGroup$Closure$ValueAndSize: void <init>(android.renderscript.RenderScript,java.lang.Object)>($r5, r11);

        $r7 = r0.<android.renderscript.ScriptGroup$Closure: android.renderscript.RenderScript mRS>;

        $r6 = r0.<android.renderscript.ScriptGroup$Closure: android.renderscript.RenderScript mRS>;

        $l0 = virtualinvoke r0.<android.renderscript.ScriptGroup$Closure: long getID(android.renderscript.RenderScript)>($r6);

        $r8 = r0.<android.renderscript.ScriptGroup$Closure: android.renderscript.RenderScript mRS>;

        $l1 = virtualinvoke r1.<android.renderscript.Script$FieldID: long getID(android.renderscript.RenderScript)>($r8);

        $l3 = $r4.<android.renderscript.ScriptGroup$Closure$ValueAndSize: long value>;

        $i2 = $r4.<android.renderscript.ScriptGroup$Closure$ValueAndSize: int size>;

        virtualinvoke $r7.<android.renderscript.RenderScript: void nClosureSetGlobal(long,long,long,int)>($l0, $l1, $l3, $i2);

        return;
    }

    public static void <clinit>()
    {
        <android.renderscript.ScriptGroup$Closure: java.lang.String TAG> = "Closure";

        return;
    }
}
