public final class android.renderscript.ScriptGroup extends android.renderscript.BaseObj
{
    private static final java.lang.String TAG;
    private java.util.List mClosures;
    android.renderscript.ScriptGroup$IO[] mInputs;
    private java.util.List mInputs2;
    private java.lang.String mName;
    android.renderscript.ScriptGroup$IO[] mOutputs;
    private android.renderscript.ScriptGroup$Future[] mOutputs2;

    void <init>(long, android.renderscript.RenderScript)
    {
        android.renderscript.ScriptGroup r0;
        long l0;
        android.renderscript.RenderScript r1;
        dalvik.system.CloseGuard $r2;

        r0 := @this: android.renderscript.ScriptGroup;

        l0 := @parameter0: long;

        r1 := @parameter1: android.renderscript.RenderScript;

        specialinvoke r0.<android.renderscript.BaseObj: void <init>(long,android.renderscript.RenderScript)>(l0, r1);

        $r2 = r0.<android.renderscript.ScriptGroup: dalvik.system.CloseGuard guard>;

        virtualinvoke $r2.<dalvik.system.CloseGuard: void open(java.lang.String)>("destroy");

        return;
    }

    void <init>(android.renderscript.RenderScript, java.lang.String, java.util.List, java.util.List, android.renderscript.ScriptGroup$Future[])
    {
        android.renderscript.ScriptGroup r0;
        android.renderscript.RenderScript r1;
        java.lang.String r2, $r5;
        java.util.List r3, r9;
        android.renderscript.ScriptGroup$Future[] r4;
        int $i0, $i1, i4;
        long $l2, $l3;
        dalvik.system.CloseGuard $r6;
        java.lang.Object $r7;
        android.renderscript.ScriptGroup$Closure $r8;
        long[] r10;

        r0 := @this: android.renderscript.ScriptGroup;

        r1 := @parameter0: android.renderscript.RenderScript;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.util.List;

        r9 := @parameter3: java.util.List;

        r4 := @parameter4: android.renderscript.ScriptGroup$Future[];

        specialinvoke r0.<android.renderscript.BaseObj: void <init>(long,android.renderscript.RenderScript)>(0L, r1);

        r0.<android.renderscript.ScriptGroup: java.lang.String mName> = r2;

        r0.<android.renderscript.ScriptGroup: java.util.List mClosures> = r3;

        r0.<android.renderscript.ScriptGroup: java.util.List mInputs2> = r9;

        r0.<android.renderscript.ScriptGroup: android.renderscript.ScriptGroup$Future[] mOutputs2> = r4;

        $i0 = interfaceinvoke r3.<java.util.List: int size()>();

        r10 = newarray (long)[$i0];

        i4 = 0;

     label1:
        $i1 = lengthof r10;

        if i4 >= $i1 goto label2;

        $r7 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(i4);

        $r8 = (android.renderscript.ScriptGroup$Closure) $r7;

        $l3 = virtualinvoke $r8.<android.renderscript.ScriptGroup$Closure: long getID(android.renderscript.RenderScript)>(r1);

        r10[i4] = $l3;

        i4 = i4 + 1;

        goto label1;

     label2:
        $r5 = staticinvoke <android.renderscript.RenderScript: java.lang.String getCachePath()>();

        $l2 = virtualinvoke r1.<android.renderscript.RenderScript: long nScriptGroup2Create(java.lang.String,java.lang.String,long[])>(r2, $r5, r10);

        virtualinvoke r0.<android.renderscript.ScriptGroup: void setID(long)>($l2);

        $r6 = r0.<android.renderscript.ScriptGroup: dalvik.system.CloseGuard guard>;

        virtualinvoke $r6.<dalvik.system.CloseGuard: void open(java.lang.String)>("destroy");

        return;
    }

    public void destroy()
    {
        android.renderscript.ScriptGroup r0;
        boolean $z0;
        java.lang.Object $r1;
        android.renderscript.ScriptGroup$Closure $r2;
        java.util.List r3;
        java.util.Iterator r4;

        r0 := @this: android.renderscript.ScriptGroup;

        specialinvoke r0.<android.renderscript.BaseObj: void destroy()>();

        r3 = r0.<android.renderscript.ScriptGroup: java.util.List mClosures>;

        if r3 == null goto label2;

        r4 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r1 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        $r2 = (android.renderscript.ScriptGroup$Closure) $r1;

        virtualinvoke $r2.<android.renderscript.ScriptGroup$Closure: void destroy()>();

        goto label1;

     label2:
        return;
    }

    public void execute()
    {
        android.renderscript.ScriptGroup r0;
        android.renderscript.RenderScript $r1, $r2;
        long $l0;

        r0 := @this: android.renderscript.ScriptGroup;

        $r2 = r0.<android.renderscript.ScriptGroup: android.renderscript.RenderScript mRS>;

        $r1 = r0.<android.renderscript.ScriptGroup: android.renderscript.RenderScript mRS>;

        $l0 = virtualinvoke r0.<android.renderscript.ScriptGroup: long getID(android.renderscript.RenderScript)>($r1);

        virtualinvoke $r2.<android.renderscript.RenderScript: void nScriptGroupExecute(long)>($l0);

        return;
    }

    public transient java.lang.Object[] execute(java.lang.Object[])
    {
        android.renderscript.ScriptGroup r0;
        android.renderscript.ScriptGroup$Future[] r1;
        java.lang.Object[] r2, r37;
        int i0, $i1, $i2, $i3, $i4, $i6, $i8, $i9, $i11, $i12, i14, $i15, i16, i17;
        java.util.List $r3, $r4, $r16, $r25, $r34, $r40;
        android.renderscript.RenderScript $r5, $r6;
        long $l5;
        android.renderscript.ScriptGroup$Future $r7;
        boolean $z0, $z1, $z2;
        android.renderscript.ScriptGroup$Input $r8, $r18;
        java.lang.StringBuilder $r9, $r19, $r28;
        java.lang.String $r10, $r15, $r20, $r27, $r29, $r36;
        java.lang.Object $r17, r41, r43, r44;

        r0 := @this: android.renderscript.ScriptGroup;

        r37 := @parameter0: java.lang.Object[];

        $i1 = lengthof r37;

        $r3 = r0.<android.renderscript.ScriptGroup: java.util.List mInputs2>;

        $i2 = interfaceinvoke $r3.<java.util.List: int size()>();

        if $i1 >= $i2 goto label1;

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        $r29 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);

        virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" receives ");

        $i11 = lengthof r37;

        virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i11);

        virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" inputs, less than expected ");

        $r34 = r0.<android.renderscript.ScriptGroup: java.util.List mInputs2>;

        $i12 = interfaceinvoke $r34.<java.util.List: int size()>();

        virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i12);

        $r36 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("ScriptGroup", $r36);

        return null;

     label1:
        $i3 = lengthof r37;

        $r4 = r0.<android.renderscript.ScriptGroup: java.util.List mInputs2>;

        $i4 = interfaceinvoke $r4.<java.util.List: int size()>();

        if $i3 <= $i4 goto label2;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" receives ");

        $i8 = lengthof r37;

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8);

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" inputs, more than expected ");

        $r25 = r0.<android.renderscript.ScriptGroup: java.util.List mInputs2>;

        $i9 = interfaceinvoke $r25.<java.util.List: int size()>();

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i9);

        $r27 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("ScriptGroup", $r27);

     label2:
        i14 = 0;

     label3:
        $r40 = r0.<android.renderscript.ScriptGroup: java.util.List mInputs2>;

        $i15 = interfaceinvoke $r40.<java.util.List: int size()>();

        if i14 >= $i15 goto label6;

        r41 = r37[i14];

        $z1 = r41 instanceof android.renderscript.ScriptGroup$Future;

        if $z1 != 0 goto label5;

        $z2 = r41 instanceof android.renderscript.ScriptGroup$Input;

        if $z2 == 0 goto label4;

        goto label5;

     label4:
        $r16 = r0.<android.renderscript.ScriptGroup: java.util.List mInputs2>;

        $r17 = interfaceinvoke $r16.<java.util.List: java.lang.Object get(int)>(i14);

        $r18 = (android.renderscript.ScriptGroup$Input) $r17;

        virtualinvoke $r18.<android.renderscript.ScriptGroup$Input: void set(java.lang.Object)>(r41);

        i14 = i14 + 1;

        goto label3;

     label5:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": input ");

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i14);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is a future or unbound value");

        $r15 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("ScriptGroup", $r15);

        return null;

     label6:
        $r6 = r0.<android.renderscript.ScriptGroup: android.renderscript.RenderScript mRS>;

        $r5 = r0.<android.renderscript.ScriptGroup: android.renderscript.RenderScript mRS>;

        $l5 = virtualinvoke r0.<android.renderscript.ScriptGroup: long getID(android.renderscript.RenderScript)>($r5);

        virtualinvoke $r6.<android.renderscript.RenderScript: void nScriptGroup2Execute(long)>($l5);

        r1 = r0.<android.renderscript.ScriptGroup: android.renderscript.ScriptGroup$Future[] mOutputs2>;

        $i6 = lengthof r1;

        r2 = newarray (java.lang.Object)[$i6];

        i16 = 0;

        i0 = lengthof r1;

        i17 = 0;

     label7:
        if i17 >= i0 goto label9;

        $r7 = r1[i17];

        r43 = virtualinvoke $r7.<android.renderscript.ScriptGroup$Future: java.lang.Object getValue()>();

        r44 = r43;

        $z0 = r43 instanceof android.renderscript.ScriptGroup$Input;

        if $z0 == 0 goto label8;

        $r8 = (android.renderscript.ScriptGroup$Input) r43;

        r44 = virtualinvoke $r8.<android.renderscript.ScriptGroup$Input: java.lang.Object get()>();

     label8:
        r2[i16] = r44;

        i17 = i17 + 1;

        i16 = i16 + 1;

        goto label7;

     label9:
        return r2;
    }

    public void setInput(android.renderscript.Script$KernelID, android.renderscript.Allocation)
    {
        android.renderscript.ScriptGroup r0;
        android.renderscript.Script$KernelID r1, $r6;
        android.renderscript.Allocation r2;
        android.renderscript.ScriptGroup$IO[] r3, $r7;
        int $i0, i4;
        android.renderscript.RSIllegalArgumentException $r4;
        android.renderscript.ScriptGroup$IO $r5, $r8;
        android.renderscript.RenderScript $r9, $r10, $r11, $r12;
        long $l1, $l2, $l3;

        r0 := @this: android.renderscript.ScriptGroup;

        r1 := @parameter0: android.renderscript.Script$KernelID;

        r2 := @parameter1: android.renderscript.Allocation;

        i4 = 0;

     label1:
        r3 = r0.<android.renderscript.ScriptGroup: android.renderscript.ScriptGroup$IO[] mInputs>;

        $i0 = lengthof r3;

        if i4 >= $i0 goto label3;

        $r5 = r3[i4];

        $r6 = $r5.<android.renderscript.ScriptGroup$IO: android.renderscript.Script$KernelID mKID>;

        if $r6 != r1 goto label2;

        $r7 = r0.<android.renderscript.ScriptGroup: android.renderscript.ScriptGroup$IO[] mInputs>;

        $r8 = $r7[i4];

        $r8.<android.renderscript.ScriptGroup$IO: android.renderscript.Allocation mAllocation> = r2;

        $r10 = r0.<android.renderscript.ScriptGroup: android.renderscript.RenderScript mRS>;

        $r9 = r0.<android.renderscript.ScriptGroup: android.renderscript.RenderScript mRS>;

        $l1 = virtualinvoke r0.<android.renderscript.ScriptGroup: long getID(android.renderscript.RenderScript)>($r9);

        $r11 = r0.<android.renderscript.ScriptGroup: android.renderscript.RenderScript mRS>;

        $l2 = virtualinvoke r1.<android.renderscript.Script$KernelID: long getID(android.renderscript.RenderScript)>($r11);

        $r12 = r0.<android.renderscript.ScriptGroup: android.renderscript.RenderScript mRS>;

        $l3 = virtualinvoke $r12.<android.renderscript.RenderScript: long safeID(android.renderscript.BaseObj)>(r2);

        virtualinvoke $r10.<android.renderscript.RenderScript: void nScriptGroupSetInput(long,long,long)>($l1, $l2, $l3);

        return;

     label2:
        i4 = i4 + 1;

        goto label1;

     label3:
        $r4 = new android.renderscript.RSIllegalArgumentException;

        specialinvoke $r4.<android.renderscript.RSIllegalArgumentException: void <init>(java.lang.String)>("Script not found");

        throw $r4;
    }

    public void setOutput(android.renderscript.Script$KernelID, android.renderscript.Allocation)
    {
        android.renderscript.ScriptGroup r0;
        android.renderscript.Script$KernelID r1, $r6;
        android.renderscript.Allocation r2;
        android.renderscript.ScriptGroup$IO[] r3, $r7;
        int $i0, i4;
        android.renderscript.RSIllegalArgumentException $r4;
        android.renderscript.ScriptGroup$IO $r5, $r8;
        android.renderscript.RenderScript $r9, $r10, $r11, $r12;
        long $l1, $l2, $l3;

        r0 := @this: android.renderscript.ScriptGroup;

        r1 := @parameter0: android.renderscript.Script$KernelID;

        r2 := @parameter1: android.renderscript.Allocation;

        i4 = 0;

     label1:
        r3 = r0.<android.renderscript.ScriptGroup: android.renderscript.ScriptGroup$IO[] mOutputs>;

        $i0 = lengthof r3;

        if i4 >= $i0 goto label3;

        $r5 = r3[i4];

        $r6 = $r5.<android.renderscript.ScriptGroup$IO: android.renderscript.Script$KernelID mKID>;

        if $r6 != r1 goto label2;

        $r7 = r0.<android.renderscript.ScriptGroup: android.renderscript.ScriptGroup$IO[] mOutputs>;

        $r8 = $r7[i4];

        $r8.<android.renderscript.ScriptGroup$IO: android.renderscript.Allocation mAllocation> = r2;

        $r10 = r0.<android.renderscript.ScriptGroup: android.renderscript.RenderScript mRS>;

        $r9 = r0.<android.renderscript.ScriptGroup: android.renderscript.RenderScript mRS>;

        $l1 = virtualinvoke r0.<android.renderscript.ScriptGroup: long getID(android.renderscript.RenderScript)>($r9);

        $r11 = r0.<android.renderscript.ScriptGroup: android.renderscript.RenderScript mRS>;

        $l2 = virtualinvoke r1.<android.renderscript.Script$KernelID: long getID(android.renderscript.RenderScript)>($r11);

        $r12 = r0.<android.renderscript.ScriptGroup: android.renderscript.RenderScript mRS>;

        $l3 = virtualinvoke $r12.<android.renderscript.RenderScript: long safeID(android.renderscript.BaseObj)>(r2);

        virtualinvoke $r10.<android.renderscript.RenderScript: void nScriptGroupSetOutput(long,long,long)>($l1, $l2, $l3);

        return;

     label2:
        i4 = i4 + 1;

        goto label1;

     label3:
        $r4 = new android.renderscript.RSIllegalArgumentException;

        specialinvoke $r4.<android.renderscript.RSIllegalArgumentException: void <init>(java.lang.String)>("Script not found");

        throw $r4;
    }

    public static void <clinit>()
    {
        <android.renderscript.ScriptGroup: java.lang.String TAG> = "ScriptGroup";

        return;
    }
}
