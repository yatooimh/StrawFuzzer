public final class android.renderscript.ScriptIntrinsicBlur extends android.renderscript.ScriptIntrinsic
{
    private android.renderscript.Allocation mInput;
    private final float[] mValues;

    private void <init>(long, android.renderscript.RenderScript)
    {
        android.renderscript.ScriptIntrinsicBlur r0;
        long l0;
        android.renderscript.RenderScript r1;
        float[] $r2;

        r0 := @this: android.renderscript.ScriptIntrinsicBlur;

        l0 := @parameter0: long;

        r1 := @parameter1: android.renderscript.RenderScript;

        specialinvoke r0.<android.renderscript.ScriptIntrinsic: void <init>(long,android.renderscript.RenderScript)>(l0, r1);

        $r2 = newarray (float)[9];

        r0.<android.renderscript.ScriptIntrinsicBlur: float[] mValues> = $r2;

        return;
    }

    public static android.renderscript.ScriptIntrinsicBlur create(android.renderscript.RenderScript, android.renderscript.Element)
    {
        android.renderscript.Element r0, $r1, $r3;
        boolean $z0, $z1;
        android.renderscript.ScriptIntrinsicBlur $r2;
        long $l0, $l1;
        android.renderscript.RSIllegalArgumentException $r4;
        android.renderscript.RenderScript r5;

        r5 := @parameter0: android.renderscript.RenderScript;

        r0 := @parameter1: android.renderscript.Element;

        $r1 = staticinvoke <android.renderscript.Element: android.renderscript.Element U8_4(android.renderscript.RenderScript)>(r5);

        $z0 = virtualinvoke r0.<android.renderscript.Element: boolean isCompatible(android.renderscript.Element)>($r1);

        if $z0 != 0 goto label2;

        $r3 = staticinvoke <android.renderscript.Element: android.renderscript.Element U8(android.renderscript.RenderScript)>(r5);

        $z1 = virtualinvoke r0.<android.renderscript.Element: boolean isCompatible(android.renderscript.Element)>($r3);

        if $z1 == 0 goto label1;

        goto label2;

     label1:
        $r4 = new android.renderscript.RSIllegalArgumentException;

        specialinvoke $r4.<android.renderscript.RSIllegalArgumentException: void <init>(java.lang.String)>("Unsupported element type.");

        throw $r4;

     label2:
        $r2 = new android.renderscript.ScriptIntrinsicBlur;

        $l0 = virtualinvoke r0.<android.renderscript.Element: long getID(android.renderscript.RenderScript)>(r5);

        $l1 = virtualinvoke r5.<android.renderscript.RenderScript: long nScriptIntrinsicCreate(int,long)>(5, $l0);

        specialinvoke $r2.<android.renderscript.ScriptIntrinsicBlur: void <init>(long,android.renderscript.RenderScript)>($l1, r5);

        virtualinvoke $r2.<android.renderscript.ScriptIntrinsicBlur: void setRadius(float)>(5.0F);

        return $r2;
    }

    public void forEach(android.renderscript.Allocation)
    {
        android.renderscript.ScriptIntrinsicBlur r0;
        android.renderscript.Allocation r1, $r4;
        android.renderscript.Type $r2;
        int $i0;
        android.renderscript.RSIllegalArgumentException $r3;

        r0 := @this: android.renderscript.ScriptIntrinsicBlur;

        r1 := @parameter0: android.renderscript.Allocation;

        $r2 = virtualinvoke r1.<android.renderscript.Allocation: android.renderscript.Type getType()>();

        $i0 = virtualinvoke $r2.<android.renderscript.Type: int getY()>();

        if $i0 == 0 goto label1;

        $r4 = (android.renderscript.Allocation) null;

        virtualinvoke r0.<android.renderscript.ScriptIntrinsicBlur: void forEach(int,android.renderscript.Allocation,android.renderscript.Allocation,android.renderscript.FieldPacker)>(0, $r4, r1, null);

        return;

     label1:
        $r3 = new android.renderscript.RSIllegalArgumentException;

        specialinvoke $r3.<android.renderscript.RSIllegalArgumentException: void <init>(java.lang.String)>("Output is a 1D Allocation");

        throw $r3;
    }

    public void forEach(android.renderscript.Allocation, android.renderscript.Script$LaunchOptions)
    {
        android.renderscript.ScriptIntrinsicBlur r0;
        android.renderscript.Allocation r1, $r5;
        android.renderscript.Script$LaunchOptions r2;
        android.renderscript.Type $r3;
        int $i0;
        android.renderscript.RSIllegalArgumentException $r4;

        r0 := @this: android.renderscript.ScriptIntrinsicBlur;

        r1 := @parameter0: android.renderscript.Allocation;

        r2 := @parameter1: android.renderscript.Script$LaunchOptions;

        $r3 = virtualinvoke r1.<android.renderscript.Allocation: android.renderscript.Type getType()>();

        $i0 = virtualinvoke $r3.<android.renderscript.Type: int getY()>();

        if $i0 == 0 goto label1;

        $r5 = (android.renderscript.Allocation) null;

        virtualinvoke r0.<android.renderscript.ScriptIntrinsicBlur: void forEach(int,android.renderscript.Allocation,android.renderscript.Allocation,android.renderscript.FieldPacker,android.renderscript.Script$LaunchOptions)>(0, $r5, r1, null, r2);

        return;

     label1:
        $r4 = new android.renderscript.RSIllegalArgumentException;

        specialinvoke $r4.<android.renderscript.RSIllegalArgumentException: void <init>(java.lang.String)>("Output is a 1D Allocation");

        throw $r4;
    }

    public android.renderscript.Script$FieldID getFieldID_Input()
    {
        android.renderscript.ScriptIntrinsicBlur r0;
        android.renderscript.Script$FieldID $r1;

        r0 := @this: android.renderscript.ScriptIntrinsicBlur;

        $r1 = virtualinvoke r0.<android.renderscript.ScriptIntrinsicBlur: android.renderscript.Script$FieldID createFieldID(int,android.renderscript.Element)>(1, null);

        return $r1;
    }

    public android.renderscript.Script$KernelID getKernelID()
    {
        android.renderscript.ScriptIntrinsicBlur r0;
        android.renderscript.Script$KernelID $r1;

        r0 := @this: android.renderscript.ScriptIntrinsicBlur;

        $r1 = virtualinvoke r0.<android.renderscript.ScriptIntrinsicBlur: android.renderscript.Script$KernelID createKernelID(int,int,android.renderscript.Element,android.renderscript.Element)>(0, 2, null, null);

        return $r1;
    }

    public void setInput(android.renderscript.Allocation)
    {
        android.renderscript.ScriptIntrinsicBlur r0;
        android.renderscript.Allocation r1;
        android.renderscript.Element r2, $r6, $r8;
        android.renderscript.Type $r3;
        int $i0;
        android.renderscript.RSIllegalArgumentException $r4, $r9;
        android.renderscript.RenderScript $r5, $r7;
        boolean $z0, $z1;

        r0 := @this: android.renderscript.ScriptIntrinsicBlur;

        r1 := @parameter0: android.renderscript.Allocation;

        $r3 = virtualinvoke r1.<android.renderscript.Allocation: android.renderscript.Type getType()>();

        $i0 = virtualinvoke $r3.<android.renderscript.Type: int getY()>();

        if $i0 == 0 goto label3;

        r2 = virtualinvoke r1.<android.renderscript.Allocation: android.renderscript.Element getElement()>();

        $r5 = r0.<android.renderscript.ScriptIntrinsicBlur: android.renderscript.RenderScript mRS>;

        $r6 = staticinvoke <android.renderscript.Element: android.renderscript.Element U8_4(android.renderscript.RenderScript)>($r5);

        $z0 = virtualinvoke r2.<android.renderscript.Element: boolean isCompatible(android.renderscript.Element)>($r6);

        if $z0 != 0 goto label2;

        $r7 = r0.<android.renderscript.ScriptIntrinsicBlur: android.renderscript.RenderScript mRS>;

        $r8 = staticinvoke <android.renderscript.Element: android.renderscript.Element U8(android.renderscript.RenderScript)>($r7);

        $z1 = virtualinvoke r2.<android.renderscript.Element: boolean isCompatible(android.renderscript.Element)>($r8);

        if $z1 == 0 goto label1;

        goto label2;

     label1:
        $r9 = new android.renderscript.RSIllegalArgumentException;

        specialinvoke $r9.<android.renderscript.RSIllegalArgumentException: void <init>(java.lang.String)>("Unsupported element type.");

        throw $r9;

     label2:
        r0.<android.renderscript.ScriptIntrinsicBlur: android.renderscript.Allocation mInput> = r1;

        virtualinvoke r0.<android.renderscript.ScriptIntrinsicBlur: void setVar(int,android.renderscript.BaseObj)>(1, r1);

        return;

     label3:
        $r4 = new android.renderscript.RSIllegalArgumentException;

        specialinvoke $r4.<android.renderscript.RSIllegalArgumentException: void <init>(java.lang.String)>("Input set to a 1D Allocation");

        throw $r4;
    }

    public void setRadius(float)
    {
        android.renderscript.ScriptIntrinsicBlur r0;
        float f0;
        byte $b0, $b1;
        android.renderscript.RSIllegalArgumentException $r1;

        r0 := @this: android.renderscript.ScriptIntrinsicBlur;

        f0 := @parameter0: float;

        $b0 = f0 cmpg 0.0F;

        if $b0 <= 0 goto label1;

        $b1 = f0 cmpl 25.0F;

        if $b1 > 0 goto label1;

        virtualinvoke r0.<android.renderscript.ScriptIntrinsicBlur: void setVar(int,float)>(0, f0);

        return;

     label1:
        $r1 = new android.renderscript.RSIllegalArgumentException;

        specialinvoke $r1.<android.renderscript.RSIllegalArgumentException: void <init>(java.lang.String)>("Radius out of range (0 < r <= 25).");

        throw $r1;
    }
}
