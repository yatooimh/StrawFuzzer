public final class android.renderscript.ScriptIntrinsicLUT extends android.renderscript.ScriptIntrinsic
{
    private final byte[] mCache;
    private boolean mDirty;
    private final android.renderscript.Matrix4f mMatrix;
    private android.renderscript.Allocation mTables;

    private void <init>(long, android.renderscript.RenderScript)
    {
        android.renderscript.ScriptIntrinsicLUT r0;
        long l0;
        android.renderscript.Matrix4f $r1;
        byte[] $r2, r7;
        android.renderscript.Element $r3;
        android.renderscript.Allocation $r4, $r5;
        byte $b1, $b2, $b3, $b4, $b6, $b7, $b9, $b10;
        int $i5, $i8, $i11, i12;
        android.renderscript.RenderScript r6;

        r0 := @this: android.renderscript.ScriptIntrinsicLUT;

        l0 := @parameter0: long;

        r6 := @parameter1: android.renderscript.RenderScript;

        specialinvoke r0.<android.renderscript.ScriptIntrinsic: void <init>(long,android.renderscript.RenderScript)>(l0, r6);

        $r1 = new android.renderscript.Matrix4f;

        specialinvoke $r1.<android.renderscript.Matrix4f: void <init>()>();

        r0.<android.renderscript.ScriptIntrinsicLUT: android.renderscript.Matrix4f mMatrix> = $r1;

        $r2 = newarray (byte)[1024];

        r0.<android.renderscript.ScriptIntrinsicLUT: byte[] mCache> = $r2;

        r0.<android.renderscript.ScriptIntrinsicLUT: boolean mDirty> = 1;

        $r3 = staticinvoke <android.renderscript.Element: android.renderscript.Element U8(android.renderscript.RenderScript)>(r6);

        $r4 = staticinvoke <android.renderscript.Allocation: android.renderscript.Allocation createSized(android.renderscript.RenderScript,android.renderscript.Element,int)>(r6, $r3, 1024);

        r0.<android.renderscript.ScriptIntrinsicLUT: android.renderscript.Allocation mTables> = $r4;

        i12 = 0;

     label1:
        if i12 >= 256 goto label2;

        r7 = r0.<android.renderscript.ScriptIntrinsicLUT: byte[] mCache>;

        $b1 = (byte) i12;

        $b2 = (byte) $b1;

        r7[i12] = $b2;

        $i5 = i12 + 256;

        $b3 = (byte) i12;

        $b4 = (byte) $b3;

        r7[$i5] = $b4;

        $i8 = i12 + 512;

        $b6 = (byte) i12;

        $b7 = (byte) $b6;

        r7[$i8] = $b7;

        $i11 = i12 + 768;

        $b9 = (byte) i12;

        $b10 = (byte) $b9;

        r7[$i11] = $b10;

        i12 = i12 + 1;

        goto label1;

     label2:
        $r5 = r0.<android.renderscript.ScriptIntrinsicLUT: android.renderscript.Allocation mTables>;

        virtualinvoke r0.<android.renderscript.ScriptIntrinsicLUT: void setVar(int,android.renderscript.BaseObj)>(0, $r5);

        return;
    }

    public static android.renderscript.ScriptIntrinsicLUT create(android.renderscript.RenderScript, android.renderscript.Element)
    {
        android.renderscript.RenderScript r0;
        android.renderscript.Element r1;
        android.renderscript.ScriptIntrinsicLUT $r2;
        long $l0, $l1;

        r0 := @parameter0: android.renderscript.RenderScript;

        r1 := @parameter1: android.renderscript.Element;

        $r2 = new android.renderscript.ScriptIntrinsicLUT;

        $l0 = virtualinvoke r1.<android.renderscript.Element: long getID(android.renderscript.RenderScript)>(r0);

        $l1 = virtualinvoke r0.<android.renderscript.RenderScript: long nScriptIntrinsicCreate(int,long)>(3, $l0);

        specialinvoke $r2.<android.renderscript.ScriptIntrinsicLUT: void <init>(long,android.renderscript.RenderScript)>($l1, r0);

        return $r2;
    }

    private void validate(int, int)
    {
        android.renderscript.ScriptIntrinsicLUT r0;
        int i0, i1;
        android.renderscript.RSIllegalArgumentException $r1, $r2;

        r0 := @this: android.renderscript.ScriptIntrinsicLUT;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i0 < 0 goto label2;

        if i0 > 255 goto label2;

        if i1 < 0 goto label1;

        if i1 > 255 goto label1;

        return;

     label1:
        $r2 = new android.renderscript.RSIllegalArgumentException;

        specialinvoke $r2.<android.renderscript.RSIllegalArgumentException: void <init>(java.lang.String)>("Value out of range (0-255).");

        throw $r2;

     label2:
        $r1 = new android.renderscript.RSIllegalArgumentException;

        specialinvoke $r1.<android.renderscript.RSIllegalArgumentException: void <init>(java.lang.String)>("Index out of range (0-255).");

        throw $r1;
    }

    public void destroy()
    {
        android.renderscript.ScriptIntrinsicLUT r0;
        android.renderscript.Allocation $r1;

        r0 := @this: android.renderscript.ScriptIntrinsicLUT;

        $r1 = r0.<android.renderscript.ScriptIntrinsicLUT: android.renderscript.Allocation mTables>;

        virtualinvoke $r1.<android.renderscript.Allocation: void destroy()>();

        specialinvoke r0.<android.renderscript.ScriptIntrinsic: void destroy()>();

        return;
    }

    public void forEach(android.renderscript.Allocation, android.renderscript.Allocation)
    {
        android.renderscript.ScriptIntrinsicLUT r0;
        android.renderscript.Allocation r1, r2;

        r0 := @this: android.renderscript.ScriptIntrinsicLUT;

        r1 := @parameter0: android.renderscript.Allocation;

        r2 := @parameter1: android.renderscript.Allocation;

        virtualinvoke r0.<android.renderscript.ScriptIntrinsicLUT: void forEach(android.renderscript.Allocation,android.renderscript.Allocation,android.renderscript.Script$LaunchOptions)>(r1, r2, null);

        return;
    }

    public void forEach(android.renderscript.Allocation, android.renderscript.Allocation, android.renderscript.Script$LaunchOptions)
    {
        android.renderscript.ScriptIntrinsicLUT r0;
        android.renderscript.Allocation r1, r2, $r5;
        android.renderscript.Script$LaunchOptions r3;
        boolean $z0;
        byte[] $r4;

        r0 := @this: android.renderscript.ScriptIntrinsicLUT;

        r1 := @parameter0: android.renderscript.Allocation;

        r2 := @parameter1: android.renderscript.Allocation;

        r3 := @parameter2: android.renderscript.Script$LaunchOptions;

        $z0 = r0.<android.renderscript.ScriptIntrinsicLUT: boolean mDirty>;

        if $z0 == 0 goto label1;

        r0.<android.renderscript.ScriptIntrinsicLUT: boolean mDirty> = 0;

        $r5 = r0.<android.renderscript.ScriptIntrinsicLUT: android.renderscript.Allocation mTables>;

        $r4 = r0.<android.renderscript.ScriptIntrinsicLUT: byte[] mCache>;

        virtualinvoke $r5.<android.renderscript.Allocation: void copyFromUnchecked(byte[])>($r4);

     label1:
        virtualinvoke r0.<android.renderscript.ScriptIntrinsicLUT: void forEach(int,android.renderscript.Allocation,android.renderscript.Allocation,android.renderscript.FieldPacker,android.renderscript.Script$LaunchOptions)>(0, r1, r2, null, r3);

        return;
    }

    public android.renderscript.Script$KernelID getKernelID()
    {
        android.renderscript.ScriptIntrinsicLUT r0;
        android.renderscript.Script$KernelID $r1;

        r0 := @this: android.renderscript.ScriptIntrinsicLUT;

        $r1 = virtualinvoke r0.<android.renderscript.ScriptIntrinsicLUT: android.renderscript.Script$KernelID createKernelID(int,int,android.renderscript.Element,android.renderscript.Element)>(0, 3, null, null);

        return $r1;
    }

    public void setAlpha(int, int)
    {
        android.renderscript.ScriptIntrinsicLUT r0;
        int i0, i1, $i4;
        byte $b2, $b3;
        byte[] $r1;

        r0 := @this: android.renderscript.ScriptIntrinsicLUT;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<android.renderscript.ScriptIntrinsicLUT: void validate(int,int)>(i0, i1);

        $r1 = r0.<android.renderscript.ScriptIntrinsicLUT: byte[] mCache>;

        $i4 = i0 + 768;

        $b2 = (byte) i1;

        $b3 = (byte) $b2;

        $r1[$i4] = $b3;

        r0.<android.renderscript.ScriptIntrinsicLUT: boolean mDirty> = 1;

        return;
    }

    public void setBlue(int, int)
    {
        android.renderscript.ScriptIntrinsicLUT r0;
        int i0, i1, $i4;
        byte $b2, $b3;
        byte[] $r1;

        r0 := @this: android.renderscript.ScriptIntrinsicLUT;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<android.renderscript.ScriptIntrinsicLUT: void validate(int,int)>(i0, i1);

        $r1 = r0.<android.renderscript.ScriptIntrinsicLUT: byte[] mCache>;

        $i4 = i0 + 512;

        $b2 = (byte) i1;

        $b3 = (byte) $b2;

        $r1[$i4] = $b3;

        r0.<android.renderscript.ScriptIntrinsicLUT: boolean mDirty> = 1;

        return;
    }

    public void setGreen(int, int)
    {
        android.renderscript.ScriptIntrinsicLUT r0;
        int i0, i1, $i4;
        byte $b2, $b3;
        byte[] $r1;

        r0 := @this: android.renderscript.ScriptIntrinsicLUT;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<android.renderscript.ScriptIntrinsicLUT: void validate(int,int)>(i0, i1);

        $r1 = r0.<android.renderscript.ScriptIntrinsicLUT: byte[] mCache>;

        $i4 = i0 + 256;

        $b2 = (byte) i1;

        $b3 = (byte) $b2;

        $r1[$i4] = $b3;

        r0.<android.renderscript.ScriptIntrinsicLUT: boolean mDirty> = 1;

        return;
    }

    public void setRed(int, int)
    {
        android.renderscript.ScriptIntrinsicLUT r0;
        int i0, i1;
        byte $b2, $b3;
        byte[] $r1;

        r0 := @this: android.renderscript.ScriptIntrinsicLUT;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<android.renderscript.ScriptIntrinsicLUT: void validate(int,int)>(i0, i1);

        $r1 = r0.<android.renderscript.ScriptIntrinsicLUT: byte[] mCache>;

        $b2 = (byte) i1;

        $b3 = (byte) $b2;

        $r1[i0] = $b3;

        r0.<android.renderscript.ScriptIntrinsicLUT: boolean mDirty> = 1;

        return;
    }
}
