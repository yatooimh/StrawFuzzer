public final class android.renderscript.ScriptIntrinsicResize extends android.renderscript.ScriptIntrinsic
{
    private android.renderscript.Allocation mInput;

    private void <init>(long, android.renderscript.RenderScript)
    {
        android.renderscript.ScriptIntrinsicResize r0;
        long l0;
        android.renderscript.RenderScript r1;

        r0 := @this: android.renderscript.ScriptIntrinsicResize;

        l0 := @parameter0: long;

        r1 := @parameter1: android.renderscript.RenderScript;

        specialinvoke r0.<android.renderscript.ScriptIntrinsic: void <init>(long,android.renderscript.RenderScript)>(l0, r1);

        return;
    }

    public static android.renderscript.ScriptIntrinsicResize create(android.renderscript.RenderScript)
    {
        android.renderscript.RenderScript r0;
        android.renderscript.ScriptIntrinsicResize $r1;
        long $l0;

        r0 := @parameter0: android.renderscript.RenderScript;

        $r1 = new android.renderscript.ScriptIntrinsicResize;

        $l0 = virtualinvoke r0.<android.renderscript.RenderScript: long nScriptIntrinsicCreate(int,long)>(12, 0L);

        specialinvoke $r1.<android.renderscript.ScriptIntrinsicResize: void <init>(long,android.renderscript.RenderScript)>($l0, r0);

        return $r1;
    }

    public void forEach_bicubic(android.renderscript.Allocation)
    {
        android.renderscript.ScriptIntrinsicResize r0;
        android.renderscript.Allocation r1, $r2;
        android.renderscript.RSIllegalArgumentException $r3;

        r0 := @this: android.renderscript.ScriptIntrinsicResize;

        r1 := @parameter0: android.renderscript.Allocation;

        $r2 = r0.<android.renderscript.ScriptIntrinsicResize: android.renderscript.Allocation mInput>;

        if r1 == $r2 goto label1;

        virtualinvoke r0.<android.renderscript.ScriptIntrinsicResize: void forEach_bicubic(android.renderscript.Allocation,android.renderscript.Script$LaunchOptions)>(r1, null);

        return;

     label1:
        $r3 = new android.renderscript.RSIllegalArgumentException;

        specialinvoke $r3.<android.renderscript.RSIllegalArgumentException: void <init>(java.lang.String)>("Output cannot be same as Input.");

        throw $r3;
    }

    public void forEach_bicubic(android.renderscript.Allocation, android.renderscript.Script$LaunchOptions)
    {
        android.renderscript.ScriptIntrinsicResize r0;
        android.renderscript.Allocation r1, $r3;
        android.renderscript.Script$LaunchOptions r2;

        r0 := @this: android.renderscript.ScriptIntrinsicResize;

        r1 := @parameter0: android.renderscript.Allocation;

        r2 := @parameter1: android.renderscript.Script$LaunchOptions;

        $r3 = (android.renderscript.Allocation) null;

        virtualinvoke r0.<android.renderscript.ScriptIntrinsicResize: void forEach(int,android.renderscript.Allocation,android.renderscript.Allocation,android.renderscript.FieldPacker,android.renderscript.Script$LaunchOptions)>(0, $r3, r1, null, r2);

        return;
    }

    public android.renderscript.Script$FieldID getFieldID_Input()
    {
        android.renderscript.ScriptIntrinsicResize r0;
        android.renderscript.Script$FieldID $r1;

        r0 := @this: android.renderscript.ScriptIntrinsicResize;

        $r1 = virtualinvoke r0.<android.renderscript.ScriptIntrinsicResize: android.renderscript.Script$FieldID createFieldID(int,android.renderscript.Element)>(0, null);

        return $r1;
    }

    public android.renderscript.Script$KernelID getKernelID_bicubic()
    {
        android.renderscript.ScriptIntrinsicResize r0;
        android.renderscript.Script$KernelID $r1;

        r0 := @this: android.renderscript.ScriptIntrinsicResize;

        $r1 = virtualinvoke r0.<android.renderscript.ScriptIntrinsicResize: android.renderscript.Script$KernelID createKernelID(int,int,android.renderscript.Element,android.renderscript.Element)>(0, 2, null, null);

        return $r1;
    }

    public void setInput(android.renderscript.Allocation)
    {
        android.renderscript.ScriptIntrinsicResize r0;
        android.renderscript.Allocation r1;
        android.renderscript.Element r2, $r4, $r6, $r8, $r10, $r12, $r14, $r16, $r18;
        android.renderscript.RenderScript $r3, $r5, $r7, $r9, $r11, $r13, $r15, $r17;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        android.renderscript.RSIllegalArgumentException $r19;

        r0 := @this: android.renderscript.ScriptIntrinsicResize;

        r1 := @parameter0: android.renderscript.Allocation;

        r2 = virtualinvoke r1.<android.renderscript.Allocation: android.renderscript.Element getElement()>();

        $r3 = r0.<android.renderscript.ScriptIntrinsicResize: android.renderscript.RenderScript mRS>;

        $r4 = staticinvoke <android.renderscript.Element: android.renderscript.Element U8(android.renderscript.RenderScript)>($r3);

        $z0 = virtualinvoke r2.<android.renderscript.Element: boolean isCompatible(android.renderscript.Element)>($r4);

        if $z0 != 0 goto label2;

        $r5 = r0.<android.renderscript.ScriptIntrinsicResize: android.renderscript.RenderScript mRS>;

        $r6 = staticinvoke <android.renderscript.Element: android.renderscript.Element U8_2(android.renderscript.RenderScript)>($r5);

        $z1 = virtualinvoke r2.<android.renderscript.Element: boolean isCompatible(android.renderscript.Element)>($r6);

        if $z1 != 0 goto label2;

        $r7 = r0.<android.renderscript.ScriptIntrinsicResize: android.renderscript.RenderScript mRS>;

        $r8 = staticinvoke <android.renderscript.Element: android.renderscript.Element U8_3(android.renderscript.RenderScript)>($r7);

        $z2 = virtualinvoke r2.<android.renderscript.Element: boolean isCompatible(android.renderscript.Element)>($r8);

        if $z2 != 0 goto label2;

        $r9 = r0.<android.renderscript.ScriptIntrinsicResize: android.renderscript.RenderScript mRS>;

        $r10 = staticinvoke <android.renderscript.Element: android.renderscript.Element U8_4(android.renderscript.RenderScript)>($r9);

        $z3 = virtualinvoke r2.<android.renderscript.Element: boolean isCompatible(android.renderscript.Element)>($r10);

        if $z3 != 0 goto label2;

        $r11 = r0.<android.renderscript.ScriptIntrinsicResize: android.renderscript.RenderScript mRS>;

        $r12 = staticinvoke <android.renderscript.Element: android.renderscript.Element F32(android.renderscript.RenderScript)>($r11);

        $z4 = virtualinvoke r2.<android.renderscript.Element: boolean isCompatible(android.renderscript.Element)>($r12);

        if $z4 != 0 goto label2;

        $r13 = r0.<android.renderscript.ScriptIntrinsicResize: android.renderscript.RenderScript mRS>;

        $r14 = staticinvoke <android.renderscript.Element: android.renderscript.Element F32_2(android.renderscript.RenderScript)>($r13);

        $z5 = virtualinvoke r2.<android.renderscript.Element: boolean isCompatible(android.renderscript.Element)>($r14);

        if $z5 != 0 goto label2;

        $r15 = r0.<android.renderscript.ScriptIntrinsicResize: android.renderscript.RenderScript mRS>;

        $r16 = staticinvoke <android.renderscript.Element: android.renderscript.Element F32_3(android.renderscript.RenderScript)>($r15);

        $z6 = virtualinvoke r2.<android.renderscript.Element: boolean isCompatible(android.renderscript.Element)>($r16);

        if $z6 != 0 goto label2;

        $r17 = r0.<android.renderscript.ScriptIntrinsicResize: android.renderscript.RenderScript mRS>;

        $r18 = staticinvoke <android.renderscript.Element: android.renderscript.Element F32_4(android.renderscript.RenderScript)>($r17);

        $z7 = virtualinvoke r2.<android.renderscript.Element: boolean isCompatible(android.renderscript.Element)>($r18);

        if $z7 == 0 goto label1;

        goto label2;

     label1:
        $r19 = new android.renderscript.RSIllegalArgumentException;

        specialinvoke $r19.<android.renderscript.RSIllegalArgumentException: void <init>(java.lang.String)>("Unsupported element type.");

        throw $r19;

     label2:
        r0.<android.renderscript.ScriptIntrinsicResize: android.renderscript.Allocation mInput> = r1;

        virtualinvoke r0.<android.renderscript.ScriptIntrinsicResize: void setVar(int,android.renderscript.BaseObj)>(0, r1);

        return;
    }
}
