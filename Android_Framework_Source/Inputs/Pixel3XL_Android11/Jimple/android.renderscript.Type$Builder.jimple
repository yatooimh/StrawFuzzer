public class android.renderscript.Type$Builder extends java.lang.Object
{
    int[] mArray;
    boolean mDimFaces;
    boolean mDimMipmaps;
    int mDimX;
    int mDimY;
    int mDimZ;
    android.renderscript.Element mElement;
    android.renderscript.RenderScript mRS;
    int mYuv;

    public void <init>(android.renderscript.RenderScript, android.renderscript.Element)
    {
        android.renderscript.Type$Builder r0;
        android.renderscript.RenderScript r1;
        android.renderscript.Element r2;
        int[] $r3;

        r0 := @this: android.renderscript.Type$Builder;

        r1 := @parameter0: android.renderscript.RenderScript;

        r2 := @parameter1: android.renderscript.Element;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.renderscript.Type$Builder: int mDimX> = 1;

        $r3 = newarray (int)[4];

        r0.<android.renderscript.Type$Builder: int[] mArray> = $r3;

        virtualinvoke r2.<android.renderscript.Element: void checkValid()>();

        r0.<android.renderscript.Type$Builder: android.renderscript.RenderScript mRS> = r1;

        r0.<android.renderscript.Type$Builder: android.renderscript.Element mElement> = r2;

        return;
    }

    public android.renderscript.Type create()
    {
        android.renderscript.Type$Builder r0;
        int $i0, $i1, $i2, $i4, $i5, $i6, $i7, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, i19, $i20;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        android.renderscript.Type $r1;
        android.renderscript.Element $r2, $r4;
        long $l3, $l8;
        android.renderscript.RenderScript $r3, r15;
        int[] $r5, r12, r13, $r14;
        android.renderscript.RSInvalidStateException $r6, $r7, $r8, $r9, $r10, $r11;

        r0 := @this: android.renderscript.Type$Builder;

        $i0 = r0.<android.renderscript.Type$Builder: int mDimZ>;

        if $i0 <= 0 goto label03;

        $i17 = r0.<android.renderscript.Type$Builder: int mDimX>;

        if $i17 < 1 goto label02;

        $i18 = r0.<android.renderscript.Type$Builder: int mDimY>;

        if $i18 < 1 goto label02;

        $z7 = r0.<android.renderscript.Type$Builder: boolean mDimFaces>;

        if $z7 != 0 goto label01;

        goto label03;

     label01:
        $r10 = new android.renderscript.RSInvalidStateException;

        specialinvoke $r10.<android.renderscript.RSInvalidStateException: void <init>(java.lang.String)>("Cube maps not supported with 3D types.");

        throw $r10;

     label02:
        $r9 = new android.renderscript.RSInvalidStateException;

        specialinvoke $r9.<android.renderscript.RSInvalidStateException: void <init>(java.lang.String)>("Both X and Y dimension required when Z is present.");

        throw $r9;

     label03:
        $i1 = r0.<android.renderscript.Type$Builder: int mDimY>;

        if $i1 <= 0 goto label05;

        $i16 = r0.<android.renderscript.Type$Builder: int mDimX>;

        if $i16 < 1 goto label04;

        goto label05;

     label04:
        $r8 = new android.renderscript.RSInvalidStateException;

        specialinvoke $r8.<android.renderscript.RSInvalidStateException: void <init>(java.lang.String)>("X dimension required when Y is present.");

        throw $r8;

     label05:
        $z0 = r0.<android.renderscript.Type$Builder: boolean mDimFaces>;

        if $z0 == 0 goto label07;

        $i15 = r0.<android.renderscript.Type$Builder: int mDimY>;

        if $i15 < 1 goto label06;

        goto label07;

     label06:
        $r7 = new android.renderscript.RSInvalidStateException;

        specialinvoke $r7.<android.renderscript.RSInvalidStateException: void <init>(java.lang.String)>("Cube maps require 2D Types.");

        throw $r7;

     label07:
        $i2 = r0.<android.renderscript.Type$Builder: int mYuv>;

        if $i2 == 0 goto label09;

        $i14 = r0.<android.renderscript.Type$Builder: int mDimZ>;

        if $i14 != 0 goto label08;

        $z5 = r0.<android.renderscript.Type$Builder: boolean mDimFaces>;

        if $z5 != 0 goto label08;

        $z6 = r0.<android.renderscript.Type$Builder: boolean mDimMipmaps>;

        if $z6 != 0 goto label08;

        goto label09;

     label08:
        $r11 = new android.renderscript.RSInvalidStateException;

        specialinvoke $r11.<android.renderscript.RSInvalidStateException: void <init>(java.lang.String)>("YUV only supports basic 2D.");

        throw $r11;

     label09:
        r12 = null;

        i19 = 3;

     label10:
        if i19 < 0 goto label14;

        r13 = r12;

        $r5 = r0.<android.renderscript.Type$Builder: int[] mArray>;

        $i13 = $r5[i19];

        if $i13 == 0 goto label11;

        r13 = r12;

        if r12 != null goto label11;

        r13 = newarray (int)[i19];

     label11:
        $r14 = r0.<android.renderscript.Type$Builder: int[] mArray>;

        $i20 = $r14[i19];

        if $i20 != 0 goto label13;

        if r13 != null goto label12;

        goto label13;

     label12:
        $r6 = new android.renderscript.RSInvalidStateException;

        specialinvoke $r6.<android.renderscript.RSInvalidStateException: void <init>(java.lang.String)>("Array dimensions must be contigous from 0.");

        throw $r6;

     label13:
        i19 = i19 + -1;

        r12 = r13;

        goto label10;

     label14:
        r15 = r0.<android.renderscript.Type$Builder: android.renderscript.RenderScript mRS>;

        $r1 = new android.renderscript.Type;

        $r2 = r0.<android.renderscript.Type$Builder: android.renderscript.Element mElement>;

        $l3 = virtualinvoke $r2.<android.renderscript.Element: long getID(android.renderscript.RenderScript)>(r15);

        $i7 = r0.<android.renderscript.Type$Builder: int mDimX>;

        $i6 = r0.<android.renderscript.Type$Builder: int mDimY>;

        $i5 = r0.<android.renderscript.Type$Builder: int mDimZ>;

        $z2 = r0.<android.renderscript.Type$Builder: boolean mDimMipmaps>;

        $z1 = r0.<android.renderscript.Type$Builder: boolean mDimFaces>;

        $i4 = r0.<android.renderscript.Type$Builder: int mYuv>;

        $l8 = virtualinvoke r15.<android.renderscript.RenderScript: long nTypeCreate(long,int,int,int,boolean,boolean,int)>($l3, $i7, $i6, $i5, $z2, $z1, $i4);

        $r3 = r0.<android.renderscript.Type$Builder: android.renderscript.RenderScript mRS>;

        specialinvoke $r1.<android.renderscript.Type: void <init>(long,android.renderscript.RenderScript)>($l8, $r3);

        $r4 = r0.<android.renderscript.Type$Builder: android.renderscript.Element mElement>;

        $r1.<android.renderscript.Type: android.renderscript.Element mElement> = $r4;

        $i9 = r0.<android.renderscript.Type$Builder: int mDimX>;

        $r1.<android.renderscript.Type: int mDimX> = $i9;

        $i10 = r0.<android.renderscript.Type$Builder: int mDimY>;

        $r1.<android.renderscript.Type: int mDimY> = $i10;

        $i11 = r0.<android.renderscript.Type$Builder: int mDimZ>;

        $r1.<android.renderscript.Type: int mDimZ> = $i11;

        $z3 = r0.<android.renderscript.Type$Builder: boolean mDimMipmaps>;

        $r1.<android.renderscript.Type: boolean mDimMipmaps> = $z3;

        $z4 = r0.<android.renderscript.Type$Builder: boolean mDimFaces>;

        $r1.<android.renderscript.Type: boolean mDimFaces> = $z4;

        $i12 = r0.<android.renderscript.Type$Builder: int mYuv>;

        $r1.<android.renderscript.Type: int mDimYuv> = $i12;

        $r1.<android.renderscript.Type: int[] mArrays> = r12;

        virtualinvoke $r1.<android.renderscript.Type: void calcElementCount()>();

        return $r1;
    }

    public android.renderscript.Type$Builder setArray(int, int)
    {
        android.renderscript.Type$Builder r0;
        int i0, i1;
        android.renderscript.RSIllegalArgumentException $r1;
        int[] $r2;

        r0 := @this: android.renderscript.Type$Builder;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i0 < 0 goto label1;

        if i0 >= 4 goto label1;

        $r2 = r0.<android.renderscript.Type$Builder: int[] mArray>;

        $r2[i0] = i1;

        return r0;

     label1:
        $r1 = new android.renderscript.RSIllegalArgumentException;

        specialinvoke $r1.<android.renderscript.RSIllegalArgumentException: void <init>(java.lang.String)>("Array dimension out of range.");

        throw $r1;
    }

    public android.renderscript.Type$Builder setFaces(boolean)
    {
        android.renderscript.Type$Builder r0;
        boolean z0;

        r0 := @this: android.renderscript.Type$Builder;

        z0 := @parameter0: boolean;

        r0.<android.renderscript.Type$Builder: boolean mDimFaces> = z0;

        return r0;
    }

    public android.renderscript.Type$Builder setMipmaps(boolean)
    {
        android.renderscript.Type$Builder r0;
        boolean z0;

        r0 := @this: android.renderscript.Type$Builder;

        z0 := @parameter0: boolean;

        r0.<android.renderscript.Type$Builder: boolean mDimMipmaps> = z0;

        return r0;
    }

    public android.renderscript.Type$Builder setX(int)
    {
        android.renderscript.Type$Builder r0;
        int i0;
        android.renderscript.RSIllegalArgumentException $r1;

        r0 := @this: android.renderscript.Type$Builder;

        i0 := @parameter0: int;

        if i0 < 1 goto label1;

        r0.<android.renderscript.Type$Builder: int mDimX> = i0;

        return r0;

     label1:
        $r1 = new android.renderscript.RSIllegalArgumentException;

        specialinvoke $r1.<android.renderscript.RSIllegalArgumentException: void <init>(java.lang.String)>("Values of less than 1 for Dimension X are not valid.");

        throw $r1;
    }

    public android.renderscript.Type$Builder setY(int)
    {
        android.renderscript.Type$Builder r0;
        int i0;
        android.renderscript.RSIllegalArgumentException $r1;

        r0 := @this: android.renderscript.Type$Builder;

        i0 := @parameter0: int;

        if i0 < 1 goto label1;

        r0.<android.renderscript.Type$Builder: int mDimY> = i0;

        return r0;

     label1:
        $r1 = new android.renderscript.RSIllegalArgumentException;

        specialinvoke $r1.<android.renderscript.RSIllegalArgumentException: void <init>(java.lang.String)>("Values of less than 1 for Dimension Y are not valid.");

        throw $r1;
    }

    public android.renderscript.Type$Builder setYuvFormat(int)
    {
        android.renderscript.Type$Builder r0;
        int i0;
        android.renderscript.RSIllegalArgumentException $r1;

        r0 := @this: android.renderscript.Type$Builder;

        i0 := @parameter0: int;

        if i0 == 17 goto label2;

        if i0 == 35 goto label2;

        if i0 != 842094169 goto label1;

        goto label2;

     label1:
        $r1 = new android.renderscript.RSIllegalArgumentException;

        specialinvoke $r1.<android.renderscript.RSIllegalArgumentException: void <init>(java.lang.String)>("Only ImageFormat.NV21, .YV12, and .YUV_420_888 are supported..");

        throw $r1;

     label2:
        r0.<android.renderscript.Type$Builder: int mYuv> = i0;

        return r0;
    }

    public android.renderscript.Type$Builder setZ(int)
    {
        android.renderscript.Type$Builder r0;
        int i0;
        android.renderscript.RSIllegalArgumentException $r1;

        r0 := @this: android.renderscript.Type$Builder;

        i0 := @parameter0: int;

        if i0 < 1 goto label1;

        r0.<android.renderscript.Type$Builder: int mDimZ> = i0;

        return r0;

     label1:
        $r1 = new android.renderscript.RSIllegalArgumentException;

        specialinvoke $r1.<android.renderscript.RSIllegalArgumentException: void <init>(java.lang.String)>("Values of less than 1 for Dimension Z are not valid.");

        throw $r1;
    }
}
