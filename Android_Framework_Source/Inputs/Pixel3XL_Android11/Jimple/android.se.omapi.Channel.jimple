public final class android.se.omapi.Channel extends java.lang.Object implements java.nio.channels.Channel
{
    private static final java.lang.String TAG;
    private final android.se.omapi.ISecureElementChannel mChannel;
    private final java.lang.Object mLock;
    private final android.se.omapi.SEService mService;
    private android.se.omapi.Session mSession;

    void <init>(android.se.omapi.SEService, android.se.omapi.Session, android.se.omapi.ISecureElementChannel)
    {
        android.se.omapi.Channel r0;
        android.se.omapi.SEService r1;
        android.se.omapi.Session r2;
        android.se.omapi.ISecureElementChannel r3;
        java.lang.Object $r4;
        java.lang.IllegalArgumentException $r5;

        r0 := @this: android.se.omapi.Channel;

        r1 := @parameter0: android.se.omapi.SEService;

        r2 := @parameter1: android.se.omapi.Session;

        r3 := @parameter2: android.se.omapi.ISecureElementChannel;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r4 = new java.lang.Object;

        specialinvoke $r4.<java.lang.Object: void <init>()>();

        r0.<android.se.omapi.Channel: java.lang.Object mLock> = $r4;

        if r1 == null goto label1;

        if r2 == null goto label1;

        if r3 == null goto label1;

        r0.<android.se.omapi.Channel: android.se.omapi.SEService mService> = r1;

        r0.<android.se.omapi.Channel: android.se.omapi.Session mSession> = r2;

        r0.<android.se.omapi.Channel: android.se.omapi.ISecureElementChannel mChannel> = r3;

        return;

     label1:
        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Parameters cannot be null");

        throw $r5;
    }

    public void close()
    {
        android.se.omapi.Channel r0;
        java.lang.Object r1;
        boolean $z0;
        android.se.omapi.ISecureElementChannel $r2;
        java.lang.Exception $r3;
        java.lang.Throwable $r4;

        r0 := @this: android.se.omapi.Channel;

        $z0 = virtualinvoke r0.<android.se.omapi.Channel: boolean isOpen()>();

        if $z0 == 0 goto label10;

        r1 = r0.<android.se.omapi.Channel: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $r2 = r0.<android.se.omapi.Channel: android.se.omapi.ISecureElementChannel mChannel>;

        interfaceinvoke $r2.<android.se.omapi.ISecureElementChannel: void close()>();

     label02:
        goto label06;

     label03:
        $r4 := @caughtexception;

        goto label08;

     label04:
        $r3 := @caughtexception;

     label05:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("OMAPI.Channel", "Error closing channel", $r3);

     label06:
        exitmonitor r1;

     label07:
        goto label10;

     label08:
        exitmonitor r1;

     label09:
        throw $r4;

     label10:
        return;

        catch java.lang.Exception from label01 to label02 with label04;
        catch java.lang.Throwable from label01 to label02 with label03;
        catch java.lang.Throwable from label05 to label06 with label03;
        catch java.lang.Throwable from label06 to label07 with label03;
        catch java.lang.Throwable from label08 to label09 with label03;
    }

    public byte[] getSelectResponse()
    {
        android.se.omapi.Channel r0;
        byte[] r1, r8;
        android.se.omapi.SEService $r2;
        boolean $z0;
        java.lang.IllegalStateException $r3, $r6;
        android.se.omapi.ISecureElementChannel $r4;
        int $i0;
        android.os.RemoteException $r5;
        java.lang.String $r7;

        r0 := @this: android.se.omapi.Channel;

        $r2 = r0.<android.se.omapi.Channel: android.se.omapi.SEService mService>;

        $z0 = virtualinvoke $r2.<android.se.omapi.SEService: boolean isConnected()>();

        if $z0 == 0 goto label5;

     label1:
        $r4 = r0.<android.se.omapi.Channel: android.se.omapi.ISecureElementChannel mChannel>;

        r1 = interfaceinvoke $r4.<android.se.omapi.ISecureElementChannel: byte[] getSelectResponse()>();

     label2:
        r8 = r1;

        if r1 == null goto label3;

        r8 = r1;

        $i0 = lengthof r1;

        if $i0 != 0 goto label3;

        r8 = null;

     label3:
        return r8;

     label4:
        $r5 := @caughtexception;

        $r6 = new java.lang.IllegalStateException;

        $r7 = virtualinvoke $r5.<android.os.RemoteException: java.lang.String getMessage()>();

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r7);

        throw $r6;

     label5:
        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("service not connected to system");

        throw $r3;

        catch android.os.RemoteException from label1 to label2 with label4;
    }

    public android.se.omapi.Session getSession()
    {
        android.se.omapi.Channel r0;
        android.se.omapi.Session $r1;

        r0 := @this: android.se.omapi.Channel;

        $r1 = r0.<android.se.omapi.Channel: android.se.omapi.Session mSession>;

        return $r1;
    }

    public boolean isBasicChannel()
    {
        android.se.omapi.Channel r0;
        boolean z0, $z1;
        android.se.omapi.SEService $r2;
        java.lang.IllegalStateException $r3, $r6;
        android.se.omapi.ISecureElementChannel $r4;
        android.os.RemoteException $r5;
        java.lang.String $r7;

        r0 := @this: android.se.omapi.Channel;

        $r2 = r0.<android.se.omapi.Channel: android.se.omapi.SEService mService>;

        $z1 = virtualinvoke $r2.<android.se.omapi.SEService: boolean isConnected()>();

        if $z1 == 0 goto label4;

     label1:
        $r4 = r0.<android.se.omapi.Channel: android.se.omapi.ISecureElementChannel mChannel>;

        z0 = interfaceinvoke $r4.<android.se.omapi.ISecureElementChannel: boolean isBasicChannel()>();

     label2:
        return z0;

     label3:
        $r5 := @caughtexception;

        $r6 = new java.lang.IllegalStateException;

        $r7 = virtualinvoke $r5.<android.os.RemoteException: java.lang.String getMessage()>();

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r7);

        throw $r6;

     label4:
        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("service not connected to system");

        throw $r3;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean isOpen()
    {
        android.se.omapi.Channel r0;
        boolean z0, $z1, $z2;
        android.se.omapi.SEService $r2;
        android.se.omapi.ISecureElementChannel $r3;
        android.os.RemoteException $r4;

        r0 := @this: android.se.omapi.Channel;

        $r2 = r0.<android.se.omapi.Channel: android.se.omapi.SEService mService>;

        $z1 = virtualinvoke $r2.<android.se.omapi.SEService: boolean isConnected()>();

        if $z1 != 0 goto label1;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("OMAPI.Channel", "service not connected to system");

        return 0;

     label1:
        $r3 = r0.<android.se.omapi.Channel: android.se.omapi.ISecureElementChannel mChannel>;

        z0 = interfaceinvoke $r3.<android.se.omapi.ISecureElementChannel: boolean isClosed()>();

     label2:
        $z2 = z0 ^ 1;

        return $z2;

     label3:
        $r4 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("OMAPI.Channel", "Exception in isClosed()");

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean selectNext() throws java.io.IOException
    {
        android.se.omapi.Channel r0;
        boolean z0, $z1;
        android.se.omapi.SEService $r2;
        java.lang.IllegalStateException $r3, $r7;
        android.se.omapi.ISecureElementChannel $r4;
        java.lang.Throwable $r5;
        android.os.RemoteException $r6;
        java.lang.String $r8, $r11;
        android.os.ServiceSpecificException $r9;
        java.io.IOException $r10;
        java.lang.Object r12;

        r0 := @this: android.se.omapi.Channel;

        $r2 = r0.<android.se.omapi.Channel: android.se.omapi.SEService mService>;

        $z1 = virtualinvoke $r2.<android.se.omapi.SEService: boolean isConnected()>();

        if $z1 == 0 goto label9;

     label1:
        r12 = r0.<android.se.omapi.Channel: java.lang.Object mLock>;

        entermonitor r12;

     label2:
        $r4 = r0.<android.se.omapi.Channel: android.se.omapi.ISecureElementChannel mChannel>;

        z0 = interfaceinvoke $r4.<android.se.omapi.ISecureElementChannel: boolean selectNext()>();

        exitmonitor r12;

     label3:
        return z0;

     label4:
        $r5 := @caughtexception;

     label5:
        exitmonitor r12;

     label6:
        throw $r5;

     label7:
        $r6 := @caughtexception;

        $r7 = new java.lang.IllegalStateException;

        $r8 = virtualinvoke $r6.<android.os.RemoteException: java.lang.String getMessage()>();

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r8);

        throw $r7;

     label8:
        $r9 := @caughtexception;

        $r10 = new java.io.IOException;

        $r11 = virtualinvoke $r9.<android.os.ServiceSpecificException: java.lang.String getMessage()>();

        specialinvoke $r10.<java.io.IOException: void <init>(java.lang.String)>($r11);

        throw $r10;

     label9:
        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("service not connected to system");

        throw $r3;

        catch android.os.ServiceSpecificException from label1 to label2 with label8;
        catch android.os.RemoteException from label1 to label2 with label7;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
        catch android.os.ServiceSpecificException from label6 to label7 with label8;
        catch android.os.RemoteException from label6 to label7 with label7;
    }

    public byte[] transmit(byte[]) throws java.io.IOException
    {
        android.se.omapi.Channel r0;
        java.lang.Object r1;
        android.se.omapi.SEService $r2;
        boolean $z0;
        java.lang.IllegalStateException $r3, r15;
        android.se.omapi.ISecureElementChannel $r4;
        android.os.RemoteException $r5;
        java.lang.String $r6, $r9;
        java.lang.Throwable $r7;
        android.os.ServiceSpecificException $r8;
        byte[] r10, r11;
        java.io.IOException r12, r17;

        r0 := @this: android.se.omapi.Channel;

        r10 := @parameter0: byte[];

        $r2 = r0.<android.se.omapi.Channel: android.se.omapi.SEService mService>;

        $z0 = virtualinvoke $r2.<android.se.omapi.SEService: boolean isConnected()>();

        if $z0 == 0 goto label13;

        r1 = r0.<android.se.omapi.Channel: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $r4 = r0.<android.se.omapi.Channel: android.se.omapi.ISecureElementChannel mChannel>;

        r11 = interfaceinvoke $r4.<android.se.omapi.ISecureElementChannel: byte[] transmit(byte[])>(r10);

     label02:
        if r11 == null goto label05;

     label03:
        exitmonitor r1;

     label04:
        return r11;

     label05:
        r12 = new java.io.IOException;

        specialinvoke r12.<java.io.IOException: void <init>(java.lang.String)>("Error in communicating with Secure Element");

        throw r12;

     label06:
        $r7 := @caughtexception;

        goto label11;

     label07:
        $r5 := @caughtexception;

     label08:
        r15 = new java.lang.IllegalStateException;

        $r6 = virtualinvoke $r5.<android.os.RemoteException: java.lang.String getMessage()>();

        specialinvoke r15.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r6);

        throw r15;

     label09:
        $r8 := @caughtexception;

     label10:
        r17 = new java.io.IOException;

        $r9 = virtualinvoke $r8.<android.os.ServiceSpecificException: java.lang.String getMessage()>();

        specialinvoke r17.<java.io.IOException: void <init>(java.lang.String)>($r9);

        throw r17;

     label11:
        exitmonitor r1;

     label12:
        throw $r7;

     label13:
        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("service not connected to system");

        throw $r3;

        catch android.os.ServiceSpecificException from label01 to label02 with label09;
        catch android.os.RemoteException from label01 to label02 with label07;
        catch java.lang.Throwable from label01 to label02 with label06;
        catch java.lang.Throwable from label03 to label04 with label06;
        catch android.os.ServiceSpecificException from label05 to label06 with label09;
        catch android.os.RemoteException from label05 to label06 with label07;
        catch java.lang.Throwable from label05 to label06 with label06;
        catch java.lang.Throwable from label08 to label09 with label06;
        catch java.lang.Throwable from label10 to label11 with label06;
        catch java.lang.Throwable from label11 to label12 with label06;
    }

    public static void <clinit>()
    {
        <android.se.omapi.Channel: java.lang.String TAG> = "OMAPI.Channel";

        return;
    }
}
