public final class android.se.omapi.Reader extends java.lang.Object
{
    private static final java.lang.String TAG;
    private final java.lang.Object mLock;
    private final java.lang.String mName;
    private android.se.omapi.ISecureElementReader mReader;
    private final android.se.omapi.SEService mService;

    void <init>(android.se.omapi.SEService, java.lang.String, android.se.omapi.ISecureElementReader)
    {
        android.se.omapi.Reader r0;
        android.se.omapi.SEService r1;
        java.lang.String r2;
        android.se.omapi.ISecureElementReader r3;
        java.lang.Object $r4;
        java.lang.IllegalArgumentException $r5;

        r0 := @this: android.se.omapi.Reader;

        r1 := @parameter0: android.se.omapi.SEService;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.se.omapi.ISecureElementReader;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r4 = new java.lang.Object;

        specialinvoke $r4.<java.lang.Object: void <init>()>();

        r0.<android.se.omapi.Reader: java.lang.Object mLock> = $r4;

        if r3 == null goto label1;

        if r1 == null goto label1;

        if r2 == null goto label1;

        r0.<android.se.omapi.Reader: java.lang.String mName> = r2;

        r0.<android.se.omapi.Reader: android.se.omapi.SEService mService> = r1;

        r0.<android.se.omapi.Reader: android.se.omapi.ISecureElementReader mReader> = r3;

        return;

     label1:
        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Parameters cannot be null");

        throw $r5;
    }

    public void closeSessions()
    {
        android.se.omapi.Reader r0;
        java.lang.Object r1;
        android.se.omapi.SEService $r2;
        boolean $z0;
        android.se.omapi.ISecureElementReader $r3;
        java.lang.Throwable $r4;
        android.os.RemoteException $r5;

        r0 := @this: android.se.omapi.Reader;

        $r2 = r0.<android.se.omapi.Reader: android.se.omapi.SEService mService>;

        $z0 = virtualinvoke $r2.<android.se.omapi.SEService: boolean isConnected()>();

        if $z0 != 0 goto label1;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("OMAPI.Reader", "service is not connected");

        return;

     label1:
        r1 = r0.<android.se.omapi.Reader: java.lang.Object mLock>;

        entermonitor r1;

     label2:
        $r3 = r0.<android.se.omapi.Reader: android.se.omapi.ISecureElementReader mReader>;

        interfaceinvoke $r3.<android.se.omapi.ISecureElementReader: void closeSessions()>();

     label3:
        goto label6;

     label4:
        $r4 := @caughtexception;

        goto label8;

     label5:
        $r5 := @caughtexception;

     label6:
        exitmonitor r1;

     label7:
        return;

     label8:
        exitmonitor r1;

     label9:
        throw $r4;

        catch android.os.RemoteException from label2 to label3 with label5;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label6 to label7 with label4;
        catch java.lang.Throwable from label8 to label9 with label4;
    }

    public java.lang.String getName()
    {
        android.se.omapi.Reader r0;
        java.lang.String $r1;

        r0 := @this: android.se.omapi.Reader;

        $r1 = r0.<android.se.omapi.Reader: java.lang.String mName>;

        return $r1;
    }

    public android.se.omapi.SEService getSEService()
    {
        android.se.omapi.Reader r0;
        android.se.omapi.SEService $r1;

        r0 := @this: android.se.omapi.Reader;

        $r1 = r0.<android.se.omapi.Reader: android.se.omapi.SEService mService>;

        return $r1;
    }

    public boolean isSecureElementPresent()
    {
        android.se.omapi.Reader r0;
        boolean z0, $z1;
        android.se.omapi.SEService $r2;
        java.lang.IllegalStateException $r3, $r6;
        android.se.omapi.ISecureElementReader $r4;
        android.os.RemoteException $r5;

        r0 := @this: android.se.omapi.Reader;

        $r2 = r0.<android.se.omapi.Reader: android.se.omapi.SEService mService>;

        $z1 = virtualinvoke $r2.<android.se.omapi.SEService: boolean isConnected()>();

        if $z1 == 0 goto label4;

     label1:
        $r4 = r0.<android.se.omapi.Reader: android.se.omapi.ISecureElementReader mReader>;

        z0 = interfaceinvoke $r4.<android.se.omapi.ISecureElementReader: boolean isSecureElementPresent()>();

     label2:
        return z0;

     label3:
        $r5 := @caughtexception;

        $r6 = new java.lang.IllegalStateException;

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Error in isSecureElementPresent()");

        throw $r6;

     label4:
        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("service is not connected");

        throw $r3;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.se.omapi.Session openSession() throws java.io.IOException
    {
        android.se.omapi.Reader r0;
        java.lang.Object r1;
        android.se.omapi.SEService $r2, $r5;
        boolean $z0;
        java.lang.IllegalStateException $r3, r16;
        android.se.omapi.ISecureElementReader $r4;
        android.os.ServiceSpecificException $r6;
        java.lang.String $r7, $r10;
        java.lang.Throwable $r8;
        android.os.RemoteException $r9;
        android.se.omapi.ISecureElementSession r11;
        android.se.omapi.Session r12;
        java.io.IOException r13, r18;

        r0 := @this: android.se.omapi.Reader;

        $r2 = r0.<android.se.omapi.Reader: android.se.omapi.SEService mService>;

        $z0 = virtualinvoke $r2.<android.se.omapi.SEService: boolean isConnected()>();

        if $z0 == 0 goto label13;

        r1 = r0.<android.se.omapi.Reader: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $r4 = r0.<android.se.omapi.Reader: android.se.omapi.ISecureElementReader mReader>;

        r11 = interfaceinvoke $r4.<android.se.omapi.ISecureElementReader: android.se.omapi.ISecureElementSession openSession()>();

     label02:
        if r11 == null goto label05;

     label03:
        r12 = new android.se.omapi.Session;

        $r5 = r0.<android.se.omapi.Reader: android.se.omapi.SEService mService>;

        specialinvoke r12.<android.se.omapi.Session: void <init>(android.se.omapi.SEService,android.se.omapi.ISecureElementSession,android.se.omapi.Reader)>($r5, r11, r0);

        exitmonitor r1;

     label04:
        return r12;

     label05:
        r13 = new java.io.IOException;

        specialinvoke r13.<java.io.IOException: void <init>(java.lang.String)>("service session is null.");

        throw r13;

     label06:
        $r8 := @caughtexception;

        goto label11;

     label07:
        $r9 := @caughtexception;

     label08:
        r16 = new java.lang.IllegalStateException;

        $r10 = virtualinvoke $r9.<android.os.RemoteException: java.lang.String getMessage()>();

        specialinvoke r16.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r10);

        throw r16;

     label09:
        $r6 := @caughtexception;

     label10:
        r18 = new java.io.IOException;

        $r7 = virtualinvoke $r6.<android.os.ServiceSpecificException: java.lang.String getMessage()>();

        specialinvoke r18.<java.io.IOException: void <init>(java.lang.String)>($r7);

        throw r18;

     label11:
        exitmonitor r1;

     label12:
        throw $r8;

     label13:
        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("service is not connected");

        throw $r3;

        catch android.os.ServiceSpecificException from label01 to label02 with label09;
        catch android.os.RemoteException from label01 to label02 with label07;
        catch java.lang.Throwable from label01 to label02 with label06;
        catch java.lang.Throwable from label03 to label04 with label06;
        catch java.lang.Throwable from label05 to label06 with label06;
        catch java.lang.Throwable from label08 to label09 with label06;
        catch java.lang.Throwable from label10 to label11 with label06;
        catch java.lang.Throwable from label11 to label12 with label06;
    }

    public boolean reset()
    {
        android.se.omapi.Reader r0;
        java.lang.Object r1;
        boolean z0, $z1;
        android.se.omapi.SEService $r2;
        android.se.omapi.ISecureElementReader $r3;
        java.lang.Throwable $r4;
        android.os.RemoteException $r5;

        r0 := @this: android.se.omapi.Reader;

        $r2 = r0.<android.se.omapi.Reader: android.se.omapi.SEService mService>;

        $z1 = virtualinvoke $r2.<android.se.omapi.SEService: boolean isConnected()>();

        if $z1 != 0 goto label01;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("OMAPI.Reader", "service is not connected");

        return 0;

     label01:
        r1 = r0.<android.se.omapi.Reader: java.lang.Object mLock>;

        entermonitor r1;

     label02:
        virtualinvoke r0.<android.se.omapi.Reader: void closeSessions()>();

        $r3 = r0.<android.se.omapi.Reader: android.se.omapi.ISecureElementReader mReader>;

        z0 = interfaceinvoke $r3.<android.se.omapi.ISecureElementReader: boolean reset()>();

     label03:
        exitmonitor r1;

     label04:
        return z0;

     label05:
        $r4 := @caughtexception;

        goto label09;

     label06:
        $r5 := @caughtexception;

     label07:
        exitmonitor r1;

     label08:
        return 0;

     label09:
        exitmonitor r1;

     label10:
        throw $r4;

        catch android.os.RemoteException from label02 to label03 with label06;
        catch java.lang.Throwable from label02 to label03 with label05;
        catch java.lang.Throwable from label03 to label04 with label05;
        catch java.lang.Throwable from label07 to label08 with label05;
        catch java.lang.Throwable from label09 to label10 with label05;
    }

    public static void <clinit>()
    {
        <android.se.omapi.Reader: java.lang.String TAG> = "OMAPI.Reader";

        return;
    }
}
