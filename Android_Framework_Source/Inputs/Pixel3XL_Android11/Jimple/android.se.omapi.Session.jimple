public final class android.se.omapi.Session extends java.lang.Object
{
    private static final java.lang.String TAG;
    private final java.lang.Object mLock;
    private final android.se.omapi.Reader mReader;
    private final android.se.omapi.SEService mService;
    private final android.se.omapi.ISecureElementSession mSession;

    void <init>(android.se.omapi.SEService, android.se.omapi.ISecureElementSession, android.se.omapi.Reader)
    {
        android.se.omapi.Session r0;
        android.se.omapi.SEService r1;
        android.se.omapi.ISecureElementSession r2;
        android.se.omapi.Reader r3;
        java.lang.Object $r4;
        java.lang.IllegalArgumentException $r5;

        r0 := @this: android.se.omapi.Session;

        r1 := @parameter0: android.se.omapi.SEService;

        r2 := @parameter1: android.se.omapi.ISecureElementSession;

        r3 := @parameter2: android.se.omapi.Reader;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r4 = new java.lang.Object;

        specialinvoke $r4.<java.lang.Object: void <init>()>();

        r0.<android.se.omapi.Session: java.lang.Object mLock> = $r4;

        if r1 == null goto label1;

        if r3 == null goto label1;

        if r2 == null goto label1;

        r0.<android.se.omapi.Session: android.se.omapi.SEService mService> = r1;

        r0.<android.se.omapi.Session: android.se.omapi.Reader mReader> = r3;

        r0.<android.se.omapi.Session: android.se.omapi.ISecureElementSession mSession> = r2;

        return;

     label1:
        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Parameters cannot be null");

        throw $r5;
    }

    public void close()
    {
        android.se.omapi.Session r0;
        java.lang.Object r1;
        android.se.omapi.SEService $r2;
        boolean $z0;
        android.se.omapi.ISecureElementSession $r3;
        android.os.RemoteException $r4;
        java.lang.Throwable $r5;

        r0 := @this: android.se.omapi.Session;

        $r2 = r0.<android.se.omapi.Session: android.se.omapi.SEService mService>;

        $z0 = virtualinvoke $r2.<android.se.omapi.SEService: boolean isConnected()>();

        if $z0 != 0 goto label01;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("OMAPI.Session", "service not connected to system");

        return;

     label01:
        r1 = r0.<android.se.omapi.Session: java.lang.Object mLock>;

        entermonitor r1;

     label02:
        $r3 = r0.<android.se.omapi.Session: android.se.omapi.ISecureElementSession mSession>;

        interfaceinvoke $r3.<android.se.omapi.ISecureElementSession: void close()>();

     label03:
        goto label07;

     label04:
        $r5 := @caughtexception;

        goto label09;

     label05:
        $r4 := @caughtexception;

     label06:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("OMAPI.Session", "Error closing session", $r4);

     label07:
        exitmonitor r1;

     label08:
        return;

     label09:
        exitmonitor r1;

     label10:
        throw $r5;

        catch android.os.RemoteException from label02 to label03 with label05;
        catch java.lang.Throwable from label02 to label03 with label04;
        catch java.lang.Throwable from label06 to label07 with label04;
        catch java.lang.Throwable from label07 to label08 with label04;
        catch java.lang.Throwable from label09 to label10 with label04;
    }

    public void closeChannels()
    {
        android.se.omapi.Session r0;
        java.lang.Object r1;
        android.se.omapi.SEService $r2;
        boolean $z0;
        android.se.omapi.ISecureElementSession $r3;
        android.os.RemoteException $r4;
        java.lang.Throwable $r5;

        r0 := @this: android.se.omapi.Session;

        $r2 = r0.<android.se.omapi.Session: android.se.omapi.SEService mService>;

        $z0 = virtualinvoke $r2.<android.se.omapi.SEService: boolean isConnected()>();

        if $z0 != 0 goto label01;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("OMAPI.Session", "service not connected to system");

        return;

     label01:
        r1 = r0.<android.se.omapi.Session: java.lang.Object mLock>;

        entermonitor r1;

     label02:
        $r3 = r0.<android.se.omapi.Session: android.se.omapi.ISecureElementSession mSession>;

        interfaceinvoke $r3.<android.se.omapi.ISecureElementSession: void closeChannels()>();

     label03:
        goto label07;

     label04:
        $r5 := @caughtexception;

        goto label09;

     label05:
        $r4 := @caughtexception;

     label06:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("OMAPI.Session", "Error closing channels", $r4);

     label07:
        exitmonitor r1;

     label08:
        return;

     label09:
        exitmonitor r1;

     label10:
        throw $r5;

        catch android.os.RemoteException from label02 to label03 with label05;
        catch java.lang.Throwable from label02 to label03 with label04;
        catch java.lang.Throwable from label06 to label07 with label04;
        catch java.lang.Throwable from label07 to label08 with label04;
        catch java.lang.Throwable from label09 to label10 with label04;
    }

    public byte[] getATR()
    {
        android.se.omapi.Session r0;
        android.se.omapi.SEService $r1;
        boolean $z0;
        java.lang.IllegalStateException $r2, $r5;
        android.se.omapi.ISecureElementSession $r3;
        android.os.RemoteException $r4;
        java.lang.String $r6;
        byte[] r7;

        r0 := @this: android.se.omapi.Session;

        $r1 = r0.<android.se.omapi.Session: android.se.omapi.SEService mService>;

        $z0 = virtualinvoke $r1.<android.se.omapi.SEService: boolean isConnected()>();

        if $z0 == 0 goto label4;

     label1:
        $r3 = r0.<android.se.omapi.Session: android.se.omapi.ISecureElementSession mSession>;

        r7 = interfaceinvoke $r3.<android.se.omapi.ISecureElementSession: byte[] getAtr()>();

     label2:
        return r7;

     label3:
        $r4 := @caughtexception;

        $r5 = new java.lang.IllegalStateException;

        $r6 = virtualinvoke $r4.<android.os.RemoteException: java.lang.String getMessage()>();

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r6);

        throw $r5;

     label4:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("service not connected to system");

        throw $r2;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.se.omapi.Reader getReader()
    {
        android.se.omapi.Session r0;
        android.se.omapi.Reader $r1;

        r0 := @this: android.se.omapi.Session;

        $r1 = r0.<android.se.omapi.Session: android.se.omapi.Reader mReader>;

        return $r1;
    }

    public boolean isClosed()
    {
        android.se.omapi.Session r0;
        boolean z0;
        android.se.omapi.ISecureElementSession $r2;
        android.os.RemoteException $r3;

        r0 := @this: android.se.omapi.Session;

     label1:
        $r2 = r0.<android.se.omapi.Session: android.se.omapi.ISecureElementSession mSession>;

        z0 = interfaceinvoke $r2.<android.se.omapi.ISecureElementSession: boolean isClosed()>();

     label2:
        return z0;

     label3:
        $r3 := @caughtexception;

        return 1;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.se.omapi.Channel openBasicChannel(byte[]) throws java.io.IOException
    {
        android.se.omapi.Session r0;
        byte[] r1;
        android.se.omapi.Channel $r2;

        r0 := @this: android.se.omapi.Session;

        r1 := @parameter0: byte[];

        $r2 = virtualinvoke r0.<android.se.omapi.Session: android.se.omapi.Channel openBasicChannel(byte[],byte)>(r1, 0);

        return $r2;
    }

    public android.se.omapi.Channel openBasicChannel(byte[], byte) throws java.io.IOException
    {
        android.se.omapi.Session r0;
        byte b0;
        java.lang.Object r1;
        android.se.omapi.SEService $r2, $r6, $r8;
        boolean $z0;
        java.lang.IllegalStateException $r3, r21, r24;
        android.se.omapi.Reader $r4;
        android.se.omapi.ISecureElementSession $r5;
        android.se.omapi.ISecureElementListener $r7;
        android.os.ServiceSpecificException $r9;
        int $i1, $i2;
        java.lang.String $r10, $r11, $r12, $r15;
        java.lang.Throwable $r13;
        android.os.RemoteException $r14;
        byte[] r16;
        android.se.omapi.ISecureElementChannel r17;
        android.se.omapi.Channel r18;
        java.util.NoSuchElementException r23;
        java.io.IOException r25;

        r0 := @this: android.se.omapi.Session;

        r16 := @parameter0: byte[];

        b0 := @parameter1: byte;

        $r2 = r0.<android.se.omapi.Session: android.se.omapi.SEService mService>;

        $z0 = virtualinvoke $r2.<android.se.omapi.SEService: boolean isConnected()>();

        if $z0 == 0 goto label17;

        r1 = r0.<android.se.omapi.Session: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $r5 = r0.<android.se.omapi.Session: android.se.omapi.ISecureElementSession mSession>;

        $r4 = r0.<android.se.omapi.Session: android.se.omapi.Reader mReader>;

        $r6 = virtualinvoke $r4.<android.se.omapi.Reader: android.se.omapi.SEService getSEService()>();

        $r7 = virtualinvoke $r6.<android.se.omapi.SEService: android.se.omapi.ISecureElementListener getListener()>();

        r17 = interfaceinvoke $r5.<android.se.omapi.ISecureElementSession: android.se.omapi.ISecureElementChannel openBasicChannel(byte[],byte,android.se.omapi.ISecureElementListener)>(r16, b0, $r7);

     label02:
        if r17 != null goto label05;

     label03:
        exitmonitor r1;

     label04:
        return null;

     label05:
        r18 = new android.se.omapi.Channel;

        $r8 = r0.<android.se.omapi.Session: android.se.omapi.SEService mService>;

        specialinvoke r18.<android.se.omapi.Channel: void <init>(android.se.omapi.SEService,android.se.omapi.Session,android.se.omapi.ISecureElementChannel)>($r8, r0, r17);

     label06:
        exitmonitor r1;

     label07:
        return r18;

     label08:
        $r13 := @caughtexception;

        goto label15;

     label09:
        $r14 := @caughtexception;

     label10:
        r21 = new java.lang.IllegalStateException;

        $r15 = virtualinvoke $r14.<android.os.RemoteException: java.lang.String getMessage()>();

        specialinvoke r21.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r15);

        throw r21;

     label11:
        $r9 := @caughtexception;

     label12:
        $i1 = $r9.<android.os.ServiceSpecificException: int errorCode>;

        if $i1 == 1 goto label14;

        $i2 = $r9.<android.os.ServiceSpecificException: int errorCode>;

        if $i2 != 2 goto label13;

        r23 = new java.util.NoSuchElementException;

        $r12 = virtualinvoke $r9.<android.os.ServiceSpecificException: java.lang.String getMessage()>();

        specialinvoke r23.<java.util.NoSuchElementException: void <init>(java.lang.String)>($r12);

        throw r23;

     label13:
        r24 = new java.lang.IllegalStateException;

        $r11 = virtualinvoke $r9.<android.os.ServiceSpecificException: java.lang.String getMessage()>();

        specialinvoke r24.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r11);

        throw r24;

     label14:
        r25 = new java.io.IOException;

        $r10 = virtualinvoke $r9.<android.os.ServiceSpecificException: java.lang.String getMessage()>();

        specialinvoke r25.<java.io.IOException: void <init>(java.lang.String)>($r10);

        throw r25;

     label15:
        exitmonitor r1;

     label16:
        throw $r13;

     label17:
        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("service not connected to system");

        throw $r3;

        catch android.os.ServiceSpecificException from label01 to label02 with label11;
        catch android.os.RemoteException from label01 to label02 with label09;
        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch android.os.ServiceSpecificException from label05 to label06 with label11;
        catch android.os.RemoteException from label05 to label06 with label09;
        catch java.lang.Throwable from label05 to label06 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label10 to label11 with label08;
        catch java.lang.Throwable from label12 to label13 with label08;
        catch java.lang.Throwable from label13 to label14 with label08;
        catch java.lang.Throwable from label14 to label15 with label08;
        catch java.lang.Throwable from label15 to label16 with label08;
    }

    public android.se.omapi.Channel openLogicalChannel(byte[]) throws java.io.IOException
    {
        android.se.omapi.Session r0;
        byte[] r1;
        android.se.omapi.Channel $r2;

        r0 := @this: android.se.omapi.Session;

        r1 := @parameter0: byte[];

        $r2 = virtualinvoke r0.<android.se.omapi.Session: android.se.omapi.Channel openLogicalChannel(byte[],byte)>(r1, 0);

        return $r2;
    }

    public android.se.omapi.Channel openLogicalChannel(byte[], byte) throws java.io.IOException
    {
        android.se.omapi.Session r0;
        byte b0;
        java.lang.Object r1;
        android.se.omapi.SEService $r2, $r6, $r8;
        boolean $z0;
        java.lang.IllegalStateException $r3, r21, r24;
        android.se.omapi.Reader $r4;
        android.se.omapi.ISecureElementSession $r5;
        android.se.omapi.ISecureElementListener $r7;
        android.os.ServiceSpecificException $r9;
        int $i1, $i2;
        java.lang.String $r10, $r11, $r12, $r15;
        java.lang.Throwable $r13;
        android.os.RemoteException $r14;
        byte[] r16;
        android.se.omapi.ISecureElementChannel r17;
        android.se.omapi.Channel r18;
        java.util.NoSuchElementException r23;
        java.io.IOException r25;

        r0 := @this: android.se.omapi.Session;

        r16 := @parameter0: byte[];

        b0 := @parameter1: byte;

        $r2 = r0.<android.se.omapi.Session: android.se.omapi.SEService mService>;

        $z0 = virtualinvoke $r2.<android.se.omapi.SEService: boolean isConnected()>();

        if $z0 == 0 goto label17;

        r1 = r0.<android.se.omapi.Session: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $r5 = r0.<android.se.omapi.Session: android.se.omapi.ISecureElementSession mSession>;

        $r4 = r0.<android.se.omapi.Session: android.se.omapi.Reader mReader>;

        $r6 = virtualinvoke $r4.<android.se.omapi.Reader: android.se.omapi.SEService getSEService()>();

        $r7 = virtualinvoke $r6.<android.se.omapi.SEService: android.se.omapi.ISecureElementListener getListener()>();

        r17 = interfaceinvoke $r5.<android.se.omapi.ISecureElementSession: android.se.omapi.ISecureElementChannel openLogicalChannel(byte[],byte,android.se.omapi.ISecureElementListener)>(r16, b0, $r7);

     label02:
        if r17 != null goto label05;

     label03:
        exitmonitor r1;

     label04:
        return null;

     label05:
        r18 = new android.se.omapi.Channel;

        $r8 = r0.<android.se.omapi.Session: android.se.omapi.SEService mService>;

        specialinvoke r18.<android.se.omapi.Channel: void <init>(android.se.omapi.SEService,android.se.omapi.Session,android.se.omapi.ISecureElementChannel)>($r8, r0, r17);

     label06:
        exitmonitor r1;

     label07:
        return r18;

     label08:
        $r13 := @caughtexception;

        goto label15;

     label09:
        $r14 := @caughtexception;

     label10:
        r21 = new java.lang.IllegalStateException;

        $r15 = virtualinvoke $r14.<android.os.RemoteException: java.lang.String getMessage()>();

        specialinvoke r21.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r15);

        throw r21;

     label11:
        $r9 := @caughtexception;

     label12:
        $i1 = $r9.<android.os.ServiceSpecificException: int errorCode>;

        if $i1 == 1 goto label14;

        $i2 = $r9.<android.os.ServiceSpecificException: int errorCode>;

        if $i2 != 2 goto label13;

        r23 = new java.util.NoSuchElementException;

        $r12 = virtualinvoke $r9.<android.os.ServiceSpecificException: java.lang.String getMessage()>();

        specialinvoke r23.<java.util.NoSuchElementException: void <init>(java.lang.String)>($r12);

        throw r23;

     label13:
        r24 = new java.lang.IllegalStateException;

        $r11 = virtualinvoke $r9.<android.os.ServiceSpecificException: java.lang.String getMessage()>();

        specialinvoke r24.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r11);

        throw r24;

     label14:
        r25 = new java.io.IOException;

        $r10 = virtualinvoke $r9.<android.os.ServiceSpecificException: java.lang.String getMessage()>();

        specialinvoke r25.<java.io.IOException: void <init>(java.lang.String)>($r10);

        throw r25;

     label15:
        exitmonitor r1;

     label16:
        throw $r13;

     label17:
        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("service not connected to system");

        throw $r3;

        catch android.os.ServiceSpecificException from label01 to label02 with label11;
        catch android.os.RemoteException from label01 to label02 with label09;
        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch android.os.ServiceSpecificException from label05 to label06 with label11;
        catch android.os.RemoteException from label05 to label06 with label09;
        catch java.lang.Throwable from label05 to label06 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label10 to label11 with label08;
        catch java.lang.Throwable from label12 to label13 with label08;
        catch java.lang.Throwable from label13 to label14 with label08;
        catch java.lang.Throwable from label14 to label15 with label08;
        catch java.lang.Throwable from label15 to label16 with label08;
    }

    public static void <clinit>()
    {
        <android.se.omapi.Session: java.lang.String TAG> = "OMAPI.Session";

        return;
    }
}
