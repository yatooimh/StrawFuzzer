public class android.security.ConfirmationPrompt extends java.lang.Object
{
    private static final java.lang.String TAG;
    private static final int UI_OPTION_ACCESSIBILITY_INVERTED_FLAG;
    private static final int UI_OPTION_ACCESSIBILITY_MAGNIFIED_FLAG;
    private android.security.ConfirmationCallback mCallback;
    private final android.os.IBinder mCallbackBinder;
    private android.content.Context mContext;
    private java.util.concurrent.Executor mExecutor;
    private byte[] mExtraData;
    private final android.security.KeyStore mKeyStore;
    private java.lang.CharSequence mPromptText;

    private void <init>(android.content.Context, java.lang.CharSequence, byte[])
    {
        android.security.ConfirmationPrompt r0;
        android.content.Context r1;
        java.lang.CharSequence r2;
        byte[] r3;
        android.security.KeyStore $r4;
        android.security.ConfirmationPrompt$1 $r5;

        r0 := @this: android.security.ConfirmationPrompt;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.lang.CharSequence;

        r3 := @parameter2: byte[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r4 = staticinvoke <android.security.KeyStore: android.security.KeyStore getInstance()>();

        r0.<android.security.ConfirmationPrompt: android.security.KeyStore mKeyStore> = $r4;

        $r5 = new android.security.ConfirmationPrompt$1;

        specialinvoke $r5.<android.security.ConfirmationPrompt$1: void <init>(android.security.ConfirmationPrompt)>(r0);

        r0.<android.security.ConfirmationPrompt: android.os.IBinder mCallbackBinder> = $r5;

        r0.<android.security.ConfirmationPrompt: android.content.Context mContext> = r1;

        r0.<android.security.ConfirmationPrompt: java.lang.CharSequence mPromptText> = r2;

        r0.<android.security.ConfirmationPrompt: byte[] mExtraData> = r3;

        return;
    }

    void <init>(android.content.Context, java.lang.CharSequence, byte[], android.security.ConfirmationPrompt$1)
    {
        android.security.ConfirmationPrompt r0;
        android.content.Context r1;
        java.lang.CharSequence r2;
        byte[] r3;
        android.security.ConfirmationPrompt$1 r4;

        r0 := @this: android.security.ConfirmationPrompt;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.lang.CharSequence;

        r3 := @parameter2: byte[];

        r4 := @parameter3: android.security.ConfirmationPrompt$1;

        specialinvoke r0.<android.security.ConfirmationPrompt: void <init>(android.content.Context,java.lang.CharSequence,byte[])>(r1, r2, r3);

        return;
    }

    static android.security.ConfirmationCallback access$000(android.security.ConfirmationPrompt)
    {
        android.security.ConfirmationPrompt r0;
        android.security.ConfirmationCallback $r1;

        r0 := @parameter0: android.security.ConfirmationPrompt;

        $r1 = r0.<android.security.ConfirmationPrompt: android.security.ConfirmationCallback mCallback>;

        return $r1;
    }

    static android.security.ConfirmationCallback access$002(android.security.ConfirmationPrompt, android.security.ConfirmationCallback)
    {
        android.security.ConfirmationPrompt r0;
        android.security.ConfirmationCallback r1;

        r0 := @parameter0: android.security.ConfirmationPrompt;

        r1 := @parameter1: android.security.ConfirmationCallback;

        r0.<android.security.ConfirmationPrompt: android.security.ConfirmationCallback mCallback> = r1;

        return r1;
    }

    static java.util.concurrent.Executor access$100(android.security.ConfirmationPrompt)
    {
        android.security.ConfirmationPrompt r0;
        java.util.concurrent.Executor $r1;

        r0 := @parameter0: android.security.ConfirmationPrompt;

        $r1 = r0.<android.security.ConfirmationPrompt: java.util.concurrent.Executor mExecutor>;

        return $r1;
    }

    static java.util.concurrent.Executor access$102(android.security.ConfirmationPrompt, java.util.concurrent.Executor)
    {
        android.security.ConfirmationPrompt r0;
        java.util.concurrent.Executor r1;

        r0 := @parameter0: android.security.ConfirmationPrompt;

        r1 := @parameter1: java.util.concurrent.Executor;

        r0.<android.security.ConfirmationPrompt: java.util.concurrent.Executor mExecutor> = r1;

        return r1;
    }

    static void access$200(android.security.ConfirmationPrompt, int, byte[], android.security.ConfirmationCallback)
    {
        android.security.ConfirmationPrompt r0;
        int i0;
        byte[] r1;
        android.security.ConfirmationCallback r2;

        r0 := @parameter0: android.security.ConfirmationPrompt;

        i0 := @parameter1: int;

        r1 := @parameter2: byte[];

        r2 := @parameter3: android.security.ConfirmationCallback;

        specialinvoke r0.<android.security.ConfirmationPrompt: void doCallback(int,byte[],android.security.ConfirmationCallback)>(i0, r1, r2);

        return;
    }

    private void doCallback(int, byte[], android.security.ConfirmationCallback)
    {
        android.security.ConfirmationPrompt r0;
        int i0;
        android.security.ConfirmationCallback r1;
        java.lang.Exception $r2, $r7;
        java.lang.StringBuilder $r3;
        java.lang.String $r8;
        byte[] r9;

        r0 := @this: android.security.ConfirmationPrompt;

        i0 := @parameter0: int;

        r9 := @parameter1: byte[];

        r1 := @parameter2: android.security.ConfirmationCallback;

        if i0 == 0 goto label4;

        if i0 == 1 goto label3;

        if i0 == 2 goto label2;

        if i0 == 5 goto label1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected responseCode=");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from onConfirmtionPromptCompleted() callback.");

        $r7 = new java.lang.Exception;

        $r8 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.Exception: void <init>(java.lang.String)>($r8);

        virtualinvoke r1.<android.security.ConfirmationCallback: void onError(java.lang.Throwable)>($r7);

        goto label5;

     label1:
        $r2 = new java.lang.Exception;

        specialinvoke $r2.<java.lang.Exception: void <init>(java.lang.String)>("System error returned by ConfirmationUI.");

        virtualinvoke r1.<android.security.ConfirmationCallback: void onError(java.lang.Throwable)>($r2);

        goto label5;

     label2:
        virtualinvoke r1.<android.security.ConfirmationCallback: void onCanceled()>();

        goto label5;

     label3:
        virtualinvoke r1.<android.security.ConfirmationCallback: void onDismissed()>();

        goto label5;

     label4:
        virtualinvoke r1.<android.security.ConfirmationCallback: void onConfirmed(byte[])>(r9);

     label5:
        return;
    }

    private int getUiOptionsAsFlags()
    {
        android.security.ConfirmationPrompt r0;
        android.content.ContentResolver r1;
        android.content.Context $r2;
        int $i0;
        float $f0;
        double $d0;
        byte $b1, b2, b3;

        r0 := @this: android.security.ConfirmationPrompt;

        b2 = 0;

        $r2 = r0.<android.security.ConfirmationPrompt: android.content.Context mContext>;

        r1 = virtualinvoke $r2.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $i0 = staticinvoke <android.provider.Settings$Secure: int getInt(android.content.ContentResolver,java.lang.String,int)>(r1, "accessibility_display_inversion_enabled", 0);

        if $i0 != 1 goto label1;

        b2 = 0 | 1;

     label1:
        b3 = b2;

        $f0 = staticinvoke <android.provider.Settings$System: float getFloat(android.content.ContentResolver,java.lang.String,float)>(r1, "font_scale", 1.0F);

        $d0 = (double) $f0;

        $b1 = $d0 cmpl 1.0;

        if $b1 <= 0 goto label2;

        b3 = b2 | 2;

     label2:
        return b3;
    }

    private static boolean isAccessibilityServiceRunning(android.content.Context)
    {
        int i0;
        android.content.ContentResolver $r0;
        android.provider.Settings$SettingNotFoundException $r1;
        android.content.Context r2;
        boolean z1;

        r2 := @parameter0: android.content.Context;

        z1 = 0;

     label1:
        $r0 = virtualinvoke r2.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        i0 = staticinvoke <android.provider.Settings$Secure: int getInt(android.content.ContentResolver,java.lang.String)>($r0, "accessibility_enabled");

     label2:
        if i0 != 1 goto label3;

        z1 = 1;

     label3:
        goto label5;

     label4:
        $r1 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ConfirmationPrompt", "Unexpected SettingNotFoundException");

        virtualinvoke $r1.<android.provider.Settings$SettingNotFoundException: void printStackTrace()>();

        z1 = 0;

     label5:
        return z1;

        catch android.provider.Settings$SettingNotFoundException from label1 to label2 with label4;
    }

    public static boolean isSupported(android.content.Context)
    {
        android.content.Context r0;
        boolean $z0, $z1;
        android.security.KeyStore $r1;

        r0 := @parameter0: android.content.Context;

        $z0 = staticinvoke <android.security.ConfirmationPrompt: boolean isAccessibilityServiceRunning(android.content.Context)>(r0);

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $r1 = staticinvoke <android.security.KeyStore: android.security.KeyStore getInstance()>();

        $z1 = virtualinvoke $r1.<android.security.KeyStore: boolean isConfirmationPromptSupported()>();

        return $z1;
    }

    public void cancelPrompt()
    {
        android.security.ConfirmationPrompt r0;
        int i0;
        android.os.IBinder $r2;
        android.security.KeyStore $r3;
        java.lang.StringBuilder $r4;
        java.lang.String $r8;
        java.lang.IllegalStateException $r9, $r10;

        r0 := @this: android.security.ConfirmationPrompt;

        $r3 = r0.<android.security.ConfirmationPrompt: android.security.KeyStore mKeyStore>;

        $r2 = r0.<android.security.ConfirmationPrompt: android.os.IBinder mCallbackBinder>;

        i0 = virtualinvoke $r3.<android.security.KeyStore: int cancelConfirmationPrompt(android.os.IBinder)>($r2);

        if i0 != 0 goto label1;

        return;

     label1:
        if i0 != 3 goto label2;

        $r10 = new java.lang.IllegalStateException;

        specialinvoke $r10.<java.lang.IllegalStateException: void <init>()>();

        throw $r10;

     label2:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected responseCode=");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from cancelConfirmationPrompt() call.");

        $r8 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ConfirmationPrompt", $r8);

        $r9 = new java.lang.IllegalStateException;

        specialinvoke $r9.<java.lang.IllegalStateException: void <init>()>();

        throw $r9;
    }

    public void presentPrompt(java.util.concurrent.Executor, android.security.ConfirmationCallback) throws android.security.ConfirmationAlreadyPresentingException, android.security.ConfirmationNotAvailableException
    {
        android.security.ConfirmationPrompt r0;
        android.security.ConfirmationCallback r1, $r2;
        android.security.ConfirmationAlreadyPresentingException $r3, $r12;
        android.content.Context $r4;
        boolean $z0;
        android.security.ConfirmationNotAvailableException $r5, $r13;
        java.util.Locale $r6;
        java.lang.CharSequence $r7;
        android.security.KeyStore $r8;
        android.os.IBinder $r9;
        java.lang.String $r10, $r19, r22;
        byte[] $r11;
        java.lang.IllegalArgumentException $r14, $r20;
        java.lang.StringBuilder $r15;
        java.util.concurrent.Executor r21;
        int i1, i2;

        r0 := @this: android.security.ConfirmationPrompt;

        r21 := @parameter0: java.util.concurrent.Executor;

        r1 := @parameter1: android.security.ConfirmationCallback;

        $r2 = r0.<android.security.ConfirmationPrompt: android.security.ConfirmationCallback mCallback>;

        if $r2 != null goto label6;

        $r4 = r0.<android.security.ConfirmationPrompt: android.content.Context mContext>;

        $z0 = staticinvoke <android.security.ConfirmationPrompt: boolean isAccessibilityServiceRunning(android.content.Context)>($r4);

        if $z0 != 0 goto label5;

        r0.<android.security.ConfirmationPrompt: android.security.ConfirmationCallback mCallback> = r1;

        r0.<android.security.ConfirmationPrompt: java.util.concurrent.Executor mExecutor> = r21;

        i1 = specialinvoke r0.<android.security.ConfirmationPrompt: int getUiOptionsAsFlags()>();

        $r6 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        r22 = virtualinvoke $r6.<java.util.Locale: java.lang.String toLanguageTag()>();

        $r8 = r0.<android.security.ConfirmationPrompt: android.security.KeyStore mKeyStore>;

        $r9 = r0.<android.security.ConfirmationPrompt: android.os.IBinder mCallbackBinder>;

        $r7 = r0.<android.security.ConfirmationPrompt: java.lang.CharSequence mPromptText>;

        $r10 = interfaceinvoke $r7.<java.lang.CharSequence: java.lang.String toString()>();

        $r11 = r0.<android.security.ConfirmationPrompt: byte[] mExtraData>;

        i2 = virtualinvoke $r8.<android.security.KeyStore: int presentConfirmationPrompt(android.os.IBinder,java.lang.String,byte[],java.lang.String,int)>($r9, $r10, $r11, r22, i1);

        if i2 == 0 goto label4;

        if i2 == 3 goto label3;

        if i2 == 6 goto label2;

        if i2 == 65536 goto label1;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected responseCode=");

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from presentConfirmationPrompt() call.");

        $r19 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ConfirmationPrompt", $r19);

        $r20 = new java.lang.IllegalArgumentException;

        specialinvoke $r20.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r20;

     label1:
        $r14 = new java.lang.IllegalArgumentException;

        specialinvoke $r14.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r14;

     label2:
        $r13 = new android.security.ConfirmationNotAvailableException;

        specialinvoke $r13.<android.security.ConfirmationNotAvailableException: void <init>()>();

        throw $r13;

     label3:
        $r12 = new android.security.ConfirmationAlreadyPresentingException;

        specialinvoke $r12.<android.security.ConfirmationAlreadyPresentingException: void <init>()>();

        throw $r12;

     label4:
        return;

     label5:
        $r5 = new android.security.ConfirmationNotAvailableException;

        specialinvoke $r5.<android.security.ConfirmationNotAvailableException: void <init>()>();

        throw $r5;

     label6:
        $r3 = new android.security.ConfirmationAlreadyPresentingException;

        specialinvoke $r3.<android.security.ConfirmationAlreadyPresentingException: void <init>()>();

        throw $r3;
    }

    public static void <clinit>()
    {
        <android.security.ConfirmationPrompt: int UI_OPTION_ACCESSIBILITY_MAGNIFIED_FLAG> = 2;

        <android.security.ConfirmationPrompt: int UI_OPTION_ACCESSIBILITY_INVERTED_FLAG> = 1;

        <android.security.ConfirmationPrompt: java.lang.String TAG> = "ConfirmationPrompt";

        return;
    }
}
