public final class android.security.KeyChain extends java.lang.Object
{
    public static final java.lang.String ACCOUNT_TYPE;
    private static final java.lang.String ACTION_CHOOSER;
    private static final java.lang.String ACTION_INSTALL;
    public static final java.lang.String ACTION_KEYCHAIN_CHANGED;
    public static final java.lang.String ACTION_KEY_ACCESS_CHANGED;
    public static final java.lang.String ACTION_STORAGE_CHANGED;
    public static final java.lang.String ACTION_TRUST_STORE_CHANGED;
    private static final java.lang.String CERT_INSTALLER_PACKAGE;
    public static final java.lang.String EXTRA_ALIAS;
    public static final java.lang.String EXTRA_CERTIFICATE;
    public static final java.lang.String EXTRA_ISSUERS;
    public static final java.lang.String EXTRA_KEY_ACCESSIBLE;
    public static final java.lang.String EXTRA_KEY_ALIAS;
    public static final java.lang.String EXTRA_KEY_TYPES;
    public static final java.lang.String EXTRA_NAME;
    public static final java.lang.String EXTRA_PKCS12;
    public static final java.lang.String EXTRA_RESPONSE;
    public static final java.lang.String EXTRA_SENDER;
    public static final java.lang.String EXTRA_URI;
    private static final java.lang.String KEYCHAIN_PACKAGE;
    public static final java.lang.String KEY_ALIAS_SELECTION_DENIED;
    public static final int KEY_ATTESTATION_CANNOT_ATTEST_IDS;
    public static final int KEY_ATTESTATION_CANNOT_COLLECT_DATA;
    public static final int KEY_ATTESTATION_FAILURE;
    public static final int KEY_ATTESTATION_MISSING_CHALLENGE;
    public static final int KEY_ATTESTATION_SUCCESS;
    public static final int KEY_GEN_FAILURE;
    public static final int KEY_GEN_INVALID_ALGORITHM_PARAMETERS;
    public static final int KEY_GEN_MISSING_ALIAS;
    public static final int KEY_GEN_NO_KEYSTORE_PROVIDER;
    public static final int KEY_GEN_NO_SUCH_ALGORITHM;
    public static final int KEY_GEN_STRONGBOX_UNAVAILABLE;
    public static final int KEY_GEN_SUCCESS;
    public static final int KEY_GEN_SUPERFLUOUS_ATTESTATION_CHALLENGE;

    public void <init>()
    {
        android.security.KeyChain r0;

        r0 := @this: android.security.KeyChain;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static android.security.KeyChain$KeyChainConnection bind(android.content.Context) throws java.lang.InterruptedException
    {
        android.content.Context r0;
        android.os.UserHandle $r1;
        android.security.KeyChain$KeyChainConnection $r2;

        r0 := @parameter0: android.content.Context;

        $r1 = staticinvoke <android.os.Process: android.os.UserHandle myUserHandle()>();

        $r2 = staticinvoke <android.security.KeyChain: android.security.KeyChain$KeyChainConnection bindAsUser(android.content.Context,android.os.UserHandle)>(r0, $r1);

        return $r2;
    }

    public static android.security.KeyChain$KeyChainConnection bindAsUser(android.content.Context, android.os.UserHandle) throws java.lang.InterruptedException
    {
        android.content.Context r0;
        android.content.ComponentName r5;
        java.lang.NullPointerException $r6;
        android.os.UserManager $r7;
        boolean $z0, $z1;
        java.lang.IllegalStateException $r8;
        java.util.concurrent.CountDownLatch $r9;
        java.util.concurrent.atomic.AtomicReference $r10;
        android.security.KeyChain$1 $r11;
        android.content.Intent $r12;
        java.lang.Class $r13;
        java.lang.String $r14;
        android.content.pm.PackageManager $r15;
        java.lang.AssertionError $r17, $r19;
        java.lang.Object $r18;
        android.security.KeyChain$KeyChainConnection $r20;
        android.os.UserHandle r21;
        android.security.IKeyChainService r22;

        r0 := @parameter0: android.content.Context;

        r21 := @parameter1: android.os.UserHandle;

        if r0 == null goto label4;

        staticinvoke <android.security.KeyChain: void ensureNotOnMainThread(android.content.Context)>(r0);

        $r7 = staticinvoke <android.os.UserManager: android.os.UserManager get(android.content.Context)>(r0);

        $z0 = virtualinvoke $r7.<android.os.UserManager: boolean isUserUnlocked(android.os.UserHandle)>(r21);

        if $z0 == 0 goto label3;

        $r9 = new java.util.concurrent.CountDownLatch;

        specialinvoke $r9.<java.util.concurrent.CountDownLatch: void <init>(int)>(1);

        $r10 = new java.util.concurrent.atomic.AtomicReference;

        specialinvoke $r10.<java.util.concurrent.atomic.AtomicReference: void <init>()>();

        $r11 = new android.security.KeyChain$1;

        specialinvoke $r11.<android.security.KeyChain$1: void <init>(java.util.concurrent.atomic.AtomicReference,java.util.concurrent.CountDownLatch)>($r10, $r9);

        $r12 = new android.content.Intent;

        $r13 = class "Landroid/security/IKeyChainService;";

        $r14 = virtualinvoke $r13.<java.lang.Class: java.lang.String getName()>();

        specialinvoke $r12.<android.content.Intent: void <init>(java.lang.String)>($r14);

        $r15 = virtualinvoke r0.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        r5 = virtualinvoke $r12.<android.content.Intent: android.content.ComponentName resolveSystemService(android.content.pm.PackageManager,int)>($r15, 0);

        virtualinvoke $r12.<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>(r5);

        if r5 == null goto label2;

        $z1 = virtualinvoke r0.<android.content.Context: boolean bindServiceAsUser(android.content.Intent,android.content.ServiceConnection,int,android.os.UserHandle)>($r12, $r11, 1, r21);

        if $z1 == 0 goto label2;

        virtualinvoke $r9.<java.util.concurrent.CountDownLatch: void await()>();

        $r18 = virtualinvoke $r10.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        r22 = (android.security.IKeyChainService) $r18;

        if r22 == null goto label1;

        $r20 = new android.security.KeyChain$KeyChainConnection;

        specialinvoke $r20.<android.security.KeyChain$KeyChainConnection: void <init>(android.content.Context,android.content.ServiceConnection,android.security.IKeyChainService)>(r0, $r11, r22);

        return $r20;

     label1:
        virtualinvoke r0.<android.content.Context: void unbindService(android.content.ServiceConnection)>($r11);

        $r19 = new java.lang.AssertionError;

        specialinvoke $r19.<java.lang.AssertionError: void <init>(java.lang.Object)>("KeyChainService died while binding");

        throw $r19;

     label2:
        $r17 = new java.lang.AssertionError;

        specialinvoke $r17.<java.lang.AssertionError: void <init>(java.lang.Object)>("could not bind to KeyChainService");

        throw $r17;

     label3:
        $r8 = new java.lang.IllegalStateException;

        specialinvoke $r8.<java.lang.IllegalStateException: void <init>(java.lang.String)>("User must be unlocked");

        throw $r8;

     label4:
        $r6 = new java.lang.NullPointerException;

        specialinvoke $r6.<java.lang.NullPointerException: void <init>(java.lang.String)>("context == null");

        throw $r6;
    }

    public static void choosePrivateKeyAlias(android.app.Activity, android.security.KeyChainAliasCallback, java.lang.String[], java.security.Principal[], android.net.Uri, java.lang.String)
    {
        android.app.Activity r0;
        java.security.Principal[] r1;
        android.net.Uri r2;
        java.lang.String r3, $r21, $r23;
        int i0, i1;
        java.lang.NullPointerException $r5, $r6;
        android.content.Intent $r7, $r16;
        android.security.KeyChain$AliasResponse $r9;
        java.util.ArrayList $r14;
        android.app.PendingIntent $r17;
        boolean $z0;
        java.lang.IllegalArgumentException $r19;
        java.lang.Object[] $r20;
        java.lang.Class $r22;
        javax.security.auth.x500.X500Principal $r24;
        byte[] $r25;
        android.security.KeyChainAliasCallback r26;
        java.lang.String[] r27;
        java.security.Principal r29;

        r0 := @parameter0: android.app.Activity;

        r26 := @parameter1: android.security.KeyChainAliasCallback;

        r27 := @parameter2: java.lang.String[];

        r1 := @parameter3: java.security.Principal[];

        r2 := @parameter4: android.net.Uri;

        r3 := @parameter5: java.lang.String;

        if r0 == null goto label5;

        if r26 == null goto label4;

        $r7 = new android.content.Intent;

        specialinvoke $r7.<android.content.Intent: void <init>(java.lang.String)>("com.android.keychain.CHOOSER");

        virtualinvoke $r7.<android.content.Intent: android.content.Intent setPackage(java.lang.String)>("com.android.keychain");

        $r9 = new android.security.KeyChain$AliasResponse;

        specialinvoke $r9.<android.security.KeyChain$AliasResponse: void <init>(android.security.KeyChainAliasCallback,android.security.KeyChain$1)>(r26, null);

        virtualinvoke $r7.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.IBinder)>("response", $r9);

        virtualinvoke $r7.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("uri", r2);

        virtualinvoke $r7.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("alias", r3);

        virtualinvoke $r7.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String[])>("key_types", r27);

        $r14 = new java.util.ArrayList;

        specialinvoke $r14.<java.util.ArrayList: void <init>()>();

        if r1 == null goto label3;

        i0 = lengthof r1;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        r29 = r1[i1];

        $z0 = r29 instanceof javax.security.auth.x500.X500Principal;

        if $z0 == 0 goto label2;

        $r24 = (javax.security.auth.x500.X500Principal) r29;

        $r25 = virtualinvoke $r24.<javax.security.auth.x500.X500Principal: byte[] getEncoded()>();

        virtualinvoke $r14.<java.util.ArrayList: boolean add(java.lang.Object)>($r25);

        i1 = i1 + 1;

        goto label1;

     label2:
        $r19 = new java.lang.IllegalArgumentException;

        $r20 = newarray (java.lang.Object)[2];

        $r21 = interfaceinvoke r29.<java.security.Principal: java.lang.String toString()>();

        $r20[0] = $r21;

        $r22 = virtualinvoke r29.<java.lang.Object: java.lang.Class getClass()>();

        $r20[1] = $r22;

        $r23 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Issuer %s is of type %s, not X500Principal", $r20);

        specialinvoke $r19.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r23);

        throw $r19;

     label3:
        virtualinvoke $r7.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)>("issuers", $r14);

        $r16 = new android.content.Intent;

        specialinvoke $r16.<android.content.Intent: void <init>()>();

        $r17 = staticinvoke <android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)>(r0, 0, $r16, 0);

        virtualinvoke $r7.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("sender", $r17);

        virtualinvoke r0.<android.app.Activity: void startActivity(android.content.Intent)>($r7);

        return;

     label4:
        $r6 = new java.lang.NullPointerException;

        specialinvoke $r6.<java.lang.NullPointerException: void <init>(java.lang.String)>("response == null");

        throw $r6;

     label5:
        $r5 = new java.lang.NullPointerException;

        specialinvoke $r5.<java.lang.NullPointerException: void <init>(java.lang.String)>("activity == null");

        throw $r5;
    }

    public static void choosePrivateKeyAlias(android.app.Activity, android.security.KeyChainAliasCallback, java.lang.String[], java.security.Principal[], java.lang.String, int, java.lang.String)
    {
        android.app.Activity r0;
        android.security.KeyChainAliasCallback r1;
        java.lang.String[] r2;
        java.security.Principal[] r3;
        int i0;
        java.lang.String r4, $r10, r15, r19;
        android.net.Uri$Builder $r6, $r11;
        java.lang.StringBuilder $r7, $r12;
        android.net.Uri r16;

        r0 := @parameter0: android.app.Activity;

        r1 := @parameter1: android.security.KeyChainAliasCallback;

        r2 := @parameter2: java.lang.String[];

        r3 := @parameter3: java.security.Principal[];

        r15 := @parameter4: java.lang.String;

        i0 := @parameter5: int;

        r4 := @parameter6: java.lang.String;

        r16 = null;

        if r15 == null goto label3;

        $r6 = new android.net.Uri$Builder;

        specialinvoke $r6.<android.net.Uri$Builder: void <init>()>();

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r15);

        if i0 == -1 goto label1;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        r19 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label2;

     label1:
        r19 = "";

     label2:
        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r19);

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $r11 = virtualinvoke $r6.<android.net.Uri$Builder: android.net.Uri$Builder authority(java.lang.String)>($r10);

        r16 = virtualinvoke $r11.<android.net.Uri$Builder: android.net.Uri build()>();

     label3:
        staticinvoke <android.security.KeyChain: void choosePrivateKeyAlias(android.app.Activity,android.security.KeyChainAliasCallback,java.lang.String[],java.security.Principal[],android.net.Uri,java.lang.String)>(r0, r1, r2, r3, r16, r4);

        return;
    }

    public static android.content.Intent createInstallIntent()
    {
        android.content.Intent $r1;

        $r1 = new android.content.Intent;

        specialinvoke $r1.<android.content.Intent: void <init>(java.lang.String)>("android.credentials.INSTALL");

        virtualinvoke $r1.<android.content.Intent: android.content.Intent setClassName(java.lang.String,java.lang.String)>("com.android.certinstaller", "com.android.certinstaller.CertInstallerMain");

        return $r1;
    }

    private static void ensureNotOnMainThread(android.content.Context)
    {
        android.content.Context r0;
        android.os.Looper r1, $r2;
        java.lang.IllegalStateException $r3;

        r0 := @parameter0: android.content.Context;

        r1 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        if r1 == null goto label2;

        $r2 = virtualinvoke r0.<android.content.Context: android.os.Looper getMainLooper()>();

        if r1 == $r2 goto label1;

        goto label2;

     label1:
        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("calling this from your main thread can lead to deadlock");

        throw $r3;

     label2:
        return;
    }

    public static java.security.cert.X509Certificate[] getCertificateChain(android.content.Context, java.lang.String) throws android.security.KeyChainException, java.lang.InterruptedException
    {
        android.security.IKeyChainService r0;
        java.lang.NullPointerException $r1;
        android.content.Context $r2, r16;
        int $i0, $i1, $i2, $i3, $i4;
        java.security.cert.X509Certificate[] $r3, $r5, $r7, r26;
        java.lang.Object[] $r4, $r6;
        java.lang.Throwable $r8, $r11, $r14;
        android.os.RemoteException $r9;
        android.security.KeyChainException $r10, $r13, $r15;
        java.lang.RuntimeException $r12;
        java.lang.String r17;
        android.security.KeyChain$KeyChainConnection r18;
        byte[] r19, r20;
        java.security.cert.X509Certificate r21;
        java.util.Collection r22;
        java.util.ArrayList r23;
        com.android.org.conscrypt.TrustedCertificateStore r24;
        java.util.List r25;

        r16 := @parameter0: android.content.Context;

        r17 := @parameter1: java.lang.String;

        if r17 == null goto label23;

     label01:
        $r2 = virtualinvoke r16.<android.content.Context: android.content.Context getApplicationContext()>();

        r18 = staticinvoke <android.security.KeyChain: android.security.KeyChain$KeyChainConnection bind(android.content.Context)>($r2);

     label02:
        r0 = virtualinvoke r18.<android.security.KeyChain$KeyChainConnection: android.security.IKeyChainService getService()>();

        r19 = interfaceinvoke r0.<android.security.IKeyChainService: byte[] getCertificate(java.lang.String)>(r17);

     label03:
        if r19 != null goto label06;

        if r18 == null goto label05;

     label04:
        virtualinvoke r18.<android.security.KeyChain$KeyChainConnection: void close()>();

     label05:
        return null;

     label06:
        r20 = interfaceinvoke r0.<android.security.IKeyChainService: byte[] getCaCertificates(java.lang.String)>(r17);

     label07:
        if r18 == null goto label09;

     label08:
        virtualinvoke r18.<android.security.KeyChain$KeyChainConnection: void close()>();

     label09:
        r21 = staticinvoke <android.security.KeyChain: java.security.cert.X509Certificate toCertificate(byte[])>(r19);

     label10:
        if r20 == null goto label12;

     label11:
        $i1 = lengthof r20;

        if $i1 == 0 goto label12;

        r22 = staticinvoke <android.security.KeyChain: java.util.Collection toCertificates(byte[])>(r20);

        r23 = new java.util.ArrayList;

        $i2 = interfaceinvoke r22.<java.util.Collection: int size()>();

        $i3 = $i2 + 1;

        specialinvoke r23.<java.util.ArrayList: void <init>(int)>($i3);

        virtualinvoke r23.<java.util.ArrayList: boolean add(java.lang.Object)>(r21);

        virtualinvoke r23.<java.util.ArrayList: boolean addAll(java.util.Collection)>(r22);

        $i4 = virtualinvoke r23.<java.util.ArrayList: int size()>();

        $r5 = newarray (java.security.cert.X509Certificate)[$i4];

        $r6 = virtualinvoke r23.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r5);

        $r7 = (java.security.cert.X509Certificate[]) $r6;

        return $r7;

     label12:
        r24 = new com.android.org.conscrypt.TrustedCertificateStore;

        specialinvoke r24.<com.android.org.conscrypt.TrustedCertificateStore: void <init>()>();

        r25 = virtualinvoke r24.<com.android.org.conscrypt.TrustedCertificateStore: java.util.List getCertificateChain(java.security.cert.X509Certificate)>(r21);

        $i0 = interfaceinvoke r25.<java.util.List: int size()>();

        $r3 = newarray (java.security.cert.X509Certificate)[$i0];

        $r4 = interfaceinvoke r25.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r3);

        r26 = (java.security.cert.X509Certificate[]) $r4;

     label13:
        return r26;

     label14:
        $r14 := @caughtexception;

        $r15 = new android.security.KeyChainException;

        specialinvoke $r15.<android.security.KeyChainException: void <init>(java.lang.Throwable)>($r14);

        throw $r15;

     label15:
        $r8 := @caughtexception;

        if r18 == null goto label20;

     label16:
        virtualinvoke r18.<android.security.KeyChain$KeyChainConnection: void close()>();

     label17:
        goto label20;

     label18:
        $r11 := @caughtexception;

     label19:
        virtualinvoke $r8.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r11);

     label20:
        throw $r8;

     label21:
        $r12 := @caughtexception;

        $r13 = new android.security.KeyChainException;

        specialinvoke $r13.<android.security.KeyChainException: void <init>(java.lang.Throwable)>($r12);

        throw $r13;

     label22:
        $r9 := @caughtexception;

        $r10 = new android.security.KeyChainException;

        specialinvoke $r10.<android.security.KeyChainException: void <init>(java.lang.Throwable)>($r9);

        throw $r10;

     label23:
        $r1 = new java.lang.NullPointerException;

        specialinvoke $r1.<java.lang.NullPointerException: void <init>(java.lang.String)>("alias == null");

        throw $r1;

        catch android.os.RemoteException from label01 to label02 with label22;
        catch java.lang.RuntimeException from label01 to label02 with label21;
        catch java.lang.Throwable from label02 to label03 with label15;
        catch android.os.RemoteException from label04 to label05 with label22;
        catch java.lang.RuntimeException from label04 to label05 with label21;
        catch java.lang.Throwable from label06 to label07 with label15;
        catch android.os.RemoteException from label08 to label09 with label22;
        catch java.lang.RuntimeException from label08 to label09 with label21;
        catch java.security.cert.CertificateException from label09 to label10 with label14;
        catch java.lang.RuntimeException from label09 to label10 with label14;
        catch java.security.cert.CertificateException from label11 to label12 with label14;
        catch java.lang.RuntimeException from label11 to label12 with label14;
        catch java.security.cert.CertificateException from label12 to label13 with label14;
        catch java.lang.RuntimeException from label12 to label13 with label14;
        catch java.lang.Throwable from label16 to label17 with label18;
        catch android.os.RemoteException from label19 to label20 with label22;
        catch java.lang.RuntimeException from label19 to label20 with label21;
        catch android.os.RemoteException from label20 to label21 with label22;
        catch java.lang.RuntimeException from label20 to label21 with label21;
    }

    public static java.security.KeyPair getKeyPair(android.content.Context, java.lang.String) throws android.security.KeyChainException, java.lang.InterruptedException
    {
        java.lang.NullPointerException $r0, $r1;
        android.content.Context $r2, r13;
        android.security.IKeyChainService $r3;
        android.security.KeyStore $r4;
        java.lang.Throwable $r5, $r7, $r8;
        android.security.KeyChainException $r6, $r10, $r12;
        java.lang.RuntimeException $r9;
        android.os.RemoteException $r11;
        java.lang.String r14, r16;
        android.security.KeyChain$KeyChainConnection r15;
        java.security.KeyPair r17;

        r13 := @parameter0: android.content.Context;

        r14 := @parameter1: java.lang.String;

        if r14 == null goto label18;

        if r13 == null goto label17;

     label01:
        $r2 = virtualinvoke r13.<android.content.Context: android.content.Context getApplicationContext()>();

        r15 = staticinvoke <android.security.KeyChain: android.security.KeyChain$KeyChainConnection bind(android.content.Context)>($r2);

     label02:
        $r3 = virtualinvoke r15.<android.security.KeyChain$KeyChainConnection: android.security.IKeyChainService getService()>();

        r16 = interfaceinvoke $r3.<android.security.IKeyChainService: java.lang.String requestPrivateKey(java.lang.String)>(r14);

     label03:
        if r15 == null goto label05;

     label04:
        virtualinvoke r15.<android.security.KeyChain$KeyChainConnection: void close()>();

     label05:
        if r16 != null goto label06;

        return null;

     label06:
        $r4 = staticinvoke <android.security.KeyStore: android.security.KeyStore getInstance()>();

        r17 = staticinvoke <android.security.keystore.AndroidKeyStoreProvider: java.security.KeyPair loadAndroidKeyStoreKeyPairFromKeystore(android.security.KeyStore,java.lang.String,int)>($r4, r16, -1);

     label07:
        return r17;

     label08:
        $r5 := @caughtexception;

        $r6 = new android.security.KeyChainException;

        specialinvoke $r6.<android.security.KeyChainException: void <init>(java.lang.Throwable)>($r5);

        throw $r6;

     label09:
        $r7 := @caughtexception;

        if r15 == null goto label14;

     label10:
        virtualinvoke r15.<android.security.KeyChain$KeyChainConnection: void close()>();

     label11:
        goto label14;

     label12:
        $r8 := @caughtexception;

     label13:
        virtualinvoke $r7.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r8);

     label14:
        throw $r7;

     label15:
        $r9 := @caughtexception;

        $r10 = new android.security.KeyChainException;

        specialinvoke $r10.<android.security.KeyChainException: void <init>(java.lang.Throwable)>($r9);

        throw $r10;

     label16:
        $r11 := @caughtexception;

        $r12 = new android.security.KeyChainException;

        specialinvoke $r12.<android.security.KeyChainException: void <init>(java.lang.Throwable)>($r11);

        throw $r12;

     label17:
        $r1 = new java.lang.NullPointerException;

        specialinvoke $r1.<java.lang.NullPointerException: void <init>(java.lang.String)>("context == null");

        throw $r1;

     label18:
        $r0 = new java.lang.NullPointerException;

        specialinvoke $r0.<java.lang.NullPointerException: void <init>(java.lang.String)>("alias == null");

        throw $r0;

        catch android.os.RemoteException from label01 to label02 with label16;
        catch java.lang.RuntimeException from label01 to label02 with label15;
        catch java.lang.Throwable from label02 to label03 with label09;
        catch android.os.RemoteException from label04 to label05 with label16;
        catch java.lang.RuntimeException from label04 to label05 with label15;
        catch java.lang.RuntimeException from label06 to label07 with label08;
        catch java.security.UnrecoverableKeyException from label06 to label07 with label08;
        catch android.security.keystore.KeyPermanentlyInvalidatedException from label06 to label07 with label08;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch android.os.RemoteException from label13 to label14 with label16;
        catch java.lang.RuntimeException from label13 to label14 with label15;
        catch android.os.RemoteException from label14 to label15 with label16;
        catch java.lang.RuntimeException from label14 to label15 with label15;
    }

    public static java.security.PrivateKey getPrivateKey(android.content.Context, java.lang.String) throws android.security.KeyChainException, java.lang.InterruptedException
    {
        java.lang.String r0;
        java.security.PrivateKey $r1;
        android.content.Context r2;
        java.security.KeyPair r3;

        r2 := @parameter0: android.content.Context;

        r0 := @parameter1: java.lang.String;

        r3 = staticinvoke <android.security.KeyChain: java.security.KeyPair getKeyPair(android.content.Context,java.lang.String)>(r2, r0);

        if r3 == null goto label1;

        $r1 = virtualinvoke r3.<java.security.KeyPair: java.security.PrivateKey getPrivate()>();

        return $r1;

     label1:
        return null;
    }

    public static boolean isBoundKeyAlgorithm(java.lang.String)
    {
        java.lang.String r0;
        boolean $z0, $z1;
        android.security.KeyStore $r1;

        r0 := @parameter0: java.lang.String;

        $z0 = staticinvoke <android.security.KeyChain: boolean isKeyAlgorithmSupported(java.lang.String)>(r0);

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r1 = staticinvoke <android.security.KeyStore: android.security.KeyStore getInstance()>();

        $z1 = virtualinvoke $r1.<android.security.KeyStore: boolean isHardwareBacked(java.lang.String)>(r0);

        return $z1;
    }

    public static boolean isKeyAlgorithmSupported(java.lang.String)
    {
        java.util.Locale $r0;
        java.lang.String $r1, $r2, r3, r4;
        boolean $z0, $z1, z2;

        r3 := @parameter0: java.lang.String;

        $r0 = <java.util.Locale: java.util.Locale US>;

        r4 = virtualinvoke r3.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>($r0);

        $r1 = "EC";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z0 != 0 goto label2;

        $r2 = "RSA";

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z1 == 0 goto label1;

        goto label2;

     label1:
        z2 = 0;

        goto label3;

     label2:
        z2 = 1;

     label3:
        return z2;
    }

    public static java.security.cert.X509Certificate toCertificate(byte[])
    {
        java.security.cert.CertificateFactory r0;
        java.io.ByteArrayInputStream r1;
        java.lang.IllegalArgumentException $r2;
        java.security.cert.Certificate $r3;
        java.lang.Throwable $r4;
        java.lang.AssertionError $r5;
        byte[] r6;
        java.security.cert.X509Certificate r7;

        r6 := @parameter0: byte[];

        if r6 == null goto label4;

     label1:
        r0 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>("X.509");

        r1 = new java.io.ByteArrayInputStream;

        specialinvoke r1.<java.io.ByteArrayInputStream: void <init>(byte[])>(r6);

        $r3 = virtualinvoke r0.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>(r1);

        r7 = (java.security.cert.X509Certificate) $r3;

     label2:
        return r7;

     label3:
        $r4 := @caughtexception;

        $r5 = new java.lang.AssertionError;

        specialinvoke $r5.<java.lang.AssertionError: void <init>(java.lang.Object)>($r4);

        throw $r5;

     label4:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("bytes == null");

        throw $r2;

        catch java.security.cert.CertificateException from label1 to label2 with label3;
    }

    public static java.util.Collection toCertificates(byte[])
    {
        java.security.cert.CertificateFactory r0;
        java.io.ByteArrayInputStream r1;
        java.lang.IllegalArgumentException $r2;
        java.lang.Throwable $r3;
        java.lang.AssertionError $r4;
        byte[] r5;
        java.util.Collection r6;

        r5 := @parameter0: byte[];

        if r5 == null goto label4;

     label1:
        r0 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>("X.509");

        r1 = new java.io.ByteArrayInputStream;

        specialinvoke r1.<java.io.ByteArrayInputStream: void <init>(byte[])>(r5);

        r6 = virtualinvoke r0.<java.security.cert.CertificateFactory: java.util.Collection generateCertificates(java.io.InputStream)>(r1);

     label2:
        return r6;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>(java.lang.Object)>($r3);

        throw $r4;

     label4:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("bytes == null");

        throw $r2;

        catch java.security.cert.CertificateException from label1 to label2 with label3;
    }

    public static void <clinit>()
    {
        <android.security.KeyChain: int KEY_GEN_SUPERFLUOUS_ATTESTATION_CHALLENGE> = 2;

        <android.security.KeyChain: int KEY_GEN_SUCCESS> = 0;

        <android.security.KeyChain: int KEY_GEN_STRONGBOX_UNAVAILABLE> = 6;

        <android.security.KeyChain: int KEY_GEN_NO_SUCH_ALGORITHM> = 3;

        <android.security.KeyChain: int KEY_GEN_NO_KEYSTORE_PROVIDER> = 5;

        <android.security.KeyChain: int KEY_GEN_MISSING_ALIAS> = 1;

        <android.security.KeyChain: int KEY_GEN_INVALID_ALGORITHM_PARAMETERS> = 4;

        <android.security.KeyChain: int KEY_GEN_FAILURE> = 7;

        <android.security.KeyChain: int KEY_ATTESTATION_SUCCESS> = 0;

        <android.security.KeyChain: int KEY_ATTESTATION_MISSING_CHALLENGE> = 1;

        <android.security.KeyChain: int KEY_ATTESTATION_FAILURE> = 4;

        <android.security.KeyChain: int KEY_ATTESTATION_CANNOT_COLLECT_DATA> = 2;

        <android.security.KeyChain: int KEY_ATTESTATION_CANNOT_ATTEST_IDS> = 3;

        <android.security.KeyChain: java.lang.String KEY_ALIAS_SELECTION_DENIED> = "android:alias-selection-denied";

        <android.security.KeyChain: java.lang.String KEYCHAIN_PACKAGE> = "com.android.keychain";

        <android.security.KeyChain: java.lang.String EXTRA_URI> = "uri";

        <android.security.KeyChain: java.lang.String EXTRA_SENDER> = "sender";

        <android.security.KeyChain: java.lang.String EXTRA_RESPONSE> = "response";

        <android.security.KeyChain: java.lang.String EXTRA_PKCS12> = "PKCS12";

        <android.security.KeyChain: java.lang.String EXTRA_NAME> = "name";

        <android.security.KeyChain: java.lang.String EXTRA_KEY_TYPES> = "key_types";

        <android.security.KeyChain: java.lang.String EXTRA_KEY_ALIAS> = "android.security.extra.KEY_ALIAS";

        <android.security.KeyChain: java.lang.String EXTRA_KEY_ACCESSIBLE> = "android.security.extra.KEY_ACCESSIBLE";

        <android.security.KeyChain: java.lang.String EXTRA_ISSUERS> = "issuers";

        <android.security.KeyChain: java.lang.String EXTRA_CERTIFICATE> = "CERT";

        <android.security.KeyChain: java.lang.String EXTRA_ALIAS> = "alias";

        <android.security.KeyChain: java.lang.String CERT_INSTALLER_PACKAGE> = "com.android.certinstaller";

        <android.security.KeyChain: java.lang.String ACTION_TRUST_STORE_CHANGED> = "android.security.action.TRUST_STORE_CHANGED";

        <android.security.KeyChain: java.lang.String ACTION_STORAGE_CHANGED> = "android.security.STORAGE_CHANGED";

        <android.security.KeyChain: java.lang.String ACTION_KEY_ACCESS_CHANGED> = "android.security.action.KEY_ACCESS_CHANGED";

        <android.security.KeyChain: java.lang.String ACTION_KEYCHAIN_CHANGED> = "android.security.action.KEYCHAIN_CHANGED";

        <android.security.KeyChain: java.lang.String ACTION_INSTALL> = "android.credentials.INSTALL";

        <android.security.KeyChain: java.lang.String ACTION_CHOOSER> = "com.android.keychain.CHOOSER";

        <android.security.KeyChain: java.lang.String ACCOUNT_TYPE> = "com.android.keychain";

        return;
    }
}
