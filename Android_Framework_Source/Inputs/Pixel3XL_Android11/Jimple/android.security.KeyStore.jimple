public class android.security.KeyStore extends java.lang.Object
{
    public static final int CANNOT_ATTEST_IDS;
    public static final int CONFIRMATIONUI_ABORTED;
    public static final int CONFIRMATIONUI_CANCELED;
    public static final int CONFIRMATIONUI_IGNORED;
    public static final int CONFIRMATIONUI_OK;
    public static final int CONFIRMATIONUI_OPERATION_PENDING;
    public static final int CONFIRMATIONUI_SYSTEM_ERROR;
    public static final int CONFIRMATIONUI_UIERROR;
    public static final int CONFIRMATIONUI_UIERROR_MALFORMED_UTF8_ENCODING;
    public static final int CONFIRMATIONUI_UIERROR_MESSAGE_TOO_LONG;
    public static final int CONFIRMATIONUI_UIERROR_MISSING_GLYPH;
    public static final int CONFIRMATIONUI_UNEXPECTED;
    public static final int CONFIRMATIONUI_UNIMPLEMENTED;
    public static final int FLAG_CRITICAL_TO_DEVICE_ENCRYPTION;
    public static final int FLAG_ENCRYPTED;
    public static final int FLAG_NONE;
    public static final int FLAG_SOFTWARE;
    public static final int FLAG_STRONGBOX;
    public static final int HARDWARE_TYPE_UNAVAILABLE;
    public static final int KEY_ALREADY_EXISTS;
    public static final int KEY_NOT_FOUND;
    public static final int KEY_PERMANENTLY_INVALIDATED;
    public static final int LOCKED;
    public static final int NO_ERROR;
    public static final int OP_AUTH_NEEDED;
    public static final int PERMISSION_DENIED;
    public static final int PROTOCOL_ERROR;
    public static final int SYSTEM_ERROR;
    private static final java.lang.String TAG;
    public static final int UID_SELF;
    public static final int UNDEFINED_ACTION;
    public static final int UNINITIALIZED;
    public static final int VALUE_CORRUPTED;
    public static final int WRONG_PASSWORD;
    private final android.security.keystore.IKeystoreService mBinder;
    private final android.content.Context mContext;
    private int mError;
    private android.os.IBinder mToken;

    private void <init>(android.security.keystore.IKeystoreService)
    {
        android.security.KeyStore r0;
        android.security.keystore.IKeystoreService r1;
        android.content.Context $r2;

        r0 := @this: android.security.KeyStore;

        r1 := @parameter0: android.security.keystore.IKeystoreService;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.security.KeyStore: int mError> = 1;

        r0.<android.security.KeyStore: android.security.keystore.IKeystoreService mBinder> = r1;

        $r2 = staticinvoke <android.security.KeyStore: android.content.Context getApplicationContext()>();

        r0.<android.security.KeyStore: android.content.Context mContext> = $r2;

        return;
    }

    private int generateKeyInternal(java.lang.String, android.security.keymaster.KeymasterArguments, byte[], int, int, android.security.keymaster.KeyCharacteristics) throws android.os.RemoteException, java.util.concurrent.ExecutionException
    {
        android.security.KeyStore r0;
        android.security.keymaster.KeymasterArguments r1;
        byte[] r2;
        int i0, i4, i5, i6;
        android.security.keymaster.KeyCharacteristics r3, r34;
        android.security.KeyStore$KeyCharacteristicsPromise $r5;
        android.security.keystore.IKeystoreService $r6, $r8, $r11, $r25, $r28;
        android.os.IBinder $r7, $r12, $r26, $r29;
        java.util.concurrent.CompletableFuture $r9;
        java.lang.Object $r10;
        android.security.keystore.KeystoreResponse $r13;
        java.lang.StringBuilder $r14, $r18, r31;
        java.lang.String $r17, $r21, $r24, r30;
        java.lang.Throwable $r27;
        android.security.KeyStore$KeyCharacteristicsCallbackResult r32;

        r0 := @this: android.security.KeyStore;

        r30 := @parameter0: java.lang.String;

        r1 := @parameter1: android.security.keymaster.KeymasterArguments;

        r2 := @parameter2: byte[];

        i4 := @parameter3: int;

        i0 := @parameter4: int;

        r3 := @parameter5: android.security.keymaster.KeyCharacteristics;

        $r5 = new android.security.KeyStore$KeyCharacteristicsPromise;

        specialinvoke $r5.<android.security.KeyStore$KeyCharacteristicsPromise: void <init>(android.security.KeyStore,android.security.KeyStore$1)>(r0, null);

     label1:
        $r6 = r0.<android.security.KeyStore: android.security.keystore.IKeystoreService mBinder>;

        $r7 = interfaceinvoke $r6.<android.security.keystore.IKeystoreService: android.os.IBinder asBinder()>();

        interfaceinvoke $r7.<android.os.IBinder: void linkToDeath(android.os.IBinder$DeathRecipient,int)>($r5, 0);

        $r8 = r0.<android.security.KeyStore: android.security.keystore.IKeystoreService mBinder>;

        i5 = interfaceinvoke $r8.<android.security.keystore.IKeystoreService: int generateKey(android.security.keystore.IKeystoreKeyCharacteristicsCallback,java.lang.String,android.security.keymaster.KeymasterArguments,byte[],int,int)>($r5, r30, r1, r2, i4, i0);

     label2:
        if i5 == 1 goto label5;

     label3:
        r31 = new java.lang.StringBuilder;

        specialinvoke r31.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("generateKeyInternal failed on request ");

        virtualinvoke r31.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i5);

        $r24 = virtualinvoke r31.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("KeyStore", $r24);

     label4:
        $r25 = r0.<android.security.KeyStore: android.security.keystore.IKeystoreService mBinder>;

        $r26 = interfaceinvoke $r25.<android.security.keystore.IKeystoreService: android.os.IBinder asBinder()>();

        interfaceinvoke $r26.<android.os.IBinder: boolean unlinkToDeath(android.os.IBinder$DeathRecipient,int)>($r5, 0);

        return i5;

     label5:
        $r9 = virtualinvoke $r5.<android.security.KeyStore$KeyCharacteristicsPromise: java.util.concurrent.CompletableFuture getFuture()>();

        $r10 = staticinvoke <android.security.KeyStore: java.lang.Object interruptedPreservingGet(java.util.concurrent.CompletableFuture)>($r9);

        r32 = (android.security.KeyStore$KeyCharacteristicsCallbackResult) $r10;

     label6:
        $r11 = r0.<android.security.KeyStore: android.security.keystore.IKeystoreService mBinder>;

        $r12 = interfaceinvoke $r11.<android.security.keystore.IKeystoreService: android.os.IBinder asBinder()>();

        interfaceinvoke $r12.<android.os.IBinder: boolean unlinkToDeath(android.os.IBinder$DeathRecipient,int)>($r5, 0);

        $r13 = virtualinvoke r32.<android.security.KeyStore$KeyCharacteristicsCallbackResult: android.security.keystore.KeystoreResponse getKeystoreResponse()>();

        i6 = virtualinvoke $r13.<android.security.keystore.KeystoreResponse: int getErrorCode()>();

        if i6 == 1 goto label7;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("generateKeyInternal failed on response ");

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i6);

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("KeyStore", $r21);

        return i6;

     label7:
        r34 = virtualinvoke r32.<android.security.KeyStore$KeyCharacteristicsCallbackResult: android.security.keymaster.KeyCharacteristics getKeyCharacteristics()>();

        if r34 != null goto label8;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("generateKeyInternal got empty key characteristics ");

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i6);

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("KeyStore", $r17);

        return 4;

     label8:
        virtualinvoke r3.<android.security.keymaster.KeyCharacteristics: void shallowCopyFrom(android.security.keymaster.KeyCharacteristics)>(r34);

        return 1;

     label9:
        $r27 := @caughtexception;

        $r28 = r0.<android.security.KeyStore: android.security.keystore.IKeystoreService mBinder>;

        $r29 = interfaceinvoke $r28.<android.security.keystore.IKeystoreService: android.os.IBinder asBinder()>();

        interfaceinvoke $r29.<android.os.IBinder: boolean unlinkToDeath(android.os.IBinder$DeathRecipient,int)>($r5, 0);

        throw $r27;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.Throwable from label3 to label4 with label9;
        catch java.lang.Throwable from label5 to label6 with label9;
    }

    private java.lang.String getAlgorithmFromPKCS8(byte[])
    {
        android.security.KeyStore r0;
        com.android.org.bouncycastle.asn1.ASN1Primitive $r1;
        com.android.org.bouncycastle.asn1.pkcs.PrivateKeyInfo $r2;
        com.android.org.bouncycastle.asn1.x509.AlgorithmIdentifier $r3;
        com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier $r4;
        java.lang.Throwable $r5;
        java.lang.String $r6, r10, r13;
        byte[] r7;
        com.android.org.bouncycastle.asn1.ASN1InputStream r8;
        java.io.ByteArrayInputStream r9;
        sun.security.x509.AlgorithmId r11;
        sun.security.util.ObjectIdentifier r12;

        r0 := @this: android.security.KeyStore;

        r7 := @parameter0: byte[];

     label1:
        r8 = new com.android.org.bouncycastle.asn1.ASN1InputStream;

        r9 = new java.io.ByteArrayInputStream;

        specialinvoke r9.<java.io.ByteArrayInputStream: void <init>(byte[])>(r7);

        specialinvoke r8.<com.android.org.bouncycastle.asn1.ASN1InputStream: void <init>(java.io.InputStream)>(r9);

        $r1 = virtualinvoke r8.<com.android.org.bouncycastle.asn1.ASN1InputStream: com.android.org.bouncycastle.asn1.ASN1Primitive readObject()>();

        $r2 = staticinvoke <com.android.org.bouncycastle.asn1.pkcs.PrivateKeyInfo: com.android.org.bouncycastle.asn1.pkcs.PrivateKeyInfo getInstance(java.lang.Object)>($r1);

        $r3 = virtualinvoke $r2.<com.android.org.bouncycastle.asn1.pkcs.PrivateKeyInfo: com.android.org.bouncycastle.asn1.x509.AlgorithmIdentifier getPrivateKeyAlgorithm()>();

        $r4 = virtualinvoke $r3.<com.android.org.bouncycastle.asn1.x509.AlgorithmIdentifier: com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier getAlgorithm()>();

        r10 = virtualinvoke $r4.<com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        r11 = new sun.security.x509.AlgorithmId;

        r12 = new sun.security.util.ObjectIdentifier;

        specialinvoke r12.<sun.security.util.ObjectIdentifier: void <init>(java.lang.String)>(r10);

        specialinvoke r11.<sun.security.x509.AlgorithmId: void <init>(sun.security.util.ObjectIdentifier)>(r12);

        r13 = virtualinvoke r11.<sun.security.x509.AlgorithmId: java.lang.String getName()>();

     label2:
        return r13;

     label3:
        $r5 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("KeyStore", "getAlgorithmFromPKCS8 Failed to parse key data");

        $r6 = staticinvoke <android.util.Log: java.lang.String getStackTraceString(java.lang.Throwable)>($r5);

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("KeyStore", $r6);

        return null;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public static android.content.Context getApplicationContext()
    {
        android.app.Application r0;
        java.lang.IllegalStateException $r1;

        r0 = staticinvoke <android.app.ActivityThread: android.app.Application currentApplication()>();

        if r0 == null goto label1;

        return r0;

     label1:
        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Failed to obtain application Context from ActivityThread");

        throw $r1;
    }

    public static android.security.KeyStore getInstance()
    {
        android.security.KeyStore $r0;
        android.os.IBinder $r1;
        android.security.keystore.IKeystoreService $r2;

        $r0 = new android.security.KeyStore;

        $r1 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("android.security.keystore");

        $r2 = staticinvoke <android.security.keystore.IKeystoreService$Stub: android.security.keystore.IKeystoreService asInterface(android.os.IBinder)>($r1);

        specialinvoke $r0.<android.security.KeyStore: void <init>(android.security.keystore.IKeystoreService)>($r2);

        return $r0;
    }

    public static android.security.KeyStoreException getKeyStoreException(int)
    {
        int i0;
        android.security.KeyStoreException $r0, $r1, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12;
        java.lang.String $r2, $r13;

        i0 := @parameter0: int;

        if i0 <= 0 goto label10;

        if i0 == 1 goto label09;

        if i0 == 2 goto label08;

        if i0 == 3 goto label07;

        if i0 == 4 goto label06;

        if i0 == 6 goto label05;

        if i0 == 7 goto label04;

        if i0 == 8 goto label03;

        if i0 == 15 goto label02;

        if i0 == 17 goto label01;

        $r12 = new android.security.KeyStoreException;

        $r13 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(i0);

        specialinvoke $r12.<android.security.KeyStoreException: void <init>(int,java.lang.String)>(i0, $r13);

        return $r12;

     label01:
        $r11 = new android.security.KeyStoreException;

        specialinvoke $r11.<android.security.KeyStoreException: void <init>(int,java.lang.String)>(i0, "Key permanently invalidated");

        return $r11;

     label02:
        $r10 = new android.security.KeyStoreException;

        specialinvoke $r10.<android.security.KeyStoreException: void <init>(int,java.lang.String)>(i0, "Operation requires authorization");

        return $r10;

     label03:
        $r9 = new android.security.KeyStoreException;

        specialinvoke $r9.<android.security.KeyStoreException: void <init>(int,java.lang.String)>(i0, "Key blob corrupted");

        return $r9;

     label04:
        $r8 = new android.security.KeyStoreException;

        specialinvoke $r8.<android.security.KeyStoreException: void <init>(int,java.lang.String)>(i0, "Key not found");

        return $r8;

     label05:
        $r7 = new android.security.KeyStoreException;

        specialinvoke $r7.<android.security.KeyStoreException: void <init>(int,java.lang.String)>(i0, "Permission denied");

        return $r7;

     label06:
        $r6 = new android.security.KeyStoreException;

        specialinvoke $r6.<android.security.KeyStoreException: void <init>(int,java.lang.String)>(i0, "System error");

        return $r6;

     label07:
        $r5 = new android.security.KeyStoreException;

        specialinvoke $r5.<android.security.KeyStoreException: void <init>(int,java.lang.String)>(i0, "Keystore not initialized");

        return $r5;

     label08:
        $r4 = new android.security.KeyStoreException;

        specialinvoke $r4.<android.security.KeyStoreException: void <init>(int,java.lang.String)>(i0, "User authentication required");

        return $r4;

     label09:
        $r3 = new android.security.KeyStoreException;

        specialinvoke $r3.<android.security.KeyStoreException: void <init>(int,java.lang.String)>(i0, "OK");

        return $r3;

     label10:
        if i0 == -16 goto label11;

        $r1 = new android.security.KeyStoreException;

        $r2 = staticinvoke <android.security.keymaster.KeymasterDefs: java.lang.String getErrorMessage(int)>(i0);

        specialinvoke $r1.<android.security.KeyStoreException: void <init>(int,java.lang.String)>(i0, $r2);

        return $r1;

     label11:
        $r0 = new android.security.KeyStoreException;

        specialinvoke $r0.<android.security.KeyStoreException: void <init>(int,java.lang.String)>(i0, "Invalid user authentication validity duration");

        return $r0;
    }

    private android.os.IBinder getToken()
    {
        android.security.KeyStore r0;
        android.os.IBinder $r1, r4;
        java.lang.Throwable $r2;
        android.os.Binder r3;

        r0 := @this: android.security.KeyStore;

        entermonitor r0;

     label1:
        $r1 = r0.<android.security.KeyStore: android.os.IBinder mToken>;

        if $r1 != null goto label2;

        r3 = new android.os.Binder;

        specialinvoke r3.<android.os.Binder: void <init>()>();

        r0.<android.security.KeyStore: android.os.IBinder mToken> = r3;

     label2:
        r4 = r0.<android.security.KeyStore: android.os.IBinder mToken>;

     label3:
        exitmonitor r0;

        return r4;

     label4:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
    }

    private int importKeyInternal(java.lang.String, android.security.keymaster.KeymasterArguments, int, byte[], int, int, android.security.keymaster.KeyCharacteristics) throws android.os.RemoteException, java.util.concurrent.ExecutionException
    {
        android.security.KeyStore r0;
        android.security.keymaster.KeymasterArguments r1;
        byte[] r2;
        int i0, i1, i2, i3, i4;
        android.security.keymaster.KeyCharacteristics r3, r26;
        android.security.KeyStore$KeyCharacteristicsPromise $r5;
        android.security.keystore.IKeystoreService $r6, $r8, $r12, $r14, $r16, $r18, $r21;
        android.os.IBinder $r7, $r13, $r15, $r17, $r19, $r22;
        java.util.concurrent.CompletableFuture $r9;
        java.lang.Object $r10;
        android.security.keystore.KeystoreResponse $r11;
        java.lang.Throwable $r20, $r23, r27;
        java.lang.String r24;
        android.security.KeyStore$KeyCharacteristicsCallbackResult r25;

        r0 := @this: android.security.KeyStore;

        r24 := @parameter0: java.lang.String;

        r1 := @parameter1: android.security.keymaster.KeymasterArguments;

        i2 := @parameter2: int;

        r2 := @parameter3: byte[];

        i0 := @parameter4: int;

        i1 := @parameter5: int;

        r3 := @parameter6: android.security.keymaster.KeyCharacteristics;

        $r5 = new android.security.KeyStore$KeyCharacteristicsPromise;

        specialinvoke $r5.<android.security.KeyStore$KeyCharacteristicsPromise: void <init>(android.security.KeyStore,android.security.KeyStore$1)>(r0, null);

        $r6 = r0.<android.security.KeyStore: android.security.keystore.IKeystoreService mBinder>;

        $r7 = interfaceinvoke $r6.<android.security.keystore.IKeystoreService: android.os.IBinder asBinder()>();

        interfaceinvoke $r7.<android.os.IBinder: void linkToDeath(android.os.IBinder$DeathRecipient,int)>($r5, 0);

     label01:
        $r8 = r0.<android.security.KeyStore: android.security.keystore.IKeystoreService mBinder>;

        i3 = interfaceinvoke $r8.<android.security.keystore.IKeystoreService: int importKey(android.security.keystore.IKeystoreKeyCharacteristicsCallback,java.lang.String,android.security.keymaster.KeymasterArguments,int,byte[],int,int)>($r5, r24, r1, i2, r2, i0, i1);

     label02:
        if i3 == 1 goto label03;

        $r18 = r0.<android.security.KeyStore: android.security.keystore.IKeystoreService mBinder>;

        $r19 = interfaceinvoke $r18.<android.security.keystore.IKeystoreService: android.os.IBinder asBinder()>();

        interfaceinvoke $r19.<android.os.IBinder: boolean unlinkToDeath(android.os.IBinder$DeathRecipient,int)>($r5, 0);

        return i3;

     label03:
        $r9 = virtualinvoke $r5.<android.security.KeyStore$KeyCharacteristicsPromise: java.util.concurrent.CompletableFuture getFuture()>();

        $r10 = staticinvoke <android.security.KeyStore: java.lang.Object interruptedPreservingGet(java.util.concurrent.CompletableFuture)>($r9);

        r25 = (android.security.KeyStore$KeyCharacteristicsCallbackResult) $r10;

        $r11 = virtualinvoke r25.<android.security.KeyStore$KeyCharacteristicsCallbackResult: android.security.keystore.KeystoreResponse getKeystoreResponse()>();

        i4 = virtualinvoke $r11.<android.security.keystore.KeystoreResponse: int getErrorCode()>();

     label04:
        if i4 == 1 goto label05;

        $r16 = r0.<android.security.KeyStore: android.security.keystore.IKeystoreService mBinder>;

        $r17 = interfaceinvoke $r16.<android.security.keystore.IKeystoreService: android.os.IBinder asBinder()>();

        interfaceinvoke $r17.<android.os.IBinder: boolean unlinkToDeath(android.os.IBinder$DeathRecipient,int)>($r5, 0);

        return i4;

     label05:
        r26 = virtualinvoke r25.<android.security.KeyStore$KeyCharacteristicsCallbackResult: android.security.keymaster.KeyCharacteristics getKeyCharacteristics()>();

     label06:
        if r26 != null goto label07;

        $r14 = r0.<android.security.KeyStore: android.security.keystore.IKeystoreService mBinder>;

        $r15 = interfaceinvoke $r14.<android.security.keystore.IKeystoreService: android.os.IBinder asBinder()>();

        interfaceinvoke $r15.<android.os.IBinder: boolean unlinkToDeath(android.os.IBinder$DeathRecipient,int)>($r5, 0);

        return 4;

     label07:
        virtualinvoke r3.<android.security.keymaster.KeyCharacteristics: void shallowCopyFrom(android.security.keymaster.KeyCharacteristics)>(r26);

     label08:
        $r12 = r0.<android.security.KeyStore: android.security.keystore.IKeystoreService mBinder>;

        $r13 = interfaceinvoke $r12.<android.security.keystore.IKeystoreService: android.os.IBinder asBinder()>();

        interfaceinvoke $r13.<android.os.IBinder: boolean unlinkToDeath(android.os.IBinder$DeathRecipient,int)>($r5, 0);

        return 1;

     label09:
        $r20 := @caughtexception;

        r27 = $r20;

        goto label11;

     label10:
        $r23 := @caughtexception;

        r27 = $r23;

     label11:
        $r21 = r0.<android.security.KeyStore: android.security.keystore.IKeystoreService mBinder>;

        $r22 = interfaceinvoke $r21.<android.security.keystore.IKeystoreService: android.os.IBinder asBinder()>();

        interfaceinvoke $r22.<android.os.IBinder: boolean unlinkToDeath(android.os.IBinder$DeathRecipient,int)>($r5, 0);

        throw r27;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label07 to label08 with label09;
    }

    private int importWrappedKeyInternal(java.lang.String, byte[], java.lang.String, byte[], android.security.keymaster.KeymasterArguments, long, long, android.security.keymaster.KeyCharacteristics) throws android.os.RemoteException, java.util.concurrent.ExecutionException
    {
        android.security.KeyStore r0;
        byte[] r1, r3;
        java.lang.String r2, r26;
        android.security.keymaster.KeymasterArguments r4;
        long l0, l1;
        android.security.keymaster.KeyCharacteristics r5, r28;
        android.security.KeyStore$KeyCharacteristicsPromise $r7;
        android.security.keystore.IKeystoreService $r8, $r10, $r14, $r16, $r18, $r20, $r23;
        android.os.IBinder $r9, $r15, $r17, $r19, $r21, $r24;
        java.util.concurrent.CompletableFuture $r11;
        java.lang.Object $r12;
        android.security.keystore.KeystoreResponse $r13;
        java.lang.Throwable $r22, $r25, r29;
        int i2, i3;
        android.security.KeyStore$KeyCharacteristicsCallbackResult r27;

        r0 := @this: android.security.KeyStore;

        r26 := @parameter0: java.lang.String;

        r1 := @parameter1: byte[];

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: byte[];

        r4 := @parameter4: android.security.keymaster.KeymasterArguments;

        l0 := @parameter5: long;

        l1 := @parameter6: long;

        r5 := @parameter7: android.security.keymaster.KeyCharacteristics;

        $r7 = new android.security.KeyStore$KeyCharacteristicsPromise;

        specialinvoke $r7.<android.security.KeyStore$KeyCharacteristicsPromise: void <init>(android.security.KeyStore,android.security.KeyStore$1)>(r0, null);

        $r8 = r0.<android.security.KeyStore: android.security.keystore.IKeystoreService mBinder>;

        $r9 = interfaceinvoke $r8.<android.security.keystore.IKeystoreService: android.os.IBinder asBinder()>();

        interfaceinvoke $r9.<android.os.IBinder: void linkToDeath(android.os.IBinder$DeathRecipient,int)>($r7, 0);

     label01:
        $r10 = r0.<android.security.KeyStore: android.security.keystore.IKeystoreService mBinder>;

        i2 = interfaceinvoke $r10.<android.security.keystore.IKeystoreService: int importWrappedKey(android.security.keystore.IKeystoreKeyCharacteristicsCallback,java.lang.String,byte[],java.lang.String,byte[],android.security.keymaster.KeymasterArguments,long,long)>($r7, r26, r1, r2, r3, r4, l0, l1);

     label02:
        if i2 == 1 goto label03;

        $r20 = r0.<android.security.KeyStore: android.security.keystore.IKeystoreService mBinder>;

        $r21 = interfaceinvoke $r20.<android.security.keystore.IKeystoreService: android.os.IBinder asBinder()>();

        interfaceinvoke $r21.<android.os.IBinder: boolean unlinkToDeath(android.os.IBinder$DeathRecipient,int)>($r7, 0);

        return i2;

     label03:
        $r11 = virtualinvoke $r7.<android.security.KeyStore$KeyCharacteristicsPromise: java.util.concurrent.CompletableFuture getFuture()>();

        $r12 = staticinvoke <android.security.KeyStore: java.lang.Object interruptedPreservingGet(java.util.concurrent.CompletableFuture)>($r11);

        r27 = (android.security.KeyStore$KeyCharacteristicsCallbackResult) $r12;

        $r13 = virtualinvoke r27.<android.security.KeyStore$KeyCharacteristicsCallbackResult: android.security.keystore.KeystoreResponse getKeystoreResponse()>();

        i3 = virtualinvoke $r13.<android.security.keystore.KeystoreResponse: int getErrorCode()>();

     label04:
        if i3 == 1 goto label05;

        $r18 = r0.<android.security.KeyStore: android.security.keystore.IKeystoreService mBinder>;

        $r19 = interfaceinvoke $r18.<android.security.keystore.IKeystoreService: android.os.IBinder asBinder()>();

        interfaceinvoke $r19.<android.os.IBinder: boolean unlinkToDeath(android.os.IBinder$DeathRecipient,int)>($r7, 0);

        return i3;

     label05:
        r28 = virtualinvoke r27.<android.security.KeyStore$KeyCharacteristicsCallbackResult: android.security.keymaster.KeyCharacteristics getKeyCharacteristics()>();

     label06:
        if r28 != null goto label07;

        $r16 = r0.<android.security.KeyStore: android.security.keystore.IKeystoreService mBinder>;

        $r17 = interfaceinvoke $r16.<android.security.keystore.IKeystoreService: android.os.IBinder asBinder()>();

        interfaceinvoke $r17.<android.os.IBinder: boolean unlinkToDeath(android.os.IBinder$DeathRecipient,int)>($r7, 0);

        return 4;

     label07:
        virtualinvoke r5.<android.security.keymaster.KeyCharacteristics: void shallowCopyFrom(android.security.keymaster.KeyCharacteristics)>(r28);

     label08:
        $r14 = r0.<android.security.KeyStore: android.security.keystore.IKeystoreService mBinder>;

        $r15 = interfaceinvoke $r14.<android.security.keystore.IKeystoreService: android.os.IBinder asBinder()>();

        interfaceinvoke $r15.<android.os.IBinder: boolean unlinkToDeath(android.os.IBinder$DeathRecipient,int)>($r7, 0);

        return 1;

     label09:
        $r22 := @caughtexception;

        r29 = $r22;

        goto label11;

     label10:
        $r25 := @caughtexception;

        r29 = $r25;

     label11:
        $r23 = r0.<android.security.KeyStore: android.security.keystore.IKeystoreService mBinder>;

        $r24 = interfaceinvoke $r23.<android.security.keystore.IKeystoreService: android.os.IBinder asBinder()>();

        interfaceinvoke $r24.<android.os.IBinder: boolean unlinkToDeath(android.os.IBinder$DeathRecipient,int)>($r7, 0);

        throw r29;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label07 to label08 with label09;
    }

    private static java.lang.Object interruptedPreservingGet(java.util.concurrent.CompletableFuture) throws java.util.concurrent.ExecutionException
    {
        java.util.concurrent.CompletableFuture r0;
        java.lang.Thread $r1;
        java.lang.Throwable $r2;
        boolean z0;
        java.lang.Object r3;

        r0 := @parameter0: java.util.concurrent.CompletableFuture;

        z0 = 0;

     label1:
        r3 = virtualinvoke r0.<java.util.concurrent.CompletableFuture: java.lang.Object get()>();

     label2:
        if z0 == 0 goto label4;

     label3:
        $r1 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        virtualinvoke $r1.<java.lang.Thread: void interrupt()>();

     label4:
        return r3;

     label5:
        $r2 := @caughtexception;

        z0 = 1;

        goto label1;

        catch java.lang.InterruptedException from label1 to label2 with label5;
        catch java.lang.InterruptedException from label3 to label4 with label5;
    }

    private android.security.keymaster.KeymasterArguments makeLegacyArguments(java.lang.String)
    {
        android.security.KeyStore r0;
        java.lang.String r1;
        android.security.keymaster.KeymasterArguments $r3;
        int $i0;
        boolean $z0;
        java.util.Date $r4, $r5, $r6;

        r0 := @this: android.security.KeyStore;

        r1 := @parameter0: java.lang.String;

        $r3 = new android.security.keymaster.KeymasterArguments;

        specialinvoke $r3.<android.security.keymaster.KeymasterArguments: void <init>()>();

        $i0 = staticinvoke <android.security.keystore.KeyProperties$KeyAlgorithm: int toKeymasterAsymmetricKeyAlgorithm(java.lang.String)>(r1);

        virtualinvoke $r3.<android.security.keymaster.KeymasterArguments: void addEnum(int,int)>(268435458, $i0);

        virtualinvoke $r3.<android.security.keymaster.KeymasterArguments: void addEnum(int,int)>(536870913, 2);

        virtualinvoke $r3.<android.security.keymaster.KeymasterArguments: void addEnum(int,int)>(536870913, 3);

        virtualinvoke $r3.<android.security.keymaster.KeymasterArguments: void addEnum(int,int)>(536870913, 0);

        virtualinvoke $r3.<android.security.keymaster.KeymasterArguments: void addEnum(int,int)>(536870913, 1);

        virtualinvoke $r3.<android.security.keymaster.KeymasterArguments: void addEnum(int,int)>(536870918, 1);

        $z0 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("RSA");

        if $z0 == 0 goto label1;

        virtualinvoke $r3.<android.security.keymaster.KeymasterArguments: void addEnum(int,int)>(536870918, 2);

        virtualinvoke $r3.<android.security.keymaster.KeymasterArguments: void addEnum(int,int)>(536870918, 4);

        virtualinvoke $r3.<android.security.keymaster.KeymasterArguments: void addEnum(int,int)>(536870918, 5);

        virtualinvoke $r3.<android.security.keymaster.KeymasterArguments: void addEnum(int,int)>(536870918, 3);

     label1:
        virtualinvoke $r3.<android.security.keymaster.KeymasterArguments: void addEnum(int,int)>(536870917, 0);

        virtualinvoke $r3.<android.security.keymaster.KeymasterArguments: void addEnum(int,int)>(536870917, 1);

        virtualinvoke $r3.<android.security.keymaster.KeymasterArguments: void addEnum(int,int)>(536870917, 2);

        virtualinvoke $r3.<android.security.keymaster.KeymasterArguments: void addEnum(int,int)>(536870917, 3);

        virtualinvoke $r3.<android.security.keymaster.KeymasterArguments: void addEnum(int,int)>(536870917, 4);

        virtualinvoke $r3.<android.security.keymaster.KeymasterArguments: void addEnum(int,int)>(536870917, 5);

        virtualinvoke $r3.<android.security.keymaster.KeymasterArguments: void addEnum(int,int)>(536870917, 6);

        virtualinvoke $r3.<android.security.keymaster.KeymasterArguments: void addBoolean(int)>(1879048695);

        $r4 = new java.util.Date;

        specialinvoke $r4.<java.util.Date: void <init>(long)>(9223372036854775807L);

        virtualinvoke $r3.<android.security.keymaster.KeymasterArguments: void addDate(int,java.util.Date)>(1610613137, $r4);

        $r5 = new java.util.Date;

        specialinvoke $r5.<java.util.Date: void <init>(long)>(9223372036854775807L);

        virtualinvoke $r3.<android.security.keymaster.KeymasterArguments: void addDate(int,java.util.Date)>(1610613138, $r5);

        $r6 = new java.util.Date;

        specialinvoke $r6.<java.util.Date: void <init>(long)>(0L);

        virtualinvoke $r3.<android.security.keymaster.KeymasterArguments: void addDate(int,java.util.Date)>(1610613136, $r6);

        return $r3;
    }

    public int abort(android.os.IBinder)
    {
        android.security.KeyStore r0;
        android.security.KeyStore$KeystoreResultPromise $r2;
        android.security.keystore.IKeystoreService $r3, $r5, $r6, $r11, $r14, $r17, $r20;
        android.os.IBinder $r4, $r7, $r12, $r15, $r18, $r21, r22;
        java.util.concurrent.CompletableFuture $r8;
        java.lang.Object $r9;
        android.security.keystore.KeystoreResponse $r10;
        java.lang.Throwable $r13, $r16;
        android.os.RemoteException $r19;
        int i2, i3;

        r0 := @this: android.security.KeyStore;

        r22 := @parameter0: android.os.IBinder;

        $r2 = new android.security.KeyStore$KeystoreResultPromise;

        specialinvoke $r2.<android.security.KeyStore$KeystoreResultPromise: void <init>(android.security.KeyStore,android.security.KeyStore$1)>(r0, null);

     label01:
        $r3 = r0.<android.security.KeyStore: android.security.keystore.IKeystoreService mBinder>;

        $r4 = interfaceinvoke $r3.<android.security.keystore.IKeystoreService: android.os.IBinder asBinder()>();

        interfaceinvoke $r4.<android.os.IBinder: void linkToDeath(android.os.IBinder$DeathRecipient,int)>($r2, 0);

        $r5 = r0.<android.security.KeyStore: android.security.keystore.IKeystoreService mBinder>;

        i2 = interfaceinvoke $r5.<android.security.keystore.IKeystoreService: int abort(android.security.keystore.IKeystoreResponseCallback,android.os.IBinder)>($r2, r22);

     label02:
        if i2 != 1 goto label05;

     label03:
        $r8 = virtualinvoke $r2.<android.security.KeyStore$KeystoreResultPromise: java.util.concurrent.CompletableFuture getFuture()>();

        $r9 = staticinvoke <android.security.KeyStore: java.lang.Object interruptedPreservingGet(java.util.concurrent.CompletableFuture)>($r8);

        $r10 = (android.security.keystore.KeystoreResponse) $r9;

        i3 = virtualinvoke $r10.<android.security.keystore.KeystoreResponse: int getErrorCode()>();

     label04:
        $r11 = r0.<android.security.KeyStore: android.security.keystore.IKeystoreService mBinder>;

        $r12 = interfaceinvoke $r11.<android.security.keystore.IKeystoreService: android.os.IBinder asBinder()>();

        interfaceinvoke $r12.<android.os.IBinder: boolean unlinkToDeath(android.os.IBinder$DeathRecipient,int)>($r2, 0);

        return i3;

     label05:
        $r6 = r0.<android.security.KeyStore: android.security.keystore.IKeystoreService mBinder>;

        $r7 = interfaceinvoke $r6.<android.security.keystore.IKeystoreService: android.os.IBinder asBinder()>();

        interfaceinvoke $r7.<android.os.IBinder: boolean unlinkToDeath(android.os.IBinder$DeathRecipient,int)>($r2, 0);

        return i2;

     label06:
        $r13 := @caughtexception;

        goto label13;

     label07:
        $r16 := @caughtexception;

     label08:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("KeyStore", "Abort completed with exception", $r16);

     label09:
        $r17 = r0.<android.security.KeyStore: android.security.keystore.IKeystoreService mBinder>;

        $r18 = interfaceinvoke $r17.<android.security.keystore.IKeystoreService: android.os.IBinder asBinder()>();

        interfaceinvoke $r18.<android.os.IBinder: boolean unlinkToDeath(android.os.IBinder$DeathRecipient,int)>($r2, 0);

        return 4;

     label10:
        $r19 := @caughtexception;

     label11:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("KeyStore", "Cannot connect to keystore", $r19);

     label12:
        $r20 = r0.<android.security.KeyStore: android.security.keystore.IKeystoreService mBinder>;

        $r21 = interfaceinvoke $r20.<android.security.keystore.IKeystoreService: android.os.IBinder asBinder()>();

        interfaceinvoke $r21.<android.os.IBinder: boolean unlinkToDeath(android.os.IBinder$DeathRecipient,int)>($r2, 0);

        return 4;

     label13:
        $r14 = r0.<android.security.KeyStore: android.security.keystore.IKeystoreService mBinder>;

        $r15 = interfaceinvoke $r14.<android.security.keystore.IKeystoreService: android.os.IBinder asBinder()>();

        interfaceinvoke $r15.<android.os.IBinder: boolean unlinkToDeath(android.os.IBinder$DeathRecipient,int)>($r2, 0);

        throw $r13;

        catch android.os.RemoteException from label01 to label02 with label10;
        catch java.util.concurrent.ExecutionException from label01 to label02 with label07;
        catch java.lang.Throwable from label01 to label02 with label06;
        catch android.os.RemoteException from label03 to label04 with label10;
        catch java.util.concurrent.ExecutionException from label03 to label04 with label07;
        catch java.lang.Throwable from label03 to label04 with label06;
        catch java.lang.Throwable from label08 to label09 with label06;
        catch java.lang.Throwable from label11 to label12 with label06;
    }

    public int addAuthToken(byte[])
    {
        android.security.KeyStore r0;
        int i0;
        android.security.keystore.IKeystoreService $r1;
        android.os.RemoteException $r2;
        byte[] r3;

        r0 := @this: android.security.KeyStore;

        r3 := @parameter0: byte[];

     label1:
        $r1 = r0.<android.security.KeyStore: android.security.keystore.IKeystoreService mBinder>;

        i0 = interfaceinvoke $r1.<android.security.keystore.IKeystoreService: int addAuthToken(byte[])>(r3);

     label2:
        return i0;

     label3:
        $r2 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("KeyStore", "Cannot connect to keystore", $r2);

        return 4;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean addRngEntropy(byte[], int)
    {
        android.security.KeyStore r0;
        android.security.KeyStore$KeystoreResultPromise $r2;
        android.security.keystore.IKeystoreService $r3, $r5, $r6, $r11, $r14, $r17, $r20;
        android.os.IBinder $r4, $r7, $r12, $r15, $r18, $r21;
        java.util.concurrent.CompletableFuture $r8;
        java.lang.Object $r9;
        android.security.keystore.KeystoreResponse $r10;
        android.os.RemoteException $r13;
        java.lang.Throwable $r16, $r19;
        byte[] r22;
        int i2, i3, i4;
        boolean z5;

        r0 := @this: android.security.KeyStore;

        r22 := @parameter0: byte[];

        i2 := @parameter1: int;

        $r2 = new android.security.KeyStore$KeystoreResultPromise;

        specialinvoke $r2.<android.security.KeyStore$KeystoreResultPromise: void <init>(android.security.KeyStore,android.security.KeyStore$1)>(r0, null);

     label01:
        $r3 = r0.<android.security.KeyStore: android.security.keystore.IKeystoreService mBinder>;

        $r4 = interfaceinvoke $r3.<android.security.keystore.IKeystoreService: android.os.IBinder asBinder()>();

        interfaceinvoke $r4.<android.os.IBinder: void linkToDeath(android.os.IBinder$DeathRecipient,int)>($r2, 0);

        $r5 = r0.<android.security.KeyStore: android.security.keystore.IKeystoreService mBinder>;

        i3 = interfaceinvoke $r5.<android.security.keystore.IKeystoreService: int addRngEntropy(android.security.keystore.IKeystoreResponseCallback,byte[],int)>($r2, r22, i2);

     label02:
        z5 = 1;

        if i3 != 1 goto label07;

     label03:
        $r8 = virtualinvoke $r2.<android.security.KeyStore$KeystoreResultPromise: java.util.concurrent.CompletableFuture getFuture()>();

        $r9 = staticinvoke <android.security.KeyStore: java.lang.Object interruptedPreservingGet(java.util.concurrent.CompletableFuture)>($r8);

        $r10 = (android.security.keystore.KeystoreResponse) $r9;

        i4 = virtualinvoke $r10.<android.security.keystore.KeystoreResponse: int getErrorCode()>();

     label04:
        if i4 != 1 goto label05;

        goto label06;

     label05:
        z5 = 0;

     label06:
        $r11 = r0.<android.security.KeyStore: android.security.keystore.IKeystoreService mBinder>;

        $r12 = interfaceinvoke $r11.<android.security.keystore.IKeystoreService: android.os.IBinder asBinder()>();

        interfaceinvoke $r12.<android.os.IBinder: boolean unlinkToDeath(android.os.IBinder$DeathRecipient,int)>($r2, 0);

        return z5;

     label07:
        $r6 = r0.<android.security.KeyStore: android.security.keystore.IKeystoreService mBinder>;

        $r7 = interfaceinvoke $r6.<android.security.keystore.IKeystoreService: android.os.IBinder asBinder()>();

        interfaceinvoke $r7.<android.os.IBinder: boolean unlinkToDeath(android.os.IBinder$DeathRecipient,int)>($r2, 0);

        return 0;

     label08:
        $r16 := @caughtexception;

        goto label15;

     label09:
        $r19 := @caughtexception;

     label10:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("KeyStore", "AddRngEntropy completed with exception", $r19);

     label11:
        $r20 = r0.<android.security.KeyStore: android.security.keystore.IKeystoreService mBinder>;

        $r21 = interfaceinvoke $r20.<android.security.keystore.IKeystoreService: android.os.IBinder asBinder()>();

        interfaceinvoke $r21.<android.os.IBinder: boolean unlinkToDeath(android.os.IBinder$DeathRecipient,int)>($r2, 0);

        return 0;

     label12:
        $r13 := @caughtexception;

     label13:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("KeyStore", "Cannot connect to keystore", $r13);

     label14:
        $r14 = r0.<android.security.KeyStore: android.security.keystore.IKeystoreService mBinder>;

        $r15 = interfaceinvoke $r14.<android.security.keystore.IKeystoreService: android.os.IBinder asBinder()>();

        interfaceinvoke $r15.<android.os.IBinder: boolean unlinkToDeath(android.os.IBinder$DeathRecipient,int)>($r2, 0);

        return 0;

     label15:
        $r17 = r0.<android.security.KeyStore: android.security.keystore.IKeystoreService mBinder>;

        $r18 = interfaceinvoke $r17.<android.security.keystore.IKeystoreService: android.os.IBinder asBinder()>();

        interfaceinvoke $r18.<android.os.IBinder: boolean unlinkToDeath(android.os.IBinder$DeathRecipient,int)>($r2, 0);

        throw $r16;

        catch android.os.RemoteException from label01 to label02 with label12;
        catch java.util.concurrent.ExecutionException from label01 to label02 with label09;
        catch java.lang.Throwable from label01 to label02 with label08;
        catch android.os.RemoteException from label03 to label04 with label12;
        catch java.util.concurrent.ExecutionException from label03 to label04 with label09;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label10 to label11 with label08;
        catch java.lang.Throwable from label13 to label14 with label08;
    }

    public int attestDeviceIds(android.security.keymaster.KeymasterArguments, android.security.keymaster.KeymasterCertificateChain)
    {
        android.security.KeyStore r0;
        android.security.KeyStore$CertificateChainPromise $r2;
        android.security.keystore.IKeystoreService $r3, $r5, $r9, $r12, $r15, $r18, $r21;
        android.os.IBinder $r4, $r10, $r13, $r16, $r19, $r22;
        java.util.concurrent.CompletableFuture $r6;
        java.lang.Object $r7;
        android.security.keystore.KeystoreResponse $r8;
        android.security.keymaster.KeymasterCertificateChain $r11, r24, r26;
        java.lang.Throwable $r14, $r20;
        android.os.RemoteException $r17;
        android.security.keymaster.KeymasterArguments r23, r25;
        int i2, i3;
        android.security.KeyStore$KeyAttestationCallbackResult r27;

        r0 := @this: android.security.KeyStore;

        r23 := @parameter0: android.security.keymaster.KeymasterArguments;

        r24 := @parameter1: android.security.keymaster.KeymasterCertificateChain;

        $r2 = new android.security.KeyStore$CertificateChainPromise;

        specialinvoke $r2.<android.security.KeyStore$CertificateChainPromise: void <init>(android.security.KeyStore,android.security.KeyStore$1)>(r0, null);

     label01:
        $r3 = r0.<android.security.KeyStore: android.security.keystore.IKeystoreService mBinder>;

        $r4 = interfaceinvoke $r3.<android.security.keystore.IKeystoreService: android.os.IBinder asBinder()>();

        interfaceinvoke $r4.<android.os.IBinder: void linkToDeath(android.os.IBinder$DeathRecipient,int)>($r2, 0);

     label02:
        r25 = r23;

        if r23 != null goto label04;

     label03:
        r25 = new android.security.keymaster.KeymasterArguments;

        specialinvoke r25.<android.security.keymaster.KeymasterArguments: void <init>()>();

     label04:
        r26 = r24;

        if r24 != null goto label06;

     label05:
        r26 = new android.security.keymaster.KeymasterCertificateChain;

        specialinvoke r26.<android.security.keymaster.KeymasterCertificateChain: void <init>()>();

     label06:
        $r5 = r0.<android.security.KeyStore: android.security.keystore.IKeystoreService mBinder>;

        i2 = interfaceinvoke $r5.<android.security.keystore.IKeystoreService: int attestDeviceIds(android.security.keystore.IKeystoreCertificateChainCallback,android.security.keymaster.KeymasterArguments)>($r2, r25);

     label07:
        if i2 == 1 goto label08;

        $r12 = r0.<android.security.KeyStore: android.security.keystore.IKeystoreService mBinder>;

        $r13 = interfaceinvoke $r12.<android.security.keystore.IKeystoreService: android.os.IBinder asBinder()>();

        interfaceinvoke $r13.<android.os.IBinder: boolean unlinkToDeath(android.os.IBinder$DeathRecipient,int)>($r2, 0);

        return i2;

     label08:
        $r6 = virtualinvoke $r2.<android.security.KeyStore$CertificateChainPromise: java.util.concurrent.CompletableFuture getFuture()>();

        $r7 = staticinvoke <android.security.KeyStore: java.lang.Object interruptedPreservingGet(java.util.concurrent.CompletableFuture)>($r6);

        r27 = (android.security.KeyStore$KeyAttestationCallbackResult) $r7;

        $r8 = virtualinvoke r27.<android.security.KeyStore$KeyAttestationCallbackResult: android.security.keystore.KeystoreResponse getKeystoreResponse()>();

        i3 = virtualinvoke $r8.<android.security.keystore.KeystoreResponse: int getErrorCode()>();

     label09:
        if i3 != 1 goto label11;

     label10:
        $r11 = virtualinvoke r27.<android.security.KeyStore$KeyAttestationCallbackResult: android.security.keymaster.KeymasterCertificateChain getCertificateChain()>();

        virtualinvoke r26.<android.security.keymaster.KeymasterCertificateChain: void shallowCopyFrom(android.security.keymaster.KeymasterCertificateChain)>($r11);

     label11:
        $r9 = r0.<android.security.KeyStore: android.security.keystore.IKeystoreService mBinder>;

        $r10 = interfaceinvoke $r9.<android.security.keystore.IKeystoreService: android.os.IBinder asBinder()>();

        interfaceinvoke $r10.<android.os.IBinder: boolean unlinkToDeath(android.os.IBinder$DeathRecipient,int)>($r2, 0);

        return i3;

     label12:
        $r20 := @caughtexception;

        goto label19;

     label13:
        $r14 := @caughtexception;

     label14:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("KeyStore", "AttestDevicdeIds completed with exception", $r14);

     label15:
        $r15 = r0.<android.security.KeyStore: android.security.keystore.IKeystoreService mBinder>;

        $r16 = interfaceinvoke $r15.<android.security.keystore.IKeystoreService: android.os.IBinder asBinder()>();

        interfaceinvoke $r16.<android.os.IBinder: boolean unlinkToDeath(android.os.IBinder$DeathRecipient,int)>($r2, 0);

        return 4;

     label16:
        $r17 := @caughtexception;

     label17:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("KeyStore", "Cannot connect to keystore", $r17);

     label18:
        $r18 = r0.<android.security.KeyStore: android.security.keystore.IKeystoreService mBinder>;

        $r19 = interfaceinvoke $r18.<android.security.keystore.IKeystoreService: android.os.IBinder asBinder()>();

        interfaceinvoke $r19.<android.os.IBinder: boolean unlinkToDeath(android.os.IBinder$DeathRecipient,int)>($r2, 0);

        return 4;

     label19:
        $r21 = r0.<android.security.KeyStore: android.security.keystore.IKeystoreService mBinder>;

        $r22 = interfaceinvoke $r21.<android.security.keystore.IKeystoreService: android.os.IBinder asBinder()>();

        interfaceinvoke $r22.<android.os.IBinder: boolean unlinkToDeath(android.os.IBinder$DeathRecipient,int)>($r2, 0);

        throw $r20;

        catch android.os.RemoteException from label01 to label02 with label16;
        catch java.util.concurrent.ExecutionException from label01 to label02 with label13;
        catch java.lang.Throwable from label01 to label02 with label12;
        catch android.os.RemoteException from label03 to label04 with label16;
        catch java.util.concurrent.ExecutionException from label03 to label04 with label13;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch android.os.RemoteException from label05 to label06 with label16;
        catch java.util.concurrent.ExecutionException from label05 to label06 with label13;
        catch java.lang.Throwable from label05 to label06 with label12;
        catch android.os.RemoteException from label06 to label07 with label16;
        catch java.util.concurrent.ExecutionException from label06 to label07 with label13;
        catch java.lang.Throwable from label06 to label07 with label12;
        catch android.os.RemoteException from label08 to label09 with label16;
        catch java.util.concurrent.ExecutionException from label08 to label09 with label13;
        catch java.lang.Throwable from label08 to label09 with label12;
        catch android.os.RemoteException from label10 to label11 with label16;
        catch java.util.concurrent.ExecutionException from label10 to label11 with label13;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label14 to label15 with label12;
        catch java.lang.Throwable from label17 to label18 with label12;
    }

    public int attestKey(java.lang.String, android.security.keymaster.KeymasterArguments, android.security.keymaster.KeymasterCertificateChain)
    {
        android.security.KeyStore r0;
        android.security.keymaster.KeymasterCertificateChain r1, $r12, r27;
        android.security.KeyStore$CertificateChainPromise $r3;
        android.security.keystore.IKeystoreService $r4, $r6, $r10, $r13, $r16, $r19, $r22;
        android.os.IBinder $r5, $r11, $r14, $r17, $r20, $r23;
        java.util.concurrent.CompletableFuture $r7;
        java.lang.Object $r8;
        android.security.keystore.KeystoreResponse $r9;
        android.os.RemoteException $r15;
        java.lang.Throwable $r18, $r21;
        java.lang.String r24;
        android.security.keymaster.KeymasterArguments r25, r26;
        int i2, i3;
        android.security.KeyStore$KeyAttestationCallbackResult r28;

        r0 := @this: android.security.KeyStore;

        r24 := @parameter0: java.lang.String;

        r25 := @parameter1: android.security.keymaster.KeymasterArguments;

        r1 := @parameter2: android.security.keymaster.KeymasterCertificateChain;

        $r3 = new android.security.KeyStore$CertificateChainPromise;

        specialinvoke $r3.<android.security.KeyStore$CertificateChainPromise: void <init>(android.security.KeyStore,android.security.KeyStore$1)>(r0, null);

     label01:
        $r4 = r0.<android.security.KeyStore: android.security.keystore.IKeystoreService mBinder>;

        $r5 = interfaceinvoke $r4.<android.security.keystore.IKeystoreService: android.os.IBinder asBinder()>();

        interfaceinvoke $r5.<android.os.IBinder: void linkToDeath(android.os.IBinder$DeathRecipient,int)>($r3, 0);

     label02:
        r26 = r25;

        if r25 != null goto label04;

     label03:
        r26 = new android.security.keymaster.KeymasterArguments;

        specialinvoke r26.<android.security.keymaster.KeymasterArguments: void <init>()>();

     label04:
        r27 = r1;

        if r1 != null goto label06;

     label05:
        r27 = new android.security.keymaster.KeymasterCertificateChain;

        specialinvoke r27.<android.security.keymaster.KeymasterCertificateChain: void <init>()>();

     label06:
        $r6 = r0.<android.security.KeyStore: android.security.keystore.IKeystoreService mBinder>;

        i2 = interfaceinvoke $r6.<android.security.keystore.IKeystoreService: int attestKey(android.security.keystore.IKeystoreCertificateChainCallback,java.lang.String,android.security.keymaster.KeymasterArguments)>($r3, r24, r26);

     label07:
        if i2 == 1 goto label08;

        $r13 = r0.<android.security.KeyStore: android.security.keystore.IKeystoreService mBinder>;

        $r14 = interfaceinvoke $r13.<android.security.keystore.IKeystoreService: android.os.IBinder asBinder()>();

        interfaceinvoke $r14.<android.os.IBinder: boolean unlinkToDeath(android.os.IBinder$DeathRecipient,int)>($r3, 0);

        return i2;

     label08:
        $r7 = virtualinvoke $r3.<android.security.KeyStore$CertificateChainPromise: java.util.concurrent.CompletableFuture getFuture()>();

        $r8 = staticinvoke <android.security.KeyStore: java.lang.Object interruptedPreservingGet(java.util.concurrent.CompletableFuture)>($r7);

        r28 = (android.security.KeyStore$KeyAttestationCallbackResult) $r8;

        $r9 = virtualinvoke r28.<android.security.KeyStore$KeyAttestationCallbackResult: android.security.keystore.KeystoreResponse getKeystoreResponse()>();

        i3 = virtualinvoke $r9.<android.security.keystore.KeystoreResponse: int getErrorCode()>();

     label09:
        if i3 != 1 goto label11;

     label10:
        $r12 = virtualinvoke r28.<android.security.KeyStore$KeyAttestationCallbackResult: android.security.keymaster.KeymasterCertificateChain getCertificateChain()>();

        virtualinvoke r27.<android.security.keymaster.KeymasterCertificateChain: void shallowCopyFrom(android.security.keymaster.KeymasterCertificateChain)>($r12);

     label11:
        $r10 = r0.<android.security.KeyStore: android.security.keystore.IKeystoreService mBinder>;

        $r11 = interfaceinvoke $r10.<android.security.keystore.IKeystoreService: android.os.IBinder asBinder()>();

        interfaceinvoke $r11.<android.os.IBinder: boolean unlinkToDeath(android.os.IBinder$DeathRecipient,int)>($r3, 0);

        return i3;

     label12:
        $r21 := @caughtexception;

        goto label19;

     label13:
        $r18 := @caughtexception;

     label14:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("KeyStore", "AttestKey completed with exception", $r18);

     label15:
        $r19 = r0.<android.security.KeyStore: android.security.keystore.IKeystoreService mBinder>;

        $r20 = interfaceinvoke $r19.<android.security.keystore.IKeystoreService: android.os.IBinder asBinder()>();

        interfaceinvoke $r20.<android.os.IBinder: boolean unlinkToDeath(android.os.IBinder$DeathRecipient,int)>($r3, 0);

        return 4;

     label16:
        $r15 := @caughtexception;

     label17:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("KeyStore", "Cannot connect to keystore", $r15);

     label18:
        $r16 = r0.<android.security.KeyStore: android.security.keystore.IKeystoreService mBinder>;

        $r17 = interfaceinvoke $r16.<android.security.keystore.IKeystoreService: android.os.IBinder asBinder()>();

        interfaceinvoke $r17.<android.os.IBinder: boolean unlinkToDeath(android.os.IBinder$DeathRecipient,int)>($r3, 0);

        return 4;

     label19:
        $r22 = r0.<android.security.KeyStore: android.security.keystore.IKeystoreService mBinder>;

        $r23 = interfaceinvoke $r22.<android.security.keystore.IKeystoreService: android.os.IBinder asBinder()>();

        interfaceinvoke $r23.<android.os.IBinder: boolean unlinkToDeath(android.os.IBinder$DeathRecipient,int)>($r3, 0);

        throw $r21;

        catch android.os.RemoteException from label01 to label02 with label16;
        catch java.util.concurrent.ExecutionException from label01 to label02 with label13;
        catch java.lang.Throwable from label01 to label02 with label12;
        catch android.os.RemoteException from label03 to label04 with label16;
        catch java.util.concurrent.ExecutionException from label03 to label04 with label13;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch android.os.RemoteException from label05 to label06 with label16;
        catch java.util.concurrent.ExecutionException from label05 to label06 with label13;
        catch java.lang.Throwable from label05 to label06 with label12;
        catch android.os.RemoteException from label06 to label07 with label16;
        catch java.util.concurrent.ExecutionException from label06 to label07 with label13;
        catch java.lang.Throwable from label06 to label07 with label12;
        catch android.os.RemoteException from label08 to label09 with label16;
        catch java.util.concurrent.ExecutionException from label08 to label09 with label13;
        catch java.lang.Throwable from label08 to label09 with label12;
        catch android.os.RemoteException from label10 to label11 with label16;
        catch java.util.concurrent.ExecutionException from label10 to label11 with label13;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label14 to label15 with label12;
        catch java.lang.Throwable from label17 to label18 with label12;
    }

    public android.security.keymaster.OperationResult begin(java.lang.String, int, boolean, android.security.keymaster.KeymasterArguments, byte[])
    {
        android.security.KeyStore r0;
        java.lang.String r1;
        int i0;
        boolean z0;
        android.security.keymaster.KeymasterArguments $r2, r4;
        android.security.keymaster.OperationResult $r3;
        byte[] r5;

        r0 := @this: android.security.KeyStore;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        r4 := @parameter3: android.security.keymaster.KeymasterArguments;

        r5 := @parameter4: byte[];

        if r5 == null goto label1;

        goto label2;

     label1:
        r5 = newarray (byte)[0];

     label2:
        if r4 == null goto label3;

        goto label4;

     label3:
        $r2 = new android.security.keymaster.KeymasterArguments;

        specialinvoke $r2.<android.security.keymaster.KeymasterArguments: void <init>()>();

        r4 = $r2;

     label4:
        $r3 = virtualinvoke r0.<android.security.KeyStore: android.security.keymaster.OperationResult begin(java.lang.String,int,boolean,android.security.keymaster.KeymasterArguments,byte[],int)>(r1, i0, z0, r4, r5, -1);

        return $r3;
    }

    public android.security.keymaster.OperationResult begin(java.lang.String, int, boolean, android.security.keymaster.KeymasterArguments, byte[], int)
    {
        android.security.KeyStore r0;
        boolean z0;
        int i0, i3, i4;
        android.security.KeyStore$OperationPromise $r2;
        android.security.keystore.IKeystoreService $r3, $r6, $r9, $r13, $r16, $r19, $r22;
        android.os.IBinder $r4, $r7, $r10, $r14, $r17, $r20, $r23;
        android.security.keymaster.KeymasterArguments $r5, r28;
        android.security.keymaster.OperationResult $r8, r30;
        java.util.concurrent.CompletableFuture $r11;
        java.lang.Object $r12;
        android.os.RemoteException $r15, $r25, r33;
        java.lang.Throwable $r18, $r21, $r24, $r26, r32, r34;
        java.lang.String r27;
        byte[] r29;

        r0 := @this: android.security.KeyStore;

        r27 := @parameter0: java.lang.String;

        i3 := @parameter1: int;

        z0 := @parameter2: boolean;

        r28 := @parameter3: android.security.keymaster.KeymasterArguments;

        r29 := @parameter4: byte[];

        i0 := @parameter5: int;

        $r2 = new android.security.KeyStore$OperationPromise;

        specialinvoke $r2.<android.security.KeyStore$OperationPromise: void <init>(android.security.KeyStore,android.security.KeyStore$1)>(r0, null);

     label01:
        $r3 = r0.<android.security.KeyStore: android.security.keystore.IKeystoreService mBinder>;

        $r4 = interfaceinvoke $r3.<android.security.keystore.IKeystoreService: android.os.IBinder asBinder()>();

        interfaceinvoke $r4.<android.os.IBinder: void linkToDeath(android.os.IBinder$DeathRecipient,int)>($r2, 0);

     label02:
        if r28 == null goto label03;

        goto label04;

     label03:
        $r5 = new android.security.keymaster.KeymasterArguments;

        specialinvoke $r5.<android.security.keymaster.KeymasterArguments: void <init>()>();

        r28 = $r5;

     label04:
        if r29 == null goto label05;

        goto label06;

     label05:
        r29 = newarray (byte)[0];

     label06:
        $r6 = r0.<android.security.KeyStore: android.security.keystore.IKeystoreService mBinder>;

        $r7 = specialinvoke r0.<android.security.KeyStore: android.os.IBinder getToken()>();

        i4 = interfaceinvoke $r6.<android.security.keystore.IKeystoreService: int begin(android.security.keystore.IKeystoreOperationResultCallback,android.os.IBinder,java.lang.String,int,boolean,android.security.keymaster.KeymasterArguments,byte[],int)>($r2, $r7, r27, i3, z0, r28, r29, i0);

     label07:
        if i4 != 1 goto label10;

     label08:
        $r11 = virtualinvoke $r2.<android.security.KeyStore$OperationPromise: java.util.concurrent.CompletableFuture getFuture()>();

        $r12 = staticinvoke <android.security.KeyStore: java.lang.Object interruptedPreservingGet(java.util.concurrent.CompletableFuture)>($r11);

        r30 = (android.security.keymaster.OperationResult) $r12;

     label09:
        $r13 = r0.<android.security.KeyStore: android.security.keystore.IKeystoreService mBinder>;

        $r14 = interfaceinvoke $r13.<android.security.keystore.IKeystoreService: android.os.IBinder asBinder()>();

        interfaceinvoke $r14.<android.os.IBinder: boolean unlinkToDeath(android.os.IBinder$DeathRecipient,int)>($r2, 0);

        return r30;

     label10:
        $r8 = new android.security.keymaster.OperationResult;

        specialinvoke $r8.<android.security.keymaster.OperationResult: void <init>(int)>(i4);

     label11:
        $r9 = r0.<android.security.KeyStore: android.security.keystore.IKeystoreService mBinder>;

        $r10 = interfaceinvoke $r9.<android.security.keystore.IKeystoreService: android.os.IBinder asBinder()>();

        interfaceinvoke $r10.<android.os.IBinder: boolean unlinkToDeath(android.os.IBinder$DeathRecipient,int)>($r2, 0);

        return $r8;

     label12:
        $r26 := @caughtexception;

        r32 = $r26;

        goto label16;

     label13:
        $r25 := @caughtexception;

        r33 = $r25;

        goto label19;

     label14:
        $r18 := @caughtexception;

        r34 = $r18;

        goto label22;

     label15:
        $r21 := @caughtexception;

        r32 = $r21;

     label16:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("KeyStore", "Begin completed with exception", r32);

     label17:
        $r22 = r0.<android.security.KeyStore: android.security.keystore.IKeystoreService mBinder>;

        $r23 = interfaceinvoke $r22.<android.security.keystore.IKeystoreService: android.os.IBinder asBinder()>();

        interfaceinvoke $r23.<android.os.IBinder: boolean unlinkToDeath(android.os.IBinder$DeathRecipient,int)>($r2, 0);

        return null;

     label18:
        $r15 := @caughtexception;

        r33 = $r15;

     label19:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("KeyStore", "Cannot connect to keystore", r33);

     label20:
        $r16 = r0.<android.security.KeyStore: android.security.keystore.IKeystoreService mBinder>;

        $r17 = interfaceinvoke $r16.<android.security.keystore.IKeystoreService: android.os.IBinder asBinder()>();

        interfaceinvoke $r17.<android.os.IBinder: boolean unlinkToDeath(android.os.IBinder$DeathRecipient,int)>($r2, 0);

        return null;

     label21:
        $r24 := @caughtexception;

        r34 = $r24;

     label22:
        $r19 = r0.<android.security.KeyStore: android.security.keystore.IKeystoreService mBinder>;

        $r20 = interfaceinvoke $r19.<android.security.keystore.IKeystoreService: android.os.IBinder asBinder()>();

        interfaceinvoke $r20.<android.os.IBinder: boolean unlinkToDeath(android.os.IBinder$DeathRecipient,int)>($r2, 0);

        throw r34;

        catch android.os.RemoteException from label01 to label02 with label18;
        catch java.util.concurrent.ExecutionException from label01 to label02 with label15;
        catch java.lang.Throwable from label01 to label02 with label14;
        catch android.os.RemoteException from label03 to label04 with label18;
        catch java.util.concurrent.ExecutionException from label03 to label04 with label15;
        catch java.lang.Throwable from label03 to label04 with label14;
        catch android.os.RemoteException from label06 to label07 with label13;
        catch java.util.concurrent.ExecutionException from label06 to label07 with label12;
        catch java.lang.Throwable from label06 to label07 with label21;
        catch android.os.RemoteException from label08 to label09 with label13;
        catch java.util.concurrent.ExecutionException from label08 to label09 with label12;
        catch java.lang.Throwable from label08 to label09 with label21;
        catch android.os.RemoteException from label10 to label11 with label13;
        catch java.util.concurrent.ExecutionException from label10 to label11 with label12;
        catch java.lang.Throwable from label10 to label11 with label21;
        catch java.lang.Throwable from label16 to label17 with label21;
        catch java.lang.Throwable from label19 to label20 with label21;
    }

    public int cancelConfirmationPrompt(android.os.IBinder)
    {
        android.security.KeyStore r0;
        int i0;
        android.security.keystore.IKeystoreService $r1;
        android.os.RemoteException $r2;
        android.os.IBinder r3;

        r0 := @this: android.security.KeyStore;

        r3 := @parameter0: android.os.IBinder;

     label1:
        $r1 = r0.<android.security.KeyStore: android.security.keystore.IKeystoreService mBinder>;

        i0 = interfaceinvoke $r1.<android.security.keystore.IKeystoreService: int cancelConfirmationPrompt(android.os.IBinder)>(r3);

     label2:
        return i0;

     label3:
        $r2 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("KeyStore", "Cannot connect to keystore", $r2);

        return 5;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean clearUid(int)
    {
        android.security.KeyStore r0;
        long $l0;
        android.security.keystore.IKeystoreService $r2;
        android.os.RemoteException $r3;
        int i2, i3;
        boolean z0;

        r0 := @this: android.security.KeyStore;

        i2 := @parameter0: int;

        z0 = 0;

     label1:
        $r2 = r0.<android.security.KeyStore: android.security.keystore.IKeystoreService mBinder>;

        $l0 = (long) i2;

        i3 = interfaceinvoke $r2.<android.security.keystore.IKeystoreService: int clear_uid(long)>($l0);

     label2:
        if i3 != 1 goto label3;

        z0 = 1;

     label3:
        return z0;

     label4:
        $r3 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("KeyStore", "Cannot connect to keystore", $r3);

        return 0;

        catch android.os.RemoteException from label1 to label2 with label4;
    }

    public boolean contains(java.lang.String)
    {
        android.security.KeyStore r0;
        java.lang.String r1;
        boolean $z0;

        r0 := @this: android.security.KeyStore;

        r1 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<android.security.KeyStore: boolean contains(java.lang.String,int)>(r1, -1);

        return $z0;
    }

    public boolean contains(java.lang.String, int)
    {
        android.security.KeyStore r0;
        android.security.keystore.IKeystoreService $r1;
        android.os.RemoteException $r2;
        java.lang.String r3;
        int i1, i2;
        boolean z0;

        r0 := @this: android.security.KeyStore;

        r3 := @parameter0: java.lang.String;

        i1 := @parameter1: int;

        z0 = 0;

     label1:
        $r1 = r0.<android.security.KeyStore: android.security.keystore.IKeystoreService mBinder>;

        i2 = interfaceinvoke $r1.<android.security.keystore.IKeystoreService: int exist(java.lang.String,int)>(r3, i1);

     label2:
        if i2 != 1 goto label3;

        z0 = 1;

     label3:
        return z0;

     label4:
        $r2 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("KeyStore", "Cannot connect to keystore", $r2);

        return 0;

        catch android.os.RemoteException from label1 to label2 with label4;
    }

    public boolean delete(java.lang.String)
    {
        android.security.KeyStore r0;
        java.lang.String r1;
        boolean $z0;

        r0 := @this: android.security.KeyStore;

        r1 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<android.security.KeyStore: boolean delete(java.lang.String,int)>(r1, -1);

        return $z0;
    }

    public boolean delete(java.lang.String, int)
    {
        android.security.KeyStore r0;
        java.lang.String r1;
        int i0, i1;
        boolean z1;

        r0 := @this: android.security.KeyStore;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 = virtualinvoke r0.<android.security.KeyStore: int delete2(java.lang.String,int)>(r1, i0);

        z1 = 1;

        if i1 == 1 goto label2;

        if i1 != 7 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    int delete2(java.lang.String, int)
    {
        android.security.KeyStore r0;
        android.security.keystore.IKeystoreService $r1;
        android.os.RemoteException $r2;
        java.lang.String r3;
        int i1, i2;

        r0 := @this: android.security.KeyStore;

        r3 := @parameter0: java.lang.String;

        i1 := @parameter1: int;

     label1:
        $r1 = r0.<android.security.KeyStore: android.security.keystore.IKeystoreService mBinder>;

        i2 = interfaceinvoke $r1.<android.security.keystore.IKeystoreService: int del(java.lang.String,int)>(r3, i1);

     label2:
        return i2;

     label3:
        $r2 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("KeyStore", "Cannot connect to keystore", $r2);

        return 4;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.security.keymaster.ExportResult exportKey(java.lang.String, int, android.security.keymaster.KeymasterBlob, android.security.keymaster.KeymasterBlob)
    {
        android.security.KeyStore r0;
        java.lang.String r1;
        int i0;
        android.security.keymaster.KeymasterBlob r2, r3;
        android.security.keymaster.ExportResult $r4;

        r0 := @this: android.security.KeyStore;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: android.security.keymaster.KeymasterBlob;

        r3 := @parameter3: android.security.keymaster.KeymasterBlob;

        $r4 = virtualinvoke r0.<android.security.KeyStore: android.security.keymaster.ExportResult exportKey(java.lang.String,int,android.security.keymaster.KeymasterBlob,android.security.keymaster.KeymasterBlob,int)>(r1, i0, r2, r3, -1);

        return $r4;
    }

    public android.security.keymaster.ExportResult exportKey(java.lang.String, int, android.security.keymaster.KeymasterBlob, android.security.keymaster.KeymasterBlob, int)
    {
        android.security.KeyStore r0;
        int i0, i3, i4;
        android.security.KeyStore$ExportKeyPromise $r2;
        android.security.keystore.IKeystoreService $r3, $r9, $r11, $r15, $r34, $r36, $r38;
        android.os.IBinder $r4, $r12, $r16, $r35, $r37, $r39;
        android.security.keymaster.KeymasterBlob $r5, $r7, r27, r28;
        byte[] $r6, $r8;
        android.security.keymaster.ExportResult $r10, r29;
        java.util.concurrent.CompletableFuture $r13;
        java.lang.Object $r14;
        android.os.RemoteException $r17, $r19, $r23, r32;
        java.lang.Throwable $r18, $r20, $r21, $r22, $r24, $r25, r31, r33;
        java.lang.String r26;

        r0 := @this: android.security.KeyStore;

        r26 := @parameter0: java.lang.String;

        i3 := @parameter1: int;

        r27 := @parameter2: android.security.keymaster.KeymasterBlob;

        r28 := @parameter3: android.security.keymaster.KeymasterBlob;

        i0 := @parameter4: int;

        $r2 = new android.security.KeyStore$ExportKeyPromise;

        specialinvoke $r2.<android.security.KeyStore$ExportKeyPromise: void <init>(android.security.KeyStore,android.security.KeyStore$1)>(r0, null);

     label01:
        $r3 = r0.<android.security.KeyStore: android.security.keystore.IKeystoreService mBinder>;

        $r4 = interfaceinvoke $r3.<android.security.keystore.IKeystoreService: android.os.IBinder asBinder()>();

        interfaceinvoke $r4.<android.os.IBinder: void linkToDeath(android.os.IBinder$DeathRecipient,int)>($r2, 0);

     label02:
        if r27 == null goto label03;

        goto label04;

     label03:
        $r5 = new android.security.keymaster.KeymasterBlob;

        $r6 = newarray (byte)[0];

        specialinvoke $r5.<android.security.keymaster.KeymasterBlob: void <init>(byte[])>($r6);

        r27 = $r5;

     label04:
        if r28 == null goto label05;

        goto label06;

     label05:
        $r7 = new android.security.keymaster.KeymasterBlob;

        $r8 = newarray (byte)[0];

        specialinvoke $r7.<android.security.keymaster.KeymasterBlob: void <init>(byte[])>($r8);

        r28 = $r7;

     label06:
        $r9 = r0.<android.security.KeyStore: android.security.keystore.IKeystoreService mBinder>;

        i4 = interfaceinvoke $r9.<android.security.keystore.IKeystoreService: int exportKey(android.security.keystore.IKeystoreExportKeyCallback,java.lang.String,int,android.security.keymaster.KeymasterBlob,android.security.keymaster.KeymasterBlob,int)>($r2, r26, i3, r27, r28, i0);

     label07:
        if i4 != 1 goto label10;

     label08:
        $r13 = virtualinvoke $r2.<android.security.KeyStore$ExportKeyPromise: java.util.concurrent.CompletableFuture getFuture()>();

        $r14 = staticinvoke <android.security.KeyStore: java.lang.Object interruptedPreservingGet(java.util.concurrent.CompletableFuture)>($r13);

        r29 = (android.security.keymaster.ExportResult) $r14;

     label09:
        $r15 = r0.<android.security.KeyStore: android.security.keystore.IKeystoreService mBinder>;

        $r16 = interfaceinvoke $r15.<android.security.keystore.IKeystoreService: android.os.IBinder asBinder()>();

        interfaceinvoke $r16.<android.os.IBinder: boolean unlinkToDeath(android.os.IBinder$DeathRecipient,int)>($r2, 0);

        return r29;

     label10:
        $r10 = new android.security.keymaster.ExportResult;

        specialinvoke $r10.<android.security.keymaster.ExportResult: void <init>(int)>(i4);

     label11:
        $r11 = r0.<android.security.KeyStore: android.security.keystore.IKeystoreService mBinder>;

        $r12 = interfaceinvoke $r11.<android.security.keystore.IKeystoreService: android.os.IBinder asBinder()>();

        interfaceinvoke $r12.<android.os.IBinder: boolean unlinkToDeath(android.os.IBinder$DeathRecipient,int)>($r2, 0);

        return $r10;

     label12:
        $r24 := @caughtexception;

        r31 = $r24;

        goto label19;

     label13:
        $r23 := @caughtexception;

        r32 = $r23;

        goto label22;

     label14:
        $r25 := @caughtexception;

        r33 = $r25;

        goto label25;

     label15:
        $r18 := @caughtexception;

        r31 = $r18;

        goto label19;

     label16:
        $r17 := @caughtexception;

        r32 = $r17;

        goto label22;

     label17:
        $r21 := @caughtexception;

        r33 = $r21;

        goto label25;

     label18:
        $r22 := @caughtexception;

        r31 = $r22;

     label19:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("KeyStore", "ExportKey completed with exception", r31);

     label20:
        $r34 = r0.<android.security.KeyStore: android.security.keystore.IKeystoreService mBinder>;

        $r35 = interfaceinvoke $r34.<android.security.keystore.IKeystoreService: android.os.IBinder asBinder()>();

        interfaceinvoke $r35.<android.os.IBinder: boolean unlinkToDeath(android.os.IBinder$DeathRecipient,int)>($r2, 0);

        return null;

     label21:
        $r19 := @caughtexception;

        r32 = $r19;

     label22:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("KeyStore", "Cannot connect to keystore", r32);

     label23:
        $r36 = r0.<android.security.KeyStore: android.security.keystore.IKeystoreService mBinder>;

        $r37 = interfaceinvoke $r36.<android.security.keystore.IKeystoreService: android.os.IBinder asBinder()>();

        interfaceinvoke $r37.<android.os.IBinder: boolean unlinkToDeath(android.os.IBinder$DeathRecipient,int)>($r2, 0);

        return null;

     label24:
        $r20 := @caughtexception;

        r33 = $r20;

     label25:
        $r38 = r0.<android.security.KeyStore: android.security.keystore.IKeystoreService mBinder>;

        $r39 = interfaceinvoke $r38.<android.security.keystore.IKeystoreService: android.os.IBinder asBinder()>();

        interfaceinvoke $r39.<android.os.IBinder: boolean unlinkToDeath(android.os.IBinder$DeathRecipient,int)>($r2, 0);

        throw r33;

        catch android.os.RemoteException from label01 to label02 with label21;
        catch java.util.concurrent.ExecutionException from label01 to label02 with label18;
        catch java.lang.Throwable from label01 to label02 with label17;
        catch android.os.RemoteException from label03 to label04 with label21;
        catch java.util.concurrent.ExecutionException from label03 to label04 with label18;
        catch java.lang.Throwable from label03 to label04 with label17;
        catch android.os.RemoteException from label05 to label06 with label16;
        catch java.util.concurrent.ExecutionException from label05 to label06 with label15;
        catch java.lang.Throwable from label05 to label06 with label14;
        catch android.os.RemoteException from label06 to label07 with label13;
        catch java.util.concurrent.ExecutionException from label06 to label07 with label12;
        catch java.lang.Throwable from label06 to label07 with label24;
        catch android.os.RemoteException from label08 to label09 with label13;
        catch java.util.concurrent.ExecutionException from label08 to label09 with label12;
        catch java.lang.Throwable from label08 to label09 with label24;
        catch android.os.RemoteException from label10 to label11 with label13;
        catch java.util.concurrent.ExecutionException from label10 to label11 with label12;
        catch java.lang.Throwable from label10 to label11 with label24;
        catch java.lang.Throwable from label19 to label20 with label24;
        catch java.lang.Throwable from label22 to label23 with label24;
    }

    public android.security.keymaster.OperationResult finish(android.os.IBinder, android.security.keymaster.KeymasterArguments, byte[])
    {
        android.security.KeyStore r0;
        android.os.IBinder r1;
        android.security.keymaster.KeymasterArguments r2;
        byte[] r3;
        android.security.keymaster.OperationResult $r4;

        r0 := @this: android.security.KeyStore;

        r1 := @parameter0: android.os.IBinder;

        r2 := @parameter1: android.security.keymaster.KeymasterArguments;

        r3 := @parameter2: byte[];

        $r4 = virtualinvoke r0.<android.security.KeyStore: android.security.keymaster.OperationResult finish(android.os.IBinder,android.security.keymaster.KeymasterArguments,byte[],byte[],byte[])>(r1, r2, null, r3, null);

        return $r4;
    }

    public android.security.keymaster.OperationResult finish(android.os.IBinder, android.security.keymaster.KeymasterArguments, byte[], byte[], byte[])
    {
        android.security.KeyStore r0;
        int i0;
        android.security.KeyStore$OperationPromise $r2;
        android.security.keystore.IKeystoreService $r3, $r6, $r8, $r12, $r15, $r18, $r23;
        android.os.IBinder $r4, $r9, $r13, $r16, $r19, $r24, r26;
        android.security.keymaster.KeymasterArguments $r5, r27;
        android.security.keymaster.OperationResult $r7, r31;
        java.util.concurrent.CompletableFuture $r10;
        java.lang.Object $r11;
        java.lang.Throwable $r14, $r20, $r22, $r25, r33, r35;
        android.os.RemoteException $r17, $r21, r34;
        byte[] r28, r29, r30;

        r0 := @this: android.security.KeyStore;

        r26 := @parameter0: android.os.IBinder;

        r27 := @parameter1: android.security.keymaster.KeymasterArguments;

        r28 := @parameter2: byte[];

        r29 := @parameter3: byte[];

        r30 := @parameter4: byte[];

        $r2 = new android.security.KeyStore$OperationPromise;

        specialinvoke $r2.<android.security.KeyStore$OperationPromise: void <init>(android.security.KeyStore,android.security.KeyStore$1)>(r0, null);

     label01:
        $r3 = r0.<android.security.KeyStore: android.security.keystore.IKeystoreService mBinder>;

        $r4 = interfaceinvoke $r3.<android.security.keystore.IKeystoreService: android.os.IBinder asBinder()>();

        interfaceinvoke $r4.<android.os.IBinder: void linkToDeath(android.os.IBinder$DeathRecipient,int)>($r2, 0);

     label02:
        if r27 == null goto label03;

        goto label04;

     label03:
        $r5 = new android.security.keymaster.KeymasterArguments;

        specialinvoke $r5.<android.security.keymaster.KeymasterArguments: void <init>()>();

        r27 = $r5;

     label04:
        if r30 == null goto label05;

        goto label06;

     label05:
        r30 = newarray (byte)[0];

     label06:
        if r28 == null goto label07;

        goto label08;

     label07:
        r28 = newarray (byte)[0];

     label08:
        if r29 == null goto label09;

        goto label10;

     label09:
        r29 = newarray (byte)[0];

     label10:
        $r6 = r0.<android.security.KeyStore: android.security.keystore.IKeystoreService mBinder>;

        i0 = interfaceinvoke $r6.<android.security.keystore.IKeystoreService: int finish(android.security.keystore.IKeystoreOperationResultCallback,android.os.IBinder,android.security.keymaster.KeymasterArguments,byte[],byte[],byte[])>($r2, r26, r27, r28, r29, r30);

     label11:
        if i0 != 1 goto label14;

     label12:
        $r10 = virtualinvoke $r2.<android.security.KeyStore$OperationPromise: java.util.concurrent.CompletableFuture getFuture()>();

        $r11 = staticinvoke <android.security.KeyStore: java.lang.Object interruptedPreservingGet(java.util.concurrent.CompletableFuture)>($r10);

        r31 = (android.security.keymaster.OperationResult) $r11;

     label13:
        $r12 = r0.<android.security.KeyStore: android.security.keystore.IKeystoreService mBinder>;

        $r13 = interfaceinvoke $r12.<android.security.keystore.IKeystoreService: android.os.IBinder asBinder()>();

        interfaceinvoke $r13.<android.os.IBinder: boolean unlinkToDeath(android.os.IBinder$DeathRecipient,int)>($r2, 0);

        return r31;

     label14:
        $r7 = new android.security.keymaster.OperationResult;

        specialinvoke $r7.<android.security.keymaster.OperationResult: void <init>(int)>(i0);

     label15:
        $r8 = r0.<android.security.KeyStore: android.security.keystore.IKeystoreService mBinder>;

        $r9 = interfaceinvoke $r8.<android.security.keystore.IKeystoreService: android.os.IBinder asBinder()>();

        interfaceinvoke $r9.<android.os.IBinder: boolean unlinkToDeath(android.os.IBinder$DeathRecipient,int)>($r2, 0);

        return $r7;

     label16:
        $r25 := @caughtexception;

        r33 = $r25;

        goto label20;

     label17:
        $r21 := @caughtexception;

        r34 = $r21;

        goto label23;

     label18:
        $r14 := @caughtexception;

        r35 = $r14;

        goto label26;

     label19:
        $r22 := @caughtexception;

        r33 = $r22;

     label20:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("KeyStore", "Finish completed with exception", r33);

     label21:
        $r23 = r0.<android.security.KeyStore: android.security.keystore.IKeystoreService mBinder>;

        $r24 = interfaceinvoke $r23.<android.security.keystore.IKeystoreService: android.os.IBinder asBinder()>();

        interfaceinvoke $r24.<android.os.IBinder: boolean unlinkToDeath(android.os.IBinder$DeathRecipient,int)>($r2, 0);

        return null;

     label22:
        $r17 := @caughtexception;

        r34 = $r17;

     label23:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("KeyStore", "Cannot connect to keystore", r34);

     label24:
        $r18 = r0.<android.security.KeyStore: android.security.keystore.IKeystoreService mBinder>;

        $r19 = interfaceinvoke $r18.<android.security.keystore.IKeystoreService: android.os.IBinder asBinder()>();

        interfaceinvoke $r19.<android.os.IBinder: boolean unlinkToDeath(android.os.IBinder$DeathRecipient,int)>($r2, 0);

        return null;

     label25:
        $r20 := @caughtexception;

        r35 = $r20;

     label26:
        $r15 = r0.<android.security.KeyStore: android.security.keystore.IKeystoreService mBinder>;

        $r16 = interfaceinvoke $r15.<android.security.keystore.IKeystoreService: android.os.IBinder asBinder()>();

        interfaceinvoke $r16.<android.os.IBinder: boolean unlinkToDeath(android.os.IBinder$DeathRecipient,int)>($r2, 0);

        throw r35;

        catch android.os.RemoteException from label01 to label02 with label22;
        catch java.util.concurrent.ExecutionException from label01 to label02 with label19;
        catch java.lang.Throwable from label01 to label02 with label18;
        catch android.os.RemoteException from label03 to label04 with label22;
        catch java.util.concurrent.ExecutionException from label03 to label04 with label19;
        catch java.lang.Throwable from label03 to label04 with label18;
        catch android.os.RemoteException from label10 to label11 with label17;
        catch java.util.concurrent.ExecutionException from label10 to label11 with label16;
        catch java.lang.Throwable from label10 to label11 with label25;
        catch android.os.RemoteException from label12 to label13 with label17;
        catch java.util.concurrent.ExecutionException from label12 to label13 with label16;
        catch java.lang.Throwable from label12 to label13 with label25;
        catch android.os.RemoteException from label14 to label15 with label17;
        catch java.util.concurrent.ExecutionException from label14 to label15 with label16;
        catch java.lang.Throwable from label14 to label15 with label25;
        catch java.lang.Throwable from label20 to label21 with label25;
        catch java.lang.Throwable from label23 to label24 with label25;
    }

    public int generateKey(java.lang.String, android.security.keymaster.KeymasterArguments, byte[], int, int, android.security.keymaster.KeyCharacteristics)
    {
        android.security.KeyStore r0;
        int i0, i1, i5, i6;
        android.security.keymaster.KeyCharacteristics r1;
        android.security.keystore.IKeystoreService r2;
        android.security.keymaster.KeymasterArguments $r3, r13;
        android.os.RemoteException $r4, $r5, $r6, $r10, r16;
        java.lang.Throwable $r7, $r8, $r9, $r11, r15;
        java.lang.String r12;
        byte[] r14;

        r0 := @this: android.security.KeyStore;

        r12 := @parameter0: java.lang.String;

        r13 := @parameter1: android.security.keymaster.KeymasterArguments;

        r14 := @parameter2: byte[];

        i5 := @parameter3: int;

        i0 := @parameter4: int;

        r1 := @parameter5: android.security.keymaster.KeyCharacteristics;

        if r14 == null goto label01;

        goto label02;

     label01:
        r14 = newarray (byte)[0];

     label02:
        if r13 == null goto label03;

        goto label04;

     label03:
        $r3 = new android.security.keymaster.KeymasterArguments;

        specialinvoke $r3.<android.security.keymaster.KeymasterArguments: void <init>()>();

        r13 = $r3;

     label04:
        i1 = specialinvoke r0.<android.security.KeyStore: int generateKeyInternal(java.lang.String,android.security.keymaster.KeymasterArguments,byte[],int,int,android.security.keymaster.KeyCharacteristics)>(r12, r13, r14, i5, i0, r1);

     label05:
        if i1 != 16 goto label13;

     label06:
        r2 = r0.<android.security.KeyStore: android.security.keystore.IKeystoreService mBinder>;

     label07:
        interfaceinvoke r2.<android.security.keystore.IKeystoreService: int del(java.lang.String,int)>(r12, i5);

        i6 = specialinvoke r0.<android.security.KeyStore: int generateKeyInternal(java.lang.String,android.security.keymaster.KeymasterArguments,byte[],int,int,android.security.keymaster.KeyCharacteristics)>(r12, r13, r14, i5, i0, r1);

     label08:
        goto label14;

     label09:
        $r9 := @caughtexception;

        r15 = $r9;

        goto label21;

     label10:
        $r5 := @caughtexception;

        r16 = $r5;

        goto label22;

     label11:
        $r8 := @caughtexception;

        r15 = $r8;

        goto label16;

     label12:
        $r10 := @caughtexception;

        r16 = $r10;

        goto label18;

     label13:
        i6 = i1;

     label14:
        return i6;

     label15:
        $r7 := @caughtexception;

        r15 = $r7;

     label16:
        goto label21;

     label17:
        $r6 := @caughtexception;

        r16 = $r6;

     label18:
        goto label22;

     label19:
        $r11 := @caughtexception;

        r15 = $r11;

        goto label21;

     label20:
        $r4 := @caughtexception;

        r16 = $r4;

        goto label22;

     label21:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("KeyStore", "generateKey completed with exception", r15);

        return 4;

     label22:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("KeyStore", "Cannot connect to keystore", r16);

        return 4;

        catch android.os.RemoteException from label03 to label04 with label20;
        catch java.util.concurrent.ExecutionException from label03 to label04 with label19;
        catch android.os.RemoteException from label04 to label05 with label17;
        catch java.util.concurrent.ExecutionException from label04 to label05 with label15;
        catch android.os.RemoteException from label06 to label07 with label12;
        catch java.util.concurrent.ExecutionException from label06 to label07 with label11;
        catch android.os.RemoteException from label07 to label08 with label10;
        catch java.util.concurrent.ExecutionException from label07 to label08 with label09;
    }

    public int generateKey(java.lang.String, android.security.keymaster.KeymasterArguments, byte[], int, android.security.keymaster.KeyCharacteristics)
    {
        android.security.KeyStore r0;
        java.lang.String r1;
        android.security.keymaster.KeymasterArguments r2;
        byte[] r3;
        int i0, $i1;
        android.security.keymaster.KeyCharacteristics r4;

        r0 := @this: android.security.KeyStore;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.security.keymaster.KeymasterArguments;

        r3 := @parameter2: byte[];

        i0 := @parameter3: int;

        r4 := @parameter4: android.security.keymaster.KeyCharacteristics;

        $i1 = virtualinvoke r0.<android.security.KeyStore: int generateKey(java.lang.String,android.security.keymaster.KeymasterArguments,byte[],int,int,android.security.keymaster.KeyCharacteristics)>(r1, r2, r3, -1, i0, r4);

        return $i1;
    }

    public byte[] get(java.lang.String)
    {
        android.security.KeyStore r0;
        java.lang.String r1;
        byte[] $r2;

        r0 := @this: android.security.KeyStore;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<android.security.KeyStore: byte[] get(java.lang.String,int)>(r1, -1);

        return $r2;
    }

    public byte[] get(java.lang.String, int)
    {
        android.security.KeyStore r0;
        java.lang.String r1;
        int i0;
        byte[] $r2;

        r0 := @this: android.security.KeyStore;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r2 = virtualinvoke r0.<android.security.KeyStore: byte[] get(java.lang.String,int,boolean)>(r1, i0, 0);

        return $r2;
    }

    public byte[] get(java.lang.String, int, boolean)
    {
        android.security.KeyStore r0;
        int i0, $i2;
        boolean z0;
        android.security.keystore.IKeystoreService $r1;
        android.os.ServiceSpecificException $r2;
        android.os.RemoteException $r3;
        java.lang.String r4;
        byte[] r5;

        r0 := @this: android.security.KeyStore;

        r4 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        if r4 == null goto label1;

        goto label2;

     label1:
        r4 = "";

     label2:
        $r1 = r0.<android.security.KeyStore: android.security.keystore.IKeystoreService mBinder>;

        r5 = interfaceinvoke $r1.<android.security.keystore.IKeystoreService: byte[] get(java.lang.String,int)>(r4, i0);

     label3:
        return r5;

     label4:
        $r2 := @caughtexception;

        if z0 == 0 goto label5;

        $i2 = $r2.<android.os.ServiceSpecificException: int errorCode>;

        if $i2 == 7 goto label6;

     label5:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("KeyStore", "KeyStore exception", $r2);

     label6:
        return null;

     label7:
        $r3 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("KeyStore", "Cannot connect to keystore", $r3);

        return null;

        catch android.os.RemoteException from label2 to label3 with label7;
        catch android.os.ServiceSpecificException from label2 to label3 with label4;
    }

    public byte[] get(java.lang.String, boolean)
    {
        android.security.KeyStore r0;
        java.lang.String r1;
        boolean z0;
        byte[] $r2;

        r0 := @this: android.security.KeyStore;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $r2 = virtualinvoke r0.<android.security.KeyStore: byte[] get(java.lang.String,int,boolean)>(r1, -1, z0);

        return $r2;
    }

    public java.security.InvalidKeyException getInvalidKeyException(java.lang.String, int, int)
    {
        android.security.KeyStore r0;
        java.lang.String r1;
        int i0, i1;
        android.security.KeyStoreException $r2;
        java.security.InvalidKeyException $r3;

        r0 := @this: android.security.KeyStore;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = staticinvoke <android.security.KeyStore: android.security.KeyStoreException getKeyStoreException(int)>(i1);

        $r3 = virtualinvoke r0.<android.security.KeyStore: java.security.InvalidKeyException getInvalidKeyException(java.lang.String,int,android.security.KeyStoreException)>(r1, i0, $r2);

        return $r3;
    }

    public java.security.InvalidKeyException getInvalidKeyException(java.lang.String, int, android.security.KeyStoreException)
    {
        android.security.KeyStore r0;
        long l0, $l3;
        int i1, i4, i5, i6, i7;
        android.security.keystore.UserNotAuthenticatedException $r1, $r8, $r11;
        android.security.keystore.KeyPermanentlyInvalidatedException $r2, $r7, $r12;
        android.security.keymaster.KeyCharacteristics $r3;
        boolean $z1, $z2, $z3, z4;
        byte $b2;
        android.content.Context $r4;
        java.lang.Object $r5;
        android.hardware.biometrics.BiometricManager $r6;
        java.math.BigInteger $r9, $r10;
        java.security.InvalidKeyException $r13, $r17;
        android.security.KeyStoreException $r14, r19;
        android.security.keystore.KeyNotYetValidException $r15;
        android.security.keystore.KeyExpiredException $r16;
        java.lang.String r18;
        java.util.List r21;
        long[] r22;

        r0 := @this: android.security.KeyStore;

        r18 := @parameter0: java.lang.String;

        i4 := @parameter1: int;

        r19 := @parameter2: android.security.KeyStoreException;

        i5 = virtualinvoke r19.<android.security.KeyStoreException: int getErrorCode()>();

        if i5 == 2 goto label13;

        if i5 == 3 goto label12;

        if i5 == 15 goto label04;

        tableswitch(i5)
        {
            case -26: goto label04;
            case -25: goto label03;
            case -24: goto label02;
            default: goto label01;
        };

     label01:
        $r17 = new java.security.InvalidKeyException;

        specialinvoke $r17.<java.security.InvalidKeyException: void <init>(java.lang.String,java.lang.Throwable)>("Keystore operation failed", r19);

        return $r17;

     label02:
        $r15 = new android.security.keystore.KeyNotYetValidException;

        specialinvoke $r15.<android.security.keystore.KeyNotYetValidException: void <init>()>();

        return $r15;

     label03:
        $r16 = new android.security.keystore.KeyExpiredException;

        specialinvoke $r16.<android.security.keystore.KeyExpiredException: void <init>()>();

        return $r16;

     label04:
        $r3 = new android.security.keymaster.KeyCharacteristics;

        specialinvoke $r3.<android.security.keymaster.KeyCharacteristics: void <init>()>();

        i6 = virtualinvoke r0.<android.security.KeyStore: int getKeyCharacteristics(java.lang.String,android.security.keymaster.KeymasterBlob,android.security.keymaster.KeymasterBlob,int,android.security.keymaster.KeyCharacteristics)>(r18, null, null, i4, $r3);

        if i6 == 1 goto label05;

        $r13 = new java.security.InvalidKeyException;

        $r14 = staticinvoke <android.security.KeyStore: android.security.KeyStoreException getKeyStoreException(int)>(i6);

        specialinvoke $r13.<java.security.InvalidKeyException: void <init>(java.lang.String,java.lang.Throwable)>("Failed to obtained key characteristics", $r14);

        return $r13;

     label05:
        r21 = virtualinvoke $r3.<android.security.keymaster.KeyCharacteristics: java.util.List getUnsignedLongs(int)>(-1610612234);

        $z1 = interfaceinvoke r21.<java.util.List: boolean isEmpty()>();

        if $z1 == 0 goto label06;

        $r12 = new android.security.keystore.KeyPermanentlyInvalidatedException;

        specialinvoke $r12.<android.security.keystore.KeyPermanentlyInvalidatedException: void <init>()>();

        return $r12;

     label06:
        l0 = staticinvoke <android.security.GateKeeper: long getSecureUserId()>();

        $b2 = l0 cmp 0L;

        if $b2 == 0 goto label07;

        $r10 = staticinvoke <android.security.keymaster.KeymasterArguments: java.math.BigInteger toUint64(long)>(l0);

        $z3 = interfaceinvoke r21.<java.util.List: boolean contains(java.lang.Object)>($r10);

        if $z3 == 0 goto label07;

        $r11 = new android.security.keystore.UserNotAuthenticatedException;

        specialinvoke $r11.<android.security.keystore.UserNotAuthenticatedException: void <init>()>();

        return $r11;

     label07:
        $r4 = r0.<android.security.KeyStore: android.content.Context mContext>;

        $r5 = virtualinvoke $r4.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/hardware/biometrics/BiometricManager;");

        $r6 = (android.hardware.biometrics.BiometricManager) $r5;

        r22 = virtualinvoke $r6.<android.hardware.biometrics.BiometricManager: long[] getAuthenticatorIds()>();

        i1 = lengthof r22;

        i7 = 0;

     label08:
        z4 = 1;

        if i7 >= i1 goto label10;

        $l3 = r22[i7];

        $r9 = staticinvoke <android.security.keymaster.KeymasterArguments: java.math.BigInteger toUint64(long)>($l3);

        $z2 = interfaceinvoke r21.<java.util.List: boolean contains(java.lang.Object)>($r9);

        if $z2 != 0 goto label09;

        z4 = 0;

        goto label10;

     label09:
        i7 = i7 + 1;

        goto label08;

     label10:
        if z4 == 0 goto label11;

        $r8 = new android.security.keystore.UserNotAuthenticatedException;

        specialinvoke $r8.<android.security.keystore.UserNotAuthenticatedException: void <init>()>();

        return $r8;

     label11:
        $r7 = new android.security.keystore.KeyPermanentlyInvalidatedException;

        specialinvoke $r7.<android.security.keystore.KeyPermanentlyInvalidatedException: void <init>()>();

        return $r7;

     label12:
        $r2 = new android.security.keystore.KeyPermanentlyInvalidatedException;

        specialinvoke $r2.<android.security.keystore.KeyPermanentlyInvalidatedException: void <init>()>();

        return $r2;

     label13:
        $r1 = new android.security.keystore.UserNotAuthenticatedException;

        specialinvoke $r1.<android.security.keystore.UserNotAuthenticatedException: void <init>()>();

        return $r1;
    }

    public int getKeyCharacteristics(java.lang.String, android.security.keymaster.KeymasterBlob, android.security.keymaster.KeymasterBlob, int, android.security.keymaster.KeyCharacteristics)
    {
        android.security.KeyStore r0;
        android.security.keymaster.KeyCharacteristics r1, r35;
        android.security.KeyStore$KeyCharacteristicsPromise $r3;
        android.security.keystore.IKeystoreService $r4, $r10, $r14, $r16, $r18, $r20, $r39, $r41, $r43;
        android.os.IBinder $r5, $r15, $r17, $r19, $r21, $r40, $r42, $r44;
        android.security.keymaster.KeymasterBlob $r6, $r8, r32, r33;
        byte[] $r7, $r9;
        java.util.concurrent.CompletableFuture $r11;
        java.lang.Object $r12;
        android.security.keystore.KeystoreResponse $r13;
        java.lang.Throwable $r22, $r23, $r26, $r27, $r28, $r30, r36, r37;
        android.os.RemoteException $r24, $r25, $r29, r38;
        java.lang.String r31;
        int i2, i3, i4;
        android.security.KeyStore$KeyCharacteristicsCallbackResult r34;

        r0 := @this: android.security.KeyStore;

        r31 := @parameter0: java.lang.String;

        r32 := @parameter1: android.security.keymaster.KeymasterBlob;

        r33 := @parameter2: android.security.keymaster.KeymasterBlob;

        i2 := @parameter3: int;

        r1 := @parameter4: android.security.keymaster.KeyCharacteristics;

        $r3 = new android.security.KeyStore$KeyCharacteristicsPromise;

        specialinvoke $r3.<android.security.KeyStore$KeyCharacteristicsPromise: void <init>(android.security.KeyStore,android.security.KeyStore$1)>(r0, null);

     label01:
        $r4 = r0.<android.security.KeyStore: android.security.keystore.IKeystoreService mBinder>;

        $r5 = interfaceinvoke $r4.<android.security.keystore.IKeystoreService: android.os.IBinder asBinder()>();

        interfaceinvoke $r5.<android.os.IBinder: void linkToDeath(android.os.IBinder$DeathRecipient,int)>($r3, 0);

     label02:
        if r32 == null goto label03;

        goto label04;

     label03:
        $r6 = new android.security.keymaster.KeymasterBlob;

        $r7 = newarray (byte)[0];

        specialinvoke $r6.<android.security.keymaster.KeymasterBlob: void <init>(byte[])>($r7);

        r32 = $r6;

     label04:
        if r33 == null goto label05;

        goto label06;

     label05:
        $r8 = new android.security.keymaster.KeymasterBlob;

        $r9 = newarray (byte)[0];

        specialinvoke $r8.<android.security.keymaster.KeymasterBlob: void <init>(byte[])>($r9);

        r33 = $r8;

     label06:
        $r10 = r0.<android.security.KeyStore: android.security.keystore.IKeystoreService mBinder>;

        i3 = interfaceinvoke $r10.<android.security.keystore.IKeystoreService: int getKeyCharacteristics(android.security.keystore.IKeystoreKeyCharacteristicsCallback,java.lang.String,android.security.keymaster.KeymasterBlob,android.security.keymaster.KeymasterBlob,int)>($r3, r31, r32, r33, i2);

     label07:
        if i3 == 1 goto label08;

        $r20 = r0.<android.security.KeyStore: android.security.keystore.IKeystoreService mBinder>;

        $r21 = interfaceinvoke $r20.<android.security.keystore.IKeystoreService: android.os.IBinder asBinder()>();

        interfaceinvoke $r21.<android.os.IBinder: boolean unlinkToDeath(android.os.IBinder$DeathRecipient,int)>($r3, 0);

        return i3;

     label08:
        $r11 = virtualinvoke $r3.<android.security.KeyStore$KeyCharacteristicsPromise: java.util.concurrent.CompletableFuture getFuture()>();

        $r12 = staticinvoke <android.security.KeyStore: java.lang.Object interruptedPreservingGet(java.util.concurrent.CompletableFuture)>($r11);

        r34 = (android.security.KeyStore$KeyCharacteristicsCallbackResult) $r12;

        $r13 = virtualinvoke r34.<android.security.KeyStore$KeyCharacteristicsCallbackResult: android.security.keystore.KeystoreResponse getKeystoreResponse()>();

        i4 = virtualinvoke $r13.<android.security.keystore.KeystoreResponse: int getErrorCode()>();

     label09:
        if i4 == 1 goto label10;

        $r18 = r0.<android.security.KeyStore: android.security.keystore.IKeystoreService mBinder>;

        $r19 = interfaceinvoke $r18.<android.security.keystore.IKeystoreService: android.os.IBinder asBinder()>();

        interfaceinvoke $r19.<android.os.IBinder: boolean unlinkToDeath(android.os.IBinder$DeathRecipient,int)>($r3, 0);

        return i4;

     label10:
        r35 = virtualinvoke r34.<android.security.KeyStore$KeyCharacteristicsCallbackResult: android.security.keymaster.KeyCharacteristics getKeyCharacteristics()>();

     label11:
        if r35 != null goto label12;

        $r16 = r0.<android.security.KeyStore: android.security.keystore.IKeystoreService mBinder>;

        $r17 = interfaceinvoke $r16.<android.security.keystore.IKeystoreService: android.os.IBinder asBinder()>();

        interfaceinvoke $r17.<android.os.IBinder: boolean unlinkToDeath(android.os.IBinder$DeathRecipient,int)>($r3, 0);

        return 4;

     label12:
        virtualinvoke r1.<android.security.keymaster.KeyCharacteristics: void shallowCopyFrom(android.security.keymaster.KeyCharacteristics)>(r35);

     label13:
        $r14 = r0.<android.security.KeyStore: android.security.keystore.IKeystoreService mBinder>;

        $r15 = interfaceinvoke $r14.<android.security.keystore.IKeystoreService: android.os.IBinder asBinder()>();

        interfaceinvoke $r15.<android.os.IBinder: boolean unlinkToDeath(android.os.IBinder$DeathRecipient,int)>($r3, 0);

        return 1;

     label14:
        $r22 := @caughtexception;

        r36 = $r22;

        goto label27;

     label15:
        $r27 := @caughtexception;

        r37 = $r27;

        goto label21;

     label16:
        $r25 := @caughtexception;

        r38 = $r25;

        goto label24;

     label17:
        $r30 := @caughtexception;

        r37 = $r30;

        goto label21;

     label18:
        $r29 := @caughtexception;

        r38 = $r29;

        goto label24;

     label19:
        $r28 := @caughtexception;

        r36 = $r28;

        goto label27;

     label20:
        $r23 := @caughtexception;

        r37 = $r23;

     label21:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("KeyStore", "GetKeyCharacteristics completed with exception", r37);

     label22:
        $r39 = r0.<android.security.KeyStore: android.security.keystore.IKeystoreService mBinder>;

        $r40 = interfaceinvoke $r39.<android.security.keystore.IKeystoreService: android.os.IBinder asBinder()>();

        interfaceinvoke $r40.<android.os.IBinder: boolean unlinkToDeath(android.os.IBinder$DeathRecipient,int)>($r3, 0);

        return 4;

     label23:
        $r24 := @caughtexception;

        r38 = $r24;

     label24:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("KeyStore", "Cannot connect to keystore", r38);

     label25:
        $r41 = r0.<android.security.KeyStore: android.security.keystore.IKeystoreService mBinder>;

        $r42 = interfaceinvoke $r41.<android.security.keystore.IKeystoreService: android.os.IBinder asBinder()>();

        interfaceinvoke $r42.<android.os.IBinder: boolean unlinkToDeath(android.os.IBinder$DeathRecipient,int)>($r3, 0);

        return 4;

     label26:
        $r26 := @caughtexception;

        r36 = $r26;

     label27:
        $r43 = r0.<android.security.KeyStore: android.security.keystore.IKeystoreService mBinder>;

        $r44 = interfaceinvoke $r43.<android.security.keystore.IKeystoreService: android.os.IBinder asBinder()>();

        interfaceinvoke $r44.<android.os.IBinder: boolean unlinkToDeath(android.os.IBinder$DeathRecipient,int)>($r3, 0);

        throw r36;

        catch android.os.RemoteException from label01 to label02 with label23;
        catch java.util.concurrent.ExecutionException from label01 to label02 with label20;
        catch java.lang.Throwable from label01 to label02 with label19;
        catch android.os.RemoteException from label03 to label04 with label23;
        catch java.util.concurrent.ExecutionException from label03 to label04 with label20;
        catch java.lang.Throwable from label03 to label04 with label19;
        catch android.os.RemoteException from label05 to label06 with label18;
        catch java.util.concurrent.ExecutionException from label05 to label06 with label17;
        catch java.lang.Throwable from label05 to label06 with label26;
        catch android.os.RemoteException from label06 to label07 with label16;
        catch java.util.concurrent.ExecutionException from label06 to label07 with label15;
        catch java.lang.Throwable from label06 to label07 with label14;
        catch android.os.RemoteException from label08 to label09 with label16;
        catch java.util.concurrent.ExecutionException from label08 to label09 with label15;
        catch java.lang.Throwable from label08 to label09 with label14;
        catch android.os.RemoteException from label10 to label11 with label16;
        catch java.util.concurrent.ExecutionException from label10 to label11 with label15;
        catch java.lang.Throwable from label10 to label11 with label14;
        catch android.os.RemoteException from label12 to label13 with label16;
        catch java.util.concurrent.ExecutionException from label12 to label13 with label15;
        catch java.lang.Throwable from label12 to label13 with label14;
        catch java.lang.Throwable from label21 to label22 with label26;
        catch java.lang.Throwable from label24 to label25 with label26;
    }

    public int getKeyCharacteristics(java.lang.String, android.security.keymaster.KeymasterBlob, android.security.keymaster.KeymasterBlob, android.security.keymaster.KeyCharacteristics)
    {
        android.security.KeyStore r0;
        java.lang.String r1;
        android.security.keymaster.KeymasterBlob r2, r3;
        android.security.keymaster.KeyCharacteristics r4;
        int $i0;

        r0 := @this: android.security.KeyStore;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.security.keymaster.KeymasterBlob;

        r3 := @parameter2: android.security.keymaster.KeymasterBlob;

        r4 := @parameter3: android.security.keymaster.KeyCharacteristics;

        $i0 = virtualinvoke r0.<android.security.KeyStore: int getKeyCharacteristics(java.lang.String,android.security.keymaster.KeymasterBlob,android.security.keymaster.KeymasterBlob,int,android.security.keymaster.KeyCharacteristics)>(r1, r2, r3, -1, r4);

        return $i0;
    }

    public int getLastError()
    {
        android.security.KeyStore r0;
        int $i0;

        r0 := @this: android.security.KeyStore;

        $i0 = r0.<android.security.KeyStore: int mError>;

        return $i0;
    }

    public long getmtime(java.lang.String)
    {
        android.security.KeyStore r0;
        java.lang.String r1;
        long $l0;

        r0 := @this: android.security.KeyStore;

        r1 := @parameter0: java.lang.String;

        $l0 = virtualinvoke r0.<android.security.KeyStore: long getmtime(java.lang.String,int)>(r1, -1);

        return $l0;
    }

    public long getmtime(java.lang.String, int)
    {
        android.security.KeyStore r0;
        int i0;
        long l1, $l3;
        android.security.keystore.IKeystoreService $r1;
        byte $b2;
        android.os.RemoteException $r2;
        java.lang.String r3;

        r0 := @this: android.security.KeyStore;

        r3 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

     label1:
        $r1 = r0.<android.security.KeyStore: android.security.keystore.IKeystoreService mBinder>;

        l1 = interfaceinvoke $r1.<android.security.keystore.IKeystoreService: long getmtime(java.lang.String,int)>(r3, i0);

     label2:
        $b2 = l1 cmp -1L;

        if $b2 != 0 goto label3;

        return -1L;

     label3:
        $l3 = 1000L * l1;

        return $l3;

     label4:
        $r2 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("KeyStore", "Cannot connect to keystore", $r2);

        return -1L;

        catch android.os.RemoteException from label1 to label2 with label4;
    }

    public java.lang.String grant(java.lang.String, int)
    {
        android.security.KeyStore r0;
        int i0;
        android.security.keystore.IKeystoreService $r1;
        android.os.RemoteException $r2;
        java.lang.String r3, r4;

        r0 := @this: android.security.KeyStore;

        r3 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

     label1:
        $r1 = r0.<android.security.KeyStore: android.security.keystore.IKeystoreService mBinder>;

        r4 = interfaceinvoke $r1.<android.security.keystore.IKeystoreService: java.lang.String grant(java.lang.String,int)>(r3, i0);

     label2:
        if r4 != "" goto label3;

        return null;

     label3:
        return r4;

     label4:
        $r2 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("KeyStore", "Cannot connect to keystore", $r2);

        return null;

        catch android.os.RemoteException from label1 to label2 with label4;
    }

    public int importKey(java.lang.String, android.security.keymaster.KeymasterArguments, int, byte[], int, int, android.security.keymaster.KeyCharacteristics)
    {
        android.security.KeyStore r0;
        android.security.keymaster.KeymasterArguments r1;
        int i0, i1, i2, i3, i7;
        byte[] r2;
        android.security.keymaster.KeyCharacteristics r3;
        android.security.keystore.IKeystoreService $r4;
        java.lang.Throwable $r5;
        android.os.RemoteException $r6;
        java.lang.String r7;

        r0 := @this: android.security.KeyStore;

        r7 := @parameter0: java.lang.String;

        r1 := @parameter1: android.security.keymaster.KeymasterArguments;

        i0 := @parameter2: int;

        r2 := @parameter3: byte[];

        i1 := @parameter4: int;

        i2 := @parameter5: int;

        r3 := @parameter6: android.security.keymaster.KeyCharacteristics;

     label1:
        i3 = specialinvoke r0.<android.security.KeyStore: int importKeyInternal(java.lang.String,android.security.keymaster.KeymasterArguments,int,byte[],int,int,android.security.keymaster.KeyCharacteristics)>(r7, r1, i0, r2, i1, i2, r3);

     label2:
        i7 = i3;

        if i3 != 16 goto label4;

     label3:
        $r4 = r0.<android.security.KeyStore: android.security.keystore.IKeystoreService mBinder>;

        interfaceinvoke $r4.<android.security.keystore.IKeystoreService: int del(java.lang.String,int)>(r7, i1);

        i7 = specialinvoke r0.<android.security.KeyStore: int importKeyInternal(java.lang.String,android.security.keymaster.KeymasterArguments,int,byte[],int,int,android.security.keymaster.KeyCharacteristics)>(r7, r1, i0, r2, i1, i2, r3);

     label4:
        return i7;

     label5:
        $r5 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("KeyStore", "ImportKey completed with exception", $r5);

        return 4;

     label6:
        $r6 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("KeyStore", "Cannot connect to keystore", $r6);

        return 4;

        catch android.os.RemoteException from label1 to label2 with label6;
        catch java.util.concurrent.ExecutionException from label1 to label2 with label5;
        catch android.os.RemoteException from label3 to label4 with label6;
        catch java.util.concurrent.ExecutionException from label3 to label4 with label5;
    }

    public int importKey(java.lang.String, android.security.keymaster.KeymasterArguments, int, byte[], int, android.security.keymaster.KeyCharacteristics)
    {
        android.security.KeyStore r0;
        java.lang.String r1;
        android.security.keymaster.KeymasterArguments r2;
        int i0, i1, $i2;
        byte[] r3;
        android.security.keymaster.KeyCharacteristics r4;

        r0 := @this: android.security.KeyStore;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.security.keymaster.KeymasterArguments;

        i0 := @parameter2: int;

        r3 := @parameter3: byte[];

        i1 := @parameter4: int;

        r4 := @parameter5: android.security.keymaster.KeyCharacteristics;

        $i2 = virtualinvoke r0.<android.security.KeyStore: int importKey(java.lang.String,android.security.keymaster.KeymasterArguments,int,byte[],int,int,android.security.keymaster.KeyCharacteristics)>(r1, r2, i0, r3, -1, i1, r4);

        return $i2;
    }

    public boolean importKey(java.lang.String, byte[], int, int)
    {
        android.security.KeyStore r0;
        java.lang.String r1, r3, $r7;
        byte[] r2;
        int i0, i2, i3;
        android.security.keymaster.KeymasterArguments $r4;
        android.security.keymaster.KeyCharacteristics $r5;
        android.security.KeyStoreException $r6;

        r0 := @this: android.security.KeyStore;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: byte[];

        i2 := @parameter2: int;

        i0 := @parameter3: int;

        r3 = specialinvoke r0.<android.security.KeyStore: java.lang.String getAlgorithmFromPKCS8(byte[])>(r2);

        if r3 != null goto label1;

        return 0;

     label1:
        $r4 = specialinvoke r0.<android.security.KeyStore: android.security.keymaster.KeymasterArguments makeLegacyArguments(java.lang.String)>(r3);

        $r5 = new android.security.keymaster.KeyCharacteristics;

        specialinvoke $r5.<android.security.keymaster.KeyCharacteristics: void <init>()>();

        i3 = virtualinvoke r0.<android.security.KeyStore: int importKey(java.lang.String,android.security.keymaster.KeymasterArguments,int,byte[],int,int,android.security.keymaster.KeyCharacteristics)>(r1, $r4, 1, r2, i2, i0, $r5);

        if i3 == 1 goto label2;

        $r6 = new android.security.KeyStoreException;

        specialinvoke $r6.<android.security.KeyStoreException: void <init>(int,java.lang.String)>(i3, "legacy key import failed");

        $r7 = staticinvoke <android.util.Log: java.lang.String getStackTraceString(java.lang.Throwable)>($r6);

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("KeyStore", $r7);

        return 0;

     label2:
        return 1;
    }

    public int importWrappedKey(java.lang.String, byte[], java.lang.String, byte[], android.security.keymaster.KeymasterArguments, long, long, int, android.security.keymaster.KeyCharacteristics)
    {
        android.security.KeyStore r0;
        byte[] r1, r3;
        java.lang.String r2, r13;
        android.security.keymaster.KeymasterArguments r4;
        long l0, l1;
        android.security.keymaster.KeyCharacteristics r5;
        android.security.keystore.IKeystoreService r6;
        java.lang.Throwable $r7, $r10, $r11, r14;
        android.os.RemoteException $r8, $r9, $r12, r15;
        int i5, i6;

        r0 := @this: android.security.KeyStore;

        r13 := @parameter0: java.lang.String;

        r1 := @parameter1: byte[];

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: byte[];

        r4 := @parameter4: android.security.keymaster.KeymasterArguments;

        l0 := @parameter5: long;

        l1 := @parameter6: long;

        i5 := @parameter7: int;

        r5 := @parameter8: android.security.keymaster.KeyCharacteristics;

     label01:
        i6 = specialinvoke r0.<android.security.KeyStore: int importWrappedKeyInternal(java.lang.String,byte[],java.lang.String,byte[],android.security.keymaster.KeymasterArguments,long,long,android.security.keymaster.KeyCharacteristics)>(r13, r1, r2, r3, r4, l0, l1, r5);

     label02:
        if i6 != 16 goto label10;

     label03:
        r6 = r0.<android.security.KeyStore: android.security.keystore.IKeystoreService mBinder>;

     label04:
        interfaceinvoke r6.<android.security.keystore.IKeystoreService: int del(java.lang.String,int)>(r13, -1);

        i6 = specialinvoke r0.<android.security.KeyStore: int importWrappedKeyInternal(java.lang.String,byte[],java.lang.String,byte[],android.security.keymaster.KeymasterArguments,long,long,android.security.keymaster.KeyCharacteristics)>(r13, r1, r2, r3, r4, l0, l1, r5);

     label05:
        goto label10;

     label06:
        $r7 := @caughtexception;

        r14 = $r7;

        goto label12;

     label07:
        $r9 := @caughtexception;

        r15 = $r9;

        goto label14;

     label08:
        $r11 := @caughtexception;

        r14 = $r11;

        goto label12;

     label09:
        $r8 := @caughtexception;

        r15 = $r8;

        goto label14;

     label10:
        return i6;

     label11:
        $r10 := @caughtexception;

        r14 = $r10;

     label12:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("KeyStore", "ImportWrappedKey completed with exception", r14);

        return 4;

     label13:
        $r12 := @caughtexception;

        r15 = $r12;

     label14:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("KeyStore", "Cannot connect to keystore", r15);

        return 4;

        catch android.os.RemoteException from label01 to label02 with label13;
        catch java.util.concurrent.ExecutionException from label01 to label02 with label11;
        catch android.os.RemoteException from label03 to label04 with label09;
        catch java.util.concurrent.ExecutionException from label03 to label04 with label08;
        catch android.os.RemoteException from label04 to label05 with label07;
        catch java.util.concurrent.ExecutionException from label04 to label05 with label06;
    }

    public int insert(java.lang.String, byte[], int, int)
    {
        android.security.KeyStore r0;
        byte[] r1, r7;
        int i0, i1, i2, i5;
        android.security.keystore.IKeystoreService $r2, $r3, $r4;
        android.os.RemoteException $r5;
        java.lang.String r6;

        r0 := @this: android.security.KeyStore;

        r6 := @parameter0: java.lang.String;

        r1 := @parameter1: byte[];

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        r7 = r1;

        if r1 != null goto label2;

     label1:
        r7 = newarray (byte)[0];

     label2:
        $r2 = r0.<android.security.KeyStore: android.security.keystore.IKeystoreService mBinder>;

        i2 = interfaceinvoke $r2.<android.security.keystore.IKeystoreService: int insert(java.lang.String,byte[],int,int)>(r6, r7, i0, i1);

     label3:
        i5 = i2;

        if i2 != 16 goto label5;

     label4:
        $r3 = r0.<android.security.KeyStore: android.security.keystore.IKeystoreService mBinder>;

        interfaceinvoke $r3.<android.security.keystore.IKeystoreService: int del(java.lang.String,int)>(r6, i0);

        $r4 = r0.<android.security.KeyStore: android.security.keystore.IKeystoreService mBinder>;

        i5 = interfaceinvoke $r4.<android.security.keystore.IKeystoreService: int insert(java.lang.String,byte[],int,int)>(r6, r7, i0, i1);

     label5:
        return i5;

     label6:
        $r5 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("KeyStore", "Cannot connect to keystore", $r5);

        return 4;

        catch android.os.RemoteException from label1 to label2 with label6;
        catch android.os.RemoteException from label2 to label3 with label6;
        catch android.os.RemoteException from label4 to label5 with label6;
    }

    public boolean isConfirmationPromptSupported()
    {
        android.security.KeyStore r0;
        boolean z0;
        android.security.keystore.IKeystoreService $r2;
        android.os.RemoteException $r3;

        r0 := @this: android.security.KeyStore;

     label1:
        $r2 = r0.<android.security.KeyStore: android.security.keystore.IKeystoreService mBinder>;

        z0 = interfaceinvoke $r2.<android.security.keystore.IKeystoreService: boolean isConfirmationPromptSupported()>();

     label2:
        return z0;

     label3:
        $r3 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("KeyStore", "Cannot connect to keystore", $r3);

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean isEmpty()
    {
        android.security.KeyStore r0;
        int $i0;
        boolean $z0;

        r0 := @this: android.security.KeyStore;

        $i0 = staticinvoke <android.os.UserHandle: int myUserId()>();

        $z0 = virtualinvoke r0.<android.security.KeyStore: boolean isEmpty(int)>($i0);

        return $z0;
    }

    public boolean isEmpty(int)
    {
        android.security.KeyStore r0;
        android.security.keystore.IKeystoreService $r2;
        android.os.RemoteException $r3;
        int i1, i2;
        boolean z0;

        r0 := @this: android.security.KeyStore;

        i1 := @parameter0: int;

        z0 = 0;

     label1:
        $r2 = r0.<android.security.KeyStore: android.security.keystore.IKeystoreService mBinder>;

        i2 = interfaceinvoke $r2.<android.security.keystore.IKeystoreService: int isEmpty(int)>(i1);

     label2:
        if i2 == 0 goto label3;

        z0 = 1;

     label3:
        return z0;

     label4:
        $r3 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("KeyStore", "Cannot connect to keystore", $r3);

        return 0;

        catch android.os.RemoteException from label1 to label2 with label4;
    }

    public boolean isHardwareBacked()
    {
        android.security.KeyStore r0;
        boolean $z0;

        r0 := @this: android.security.KeyStore;

        $z0 = virtualinvoke r0.<android.security.KeyStore: boolean isHardwareBacked(java.lang.String)>("RSA");

        return $z0;
    }

    public boolean isHardwareBacked(java.lang.String)
    {
        android.security.KeyStore r0;
        int i0;
        java.util.Locale $r1;
        android.security.keystore.IKeystoreService $r2;
        java.lang.String $r3, r5;
        android.os.RemoteException $r4;
        boolean z0;

        r0 := @this: android.security.KeyStore;

        r5 := @parameter0: java.lang.String;

        z0 = 0;

     label1:
        $r2 = r0.<android.security.KeyStore: android.security.keystore.IKeystoreService mBinder>;

        $r1 = <java.util.Locale: java.util.Locale US>;

        $r3 = virtualinvoke r5.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>($r1);

        i0 = interfaceinvoke $r2.<android.security.keystore.IKeystoreService: int is_hardware_backed(java.lang.String)>($r3);

     label2:
        if i0 != 1 goto label3;

        z0 = 1;

     label3:
        return z0;

     label4:
        $r4 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("KeyStore", "Cannot connect to keystore", $r4);

        return 0;

        catch android.os.RemoteException from label1 to label2 with label4;
    }

    public boolean isUnlocked()
    {
        android.security.KeyStore r0;
        android.security.KeyStore$State $r1, $r2;
        boolean z0;

        r0 := @this: android.security.KeyStore;

        $r1 = virtualinvoke r0.<android.security.KeyStore: android.security.KeyStore$State state()>();

        $r2 = <android.security.KeyStore$State: android.security.KeyStore$State UNLOCKED>;

        if $r1 != $r2 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public java.lang.String[] list(java.lang.String)
    {
        android.security.KeyStore r0;
        java.lang.String r1;
        java.lang.String[] $r2;

        r0 := @this: android.security.KeyStore;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<android.security.KeyStore: java.lang.String[] list(java.lang.String,int)>(r1, -1);

        return $r2;
    }

    public java.lang.String[] list(java.lang.String, int)
    {
        android.security.KeyStore r0;
        int i0;
        android.security.keystore.IKeystoreService $r1;
        android.os.ServiceSpecificException $r2;
        android.os.RemoteException $r3;
        java.lang.String r4;
        java.lang.String[] r5;

        r0 := @this: android.security.KeyStore;

        r4 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

     label1:
        $r1 = r0.<android.security.KeyStore: android.security.keystore.IKeystoreService mBinder>;

        r5 = interfaceinvoke $r1.<android.security.keystore.IKeystoreService: java.lang.String[] list(java.lang.String,int)>(r4, i0);

     label2:
        return r5;

     label3:
        $r2 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("KeyStore", "KeyStore exception", $r2);

        return null;

     label4:
        $r3 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("KeyStore", "Cannot connect to keystore", $r3);

        return null;

        catch android.os.RemoteException from label1 to label2 with label4;
        catch android.os.ServiceSpecificException from label1 to label2 with label3;
    }

    public int[] listUidsOfAuthBoundKeys()
    {
        android.security.KeyStore r0;
        int i0;
        android.security.keystore.IKeystoreService $r2;
        java.util.stream.Stream $r3;
        android.security.'-$$Lambda$wddj3-hVVrg0MkscpMtYt3BzY8Y' $r4;
        java.util.stream.IntStream $r5;
        int[] $r6;
        java.lang.Object[] $r7;
        java.lang.Integer $r8;
        java.lang.String $r9;
        android.os.ServiceSpecificException $r10;
        android.os.RemoteException $r11;
        java.util.ArrayList r15;
        java.util.function.ToIntFunction r16;

        r0 := @this: android.security.KeyStore;

        r15 = new java.util.ArrayList;

        specialinvoke r15.<java.util.ArrayList: void <init>()>();

     label1:
        $r2 = r0.<android.security.KeyStore: android.security.keystore.IKeystoreService mBinder>;

        i0 = interfaceinvoke $r2.<android.security.keystore.IKeystoreService: int listUidsOfAuthBoundKeys(java.util.List)>(r15);

     label2:
        if i0 == 1 goto label5;

     label3:
        $r7 = newarray (java.lang.Object)[1];

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r7[0] = $r8;

        $r9 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("listUidsOfAuthBoundKeys failed with error code %d", $r7);

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("KeyStore", $r9);

     label4:
        return null;

     label5:
        $r3 = interfaceinvoke r15.<java.util.List: java.util.stream.Stream stream()>();

        $r4 = <android.security._$$Lambda$wddj3_hVVrg0MkscpMtYt3BzY8Y: android.security.'-$$Lambda$wddj3-hVVrg0MkscpMtYt3BzY8Y' INSTANCE>;

        r16 = (java.util.function.ToIntFunction) $r4;

        $r5 = interfaceinvoke $r3.<java.util.stream.Stream: java.util.stream.IntStream mapToInt(java.util.function.ToIntFunction)>(r16);

        $r6 = interfaceinvoke $r5.<java.util.stream.IntStream: int[] toArray()>();

        return $r6;

     label6:
        $r10 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("KeyStore", "KeyStore exception", $r10);

        return null;

     label7:
        $r11 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("KeyStore", "Cannot connect to keystore", $r11);

        return null;

        catch android.os.RemoteException from label1 to label2 with label7;
        catch android.os.ServiceSpecificException from label1 to label2 with label6;
        catch android.os.RemoteException from label3 to label4 with label7;
        catch android.os.ServiceSpecificException from label3 to label4 with label6;
    }

    public boolean lock()
    {
        android.security.KeyStore r0;
        int $i0;
        boolean $z0;

        r0 := @this: android.security.KeyStore;

        $i0 = staticinvoke <android.os.UserHandle: int myUserId()>();

        $z0 = virtualinvoke r0.<android.security.KeyStore: boolean lock(int)>($i0);

        return $z0;
    }

    public boolean lock(int)
    {
        android.security.KeyStore r0;
        android.security.keystore.IKeystoreService $r2;
        android.os.RemoteException $r3;
        int i1, i2;
        boolean z0;

        r0 := @this: android.security.KeyStore;

        i1 := @parameter0: int;

        z0 = 0;

     label1:
        $r2 = r0.<android.security.KeyStore: android.security.keystore.IKeystoreService mBinder>;

        i2 = interfaceinvoke $r2.<android.security.keystore.IKeystoreService: int lock(int)>(i1);

     label2:
        if i2 != 1 goto label3;

        z0 = 1;

     label3:
        return z0;

     label4:
        $r3 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("KeyStore", "Cannot connect to keystore", $r3);

        return 0;

        catch android.os.RemoteException from label1 to label2 with label4;
    }

    public void onDeviceOffBody()
    {
        android.security.KeyStore r0;
        android.security.keystore.IKeystoreService $r2;
        android.os.RemoteException $r3;

        r0 := @this: android.security.KeyStore;

     label1:
        $r2 = r0.<android.security.KeyStore: android.security.keystore.IKeystoreService mBinder>;

        interfaceinvoke $r2.<android.security.keystore.IKeystoreService: int onDeviceOffBody()>();

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("KeyStore", "Cannot connect to keystore", $r3);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void onUserAdded(int)
    {
        android.security.KeyStore r0;
        int i0;

        r0 := @this: android.security.KeyStore;

        i0 := @parameter0: int;

        virtualinvoke r0.<android.security.KeyStore: void onUserAdded(int,int)>(i0, -1);

        return;
    }

    public void onUserAdded(int, int)
    {
        android.security.KeyStore r0;
        int i0, i1;
        android.security.keystore.IKeystoreService $r2;
        android.os.RemoteException $r3;

        r0 := @this: android.security.KeyStore;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

     label1:
        $r2 = r0.<android.security.KeyStore: android.security.keystore.IKeystoreService mBinder>;

        interfaceinvoke $r2.<android.security.keystore.IKeystoreService: int onUserAdded(int,int)>(i0, i1);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("KeyStore", "Cannot connect to keystore", $r3);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void onUserLockedStateChanged(int, boolean)
    {
        android.security.KeyStore r0;
        int i0;
        boolean z0;
        android.security.keystore.IKeystoreService $r3;
        android.os.RemoteException $r4;
        java.lang.StringBuilder $r5;
        java.lang.String $r8;

        r0 := @this: android.security.KeyStore;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

     label1:
        $r3 = r0.<android.security.KeyStore: android.security.keystore.IKeystoreService mBinder>;

        interfaceinvoke $r3.<android.security.keystore.IKeystoreService: int onKeyguardVisibilityChanged(boolean,int)>(z0, i0);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to update user locked state ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("KeyStore", $r8, $r4);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean onUserPasswordChanged(int, java.lang.String)
    {
        android.security.KeyStore r0;
        android.security.keystore.IKeystoreService $r1;
        android.os.RemoteException $r2;
        int i1, i2;
        java.lang.String r3, r4;
        boolean z0;

        r0 := @this: android.security.KeyStore;

        i1 := @parameter0: int;

        r3 := @parameter1: java.lang.String;

        r4 = r3;

        if r3 != null goto label1;

        r4 = "";

     label1:
        z0 = 0;

     label2:
        $r1 = r0.<android.security.KeyStore: android.security.keystore.IKeystoreService mBinder>;

        i2 = interfaceinvoke $r1.<android.security.keystore.IKeystoreService: int onUserPasswordChanged(int,java.lang.String)>(i1, r4);

     label3:
        if i2 != 1 goto label4;

        z0 = 1;

     label4:
        return z0;

     label5:
        $r2 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("KeyStore", "Cannot connect to keystore", $r2);

        return 0;

        catch android.os.RemoteException from label2 to label3 with label5;
    }

    public boolean onUserPasswordChanged(java.lang.String)
    {
        android.security.KeyStore r0;
        java.lang.String r1;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: android.security.KeyStore;

        r1 := @parameter0: java.lang.String;

        $i0 = staticinvoke <android.os.Process: int myUid()>();

        $i1 = staticinvoke <android.os.UserHandle: int getUserId(int)>($i0);

        $z0 = virtualinvoke r0.<android.security.KeyStore: boolean onUserPasswordChanged(int,java.lang.String)>($i1, r1);

        return $z0;
    }

    public void onUserRemoved(int)
    {
        android.security.KeyStore r0;
        int i0;
        android.security.keystore.IKeystoreService $r2;
        android.os.RemoteException $r3;

        r0 := @this: android.security.KeyStore;

        i0 := @parameter0: int;

     label1:
        $r2 = r0.<android.security.KeyStore: android.security.keystore.IKeystoreService mBinder>;

        interfaceinvoke $r2.<android.security.keystore.IKeystoreService: int onUserRemoved(int)>(i0);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("KeyStore", "Cannot connect to keystore", $r3);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public int presentConfirmationPrompt(android.os.IBinder, java.lang.String, byte[], java.lang.String, int)
    {
        android.security.KeyStore r0;
        java.lang.String r1, r3;
        byte[] r2;
        android.security.keystore.IKeystoreService $r4;
        android.os.RemoteException $r5;
        android.os.IBinder r6;
        int i1, i2;

        r0 := @this: android.security.KeyStore;

        r6 := @parameter0: android.os.IBinder;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: byte[];

        r3 := @parameter3: java.lang.String;

        i1 := @parameter4: int;

     label1:
        $r4 = r0.<android.security.KeyStore: android.security.keystore.IKeystoreService mBinder>;

        i2 = interfaceinvoke $r4.<android.security.keystore.IKeystoreService: int presentConfirmationPrompt(android.os.IBinder,java.lang.String,byte[],java.lang.String,int)>(r6, r1, r2, r3, i1);

     label2:
        return i2;

     label3:
        $r5 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("KeyStore", "Cannot connect to keystore", $r5);

        return 5;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean put(java.lang.String, byte[], int, int)
    {
        android.security.KeyStore r0;
        java.lang.String r1;
        byte[] r2;
        int i0, i1, i2;
        boolean z0;

        r0 := @this: android.security.KeyStore;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: byte[];

        i1 := @parameter2: int;

        i0 := @parameter3: int;

        i2 = virtualinvoke r0.<android.security.KeyStore: int insert(java.lang.String,byte[],int,int)>(r1, r2, i1, i0);

        z0 = 1;

        if i2 != 1 goto label1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public android.security.KeyStore$State state()
    {
        android.security.KeyStore r0;
        int $i0;
        android.security.KeyStore$State $r1;

        r0 := @this: android.security.KeyStore;

        $i0 = staticinvoke <android.os.UserHandle: int myUserId()>();

        $r1 = virtualinvoke r0.<android.security.KeyStore: android.security.KeyStore$State state(int)>($i0);

        return $r1;
    }

    public android.security.KeyStore$State state(int)
    {
        android.security.KeyStore r0;
        android.security.keystore.IKeystoreService $r2;
        android.security.KeyStore$State $r3, $r4, $r6;
        java.lang.AssertionError $r5, $r8;
        int $i0, i2, i3;
        android.os.RemoteException $r7;

        r0 := @this: android.security.KeyStore;

        i2 := @parameter0: int;

     label1:
        $r2 = r0.<android.security.KeyStore: android.security.keystore.IKeystoreService mBinder>;

        i3 = interfaceinvoke $r2.<android.security.keystore.IKeystoreService: int getState(int)>(i2);

     label2:
        if i3 == 1 goto label5;

        if i3 == 2 goto label4;

        if i3 != 3 goto label3;

        $r6 = <android.security.KeyStore$State: android.security.KeyStore$State UNINITIALIZED>;

        return $r6;

     label3:
        $r5 = new java.lang.AssertionError;

        $i0 = r0.<android.security.KeyStore: int mError>;

        specialinvoke $r5.<java.lang.AssertionError: void <init>(int)>($i0);

        throw $r5;

     label4:
        $r4 = <android.security.KeyStore$State: android.security.KeyStore$State LOCKED>;

        return $r4;

     label5:
        $r3 = <android.security.KeyStore$State: android.security.KeyStore$State UNLOCKED>;

        return $r3;

     label6:
        $r7 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("KeyStore", "Cannot connect to keystore", $r7);

        $r8 = new java.lang.AssertionError;

        specialinvoke $r8.<java.lang.AssertionError: void <init>(java.lang.Object)>($r7);

        throw $r8;

        catch android.os.RemoteException from label1 to label2 with label6;
    }

    public boolean ungrant(java.lang.String, int)
    {
        android.security.KeyStore r0;
        android.security.keystore.IKeystoreService $r1;
        android.os.RemoteException $r2;
        java.lang.String r3;
        int i1, i2;
        boolean z0;

        r0 := @this: android.security.KeyStore;

        r3 := @parameter0: java.lang.String;

        i1 := @parameter1: int;

        z0 = 0;

     label1:
        $r1 = r0.<android.security.KeyStore: android.security.keystore.IKeystoreService mBinder>;

        i2 = interfaceinvoke $r1.<android.security.keystore.IKeystoreService: int ungrant(java.lang.String,int)>(r3, i1);

     label2:
        if i2 != 1 goto label3;

        z0 = 1;

     label3:
        return z0;

     label4:
        $r2 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("KeyStore", "Cannot connect to keystore", $r2);

        return 0;

        catch android.os.RemoteException from label1 to label2 with label4;
    }

    public boolean unlock(int, java.lang.String)
    {
        android.security.KeyStore r0;
        android.security.keystore.IKeystoreService $r1;
        android.os.RemoteException $r2;
        int i1, i2;
        java.lang.String r3;
        boolean z0;

        r0 := @this: android.security.KeyStore;

        i1 := @parameter0: int;

        r3 := @parameter1: java.lang.String;

        z0 = 0;

        if r3 == null goto label1;

        goto label2;

     label1:
        r3 = "";

     label2:
        $r1 = r0.<android.security.KeyStore: android.security.keystore.IKeystoreService mBinder>;

        i2 = interfaceinvoke $r1.<android.security.keystore.IKeystoreService: int unlock(int,java.lang.String)>(i1, r3);

        r0.<android.security.KeyStore: int mError> = i2;

     label3:
        if i2 != 1 goto label4;

        z0 = 1;

     label4:
        return z0;

     label5:
        $r2 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("KeyStore", "Cannot connect to keystore", $r2);

        return 0;

        catch android.os.RemoteException from label2 to label3 with label5;
    }

    public boolean unlock(java.lang.String)
    {
        android.security.KeyStore r0;
        java.lang.String r1;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: android.security.KeyStore;

        r1 := @parameter0: java.lang.String;

        $i0 = staticinvoke <android.os.Process: int myUid()>();

        $i1 = staticinvoke <android.os.UserHandle: int getUserId(int)>($i0);

        $z0 = virtualinvoke r0.<android.security.KeyStore: boolean unlock(int,java.lang.String)>($i1, r1);

        return $z0;
    }

    public android.security.keymaster.OperationResult update(android.os.IBinder, android.security.keymaster.KeymasterArguments, byte[])
    {
        android.security.KeyStore r0;
        int i0;
        android.security.KeyStore$OperationPromise $r2;
        android.security.keystore.IKeystoreService $r3, $r6, $r8, $r12, $r15, $r18, $r21;
        android.os.IBinder $r4, $r9, $r13, $r16, $r19, $r22, r23;
        android.security.keymaster.KeymasterArguments $r5, r24;
        android.security.keymaster.OperationResult $r7, r26;
        java.util.concurrent.CompletableFuture $r10;
        java.lang.Object $r11;
        java.lang.Throwable $r14, $r20;
        android.os.RemoteException $r17;
        byte[] r25;

        r0 := @this: android.security.KeyStore;

        r23 := @parameter0: android.os.IBinder;

        r24 := @parameter1: android.security.keymaster.KeymasterArguments;

        r25 := @parameter2: byte[];

        $r2 = new android.security.KeyStore$OperationPromise;

        specialinvoke $r2.<android.security.KeyStore$OperationPromise: void <init>(android.security.KeyStore,android.security.KeyStore$1)>(r0, null);

     label01:
        $r3 = r0.<android.security.KeyStore: android.security.keystore.IKeystoreService mBinder>;

        $r4 = interfaceinvoke $r3.<android.security.keystore.IKeystoreService: android.os.IBinder asBinder()>();

        interfaceinvoke $r4.<android.os.IBinder: void linkToDeath(android.os.IBinder$DeathRecipient,int)>($r2, 0);

     label02:
        if r24 == null goto label03;

        goto label04;

     label03:
        $r5 = new android.security.keymaster.KeymasterArguments;

        specialinvoke $r5.<android.security.keymaster.KeymasterArguments: void <init>()>();

        r24 = $r5;

     label04:
        if r25 == null goto label05;

        goto label06;

     label05:
        r25 = newarray (byte)[0];

     label06:
        $r6 = r0.<android.security.KeyStore: android.security.keystore.IKeystoreService mBinder>;

        i0 = interfaceinvoke $r6.<android.security.keystore.IKeystoreService: int update(android.security.keystore.IKeystoreOperationResultCallback,android.os.IBinder,android.security.keymaster.KeymasterArguments,byte[])>($r2, r23, r24, r25);

     label07:
        if i0 != 1 goto label10;

     label08:
        $r10 = virtualinvoke $r2.<android.security.KeyStore$OperationPromise: java.util.concurrent.CompletableFuture getFuture()>();

        $r11 = staticinvoke <android.security.KeyStore: java.lang.Object interruptedPreservingGet(java.util.concurrent.CompletableFuture)>($r10);

        r26 = (android.security.keymaster.OperationResult) $r11;

     label09:
        $r12 = r0.<android.security.KeyStore: android.security.keystore.IKeystoreService mBinder>;

        $r13 = interfaceinvoke $r12.<android.security.keystore.IKeystoreService: android.os.IBinder asBinder()>();

        interfaceinvoke $r13.<android.os.IBinder: boolean unlinkToDeath(android.os.IBinder$DeathRecipient,int)>($r2, 0);

        return r26;

     label10:
        $r7 = new android.security.keymaster.OperationResult;

        specialinvoke $r7.<android.security.keymaster.OperationResult: void <init>(int)>(i0);

     label11:
        $r8 = r0.<android.security.KeyStore: android.security.keystore.IKeystoreService mBinder>;

        $r9 = interfaceinvoke $r8.<android.security.keystore.IKeystoreService: android.os.IBinder asBinder()>();

        interfaceinvoke $r9.<android.os.IBinder: boolean unlinkToDeath(android.os.IBinder$DeathRecipient,int)>($r2, 0);

        return $r7;

     label12:
        $r14 := @caughtexception;

        goto label19;

     label13:
        $r20 := @caughtexception;

     label14:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("KeyStore", "Update completed with exception", $r20);

     label15:
        $r21 = r0.<android.security.KeyStore: android.security.keystore.IKeystoreService mBinder>;

        $r22 = interfaceinvoke $r21.<android.security.keystore.IKeystoreService: android.os.IBinder asBinder()>();

        interfaceinvoke $r22.<android.os.IBinder: boolean unlinkToDeath(android.os.IBinder$DeathRecipient,int)>($r2, 0);

        return null;

     label16:
        $r17 := @caughtexception;

     label17:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("KeyStore", "Cannot connect to keystore", $r17);

     label18:
        $r18 = r0.<android.security.KeyStore: android.security.keystore.IKeystoreService mBinder>;

        $r19 = interfaceinvoke $r18.<android.security.keystore.IKeystoreService: android.os.IBinder asBinder()>();

        interfaceinvoke $r19.<android.os.IBinder: boolean unlinkToDeath(android.os.IBinder$DeathRecipient,int)>($r2, 0);

        return null;

     label19:
        $r15 = r0.<android.security.KeyStore: android.security.keystore.IKeystoreService mBinder>;

        $r16 = interfaceinvoke $r15.<android.security.keystore.IKeystoreService: android.os.IBinder asBinder()>();

        interfaceinvoke $r16.<android.os.IBinder: boolean unlinkToDeath(android.os.IBinder$DeathRecipient,int)>($r2, 0);

        throw $r14;

        catch android.os.RemoteException from label01 to label02 with label16;
        catch java.util.concurrent.ExecutionException from label01 to label02 with label13;
        catch java.lang.Throwable from label01 to label02 with label12;
        catch android.os.RemoteException from label03 to label04 with label16;
        catch java.util.concurrent.ExecutionException from label03 to label04 with label13;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch android.os.RemoteException from label05 to label06 with label16;
        catch java.util.concurrent.ExecutionException from label05 to label06 with label13;
        catch java.lang.Throwable from label05 to label06 with label12;
        catch android.os.RemoteException from label06 to label07 with label16;
        catch java.util.concurrent.ExecutionException from label06 to label07 with label13;
        catch java.lang.Throwable from label06 to label07 with label12;
        catch android.os.RemoteException from label08 to label09 with label16;
        catch java.util.concurrent.ExecutionException from label08 to label09 with label13;
        catch java.lang.Throwable from label08 to label09 with label12;
        catch android.os.RemoteException from label10 to label11 with label16;
        catch java.util.concurrent.ExecutionException from label10 to label11 with label13;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label14 to label15 with label12;
        catch java.lang.Throwable from label17 to label18 with label12;
    }

    public static void <clinit>()
    {
        <android.security.KeyStore: int WRONG_PASSWORD> = 10;

        <android.security.KeyStore: int VALUE_CORRUPTED> = 8;

        <android.security.KeyStore: int UNINITIALIZED> = 3;

        <android.security.KeyStore: int UNDEFINED_ACTION> = 9;

        <android.security.KeyStore: int UID_SELF> = -1;

        <android.security.KeyStore: java.lang.String TAG> = "KeyStore";

        <android.security.KeyStore: int SYSTEM_ERROR> = 4;

        <android.security.KeyStore: int PROTOCOL_ERROR> = 5;

        <android.security.KeyStore: int PERMISSION_DENIED> = 6;

        <android.security.KeyStore: int OP_AUTH_NEEDED> = 15;

        <android.security.KeyStore: int NO_ERROR> = 1;

        <android.security.KeyStore: int LOCKED> = 2;

        <android.security.KeyStore: int KEY_PERMANENTLY_INVALIDATED> = 17;

        <android.security.KeyStore: int KEY_NOT_FOUND> = 7;

        <android.security.KeyStore: int KEY_ALREADY_EXISTS> = 16;

        <android.security.KeyStore: int HARDWARE_TYPE_UNAVAILABLE> = -68;

        <android.security.KeyStore: int FLAG_STRONGBOX> = 16;

        <android.security.KeyStore: int FLAG_SOFTWARE> = 2;

        <android.security.KeyStore: int FLAG_NONE> = 0;

        <android.security.KeyStore: int FLAG_ENCRYPTED> = 1;

        <android.security.KeyStore: int FLAG_CRITICAL_TO_DEVICE_ENCRYPTION> = 8;

        <android.security.KeyStore: int CONFIRMATIONUI_UNIMPLEMENTED> = 6;

        <android.security.KeyStore: int CONFIRMATIONUI_UNEXPECTED> = 7;

        <android.security.KeyStore: int CONFIRMATIONUI_UIERROR_MISSING_GLYPH> = 65537;

        <android.security.KeyStore: int CONFIRMATIONUI_UIERROR_MESSAGE_TOO_LONG> = 65538;

        <android.security.KeyStore: int CONFIRMATIONUI_UIERROR_MALFORMED_UTF8_ENCODING> = 65539;

        <android.security.KeyStore: int CONFIRMATIONUI_UIERROR> = 65536;

        <android.security.KeyStore: int CONFIRMATIONUI_SYSTEM_ERROR> = 5;

        <android.security.KeyStore: int CONFIRMATIONUI_OPERATION_PENDING> = 3;

        <android.security.KeyStore: int CONFIRMATIONUI_OK> = 0;

        <android.security.KeyStore: int CONFIRMATIONUI_IGNORED> = 4;

        <android.security.KeyStore: int CONFIRMATIONUI_CANCELED> = 1;

        <android.security.KeyStore: int CONFIRMATIONUI_ABORTED> = 2;

        <android.security.KeyStore: int CANNOT_ATTEST_IDS> = -66;

        return;
    }
}
