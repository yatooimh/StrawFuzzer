public class android.security.KeystoreArguments extends java.lang.Object implements android.os.Parcelable
{
    public static final android.os.Parcelable$Creator CREATOR;
    public byte[][] args;

    static void <clinit>()
    {
        android.security.KeystoreArguments$1 $r0;

        $r0 = new android.security.KeystoreArguments$1;

        specialinvoke $r0.<android.security.KeystoreArguments$1: void <init>()>();

        <android.security.KeystoreArguments: android.os.Parcelable$Creator CREATOR> = $r0;

        return;
    }

    public void <init>()
    {
        android.security.KeystoreArguments r0;

        r0 := @this: android.security.KeystoreArguments;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.security.KeystoreArguments: byte[][] args> = null;

        return;
    }

    private void <init>(android.os.Parcel)
    {
        android.security.KeystoreArguments r0;
        android.os.Parcel r1;

        r0 := @this: android.security.KeystoreArguments;

        r1 := @parameter0: android.os.Parcel;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        specialinvoke r0.<android.security.KeystoreArguments: void readFromParcel(android.os.Parcel)>(r1);

        return;
    }

    void <init>(android.os.Parcel, android.security.KeystoreArguments$1)
    {
        android.security.KeystoreArguments r0;
        android.os.Parcel r1;
        android.security.KeystoreArguments$1 r2;

        r0 := @this: android.security.KeystoreArguments;

        r1 := @parameter0: android.os.Parcel;

        r2 := @parameter1: android.security.KeystoreArguments$1;

        specialinvoke r0.<android.security.KeystoreArguments: void <init>(android.os.Parcel)>(r1);

        return;
    }

    public void <init>(byte[][])
    {
        android.security.KeystoreArguments r0;
        byte[][] r1;

        r0 := @this: android.security.KeystoreArguments;

        r1 := @parameter0: byte[][];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.security.KeystoreArguments: byte[][] args> = r1;

        return;
    }

    private void readFromParcel(android.os.Parcel)
    {
        android.security.KeystoreArguments r0;
        android.os.Parcel r1;
        int i0, i1;
        byte[][] $r2, $r3;
        byte[] $r4;

        r0 := @this: android.security.KeystoreArguments;

        r1 := @parameter0: android.os.Parcel;

        i0 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $r2 = newarray (byte[])[i0];

        r0.<android.security.KeystoreArguments: byte[][] args> = $r2;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r3 = r0.<android.security.KeystoreArguments: byte[][] args>;

        $r4 = virtualinvoke r1.<android.os.Parcel: byte[] createByteArray()>();

        $r3[i1] = $r4;

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public int describeContents()
    {
        android.security.KeystoreArguments r0;

        r0 := @this: android.security.KeystoreArguments;

        return 0;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.security.KeystoreArguments r0;
        android.os.Parcel r1;
        int i0, $i1, i2, i3;
        byte[] $r2;
        byte[][] r3, r4;

        r0 := @this: android.security.KeystoreArguments;

        r1 := @parameter0: android.os.Parcel;

        i2 := @parameter1: int;

        r3 = r0.<android.security.KeystoreArguments: byte[][] args>;

        i3 = 0;

        if r3 != null goto label1;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

        goto label3;

     label1:
        $i1 = lengthof r3;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i1);

        r4 = r0.<android.security.KeystoreArguments: byte[][] args>;

        i0 = lengthof r4;

     label2:
        if i3 >= i0 goto label3;

        $r2 = r4[i3];

        virtualinvoke r1.<android.os.Parcel: void writeByteArray(byte[])>($r2);

        i3 = i3 + 1;

        goto label2;

     label3:
        return;
    }
}
