public class android.security.NetworkSecurityPolicy extends java.lang.Object
{
    private static final android.security.NetworkSecurityPolicy INSTANCE;

    static void <clinit>()
    {
        android.security.NetworkSecurityPolicy $r0;

        $r0 = new android.security.NetworkSecurityPolicy;

        specialinvoke $r0.<android.security.NetworkSecurityPolicy: void <init>()>();

        <android.security.NetworkSecurityPolicy: android.security.NetworkSecurityPolicy INSTANCE> = $r0;

        return;
    }

    private void <init>()
    {
        android.security.NetworkSecurityPolicy r0;

        r0 := @this: android.security.NetworkSecurityPolicy;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static android.security.net.config.ApplicationConfig getApplicationConfigForPackage(android.content.Context, java.lang.String) throws android.content.pm.PackageManager$NameNotFoundException
    {
        android.content.Context r0, $r4;
        java.lang.String r1;
        android.security.net.config.ApplicationConfig $r2;
        android.security.net.config.ManifestConfigSource $r3;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.String;

        $r2 = new android.security.net.config.ApplicationConfig;

        $r3 = new android.security.net.config.ManifestConfigSource;

        $r4 = virtualinvoke r0.<android.content.Context: android.content.Context createPackageContext(java.lang.String,int)>(r1, 0);

        specialinvoke $r3.<android.security.net.config.ManifestConfigSource: void <init>(android.content.Context)>($r4);

        specialinvoke $r2.<android.security.net.config.ApplicationConfig: void <init>(android.security.net.config.ConfigSource)>($r3);

        return $r2;
    }

    public static android.security.NetworkSecurityPolicy getInstance()
    {
        android.security.NetworkSecurityPolicy $r0;

        $r0 = <android.security.NetworkSecurityPolicy: android.security.NetworkSecurityPolicy INSTANCE>;

        return $r0;
    }

    public void handleTrustStorageUpdate()
    {
        android.security.NetworkSecurityPolicy r0;
        android.security.net.config.ApplicationConfig r1;

        r0 := @this: android.security.NetworkSecurityPolicy;

        r1 = staticinvoke <android.security.net.config.ApplicationConfig: android.security.net.config.ApplicationConfig getDefaultInstance()>();

        if r1 == null goto label1;

        virtualinvoke r1.<android.security.net.config.ApplicationConfig: void handleTrustStorageUpdate()>();

     label1:
        return;
    }

    public boolean isCleartextTrafficPermitted()
    {
        android.security.NetworkSecurityPolicy r0;
        libcore.net.NetworkSecurityPolicy $r1;
        boolean $z0;

        r0 := @this: android.security.NetworkSecurityPolicy;

        $r1 = staticinvoke <libcore.net.NetworkSecurityPolicy: libcore.net.NetworkSecurityPolicy getInstance()>();

        $z0 = virtualinvoke $r1.<libcore.net.NetworkSecurityPolicy: boolean isCleartextTrafficPermitted()>();

        return $z0;
    }

    public boolean isCleartextTrafficPermitted(java.lang.String)
    {
        android.security.NetworkSecurityPolicy r0;
        java.lang.String r1;
        libcore.net.NetworkSecurityPolicy $r2;
        boolean $z0;

        r0 := @this: android.security.NetworkSecurityPolicy;

        r1 := @parameter0: java.lang.String;

        $r2 = staticinvoke <libcore.net.NetworkSecurityPolicy: libcore.net.NetworkSecurityPolicy getInstance()>();

        $z0 = virtualinvoke $r2.<libcore.net.NetworkSecurityPolicy: boolean isCleartextTrafficPermitted(java.lang.String)>(r1);

        return $z0;
    }

    public void setCleartextTrafficPermitted(boolean)
    {
        android.security.NetworkSecurityPolicy r0;
        boolean z0;
        android.security.FrameworkNetworkSecurityPolicy $r1;

        r0 := @this: android.security.NetworkSecurityPolicy;

        z0 := @parameter0: boolean;

        $r1 = new android.security.FrameworkNetworkSecurityPolicy;

        specialinvoke $r1.<android.security.FrameworkNetworkSecurityPolicy: void <init>(boolean)>(z0);

        staticinvoke <libcore.net.NetworkSecurityPolicy: void setInstance(libcore.net.NetworkSecurityPolicy)>($r1);

        return;
    }
}
