class android.security.identity.CredstoreIdentityCredential extends android.security.identity.IdentityCredential
{
    private static final java.lang.String TAG;
    private boolean mAllowUsingExhaustedKeys;
    private android.security.identity.ICredential mBinder;
    private int mCipherSuite;
    private android.content.Context mContext;
    private java.lang.String mCredentialName;
    private int mEphemeralCounter;
    private java.security.KeyPair mEphemeralKeyPair;
    private long mOperationHandle;
    private boolean mOperationHandleSet;
    private javax.crypto.SecretKey mReaderSecretKey;
    private int mReadersExpectedEphemeralCounter;
    private javax.crypto.SecretKey mSecretKey;

    void <init>(android.content.Context, java.lang.String, int, android.security.identity.ICredential)
    {
        android.security.identity.CredstoreIdentityCredential r0;
        android.content.Context r1;
        java.lang.String r2;
        int i0;
        android.security.identity.ICredential r3;

        r0 := @this: android.security.identity.CredstoreIdentityCredential;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r3 := @parameter3: android.security.identity.ICredential;

        specialinvoke r0.<android.security.identity.IdentityCredential: void <init>()>();

        r0.<android.security.identity.CredstoreIdentityCredential: java.security.KeyPair mEphemeralKeyPair> = null;

        r0.<android.security.identity.CredstoreIdentityCredential: javax.crypto.SecretKey mSecretKey> = null;

        r0.<android.security.identity.CredstoreIdentityCredential: javax.crypto.SecretKey mReaderSecretKey> = null;

        r0.<android.security.identity.CredstoreIdentityCredential: boolean mAllowUsingExhaustedKeys> = 1;

        r0.<android.security.identity.CredstoreIdentityCredential: boolean mOperationHandleSet> = 0;

        r0.<android.security.identity.CredstoreIdentityCredential: long mOperationHandle> = 0L;

        r0.<android.security.identity.CredstoreIdentityCredential: android.content.Context mContext> = r1;

        r0.<android.security.identity.CredstoreIdentityCredential: java.lang.String mCredentialName> = r2;

        r0.<android.security.identity.CredstoreIdentityCredential: int mCipherSuite> = i0;

        r0.<android.security.identity.CredstoreIdentityCredential: android.security.identity.ICredential mBinder> = r3;

        return;
    }

    private void ensureEphemeralKeyPair()
    {
        android.security.identity.CredstoreIdentityCredential r0;
        java.io.ByteArrayInputStream r1;
        java.security.KeyPair $r2, r21;
        android.security.identity.ICredential $r3;
        java.security.Key $r4;
        java.security.cert.Certificate $r5;
        android.os.ServiceSpecificException $r6;
        java.lang.StringBuilder $r7;
        int $i0;
        java.lang.RuntimeException $r10, $r13, $r15;
        java.lang.String $r11;
        android.os.RemoteException $r12;
        java.lang.Throwable $r14;
        byte[] r16;
        char[] r17;
        java.security.KeyStore r18;
        java.security.PrivateKey r19;
        java.security.PublicKey r20;

        r0 := @this: android.security.identity.CredstoreIdentityCredential;

        $r2 = r0.<android.security.identity.CredstoreIdentityCredential: java.security.KeyPair mEphemeralKeyPair>;

        if $r2 == null goto label1;

        return;

     label1:
        $r3 = r0.<android.security.identity.CredstoreIdentityCredential: android.security.identity.ICredential mBinder>;

        r16 = interfaceinvoke $r3.<android.security.identity.ICredential: byte[] createEphemeralKeyPair()>();

        r17 = newarray (char)[0];

        r18 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>("PKCS12");

        r1 = new java.io.ByteArrayInputStream;

        specialinvoke r1.<java.io.ByteArrayInputStream: void <init>(byte[])>(r16);

        virtualinvoke r18.<java.security.KeyStore: void load(java.io.InputStream,char[])>(r1, r17);

        $r4 = virtualinvoke r18.<java.security.KeyStore: java.security.Key getKey(java.lang.String,char[])>("ephemeralKey", r17);

        r19 = (java.security.PrivateKey) $r4;

        $r5 = virtualinvoke r18.<java.security.KeyStore: java.security.cert.Certificate getCertificate(java.lang.String)>("ephemeralKey");

        r20 = virtualinvoke $r5.<java.security.cert.Certificate: java.security.PublicKey getPublicKey()>();

        r21 = new java.security.KeyPair;

        specialinvoke r21.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>(r20, r19);

        r0.<android.security.identity.CredstoreIdentityCredential: java.security.KeyPair mEphemeralKeyPair> = r21;

     label2:
        return;

     label3:
        $r14 := @caughtexception;

        $r15 = new java.lang.RuntimeException;

        specialinvoke $r15.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Unexpected exception ", $r14);

        throw $r15;

     label4:
        $r6 := @caughtexception;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected ServiceSpecificException with code ");

        $i0 = $r6.<android.os.ServiceSpecificException: int errorCode>;

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r10 = new java.lang.RuntimeException;

        $r11 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r11, $r6);

        throw $r10;

     label5:
        $r12 := @caughtexception;

        $r13 = new java.lang.RuntimeException;

        specialinvoke $r13.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Unexpected RemoteException ", $r12);

        throw $r13;

        catch android.os.RemoteException from label1 to label2 with label5;
        catch android.os.ServiceSpecificException from label1 to label2 with label4;
        catch java.security.KeyStoreException from label1 to label2 with label3;
        catch java.security.cert.CertificateException from label1 to label2 with label3;
        catch java.security.UnrecoverableKeyException from label1 to label2 with label3;
        catch java.security.NoSuchAlgorithmException from label1 to label2 with label3;
        catch java.io.IOException from label1 to label2 with label3;
    }

    public java.security.KeyPair createEphemeralKeyPair()
    {
        android.security.identity.CredstoreIdentityCredential r0;
        java.security.KeyPair $r1;

        r0 := @this: android.security.identity.CredstoreIdentityCredential;

        specialinvoke r0.<android.security.identity.CredstoreIdentityCredential: void ensureEphemeralKeyPair()>();

        $r1 = r0.<android.security.identity.CredstoreIdentityCredential: java.security.KeyPair mEphemeralKeyPair>;

        return $r1;
    }

    public byte[] decryptMessageFromReader(byte[]) throws android.security.identity.MessageDecryptionException
    {
        android.security.identity.CredstoreIdentityCredential r0;
        java.nio.ByteBuffer r1;
        javax.crypto.Cipher r2;
        javax.crypto.SecretKey r3;
        javax.crypto.spec.GCMParameterSpec r4;
        int $i0, $i1, $i2;
        byte[] $r8, r11, r12;
        java.lang.Throwable $r9;
        android.security.identity.MessageDecryptionException $r10;

        r0 := @this: android.security.identity.CredstoreIdentityCredential;

        r11 := @parameter0: byte[];

        r1 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>(12);

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer putInt(int,int)>(0, 0);

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer putInt(int,int)>(4, 0);

        $i0 = r0.<android.security.identity.CredstoreIdentityCredential: int mReadersExpectedEphemeralCounter>;

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer putInt(int,int)>(8, $i0);

     label1:
        r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>("AES/GCM/NoPadding");

        r3 = r0.<android.security.identity.CredstoreIdentityCredential: javax.crypto.SecretKey mReaderSecretKey>;

        r4 = new javax.crypto.spec.GCMParameterSpec;

        $r8 = virtualinvoke r1.<java.nio.ByteBuffer: byte[] array()>();

        specialinvoke r4.<javax.crypto.spec.GCMParameterSpec: void <init>(int,byte[])>(128, $r8);

        virtualinvoke r2.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(2, r3, r4);

        r12 = virtualinvoke r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r11);

     label2:
        $i1 = r0.<android.security.identity.CredstoreIdentityCredential: int mReadersExpectedEphemeralCounter>;

        $i2 = $i1 + 1;

        r0.<android.security.identity.CredstoreIdentityCredential: int mReadersExpectedEphemeralCounter> = $i2;

        return r12;

     label3:
        $r9 := @caughtexception;

        $r10 = new android.security.identity.MessageDecryptionException;

        specialinvoke $r10.<android.security.identity.MessageDecryptionException: void <init>(java.lang.String,java.lang.Throwable)>("Error decrypting message", $r9);

        throw $r10;

        catch javax.crypto.BadPaddingException from label1 to label2 with label3;
        catch javax.crypto.IllegalBlockSizeException from label1 to label2 with label3;
        catch java.security.InvalidAlgorithmParameterException from label1 to label2 with label3;
        catch java.security.InvalidKeyException from label1 to label2 with label3;
        catch java.security.NoSuchAlgorithmException from label1 to label2 with label3;
        catch javax.crypto.NoSuchPaddingException from label1 to label2 with label3;
    }

    public byte[] encryptMessageToReader(byte[])
    {
        android.security.identity.CredstoreIdentityCredential r0;
        java.nio.ByteBuffer r1;
        javax.crypto.Cipher r2;
        javax.crypto.spec.GCMParameterSpec r3;
        int $i0, $i1, $i2;
        byte[] $r7, r11, r12;
        javax.crypto.SecretKey $r8;
        java.lang.Throwable $r9;
        java.lang.RuntimeException $r10;

        r0 := @this: android.security.identity.CredstoreIdentityCredential;

        r11 := @parameter0: byte[];

     label1:
        r1 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>(12);

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer putInt(int,int)>(0, 0);

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer putInt(int,int)>(4, 1);

        $i0 = r0.<android.security.identity.CredstoreIdentityCredential: int mEphemeralCounter>;

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer putInt(int,int)>(8, $i0);

        r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>("AES/GCM/NoPadding");

        r3 = new javax.crypto.spec.GCMParameterSpec;

        $r7 = virtualinvoke r1.<java.nio.ByteBuffer: byte[] array()>();

        specialinvoke r3.<javax.crypto.spec.GCMParameterSpec: void <init>(int,byte[])>(128, $r7);

        $r8 = r0.<android.security.identity.CredstoreIdentityCredential: javax.crypto.SecretKey mSecretKey>;

        virtualinvoke r2.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(1, $r8, r3);

        r12 = virtualinvoke r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r11);

     label2:
        $i1 = r0.<android.security.identity.CredstoreIdentityCredential: int mEphemeralCounter>;

        $i2 = $i1 + 1;

        r0.<android.security.identity.CredstoreIdentityCredential: int mEphemeralCounter> = $i2;

        return r12;

     label3:
        $r9 := @caughtexception;

        $r10 = new java.lang.RuntimeException;

        specialinvoke $r10.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Error encrypting message", $r9);

        throw $r10;

        catch javax.crypto.BadPaddingException from label1 to label2 with label3;
        catch javax.crypto.IllegalBlockSizeException from label1 to label2 with label3;
        catch javax.crypto.NoSuchPaddingException from label1 to label2 with label3;
        catch java.security.InvalidKeyException from label1 to label2 with label3;
        catch java.security.NoSuchAlgorithmException from label1 to label2 with label3;
        catch java.security.InvalidAlgorithmParameterException from label1 to label2 with label3;
    }

    public java.util.Collection getAuthKeysNeedingCertification()
    {
        android.security.identity.CredstoreIdentityCredential r0;
        android.security.identity.AuthKeyParcel[] r1;
        int i0, $i1, $i2, i3;
        java.io.ByteArrayInputStream r2;
        android.security.identity.ICredential $r3;
        byte[] $r4;
        java.util.Iterator $r5;
        java.lang.Object $r6;
        java.security.cert.X509Certificate $r7;
        java.lang.Throwable $r8;
        java.lang.RuntimeException $r9, $r14, $r17, r22;
        android.os.ServiceSpecificException $r10;
        java.lang.StringBuilder $r11;
        java.lang.String $r15;
        android.os.RemoteException $r16;
        java.util.LinkedList r18;
        java.security.cert.CertificateFactory r19;
        android.security.identity.AuthKeyParcel r20;
        java.util.Collection r21;

        r0 := @this: android.security.identity.CredstoreIdentityCredential;

     label01:
        $r3 = r0.<android.security.identity.CredstoreIdentityCredential: android.security.identity.ICredential mBinder>;

        r1 = interfaceinvoke $r3.<android.security.identity.ICredential: android.security.identity.AuthKeyParcel[] getAuthKeysNeedingCertification()>();

        r18 = new java.util.LinkedList;

        specialinvoke r18.<java.util.LinkedList: void <init>()>();

        r19 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>("X.509");

        i0 = lengthof r1;

     label02:
        i3 = 0;

     label03:
        if i3 >= i0 goto label07;

        r20 = r1[i3];

     label04:
        r2 = new java.io.ByteArrayInputStream;

        $r4 = r20.<android.security.identity.AuthKeyParcel: byte[] x509cert>;

        specialinvoke r2.<java.io.ByteArrayInputStream: void <init>(byte[])>($r4);

        r21 = virtualinvoke r19.<java.security.cert.CertificateFactory: java.util.Collection generateCertificates(java.io.InputStream)>(r2);

        $i1 = interfaceinvoke r21.<java.util.Collection: int size()>();

        if $i1 != 1 goto label06;

        $r5 = interfaceinvoke r21.<java.util.Collection: java.util.Iterator iterator()>();

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        $r7 = (java.security.cert.X509Certificate) $r6;

        virtualinvoke r18.<java.util.LinkedList: boolean add(java.lang.Object)>($r7);

     label05:
        i3 = i3 + 1;

        goto label03;

     label06:
        r22 = new java.lang.RuntimeException;

        specialinvoke r22.<java.lang.RuntimeException: void <init>(java.lang.String)>("Returned blob yields more than one X509 cert");

        throw r22;

     label07:
        return r18;

     label08:
        $r10 := @caughtexception;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected ServiceSpecificException with code ");

        $i2 = $r10.<android.os.ServiceSpecificException: int errorCode>;

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r14 = new java.lang.RuntimeException;

        $r15 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r15, $r10);

        throw $r14;

     label09:
        $r16 := @caughtexception;

        $r17 = new java.lang.RuntimeException;

        specialinvoke $r17.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Unexpected RemoteException ", $r16);

        throw $r17;

     label10:
        $r8 := @caughtexception;

        $r9 = new java.lang.RuntimeException;

        specialinvoke $r9.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Error decoding authenticationKey", $r8);

        throw $r9;

        catch java.security.cert.CertificateException from label01 to label02 with label10;
        catch android.os.RemoteException from label01 to label02 with label09;
        catch android.os.ServiceSpecificException from label01 to label02 with label08;
        catch java.security.cert.CertificateException from label04 to label05 with label10;
        catch android.os.RemoteException from label04 to label05 with label09;
        catch android.os.ServiceSpecificException from label04 to label05 with label08;
        catch java.security.cert.CertificateException from label06 to label07 with label10;
        catch android.os.RemoteException from label06 to label07 with label09;
        catch android.os.ServiceSpecificException from label06 to label07 with label08;
    }

    public int[] getAuthenticationDataUsageCount()
    {
        android.security.identity.CredstoreIdentityCredential r0;
        android.security.identity.ICredential $r2;
        android.os.RemoteException $r3;
        java.lang.RuntimeException $r4, $r9;
        android.os.ServiceSpecificException $r5;
        java.lang.StringBuilder $r6;
        int $i0;
        java.lang.String $r10;
        int[] r11;

        r0 := @this: android.security.identity.CredstoreIdentityCredential;

     label1:
        $r2 = r0.<android.security.identity.CredstoreIdentityCredential: android.security.identity.ICredential mBinder>;

        r11 = interfaceinvoke $r2.<android.security.identity.ICredential: int[] getAuthenticationDataUsageCount()>();

     label2:
        return r11;

     label3:
        $r5 := @caughtexception;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected ServiceSpecificException with code ");

        $i0 = $r5.<android.os.ServiceSpecificException: int errorCode>;

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r9 = new java.lang.RuntimeException;

        $r10 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r10, $r5);

        throw $r9;

     label4:
        $r3 := @caughtexception;

        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Unexpected RemoteException ", $r3);

        throw $r4;

        catch android.os.RemoteException from label1 to label2 with label4;
        catch android.os.ServiceSpecificException from label1 to label2 with label3;
    }

    public java.util.Collection getCredentialKeyCertificateChain()
    {
        android.security.identity.CredstoreIdentityCredential r0;
        android.security.identity.ICredential $r1;
        java.security.cert.CertificateFactory $r2;
        boolean $z0;
        java.lang.Object $r3;
        java.security.cert.Certificate $r4;
        java.security.cert.X509Certificate $r5;
        android.os.RemoteException $r6;
        java.lang.RuntimeException $r7, $r13, r21;
        java.lang.Throwable $r8;
        android.os.ServiceSpecificException $r9;
        java.lang.StringBuilder $r10;
        int $i0;
        java.lang.String $r14;
        byte[] r15;
        java.io.ByteArrayInputStream r16;
        java.util.Collection r17;
        java.util.LinkedList r18;
        java.util.Iterator r19;

        r0 := @this: android.security.identity.CredstoreIdentityCredential;

     label01:
        $r1 = r0.<android.security.identity.CredstoreIdentityCredential: android.security.identity.ICredential mBinder>;

        r15 = interfaceinvoke $r1.<android.security.identity.ICredential: byte[] getCredentialKeyCertificateChain()>();

        r16 = new java.io.ByteArrayInputStream;

        specialinvoke r16.<java.io.ByteArrayInputStream: void <init>(byte[])>(r15);

     label02:
        $r2 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>("X.509");

        r17 = virtualinvoke $r2.<java.security.cert.CertificateFactory: java.util.Collection generateCertificates(java.io.InputStream)>(r16);

     label03:
        r18 = new java.util.LinkedList;

        specialinvoke r18.<java.util.LinkedList: void <init>()>();

        r19 = interfaceinvoke r17.<java.util.Collection: java.util.Iterator iterator()>();

     label04:
        $z0 = interfaceinvoke r19.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label06;

        $r3 = interfaceinvoke r19.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (java.security.cert.Certificate) $r3;

        $r5 = (java.security.cert.X509Certificate) $r4;

        virtualinvoke r18.<java.util.LinkedList: boolean add(java.lang.Object)>($r5);

     label05:
        goto label04;

     label06:
        return r18;

     label07:
        $r8 := @caughtexception;

     label08:
        r21 = new java.lang.RuntimeException;

        specialinvoke r21.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Error decoding certificates", $r8);

        throw r21;

     label09:
        $r9 := @caughtexception;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected ServiceSpecificException with code ");

        $i0 = $r9.<android.os.ServiceSpecificException: int errorCode>;

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r13 = new java.lang.RuntimeException;

        $r14 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r14, $r9);

        throw $r13;

     label10:
        $r6 := @caughtexception;

        $r7 = new java.lang.RuntimeException;

        specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Unexpected RemoteException ", $r6);

        throw $r7;

        catch android.os.RemoteException from label01 to label02 with label10;
        catch android.os.ServiceSpecificException from label01 to label02 with label09;
        catch java.security.cert.CertificateException from label02 to label03 with label07;
        catch android.os.RemoteException from label02 to label03 with label10;
        catch android.os.ServiceSpecificException from label02 to label03 with label09;
        catch android.os.RemoteException from label03 to label04 with label10;
        catch android.os.ServiceSpecificException from label03 to label04 with label09;
        catch android.os.RemoteException from label04 to label05 with label10;
        catch android.os.ServiceSpecificException from label04 to label05 with label09;
        catch android.os.RemoteException from label08 to label09 with label10;
        catch android.os.ServiceSpecificException from label08 to label09 with label09;
    }

    public long getCredstoreOperationHandle()
    {
        android.security.identity.CredstoreIdentityCredential r0;
        int i0, $i3;
        boolean $z0, $z1;
        long $l1, $l2;
        android.security.identity.ICredential $r2;
        android.os.ServiceSpecificException $r3;
        java.lang.StringBuilder $r4;
        java.lang.RuntimeException $r7, $r10;
        java.lang.String $r8;
        android.os.RemoteException $r9;

        r0 := @this: android.security.identity.CredstoreIdentityCredential;

        $z0 = r0.<android.security.identity.CredstoreIdentityCredential: boolean mOperationHandleSet>;

        if $z0 != 0 goto label5;

     label1:
        $r2 = r0.<android.security.identity.CredstoreIdentityCredential: android.security.identity.ICredential mBinder>;

        $z1 = r0.<android.security.identity.CredstoreIdentityCredential: boolean mAllowUsingExhaustedKeys>;

        $l2 = interfaceinvoke $r2.<android.security.identity.ICredential: long selectAuthKey(boolean)>($z1);

        r0.<android.security.identity.CredstoreIdentityCredential: long mOperationHandle> = $l2;

        r0.<android.security.identity.CredstoreIdentityCredential: boolean mOperationHandleSet> = 1;

     label2:
        goto label5;

     label3:
        $r3 := @caughtexception;

        i0 = $r3.<android.os.ServiceSpecificException: int errorCode>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected ServiceSpecificException with code ");

        $i3 = $r3.<android.os.ServiceSpecificException: int errorCode>;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r7 = new java.lang.RuntimeException;

        $r8 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r8, $r3);

        throw $r7;

     label4:
        $r9 := @caughtexception;

        $r10 = new java.lang.RuntimeException;

        specialinvoke $r10.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Unexpected RemoteException ", $r9);

        throw $r10;

     label5:
        $l1 = r0.<android.security.identity.CredstoreIdentityCredential: long mOperationHandle>;

        return $l1;

        catch android.os.RemoteException from label1 to label2 with label4;
        catch android.os.ServiceSpecificException from label1 to label2 with label3;
    }

    public android.security.identity.ResultData getEntries(byte[], java.util.Map, byte[], byte[]) throws android.security.identity.SessionTranscriptMismatchException, android.security.identity.NoAuthenticationKeyAvailableException, android.security.identity.InvalidReaderSignatureException, android.security.identity.EphemeralPublicKeyNotFoundException, android.security.identity.InvalidRequestMessageException
    {
        android.security.identity.CredstoreIdentityCredential r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, i13, i14, i15, i16;
        java.util.Set $r1;
        boolean $z0, $z1, $z2;
        android.security.identity.CredstoreResultData $r2;
        java.lang.String $r3, $r4, $r7, $r8, $r27, $r29, $r31, $r33, $r38, $r40, r47, r50;
        byte[] $r6, r41, r43, r44, r52, r53, r55, r56, $r58, $r59;
        java.lang.Object $r10, $r11, $r16;
        android.security.identity.RequestNamespaceParcel $r12, $r13, $r14, $r17, $r20;
        android.security.identity.RequestEntryParcel[] $r15, $r19, $r21;
        android.security.identity.RequestEntryParcel $r18, $r22;
        android.os.RemoteException $r23;
        java.lang.RuntimeException $r24, $r37;
        android.os.ServiceSpecificException $r25;
        android.security.identity.EphemeralPublicKeyNotFoundException $r26;
        android.security.identity.InvalidReaderSignatureException $r28;
        android.security.identity.NoAuthenticationKeyAvailableException $r30;
        android.security.identity.InvalidRequestMessageException $r32;
        java.lang.StringBuilder $r34;
        android.security.identity.SessionTranscriptMismatchException $r39;
        java.util.Map r42;
        android.security.identity.RequestNamespaceParcel[] r45;
        java.util.Iterator r46, r49;
        java.util.Collection r48;
        android.security.identity.ICredential r51;
        android.security.identity.GetEntriesResultParcel r54;
        android.security.identity.CredstoreResultData$Builder $r57;
        android.security.identity.ResultNamespaceParcel[] r61;
        android.security.identity.ResultNamespaceParcel r63;
        android.security.identity.ResultEntryParcel[] r64;
        android.security.identity.ResultEntryParcel r65;

        r0 := @this: android.security.identity.CredstoreIdentityCredential;

        r41 := @parameter0: byte[];

        r42 := @parameter1: java.util.Map;

        r43 := @parameter2: byte[];

        r44 := @parameter3: byte[];

        $i2 = interfaceinvoke r42.<java.util.Map: int size()>();

        r45 = newarray (android.security.identity.RequestNamespaceParcel)[$i2];

        $r1 = interfaceinvoke r42.<java.util.Map: java.util.Set keySet()>();

        r46 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>();

        i13 = 0;

     label01:
        $z0 = interfaceinvoke r46.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label04;

        $r10 = interfaceinvoke r46.<java.util.Iterator: java.lang.Object next()>();

        r47 = (java.lang.String) $r10;

        $r11 = interfaceinvoke r42.<java.util.Map: java.lang.Object get(java.lang.Object)>(r47);

        r48 = (java.util.Collection) $r11;

        $r12 = new android.security.identity.RequestNamespaceParcel;

        specialinvoke $r12.<android.security.identity.RequestNamespaceParcel: void <init>()>();

        r45[i13] = $r12;

        $r13 = r45[i13];

        $r13.<android.security.identity.RequestNamespaceParcel: java.lang.String namespaceName> = r47;

        $r14 = r45[i13];

        $i6 = interfaceinvoke r48.<java.util.Collection: int size()>();

        $r15 = newarray (android.security.identity.RequestEntryParcel)[$i6];

        $r14.<android.security.identity.RequestNamespaceParcel: android.security.identity.RequestEntryParcel[] entries> = $r15;

        i14 = 0;

        r49 = interfaceinvoke r48.<java.util.Collection: java.util.Iterator iterator()>();

     label02:
        $z2 = interfaceinvoke r49.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label03;

        $r16 = interfaceinvoke r49.<java.util.Iterator: java.lang.Object next()>();

        r50 = (java.lang.String) $r16;

        $r17 = r45[i13];

        $r19 = $r17.<android.security.identity.RequestNamespaceParcel: android.security.identity.RequestEntryParcel[] entries>;

        $r18 = new android.security.identity.RequestEntryParcel;

        specialinvoke $r18.<android.security.identity.RequestEntryParcel: void <init>()>();

        $r19[i14] = $r18;

        $r20 = r45[i13];

        $r21 = $r20.<android.security.identity.RequestNamespaceParcel: android.security.identity.RequestEntryParcel[] entries>;

        $r22 = $r21[i14];

        $r22.<android.security.identity.RequestEntryParcel: java.lang.String name> = r50;

        i14 = i14 + 1;

        goto label02;

     label03:
        i13 = i13 + 1;

        goto label01;

     label04:
        r51 = r0.<android.security.identity.CredstoreIdentityCredential: android.security.identity.ICredential mBinder>;

     label05:
        if r41 == null goto label06;

        goto label07;

     label06:
        r41 = newarray (byte)[0];

     label07:
        if r43 == null goto label08;

        r52 = r43;

        goto label09;

     label08:
        r52 = newarray (byte)[0];

     label09:
        if r44 == null goto label10;

        r53 = r44;

        goto label11;

     label10:
        r53 = newarray (byte)[0];

     label11:
        $z1 = r0.<android.security.identity.CredstoreIdentityCredential: boolean mAllowUsingExhaustedKeys>;

        r54 = interfaceinvoke r51.<android.security.identity.ICredential: android.security.identity.GetEntriesResultParcel getEntries(byte[],android.security.identity.RequestNamespaceParcel[],byte[],byte[],boolean)>(r41, r45, r52, r53, $z1);

     label12:
        r55 = r54.<android.security.identity.GetEntriesResultParcel: byte[] mac>;

        r56 = r55;

        if r55 == null goto label13;

        r56 = r55;

        $i5 = lengthof r55;

        if $i5 != 0 goto label13;

        r56 = null;

     label13:
        $r57 = new android.security.identity.CredstoreResultData$Builder;

        $r58 = r54.<android.security.identity.GetEntriesResultParcel: byte[] staticAuthenticationData>;

        $r59 = r54.<android.security.identity.GetEntriesResultParcel: byte[] deviceNameSpaces>;

        specialinvoke $r57.<android.security.identity.CredstoreResultData$Builder: void <init>(byte[],byte[],byte[])>($r58, $r59, r56);

        r61 = r54.<android.security.identity.GetEntriesResultParcel: android.security.identity.ResultNamespaceParcel[] resultNamespaces>;

        i0 = lengthof r61;

        i15 = 0;

     label14:
        if i15 >= i0 goto label19;

        r63 = r61[i15];

        r64 = r63.<android.security.identity.ResultNamespaceParcel: android.security.identity.ResultEntryParcel[] entries>;

        i1 = lengthof r64;

        i16 = 0;

     label15:
        if i16 >= i1 goto label18;

        r65 = r64[i16];

        $i3 = r65.<android.security.identity.ResultEntryParcel: int status>;

        if $i3 != 0 goto label16;

        $r8 = r63.<android.security.identity.ResultNamespaceParcel: java.lang.String namespaceName>;

        $r7 = r65.<android.security.identity.ResultEntryParcel: java.lang.String name>;

        $r6 = r65.<android.security.identity.ResultEntryParcel: byte[] value>;

        virtualinvoke $r57.<android.security.identity.CredstoreResultData$Builder: android.security.identity.CredstoreResultData$Builder addEntry(java.lang.String,java.lang.String,byte[])>($r8, $r7, $r6);

        goto label17;

     label16:
        $r4 = r63.<android.security.identity.ResultNamespaceParcel: java.lang.String namespaceName>;

        $r3 = r65.<android.security.identity.ResultEntryParcel: java.lang.String name>;

        $i4 = r65.<android.security.identity.ResultEntryParcel: int status>;

        virtualinvoke $r57.<android.security.identity.CredstoreResultData$Builder: android.security.identity.CredstoreResultData$Builder addErrorStatus(java.lang.String,java.lang.String,int)>($r4, $r3, $i4);

     label17:
        i16 = i16 + 1;

        goto label15;

     label18:
        i15 = i15 + 1;

        goto label14;

     label19:
        $r2 = virtualinvoke $r57.<android.security.identity.CredstoreResultData$Builder: android.security.identity.CredstoreResultData build()>();

        return $r2;

     label20:
        $r25 := @caughtexception;

        $i7 = $r25.<android.os.ServiceSpecificException: int errorCode>;

        if $i7 == 5 goto label25;

        $i8 = $r25.<android.os.ServiceSpecificException: int errorCode>;

        if $i8 == 7 goto label24;

        $i9 = $r25.<android.os.ServiceSpecificException: int errorCode>;

        if $i9 == 6 goto label23;

        $i10 = $r25.<android.os.ServiceSpecificException: int errorCode>;

        if $i10 == 10 goto label22;

        $i11 = $r25.<android.os.ServiceSpecificException: int errorCode>;

        if $i11 != 11 goto label21;

        $r39 = new android.security.identity.SessionTranscriptMismatchException;

        $r40 = virtualinvoke $r25.<android.os.ServiceSpecificException: java.lang.String getMessage()>();

        specialinvoke $r39.<android.security.identity.SessionTranscriptMismatchException: void <init>(java.lang.String,java.lang.Throwable)>($r40, $r25);

        throw $r39;

     label21:
        $r34 = new java.lang.StringBuilder;

        specialinvoke $r34.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected ServiceSpecificException with code ");

        $i12 = $r25.<android.os.ServiceSpecificException: int errorCode>;

        virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i12);

        $r37 = new java.lang.RuntimeException;

        $r38 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r37.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r38, $r25);

        throw $r37;

     label22:
        $r32 = new android.security.identity.InvalidRequestMessageException;

        $r33 = virtualinvoke $r25.<android.os.ServiceSpecificException: java.lang.String getMessage()>();

        specialinvoke $r32.<android.security.identity.InvalidRequestMessageException: void <init>(java.lang.String,java.lang.Throwable)>($r33, $r25);

        throw $r32;

     label23:
        $r30 = new android.security.identity.NoAuthenticationKeyAvailableException;

        $r31 = virtualinvoke $r25.<android.os.ServiceSpecificException: java.lang.String getMessage()>();

        specialinvoke $r30.<android.security.identity.NoAuthenticationKeyAvailableException: void <init>(java.lang.String,java.lang.Throwable)>($r31, $r25);

        throw $r30;

     label24:
        $r28 = new android.security.identity.InvalidReaderSignatureException;

        $r29 = virtualinvoke $r25.<android.os.ServiceSpecificException: java.lang.String getMessage()>();

        specialinvoke $r28.<android.security.identity.InvalidReaderSignatureException: void <init>(java.lang.String,java.lang.Throwable)>($r29, $r25);

        throw $r28;

     label25:
        $r26 = new android.security.identity.EphemeralPublicKeyNotFoundException;

        $r27 = virtualinvoke $r25.<android.os.ServiceSpecificException: java.lang.String getMessage()>();

        specialinvoke $r26.<android.security.identity.EphemeralPublicKeyNotFoundException: void <init>(java.lang.String,java.lang.Throwable)>($r27, $r25);

        throw $r26;

     label26:
        $r23 := @caughtexception;

        $r24 = new java.lang.RuntimeException;

        specialinvoke $r24.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Unexpected RemoteException ", $r23);

        throw $r24;

        catch android.os.RemoteException from label04 to label05 with label26;
        catch android.os.ServiceSpecificException from label04 to label05 with label20;
        catch android.os.RemoteException from label06 to label07 with label26;
        catch android.os.ServiceSpecificException from label06 to label07 with label20;
        catch android.os.RemoteException from label08 to label09 with label26;
        catch android.os.ServiceSpecificException from label08 to label09 with label20;
        catch android.os.RemoteException from label10 to label11 with label26;
        catch android.os.ServiceSpecificException from label10 to label11 with label20;
        catch android.os.RemoteException from label11 to label12 with label26;
        catch android.os.ServiceSpecificException from label11 to label12 with label20;
    }

    public void setAllowUsingExhaustedKeys(boolean)
    {
        android.security.identity.CredstoreIdentityCredential r0;
        boolean z0;

        r0 := @this: android.security.identity.CredstoreIdentityCredential;

        z0 := @parameter0: boolean;

        r0.<android.security.identity.CredstoreIdentityCredential: boolean mAllowUsingExhaustedKeys> = z0;

        return;
    }

    public void setAvailableAuthenticationKeys(int, int)
    {
        android.security.identity.CredstoreIdentityCredential r0;
        int i0, i1, $i2;
        android.security.identity.ICredential $r2;
        android.os.ServiceSpecificException $r3;
        java.lang.StringBuilder $r4;
        java.lang.RuntimeException $r7, $r10;
        java.lang.String $r8;
        android.os.RemoteException $r9;

        r0 := @this: android.security.identity.CredstoreIdentityCredential;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

     label1:
        $r2 = r0.<android.security.identity.CredstoreIdentityCredential: android.security.identity.ICredential mBinder>;

        interfaceinvoke $r2.<android.security.identity.ICredential: void setAvailableAuthenticationKeys(int,int)>(i0, i1);

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected ServiceSpecificException with code ");

        $i2 = $r3.<android.os.ServiceSpecificException: int errorCode>;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r7 = new java.lang.RuntimeException;

        $r8 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r8, $r3);

        throw $r7;

     label4:
        $r9 := @caughtexception;

        $r10 = new java.lang.RuntimeException;

        specialinvoke $r10.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Unexpected RemoteException ", $r9);

        throw $r10;

        catch android.os.RemoteException from label1 to label2 with label4;
        catch android.os.ServiceSpecificException from label1 to label2 with label3;
    }

    public void setReaderEphemeralPublicKey(java.security.PublicKey) throws java.security.InvalidKeyException
    {
        android.security.identity.CredstoreIdentityCredential r0;
        byte[] r1, r2, r3, r19, r21, r23;
        android.security.identity.ICredential $r4;
        java.security.KeyPair $r5;
        java.security.PrivateKey $r6;
        byte $b0, $b1;
        android.os.RemoteException $r8;
        java.lang.RuntimeException $r9, $r14, $r17;
        android.os.ServiceSpecificException $r10;
        java.lang.StringBuilder $r11;
        int $i2;
        java.lang.String $r15;
        java.lang.Throwable $r16;
        java.security.PublicKey r18;
        javax.crypto.KeyAgreement r20;
        javax.crypto.spec.SecretKeySpec r22, r24;

        r0 := @this: android.security.identity.CredstoreIdentityCredential;

        r18 := @parameter0: java.security.PublicKey;

     label01:
        r19 = staticinvoke <android.security.identity.Util: byte[] publicKeyEncodeUncompressedForm(java.security.PublicKey)>(r18);

        $r4 = r0.<android.security.identity.CredstoreIdentityCredential: android.security.identity.ICredential mBinder>;

        interfaceinvoke $r4.<android.security.identity.ICredential: void setReaderEphemeralPublicKey(byte[])>(r19);

     label02:
        specialinvoke r0.<android.security.identity.CredstoreIdentityCredential: void ensureEphemeralKeyPair()>();

     label03:
        r20 = staticinvoke <javax.crypto.KeyAgreement: javax.crypto.KeyAgreement getInstance(java.lang.String)>("ECDH");

        $r5 = r0.<android.security.identity.CredstoreIdentityCredential: java.security.KeyPair mEphemeralKeyPair>;

        $r6 = virtualinvoke $r5.<java.security.KeyPair: java.security.PrivateKey getPrivate()>();

        virtualinvoke r20.<javax.crypto.KeyAgreement: void init(java.security.Key)>($r6);

        virtualinvoke r20.<javax.crypto.KeyAgreement: java.security.Key doPhase(java.security.Key,boolean)>(r18, 1);

        r1 = virtualinvoke r20.<javax.crypto.KeyAgreement: byte[] generateSecret()>();

        r21 = newarray (byte)[1];

        r2 = newarray (byte)[0];

     label04:
        $b0 = (byte) 1;

        r21[0] = $b0;

     label05:
        r3 = staticinvoke <android.security.identity.Util: byte[] computeHkdf(java.lang.String,byte[],byte[],byte[],int)>("HmacSha256", r1, r21, r2, 32);

        r22 = new javax.crypto.spec.SecretKeySpec;

        specialinvoke r22.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r3, "AES");

        r0.<android.security.identity.CredstoreIdentityCredential: javax.crypto.SecretKey mSecretKey> = r22;

     label06:
        $b1 = (byte) 0;

        r21[0] = $b1;

     label07:
        r23 = staticinvoke <android.security.identity.Util: byte[] computeHkdf(java.lang.String,byte[],byte[],byte[],int)>("HmacSha256", r1, r21, r2, 32);

        r24 = new javax.crypto.spec.SecretKeySpec;

        specialinvoke r24.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r23, "AES");

        r0.<android.security.identity.CredstoreIdentityCredential: javax.crypto.SecretKey mReaderSecretKey> = r24;

        r0.<android.security.identity.CredstoreIdentityCredential: int mEphemeralCounter> = 1;

        r0.<android.security.identity.CredstoreIdentityCredential: int mReadersExpectedEphemeralCounter> = 1;

     label08:
        return;

     label09:
        $r16 := @caughtexception;

        $r17 = new java.lang.RuntimeException;

        specialinvoke $r17.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Error performing key agreement", $r16);

        throw $r17;

     label10:
        $r10 := @caughtexception;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected ServiceSpecificException with code ");

        $i2 = $r10.<android.os.ServiceSpecificException: int errorCode>;

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r14 = new java.lang.RuntimeException;

        $r15 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r15, $r10);

        throw $r14;

     label11:
        $r8 := @caughtexception;

        $r9 = new java.lang.RuntimeException;

        specialinvoke $r9.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Unexpected RemoteException ", $r8);

        throw $r9;

        catch android.os.RemoteException from label01 to label02 with label11;
        catch android.os.ServiceSpecificException from label01 to label02 with label10;
        catch java.security.NoSuchAlgorithmException from label03 to label04 with label09;
        catch java.security.NoSuchAlgorithmException from label05 to label06 with label09;
        catch java.security.NoSuchAlgorithmException from label07 to label08 with label09;
    }

    public void storeStaticAuthenticationData(java.security.cert.X509Certificate, byte[]) throws android.security.identity.UnknownAuthenticationKeyException
    {
        android.security.identity.CredstoreIdentityCredential r0;
        android.security.identity.AuthKeyParcel r1;
        byte[] $r2, r17;
        android.security.identity.ICredential $r3;
        java.lang.Throwable $r4;
        java.lang.RuntimeException $r5, $r10, $r15;
        android.os.ServiceSpecificException $r6;
        int $i0, $i1;
        java.lang.StringBuilder $r7;
        java.lang.String $r11, $r13;
        android.security.identity.UnknownAuthenticationKeyException $r12;
        android.os.RemoteException $r14;
        java.security.cert.X509Certificate r16;

        r0 := @this: android.security.identity.CredstoreIdentityCredential;

        r16 := @parameter0: java.security.cert.X509Certificate;

        r17 := @parameter1: byte[];

     label1:
        r1 = new android.security.identity.AuthKeyParcel;

        specialinvoke r1.<android.security.identity.AuthKeyParcel: void <init>()>();

        $r2 = virtualinvoke r16.<java.security.cert.X509Certificate: byte[] getEncoded()>();

        r1.<android.security.identity.AuthKeyParcel: byte[] x509cert> = $r2;

        $r3 = r0.<android.security.identity.CredstoreIdentityCredential: android.security.identity.ICredential mBinder>;

        interfaceinvoke $r3.<android.security.identity.ICredential: void storeStaticAuthenticationData(android.security.identity.AuthKeyParcel,byte[])>(r1, r17);

     label2:
        return;

     label3:
        $r6 := @caughtexception;

        $i0 = $r6.<android.os.ServiceSpecificException: int errorCode>;

        if $i0 != 9 goto label4;

        $r12 = new android.security.identity.UnknownAuthenticationKeyException;

        $r13 = virtualinvoke $r6.<android.os.ServiceSpecificException: java.lang.String getMessage()>();

        specialinvoke $r12.<android.security.identity.UnknownAuthenticationKeyException: void <init>(java.lang.String,java.lang.Throwable)>($r13, $r6);

        throw $r12;

     label4:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected ServiceSpecificException with code ");

        $i1 = $r6.<android.os.ServiceSpecificException: int errorCode>;

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r10 = new java.lang.RuntimeException;

        $r11 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r11, $r6);

        throw $r10;

     label5:
        $r14 := @caughtexception;

        $r15 = new java.lang.RuntimeException;

        specialinvoke $r15.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Unexpected RemoteException ", $r14);

        throw $r15;

     label6:
        $r4 := @caughtexception;

        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Error encoding authenticationKey", $r4);

        throw $r5;

        catch java.security.cert.CertificateEncodingException from label1 to label2 with label6;
        catch android.os.RemoteException from label1 to label2 with label5;
        catch android.os.ServiceSpecificException from label1 to label2 with label3;
    }

    public static void <clinit>()
    {
        <android.security.identity.CredstoreIdentityCredential: java.lang.String TAG> = "CredstoreIdentityCredential";

        return;
    }
}
