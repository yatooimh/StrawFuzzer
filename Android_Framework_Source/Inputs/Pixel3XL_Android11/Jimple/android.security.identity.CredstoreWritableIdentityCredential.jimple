class android.security.identity.CredstoreWritableIdentityCredential extends android.security.identity.WritableIdentityCredential
{
    private static final java.lang.String TAG;
    private android.security.identity.IWritableCredential mBinder;
    private android.content.Context mContext;
    private java.lang.String mCredentialName;
    private java.lang.String mDocType;

    void <init>(android.content.Context, java.lang.String, java.lang.String, android.security.identity.IWritableCredential)
    {
        android.security.identity.CredstoreWritableIdentityCredential r0;
        android.content.Context r1;
        java.lang.String r2, r3;
        android.security.identity.IWritableCredential r4;

        r0 := @this: android.security.identity.CredstoreWritableIdentityCredential;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: android.security.identity.IWritableCredential;

        specialinvoke r0.<android.security.identity.WritableIdentityCredential: void <init>()>();

        r0.<android.security.identity.CredstoreWritableIdentityCredential: android.content.Context mContext> = r1;

        r0.<android.security.identity.CredstoreWritableIdentityCredential: java.lang.String mDocType> = r3;

        r0.<android.security.identity.CredstoreWritableIdentityCredential: java.lang.String mCredentialName> = r2;

        r0.<android.security.identity.CredstoreWritableIdentityCredential: android.security.identity.IWritableCredential mBinder> = r4;

        return;
    }

    private static long getRootSid()
    {
        long l0;
        byte $b1;
        java.lang.IllegalStateException $r0;

        l0 = staticinvoke <android.security.GateKeeper: long getSecureUserId()>();

        $b1 = l0 cmp 0L;

        if $b1 == 0 goto label1;

        return l0;

     label1:
        $r0 = new java.lang.IllegalStateException;

        specialinvoke $r0.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Secure lock screen must be enabled to create credentials requiring user authentication");

        throw $r0;
    }

    public java.util.Collection getCredentialKeyCertificateChain(byte[])
    {
        android.security.identity.CredstoreWritableIdentityCredential r0;
        android.security.identity.IWritableCredential $r1;
        java.security.cert.CertificateFactory $r2;
        boolean $z0;
        java.lang.Object $r3;
        java.security.cert.Certificate $r4;
        java.security.cert.X509Certificate $r5;
        android.os.ServiceSpecificException $r6;
        java.lang.StringBuilder $r7;
        int $i0;
        java.lang.RuntimeException $r10, $r13, r22;
        java.lang.String $r11;
        android.os.RemoteException $r12;
        java.lang.Throwable $r14;
        byte[] r15, r16;
        java.io.ByteArrayInputStream r17;
        java.util.Collection r18;
        java.util.LinkedList r19;
        java.util.Iterator r20;

        r0 := @this: android.security.identity.CredstoreWritableIdentityCredential;

        r15 := @parameter0: byte[];

     label01:
        $r1 = r0.<android.security.identity.CredstoreWritableIdentityCredential: android.security.identity.IWritableCredential mBinder>;

        r16 = interfaceinvoke $r1.<android.security.identity.IWritableCredential: byte[] getCredentialKeyCertificateChain(byte[])>(r15);

        r17 = new java.io.ByteArrayInputStream;

        specialinvoke r17.<java.io.ByteArrayInputStream: void <init>(byte[])>(r16);

     label02:
        $r2 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>("X.509");

        r18 = virtualinvoke $r2.<java.security.cert.CertificateFactory: java.util.Collection generateCertificates(java.io.InputStream)>(r17);

     label03:
        r19 = new java.util.LinkedList;

        specialinvoke r19.<java.util.LinkedList: void <init>()>();

        r20 = interfaceinvoke r18.<java.util.Collection: java.util.Iterator iterator()>();

     label04:
        $z0 = interfaceinvoke r20.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label06;

        $r3 = interfaceinvoke r20.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (java.security.cert.Certificate) $r3;

        $r5 = (java.security.cert.X509Certificate) $r4;

        virtualinvoke r19.<java.util.LinkedList: boolean add(java.lang.Object)>($r5);

     label05:
        goto label04;

     label06:
        return r19;

     label07:
        $r14 := @caughtexception;

     label08:
        r22 = new java.lang.RuntimeException;

        specialinvoke r22.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Error decoding certificates", $r14);

        throw r22;

     label09:
        $r6 := @caughtexception;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected ServiceSpecificException with code ");

        $i0 = $r6.<android.os.ServiceSpecificException: int errorCode>;

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r10 = new java.lang.RuntimeException;

        $r11 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r11, $r6);

        throw $r10;

     label10:
        $r12 := @caughtexception;

        $r13 = new java.lang.RuntimeException;

        specialinvoke $r13.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Unexpected RemoteException ", $r12);

        throw $r13;

        catch android.os.RemoteException from label01 to label02 with label10;
        catch android.os.ServiceSpecificException from label01 to label02 with label09;
        catch java.security.cert.CertificateException from label02 to label03 with label07;
        catch android.os.RemoteException from label02 to label03 with label10;
        catch android.os.ServiceSpecificException from label02 to label03 with label09;
        catch android.os.RemoteException from label03 to label04 with label10;
        catch android.os.ServiceSpecificException from label03 to label04 with label09;
        catch android.os.RemoteException from label04 to label05 with label10;
        catch android.os.ServiceSpecificException from label04 to label05 with label09;
        catch android.os.RemoteException from label08 to label09 with label10;
        catch android.os.ServiceSpecificException from label08 to label09 with label09;
    }

    public byte[] personalize(android.security.identity.PersonalizationData)
    {
        android.security.identity.CredstoreWritableIdentityCredential r0;
        android.security.identity.AccessControlProfileParcel[] r1;
        java.util.Iterator r2, r5, r6, r45;
        android.security.identity.PersonalizationData$NamespaceData r3;
        android.security.identity.EntryParcel[] r4;
        android.security.identity.AccessControlProfileId r7, $r26;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i7, i8, i9, i10, i11;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, z6;
        android.security.identity.IWritableCredential $r8;
        java.lang.Object $r9, $r13, $r20, $r23;
        android.security.identity.EntryNamespaceParcel $r10, $r11, $r12;
        android.security.identity.EntryParcel $r14, $r15, $r16, $r18, $r21;
        byte[] $r17, $r27, $r32, r55;
        int[] $r19, $r22;
        android.security.identity.AccessControlProfileParcel $r24, $r25, $r28, $r29, $r30, $r31;
        long $l6, l12;
        java.lang.Throwable $r33;
        java.lang.RuntimeException $r34, $r36, $r41;
        android.os.RemoteException $r35;
        android.os.ServiceSpecificException $r37;
        java.lang.StringBuilder $r38;
        java.lang.String $r42, r51, r53;
        android.security.identity.PersonalizationData r43;
        java.util.Collection r44, r49, r52, r54;
        android.security.identity.AccessControlProfile r46;
        java.security.cert.X509Certificate r47;
        android.security.identity.EntryNamespaceParcel[] r50;

        r0 := @this: android.security.identity.CredstoreWritableIdentityCredential;

        r43 := @parameter0: android.security.identity.PersonalizationData;

        r44 = virtualinvoke r43.<android.security.identity.PersonalizationData: java.util.Collection getAccessControlProfiles()>();

        $i0 = interfaceinvoke r44.<java.util.Collection: int size()>();

        r1 = newarray (android.security.identity.AccessControlProfileParcel)[$i0];

        r45 = interfaceinvoke r44.<java.util.Collection: java.util.Iterator iterator()>();

        i8 = 0;

        z6 = 0;

     label01:
        $z0 = interfaceinvoke r45.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label08;

        $r23 = interfaceinvoke r45.<java.util.Iterator: java.lang.Object next()>();

        r46 = (android.security.identity.AccessControlProfile) $r23;

        $r24 = new android.security.identity.AccessControlProfileParcel;

        specialinvoke $r24.<android.security.identity.AccessControlProfileParcel: void <init>()>();

        r1[i8] = $r24;

        $r25 = r1[i8];

        $r26 = virtualinvoke r46.<android.security.identity.AccessControlProfile: android.security.identity.AccessControlProfileId getAccessControlProfileId()>();

        $i5 = virtualinvoke $r26.<android.security.identity.AccessControlProfileId: int getId()>();

        $r25.<android.security.identity.AccessControlProfileParcel: int id> = $i5;

        r47 = virtualinvoke r46.<android.security.identity.AccessControlProfile: java.security.cert.X509Certificate getReaderCertificate()>();

        if r47 == null goto label05;

     label02:
        $r31 = r1[i8];

        $r32 = virtualinvoke r47.<java.security.cert.X509Certificate: byte[] getEncoded()>();

        $r31.<android.security.identity.AccessControlProfileParcel: byte[] readerCertificate> = $r32;

     label03:
        goto label06;

     label04:
        $r33 := @caughtexception;

        $r34 = new java.lang.RuntimeException;

        specialinvoke $r34.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Error encoding reader certificate", $r33);

        throw $r34;

     label05:
        $r28 = r1[i8];

        $r27 = newarray (byte)[0];

        $r28.<android.security.identity.AccessControlProfileParcel: byte[] readerCertificate> = $r27;

     label06:
        $r29 = r1[i8];

        $z4 = virtualinvoke r46.<android.security.identity.AccessControlProfile: boolean isUserAuthenticationRequired()>();

        $r29.<android.security.identity.AccessControlProfileParcel: boolean userAuthenticationRequired> = $z4;

        $r30 = r1[i8];

        $l6 = virtualinvoke r46.<android.security.identity.AccessControlProfile: long getUserAuthenticationTimeout()>();

        $r30.<android.security.identity.AccessControlProfileParcel: long userAuthenticationTimeoutMillis> = $l6;

        $z5 = virtualinvoke r46.<android.security.identity.AccessControlProfile: boolean isUserAuthenticationRequired()>();

        if $z5 == 0 goto label07;

        z6 = 1;

     label07:
        i8 = i8 + 1;

        goto label01;

     label08:
        r49 = virtualinvoke r43.<android.security.identity.PersonalizationData: java.util.Collection getNamespaces()>();

        $i1 = interfaceinvoke r49.<java.util.Collection: int size()>();

        r50 = newarray (android.security.identity.EntryNamespaceParcel)[$i1];

        r2 = interfaceinvoke r49.<java.util.Collection: java.util.Iterator iterator()>();

        i9 = 0;

     label09:
        $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label14;

        $r9 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r51 = (java.lang.String) $r9;

        r3 = virtualinvoke r43.<android.security.identity.PersonalizationData: android.security.identity.PersonalizationData$NamespaceData getNamespaceData(java.lang.String)>(r51);

        $r10 = new android.security.identity.EntryNamespaceParcel;

        specialinvoke $r10.<android.security.identity.EntryNamespaceParcel: void <init>()>();

        r50[i9] = $r10;

        $r11 = r50[i9];

        $r11.<android.security.identity.EntryNamespaceParcel: java.lang.String namespaceName> = r51;

        r52 = virtualinvoke r3.<android.security.identity.PersonalizationData$NamespaceData: java.util.Collection getEntryNames()>();

        $i2 = interfaceinvoke r52.<java.util.Collection: int size()>();

        r4 = newarray (android.security.identity.EntryParcel)[$i2];

        i10 = 0;

        r5 = interfaceinvoke r52.<java.util.Collection: java.util.Iterator iterator()>();

     label10:
        $z2 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label13;

        $r13 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r53 = (java.lang.String) $r13;

        $r14 = new android.security.identity.EntryParcel;

        specialinvoke $r14.<android.security.identity.EntryParcel: void <init>()>();

        r4[i10] = $r14;

        $r15 = r4[i10];

        $r15.<android.security.identity.EntryParcel: java.lang.String name> = r53;

        $r16 = r4[i10];

        $r17 = virtualinvoke r3.<android.security.identity.PersonalizationData$NamespaceData: byte[] getEntryValue(java.lang.String)>(r53);

        $r16.<android.security.identity.EntryParcel: byte[] value> = $r17;

        r54 = virtualinvoke r3.<android.security.identity.PersonalizationData$NamespaceData: java.util.Collection getAccessControlProfileIds(java.lang.String)>(r53);

        $r18 = r4[i10];

        $i3 = interfaceinvoke r54.<java.util.Collection: int size()>();

        $r19 = newarray (int)[$i3];

        $r18.<android.security.identity.EntryParcel: int[] accessControlProfileIds> = $r19;

        i11 = 0;

        r6 = interfaceinvoke r54.<java.util.Collection: java.util.Iterator iterator()>();

     label11:
        $z3 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label12;

        $r20 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();

        r7 = (android.security.identity.AccessControlProfileId) $r20;

        $r21 = r4[i10];

        $r22 = $r21.<android.security.identity.EntryParcel: int[] accessControlProfileIds>;

        $i4 = virtualinvoke r7.<android.security.identity.AccessControlProfileId: int getId()>();

        $r22[i11] = $i4;

        i11 = i11 + 1;

        goto label11;

     label12:
        i10 = i10 + 1;

        goto label10;

     label13:
        $r12 = r50[i9];

        $r12.<android.security.identity.EntryNamespaceParcel: android.security.identity.EntryParcel[] entries> = r4;

        i9 = i9 + 1;

        goto label09;

     label14:
        if z6 == 0 goto label15;

        l12 = staticinvoke <android.security.identity.CredstoreWritableIdentityCredential: long getRootSid()>();

        goto label16;

     label15:
        l12 = 0L;

     label16:
        $r8 = r0.<android.security.identity.CredstoreWritableIdentityCredential: android.security.identity.IWritableCredential mBinder>;

        r55 = interfaceinvoke $r8.<android.security.identity.IWritableCredential: byte[] personalize(android.security.identity.AccessControlProfileParcel[],android.security.identity.EntryNamespaceParcel[],long)>(r1, r50, l12);

     label17:
        return r55;

     label18:
        $r37 := @caughtexception;

        $r38 = new java.lang.StringBuilder;

        specialinvoke $r38.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected ServiceSpecificException with code ");

        $i7 = $r37.<android.os.ServiceSpecificException: int errorCode>;

        virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);

        $r41 = new java.lang.RuntimeException;

        $r42 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r41.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r42, $r37);

        throw $r41;

     label19:
        $r35 := @caughtexception;

        $r36 = new java.lang.RuntimeException;

        specialinvoke $r36.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Unexpected RemoteException ", $r35);

        throw $r36;

        catch java.security.cert.CertificateException from label02 to label03 with label04;
        catch android.os.RemoteException from label16 to label17 with label19;
        catch android.os.ServiceSpecificException from label16 to label17 with label18;
    }

    public static void <clinit>()
    {
        <android.security.identity.CredstoreWritableIdentityCredential: java.lang.String TAG> = "CredstoreWritableIdentityCredential";

        return;
    }
}
