public abstract class android.security.identity.IdentityCredentialStore extends java.lang.Object
{
    public static final int CIPHERSUITE_ECDHE_HKDF_ECDSA_WITH_AES_256_GCM_SHA256;

    void <init>()
    {
        android.security.identity.IdentityCredentialStore r0;

        r0 := @this: android.security.identity.IdentityCredentialStore;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static android.security.identity.IdentityCredentialStore getDirectAccessInstance(android.content.Context)
    {
        android.content.Context r0;
        android.security.identity.IdentityCredentialStore $r1;

        r0 := @parameter0: android.content.Context;

        $r1 = staticinvoke <android.security.identity.CredstoreIdentityCredentialStore: android.security.identity.IdentityCredentialStore getDirectAccessInstance(android.content.Context)>(r0);

        return $r1;
    }

    public static android.security.identity.IdentityCredentialStore getInstance(android.content.Context)
    {
        android.content.Context r0;
        android.security.identity.IdentityCredentialStore $r1;

        r0 := @parameter0: android.content.Context;

        $r1 = staticinvoke <android.security.identity.CredstoreIdentityCredentialStore: android.security.identity.IdentityCredentialStore getInstance(android.content.Context)>(r0);

        return $r1;
    }

    public abstract android.security.identity.WritableIdentityCredential createCredential(java.lang.String, java.lang.String) throws android.security.identity.AlreadyPersonalizedException, android.security.identity.DocTypeNotSupportedException;

    public abstract byte[] deleteCredentialByName(java.lang.String);

    public abstract android.security.identity.IdentityCredential getCredentialByName(java.lang.String, int) throws android.security.identity.CipherSuiteNotSupportedException;

    public abstract java.lang.String[] getSupportedDocTypes();

    public static void <clinit>()
    {
        <android.security.identity.IdentityCredentialStore: int CIPHERSUITE_ECDHE_HKDF_ECDSA_WITH_AES_256_GCM_SHA256> = 1;

        return;
    }
}
