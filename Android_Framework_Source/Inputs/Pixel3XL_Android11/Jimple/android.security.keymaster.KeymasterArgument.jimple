abstract class android.security.keymaster.KeymasterArgument extends java.lang.Object implements android.os.Parcelable
{
    public static final android.os.Parcelable$Creator CREATOR;
    public final int tag;

    static void <clinit>()
    {
        android.security.keymaster.KeymasterArgument$1 $r0;

        $r0 = new android.security.keymaster.KeymasterArgument$1;

        specialinvoke $r0.<android.security.keymaster.KeymasterArgument$1: void <init>()>();

        <android.security.keymaster.KeymasterArgument: android.os.Parcelable$Creator CREATOR> = $r0;

        return;
    }

    protected void <init>(int)
    {
        android.security.keymaster.KeymasterArgument r0;
        int i0;

        r0 := @this: android.security.keymaster.KeymasterArgument;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.security.keymaster.KeymasterArgument: int tag> = i0;

        return;
    }

    public int describeContents()
    {
        android.security.keymaster.KeymasterArgument r0;

        r0 := @this: android.security.keymaster.KeymasterArgument;

        return 0;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.security.keymaster.KeymasterArgument r0;
        android.os.Parcel r1;
        int i0, $i1;

        r0 := @this: android.security.keymaster.KeymasterArgument;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        $i1 = r0.<android.security.keymaster.KeymasterArgument: int tag>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i1);

        virtualinvoke r0.<android.security.keymaster.KeymasterArgument: void writeValue(android.os.Parcel)>(r1);

        return;
    }

    public abstract void writeValue(android.os.Parcel);
}
