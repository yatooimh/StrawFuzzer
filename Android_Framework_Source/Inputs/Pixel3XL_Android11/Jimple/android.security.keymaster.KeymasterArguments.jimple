public class android.security.keymaster.KeymasterArguments extends java.lang.Object implements android.os.Parcelable
{
    public static final android.os.Parcelable$Creator CREATOR;
    public static final long UINT32_MAX_VALUE;
    private static final long UINT32_RANGE;
    public static final java.math.BigInteger UINT64_MAX_VALUE;
    private static final java.math.BigInteger UINT64_RANGE;
    private java.util.List mArguments;

    static void <clinit>()
    {
        java.math.BigInteger r0, $r1, $r2, $r3;
        android.security.keymaster.KeymasterArguments$1 $r4;

        <android.security.keymaster.KeymasterArguments: long UINT32_RANGE> = 4294967296L;

        <android.security.keymaster.KeymasterArguments: long UINT32_MAX_VALUE> = 4294967295L;

        $r1 = <java.math.BigInteger: java.math.BigInteger ONE>;

        r0 = virtualinvoke $r1.<java.math.BigInteger: java.math.BigInteger shiftLeft(int)>(64);

        <android.security.keymaster.KeymasterArguments: java.math.BigInteger UINT64_RANGE> = r0;

        $r2 = <java.math.BigInteger: java.math.BigInteger ONE>;

        $r3 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger subtract(java.math.BigInteger)>($r2);

        <android.security.keymaster.KeymasterArguments: java.math.BigInteger UINT64_MAX_VALUE> = $r3;

        $r4 = new android.security.keymaster.KeymasterArguments$1;

        specialinvoke $r4.<android.security.keymaster.KeymasterArguments$1: void <init>()>();

        <android.security.keymaster.KeymasterArguments: android.os.Parcelable$Creator CREATOR> = $r4;

        return;
    }

    public void <init>()
    {
        android.security.keymaster.KeymasterArguments r0;
        java.util.ArrayList $r1;

        r0 := @this: android.security.keymaster.KeymasterArguments;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<android.security.keymaster.KeymasterArguments: java.util.List mArguments> = $r1;

        return;
    }

    private void <init>(android.os.Parcel)
    {
        android.security.keymaster.KeymasterArguments r0;
        android.os.Parcel r1;
        android.os.Parcelable$Creator $r2;
        java.util.ArrayList $r3;

        r0 := @this: android.security.keymaster.KeymasterArguments;

        r1 := @parameter0: android.os.Parcel;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = <android.security.keymaster.KeymasterArgument: android.os.Parcelable$Creator CREATOR>;

        $r3 = virtualinvoke r1.<android.os.Parcel: java.util.ArrayList createTypedArrayList(android.os.Parcelable$Creator)>($r2);

        r0.<android.security.keymaster.KeymasterArguments: java.util.List mArguments> = $r3;

        return;
    }

    void <init>(android.os.Parcel, android.security.keymaster.KeymasterArguments$1)
    {
        android.security.keymaster.KeymasterArguments r0;
        android.os.Parcel r1;
        android.security.keymaster.KeymasterArguments$1 r2;

        r0 := @this: android.security.keymaster.KeymasterArguments;

        r1 := @parameter0: android.os.Parcel;

        r2 := @parameter1: android.security.keymaster.KeymasterArguments$1;

        specialinvoke r0.<android.security.keymaster.KeymasterArguments: void <init>(android.os.Parcel)>(r1);

        return;
    }

    private void addEnumTag(int, int)
    {
        android.security.keymaster.KeymasterArguments r0;
        int i0, i1;
        android.security.keymaster.KeymasterIntArgument $r1;
        java.util.List $r2;

        r0 := @this: android.security.keymaster.KeymasterArguments;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r2 = r0.<android.security.keymaster.KeymasterArguments: java.util.List mArguments>;

        $r1 = new android.security.keymaster.KeymasterIntArgument;

        specialinvoke $r1.<android.security.keymaster.KeymasterIntArgument: void <init>(int,int)>(i0, i1);

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r1);

        return;
    }

    private void addLongTag(int, java.math.BigInteger)
    {
        android.security.keymaster.KeymasterArguments r0;
        int i0, $i1, $i2;
        java.math.BigInteger r1, $r8;
        java.lang.StringBuilder $r3;
        java.lang.IllegalArgumentException $r6;
        java.lang.String $r7;
        android.security.keymaster.KeymasterLongArgument $r9;
        java.util.List $r10;
        long $l3;

        r0 := @this: android.security.keymaster.KeymasterArguments;

        i0 := @parameter0: int;

        r1 := @parameter1: java.math.BigInteger;

        $i1 = virtualinvoke r1.<java.math.BigInteger: int signum()>();

        if $i1 == -1 goto label1;

        $r8 = <android.security.keymaster.KeymasterArguments: java.math.BigInteger UINT64_MAX_VALUE>;

        $i2 = virtualinvoke r1.<java.math.BigInteger: int compareTo(java.math.BigInteger)>($r8);

        if $i2 > 0 goto label1;

        $r10 = r0.<android.security.keymaster.KeymasterArguments: java.util.List mArguments>;

        $r9 = new android.security.keymaster.KeymasterLongArgument;

        $l3 = virtualinvoke r1.<java.math.BigInteger: long longValue()>();

        specialinvoke $r9.<android.security.keymaster.KeymasterLongArgument: void <init>(int,long)>(i0, $l3);

        interfaceinvoke $r10.<java.util.List: boolean add(java.lang.Object)>($r9);

        return;

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Long tag value out of range: ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r6 = new java.lang.IllegalArgumentException;

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r6;
    }

    private android.security.keymaster.KeymasterArgument getArgumentByTag(int)
    {
        android.security.keymaster.KeymasterArguments r0;
        int i0, $i1;
        java.util.Iterator r1;
        android.security.keymaster.KeymasterArgument r2;
        java.util.List $r3;
        boolean $z0;
        java.lang.Object $r4;

        r0 := @this: android.security.keymaster.KeymasterArguments;

        i0 := @parameter0: int;

        $r3 = r0.<android.security.keymaster.KeymasterArguments: java.util.List mArguments>;

        r1 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (android.security.keymaster.KeymasterArgument) $r4;

        $i1 = r2.<android.security.keymaster.KeymasterArgument: int tag>;

        if $i1 != i0 goto label2;

        return r2;

     label2:
        goto label1;

     label3:
        return null;
    }

    private int getEnumTagValue(android.security.keymaster.KeymasterArgument)
    {
        android.security.keymaster.KeymasterArguments r0;
        android.security.keymaster.KeymasterArgument r1;
        android.security.keymaster.KeymasterIntArgument $r2;
        int $i0;

        r0 := @this: android.security.keymaster.KeymasterArguments;

        r1 := @parameter0: android.security.keymaster.KeymasterArgument;

        $r2 = (android.security.keymaster.KeymasterIntArgument) r1;

        $i0 = $r2.<android.security.keymaster.KeymasterIntArgument: int value>;

        return $i0;
    }

    private java.math.BigInteger getLongTagValue(android.security.keymaster.KeymasterArgument)
    {
        android.security.keymaster.KeymasterArguments r0;
        android.security.keymaster.KeymasterArgument r1;
        android.security.keymaster.KeymasterLongArgument $r2;
        long $l0;
        java.math.BigInteger $r3;

        r0 := @this: android.security.keymaster.KeymasterArguments;

        r1 := @parameter0: android.security.keymaster.KeymasterArgument;

        $r2 = (android.security.keymaster.KeymasterLongArgument) r1;

        $l0 = $r2.<android.security.keymaster.KeymasterLongArgument: long value>;

        $r3 = staticinvoke <android.security.keymaster.KeymasterArguments: java.math.BigInteger toUint64(long)>($l0);

        return $r3;
    }

    public static java.math.BigInteger toUint64(long)
    {
        long l0;
        byte $b1;
        java.math.BigInteger $r0, $r1, $r2, $r3;

        l0 := @parameter0: long;

        $b1 = l0 cmp 0L;

        if $b1 < 0 goto label1;

        $r3 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(l0);

        return $r3;

     label1:
        $r0 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(l0);

        $r1 = <android.security.keymaster.KeymasterArguments: java.math.BigInteger UINT64_RANGE>;

        $r2 = virtualinvoke $r0.<java.math.BigInteger: java.math.BigInteger add(java.math.BigInteger)>($r1);

        return $r2;
    }

    public void addBoolean(int)
    {
        android.security.keymaster.KeymasterArguments r0;
        int i0, $i1;
        java.lang.StringBuilder $r2;
        java.lang.IllegalArgumentException $r5;
        java.lang.String $r6;
        android.security.keymaster.KeymasterBooleanArgument $r7;
        java.util.List $r8;

        r0 := @this: android.security.keymaster.KeymasterArguments;

        i0 := @parameter0: int;

        $i1 = staticinvoke <android.security.keymaster.KeymasterDefs: int getTagType(int)>(i0);

        if $i1 != 1879048192 goto label1;

        $r8 = r0.<android.security.keymaster.KeymasterArguments: java.util.List mArguments>;

        $r7 = new android.security.keymaster.KeymasterBooleanArgument;

        specialinvoke $r7.<android.security.keymaster.KeymasterBooleanArgument: void <init>(int)>(i0);

        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>($r7);

        return;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not a boolean tag: ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r5;
    }

    public void addBytes(int, byte[])
    {
        android.security.keymaster.KeymasterArguments r0;
        int i0, $i1;
        java.lang.StringBuilder $r1;
        java.lang.IllegalArgumentException $r4;
        java.lang.String $r5;
        java.lang.NullPointerException $r6;
        android.security.keymaster.KeymasterBlobArgument $r7;
        java.util.List $r8;
        byte[] r9;

        r0 := @this: android.security.keymaster.KeymasterArguments;

        i0 := @parameter0: int;

        r9 := @parameter1: byte[];

        $i1 = staticinvoke <android.security.keymaster.KeymasterDefs: int getTagType(int)>(i0);

        if $i1 != -1879048192 goto label2;

        if r9 == null goto label1;

        $r8 = r0.<android.security.keymaster.KeymasterArguments: java.util.List mArguments>;

        $r7 = new android.security.keymaster.KeymasterBlobArgument;

        specialinvoke $r7.<android.security.keymaster.KeymasterBlobArgument: void <init>(int,byte[])>(i0, r9);

        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>($r7);

        return;

     label1:
        $r6 = new java.lang.NullPointerException;

        specialinvoke $r6.<java.lang.NullPointerException: void <init>(java.lang.String)>("value == nulll");

        throw $r6;

     label2:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not a bytes tag: ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r4;
    }

    public void addDate(int, java.util.Date)
    {
        android.security.keymaster.KeymasterArguments r0;
        int i0, $i1;
        java.lang.StringBuilder $r2, $r8;
        java.lang.IllegalArgumentException $r5, $r11;
        java.lang.String $r6, $r12;
        java.lang.NullPointerException $r7;
        long $l2;
        byte $b3;
        android.security.keymaster.KeymasterDateArgument $r13;
        java.util.List $r14;
        java.util.Date r15;

        r0 := @this: android.security.keymaster.KeymasterArguments;

        i0 := @parameter0: int;

        r15 := @parameter1: java.util.Date;

        $i1 = staticinvoke <android.security.keymaster.KeymasterDefs: int getTagType(int)>(i0);

        if $i1 != 1610612736 goto label3;

        if r15 == null goto label2;

        $l2 = virtualinvoke r15.<java.util.Date: long getTime()>();

        $b3 = $l2 cmp 0L;

        if $b3 < 0 goto label1;

        $r14 = r0.<android.security.keymaster.KeymasterArguments: java.util.List mArguments>;

        $r13 = new android.security.keymaster.KeymasterDateArgument;

        specialinvoke $r13.<android.security.keymaster.KeymasterDateArgument: void <init>(int,java.util.Date)>(i0, r15);

        interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>($r13);

        return;

     label1:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Date tag value out of range: ");

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r15);

        $r11 = new java.lang.IllegalArgumentException;

        $r12 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r12);

        throw $r11;

     label2:
        $r7 = new java.lang.NullPointerException;

        specialinvoke $r7.<java.lang.NullPointerException: void <init>(java.lang.String)>("value == nulll");

        throw $r7;

     label3:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not a date tag: ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r5;
    }

    public void addDateIfNotNull(int, java.util.Date)
    {
        android.security.keymaster.KeymasterArguments r0;
        int i0, $i1;
        java.lang.StringBuilder $r1;
        java.lang.IllegalArgumentException $r4;
        java.lang.String $r5;
        java.util.Date r6;

        r0 := @this: android.security.keymaster.KeymasterArguments;

        i0 := @parameter0: int;

        r6 := @parameter1: java.util.Date;

        $i1 = staticinvoke <android.security.keymaster.KeymasterDefs: int getTagType(int)>(i0);

        if $i1 != 1610612736 goto label2;

        if r6 == null goto label1;

        virtualinvoke r0.<android.security.keymaster.KeymasterArguments: void addDate(int,java.util.Date)>(i0, r6);

     label1:
        return;

     label2:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not a date tag: ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r4;
    }

    public void addEnum(int, int)
    {
        android.security.keymaster.KeymasterArguments r0;
        int i0, i1, i2;
        java.lang.StringBuilder $r2;
        java.lang.IllegalArgumentException $r5;
        java.lang.String $r6;

        r0 := @this: android.security.keymaster.KeymasterArguments;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 = staticinvoke <android.security.keymaster.KeymasterDefs: int getTagType(int)>(i0);

        if i2 == 268435456 goto label2;

        if i2 != 536870912 goto label1;

        goto label2;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not an enum or repeating enum tag: ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r5;

     label2:
        specialinvoke r0.<android.security.keymaster.KeymasterArguments: void addEnumTag(int,int)>(i0, i1);

        return;
    }

    public transient void addEnums(int, int[])
    {
        android.security.keymaster.KeymasterArguments r0;
        int i0, i1, $i2, $i3, i4;
        java.lang.StringBuilder $r1;
        java.lang.IllegalArgumentException $r4;
        java.lang.String $r5;
        int[] r6;

        r0 := @this: android.security.keymaster.KeymasterArguments;

        i0 := @parameter0: int;

        r6 := @parameter1: int[];

        $i2 = staticinvoke <android.security.keymaster.KeymasterDefs: int getTagType(int)>(i0);

        if $i2 != 536870912 goto label3;

        i1 = lengthof r6;

        i4 = 0;

     label1:
        if i4 >= i1 goto label2;

        $i3 = r6[i4];

        specialinvoke r0.<android.security.keymaster.KeymasterArguments: void addEnumTag(int,int)>(i0, $i3);

        i4 = i4 + 1;

        goto label1;

     label2:
        return;

     label3:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not a repeating enum tag: ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r4;
    }

    public void addUnsignedInt(int, long)
    {
        android.security.keymaster.KeymasterArguments r0;
        int i0, i2, $i5;
        long l1;
        byte $b3, $b4;
        java.lang.StringBuilder $r1, $r8;
        java.lang.IllegalArgumentException $r4, $r11;
        java.lang.String $r5, $r12;
        android.security.keymaster.KeymasterIntArgument $r6;
        java.util.List $r7;

        r0 := @this: android.security.keymaster.KeymasterArguments;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        i2 = staticinvoke <android.security.keymaster.KeymasterDefs: int getTagType(int)>(i0);

        if i2 == 805306368 goto label2;

        if i2 != 1073741824 goto label1;

        goto label2;

     label1:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not an int or repeating int tag: ");

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r11 = new java.lang.IllegalArgumentException;

        $r12 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r12);

        throw $r11;

     label2:
        $b3 = l1 cmp 0L;

        if $b3 < 0 goto label3;

        $b4 = l1 cmp 4294967295L;

        if $b4 > 0 goto label3;

        $r7 = r0.<android.security.keymaster.KeymasterArguments: java.util.List mArguments>;

        $r6 = new android.security.keymaster.KeymasterIntArgument;

        $i5 = (int) l1;

        specialinvoke $r6.<android.security.keymaster.KeymasterIntArgument: void <init>(int,int)>(i0, $i5);

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>($r6);

        return;

     label3:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Int tag value out of range: ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l1);

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r4;
    }

    public void addUnsignedLong(int, java.math.BigInteger)
    {
        android.security.keymaster.KeymasterArguments r0;
        int i0, i1;
        java.lang.StringBuilder $r1;
        java.lang.IllegalArgumentException $r4;
        java.lang.String $r5;
        java.math.BigInteger r6;

        r0 := @this: android.security.keymaster.KeymasterArguments;

        i0 := @parameter0: int;

        r6 := @parameter1: java.math.BigInteger;

        i1 = staticinvoke <android.security.keymaster.KeymasterDefs: int getTagType(int)>(i0);

        if i1 == 1342177280 goto label2;

        if i1 != -1610612736 goto label1;

        goto label2;

     label1:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not a long or repeating long tag: ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r4;

     label2:
        specialinvoke r0.<android.security.keymaster.KeymasterArguments: void addLongTag(int,java.math.BigInteger)>(i0, r6);

        return;
    }

    public boolean containsTag(int)
    {
        android.security.keymaster.KeymasterArguments r0;
        int i0;
        android.security.keymaster.KeymasterArgument $r1;
        boolean z0;

        r0 := @this: android.security.keymaster.KeymasterArguments;

        i0 := @parameter0: int;

        $r1 = specialinvoke r0.<android.security.keymaster.KeymasterArguments: android.security.keymaster.KeymasterArgument getArgumentByTag(int)>(i0);

        if $r1 == null goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public int describeContents()
    {
        android.security.keymaster.KeymasterArguments r0;

        r0 := @this: android.security.keymaster.KeymasterArguments;

        return 0;
    }

    public boolean getBoolean(int)
    {
        android.security.keymaster.KeymasterArguments r0;
        int i0, $i1;
        java.lang.StringBuilder $r2;
        java.lang.IllegalArgumentException $r5;
        java.lang.String $r6;
        android.security.keymaster.KeymasterArgument $r7;

        r0 := @this: android.security.keymaster.KeymasterArguments;

        i0 := @parameter0: int;

        $i1 = staticinvoke <android.security.keymaster.KeymasterDefs: int getTagType(int)>(i0);

        if $i1 != 1879048192 goto label2;

        $r7 = specialinvoke r0.<android.security.keymaster.KeymasterArguments: android.security.keymaster.KeymasterArgument getArgumentByTag(int)>(i0);

        if $r7 != null goto label1;

        return 0;

     label1:
        return 1;

     label2:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not a boolean tag: ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r5;
    }

    public byte[] getBytes(int, byte[])
    {
        android.security.keymaster.KeymasterArguments r0;
        int i0, $i1;
        android.security.keymaster.KeymasterArgument r1;
        java.lang.StringBuilder $r2;
        java.lang.IllegalArgumentException $r5;
        java.lang.String $r6;
        android.security.keymaster.KeymasterBlobArgument $r7;
        byte[] $r8, r9;

        r0 := @this: android.security.keymaster.KeymasterArguments;

        i0 := @parameter0: int;

        r9 := @parameter1: byte[];

        $i1 = staticinvoke <android.security.keymaster.KeymasterDefs: int getTagType(int)>(i0);

        if $i1 != -1879048192 goto label2;

        r1 = specialinvoke r0.<android.security.keymaster.KeymasterArguments: android.security.keymaster.KeymasterArgument getArgumentByTag(int)>(i0);

        if r1 != null goto label1;

        return r9;

     label1:
        $r7 = (android.security.keymaster.KeymasterBlobArgument) r1;

        $r8 = $r7.<android.security.keymaster.KeymasterBlobArgument: byte[] blob>;

        return $r8;

     label2:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not a bytes tag: ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r5;
    }

    public java.util.Date getDate(int, java.util.Date)
    {
        android.security.keymaster.KeymasterArguments r0;
        int i0, $i1;
        android.security.keymaster.KeymasterArgument r1;
        java.lang.StringBuilder $r2, $r8;
        java.lang.IllegalArgumentException $r5, $r11;
        java.lang.String $r6, $r12;
        android.security.keymaster.KeymasterDateArgument $r7;
        long $l2;
        byte $b3;
        java.util.Date r13, r14;

        r0 := @this: android.security.keymaster.KeymasterArguments;

        i0 := @parameter0: int;

        r13 := @parameter1: java.util.Date;

        $i1 = staticinvoke <android.security.keymaster.KeymasterDefs: int getTagType(int)>(i0);

        if $i1 != 1610612736 goto label3;

        r1 = specialinvoke r0.<android.security.keymaster.KeymasterArguments: android.security.keymaster.KeymasterArgument getArgumentByTag(int)>(i0);

        if r1 != null goto label1;

        return r13;

     label1:
        $r7 = (android.security.keymaster.KeymasterDateArgument) r1;

        r14 = $r7.<android.security.keymaster.KeymasterDateArgument: java.util.Date date>;

        $l2 = virtualinvoke r14.<java.util.Date: long getTime()>();

        $b3 = $l2 cmp 0L;

        if $b3 < 0 goto label2;

        return r14;

     label2:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Tag value too large. Tag: ");

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r11 = new java.lang.IllegalArgumentException;

        $r12 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r12);

        throw $r11;

     label3:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Tag is not a date type: ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r5;
    }

    public int getEnum(int, int)
    {
        android.security.keymaster.KeymasterArguments r0;
        int i0, i1, $i2, $i3;
        java.lang.StringBuilder $r1;
        java.lang.IllegalArgumentException $r4;
        java.lang.String $r5;
        android.security.keymaster.KeymasterArgument r6;

        r0 := @this: android.security.keymaster.KeymasterArguments;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = staticinvoke <android.security.keymaster.KeymasterDefs: int getTagType(int)>(i0);

        if $i2 != 268435456 goto label2;

        r6 = specialinvoke r0.<android.security.keymaster.KeymasterArguments: android.security.keymaster.KeymasterArgument getArgumentByTag(int)>(i0);

        if r6 != null goto label1;

        return i1;

     label1:
        $i3 = specialinvoke r0.<android.security.keymaster.KeymasterArguments: int getEnumTagValue(android.security.keymaster.KeymasterArgument)>(r6);

        return $i3;

     label2:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not an enum tag: ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r4;
    }

    public java.util.List getEnums(int)
    {
        android.security.keymaster.KeymasterArguments r0;
        int i0, $i1, $i2, $i3;
        java.util.Iterator r2;
        java.lang.StringBuilder $r3;
        java.lang.IllegalArgumentException $r6;
        java.lang.String $r7;
        java.util.ArrayList $r8;
        java.util.List $r9;
        boolean $z0;
        java.lang.Object $r10;
        java.lang.Integer $r11;
        android.security.keymaster.KeymasterArgument r12;

        r0 := @this: android.security.keymaster.KeymasterArguments;

        i0 := @parameter0: int;

        $i1 = staticinvoke <android.security.keymaster.KeymasterDefs: int getTagType(int)>(i0);

        if $i1 != 536870912 goto label4;

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

        $r9 = r0.<android.security.keymaster.KeymasterArguments: java.util.List mArguments>;

        r2 = interfaceinvoke $r9.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r10 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r12 = (android.security.keymaster.KeymasterArgument) $r10;

        $i2 = r12.<android.security.keymaster.KeymasterArgument: int tag>;

        if $i2 != i0 goto label2;

        $i3 = specialinvoke r0.<android.security.keymaster.KeymasterArguments: int getEnumTagValue(android.security.keymaster.KeymasterArgument)>(r12);

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>($r11);

     label2:
        goto label1;

     label3:
        return $r8;

     label4:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not a repeating enum tag: ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r6 = new java.lang.IllegalArgumentException;

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r6;
    }

    public long getUnsignedInt(int, long)
    {
        android.security.keymaster.KeymasterArguments r0;
        int i0, $i2, $i3;
        long l1, $l4, $l5;
        java.lang.StringBuilder $r1;
        java.lang.IllegalArgumentException $r4;
        java.lang.String $r5;
        android.security.keymaster.KeymasterIntArgument $r6;
        android.security.keymaster.KeymasterArgument r7;

        r0 := @this: android.security.keymaster.KeymasterArguments;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        $i2 = staticinvoke <android.security.keymaster.KeymasterDefs: int getTagType(int)>(i0);

        if $i2 != 805306368 goto label2;

        r7 = specialinvoke r0.<android.security.keymaster.KeymasterArguments: android.security.keymaster.KeymasterArgument getArgumentByTag(int)>(i0);

        if r7 != null goto label1;

        return l1;

     label1:
        $r6 = (android.security.keymaster.KeymasterIntArgument) r7;

        $i3 = $r6.<android.security.keymaster.KeymasterIntArgument: int value>;

        $l4 = (long) $i3;

        $l5 = $l4 & 4294967295L;

        return $l5;

     label2:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not an int tag: ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r4;
    }

    public java.util.List getUnsignedLongs(int)
    {
        android.security.keymaster.KeymasterArguments r0;
        int i0, $i1, $i2;
        java.util.Iterator r1;
        android.security.keymaster.KeymasterArgument r2;
        java.lang.StringBuilder $r3;
        java.lang.IllegalArgumentException $r6;
        java.lang.String $r7;
        java.util.ArrayList $r8;
        java.util.List $r9;
        boolean $z0;
        java.lang.Object $r10;
        java.math.BigInteger $r11;

        r0 := @this: android.security.keymaster.KeymasterArguments;

        i0 := @parameter0: int;

        $i1 = staticinvoke <android.security.keymaster.KeymasterDefs: int getTagType(int)>(i0);

        if $i1 != -1610612736 goto label4;

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

        $r9 = r0.<android.security.keymaster.KeymasterArguments: java.util.List mArguments>;

        r1 = interfaceinvoke $r9.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r10 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (android.security.keymaster.KeymasterArgument) $r10;

        $i2 = r2.<android.security.keymaster.KeymasterArgument: int tag>;

        if $i2 != i0 goto label2;

        $r11 = specialinvoke r0.<android.security.keymaster.KeymasterArguments: java.math.BigInteger getLongTagValue(android.security.keymaster.KeymasterArgument)>(r2);

        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>($r11);

     label2:
        goto label1;

     label3:
        return $r8;

     label4:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Tag is not a repeating long: ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r6 = new java.lang.IllegalArgumentException;

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r6;
    }

    public void readFromParcel(android.os.Parcel)
    {
        android.security.keymaster.KeymasterArguments r0;
        android.os.Parcel r1;
        android.os.Parcelable$Creator $r2;
        java.util.List $r3;

        r0 := @this: android.security.keymaster.KeymasterArguments;

        r1 := @parameter0: android.os.Parcel;

        $r3 = r0.<android.security.keymaster.KeymasterArguments: java.util.List mArguments>;

        $r2 = <android.security.keymaster.KeymasterArgument: android.os.Parcelable$Creator CREATOR>;

        virtualinvoke r1.<android.os.Parcel: void readTypedList(java.util.List,android.os.Parcelable$Creator)>($r3, $r2);

        return;
    }

    public int size()
    {
        android.security.keymaster.KeymasterArguments r0;
        java.util.List $r1;
        int $i0;

        r0 := @this: android.security.keymaster.KeymasterArguments;

        $r1 = r0.<android.security.keymaster.KeymasterArguments: java.util.List mArguments>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        return $i0;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.security.keymaster.KeymasterArguments r0;
        android.os.Parcel r1;
        int i0;
        java.util.List $r2;

        r0 := @this: android.security.keymaster.KeymasterArguments;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        $r2 = r0.<android.security.keymaster.KeymasterArguments: java.util.List mArguments>;

        virtualinvoke r1.<android.os.Parcel: void writeTypedList(java.util.List)>($r2);

        return;
    }
}
