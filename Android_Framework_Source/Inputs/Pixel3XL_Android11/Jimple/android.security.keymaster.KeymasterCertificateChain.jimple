public class android.security.keymaster.KeymasterCertificateChain extends java.lang.Object implements android.os.Parcelable
{
    public static final android.os.Parcelable$Creator CREATOR;
    private java.util.List mCertificates;

    static void <clinit>()
    {
        android.security.keymaster.KeymasterCertificateChain$1 $r0;

        $r0 = new android.security.keymaster.KeymasterCertificateChain$1;

        specialinvoke $r0.<android.security.keymaster.KeymasterCertificateChain$1: void <init>()>();

        <android.security.keymaster.KeymasterCertificateChain: android.os.Parcelable$Creator CREATOR> = $r0;

        return;
    }

    public void <init>()
    {
        android.security.keymaster.KeymasterCertificateChain r0;

        r0 := @this: android.security.keymaster.KeymasterCertificateChain;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.security.keymaster.KeymasterCertificateChain: java.util.List mCertificates> = null;

        return;
    }

    private void <init>(android.os.Parcel)
    {
        android.security.keymaster.KeymasterCertificateChain r0;
        android.os.Parcel r1;

        r0 := @this: android.security.keymaster.KeymasterCertificateChain;

        r1 := @parameter0: android.os.Parcel;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        virtualinvoke r0.<android.security.keymaster.KeymasterCertificateChain: void readFromParcel(android.os.Parcel)>(r1);

        return;
    }

    void <init>(android.os.Parcel, android.security.keymaster.KeymasterCertificateChain$1)
    {
        android.security.keymaster.KeymasterCertificateChain r0;
        android.os.Parcel r1;
        android.security.keymaster.KeymasterCertificateChain$1 r2;

        r0 := @this: android.security.keymaster.KeymasterCertificateChain;

        r1 := @parameter0: android.os.Parcel;

        r2 := @parameter1: android.security.keymaster.KeymasterCertificateChain$1;

        specialinvoke r0.<android.security.keymaster.KeymasterCertificateChain: void <init>(android.os.Parcel)>(r1);

        return;
    }

    public void <init>(java.util.List)
    {
        android.security.keymaster.KeymasterCertificateChain r0;
        java.util.List r1;

        r0 := @this: android.security.keymaster.KeymasterCertificateChain;

        r1 := @parameter0: java.util.List;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.security.keymaster.KeymasterCertificateChain: java.util.List mCertificates> = r1;

        return;
    }

    public int describeContents()
    {
        android.security.keymaster.KeymasterCertificateChain r0;

        r0 := @this: android.security.keymaster.KeymasterCertificateChain;

        return 0;
    }

    public java.util.List getCertificates()
    {
        android.security.keymaster.KeymasterCertificateChain r0;
        java.util.List $r1;

        r0 := @this: android.security.keymaster.KeymasterCertificateChain;

        $r1 = r0.<android.security.keymaster.KeymasterCertificateChain: java.util.List mCertificates>;

        return $r1;
    }

    public void readFromParcel(android.os.Parcel)
    {
        android.security.keymaster.KeymasterCertificateChain r0;
        android.os.Parcel r1;
        int i0, i1;
        java.util.ArrayList $r2;
        java.util.List $r3;
        byte[] $r4;

        r0 := @this: android.security.keymaster.KeymasterCertificateChain;

        r1 := @parameter0: android.os.Parcel;

        i0 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>(int)>(i0);

        r0.<android.security.keymaster.KeymasterCertificateChain: java.util.List mCertificates> = $r2;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r3 = r0.<android.security.keymaster.KeymasterCertificateChain: java.util.List mCertificates>;

        $r4 = virtualinvoke r1.<android.os.Parcel: byte[] createByteArray()>();

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r4);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public void shallowCopyFrom(android.security.keymaster.KeymasterCertificateChain)
    {
        android.security.keymaster.KeymasterCertificateChain r0, r1;
        java.util.List $r2;

        r0 := @this: android.security.keymaster.KeymasterCertificateChain;

        r1 := @parameter0: android.security.keymaster.KeymasterCertificateChain;

        $r2 = r1.<android.security.keymaster.KeymasterCertificateChain: java.util.List mCertificates>;

        r0.<android.security.keymaster.KeymasterCertificateChain: java.util.List mCertificates> = $r2;

        return;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.security.keymaster.KeymasterCertificateChain r0;
        android.os.Parcel r1;
        int i0, $i1;
        java.util.List $r2, r5;
        boolean $z0;
        java.lang.Object $r3;
        byte[] $r4;
        java.util.Iterator r6;

        r0 := @this: android.security.keymaster.KeymasterCertificateChain;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        r5 = r0.<android.security.keymaster.KeymasterCertificateChain: java.util.List mCertificates>;

        if r5 != null goto label1;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

        goto label3;

     label1:
        $i1 = interfaceinvoke r5.<java.util.List: int size()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i1);

        $r2 = r0.<android.security.keymaster.KeymasterCertificateChain: java.util.List mCertificates>;

        r6 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (byte[]) $r3;

        virtualinvoke r1.<android.os.Parcel: void writeByteArray(byte[])>($r4);

        goto label2;

     label3:
        return;
    }
}
