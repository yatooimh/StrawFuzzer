class android.security.keystore.AndroidKeyStoreAuthenticatedAESCipherSpi$BufferAllOutputUntilDoFinalStreamer extends java.lang.Object implements android.security.keystore.KeyStoreCryptoOperationStreamer
{
    private java.io.ByteArrayOutputStream mBufferedOutput;
    private final android.security.keystore.KeyStoreCryptoOperationStreamer mDelegate;
    private long mProducedOutputSizeBytes;

    private void <init>(android.security.keystore.KeyStoreCryptoOperationStreamer)
    {
        android.security.keystore.AndroidKeyStoreAuthenticatedAESCipherSpi$BufferAllOutputUntilDoFinalStreamer r0;
        android.security.keystore.KeyStoreCryptoOperationStreamer r1;
        java.io.ByteArrayOutputStream $r2;

        r0 := @this: android.security.keystore.AndroidKeyStoreAuthenticatedAESCipherSpi$BufferAllOutputUntilDoFinalStreamer;

        r1 := @parameter0: android.security.keystore.KeyStoreCryptoOperationStreamer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.io.ByteArrayOutputStream;

        specialinvoke $r2.<java.io.ByteArrayOutputStream: void <init>()>();

        r0.<android.security.keystore.AndroidKeyStoreAuthenticatedAESCipherSpi$BufferAllOutputUntilDoFinalStreamer: java.io.ByteArrayOutputStream mBufferedOutput> = $r2;

        r0.<android.security.keystore.AndroidKeyStoreAuthenticatedAESCipherSpi$BufferAllOutputUntilDoFinalStreamer: android.security.keystore.KeyStoreCryptoOperationStreamer mDelegate> = r1;

        return;
    }

    void <init>(android.security.keystore.KeyStoreCryptoOperationStreamer, android.security.keystore.AndroidKeyStoreAuthenticatedAESCipherSpi$1)
    {
        android.security.keystore.AndroidKeyStoreAuthenticatedAESCipherSpi$BufferAllOutputUntilDoFinalStreamer r0;
        android.security.keystore.KeyStoreCryptoOperationStreamer r1;
        android.security.keystore.AndroidKeyStoreAuthenticatedAESCipherSpi$1 r2;

        r0 := @this: android.security.keystore.AndroidKeyStoreAuthenticatedAESCipherSpi$BufferAllOutputUntilDoFinalStreamer;

        r1 := @parameter0: android.security.keystore.KeyStoreCryptoOperationStreamer;

        r2 := @parameter1: android.security.keystore.AndroidKeyStoreAuthenticatedAESCipherSpi$1;

        specialinvoke r0.<android.security.keystore.AndroidKeyStoreAuthenticatedAESCipherSpi$BufferAllOutputUntilDoFinalStreamer: void <init>(android.security.keystore.KeyStoreCryptoOperationStreamer)>(r1);

        return;
    }

    public byte[] doFinal(byte[], int, int, byte[], byte[]) throws android.security.KeyStoreException
    {
        android.security.keystore.AndroidKeyStoreAuthenticatedAESCipherSpi$BufferAllOutputUntilDoFinalStreamer r0;
        int i0, i1, $i2;
        byte[] r1, r2, r9, r10, r12;
        android.security.keystore.KeyStoreCryptoOperationStreamer $r3;
        java.io.ByteArrayOutputStream $r4, $r5, $r6;
        long $l3, $l4, $l5;
        java.lang.Throwable $r7;
        java.security.ProviderException $r8;

        r0 := @this: android.security.keystore.AndroidKeyStoreAuthenticatedAESCipherSpi$BufferAllOutputUntilDoFinalStreamer;

        r9 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 := @parameter3: byte[];

        r2 := @parameter4: byte[];

        $r3 = r0.<android.security.keystore.AndroidKeyStoreAuthenticatedAESCipherSpi$BufferAllOutputUntilDoFinalStreamer: android.security.keystore.KeyStoreCryptoOperationStreamer mDelegate>;

        r10 = interfaceinvoke $r3.<android.security.keystore.KeyStoreCryptoOperationStreamer: byte[] doFinal(byte[],int,int,byte[],byte[])>(r9, i0, i1, r1, r2);

        if r10 == null goto label4;

     label1:
        $r6 = r0.<android.security.keystore.AndroidKeyStoreAuthenticatedAESCipherSpi$BufferAllOutputUntilDoFinalStreamer: java.io.ByteArrayOutputStream mBufferedOutput>;

        virtualinvoke $r6.<java.io.ByteArrayOutputStream: void write(byte[])>(r10);

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

        $r8 = new java.security.ProviderException;

        specialinvoke $r8.<java.security.ProviderException: void <init>(java.lang.String,java.lang.Throwable)>("Failed to buffer output", $r7);

        throw $r8;

     label4:
        $r4 = r0.<android.security.keystore.AndroidKeyStoreAuthenticatedAESCipherSpi$BufferAllOutputUntilDoFinalStreamer: java.io.ByteArrayOutputStream mBufferedOutput>;

        r12 = virtualinvoke $r4.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        $r5 = r0.<android.security.keystore.AndroidKeyStoreAuthenticatedAESCipherSpi$BufferAllOutputUntilDoFinalStreamer: java.io.ByteArrayOutputStream mBufferedOutput>;

        virtualinvoke $r5.<java.io.ByteArrayOutputStream: void reset()>();

        $l4 = r0.<android.security.keystore.AndroidKeyStoreAuthenticatedAESCipherSpi$BufferAllOutputUntilDoFinalStreamer: long mProducedOutputSizeBytes>;

        $i2 = lengthof r12;

        $l3 = (long) $i2;

        $l5 = $l4 + $l3;

        r0.<android.security.keystore.AndroidKeyStoreAuthenticatedAESCipherSpi$BufferAllOutputUntilDoFinalStreamer: long mProducedOutputSizeBytes> = $l5;

        return r12;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public long getConsumedInputSizeBytes()
    {
        android.security.keystore.AndroidKeyStoreAuthenticatedAESCipherSpi$BufferAllOutputUntilDoFinalStreamer r0;
        android.security.keystore.KeyStoreCryptoOperationStreamer $r1;
        long $l0;

        r0 := @this: android.security.keystore.AndroidKeyStoreAuthenticatedAESCipherSpi$BufferAllOutputUntilDoFinalStreamer;

        $r1 = r0.<android.security.keystore.AndroidKeyStoreAuthenticatedAESCipherSpi$BufferAllOutputUntilDoFinalStreamer: android.security.keystore.KeyStoreCryptoOperationStreamer mDelegate>;

        $l0 = interfaceinvoke $r1.<android.security.keystore.KeyStoreCryptoOperationStreamer: long getConsumedInputSizeBytes()>();

        return $l0;
    }

    public long getProducedOutputSizeBytes()
    {
        android.security.keystore.AndroidKeyStoreAuthenticatedAESCipherSpi$BufferAllOutputUntilDoFinalStreamer r0;
        long $l0;

        r0 := @this: android.security.keystore.AndroidKeyStoreAuthenticatedAESCipherSpi$BufferAllOutputUntilDoFinalStreamer;

        $l0 = r0.<android.security.keystore.AndroidKeyStoreAuthenticatedAESCipherSpi$BufferAllOutputUntilDoFinalStreamer: long mProducedOutputSizeBytes>;

        return $l0;
    }

    public byte[] update(byte[], int, int) throws android.security.KeyStoreException
    {
        android.security.keystore.AndroidKeyStoreAuthenticatedAESCipherSpi$BufferAllOutputUntilDoFinalStreamer r0;
        int i0, i1;
        android.security.keystore.KeyStoreCryptoOperationStreamer $r1;
        byte[] $r2, r6, r7;
        java.io.ByteArrayOutputStream $r3;
        java.lang.Throwable $r4;
        java.security.ProviderException $r5;

        r0 := @this: android.security.keystore.AndroidKeyStoreAuthenticatedAESCipherSpi$BufferAllOutputUntilDoFinalStreamer;

        r6 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r1 = r0.<android.security.keystore.AndroidKeyStoreAuthenticatedAESCipherSpi$BufferAllOutputUntilDoFinalStreamer: android.security.keystore.KeyStoreCryptoOperationStreamer mDelegate>;

        r7 = interfaceinvoke $r1.<android.security.keystore.KeyStoreCryptoOperationStreamer: byte[] update(byte[],int,int)>(r6, i0, i1);

        if r7 == null goto label4;

     label1:
        $r3 = r0.<android.security.keystore.AndroidKeyStoreAuthenticatedAESCipherSpi$BufferAllOutputUntilDoFinalStreamer: java.io.ByteArrayOutputStream mBufferedOutput>;

        virtualinvoke $r3.<java.io.ByteArrayOutputStream: void write(byte[])>(r7);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        $r5 = new java.security.ProviderException;

        specialinvoke $r5.<java.security.ProviderException: void <init>(java.lang.String,java.lang.Throwable)>("Failed to buffer output", $r4);

        throw $r5;

     label4:
        $r2 = <libcore.util.EmptyArray: byte[] BYTE>;

        return $r2;

        catch java.io.IOException from label1 to label2 with label3;
    }
}
