abstract class android.security.keystore.AndroidKeyStoreAuthenticatedAESCipherSpi$GCM extends android.security.keystore.AndroidKeyStoreAuthenticatedAESCipherSpi
{
    private static final int DEFAULT_TAG_LENGTH_BITS;
    private static final int IV_LENGTH_BYTES;
    private static final int MAX_SUPPORTED_TAG_LENGTH_BITS;
    static final int MIN_SUPPORTED_TAG_LENGTH_BITS;
    private int mTagLengthBits;

    void <init>(int)
    {
        android.security.keystore.AndroidKeyStoreAuthenticatedAESCipherSpi$GCM r0;
        int i0;

        r0 := @this: android.security.keystore.AndroidKeyStoreAuthenticatedAESCipherSpi$GCM;

        i0 := @parameter0: int;

        specialinvoke r0.<android.security.keystore.AndroidKeyStoreAuthenticatedAESCipherSpi: void <init>(int,int)>(32, i0);

        r0.<android.security.keystore.AndroidKeyStoreAuthenticatedAESCipherSpi$GCM: int mTagLengthBits> = 128;

        return;
    }

    protected final void addAlgorithmSpecificParametersToBegin(android.security.keymaster.KeymasterArguments)
    {
        android.security.keystore.AndroidKeyStoreAuthenticatedAESCipherSpi$GCM r0;
        android.security.keymaster.KeymasterArguments r1;
        int $i0;
        long $l1;

        r0 := @this: android.security.keystore.AndroidKeyStoreAuthenticatedAESCipherSpi$GCM;

        r1 := @parameter0: android.security.keymaster.KeymasterArguments;

        specialinvoke r0.<android.security.keystore.AndroidKeyStoreAuthenticatedAESCipherSpi: void addAlgorithmSpecificParametersToBegin(android.security.keymaster.KeymasterArguments)>(r1);

        $i0 = r0.<android.security.keystore.AndroidKeyStoreAuthenticatedAESCipherSpi$GCM: int mTagLengthBits>;

        $l1 = (long) $i0;

        virtualinvoke r1.<android.security.keymaster.KeymasterArguments: void addUnsignedInt(int,long)>(805307371, $l1);

        return;
    }

    protected final android.security.keystore.KeyStoreCryptoOperationStreamer createAdditionalAuthenticationDataStreamer(android.security.KeyStore, android.os.IBinder)
    {
        android.security.keystore.AndroidKeyStoreAuthenticatedAESCipherSpi$GCM r0;
        android.security.KeyStore r1;
        android.os.IBinder r2;
        android.security.keystore.KeyStoreCryptoOperationChunkedStreamer $r3;
        android.security.keystore.AndroidKeyStoreAuthenticatedAESCipherSpi$AdditionalAuthenticationDataStream $r4;

        r0 := @this: android.security.keystore.AndroidKeyStoreAuthenticatedAESCipherSpi$GCM;

        r1 := @parameter0: android.security.KeyStore;

        r2 := @parameter1: android.os.IBinder;

        $r3 = new android.security.keystore.KeyStoreCryptoOperationChunkedStreamer;

        $r4 = new android.security.keystore.AndroidKeyStoreAuthenticatedAESCipherSpi$AdditionalAuthenticationDataStream;

        specialinvoke $r4.<android.security.keystore.AndroidKeyStoreAuthenticatedAESCipherSpi$AdditionalAuthenticationDataStream: void <init>(android.security.KeyStore,android.os.IBinder,android.security.keystore.AndroidKeyStoreAuthenticatedAESCipherSpi$1)>(r1, r2, null);

        specialinvoke $r3.<android.security.keystore.KeyStoreCryptoOperationChunkedStreamer: void <init>(android.security.keystore.KeyStoreCryptoOperationChunkedStreamer$Stream,int)>($r4, 0);

        return $r3;
    }

    protected android.security.keystore.KeyStoreCryptoOperationStreamer createMainDataStreamer(android.security.KeyStore, android.os.IBinder)
    {
        android.security.keystore.AndroidKeyStoreAuthenticatedAESCipherSpi$GCM r0;
        android.os.IBinder r1;
        android.security.keystore.KeyStoreCryptoOperationChunkedStreamer $r2;
        android.security.keystore.KeyStoreCryptoOperationChunkedStreamer$MainDataStream $r3;
        boolean $z0;
        android.security.keystore.AndroidKeyStoreAuthenticatedAESCipherSpi$BufferAllOutputUntilDoFinalStreamer $r4;
        android.security.KeyStore r5;

        r0 := @this: android.security.keystore.AndroidKeyStoreAuthenticatedAESCipherSpi$GCM;

        r5 := @parameter0: android.security.KeyStore;

        r1 := @parameter1: android.os.IBinder;

        $r2 = new android.security.keystore.KeyStoreCryptoOperationChunkedStreamer;

        $r3 = new android.security.keystore.KeyStoreCryptoOperationChunkedStreamer$MainDataStream;

        specialinvoke $r3.<android.security.keystore.KeyStoreCryptoOperationChunkedStreamer$MainDataStream: void <init>(android.security.KeyStore,android.os.IBinder)>(r5, r1);

        specialinvoke $r2.<android.security.keystore.KeyStoreCryptoOperationChunkedStreamer: void <init>(android.security.keystore.KeyStoreCryptoOperationChunkedStreamer$Stream,int)>($r3, 0);

        $z0 = virtualinvoke r0.<android.security.keystore.AndroidKeyStoreAuthenticatedAESCipherSpi$GCM: boolean isEncrypting()>();

        if $z0 == 0 goto label1;

        return $r2;

     label1:
        $r4 = new android.security.keystore.AndroidKeyStoreAuthenticatedAESCipherSpi$BufferAllOutputUntilDoFinalStreamer;

        specialinvoke $r4.<android.security.keystore.AndroidKeyStoreAuthenticatedAESCipherSpi$BufferAllOutputUntilDoFinalStreamer: void <init>(android.security.keystore.KeyStoreCryptoOperationStreamer,android.security.keystore.AndroidKeyStoreAuthenticatedAESCipherSpi$1)>($r2, null);

        return $r4;
    }

    protected final java.security.AlgorithmParameters engineGetParameters()
    {
        android.security.keystore.AndroidKeyStoreAuthenticatedAESCipherSpi$GCM r0;
        byte[] r1;
        javax.crypto.spec.GCMParameterSpec r2;
        int $i0, $i1;
        java.lang.Throwable $r3, $r5;
        java.security.ProviderException $r4, $r6;
        java.security.AlgorithmParameters r7;

        r0 := @this: android.security.keystore.AndroidKeyStoreAuthenticatedAESCipherSpi$GCM;

        r1 = virtualinvoke r0.<android.security.keystore.AndroidKeyStoreAuthenticatedAESCipherSpi$GCM: byte[] getIv()>();

        if r1 == null goto label5;

        $i0 = lengthof r1;

        if $i0 <= 0 goto label5;

     label1:
        r7 = staticinvoke <java.security.AlgorithmParameters: java.security.AlgorithmParameters getInstance(java.lang.String)>("GCM");

        r2 = new javax.crypto.spec.GCMParameterSpec;

        $i1 = r0.<android.security.keystore.AndroidKeyStoreAuthenticatedAESCipherSpi$GCM: int mTagLengthBits>;

        specialinvoke r2.<javax.crypto.spec.GCMParameterSpec: void <init>(int,byte[])>($i1, r1);

        virtualinvoke r7.<java.security.AlgorithmParameters: void init(java.security.spec.AlgorithmParameterSpec)>(r2);

     label2:
        return r7;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.security.ProviderException;

        specialinvoke $r4.<java.security.ProviderException: void <init>(java.lang.String,java.lang.Throwable)>("Failed to initialize GCM AlgorithmParameters", $r3);

        throw $r4;

     label4:
        $r5 := @caughtexception;

        $r6 = new java.security.ProviderException;

        specialinvoke $r6.<java.security.ProviderException: void <init>(java.lang.String,java.lang.Throwable)>("Failed to obtain GCM AlgorithmParameters", $r5);

        throw $r6;

     label5:
        return null;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label4;
        catch java.security.spec.InvalidParameterSpecException from label1 to label2 with label3;
    }

    protected final int getAdditionalEntropyAmountForBegin()
    {
        android.security.keystore.AndroidKeyStoreAuthenticatedAESCipherSpi$GCM r0;
        byte[] $r1;
        boolean $z0;

        r0 := @this: android.security.keystore.AndroidKeyStoreAuthenticatedAESCipherSpi$GCM;

        $r1 = virtualinvoke r0.<android.security.keystore.AndroidKeyStoreAuthenticatedAESCipherSpi$GCM: byte[] getIv()>();

        if $r1 != null goto label1;

        $z0 = virtualinvoke r0.<android.security.keystore.AndroidKeyStoreAuthenticatedAESCipherSpi$GCM: boolean isEncrypting()>();

        if $z0 == 0 goto label1;

        return 12;

     label1:
        return 0;
    }

    protected final int getAdditionalEntropyAmountForFinish()
    {
        android.security.keystore.AndroidKeyStoreAuthenticatedAESCipherSpi$GCM r0;

        r0 := @this: android.security.keystore.AndroidKeyStoreAuthenticatedAESCipherSpi$GCM;

        return 0;
    }

    protected final int getTagLengthBits()
    {
        android.security.keystore.AndroidKeyStoreAuthenticatedAESCipherSpi$GCM r0;
        int $i0;

        r0 := @this: android.security.keystore.AndroidKeyStoreAuthenticatedAESCipherSpi$GCM;

        $i0 = r0.<android.security.keystore.AndroidKeyStoreAuthenticatedAESCipherSpi$GCM: int mTagLengthBits>;

        return $i0;
    }

    protected final void initAlgorithmSpecificParameters() throws java.security.InvalidKeyException
    {
        android.security.keystore.AndroidKeyStoreAuthenticatedAESCipherSpi$GCM r0;
        boolean $z0;
        java.security.InvalidKeyException $r1;

        r0 := @this: android.security.keystore.AndroidKeyStoreAuthenticatedAESCipherSpi$GCM;

        $z0 = virtualinvoke r0.<android.security.keystore.AndroidKeyStoreAuthenticatedAESCipherSpi$GCM: boolean isEncrypting()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        $r1 = new java.security.InvalidKeyException;

        specialinvoke $r1.<java.security.InvalidKeyException: void <init>(java.lang.String)>("IV required when decrypting. Use IvParameterSpec or AlgorithmParameters to provide it.");

        throw $r1;
    }

    protected final void initAlgorithmSpecificParameters(java.security.AlgorithmParameters) throws java.security.InvalidAlgorithmParameterException
    {
        android.security.keystore.AndroidKeyStoreAuthenticatedAESCipherSpi$GCM r0;
        java.security.AlgorithmParameters r1;
        java.lang.String $r3, $r4, $r7, $r11, $r19;
        boolean $z0, $z1, $z2;
        java.lang.StringBuilder $r5, $r15;
        java.security.InvalidAlgorithmParameterException $r10, $r13, $r18;
        java.security.spec.AlgorithmParameterSpec $r12;
        java.lang.Throwable $r14;
        javax.crypto.spec.GCMParameterSpec r20;

        r0 := @this: android.security.keystore.AndroidKeyStoreAuthenticatedAESCipherSpi$GCM;

        r1 := @parameter0: java.security.AlgorithmParameters;

        if r1 != null goto label2;

        $z1 = virtualinvoke r0.<android.security.keystore.AndroidKeyStoreAuthenticatedAESCipherSpi$GCM: boolean isEncrypting()>();

        if $z1 == 0 goto label1;

        return;

     label1:
        $r13 = new java.security.InvalidAlgorithmParameterException;

        specialinvoke $r13.<java.security.InvalidAlgorithmParameterException: void <init>(java.lang.String)>("IV required when decrypting. Use GCMParameterSpec or GCM AlgorithmParameters to provide it.");

        throw $r13;

     label2:
        $r3 = "GCM";

        $r4 = virtualinvoke r1.<java.security.AlgorithmParameters: java.lang.String getAlgorithm()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r4);

        if $z0 == 0 goto label7;

     label3:
        $r12 = virtualinvoke r1.<java.security.AlgorithmParameters: java.security.spec.AlgorithmParameterSpec getParameterSpec(java.lang.Class)>(class "Ljavax/crypto/spec/GCMParameterSpec;");

        r20 = (javax.crypto.spec.GCMParameterSpec) $r12;

     label4:
        virtualinvoke r0.<android.security.keystore.AndroidKeyStoreAuthenticatedAESCipherSpi$GCM: void initAlgorithmSpecificParameters(java.security.spec.AlgorithmParameterSpec)>(r20);

        return;

     label5:
        $r14 := @caughtexception;

        $z2 = virtualinvoke r0.<android.security.keystore.AndroidKeyStoreAuthenticatedAESCipherSpi$GCM: boolean isEncrypting()>();

        if $z2 == 0 goto label6;

        virtualinvoke r0.<android.security.keystore.AndroidKeyStoreAuthenticatedAESCipherSpi$GCM: void setIv(byte[])>(null);

        return;

     label6:
        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("IV and tag length required when decrypting, but not found in parameters: ");

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r18 = new java.security.InvalidAlgorithmParameterException;

        $r19 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r18.<java.security.InvalidAlgorithmParameterException: void <init>(java.lang.String,java.lang.Throwable)>($r19, $r14);

        throw $r18;

     label7:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported AlgorithmParameters algorithm: ");

        $r7 = virtualinvoke r1.<java.security.AlgorithmParameters: java.lang.String getAlgorithm()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". Supported: GCM");

        $r10 = new java.security.InvalidAlgorithmParameterException;

        $r11 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.security.InvalidAlgorithmParameterException: void <init>(java.lang.String)>($r11);

        throw $r10;

        catch java.security.spec.InvalidParameterSpecException from label3 to label4 with label5;
    }

    protected final void initAlgorithmSpecificParameters(java.security.spec.AlgorithmParameterSpec) throws java.security.InvalidAlgorithmParameterException
    {
        android.security.keystore.AndroidKeyStoreAuthenticatedAESCipherSpi$GCM r0;
        int i0, $i1, $i2, $i3;
        boolean $z0, $z1;
        java.security.InvalidAlgorithmParameterException $r1, $r2, $r9, $r14, $r20;
        java.lang.StringBuilder $r3, $r18;
        java.lang.String $r10, $r21;
        java.security.spec.AlgorithmParameterSpec r15;
        javax.crypto.spec.GCMParameterSpec r16;
        byte[] r17;

        r0 := @this: android.security.keystore.AndroidKeyStoreAuthenticatedAESCipherSpi$GCM;

        r15 := @parameter0: java.security.spec.AlgorithmParameterSpec;

        if r15 != null goto label2;

        $z1 = virtualinvoke r0.<android.security.keystore.AndroidKeyStoreAuthenticatedAESCipherSpi$GCM: boolean isEncrypting()>();

        if $z1 == 0 goto label1;

        return;

     label1:
        $r14 = new java.security.InvalidAlgorithmParameterException;

        specialinvoke $r14.<java.security.InvalidAlgorithmParameterException: void <init>(java.lang.String)>("GCMParameterSpec must be provided when decrypting");

        throw $r14;

     label2:
        $z0 = r15 instanceof javax.crypto.spec.GCMParameterSpec;

        if $z0 == 0 goto label6;

        r16 = (javax.crypto.spec.GCMParameterSpec) r15;

        r17 = virtualinvoke r16.<javax.crypto.spec.GCMParameterSpec: byte[] getIV()>();

        if r17 == null goto label5;

        $i1 = lengthof r17;

        if $i1 != 12 goto label4;

        i0 = virtualinvoke r16.<javax.crypto.spec.GCMParameterSpec: int getTLen()>();

        if i0 < 96 goto label3;

        if i0 > 128 goto label3;

        $i3 = i0 % 8;

        if $i3 != 0 goto label3;

        virtualinvoke r0.<android.security.keystore.AndroidKeyStoreAuthenticatedAESCipherSpi$GCM: void setIv(byte[])>(r17);

        r0.<android.security.keystore.AndroidKeyStoreAuthenticatedAESCipherSpi$GCM: int mTagLengthBits> = i0;

        return;

     label3:
        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported tag length: ");

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" bits. Supported lengths: 96, 104, 112, 120, 128");

        $r20 = new java.security.InvalidAlgorithmParameterException;

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r20.<java.security.InvalidAlgorithmParameterException: void <init>(java.lang.String)>($r21);

        throw $r20;

     label4:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported IV length: ");

        $i2 = lengthof r17;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" bytes. Only ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(12);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" bytes long IV supported");

        $r9 = new java.security.InvalidAlgorithmParameterException;

        $r10 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.security.InvalidAlgorithmParameterException: void <init>(java.lang.String)>($r10);

        throw $r9;

     label5:
        $r2 = new java.security.InvalidAlgorithmParameterException;

        specialinvoke $r2.<java.security.InvalidAlgorithmParameterException: void <init>(java.lang.String)>("Null IV in GCMParameterSpec");

        throw $r2;

     label6:
        $r1 = new java.security.InvalidAlgorithmParameterException;

        specialinvoke $r1.<java.security.InvalidAlgorithmParameterException: void <init>(java.lang.String)>("Only GCMParameterSpec supported");

        throw $r1;
    }

    protected final void resetAll()
    {
        android.security.keystore.AndroidKeyStoreAuthenticatedAESCipherSpi$GCM r0;

        r0 := @this: android.security.keystore.AndroidKeyStoreAuthenticatedAESCipherSpi$GCM;

        r0.<android.security.keystore.AndroidKeyStoreAuthenticatedAESCipherSpi$GCM: int mTagLengthBits> = 128;

        specialinvoke r0.<android.security.keystore.AndroidKeyStoreAuthenticatedAESCipherSpi: void resetAll()>();

        return;
    }

    protected final void resetWhilePreservingInitState()
    {
        android.security.keystore.AndroidKeyStoreAuthenticatedAESCipherSpi$GCM r0;

        r0 := @this: android.security.keystore.AndroidKeyStoreAuthenticatedAESCipherSpi$GCM;

        specialinvoke r0.<android.security.keystore.AndroidKeyStoreAuthenticatedAESCipherSpi: void resetWhilePreservingInitState()>();

        return;
    }

    public static void <clinit>()
    {
        <android.security.keystore.AndroidKeyStoreAuthenticatedAESCipherSpi$GCM: int MIN_SUPPORTED_TAG_LENGTH_BITS> = 96;

        <android.security.keystore.AndroidKeyStoreAuthenticatedAESCipherSpi$GCM: int MAX_SUPPORTED_TAG_LENGTH_BITS> = 128;

        <android.security.keystore.AndroidKeyStoreAuthenticatedAESCipherSpi$GCM: int IV_LENGTH_BYTES> = 12;

        <android.security.keystore.AndroidKeyStoreAuthenticatedAESCipherSpi$GCM: int DEFAULT_TAG_LENGTH_BITS> = 128;

        return;
    }
}
