class android.security.keystore.AndroidKeyStoreECDSASignatureSpi$NONE$TruncateToFieldSizeMessageStreamer extends java.lang.Object implements android.security.keystore.KeyStoreCryptoOperationStreamer
{
    private long mConsumedInputSizeBytes;
    private final android.security.keystore.KeyStoreCryptoOperationStreamer mDelegate;
    private final int mGroupSizeBits;
    private final java.io.ByteArrayOutputStream mInputBuffer;

    private void <init>(android.security.keystore.KeyStoreCryptoOperationStreamer, int)
    {
        android.security.keystore.AndroidKeyStoreECDSASignatureSpi$NONE$TruncateToFieldSizeMessageStreamer r0;
        android.security.keystore.KeyStoreCryptoOperationStreamer r1;
        int i0;
        java.io.ByteArrayOutputStream $r2;

        r0 := @this: android.security.keystore.AndroidKeyStoreECDSASignatureSpi$NONE$TruncateToFieldSizeMessageStreamer;

        r1 := @parameter0: android.security.keystore.KeyStoreCryptoOperationStreamer;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.io.ByteArrayOutputStream;

        specialinvoke $r2.<java.io.ByteArrayOutputStream: void <init>()>();

        r0.<android.security.keystore.AndroidKeyStoreECDSASignatureSpi$NONE$TruncateToFieldSizeMessageStreamer: java.io.ByteArrayOutputStream mInputBuffer> = $r2;

        r0.<android.security.keystore.AndroidKeyStoreECDSASignatureSpi$NONE$TruncateToFieldSizeMessageStreamer: android.security.keystore.KeyStoreCryptoOperationStreamer mDelegate> = r1;

        r0.<android.security.keystore.AndroidKeyStoreECDSASignatureSpi$NONE$TruncateToFieldSizeMessageStreamer: int mGroupSizeBits> = i0;

        return;
    }

    void <init>(android.security.keystore.KeyStoreCryptoOperationStreamer, int, android.security.keystore.AndroidKeyStoreECDSASignatureSpi$1)
    {
        android.security.keystore.AndroidKeyStoreECDSASignatureSpi$NONE$TruncateToFieldSizeMessageStreamer r0;
        android.security.keystore.KeyStoreCryptoOperationStreamer r1;
        int i0;
        android.security.keystore.AndroidKeyStoreECDSASignatureSpi$1 r2;

        r0 := @this: android.security.keystore.AndroidKeyStoreECDSASignatureSpi$NONE$TruncateToFieldSizeMessageStreamer;

        r1 := @parameter0: android.security.keystore.KeyStoreCryptoOperationStreamer;

        i0 := @parameter1: int;

        r2 := @parameter2: android.security.keystore.AndroidKeyStoreECDSASignatureSpi$1;

        specialinvoke r0.<android.security.keystore.AndroidKeyStoreECDSASignatureSpi$NONE$TruncateToFieldSizeMessageStreamer: void <init>(android.security.keystore.KeyStoreCryptoOperationStreamer,int)>(r1, i0);

        return;
    }

    public byte[] doFinal(byte[], int, int, byte[], byte[]) throws android.security.KeyStoreException
    {
        android.security.keystore.AndroidKeyStoreECDSASignatureSpi$NONE$TruncateToFieldSizeMessageStreamer r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6;
        byte[] r1, r2, $r6, r8, r9;
        java.io.ByteArrayOutputStream $r3, $r4, $r7;
        android.security.keystore.KeyStoreCryptoOperationStreamer $r5;
        long $l7, $l8, $l9;

        r0 := @this: android.security.keystore.AndroidKeyStoreECDSASignatureSpi$NONE$TruncateToFieldSizeMessageStreamer;

        r8 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 := @parameter3: byte[];

        r2 := @parameter4: byte[];

        if i1 <= 0 goto label1;

        $l8 = r0.<android.security.keystore.AndroidKeyStoreECDSASignatureSpi$NONE$TruncateToFieldSizeMessageStreamer: long mConsumedInputSizeBytes>;

        $l7 = (long) i1;

        $l9 = $l8 + $l7;

        r0.<android.security.keystore.AndroidKeyStoreECDSASignatureSpi$NONE$TruncateToFieldSizeMessageStreamer: long mConsumedInputSizeBytes> = $l9;

        $r7 = r0.<android.security.keystore.AndroidKeyStoreECDSASignatureSpi$NONE$TruncateToFieldSizeMessageStreamer: java.io.ByteArrayOutputStream mInputBuffer>;

        virtualinvoke $r7.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>(r8, i0, i1);

     label1:
        $r3 = r0.<android.security.keystore.AndroidKeyStoreECDSASignatureSpi$NONE$TruncateToFieldSizeMessageStreamer: java.io.ByteArrayOutputStream mInputBuffer>;

        r9 = virtualinvoke $r3.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        $r4 = r0.<android.security.keystore.AndroidKeyStoreECDSASignatureSpi$NONE$TruncateToFieldSizeMessageStreamer: java.io.ByteArrayOutputStream mInputBuffer>;

        virtualinvoke $r4.<java.io.ByteArrayOutputStream: void reset()>();

        $r5 = r0.<android.security.keystore.AndroidKeyStoreECDSASignatureSpi$NONE$TruncateToFieldSizeMessageStreamer: android.security.keystore.KeyStoreCryptoOperationStreamer mDelegate>;

        $i5 = lengthof r9;

        $i2 = r0.<android.security.keystore.AndroidKeyStoreECDSASignatureSpi$NONE$TruncateToFieldSizeMessageStreamer: int mGroupSizeBits>;

        $i3 = $i2 + 7;

        $i4 = $i3 / 8;

        $i6 = staticinvoke <java.lang.Math: int min(int,int)>($i5, $i4);

        $r6 = interfaceinvoke $r5.<android.security.keystore.KeyStoreCryptoOperationStreamer: byte[] doFinal(byte[],int,int,byte[],byte[])>(r9, 0, $i6, r1, r2);

        return $r6;
    }

    public long getConsumedInputSizeBytes()
    {
        android.security.keystore.AndroidKeyStoreECDSASignatureSpi$NONE$TruncateToFieldSizeMessageStreamer r0;
        long $l0;

        r0 := @this: android.security.keystore.AndroidKeyStoreECDSASignatureSpi$NONE$TruncateToFieldSizeMessageStreamer;

        $l0 = r0.<android.security.keystore.AndroidKeyStoreECDSASignatureSpi$NONE$TruncateToFieldSizeMessageStreamer: long mConsumedInputSizeBytes>;

        return $l0;
    }

    public long getProducedOutputSizeBytes()
    {
        android.security.keystore.AndroidKeyStoreECDSASignatureSpi$NONE$TruncateToFieldSizeMessageStreamer r0;
        android.security.keystore.KeyStoreCryptoOperationStreamer $r1;
        long $l0;

        r0 := @this: android.security.keystore.AndroidKeyStoreECDSASignatureSpi$NONE$TruncateToFieldSizeMessageStreamer;

        $r1 = r0.<android.security.keystore.AndroidKeyStoreECDSASignatureSpi$NONE$TruncateToFieldSizeMessageStreamer: android.security.keystore.KeyStoreCryptoOperationStreamer mDelegate>;

        $l0 = interfaceinvoke $r1.<android.security.keystore.KeyStoreCryptoOperationStreamer: long getProducedOutputSizeBytes()>();

        return $l0;
    }

    public byte[] update(byte[], int, int) throws android.security.KeyStoreException
    {
        android.security.keystore.AndroidKeyStoreECDSASignatureSpi$NONE$TruncateToFieldSizeMessageStreamer r0;
        byte[] r1, $r2;
        int i0, i1;
        java.io.ByteArrayOutputStream $r3;
        long $l2, $l3, $l4;

        r0 := @this: android.security.keystore.AndroidKeyStoreECDSASignatureSpi$NONE$TruncateToFieldSizeMessageStreamer;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        if i1 <= 0 goto label1;

        $r3 = r0.<android.security.keystore.AndroidKeyStoreECDSASignatureSpi$NONE$TruncateToFieldSizeMessageStreamer: java.io.ByteArrayOutputStream mInputBuffer>;

        virtualinvoke $r3.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>(r1, i0, i1);

        $l3 = r0.<android.security.keystore.AndroidKeyStoreECDSASignatureSpi$NONE$TruncateToFieldSizeMessageStreamer: long mConsumedInputSizeBytes>;

        $l2 = (long) i1;

        $l4 = $l3 + $l2;

        r0.<android.security.keystore.AndroidKeyStoreECDSASignatureSpi$NONE$TruncateToFieldSizeMessageStreamer: long mConsumedInputSizeBytes> = $l4;

     label1:
        $r2 = <libcore.util.EmptyArray: byte[] BYTE>;

        return $r2;
    }
}
