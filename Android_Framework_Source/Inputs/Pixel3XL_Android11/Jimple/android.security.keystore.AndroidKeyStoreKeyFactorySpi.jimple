public class android.security.keystore.AndroidKeyStoreKeyFactorySpi extends java.security.KeyFactorySpi
{
    private final android.security.KeyStore mKeyStore;

    public void <init>()
    {
        android.security.keystore.AndroidKeyStoreKeyFactorySpi r0;
        android.security.KeyStore $r1;

        r0 := @this: android.security.keystore.AndroidKeyStoreKeyFactorySpi;

        specialinvoke r0.<java.security.KeyFactorySpi: void <init>()>();

        $r1 = staticinvoke <android.security.KeyStore: android.security.KeyStore getInstance()>();

        r0.<android.security.keystore.AndroidKeyStoreKeyFactorySpi: android.security.KeyStore mKeyStore> = $r1;

        return;
    }

    protected java.security.PrivateKey engineGeneratePrivate(java.security.spec.KeySpec) throws java.security.spec.InvalidKeySpecException
    {
        android.security.keystore.AndroidKeyStoreKeyFactorySpi r0;
        java.lang.StringBuilder $r1;
        java.lang.Class $r3;
        java.lang.String $r4, $r7;
        java.security.spec.InvalidKeySpecException $r6;
        java.security.spec.KeySpec r8;

        r0 := @this: android.security.keystore.AndroidKeyStoreKeyFactorySpi;

        r8 := @parameter0: java.security.spec.KeySpec;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("To generate a key pair in Android Keystore, use KeyPairGenerator initialized with ");

        $r3 = class "Landroid/security/keystore/KeyGenParameterSpec;";

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = new java.security.spec.InvalidKeySpecException;

        $r7 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.security.spec.InvalidKeySpecException: void <init>(java.lang.String)>($r7);

        throw $r6;
    }

    protected java.security.PublicKey engineGeneratePublic(java.security.spec.KeySpec) throws java.security.spec.InvalidKeySpecException
    {
        android.security.keystore.AndroidKeyStoreKeyFactorySpi r0;
        java.lang.StringBuilder $r1;
        java.lang.Class $r3;
        java.lang.String $r4, $r7;
        java.security.spec.InvalidKeySpecException $r6;
        java.security.spec.KeySpec r8;

        r0 := @this: android.security.keystore.AndroidKeyStoreKeyFactorySpi;

        r8 := @parameter0: java.security.spec.KeySpec;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("To generate a key pair in Android Keystore, use KeyPairGenerator initialized with ");

        $r3 = class "Landroid/security/keystore/KeyGenParameterSpec;";

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = new java.security.spec.InvalidKeySpecException;

        $r7 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.security.spec.InvalidKeySpecException: void <init>(java.lang.String)>($r7);

        throw $r6;
    }

    protected java.security.spec.KeySpec engineGetKeySpec(java.security.Key, java.lang.Class) throws java.security.spec.InvalidKeySpecException
    {
        android.security.keystore.AndroidKeyStoreKeyFactorySpi r0;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14;
        java.security.spec.InvalidKeySpecException $r1, $r2, $r12, $r21, $r33, $r38, $r39, $r46, $r57, $r62, $r73;
        java.lang.Class $r3, $r4, $r5, $r6, $r7, $r42, $r53, $r69, r76;
        java.lang.StringBuilder $r8, $r14, $r26, $r40, $r51, $r59, $r67;
        java.lang.String $r10, $r13, $r16, $r22, $r28, $r34, $r43, $r47, $r54, $r58, $r63, $r64, $r70, $r74, r79, r80, r84;
        java.security.spec.ECPublicKeySpec $r23;
        java.security.spec.ECPoint $r24;
        java.security.spec.ECParameterSpec $r25;
        java.security.spec.RSAPublicKeySpec $r35;
        java.math.BigInteger $r36, $r37;
        java.security.spec.X509EncodedKeySpec $r48;
        android.security.keystore.AndroidKeyStorePublicKey $r49;
        byte[] $r50;
        int $i0, $i1;
        android.security.KeyStore $r65;
        android.security.keystore.KeyInfo $r66;
        java.security.Key r75;
        android.security.keystore.AndroidKeyStorePrivateKey r78;
        android.security.keystore.AndroidKeyStoreRSAPublicKey r85;
        android.security.keystore.AndroidKeyStoreECPublicKey r87;

        r0 := @this: android.security.keystore.AndroidKeyStoreKeyFactorySpi;

        r75 := @parameter0: java.security.Key;

        r76 := @parameter1: java.lang.Class;

        if r75 == null goto label19;

        $z1 = r75 instanceof android.security.keystore.AndroidKeyStorePrivateKey;

        if $z1 != 0 goto label02;

        $z14 = r75 instanceof android.security.keystore.AndroidKeyStorePublicKey;

        if $z14 == 0 goto label01;

        goto label02;

     label01:
        $r67 = new java.lang.StringBuilder;

        specialinvoke $r67.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported key type: ");

        $r69 = virtualinvoke r75.<java.lang.Object: java.lang.Class getClass()>();

        $r70 = virtualinvoke $r69.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r70);

        virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". This KeyFactory supports only Android Keystore asymmetric keys");

        $r73 = new java.security.spec.InvalidKeySpecException;

        $r74 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r73.<java.security.spec.InvalidKeySpecException: void <init>(java.lang.String)>($r74);

        throw $r73;

     label02:
        if r76 == null goto label18;

        $r3 = class "Landroid/security/keystore/KeyInfo;";

        $z2 = virtualinvoke $r3.<java.lang.Object: boolean equals(java.lang.Object)>(r76);

        if $z2 == 0 goto label05;

        $z12 = r75 instanceof android.security.keystore.AndroidKeyStorePrivateKey;

        if $z12 == 0 goto label04;

        r78 = (android.security.keystore.AndroidKeyStorePrivateKey) r75;

        r79 = virtualinvoke r78.<android.security.keystore.AndroidKeyStorePrivateKey: java.lang.String getAlias()>();

        $z13 = virtualinvoke r79.<java.lang.String: boolean startsWith(java.lang.String)>("USRPKEY_");

        if $z13 == 0 goto label03;

        $r64 = "USRPKEY_";

        $i0 = virtualinvoke $r64.<java.lang.String: int length()>();

        r80 = virtualinvoke r79.<java.lang.String: java.lang.String substring(int)>($i0);

        $r65 = r0.<android.security.keystore.AndroidKeyStoreKeyFactorySpi: android.security.KeyStore mKeyStore>;

        $i1 = virtualinvoke r78.<android.security.keystore.AndroidKeyStorePrivateKey: int getUid()>();

        $r66 = staticinvoke <android.security.keystore.AndroidKeyStoreSecretKeyFactorySpi: android.security.keystore.KeyInfo getKeyInfo(android.security.KeyStore,java.lang.String,java.lang.String,int)>($r65, r80, r79, $i1);

        return $r66;

     label03:
        $r59 = new java.lang.StringBuilder;

        specialinvoke $r59.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid key alias: ");

        virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r79);

        $r62 = new java.security.spec.InvalidKeySpecException;

        $r63 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r62.<java.security.spec.InvalidKeySpecException: void <init>(java.lang.String)>($r63);

        throw $r62;

     label04:
        $r51 = new java.lang.StringBuilder;

        specialinvoke $r51.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported key type: ");

        $r53 = virtualinvoke r75.<java.lang.Object: java.lang.Class getClass()>();

        $r54 = virtualinvoke $r53.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r54);

        virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". KeyInfo can be obtained only for Android Keystore private keys");

        $r57 = new java.security.spec.InvalidKeySpecException;

        $r58 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r57.<java.security.spec.InvalidKeySpecException: void <init>(java.lang.String)>($r58);

        throw $r57;

     label05:
        $r4 = class "Ljava/security/spec/X509EncodedKeySpec;";

        $z3 = virtualinvoke $r4.<java.lang.Object: boolean equals(java.lang.Object)>(r76);

        if $z3 == 0 goto label07;

        $z11 = r75 instanceof android.security.keystore.AndroidKeyStorePublicKey;

        if $z11 == 0 goto label06;

        $r48 = new java.security.spec.X509EncodedKeySpec;

        $r49 = (android.security.keystore.AndroidKeyStorePublicKey) r75;

        $r50 = virtualinvoke $r49.<android.security.keystore.AndroidKeyStorePublicKey: byte[] getEncoded()>();

        specialinvoke $r48.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r50);

        return $r48;

     label06:
        $r40 = new java.lang.StringBuilder;

        specialinvoke $r40.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported key type: ");

        $r42 = virtualinvoke r75.<java.lang.Object: java.lang.Class getClass()>();

        $r43 = virtualinvoke $r42.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r43);

        virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". X509EncodedKeySpec can be obtained only for Android Keystore public keys");

        $r46 = new java.security.spec.InvalidKeySpecException;

        $r47 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r46.<java.security.spec.InvalidKeySpecException: void <init>(java.lang.String)>($r47);

        throw $r46;

     label07:
        $r5 = class "Ljava/security/spec/PKCS8EncodedKeySpec;";

        $z4 = virtualinvoke $r5.<java.lang.Object: boolean equals(java.lang.Object)>(r76);

        if $z4 == 0 goto label09;

        $z10 = r75 instanceof android.security.keystore.AndroidKeyStorePrivateKey;

        if $z10 == 0 goto label08;

        $r39 = new java.security.spec.InvalidKeySpecException;

        specialinvoke $r39.<java.security.spec.InvalidKeySpecException: void <init>(java.lang.String)>("Key material export of Android Keystore private keys is not supported");

        throw $r39;

     label08:
        $r38 = new java.security.spec.InvalidKeySpecException;

        specialinvoke $r38.<java.security.spec.InvalidKeySpecException: void <init>(java.lang.String)>("Cannot export key material of public key in PKCS#8 format. Only X.509 format (X509EncodedKeySpec) supported for public keys.");

        throw $r38;

     label09:
        $r6 = class "Ljava/security/spec/RSAPublicKeySpec;";

        z0 = virtualinvoke $r6.<java.lang.Object: boolean equals(java.lang.Object)>(r76);

        r84 = "private";

        if z0 == 0 goto label13;

        $z8 = r75 instanceof android.security.keystore.AndroidKeyStoreRSAPublicKey;

        if $z8 == 0 goto label10;

        r85 = (android.security.keystore.AndroidKeyStoreRSAPublicKey) r75;

        $r35 = new java.security.spec.RSAPublicKeySpec;

        $r36 = virtualinvoke r85.<android.security.keystore.AndroidKeyStoreRSAPublicKey: java.math.BigInteger getModulus()>();

        $r37 = virtualinvoke r85.<android.security.keystore.AndroidKeyStoreRSAPublicKey: java.math.BigInteger getPublicExponent()>();

        specialinvoke $r35.<java.security.spec.RSAPublicKeySpec: void <init>(java.math.BigInteger,java.math.BigInteger)>($r36, $r37);

        return $r35;

     label10:
        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Obtaining RSAPublicKeySpec not supported for ");

        $r28 = interfaceinvoke r75.<java.security.Key: java.lang.String getAlgorithm()>();

        virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);

        virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $z9 = r75 instanceof android.security.keystore.AndroidKeyStorePrivateKey;

        if $z9 == 0 goto label11;

        goto label12;

     label11:
        r84 = "public";

     label12:
        virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r84);

        virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" key");

        $r33 = new java.security.spec.InvalidKeySpecException;

        $r34 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r33.<java.security.spec.InvalidKeySpecException: void <init>(java.lang.String)>($r34);

        throw $r33;

     label13:
        $r7 = class "Ljava/security/spec/ECPublicKeySpec;";

        $z5 = virtualinvoke $r7.<java.lang.Object: boolean equals(java.lang.Object)>(r76);

        if $z5 == 0 goto label17;

        $z6 = r75 instanceof android.security.keystore.AndroidKeyStoreECPublicKey;

        if $z6 == 0 goto label14;

        r87 = (android.security.keystore.AndroidKeyStoreECPublicKey) r75;

        $r23 = new java.security.spec.ECPublicKeySpec;

        $r24 = virtualinvoke r87.<android.security.keystore.AndroidKeyStoreECPublicKey: java.security.spec.ECPoint getW()>();

        $r25 = virtualinvoke r87.<android.security.keystore.AndroidKeyStoreECPublicKey: java.security.spec.ECParameterSpec getParams()>();

        specialinvoke $r23.<java.security.spec.ECPublicKeySpec: void <init>(java.security.spec.ECPoint,java.security.spec.ECParameterSpec)>($r24, $r25);

        return $r23;

     label14:
        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Obtaining ECPublicKeySpec not supported for ");

        $r16 = interfaceinvoke r75.<java.security.Key: java.lang.String getAlgorithm()>();

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $z7 = r75 instanceof android.security.keystore.AndroidKeyStorePrivateKey;

        if $z7 == 0 goto label15;

        goto label16;

     label15:
        r84 = "public";

     label16:
        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r84);

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" key");

        $r21 = new java.security.spec.InvalidKeySpecException;

        $r22 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r21.<java.security.spec.InvalidKeySpecException: void <init>(java.lang.String)>($r22);

        throw $r21;

     label17:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported key spec: ");

        $r10 = virtualinvoke r76.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = new java.security.spec.InvalidKeySpecException;

        $r13 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<java.security.spec.InvalidKeySpecException: void <init>(java.lang.String)>($r13);

        throw $r12;

     label18:
        $r2 = new java.security.spec.InvalidKeySpecException;

        specialinvoke $r2.<java.security.spec.InvalidKeySpecException: void <init>(java.lang.String)>("keySpecClass == null");

        throw $r2;

     label19:
        $r1 = new java.security.spec.InvalidKeySpecException;

        specialinvoke $r1.<java.security.spec.InvalidKeySpecException: void <init>(java.lang.String)>("key == null");

        throw $r1;
    }

    protected java.security.Key engineTranslateKey(java.security.Key) throws java.security.InvalidKeyException
    {
        android.security.keystore.AndroidKeyStoreKeyFactorySpi r0;
        java.security.Key r1;
        java.security.InvalidKeyException $r2, $r3;
        boolean $z0, $z1;

        r0 := @this: android.security.keystore.AndroidKeyStoreKeyFactorySpi;

        r1 := @parameter0: java.security.Key;

        if r1 == null goto label3;

        $z0 = r1 instanceof android.security.keystore.AndroidKeyStorePrivateKey;

        if $z0 != 0 goto label2;

        $z1 = r1 instanceof android.security.keystore.AndroidKeyStorePublicKey;

        if $z1 == 0 goto label1;

        goto label2;

     label1:
        $r3 = new java.security.InvalidKeyException;

        specialinvoke $r3.<java.security.InvalidKeyException: void <init>(java.lang.String)>("To import a key into Android Keystore, use KeyStore.setEntry");

        throw $r3;

     label2:
        return r1;

     label3:
        $r2 = new java.security.InvalidKeyException;

        specialinvoke $r2.<java.security.InvalidKeyException: void <init>(java.lang.String)>("key == null");

        throw $r2;
    }
}
