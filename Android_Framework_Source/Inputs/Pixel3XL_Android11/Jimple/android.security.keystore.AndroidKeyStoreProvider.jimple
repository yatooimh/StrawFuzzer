public class android.security.keystore.AndroidKeyStoreProvider extends java.security.Provider
{
    private static final java.lang.String DESEDE_SYSTEM_PROPERTY;
    private static final java.lang.String PACKAGE_NAME;
    private static final java.lang.String PROVIDER_NAME;

    public void <init>()
    {
        android.security.keystore.AndroidKeyStoreProvider r0;
        boolean z0;
        java.lang.String $r1, $r2;

        r0 := @this: android.security.keystore.AndroidKeyStoreProvider;

        specialinvoke r0.<java.security.Provider: void <init>(java.lang.String,double,java.lang.String)>("AndroidKeyStore", 1.0, "Android KeyStore security provider");

        $r1 = "true";

        $r2 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String)>("ro.hardware.keystore_desede");

        z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        virtualinvoke r0.<android.security.keystore.AndroidKeyStoreProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("KeyStore.AndroidKeyStore", "android.security.keystore.AndroidKeyStoreSpi");

        virtualinvoke r0.<android.security.keystore.AndroidKeyStoreProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("KeyPairGenerator.EC", "android.security.keystore.AndroidKeyStoreKeyPairGeneratorSpi$EC");

        virtualinvoke r0.<android.security.keystore.AndroidKeyStoreProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("KeyPairGenerator.RSA", "android.security.keystore.AndroidKeyStoreKeyPairGeneratorSpi$RSA");

        specialinvoke r0.<android.security.keystore.AndroidKeyStoreProvider: void putKeyFactoryImpl(java.lang.String)>("EC");

        specialinvoke r0.<android.security.keystore.AndroidKeyStoreProvider: void putKeyFactoryImpl(java.lang.String)>("RSA");

        virtualinvoke r0.<android.security.keystore.AndroidKeyStoreProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("KeyGenerator.AES", "android.security.keystore.AndroidKeyStoreKeyGeneratorSpi$AES");

        virtualinvoke r0.<android.security.keystore.AndroidKeyStoreProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("KeyGenerator.HmacSHA1", "android.security.keystore.AndroidKeyStoreKeyGeneratorSpi$HmacSHA1");

        virtualinvoke r0.<android.security.keystore.AndroidKeyStoreProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("KeyGenerator.HmacSHA224", "android.security.keystore.AndroidKeyStoreKeyGeneratorSpi$HmacSHA224");

        virtualinvoke r0.<android.security.keystore.AndroidKeyStoreProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("KeyGenerator.HmacSHA256", "android.security.keystore.AndroidKeyStoreKeyGeneratorSpi$HmacSHA256");

        virtualinvoke r0.<android.security.keystore.AndroidKeyStoreProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("KeyGenerator.HmacSHA384", "android.security.keystore.AndroidKeyStoreKeyGeneratorSpi$HmacSHA384");

        virtualinvoke r0.<android.security.keystore.AndroidKeyStoreProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("KeyGenerator.HmacSHA512", "android.security.keystore.AndroidKeyStoreKeyGeneratorSpi$HmacSHA512");

        if z0 == 0 goto label1;

        virtualinvoke r0.<android.security.keystore.AndroidKeyStoreProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("KeyGenerator.DESede", "android.security.keystore.AndroidKeyStoreKeyGeneratorSpi$DESede");

     label1:
        specialinvoke r0.<android.security.keystore.AndroidKeyStoreProvider: void putSecretKeyFactoryImpl(java.lang.String)>("AES");

        if z0 == 0 goto label2;

        specialinvoke r0.<android.security.keystore.AndroidKeyStoreProvider: void putSecretKeyFactoryImpl(java.lang.String)>("DESede");

     label2:
        specialinvoke r0.<android.security.keystore.AndroidKeyStoreProvider: void putSecretKeyFactoryImpl(java.lang.String)>("HmacSHA1");

        specialinvoke r0.<android.security.keystore.AndroidKeyStoreProvider: void putSecretKeyFactoryImpl(java.lang.String)>("HmacSHA224");

        specialinvoke r0.<android.security.keystore.AndroidKeyStoreProvider: void putSecretKeyFactoryImpl(java.lang.String)>("HmacSHA256");

        specialinvoke r0.<android.security.keystore.AndroidKeyStoreProvider: void putSecretKeyFactoryImpl(java.lang.String)>("HmacSHA384");

        specialinvoke r0.<android.security.keystore.AndroidKeyStoreProvider: void putSecretKeyFactoryImpl(java.lang.String)>("HmacSHA512");

        return;
    }

    private static android.security.keystore.AndroidKeyStorePrivateKey getAndroidKeyStorePrivateKey(android.security.keystore.AndroidKeyStorePublicKey)
    {
        java.lang.String r0, $r1, $r2, $r7, $r9, $r13;
        boolean $z0, $z1;
        java.lang.StringBuilder $r3;
        java.security.ProviderException $r6;
        android.security.keystore.AndroidKeyStoreRSAPrivateKey $r8;
        int $i0, $i1;
        java.security.interfaces.RSAKey $r10;
        java.math.BigInteger $r11;
        android.security.keystore.AndroidKeyStoreECPrivateKey $r12;
        java.security.interfaces.ECKey $r14;
        java.security.spec.ECParameterSpec $r15;
        android.security.keystore.AndroidKeyStorePublicKey r16;

        r16 := @parameter0: android.security.keystore.AndroidKeyStorePublicKey;

        r0 = virtualinvoke r16.<android.security.keystore.AndroidKeyStorePublicKey: java.lang.String getAlgorithm()>();

        $r1 = "EC";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r0);

        if $z0 == 0 goto label1;

        $r12 = new android.security.keystore.AndroidKeyStoreECPrivateKey;

        $r13 = virtualinvoke r16.<android.security.keystore.AndroidKeyStorePublicKey: java.lang.String getAlias()>();

        $i1 = virtualinvoke r16.<android.security.keystore.AndroidKeyStorePublicKey: int getUid()>();

        $r14 = (java.security.interfaces.ECKey) r16;

        $r15 = interfaceinvoke $r14.<java.security.interfaces.ECKey: java.security.spec.ECParameterSpec getParams()>();

        specialinvoke $r12.<android.security.keystore.AndroidKeyStoreECPrivateKey: void <init>(java.lang.String,int,java.security.spec.ECParameterSpec)>($r13, $i1, $r15);

        return $r12;

     label1:
        $r2 = "RSA";

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r0);

        if $z1 == 0 goto label2;

        $r8 = new android.security.keystore.AndroidKeyStoreRSAPrivateKey;

        $r9 = virtualinvoke r16.<android.security.keystore.AndroidKeyStorePublicKey: java.lang.String getAlias()>();

        $i0 = virtualinvoke r16.<android.security.keystore.AndroidKeyStorePublicKey: int getUid()>();

        $r10 = (java.security.interfaces.RSAKey) r16;

        $r11 = interfaceinvoke $r10.<java.security.interfaces.RSAKey: java.math.BigInteger getModulus()>();

        specialinvoke $r8.<android.security.keystore.AndroidKeyStoreRSAPrivateKey: void <init>(java.lang.String,int,java.math.BigInteger)>($r9, $i0, $r11);

        return $r8;

     label2:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported Android Keystore public key algorithm: ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r6 = new java.security.ProviderException;

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.security.ProviderException: void <init>(java.lang.String)>($r7);

        throw $r6;
    }

    public static android.security.keystore.AndroidKeyStorePublicKey getAndroidKeyStorePublicKey(java.lang.String, int, java.lang.String, byte[])
    {
        int i0;
        java.lang.String r0, $r3, $r4, $r9, $r22, r23;
        java.security.KeyFactory r1;
        java.security.spec.X509EncodedKeySpec r2;
        boolean $z0, $z1;
        java.lang.StringBuilder $r5, $r17;
        java.security.ProviderException $r8, $r15, $r21;
        android.security.keystore.AndroidKeyStoreRSAPublicKey $r10;
        java.security.interfaces.RSAPublicKey $r11;
        android.security.keystore.AndroidKeyStoreECPublicKey $r12;
        java.security.interfaces.ECPublicKey $r13;
        java.lang.Throwable $r14, $r16;
        byte[] r24;
        java.security.PublicKey r25;

        r23 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r0 := @parameter2: java.lang.String;

        r24 := @parameter3: byte[];

     label1:
        r1 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(r0);

        r2 = new java.security.spec.X509EncodedKeySpec;

        specialinvoke r2.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>(r24);

        r25 = virtualinvoke r1.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>(r2);

     label2:
        $r3 = "EC";

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r0);

        if $z0 == 0 goto label3;

        $r12 = new android.security.keystore.AndroidKeyStoreECPublicKey;

        $r13 = (java.security.interfaces.ECPublicKey) r25;

        specialinvoke $r12.<android.security.keystore.AndroidKeyStoreECPublicKey: void <init>(java.lang.String,int,java.security.interfaces.ECPublicKey)>(r23, i0, $r13);

        return $r12;

     label3:
        $r4 = "RSA";

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r0);

        if $z1 == 0 goto label4;

        $r10 = new android.security.keystore.AndroidKeyStoreRSAPublicKey;

        $r11 = (java.security.interfaces.RSAPublicKey) r25;

        specialinvoke $r10.<android.security.keystore.AndroidKeyStoreRSAPublicKey: void <init>(java.lang.String,int,java.security.interfaces.RSAPublicKey)>(r23, i0, $r11);

        return $r10;

     label4:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported Android Keystore public key algorithm: ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r8 = new java.security.ProviderException;

        $r9 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.security.ProviderException: void <init>(java.lang.String)>($r9);

        throw $r8;

     label5:
        $r14 := @caughtexception;

        $r15 = new java.security.ProviderException;

        specialinvoke $r15.<java.security.ProviderException: void <init>(java.lang.String,java.lang.Throwable)>("Invalid X.509 encoding of public key", $r14);

        throw $r15;

     label6:
        $r16 := @caughtexception;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to obtain ");

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" KeyFactory");

        $r21 = new java.security.ProviderException;

        $r22 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r21.<java.security.ProviderException: void <init>(java.lang.String,java.lang.Throwable)>($r22, $r16);

        throw $r21;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label6;
        catch java.security.spec.InvalidKeySpecException from label1 to label2 with label5;
    }

    private static android.security.keymaster.KeyCharacteristics getKeyCharacteristics(android.security.KeyStore, java.lang.String, int) throws java.security.UnrecoverableKeyException, android.security.keystore.KeyPermanentlyInvalidatedException
    {
        android.security.KeyStore r0;
        java.lang.String r1;
        android.security.keymaster.KeyCharacteristics $r3;
        android.security.keystore.KeyPermanentlyInvalidatedException $r4;
        android.security.KeyStoreException $r5, $r7;
        java.security.UnrecoverableKeyException $r6, $r9;
        java.lang.Throwable $r8;
        int i0, i1;

        r0 := @parameter0: android.security.KeyStore;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $r3 = new android.security.keymaster.KeyCharacteristics;

        specialinvoke $r3.<android.security.keymaster.KeyCharacteristics: void <init>()>();

        i1 = virtualinvoke r0.<android.security.KeyStore: int getKeyCharacteristics(java.lang.String,android.security.keymaster.KeymasterBlob,android.security.keymaster.KeymasterBlob,int,android.security.keymaster.KeyCharacteristics)>(r1, null, null, i0, $r3);

        if i1 == 17 goto label2;

        if i1 != 1 goto label1;

        return $r3;

     label1:
        $r6 = new java.security.UnrecoverableKeyException;

        specialinvoke $r6.<java.security.UnrecoverableKeyException: void <init>(java.lang.String)>("Failed to obtain information about key");

        $r7 = staticinvoke <android.security.KeyStore: android.security.KeyStoreException getKeyStoreException(int)>(i1);

        $r8 = virtualinvoke $r6.<java.security.UnrecoverableKeyException: java.lang.Throwable initCause(java.lang.Throwable)>($r7);

        $r9 = (java.security.UnrecoverableKeyException) $r8;

        throw $r9;

     label2:
        $r4 = new android.security.keystore.KeyPermanentlyInvalidatedException;

        $r5 = staticinvoke <android.security.KeyStore: android.security.KeyStoreException getKeyStoreException(int)>(i1);

        specialinvoke $r4.<android.security.keystore.KeyPermanentlyInvalidatedException: void <init>(java.lang.String,java.lang.Throwable)>("User changed or deleted their auth credentials", $r5);

        throw $r4;
    }

    public static java.security.KeyStore getKeyStoreForUid(int) throws java.security.KeyStoreException, java.security.NoSuchProviderException
    {
        int i0;
        java.lang.Throwable $r0;
        java.lang.StringBuilder $r1;
        java.security.KeyStoreException $r4;
        java.lang.String $r5;
        java.security.KeyStore r6;
        android.security.keystore.AndroidKeyStoreLoadStoreParameter r7;

        i0 := @parameter0: int;

        r6 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String,java.lang.String)>("AndroidKeyStore", "AndroidKeyStore");

     label1:
        r7 = new android.security.keystore.AndroidKeyStoreLoadStoreParameter;

        specialinvoke r7.<android.security.keystore.AndroidKeyStoreLoadStoreParameter: void <init>(int)>(i0);

        virtualinvoke r6.<java.security.KeyStore: void load(java.security.KeyStore$LoadStoreParameter)>(r7);

     label2:
        return r6;

     label3:
        $r0 := @caughtexception;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to load AndroidKeyStore KeyStore for UID ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = new java.security.KeyStoreException;

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.security.KeyStoreException: void <init>(java.lang.String,java.lang.Throwable)>($r5, $r0);

        throw $r4;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label3;
        catch java.security.cert.CertificateException from label1 to label2 with label3;
        catch java.io.IOException from label1 to label2 with label3;
    }

    public static long getKeyStoreOperationHandle(java.lang.Object)
    {
        java.lang.Object r0, r20;
        boolean $z0, $z1, $z2, $z3;
        java.lang.StringBuilder $r2, $r10;
        java.lang.IllegalArgumentException $r6, $r15;
        java.lang.String $r7, $r16;
        javax.crypto.Cipher $r8;
        java.lang.IllegalStateException $r9;
        android.security.keystore.KeyStoreCryptoOperation $r17;
        long $l0;
        javax.crypto.Mac $r18;
        java.security.Signature $r19;

        r0 := @parameter0: java.lang.Object;

        if r0 == null goto label7;

        $z0 = r0 instanceof java.security.Signature;

        if $z0 == 0 goto label1;

        $r19 = (java.security.Signature) r0;

        r20 = virtualinvoke $r19.<java.security.Signature: java.security.SignatureSpi getCurrentSpi()>();

        goto label3;

     label1:
        $z1 = r0 instanceof javax.crypto.Mac;

        if $z1 == 0 goto label2;

        $r18 = (javax.crypto.Mac) r0;

        r20 = virtualinvoke $r18.<javax.crypto.Mac: javax.crypto.MacSpi getCurrentSpi()>();

        goto label3;

     label2:
        $z2 = r0 instanceof javax.crypto.Cipher;

        if $z2 == 0 goto label6;

        $r8 = (javax.crypto.Cipher) r0;

        r20 = virtualinvoke $r8.<javax.crypto.Cipher: javax.crypto.CipherSpi getCurrentSpi()>();

     label3:
        if r20 == null goto label5;

        $z3 = r20 instanceof android.security.keystore.KeyStoreCryptoOperation;

        if $z3 == 0 goto label4;

        $r17 = (android.security.keystore.KeyStoreCryptoOperation) r20;

        $l0 = interfaceinvoke $r17.<android.security.keystore.KeyStoreCryptoOperation: long getOperationHandle()>();

        return $l0;

     label4:
        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Crypto primitive not backed by AndroidKeyStore provider: ");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", spi: ");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r20);

        $r15 = new java.lang.IllegalArgumentException;

        $r16 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r16);

        throw $r15;

     label5:
        $r9 = new java.lang.IllegalStateException;

        specialinvoke $r9.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Crypto primitive not initialized");

        throw $r9;

     label6:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported crypto primitive: ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". Supported: Signature, Mac, Cipher");

        $r6 = new java.lang.IllegalArgumentException;

        $r7 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r6;

     label7:
        throw null;
    }

    public static void install()
    {
        int $i1, $i4, i6, i7;
        android.security.keystore.AndroidKeyStoreProvider $r0;
        android.security.keystore.AndroidKeyStoreBCWorkaroundProvider $r1;
        java.security.Provider $r2;
        java.lang.String $r3, $r4;
        boolean $z0;
        java.security.Provider[] r5;

        r5 = staticinvoke <java.security.Security: java.security.Provider[] getProviders()>();

        i6 = 0;

     label1:
        i7 = -1;

        $i1 = lengthof r5;

        if i6 >= $i1 goto label3;

        $r3 = "BC";

        $r2 = r5[i6];

        $r4 = virtualinvoke $r2.<java.security.Provider: java.lang.String getName()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label2;

        i7 = i6;

        goto label3;

     label2:
        i6 = i6 + 1;

        goto label1;

     label3:
        $r0 = new android.security.keystore.AndroidKeyStoreProvider;

        specialinvoke $r0.<android.security.keystore.AndroidKeyStoreProvider: void <init>()>();

        staticinvoke <java.security.Security: int addProvider(java.security.Provider)>($r0);

        $r1 = new android.security.keystore.AndroidKeyStoreBCWorkaroundProvider;

        specialinvoke $r1.<android.security.keystore.AndroidKeyStoreBCWorkaroundProvider: void <init>()>();

        if i7 == -1 goto label4;

        $i4 = i7 + 1;

        staticinvoke <java.security.Security: int insertProviderAt(java.security.Provider,int)>($r1, $i4);

        goto label5;

     label4:
        staticinvoke <java.security.Security: int addProvider(java.security.Provider)>($r1);

     label5:
        return;
    }

    public static android.security.keystore.AndroidKeyStoreKey loadAndroidKeyStoreKeyFromKeystore(android.security.KeyStore, java.lang.String, int) throws java.security.UnrecoverableKeyException, android.security.keystore.KeyPermanentlyInvalidatedException
    {
        android.security.KeyStore r0;
        java.lang.String r1;
        int i0, $i1, $i2, $i3, $i4, $i5;
        android.security.keymaster.KeyCharacteristics r2;
        java.lang.Integer r3;
        java.security.UnrecoverableKeyException $r4, $r6;
        android.security.keystore.AndroidKeyStorePrivateKey $r5;
        android.security.keystore.AndroidKeyStoreSecretKey $r7;

        r0 := @parameter0: android.security.KeyStore;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r2 = staticinvoke <android.security.keystore.AndroidKeyStoreProvider: android.security.keymaster.KeyCharacteristics getKeyCharacteristics(android.security.KeyStore,java.lang.String,int)>(r0, r1, i0);

        r3 = virtualinvoke r2.<android.security.keymaster.KeyCharacteristics: java.lang.Integer getEnum(int)>(268435458);

        if r3 == null goto label5;

        $i1 = virtualinvoke r3.<java.lang.Integer: int intValue()>();

        if $i1 == 128 goto label4;

        $i2 = virtualinvoke r3.<java.lang.Integer: int intValue()>();

        if $i2 == 32 goto label4;

        $i3 = virtualinvoke r3.<java.lang.Integer: int intValue()>();

        if $i3 != 33 goto label1;

        goto label4;

     label1:
        $i4 = virtualinvoke r3.<java.lang.Integer: int intValue()>();

        if $i4 == 1 goto label3;

        $i5 = virtualinvoke r3.<java.lang.Integer: int intValue()>();

        if $i5 != 3 goto label2;

        goto label3;

     label2:
        $r6 = new java.security.UnrecoverableKeyException;

        specialinvoke $r6.<java.security.UnrecoverableKeyException: void <init>(java.lang.String)>("Key algorithm unknown");

        throw $r6;

     label3:
        $r5 = staticinvoke <android.security.keystore.AndroidKeyStoreProvider: android.security.keystore.AndroidKeyStorePrivateKey loadAndroidKeyStorePrivateKeyFromKeystore(android.security.KeyStore,java.lang.String,int,android.security.keymaster.KeyCharacteristics)>(r0, r1, i0, r2);

        return $r5;

     label4:
        $r7 = staticinvoke <android.security.keystore.AndroidKeyStoreProvider: android.security.keystore.AndroidKeyStoreSecretKey loadAndroidKeyStoreSecretKeyFromKeystore(java.lang.String,int,android.security.keymaster.KeyCharacteristics)>(r1, i0, r2);

        return $r7;

     label5:
        $r4 = new java.security.UnrecoverableKeyException;

        specialinvoke $r4.<java.security.UnrecoverableKeyException: void <init>(java.lang.String)>("Key algorithm unknown");

        throw $r4;
    }

    public static java.security.KeyPair loadAndroidKeyStoreKeyPairFromKeystore(android.security.KeyStore, java.lang.String, int) throws java.security.UnrecoverableKeyException, android.security.keystore.KeyPermanentlyInvalidatedException
    {
        android.security.KeyStore r0;
        java.lang.String r1;
        int i0;
        android.security.keymaster.KeyCharacteristics $r2;
        java.security.KeyPair $r3;

        r0 := @parameter0: android.security.KeyStore;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $r2 = staticinvoke <android.security.keystore.AndroidKeyStoreProvider: android.security.keymaster.KeyCharacteristics getKeyCharacteristics(android.security.KeyStore,java.lang.String,int)>(r0, r1, i0);

        $r3 = staticinvoke <android.security.keystore.AndroidKeyStoreProvider: java.security.KeyPair loadAndroidKeyStoreKeyPairFromKeystore(android.security.KeyStore,java.lang.String,int,android.security.keymaster.KeyCharacteristics)>(r0, r1, i0, $r2);

        return $r3;
    }

    private static java.security.KeyPair loadAndroidKeyStoreKeyPairFromKeystore(android.security.KeyStore, java.lang.String, int, android.security.keymaster.KeyCharacteristics) throws java.security.UnrecoverableKeyException
    {
        java.lang.String r0;
        int i0;
        android.security.keymaster.KeyCharacteristics r1;
        java.security.KeyPair $r2;
        android.security.keystore.AndroidKeyStorePrivateKey $r3;
        android.security.KeyStore r4;
        android.security.keystore.AndroidKeyStorePublicKey r5;

        r4 := @parameter0: android.security.KeyStore;

        r0 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r1 := @parameter3: android.security.keymaster.KeyCharacteristics;

        r5 = staticinvoke <android.security.keystore.AndroidKeyStoreProvider: android.security.keystore.AndroidKeyStorePublicKey loadAndroidKeyStorePublicKeyFromKeystore(android.security.KeyStore,java.lang.String,int,android.security.keymaster.KeyCharacteristics)>(r4, r0, i0, r1);

        $r2 = new java.security.KeyPair;

        $r3 = staticinvoke <android.security.keystore.AndroidKeyStoreProvider: android.security.keystore.AndroidKeyStorePrivateKey getAndroidKeyStorePrivateKey(android.security.keystore.AndroidKeyStorePublicKey)>(r5);

        specialinvoke $r2.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>(r5, $r3);

        return $r2;
    }

    public static android.security.keystore.AndroidKeyStorePrivateKey loadAndroidKeyStorePrivateKeyFromKeystore(android.security.KeyStore, java.lang.String, int) throws java.security.UnrecoverableKeyException, android.security.keystore.KeyPermanentlyInvalidatedException
    {
        android.security.KeyStore r0;
        java.lang.String r1;
        int i0;
        android.security.keymaster.KeyCharacteristics $r2;
        android.security.keystore.AndroidKeyStorePrivateKey $r3;

        r0 := @parameter0: android.security.KeyStore;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $r2 = staticinvoke <android.security.keystore.AndroidKeyStoreProvider: android.security.keymaster.KeyCharacteristics getKeyCharacteristics(android.security.KeyStore,java.lang.String,int)>(r0, r1, i0);

        $r3 = staticinvoke <android.security.keystore.AndroidKeyStoreProvider: android.security.keystore.AndroidKeyStorePrivateKey loadAndroidKeyStorePrivateKeyFromKeystore(android.security.KeyStore,java.lang.String,int,android.security.keymaster.KeyCharacteristics)>(r0, r1, i0, $r2);

        return $r3;
    }

    private static android.security.keystore.AndroidKeyStorePrivateKey loadAndroidKeyStorePrivateKeyFromKeystore(android.security.KeyStore, java.lang.String, int, android.security.keymaster.KeyCharacteristics) throws java.security.UnrecoverableKeyException
    {
        android.security.KeyStore r0;
        java.lang.String r1;
        int i0;
        android.security.keymaster.KeyCharacteristics r2;
        java.security.KeyPair $r3;
        java.security.PrivateKey $r4;
        android.security.keystore.AndroidKeyStorePrivateKey $r5;

        r0 := @parameter0: android.security.KeyStore;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r2 := @parameter3: android.security.keymaster.KeyCharacteristics;

        $r3 = staticinvoke <android.security.keystore.AndroidKeyStoreProvider: java.security.KeyPair loadAndroidKeyStoreKeyPairFromKeystore(android.security.KeyStore,java.lang.String,int,android.security.keymaster.KeyCharacteristics)>(r0, r1, i0, r2);

        $r4 = virtualinvoke $r3.<java.security.KeyPair: java.security.PrivateKey getPrivate()>();

        $r5 = (android.security.keystore.AndroidKeyStorePrivateKey) $r4;

        return $r5;
    }

    public static android.security.keystore.AndroidKeyStorePublicKey loadAndroidKeyStorePublicKeyFromKeystore(android.security.KeyStore, java.lang.String, int) throws java.security.UnrecoverableKeyException, android.security.keystore.KeyPermanentlyInvalidatedException
    {
        android.security.KeyStore r0;
        java.lang.String r1;
        int i0;
        android.security.keymaster.KeyCharacteristics $r2;
        android.security.keystore.AndroidKeyStorePublicKey $r3;

        r0 := @parameter0: android.security.KeyStore;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $r2 = staticinvoke <android.security.keystore.AndroidKeyStoreProvider: android.security.keymaster.KeyCharacteristics getKeyCharacteristics(android.security.KeyStore,java.lang.String,int)>(r0, r1, i0);

        $r3 = staticinvoke <android.security.keystore.AndroidKeyStoreProvider: android.security.keystore.AndroidKeyStorePublicKey loadAndroidKeyStorePublicKeyFromKeystore(android.security.KeyStore,java.lang.String,int,android.security.keymaster.KeyCharacteristics)>(r0, r1, i0, $r2);

        return $r3;
    }

    private static android.security.keystore.AndroidKeyStorePublicKey loadAndroidKeyStorePublicKeyFromKeystore(android.security.KeyStore, java.lang.String, int, android.security.keymaster.KeyCharacteristics) throws java.security.UnrecoverableKeyException
    {
        java.lang.String r0, r16;
        int i0, $i1, $i2, $i3;
        java.security.UnrecoverableKeyException $r1, $r4, $r5, $r8, $r10;
        android.security.KeyStoreException $r2;
        java.lang.Throwable $r3, $r7, $r9;
        android.security.keystore.AndroidKeyStorePublicKey $r6;
        android.security.KeyStore r11;
        android.security.keymaster.KeyCharacteristics r12;
        android.security.keymaster.ExportResult r13;
        byte[] r14;
        java.lang.Integer r15;

        r11 := @parameter0: android.security.KeyStore;

        r0 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r12 := @parameter3: android.security.keymaster.KeyCharacteristics;

        r13 = virtualinvoke r11.<android.security.KeyStore: android.security.keymaster.ExportResult exportKey(java.lang.String,int,android.security.keymaster.KeymasterBlob,android.security.keymaster.KeymasterBlob,int)>(r0, 0, null, null, i0);

        $i1 = r13.<android.security.keymaster.ExportResult: int resultCode>;

        if $i1 != 1 goto label5;

        r14 = r13.<android.security.keymaster.ExportResult: byte[] exportData>;

        r15 = virtualinvoke r12.<android.security.keymaster.KeyCharacteristics: java.lang.Integer getEnum(int)>(268435458);

        if r15 == null goto label4;

     label1:
        $i3 = virtualinvoke r15.<java.lang.Integer: int intValue()>();

        r16 = staticinvoke <android.security.keystore.KeyProperties$KeyAlgorithm: java.lang.String fromKeymasterAsymmetricKeyAlgorithm(int)>($i3);

     label2:
        $r6 = staticinvoke <android.security.keystore.AndroidKeyStoreProvider: android.security.keystore.AndroidKeyStorePublicKey getAndroidKeyStorePublicKey(java.lang.String,int,java.lang.String,byte[])>(r0, i0, r16, r14);

        return $r6;

     label3:
        $r7 := @caughtexception;

        $r8 = new java.security.UnrecoverableKeyException;

        specialinvoke $r8.<java.security.UnrecoverableKeyException: void <init>(java.lang.String)>("Failed to load private key");

        $r9 = virtualinvoke $r8.<java.security.UnrecoverableKeyException: java.lang.Throwable initCause(java.lang.Throwable)>($r7);

        $r10 = (java.security.UnrecoverableKeyException) $r9;

        throw $r10;

     label4:
        $r5 = new java.security.UnrecoverableKeyException;

        specialinvoke $r5.<java.security.UnrecoverableKeyException: void <init>(java.lang.String)>("Key algorithm unknown");

        throw $r5;

     label5:
        $r1 = new java.security.UnrecoverableKeyException;

        specialinvoke $r1.<java.security.UnrecoverableKeyException: void <init>(java.lang.String)>("Failed to obtain X.509 form of public key");

        $i2 = r13.<android.security.keymaster.ExportResult: int resultCode>;

        $r2 = staticinvoke <android.security.KeyStore: android.security.KeyStoreException getKeyStoreException(int)>($i2);

        $r3 = virtualinvoke $r1.<java.security.UnrecoverableKeyException: java.lang.Throwable initCause(java.lang.Throwable)>($r2);

        $r4 = (java.security.UnrecoverableKeyException) $r3;

        throw $r4;

        catch java.lang.IllegalArgumentException from label1 to label2 with label3;
    }

    private static android.security.keystore.AndroidKeyStoreSecretKey loadAndroidKeyStoreSecretKeyFromKeystore(java.lang.String, int, android.security.keymaster.KeyCharacteristics) throws java.security.UnrecoverableKeyException
    {
        int i0, $i1, i2;
        java.lang.Integer r0, $r3;
        java.security.UnrecoverableKeyException $r1, $r6, $r8;
        boolean $z0;
        java.lang.Object $r2;
        android.security.keystore.AndroidKeyStoreSecretKey $r4;
        java.lang.Throwable $r5, $r7;
        java.lang.String r9, r12;
        android.security.keymaster.KeyCharacteristics r10;
        java.util.List r11;

        r9 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r10 := @parameter2: android.security.keymaster.KeyCharacteristics;

        r0 = virtualinvoke r10.<android.security.keymaster.KeyCharacteristics: java.lang.Integer getEnum(int)>(268435458);

        if r0 == null goto label5;

        r11 = virtualinvoke r10.<android.security.keymaster.KeyCharacteristics: java.util.List getEnums(int)>(536870917);

        $z0 = interfaceinvoke r11.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        i2 = -1;

        goto label2;

     label1:
        $r2 = interfaceinvoke r11.<java.util.List: java.lang.Object get(int)>(0);

        $r3 = (java.lang.Integer) $r2;

        i2 = virtualinvoke $r3.<java.lang.Integer: int intValue()>();

     label2:
        $i1 = virtualinvoke r0.<java.lang.Integer: int intValue()>();

        r12 = staticinvoke <android.security.keystore.KeyProperties$KeyAlgorithm: java.lang.String fromKeymasterSecretKeyAlgorithm(int,int)>($i1, i2);

     label3:
        $r4 = new android.security.keystore.AndroidKeyStoreSecretKey;

        specialinvoke $r4.<android.security.keystore.AndroidKeyStoreSecretKey: void <init>(java.lang.String,int,java.lang.String)>(r9, i0, r12);

        return $r4;

     label4:
        $r5 := @caughtexception;

        $r6 = new java.security.UnrecoverableKeyException;

        specialinvoke $r6.<java.security.UnrecoverableKeyException: void <init>(java.lang.String)>("Unsupported secret key type");

        $r7 = virtualinvoke $r6.<java.security.UnrecoverableKeyException: java.lang.Throwable initCause(java.lang.Throwable)>($r5);

        $r8 = (java.security.UnrecoverableKeyException) $r7;

        throw $r8;

     label5:
        $r1 = new java.security.UnrecoverableKeyException;

        specialinvoke $r1.<java.security.UnrecoverableKeyException: void <init>(java.lang.String)>("Key algorithm unknown");

        throw $r1;

        catch java.lang.IllegalArgumentException from label2 to label3 with label4;
    }

    private void putKeyFactoryImpl(java.lang.String)
    {
        android.security.keystore.AndroidKeyStoreProvider r0;
        java.lang.String r1, $r6;
        java.lang.StringBuilder $r3;

        r0 := @this: android.security.keystore.AndroidKeyStoreProvider;

        r1 := @parameter0: java.lang.String;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("KeyFactory.");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<android.security.keystore.AndroidKeyStoreProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, "android.security.keystore.AndroidKeyStoreKeyFactorySpi");

        return;
    }

    private void putSecretKeyFactoryImpl(java.lang.String)
    {
        android.security.keystore.AndroidKeyStoreProvider r0;
        java.lang.String r1, $r6;
        java.lang.StringBuilder $r3;

        r0 := @this: android.security.keystore.AndroidKeyStoreProvider;

        r1 := @parameter0: java.lang.String;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SecretKeyFactory.");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<android.security.keystore.AndroidKeyStoreProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, "android.security.keystore.AndroidKeyStoreSecretKeyFactorySpi");

        return;
    }

    public static void <clinit>()
    {
        <android.security.keystore.AndroidKeyStoreProvider: java.lang.String PROVIDER_NAME> = "AndroidKeyStore";

        <android.security.keystore.AndroidKeyStoreProvider: java.lang.String PACKAGE_NAME> = "android.security.keystore";

        <android.security.keystore.AndroidKeyStoreProvider: java.lang.String DESEDE_SYSTEM_PROPERTY> = "ro.hardware.keystore_desede";

        return;
    }
}
