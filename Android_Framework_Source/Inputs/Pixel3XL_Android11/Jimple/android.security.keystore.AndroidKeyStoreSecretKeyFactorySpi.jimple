public class android.security.keystore.AndroidKeyStoreSecretKeyFactorySpi extends javax.crypto.SecretKeyFactorySpi
{
    private final android.security.KeyStore mKeyStore;

    public void <init>()
    {
        android.security.keystore.AndroidKeyStoreSecretKeyFactorySpi r0;
        android.security.KeyStore $r1;

        r0 := @this: android.security.keystore.AndroidKeyStoreSecretKeyFactorySpi;

        specialinvoke r0.<javax.crypto.SecretKeyFactorySpi: void <init>()>();

        $r1 = staticinvoke <android.security.KeyStore: android.security.KeyStore getInstance()>();

        r0.<android.security.keystore.AndroidKeyStoreSecretKeyFactorySpi: android.security.KeyStore mKeyStore> = $r1;

        return;
    }

    private static java.math.BigInteger getGateKeeperSecureUserId() throws java.security.ProviderException
    {
        long $l0;
        java.lang.Throwable $r0;
        java.security.ProviderException $r1;
        java.math.BigInteger r2;

     label1:
        $l0 = staticinvoke <android.security.GateKeeper: long getSecureUserId()>();

        r2 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>($l0);

     label2:
        return r2;

     label3:
        $r0 := @caughtexception;

        $r1 = new java.security.ProviderException;

        specialinvoke $r1.<java.security.ProviderException: void <init>(java.lang.String,java.lang.Throwable)>("Failed to get GateKeeper secure user ID", $r0);

        throw $r1;

        catch java.lang.IllegalStateException from label1 to label2 with label3;
    }

    static android.security.keystore.KeyInfo getKeyInfo(android.security.KeyStore, java.lang.String, java.lang.String, int)
    {
        int i0, i1, i2, $i3, $i6, $i7, $i9, i10, i11, i12, i14, i15, $i17;
        java.lang.String[] r1, r2, $r20, $r22, r59, r60;
        java.util.Date r3, r4, r62;
        boolean z0, z1, z2, z3, $z4, $z5, $z6, $z7, z10, z11, z12, z13, z14;
        android.security.keymaster.KeyCharacteristics $r5;
        java.lang.StringBuilder $r6, $r28, r58, r69;
        java.security.ProviderException $r9, $r32, r57, r68, r70, r71, $r72;
        java.lang.String $r10, $r17, $r33, $r37, $r43, $r46, r49, r50;
        android.security.keymaster.KeymasterArguments $r11, $r12, $r13, $r26, $r27, $r38, $r63, $r64, $r65;
        byte $b4, $b5, $b8;
        java.util.List $r18, $r19, $r24, $r25, r61;
        java.lang.Object[] $r21, $r23;
        java.math.BigInteger $r34;
        java.lang.Object $r35;
        java.lang.Integer $r36;
        java.lang.Throwable $r39, $r40, $r44, $r45, $r47, r51;
        android.security.KeyStore r48;
        long l13, l16;
        java.util.ArrayList r52, r53;
        java.util.Iterator r54;
        android.security.keystore.KeyInfo $r66;

        r48 := @parameter0: android.security.KeyStore;

        r49 := @parameter1: java.lang.String;

        r50 := @parameter2: java.lang.String;

        i10 := @parameter3: int;

        $r5 = new android.security.keymaster.KeyCharacteristics;

        specialinvoke $r5.<android.security.keymaster.KeyCharacteristics: void <init>()>();

        i11 = virtualinvoke r48.<android.security.KeyStore: int getKeyCharacteristics(java.lang.String,android.security.keymaster.KeymasterBlob,android.security.keymaster.KeymasterBlob,int,android.security.keymaster.KeyCharacteristics)>(r50, null, null, i10, $r5);

        z10 = 1;

        if i11 != 1 goto label37;

     label01:
        $r11 = $r5.<android.security.keymaster.KeyCharacteristics: android.security.keymaster.KeymasterArguments hwEnforced>;

        z11 = virtualinvoke $r11.<android.security.keymaster.KeymasterArguments: boolean containsTag(int)>(268436158);

     label02:
        if z11 == 0 goto label06;

     label03:
        $r38 = $r5.<android.security.keymaster.KeyCharacteristics: android.security.keymaster.KeymasterArguments hwEnforced>;

        $i9 = virtualinvoke $r38.<android.security.keymaster.KeymasterArguments: int getEnum(int,int)>(268436158, -1);

        i12 = staticinvoke <android.security.keystore.KeyProperties$Origin: int fromKeymaster(int)>($i9);

     label04:
        z12 = 1;

        goto label08;

     label05:
        $r47 := @caughtexception;

        r51 = $r47;

        goto label36;

     label06:
        $r12 = $r5.<android.security.keymaster.KeyCharacteristics: android.security.keymaster.KeymasterArguments swEnforced>;

        $z4 = virtualinvoke $r12.<android.security.keymaster.KeymasterArguments: boolean containsTag(int)>(268436158);

        if $z4 == 0 goto label33;

        $r13 = $r5.<android.security.keymaster.KeyCharacteristics: android.security.keymaster.KeymasterArguments swEnforced>;

        $i3 = virtualinvoke $r13.<android.security.keymaster.KeymasterArguments: int getEnum(int,int)>(268436158, -1);

        i12 = staticinvoke <android.security.keystore.KeyProperties$Origin: int fromKeymaster(int)>($i3);

     label07:
        z12 = 0;

     label08:
        l13 = virtualinvoke $r5.<android.security.keymaster.KeyCharacteristics: long getUnsignedInt(int,long)>(805306371, -1L);

     label09:
        $b4 = l13 cmp -1L;

        if $b4 == 0 goto label32;

        $b5 = l13 cmp 2147483647L;

        if $b5 > 0 goto label31;

        i0 = (int) l13;

     label10:
        $r18 = virtualinvoke $r5.<android.security.keymaster.KeyCharacteristics: java.util.List getEnums(int)>(536870913);

        i1 = staticinvoke <android.security.keystore.KeyProperties$Purpose: int allFromKeymaster(java.util.Collection)>($r18);

        r52 = new java.util.ArrayList;

        specialinvoke r52.<java.util.ArrayList: void <init>()>();

        r53 = new java.util.ArrayList;

        specialinvoke r53.<java.util.ArrayList: void <init>()>();

        $r19 = virtualinvoke $r5.<android.security.keymaster.KeyCharacteristics: java.util.List getEnums(int)>(536870918);

        r54 = interfaceinvoke $r19.<java.util.List: java.util.Iterator iterator()>();

     label11:
        z13 = interfaceinvoke r54.<java.util.Iterator: boolean hasNext()>();

     label12:
        if z13 == 0 goto label21;

     label13:
        $r35 = interfaceinvoke r54.<java.util.Iterator: java.lang.Object next()>();

        $r36 = (java.lang.Integer) $r35;

        i14 = virtualinvoke $r36.<java.lang.Integer: int intValue()>();

     label14:
        $r37 = staticinvoke <android.security.keystore.KeyProperties$EncryptionPadding: java.lang.String fromKeymaster(int)>(i14);

        interfaceinvoke r52.<java.util.List: boolean add(java.lang.Object)>($r37);

     label15:
        goto label18;

     label16:
        $r45 := @caughtexception;

     label17:
        $r46 = staticinvoke <android.security.keystore.KeyProperties$SignaturePadding: java.lang.String fromKeymaster(int)>(i14);

        interfaceinvoke r53.<java.util.List: boolean add(java.lang.Object)>($r46);

     label18:
        goto label11;

     label19:
        $r40 := @caughtexception;

     label20:
        r57 = new java.security.ProviderException;

        r58 = new java.lang.StringBuilder;

        specialinvoke r58.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported encryption padding: ");

        virtualinvoke r58.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i14);

        $r43 = virtualinvoke r58.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r57.<java.security.ProviderException: void <init>(java.lang.String)>($r43);

        throw r57;

     label21:
        $i6 = interfaceinvoke r52.<java.util.List: int size()>();

        $r20 = newarray (java.lang.String)[$i6];

        $r21 = interfaceinvoke r52.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r20);

        r59 = (java.lang.String[]) $r21;

     label22:
        $i7 = interfaceinvoke r53.<java.util.List: int size()>();

        $r22 = newarray (java.lang.String)[$i7];

        $r23 = interfaceinvoke r53.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r22);

        r60 = (java.lang.String[]) $r23;

        $r24 = virtualinvoke $r5.<android.security.keymaster.KeyCharacteristics: java.util.List getEnums(int)>(536870917);

        r1 = staticinvoke <android.security.keystore.KeyProperties$Digest: java.lang.String[] allFromKeymaster(java.util.Collection)>($r24);

        $r25 = virtualinvoke $r5.<android.security.keymaster.KeyCharacteristics: java.util.List getEnums(int)>(536870916);

        r2 = staticinvoke <android.security.keystore.KeyProperties$BlockMode: java.lang.String[] allFromKeymaster(java.util.Collection)>($r25);

        $r26 = $r5.<android.security.keymaster.KeyCharacteristics: android.security.keymaster.KeymasterArguments swEnforced>;

        i2 = virtualinvoke $r26.<android.security.keymaster.KeymasterArguments: int getEnum(int,int)>(268435960, 0);

        $r27 = $r5.<android.security.keymaster.KeyCharacteristics: android.security.keymaster.KeymasterArguments hwEnforced>;

        i15 = virtualinvoke $r27.<android.security.keymaster.KeymasterArguments: int getEnum(int,int)>(268435960, 0);

        r61 = virtualinvoke $r5.<android.security.keymaster.KeyCharacteristics: java.util.List getUnsignedLongs(int)>(-1610612234);

     label23:
        r3 = virtualinvoke $r5.<android.security.keymaster.KeyCharacteristics: java.util.Date getDate(int)>(1610613136);

        r4 = virtualinvoke $r5.<android.security.keymaster.KeyCharacteristics: java.util.Date getDate(int)>(1610613137);

        r62 = virtualinvoke $r5.<android.security.keymaster.KeyCharacteristics: java.util.Date getDate(int)>(1610613138);

        $z5 = virtualinvoke $r5.<android.security.keymaster.KeyCharacteristics: boolean getBoolean(int)>(1879048695);

        z0 = $z5 ^ 1;

        l16 = virtualinvoke $r5.<android.security.keymaster.KeyCharacteristics: long getUnsignedInt(int,long)>(805306873, 0L);

        $b8 = l16 cmp 2147483647L;

        if $b8 > 0 goto label30;

        if z0 == 0 goto label24;

        if i15 == 0 goto label24;

        if i2 != 0 goto label24;

        z14 = 1;

        goto label25;

     label24:
        z14 = 0;

     label25:
        $r63 = $r5.<android.security.keymaster.KeyCharacteristics: android.security.keymaster.KeymasterArguments hwEnforced>;

        z1 = virtualinvoke $r63.<android.security.keymaster.KeymasterArguments: boolean getBoolean(int)>(1879048698);

        $r64 = $r5.<android.security.keymaster.KeyCharacteristics: android.security.keymaster.KeymasterArguments hwEnforced>;

        z2 = virtualinvoke $r64.<android.security.keymaster.KeymasterArguments: boolean getBoolean(int)>(1879048699);

        if i2 == 2 goto label27;

        if i15 != 2 goto label26;

        goto label27;

     label26:
        z10 = 0;

        goto label29;

     label27:
        if r61 == null goto label28;

        $z6 = interfaceinvoke r61.<java.util.List: boolean isEmpty()>();

        if $z6 != 0 goto label28;

        $r34 = staticinvoke <android.security.keystore.AndroidKeyStoreSecretKeyFactorySpi: java.math.BigInteger getGateKeeperSecureUserId()>();

        $z7 = interfaceinvoke r61.<java.util.List: boolean contains(java.lang.Object)>($r34);

        if $z7 != 0 goto label28;

        goto label29;

     label28:
        z10 = 0;

     label29:
        $r65 = $r5.<android.security.keymaster.KeyCharacteristics: android.security.keymaster.KeymasterArguments hwEnforced>;

        z3 = virtualinvoke $r65.<android.security.keymaster.KeymasterArguments: boolean getBoolean(int)>(1879048700);

        $r66 = new android.security.keystore.KeyInfo;

        $i17 = (int) l16;

        specialinvoke $r66.<android.security.keystore.KeyInfo: void <init>(java.lang.String,boolean,int,int,java.util.Date,java.util.Date,java.util.Date,int,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],boolean,int,int,boolean,boolean,boolean,boolean,boolean)>(r49, z12, i12, i0, r3, r4, r62, i1, r59, r60, r1, r2, z0, $i17, i15, z14, z1, z2, z10, z3);

        return $r66;

     label30:
        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("User authentication timeout validity too long: ");

        virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l16);

        virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" seconds");

        $r32 = new java.security.ProviderException;

        $r33 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r32.<java.security.ProviderException: void <init>(java.lang.String)>($r33);

        throw $r32;

     label31:
        r68 = new java.security.ProviderException;

        r69 = new java.lang.StringBuilder;

        specialinvoke r69.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Key too large: ");

        virtualinvoke r69.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l13);

        virtualinvoke r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" bits");

        $r17 = virtualinvoke r69.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r68.<java.security.ProviderException: void <init>(java.lang.String)>($r17);

        throw r68;

     label32:
        r70 = new java.security.ProviderException;

        specialinvoke r70.<java.security.ProviderException: void <init>(java.lang.String)>("Key size not available");

        throw r70;

     label33:
        r71 = new java.security.ProviderException;

        specialinvoke r71.<java.security.ProviderException: void <init>(java.lang.String)>("Key origin not available");

        throw r71;

     label34:
        $r39 := @caughtexception;

        r51 = $r39;

        goto label36;

     label35:
        $r44 := @caughtexception;

        r51 = $r44;

     label36:
        $r72 = new java.security.ProviderException;

        specialinvoke $r72.<java.security.ProviderException: void <init>(java.lang.String,java.lang.Throwable)>("Unsupported key characteristic", r51);

        throw $r72;

     label37:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to obtain information about key. Keystore error: ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i11);

        $r9 = new java.security.ProviderException;

        $r10 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.security.ProviderException: void <init>(java.lang.String)>($r10);

        throw $r9;

        catch java.lang.IllegalArgumentException from label01 to label02 with label35;
        catch java.lang.IllegalArgumentException from label03 to label04 with label05;
        catch java.lang.IllegalArgumentException from label06 to label07 with label35;
        catch java.lang.IllegalArgumentException from label08 to label09 with label35;
        catch java.lang.IllegalArgumentException from label10 to label11 with label35;
        catch java.lang.IllegalArgumentException from label11 to label12 with label35;
        catch java.lang.IllegalArgumentException from label13 to label14 with label05;
        catch java.lang.IllegalArgumentException from label14 to label15 with label16;
        catch java.lang.IllegalArgumentException from label17 to label18 with label19;
        catch java.lang.IllegalArgumentException from label20 to label21 with label05;
        catch java.lang.IllegalArgumentException from label21 to label22 with label35;
        catch java.lang.IllegalArgumentException from label22 to label23 with label35;
        catch java.lang.IllegalArgumentException from label31 to label32 with label34;
        catch java.lang.IllegalArgumentException from label32 to label33 with label34;
        catch java.lang.IllegalArgumentException from label33 to label34 with label34;
    }

    protected javax.crypto.SecretKey engineGenerateSecret(java.security.spec.KeySpec) throws java.security.spec.InvalidKeySpecException
    {
        android.security.keystore.AndroidKeyStoreSecretKeyFactorySpi r0;
        java.lang.StringBuilder $r1;
        java.lang.Class $r3;
        java.lang.String $r4, $r7;
        java.security.spec.InvalidKeySpecException $r6;
        java.security.spec.KeySpec r8;

        r0 := @this: android.security.keystore.AndroidKeyStoreSecretKeyFactorySpi;

        r8 := @parameter0: java.security.spec.KeySpec;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("To generate secret key in Android Keystore, use KeyGenerator initialized with ");

        $r3 = class "Landroid/security/keystore/KeyGenParameterSpec;";

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = new java.security.spec.InvalidKeySpecException;

        $r7 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.security.spec.InvalidKeySpecException: void <init>(java.lang.String)>($r7);

        throw $r6;
    }

    protected java.security.spec.KeySpec engineGetKeySpec(javax.crypto.SecretKey, java.lang.Class) throws java.security.spec.InvalidKeySpecException
    {
        android.security.keystore.AndroidKeyStoreSecretKeyFactorySpi r0;
        android.security.keystore.AndroidKeyStoreKey r1;
        java.security.spec.InvalidKeySpecException $r2, $r4, $r10, $r15, $r24;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.Class $r3, $r5, $r26, r28;
        java.lang.StringBuilder $r6, $r12, $r21;
        java.lang.String $r8, $r11, $r16, $r17, $r20, $r25, r30, r31, r32;
        int $i0, $i1, $i2;
        android.security.KeyStore $r18;
        android.security.keystore.KeyInfo $r19;
        javax.crypto.SecretKey r27;

        r0 := @this: android.security.keystore.AndroidKeyStoreSecretKeyFactorySpi;

        r27 := @parameter0: javax.crypto.SecretKey;

        r28 := @parameter1: java.lang.Class;

        if r28 == null goto label9;

        $z0 = r27 instanceof android.security.keystore.AndroidKeyStoreSecretKey;

        if $z0 != 0 goto label3;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Only Android KeyStore secret keys supported: ");

        if r27 == null goto label1;

        $r26 = virtualinvoke r27.<java.lang.Object: java.lang.Class getClass()>();

        r30 = virtualinvoke $r26.<java.lang.Class: java.lang.String getName()>();

        goto label2;

     label1:
        r30 = "null";

     label2:
        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r30);

        $r24 = new java.security.spec.InvalidKeySpecException;

        $r25 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r24.<java.security.spec.InvalidKeySpecException: void <init>(java.lang.String)>($r25);

        throw $r24;

     label3:
        $r3 = class "Ljavax/crypto/spec/SecretKeySpec;";

        $z1 = virtualinvoke $r3.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r28);

        if $z1 != 0 goto label8;

        $r5 = class "Landroid/security/keystore/KeyInfo;";

        $z2 = virtualinvoke $r5.<java.lang.Object: boolean equals(java.lang.Object)>(r28);

        if $z2 == 0 goto label7;

        r1 = (android.security.keystore.AndroidKeyStoreKey) r27;

        r31 = virtualinvoke r1.<android.security.keystore.AndroidKeyStoreKey: java.lang.String getAlias()>();

        $z3 = virtualinvoke r31.<java.lang.String: boolean startsWith(java.lang.String)>("USRPKEY_");

        if $z3 == 0 goto label4;

        $r20 = "USRPKEY_";

        $i2 = virtualinvoke $r20.<java.lang.String: int length()>();

        r32 = virtualinvoke r31.<java.lang.String: java.lang.String substring(int)>($i2);

        goto label5;

     label4:
        $z4 = virtualinvoke r31.<java.lang.String: boolean startsWith(java.lang.String)>("USRSKEY_");

        if $z4 == 0 goto label6;

        $r17 = "USRSKEY_";

        $i0 = virtualinvoke $r17.<java.lang.String: int length()>();

        r32 = virtualinvoke r31.<java.lang.String: java.lang.String substring(int)>($i0);

     label5:
        $r18 = r0.<android.security.keystore.AndroidKeyStoreSecretKeyFactorySpi: android.security.KeyStore mKeyStore>;

        $i1 = virtualinvoke r1.<android.security.keystore.AndroidKeyStoreKey: int getUid()>();

        $r19 = staticinvoke <android.security.keystore.AndroidKeyStoreSecretKeyFactorySpi: android.security.keystore.KeyInfo getKeyInfo(android.security.KeyStore,java.lang.String,java.lang.String,int)>($r18, r32, r31, $i1);

        return $r19;

     label6:
        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid key alias: ");

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r31);

        $r15 = new java.security.spec.InvalidKeySpecException;

        $r16 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<java.security.spec.InvalidKeySpecException: void <init>(java.lang.String)>($r16);

        throw $r15;

     label7:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported key spec: ");

        $r8 = virtualinvoke r28.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = new java.security.spec.InvalidKeySpecException;

        $r11 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.security.spec.InvalidKeySpecException: void <init>(java.lang.String)>($r11);

        throw $r10;

     label8:
        $r4 = new java.security.spec.InvalidKeySpecException;

        specialinvoke $r4.<java.security.spec.InvalidKeySpecException: void <init>(java.lang.String)>("Key material export of Android KeyStore keys is not supported");

        throw $r4;

     label9:
        $r2 = new java.security.spec.InvalidKeySpecException;

        specialinvoke $r2.<java.security.spec.InvalidKeySpecException: void <init>(java.lang.String)>("keySpecClass == null");

        throw $r2;
    }

    protected javax.crypto.SecretKey engineTranslateKey(javax.crypto.SecretKey) throws java.security.InvalidKeyException
    {
        android.security.keystore.AndroidKeyStoreSecretKeyFactorySpi r0;
        javax.crypto.SecretKey r1;
        java.security.InvalidKeyException $r2, $r3;
        boolean $z0;

        r0 := @this: android.security.keystore.AndroidKeyStoreSecretKeyFactorySpi;

        r1 := @parameter0: javax.crypto.SecretKey;

        if r1 == null goto label2;

        $z0 = r1 instanceof android.security.keystore.AndroidKeyStoreSecretKey;

        if $z0 == 0 goto label1;

        return r1;

     label1:
        $r3 = new java.security.InvalidKeyException;

        specialinvoke $r3.<java.security.InvalidKeyException: void <init>(java.lang.String)>("To import a secret key into Android Keystore, use KeyStore.setEntry");

        throw $r3;

     label2:
        $r2 = new java.security.InvalidKeyException;

        specialinvoke $r2.<java.security.InvalidKeyException: void <init>(java.lang.String)>("key == null");

        throw $r2;
    }
}
