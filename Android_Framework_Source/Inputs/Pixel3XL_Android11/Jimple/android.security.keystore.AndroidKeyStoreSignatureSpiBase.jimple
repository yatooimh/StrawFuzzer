abstract class android.security.keystore.AndroidKeyStoreSignatureSpiBase extends java.security.SignatureSpi implements android.security.keystore.KeyStoreCryptoOperation
{
    private java.lang.Exception mCachedException;
    private android.security.keystore.AndroidKeyStoreKey mKey;
    private final android.security.KeyStore mKeyStore;
    private android.security.keystore.KeyStoreCryptoOperationStreamer mMessageStreamer;
    private long mOperationHandle;
    private android.os.IBinder mOperationToken;
    private boolean mSigning;

    void <init>()
    {
        android.security.keystore.AndroidKeyStoreSignatureSpiBase r0;
        android.security.KeyStore $r1;

        r0 := @this: android.security.keystore.AndroidKeyStoreSignatureSpiBase;

        specialinvoke r0.<java.security.SignatureSpi: void <init>()>();

        $r1 = staticinvoke <android.security.KeyStore: android.security.KeyStore getInstance()>();

        r0.<android.security.keystore.AndroidKeyStoreSignatureSpiBase: android.security.KeyStore mKeyStore> = $r1;

        return;
    }

    private void ensureKeystoreOperationInitialized() throws java.security.InvalidKeyException
    {
        android.security.keystore.AndroidKeyStoreSignatureSpiBase r0;
        java.lang.String r1;
        android.security.keystore.KeyStoreCryptoOperationStreamer $r2, $r18;
        java.lang.Exception $r3;
        android.security.keystore.AndroidKeyStoreKey $r4, $r7, $r8, $r11;
        java.lang.IllegalStateException $r5;
        android.security.keymaster.KeymasterArguments $r6;
        boolean $z0;
        int $i0, $i2;
        android.security.keystore.KeyStoreConnectException $r9;
        android.os.IBinder $r10, $r13, $r16;
        long $l1, $l3;
        android.security.KeyStore $r12, $r17, r20;
        java.security.ProviderException $r14, $r15;
        byte $b4, b5;
        android.security.keymaster.OperationResult r21;
        java.security.InvalidKeyException r22;

        r0 := @this: android.security.keystore.AndroidKeyStoreSignatureSpiBase;

        $r2 = r0.<android.security.keystore.AndroidKeyStoreSignatureSpiBase: android.security.keystore.KeyStoreCryptoOperationStreamer mMessageStreamer>;

        if $r2 == null goto label1;

        return;

     label1:
        $r3 = r0.<android.security.keystore.AndroidKeyStoreSignatureSpiBase: java.lang.Exception mCachedException>;

        if $r3 == null goto label2;

        return;

     label2:
        $r4 = r0.<android.security.keystore.AndroidKeyStoreSignatureSpiBase: android.security.keystore.AndroidKeyStoreKey mKey>;

        if $r4 == null goto label9;

        $r6 = new android.security.keymaster.KeymasterArguments;

        specialinvoke $r6.<android.security.keymaster.KeymasterArguments: void <init>()>();

        virtualinvoke r0.<android.security.keystore.AndroidKeyStoreSignatureSpiBase: void addAlgorithmSpecificParametersToBegin(android.security.keymaster.KeymasterArguments)>($r6);

        r20 = r0.<android.security.keystore.AndroidKeyStoreSignatureSpiBase: android.security.KeyStore mKeyStore>;

        $r7 = r0.<android.security.keystore.AndroidKeyStoreSignatureSpiBase: android.security.keystore.AndroidKeyStoreKey mKey>;

        r1 = virtualinvoke $r7.<android.security.keystore.AndroidKeyStoreKey: java.lang.String getAlias()>();

        $z0 = r0.<android.security.keystore.AndroidKeyStoreSignatureSpiBase: boolean mSigning>;

        if $z0 == 0 goto label3;

        b5 = 2;

        goto label4;

     label3:
        b5 = 3;

     label4:
        $r8 = r0.<android.security.keystore.AndroidKeyStoreSignatureSpiBase: android.security.keystore.AndroidKeyStoreKey mKey>;

        $i0 = virtualinvoke $r8.<android.security.keystore.AndroidKeyStoreKey: int getUid()>();

        r21 = virtualinvoke r20.<android.security.KeyStore: android.security.keymaster.OperationResult begin(java.lang.String,int,boolean,android.security.keymaster.KeymasterArguments,byte[],int)>(r1, b5, 1, $r6, null, $i0);

        if r21 == null goto label8;

        $r10 = r21.<android.security.keymaster.OperationResult: android.os.IBinder token>;

        r0.<android.security.keystore.AndroidKeyStoreSignatureSpiBase: android.os.IBinder mOperationToken> = $r10;

        $l1 = r21.<android.security.keymaster.OperationResult: long operationHandle>;

        r0.<android.security.keystore.AndroidKeyStoreSignatureSpiBase: long mOperationHandle> = $l1;

        $r12 = r0.<android.security.keystore.AndroidKeyStoreSignatureSpiBase: android.security.KeyStore mKeyStore>;

        $r11 = r0.<android.security.keystore.AndroidKeyStoreSignatureSpiBase: android.security.keystore.AndroidKeyStoreKey mKey>;

        $i2 = r21.<android.security.keymaster.OperationResult: int resultCode>;

        r22 = staticinvoke <android.security.keystore.KeyStoreCryptoOperationUtils: java.security.InvalidKeyException getInvalidKeyExceptionForInit(android.security.KeyStore,android.security.keystore.AndroidKeyStoreKey,int)>($r12, $r11, $i2);

        if r22 != null goto label7;

        $r13 = r0.<android.security.keystore.AndroidKeyStoreSignatureSpiBase: android.os.IBinder mOperationToken>;

        if $r13 == null goto label6;

        $l3 = r0.<android.security.keystore.AndroidKeyStoreSignatureSpiBase: long mOperationHandle>;

        $b4 = $l3 cmp 0L;

        if $b4 == 0 goto label5;

        $r17 = r0.<android.security.keystore.AndroidKeyStoreSignatureSpiBase: android.security.KeyStore mKeyStore>;

        $r16 = r21.<android.security.keymaster.OperationResult: android.os.IBinder token>;

        $r18 = virtualinvoke r0.<android.security.keystore.AndroidKeyStoreSignatureSpiBase: android.security.keystore.KeyStoreCryptoOperationStreamer createMainDataStreamer(android.security.KeyStore,android.os.IBinder)>($r17, $r16);

        r0.<android.security.keystore.AndroidKeyStoreSignatureSpiBase: android.security.keystore.KeyStoreCryptoOperationStreamer mMessageStreamer> = $r18;

        return;

     label5:
        $r15 = new java.security.ProviderException;

        specialinvoke $r15.<java.security.ProviderException: void <init>(java.lang.String)>("Keystore returned invalid operation handle");

        throw $r15;

     label6:
        $r14 = new java.security.ProviderException;

        specialinvoke $r14.<java.security.ProviderException: void <init>(java.lang.String)>("Keystore returned null operation token");

        throw $r14;

     label7:
        throw r22;

     label8:
        $r9 = new android.security.keystore.KeyStoreConnectException;

        specialinvoke $r9.<android.security.keystore.KeyStoreConnectException: void <init>()>();

        throw $r9;

     label9:
        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Not initialized");

        throw $r5;
    }

    protected abstract void addAlgorithmSpecificParametersToBegin(android.security.keymaster.KeymasterArguments);

    protected android.security.keystore.KeyStoreCryptoOperationStreamer createMainDataStreamer(android.security.KeyStore, android.os.IBinder)
    {
        android.security.keystore.AndroidKeyStoreSignatureSpiBase r0;
        android.security.KeyStore r1;
        android.os.IBinder r2;
        android.security.keystore.KeyStoreCryptoOperationChunkedStreamer $r3;
        android.security.keystore.KeyStoreCryptoOperationChunkedStreamer$MainDataStream $r4;

        r0 := @this: android.security.keystore.AndroidKeyStoreSignatureSpiBase;

        r1 := @parameter0: android.security.KeyStore;

        r2 := @parameter1: android.os.IBinder;

        $r3 = new android.security.keystore.KeyStoreCryptoOperationChunkedStreamer;

        $r4 = new android.security.keystore.KeyStoreCryptoOperationChunkedStreamer$MainDataStream;

        specialinvoke $r4.<android.security.keystore.KeyStoreCryptoOperationChunkedStreamer$MainDataStream: void <init>(android.security.KeyStore,android.os.IBinder)>(r1, r2);

        specialinvoke $r3.<android.security.keystore.KeyStoreCryptoOperationChunkedStreamer: void <init>(android.security.keystore.KeyStoreCryptoOperationChunkedStreamer$Stream)>($r4);

        return $r3;
    }

    protected final java.lang.Object engineGetParameter(java.lang.String) throws java.security.InvalidParameterException
    {
        android.security.keystore.AndroidKeyStoreSignatureSpiBase r0;
        java.lang.String r1;
        java.security.InvalidParameterException $r2;

        r0 := @this: android.security.keystore.AndroidKeyStoreSignatureSpiBase;

        r1 := @parameter0: java.lang.String;

        $r2 = new java.security.InvalidParameterException;

        specialinvoke $r2.<java.security.InvalidParameterException: void <init>()>();

        throw $r2;
    }

    protected final void engineInitSign(java.security.PrivateKey) throws java.security.InvalidKeyException
    {
        android.security.keystore.AndroidKeyStoreSignatureSpiBase r0;
        java.security.PrivateKey r1;

        r0 := @this: android.security.keystore.AndroidKeyStoreSignatureSpiBase;

        r1 := @parameter0: java.security.PrivateKey;

        virtualinvoke r0.<android.security.keystore.AndroidKeyStoreSignatureSpiBase: void engineInitSign(java.security.PrivateKey,java.security.SecureRandom)>(r1, null);

        return;
    }

    protected final void engineInitSign(java.security.PrivateKey, java.security.SecureRandom) throws java.security.InvalidKeyException
    {
        android.security.keystore.AndroidKeyStoreSignatureSpiBase r0;
        java.lang.StringBuilder r1;
        boolean $z0;
        java.lang.String $r4;
        java.lang.Throwable $r5;
        java.security.PrivateKey r6;
        java.security.SecureRandom r7;
        android.security.keystore.AndroidKeyStoreKey r8;
        java.security.InvalidKeyException r9, r11;

        r0 := @this: android.security.keystore.AndroidKeyStoreSignatureSpiBase;

        r6 := @parameter0: java.security.PrivateKey;

        r7 := @parameter1: java.security.SecureRandom;

        virtualinvoke r0.<android.security.keystore.AndroidKeyStoreSignatureSpiBase: void resetAll()>();

        if r6 == null goto label6;

     label1:
        $z0 = r6 instanceof android.security.keystore.AndroidKeyStorePrivateKey;

        if $z0 == 0 goto label4;

        r8 = (android.security.keystore.AndroidKeyStoreKey) r6;

        r0.<android.security.keystore.AndroidKeyStoreSignatureSpiBase: boolean mSigning> = 1;

        virtualinvoke r0.<android.security.keystore.AndroidKeyStoreSignatureSpiBase: void initKey(android.security.keystore.AndroidKeyStoreKey)>(r8);

        r0.<android.security.keystore.AndroidKeyStoreSignatureSpiBase: java.security.SecureRandom appRandom> = r7;

        specialinvoke r0.<android.security.keystore.AndroidKeyStoreSignatureSpiBase: void ensureKeystoreOperationInitialized()>();

     label2:
        goto label3;

     label3:
        return;

     label4:
        r9 = new java.security.InvalidKeyException;

        r1 = new java.lang.StringBuilder;

        specialinvoke r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported private key type: ");

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r6);

        $r4 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r9.<java.security.InvalidKeyException: void <init>(java.lang.String)>($r4);

        throw r9;

     label5:
        $r5 := @caughtexception;

        goto label7;

     label6:
        r11 = new java.security.InvalidKeyException;

        specialinvoke r11.<java.security.InvalidKeyException: void <init>(java.lang.String)>("Unsupported key: null");

        throw r11;

     label7:
        virtualinvoke r0.<android.security.keystore.AndroidKeyStoreSignatureSpiBase: void resetAll()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label4 to label5 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    protected final void engineInitVerify(java.security.PublicKey) throws java.security.InvalidKeyException
    {
        android.security.keystore.AndroidKeyStoreSignatureSpiBase r0;
        java.security.InvalidKeyException r1, r10;
        java.lang.StringBuilder r2;
        boolean $z0;
        java.lang.String $r5;
        java.lang.Throwable $r6;
        java.security.PublicKey r7;
        android.security.keystore.AndroidKeyStorePublicKey r8;

        r0 := @this: android.security.keystore.AndroidKeyStoreSignatureSpiBase;

        r7 := @parameter0: java.security.PublicKey;

        virtualinvoke r0.<android.security.keystore.AndroidKeyStoreSignatureSpiBase: void resetAll()>();

        if r7 == null goto label6;

     label1:
        $z0 = r7 instanceof android.security.keystore.AndroidKeyStorePublicKey;

        if $z0 == 0 goto label4;

        r8 = (android.security.keystore.AndroidKeyStorePublicKey) r7;

        r0.<android.security.keystore.AndroidKeyStoreSignatureSpiBase: boolean mSigning> = 0;

        virtualinvoke r0.<android.security.keystore.AndroidKeyStoreSignatureSpiBase: void initKey(android.security.keystore.AndroidKeyStoreKey)>(r8);

        r0.<android.security.keystore.AndroidKeyStoreSignatureSpiBase: java.security.SecureRandom appRandom> = null;

        specialinvoke r0.<android.security.keystore.AndroidKeyStoreSignatureSpiBase: void ensureKeystoreOperationInitialized()>();

     label2:
        goto label3;

     label3:
        return;

     label4:
        r1 = new java.security.InvalidKeyException;

        r2 = new java.lang.StringBuilder;

        specialinvoke r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported public key type: ");

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r7);

        $r5 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r1.<java.security.InvalidKeyException: void <init>(java.lang.String)>($r5);

        throw r1;

     label5:
        $r6 := @caughtexception;

        goto label7;

     label6:
        r10 = new java.security.InvalidKeyException;

        specialinvoke r10.<java.security.InvalidKeyException: void <init>(java.lang.String)>("Unsupported key: null");

        throw r10;

     label7:
        virtualinvoke r0.<android.security.keystore.AndroidKeyStoreSignatureSpiBase: void resetAll()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label4 to label5 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    protected final void engineSetParameter(java.lang.String, java.lang.Object) throws java.security.InvalidParameterException
    {
        android.security.keystore.AndroidKeyStoreSignatureSpiBase r0;
        java.lang.String r1;
        java.lang.Object r2;
        java.security.InvalidParameterException $r3;

        r0 := @this: android.security.keystore.AndroidKeyStoreSignatureSpiBase;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        $r3 = new java.security.InvalidParameterException;

        specialinvoke $r3.<java.security.InvalidParameterException: void <init>()>();

        throw $r3;
    }

    protected final int engineSign(byte[], int, int) throws java.security.SignatureException
    {
        android.security.keystore.AndroidKeyStoreSignatureSpiBase r0;
        byte[] r1;
        int i0, i1, $i2;

        r0 := @this: android.security.keystore.AndroidKeyStoreSignatureSpiBase;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $i2 = specialinvoke r0.<java.security.SignatureSpi: int engineSign(byte[],int,int)>(r1, i0, i1);

        return $i2;
    }

    protected final byte[] engineSign() throws java.security.SignatureException
    {
        android.security.keystore.AndroidKeyStoreSignatureSpiBase r0;
        java.lang.Exception $r1, $r3;
        java.security.SignatureException $r2, $r8;
        java.security.SecureRandom $r4;
        int $i0;
        byte[] $r5, r9, r10;
        android.security.keystore.KeyStoreCryptoOperationStreamer $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.security.keystore.AndroidKeyStoreSignatureSpiBase;

        $r1 = r0.<android.security.keystore.AndroidKeyStoreSignatureSpiBase: java.lang.Exception mCachedException>;

        if $r1 != null goto label4;

     label1:
        specialinvoke r0.<android.security.keystore.AndroidKeyStoreSignatureSpiBase: void ensureKeystoreOperationInitialized()>();

        $r4 = r0.<android.security.keystore.AndroidKeyStoreSignatureSpiBase: java.security.SecureRandom appRandom>;

        $i0 = virtualinvoke r0.<android.security.keystore.AndroidKeyStoreSignatureSpiBase: int getAdditionalEntropyAmountForSign()>();

        r9 = staticinvoke <android.security.keystore.KeyStoreCryptoOperationUtils: byte[] getRandomBytesToMixIntoKeystoreRng(java.security.SecureRandom,int)>($r4, $i0);

        $r6 = r0.<android.security.keystore.AndroidKeyStoreSignatureSpiBase: android.security.keystore.KeyStoreCryptoOperationStreamer mMessageStreamer>;

        $r5 = <libcore.util.EmptyArray: byte[] BYTE>;

        r10 = interfaceinvoke $r6.<android.security.keystore.KeyStoreCryptoOperationStreamer: byte[] doFinal(byte[],int,int,byte[],byte[])>($r5, 0, 0, null, r9);

     label2:
        virtualinvoke r0.<android.security.keystore.AndroidKeyStoreSignatureSpiBase: void resetWhilePreservingInitState()>();

        return r10;

     label3:
        $r7 := @caughtexception;

        $r8 = new java.security.SignatureException;

        specialinvoke $r8.<java.security.SignatureException: void <init>(java.lang.Throwable)>($r7);

        throw $r8;

     label4:
        $r2 = new java.security.SignatureException;

        $r3 = r0.<android.security.keystore.AndroidKeyStoreSignatureSpiBase: java.lang.Exception mCachedException>;

        specialinvoke $r2.<java.security.SignatureException: void <init>(java.lang.Throwable)>($r3);

        throw $r2;

        catch java.security.InvalidKeyException from label1 to label2 with label3;
        catch android.security.KeyStoreException from label1 to label2 with label3;
    }

    protected final void engineUpdate(byte) throws java.security.SignatureException
    {
        android.security.keystore.AndroidKeyStoreSignatureSpiBase r0;
        byte b0;
        byte[] $r1;

        r0 := @this: android.security.keystore.AndroidKeyStoreSignatureSpiBase;

        b0 := @parameter0: byte;

        $r1 = newarray (byte)[1];

        $r1[0] = b0;

        virtualinvoke r0.<android.security.keystore.AndroidKeyStoreSignatureSpiBase: void engineUpdate(byte[],int,int)>($r1, 0, 1);

        return;
    }

    protected final void engineUpdate(java.nio.ByteBuffer)
    {
        android.security.keystore.AndroidKeyStoreSignatureSpiBase r0;
        int i0, $i1, $i2, $i3, i4;
        boolean $z0;
        java.lang.Throwable $r3;
        java.nio.ByteBuffer r4;
        byte[] r5, r6, r7;
        java.lang.Exception r9;

        r0 := @this: android.security.keystore.AndroidKeyStoreSignatureSpiBase;

        r4 := @parameter0: java.nio.ByteBuffer;

        i0 = virtualinvoke r4.<java.nio.ByteBuffer: int remaining()>();

        $z0 = virtualinvoke r4.<java.nio.ByteBuffer: boolean hasArray()>();

        if $z0 == 0 goto label1;

        r5 = virtualinvoke r4.<java.nio.ByteBuffer: byte[] array()>();

        $i1 = virtualinvoke r4.<java.nio.ByteBuffer: int arrayOffset()>();

        $i2 = virtualinvoke r4.<java.nio.ByteBuffer: int position()>();

        i4 = $i1 + $i2;

        $i3 = virtualinvoke r4.<java.nio.ByteBuffer: int limit()>();

        virtualinvoke r4.<java.nio.ByteBuffer: java.nio.Buffer position(int)>($i3);

        r6 = r5;

        goto label2;

     label1:
        r7 = newarray (byte)[i0];

        i4 = 0;

        virtualinvoke r4.<java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[])>(r7);

        r6 = r7;

     label2:
        virtualinvoke r0.<android.security.keystore.AndroidKeyStoreSignatureSpiBase: void engineUpdate(byte[],int,int)>(r6, i4, i0);

     label3:
        goto label5;

     label4:
        $r3 := @caughtexception;

        r9 = (java.lang.Exception) $r3;

        r0.<android.security.keystore.AndroidKeyStoreSignatureSpiBase: java.lang.Exception mCachedException> = r9;

     label5:
        return;

        catch java.security.SignatureException from label2 to label3 with label4;
    }

    protected final void engineUpdate(byte[], int, int) throws java.security.SignatureException
    {
        android.security.keystore.AndroidKeyStoreSignatureSpiBase r0;
        int i0, i1, $i2, $i3;
        java.lang.Exception $r2, $r4;
        java.security.SignatureException $r3, $r13, $r15;
        android.security.keystore.KeyStoreCryptoOperationStreamer $r5;
        java.lang.StringBuilder $r6;
        java.security.ProviderException $r10;
        java.lang.String $r11;
        android.security.KeyStoreException $r12;
        java.lang.Throwable $r14;
        byte[] r16, r17;

        r0 := @this: android.security.keystore.AndroidKeyStoreSignatureSpiBase;

        r16 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<android.security.keystore.AndroidKeyStoreSignatureSpiBase: java.lang.Exception mCachedException>;

        if $r2 != null goto label8;

     label1:
        specialinvoke r0.<android.security.keystore.AndroidKeyStoreSignatureSpiBase: void ensureKeystoreOperationInitialized()>();

     label2:
        if i1 != 0 goto label3;

        return;

     label3:
        $r5 = r0.<android.security.keystore.AndroidKeyStoreSignatureSpiBase: android.security.keystore.KeyStoreCryptoOperationStreamer mMessageStreamer>;

        r17 = interfaceinvoke $r5.<android.security.keystore.KeyStoreCryptoOperationStreamer: byte[] update(byte[],int,int)>(r16, i0, i1);

     label4:
        $i2 = lengthof r17;

        if $i2 != 0 goto label5;

        return;

     label5:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Update operation unexpectedly produced output: ");

        $i3 = lengthof r17;

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" bytes");

        $r10 = new java.security.ProviderException;

        $r11 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.security.ProviderException: void <init>(java.lang.String)>($r11);

        throw $r10;

     label6:
        $r12 := @caughtexception;

        $r13 = new java.security.SignatureException;

        specialinvoke $r13.<java.security.SignatureException: void <init>(java.lang.Throwable)>($r12);

        throw $r13;

     label7:
        $r14 := @caughtexception;

        $r15 = new java.security.SignatureException;

        specialinvoke $r15.<java.security.SignatureException: void <init>(java.lang.Throwable)>($r14);

        throw $r15;

     label8:
        $r3 = new java.security.SignatureException;

        $r4 = r0.<android.security.keystore.AndroidKeyStoreSignatureSpiBase: java.lang.Exception mCachedException>;

        specialinvoke $r3.<java.security.SignatureException: void <init>(java.lang.Throwable)>($r4);

        throw $r3;

        catch java.security.InvalidKeyException from label1 to label2 with label7;
        catch android.security.KeyStoreException from label3 to label4 with label6;
    }

    protected final boolean engineVerify(byte[]) throws java.security.SignatureException
    {
        android.security.keystore.AndroidKeyStoreSignatureSpiBase r0;
        java.security.ProviderException r1;
        java.lang.StringBuilder r2;
        java.lang.Exception $r3, $r5;
        java.security.SignatureException $r4, $r13, $r15;
        byte[] $r6, r16, r17;
        android.security.keystore.KeyStoreCryptoOperationStreamer $r7;
        int $i0, $i1, $i2;
        java.lang.String $r11;
        android.security.KeyStoreException $r12;
        java.lang.Throwable $r14;
        boolean z0;

        r0 := @this: android.security.keystore.AndroidKeyStoreSignatureSpiBase;

        r16 := @parameter0: byte[];

        $r3 = r0.<android.security.keystore.AndroidKeyStoreSignatureSpiBase: java.lang.Exception mCachedException>;

        if $r3 != null goto label9;

     label1:
        specialinvoke r0.<android.security.keystore.AndroidKeyStoreSignatureSpiBase: void ensureKeystoreOperationInitialized()>();

     label2:
        $r7 = r0.<android.security.keystore.AndroidKeyStoreSignatureSpiBase: android.security.keystore.KeyStoreCryptoOperationStreamer mMessageStreamer>;

        $r6 = <libcore.util.EmptyArray: byte[] BYTE>;

        r17 = interfaceinvoke $r7.<android.security.keystore.KeyStoreCryptoOperationStreamer: byte[] doFinal(byte[],int,int,byte[],byte[])>($r6, 0, 0, r16, null);

        $i0 = lengthof r17;

        if $i0 != 0 goto label4;

     label3:
        z0 = 1;

        goto label6;

     label4:
        r1 = new java.security.ProviderException;

        r2 = new java.lang.StringBuilder;

        specialinvoke r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Signature verification unexpected produced output: ");

        $i1 = lengthof r17;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" bytes");

        $r11 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r1.<java.security.ProviderException: void <init>(java.lang.String)>($r11);

        throw r1;

     label5:
        $r12 := @caughtexception;

        $i2 = virtualinvoke $r12.<android.security.KeyStoreException: int getErrorCode()>();

        if $i2 != -30 goto label7;

        z0 = 0;

     label6:
        virtualinvoke r0.<android.security.keystore.AndroidKeyStoreSignatureSpiBase: void resetWhilePreservingInitState()>();

        return z0;

     label7:
        $r13 = new java.security.SignatureException;

        specialinvoke $r13.<java.security.SignatureException: void <init>(java.lang.Throwable)>($r12);

        throw $r13;

     label8:
        $r14 := @caughtexception;

        $r15 = new java.security.SignatureException;

        specialinvoke $r15.<java.security.SignatureException: void <init>(java.lang.Throwable)>($r14);

        throw $r15;

     label9:
        $r4 = new java.security.SignatureException;

        $r5 = r0.<android.security.keystore.AndroidKeyStoreSignatureSpiBase: java.lang.Exception mCachedException>;

        specialinvoke $r4.<java.security.SignatureException: void <init>(java.lang.Throwable)>($r5);

        throw $r4;

        catch java.security.InvalidKeyException from label1 to label2 with label8;
        catch android.security.KeyStoreException from label2 to label3 with label5;
        catch android.security.KeyStoreException from label4 to label5 with label5;
    }

    protected final boolean engineVerify(byte[], int, int) throws java.security.SignatureException
    {
        android.security.keystore.AndroidKeyStoreSignatureSpiBase r0;
        byte[] r1, $r2;
        int i0, i1;
        boolean $z0;

        r0 := @this: android.security.keystore.AndroidKeyStoreSignatureSpiBase;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = staticinvoke <android.security.keystore.ArrayUtils: byte[] subarray(byte[],int,int)>(r1, i0, i1);

        $z0 = virtualinvoke r0.<android.security.keystore.AndroidKeyStoreSignatureSpiBase: boolean engineVerify(byte[])>($r2);

        return $z0;
    }

    protected abstract int getAdditionalEntropyAmountForSign();

    protected final android.security.KeyStore getKeyStore()
    {
        android.security.keystore.AndroidKeyStoreSignatureSpiBase r0;
        android.security.KeyStore $r1;

        r0 := @this: android.security.keystore.AndroidKeyStoreSignatureSpiBase;

        $r1 = r0.<android.security.keystore.AndroidKeyStoreSignatureSpiBase: android.security.KeyStore mKeyStore>;

        return $r1;
    }

    public final long getOperationHandle()
    {
        android.security.keystore.AndroidKeyStoreSignatureSpiBase r0;
        long $l0;

        r0 := @this: android.security.keystore.AndroidKeyStoreSignatureSpiBase;

        $l0 = r0.<android.security.keystore.AndroidKeyStoreSignatureSpiBase: long mOperationHandle>;

        return $l0;
    }

    protected void initKey(android.security.keystore.AndroidKeyStoreKey) throws java.security.InvalidKeyException
    {
        android.security.keystore.AndroidKeyStoreSignatureSpiBase r0;
        android.security.keystore.AndroidKeyStoreKey r1;

        r0 := @this: android.security.keystore.AndroidKeyStoreSignatureSpiBase;

        r1 := @parameter0: android.security.keystore.AndroidKeyStoreKey;

        r0.<android.security.keystore.AndroidKeyStoreSignatureSpiBase: android.security.keystore.AndroidKeyStoreKey mKey> = r1;

        return;
    }

    protected final boolean isSigning()
    {
        android.security.keystore.AndroidKeyStoreSignatureSpiBase r0;
        boolean $z0;

        r0 := @this: android.security.keystore.AndroidKeyStoreSignatureSpiBase;

        $z0 = r0.<android.security.keystore.AndroidKeyStoreSignatureSpiBase: boolean mSigning>;

        return $z0;
    }

    protected void resetAll()
    {
        android.security.keystore.AndroidKeyStoreSignatureSpiBase r0;
        android.os.IBinder r1;
        android.security.KeyStore $r2;

        r0 := @this: android.security.keystore.AndroidKeyStoreSignatureSpiBase;

        r1 = r0.<android.security.keystore.AndroidKeyStoreSignatureSpiBase: android.os.IBinder mOperationToken>;

        if r1 == null goto label1;

        r0.<android.security.keystore.AndroidKeyStoreSignatureSpiBase: android.os.IBinder mOperationToken> = null;

        $r2 = r0.<android.security.keystore.AndroidKeyStoreSignatureSpiBase: android.security.KeyStore mKeyStore>;

        virtualinvoke $r2.<android.security.KeyStore: int abort(android.os.IBinder)>(r1);

     label1:
        r0.<android.security.keystore.AndroidKeyStoreSignatureSpiBase: boolean mSigning> = 0;

        r0.<android.security.keystore.AndroidKeyStoreSignatureSpiBase: android.security.keystore.AndroidKeyStoreKey mKey> = null;

        r0.<android.security.keystore.AndroidKeyStoreSignatureSpiBase: java.security.SecureRandom appRandom> = null;

        r0.<android.security.keystore.AndroidKeyStoreSignatureSpiBase: android.os.IBinder mOperationToken> = null;

        r0.<android.security.keystore.AndroidKeyStoreSignatureSpiBase: long mOperationHandle> = 0L;

        r0.<android.security.keystore.AndroidKeyStoreSignatureSpiBase: android.security.keystore.KeyStoreCryptoOperationStreamer mMessageStreamer> = null;

        r0.<android.security.keystore.AndroidKeyStoreSignatureSpiBase: java.lang.Exception mCachedException> = null;

        return;
    }

    protected void resetWhilePreservingInitState()
    {
        android.security.keystore.AndroidKeyStoreSignatureSpiBase r0;
        android.os.IBinder r1;
        android.security.KeyStore $r2;

        r0 := @this: android.security.keystore.AndroidKeyStoreSignatureSpiBase;

        r1 = r0.<android.security.keystore.AndroidKeyStoreSignatureSpiBase: android.os.IBinder mOperationToken>;

        if r1 == null goto label1;

        r0.<android.security.keystore.AndroidKeyStoreSignatureSpiBase: android.os.IBinder mOperationToken> = null;

        $r2 = r0.<android.security.keystore.AndroidKeyStoreSignatureSpiBase: android.security.KeyStore mKeyStore>;

        virtualinvoke $r2.<android.security.KeyStore: int abort(android.os.IBinder)>(r1);

     label1:
        r0.<android.security.keystore.AndroidKeyStoreSignatureSpiBase: long mOperationHandle> = 0L;

        r0.<android.security.keystore.AndroidKeyStoreSignatureSpiBase: android.security.keystore.KeyStoreCryptoOperationStreamer mMessageStreamer> = null;

        r0.<android.security.keystore.AndroidKeyStoreSignatureSpiBase: java.lang.Exception mCachedException> = null;

        return;
    }
}
