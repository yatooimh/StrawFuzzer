class android.security.keystore.AndroidKeyStoreUnauthenticatedAESCipherSpi extends android.security.keystore.AndroidKeyStoreCipherSpiBase
{
    private static final int BLOCK_SIZE_BYTES;
    private byte[] mIv;
    private boolean mIvHasBeenUsed;
    private final boolean mIvRequired;
    private final int mKeymasterBlockMode;
    private final int mKeymasterPadding;

    void <init>(int, int, boolean)
    {
        android.security.keystore.AndroidKeyStoreUnauthenticatedAESCipherSpi r0;
        int i0, i1;
        boolean z0;

        r0 := @this: android.security.keystore.AndroidKeyStoreUnauthenticatedAESCipherSpi;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        z0 := @parameter2: boolean;

        specialinvoke r0.<android.security.keystore.AndroidKeyStoreCipherSpiBase: void <init>()>();

        r0.<android.security.keystore.AndroidKeyStoreUnauthenticatedAESCipherSpi: int mKeymasterBlockMode> = i0;

        r0.<android.security.keystore.AndroidKeyStoreUnauthenticatedAESCipherSpi: int mKeymasterPadding> = i1;

        r0.<android.security.keystore.AndroidKeyStoreUnauthenticatedAESCipherSpi: boolean mIvRequired> = z0;

        return;
    }

    protected final void addAlgorithmSpecificParametersToBegin(android.security.keymaster.KeymasterArguments)
    {
        android.security.keystore.AndroidKeyStoreUnauthenticatedAESCipherSpi r0;
        android.security.keymaster.KeymasterArguments r1;
        byte[] r2;
        boolean $z0, $z1, $z2, $z3;
        java.lang.IllegalStateException $r3;
        int $i0, $i1;

        r0 := @this: android.security.keystore.AndroidKeyStoreUnauthenticatedAESCipherSpi;

        r1 := @parameter0: android.security.keymaster.KeymasterArguments;

        $z0 = virtualinvoke r0.<android.security.keystore.AndroidKeyStoreUnauthenticatedAESCipherSpi: boolean isEncrypting()>();

        if $z0 == 0 goto label2;

        $z1 = r0.<android.security.keystore.AndroidKeyStoreUnauthenticatedAESCipherSpi: boolean mIvRequired>;

        if $z1 == 0 goto label2;

        $z2 = r0.<android.security.keystore.AndroidKeyStoreUnauthenticatedAESCipherSpi: boolean mIvHasBeenUsed>;

        if $z2 != 0 goto label1;

        goto label2;

     label1:
        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("IV has already been used. Reusing IV in encryption mode violates security best practices.");

        throw $r3;

     label2:
        virtualinvoke r1.<android.security.keymaster.KeymasterArguments: void addEnum(int,int)>(268435458, 32);

        $i0 = r0.<android.security.keystore.AndroidKeyStoreUnauthenticatedAESCipherSpi: int mKeymasterBlockMode>;

        virtualinvoke r1.<android.security.keymaster.KeymasterArguments: void addEnum(int,int)>(536870916, $i0);

        $i1 = r0.<android.security.keystore.AndroidKeyStoreUnauthenticatedAESCipherSpi: int mKeymasterPadding>;

        virtualinvoke r1.<android.security.keymaster.KeymasterArguments: void addEnum(int,int)>(536870918, $i1);

        $z3 = r0.<android.security.keystore.AndroidKeyStoreUnauthenticatedAESCipherSpi: boolean mIvRequired>;

        if $z3 == 0 goto label3;

        r2 = r0.<android.security.keystore.AndroidKeyStoreUnauthenticatedAESCipherSpi: byte[] mIv>;

        if r2 == null goto label3;

        virtualinvoke r1.<android.security.keymaster.KeymasterArguments: void addBytes(int,byte[])>(-1879047191, r2);

     label3:
        return;
    }

    protected final int engineGetBlockSize()
    {
        android.security.keystore.AndroidKeyStoreUnauthenticatedAESCipherSpi r0;

        r0 := @this: android.security.keystore.AndroidKeyStoreUnauthenticatedAESCipherSpi;

        return 16;
    }

    protected final byte[] engineGetIV()
    {
        android.security.keystore.AndroidKeyStoreUnauthenticatedAESCipherSpi r0;
        byte[] $r1, $r2;

        r0 := @this: android.security.keystore.AndroidKeyStoreUnauthenticatedAESCipherSpi;

        $r1 = r0.<android.security.keystore.AndroidKeyStoreUnauthenticatedAESCipherSpi: byte[] mIv>;

        $r2 = staticinvoke <android.security.keystore.ArrayUtils: byte[] cloneIfNotEmpty(byte[])>($r1);

        return $r2;
    }

    protected final int engineGetOutputSize(int)
    {
        android.security.keystore.AndroidKeyStoreUnauthenticatedAESCipherSpi r0;
        int i0, $i1;

        r0 := @this: android.security.keystore.AndroidKeyStoreUnauthenticatedAESCipherSpi;

        i0 := @parameter0: int;

        $i1 = i0 + 48;

        return $i1;
    }

    protected final java.security.AlgorithmParameters engineGetParameters()
    {
        android.security.keystore.AndroidKeyStoreUnauthenticatedAESCipherSpi r0;
        java.security.AlgorithmParameters r1;
        boolean $z0;
        int $i0;
        byte[] $r2, r7;
        java.lang.Throwable $r3, $r5;
        java.security.ProviderException $r4, $r6;
        javax.crypto.spec.IvParameterSpec r8;

        r0 := @this: android.security.keystore.AndroidKeyStoreUnauthenticatedAESCipherSpi;

        $z0 = r0.<android.security.keystore.AndroidKeyStoreUnauthenticatedAESCipherSpi: boolean mIvRequired>;

        if $z0 != 0 goto label1;

        return null;

     label1:
        r7 = r0.<android.security.keystore.AndroidKeyStoreUnauthenticatedAESCipherSpi: byte[] mIv>;

        if r7 == null goto label6;

        $i0 = lengthof r7;

        if $i0 <= 0 goto label6;

     label2:
        r1 = staticinvoke <java.security.AlgorithmParameters: java.security.AlgorithmParameters getInstance(java.lang.String)>("AES");

        r8 = new javax.crypto.spec.IvParameterSpec;

        $r2 = r0.<android.security.keystore.AndroidKeyStoreUnauthenticatedAESCipherSpi: byte[] mIv>;

        specialinvoke r8.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r2);

        virtualinvoke r1.<java.security.AlgorithmParameters: void init(java.security.spec.AlgorithmParameterSpec)>(r8);

     label3:
        return r1;

     label4:
        $r3 := @caughtexception;

        $r4 = new java.security.ProviderException;

        specialinvoke $r4.<java.security.ProviderException: void <init>(java.lang.String,java.lang.Throwable)>("Failed to initialize AES AlgorithmParameters with an IV", $r3);

        throw $r4;

     label5:
        $r5 := @caughtexception;

        $r6 = new java.security.ProviderException;

        specialinvoke $r6.<java.security.ProviderException: void <init>(java.lang.String,java.lang.Throwable)>("Failed to obtain AES AlgorithmParameters", $r5);

        throw $r6;

     label6:
        return null;

        catch java.security.NoSuchAlgorithmException from label2 to label3 with label5;
        catch java.security.spec.InvalidParameterSpecException from label2 to label3 with label4;
    }

    protected final int getAdditionalEntropyAmountForBegin()
    {
        android.security.keystore.AndroidKeyStoreUnauthenticatedAESCipherSpi r0;
        boolean $z0, $z1;
        byte[] $r1;

        r0 := @this: android.security.keystore.AndroidKeyStoreUnauthenticatedAESCipherSpi;

        $z0 = r0.<android.security.keystore.AndroidKeyStoreUnauthenticatedAESCipherSpi: boolean mIvRequired>;

        if $z0 == 0 goto label1;

        $r1 = r0.<android.security.keystore.AndroidKeyStoreUnauthenticatedAESCipherSpi: byte[] mIv>;

        if $r1 != null goto label1;

        $z1 = virtualinvoke r0.<android.security.keystore.AndroidKeyStoreUnauthenticatedAESCipherSpi: boolean isEncrypting()>();

        if $z1 == 0 goto label1;

        return 16;

     label1:
        return 0;
    }

    protected final int getAdditionalEntropyAmountForFinish()
    {
        android.security.keystore.AndroidKeyStoreUnauthenticatedAESCipherSpi r0;

        r0 := @this: android.security.keystore.AndroidKeyStoreUnauthenticatedAESCipherSpi;

        return 0;
    }

    protected final void initAlgorithmSpecificParameters() throws java.security.InvalidKeyException
    {
        android.security.keystore.AndroidKeyStoreUnauthenticatedAESCipherSpi r0;
        boolean $z0, $z1;
        java.security.InvalidKeyException $r1;

        r0 := @this: android.security.keystore.AndroidKeyStoreUnauthenticatedAESCipherSpi;

        $z0 = r0.<android.security.keystore.AndroidKeyStoreUnauthenticatedAESCipherSpi: boolean mIvRequired>;

        if $z0 != 0 goto label1;

        return;

     label1:
        $z1 = virtualinvoke r0.<android.security.keystore.AndroidKeyStoreUnauthenticatedAESCipherSpi: boolean isEncrypting()>();

        if $z1 == 0 goto label2;

        return;

     label2:
        $r1 = new java.security.InvalidKeyException;

        specialinvoke $r1.<java.security.InvalidKeyException: void <init>(java.lang.String)>("IV required when decrypting. Use IvParameterSpec or AlgorithmParameters to provide it.");

        throw $r1;
    }

    protected final void initAlgorithmSpecificParameters(java.security.AlgorithmParameters) throws java.security.InvalidAlgorithmParameterException
    {
        android.security.keystore.AndroidKeyStoreUnauthenticatedAESCipherSpi r0;
        boolean $z0, $z1, $z2, $z3;
        java.lang.String $r2, $r3, $r6, $r10, $r18, $r24;
        java.lang.StringBuilder $r4, $r14, $r20;
        java.security.InvalidAlgorithmParameterException $r9, $r12, $r13, $r17, $r23;
        java.security.spec.AlgorithmParameterSpec $r11;
        java.lang.Throwable $r19;
        java.security.AlgorithmParameters r25;
        javax.crypto.spec.IvParameterSpec r27;
        byte[] r28;

        r0 := @this: android.security.keystore.AndroidKeyStoreUnauthenticatedAESCipherSpi;

        r25 := @parameter0: java.security.AlgorithmParameters;

        $z0 = r0.<android.security.keystore.AndroidKeyStoreUnauthenticatedAESCipherSpi: boolean mIvRequired>;

        if $z0 != 0 goto label02;

        if r25 != null goto label01;

        return;

     label01:
        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported parameters: ");

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r25);

        $r17 = new java.security.InvalidAlgorithmParameterException;

        $r18 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r17.<java.security.InvalidAlgorithmParameterException: void <init>(java.lang.String)>($r18);

        throw $r17;

     label02:
        if r25 != null goto label04;

        $z2 = virtualinvoke r0.<android.security.keystore.AndroidKeyStoreUnauthenticatedAESCipherSpi: boolean isEncrypting()>();

        if $z2 == 0 goto label03;

        return;

     label03:
        $r13 = new java.security.InvalidAlgorithmParameterException;

        specialinvoke $r13.<java.security.InvalidAlgorithmParameterException: void <init>(java.lang.String)>("IV required when decrypting. Use IvParameterSpec or AlgorithmParameters to provide it.");

        throw $r13;

     label04:
        $r2 = "AES";

        $r3 = virtualinvoke r25.<java.security.AlgorithmParameters: java.lang.String getAlgorithm()>();

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r3);

        if $z1 == 0 goto label10;

     label05:
        $r11 = virtualinvoke r25.<java.security.AlgorithmParameters: java.security.spec.AlgorithmParameterSpec getParameterSpec(java.lang.Class)>(class "Ljavax/crypto/spec/IvParameterSpec;");

        r27 = (javax.crypto.spec.IvParameterSpec) $r11;

     label06:
        r28 = virtualinvoke r27.<javax.crypto.spec.IvParameterSpec: byte[] getIV()>();

        r0.<android.security.keystore.AndroidKeyStoreUnauthenticatedAESCipherSpi: byte[] mIv> = r28;

        if r28 == null goto label07;

        return;

     label07:
        $r12 = new java.security.InvalidAlgorithmParameterException;

        specialinvoke $r12.<java.security.InvalidAlgorithmParameterException: void <init>(java.lang.String)>("Null IV in AlgorithmParameters");

        throw $r12;

     label08:
        $r19 := @caughtexception;

        $z3 = virtualinvoke r0.<android.security.keystore.AndroidKeyStoreUnauthenticatedAESCipherSpi: boolean isEncrypting()>();

        if $z3 == 0 goto label09;

        r0.<android.security.keystore.AndroidKeyStoreUnauthenticatedAESCipherSpi: byte[] mIv> = null;

        return;

     label09:
        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("IV required when decrypting, but not found in parameters: ");

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r25);

        $r23 = new java.security.InvalidAlgorithmParameterException;

        $r24 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r23.<java.security.InvalidAlgorithmParameterException: void <init>(java.lang.String,java.lang.Throwable)>($r24, $r19);

        throw $r23;

     label10:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported AlgorithmParameters algorithm: ");

        $r6 = virtualinvoke r25.<java.security.AlgorithmParameters: java.lang.String getAlgorithm()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". Supported: AES");

        $r9 = new java.security.InvalidAlgorithmParameterException;

        $r10 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.security.InvalidAlgorithmParameterException: void <init>(java.lang.String)>($r10);

        throw $r9;

        catch java.security.spec.InvalidParameterSpecException from label05 to label06 with label08;
    }

    protected final void initAlgorithmSpecificParameters(java.security.spec.AlgorithmParameterSpec) throws java.security.InvalidAlgorithmParameterException
    {
        android.security.keystore.AndroidKeyStoreUnauthenticatedAESCipherSpi r0;
        boolean $z0, $z1, $z2;
        java.security.InvalidAlgorithmParameterException $r2, $r4, $r5, $r9;
        javax.crypto.spec.IvParameterSpec $r3;
        java.lang.StringBuilder $r6;
        java.lang.String $r10;
        java.security.spec.AlgorithmParameterSpec r11;
        byte[] r12;

        r0 := @this: android.security.keystore.AndroidKeyStoreUnauthenticatedAESCipherSpi;

        r11 := @parameter0: java.security.spec.AlgorithmParameterSpec;

        $z0 = r0.<android.security.keystore.AndroidKeyStoreUnauthenticatedAESCipherSpi: boolean mIvRequired>;

        if $z0 != 0 goto label2;

        if r11 != null goto label1;

        return;

     label1:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported parameters: ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r11);

        $r9 = new java.security.InvalidAlgorithmParameterException;

        $r10 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.security.InvalidAlgorithmParameterException: void <init>(java.lang.String)>($r10);

        throw $r9;

     label2:
        if r11 != null goto label4;

        $z2 = virtualinvoke r0.<android.security.keystore.AndroidKeyStoreUnauthenticatedAESCipherSpi: boolean isEncrypting()>();

        if $z2 == 0 goto label3;

        return;

     label3:
        $r5 = new java.security.InvalidAlgorithmParameterException;

        specialinvoke $r5.<java.security.InvalidAlgorithmParameterException: void <init>(java.lang.String)>("IvParameterSpec must be provided when decrypting");

        throw $r5;

     label4:
        $z1 = r11 instanceof javax.crypto.spec.IvParameterSpec;

        if $z1 == 0 goto label6;

        $r3 = (javax.crypto.spec.IvParameterSpec) r11;

        r12 = virtualinvoke $r3.<javax.crypto.spec.IvParameterSpec: byte[] getIV()>();

        r0.<android.security.keystore.AndroidKeyStoreUnauthenticatedAESCipherSpi: byte[] mIv> = r12;

        if r12 == null goto label5;

        return;

     label5:
        $r4 = new java.security.InvalidAlgorithmParameterException;

        specialinvoke $r4.<java.security.InvalidAlgorithmParameterException: void <init>(java.lang.String)>("Null IV in IvParameterSpec");

        throw $r4;

     label6:
        $r2 = new java.security.InvalidAlgorithmParameterException;

        specialinvoke $r2.<java.security.InvalidAlgorithmParameterException: void <init>(java.lang.String)>("Only IvParameterSpec supported");

        throw $r2;
    }

    protected final void initKey(int, java.security.Key) throws java.security.InvalidKeyException
    {
        android.security.keystore.AndroidKeyStoreUnauthenticatedAESCipherSpi r0;
        int i0;
        boolean $z0, $z1;
        java.lang.String $r1, $r2, $r5, $r11, $r17, r21;
        java.lang.StringBuilder $r3, $r13;
        java.security.InvalidKeyException $r10, $r16;
        android.security.keystore.AndroidKeyStoreSecretKey $r12;
        java.lang.Class $r18;
        java.security.Key r19;

        r0 := @this: android.security.keystore.AndroidKeyStoreUnauthenticatedAESCipherSpi;

        i0 := @parameter0: int;

        r19 := @parameter1: java.security.Key;

        $z0 = r19 instanceof android.security.keystore.AndroidKeyStoreSecretKey;

        if $z0 != 0 goto label3;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported key: ");

        if r19 == null goto label1;

        $r18 = virtualinvoke r19.<java.lang.Object: java.lang.Class getClass()>();

        r21 = virtualinvoke $r18.<java.lang.Class: java.lang.String getName()>();

        goto label2;

     label1:
        r21 = "null";

     label2:
        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r21);

        $r16 = new java.security.InvalidKeyException;

        $r17 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r16.<java.security.InvalidKeyException: void <init>(java.lang.String)>($r17);

        throw $r16;

     label3:
        $r1 = "AES";

        $r2 = interfaceinvoke r19.<java.security.Key: java.lang.String getAlgorithm()>();

        $z1 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r2);

        if $z1 == 0 goto label4;

        $r12 = (android.security.keystore.AndroidKeyStoreSecretKey) r19;

        virtualinvoke r0.<android.security.keystore.AndroidKeyStoreUnauthenticatedAESCipherSpi: void setKey(android.security.keystore.AndroidKeyStoreKey)>($r12);

        return;

     label4:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported key algorithm: ");

        $r5 = interfaceinvoke r19.<java.security.Key: java.lang.String getAlgorithm()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". Only ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("AES");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" supported");

        $r10 = new java.security.InvalidKeyException;

        $r11 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.security.InvalidKeyException: void <init>(java.lang.String)>($r11);

        throw $r10;
    }

    protected final void loadAlgorithmSpecificParametersFromBeginResult(android.security.keymaster.KeymasterArguments)
    {
        android.security.keystore.AndroidKeyStoreUnauthenticatedAESCipherSpi r0;
        java.security.ProviderException $r1, $r2;
        boolean $z0, $z1;
        int $i0;
        android.security.keymaster.KeymasterArguments r3;
        byte[] r4, r5, r6;

        r0 := @this: android.security.keystore.AndroidKeyStoreUnauthenticatedAESCipherSpi;

        r3 := @parameter0: android.security.keymaster.KeymasterArguments;

        r0.<android.security.keystore.AndroidKeyStoreUnauthenticatedAESCipherSpi: boolean mIvHasBeenUsed> = 1;

        r4 = virtualinvoke r3.<android.security.keymaster.KeymasterArguments: byte[] getBytes(int,byte[])>(-1879047191, null);

        r5 = r4;

        if r4 == null goto label1;

        r5 = r4;

        $i0 = lengthof r4;

        if $i0 != 0 goto label1;

        r5 = null;

     label1:
        $z1 = r0.<android.security.keystore.AndroidKeyStoreUnauthenticatedAESCipherSpi: boolean mIvRequired>;

        if $z1 == 0 goto label4;

        r6 = r0.<android.security.keystore.AndroidKeyStoreUnauthenticatedAESCipherSpi: byte[] mIv>;

        if r6 != null goto label2;

        r0.<android.security.keystore.AndroidKeyStoreUnauthenticatedAESCipherSpi: byte[] mIv> = r5;

        goto label5;

     label2:
        if r5 == null goto label5;

        $z0 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>(r5, r6);

        if $z0 == 0 goto label3;

        goto label5;

     label3:
        $r2 = new java.security.ProviderException;

        specialinvoke $r2.<java.security.ProviderException: void <init>(java.lang.String)>("IV in use differs from provided IV");

        throw $r2;

     label4:
        if r5 != null goto label6;

     label5:
        return;

     label6:
        $r1 = new java.security.ProviderException;

        specialinvoke $r1.<java.security.ProviderException: void <init>(java.lang.String)>("IV in use despite IV not being used by this transformation");

        throw $r1;
    }

    protected final void resetAll()
    {
        android.security.keystore.AndroidKeyStoreUnauthenticatedAESCipherSpi r0;

        r0 := @this: android.security.keystore.AndroidKeyStoreUnauthenticatedAESCipherSpi;

        r0.<android.security.keystore.AndroidKeyStoreUnauthenticatedAESCipherSpi: byte[] mIv> = null;

        r0.<android.security.keystore.AndroidKeyStoreUnauthenticatedAESCipherSpi: boolean mIvHasBeenUsed> = 0;

        specialinvoke r0.<android.security.keystore.AndroidKeyStoreCipherSpiBase: void resetAll()>();

        return;
    }

    protected final void resetWhilePreservingInitState()
    {
        android.security.keystore.AndroidKeyStoreUnauthenticatedAESCipherSpi r0;

        r0 := @this: android.security.keystore.AndroidKeyStoreUnauthenticatedAESCipherSpi;

        specialinvoke r0.<android.security.keystore.AndroidKeyStoreCipherSpiBase: void resetWhilePreservingInitState()>();

        return;
    }

    public static void <clinit>()
    {
        <android.security.keystore.AndroidKeyStoreUnauthenticatedAESCipherSpi: int BLOCK_SIZE_BYTES> = 16;

        return;
    }
}
