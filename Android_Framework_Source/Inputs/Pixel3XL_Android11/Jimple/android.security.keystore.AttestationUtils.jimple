public abstract class android.security.keystore.AttestationUtils extends java.lang.Object
{
    public static final int ID_TYPE_IMEI;
    public static final int ID_TYPE_MEID;
    public static final int ID_TYPE_SERIAL;
    public static final int USE_INDIVIDUAL_ATTESTATION;

    private void <init>()
    {
        android.security.keystore.AttestationUtils r0;

        r0 := @this: android.security.keystore.AttestationUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.security.cert.X509Certificate[] attestDeviceIds(android.content.Context, int[], byte[]) throws android.security.keystore.DeviceIdAttestationException
    {
        byte[] r0;
        int i0;
        android.security.keymaster.KeymasterCertificateChain $r1;
        android.security.KeyStore $r2;
        android.security.keystore.DeviceIdAttestationException $r3, $r6;
        android.security.KeyStoreException $r4;
        android.security.keystore.KeyAttestationException $r5;
        java.lang.String $r7;
        android.content.Context r8;
        int[] r9;
        android.security.keymaster.KeymasterArguments r10;
        java.security.cert.X509Certificate[] r12;

        r8 := @parameter0: android.content.Context;

        r9 := @parameter1: int[];

        r0 := @parameter2: byte[];

        r10 = staticinvoke <android.security.keystore.AttestationUtils: android.security.keymaster.KeymasterArguments prepareAttestationArgumentsForDeviceId(android.content.Context,int[],byte[])>(r8, r9, r0);

        $r1 = new android.security.keymaster.KeymasterCertificateChain;

        specialinvoke $r1.<android.security.keymaster.KeymasterCertificateChain: void <init>()>();

        $r2 = staticinvoke <android.security.KeyStore: android.security.KeyStore getInstance()>();

        i0 = virtualinvoke $r2.<android.security.KeyStore: int attestDeviceIds(android.security.keymaster.KeymasterArguments,android.security.keymaster.KeymasterCertificateChain)>(r10, $r1);

        if i0 != 1 goto label4;

     label1:
        r12 = staticinvoke <android.security.keystore.AttestationUtils: java.security.cert.X509Certificate[] parseCertificateChain(android.security.keymaster.KeymasterCertificateChain)>($r1);

     label2:
        return r12;

     label3:
        $r5 := @caughtexception;

        $r6 = new android.security.keystore.DeviceIdAttestationException;

        $r7 = virtualinvoke $r5.<android.security.keystore.KeyAttestationException: java.lang.String getMessage()>();

        specialinvoke $r6.<android.security.keystore.DeviceIdAttestationException: void <init>(java.lang.String,java.lang.Throwable)>($r7, $r5);

        throw $r6;

     label4:
        $r3 = new android.security.keystore.DeviceIdAttestationException;

        $r4 = staticinvoke <android.security.KeyStore: android.security.KeyStoreException getKeyStoreException(int)>(i0);

        specialinvoke $r3.<android.security.keystore.DeviceIdAttestationException: void <init>(java.lang.String,java.lang.Throwable)>("Unable to perform attestation", $r4);

        throw $r3;

        catch android.security.keystore.KeyAttestationException from label1 to label2 with label3;
    }

    public static boolean isChainValid(android.security.keymaster.KeymasterCertificateChain)
    {
        android.security.keymaster.KeymasterCertificateChain r0;
        java.util.List $r1;
        int $i0;
        boolean z0;

        r0 := @parameter0: android.security.keymaster.KeymasterCertificateChain;

        if r0 == null goto label1;

        $r1 = virtualinvoke r0.<android.security.keymaster.KeymasterCertificateChain: java.util.List getCertificates()>();

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i0 < 2 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    private static boolean isPotentiallyMisprovisionedDevice(android.content.Context)
    {
        android.content.res.Resources $r0;
        java.lang.String $r1, r3;
        boolean $z0;
        android.content.Context r2;

        r2 := @parameter0: android.content.Context;

        $r0 = virtualinvoke r2.<android.content.Context: android.content.res.Resources getResources()>();

        r3 = virtualinvoke $r0.<android.content.res.Resources: java.lang.String getString(int)>(17039915);

        $r1 = <android.os.Build: java.lang.String MODEL>;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r3);

        return $z0;
    }

    public static java.security.cert.X509Certificate[] parseCertificateChain(android.security.keymaster.KeymasterCertificateChain) throws android.security.keystore.KeyAttestationException
    {
        java.security.cert.CertificateFactory r0;
        int $i0, $i1;
        java.lang.StringBuilder $r1;
        android.security.keystore.KeyAttestationException $r5, $r15;
        java.lang.String $r6;
        java.io.ByteArrayOutputStream $r7;
        boolean $z0;
        byte[] $r8, $r13;
        java.util.Collection $r9;
        java.security.cert.X509Certificate[] $r10, r21;
        java.lang.Object[] $r11;
        java.lang.Object $r12;
        java.lang.Exception $r14;
        android.security.keymaster.KeymasterCertificateChain r16;
        java.util.List r17;
        java.util.Iterator r19;
        java.io.ByteArrayInputStream r20;

        r16 := @parameter0: android.security.keymaster.KeymasterCertificateChain;

        r17 = virtualinvoke r16.<android.security.keymaster.KeymasterCertificateChain: java.util.List getCertificates()>();

        $i0 = interfaceinvoke r17.<java.util.Collection: int size()>();

        if $i0 < 2 goto label7;

        $r7 = new java.io.ByteArrayOutputStream;

        specialinvoke $r7.<java.io.ByteArrayOutputStream: void <init>()>();

     label1:
        r19 = interfaceinvoke r17.<java.util.Collection: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r19.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r12 = interfaceinvoke r19.<java.util.Iterator: java.lang.Object next()>();

        $r13 = (byte[]) $r12;

        virtualinvoke $r7.<java.io.ByteArrayOutputStream: void write(byte[])>($r13);

     label3:
        goto label2;

     label4:
        r0 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>("X.509");

        r20 = new java.io.ByteArrayInputStream;

        $r8 = virtualinvoke $r7.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        specialinvoke r20.<java.io.ByteArrayInputStream: void <init>(byte[])>($r8);

        $r9 = virtualinvoke r0.<java.security.cert.CertificateFactory: java.util.Collection generateCertificates(java.io.InputStream)>(r20);

        $r10 = newarray (java.security.cert.X509Certificate)[0];

        $r11 = interfaceinvoke $r9.<java.util.Collection: java.lang.Object[] toArray(java.lang.Object[])>($r10);

        r21 = (java.security.cert.X509Certificate[]) $r11;

     label5:
        return r21;

     label6:
        $r14 := @caughtexception;

        $r15 = new android.security.keystore.KeyAttestationException;

        specialinvoke $r15.<android.security.keystore.KeyAttestationException: void <init>(java.lang.String,java.lang.Throwable)>("Unable to construct certificate chain", $r14);

        throw $r15;

     label7:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Attestation certificate chain contained ");

        $i1 = interfaceinvoke r17.<java.util.Collection: int size()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" entries. At least two are required.");

        $r5 = new android.security.keystore.KeyAttestationException;

        $r6 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<android.security.keystore.KeyAttestationException: void <init>(java.lang.String)>($r6);

        throw $r5;

        catch java.lang.Exception from label1 to label2 with label6;
        catch java.lang.Exception from label2 to label3 with label6;
        catch java.lang.Exception from label4 to label5 with label6;
    }

    public static android.security.keymaster.KeymasterArguments prepareAttestationArguments(android.content.Context, int[], byte[]) throws android.security.keystore.DeviceIdAttestationException
    {
        android.content.Context r0;
        int[] r1;
        byte[] r2;
        java.lang.String $r3;
        android.security.keymaster.KeymasterArguments $r4;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: int[];

        r2 := @parameter2: byte[];

        $r3 = <android.os.Build: java.lang.String BRAND>;

        $r4 = staticinvoke <android.security.keystore.AttestationUtils: android.security.keymaster.KeymasterArguments prepareAttestationArguments(android.content.Context,int[],byte[],java.lang.String)>(r0, r1, r2, $r3);

        return $r4;
    }

    private static android.security.keymaster.KeymasterArguments prepareAttestationArguments(android.content.Context, int[], byte[], java.lang.String) throws android.security.keystore.DeviceIdAttestationException
    {
        java.lang.String r0, $r11, $r14, $r17, $r20, $r23, $r36, r47, r48;
        int i0, $i1, $i2, i3, i4;
        java.lang.NullPointerException $r2;
        android.security.keymaster.KeymasterArguments $r3;
        android.util.ArraySet $r4;
        java.lang.Integer $r5, $r37, $r38, r45;
        boolean $z0, $z1, $z3;
        java.lang.Object $r6, $r22;
        android.security.keystore.DeviceIdAttestationException $r7, $r26, $r29;
        java.nio.charset.Charset $r8, $r10, $r13, $r16, $r19, $r24, $r27, $r30;
        byte[] $r9, $r12, $r15, $r18, $r21, $r25, $r28, $r31, r41;
        java.lang.StringBuilder $r32;
        java.lang.IllegalArgumentException $r35;
        android.content.Context r39;
        int[] r40;
        android.telephony.TelephonyManager r43;
        java.util.Iterator r44;

        r39 := @parameter0: android.content.Context;

        r40 := @parameter1: int[];

        r41 := @parameter2: byte[];

        r0 := @parameter3: java.lang.String;

        if r41 == null goto label16;

        $r3 = new android.security.keymaster.KeymasterArguments;

        specialinvoke $r3.<android.security.keymaster.KeymasterArguments: void <init>()>();

        virtualinvoke $r3.<android.security.keymaster.KeymasterArguments: void addBytes(int,byte[])>(-1879047484, r41);

        if r40 != null goto label01;

        return $r3;

     label01:
        $r4 = new android.util.ArraySet;

        $i1 = lengthof r40;

        specialinvoke $r4.<android.util.ArraySet: void <init>(int)>($i1);

        i0 = lengthof r40;

        i3 = 0;

     label02:
        if i3 >= i0 goto label03;

        $i2 = r40[i3];

        $r38 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        interfaceinvoke $r4.<java.util.Set: boolean add(java.lang.Object)>($r38);

        i3 = i3 + 1;

        goto label02;

     label03:
        r43 = null;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        $z0 = interfaceinvoke $r4.<java.util.Set: boolean contains(java.lang.Object)>($r5);

        if $z0 != 0 goto label04;

        $r37 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);

        $z1 = interfaceinvoke $r4.<java.util.Set: boolean contains(java.lang.Object)>($r37);

        if $z1 == 0 goto label05;

     label04:
        $r6 = virtualinvoke r39.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("phone");

        r43 = (android.telephony.TelephonyManager) $r6;

        if r43 == null goto label15;

     label05:
        r44 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label06:
        $z3 = interfaceinvoke r44.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label14;

        $r22 = interfaceinvoke r44.<java.util.Iterator: java.lang.Object next()>();

        r45 = (java.lang.Integer) $r22;

        i4 = virtualinvoke r45.<java.lang.Integer: int intValue()>();

        if i4 == 1 goto label12;

        if i4 == 2 goto label10;

        if i4 == 3 goto label08;

        if i4 != 4 goto label07;

        virtualinvoke $r3.<android.security.keymaster.KeymasterArguments: void addBoolean(int)>(1879048912);

        goto label13;

     label07:
        $r32 = new java.lang.StringBuilder;

        specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown device ID type ");

        virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r45);

        $r35 = new java.lang.IllegalArgumentException;

        $r36 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r35.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r36);

        throw $r35;

     label08:
        r47 = virtualinvoke r43.<android.telephony.TelephonyManager: java.lang.String getMeid(int)>(0);

        if r47 == null goto label09;

        $r30 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;

        $r31 = virtualinvoke r47.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r30);

        virtualinvoke $r3.<android.security.keymaster.KeymasterArguments: void addBytes(int,byte[])>(-1879047477, $r31);

        goto label13;

     label09:
        $r29 = new android.security.keystore.DeviceIdAttestationException;

        specialinvoke $r29.<android.security.keystore.DeviceIdAttestationException: void <init>(java.lang.String)>("Unable to retrieve MEID");

        throw $r29;

     label10:
        r48 = virtualinvoke r43.<android.telephony.TelephonyManager: java.lang.String getImei(int)>(0);

        if r48 == null goto label11;

        $r27 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;

        $r28 = virtualinvoke r48.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r27);

        virtualinvoke $r3.<android.security.keymaster.KeymasterArguments: void addBytes(int,byte[])>(-1879047478, $r28);

        goto label13;

     label11:
        $r26 = new android.security.keystore.DeviceIdAttestationException;

        specialinvoke $r26.<android.security.keystore.DeviceIdAttestationException: void <init>(java.lang.String)>("Unable to retrieve IMEI");

        throw $r26;

     label12:
        $r23 = staticinvoke <android.os.Build: java.lang.String getSerial()>();

        $r24 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;

        $r25 = virtualinvoke $r23.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r24);

        virtualinvoke $r3.<android.security.keymaster.KeymasterArguments: void addBytes(int,byte[])>(-1879047479, $r25);

     label13:
        goto label06;

     label14:
        $r8 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;

        $r9 = virtualinvoke r0.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r8);

        virtualinvoke $r3.<android.security.keymaster.KeymasterArguments: void addBytes(int,byte[])>(-1879047482, $r9);

        $r11 = <android.os.Build: java.lang.String DEVICE>;

        $r10 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;

        $r12 = virtualinvoke $r11.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r10);

        virtualinvoke $r3.<android.security.keymaster.KeymasterArguments: void addBytes(int,byte[])>(-1879047481, $r12);

        $r14 = <android.os.Build: java.lang.String PRODUCT>;

        $r13 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;

        $r15 = virtualinvoke $r14.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r13);

        virtualinvoke $r3.<android.security.keymaster.KeymasterArguments: void addBytes(int,byte[])>(-1879047480, $r15);

        $r17 = <android.os.Build: java.lang.String MANUFACTURER>;

        $r16 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;

        $r18 = virtualinvoke $r17.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r16);

        virtualinvoke $r3.<android.security.keymaster.KeymasterArguments: void addBytes(int,byte[])>(-1879047476, $r18);

        $r20 = <android.os.Build: java.lang.String MODEL>;

        $r19 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;

        $r21 = virtualinvoke $r20.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r19);

        virtualinvoke $r3.<android.security.keymaster.KeymasterArguments: void addBytes(int,byte[])>(-1879047475, $r21);

        return $r3;

     label15:
        $r7 = new android.security.keystore.DeviceIdAttestationException;

        specialinvoke $r7.<android.security.keystore.DeviceIdAttestationException: void <init>(java.lang.String)>("Unable to access telephony service");

        throw $r7;

     label16:
        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("Missing attestation challenge");

        throw $r2;
    }

    private static android.security.keymaster.KeymasterArguments prepareAttestationArgumentsForDeviceId(android.content.Context, int[], byte[]) throws android.security.keystore.DeviceIdAttestationException
    {
        android.content.Context r0;
        int[] r1;
        byte[] r2;
        java.lang.NullPointerException $r3;
        android.security.keymaster.KeymasterArguments $r4;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: int[];

        r2 := @parameter2: byte[];

        if r1 == null goto label1;

        $r4 = staticinvoke <android.security.keystore.AttestationUtils: android.security.keymaster.KeymasterArguments prepareAttestationArguments(android.content.Context,int[],byte[])>(r0, r1, r2);

        return $r4;

     label1:
        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>("Missing id types");

        throw $r3;
    }

    public static android.security.keymaster.KeymasterArguments prepareAttestationArgumentsIfMisprovisioned(android.content.Context, int[], byte[]) throws android.security.keystore.DeviceIdAttestationException
    {
        android.content.Context r0;
        int[] r1;
        byte[] r2;
        java.lang.String r3;
        android.content.res.Resources $r4;
        boolean $z0, $z1;
        android.security.keymaster.KeymasterArguments $r5;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: int[];

        r2 := @parameter2: byte[];

        $r4 = virtualinvoke r0.<android.content.Context: android.content.res.Resources getResources()>();

        r3 = virtualinvoke $r4.<android.content.res.Resources: java.lang.String getString(int)>(17039914);

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r3);

        if $z0 != 0 goto label1;

        $z1 = staticinvoke <android.security.keystore.AttestationUtils: boolean isPotentiallyMisprovisionedDevice(android.content.Context)>(r0);

        if $z1 != 0 goto label1;

        return null;

     label1:
        $r5 = staticinvoke <android.security.keystore.AttestationUtils: android.security.keymaster.KeymasterArguments prepareAttestationArguments(android.content.Context,int[],byte[],java.lang.String)>(r0, r1, r2, r3);

        return $r5;
    }

    public static void <clinit>()
    {
        <android.security.keystore.AttestationUtils: int USE_INDIVIDUAL_ATTESTATION> = 4;

        <android.security.keystore.AttestationUtils: int ID_TYPE_SERIAL> = 1;

        <android.security.keystore.AttestationUtils: int ID_TYPE_MEID> = 3;

        <android.security.keystore.AttestationUtils: int ID_TYPE_IMEI> = 2;

        return;
    }
}
