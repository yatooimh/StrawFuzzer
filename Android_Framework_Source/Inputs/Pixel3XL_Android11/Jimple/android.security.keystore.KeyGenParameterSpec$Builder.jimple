public final class android.security.keystore.KeyGenParameterSpec$Builder extends java.lang.Object
{
    private byte[] mAttestationChallenge;
    private java.lang.String[] mBlockModes;
    private java.util.Date mCertificateNotAfter;
    private java.util.Date mCertificateNotBefore;
    private java.math.BigInteger mCertificateSerialNumber;
    private javax.security.auth.x500.X500Principal mCertificateSubject;
    private boolean mCriticalToDeviceEncryption;
    private java.lang.String[] mDigests;
    private java.lang.String[] mEncryptionPaddings;
    private boolean mInvalidatedByBiometricEnrollment;
    private boolean mIsStrongBoxBacked;
    private int mKeySize;
    private java.util.Date mKeyValidityForConsumptionEnd;
    private java.util.Date mKeyValidityForOriginationEnd;
    private java.util.Date mKeyValidityStart;
    private final java.lang.String mKeystoreAlias;
    private int mPurposes;
    private boolean mRandomizedEncryptionRequired;
    private java.lang.String[] mSignaturePaddings;
    private java.security.spec.AlgorithmParameterSpec mSpec;
    private int mUid;
    private boolean mUniqueIdIncluded;
    private boolean mUnlockedDeviceRequired;
    private boolean mUserAuthenticationRequired;
    private int mUserAuthenticationType;
    private boolean mUserAuthenticationValidWhileOnBody;
    private int mUserAuthenticationValidityDurationSeconds;
    private boolean mUserConfirmationRequired;
    private boolean mUserPresenceRequired;

    public void <init>(android.security.keystore.KeyGenParameterSpec)
    {
        android.security.keystore.KeyGenParameterSpec$Builder r0;
        android.security.keystore.KeyGenParameterSpec r1;
        java.lang.String $r2;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.security.spec.AlgorithmParameterSpec $r3;
        javax.security.auth.x500.X500Principal $r4;
        java.math.BigInteger $r5;
        java.util.Date $r6, $r7, $r8, $r9, $r10;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10;
        java.lang.String[] $r11, $r12, $r13, $r15;
        byte[] $r14;

        r0 := @this: android.security.keystore.KeyGenParameterSpec$Builder;

        r1 := @parameter0: android.security.keystore.KeyGenParameterSpec;

        $r2 = virtualinvoke r1.<android.security.keystore.KeyGenParameterSpec: java.lang.String getKeystoreAlias()>();

        $i0 = virtualinvoke r1.<android.security.keystore.KeyGenParameterSpec: int getPurposes()>();

        specialinvoke r0.<android.security.keystore.KeyGenParameterSpec$Builder: void <init>(java.lang.String,int)>($r2, $i0);

        $i1 = virtualinvoke r1.<android.security.keystore.KeyGenParameterSpec: int getUid()>();

        r0.<android.security.keystore.KeyGenParameterSpec$Builder: int mUid> = $i1;

        $i2 = virtualinvoke r1.<android.security.keystore.KeyGenParameterSpec: int getKeySize()>();

        r0.<android.security.keystore.KeyGenParameterSpec$Builder: int mKeySize> = $i2;

        $r3 = virtualinvoke r1.<android.security.keystore.KeyGenParameterSpec: java.security.spec.AlgorithmParameterSpec getAlgorithmParameterSpec()>();

        r0.<android.security.keystore.KeyGenParameterSpec$Builder: java.security.spec.AlgorithmParameterSpec mSpec> = $r3;

        $r4 = virtualinvoke r1.<android.security.keystore.KeyGenParameterSpec: javax.security.auth.x500.X500Principal getCertificateSubject()>();

        r0.<android.security.keystore.KeyGenParameterSpec$Builder: javax.security.auth.x500.X500Principal mCertificateSubject> = $r4;

        $r5 = virtualinvoke r1.<android.security.keystore.KeyGenParameterSpec: java.math.BigInteger getCertificateSerialNumber()>();

        r0.<android.security.keystore.KeyGenParameterSpec$Builder: java.math.BigInteger mCertificateSerialNumber> = $r5;

        $r6 = virtualinvoke r1.<android.security.keystore.KeyGenParameterSpec: java.util.Date getCertificateNotBefore()>();

        r0.<android.security.keystore.KeyGenParameterSpec$Builder: java.util.Date mCertificateNotBefore> = $r6;

        $r7 = virtualinvoke r1.<android.security.keystore.KeyGenParameterSpec: java.util.Date getCertificateNotAfter()>();

        r0.<android.security.keystore.KeyGenParameterSpec$Builder: java.util.Date mCertificateNotAfter> = $r7;

        $r8 = virtualinvoke r1.<android.security.keystore.KeyGenParameterSpec: java.util.Date getKeyValidityStart()>();

        r0.<android.security.keystore.KeyGenParameterSpec$Builder: java.util.Date mKeyValidityStart> = $r8;

        $r9 = virtualinvoke r1.<android.security.keystore.KeyGenParameterSpec: java.util.Date getKeyValidityForOriginationEnd()>();

        r0.<android.security.keystore.KeyGenParameterSpec$Builder: java.util.Date mKeyValidityForOriginationEnd> = $r9;

        $r10 = virtualinvoke r1.<android.security.keystore.KeyGenParameterSpec: java.util.Date getKeyValidityForConsumptionEnd()>();

        r0.<android.security.keystore.KeyGenParameterSpec$Builder: java.util.Date mKeyValidityForConsumptionEnd> = $r10;

        $i3 = virtualinvoke r1.<android.security.keystore.KeyGenParameterSpec: int getPurposes()>();

        r0.<android.security.keystore.KeyGenParameterSpec$Builder: int mPurposes> = $i3;

        $z0 = virtualinvoke r1.<android.security.keystore.KeyGenParameterSpec: boolean isDigestsSpecified()>();

        if $z0 == 0 goto label1;

        $r15 = virtualinvoke r1.<android.security.keystore.KeyGenParameterSpec: java.lang.String[] getDigests()>();

        r0.<android.security.keystore.KeyGenParameterSpec$Builder: java.lang.String[] mDigests> = $r15;

     label1:
        $r11 = virtualinvoke r1.<android.security.keystore.KeyGenParameterSpec: java.lang.String[] getEncryptionPaddings()>();

        r0.<android.security.keystore.KeyGenParameterSpec$Builder: java.lang.String[] mEncryptionPaddings> = $r11;

        $r12 = virtualinvoke r1.<android.security.keystore.KeyGenParameterSpec: java.lang.String[] getSignaturePaddings()>();

        r0.<android.security.keystore.KeyGenParameterSpec$Builder: java.lang.String[] mSignaturePaddings> = $r12;

        $r13 = virtualinvoke r1.<android.security.keystore.KeyGenParameterSpec: java.lang.String[] getBlockModes()>();

        r0.<android.security.keystore.KeyGenParameterSpec$Builder: java.lang.String[] mBlockModes> = $r13;

        $z1 = virtualinvoke r1.<android.security.keystore.KeyGenParameterSpec: boolean isRandomizedEncryptionRequired()>();

        r0.<android.security.keystore.KeyGenParameterSpec$Builder: boolean mRandomizedEncryptionRequired> = $z1;

        $z2 = virtualinvoke r1.<android.security.keystore.KeyGenParameterSpec: boolean isUserAuthenticationRequired()>();

        r0.<android.security.keystore.KeyGenParameterSpec$Builder: boolean mUserAuthenticationRequired> = $z2;

        $i4 = virtualinvoke r1.<android.security.keystore.KeyGenParameterSpec: int getUserAuthenticationValidityDurationSeconds()>();

        r0.<android.security.keystore.KeyGenParameterSpec$Builder: int mUserAuthenticationValidityDurationSeconds> = $i4;

        $i5 = virtualinvoke r1.<android.security.keystore.KeyGenParameterSpec: int getUserAuthenticationType()>();

        r0.<android.security.keystore.KeyGenParameterSpec$Builder: int mUserAuthenticationType> = $i5;

        $z3 = virtualinvoke r1.<android.security.keystore.KeyGenParameterSpec: boolean isUserPresenceRequired()>();

        r0.<android.security.keystore.KeyGenParameterSpec$Builder: boolean mUserPresenceRequired> = $z3;

        $r14 = virtualinvoke r1.<android.security.keystore.KeyGenParameterSpec: byte[] getAttestationChallenge()>();

        r0.<android.security.keystore.KeyGenParameterSpec$Builder: byte[] mAttestationChallenge> = $r14;

        $z4 = virtualinvoke r1.<android.security.keystore.KeyGenParameterSpec: boolean isUniqueIdIncluded()>();

        r0.<android.security.keystore.KeyGenParameterSpec$Builder: boolean mUniqueIdIncluded> = $z4;

        $z5 = virtualinvoke r1.<android.security.keystore.KeyGenParameterSpec: boolean isUserAuthenticationValidWhileOnBody()>();

        r0.<android.security.keystore.KeyGenParameterSpec$Builder: boolean mUserAuthenticationValidWhileOnBody> = $z5;

        $z6 = virtualinvoke r1.<android.security.keystore.KeyGenParameterSpec: boolean isInvalidatedByBiometricEnrollment()>();

        r0.<android.security.keystore.KeyGenParameterSpec$Builder: boolean mInvalidatedByBiometricEnrollment> = $z6;

        $z7 = virtualinvoke r1.<android.security.keystore.KeyGenParameterSpec: boolean isStrongBoxBacked()>();

        r0.<android.security.keystore.KeyGenParameterSpec$Builder: boolean mIsStrongBoxBacked> = $z7;

        $z8 = virtualinvoke r1.<android.security.keystore.KeyGenParameterSpec: boolean isUserConfirmationRequired()>();

        r0.<android.security.keystore.KeyGenParameterSpec$Builder: boolean mUserConfirmationRequired> = $z8;

        $z9 = virtualinvoke r1.<android.security.keystore.KeyGenParameterSpec: boolean isUnlockedDeviceRequired()>();

        r0.<android.security.keystore.KeyGenParameterSpec$Builder: boolean mUnlockedDeviceRequired> = $z9;

        $z10 = virtualinvoke r1.<android.security.keystore.KeyGenParameterSpec: boolean isCriticalToDeviceEncryption()>();

        r0.<android.security.keystore.KeyGenParameterSpec$Builder: boolean mCriticalToDeviceEncryption> = $z10;

        return;
    }

    public void <init>(java.lang.String, int)
    {
        android.security.keystore.KeyGenParameterSpec$Builder r0;
        java.lang.String r1;
        int i0;
        java.lang.NullPointerException $r2;
        boolean $z0;
        java.lang.IllegalArgumentException $r3;

        r0 := @this: android.security.keystore.KeyGenParameterSpec$Builder;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.security.keystore.KeyGenParameterSpec$Builder: int mUid> = -1;

        r0.<android.security.keystore.KeyGenParameterSpec$Builder: int mKeySize> = -1;

        r0.<android.security.keystore.KeyGenParameterSpec$Builder: boolean mRandomizedEncryptionRequired> = 1;

        r0.<android.security.keystore.KeyGenParameterSpec$Builder: int mUserAuthenticationValidityDurationSeconds> = 0;

        r0.<android.security.keystore.KeyGenParameterSpec$Builder: int mUserAuthenticationType> = 2;

        r0.<android.security.keystore.KeyGenParameterSpec$Builder: boolean mUserPresenceRequired> = 0;

        r0.<android.security.keystore.KeyGenParameterSpec$Builder: byte[] mAttestationChallenge> = null;

        r0.<android.security.keystore.KeyGenParameterSpec$Builder: boolean mUniqueIdIncluded> = 0;

        r0.<android.security.keystore.KeyGenParameterSpec$Builder: boolean mInvalidatedByBiometricEnrollment> = 1;

        r0.<android.security.keystore.KeyGenParameterSpec$Builder: boolean mIsStrongBoxBacked> = 0;

        r0.<android.security.keystore.KeyGenParameterSpec$Builder: boolean mUnlockedDeviceRequired> = 0;

        r0.<android.security.keystore.KeyGenParameterSpec$Builder: boolean mCriticalToDeviceEncryption> = 0;

        if r1 == null goto label2;

        $z0 = virtualinvoke r1.<java.lang.String: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        r0.<android.security.keystore.KeyGenParameterSpec$Builder: java.lang.String mKeystoreAlias> = r1;

        r0.<android.security.keystore.KeyGenParameterSpec$Builder: int mPurposes> = i0;

        return;

     label1:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("keystoreAlias must not be empty");

        throw $r3;

     label2:
        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("keystoreAlias == null");

        throw $r2;
    }

    public android.security.keystore.KeyGenParameterSpec build()
    {
        android.security.keystore.KeyGenParameterSpec$Builder r0;
        android.security.keystore.KeyGenParameterSpec $r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        byte[] $r2;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.String[] $r3, $r4, $r5, $r6;
        java.util.Date $r7, $r8, $r9, $r10, $r11;
        java.math.BigInteger $r12;
        javax.security.auth.x500.X500Principal $r13;
        java.security.spec.AlgorithmParameterSpec $r14;
        java.lang.String $r15;

        r0 := @this: android.security.keystore.KeyGenParameterSpec$Builder;

        $r1 = new android.security.keystore.KeyGenParameterSpec;

        $r15 = r0.<android.security.keystore.KeyGenParameterSpec$Builder: java.lang.String mKeystoreAlias>;

        $i4 = r0.<android.security.keystore.KeyGenParameterSpec$Builder: int mUid>;

        $i3 = r0.<android.security.keystore.KeyGenParameterSpec$Builder: int mKeySize>;

        $r14 = r0.<android.security.keystore.KeyGenParameterSpec$Builder: java.security.spec.AlgorithmParameterSpec mSpec>;

        $r13 = r0.<android.security.keystore.KeyGenParameterSpec$Builder: javax.security.auth.x500.X500Principal mCertificateSubject>;

        $r12 = r0.<android.security.keystore.KeyGenParameterSpec$Builder: java.math.BigInteger mCertificateSerialNumber>;

        $r11 = r0.<android.security.keystore.KeyGenParameterSpec$Builder: java.util.Date mCertificateNotBefore>;

        $r10 = r0.<android.security.keystore.KeyGenParameterSpec$Builder: java.util.Date mCertificateNotAfter>;

        $r9 = r0.<android.security.keystore.KeyGenParameterSpec$Builder: java.util.Date mKeyValidityStart>;

        $r8 = r0.<android.security.keystore.KeyGenParameterSpec$Builder: java.util.Date mKeyValidityForOriginationEnd>;

        $r7 = r0.<android.security.keystore.KeyGenParameterSpec$Builder: java.util.Date mKeyValidityForConsumptionEnd>;

        $i2 = r0.<android.security.keystore.KeyGenParameterSpec$Builder: int mPurposes>;

        $r6 = r0.<android.security.keystore.KeyGenParameterSpec$Builder: java.lang.String[] mDigests>;

        $r5 = r0.<android.security.keystore.KeyGenParameterSpec$Builder: java.lang.String[] mEncryptionPaddings>;

        $r4 = r0.<android.security.keystore.KeyGenParameterSpec$Builder: java.lang.String[] mSignaturePaddings>;

        $r3 = r0.<android.security.keystore.KeyGenParameterSpec$Builder: java.lang.String[] mBlockModes>;

        $z9 = r0.<android.security.keystore.KeyGenParameterSpec$Builder: boolean mRandomizedEncryptionRequired>;

        $z8 = r0.<android.security.keystore.KeyGenParameterSpec$Builder: boolean mUserAuthenticationRequired>;

        $i1 = r0.<android.security.keystore.KeyGenParameterSpec$Builder: int mUserAuthenticationValidityDurationSeconds>;

        $i0 = r0.<android.security.keystore.KeyGenParameterSpec$Builder: int mUserAuthenticationType>;

        $z7 = r0.<android.security.keystore.KeyGenParameterSpec$Builder: boolean mUserPresenceRequired>;

        $r2 = r0.<android.security.keystore.KeyGenParameterSpec$Builder: byte[] mAttestationChallenge>;

        $z6 = r0.<android.security.keystore.KeyGenParameterSpec$Builder: boolean mUniqueIdIncluded>;

        $z5 = r0.<android.security.keystore.KeyGenParameterSpec$Builder: boolean mUserAuthenticationValidWhileOnBody>;

        $z4 = r0.<android.security.keystore.KeyGenParameterSpec$Builder: boolean mInvalidatedByBiometricEnrollment>;

        $z3 = r0.<android.security.keystore.KeyGenParameterSpec$Builder: boolean mIsStrongBoxBacked>;

        $z2 = r0.<android.security.keystore.KeyGenParameterSpec$Builder: boolean mUserConfirmationRequired>;

        $z1 = r0.<android.security.keystore.KeyGenParameterSpec$Builder: boolean mUnlockedDeviceRequired>;

        $z0 = r0.<android.security.keystore.KeyGenParameterSpec$Builder: boolean mCriticalToDeviceEncryption>;

        specialinvoke $r1.<android.security.keystore.KeyGenParameterSpec: void <init>(java.lang.String,int,int,java.security.spec.AlgorithmParameterSpec,javax.security.auth.x500.X500Principal,java.math.BigInteger,java.util.Date,java.util.Date,java.util.Date,java.util.Date,java.util.Date,int,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],boolean,boolean,int,int,boolean,byte[],boolean,boolean,boolean,boolean,boolean,boolean,boolean)>($r15, $i4, $i3, $r14, $r13, $r12, $r11, $r10, $r9, $r8, $r7, $i2, $r6, $r5, $r4, $r3, $z9, $z8, $i1, $i0, $z7, $r2, $z6, $z5, $z4, $z3, $z2, $z1, $z0);

        return $r1;
    }

    public android.security.keystore.KeyGenParameterSpec$Builder setAlgorithmParameterSpec(java.security.spec.AlgorithmParameterSpec)
    {
        android.security.keystore.KeyGenParameterSpec$Builder r0;
        java.security.spec.AlgorithmParameterSpec r1;
        java.lang.NullPointerException $r2;

        r0 := @this: android.security.keystore.KeyGenParameterSpec$Builder;

        r1 := @parameter0: java.security.spec.AlgorithmParameterSpec;

        if r1 == null goto label1;

        r0.<android.security.keystore.KeyGenParameterSpec$Builder: java.security.spec.AlgorithmParameterSpec mSpec> = r1;

        return r0;

     label1:
        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("spec == null");

        throw $r2;
    }

    public android.security.keystore.KeyGenParameterSpec$Builder setAttestationChallenge(byte[])
    {
        android.security.keystore.KeyGenParameterSpec$Builder r0;
        byte[] r1;

        r0 := @this: android.security.keystore.KeyGenParameterSpec$Builder;

        r1 := @parameter0: byte[];

        r0.<android.security.keystore.KeyGenParameterSpec$Builder: byte[] mAttestationChallenge> = r1;

        return r0;
    }

    public transient android.security.keystore.KeyGenParameterSpec$Builder setBlockModes(java.lang.String[])
    {
        android.security.keystore.KeyGenParameterSpec$Builder r0;
        java.lang.String[] r1, $r2;

        r0 := @this: android.security.keystore.KeyGenParameterSpec$Builder;

        r1 := @parameter0: java.lang.String[];

        $r2 = staticinvoke <android.security.keystore.ArrayUtils: java.lang.String[] cloneIfNotEmpty(java.lang.String[])>(r1);

        r0.<android.security.keystore.KeyGenParameterSpec$Builder: java.lang.String[] mBlockModes> = $r2;

        return r0;
    }

    public android.security.keystore.KeyGenParameterSpec$Builder setCertificateNotAfter(java.util.Date)
    {
        android.security.keystore.KeyGenParameterSpec$Builder r0;
        java.util.Date r1, $r3;
        java.lang.NullPointerException $r2;

        r0 := @this: android.security.keystore.KeyGenParameterSpec$Builder;

        r1 := @parameter0: java.util.Date;

        if r1 == null goto label1;

        $r3 = staticinvoke <android.security.keystore.Utils: java.util.Date cloneIfNotNull(java.util.Date)>(r1);

        r0.<android.security.keystore.KeyGenParameterSpec$Builder: java.util.Date mCertificateNotAfter> = $r3;

        return r0;

     label1:
        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("date == null");

        throw $r2;
    }

    public android.security.keystore.KeyGenParameterSpec$Builder setCertificateNotBefore(java.util.Date)
    {
        android.security.keystore.KeyGenParameterSpec$Builder r0;
        java.util.Date r1, $r3;
        java.lang.NullPointerException $r2;

        r0 := @this: android.security.keystore.KeyGenParameterSpec$Builder;

        r1 := @parameter0: java.util.Date;

        if r1 == null goto label1;

        $r3 = staticinvoke <android.security.keystore.Utils: java.util.Date cloneIfNotNull(java.util.Date)>(r1);

        r0.<android.security.keystore.KeyGenParameterSpec$Builder: java.util.Date mCertificateNotBefore> = $r3;

        return r0;

     label1:
        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("date == null");

        throw $r2;
    }

    public android.security.keystore.KeyGenParameterSpec$Builder setCertificateSerialNumber(java.math.BigInteger)
    {
        android.security.keystore.KeyGenParameterSpec$Builder r0;
        java.math.BigInteger r1;
        java.lang.NullPointerException $r2;

        r0 := @this: android.security.keystore.KeyGenParameterSpec$Builder;

        r1 := @parameter0: java.math.BigInteger;

        if r1 == null goto label1;

        r0.<android.security.keystore.KeyGenParameterSpec$Builder: java.math.BigInteger mCertificateSerialNumber> = r1;

        return r0;

     label1:
        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("serialNumber == null");

        throw $r2;
    }

    public android.security.keystore.KeyGenParameterSpec$Builder setCertificateSubject(javax.security.auth.x500.X500Principal)
    {
        android.security.keystore.KeyGenParameterSpec$Builder r0;
        javax.security.auth.x500.X500Principal r1;
        java.lang.NullPointerException $r2;

        r0 := @this: android.security.keystore.KeyGenParameterSpec$Builder;

        r1 := @parameter0: javax.security.auth.x500.X500Principal;

        if r1 == null goto label1;

        r0.<android.security.keystore.KeyGenParameterSpec$Builder: javax.security.auth.x500.X500Principal mCertificateSubject> = r1;

        return r0;

     label1:
        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("subject == null");

        throw $r2;
    }

    public android.security.keystore.KeyGenParameterSpec$Builder setCriticalToDeviceEncryption(boolean)
    {
        android.security.keystore.KeyGenParameterSpec$Builder r0;
        boolean z0;

        r0 := @this: android.security.keystore.KeyGenParameterSpec$Builder;

        z0 := @parameter0: boolean;

        r0.<android.security.keystore.KeyGenParameterSpec$Builder: boolean mCriticalToDeviceEncryption> = z0;

        return r0;
    }

    public transient android.security.keystore.KeyGenParameterSpec$Builder setDigests(java.lang.String[])
    {
        android.security.keystore.KeyGenParameterSpec$Builder r0;
        java.lang.String[] r1, $r2;

        r0 := @this: android.security.keystore.KeyGenParameterSpec$Builder;

        r1 := @parameter0: java.lang.String[];

        $r2 = staticinvoke <android.security.keystore.ArrayUtils: java.lang.String[] cloneIfNotEmpty(java.lang.String[])>(r1);

        r0.<android.security.keystore.KeyGenParameterSpec$Builder: java.lang.String[] mDigests> = $r2;

        return r0;
    }

    public transient android.security.keystore.KeyGenParameterSpec$Builder setEncryptionPaddings(java.lang.String[])
    {
        android.security.keystore.KeyGenParameterSpec$Builder r0;
        java.lang.String[] r1, $r2;

        r0 := @this: android.security.keystore.KeyGenParameterSpec$Builder;

        r1 := @parameter0: java.lang.String[];

        $r2 = staticinvoke <android.security.keystore.ArrayUtils: java.lang.String[] cloneIfNotEmpty(java.lang.String[])>(r1);

        r0.<android.security.keystore.KeyGenParameterSpec$Builder: java.lang.String[] mEncryptionPaddings> = $r2;

        return r0;
    }

    public android.security.keystore.KeyGenParameterSpec$Builder setInvalidatedByBiometricEnrollment(boolean)
    {
        android.security.keystore.KeyGenParameterSpec$Builder r0;
        boolean z0;

        r0 := @this: android.security.keystore.KeyGenParameterSpec$Builder;

        z0 := @parameter0: boolean;

        r0.<android.security.keystore.KeyGenParameterSpec$Builder: boolean mInvalidatedByBiometricEnrollment> = z0;

        return r0;
    }

    public android.security.keystore.KeyGenParameterSpec$Builder setIsStrongBoxBacked(boolean)
    {
        android.security.keystore.KeyGenParameterSpec$Builder r0;
        boolean z0;

        r0 := @this: android.security.keystore.KeyGenParameterSpec$Builder;

        z0 := @parameter0: boolean;

        r0.<android.security.keystore.KeyGenParameterSpec$Builder: boolean mIsStrongBoxBacked> = z0;

        return r0;
    }

    public android.security.keystore.KeyGenParameterSpec$Builder setKeySize(int)
    {
        android.security.keystore.KeyGenParameterSpec$Builder r0;
        int i0;
        java.lang.IllegalArgumentException $r1;

        r0 := @this: android.security.keystore.KeyGenParameterSpec$Builder;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        r0.<android.security.keystore.KeyGenParameterSpec$Builder: int mKeySize> = i0;

        return r0;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("keySize < 0");

        throw $r1;
    }

    public android.security.keystore.KeyGenParameterSpec$Builder setKeyValidityEnd(java.util.Date)
    {
        android.security.keystore.KeyGenParameterSpec$Builder r0;
        java.util.Date r1;

        r0 := @this: android.security.keystore.KeyGenParameterSpec$Builder;

        r1 := @parameter0: java.util.Date;

        virtualinvoke r0.<android.security.keystore.KeyGenParameterSpec$Builder: android.security.keystore.KeyGenParameterSpec$Builder setKeyValidityForOriginationEnd(java.util.Date)>(r1);

        virtualinvoke r0.<android.security.keystore.KeyGenParameterSpec$Builder: android.security.keystore.KeyGenParameterSpec$Builder setKeyValidityForConsumptionEnd(java.util.Date)>(r1);

        return r0;
    }

    public android.security.keystore.KeyGenParameterSpec$Builder setKeyValidityForConsumptionEnd(java.util.Date)
    {
        android.security.keystore.KeyGenParameterSpec$Builder r0;
        java.util.Date r1, $r2;

        r0 := @this: android.security.keystore.KeyGenParameterSpec$Builder;

        r1 := @parameter0: java.util.Date;

        $r2 = staticinvoke <android.security.keystore.Utils: java.util.Date cloneIfNotNull(java.util.Date)>(r1);

        r0.<android.security.keystore.KeyGenParameterSpec$Builder: java.util.Date mKeyValidityForConsumptionEnd> = $r2;

        return r0;
    }

    public android.security.keystore.KeyGenParameterSpec$Builder setKeyValidityForOriginationEnd(java.util.Date)
    {
        android.security.keystore.KeyGenParameterSpec$Builder r0;
        java.util.Date r1, $r2;

        r0 := @this: android.security.keystore.KeyGenParameterSpec$Builder;

        r1 := @parameter0: java.util.Date;

        $r2 = staticinvoke <android.security.keystore.Utils: java.util.Date cloneIfNotNull(java.util.Date)>(r1);

        r0.<android.security.keystore.KeyGenParameterSpec$Builder: java.util.Date mKeyValidityForOriginationEnd> = $r2;

        return r0;
    }

    public android.security.keystore.KeyGenParameterSpec$Builder setKeyValidityStart(java.util.Date)
    {
        android.security.keystore.KeyGenParameterSpec$Builder r0;
        java.util.Date r1, $r2;

        r0 := @this: android.security.keystore.KeyGenParameterSpec$Builder;

        r1 := @parameter0: java.util.Date;

        $r2 = staticinvoke <android.security.keystore.Utils: java.util.Date cloneIfNotNull(java.util.Date)>(r1);

        r0.<android.security.keystore.KeyGenParameterSpec$Builder: java.util.Date mKeyValidityStart> = $r2;

        return r0;
    }

    public android.security.keystore.KeyGenParameterSpec$Builder setRandomizedEncryptionRequired(boolean)
    {
        android.security.keystore.KeyGenParameterSpec$Builder r0;
        boolean z0;

        r0 := @this: android.security.keystore.KeyGenParameterSpec$Builder;

        z0 := @parameter0: boolean;

        r0.<android.security.keystore.KeyGenParameterSpec$Builder: boolean mRandomizedEncryptionRequired> = z0;

        return r0;
    }

    public transient android.security.keystore.KeyGenParameterSpec$Builder setSignaturePaddings(java.lang.String[])
    {
        android.security.keystore.KeyGenParameterSpec$Builder r0;
        java.lang.String[] r1, $r2;

        r0 := @this: android.security.keystore.KeyGenParameterSpec$Builder;

        r1 := @parameter0: java.lang.String[];

        $r2 = staticinvoke <android.security.keystore.ArrayUtils: java.lang.String[] cloneIfNotEmpty(java.lang.String[])>(r1);

        r0.<android.security.keystore.KeyGenParameterSpec$Builder: java.lang.String[] mSignaturePaddings> = $r2;

        return r0;
    }

    public android.security.keystore.KeyGenParameterSpec$Builder setUid(int)
    {
        android.security.keystore.KeyGenParameterSpec$Builder r0;
        int i0;

        r0 := @this: android.security.keystore.KeyGenParameterSpec$Builder;

        i0 := @parameter0: int;

        r0.<android.security.keystore.KeyGenParameterSpec$Builder: int mUid> = i0;

        return r0;
    }

    public android.security.keystore.KeyGenParameterSpec$Builder setUniqueIdIncluded(boolean)
    {
        android.security.keystore.KeyGenParameterSpec$Builder r0;
        boolean z0;

        r0 := @this: android.security.keystore.KeyGenParameterSpec$Builder;

        z0 := @parameter0: boolean;

        r0.<android.security.keystore.KeyGenParameterSpec$Builder: boolean mUniqueIdIncluded> = z0;

        return r0;
    }

    public android.security.keystore.KeyGenParameterSpec$Builder setUnlockedDeviceRequired(boolean)
    {
        android.security.keystore.KeyGenParameterSpec$Builder r0;
        boolean z0;

        r0 := @this: android.security.keystore.KeyGenParameterSpec$Builder;

        z0 := @parameter0: boolean;

        r0.<android.security.keystore.KeyGenParameterSpec$Builder: boolean mUnlockedDeviceRequired> = z0;

        return r0;
    }

    public android.security.keystore.KeyGenParameterSpec$Builder setUserAuthenticationParameters(int, int)
    {
        android.security.keystore.KeyGenParameterSpec$Builder r0;
        int i0, i1;
        java.lang.IllegalArgumentException $r1;

        r0 := @this: android.security.keystore.KeyGenParameterSpec$Builder;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i0 < 0 goto label1;

        r0.<android.security.keystore.KeyGenParameterSpec$Builder: int mUserAuthenticationValidityDurationSeconds> = i0;

        r0.<android.security.keystore.KeyGenParameterSpec$Builder: int mUserAuthenticationType> = i1;

        return r0;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("timeout must be 0 or larger");

        throw $r1;
    }

    public android.security.keystore.KeyGenParameterSpec$Builder setUserAuthenticationRequired(boolean)
    {
        android.security.keystore.KeyGenParameterSpec$Builder r0;
        boolean z0;

        r0 := @this: android.security.keystore.KeyGenParameterSpec$Builder;

        z0 := @parameter0: boolean;

        r0.<android.security.keystore.KeyGenParameterSpec$Builder: boolean mUserAuthenticationRequired> = z0;

        return r0;
    }

    public android.security.keystore.KeyGenParameterSpec$Builder setUserAuthenticationValidWhileOnBody(boolean)
    {
        android.security.keystore.KeyGenParameterSpec$Builder r0;
        boolean z0;

        r0 := @this: android.security.keystore.KeyGenParameterSpec$Builder;

        z0 := @parameter0: boolean;

        r0.<android.security.keystore.KeyGenParameterSpec$Builder: boolean mUserAuthenticationValidWhileOnBody> = z0;

        return r0;
    }

    public android.security.keystore.KeyGenParameterSpec$Builder setUserAuthenticationValidityDurationSeconds(int)
    {
        android.security.keystore.KeyGenParameterSpec$Builder r0, $r2, $r3;
        int i0;
        java.lang.IllegalArgumentException $r1;

        r0 := @this: android.security.keystore.KeyGenParameterSpec$Builder;

        i0 := @parameter0: int;

        if i0 < -1 goto label2;

        if i0 != -1 goto label1;

        $r3 = virtualinvoke r0.<android.security.keystore.KeyGenParameterSpec$Builder: android.security.keystore.KeyGenParameterSpec$Builder setUserAuthenticationParameters(int,int)>(0, 2);

        return $r3;

     label1:
        $r2 = virtualinvoke r0.<android.security.keystore.KeyGenParameterSpec$Builder: android.security.keystore.KeyGenParameterSpec$Builder setUserAuthenticationParameters(int,int)>(i0, 3);

        return $r2;

     label2:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("seconds must be -1 or larger");

        throw $r1;
    }

    public android.security.keystore.KeyGenParameterSpec$Builder setUserConfirmationRequired(boolean)
    {
        android.security.keystore.KeyGenParameterSpec$Builder r0;
        boolean z0;

        r0 := @this: android.security.keystore.KeyGenParameterSpec$Builder;

        z0 := @parameter0: boolean;

        r0.<android.security.keystore.KeyGenParameterSpec$Builder: boolean mUserConfirmationRequired> = z0;

        return r0;
    }

    public android.security.keystore.KeyGenParameterSpec$Builder setUserPresenceRequired(boolean)
    {
        android.security.keystore.KeyGenParameterSpec$Builder r0;
        boolean z0;

        r0 := @this: android.security.keystore.KeyGenParameterSpec$Builder;

        z0 := @parameter0: boolean;

        r0.<android.security.keystore.KeyGenParameterSpec$Builder: boolean mUserPresenceRequired> = z0;

        return r0;
    }
}
