public class android.security.keystore.KeyInfo extends java.lang.Object implements java.security.spec.KeySpec
{
    private final java.lang.String[] mBlockModes;
    private final java.lang.String[] mDigests;
    private final java.lang.String[] mEncryptionPaddings;
    private final boolean mInsideSecureHardware;
    private final boolean mInvalidatedByBiometricEnrollment;
    private final int mKeySize;
    private final java.util.Date mKeyValidityForConsumptionEnd;
    private final java.util.Date mKeyValidityForOriginationEnd;
    private final java.util.Date mKeyValidityStart;
    private final java.lang.String mKeystoreAlias;
    private final int mOrigin;
    private final int mPurposes;
    private final java.lang.String[] mSignaturePaddings;
    private final boolean mTrustedUserPresenceRequired;
    private final boolean mUserAuthenticationRequired;
    private final boolean mUserAuthenticationRequirementEnforcedBySecureHardware;
    private final int mUserAuthenticationType;
    private final boolean mUserAuthenticationValidWhileOnBody;
    private final int mUserAuthenticationValidityDurationSeconds;
    private final boolean mUserConfirmationRequired;

    public void <init>(java.lang.String, boolean, int, int, java.util.Date, java.util.Date, java.util.Date, int, java.lang.String[], java.lang.String[], java.lang.String[], java.lang.String[], boolean, int, int, boolean, boolean, boolean, boolean, boolean)
    {
        android.security.keystore.KeyInfo r0;
        java.lang.String r1;
        boolean z0, z1, z2, z3, z4, z5, z6;
        int i0, i1, i2, i3, i4;
        java.util.Date r2, r3, r4, $r9, $r10, $r11;
        java.lang.String[] r5, r6, r7, r8, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19;

        r0 := @this: android.security.keystore.KeyInfo;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        r2 := @parameter4: java.util.Date;

        r3 := @parameter5: java.util.Date;

        r4 := @parameter6: java.util.Date;

        i2 := @parameter7: int;

        r5 := @parameter8: java.lang.String[];

        r6 := @parameter9: java.lang.String[];

        r7 := @parameter10: java.lang.String[];

        r8 := @parameter11: java.lang.String[];

        z1 := @parameter12: boolean;

        i3 := @parameter13: int;

        i4 := @parameter14: int;

        z2 := @parameter15: boolean;

        z3 := @parameter16: boolean;

        z4 := @parameter17: boolean;

        z5 := @parameter18: boolean;

        z6 := @parameter19: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.security.keystore.KeyInfo: java.lang.String mKeystoreAlias> = r1;

        r0.<android.security.keystore.KeyInfo: boolean mInsideSecureHardware> = z0;

        r0.<android.security.keystore.KeyInfo: int mOrigin> = i0;

        r0.<android.security.keystore.KeyInfo: int mKeySize> = i1;

        $r9 = staticinvoke <android.security.keystore.Utils: java.util.Date cloneIfNotNull(java.util.Date)>(r2);

        r0.<android.security.keystore.KeyInfo: java.util.Date mKeyValidityStart> = $r9;

        $r10 = staticinvoke <android.security.keystore.Utils: java.util.Date cloneIfNotNull(java.util.Date)>(r3);

        r0.<android.security.keystore.KeyInfo: java.util.Date mKeyValidityForOriginationEnd> = $r10;

        $r11 = staticinvoke <android.security.keystore.Utils: java.util.Date cloneIfNotNull(java.util.Date)>(r4);

        r0.<android.security.keystore.KeyInfo: java.util.Date mKeyValidityForConsumptionEnd> = $r11;

        r0.<android.security.keystore.KeyInfo: int mPurposes> = i2;

        $r12 = staticinvoke <android.security.keystore.ArrayUtils: java.lang.String[] nullToEmpty(java.lang.String[])>(r5);

        $r13 = staticinvoke <android.security.keystore.ArrayUtils: java.lang.String[] cloneIfNotEmpty(java.lang.String[])>($r12);

        r0.<android.security.keystore.KeyInfo: java.lang.String[] mEncryptionPaddings> = $r13;

        $r14 = staticinvoke <android.security.keystore.ArrayUtils: java.lang.String[] nullToEmpty(java.lang.String[])>(r6);

        $r15 = staticinvoke <android.security.keystore.ArrayUtils: java.lang.String[] cloneIfNotEmpty(java.lang.String[])>($r14);

        r0.<android.security.keystore.KeyInfo: java.lang.String[] mSignaturePaddings> = $r15;

        $r16 = staticinvoke <android.security.keystore.ArrayUtils: java.lang.String[] nullToEmpty(java.lang.String[])>(r7);

        $r17 = staticinvoke <android.security.keystore.ArrayUtils: java.lang.String[] cloneIfNotEmpty(java.lang.String[])>($r16);

        r0.<android.security.keystore.KeyInfo: java.lang.String[] mDigests> = $r17;

        $r18 = staticinvoke <android.security.keystore.ArrayUtils: java.lang.String[] nullToEmpty(java.lang.String[])>(r8);

        $r19 = staticinvoke <android.security.keystore.ArrayUtils: java.lang.String[] cloneIfNotEmpty(java.lang.String[])>($r18);

        r0.<android.security.keystore.KeyInfo: java.lang.String[] mBlockModes> = $r19;

        r0.<android.security.keystore.KeyInfo: boolean mUserAuthenticationRequired> = z1;

        r0.<android.security.keystore.KeyInfo: int mUserAuthenticationValidityDurationSeconds> = i3;

        r0.<android.security.keystore.KeyInfo: int mUserAuthenticationType> = i4;

        r0.<android.security.keystore.KeyInfo: boolean mUserAuthenticationRequirementEnforcedBySecureHardware> = z2;

        r0.<android.security.keystore.KeyInfo: boolean mUserAuthenticationValidWhileOnBody> = z3;

        r0.<android.security.keystore.KeyInfo: boolean mTrustedUserPresenceRequired> = z4;

        r0.<android.security.keystore.KeyInfo: boolean mInvalidatedByBiometricEnrollment> = z5;

        r0.<android.security.keystore.KeyInfo: boolean mUserConfirmationRequired> = z6;

        return;
    }

    public java.lang.String[] getBlockModes()
    {
        android.security.keystore.KeyInfo r0;
        java.lang.String[] $r1, $r2;

        r0 := @this: android.security.keystore.KeyInfo;

        $r1 = r0.<android.security.keystore.KeyInfo: java.lang.String[] mBlockModes>;

        $r2 = staticinvoke <android.security.keystore.ArrayUtils: java.lang.String[] cloneIfNotEmpty(java.lang.String[])>($r1);

        return $r2;
    }

    public java.lang.String[] getDigests()
    {
        android.security.keystore.KeyInfo r0;
        java.lang.String[] $r1, $r2;

        r0 := @this: android.security.keystore.KeyInfo;

        $r1 = r0.<android.security.keystore.KeyInfo: java.lang.String[] mDigests>;

        $r2 = staticinvoke <android.security.keystore.ArrayUtils: java.lang.String[] cloneIfNotEmpty(java.lang.String[])>($r1);

        return $r2;
    }

    public java.lang.String[] getEncryptionPaddings()
    {
        android.security.keystore.KeyInfo r0;
        java.lang.String[] $r1, $r2;

        r0 := @this: android.security.keystore.KeyInfo;

        $r1 = r0.<android.security.keystore.KeyInfo: java.lang.String[] mEncryptionPaddings>;

        $r2 = staticinvoke <android.security.keystore.ArrayUtils: java.lang.String[] cloneIfNotEmpty(java.lang.String[])>($r1);

        return $r2;
    }

    public int getKeySize()
    {
        android.security.keystore.KeyInfo r0;
        int $i0;

        r0 := @this: android.security.keystore.KeyInfo;

        $i0 = r0.<android.security.keystore.KeyInfo: int mKeySize>;

        return $i0;
    }

    public java.util.Date getKeyValidityForConsumptionEnd()
    {
        android.security.keystore.KeyInfo r0;
        java.util.Date $r1, $r2;

        r0 := @this: android.security.keystore.KeyInfo;

        $r1 = r0.<android.security.keystore.KeyInfo: java.util.Date mKeyValidityForConsumptionEnd>;

        $r2 = staticinvoke <android.security.keystore.Utils: java.util.Date cloneIfNotNull(java.util.Date)>($r1);

        return $r2;
    }

    public java.util.Date getKeyValidityForOriginationEnd()
    {
        android.security.keystore.KeyInfo r0;
        java.util.Date $r1, $r2;

        r0 := @this: android.security.keystore.KeyInfo;

        $r1 = r0.<android.security.keystore.KeyInfo: java.util.Date mKeyValidityForOriginationEnd>;

        $r2 = staticinvoke <android.security.keystore.Utils: java.util.Date cloneIfNotNull(java.util.Date)>($r1);

        return $r2;
    }

    public java.util.Date getKeyValidityStart()
    {
        android.security.keystore.KeyInfo r0;
        java.util.Date $r1, $r2;

        r0 := @this: android.security.keystore.KeyInfo;

        $r1 = r0.<android.security.keystore.KeyInfo: java.util.Date mKeyValidityStart>;

        $r2 = staticinvoke <android.security.keystore.Utils: java.util.Date cloneIfNotNull(java.util.Date)>($r1);

        return $r2;
    }

    public java.lang.String getKeystoreAlias()
    {
        android.security.keystore.KeyInfo r0;
        java.lang.String $r1;

        r0 := @this: android.security.keystore.KeyInfo;

        $r1 = r0.<android.security.keystore.KeyInfo: java.lang.String mKeystoreAlias>;

        return $r1;
    }

    public int getOrigin()
    {
        android.security.keystore.KeyInfo r0;
        int $i0;

        r0 := @this: android.security.keystore.KeyInfo;

        $i0 = r0.<android.security.keystore.KeyInfo: int mOrigin>;

        return $i0;
    }

    public int getPurposes()
    {
        android.security.keystore.KeyInfo r0;
        int $i0;

        r0 := @this: android.security.keystore.KeyInfo;

        $i0 = r0.<android.security.keystore.KeyInfo: int mPurposes>;

        return $i0;
    }

    public java.lang.String[] getSignaturePaddings()
    {
        android.security.keystore.KeyInfo r0;
        java.lang.String[] $r1, $r2;

        r0 := @this: android.security.keystore.KeyInfo;

        $r1 = r0.<android.security.keystore.KeyInfo: java.lang.String[] mSignaturePaddings>;

        $r2 = staticinvoke <android.security.keystore.ArrayUtils: java.lang.String[] cloneIfNotEmpty(java.lang.String[])>($r1);

        return $r2;
    }

    public int getUserAuthenticationType()
    {
        android.security.keystore.KeyInfo r0;
        int $i0;

        r0 := @this: android.security.keystore.KeyInfo;

        $i0 = r0.<android.security.keystore.KeyInfo: int mUserAuthenticationType>;

        return $i0;
    }

    public int getUserAuthenticationValidityDurationSeconds()
    {
        android.security.keystore.KeyInfo r0;
        int $i0;

        r0 := @this: android.security.keystore.KeyInfo;

        $i0 = r0.<android.security.keystore.KeyInfo: int mUserAuthenticationValidityDurationSeconds>;

        return $i0;
    }

    public boolean isInsideSecureHardware()
    {
        android.security.keystore.KeyInfo r0;
        boolean $z0;

        r0 := @this: android.security.keystore.KeyInfo;

        $z0 = r0.<android.security.keystore.KeyInfo: boolean mInsideSecureHardware>;

        return $z0;
    }

    public boolean isInvalidatedByBiometricEnrollment()
    {
        android.security.keystore.KeyInfo r0;
        boolean $z0;

        r0 := @this: android.security.keystore.KeyInfo;

        $z0 = r0.<android.security.keystore.KeyInfo: boolean mInvalidatedByBiometricEnrollment>;

        return $z0;
    }

    public boolean isTrustedUserPresenceRequired()
    {
        android.security.keystore.KeyInfo r0;
        boolean $z0;

        r0 := @this: android.security.keystore.KeyInfo;

        $z0 = r0.<android.security.keystore.KeyInfo: boolean mTrustedUserPresenceRequired>;

        return $z0;
    }

    public boolean isUserAuthenticationRequired()
    {
        android.security.keystore.KeyInfo r0;
        boolean $z0;

        r0 := @this: android.security.keystore.KeyInfo;

        $z0 = r0.<android.security.keystore.KeyInfo: boolean mUserAuthenticationRequired>;

        return $z0;
    }

    public boolean isUserAuthenticationRequirementEnforcedBySecureHardware()
    {
        android.security.keystore.KeyInfo r0;
        boolean $z0;

        r0 := @this: android.security.keystore.KeyInfo;

        $z0 = r0.<android.security.keystore.KeyInfo: boolean mUserAuthenticationRequirementEnforcedBySecureHardware>;

        return $z0;
    }

    public boolean isUserAuthenticationValidWhileOnBody()
    {
        android.security.keystore.KeyInfo r0;
        boolean $z0;

        r0 := @this: android.security.keystore.KeyInfo;

        $z0 = r0.<android.security.keystore.KeyInfo: boolean mUserAuthenticationValidWhileOnBody>;

        return $z0;
    }

    public boolean isUserConfirmationRequired()
    {
        android.security.keystore.KeyInfo r0;
        boolean $z0;

        r0 := @this: android.security.keystore.KeyInfo;

        $z0 = r0.<android.security.keystore.KeyInfo: boolean mUserConfirmationRequired>;

        return $z0;
    }
}
