public abstract class android.security.keystore.KeyProperties$BlockMode extends java.lang.Object
{

    private void <init>()
    {
        android.security.keystore.KeyProperties$BlockMode r0;

        r0 := @this: android.security.keystore.KeyProperties$BlockMode;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String[] allFromKeymaster(java.util.Collection)
    {
        java.lang.String[] r0, $r1;
        boolean $z0, $z1;
        int $i0, $i1, i2;
        java.lang.Object $r2;
        java.lang.Integer $r3;
        java.lang.String $r4;
        java.util.Collection r5;
        java.util.Iterator r6;

        r5 := @parameter0: java.util.Collection;

        if r5 == null goto label4;

        $z0 = interfaceinvoke r5.<java.util.Collection: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        goto label4;

     label1:
        $i0 = interfaceinvoke r5.<java.util.Collection: int size()>();

        r0 = newarray (java.lang.String)[$i0];

        i2 = 0;

        r6 = interfaceinvoke r5.<java.util.Collection: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r2 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();

        $r3 = (java.lang.Integer) $r2;

        $i1 = virtualinvoke $r3.<java.lang.Integer: int intValue()>();

        $r4 = staticinvoke <android.security.keystore.KeyProperties$BlockMode: java.lang.String fromKeymaster(int)>($i1);

        r0[i2] = $r4;

        i2 = i2 + 1;

        goto label2;

     label3:
        return r0;

     label4:
        $r1 = <libcore.util.EmptyArray: java.lang.String[] STRING>;

        return $r1;
    }

    public static int[] allToKeymaster(java.lang.String[])
    {
        java.lang.String[] r0;
        int[] r1, $r2;
        int $i0, $i1, $i2, $i3, i4;
        java.lang.String $r3;

        r0 := @parameter0: java.lang.String[];

        if r0 == null goto label4;

        $i0 = lengthof r0;

        if $i0 != 0 goto label1;

        goto label4;

     label1:
        $i1 = lengthof r0;

        r1 = newarray (int)[$i1];

        i4 = 0;

     label2:
        $i2 = lengthof r0;

        if i4 >= $i2 goto label3;

        $r3 = r0[i4];

        $i3 = staticinvoke <android.security.keystore.KeyProperties$BlockMode: int toKeymaster(java.lang.String)>($r3);

        r1[i4] = $i3;

        i4 = i4 + 1;

        goto label2;

     label3:
        return r1;

     label4:
        $r2 = <libcore.util.EmptyArray: int[] INT>;

        return $r2;
    }

    public static java.lang.String fromKeymaster(int)
    {
        int i0;
        java.lang.StringBuilder $r1;
        java.lang.IllegalArgumentException $r4;
        java.lang.String $r5;

        i0 := @parameter0: int;

        if i0 == 1 goto label4;

        if i0 == 2 goto label3;

        if i0 == 3 goto label2;

        if i0 != 32 goto label1;

        return "GCM";

     label1:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported block mode: ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r4;

     label2:
        return "CTR";

     label3:
        return "CBC";

     label4:
        return "ECB";
    }

    public static int toKeymaster(java.lang.String)
    {
        java.lang.String r0, $r2, $r3, $r4, $r5, $r10;
        boolean $z0, $z1, $z2, $z3;
        java.lang.StringBuilder $r6;
        java.lang.IllegalArgumentException $r9;

        r0 := @parameter0: java.lang.String;

        $r2 = "ECB";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r0);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $r3 = "CBC";

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r0);

        if $z1 == 0 goto label2;

        return 2;

     label2:
        $r4 = "CTR";

        $z2 = virtualinvoke $r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r0);

        if $z2 == 0 goto label3;

        return 3;

     label3:
        $r5 = "GCM";

        $z3 = virtualinvoke $r5.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r0);

        if $z3 == 0 goto label4;

        return 32;

     label4:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported block mode: ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r9 = new java.lang.IllegalArgumentException;

        $r10 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r10);

        throw $r9;
    }
}
