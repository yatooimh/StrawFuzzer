public abstract class android.security.keystore.KeyProperties$KeyAlgorithm extends java.lang.Object
{

    private void <init>()
    {
        android.security.keystore.KeyProperties$KeyAlgorithm r0;

        r0 := @this: android.security.keystore.KeyProperties$KeyAlgorithm;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String fromKeymasterAsymmetricKeyAlgorithm(int)
    {
        int i0;
        java.lang.StringBuilder $r1;
        java.lang.IllegalArgumentException $r4;
        java.lang.String $r5;

        i0 := @parameter0: int;

        if i0 == 1 goto label2;

        if i0 != 3 goto label1;

        return "EC";

     label1:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported key algorithm: ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r4;

     label2:
        return "RSA";
    }

    public static java.lang.String fromKeymasterSecretKeyAlgorithm(int, int)
    {
        int i0, i1;
        java.lang.StringBuilder $r0, $r5;
        java.lang.IllegalArgumentException $r3, $r9;
        java.lang.String $r4, $r7, $r10;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i0 == 32 goto label8;

        if i0 == 33 goto label7;

        if i0 != 128 goto label6;

        if i1 == 2 goto label5;

        if i1 == 3 goto label4;

        if i1 == 4 goto label3;

        if i1 == 5 goto label2;

        if i1 != 6 goto label1;

        return "HmacSHA512";

     label1:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported HMAC digest: ");

        $r7 = staticinvoke <android.security.keystore.KeyProperties$Digest: java.lang.String fromKeymaster(int)>(i1);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = new java.lang.IllegalArgumentException;

        $r10 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r10);

        throw $r9;

     label2:
        return "HmacSHA384";

     label3:
        return "HmacSHA256";

     label4:
        return "HmacSHA224";

     label5:
        return "HmacSHA1";

     label6:
        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported key algorithm: ");

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r3 = new java.lang.IllegalArgumentException;

        $r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r4);

        throw $r3;

     label7:
        return "DESede";

     label8:
        return "AES";
    }

    public static int toKeymasterAsymmetricKeyAlgorithm(java.lang.String)
    {
        java.lang.String r0, $r2, $r3, $r8;
        boolean $z0, $z1;
        java.lang.StringBuilder $r4;
        java.lang.IllegalArgumentException $r7;

        r0 := @parameter0: java.lang.String;

        $r2 = "EC";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r0);

        if $z0 == 0 goto label1;

        return 3;

     label1:
        $r3 = "RSA";

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r0);

        if $z1 == 0 goto label2;

        return 1;

     label2:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported key algorithm: ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r7 = new java.lang.IllegalArgumentException;

        $r8 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r7;
    }

    public static int toKeymasterDigest(java.lang.String)
    {
        boolean z0, $z1, $z2, $z3, $z4, $z5;
        java.util.Locale $r1;
        java.lang.String $r2, $r7, r8, r9, r10;
        int $i0, $i1;
        java.lang.StringBuilder $r3;
        java.lang.IllegalArgumentException $r6;
        byte b2;

        r8 := @parameter0: java.lang.String;

        $r1 = <java.util.Locale: java.util.Locale US>;

        r9 = virtualinvoke r8.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>($r1);

        z0 = virtualinvoke r9.<java.lang.String: boolean startsWith(java.lang.String)>("HMAC");

        b2 = -1;

        if z0 == 0 goto label13;

        $r2 = "HMAC";

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        r10 = virtualinvoke r9.<java.lang.String: java.lang.String substring(int)>($i0);

        $i1 = virtualinvoke r10.<java.lang.String: int hashCode()>();

        lookupswitch($i1)
        {
            case -1850268184: goto label06;
            case -1850268089: goto label05;
            case -1850267037: goto label04;
            case -1850265334: goto label03;
            case 2543909: goto label02;
            default: goto label01;
        };

     label01:
        goto label07;

     label02:
        $z1 = virtualinvoke r10.<java.lang.String: boolean equals(java.lang.Object)>("SHA1");

        if $z1 == 0 goto label01;

        b2 = 0;

        goto label07;

     label03:
        $z2 = virtualinvoke r10.<java.lang.String: boolean equals(java.lang.Object)>("SHA512");

        if $z2 == 0 goto label01;

        b2 = 4;

        goto label07;

     label04:
        $z3 = virtualinvoke r10.<java.lang.String: boolean equals(java.lang.Object)>("SHA384");

        if $z3 == 0 goto label01;

        b2 = 3;

        goto label07;

     label05:
        $z4 = virtualinvoke r10.<java.lang.String: boolean equals(java.lang.Object)>("SHA256");

        if $z4 == 0 goto label01;

        b2 = 2;

        goto label07;

     label06:
        $z5 = virtualinvoke r10.<java.lang.String: boolean equals(java.lang.Object)>("SHA224");

        if $z5 == 0 goto label01;

        b2 = 1;

     label07:
        if b2 == 0 goto label12;

        if b2 == 1 goto label11;

        if b2 == 2 goto label10;

        if b2 == 3 goto label09;

        if b2 != 4 goto label08;

        return 6;

     label08:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported HMAC digest: ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10);

        $r6 = new java.lang.IllegalArgumentException;

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r6;

     label09:
        return 5;

     label10:
        return 4;

     label11:
        return 3;

     label12:
        return 2;

     label13:
        return -1;
    }

    public static int toKeymasterSecretKeyAlgorithm(java.lang.String)
    {
        java.lang.String r0, $r2, $r3, $r5, $r10;
        boolean $z0, $z1, $z2;
        java.util.Locale $r4;
        java.lang.StringBuilder $r6;
        java.lang.IllegalArgumentException $r9;

        r0 := @parameter0: java.lang.String;

        $r2 = "AES";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r0);

        if $z0 == 0 goto label1;

        return 32;

     label1:
        $r3 = "DESede";

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r0);

        if $z1 == 0 goto label2;

        return 33;

     label2:
        $r4 = <java.util.Locale: java.util.Locale US>;

        $r5 = virtualinvoke r0.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>($r4);

        $z2 = virtualinvoke $r5.<java.lang.String: boolean startsWith(java.lang.String)>("HMAC");

        if $z2 == 0 goto label3;

        return 128;

     label3:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported secret key algorithm: ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r9 = new java.lang.IllegalArgumentException;

        $r10 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r10);

        throw $r9;
    }
}
