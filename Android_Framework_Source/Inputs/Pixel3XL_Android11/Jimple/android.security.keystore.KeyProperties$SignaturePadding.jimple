abstract class android.security.keystore.KeyProperties$SignaturePadding extends java.lang.Object
{

    private void <init>()
    {
        android.security.keystore.KeyProperties$SignaturePadding r0;

        r0 := @this: android.security.keystore.KeyProperties$SignaturePadding;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static int[] allToKeymaster(java.lang.String[])
    {
        java.lang.String[] r0;
        int[] r1, $r2;
        int $i0, $i1, $i2, $i3, i4;
        java.lang.String $r3;

        r0 := @parameter0: java.lang.String[];

        if r0 == null goto label4;

        $i0 = lengthof r0;

        if $i0 != 0 goto label1;

        goto label4;

     label1:
        $i1 = lengthof r0;

        r1 = newarray (int)[$i1];

        i4 = 0;

     label2:
        $i2 = lengthof r0;

        if i4 >= $i2 goto label3;

        $r3 = r0[i4];

        $i3 = staticinvoke <android.security.keystore.KeyProperties$SignaturePadding: int toKeymaster(java.lang.String)>($r3);

        r1[i4] = $i3;

        i4 = i4 + 1;

        goto label2;

     label3:
        return r1;

     label4:
        $r2 = <libcore.util.EmptyArray: int[] INT>;

        return $r2;
    }

    static java.lang.String fromKeymaster(int)
    {
        int i0;
        java.lang.StringBuilder $r1;
        java.lang.IllegalArgumentException $r4;
        java.lang.String $r5;

        i0 := @parameter0: int;

        if i0 == 3 goto label2;

        if i0 != 5 goto label1;

        return "PKCS1";

     label1:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported signature padding: ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r4;

     label2:
        return "PSS";
    }

    static int toKeymaster(java.lang.String)
    {
        java.lang.String r0, $r6, r7;
        java.util.Locale $r1;
        boolean $z0, $z1;
        java.lang.StringBuilder $r2;
        java.lang.IllegalArgumentException $r5;
        int i0;
        byte b1;

        r0 := @parameter0: java.lang.String;

        $r1 = <java.util.Locale: java.util.Locale US>;

        r7 = virtualinvoke r0.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>($r1);

        i0 = virtualinvoke r7.<java.lang.String: int hashCode()>();

        if i0 == 79536 goto label3;

        if i0 == 76183014 goto label2;

     label1:
        goto label4;

     label2:
        $z1 = virtualinvoke r7.<java.lang.String: boolean equals(java.lang.Object)>("PKCS1");

        if $z1 == 0 goto label1;

        b1 = 0;

        goto label5;

     label3:
        $z0 = virtualinvoke r7.<java.lang.String: boolean equals(java.lang.Object)>("PSS");

        if $z0 == 0 goto label1;

        b1 = 1;

        goto label5;

     label4:
        b1 = -1;

     label5:
        if b1 == 0 goto label7;

        if b1 != 1 goto label6;

        return 3;

     label6:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported signature padding scheme: ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r5;

     label7:
        return 5;
    }
}
