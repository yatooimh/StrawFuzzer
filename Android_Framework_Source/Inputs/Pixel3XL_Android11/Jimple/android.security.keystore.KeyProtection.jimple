public final class android.security.keystore.KeyProtection extends java.lang.Object implements java.security.KeyStore$ProtectionParameter, android.security.keystore.UserAuthArgs
{
    private final java.lang.String[] mBlockModes;
    private final long mBoundToSecureUserId;
    private final boolean mCriticalToDeviceEncryption;
    private final java.lang.String[] mDigests;
    private final java.lang.String[] mEncryptionPaddings;
    private final boolean mInvalidatedByBiometricEnrollment;
    private final boolean mIsStrongBoxBacked;
    private final java.util.Date mKeyValidityForConsumptionEnd;
    private final java.util.Date mKeyValidityForOriginationEnd;
    private final java.util.Date mKeyValidityStart;
    private final int mPurposes;
    private final boolean mRandomizedEncryptionRequired;
    private final java.lang.String[] mSignaturePaddings;
    private final boolean mUnlockedDeviceRequired;
    private final boolean mUserAuthenticationRequired;
    private final int mUserAuthenticationType;
    private final boolean mUserAuthenticationValidWhileOnBody;
    private final int mUserAuthenticationValidityDurationSeconds;
    private final boolean mUserConfirmationRequired;
    private final boolean mUserPresenceRequred;

    private void <init>(java.util.Date, java.util.Date, java.util.Date, int, java.lang.String[], java.lang.String[], java.lang.String[], java.lang.String[], boolean, boolean, int, int, boolean, boolean, boolean, long, boolean, boolean, boolean, boolean)
    {
        android.security.keystore.KeyProtection r0;
        java.util.Date r1, r2, r3, $r8, $r9, $r10;
        int i0, i1, i2;
        java.lang.String[] r4, r5, r6, r7, $r11, $r12, $r13, $r14, $r15, $r16, $r17;
        boolean z0, z1, z2, z3, z4, z5, z6, z7, z8;
        long l3;

        r0 := @this: android.security.keystore.KeyProtection;

        r1 := @parameter0: java.util.Date;

        r2 := @parameter1: java.util.Date;

        r3 := @parameter2: java.util.Date;

        i0 := @parameter3: int;

        r4 := @parameter4: java.lang.String[];

        r5 := @parameter5: java.lang.String[];

        r6 := @parameter6: java.lang.String[];

        r7 := @parameter7: java.lang.String[];

        z0 := @parameter8: boolean;

        z1 := @parameter9: boolean;

        i1 := @parameter10: int;

        i2 := @parameter11: int;

        z2 := @parameter12: boolean;

        z3 := @parameter13: boolean;

        z4 := @parameter14: boolean;

        l3 := @parameter15: long;

        z5 := @parameter16: boolean;

        z6 := @parameter17: boolean;

        z7 := @parameter18: boolean;

        z8 := @parameter19: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r8 = staticinvoke <android.security.keystore.Utils: java.util.Date cloneIfNotNull(java.util.Date)>(r1);

        r0.<android.security.keystore.KeyProtection: java.util.Date mKeyValidityStart> = $r8;

        $r9 = staticinvoke <android.security.keystore.Utils: java.util.Date cloneIfNotNull(java.util.Date)>(r2);

        r0.<android.security.keystore.KeyProtection: java.util.Date mKeyValidityForOriginationEnd> = $r9;

        $r10 = staticinvoke <android.security.keystore.Utils: java.util.Date cloneIfNotNull(java.util.Date)>(r3);

        r0.<android.security.keystore.KeyProtection: java.util.Date mKeyValidityForConsumptionEnd> = $r10;

        r0.<android.security.keystore.KeyProtection: int mPurposes> = i0;

        $r11 = staticinvoke <android.security.keystore.ArrayUtils: java.lang.String[] nullToEmpty(java.lang.String[])>(r4);

        $r12 = staticinvoke <android.security.keystore.ArrayUtils: java.lang.String[] cloneIfNotEmpty(java.lang.String[])>($r11);

        r0.<android.security.keystore.KeyProtection: java.lang.String[] mEncryptionPaddings> = $r12;

        $r13 = staticinvoke <android.security.keystore.ArrayUtils: java.lang.String[] nullToEmpty(java.lang.String[])>(r5);

        $r14 = staticinvoke <android.security.keystore.ArrayUtils: java.lang.String[] cloneIfNotEmpty(java.lang.String[])>($r13);

        r0.<android.security.keystore.KeyProtection: java.lang.String[] mSignaturePaddings> = $r14;

        $r15 = staticinvoke <android.security.keystore.ArrayUtils: java.lang.String[] cloneIfNotEmpty(java.lang.String[])>(r6);

        r0.<android.security.keystore.KeyProtection: java.lang.String[] mDigests> = $r15;

        $r16 = staticinvoke <android.security.keystore.ArrayUtils: java.lang.String[] nullToEmpty(java.lang.String[])>(r7);

        $r17 = staticinvoke <android.security.keystore.ArrayUtils: java.lang.String[] cloneIfNotEmpty(java.lang.String[])>($r16);

        r0.<android.security.keystore.KeyProtection: java.lang.String[] mBlockModes> = $r17;

        r0.<android.security.keystore.KeyProtection: boolean mRandomizedEncryptionRequired> = z0;

        r0.<android.security.keystore.KeyProtection: boolean mUserAuthenticationRequired> = z1;

        r0.<android.security.keystore.KeyProtection: int mUserAuthenticationType> = i1;

        r0.<android.security.keystore.KeyProtection: int mUserAuthenticationValidityDurationSeconds> = i2;

        r0.<android.security.keystore.KeyProtection: boolean mUserPresenceRequred> = z2;

        r0.<android.security.keystore.KeyProtection: boolean mUserAuthenticationValidWhileOnBody> = z3;

        r0.<android.security.keystore.KeyProtection: boolean mInvalidatedByBiometricEnrollment> = z4;

        r0.<android.security.keystore.KeyProtection: long mBoundToSecureUserId> = l3;

        r0.<android.security.keystore.KeyProtection: boolean mCriticalToDeviceEncryption> = z5;

        r0.<android.security.keystore.KeyProtection: boolean mUserConfirmationRequired> = z6;

        r0.<android.security.keystore.KeyProtection: boolean mUnlockedDeviceRequired> = z7;

        r0.<android.security.keystore.KeyProtection: boolean mIsStrongBoxBacked> = z8;

        return;
    }

    void <init>(java.util.Date, java.util.Date, java.util.Date, int, java.lang.String[], java.lang.String[], java.lang.String[], java.lang.String[], boolean, boolean, int, int, boolean, boolean, boolean, long, boolean, boolean, boolean, boolean, android.security.keystore.KeyProtection$1)
    {
        android.security.keystore.KeyProtection r0;
        java.util.Date r1, r2, r3;
        int i0, i1, i2;
        java.lang.String[] r4, r5, r6, r7;
        boolean z0, z1, z2, z3, z4, z5, z6, z7, z8;
        long l3;
        android.security.keystore.KeyProtection$1 r8;

        r0 := @this: android.security.keystore.KeyProtection;

        r1 := @parameter0: java.util.Date;

        r2 := @parameter1: java.util.Date;

        r3 := @parameter2: java.util.Date;

        i0 := @parameter3: int;

        r4 := @parameter4: java.lang.String[];

        r5 := @parameter5: java.lang.String[];

        r6 := @parameter6: java.lang.String[];

        r7 := @parameter7: java.lang.String[];

        z0 := @parameter8: boolean;

        z1 := @parameter9: boolean;

        i1 := @parameter10: int;

        i2 := @parameter11: int;

        z2 := @parameter12: boolean;

        z3 := @parameter13: boolean;

        z4 := @parameter14: boolean;

        l3 := @parameter15: long;

        z5 := @parameter16: boolean;

        z6 := @parameter17: boolean;

        z7 := @parameter18: boolean;

        z8 := @parameter19: boolean;

        r8 := @parameter20: android.security.keystore.KeyProtection$1;

        specialinvoke r0.<android.security.keystore.KeyProtection: void <init>(java.util.Date,java.util.Date,java.util.Date,int,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],boolean,boolean,int,int,boolean,boolean,boolean,long,boolean,boolean,boolean,boolean)>(r1, r2, r3, i0, r4, r5, r6, r7, z0, z1, i1, i2, z2, z3, z4, l3, z5, z6, z7, z8);

        return;
    }

    public java.lang.String[] getBlockModes()
    {
        android.security.keystore.KeyProtection r0;
        java.lang.String[] $r1, $r2;

        r0 := @this: android.security.keystore.KeyProtection;

        $r1 = r0.<android.security.keystore.KeyProtection: java.lang.String[] mBlockModes>;

        $r2 = staticinvoke <android.security.keystore.ArrayUtils: java.lang.String[] cloneIfNotEmpty(java.lang.String[])>($r1);

        return $r2;
    }

    public long getBoundToSpecificSecureUserId()
    {
        android.security.keystore.KeyProtection r0;
        long $l0;

        r0 := @this: android.security.keystore.KeyProtection;

        $l0 = r0.<android.security.keystore.KeyProtection: long mBoundToSecureUserId>;

        return $l0;
    }

    public java.lang.String[] getDigests()
    {
        android.security.keystore.KeyProtection r0;
        java.lang.String[] r1, $r3;
        java.lang.IllegalStateException $r2;

        r0 := @this: android.security.keystore.KeyProtection;

        r1 = r0.<android.security.keystore.KeyProtection: java.lang.String[] mDigests>;

        if r1 == null goto label1;

        $r3 = staticinvoke <android.security.keystore.ArrayUtils: java.lang.String[] cloneIfNotEmpty(java.lang.String[])>(r1);

        return $r3;

     label1:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Digests not specified");

        throw $r2;
    }

    public java.lang.String[] getEncryptionPaddings()
    {
        android.security.keystore.KeyProtection r0;
        java.lang.String[] $r1, $r2;

        r0 := @this: android.security.keystore.KeyProtection;

        $r1 = r0.<android.security.keystore.KeyProtection: java.lang.String[] mEncryptionPaddings>;

        $r2 = staticinvoke <android.security.keystore.ArrayUtils: java.lang.String[] cloneIfNotEmpty(java.lang.String[])>($r1);

        return $r2;
    }

    public java.util.Date getKeyValidityForConsumptionEnd()
    {
        android.security.keystore.KeyProtection r0;
        java.util.Date $r1, $r2;

        r0 := @this: android.security.keystore.KeyProtection;

        $r1 = r0.<android.security.keystore.KeyProtection: java.util.Date mKeyValidityForConsumptionEnd>;

        $r2 = staticinvoke <android.security.keystore.Utils: java.util.Date cloneIfNotNull(java.util.Date)>($r1);

        return $r2;
    }

    public java.util.Date getKeyValidityForOriginationEnd()
    {
        android.security.keystore.KeyProtection r0;
        java.util.Date $r1, $r2;

        r0 := @this: android.security.keystore.KeyProtection;

        $r1 = r0.<android.security.keystore.KeyProtection: java.util.Date mKeyValidityForOriginationEnd>;

        $r2 = staticinvoke <android.security.keystore.Utils: java.util.Date cloneIfNotNull(java.util.Date)>($r1);

        return $r2;
    }

    public java.util.Date getKeyValidityStart()
    {
        android.security.keystore.KeyProtection r0;
        java.util.Date $r1, $r2;

        r0 := @this: android.security.keystore.KeyProtection;

        $r1 = r0.<android.security.keystore.KeyProtection: java.util.Date mKeyValidityStart>;

        $r2 = staticinvoke <android.security.keystore.Utils: java.util.Date cloneIfNotNull(java.util.Date)>($r1);

        return $r2;
    }

    public int getPurposes()
    {
        android.security.keystore.KeyProtection r0;
        int $i0;

        r0 := @this: android.security.keystore.KeyProtection;

        $i0 = r0.<android.security.keystore.KeyProtection: int mPurposes>;

        return $i0;
    }

    public java.lang.String[] getSignaturePaddings()
    {
        android.security.keystore.KeyProtection r0;
        java.lang.String[] $r1, $r2;

        r0 := @this: android.security.keystore.KeyProtection;

        $r1 = r0.<android.security.keystore.KeyProtection: java.lang.String[] mSignaturePaddings>;

        $r2 = staticinvoke <android.security.keystore.ArrayUtils: java.lang.String[] cloneIfNotEmpty(java.lang.String[])>($r1);

        return $r2;
    }

    public int getUserAuthenticationType()
    {
        android.security.keystore.KeyProtection r0;
        int $i0;

        r0 := @this: android.security.keystore.KeyProtection;

        $i0 = r0.<android.security.keystore.KeyProtection: int mUserAuthenticationType>;

        return $i0;
    }

    public int getUserAuthenticationValidityDurationSeconds()
    {
        android.security.keystore.KeyProtection r0;
        int $i0;

        r0 := @this: android.security.keystore.KeyProtection;

        $i0 = r0.<android.security.keystore.KeyProtection: int mUserAuthenticationValidityDurationSeconds>;

        return $i0;
    }

    public boolean isCriticalToDeviceEncryption()
    {
        android.security.keystore.KeyProtection r0;
        boolean $z0;

        r0 := @this: android.security.keystore.KeyProtection;

        $z0 = r0.<android.security.keystore.KeyProtection: boolean mCriticalToDeviceEncryption>;

        return $z0;
    }

    public boolean isDigestsSpecified()
    {
        android.security.keystore.KeyProtection r0;
        java.lang.String[] $r1;
        boolean z0;

        r0 := @this: android.security.keystore.KeyProtection;

        $r1 = r0.<android.security.keystore.KeyProtection: java.lang.String[] mDigests>;

        if $r1 == null goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public boolean isInvalidatedByBiometricEnrollment()
    {
        android.security.keystore.KeyProtection r0;
        boolean $z0;

        r0 := @this: android.security.keystore.KeyProtection;

        $z0 = r0.<android.security.keystore.KeyProtection: boolean mInvalidatedByBiometricEnrollment>;

        return $z0;
    }

    public boolean isRandomizedEncryptionRequired()
    {
        android.security.keystore.KeyProtection r0;
        boolean $z0;

        r0 := @this: android.security.keystore.KeyProtection;

        $z0 = r0.<android.security.keystore.KeyProtection: boolean mRandomizedEncryptionRequired>;

        return $z0;
    }

    public boolean isStrongBoxBacked()
    {
        android.security.keystore.KeyProtection r0;
        boolean $z0;

        r0 := @this: android.security.keystore.KeyProtection;

        $z0 = r0.<android.security.keystore.KeyProtection: boolean mIsStrongBoxBacked>;

        return $z0;
    }

    public boolean isUnlockedDeviceRequired()
    {
        android.security.keystore.KeyProtection r0;
        boolean $z0;

        r0 := @this: android.security.keystore.KeyProtection;

        $z0 = r0.<android.security.keystore.KeyProtection: boolean mUnlockedDeviceRequired>;

        return $z0;
    }

    public boolean isUserAuthenticationRequired()
    {
        android.security.keystore.KeyProtection r0;
        boolean $z0;

        r0 := @this: android.security.keystore.KeyProtection;

        $z0 = r0.<android.security.keystore.KeyProtection: boolean mUserAuthenticationRequired>;

        return $z0;
    }

    public boolean isUserAuthenticationValidWhileOnBody()
    {
        android.security.keystore.KeyProtection r0;
        boolean $z0;

        r0 := @this: android.security.keystore.KeyProtection;

        $z0 = r0.<android.security.keystore.KeyProtection: boolean mUserAuthenticationValidWhileOnBody>;

        return $z0;
    }

    public boolean isUserConfirmationRequired()
    {
        android.security.keystore.KeyProtection r0;
        boolean $z0;

        r0 := @this: android.security.keystore.KeyProtection;

        $z0 = r0.<android.security.keystore.KeyProtection: boolean mUserConfirmationRequired>;

        return $z0;
    }

    public boolean isUserPresenceRequired()
    {
        android.security.keystore.KeyProtection r0;
        boolean $z0;

        r0 := @this: android.security.keystore.KeyProtection;

        $z0 = r0.<android.security.keystore.KeyProtection: boolean mUserPresenceRequred>;

        return $z0;
    }
}
