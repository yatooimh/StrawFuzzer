abstract class android.security.keystore.KeyStoreCryptoOperationUtils extends java.lang.Object
{
    private static volatile java.security.SecureRandom sRng;

    private void <init>()
    {
        android.security.keystore.KeyStoreCryptoOperationUtils r0;

        r0 := @this: android.security.keystore.KeyStoreCryptoOperationUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.security.GeneralSecurityException getExceptionForCipherInit(android.security.KeyStore, android.security.keystore.AndroidKeyStoreKey, int)
    {
        android.security.KeyStore r0;
        android.security.keystore.AndroidKeyStoreKey r1;
        int i0;
        java.security.InvalidAlgorithmParameterException $r2, $r3;
        java.security.InvalidKeyException $r4;

        r0 := @parameter0: android.security.KeyStore;

        r1 := @parameter1: android.security.keystore.AndroidKeyStoreKey;

        i0 := @parameter2: int;

        if i0 != 1 goto label1;

        return null;

     label1:
        if i0 == -55 goto label3;

        if i0 == -52 goto label2;

        $r4 = staticinvoke <android.security.keystore.KeyStoreCryptoOperationUtils: java.security.InvalidKeyException getInvalidKeyExceptionForInit(android.security.KeyStore,android.security.keystore.AndroidKeyStoreKey,int)>(r0, r1, i0);

        return $r4;

     label2:
        $r3 = new java.security.InvalidAlgorithmParameterException;

        specialinvoke $r3.<java.security.InvalidAlgorithmParameterException: void <init>(java.lang.String)>("Invalid IV");

        return $r3;

     label3:
        $r2 = new java.security.InvalidAlgorithmParameterException;

        specialinvoke $r2.<java.security.InvalidAlgorithmParameterException: void <init>(java.lang.String)>("Caller-provided IV not permitted");

        return $r2;
    }

    static java.security.InvalidKeyException getInvalidKeyExceptionForInit(android.security.KeyStore, android.security.keystore.AndroidKeyStoreKey, int)
    {
        android.security.keystore.AndroidKeyStoreKey r0;
        int i0, $i1;
        java.lang.String $r1;
        boolean $z0;
        android.security.KeyStore r2;
        java.security.InvalidKeyException r3;

        r2 := @parameter0: android.security.KeyStore;

        r0 := @parameter1: android.security.keystore.AndroidKeyStoreKey;

        i0 := @parameter2: int;

        if i0 != 1 goto label1;

        return null;

     label1:
        $r1 = virtualinvoke r0.<android.security.keystore.AndroidKeyStoreKey: java.lang.String getAlias()>();

        $i1 = virtualinvoke r0.<android.security.keystore.AndroidKeyStoreKey: int getUid()>();

        r3 = virtualinvoke r2.<android.security.KeyStore: java.security.InvalidKeyException getInvalidKeyException(java.lang.String,int,int)>($r1, $i1, i0);

        if i0 == 15 goto label2;

        goto label3;

     label2:
        $z0 = r3 instanceof android.security.keystore.UserNotAuthenticatedException;

        if $z0 == 0 goto label3;

        return null;

     label3:
        return r3;
    }

    static byte[] getRandomBytesToMixIntoKeystoreRng(java.security.SecureRandom, int)
    {
        int i0;
        byte[] $r0, r3;
        java.security.SecureRandom r1, r2;

        r1 := @parameter0: java.security.SecureRandom;

        i0 := @parameter1: int;

        if i0 > 0 goto label1;

        $r0 = <libcore.util.EmptyArray: byte[] BYTE>;

        return $r0;

     label1:
        r2 = r1;

        if r1 != null goto label2;

        r2 = staticinvoke <android.security.keystore.KeyStoreCryptoOperationUtils: java.security.SecureRandom getRng()>();

     label2:
        r3 = newarray (byte)[i0];

        virtualinvoke r2.<java.security.SecureRandom: void nextBytes(byte[])>(r3);

        return r3;
    }

    private static java.security.SecureRandom getRng()
    {
        java.security.SecureRandom $r0, $r1, $r2;

        $r0 = <android.security.keystore.KeyStoreCryptoOperationUtils: java.security.SecureRandom sRng>;

        if $r0 != null goto label1;

        $r2 = new java.security.SecureRandom;

        specialinvoke $r2.<java.security.SecureRandom: void <init>()>();

        <android.security.keystore.KeyStoreCryptoOperationUtils: java.security.SecureRandom sRng> = $r2;

     label1:
        $r1 = <android.security.keystore.KeyStoreCryptoOperationUtils: java.security.SecureRandom sRng>;

        return $r1;
    }
}
