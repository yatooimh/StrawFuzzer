public class android.security.keystore.recovery.KeyChainSnapshot$Builder extends java.lang.Object
{
    private android.security.keystore.recovery.KeyChainSnapshot mInstance;

    public void <init>()
    {
        android.security.keystore.recovery.KeyChainSnapshot$Builder r0;
        android.security.keystore.recovery.KeyChainSnapshot $r1;

        r0 := @this: android.security.keystore.recovery.KeyChainSnapshot$Builder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new android.security.keystore.recovery.KeyChainSnapshot;

        specialinvoke $r1.<android.security.keystore.recovery.KeyChainSnapshot: void <init>(android.security.keystore.recovery.KeyChainSnapshot$1)>(null);

        r0.<android.security.keystore.recovery.KeyChainSnapshot$Builder: android.security.keystore.recovery.KeyChainSnapshot mInstance> = $r1;

        return;
    }

    public android.security.keystore.recovery.KeyChainSnapshot build()
    {
        android.security.keystore.recovery.KeyChainSnapshot$Builder r0;
        android.security.keystore.recovery.KeyChainSnapshot $r1, $r4, $r7, $r10, $r13, $r16;
        java.util.List $r2, $r5;
        byte[] $r8, $r11;
        android.security.keystore.recovery.RecoveryCertPath $r14;

        r0 := @this: android.security.keystore.recovery.KeyChainSnapshot$Builder;

        $r1 = r0.<android.security.keystore.recovery.KeyChainSnapshot$Builder: android.security.keystore.recovery.KeyChainSnapshot mInstance>;

        $r2 = staticinvoke <android.security.keystore.recovery.KeyChainSnapshot: java.util.List access$600(android.security.keystore.recovery.KeyChainSnapshot)>($r1);

        staticinvoke <com.android.internal.util.Preconditions: java.util.Collection checkCollectionElementsNotNull(java.util.Collection,java.lang.String)>($r2, "keyChainProtectionParams");

        $r4 = r0.<android.security.keystore.recovery.KeyChainSnapshot$Builder: android.security.keystore.recovery.KeyChainSnapshot mInstance>;

        $r5 = staticinvoke <android.security.keystore.recovery.KeyChainSnapshot: java.util.List access$700(android.security.keystore.recovery.KeyChainSnapshot)>($r4);

        staticinvoke <com.android.internal.util.Preconditions: java.util.Collection checkCollectionElementsNotNull(java.util.Collection,java.lang.String)>($r5, "entryRecoveryData");

        $r7 = r0.<android.security.keystore.recovery.KeyChainSnapshot$Builder: android.security.keystore.recovery.KeyChainSnapshot mInstance>;

        $r8 = staticinvoke <android.security.keystore.recovery.KeyChainSnapshot: byte[] access$800(android.security.keystore.recovery.KeyChainSnapshot)>($r7);

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>($r8);

        $r10 = r0.<android.security.keystore.recovery.KeyChainSnapshot$Builder: android.security.keystore.recovery.KeyChainSnapshot mInstance>;

        $r11 = staticinvoke <android.security.keystore.recovery.KeyChainSnapshot: byte[] access$400(android.security.keystore.recovery.KeyChainSnapshot)>($r10);

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>($r11);

        $r13 = r0.<android.security.keystore.recovery.KeyChainSnapshot$Builder: android.security.keystore.recovery.KeyChainSnapshot mInstance>;

        $r14 = staticinvoke <android.security.keystore.recovery.KeyChainSnapshot: android.security.keystore.recovery.RecoveryCertPath access$500(android.security.keystore.recovery.KeyChainSnapshot)>($r13);

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>($r14);

        $r16 = r0.<android.security.keystore.recovery.KeyChainSnapshot$Builder: android.security.keystore.recovery.KeyChainSnapshot mInstance>;

        return $r16;
    }

    public android.security.keystore.recovery.KeyChainSnapshot$Builder setCounterId(long)
    {
        android.security.keystore.recovery.KeyChainSnapshot$Builder r0;
        long l0;
        android.security.keystore.recovery.KeyChainSnapshot $r1;

        r0 := @this: android.security.keystore.recovery.KeyChainSnapshot$Builder;

        l0 := @parameter0: long;

        $r1 = r0.<android.security.keystore.recovery.KeyChainSnapshot$Builder: android.security.keystore.recovery.KeyChainSnapshot mInstance>;

        staticinvoke <android.security.keystore.recovery.KeyChainSnapshot: long access$302(android.security.keystore.recovery.KeyChainSnapshot,long)>($r1, l0);

        return r0;
    }

    public android.security.keystore.recovery.KeyChainSnapshot$Builder setEncryptedRecoveryKeyBlob(byte[])
    {
        android.security.keystore.recovery.KeyChainSnapshot$Builder r0;
        byte[] r1;
        android.security.keystore.recovery.KeyChainSnapshot $r2;

        r0 := @this: android.security.keystore.recovery.KeyChainSnapshot$Builder;

        r1 := @parameter0: byte[];

        $r2 = r0.<android.security.keystore.recovery.KeyChainSnapshot$Builder: android.security.keystore.recovery.KeyChainSnapshot mInstance>;

        staticinvoke <android.security.keystore.recovery.KeyChainSnapshot: byte[] access$802(android.security.keystore.recovery.KeyChainSnapshot,byte[])>($r2, r1);

        return r0;
    }

    public android.security.keystore.recovery.KeyChainSnapshot$Builder setKeyChainProtectionParams(java.util.List)
    {
        android.security.keystore.recovery.KeyChainSnapshot$Builder r0;
        java.util.List r1;
        android.security.keystore.recovery.KeyChainSnapshot $r2;

        r0 := @this: android.security.keystore.recovery.KeyChainSnapshot$Builder;

        r1 := @parameter0: java.util.List;

        $r2 = r0.<android.security.keystore.recovery.KeyChainSnapshot$Builder: android.security.keystore.recovery.KeyChainSnapshot mInstance>;

        staticinvoke <android.security.keystore.recovery.KeyChainSnapshot: java.util.List access$602(android.security.keystore.recovery.KeyChainSnapshot,java.util.List)>($r2, r1);

        return r0;
    }

    public android.security.keystore.recovery.KeyChainSnapshot$Builder setMaxAttempts(int)
    {
        android.security.keystore.recovery.KeyChainSnapshot$Builder r0;
        int i0;
        android.security.keystore.recovery.KeyChainSnapshot $r1;

        r0 := @this: android.security.keystore.recovery.KeyChainSnapshot$Builder;

        i0 := @parameter0: int;

        $r1 = r0.<android.security.keystore.recovery.KeyChainSnapshot$Builder: android.security.keystore.recovery.KeyChainSnapshot mInstance>;

        staticinvoke <android.security.keystore.recovery.KeyChainSnapshot: int access$202(android.security.keystore.recovery.KeyChainSnapshot,int)>($r1, i0);

        return r0;
    }

    public android.security.keystore.recovery.KeyChainSnapshot$Builder setServerParams(byte[])
    {
        android.security.keystore.recovery.KeyChainSnapshot$Builder r0;
        byte[] r1;
        android.security.keystore.recovery.KeyChainSnapshot $r2;

        r0 := @this: android.security.keystore.recovery.KeyChainSnapshot$Builder;

        r1 := @parameter0: byte[];

        $r2 = r0.<android.security.keystore.recovery.KeyChainSnapshot$Builder: android.security.keystore.recovery.KeyChainSnapshot mInstance>;

        staticinvoke <android.security.keystore.recovery.KeyChainSnapshot: byte[] access$402(android.security.keystore.recovery.KeyChainSnapshot,byte[])>($r2, r1);

        return r0;
    }

    public android.security.keystore.recovery.KeyChainSnapshot$Builder setSnapshotVersion(int)
    {
        android.security.keystore.recovery.KeyChainSnapshot$Builder r0;
        int i0;
        android.security.keystore.recovery.KeyChainSnapshot $r1;

        r0 := @this: android.security.keystore.recovery.KeyChainSnapshot$Builder;

        i0 := @parameter0: int;

        $r1 = r0.<android.security.keystore.recovery.KeyChainSnapshot$Builder: android.security.keystore.recovery.KeyChainSnapshot mInstance>;

        staticinvoke <android.security.keystore.recovery.KeyChainSnapshot: int access$102(android.security.keystore.recovery.KeyChainSnapshot,int)>($r1, i0);

        return r0;
    }

    public android.security.keystore.recovery.KeyChainSnapshot$Builder setTrustedHardwareCertPath(java.security.cert.CertPath) throws java.security.cert.CertificateException
    {
        android.security.keystore.recovery.KeyChainSnapshot$Builder r0;
        java.security.cert.CertPath r1;
        android.security.keystore.recovery.KeyChainSnapshot $r2;
        android.security.keystore.recovery.RecoveryCertPath $r3;

        r0 := @this: android.security.keystore.recovery.KeyChainSnapshot$Builder;

        r1 := @parameter0: java.security.cert.CertPath;

        $r2 = r0.<android.security.keystore.recovery.KeyChainSnapshot$Builder: android.security.keystore.recovery.KeyChainSnapshot mInstance>;

        $r3 = staticinvoke <android.security.keystore.recovery.RecoveryCertPath: android.security.keystore.recovery.RecoveryCertPath createRecoveryCertPath(java.security.cert.CertPath)>(r1);

        staticinvoke <android.security.keystore.recovery.KeyChainSnapshot: android.security.keystore.recovery.RecoveryCertPath access$502(android.security.keystore.recovery.KeyChainSnapshot,android.security.keystore.recovery.RecoveryCertPath)>($r2, $r3);

        return r0;
    }

    public android.security.keystore.recovery.KeyChainSnapshot$Builder setWrappedApplicationKeys(java.util.List)
    {
        android.security.keystore.recovery.KeyChainSnapshot$Builder r0;
        java.util.List r1;
        android.security.keystore.recovery.KeyChainSnapshot $r2;

        r0 := @this: android.security.keystore.recovery.KeyChainSnapshot$Builder;

        r1 := @parameter0: java.util.List;

        $r2 = r0.<android.security.keystore.recovery.KeyChainSnapshot$Builder: android.security.keystore.recovery.KeyChainSnapshot mInstance>;

        staticinvoke <android.security.keystore.recovery.KeyChainSnapshot: java.util.List access$702(android.security.keystore.recovery.KeyChainSnapshot,java.util.List)>($r2, r1);

        return r0;
    }
}
