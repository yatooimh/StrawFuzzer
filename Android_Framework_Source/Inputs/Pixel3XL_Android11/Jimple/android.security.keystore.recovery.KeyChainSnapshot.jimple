public final class android.security.keystore.recovery.KeyChainSnapshot extends java.lang.Object implements android.os.Parcelable
{
    public static final android.os.Parcelable$Creator CREATOR;
    private static final long DEFAULT_COUNTER_ID;
    private static final int DEFAULT_MAX_ATTEMPTS;
    private android.security.keystore.recovery.RecoveryCertPath mCertPath;
    private long mCounterId;
    private byte[] mEncryptedRecoveryKeyBlob;
    private java.util.List mEntryRecoveryData;
    private java.util.List mKeyChainProtectionParams;
    private int mMaxAttempts;
    private byte[] mServerParams;
    private int mSnapshotVersion;

    static void <clinit>()
    {
        android.security.keystore.recovery.KeyChainSnapshot$1 $r0;

        <android.security.keystore.recovery.KeyChainSnapshot: int DEFAULT_MAX_ATTEMPTS> = 10;

        <android.security.keystore.recovery.KeyChainSnapshot: long DEFAULT_COUNTER_ID> = 1L;

        $r0 = new android.security.keystore.recovery.KeyChainSnapshot$1;

        specialinvoke $r0.<android.security.keystore.recovery.KeyChainSnapshot$1: void <init>()>();

        <android.security.keystore.recovery.KeyChainSnapshot: android.os.Parcelable$Creator CREATOR> = $r0;

        return;
    }

    private void <init>()
    {
        android.security.keystore.recovery.KeyChainSnapshot r0;

        r0 := @this: android.security.keystore.recovery.KeyChainSnapshot;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.security.keystore.recovery.KeyChainSnapshot: int mMaxAttempts> = 10;

        r0.<android.security.keystore.recovery.KeyChainSnapshot: long mCounterId> = 1L;

        return;
    }

    protected void <init>(android.os.Parcel)
    {
        android.security.keystore.recovery.KeyChainSnapshot r0;
        android.os.Parcel r1;
        int $i0, $i1;
        android.os.Parcelable$Creator $r2, $r5, $r8;
        java.util.ArrayList $r3, $r6;
        byte[] $r4, $r7;
        long $l2;
        java.lang.Object $r9;
        android.security.keystore.recovery.RecoveryCertPath $r10;

        r0 := @this: android.security.keystore.recovery.KeyChainSnapshot;

        r1 := @parameter0: android.os.Parcel;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.security.keystore.recovery.KeyChainSnapshot: int mMaxAttempts> = 10;

        r0.<android.security.keystore.recovery.KeyChainSnapshot: long mCounterId> = 1L;

        $i0 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.security.keystore.recovery.KeyChainSnapshot: int mSnapshotVersion> = $i0;

        $r2 = <android.security.keystore.recovery.KeyChainProtectionParams: android.os.Parcelable$Creator CREATOR>;

        $r3 = virtualinvoke r1.<android.os.Parcel: java.util.ArrayList createTypedArrayList(android.os.Parcelable$Creator)>($r2);

        r0.<android.security.keystore.recovery.KeyChainSnapshot: java.util.List mKeyChainProtectionParams> = $r3;

        $r4 = virtualinvoke r1.<android.os.Parcel: byte[] createByteArray()>();

        r0.<android.security.keystore.recovery.KeyChainSnapshot: byte[] mEncryptedRecoveryKeyBlob> = $r4;

        $r5 = <android.security.keystore.recovery.WrappedApplicationKey: android.os.Parcelable$Creator CREATOR>;

        $r6 = virtualinvoke r1.<android.os.Parcel: java.util.ArrayList createTypedArrayList(android.os.Parcelable$Creator)>($r5);

        r0.<android.security.keystore.recovery.KeyChainSnapshot: java.util.List mEntryRecoveryData> = $r6;

        $i1 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.security.keystore.recovery.KeyChainSnapshot: int mMaxAttempts> = $i1;

        $l2 = virtualinvoke r1.<android.os.Parcel: long readLong()>();

        r0.<android.security.keystore.recovery.KeyChainSnapshot: long mCounterId> = $l2;

        $r7 = virtualinvoke r1.<android.os.Parcel: byte[] createByteArray()>();

        r0.<android.security.keystore.recovery.KeyChainSnapshot: byte[] mServerParams> = $r7;

        $r8 = <android.security.keystore.recovery.RecoveryCertPath: android.os.Parcelable$Creator CREATOR>;

        $r9 = virtualinvoke r1.<android.os.Parcel: java.lang.Object readTypedObject(android.os.Parcelable$Creator)>($r8);

        $r10 = (android.security.keystore.recovery.RecoveryCertPath) $r9;

        r0.<android.security.keystore.recovery.KeyChainSnapshot: android.security.keystore.recovery.RecoveryCertPath mCertPath> = $r10;

        return;
    }

    void <init>(android.security.keystore.recovery.KeyChainSnapshot$1)
    {
        android.security.keystore.recovery.KeyChainSnapshot r0;
        android.security.keystore.recovery.KeyChainSnapshot$1 r1;

        r0 := @this: android.security.keystore.recovery.KeyChainSnapshot;

        r1 := @parameter0: android.security.keystore.recovery.KeyChainSnapshot$1;

        specialinvoke r0.<android.security.keystore.recovery.KeyChainSnapshot: void <init>()>();

        return;
    }

    static int access$102(android.security.keystore.recovery.KeyChainSnapshot, int)
    {
        android.security.keystore.recovery.KeyChainSnapshot r0;
        int i0;

        r0 := @parameter0: android.security.keystore.recovery.KeyChainSnapshot;

        i0 := @parameter1: int;

        r0.<android.security.keystore.recovery.KeyChainSnapshot: int mSnapshotVersion> = i0;

        return i0;
    }

    static int access$202(android.security.keystore.recovery.KeyChainSnapshot, int)
    {
        android.security.keystore.recovery.KeyChainSnapshot r0;
        int i0;

        r0 := @parameter0: android.security.keystore.recovery.KeyChainSnapshot;

        i0 := @parameter1: int;

        r0.<android.security.keystore.recovery.KeyChainSnapshot: int mMaxAttempts> = i0;

        return i0;
    }

    static long access$302(android.security.keystore.recovery.KeyChainSnapshot, long)
    {
        android.security.keystore.recovery.KeyChainSnapshot r0;
        long l0;

        r0 := @parameter0: android.security.keystore.recovery.KeyChainSnapshot;

        l0 := @parameter1: long;

        r0.<android.security.keystore.recovery.KeyChainSnapshot: long mCounterId> = l0;

        return l0;
    }

    static byte[] access$400(android.security.keystore.recovery.KeyChainSnapshot)
    {
        android.security.keystore.recovery.KeyChainSnapshot r0;
        byte[] $r1;

        r0 := @parameter0: android.security.keystore.recovery.KeyChainSnapshot;

        $r1 = r0.<android.security.keystore.recovery.KeyChainSnapshot: byte[] mServerParams>;

        return $r1;
    }

    static byte[] access$402(android.security.keystore.recovery.KeyChainSnapshot, byte[])
    {
        android.security.keystore.recovery.KeyChainSnapshot r0;
        byte[] r1;

        r0 := @parameter0: android.security.keystore.recovery.KeyChainSnapshot;

        r1 := @parameter1: byte[];

        r0.<android.security.keystore.recovery.KeyChainSnapshot: byte[] mServerParams> = r1;

        return r1;
    }

    static android.security.keystore.recovery.RecoveryCertPath access$500(android.security.keystore.recovery.KeyChainSnapshot)
    {
        android.security.keystore.recovery.KeyChainSnapshot r0;
        android.security.keystore.recovery.RecoveryCertPath $r1;

        r0 := @parameter0: android.security.keystore.recovery.KeyChainSnapshot;

        $r1 = r0.<android.security.keystore.recovery.KeyChainSnapshot: android.security.keystore.recovery.RecoveryCertPath mCertPath>;

        return $r1;
    }

    static android.security.keystore.recovery.RecoveryCertPath access$502(android.security.keystore.recovery.KeyChainSnapshot, android.security.keystore.recovery.RecoveryCertPath)
    {
        android.security.keystore.recovery.KeyChainSnapshot r0;
        android.security.keystore.recovery.RecoveryCertPath r1;

        r0 := @parameter0: android.security.keystore.recovery.KeyChainSnapshot;

        r1 := @parameter1: android.security.keystore.recovery.RecoveryCertPath;

        r0.<android.security.keystore.recovery.KeyChainSnapshot: android.security.keystore.recovery.RecoveryCertPath mCertPath> = r1;

        return r1;
    }

    static java.util.List access$600(android.security.keystore.recovery.KeyChainSnapshot)
    {
        android.security.keystore.recovery.KeyChainSnapshot r0;
        java.util.List $r1;

        r0 := @parameter0: android.security.keystore.recovery.KeyChainSnapshot;

        $r1 = r0.<android.security.keystore.recovery.KeyChainSnapshot: java.util.List mKeyChainProtectionParams>;

        return $r1;
    }

    static java.util.List access$602(android.security.keystore.recovery.KeyChainSnapshot, java.util.List)
    {
        android.security.keystore.recovery.KeyChainSnapshot r0;
        java.util.List r1;

        r0 := @parameter0: android.security.keystore.recovery.KeyChainSnapshot;

        r1 := @parameter1: java.util.List;

        r0.<android.security.keystore.recovery.KeyChainSnapshot: java.util.List mKeyChainProtectionParams> = r1;

        return r1;
    }

    static java.util.List access$700(android.security.keystore.recovery.KeyChainSnapshot)
    {
        android.security.keystore.recovery.KeyChainSnapshot r0;
        java.util.List $r1;

        r0 := @parameter0: android.security.keystore.recovery.KeyChainSnapshot;

        $r1 = r0.<android.security.keystore.recovery.KeyChainSnapshot: java.util.List mEntryRecoveryData>;

        return $r1;
    }

    static java.util.List access$702(android.security.keystore.recovery.KeyChainSnapshot, java.util.List)
    {
        android.security.keystore.recovery.KeyChainSnapshot r0;
        java.util.List r1;

        r0 := @parameter0: android.security.keystore.recovery.KeyChainSnapshot;

        r1 := @parameter1: java.util.List;

        r0.<android.security.keystore.recovery.KeyChainSnapshot: java.util.List mEntryRecoveryData> = r1;

        return r1;
    }

    static byte[] access$800(android.security.keystore.recovery.KeyChainSnapshot)
    {
        android.security.keystore.recovery.KeyChainSnapshot r0;
        byte[] $r1;

        r0 := @parameter0: android.security.keystore.recovery.KeyChainSnapshot;

        $r1 = r0.<android.security.keystore.recovery.KeyChainSnapshot: byte[] mEncryptedRecoveryKeyBlob>;

        return $r1;
    }

    static byte[] access$802(android.security.keystore.recovery.KeyChainSnapshot, byte[])
    {
        android.security.keystore.recovery.KeyChainSnapshot r0;
        byte[] r1;

        r0 := @parameter0: android.security.keystore.recovery.KeyChainSnapshot;

        r1 := @parameter1: byte[];

        r0.<android.security.keystore.recovery.KeyChainSnapshot: byte[] mEncryptedRecoveryKeyBlob> = r1;

        return r1;
    }

    public int describeContents()
    {
        android.security.keystore.recovery.KeyChainSnapshot r0;

        r0 := @this: android.security.keystore.recovery.KeyChainSnapshot;

        return 0;
    }

    public long getCounterId()
    {
        android.security.keystore.recovery.KeyChainSnapshot r0;
        long $l0;

        r0 := @this: android.security.keystore.recovery.KeyChainSnapshot;

        $l0 = r0.<android.security.keystore.recovery.KeyChainSnapshot: long mCounterId>;

        return $l0;
    }

    public byte[] getEncryptedRecoveryKeyBlob()
    {
        android.security.keystore.recovery.KeyChainSnapshot r0;
        byte[] $r1;

        r0 := @this: android.security.keystore.recovery.KeyChainSnapshot;

        $r1 = r0.<android.security.keystore.recovery.KeyChainSnapshot: byte[] mEncryptedRecoveryKeyBlob>;

        return $r1;
    }

    public java.util.List getKeyChainProtectionParams()
    {
        android.security.keystore.recovery.KeyChainSnapshot r0;
        java.util.List $r1;

        r0 := @this: android.security.keystore.recovery.KeyChainSnapshot;

        $r1 = r0.<android.security.keystore.recovery.KeyChainSnapshot: java.util.List mKeyChainProtectionParams>;

        return $r1;
    }

    public int getMaxAttempts()
    {
        android.security.keystore.recovery.KeyChainSnapshot r0;
        int $i0;

        r0 := @this: android.security.keystore.recovery.KeyChainSnapshot;

        $i0 = r0.<android.security.keystore.recovery.KeyChainSnapshot: int mMaxAttempts>;

        return $i0;
    }

    public byte[] getServerParams()
    {
        android.security.keystore.recovery.KeyChainSnapshot r0;
        byte[] $r1;

        r0 := @this: android.security.keystore.recovery.KeyChainSnapshot;

        $r1 = r0.<android.security.keystore.recovery.KeyChainSnapshot: byte[] mServerParams>;

        return $r1;
    }

    public int getSnapshotVersion()
    {
        android.security.keystore.recovery.KeyChainSnapshot r0;
        int $i0;

        r0 := @this: android.security.keystore.recovery.KeyChainSnapshot;

        $i0 = r0.<android.security.keystore.recovery.KeyChainSnapshot: int mSnapshotVersion>;

        return $i0;
    }

    public java.security.cert.CertPath getTrustedHardwareCertPath()
    {
        android.security.keystore.recovery.KeyChainSnapshot r0;
        android.security.keystore.recovery.RecoveryCertPath $r1;
        java.lang.Throwable $r2;
        java.security.cert.CertPath r4;
        android.os.BadParcelableException r6;
        java.lang.Exception r7;

        r0 := @this: android.security.keystore.recovery.KeyChainSnapshot;

     label1:
        $r1 = r0.<android.security.keystore.recovery.KeyChainSnapshot: android.security.keystore.recovery.RecoveryCertPath mCertPath>;

        r4 = virtualinvoke $r1.<android.security.keystore.recovery.RecoveryCertPath: java.security.cert.CertPath getCertPath()>();

     label2:
        return r4;

     label3:
        $r2 := @caughtexception;

        r6 = new android.os.BadParcelableException;

        r7 = (java.lang.Exception) $r2;

        specialinvoke r6.<android.os.BadParcelableException: void <init>(java.lang.Exception)>(r7);

        throw r6;

        catch java.security.cert.CertificateException from label1 to label2 with label3;
    }

    public java.util.List getWrappedApplicationKeys()
    {
        android.security.keystore.recovery.KeyChainSnapshot r0;
        java.util.List $r1;

        r0 := @this: android.security.keystore.recovery.KeyChainSnapshot;

        $r1 = r0.<android.security.keystore.recovery.KeyChainSnapshot: java.util.List mEntryRecoveryData>;

        return $r1;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.security.keystore.recovery.KeyChainSnapshot r0;
        android.os.Parcel r1;
        int i0, $i1, $i2;
        java.util.List $r2, $r4;
        byte[] $r3, $r5;
        long $l3;
        android.security.keystore.recovery.RecoveryCertPath $r6;

        r0 := @this: android.security.keystore.recovery.KeyChainSnapshot;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        $i1 = r0.<android.security.keystore.recovery.KeyChainSnapshot: int mSnapshotVersion>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i1);

        $r2 = r0.<android.security.keystore.recovery.KeyChainSnapshot: java.util.List mKeyChainProtectionParams>;

        virtualinvoke r1.<android.os.Parcel: void writeTypedList(java.util.List)>($r2);

        $r3 = r0.<android.security.keystore.recovery.KeyChainSnapshot: byte[] mEncryptedRecoveryKeyBlob>;

        virtualinvoke r1.<android.os.Parcel: void writeByteArray(byte[])>($r3);

        $r4 = r0.<android.security.keystore.recovery.KeyChainSnapshot: java.util.List mEntryRecoveryData>;

        virtualinvoke r1.<android.os.Parcel: void writeTypedList(java.util.List)>($r4);

        $i2 = r0.<android.security.keystore.recovery.KeyChainSnapshot: int mMaxAttempts>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i2);

        $l3 = r0.<android.security.keystore.recovery.KeyChainSnapshot: long mCounterId>;

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l3);

        $r5 = r0.<android.security.keystore.recovery.KeyChainSnapshot: byte[] mServerParams>;

        virtualinvoke r1.<android.os.Parcel: void writeByteArray(byte[])>($r5);

        $r6 = r0.<android.security.keystore.recovery.KeyChainSnapshot: android.security.keystore.recovery.RecoveryCertPath mCertPath>;

        virtualinvoke r1.<android.os.Parcel: void writeTypedObject(android.os.Parcelable,int)>($r6, 0);

        return;
    }
}
