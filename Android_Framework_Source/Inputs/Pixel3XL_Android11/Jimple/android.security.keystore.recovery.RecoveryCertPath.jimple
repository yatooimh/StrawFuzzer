public final class android.security.keystore.recovery.RecoveryCertPath extends java.lang.Object implements android.os.Parcelable
{
    private static final java.lang.String CERT_PATH_ENCODING;
    public static final android.os.Parcelable$Creator CREATOR;
    private final byte[] mEncodedCertPath;

    static void <clinit>()
    {
        android.security.keystore.recovery.RecoveryCertPath$1 $r0;

        <android.security.keystore.recovery.RecoveryCertPath: java.lang.String CERT_PATH_ENCODING> = "PkiPath";

        $r0 = new android.security.keystore.recovery.RecoveryCertPath$1;

        specialinvoke $r0.<android.security.keystore.recovery.RecoveryCertPath$1: void <init>()>();

        <android.security.keystore.recovery.RecoveryCertPath: android.os.Parcelable$Creator CREATOR> = $r0;

        return;
    }

    private void <init>(android.os.Parcel)
    {
        android.security.keystore.recovery.RecoveryCertPath r0;
        android.os.Parcel r1;
        byte[] $r2;

        r0 := @this: android.security.keystore.recovery.RecoveryCertPath;

        r1 := @parameter0: android.os.Parcel;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = virtualinvoke r1.<android.os.Parcel: byte[] createByteArray()>();

        r0.<android.security.keystore.recovery.RecoveryCertPath: byte[] mEncodedCertPath> = $r2;

        return;
    }

    void <init>(android.os.Parcel, android.security.keystore.recovery.RecoveryCertPath$1)
    {
        android.security.keystore.recovery.RecoveryCertPath r0;
        android.os.Parcel r1;
        android.security.keystore.recovery.RecoveryCertPath$1 r2;

        r0 := @this: android.security.keystore.recovery.RecoveryCertPath;

        r1 := @parameter0: android.os.Parcel;

        r2 := @parameter1: android.security.keystore.recovery.RecoveryCertPath$1;

        specialinvoke r0.<android.security.keystore.recovery.RecoveryCertPath: void <init>(android.os.Parcel)>(r1);

        return;
    }

    private void <init>(byte[])
    {
        android.security.keystore.recovery.RecoveryCertPath r0;
        byte[] r1, $r3;

        r0 := @this: android.security.keystore.recovery.RecoveryCertPath;

        r1 := @parameter0: byte[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r1);

        $r3 = (byte[]) r1;

        r0.<android.security.keystore.recovery.RecoveryCertPath: byte[] mEncodedCertPath> = $r3;

        return;
    }

    public static android.security.keystore.recovery.RecoveryCertPath createRecoveryCertPath(java.security.cert.CertPath) throws java.security.cert.CertificateException
    {
        android.security.keystore.recovery.RecoveryCertPath $r0;
        byte[] $r1;
        java.lang.Throwable $r2;
        java.security.cert.CertificateException $r3;
        java.security.cert.CertPath r4;

        r4 := @parameter0: java.security.cert.CertPath;

     label1:
        $r0 = new android.security.keystore.recovery.RecoveryCertPath;

        $r1 = staticinvoke <android.security.keystore.recovery.RecoveryCertPath: byte[] encodeCertPath(java.security.cert.CertPath)>(r4);

        specialinvoke $r0.<android.security.keystore.recovery.RecoveryCertPath: void <init>(byte[])>($r1);

     label2:
        return $r0;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.security.cert.CertificateException;

        specialinvoke $r3.<java.security.cert.CertificateException: void <init>(java.lang.String,java.lang.Throwable)>("Failed to encode the given CertPath", $r2);

        throw $r3;

        catch java.security.cert.CertificateEncodingException from label1 to label2 with label3;
    }

    private static java.security.cert.CertPath decodeCertPath(byte[]) throws java.security.cert.CertificateException
    {
        java.security.cert.CertificateFactory r0;
        java.io.ByteArrayInputStream $r2;
        java.security.cert.CertPath $r3;
        java.lang.Throwable $r4;
        java.lang.RuntimeException $r5;
        byte[] r6;

        r6 := @parameter0: byte[];

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r6);

     label1:
        r0 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>("X.509");

     label2:
        $r2 = new java.io.ByteArrayInputStream;

        specialinvoke $r2.<java.io.ByteArrayInputStream: void <init>(byte[])>(r6);

        $r3 = virtualinvoke r0.<java.security.cert.CertificateFactory: java.security.cert.CertPath generateCertPath(java.io.InputStream,java.lang.String)>($r2, "PkiPath");

        return $r3;

     label3:
        $r4 := @caughtexception;

        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r4);

        throw $r5;

        catch java.security.cert.CertificateException from label1 to label2 with label3;
    }

    private static byte[] encodeCertPath(java.security.cert.CertPath) throws java.security.cert.CertificateEncodingException
    {
        java.security.cert.CertPath r0;
        byte[] $r2;

        r0 := @parameter0: java.security.cert.CertPath;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r0);

        $r2 = virtualinvoke r0.<java.security.cert.CertPath: byte[] getEncoded(java.lang.String)>("PkiPath");

        return $r2;
    }

    public int describeContents()
    {
        android.security.keystore.recovery.RecoveryCertPath r0;

        r0 := @this: android.security.keystore.recovery.RecoveryCertPath;

        return 0;
    }

    public java.security.cert.CertPath getCertPath() throws java.security.cert.CertificateException
    {
        android.security.keystore.recovery.RecoveryCertPath r0;
        byte[] $r1;
        java.security.cert.CertPath $r2;

        r0 := @this: android.security.keystore.recovery.RecoveryCertPath;

        $r1 = r0.<android.security.keystore.recovery.RecoveryCertPath: byte[] mEncodedCertPath>;

        $r2 = staticinvoke <android.security.keystore.recovery.RecoveryCertPath: java.security.cert.CertPath decodeCertPath(byte[])>($r1);

        return $r2;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.security.keystore.recovery.RecoveryCertPath r0;
        android.os.Parcel r1;
        int i0;
        byte[] $r2;

        r0 := @this: android.security.keystore.recovery.RecoveryCertPath;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        $r2 = r0.<android.security.keystore.recovery.RecoveryCertPath: byte[] mEncodedCertPath>;

        virtualinvoke r1.<android.os.Parcel: void writeByteArray(byte[])>($r2);

        return;
    }
}
