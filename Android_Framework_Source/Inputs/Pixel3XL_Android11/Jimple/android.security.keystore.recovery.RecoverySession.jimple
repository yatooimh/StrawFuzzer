public class android.security.keystore.recovery.RecoverySession extends java.lang.Object implements java.lang.AutoCloseable
{
    private static final int SESSION_ID_LENGTH_BYTES;
    private static final java.lang.String TAG;
    private final android.security.keystore.recovery.RecoveryController mRecoveryController;
    private final java.lang.String mSessionId;

    private void <init>(android.security.keystore.recovery.RecoveryController, java.lang.String)
    {
        android.security.keystore.recovery.RecoverySession r0;
        android.security.keystore.recovery.RecoveryController r1;
        java.lang.String r2;

        r0 := @this: android.security.keystore.recovery.RecoverySession;

        r1 := @parameter0: android.security.keystore.recovery.RecoveryController;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.security.keystore.recovery.RecoverySession: android.security.keystore.recovery.RecoveryController mRecoveryController> = r1;

        r0.<android.security.keystore.recovery.RecoverySession: java.lang.String mSessionId> = r2;

        return;
    }

    private java.util.Map getKeysFromGrants(java.util.Map) throws android.security.keystore.recovery.InternalRecoveryServiceException
    {
        android.security.keystore.recovery.RecoverySession r0;
        java.util.Iterator r2;
        java.lang.String r3, r4, $r16;
        java.security.Key r5;
        android.util.ArrayMap $r6;
        int $i0;
        java.util.Set $r7;
        boolean $z0;
        java.lang.Object $r8, $r9;
        android.security.keystore.recovery.RecoveryController $r10;
        java.lang.Throwable $r12;
        android.security.keystore.recovery.InternalRecoveryServiceException $r13;
        java.lang.Object[] $r14;
        java.util.Locale $r15;
        java.util.Map r17;

        r0 := @this: android.security.keystore.recovery.RecoverySession;

        r17 := @parameter0: java.util.Map;

        $r6 = new android.util.ArrayMap;

        $i0 = interfaceinvoke r17.<java.util.Map: int size()>();

        specialinvoke $r6.<android.util.ArrayMap: void <init>(int)>($i0);

        $r7 = interfaceinvoke r17.<java.util.Map: java.util.Set keySet()>();

        r2 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r8 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.lang.String) $r8;

        $r9 = interfaceinvoke r17.<java.util.Map: java.lang.Object get(java.lang.Object)>(r3);

        r4 = (java.lang.String) $r9;

     label2:
        $r10 = r0.<android.security.keystore.recovery.RecoverySession: android.security.keystore.recovery.RecoveryController mRecoveryController>;

        r5 = virtualinvoke $r10.<android.security.keystore.recovery.RecoveryController: java.security.Key getKeyFromGrant(java.lang.String)>(r4);

     label3:
        virtualinvoke $r6.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, r5);

        goto label1;

     label4:
        $r12 := @caughtexception;

        $r13 = new android.security.keystore.recovery.InternalRecoveryServiceException;

        $r15 = <java.util.Locale: java.util.Locale US>;

        $r14 = newarray (java.lang.Object)[2];

        $r14[0] = r3;

        $r14[1] = r4;

        $r16 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r15, "Failed to get key \'%s\' from grant \'%s\'", $r14);

        specialinvoke $r13.<android.security.keystore.recovery.InternalRecoveryServiceException: void <init>(java.lang.String,java.lang.Throwable)>($r16, $r12);

        throw $r13;

     label5:
        return $r6;

        catch android.security.keystore.KeyPermanentlyInvalidatedException from label2 to label3 with label4;
        catch java.security.UnrecoverableKeyException from label2 to label3 with label4;
    }

    static android.security.keystore.recovery.RecoverySession newInstance(android.security.keystore.recovery.RecoveryController)
    {
        android.security.keystore.recovery.RecoveryController r0;
        android.security.keystore.recovery.RecoverySession $r1;
        java.lang.String $r2;

        r0 := @parameter0: android.security.keystore.recovery.RecoveryController;

        $r1 = new android.security.keystore.recovery.RecoverySession;

        $r2 = staticinvoke <android.security.keystore.recovery.RecoverySession: java.lang.String newSessionId()>();

        specialinvoke $r1.<android.security.keystore.recovery.RecoverySession: void <init>(android.security.keystore.recovery.RecoveryController,java.lang.String)>(r0, $r2);

        return $r1;
    }

    private static java.lang.String newSessionId()
    {
        byte[] r1;
        java.security.SecureRandom $r2;
        java.lang.String $r3;

        $r2 = new java.security.SecureRandom;

        specialinvoke $r2.<java.security.SecureRandom: void <init>()>();

        r1 = newarray (byte)[16];

        virtualinvoke $r2.<java.security.SecureRandom: void nextBytes(byte[])>(r1);

        $r3 = staticinvoke <libcore.util.HexEncoding: java.lang.String encodeToString(byte[],boolean)>(r1, 0);

        return $r3;
    }

    public void close()
    {
        android.security.keystore.recovery.RecoverySession r0;
        android.security.keystore.recovery.RecoveryController $r2;
        com.android.internal.widget.ILockSettings $r3;
        java.lang.String $r4;
        java.lang.Exception $r5;

        r0 := @this: android.security.keystore.recovery.RecoverySession;

     label1:
        $r2 = r0.<android.security.keystore.recovery.RecoverySession: android.security.keystore.recovery.RecoveryController mRecoveryController>;

        $r3 = virtualinvoke $r2.<android.security.keystore.recovery.RecoveryController: com.android.internal.widget.ILockSettings getBinder()>();

        $r4 = r0.<android.security.keystore.recovery.RecoverySession: java.lang.String mSessionId>;

        interfaceinvoke $r3.<com.android.internal.widget.ILockSettings: void closeSession(java.lang.String)>($r4);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("RecoverySession", "Unexpected error trying to close session", $r5);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch android.os.ServiceSpecificException from label1 to label2 with label3;
    }

    java.lang.String getSessionId()
    {
        android.security.keystore.recovery.RecoverySession r0;
        java.lang.String $r1;

        r0 := @this: android.security.keystore.recovery.RecoverySession;

        $r1 = r0.<android.security.keystore.recovery.RecoverySession: java.lang.String mSessionId>;

        return $r1;
    }

    public java.util.Map recoverKeyChainSnapshot(byte[], java.util.List) throws android.security.keystore.recovery.SessionExpiredException, android.security.keystore.recovery.DecryptionFailedException, android.security.keystore.recovery.InternalRecoveryServiceException
    {
        android.security.keystore.recovery.RecoverySession r0;
        java.util.List r1;
        android.security.keystore.recovery.RecoveryController $r2, $r11;
        com.android.internal.widget.ILockSettings $r3;
        java.lang.String $r4, $r10, $r14;
        java.util.Map $r5, r16;
        android.os.RemoteException $r6;
        java.lang.RuntimeException $r7;
        android.os.ServiceSpecificException $r8;
        int $i0, $i1;
        android.security.keystore.recovery.DecryptionFailedException $r9;
        android.security.keystore.recovery.InternalRecoveryServiceException $r12;
        android.security.keystore.recovery.SessionExpiredException $r13;
        byte[] r15;

        r0 := @this: android.security.keystore.recovery.RecoverySession;

        r15 := @parameter0: byte[];

        r1 := @parameter1: java.util.List;

     label1:
        $r2 = r0.<android.security.keystore.recovery.RecoverySession: android.security.keystore.recovery.RecoveryController mRecoveryController>;

        $r3 = virtualinvoke $r2.<android.security.keystore.recovery.RecoveryController: com.android.internal.widget.ILockSettings getBinder()>();

        $r4 = r0.<android.security.keystore.recovery.RecoverySession: java.lang.String mSessionId>;

        $r5 = interfaceinvoke $r3.<com.android.internal.widget.ILockSettings: java.util.Map recoverKeyChainSnapshot(java.lang.String,byte[],java.util.List)>($r4, r15, r1);

        r16 = specialinvoke r0.<android.security.keystore.recovery.RecoverySession: java.util.Map getKeysFromGrants(java.util.Map)>($r5);

     label2:
        return r16;

     label3:
        $r8 := @caughtexception;

        $i0 = $r8.<android.os.ServiceSpecificException: int errorCode>;

        if $i0 == 26 goto label5;

        $i1 = $r8.<android.os.ServiceSpecificException: int errorCode>;

        if $i1 != 24 goto label4;

        $r13 = new android.security.keystore.recovery.SessionExpiredException;

        $r14 = virtualinvoke $r8.<android.os.ServiceSpecificException: java.lang.String getMessage()>();

        specialinvoke $r13.<android.security.keystore.recovery.SessionExpiredException: void <init>(java.lang.String)>($r14);

        throw $r13;

     label4:
        $r11 = r0.<android.security.keystore.recovery.RecoverySession: android.security.keystore.recovery.RecoveryController mRecoveryController>;

        $r12 = virtualinvoke $r11.<android.security.keystore.recovery.RecoveryController: android.security.keystore.recovery.InternalRecoveryServiceException wrapUnexpectedServiceSpecificException(android.os.ServiceSpecificException)>($r8);

        throw $r12;

     label5:
        $r9 = new android.security.keystore.recovery.DecryptionFailedException;

        $r10 = virtualinvoke $r8.<android.os.ServiceSpecificException: java.lang.String getMessage()>();

        specialinvoke $r9.<android.security.keystore.recovery.DecryptionFailedException: void <init>(java.lang.String)>($r10);

        throw $r9;

     label6:
        $r6 := @caughtexception;

        $r7 = virtualinvoke $r6.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r7;

        catch android.os.RemoteException from label1 to label2 with label6;
        catch android.os.ServiceSpecificException from label1 to label2 with label3;
    }

    public byte[] start(java.lang.String, java.security.cert.CertPath, byte[], byte[], java.util.List) throws java.security.cert.CertificateException, android.security.keystore.recovery.InternalRecoveryServiceException
    {
        android.security.keystore.recovery.RecoverySession r0;
        byte[] r1, r2, r16;
        java.util.List r3;
        android.security.keystore.recovery.RecoveryController $r4, $r9;
        com.android.internal.widget.ILockSettings $r5;
        java.lang.String $r6, r13;
        android.os.ServiceSpecificException $r7;
        int $i0, $i1;
        java.security.cert.CertificateException $r8;
        android.security.keystore.recovery.InternalRecoveryServiceException $r10;
        android.os.RemoteException $r11;
        java.lang.RuntimeException $r12;
        java.security.cert.CertPath r14;
        android.security.keystore.recovery.RecoveryCertPath r15;

        r0 := @this: android.security.keystore.recovery.RecoverySession;

        r13 := @parameter0: java.lang.String;

        r14 := @parameter1: java.security.cert.CertPath;

        r1 := @parameter2: byte[];

        r2 := @parameter3: byte[];

        r3 := @parameter4: java.util.List;

        r15 = staticinvoke <android.security.keystore.recovery.RecoveryCertPath: android.security.keystore.recovery.RecoveryCertPath createRecoveryCertPath(java.security.cert.CertPath)>(r14);

     label1:
        $r4 = r0.<android.security.keystore.recovery.RecoverySession: android.security.keystore.recovery.RecoveryController mRecoveryController>;

        $r5 = virtualinvoke $r4.<android.security.keystore.recovery.RecoveryController: com.android.internal.widget.ILockSettings getBinder()>();

        $r6 = r0.<android.security.keystore.recovery.RecoverySession: java.lang.String mSessionId>;

        r16 = interfaceinvoke $r5.<com.android.internal.widget.ILockSettings: byte[] startRecoverySessionWithCertPath(java.lang.String,java.lang.String,android.security.keystore.recovery.RecoveryCertPath,byte[],byte[],java.util.List)>($r6, r13, r15, r1, r2, r3);

     label2:
        return r16;

     label3:
        $r7 := @caughtexception;

        $i0 = $r7.<android.os.ServiceSpecificException: int errorCode>;

        if $i0 == 25 goto label5;

        $i1 = $r7.<android.os.ServiceSpecificException: int errorCode>;

        if $i1 != 28 goto label4;

        goto label5;

     label4:
        $r9 = r0.<android.security.keystore.recovery.RecoverySession: android.security.keystore.recovery.RecoveryController mRecoveryController>;

        $r10 = virtualinvoke $r9.<android.security.keystore.recovery.RecoveryController: android.security.keystore.recovery.InternalRecoveryServiceException wrapUnexpectedServiceSpecificException(android.os.ServiceSpecificException)>($r7);

        throw $r10;

     label5:
        $r8 = new java.security.cert.CertificateException;

        specialinvoke $r8.<java.security.cert.CertificateException: void <init>(java.lang.String,java.lang.Throwable)>("Invalid certificate for recovery session", $r7);

        throw $r8;

     label6:
        $r11 := @caughtexception;

        $r12 = virtualinvoke $r11.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r12;

        catch android.os.RemoteException from label1 to label2 with label6;
        catch android.os.ServiceSpecificException from label1 to label2 with label3;
    }

    public static void <clinit>()
    {
        <android.security.keystore.recovery.RecoverySession: java.lang.String TAG> = "RecoverySession";

        <android.security.keystore.recovery.RecoverySession: int SESSION_ID_LENGTH_BYTES> = 16;

        return;
    }
}
