public final class android.security.keystore.recovery.WrappedApplicationKey extends java.lang.Object implements android.os.Parcelable
{
    public static final android.os.Parcelable$Creator CREATOR;
    private java.lang.String mAlias;
    private byte[] mEncryptedKeyMaterial;
    private byte[] mMetadata;

    static void <clinit>()
    {
        android.security.keystore.recovery.WrappedApplicationKey$1 $r0;

        $r0 = new android.security.keystore.recovery.WrappedApplicationKey$1;

        specialinvoke $r0.<android.security.keystore.recovery.WrappedApplicationKey$1: void <init>()>();

        <android.security.keystore.recovery.WrappedApplicationKey: android.os.Parcelable$Creator CREATOR> = $r0;

        return;
    }

    private void <init>()
    {
        android.security.keystore.recovery.WrappedApplicationKey r0;

        r0 := @this: android.security.keystore.recovery.WrappedApplicationKey;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    protected void <init>(android.os.Parcel)
    {
        android.security.keystore.recovery.WrappedApplicationKey r0;
        android.os.Parcel r1;
        java.lang.String $r2;
        byte[] $r3, $r4;
        int $i0;

        r0 := @this: android.security.keystore.recovery.WrappedApplicationKey;

        r1 := @parameter0: android.os.Parcel;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r0.<android.security.keystore.recovery.WrappedApplicationKey: java.lang.String mAlias> = $r2;

        $r3 = virtualinvoke r1.<android.os.Parcel: byte[] createByteArray()>();

        r0.<android.security.keystore.recovery.WrappedApplicationKey: byte[] mEncryptedKeyMaterial> = $r3;

        $i0 = virtualinvoke r1.<android.os.Parcel: int dataAvail()>();

        if $i0 <= 0 goto label1;

        $r4 = virtualinvoke r1.<android.os.Parcel: byte[] createByteArray()>();

        r0.<android.security.keystore.recovery.WrappedApplicationKey: byte[] mMetadata> = $r4;

     label1:
        return;
    }

    void <init>(android.security.keystore.recovery.WrappedApplicationKey$1)
    {
        android.security.keystore.recovery.WrappedApplicationKey r0;
        android.security.keystore.recovery.WrappedApplicationKey$1 r1;

        r0 := @this: android.security.keystore.recovery.WrappedApplicationKey;

        r1 := @parameter0: android.security.keystore.recovery.WrappedApplicationKey$1;

        specialinvoke r0.<android.security.keystore.recovery.WrappedApplicationKey: void <init>()>();

        return;
    }

    public void <init>(java.lang.String, byte[])
    {
        android.security.keystore.recovery.WrappedApplicationKey r0;
        java.lang.String r1, $r4;
        byte[] r2, $r6;

        r0 := @this: android.security.keystore.recovery.WrappedApplicationKey;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: byte[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r1);

        $r4 = (java.lang.String) r1;

        r0.<android.security.keystore.recovery.WrappedApplicationKey: java.lang.String mAlias> = $r4;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r2);

        $r6 = (byte[]) r2;

        r0.<android.security.keystore.recovery.WrappedApplicationKey: byte[] mEncryptedKeyMaterial> = $r6;

        return;
    }

    static java.lang.String access$100(android.security.keystore.recovery.WrappedApplicationKey)
    {
        android.security.keystore.recovery.WrappedApplicationKey r0;
        java.lang.String $r1;

        r0 := @parameter0: android.security.keystore.recovery.WrappedApplicationKey;

        $r1 = r0.<android.security.keystore.recovery.WrappedApplicationKey: java.lang.String mAlias>;

        return $r1;
    }

    static java.lang.String access$102(android.security.keystore.recovery.WrappedApplicationKey, java.lang.String)
    {
        android.security.keystore.recovery.WrappedApplicationKey r0;
        java.lang.String r1;

        r0 := @parameter0: android.security.keystore.recovery.WrappedApplicationKey;

        r1 := @parameter1: java.lang.String;

        r0.<android.security.keystore.recovery.WrappedApplicationKey: java.lang.String mAlias> = r1;

        return r1;
    }

    static byte[] access$200(android.security.keystore.recovery.WrappedApplicationKey)
    {
        android.security.keystore.recovery.WrappedApplicationKey r0;
        byte[] $r1;

        r0 := @parameter0: android.security.keystore.recovery.WrappedApplicationKey;

        $r1 = r0.<android.security.keystore.recovery.WrappedApplicationKey: byte[] mEncryptedKeyMaterial>;

        return $r1;
    }

    static byte[] access$202(android.security.keystore.recovery.WrappedApplicationKey, byte[])
    {
        android.security.keystore.recovery.WrappedApplicationKey r0;
        byte[] r1;

        r0 := @parameter0: android.security.keystore.recovery.WrappedApplicationKey;

        r1 := @parameter1: byte[];

        r0.<android.security.keystore.recovery.WrappedApplicationKey: byte[] mEncryptedKeyMaterial> = r1;

        return r1;
    }

    static byte[] access$302(android.security.keystore.recovery.WrappedApplicationKey, byte[])
    {
        android.security.keystore.recovery.WrappedApplicationKey r0;
        byte[] r1;

        r0 := @parameter0: android.security.keystore.recovery.WrappedApplicationKey;

        r1 := @parameter1: byte[];

        r0.<android.security.keystore.recovery.WrappedApplicationKey: byte[] mMetadata> = r1;

        return r1;
    }

    public int describeContents()
    {
        android.security.keystore.recovery.WrappedApplicationKey r0;

        r0 := @this: android.security.keystore.recovery.WrappedApplicationKey;

        return 0;
    }

    public java.lang.String getAlias()
    {
        android.security.keystore.recovery.WrappedApplicationKey r0;
        java.lang.String $r1;

        r0 := @this: android.security.keystore.recovery.WrappedApplicationKey;

        $r1 = r0.<android.security.keystore.recovery.WrappedApplicationKey: java.lang.String mAlias>;

        return $r1;
    }

    public byte[] getEncryptedKeyMaterial()
    {
        android.security.keystore.recovery.WrappedApplicationKey r0;
        byte[] $r1;

        r0 := @this: android.security.keystore.recovery.WrappedApplicationKey;

        $r1 = r0.<android.security.keystore.recovery.WrappedApplicationKey: byte[] mEncryptedKeyMaterial>;

        return $r1;
    }

    public byte[] getMetadata()
    {
        android.security.keystore.recovery.WrappedApplicationKey r0;
        byte[] $r1;

        r0 := @this: android.security.keystore.recovery.WrappedApplicationKey;

        $r1 = r0.<android.security.keystore.recovery.WrappedApplicationKey: byte[] mMetadata>;

        return $r1;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.security.keystore.recovery.WrappedApplicationKey r0;
        android.os.Parcel r1;
        int i0;
        java.lang.String $r2;
        byte[] $r3, $r4;

        r0 := @this: android.security.keystore.recovery.WrappedApplicationKey;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        $r2 = r0.<android.security.keystore.recovery.WrappedApplicationKey: java.lang.String mAlias>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r2);

        $r3 = r0.<android.security.keystore.recovery.WrappedApplicationKey: byte[] mEncryptedKeyMaterial>;

        virtualinvoke r1.<android.os.Parcel: void writeByteArray(byte[])>($r3);

        $r4 = r0.<android.security.keystore.recovery.WrappedApplicationKey: byte[] mMetadata>;

        virtualinvoke r1.<android.os.Parcel: void writeByteArray(byte[])>($r4);

        return;
    }
}
