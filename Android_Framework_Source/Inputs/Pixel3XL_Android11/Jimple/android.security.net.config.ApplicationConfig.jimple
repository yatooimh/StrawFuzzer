public final class android.security.net.config.ApplicationConfig extends java.lang.Object
{
    private static android.security.net.config.ApplicationConfig sInstance;
    private static java.lang.Object sLock;
    private android.security.net.config.ConfigSource mConfigSource;
    private java.util.Set mConfigs;
    private android.security.net.config.NetworkSecurityConfig mDefaultConfig;
    private boolean mInitialized;
    private final java.lang.Object mLock;
    private javax.net.ssl.X509TrustManager mTrustManager;

    static void <clinit>()
    {
        java.lang.Object $r0;

        $r0 = new java.lang.Object;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        <android.security.net.config.ApplicationConfig: java.lang.Object sLock> = $r0;

        return;
    }

    public void <init>(android.security.net.config.ConfigSource)
    {
        android.security.net.config.ApplicationConfig r0;
        android.security.net.config.ConfigSource r1;
        java.lang.Object $r2;

        r0 := @this: android.security.net.config.ApplicationConfig;

        r1 := @parameter0: android.security.net.config.ConfigSource;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.lang.Object;

        specialinvoke $r2.<java.lang.Object: void <init>()>();

        r0.<android.security.net.config.ApplicationConfig: java.lang.Object mLock> = $r2;

        r0.<android.security.net.config.ApplicationConfig: android.security.net.config.ConfigSource mConfigSource> = r1;

        r0.<android.security.net.config.ApplicationConfig: boolean mInitialized> = 0;

        return;
    }

    private void ensureInitialized()
    {
        android.security.net.config.ApplicationConfig r0;
        java.lang.Object r1;
        boolean $z0;
        android.security.net.config.ConfigSource $r2, $r4;
        java.util.Set $r3;
        android.security.net.config.NetworkSecurityConfig $r5;
        java.lang.Throwable $r6;
        android.security.net.config.RootTrustManager r7;

        r0 := @this: android.security.net.config.ApplicationConfig;

        r1 = r0.<android.security.net.config.ApplicationConfig: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $z0 = r0.<android.security.net.config.ApplicationConfig: boolean mInitialized>;

        if $z0 == 0 goto label3;

        exitmonitor r1;

     label2:
        return;

     label3:
        $r2 = r0.<android.security.net.config.ApplicationConfig: android.security.net.config.ConfigSource mConfigSource>;

        $r3 = interfaceinvoke $r2.<android.security.net.config.ConfigSource: java.util.Set getPerDomainConfigs()>();

        r0.<android.security.net.config.ApplicationConfig: java.util.Set mConfigs> = $r3;

        $r4 = r0.<android.security.net.config.ApplicationConfig: android.security.net.config.ConfigSource mConfigSource>;

        $r5 = interfaceinvoke $r4.<android.security.net.config.ConfigSource: android.security.net.config.NetworkSecurityConfig getDefaultConfig()>();

        r0.<android.security.net.config.ApplicationConfig: android.security.net.config.NetworkSecurityConfig mDefaultConfig> = $r5;

        r0.<android.security.net.config.ApplicationConfig: android.security.net.config.ConfigSource mConfigSource> = null;

        r7 = new android.security.net.config.RootTrustManager;

        specialinvoke r7.<android.security.net.config.RootTrustManager: void <init>(android.security.net.config.ApplicationConfig)>(r0);

        r0.<android.security.net.config.ApplicationConfig: javax.net.ssl.X509TrustManager mTrustManager> = r7;

        r0.<android.security.net.config.ApplicationConfig: boolean mInitialized> = 1;

        exitmonitor r1;

     label4:
        return;

     label5:
        $r6 := @caughtexception;

     label6:
        exitmonitor r1;

     label7:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public static android.security.net.config.ApplicationConfig getDefaultInstance()
    {
        java.lang.Object r0;
        java.lang.Throwable $r1;
        android.security.net.config.ApplicationConfig r2;

        r0 = <android.security.net.config.ApplicationConfig: java.lang.Object sLock>;

        entermonitor r0;

     label1:
        r2 = <android.security.net.config.ApplicationConfig: android.security.net.config.ApplicationConfig sInstance>;

        exitmonitor r0;

     label2:
        return r2;

     label3:
        $r1 := @caughtexception;

     label4:
        exitmonitor r0;

     label5:
        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public static void setDefaultInstance(android.security.net.config.ApplicationConfig)
    {
        java.lang.Object r0;
        java.lang.Throwable $r1;
        android.security.net.config.ApplicationConfig r2;

        r2 := @parameter0: android.security.net.config.ApplicationConfig;

        r0 = <android.security.net.config.ApplicationConfig: java.lang.Object sLock>;

        entermonitor r0;

     label1:
        <android.security.net.config.ApplicationConfig: android.security.net.config.ApplicationConfig sInstance> = r2;

        exitmonitor r0;

     label2:
        return;

     label3:
        $r1 := @caughtexception;

     label4:
        exitmonitor r0;

     label5:
        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public android.security.net.config.NetworkSecurityConfig getConfigForHostname(java.lang.String)
    {
        android.security.net.config.ApplicationConfig r0;
        java.util.Iterator r1;
        android.util.Pair r2, r24, r26;
        android.security.net.config.Domain r3, $r19;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.util.Set $r4, $r7;
        char $c0, $c3, $c8;
        java.lang.IllegalArgumentException $r5;
        java.util.Locale $r6;
        int $i1, $i2, $i4, $i5, $i6, $i7, $i9, $i10, $i11, $i12;
        android.security.net.config.NetworkSecurityConfig $r8, $r10, r25, $r27;
        java.lang.Object $r9, $r11, $r12, $r13, $r18;
        java.lang.String $r14, $r15, $r16, $r17, $r20, r21, r22, r23;

        r0 := @this: android.security.net.config.ApplicationConfig;

        r21 := @parameter0: java.lang.String;

        specialinvoke r0.<android.security.net.config.ApplicationConfig: void ensureInitialized()>();

        if r21 == null goto label10;

        $z0 = virtualinvoke r21.<java.lang.String: boolean isEmpty()>();

        if $z0 != 0 goto label10;

        $r4 = r0.<android.security.net.config.ApplicationConfig: java.util.Set mConfigs>;

        if $r4 != null goto label01;

        goto label10;

     label01:
        $c0 = virtualinvoke r21.<java.lang.String: char charAt(int)>(0);

        if $c0 == 46 goto label09;

        $r6 = <java.util.Locale: java.util.Locale US>;

        r22 = virtualinvoke r21.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r6);

        r23 = r22;

        $i1 = virtualinvoke r22.<java.lang.String: int length()>();

        $i2 = $i1 - 1;

        $c3 = virtualinvoke r22.<java.lang.String: char charAt(int)>($i2);

        if $c3 != 46 goto label02;

        $i11 = virtualinvoke r22.<java.lang.String: int length()>();

        $i12 = $i11 - 1;

        r23 = virtualinvoke r22.<java.lang.String: java.lang.String substring(int,int)>(0, $i12);

     label02:
        r24 = null;

        $r7 = r0.<android.security.net.config.ApplicationConfig: java.util.Set mConfigs>;

        r1 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>();

     label03:
        $z4 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label07;

        $r11 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (android.util.Pair) $r11;

        $r12 = r2.<android.util.Pair: java.lang.Object first>;

        r3 = (android.security.net.config.Domain) $r12;

        $r13 = r2.<android.util.Pair: java.lang.Object second>;

        r25 = (android.security.net.config.NetworkSecurityConfig) $r13;

        $r14 = r3.<android.security.net.config.Domain: java.lang.String hostname>;

        $z1 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>(r23);

        if $z1 == 0 goto label04;

        return r25;

     label04:
        r26 = r24;

        $z2 = r3.<android.security.net.config.Domain: boolean subdomainsIncluded>;

        if $z2 == 0 goto label06;

        r26 = r24;

        $r15 = r3.<android.security.net.config.Domain: java.lang.String hostname>;

        $z3 = virtualinvoke r23.<java.lang.String: boolean endsWith(java.lang.String)>($r15);

        if $z3 == 0 goto label06;

        r26 = r24;

        $i4 = virtualinvoke r23.<java.lang.String: int length()>();

        $r16 = r3.<android.security.net.config.Domain: java.lang.String hostname>;

        $i5 = virtualinvoke $r16.<java.lang.String: int length()>();

        $i6 = $i4 - $i5;

        $i7 = $i6 - 1;

        $c8 = virtualinvoke r23.<java.lang.String: char charAt(int)>($i7);

        if $c8 != 46 goto label06;

        if r24 != null goto label05;

        r26 = r2;

        goto label06;

     label05:
        r26 = r24;

        $r17 = r3.<android.security.net.config.Domain: java.lang.String hostname>;

        $i9 = virtualinvoke $r17.<java.lang.String: int length()>();

        $r18 = r24.<android.util.Pair: java.lang.Object first>;

        $r19 = (android.security.net.config.Domain) $r18;

        $r20 = $r19.<android.security.net.config.Domain: java.lang.String hostname>;

        $i10 = virtualinvoke $r20.<java.lang.String: int length()>();

        if $i9 <= $i10 goto label06;

        r26 = r2;

     label06:
        r24 = r26;

        goto label03;

     label07:
        if r24 == null goto label08;

        $r9 = r24.<android.util.Pair: java.lang.Object second>;

        $r10 = (android.security.net.config.NetworkSecurityConfig) $r9;

        return $r10;

     label08:
        $r8 = r0.<android.security.net.config.ApplicationConfig: android.security.net.config.NetworkSecurityConfig mDefaultConfig>;

        return $r8;

     label09:
        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("hostname must not begin with a .");

        throw $r5;

     label10:
        $r27 = r0.<android.security.net.config.ApplicationConfig: android.security.net.config.NetworkSecurityConfig mDefaultConfig>;

        return $r27;
    }

    public javax.net.ssl.X509TrustManager getTrustManager()
    {
        android.security.net.config.ApplicationConfig r0;
        javax.net.ssl.X509TrustManager $r1;

        r0 := @this: android.security.net.config.ApplicationConfig;

        specialinvoke r0.<android.security.net.config.ApplicationConfig: void ensureInitialized()>();

        $r1 = r0.<android.security.net.config.ApplicationConfig: javax.net.ssl.X509TrustManager mTrustManager>;

        return $r1;
    }

    public void handleTrustStorageUpdate()
    {
        android.security.net.config.ApplicationConfig r0;
        java.lang.Object r1, $r8, $r9, $r11;
        java.util.Iterator r2;
        android.util.Pair r3;
        boolean $z0, $z1, $z2;
        android.security.net.config.NetworkSecurityConfig $r4, $r10, $r12;
        java.util.Set $r5, $r6, $r7;
        int $i0;
        java.lang.Throwable $r13;
        java.util.HashSet r14;

        r0 := @this: android.security.net.config.ApplicationConfig;

        r1 = r0.<android.security.net.config.ApplicationConfig: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $z0 = r0.<android.security.net.config.ApplicationConfig: boolean mInitialized>;

        if $z0 != 0 goto label03;

        exitmonitor r1;

     label02:
        return;

     label03:
        $r4 = r0.<android.security.net.config.ApplicationConfig: android.security.net.config.NetworkSecurityConfig mDefaultConfig>;

        virtualinvoke $r4.<android.security.net.config.NetworkSecurityConfig: void handleTrustStorageUpdate()>();

        $r5 = r0.<android.security.net.config.ApplicationConfig: java.util.Set mConfigs>;

        if $r5 == null goto label06;

        r14 = new java.util.HashSet;

        $r6 = r0.<android.security.net.config.ApplicationConfig: java.util.Set mConfigs>;

        $i0 = interfaceinvoke $r6.<java.util.Set: int size()>();

        specialinvoke r14.<java.util.HashSet: void <init>(int)>($i0);

        $r7 = r0.<android.security.net.config.ApplicationConfig: java.util.Set mConfigs>;

        r2 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>();

     label04:
        $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label06;

        $r8 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.util.Pair) $r8;

        $r9 = r3.<android.util.Pair: java.lang.Object second>;

        $r10 = (android.security.net.config.NetworkSecurityConfig) $r9;

        $z2 = interfaceinvoke r14.<java.util.Set: boolean add(java.lang.Object)>($r10);

        if $z2 == 0 goto label05;

        $r11 = r3.<android.util.Pair: java.lang.Object second>;

        $r12 = (android.security.net.config.NetworkSecurityConfig) $r11;

        virtualinvoke $r12.<android.security.net.config.NetworkSecurityConfig: void handleTrustStorageUpdate()>();

     label05:
        goto label04;

     label06:
        exitmonitor r1;

     label07:
        return;

     label08:
        $r13 := @caughtexception;

     label09:
        exitmonitor r1;

     label10:
        throw $r13;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    public boolean hasPerDomainConfigs()
    {
        android.security.net.config.ApplicationConfig r0;
        java.util.Set r1;
        boolean $z0, z1;

        r0 := @this: android.security.net.config.ApplicationConfig;

        specialinvoke r0.<android.security.net.config.ApplicationConfig: void ensureInitialized()>();

        r1 = r0.<android.security.net.config.ApplicationConfig: java.util.Set mConfigs>;

        if r1 == null goto label1;

        $z0 = interfaceinvoke r1.<java.util.Set: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    public boolean isCleartextTrafficPermitted()
    {
        android.security.net.config.ApplicationConfig r0;
        android.security.net.config.NetworkSecurityConfig $r1, $r5;
        boolean $z0, $z1, $z2;
        java.lang.Object $r2, $r4;
        android.util.Pair $r3;
        java.util.Set r6;
        java.util.Iterator r7;

        r0 := @this: android.security.net.config.ApplicationConfig;

        specialinvoke r0.<android.security.net.config.ApplicationConfig: void ensureInitialized()>();

        r6 = r0.<android.security.net.config.ApplicationConfig: java.util.Set mConfigs>;

        if r6 == null goto label3;

        r7 = interfaceinvoke r6.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r2 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>();

        $r3 = (android.util.Pair) $r2;

        $r4 = $r3.<android.util.Pair: java.lang.Object second>;

        $r5 = (android.security.net.config.NetworkSecurityConfig) $r4;

        $z2 = virtualinvoke $r5.<android.security.net.config.NetworkSecurityConfig: boolean isCleartextTrafficPermitted()>();

        if $z2 != 0 goto label2;

        return 0;

     label2:
        goto label1;

     label3:
        $r1 = r0.<android.security.net.config.ApplicationConfig: android.security.net.config.NetworkSecurityConfig mDefaultConfig>;

        $z0 = virtualinvoke $r1.<android.security.net.config.NetworkSecurityConfig: boolean isCleartextTrafficPermitted()>();

        return $z0;
    }

    public boolean isCleartextTrafficPermitted(java.lang.String)
    {
        android.security.net.config.ApplicationConfig r0;
        java.lang.String r1;
        android.security.net.config.NetworkSecurityConfig $r2;
        boolean $z0;

        r0 := @this: android.security.net.config.ApplicationConfig;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<android.security.net.config.ApplicationConfig: android.security.net.config.NetworkSecurityConfig getConfigForHostname(java.lang.String)>(r1);

        $z0 = virtualinvoke $r2.<android.security.net.config.NetworkSecurityConfig: boolean isCleartextTrafficPermitted()>();

        return $z0;
    }
}
