abstract class android.security.net.config.DirectoryCertificateSource extends java.lang.Object implements android.security.net.config.CertificateSource
{
    private static final char[] DIGITS;
    private static final java.lang.String LOG_TAG;
    private final java.security.cert.CertificateFactory mCertFactory;
    private java.util.Set mCertificates;
    private final java.io.File mDir;
    private final java.lang.Object mLock;

    static void <clinit>()
    {
        char[] $r0;

        <android.security.net.config.DirectoryCertificateSource: java.lang.String LOG_TAG> = "DirectoryCertificateSrc";

        $r0 = newarray (char)[16];

        $r0[0] = 48;

        $r0[1] = 49;

        $r0[2] = 50;

        $r0[3] = 51;

        $r0[4] = 52;

        $r0[5] = 53;

        $r0[6] = 54;

        $r0[7] = 55;

        $r0[8] = 56;

        $r0[9] = 57;

        $r0[10] = 97;

        $r0[11] = 98;

        $r0[12] = 99;

        $r0[13] = 100;

        $r0[14] = 101;

        $r0[15] = 102;

        <android.security.net.config.DirectoryCertificateSource: char[] DIGITS> = $r0;

        return;
    }

    protected void <init>(java.io.File)
    {
        android.security.net.config.DirectoryCertificateSource r0;
        java.lang.Object $r1;
        java.security.cert.CertificateFactory $r2;
        java.lang.Throwable $r3;
        java.lang.RuntimeException $r4;
        java.io.File r5;

        r0 := @this: android.security.net.config.DirectoryCertificateSource;

        r5 := @parameter0: java.io.File;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.lang.Object;

        specialinvoke $r1.<java.lang.Object: void <init>()>();

        r0.<android.security.net.config.DirectoryCertificateSource: java.lang.Object mLock> = $r1;

        r0.<android.security.net.config.DirectoryCertificateSource: java.io.File mDir> = r5;

     label1:
        $r2 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>("X.509");

        r0.<android.security.net.config.DirectoryCertificateSource: java.security.cert.CertificateFactory mCertFactory> = $r2;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Failed to obtain X.509 CertificateFactory", $r3);

        throw $r4;

        catch java.security.cert.CertificateException from label1 to label2 with label3;
    }

    private java.security.cert.X509Certificate findCert(javax.security.auth.x500.X500Principal, android.security.net.config.DirectoryCertificateSource$CertSelector)
    {
        android.security.net.config.DirectoryCertificateSource r0;
        javax.security.auth.x500.X500Principal r1, $r10;
        android.security.net.config.DirectoryCertificateSource$CertSelector r2;
        java.lang.String r3, r12;
        java.lang.StringBuilder $r4;
        java.io.File $r8, $r9;
        boolean $z0, $z1, $z2, $z3;
        int i0;
        java.security.cert.X509Certificate r13;

        r0 := @this: android.security.net.config.DirectoryCertificateSource;

        r1 := @parameter0: javax.security.auth.x500.X500Principal;

        r2 := @parameter1: android.security.net.config.DirectoryCertificateSource$CertSelector;

        r3 = specialinvoke r0.<android.security.net.config.DirectoryCertificateSource: java.lang.String getHash(javax.security.auth.x500.X500Principal)>(r1);

        i0 = 0;

     label1:
        if i0 < 0 goto label7;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        r12 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = new java.io.File;

        $r9 = r0.<android.security.net.config.DirectoryCertificateSource: java.io.File mDir>;

        specialinvoke $r8.<java.io.File: void <init>(java.io.File,java.lang.String)>($r9, r12);

        $z0 = virtualinvoke $r8.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label2;

        goto label7;

     label2:
        $z1 = virtualinvoke r0.<android.security.net.config.DirectoryCertificateSource: boolean isCertMarkedAsRemoved(java.lang.String)>(r12);

        if $z1 == 0 goto label3;

        goto label6;

     label3:
        r13 = specialinvoke r0.<android.security.net.config.DirectoryCertificateSource: java.security.cert.X509Certificate readCertificate(java.lang.String)>(r12);

        if r13 != null goto label4;

        goto label6;

     label4:
        $r10 = virtualinvoke r13.<java.security.cert.X509Certificate: javax.security.auth.x500.X500Principal getSubjectX500Principal()>();

        $z2 = virtualinvoke r1.<javax.security.auth.x500.X500Principal: boolean equals(java.lang.Object)>($r10);

        if $z2 != 0 goto label5;

        goto label6;

     label5:
        $z3 = interfaceinvoke r2.<android.security.net.config.DirectoryCertificateSource$CertSelector: boolean match(java.security.cert.X509Certificate)>(r13);

        if $z3 == 0 goto label6;

        return r13;

     label6:
        i0 = i0 + 1;

        goto label1;

     label7:
        return null;
    }

    private java.util.Set findCerts(javax.security.auth.x500.X500Principal, android.security.net.config.DirectoryCertificateSource$CertSelector)
    {
        android.security.net.config.DirectoryCertificateSource r0;
        android.security.net.config.DirectoryCertificateSource$CertSelector r1;
        java.lang.String r2, r15;
        java.security.cert.X509Certificate r3;
        java.io.File $r9, r19;
        boolean $z0, $z1, $z2, $z3;
        javax.security.auth.x500.X500Principal $r10, r12;
        android.util.ArraySet r13, r16, r20;
        int i0;
        java.lang.Object r17;
        java.lang.StringBuilder r18;
        java.util.Set r21;

        r0 := @this: android.security.net.config.DirectoryCertificateSource;

        r12 := @parameter0: javax.security.auth.x500.X500Principal;

        r1 := @parameter1: android.security.net.config.DirectoryCertificateSource$CertSelector;

        r2 = specialinvoke r0.<android.security.net.config.DirectoryCertificateSource: java.lang.String getHash(javax.security.auth.x500.X500Principal)>(r12);

        r13 = null;

        i0 = 0;

     label01:
        if i0 < 0 goto label08;

        r18 = new java.lang.StringBuilder;

        specialinvoke r18.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        r15 = virtualinvoke r18.<java.lang.StringBuilder: java.lang.String toString()>();

        r19 = new java.io.File;

        $r9 = r0.<android.security.net.config.DirectoryCertificateSource: java.io.File mDir>;

        specialinvoke r19.<java.io.File: void <init>(java.io.File,java.lang.String)>($r9, r15);

        $z0 = virtualinvoke r19.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label02;

        goto label08;

     label02:
        $z1 = virtualinvoke r0.<android.security.net.config.DirectoryCertificateSource: boolean isCertMarkedAsRemoved(java.lang.String)>(r15);

        if $z1 == 0 goto label03;

        r16 = r13;

        goto label07;

     label03:
        r3 = specialinvoke r0.<android.security.net.config.DirectoryCertificateSource: java.security.cert.X509Certificate readCertificate(java.lang.String)>(r15);

        if r3 != null goto label04;

        r16 = r13;

        goto label07;

     label04:
        $r10 = virtualinvoke r3.<java.security.cert.X509Certificate: javax.security.auth.x500.X500Principal getSubjectX500Principal()>();

        $z2 = virtualinvoke r12.<javax.security.auth.x500.X500Principal: boolean equals(java.lang.Object)>($r10);

        if $z2 != 0 goto label05;

        r16 = r13;

        goto label07;

     label05:
        r16 = r13;

        $z3 = interfaceinvoke r1.<android.security.net.config.DirectoryCertificateSource$CertSelector: boolean match(java.security.cert.X509Certificate)>(r3);

        if $z3 == 0 goto label07;

        r16 = r13;

        if r13 != null goto label06;

        r20 = new android.util.ArraySet;

        specialinvoke r20.<android.util.ArraySet: void <init>()>();

        r16 = r20;

     label06:
        interfaceinvoke r16.<java.util.Set: boolean add(java.lang.Object)>(r3);

     label07:
        i0 = i0 + 1;

        r13 = r16;

        goto label01;

     label08:
        if r13 == null goto label09;

        r17 = r13;

        goto label10;

     label09:
        r17 = staticinvoke <java.util.Collections: java.util.Set emptySet()>();

     label10:
        r21 = (java.util.Set) r17;

        return r21;
    }

    private java.lang.String getHash(javax.security.auth.x500.X500Principal)
    {
        android.security.net.config.DirectoryCertificateSource r0;
        javax.security.auth.x500.X500Principal r1;
        int $i0;
        java.lang.String $r2;

        r0 := @this: android.security.net.config.DirectoryCertificateSource;

        r1 := @parameter0: javax.security.auth.x500.X500Principal;

        $i0 = staticinvoke <android.security.net.config.DirectoryCertificateSource: int hashName(javax.security.auth.x500.X500Principal)>(r1);

        $r2 = staticinvoke <android.security.net.config.DirectoryCertificateSource: java.lang.String intToHexString(int,int)>($i0, 8);

        return $r2;
    }

    private static int hashName(javax.security.auth.x500.X500Principal)
    {
        byte b0, b1, b16, b17;
        java.security.MessageDigest $r0;
        byte[] $r1, r5;
        int $i2, $i5, $i6, $i8, $i9, $i11, $i12, $i13, i14, i15;
        short $s3, $s4, $s7, $s10;
        java.lang.Throwable $r2;
        java.lang.AssertionError $r3;
        javax.security.auth.x500.X500Principal r4;

        r4 := @parameter0: javax.security.auth.x500.X500Principal;

     label1:
        $r0 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>("MD5");

        $r1 = virtualinvoke r4.<javax.security.auth.x500.X500Principal: byte[] getEncoded()>();

        r5 = virtualinvoke $r0.<java.security.MessageDigest: byte[] digest(byte[])>($r1);

     label2:
        i14 = 0 + 1;

        b0 = r5[0];

        i15 = i14 + 1;

        b16 = r5[i14];

        b1 = r5[i15];

        $i2 = i15 + 1;

        b17 = r5[$i2];

        $s3 = b0 & 255;

        $i6 = $s3 << 0;

        $s4 = b16 & 255;

        $i5 = $s4 << 8;

        $i9 = $i6 | $i5;

        $s7 = b1 & 255;

        $i8 = $s7 << 16;

        $i12 = $i9 | $i8;

        $s10 = b17 & 255;

        $i11 = $s10 << 24;

        $i13 = $i12 | $i11;

        return $i13;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>(java.lang.Object)>($r2);

        throw $r3;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label3;
    }

    private static java.lang.String intToHexString(int, int)
    {
        int i0, i1, $i2, $i5, $i6, i7, i8;
        char[] r0, $r1;
        char $c3, $c4;
        java.lang.String $r2;

        i7 := @parameter0: int;

        i0 := @parameter1: int;

        r0 = newarray (char)[8];

        i8 = 8;

     label1:
        i8 = i8 + -1;

        $r1 = <android.security.net.config.DirectoryCertificateSource: char[] DIGITS>;

        $i2 = i7 & 15;

        $c3 = $r1[$i2];

        $c4 = (char) $c3;

        r0[i8] = $c4;

        i1 = i7 >>> 4;

        i7 = i1;

        if i1 != 0 goto label2;

        $i5 = 8 - i8;

        if $i5 < i0 goto label2;

        $r2 = new java.lang.String;

        $i6 = 8 - i8;

        specialinvoke $r2.<java.lang.String: void <init>(char[],int,int)>(r0, i8, $i6);

        return $r2;

     label2:
        goto label1;
    }

    private java.security.cert.X509Certificate readCertificate(java.lang.String)
    {
        android.security.net.config.DirectoryCertificateSource r0;
        java.io.FileInputStream r1;
        java.io.File r2, $r3;
        java.security.cert.CertificateFactory $r4;
        java.security.cert.Certificate $r5;
        java.lang.Throwable $r6, $r8;
        java.lang.String $r7, r9;
        java.io.BufferedInputStream r10, r11, r12;
        java.security.cert.X509Certificate r14;
        java.lang.StringBuilder r17;

        r0 := @this: android.security.net.config.DirectoryCertificateSource;

        r9 := @parameter0: java.lang.String;

        r10 = null;

        r11 = null;

     label01:
        r12 = new java.io.BufferedInputStream;

     label02:
        r10 = null;

        r11 = null;

     label03:
        r1 = new java.io.FileInputStream;

     label04:
        r10 = null;

        r11 = null;

     label05:
        r2 = new java.io.File;

     label06:
        r10 = null;

        r11 = null;

     label07:
        $r3 = r0.<android.security.net.config.DirectoryCertificateSource: java.io.File mDir>;

        specialinvoke r2.<java.io.File: void <init>(java.io.File,java.lang.String)>($r3, r9);

     label08:
        r10 = null;

        r11 = null;

     label09:
        specialinvoke r1.<java.io.FileInputStream: void <init>(java.io.File)>(r2);

     label10:
        r10 = null;

        r11 = null;

     label11:
        specialinvoke r12.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>(r1);

     label12:
        r10 = r12;

        r11 = r12;

     label13:
        $r4 = r0.<android.security.net.config.DirectoryCertificateSource: java.security.cert.CertificateFactory mCertFactory>;

        $r5 = virtualinvoke $r4.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>(r12);

        r14 = (java.security.cert.X509Certificate) $r5;

     label14:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r12);

        return r14;

     label15:
        $r8 := @caughtexception;

        goto label27;

     label16:
        $r6 := @caughtexception;

        r10 = r11;

     label17:
        r17 = new java.lang.StringBuilder;

     label18:
        r10 = r11;

     label19:
        specialinvoke r17.<java.lang.StringBuilder: void <init>()>();

     label20:
        r10 = r11;

     label21:
        virtualinvoke r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to read certificate from ");

     label22:
        r10 = r11;

     label23:
        virtualinvoke r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9);

     label24:
        r10 = r11;

     label25:
        $r7 = virtualinvoke r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("DirectoryCertificateSrc", $r7, $r6);

     label26:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r11);

        return null;

     label27:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r10);

        throw $r8;

        catch java.security.cert.CertificateException from label01 to label02 with label16;
        catch java.io.IOException from label01 to label02 with label16;
        catch java.lang.Throwable from label01 to label02 with label15;
        catch java.security.cert.CertificateException from label03 to label04 with label16;
        catch java.io.IOException from label03 to label04 with label16;
        catch java.lang.Throwable from label03 to label04 with label15;
        catch java.security.cert.CertificateException from label05 to label06 with label16;
        catch java.io.IOException from label05 to label06 with label16;
        catch java.lang.Throwable from label05 to label06 with label15;
        catch java.security.cert.CertificateException from label07 to label08 with label16;
        catch java.io.IOException from label07 to label08 with label16;
        catch java.lang.Throwable from label07 to label08 with label15;
        catch java.security.cert.CertificateException from label09 to label10 with label16;
        catch java.io.IOException from label09 to label10 with label16;
        catch java.lang.Throwable from label09 to label10 with label15;
        catch java.security.cert.CertificateException from label11 to label12 with label16;
        catch java.io.IOException from label11 to label12 with label16;
        catch java.lang.Throwable from label11 to label12 with label15;
        catch java.security.cert.CertificateException from label13 to label14 with label16;
        catch java.io.IOException from label13 to label14 with label16;
        catch java.lang.Throwable from label13 to label14 with label15;
        catch java.lang.Throwable from label17 to label18 with label15;
        catch java.lang.Throwable from label19 to label20 with label15;
        catch java.lang.Throwable from label21 to label22 with label15;
        catch java.lang.Throwable from label23 to label24 with label15;
        catch java.lang.Throwable from label25 to label26 with label15;
    }

    public java.util.Set findAllByIssuerAndSignature(java.security.cert.X509Certificate)
    {
        android.security.net.config.DirectoryCertificateSource r0;
        java.security.cert.X509Certificate r1;
        javax.security.auth.x500.X500Principal $r2;
        android.security.net.config.DirectoryCertificateSource$3 $r3;
        java.util.Set $r4;

        r0 := @this: android.security.net.config.DirectoryCertificateSource;

        r1 := @parameter0: java.security.cert.X509Certificate;

        $r2 = virtualinvoke r1.<java.security.cert.X509Certificate: javax.security.auth.x500.X500Principal getIssuerX500Principal()>();

        $r3 = new android.security.net.config.DirectoryCertificateSource$3;

        specialinvoke $r3.<android.security.net.config.DirectoryCertificateSource$3: void <init>(android.security.net.config.DirectoryCertificateSource,java.security.cert.X509Certificate)>(r0, r1);

        $r4 = specialinvoke r0.<android.security.net.config.DirectoryCertificateSource: java.util.Set findCerts(javax.security.auth.x500.X500Principal,android.security.net.config.DirectoryCertificateSource$CertSelector)>($r2, $r3);

        return $r4;
    }

    public java.security.cert.X509Certificate findByIssuerAndSignature(java.security.cert.X509Certificate)
    {
        android.security.net.config.DirectoryCertificateSource r0;
        java.security.cert.X509Certificate r1, $r4;
        javax.security.auth.x500.X500Principal $r2;
        android.security.net.config.DirectoryCertificateSource$2 $r3;

        r0 := @this: android.security.net.config.DirectoryCertificateSource;

        r1 := @parameter0: java.security.cert.X509Certificate;

        $r2 = virtualinvoke r1.<java.security.cert.X509Certificate: javax.security.auth.x500.X500Principal getIssuerX500Principal()>();

        $r3 = new android.security.net.config.DirectoryCertificateSource$2;

        specialinvoke $r3.<android.security.net.config.DirectoryCertificateSource$2: void <init>(android.security.net.config.DirectoryCertificateSource,java.security.cert.X509Certificate)>(r0, r1);

        $r4 = specialinvoke r0.<android.security.net.config.DirectoryCertificateSource: java.security.cert.X509Certificate findCert(javax.security.auth.x500.X500Principal,android.security.net.config.DirectoryCertificateSource$CertSelector)>($r2, $r3);

        return $r4;
    }

    public java.security.cert.X509Certificate findBySubjectAndPublicKey(java.security.cert.X509Certificate)
    {
        android.security.net.config.DirectoryCertificateSource r0;
        java.security.cert.X509Certificate r1, $r4;
        javax.security.auth.x500.X500Principal $r2;
        android.security.net.config.DirectoryCertificateSource$1 $r3;

        r0 := @this: android.security.net.config.DirectoryCertificateSource;

        r1 := @parameter0: java.security.cert.X509Certificate;

        $r2 = virtualinvoke r1.<java.security.cert.X509Certificate: javax.security.auth.x500.X500Principal getSubjectX500Principal()>();

        $r3 = new android.security.net.config.DirectoryCertificateSource$1;

        specialinvoke $r3.<android.security.net.config.DirectoryCertificateSource$1: void <init>(android.security.net.config.DirectoryCertificateSource,java.security.cert.X509Certificate)>(r0, r1);

        $r4 = specialinvoke r0.<android.security.net.config.DirectoryCertificateSource: java.security.cert.X509Certificate findCert(javax.security.auth.x500.X500Principal,android.security.net.config.DirectoryCertificateSource$CertSelector)>($r2, $r3);

        return $r4;
    }

    public java.util.Set getCertificates()
    {
        android.security.net.config.DirectoryCertificateSource r0;
        java.lang.Object r1;
        android.util.ArraySet r2;
        int i0, i1;
        java.util.Set $r3, r7;
        java.io.File $r4, $r5;
        boolean $z0, $z1;
        java.lang.Throwable $r6;
        java.lang.String[] r8;
        java.lang.String r9;
        java.security.cert.X509Certificate r10;

        r0 := @this: android.security.net.config.DirectoryCertificateSource;

        r1 = r0.<android.security.net.config.DirectoryCertificateSource: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $r3 = r0.<android.security.net.config.DirectoryCertificateSource: java.util.Set mCertificates>;

        if $r3 == null goto label03;

        r7 = r0.<android.security.net.config.DirectoryCertificateSource: java.util.Set mCertificates>;

        exitmonitor r1;

     label02:
        return r7;

     label03:
        r2 = new android.util.ArraySet;

        specialinvoke r2.<android.util.ArraySet: void <init>()>();

        $r4 = r0.<android.security.net.config.DirectoryCertificateSource: java.io.File mDir>;

        $z0 = virtualinvoke $r4.<java.io.File: boolean isDirectory()>();

        if $z0 == 0 goto label12;

        $r5 = r0.<android.security.net.config.DirectoryCertificateSource: java.io.File mDir>;

        r8 = virtualinvoke $r5.<java.io.File: java.lang.String[] list()>();

        i0 = lengthof r8;

     label04:
        i1 = 0;

     label05:
        if i1 >= i0 goto label12;

        r9 = r8[i1];

     label06:
        $z1 = virtualinvoke r0.<android.security.net.config.DirectoryCertificateSource: boolean isCertMarkedAsRemoved(java.lang.String)>(r9);

        if $z1 == 0 goto label08;

     label07:
        goto label11;

     label08:
        r10 = specialinvoke r0.<android.security.net.config.DirectoryCertificateSource: java.security.cert.X509Certificate readCertificate(java.lang.String)>(r9);

     label09:
        if r10 == null goto label11;

     label10:
        interfaceinvoke r2.<java.util.Set: boolean add(java.lang.Object)>(r10);

     label11:
        i1 = i1 + 1;

        goto label05;

     label12:
        r0.<android.security.net.config.DirectoryCertificateSource: java.util.Set mCertificates> = r2;

        exitmonitor r1;

     label13:
        return r2;

     label14:
        $r6 := @caughtexception;

     label15:
        exitmonitor r1;

     label16:
        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label14;
        catch java.lang.Throwable from label03 to label04 with label14;
        catch java.lang.Throwable from label06 to label07 with label14;
        catch java.lang.Throwable from label08 to label09 with label14;
        catch java.lang.Throwable from label10 to label11 with label14;
        catch java.lang.Throwable from label12 to label13 with label14;
        catch java.lang.Throwable from label15 to label16 with label14;
    }

    public void handleTrustStorageUpdate()
    {
        android.security.net.config.DirectoryCertificateSource r0;
        java.lang.Object r1;
        java.lang.Throwable $r3;

        r0 := @this: android.security.net.config.DirectoryCertificateSource;

        r1 = r0.<android.security.net.config.DirectoryCertificateSource: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        r0.<android.security.net.config.DirectoryCertificateSource: java.util.Set mCertificates> = null;

        exitmonitor r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    protected abstract boolean isCertMarkedAsRemoved(java.lang.String);
}
