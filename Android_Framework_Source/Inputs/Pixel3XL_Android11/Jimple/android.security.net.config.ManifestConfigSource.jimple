public class android.security.net.config.ManifestConfigSource extends java.lang.Object implements android.security.net.config.ConfigSource
{
    private static final boolean DBG;
    private static final java.lang.String LOG_TAG;
    private final android.content.pm.ApplicationInfo mApplicationInfo;
    private android.security.net.config.ConfigSource mConfigSource;
    private final android.content.Context mContext;
    private final java.lang.Object mLock;

    public void <init>(android.content.Context)
    {
        android.security.net.config.ManifestConfigSource r0;
        android.content.Context r1;
        java.lang.Object $r2;
        android.content.pm.ApplicationInfo $r3, $r4;

        r0 := @this: android.security.net.config.ManifestConfigSource;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.lang.Object;

        specialinvoke $r2.<java.lang.Object: void <init>()>();

        r0.<android.security.net.config.ManifestConfigSource: java.lang.Object mLock> = $r2;

        r0.<android.security.net.config.ManifestConfigSource: android.content.Context mContext> = r1;

        $r3 = new android.content.pm.ApplicationInfo;

        $r4 = virtualinvoke r1.<android.content.Context: android.content.pm.ApplicationInfo getApplicationInfo()>();

        specialinvoke $r3.<android.content.pm.ApplicationInfo: void <init>(android.content.pm.ApplicationInfo)>($r4);

        r0.<android.security.net.config.ManifestConfigSource: android.content.pm.ApplicationInfo mApplicationInfo> = $r3;

        return;
    }

    private android.security.net.config.ConfigSource getConfigSource()
    {
        android.security.net.config.ManifestConfigSource r0;
        java.lang.Object r1;
        int i0, $i2, $i3, $i4, $i5;
        android.security.net.config.ConfigSource $r2, r18, r20;
        android.content.pm.ApplicationInfo $r3, $r4, $r5, $r6, $r15, $r22;
        boolean $z1, z2, z3;
        android.content.Context $r8, $r16;
        android.content.res.Resources $r9;
        java.lang.String $r10, $r14;
        java.lang.Throwable $r17;
        java.lang.StringBuilder r24;
        android.security.net.config.XmlConfigSource r25;
        android.security.net.config.ManifestConfigSource$DefaultConfigSource r26;

        r0 := @this: android.security.net.config.ManifestConfigSource;

        r1 = r0.<android.security.net.config.ManifestConfigSource: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $r2 = r0.<android.security.net.config.ManifestConfigSource: android.security.net.config.ConfigSource mConfigSource>;

        if $r2 == null goto label03;

        r18 = r0.<android.security.net.config.ManifestConfigSource: android.security.net.config.ConfigSource mConfigSource>;

        exitmonitor r1;

     label02:
        return r18;

     label03:
        $r3 = r0.<android.security.net.config.ManifestConfigSource: android.content.pm.ApplicationInfo mApplicationInfo>;

        i0 = $r3.<android.content.pm.ApplicationInfo: int networkSecurityConfigRes>;

     label04:
        z2 = 1;

        if i0 == 0 goto label10;

     label05:
        $r6 = r0.<android.security.net.config.ManifestConfigSource: android.content.pm.ApplicationInfo mApplicationInfo>;

        $i4 = $r6.<android.content.pm.ApplicationInfo: int flags>;

        $i5 = $i4 & 2;

        if $i5 == 0 goto label07;

     label06:
        goto label08;

     label07:
        z2 = 0;

     label08:
        r24 = new java.lang.StringBuilder;

        specialinvoke r24.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Using Network Security Config from resource ");

        $r8 = r0.<android.security.net.config.ManifestConfigSource: android.content.Context mContext>;

        $r9 = virtualinvoke $r8.<android.content.Context: android.content.res.Resources getResources()>();

        $r10 = virtualinvoke $r9.<android.content.res.Resources: java.lang.String getResourceEntryName(int)>(i0);

        virtualinvoke r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        virtualinvoke r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" debugBuild: ");

        virtualinvoke r24.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z2);

        $r14 = virtualinvoke r24.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("NetworkSecurityConfig", $r14);

        r25 = new android.security.net.config.XmlConfigSource;

        r20 = r25;

        $r16 = r0.<android.security.net.config.ManifestConfigSource: android.content.Context mContext>;

        $r15 = r0.<android.security.net.config.ManifestConfigSource: android.content.pm.ApplicationInfo mApplicationInfo>;

        specialinvoke r25.<android.security.net.config.XmlConfigSource: void <init>(android.content.Context,int,android.content.pm.ApplicationInfo)>($r16, i0, $r15);

     label09:
        goto label14;

     label10:
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("NetworkSecurityConfig", "No Network Security Config specified, using platform default");

        $r4 = r0.<android.security.net.config.ManifestConfigSource: android.content.pm.ApplicationInfo mApplicationInfo>;

        $i2 = $r4.<android.content.pm.ApplicationInfo: int flags>;

        $i3 = $i2 & 134217728;

        if $i3 == 0 goto label12;

        $r5 = r0.<android.security.net.config.ManifestConfigSource: android.content.pm.ApplicationInfo mApplicationInfo>;

        $z1 = virtualinvoke $r5.<android.content.pm.ApplicationInfo: boolean isInstantApp()>();

        if $z1 != 0 goto label12;

     label11:
        z3 = 1;

        goto label13;

     label12:
        z3 = 0;

     label13:
        r26 = new android.security.net.config.ManifestConfigSource$DefaultConfigSource;

        $r22 = r0.<android.security.net.config.ManifestConfigSource: android.content.pm.ApplicationInfo mApplicationInfo>;

        specialinvoke r26.<android.security.net.config.ManifestConfigSource$DefaultConfigSource: void <init>(boolean,android.content.pm.ApplicationInfo)>(z3, $r22);

        r20 = r26;

     label14:
        r0.<android.security.net.config.ManifestConfigSource: android.security.net.config.ConfigSource mConfigSource> = r20;

        exitmonitor r1;

     label15:
        return r20;

     label16:
        $r17 := @caughtexception;

     label17:
        exitmonitor r1;

     label18:
        throw $r17;

        catch java.lang.Throwable from label01 to label02 with label16;
        catch java.lang.Throwable from label03 to label04 with label16;
        catch java.lang.Throwable from label05 to label06 with label16;
        catch java.lang.Throwable from label08 to label09 with label16;
        catch java.lang.Throwable from label10 to label11 with label16;
        catch java.lang.Throwable from label13 to label14 with label16;
        catch java.lang.Throwable from label14 to label15 with label16;
        catch java.lang.Throwable from label17 to label18 with label16;
    }

    public android.security.net.config.NetworkSecurityConfig getDefaultConfig()
    {
        android.security.net.config.ManifestConfigSource r0;
        android.security.net.config.ConfigSource $r1;
        android.security.net.config.NetworkSecurityConfig $r2;

        r0 := @this: android.security.net.config.ManifestConfigSource;

        $r1 = specialinvoke r0.<android.security.net.config.ManifestConfigSource: android.security.net.config.ConfigSource getConfigSource()>();

        $r2 = interfaceinvoke $r1.<android.security.net.config.ConfigSource: android.security.net.config.NetworkSecurityConfig getDefaultConfig()>();

        return $r2;
    }

    public java.util.Set getPerDomainConfigs()
    {
        android.security.net.config.ManifestConfigSource r0;
        android.security.net.config.ConfigSource $r1;
        java.util.Set $r2;

        r0 := @this: android.security.net.config.ManifestConfigSource;

        $r1 = specialinvoke r0.<android.security.net.config.ManifestConfigSource: android.security.net.config.ConfigSource getConfigSource()>();

        $r2 = interfaceinvoke $r1.<android.security.net.config.ConfigSource: java.util.Set getPerDomainConfigs()>();

        return $r2;
    }

    public static void <clinit>()
    {
        <android.security.net.config.ManifestConfigSource: java.lang.String LOG_TAG> = "NetworkSecurityConfig";

        <android.security.net.config.ManifestConfigSource: boolean DBG> = 1;

        return;
    }
}
