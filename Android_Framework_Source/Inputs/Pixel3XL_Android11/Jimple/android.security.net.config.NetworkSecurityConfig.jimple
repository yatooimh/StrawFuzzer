public final class android.security.net.config.NetworkSecurityConfig extends java.lang.Object
{
    public static final boolean DEFAULT_CLEARTEXT_TRAFFIC_PERMITTED;
    public static final boolean DEFAULT_HSTS_ENFORCED;
    private java.util.Set mAnchors;
    private final java.lang.Object mAnchorsLock;
    private final java.util.List mCertificatesEntryRefs;
    private final boolean mCleartextTrafficPermitted;
    private final boolean mHstsEnforced;
    private final android.security.net.config.PinSet mPins;
    private android.security.net.config.NetworkSecurityTrustManager mTrustManager;
    private final java.lang.Object mTrustManagerLock;

    private void <init>(boolean, boolean, android.security.net.config.PinSet, java.util.List)
    {
        android.security.net.config.NetworkSecurityConfig r0;
        boolean z0, z1;
        android.security.net.config.PinSet r1;
        java.util.List r2;
        java.lang.Object $r3, $r4;
        android.security.net.config.NetworkSecurityConfig$1 $r5;

        r0 := @this: android.security.net.config.NetworkSecurityConfig;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        r1 := @parameter2: android.security.net.config.PinSet;

        r2 := @parameter3: java.util.List;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new java.lang.Object;

        specialinvoke $r3.<java.lang.Object: void <init>()>();

        r0.<android.security.net.config.NetworkSecurityConfig: java.lang.Object mAnchorsLock> = $r3;

        $r4 = new java.lang.Object;

        specialinvoke $r4.<java.lang.Object: void <init>()>();

        r0.<android.security.net.config.NetworkSecurityConfig: java.lang.Object mTrustManagerLock> = $r4;

        r0.<android.security.net.config.NetworkSecurityConfig: boolean mCleartextTrafficPermitted> = z0;

        r0.<android.security.net.config.NetworkSecurityConfig: boolean mHstsEnforced> = z1;

        r0.<android.security.net.config.NetworkSecurityConfig: android.security.net.config.PinSet mPins> = r1;

        r0.<android.security.net.config.NetworkSecurityConfig: java.util.List mCertificatesEntryRefs> = r2;

        $r5 = new android.security.net.config.NetworkSecurityConfig$1;

        specialinvoke $r5.<android.security.net.config.NetworkSecurityConfig$1: void <init>(android.security.net.config.NetworkSecurityConfig)>(r0);

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>(r2, $r5);

        return;
    }

    void <init>(boolean, boolean, android.security.net.config.PinSet, java.util.List, android.security.net.config.NetworkSecurityConfig$1)
    {
        android.security.net.config.NetworkSecurityConfig r0;
        boolean z0, z1;
        android.security.net.config.PinSet r1;
        java.util.List r2;
        android.security.net.config.NetworkSecurityConfig$1 r3;

        r0 := @this: android.security.net.config.NetworkSecurityConfig;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        r1 := @parameter2: android.security.net.config.PinSet;

        r2 := @parameter3: java.util.List;

        r3 := @parameter4: android.security.net.config.NetworkSecurityConfig$1;

        specialinvoke r0.<android.security.net.config.NetworkSecurityConfig: void <init>(boolean,boolean,android.security.net.config.PinSet,java.util.List)>(z0, z1, r1, r2);

        return;
    }

    public static android.security.net.config.NetworkSecurityConfig$Builder getDefaultBuilder(android.content.pm.ApplicationInfo)
    {
        android.content.pm.ApplicationInfo r0;
        android.security.net.config.NetworkSecurityConfig$Builder r1, $r2, $r3;
        android.security.net.config.CertificatesEntryRef $r4, $r7;
        android.security.net.config.SystemCertificateSource $r5;
        int $i0, $i1;
        boolean $z0, $z1, z2;
        android.security.net.config.UserCertificateSource $r8;

        r0 := @parameter0: android.content.pm.ApplicationInfo;

        $r2 = new android.security.net.config.NetworkSecurityConfig$Builder;

        specialinvoke $r2.<android.security.net.config.NetworkSecurityConfig$Builder: void <init>()>();

        $r3 = virtualinvoke $r2.<android.security.net.config.NetworkSecurityConfig$Builder: android.security.net.config.NetworkSecurityConfig$Builder setHstsEnforced(boolean)>(0);

        $r4 = new android.security.net.config.CertificatesEntryRef;

        $r5 = staticinvoke <android.security.net.config.SystemCertificateSource: android.security.net.config.SystemCertificateSource getInstance()>();

        specialinvoke $r4.<android.security.net.config.CertificatesEntryRef: void <init>(android.security.net.config.CertificateSource,boolean)>($r5, 0);

        r1 = virtualinvoke $r3.<android.security.net.config.NetworkSecurityConfig$Builder: android.security.net.config.NetworkSecurityConfig$Builder addCertificatesEntryRef(android.security.net.config.CertificatesEntryRef)>($r4);

        $i0 = r0.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

        if $i0 >= 28 goto label1;

        $z1 = virtualinvoke r0.<android.content.pm.ApplicationInfo: boolean isInstantApp()>();

        if $z1 != 0 goto label1;

        z2 = 1;

        goto label2;

     label1:
        z2 = 0;

     label2:
        virtualinvoke r1.<android.security.net.config.NetworkSecurityConfig$Builder: android.security.net.config.NetworkSecurityConfig$Builder setCleartextTrafficPermitted(boolean)>(z2);

        $i1 = r0.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

        if $i1 > 23 goto label3;

        $z0 = virtualinvoke r0.<android.content.pm.ApplicationInfo: boolean isPrivilegedApp()>();

        if $z0 != 0 goto label3;

        $r7 = new android.security.net.config.CertificatesEntryRef;

        $r8 = staticinvoke <android.security.net.config.UserCertificateSource: android.security.net.config.UserCertificateSource getInstance()>();

        specialinvoke $r7.<android.security.net.config.CertificatesEntryRef: void <init>(android.security.net.config.CertificateSource,boolean)>($r8, 0);

        virtualinvoke r1.<android.security.net.config.NetworkSecurityConfig$Builder: android.security.net.config.NetworkSecurityConfig$Builder addCertificatesEntryRef(android.security.net.config.CertificatesEntryRef)>($r7);

     label3:
        return r1;
    }

    public java.util.Set findAllCertificatesByIssuerAndSignature(java.security.cert.X509Certificate)
    {
        android.security.net.config.NetworkSecurityConfig r0;
        java.security.cert.X509Certificate r1;
        java.util.Iterator r3;
        android.util.ArraySet $r4;
        java.util.List $r5;
        boolean $z0;
        java.lang.Object $r6;
        android.security.net.config.CertificatesEntryRef $r7;
        java.util.Set $r8;

        r0 := @this: android.security.net.config.NetworkSecurityConfig;

        r1 := @parameter0: java.security.cert.X509Certificate;

        $r4 = new android.util.ArraySet;

        specialinvoke $r4.<android.util.ArraySet: void <init>()>();

        $r5 = r0.<android.security.net.config.NetworkSecurityConfig: java.util.List mCertificatesEntryRefs>;

        r3 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        $r7 = (android.security.net.config.CertificatesEntryRef) $r6;

        $r8 = virtualinvoke $r7.<android.security.net.config.CertificatesEntryRef: java.util.Set findAllCertificatesByIssuerAndSignature(java.security.cert.X509Certificate)>(r1);

        interfaceinvoke $r4.<java.util.Set: boolean addAll(java.util.Collection)>($r8);

        goto label1;

     label2:
        return $r4;
    }

    public android.security.net.config.TrustAnchor findTrustAnchorByIssuerAndSignature(java.security.cert.X509Certificate)
    {
        android.security.net.config.NetworkSecurityConfig r0;
        java.security.cert.X509Certificate r1;
        java.util.Iterator r2;
        android.security.net.config.TrustAnchor r3;
        java.util.List $r4;
        boolean $z0;
        java.lang.Object $r5;
        android.security.net.config.CertificatesEntryRef $r6;

        r0 := @this: android.security.net.config.NetworkSecurityConfig;

        r1 := @parameter0: java.security.cert.X509Certificate;

        $r4 = r0.<android.security.net.config.NetworkSecurityConfig: java.util.List mCertificatesEntryRefs>;

        r2 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (android.security.net.config.CertificatesEntryRef) $r5;

        r3 = virtualinvoke $r6.<android.security.net.config.CertificatesEntryRef: android.security.net.config.TrustAnchor findByIssuerAndSignature(java.security.cert.X509Certificate)>(r1);

        if r3 == null goto label2;

        return r3;

     label2:
        goto label1;

     label3:
        return null;
    }

    public android.security.net.config.TrustAnchor findTrustAnchorBySubjectAndPublicKey(java.security.cert.X509Certificate)
    {
        android.security.net.config.NetworkSecurityConfig r0;
        java.security.cert.X509Certificate r1;
        java.util.Iterator r2;
        android.security.net.config.TrustAnchor r3;
        java.util.List $r4;
        boolean $z0;
        java.lang.Object $r5;
        android.security.net.config.CertificatesEntryRef $r6;

        r0 := @this: android.security.net.config.NetworkSecurityConfig;

        r1 := @parameter0: java.security.cert.X509Certificate;

        $r4 = r0.<android.security.net.config.NetworkSecurityConfig: java.util.List mCertificatesEntryRefs>;

        r2 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (android.security.net.config.CertificatesEntryRef) $r5;

        r3 = virtualinvoke $r6.<android.security.net.config.CertificatesEntryRef: android.security.net.config.TrustAnchor findBySubjectAndPublicKey(java.security.cert.X509Certificate)>(r1);

        if r3 == null goto label2;

        return r3;

     label2:
        goto label1;

     label3:
        return null;
    }

    public android.security.net.config.PinSet getPins()
    {
        android.security.net.config.NetworkSecurityConfig r0;
        android.security.net.config.PinSet $r1;

        r0 := @this: android.security.net.config.NetworkSecurityConfig;

        $r1 = r0.<android.security.net.config.NetworkSecurityConfig: android.security.net.config.PinSet mPins>;

        return $r1;
    }

    public java.util.Set getTrustAnchors()
    {
        android.security.net.config.NetworkSecurityConfig r0;
        java.lang.Object r1, $r8, $r11;
        java.util.Iterator r2, r16;
        android.security.net.config.TrustAnchor r3;
        java.security.cert.X509Certificate r4;
        java.util.Set $r5, $r10, r14;
        java.util.List $r6;
        boolean $z0, $z2, $z3;
        int $i0;
        java.util.Collection $r7;
        android.security.net.config.CertificatesEntryRef $r9;
        java.lang.Throwable $r13;
        android.util.ArrayMap r15;
        android.util.ArraySet r17;

        r0 := @this: android.security.net.config.NetworkSecurityConfig;

        r1 = r0.<android.security.net.config.NetworkSecurityConfig: java.lang.Object mAnchorsLock>;

        entermonitor r1;

     label01:
        $r5 = r0.<android.security.net.config.NetworkSecurityConfig: java.util.Set mAnchors>;

        if $r5 == null goto label03;

        r14 = r0.<android.security.net.config.NetworkSecurityConfig: java.util.Set mAnchors>;

        exitmonitor r1;

     label02:
        return r14;

     label03:
        r15 = new android.util.ArrayMap;

        specialinvoke r15.<android.util.ArrayMap: void <init>()>();

        $r6 = r0.<android.security.net.config.NetworkSecurityConfig: java.util.List mCertificatesEntryRefs>;

        r2 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label04:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label08;

        $r8 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        $r9 = (android.security.net.config.CertificatesEntryRef) $r8;

        $r10 = virtualinvoke $r9.<android.security.net.config.CertificatesEntryRef: java.util.Set getTrustAnchors()>();

        r16 = interfaceinvoke $r10.<java.util.Set: java.util.Iterator iterator()>();

     label05:
        $z2 = interfaceinvoke r16.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label07;

        $r11 = interfaceinvoke r16.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.security.net.config.TrustAnchor) $r11;

        r4 = r3.<android.security.net.config.TrustAnchor: java.security.cert.X509Certificate certificate>;

        $z3 = interfaceinvoke r15.<java.util.Map: boolean containsKey(java.lang.Object)>(r4);

        if $z3 != 0 goto label06;

        interfaceinvoke r15.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r4, r3);

     label06:
        goto label05;

     label07:
        goto label04;

     label08:
        r17 = new android.util.ArraySet;

        $i0 = interfaceinvoke r15.<java.util.Map: int size()>();

        specialinvoke r17.<android.util.ArraySet: void <init>(int)>($i0);

        $r7 = interfaceinvoke r15.<java.util.Map: java.util.Collection values()>();

        virtualinvoke r17.<android.util.ArraySet: boolean addAll(java.util.Collection)>($r7);

        r0.<android.security.net.config.NetworkSecurityConfig: java.util.Set mAnchors> = r17;

        exitmonitor r1;

     label09:
        return r17;

     label10:
        $r13 := @caughtexception;

     label11:
        exitmonitor r1;

     label12:
        throw $r13;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label04 to label05 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
    }

    public android.security.net.config.NetworkSecurityTrustManager getTrustManager()
    {
        android.security.net.config.NetworkSecurityConfig r0;
        java.lang.Object r1;
        android.security.net.config.NetworkSecurityTrustManager $r2, r4, r5;
        java.lang.Throwable $r3;

        r0 := @this: android.security.net.config.NetworkSecurityConfig;

        r1 = r0.<android.security.net.config.NetworkSecurityConfig: java.lang.Object mTrustManagerLock>;

        entermonitor r1;

     label1:
        $r2 = r0.<android.security.net.config.NetworkSecurityConfig: android.security.net.config.NetworkSecurityTrustManager mTrustManager>;

        if $r2 != null goto label2;

        r4 = new android.security.net.config.NetworkSecurityTrustManager;

        specialinvoke r4.<android.security.net.config.NetworkSecurityTrustManager: void <init>(android.security.net.config.NetworkSecurityConfig)>(r0);

        r0.<android.security.net.config.NetworkSecurityConfig: android.security.net.config.NetworkSecurityTrustManager mTrustManager> = r4;

     label2:
        r5 = r0.<android.security.net.config.NetworkSecurityConfig: android.security.net.config.NetworkSecurityTrustManager mTrustManager>;

        exitmonitor r1;

     label3:
        return r5;

     label4:
        $r3 := @caughtexception;

     label5:
        exitmonitor r1;

     label6:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public void handleTrustStorageUpdate()
    {
        android.security.net.config.NetworkSecurityConfig r0;
        java.lang.Object r1, $r4;
        java.util.List $r2;
        boolean $z0;
        android.security.net.config.NetworkSecurityTrustManager $r3;
        android.security.net.config.CertificatesEntryRef $r5;
        java.lang.Throwable $r6;
        java.util.Iterator r7;

        r0 := @this: android.security.net.config.NetworkSecurityConfig;

        r1 = r0.<android.security.net.config.NetworkSecurityConfig: java.lang.Object mAnchorsLock>;

        entermonitor r1;

     label1:
        r0.<android.security.net.config.NetworkSecurityConfig: java.util.Set mAnchors> = null;

        $r2 = r0.<android.security.net.config.NetworkSecurityConfig: java.util.List mCertificatesEntryRefs>;

        r7 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r4 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (android.security.net.config.CertificatesEntryRef) $r4;

        virtualinvoke $r5.<android.security.net.config.CertificatesEntryRef: void handleTrustStorageUpdate()>();

     label3:
        goto label2;

     label4:
        exitmonitor r1;

     label5:
        $r3 = virtualinvoke r0.<android.security.net.config.NetworkSecurityConfig: android.security.net.config.NetworkSecurityTrustManager getTrustManager()>();

        virtualinvoke $r3.<android.security.net.config.NetworkSecurityTrustManager: void handleTrustStorageUpdate()>();

        return;

     label6:
        $r6 := @caughtexception;

     label7:
        exitmonitor r1;

     label8:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label2 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public boolean isCleartextTrafficPermitted()
    {
        android.security.net.config.NetworkSecurityConfig r0;
        boolean $z0;

        r0 := @this: android.security.net.config.NetworkSecurityConfig;

        $z0 = r0.<android.security.net.config.NetworkSecurityConfig: boolean mCleartextTrafficPermitted>;

        return $z0;
    }

    public boolean isHstsEnforced()
    {
        android.security.net.config.NetworkSecurityConfig r0;
        boolean $z0;

        r0 := @this: android.security.net.config.NetworkSecurityConfig;

        $z0 = r0.<android.security.net.config.NetworkSecurityConfig: boolean mHstsEnforced>;

        return $z0;
    }

    public static void <clinit>()
    {
        <android.security.net.config.NetworkSecurityConfig: boolean DEFAULT_HSTS_ENFORCED> = 0;

        <android.security.net.config.NetworkSecurityConfig: boolean DEFAULT_CLEARTEXT_TRAFFIC_PERMITTED> = 1;

        return;
    }
}
