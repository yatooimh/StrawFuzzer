public class android.security.net.config.NetworkSecurityTrustManager extends javax.net.ssl.X509ExtendedTrustManager
{
    private final com.android.org.conscrypt.TrustManagerImpl mDelegate;
    private java.security.cert.X509Certificate[] mIssuers;
    private final java.lang.Object mIssuersLock;
    private final android.security.net.config.NetworkSecurityConfig mNetworkSecurityConfig;

    public void <init>(android.security.net.config.NetworkSecurityConfig)
    {
        android.security.net.config.NetworkSecurityTrustManager r0;
        java.security.KeyStore r2;
        java.lang.String $r5;
        java.lang.Throwable $r6;
        android.security.net.config.NetworkSecurityConfig r8;
        java.lang.Object r11;
        android.security.net.config.TrustedCertificateStoreAdapter r12;
        com.android.org.conscrypt.TrustManagerImpl r13;
        java.lang.RuntimeException r14;
        java.lang.NullPointerException r15;
        com.android.org.conscrypt.ConscryptCertStore r16;

        r0 := @this: android.security.net.config.NetworkSecurityTrustManager;

        r8 := @parameter0: android.security.net.config.NetworkSecurityConfig;

        specialinvoke r0.<javax.net.ssl.X509ExtendedTrustManager: void <init>()>();

        r11 = new java.lang.Object;

        specialinvoke r11.<java.lang.Object: void <init>()>();

        r0.<android.security.net.config.NetworkSecurityTrustManager: java.lang.Object mIssuersLock> = r11;

        if r8 == null goto label4;

        r0.<android.security.net.config.NetworkSecurityTrustManager: android.security.net.config.NetworkSecurityConfig mNetworkSecurityConfig> = r8;

     label1:
        r12 = new android.security.net.config.TrustedCertificateStoreAdapter;

        specialinvoke r12.<android.security.net.config.TrustedCertificateStoreAdapter: void <init>(android.security.net.config.NetworkSecurityConfig)>(r8);

        $r5 = staticinvoke <java.security.KeyStore: java.lang.String getDefaultType()>();

        r2 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r5);

        virtualinvoke r2.<java.security.KeyStore: void load(java.security.KeyStore$LoadStoreParameter)>(null);

        r13 = new com.android.org.conscrypt.TrustManagerImpl;

        r16 = (com.android.org.conscrypt.ConscryptCertStore) r12;

        specialinvoke r13.<com.android.org.conscrypt.TrustManagerImpl: void <init>(java.security.KeyStore,com.android.org.conscrypt.CertPinManager,com.android.org.conscrypt.ConscryptCertStore)>(r2, null, r16);

        r0.<android.security.net.config.NetworkSecurityTrustManager: com.android.org.conscrypt.TrustManagerImpl mDelegate> = r13;

     label2:
        return;

     label3:
        $r6 := @caughtexception;

        r14 = new java.lang.RuntimeException;

        specialinvoke r14.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r6);

        throw r14;

     label4:
        r15 = new java.lang.NullPointerException;

        specialinvoke r15.<java.lang.NullPointerException: void <init>(java.lang.String)>("config must not be null");

        throw r15;

        catch java.security.GeneralSecurityException from label1 to label2 with label3;
        catch java.io.IOException from label1 to label2 with label3;
    }

    private void checkPins(java.util.List) throws java.security.cert.CertificateException
    {
        android.security.net.config.NetworkSecurityTrustManager r0;
        android.security.net.config.PinSet r1;
        java.util.Set r2, $r9, $r18;
        byte[] r4, $r19;
        java.util.Iterator r5;
        java.lang.String r6;
        java.security.MessageDigest r7, r24;
        android.security.net.config.NetworkSecurityConfig $r8;
        boolean $z0, $z1, $z2, $z3;
        long $l0, $l1;
        byte $b2;
        android.util.ArrayMap $r10;
        int $i3, $i4, i5;
        java.security.cert.CertificateException $r11;
        java.lang.Object $r12, $r15, $r16;
        java.security.cert.X509Certificate $r13;
        java.security.PublicKey $r14;
        android.security.net.config.Pin $r17;
        java.lang.Throwable $r21;
        java.lang.RuntimeException $r22;
        java.util.List r23;

        r0 := @this: android.security.net.config.NetworkSecurityTrustManager;

        r23 := @parameter0: java.util.List;

        $r8 = r0.<android.security.net.config.NetworkSecurityTrustManager: android.security.net.config.NetworkSecurityConfig mNetworkSecurityConfig>;

        r1 = virtualinvoke $r8.<android.security.net.config.NetworkSecurityConfig: android.security.net.config.PinSet getPins()>();

        $r9 = r1.<android.security.net.config.PinSet: java.util.Set pins>;

        $z0 = interfaceinvoke $r9.<java.util.Set: boolean isEmpty()>();

        if $z0 != 0 goto label11;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l1 = r1.<android.security.net.config.PinSet: long expirationTime>;

        $b2 = $l0 cmp $l1;

        if $b2 > 0 goto label11;

        $z1 = specialinvoke r0.<android.security.net.config.NetworkSecurityTrustManager: boolean isPinningEnforced(java.util.List)>(r23);

        if $z1 != 0 goto label01;

        goto label11;

     label01:
        r2 = virtualinvoke r1.<android.security.net.config.PinSet: java.util.Set getPinAlgorithms()>();

        $r10 = new android.util.ArrayMap;

        $i3 = interfaceinvoke r2.<java.util.Set: int size()>();

        specialinvoke $r10.<android.util.ArrayMap: void <init>(int)>($i3);

        $i4 = interfaceinvoke r23.<java.util.List: int size()>();

        i5 = $i4 - 1;

     label02:
        if i5 < 0 goto label10;

        $r12 = interfaceinvoke r23.<java.util.List: java.lang.Object get(int)>(i5);

        $r13 = (java.security.cert.X509Certificate) $r12;

        $r14 = virtualinvoke $r13.<java.security.cert.X509Certificate: java.security.PublicKey getPublicKey()>();

        r4 = interfaceinvoke $r14.<java.security.PublicKey: byte[] getEncoded()>();

        r5 = interfaceinvoke r2.<java.util.Set: java.util.Iterator iterator()>();

     label03:
        $z2 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label09;

        $r15 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.lang.String) $r15;

        $r16 = interfaceinvoke $r10.<java.util.Map: java.lang.Object get(java.lang.Object)>(r6);

        r7 = (java.security.MessageDigest) $r16;

        r24 = r7;

        if r7 != null goto label07;

     label04:
        r24 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(r6);

     label05:
        interfaceinvoke $r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r6, r24);

        goto label07;

     label06:
        $r21 := @caughtexception;

        $r22 = new java.lang.RuntimeException;

        specialinvoke $r22.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r21);

        throw $r22;

     label07:
        $r18 = r1.<android.security.net.config.PinSet: java.util.Set pins>;

        $r17 = new android.security.net.config.Pin;

        $r19 = virtualinvoke r24.<java.security.MessageDigest: byte[] digest(byte[])>(r4);

        specialinvoke $r17.<android.security.net.config.Pin: void <init>(java.lang.String,byte[])>(r6, $r19);

        $z3 = interfaceinvoke $r18.<java.util.Set: boolean contains(java.lang.Object)>($r17);

        if $z3 == 0 goto label08;

        return;

     label08:
        goto label03;

     label09:
        i5 = i5 + -1;

        goto label02;

     label10:
        $r11 = new java.security.cert.CertificateException;

        specialinvoke $r11.<java.security.cert.CertificateException: void <init>(java.lang.String)>("Pin verification failed");

        throw $r11;

     label11:
        return;

        catch java.security.GeneralSecurityException from label04 to label05 with label06;
    }

    private boolean isPinningEnforced(java.util.List) throws java.security.cert.CertificateException
    {
        android.security.net.config.NetworkSecurityTrustManager r0;
        boolean $z0, $z1, $z2;
        int $i0, $i1;
        java.lang.Object $r1;
        android.security.net.config.NetworkSecurityConfig $r2;
        java.security.cert.CertificateException $r3;
        java.util.List r4;
        java.security.cert.X509Certificate r5;
        android.security.net.config.TrustAnchor r6;

        r0 := @this: android.security.net.config.NetworkSecurityTrustManager;

        r4 := @parameter0: java.util.List;

        $z0 = interfaceinvoke r4.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $i0 = interfaceinvoke r4.<java.util.List: int size()>();

        $i1 = $i0 - 1;

        $r1 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>($i1);

        r5 = (java.security.cert.X509Certificate) $r1;

        $r2 = r0.<android.security.net.config.NetworkSecurityTrustManager: android.security.net.config.NetworkSecurityConfig mNetworkSecurityConfig>;

        r6 = virtualinvoke $r2.<android.security.net.config.NetworkSecurityConfig: android.security.net.config.TrustAnchor findTrustAnchorBySubjectAndPublicKey(java.security.cert.X509Certificate)>(r5);

        if r6 == null goto label2;

        $z1 = r6.<android.security.net.config.TrustAnchor: boolean overridesPins>;

        $z2 = $z1 ^ 1;

        return $z2;

     label2:
        $r3 = new java.security.cert.CertificateException;

        specialinvoke $r3.<java.security.cert.CertificateException: void <init>(java.lang.String)>("Trusted chain does not end in a TrustAnchor");

        throw $r3;
    }

    public void checkClientTrusted(java.security.cert.X509Certificate[], java.lang.String) throws java.security.cert.CertificateException
    {
        android.security.net.config.NetworkSecurityTrustManager r0;
        java.security.cert.X509Certificate[] r1;
        java.lang.String r2;
        com.android.org.conscrypt.TrustManagerImpl $r3;

        r0 := @this: android.security.net.config.NetworkSecurityTrustManager;

        r1 := @parameter0: java.security.cert.X509Certificate[];

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<android.security.net.config.NetworkSecurityTrustManager: com.android.org.conscrypt.TrustManagerImpl mDelegate>;

        virtualinvoke $r3.<com.android.org.conscrypt.TrustManagerImpl: void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String)>(r1, r2);

        return;
    }

    public void checkClientTrusted(java.security.cert.X509Certificate[], java.lang.String, java.net.Socket) throws java.security.cert.CertificateException
    {
        android.security.net.config.NetworkSecurityTrustManager r0;
        java.security.cert.X509Certificate[] r1;
        java.lang.String r2;
        java.net.Socket r3;
        com.android.org.conscrypt.TrustManagerImpl $r4;

        r0 := @this: android.security.net.config.NetworkSecurityTrustManager;

        r1 := @parameter0: java.security.cert.X509Certificate[];

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.net.Socket;

        $r4 = r0.<android.security.net.config.NetworkSecurityTrustManager: com.android.org.conscrypt.TrustManagerImpl mDelegate>;

        virtualinvoke $r4.<com.android.org.conscrypt.TrustManagerImpl: void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String,java.net.Socket)>(r1, r2, r3);

        return;
    }

    public void checkClientTrusted(java.security.cert.X509Certificate[], java.lang.String, javax.net.ssl.SSLEngine) throws java.security.cert.CertificateException
    {
        android.security.net.config.NetworkSecurityTrustManager r0;
        java.security.cert.X509Certificate[] r1;
        java.lang.String r2;
        javax.net.ssl.SSLEngine r3;
        com.android.org.conscrypt.TrustManagerImpl $r4;

        r0 := @this: android.security.net.config.NetworkSecurityTrustManager;

        r1 := @parameter0: java.security.cert.X509Certificate[];

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: javax.net.ssl.SSLEngine;

        $r4 = r0.<android.security.net.config.NetworkSecurityTrustManager: com.android.org.conscrypt.TrustManagerImpl mDelegate>;

        virtualinvoke $r4.<com.android.org.conscrypt.TrustManagerImpl: void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String,javax.net.ssl.SSLEngine)>(r1, r2, r3);

        return;
    }

    public java.util.List checkServerTrusted(java.security.cert.X509Certificate[], java.lang.String, java.lang.String) throws java.security.cert.CertificateException
    {
        android.security.net.config.NetworkSecurityTrustManager r0;
        java.lang.String r1, r2;
        com.android.org.conscrypt.TrustManagerImpl $r3;
        java.security.cert.X509Certificate[] r4;
        java.util.List r5;

        r0 := @this: android.security.net.config.NetworkSecurityTrustManager;

        r4 := @parameter0: java.security.cert.X509Certificate[];

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        $r3 = r0.<android.security.net.config.NetworkSecurityTrustManager: com.android.org.conscrypt.TrustManagerImpl mDelegate>;

        r5 = virtualinvoke $r3.<com.android.org.conscrypt.TrustManagerImpl: java.util.List checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String,java.lang.String)>(r4, r1, r2);

        specialinvoke r0.<android.security.net.config.NetworkSecurityTrustManager: void checkPins(java.util.List)>(r5);

        return r5;
    }

    public void checkServerTrusted(java.security.cert.X509Certificate[], java.lang.String) throws java.security.cert.CertificateException
    {
        android.security.net.config.NetworkSecurityTrustManager r0;
        java.security.cert.X509Certificate[] r1;
        java.lang.String r2, $r3;

        r0 := @this: android.security.net.config.NetworkSecurityTrustManager;

        r1 := @parameter0: java.security.cert.X509Certificate[];

        r2 := @parameter1: java.lang.String;

        $r3 = (java.lang.String) null;

        virtualinvoke r0.<android.security.net.config.NetworkSecurityTrustManager: java.util.List checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String,java.lang.String)>(r1, r2, $r3);

        return;
    }

    public void checkServerTrusted(java.security.cert.X509Certificate[], java.lang.String, java.net.Socket) throws java.security.cert.CertificateException
    {
        android.security.net.config.NetworkSecurityTrustManager r0;
        java.security.cert.X509Certificate[] r1;
        java.lang.String r2;
        java.net.Socket r3;
        com.android.org.conscrypt.TrustManagerImpl $r4;
        java.util.List $r5;

        r0 := @this: android.security.net.config.NetworkSecurityTrustManager;

        r1 := @parameter0: java.security.cert.X509Certificate[];

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.net.Socket;

        $r4 = r0.<android.security.net.config.NetworkSecurityTrustManager: com.android.org.conscrypt.TrustManagerImpl mDelegate>;

        $r5 = virtualinvoke $r4.<com.android.org.conscrypt.TrustManagerImpl: java.util.List getTrustedChainForServer(java.security.cert.X509Certificate[],java.lang.String,java.net.Socket)>(r1, r2, r3);

        specialinvoke r0.<android.security.net.config.NetworkSecurityTrustManager: void checkPins(java.util.List)>($r5);

        return;
    }

    public void checkServerTrusted(java.security.cert.X509Certificate[], java.lang.String, javax.net.ssl.SSLEngine) throws java.security.cert.CertificateException
    {
        android.security.net.config.NetworkSecurityTrustManager r0;
        java.security.cert.X509Certificate[] r1;
        java.lang.String r2;
        javax.net.ssl.SSLEngine r3;
        com.android.org.conscrypt.TrustManagerImpl $r4;
        java.util.List $r5;

        r0 := @this: android.security.net.config.NetworkSecurityTrustManager;

        r1 := @parameter0: java.security.cert.X509Certificate[];

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: javax.net.ssl.SSLEngine;

        $r4 = r0.<android.security.net.config.NetworkSecurityTrustManager: com.android.org.conscrypt.TrustManagerImpl mDelegate>;

        $r5 = virtualinvoke $r4.<com.android.org.conscrypt.TrustManagerImpl: java.util.List getTrustedChainForServer(java.security.cert.X509Certificate[],java.lang.String,javax.net.ssl.SSLEngine)>(r1, r2, r3);

        specialinvoke r0.<android.security.net.config.NetworkSecurityTrustManager: void checkPins(java.util.List)>($r5);

        return;
    }

    public java.security.cert.X509Certificate[] getAcceptedIssuers()
    {
        android.security.net.config.NetworkSecurityTrustManager r0;
        java.lang.Object r1, $r4, $r6;
        java.security.cert.X509Certificate[] $r2, $r3, r11, r13;
        android.security.net.config.NetworkSecurityConfig $r5;
        int $i0, i1;
        boolean $z0;
        android.security.net.config.TrustAnchor $r7;
        java.security.cert.X509Certificate $r8;
        java.lang.Throwable $r9;
        java.util.Set r10;
        java.util.Iterator r12;

        r0 := @this: android.security.net.config.NetworkSecurityTrustManager;

        r1 = r0.<android.security.net.config.NetworkSecurityTrustManager: java.lang.Object mIssuersLock>;

        entermonitor r1;

     label01:
        $r2 = r0.<android.security.net.config.NetworkSecurityTrustManager: java.security.cert.X509Certificate[] mIssuers>;

        if $r2 != null goto label07;

        $r5 = r0.<android.security.net.config.NetworkSecurityTrustManager: android.security.net.config.NetworkSecurityConfig mNetworkSecurityConfig>;

        r10 = virtualinvoke $r5.<android.security.net.config.NetworkSecurityConfig: java.util.Set getTrustAnchors()>();

        $i0 = interfaceinvoke r10.<java.util.Set: int size()>();

        r11 = newarray (java.security.cert.X509Certificate)[$i0];

     label02:
        i1 = 0;

     label03:
        r12 = interfaceinvoke r10.<java.util.Set: java.util.Iterator iterator()>();

     label04:
        $z0 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label06;

        $r6 = interfaceinvoke r12.<java.util.Iterator: java.lang.Object next()>();

        $r7 = (android.security.net.config.TrustAnchor) $r6;

        $r8 = $r7.<android.security.net.config.TrustAnchor: java.security.cert.X509Certificate certificate>;

        r11[i1] = $r8;

     label05:
        i1 = i1 + 1;

        goto label04;

     label06:
        r0.<android.security.net.config.NetworkSecurityTrustManager: java.security.cert.X509Certificate[] mIssuers> = r11;

     label07:
        $r3 = r0.<android.security.net.config.NetworkSecurityTrustManager: java.security.cert.X509Certificate[] mIssuers>;

        $r4 = virtualinvoke $r3.<java.lang.Object: java.lang.Object clone()>();

        r13 = (java.security.cert.X509Certificate[]) $r4;

        exitmonitor r1;

     label08:
        return r13;

     label09:
        $r9 := @caughtexception;

     label10:
        exitmonitor r1;

     label11:
        throw $r9;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label04 to label05 with label09;
        catch java.lang.Throwable from label06 to label07 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    public void handleTrustStorageUpdate()
    {
        android.security.net.config.NetworkSecurityTrustManager r0;
        java.lang.Object r1;
        com.android.org.conscrypt.TrustManagerImpl $r3;
        java.lang.Throwable $r4;

        r0 := @this: android.security.net.config.NetworkSecurityTrustManager;

        r1 = r0.<android.security.net.config.NetworkSecurityTrustManager: java.lang.Object mIssuersLock>;

        entermonitor r1;

     label1:
        r0.<android.security.net.config.NetworkSecurityTrustManager: java.security.cert.X509Certificate[] mIssuers> = null;

        $r3 = r0.<android.security.net.config.NetworkSecurityTrustManager: com.android.org.conscrypt.TrustManagerImpl mDelegate>;

        virtualinvoke $r3.<com.android.org.conscrypt.TrustManagerImpl: void handleTrustStorageUpdate()>();

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }
}
