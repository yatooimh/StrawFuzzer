public class android.security.net.config.ResourceCertificateSource extends java.lang.Object implements android.security.net.config.CertificateSource
{
    private java.util.Set mCertificates;
    private android.content.Context mContext;
    private com.android.org.conscrypt.TrustedCertificateIndex mIndex;
    private final java.lang.Object mLock;
    private final int mResourceId;

    public void <init>(int, android.content.Context)
    {
        android.security.net.config.ResourceCertificateSource r0;
        int i0;
        android.content.Context r1;
        java.lang.Object $r2;

        r0 := @this: android.security.net.config.ResourceCertificateSource;

        i0 := @parameter0: int;

        r1 := @parameter1: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.lang.Object;

        specialinvoke $r2.<java.lang.Object: void <init>()>();

        r0.<android.security.net.config.ResourceCertificateSource: java.lang.Object mLock> = $r2;

        r0.<android.security.net.config.ResourceCertificateSource: int mResourceId> = i0;

        r0.<android.security.net.config.ResourceCertificateSource: android.content.Context mContext> = r1;

        return;
    }

    private void ensureInitialized()
    {
        android.security.net.config.ResourceCertificateSource r0;
        java.lang.Object r1, $r6;
        java.security.cert.CertificateFactory r2;
        java.util.Set $r3;
        android.content.Context $r4;
        android.content.res.Resources $r5;
        int $i0, $i1;
        boolean $z0;
        java.security.cert.X509Certificate $r7, $r8;
        java.lang.Throwable $r9, $r10, $r11;
        java.lang.String $r12;
        android.util.ArraySet r13;
        java.io.InputStream r14, r15, r16;
        java.util.Collection r17;
        com.android.org.conscrypt.TrustedCertificateIndex r18;
        java.util.Iterator r19;
        java.security.cert.Certificate r20;
        java.lang.RuntimeException r23;
        java.lang.StringBuilder r24;

        r0 := @this: android.security.net.config.ResourceCertificateSource;

        r1 = r0.<android.security.net.config.ResourceCertificateSource: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $r3 = r0.<android.security.net.config.ResourceCertificateSource: java.util.Set mCertificates>;

        if $r3 == null goto label03;

        exitmonitor r1;

     label02:
        return;

     label03:
        r13 = new android.util.ArraySet;

        specialinvoke r13.<android.util.ArraySet: void <init>()>();

     label04:
        r14 = null;

        r15 = null;

     label05:
        r2 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>("X.509");

     label06:
        r14 = null;

        r15 = null;

     label07:
        $r4 = r0.<android.security.net.config.ResourceCertificateSource: android.content.Context mContext>;

        $r5 = virtualinvoke $r4.<android.content.Context: android.content.res.Resources getResources()>();

        $i0 = r0.<android.security.net.config.ResourceCertificateSource: int mResourceId>;

        r16 = virtualinvoke $r5.<android.content.res.Resources: java.io.InputStream openRawResource(int)>($i0);

     label08:
        r14 = r16;

        r15 = r16;

     label09:
        r17 = virtualinvoke r2.<java.security.cert.CertificateFactory: java.util.Collection generateCertificates(java.io.InputStream)>(r16);

     label10:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r16);

     label11:
        r18 = new com.android.org.conscrypt.TrustedCertificateIndex;

        specialinvoke r18.<com.android.org.conscrypt.TrustedCertificateIndex: void <init>()>();

        r19 = interfaceinvoke r17.<java.util.Collection: java.util.Iterator iterator()>();

     label12:
        $z0 = interfaceinvoke r19.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label14;

        $r6 = interfaceinvoke r19.<java.util.Iterator: java.lang.Object next()>();

        r20 = (java.security.cert.Certificate) $r6;

        $r7 = (java.security.cert.X509Certificate) r20;

        interfaceinvoke r13.<java.util.Set: boolean add(java.lang.Object)>($r7);

        $r8 = (java.security.cert.X509Certificate) r20;

        virtualinvoke r18.<com.android.org.conscrypt.TrustedCertificateIndex: java.security.cert.TrustAnchor index(java.security.cert.X509Certificate)>($r8);

     label13:
        goto label12;

     label14:
        r0.<android.security.net.config.ResourceCertificateSource: java.util.Set mCertificates> = r13;

        r0.<android.security.net.config.ResourceCertificateSource: com.android.org.conscrypt.TrustedCertificateIndex mIndex> = r18;

        r0.<android.security.net.config.ResourceCertificateSource: android.content.Context mContext> = null;

        exitmonitor r1;

     label15:
        return;

     label16:
        $r10 := @caughtexception;

        goto label31;

     label17:
        $r11 := @caughtexception;

        r14 = r15;

     label18:
        r23 = new java.lang.RuntimeException;

     label19:
        r14 = r15;

     label20:
        r24 = new java.lang.StringBuilder;

     label21:
        r14 = r15;

     label22:
        specialinvoke r24.<java.lang.StringBuilder: void <init>()>();

     label23:
        r14 = r15;

     label24:
        virtualinvoke r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to load trust anchors from id ");

     label25:
        r14 = r15;

     label26:
        $i1 = r0.<android.security.net.config.ResourceCertificateSource: int mResourceId>;

        virtualinvoke r24.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

     label27:
        r14 = r15;

     label28:
        $r12 = virtualinvoke r24.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r23.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r12, $r11);

     label29:
        r14 = r15;

     label30:
        throw r23;

     label31:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r14);

     label32:
        throw $r10;

     label33:
        $r9 := @caughtexception;

     label34:
        exitmonitor r1;

     label35:
        throw $r9;

        catch java.lang.Throwable from label01 to label02 with label33;
        catch java.lang.Throwable from label03 to label04 with label33;
        catch java.security.cert.CertificateException from label05 to label06 with label17;
        catch java.lang.Throwable from label05 to label06 with label16;
        catch java.security.cert.CertificateException from label07 to label08 with label17;
        catch java.lang.Throwable from label07 to label08 with label16;
        catch java.security.cert.CertificateException from label09 to label10 with label17;
        catch java.lang.Throwable from label09 to label10 with label16;
        catch java.lang.Throwable from label10 to label11 with label33;
        catch java.lang.Throwable from label11 to label12 with label33;
        catch java.lang.Throwable from label12 to label13 with label33;
        catch java.lang.Throwable from label14 to label15 with label33;
        catch java.lang.Throwable from label18 to label19 with label16;
        catch java.lang.Throwable from label20 to label21 with label16;
        catch java.lang.Throwable from label22 to label23 with label16;
        catch java.lang.Throwable from label24 to label25 with label16;
        catch java.lang.Throwable from label26 to label27 with label16;
        catch java.lang.Throwable from label28 to label29 with label16;
        catch java.lang.Throwable from label30 to label31 with label16;
        catch java.lang.Throwable from label31 to label32 with label33;
        catch java.lang.Throwable from label32 to label33 with label33;
        catch java.lang.Throwable from label34 to label35 with label33;
    }

    public java.util.Set findAllByIssuerAndSignature(java.security.cert.X509Certificate)
    {
        android.security.net.config.ResourceCertificateSource r0;
        com.android.org.conscrypt.TrustedCertificateIndex $r1;
        boolean $z0, $z1;
        android.util.ArraySet $r2;
        int $i0;
        java.lang.Object $r3;
        java.security.cert.TrustAnchor $r4;
        java.security.cert.X509Certificate $r5, r7;
        java.util.Set $r6, r8;
        java.util.Iterator r10;

        r0 := @this: android.security.net.config.ResourceCertificateSource;

        r7 := @parameter0: java.security.cert.X509Certificate;

        specialinvoke r0.<android.security.net.config.ResourceCertificateSource: void ensureInitialized()>();

        $r1 = r0.<android.security.net.config.ResourceCertificateSource: com.android.org.conscrypt.TrustedCertificateIndex mIndex>;

        r8 = virtualinvoke $r1.<com.android.org.conscrypt.TrustedCertificateIndex: java.util.Set findAllByIssuerAndSignature(java.security.cert.X509Certificate)>(r7);

        $z0 = interfaceinvoke r8.<java.util.Set: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r6 = staticinvoke <java.util.Collections: java.util.Set emptySet()>();

        return $r6;

     label1:
        $r2 = new android.util.ArraySet;

        $i0 = interfaceinvoke r8.<java.util.Set: int size()>();

        specialinvoke $r2.<android.util.ArraySet: void <init>(int)>($i0);

        r10 = interfaceinvoke r8.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r3 = interfaceinvoke r10.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (java.security.cert.TrustAnchor) $r3;

        $r5 = virtualinvoke $r4.<java.security.cert.TrustAnchor: java.security.cert.X509Certificate getTrustedCert()>();

        interfaceinvoke $r2.<java.util.Set: boolean add(java.lang.Object)>($r5);

        goto label2;

     label3:
        return $r2;
    }

    public java.security.cert.X509Certificate findByIssuerAndSignature(java.security.cert.X509Certificate)
    {
        android.security.net.config.ResourceCertificateSource r0;
        com.android.org.conscrypt.TrustedCertificateIndex $r1;
        java.security.cert.X509Certificate $r2, r3;
        java.security.cert.TrustAnchor r4;

        r0 := @this: android.security.net.config.ResourceCertificateSource;

        r3 := @parameter0: java.security.cert.X509Certificate;

        specialinvoke r0.<android.security.net.config.ResourceCertificateSource: void ensureInitialized()>();

        $r1 = r0.<android.security.net.config.ResourceCertificateSource: com.android.org.conscrypt.TrustedCertificateIndex mIndex>;

        r4 = virtualinvoke $r1.<com.android.org.conscrypt.TrustedCertificateIndex: java.security.cert.TrustAnchor findByIssuerAndSignature(java.security.cert.X509Certificate)>(r3);

        if r4 != null goto label1;

        return null;

     label1:
        $r2 = virtualinvoke r4.<java.security.cert.TrustAnchor: java.security.cert.X509Certificate getTrustedCert()>();

        return $r2;
    }

    public java.security.cert.X509Certificate findBySubjectAndPublicKey(java.security.cert.X509Certificate)
    {
        android.security.net.config.ResourceCertificateSource r0;
        com.android.org.conscrypt.TrustedCertificateIndex $r1;
        java.security.cert.X509Certificate $r2, r3;
        java.security.cert.TrustAnchor r4;

        r0 := @this: android.security.net.config.ResourceCertificateSource;

        r3 := @parameter0: java.security.cert.X509Certificate;

        specialinvoke r0.<android.security.net.config.ResourceCertificateSource: void ensureInitialized()>();

        $r1 = r0.<android.security.net.config.ResourceCertificateSource: com.android.org.conscrypt.TrustedCertificateIndex mIndex>;

        r4 = virtualinvoke $r1.<com.android.org.conscrypt.TrustedCertificateIndex: java.security.cert.TrustAnchor findBySubjectAndPublicKey(java.security.cert.X509Certificate)>(r3);

        if r4 != null goto label1;

        return null;

     label1:
        $r2 = virtualinvoke r4.<java.security.cert.TrustAnchor: java.security.cert.X509Certificate getTrustedCert()>();

        return $r2;
    }

    public java.util.Set getCertificates()
    {
        android.security.net.config.ResourceCertificateSource r0;
        java.util.Set $r1;

        r0 := @this: android.security.net.config.ResourceCertificateSource;

        specialinvoke r0.<android.security.net.config.ResourceCertificateSource: void ensureInitialized()>();

        $r1 = r0.<android.security.net.config.ResourceCertificateSource: java.util.Set mCertificates>;

        return $r1;
    }

    public void handleTrustStorageUpdate()
    {
        android.security.net.config.ResourceCertificateSource r0;

        r0 := @this: android.security.net.config.ResourceCertificateSource;

        return;
    }
}
