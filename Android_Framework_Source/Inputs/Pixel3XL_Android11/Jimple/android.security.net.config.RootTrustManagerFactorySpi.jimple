public class android.security.net.config.RootTrustManagerFactorySpi extends javax.net.ssl.TrustManagerFactorySpi
{
    private android.security.net.config.ApplicationConfig mApplicationConfig;
    private android.security.net.config.NetworkSecurityConfig mConfig;

    public void <init>()
    {
        android.security.net.config.RootTrustManagerFactorySpi r0;

        r0 := @this: android.security.net.config.RootTrustManagerFactorySpi;

        specialinvoke r0.<javax.net.ssl.TrustManagerFactorySpi: void <init>()>();

        return;
    }

    public javax.net.ssl.TrustManager[] engineGetTrustManagers()
    {
        android.security.net.config.RootTrustManagerFactorySpi r0;
        android.security.net.config.ApplicationConfig r1;
        java.lang.Object[] $r3;
        javax.net.ssl.X509TrustManager $r4;
        java.lang.IllegalStateException r5;
        javax.net.ssl.TrustManager[] r6;

        r0 := @this: android.security.net.config.RootTrustManagerFactorySpi;

        r1 = r0.<android.security.net.config.RootTrustManagerFactorySpi: android.security.net.config.ApplicationConfig mApplicationConfig>;

        if r1 == null goto label1;

        $r3 = newarray (javax.net.ssl.TrustManager)[1];

        $r4 = virtualinvoke r1.<android.security.net.config.ApplicationConfig: javax.net.ssl.X509TrustManager getTrustManager()>();

        $r3[0] = $r4;

        r6 = (javax.net.ssl.TrustManager[]) $r3;

        return r6;

     label1:
        r5 = new java.lang.IllegalStateException;

        specialinvoke r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("TrustManagerFactory not initialized");

        throw r5;
    }

    public void engineInit(java.security.KeyStore) throws java.security.KeyStoreException
    {
        android.security.net.config.RootTrustManagerFactorySpi r0;
        java.security.KeyStore r1;
        android.security.net.config.ApplicationConfig $r2, $r3;
        android.security.net.config.KeyStoreConfigSource $r4;

        r0 := @this: android.security.net.config.RootTrustManagerFactorySpi;

        r1 := @parameter0: java.security.KeyStore;

        if r1 == null goto label1;

        $r3 = new android.security.net.config.ApplicationConfig;

        $r4 = new android.security.net.config.KeyStoreConfigSource;

        specialinvoke $r4.<android.security.net.config.KeyStoreConfigSource: void <init>(java.security.KeyStore)>(r1);

        specialinvoke $r3.<android.security.net.config.ApplicationConfig: void <init>(android.security.net.config.ConfigSource)>($r4);

        r0.<android.security.net.config.RootTrustManagerFactorySpi: android.security.net.config.ApplicationConfig mApplicationConfig> = $r3;

        goto label2;

     label1:
        $r2 = staticinvoke <android.security.net.config.ApplicationConfig: android.security.net.config.ApplicationConfig getDefaultInstance()>();

        r0.<android.security.net.config.RootTrustManagerFactorySpi: android.security.net.config.ApplicationConfig mApplicationConfig> = $r2;

     label2:
        return;
    }

    public void engineInit(javax.net.ssl.ManagerFactoryParameters) throws java.security.InvalidAlgorithmParameterException
    {
        android.security.net.config.RootTrustManagerFactorySpi r0;
        javax.net.ssl.ManagerFactoryParameters r1;
        boolean $z0;
        java.lang.StringBuilder $r3;
        java.lang.Class $r7;
        java.lang.String $r8, $r12;
        java.security.InvalidAlgorithmParameterException $r11;
        android.security.net.config.RootTrustManagerFactorySpi$ApplicationConfigParameters $r13;
        android.security.net.config.ApplicationConfig $r14;

        r0 := @this: android.security.net.config.RootTrustManagerFactorySpi;

        r1 := @parameter0: javax.net.ssl.ManagerFactoryParameters;

        $z0 = r1 instanceof android.security.net.config.RootTrustManagerFactorySpi$ApplicationConfigParameters;

        if $z0 == 0 goto label1;

        $r13 = (android.security.net.config.RootTrustManagerFactorySpi$ApplicationConfigParameters) r1;

        $r14 = $r13.<android.security.net.config.RootTrustManagerFactorySpi$ApplicationConfigParameters: android.security.net.config.ApplicationConfig config>;

        r0.<android.security.net.config.RootTrustManagerFactorySpi: android.security.net.config.ApplicationConfig mApplicationConfig> = $r14;

        return;

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported spec: ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". Only ");

        $r7 = class "Landroid/security/net/config/RootTrustManagerFactorySpi$ApplicationConfigParameters;";

        $r8 = virtualinvoke $r7.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" supported");

        $r11 = new java.security.InvalidAlgorithmParameterException;

        $r12 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.security.InvalidAlgorithmParameterException: void <init>(java.lang.String)>($r12);

        throw $r11;
    }
}
