public final class android.security.net.config.UserCertificateSource extends android.security.net.config.DirectoryCertificateSource
{

    private void <init>()
    {
        android.security.net.config.UserCertificateSource r0;
        java.io.File $r1, $r2;
        int $i0;

        r0 := @this: android.security.net.config.UserCertificateSource;

        $r1 = new java.io.File;

        $i0 = staticinvoke <android.os.UserHandle: int myUserId()>();

        $r2 = staticinvoke <android.os.Environment: java.io.File getUserConfigDirectory(int)>($i0);

        specialinvoke $r1.<java.io.File: void <init>(java.io.File,java.lang.String)>($r2, "cacerts-added");

        specialinvoke r0.<android.security.net.config.DirectoryCertificateSource: void <init>(java.io.File)>($r1);

        return;
    }

    void <init>(android.security.net.config.UserCertificateSource$1)
    {
        android.security.net.config.UserCertificateSource r0;
        android.security.net.config.UserCertificateSource$1 r1;

        r0 := @this: android.security.net.config.UserCertificateSource;

        r1 := @parameter0: android.security.net.config.UserCertificateSource$1;

        specialinvoke r0.<android.security.net.config.UserCertificateSource: void <init>()>();

        return;
    }

    public static android.security.net.config.UserCertificateSource getInstance()
    {
        android.security.net.config.UserCertificateSource $r0;

        $r0 = staticinvoke <android.security.net.config.UserCertificateSource$NoPreloadHolder: android.security.net.config.UserCertificateSource access$100()>();

        return $r0;
    }

    public volatile java.util.Set findAllByIssuerAndSignature(java.security.cert.X509Certificate)
    {
        android.security.net.config.UserCertificateSource r0;
        java.security.cert.X509Certificate r1;
        java.util.Set $r2;

        r0 := @this: android.security.net.config.UserCertificateSource;

        r1 := @parameter0: java.security.cert.X509Certificate;

        $r2 = specialinvoke r0.<android.security.net.config.DirectoryCertificateSource: java.util.Set findAllByIssuerAndSignature(java.security.cert.X509Certificate)>(r1);

        return $r2;
    }

    public volatile java.security.cert.X509Certificate findByIssuerAndSignature(java.security.cert.X509Certificate)
    {
        android.security.net.config.UserCertificateSource r0;
        java.security.cert.X509Certificate r1, $r2;

        r0 := @this: android.security.net.config.UserCertificateSource;

        r1 := @parameter0: java.security.cert.X509Certificate;

        $r2 = specialinvoke r0.<android.security.net.config.DirectoryCertificateSource: java.security.cert.X509Certificate findByIssuerAndSignature(java.security.cert.X509Certificate)>(r1);

        return $r2;
    }

    public volatile java.security.cert.X509Certificate findBySubjectAndPublicKey(java.security.cert.X509Certificate)
    {
        android.security.net.config.UserCertificateSource r0;
        java.security.cert.X509Certificate r1, $r2;

        r0 := @this: android.security.net.config.UserCertificateSource;

        r1 := @parameter0: java.security.cert.X509Certificate;

        $r2 = specialinvoke r0.<android.security.net.config.DirectoryCertificateSource: java.security.cert.X509Certificate findBySubjectAndPublicKey(java.security.cert.X509Certificate)>(r1);

        return $r2;
    }

    public volatile java.util.Set getCertificates()
    {
        android.security.net.config.UserCertificateSource r0;
        java.util.Set $r1;

        r0 := @this: android.security.net.config.UserCertificateSource;

        $r1 = specialinvoke r0.<android.security.net.config.DirectoryCertificateSource: java.util.Set getCertificates()>();

        return $r1;
    }

    public volatile void handleTrustStorageUpdate()
    {
        android.security.net.config.UserCertificateSource r0;

        r0 := @this: android.security.net.config.UserCertificateSource;

        specialinvoke r0.<android.security.net.config.DirectoryCertificateSource: void handleTrustStorageUpdate()>();

        return;
    }

    protected boolean isCertMarkedAsRemoved(java.lang.String)
    {
        android.security.net.config.UserCertificateSource r0;
        java.lang.String r1;

        r0 := @this: android.security.net.config.UserCertificateSource;

        r1 := @parameter0: java.lang.String;

        return 0;
    }
}
