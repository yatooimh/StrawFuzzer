final class android.service.autofill.AutofillServiceHelper extends java.lang.Object
{

    private void <init>()
    {
        android.service.autofill.AutofillServiceHelper r0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: android.service.autofill.AutofillServiceHelper;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("contains static members only");

        throw $r1;
    }

    static android.view.autofill.AutofillId[] assertValid(android.view.autofill.AutofillId[])
    {
        android.view.autofill.AutofillId $r0;
        java.lang.StringBuilder $r1;
        java.lang.IllegalArgumentException $r5;
        java.lang.String $r6;
        int $i0, i1, $i2;
        android.view.autofill.AutofillId[] r7;
        boolean z0;

        r7 := @parameter0: android.view.autofill.AutofillId[];

        if r7 == null goto label1;

        $i0 = lengthof r7;

        if $i0 <= 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        staticinvoke <com.android.internal.util.Preconditions: void checkArgument(boolean,java.lang.Object)>(z0, "must have at least one id");

        i1 = 0;

     label3:
        $i2 = lengthof r7;

        if i1 >= $i2 goto label5;

        $r0 = r7[i1];

        if $r0 == null goto label4;

        i1 = i1 + 1;

        goto label3;

     label4:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ids[");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] must not be null");

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r5;

     label5:
        return r7;
    }
}
