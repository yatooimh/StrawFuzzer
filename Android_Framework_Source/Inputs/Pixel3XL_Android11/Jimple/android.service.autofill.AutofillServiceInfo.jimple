public final class android.service.autofill.AutofillServiceInfo extends java.lang.Object
{
    private static final java.lang.String TAG;
    private static final java.lang.String TAG_AUTOFILL_SERVICE;
    private static final java.lang.String TAG_COMPATIBILITY_PACKAGE;
    private final android.util.ArrayMap mCompatibilityPackages;
    private final boolean mInlineSuggestionsEnabled;
    private final android.content.pm.ServiceInfo mServiceInfo;
    private final java.lang.String mSettingsActivity;

    public void <init>(android.content.Context, android.content.ComponentName, int) throws android.content.pm.PackageManager$NameNotFoundException
    {
        android.service.autofill.AutofillServiceInfo r0;
        android.content.Context r1;
        android.content.ComponentName r2;
        int i0;
        android.content.pm.ServiceInfo $r3;

        r0 := @this: android.service.autofill.AutofillServiceInfo;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.content.ComponentName;

        i0 := @parameter2: int;

        $r3 = staticinvoke <android.service.autofill.AutofillServiceInfo: android.content.pm.ServiceInfo getServiceInfoOrThrow(android.content.ComponentName,int)>(r2, i0);

        specialinvoke r0.<android.service.autofill.AutofillServiceInfo: void <init>(android.content.Context,android.content.pm.ServiceInfo)>(r1, $r3);

        return;
    }

    public void <init>(android.content.Context, android.content.pm.ServiceInfo)
    {
        android.service.autofill.AutofillServiceInfo r0;
        android.content.res.XmlResourceParser r1;
        android.content.res.Resources r2;
        java.lang.String $r3, $r4, $r8, $r9, $r11, $r12, $r14, $r15, $r18, $r19, $r22, r30, r33, r35;
        boolean $z0, $z1, $z2, z3, z4, z5;
        android.content.pm.PackageManager $r5, $r6;
        android.content.pm.ApplicationInfo $r7;
        int[] $r10;
        java.lang.StringBuilder $r13, $r17;
        java.lang.SecurityException $r16;
        com.android.internal.logging.MetricsLogger $r20;
        android.metrics.LogMaker $r21, $r23;
        java.lang.Throwable $r24, $r25;
        android.content.Context r26;
        android.content.pm.ServiceInfo r27;
        int i0;
        android.util.AttributeSet r31;
        android.content.res.TypedArray r32, r34;
        android.util.ArrayMap r36;

        r0 := @this: android.service.autofill.AutofillServiceInfo;

        r26 := @parameter0: android.content.Context;

        r27 := @parameter1: android.content.pm.ServiceInfo;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r4 = "android.permission.BIND_AUTOFILL_SERVICE";

        $r3 = r27.<android.content.pm.ServiceInfo: java.lang.String permission>;

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 != 0 goto label02;

        $r12 = "android.permission.BIND_AUTOFILL";

        $r11 = r27.<android.content.pm.ServiceInfo: java.lang.String permission>;

        $z2 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>($r11);

        if $z2 == 0 goto label01;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("AutofillService from \'");

        $r18 = r27.<android.content.pm.ServiceInfo: java.lang.String packageName>;

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' uses unsupported permission ");

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("android.permission.BIND_AUTOFILL");

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". It works for now, but might not be supported on future releases");

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("AutofillServiceInfo", $r19);

        $r20 = new com.android.internal.logging.MetricsLogger;

        specialinvoke $r20.<com.android.internal.logging.MetricsLogger: void <init>()>();

        $r21 = new android.metrics.LogMaker;

        specialinvoke $r21.<android.metrics.LogMaker: void <init>(int)>(1289);

        $r22 = r27.<android.content.pm.ServiceInfo: java.lang.String packageName>;

        $r23 = virtualinvoke $r21.<android.metrics.LogMaker: android.metrics.LogMaker setPackageName(java.lang.String)>($r22);

        virtualinvoke $r20.<com.android.internal.logging.MetricsLogger: void write(android.metrics.LogMaker)>($r23);

        goto label02;

     label01:
        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("AutofillService from \'");

        $r14 = r27.<android.content.pm.ServiceInfo: java.lang.String packageName>;

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' does not require permission ");

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("android.permission.BIND_AUTOFILL_SERVICE");

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("AutofillServiceInfo", $r15);

        $r16 = new java.lang.SecurityException;

        specialinvoke $r16.<java.lang.SecurityException: void <init>(java.lang.String)>("Service does not require permission android.permission.BIND_AUTOFILL_SERVICE");

        throw $r16;

     label02:
        r0.<android.service.autofill.AutofillServiceInfo: android.content.pm.ServiceInfo mServiceInfo> = r27;

        $r5 = virtualinvoke r26.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        r1 = virtualinvoke r27.<android.content.pm.ServiceInfo: android.content.res.XmlResourceParser loadXmlMetaData(android.content.pm.PackageManager,java.lang.String)>($r5, "android.autofill");

        if r1 != null goto label03;

        r0.<android.service.autofill.AutofillServiceInfo: java.lang.String mSettingsActivity> = null;

        r0.<android.service.autofill.AutofillServiceInfo: android.util.ArrayMap mCompatibilityPackages> = null;

        r0.<android.service.autofill.AutofillServiceInfo: boolean mInlineSuggestionsEnabled> = 0;

        return;

     label03:
        r30 = null;

        z3 = 0;

     label04:
        $r6 = virtualinvoke r26.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r7 = r27.<android.content.pm.ServiceInfo: android.content.pm.ApplicationInfo applicationInfo>;

        r2 = virtualinvoke $r6.<android.content.pm.PackageManager: android.content.res.Resources getResourcesForApplication(android.content.pm.ApplicationInfo)>($r7);

     label05:
        i0 = 0;

     label06:
        if i0 == 1 goto label09;

        if i0 == 2 goto label09;

        r30 = null;

        z3 = 0;

     label07:
        i0 = interfaceinvoke r1.<android.content.res.XmlResourceParser: int next()>();

     label08:
        goto label06;

     label09:
        r30 = null;

        z3 = 0;

     label10:
        $r8 = "autofill-service";

        $r9 = interfaceinvoke r1.<android.content.res.XmlResourceParser: java.lang.String getName()>();

        $z1 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        if $z1 == 0 goto label28;

     label11:
        r30 = null;

        z3 = 0;

     label12:
        r31 = staticinvoke <android.util.Xml: android.util.AttributeSet asAttributeSet(org.xmlpull.v1.XmlPullParser)>(r1);

     label13:
        r32 = null;

        r33 = null;

     label14:
        $r10 = <com.android.internal.R$styleable: int[] AutofillService>;

        r34 = virtualinvoke r2.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>(r31, $r10);

     label15:
        r33 = null;

        r32 = r34;

     label16:
        r35 = virtualinvoke r34.<android.content.res.TypedArray: java.lang.String getString(int)>(0);

     label17:
        r33 = r35;

        r32 = r34;

     label18:
        z4 = virtualinvoke r34.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(1, 0);

     label19:
        z5 = z4;

        if r34 == null goto label21;

        r30 = r35;

        z3 = z4;

     label20:
        virtualinvoke r34.<android.content.res.TypedArray: void recycle()>();

     label21:
        r30 = r35;

        z3 = z4;

     label22:
        r36 = specialinvoke r0.<android.service.autofill.AutofillServiceInfo: android.util.ArrayMap parseCompatibilityPackages(org.xmlpull.v1.XmlPullParser,android.content.res.Resources)>(r1, r2);

     label23:
        goto label31;

     label24:
        $r25 := @caughtexception;

        if r32 == null goto label26;

        r30 = r33;

        z3 = 0;

     label25:
        virtualinvoke r32.<android.content.res.TypedArray: void recycle()>();

     label26:
        r30 = r33;

        z3 = 0;

     label27:
        throw $r25;

     label28:
        r30 = null;

        z3 = 0;

     label29:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("AutofillServiceInfo", "Meta-data does not start with autofill-service tag");

     label30:
        z5 = 0;

        r36 = null;

        r35 = null;

     label31:
        z3 = z5;

        goto label33;

     label32:
        $r24 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("AutofillServiceInfo", "Error parsing auto fill service meta-data", $r24);

        r36 = null;

        r35 = r30;

     label33:
        r0.<android.service.autofill.AutofillServiceInfo: java.lang.String mSettingsActivity> = r35;

        r0.<android.service.autofill.AutofillServiceInfo: android.util.ArrayMap mCompatibilityPackages> = r36;

        r0.<android.service.autofill.AutofillServiceInfo: boolean mInlineSuggestionsEnabled> = z3;

        return;

        catch android.content.pm.PackageManager$NameNotFoundException from label04 to label05 with label32;
        catch java.io.IOException from label04 to label05 with label32;
        catch org.xmlpull.v1.XmlPullParserException from label04 to label05 with label32;
        catch android.content.pm.PackageManager$NameNotFoundException from label07 to label08 with label32;
        catch java.io.IOException from label07 to label08 with label32;
        catch org.xmlpull.v1.XmlPullParserException from label07 to label08 with label32;
        catch android.content.pm.PackageManager$NameNotFoundException from label10 to label11 with label32;
        catch java.io.IOException from label10 to label11 with label32;
        catch org.xmlpull.v1.XmlPullParserException from label10 to label11 with label32;
        catch android.content.pm.PackageManager$NameNotFoundException from label12 to label13 with label32;
        catch java.io.IOException from label12 to label13 with label32;
        catch org.xmlpull.v1.XmlPullParserException from label12 to label13 with label32;
        catch java.lang.Throwable from label14 to label15 with label24;
        catch java.lang.Throwable from label16 to label17 with label24;
        catch java.lang.Throwable from label18 to label19 with label24;
        catch android.content.pm.PackageManager$NameNotFoundException from label20 to label21 with label32;
        catch java.io.IOException from label20 to label21 with label32;
        catch org.xmlpull.v1.XmlPullParserException from label20 to label21 with label32;
        catch android.content.pm.PackageManager$NameNotFoundException from label22 to label23 with label32;
        catch java.io.IOException from label22 to label23 with label32;
        catch org.xmlpull.v1.XmlPullParserException from label22 to label23 with label32;
        catch android.content.pm.PackageManager$NameNotFoundException from label25 to label26 with label32;
        catch java.io.IOException from label25 to label26 with label32;
        catch org.xmlpull.v1.XmlPullParserException from label25 to label26 with label32;
        catch android.content.pm.PackageManager$NameNotFoundException from label27 to label28 with label32;
        catch java.io.IOException from label27 to label28 with label32;
        catch org.xmlpull.v1.XmlPullParserException from label27 to label28 with label32;
        catch android.content.pm.PackageManager$NameNotFoundException from label29 to label30 with label32;
        catch java.io.IOException from label29 to label30 with label32;
        catch org.xmlpull.v1.XmlPullParserException from label29 to label30 with label32;
    }

    private static android.content.pm.ServiceInfo getServiceInfoOrThrow(android.content.ComponentName, int) throws android.content.pm.PackageManager$NameNotFoundException
    {
        android.content.ComponentName r0;
        int i0;
        android.content.pm.IPackageManager $r1;
        android.content.pm.PackageManager$NameNotFoundException $r2;
        java.lang.String $r3;
        android.os.RemoteException $r4;
        android.content.pm.ServiceInfo r5;

        r0 := @parameter0: android.content.ComponentName;

        i0 := @parameter1: int;

     label1:
        $r1 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

        r5 = interfaceinvoke $r1.<android.content.pm.IPackageManager: android.content.pm.ServiceInfo getServiceInfo(android.content.ComponentName,int,int)>(r0, 128, i0);

     label2:
        if r5 == null goto label3;

        return r5;

     label3:
        goto label5;

     label4:
        $r4 := @caughtexception;

     label5:
        $r2 = new android.content.pm.PackageManager$NameNotFoundException;

        $r3 = virtualinvoke r0.<android.content.ComponentName: java.lang.String toString()>();

        specialinvoke $r2.<android.content.pm.PackageManager$NameNotFoundException: void <init>(java.lang.String)>($r3);

        throw $r2;

        catch android.os.RemoteException from label1 to label2 with label4;
    }

    private android.util.ArrayMap parseCompatibilityPackages(org.xmlpull.v1.XmlPullParser, android.content.res.Resources) throws java.io.IOException, org.xmlpull.v1.XmlPullParserException
    {
        android.service.autofill.AutofillServiceInfo r0;
        org.xmlpull.v1.XmlPullParser r1;
        int i0, i1, $i5;
        java.lang.String r2, $r3, $r4, $r5, $r6, $r10, r18;
        boolean z0, $z1;
        long $l2, $l3;
        byte $b4;
        java.lang.Throwable $r7, $r8, $r9, r24;
        android.content.res.Resources r11;
        android.util.ArrayMap r12, r23;
        android.content.res.TypedArray r13, r16;
        android.util.AttributeSet r14;
        int[] r15;
        java.lang.StringBuilder r17, r21, r22;
        java.lang.Long r19, r20;

        r0 := @this: android.service.autofill.AutofillServiceInfo;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r11 := @parameter1: android.content.res.Resources;

        i0 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        r12 = null;

     label01:
        i1 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        if i1 == 1 goto label67;

        if i1 != 3 goto label03;

        $i5 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i5 <= i0 goto label02;

        goto label03;

     label02:
        goto label67;

     label03:
        if i1 == 3 goto label66;

        if i1 != 4 goto label04;

        goto label01;

     label04:
        $r3 = "compatibility-package";

        $r4 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z1 == 0 goto label65;

        r13 = null;

     label05:
        r14 = staticinvoke <android.util.Xml: android.util.AttributeSet asAttributeSet(org.xmlpull.v1.XmlPullParser)>(r1);

        r15 = <com.android.internal.R$styleable: int[] AutofillService_CompatibilityPackage>;

     label06:
        r13 = null;

     label07:
        r16 = virtualinvoke r11.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>(r14, r15);

     label08:
        r13 = r16;

     label09:
        r2 = virtualinvoke r16.<android.content.res.TypedArray: java.lang.String getString(int)>(0);

     label10:
        r13 = r16;

     label11:
        z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r2);

     label12:
        if z0 == 0 goto label23;

        r13 = r16;

     label13:
        r17 = new java.lang.StringBuilder;

     label14:
        r13 = r16;

     label15:
        specialinvoke r17.<java.lang.StringBuilder: void <init>()>();

     label16:
        r13 = r16;

     label17:
        virtualinvoke r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid compatibility package:");

     label18:
        r13 = r16;

     label19:
        virtualinvoke r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

     label20:
        r13 = r16;

     label21:
        $r6 = virtualinvoke r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("AutofillServiceInfo", $r6);

     label22:
        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r1);

        if r16 == null goto label67;

        virtualinvoke r16.<android.content.res.TypedArray: void recycle()>();

        goto label67;

     label23:
        r13 = r16;

     label24:
        r18 = virtualinvoke r16.<android.content.res.TypedArray: java.lang.String getString(int)>(1);

     label25:
        if r18 == null goto label51;

        r13 = r16;

     label26:
        $l2 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(r18);

        r19 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

     label27:
        r20 = r19;

        r13 = r16;

     label28:
        $l3 = virtualinvoke r19.<java.lang.Long: long longValue()>();

        $b4 = $l3 cmp 0L;

        if $b4 >= 0 goto label53;

     label29:
        r13 = r16;

     label30:
        r21 = new java.lang.StringBuilder;

     label31:
        r13 = r16;

     label32:
        specialinvoke r21.<java.lang.StringBuilder: void <init>()>();

     label33:
        r13 = r16;

     label34:
        virtualinvoke r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid compatibility max version code:");

     label35:
        r13 = r16;

     label36:
        virtualinvoke r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r19);

     label37:
        r13 = r16;

     label38:
        $r5 = virtualinvoke r21.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("AutofillServiceInfo", $r5);

     label39:
        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r1);

        if r16 == null goto label67;

        virtualinvoke r16.<android.content.res.TypedArray: void recycle()>();

        goto label67;

     label40:
        $r9 := @caughtexception;

        r13 = r16;

     label41:
        r22 = new java.lang.StringBuilder;

     label42:
        r13 = r16;

     label43:
        specialinvoke r22.<java.lang.StringBuilder: void <init>()>();

     label44:
        r13 = r16;

     label45:
        virtualinvoke r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid compatibility max version code:");

     label46:
        r13 = r16;

     label47:
        virtualinvoke r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r18);

     label48:
        r13 = r16;

     label49:
        $r10 = virtualinvoke r22.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("AutofillServiceInfo", $r10);

     label50:
        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r1);

        if r16 == null goto label67;

        virtualinvoke r16.<android.content.res.TypedArray: void recycle()>();

        goto label67;

     label51:
        r13 = r16;

     label52:
        r20 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(9223372036854775807L);

     label53:
        r23 = r12;

        if r12 != null goto label57;

        r13 = r16;

     label54:
        r23 = new android.util.ArrayMap;

     label55:
        r13 = r16;

     label56:
        specialinvoke r23.<android.util.ArrayMap: void <init>()>();

     label57:
        r13 = r16;

     label58:
        virtualinvoke r23.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r20);

     label59:
        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r1);

        if r16 == null goto label60;

        virtualinvoke r16.<android.content.res.TypedArray: void recycle()>();

     label60:
        r12 = r23;

        goto label01;

     label61:
        $r8 := @caughtexception;

        r24 = $r8;

        goto label63;

     label62:
        $r7 := @caughtexception;

        r24 = $r7;

     label63:
        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r1);

        if r13 == null goto label64;

        virtualinvoke r13.<android.content.res.TypedArray: void recycle()>();

     label64:
        throw r24;

     label65:
        goto label01;

     label66:
        goto label01;

     label67:
        return r12;

        catch java.lang.Throwable from label05 to label06 with label62;
        catch java.lang.Throwable from label07 to label08 with label61;
        catch java.lang.Throwable from label09 to label10 with label61;
        catch java.lang.Throwable from label11 to label12 with label61;
        catch java.lang.Throwable from label13 to label14 with label61;
        catch java.lang.Throwable from label15 to label16 with label61;
        catch java.lang.Throwable from label17 to label18 with label61;
        catch java.lang.Throwable from label19 to label20 with label61;
        catch java.lang.Throwable from label21 to label22 with label61;
        catch java.lang.Throwable from label24 to label25 with label61;
        catch java.lang.NumberFormatException from label26 to label27 with label40;
        catch java.lang.Throwable from label26 to label27 with label61;
        catch java.lang.Throwable from label28 to label29 with label61;
        catch java.lang.Throwable from label30 to label31 with label61;
        catch java.lang.Throwable from label32 to label33 with label61;
        catch java.lang.Throwable from label34 to label35 with label61;
        catch java.lang.Throwable from label36 to label37 with label61;
        catch java.lang.Throwable from label38 to label39 with label61;
        catch java.lang.Throwable from label41 to label42 with label61;
        catch java.lang.Throwable from label43 to label44 with label61;
        catch java.lang.Throwable from label45 to label46 with label61;
        catch java.lang.Throwable from label47 to label48 with label61;
        catch java.lang.Throwable from label49 to label50 with label61;
        catch java.lang.Throwable from label52 to label53 with label61;
        catch java.lang.Throwable from label54 to label55 with label61;
        catch java.lang.Throwable from label56 to label57 with label61;
        catch java.lang.Throwable from label58 to label59 with label61;
    }

    public void dump(java.lang.String, java.io.PrintWriter)
    {
        android.service.autofill.AutofillServiceInfo r0;
        java.lang.String r1, $r5;
        java.io.PrintWriter r2;
        android.content.pm.ServiceInfo $r3;
        android.content.ComponentName $r4;
        android.util.ArrayMap $r6;
        boolean $z0;

        r0 := @this: android.service.autofill.AutofillServiceInfo;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.io.PrintWriter;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("Component: ");

        $r3 = virtualinvoke r0.<android.service.autofill.AutofillServiceInfo: android.content.pm.ServiceInfo getServiceInfo()>();

        $r4 = virtualinvoke $r3.<android.content.pm.ServiceInfo: android.content.ComponentName getComponentName()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.Object)>($r4);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("Settings: ");

        $r5 = r0.<android.service.autofill.AutofillServiceInfo: java.lang.String mSettingsActivity>;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r5);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("Compat packages: ");

        $r6 = r0.<android.service.autofill.AutofillServiceInfo: android.util.ArrayMap mCompatibilityPackages>;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.Object)>($r6);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("Inline Suggestions Enabled: ");

        $z0 = r0.<android.service.autofill.AutofillServiceInfo: boolean mInlineSuggestionsEnabled>;

        virtualinvoke r2.<java.io.PrintWriter: void println(boolean)>($z0);

        return;
    }

    public android.util.ArrayMap getCompatibilityPackages()
    {
        android.service.autofill.AutofillServiceInfo r0;
        android.util.ArrayMap $r1;

        r0 := @this: android.service.autofill.AutofillServiceInfo;

        $r1 = r0.<android.service.autofill.AutofillServiceInfo: android.util.ArrayMap mCompatibilityPackages>;

        return $r1;
    }

    public android.content.pm.ServiceInfo getServiceInfo()
    {
        android.service.autofill.AutofillServiceInfo r0;
        android.content.pm.ServiceInfo $r1;

        r0 := @this: android.service.autofill.AutofillServiceInfo;

        $r1 = r0.<android.service.autofill.AutofillServiceInfo: android.content.pm.ServiceInfo mServiceInfo>;

        return $r1;
    }

    public java.lang.String getSettingsActivity()
    {
        android.service.autofill.AutofillServiceInfo r0;
        java.lang.String $r1;

        r0 := @this: android.service.autofill.AutofillServiceInfo;

        $r1 = r0.<android.service.autofill.AutofillServiceInfo: java.lang.String mSettingsActivity>;

        return $r1;
    }

    public boolean isInlineSuggestionsEnabled()
    {
        android.service.autofill.AutofillServiceInfo r0;
        boolean $z0;

        r0 := @this: android.service.autofill.AutofillServiceInfo;

        $z0 = r0.<android.service.autofill.AutofillServiceInfo: boolean mInlineSuggestionsEnabled>;

        return $z0;
    }

    public java.lang.String toString()
    {
        android.service.autofill.AutofillServiceInfo r0;
        android.util.ArrayMap r2;
        java.lang.StringBuilder $r3;
        java.lang.Class $r4;
        java.lang.String $r5, $r11, $r18;
        android.content.pm.ServiceInfo $r8;
        boolean $z0, z1, $z2;

        r0 := @this: android.service.autofill.AutofillServiceInfo;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.String getSimpleName()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        $r8 = r0.<android.service.autofill.AutofillServiceInfo: android.content.pm.ServiceInfo mServiceInfo>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", settings:");

        $r11 = r0.<android.service.autofill.AutofillServiceInfo: java.lang.String mSettingsActivity>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", hasCompatPckgs:");

        r2 = r0.<android.service.autofill.AutofillServiceInfo: android.util.ArrayMap mCompatibilityPackages>;

        if r2 == null goto label1;

        $z0 = virtualinvoke r2.<android.util.ArrayMap: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", inline suggestions enabled:");

        $z2 = r0.<android.service.autofill.AutofillServiceInfo: boolean mInlineSuggestionsEnabled>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z2);

        $r18 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r18;
    }

    public static void <clinit>()
    {
        <android.service.autofill.AutofillServiceInfo: java.lang.String TAG_COMPATIBILITY_PACKAGE> = "compatibility-package";

        <android.service.autofill.AutofillServiceInfo: java.lang.String TAG_AUTOFILL_SERVICE> = "autofill-service";

        <android.service.autofill.AutofillServiceInfo: java.lang.String TAG> = "AutofillServiceInfo";

        return;
    }
}
