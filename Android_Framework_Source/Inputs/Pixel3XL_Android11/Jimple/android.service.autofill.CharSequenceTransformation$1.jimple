class android.service.autofill.CharSequenceTransformation$1 extends java.lang.Object implements android.os.Parcelable$Creator
{

    void <init>()
    {
        android.service.autofill.CharSequenceTransformation$1 r0;

        r0 := @this: android.service.autofill.CharSequenceTransformation$1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public android.service.autofill.CharSequenceTransformation createFromParcel(android.os.Parcel)
    {
        android.service.autofill.CharSequenceTransformation$1 r0;
        android.view.autofill.AutofillId[] r1;
        java.util.regex.Pattern[] r2;
        int i0, i1;
        android.os.Parcelable[] $r4;
        java.io.Serializable $r5;
        android.service.autofill.CharSequenceTransformation$Builder $r6;
        java.lang.String $r7, $r11;
        java.util.regex.Pattern $r8, $r12;
        android.view.autofill.AutofillId $r9, $r13;
        android.service.autofill.CharSequenceTransformation $r10;
        android.os.Parcel r15;
        java.lang.String[] r16;

        r0 := @this: android.service.autofill.CharSequenceTransformation$1;

        r15 := @parameter0: android.os.Parcel;

        $r4 = virtualinvoke r15.<android.os.Parcel: android.os.Parcelable[] readParcelableArray(java.lang.ClassLoader,java.lang.Class)>(null, class "Landroid/view/autofill/AutofillId;");

        r1 = (android.view.autofill.AutofillId[]) $r4;

        $r5 = virtualinvoke r15.<android.os.Parcel: java.io.Serializable readSerializable()>();

        r2 = (java.util.regex.Pattern[]) $r5;

        r16 = virtualinvoke r15.<android.os.Parcel: java.lang.String[] createStringArray()>();

        $r6 = new android.service.autofill.CharSequenceTransformation$Builder;

        $r9 = r1[0];

        $r8 = r2[0];

        $r7 = r16[0];

        specialinvoke $r6.<android.service.autofill.CharSequenceTransformation$Builder: void <init>(android.view.autofill.AutofillId,java.util.regex.Pattern,java.lang.String)>($r9, $r8, $r7);

        i0 = lengthof r1;

        i1 = 1;

     label1:
        if i1 >= i0 goto label2;

        $r13 = r1[i1];

        $r12 = r2[i1];

        $r11 = r16[i1];

        virtualinvoke $r6.<android.service.autofill.CharSequenceTransformation$Builder: android.service.autofill.CharSequenceTransformation$Builder addField(android.view.autofill.AutofillId,java.util.regex.Pattern,java.lang.String)>($r13, $r12, $r11);

        i1 = i1 + 1;

        goto label1;

     label2:
        $r10 = virtualinvoke $r6.<android.service.autofill.CharSequenceTransformation$Builder: android.service.autofill.CharSequenceTransformation build()>();

        return $r10;
    }

    public volatile java.lang.Object createFromParcel(android.os.Parcel)
    {
        android.service.autofill.CharSequenceTransformation$1 r0;
        android.os.Parcel r1;
        android.service.autofill.CharSequenceTransformation $r2;

        r0 := @this: android.service.autofill.CharSequenceTransformation$1;

        r1 := @parameter0: android.os.Parcel;

        $r2 = virtualinvoke r0.<android.service.autofill.CharSequenceTransformation$1: android.service.autofill.CharSequenceTransformation createFromParcel(android.os.Parcel)>(r1);

        return $r2;
    }

    public android.service.autofill.CharSequenceTransformation[] newArray(int)
    {
        android.service.autofill.CharSequenceTransformation$1 r0;
        int i0;
        android.service.autofill.CharSequenceTransformation[] $r1;

        r0 := @this: android.service.autofill.CharSequenceTransformation$1;

        i0 := @parameter0: int;

        $r1 = newarray (android.service.autofill.CharSequenceTransformation)[i0];

        return $r1;
    }

    public volatile java.lang.Object[] newArray(int)
    {
        android.service.autofill.CharSequenceTransformation$1 r0;
        int i0;
        android.service.autofill.CharSequenceTransformation[] $r1;

        r0 := @this: android.service.autofill.CharSequenceTransformation$1;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<android.service.autofill.CharSequenceTransformation$1: android.service.autofill.CharSequenceTransformation[] newArray(int)>(i0);

        return $r1;
    }
}
