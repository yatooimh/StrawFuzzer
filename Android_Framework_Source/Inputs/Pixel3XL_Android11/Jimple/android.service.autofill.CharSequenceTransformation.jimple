public final class android.service.autofill.CharSequenceTransformation extends android.service.autofill.InternalTransformation implements android.service.autofill.Transformation, android.os.Parcelable
{
    public static final android.os.Parcelable$Creator CREATOR;
    private static final java.lang.String TAG;
    private final java.util.LinkedHashMap mFields;

    static void <clinit>()
    {
        android.service.autofill.CharSequenceTransformation$1 $r0;

        <android.service.autofill.CharSequenceTransformation: java.lang.String TAG> = "CharSequenceTransformation";

        $r0 = new android.service.autofill.CharSequenceTransformation$1;

        specialinvoke $r0.<android.service.autofill.CharSequenceTransformation$1: void <init>()>();

        <android.service.autofill.CharSequenceTransformation: android.os.Parcelable$Creator CREATOR> = $r0;

        return;
    }

    private void <init>(android.service.autofill.CharSequenceTransformation$Builder)
    {
        android.service.autofill.CharSequenceTransformation r0;
        android.service.autofill.CharSequenceTransformation$Builder r1;
        java.util.LinkedHashMap $r2;

        r0 := @this: android.service.autofill.CharSequenceTransformation;

        r1 := @parameter0: android.service.autofill.CharSequenceTransformation$Builder;

        specialinvoke r0.<android.service.autofill.InternalTransformation: void <init>()>();

        $r2 = staticinvoke <android.service.autofill.CharSequenceTransformation$Builder: java.util.LinkedHashMap access$000(android.service.autofill.CharSequenceTransformation$Builder)>(r1);

        r0.<android.service.autofill.CharSequenceTransformation: java.util.LinkedHashMap mFields> = $r2;

        return;
    }

    void <init>(android.service.autofill.CharSequenceTransformation$Builder, android.service.autofill.CharSequenceTransformation$1)
    {
        android.service.autofill.CharSequenceTransformation r0;
        android.service.autofill.CharSequenceTransformation$Builder r1;
        android.service.autofill.CharSequenceTransformation$1 r2;

        r0 := @this: android.service.autofill.CharSequenceTransformation;

        r1 := @parameter0: android.service.autofill.CharSequenceTransformation$Builder;

        r2 := @parameter1: android.service.autofill.CharSequenceTransformation$1;

        specialinvoke r0.<android.service.autofill.CharSequenceTransformation: void <init>(android.service.autofill.CharSequenceTransformation$Builder)>(r1);

        return;
    }

    public void apply(android.service.autofill.ValueFinder, android.widget.RemoteViews, int) throws java.lang.Exception
    {
        android.service.autofill.CharSequenceTransformation r0;
        int i0, i1, $i2;
        java.util.Iterator r2;
        java.lang.StringBuilder $r3, $r7, $r29, $r33, $r39, r64;
        java.util.LinkedHashMap $r4, $r5;
        boolean $z0, $z1, $z2, $z3;
        java.util.Set $r6;
        java.lang.String $r13, $r20, $r21, $r28, $r32, $r37, $r43, $r47, $r54, r61;
        java.lang.Object $r14, $r15, $r16, $r17, $r19, $r24, $r41, $r46;
        java.util.regex.Pattern $r18, $r42;
        java.lang.Exception $r38;
        java.lang.Class $r52;
        android.service.autofill.ValueFinder r55;
        android.widget.RemoteViews r56;
        java.util.Map$Entry r58;
        android.view.autofill.AutofillId r59;
        android.util.Pair r60;
        java.util.regex.Matcher r63;

        r0 := @this: android.service.autofill.CharSequenceTransformation;

        r55 := @parameter0: android.service.autofill.ValueFinder;

        r56 := @parameter1: android.widget.RemoteViews;

        i0 := @parameter2: int;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = r0.<android.service.autofill.CharSequenceTransformation: java.util.LinkedHashMap mFields>;

        i1 = virtualinvoke $r4.<java.util.LinkedHashMap: int size()>();

        $z0 = <android.view.autofill.Helper: boolean sDebug>;

        if $z0 == 0 goto label1;

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" fields on id ");

        virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r37 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("CharSequenceTransformation", $r37);

     label1:
        $r5 = r0.<android.service.autofill.CharSequenceTransformation: java.util.LinkedHashMap mFields>;

        $r6 = virtualinvoke $r5.<java.util.LinkedHashMap: java.util.Set entrySet()>();

        r2 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z3 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label8;

        $r14 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r58 = (java.util.Map$Entry) $r14;

        $r15 = interfaceinvoke r58.<java.util.Map$Entry: java.lang.Object getKey()>();

        r59 = (android.view.autofill.AutofillId) $r15;

        $r16 = interfaceinvoke r58.<java.util.Map$Entry: java.lang.Object getValue()>();

        r60 = (android.util.Pair) $r16;

        r61 = interfaceinvoke r55.<android.service.autofill.ValueFinder: java.lang.String findByAutofillId(android.view.autofill.AutofillId)>(r59);

        if r61 != null goto label3;

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No value for id ");

        virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r59);

        $r32 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("CharSequenceTransformation", $r32);

        return;

     label3:
        $r17 = r60.<android.util.Pair: java.lang.Object first>;

        $r18 = (java.util.regex.Pattern) $r17;

        r63 = virtualinvoke $r18.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r61);

        $z1 = virtualinvoke r63.<java.util.regex.Matcher: boolean find()>();

        if $z1 != 0 goto label5;

        $z2 = <android.view.autofill.Helper: boolean sDebug>;

        if $z2 == 0 goto label4;

        r64 = new java.lang.StringBuilder;

        specialinvoke r64.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Match for ");

        $r24 = r60.<android.util.Pair: java.lang.Object first>;

        virtualinvoke r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r24);

        virtualinvoke r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" failed on id ");

        virtualinvoke r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r59);

        $r28 = virtualinvoke r64.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("CharSequenceTransformation", $r28);

     label4:
        return;

     label5:
        $r19 = r60.<android.util.Pair: java.lang.Object second>;

        $r20 = (java.lang.String) $r19;

        $r21 = virtualinvoke r63.<java.util.regex.Matcher: java.lang.String replaceAll(java.lang.String)>($r20);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

     label6:
        goto label2;

     label7:
        $r38 := @caughtexception;

        $r39 = new java.lang.StringBuilder;

        specialinvoke $r39.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot apply ");

        $r41 = r60.<android.util.Pair: java.lang.Object first>;

        $r42 = (java.util.regex.Pattern) $r41;

        $r43 = virtualinvoke $r42.<java.util.regex.Pattern: java.lang.String pattern()>();

        virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r43);

        virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("->");

        $r46 = r60.<android.util.Pair: java.lang.Object second>;

        $r47 = (java.lang.String) $r46;

        virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r47);

        virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to field with autofill id");

        virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r59);

        virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r52 = virtualinvoke $r38.<java.lang.Object: java.lang.Class getClass()>();

        virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r52);

        $r54 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("CharSequenceTransformation", $r54);

        throw $r38;

     label8:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Converting text on child ");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $i2 = virtualinvoke $r3.<java.lang.StringBuilder: int length()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_chars");

        $r13 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("CharSequenceTransformation", $r13);

        virtualinvoke r56.<android.widget.RemoteViews: void setCharSequence(int,java.lang.String,java.lang.CharSequence)>(i0, "setText", $r3);

        return;

        catch java.lang.Exception from label3 to label4 with label7;
        catch java.lang.Exception from label5 to label6 with label7;
    }

    public int describeContents()
    {
        android.service.autofill.CharSequenceTransformation r0;

        r0 := @this: android.service.autofill.CharSequenceTransformation;

        return 0;
    }

    public java.lang.String toString()
    {
        android.service.autofill.CharSequenceTransformation r0;
        boolean $z0;
        java.lang.StringBuilder $r2;
        java.util.LinkedHashMap $r4;
        java.lang.String $r7, $r8;

        r0 := @this: android.service.autofill.CharSequenceTransformation;

        $z0 = <android.view.autofill.Helper: boolean sDebug>;

        if $z0 != 0 goto label1;

        $r8 = specialinvoke r0.<java.lang.Object: java.lang.String toString()>();

        return $r8;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("MultipleViewsCharSequenceTransformation: [fields=");

        $r4 = r0.<android.service.autofill.CharSequenceTransformation: java.util.LinkedHashMap mFields>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r7 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.service.autofill.CharSequenceTransformation r0;
        android.os.Parcel r1;
        int i0, i1, i2;
        android.view.autofill.AutofillId[] r2;
        java.util.regex.Pattern[] r3;
        java.lang.String[] r4;
        java.util.Iterator r5;
        java.util.LinkedHashMap $r6, $r7;
        java.util.Set $r8;
        boolean $z0;
        java.lang.Object $r9, $r10, $r12, $r13, $r15;
        android.view.autofill.AutofillId $r11;
        java.util.regex.Pattern $r14;
        java.lang.String $r16;
        java.util.Map$Entry r17;
        android.util.Pair r18;

        r0 := @this: android.service.autofill.CharSequenceTransformation;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        $r6 = r0.<android.service.autofill.CharSequenceTransformation: java.util.LinkedHashMap mFields>;

        i1 = virtualinvoke $r6.<java.util.LinkedHashMap: int size()>();

        r2 = newarray (android.view.autofill.AutofillId)[i1];

        r3 = newarray (java.util.regex.Pattern)[i1];

        r4 = newarray (java.lang.String)[i1];

        i2 = 0;

        $r7 = r0.<android.service.autofill.CharSequenceTransformation: java.util.LinkedHashMap mFields>;

        $r8 = virtualinvoke $r7.<java.util.LinkedHashMap: java.util.Set entrySet()>();

        r5 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r9 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r17 = (java.util.Map$Entry) $r9;

        $r10 = interfaceinvoke r17.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r11 = (android.view.autofill.AutofillId) $r10;

        r2[i2] = $r11;

        $r12 = interfaceinvoke r17.<java.util.Map$Entry: java.lang.Object getValue()>();

        r18 = (android.util.Pair) $r12;

        $r13 = r18.<android.util.Pair: java.lang.Object first>;

        $r14 = (java.util.regex.Pattern) $r13;

        r3[i2] = $r14;

        $r15 = r18.<android.util.Pair: java.lang.Object second>;

        $r16 = (java.lang.String) $r15;

        r4[i2] = $r16;

        i2 = i2 + 1;

        goto label1;

     label2:
        virtualinvoke r1.<android.os.Parcel: void writeParcelableArray(android.os.Parcelable[],int)>(r2, i0);

        virtualinvoke r1.<android.os.Parcel: void writeSerializable(java.io.Serializable)>(r3);

        virtualinvoke r1.<android.os.Parcel: void writeStringArray(java.lang.String[])>(r4);

        return;
    }
}
