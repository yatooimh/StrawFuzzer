public final class android.service.autofill.Dataset$Builder extends java.lang.Object
{
    private android.content.IntentSender mAuthentication;
    private boolean mDestroyed;
    private java.util.ArrayList mFieldFilters;
    private java.util.ArrayList mFieldIds;
    private java.util.ArrayList mFieldInlinePresentations;
    private java.util.ArrayList mFieldPresentations;
    private java.util.ArrayList mFieldValues;
    private java.lang.String mId;
    private android.service.autofill.InlinePresentation mInlinePresentation;
    private android.widget.RemoteViews mPresentation;

    public void <init>()
    {
        android.service.autofill.Dataset$Builder r0;

        r0 := @this: android.service.autofill.Dataset$Builder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void <init>(android.service.autofill.InlinePresentation)
    {
        android.service.autofill.Dataset$Builder r0;
        android.service.autofill.InlinePresentation r1;

        r0 := @this: android.service.autofill.Dataset$Builder;

        r1 := @parameter0: android.service.autofill.InlinePresentation;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r1, "inlinePresentation must be non-null");

        r0.<android.service.autofill.Dataset$Builder: android.service.autofill.InlinePresentation mInlinePresentation> = r1;

        return;
    }

    public void <init>(android.widget.RemoteViews)
    {
        android.service.autofill.Dataset$Builder r0;
        android.widget.RemoteViews r1;

        r0 := @this: android.service.autofill.Dataset$Builder;

        r1 := @parameter0: android.widget.RemoteViews;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r1, "presentation must be non-null");

        r0.<android.service.autofill.Dataset$Builder: android.widget.RemoteViews mPresentation> = r1;

        return;
    }

    static java.util.ArrayList access$000(android.service.autofill.Dataset$Builder)
    {
        android.service.autofill.Dataset$Builder r0;
        java.util.ArrayList $r1;

        r0 := @parameter0: android.service.autofill.Dataset$Builder;

        $r1 = r0.<android.service.autofill.Dataset$Builder: java.util.ArrayList mFieldIds>;

        return $r1;
    }

    static java.util.ArrayList access$100(android.service.autofill.Dataset$Builder)
    {
        android.service.autofill.Dataset$Builder r0;
        java.util.ArrayList $r1;

        r0 := @parameter0: android.service.autofill.Dataset$Builder;

        $r1 = r0.<android.service.autofill.Dataset$Builder: java.util.ArrayList mFieldValues>;

        return $r1;
    }

    static void access$1100(android.service.autofill.Dataset$Builder, android.view.autofill.AutofillId, android.view.autofill.AutofillValue, android.widget.RemoteViews, android.service.autofill.InlinePresentation, android.service.autofill.Dataset$DatasetFieldFilter)
    {
        android.service.autofill.Dataset$Builder r0;
        android.view.autofill.AutofillId r1;
        android.view.autofill.AutofillValue r2;
        android.widget.RemoteViews r3;
        android.service.autofill.InlinePresentation r4;
        android.service.autofill.Dataset$DatasetFieldFilter r5;

        r0 := @parameter0: android.service.autofill.Dataset$Builder;

        r1 := @parameter1: android.view.autofill.AutofillId;

        r2 := @parameter2: android.view.autofill.AutofillValue;

        r3 := @parameter3: android.widget.RemoteViews;

        r4 := @parameter4: android.service.autofill.InlinePresentation;

        r5 := @parameter5: android.service.autofill.Dataset$DatasetFieldFilter;

        specialinvoke r0.<android.service.autofill.Dataset$Builder: void setLifeTheUniverseAndEverything(android.view.autofill.AutofillId,android.view.autofill.AutofillValue,android.widget.RemoteViews,android.service.autofill.InlinePresentation,android.service.autofill.Dataset$DatasetFieldFilter)>(r1, r2, r3, r4, r5);

        return;
    }

    static java.util.ArrayList access$200(android.service.autofill.Dataset$Builder)
    {
        android.service.autofill.Dataset$Builder r0;
        java.util.ArrayList $r1;

        r0 := @parameter0: android.service.autofill.Dataset$Builder;

        $r1 = r0.<android.service.autofill.Dataset$Builder: java.util.ArrayList mFieldPresentations>;

        return $r1;
    }

    static java.util.ArrayList access$300(android.service.autofill.Dataset$Builder)
    {
        android.service.autofill.Dataset$Builder r0;
        java.util.ArrayList $r1;

        r0 := @parameter0: android.service.autofill.Dataset$Builder;

        $r1 = r0.<android.service.autofill.Dataset$Builder: java.util.ArrayList mFieldInlinePresentations>;

        return $r1;
    }

    static java.util.ArrayList access$400(android.service.autofill.Dataset$Builder)
    {
        android.service.autofill.Dataset$Builder r0;
        java.util.ArrayList $r1;

        r0 := @parameter0: android.service.autofill.Dataset$Builder;

        $r1 = r0.<android.service.autofill.Dataset$Builder: java.util.ArrayList mFieldFilters>;

        return $r1;
    }

    static android.widget.RemoteViews access$500(android.service.autofill.Dataset$Builder)
    {
        android.service.autofill.Dataset$Builder r0;
        android.widget.RemoteViews $r1;

        r0 := @parameter0: android.service.autofill.Dataset$Builder;

        $r1 = r0.<android.service.autofill.Dataset$Builder: android.widget.RemoteViews mPresentation>;

        return $r1;
    }

    static android.service.autofill.InlinePresentation access$600(android.service.autofill.Dataset$Builder)
    {
        android.service.autofill.Dataset$Builder r0;
        android.service.autofill.InlinePresentation $r1;

        r0 := @parameter0: android.service.autofill.Dataset$Builder;

        $r1 = r0.<android.service.autofill.Dataset$Builder: android.service.autofill.InlinePresentation mInlinePresentation>;

        return $r1;
    }

    static android.content.IntentSender access$700(android.service.autofill.Dataset$Builder)
    {
        android.service.autofill.Dataset$Builder r0;
        android.content.IntentSender $r1;

        r0 := @parameter0: android.service.autofill.Dataset$Builder;

        $r1 = r0.<android.service.autofill.Dataset$Builder: android.content.IntentSender mAuthentication>;

        return $r1;
    }

    static java.lang.String access$800(android.service.autofill.Dataset$Builder)
    {
        android.service.autofill.Dataset$Builder r0;
        java.lang.String $r1;

        r0 := @parameter0: android.service.autofill.Dataset$Builder;

        $r1 = r0.<android.service.autofill.Dataset$Builder: java.lang.String mId>;

        return $r1;
    }

    private void setLifeTheUniverseAndEverything(android.view.autofill.AutofillId, android.view.autofill.AutofillValue, android.widget.RemoteViews, android.service.autofill.InlinePresentation, android.service.autofill.Dataset$DatasetFieldFilter)
    {
        android.service.autofill.Dataset$Builder r0;
        android.view.autofill.AutofillId r1;
        android.view.autofill.AutofillValue r2;
        android.widget.RemoteViews r3;
        android.service.autofill.InlinePresentation r4;
        android.service.autofill.Dataset$DatasetFieldFilter r5;
        java.util.ArrayList r6, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r20, $r22, $r24;
        int i0;

        r0 := @this: android.service.autofill.Dataset$Builder;

        r1 := @parameter0: android.view.autofill.AutofillId;

        r2 := @parameter1: android.view.autofill.AutofillValue;

        r3 := @parameter2: android.widget.RemoteViews;

        r4 := @parameter3: android.service.autofill.InlinePresentation;

        r5 := @parameter4: android.service.autofill.Dataset$DatasetFieldFilter;

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r1, "id cannot be null");

        r6 = r0.<android.service.autofill.Dataset$Builder: java.util.ArrayList mFieldIds>;

        if r6 == null goto label2;

        i0 = virtualinvoke r6.<java.util.ArrayList: int indexOf(java.lang.Object)>(r1);

        if i0 < 0 goto label1;

        $r18 = r0.<android.service.autofill.Dataset$Builder: java.util.ArrayList mFieldValues>;

        virtualinvoke $r18.<java.util.ArrayList: java.lang.Object set(int,java.lang.Object)>(i0, r2);

        $r20 = r0.<android.service.autofill.Dataset$Builder: java.util.ArrayList mFieldPresentations>;

        virtualinvoke $r20.<java.util.ArrayList: java.lang.Object set(int,java.lang.Object)>(i0, r3);

        $r22 = r0.<android.service.autofill.Dataset$Builder: java.util.ArrayList mFieldInlinePresentations>;

        virtualinvoke $r22.<java.util.ArrayList: java.lang.Object set(int,java.lang.Object)>(i0, r4);

        $r24 = r0.<android.service.autofill.Dataset$Builder: java.util.ArrayList mFieldFilters>;

        virtualinvoke $r24.<java.util.ArrayList: java.lang.Object set(int,java.lang.Object)>(i0, r5);

        return;

     label1:
        goto label3;

     label2:
        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

        r0.<android.service.autofill.Dataset$Builder: java.util.ArrayList mFieldIds> = $r8;

        $r9 = new java.util.ArrayList;

        specialinvoke $r9.<java.util.ArrayList: void <init>()>();

        r0.<android.service.autofill.Dataset$Builder: java.util.ArrayList mFieldValues> = $r9;

        $r10 = new java.util.ArrayList;

        specialinvoke $r10.<java.util.ArrayList: void <init>()>();

        r0.<android.service.autofill.Dataset$Builder: java.util.ArrayList mFieldPresentations> = $r10;

        $r11 = new java.util.ArrayList;

        specialinvoke $r11.<java.util.ArrayList: void <init>()>();

        r0.<android.service.autofill.Dataset$Builder: java.util.ArrayList mFieldInlinePresentations> = $r11;

        $r12 = new java.util.ArrayList;

        specialinvoke $r12.<java.util.ArrayList: void <init>()>();

        r0.<android.service.autofill.Dataset$Builder: java.util.ArrayList mFieldFilters> = $r12;

     label3:
        $r13 = r0.<android.service.autofill.Dataset$Builder: java.util.ArrayList mFieldIds>;

        virtualinvoke $r13.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        $r14 = r0.<android.service.autofill.Dataset$Builder: java.util.ArrayList mFieldValues>;

        virtualinvoke $r14.<java.util.ArrayList: boolean add(java.lang.Object)>(r2);

        $r15 = r0.<android.service.autofill.Dataset$Builder: java.util.ArrayList mFieldPresentations>;

        virtualinvoke $r15.<java.util.ArrayList: boolean add(java.lang.Object)>(r3);

        $r16 = r0.<android.service.autofill.Dataset$Builder: java.util.ArrayList mFieldInlinePresentations>;

        virtualinvoke $r16.<java.util.ArrayList: boolean add(java.lang.Object)>(r4);

        $r17 = r0.<android.service.autofill.Dataset$Builder: java.util.ArrayList mFieldFilters>;

        virtualinvoke $r17.<java.util.ArrayList: boolean add(java.lang.Object)>(r5);

        return;
    }

    private void throwIfDestroyed()
    {
        android.service.autofill.Dataset$Builder r0;
        boolean $z0;
        java.lang.IllegalStateException $r1;

        r0 := @this: android.service.autofill.Dataset$Builder;

        $z0 = r0.<android.service.autofill.Dataset$Builder: boolean mDestroyed>;

        if $z0 != 0 goto label1;

        return;

     label1:
        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Already called #build()");

        throw $r1;
    }

    public android.service.autofill.Dataset build()
    {
        android.service.autofill.Dataset$Builder r0;
        java.util.ArrayList $r1;
        java.lang.IllegalStateException $r2;
        android.service.autofill.Dataset $r3;

        r0 := @this: android.service.autofill.Dataset$Builder;

        specialinvoke r0.<android.service.autofill.Dataset$Builder: void throwIfDestroyed()>();

        r0.<android.service.autofill.Dataset$Builder: boolean mDestroyed> = 1;

        $r1 = r0.<android.service.autofill.Dataset$Builder: java.util.ArrayList mFieldIds>;

        if $r1 == null goto label1;

        $r3 = new android.service.autofill.Dataset;

        specialinvoke $r3.<android.service.autofill.Dataset: void <init>(android.service.autofill.Dataset$Builder,android.service.autofill.Dataset$1)>(r0, null);

        return $r3;

     label1:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("at least one value must be set");

        throw $r2;
    }

    public android.service.autofill.Dataset$Builder setAuthentication(android.content.IntentSender)
    {
        android.service.autofill.Dataset$Builder r0;
        android.content.IntentSender r1;

        r0 := @this: android.service.autofill.Dataset$Builder;

        r1 := @parameter0: android.content.IntentSender;

        specialinvoke r0.<android.service.autofill.Dataset$Builder: void throwIfDestroyed()>();

        r0.<android.service.autofill.Dataset$Builder: android.content.IntentSender mAuthentication> = r1;

        return r0;
    }

    public android.service.autofill.Dataset$Builder setFieldInlinePresentation(android.view.autofill.AutofillId, android.view.autofill.AutofillValue, java.util.regex.Pattern, android.service.autofill.InlinePresentation)
    {
        android.service.autofill.Dataset$Builder r0;
        android.view.autofill.AutofillId r1;
        android.view.autofill.AutofillValue r2;
        java.util.regex.Pattern r3;
        android.service.autofill.InlinePresentation r4;
        android.service.autofill.Dataset$DatasetFieldFilter $r6;

        r0 := @this: android.service.autofill.Dataset$Builder;

        r1 := @parameter0: android.view.autofill.AutofillId;

        r2 := @parameter1: android.view.autofill.AutofillValue;

        r3 := @parameter2: java.util.regex.Pattern;

        r4 := @parameter3: android.service.autofill.InlinePresentation;

        specialinvoke r0.<android.service.autofill.Dataset$Builder: void throwIfDestroyed()>();

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r4, "inlinePresentation cannot be null");

        $r6 = new android.service.autofill.Dataset$DatasetFieldFilter;

        specialinvoke $r6.<android.service.autofill.Dataset$DatasetFieldFilter: void <init>(java.util.regex.Pattern,android.service.autofill.Dataset$1)>(r3, null);

        specialinvoke r0.<android.service.autofill.Dataset$Builder: void setLifeTheUniverseAndEverything(android.view.autofill.AutofillId,android.view.autofill.AutofillValue,android.widget.RemoteViews,android.service.autofill.InlinePresentation,android.service.autofill.Dataset$DatasetFieldFilter)>(r1, r2, null, r4, $r6);

        return r0;
    }

    public android.service.autofill.Dataset$Builder setId(java.lang.String)
    {
        android.service.autofill.Dataset$Builder r0;
        java.lang.String r1;

        r0 := @this: android.service.autofill.Dataset$Builder;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<android.service.autofill.Dataset$Builder: void throwIfDestroyed()>();

        r0.<android.service.autofill.Dataset$Builder: java.lang.String mId> = r1;

        return r0;
    }

    public android.service.autofill.Dataset$Builder setInlinePresentation(android.service.autofill.InlinePresentation)
    {
        android.service.autofill.Dataset$Builder r0;
        android.service.autofill.InlinePresentation r1;

        r0 := @this: android.service.autofill.Dataset$Builder;

        r1 := @parameter0: android.service.autofill.InlinePresentation;

        specialinvoke r0.<android.service.autofill.Dataset$Builder: void throwIfDestroyed()>();

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r1, "inlinePresentation must be non-null");

        r0.<android.service.autofill.Dataset$Builder: android.service.autofill.InlinePresentation mInlinePresentation> = r1;

        return r0;
    }

    public android.service.autofill.Dataset$Builder setValue(android.view.autofill.AutofillId, android.view.autofill.AutofillValue)
    {
        android.service.autofill.Dataset$Builder r0;
        android.view.autofill.AutofillId r1;
        android.view.autofill.AutofillValue r2;

        r0 := @this: android.service.autofill.Dataset$Builder;

        r1 := @parameter0: android.view.autofill.AutofillId;

        r2 := @parameter1: android.view.autofill.AutofillValue;

        specialinvoke r0.<android.service.autofill.Dataset$Builder: void throwIfDestroyed()>();

        specialinvoke r0.<android.service.autofill.Dataset$Builder: void setLifeTheUniverseAndEverything(android.view.autofill.AutofillId,android.view.autofill.AutofillValue,android.widget.RemoteViews,android.service.autofill.InlinePresentation,android.service.autofill.Dataset$DatasetFieldFilter)>(r1, r2, null, null, null);

        return r0;
    }

    public android.service.autofill.Dataset$Builder setValue(android.view.autofill.AutofillId, android.view.autofill.AutofillValue, android.widget.RemoteViews)
    {
        android.service.autofill.Dataset$Builder r0;
        android.view.autofill.AutofillId r1;
        android.view.autofill.AutofillValue r2;
        android.widget.RemoteViews r3;

        r0 := @this: android.service.autofill.Dataset$Builder;

        r1 := @parameter0: android.view.autofill.AutofillId;

        r2 := @parameter1: android.view.autofill.AutofillValue;

        r3 := @parameter2: android.widget.RemoteViews;

        specialinvoke r0.<android.service.autofill.Dataset$Builder: void throwIfDestroyed()>();

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r3, "presentation cannot be null");

        specialinvoke r0.<android.service.autofill.Dataset$Builder: void setLifeTheUniverseAndEverything(android.view.autofill.AutofillId,android.view.autofill.AutofillValue,android.widget.RemoteViews,android.service.autofill.InlinePresentation,android.service.autofill.Dataset$DatasetFieldFilter)>(r1, r2, r3, null, null);

        return r0;
    }

    public android.service.autofill.Dataset$Builder setValue(android.view.autofill.AutofillId, android.view.autofill.AutofillValue, android.widget.RemoteViews, android.service.autofill.InlinePresentation)
    {
        android.service.autofill.Dataset$Builder r0;
        android.view.autofill.AutofillId r1;
        android.view.autofill.AutofillValue r2;
        android.widget.RemoteViews r3;
        android.service.autofill.InlinePresentation r4;

        r0 := @this: android.service.autofill.Dataset$Builder;

        r1 := @parameter0: android.view.autofill.AutofillId;

        r2 := @parameter1: android.view.autofill.AutofillValue;

        r3 := @parameter2: android.widget.RemoteViews;

        r4 := @parameter3: android.service.autofill.InlinePresentation;

        specialinvoke r0.<android.service.autofill.Dataset$Builder: void throwIfDestroyed()>();

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r3, "presentation cannot be null");

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r4, "inlinePresentation cannot be null");

        specialinvoke r0.<android.service.autofill.Dataset$Builder: void setLifeTheUniverseAndEverything(android.view.autofill.AutofillId,android.view.autofill.AutofillValue,android.widget.RemoteViews,android.service.autofill.InlinePresentation,android.service.autofill.Dataset$DatasetFieldFilter)>(r1, r2, r3, r4, null);

        return r0;
    }

    public android.service.autofill.Dataset$Builder setValue(android.view.autofill.AutofillId, android.view.autofill.AutofillValue, java.util.regex.Pattern)
    {
        android.service.autofill.Dataset$Builder r0;
        android.view.autofill.AutofillId r1;
        android.view.autofill.AutofillValue r2;
        java.util.regex.Pattern r3;
        android.widget.RemoteViews $r4;
        android.service.autofill.Dataset$DatasetFieldFilter $r5;
        boolean z0;

        r0 := @this: android.service.autofill.Dataset$Builder;

        r1 := @parameter0: android.view.autofill.AutofillId;

        r2 := @parameter1: android.view.autofill.AutofillValue;

        r3 := @parameter2: java.util.regex.Pattern;

        specialinvoke r0.<android.service.autofill.Dataset$Builder: void throwIfDestroyed()>();

        $r4 = r0.<android.service.autofill.Dataset$Builder: android.widget.RemoteViews mPresentation>;

        if $r4 == null goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        staticinvoke <com.android.internal.util.Preconditions: void checkState(boolean,java.lang.String)>(z0, "Dataset presentation not set on constructor");

        $r5 = new android.service.autofill.Dataset$DatasetFieldFilter;

        specialinvoke $r5.<android.service.autofill.Dataset$DatasetFieldFilter: void <init>(java.util.regex.Pattern,android.service.autofill.Dataset$1)>(r3, null);

        specialinvoke r0.<android.service.autofill.Dataset$Builder: void setLifeTheUniverseAndEverything(android.view.autofill.AutofillId,android.view.autofill.AutofillValue,android.widget.RemoteViews,android.service.autofill.InlinePresentation,android.service.autofill.Dataset$DatasetFieldFilter)>(r1, r2, null, null, $r5);

        return r0;
    }

    public android.service.autofill.Dataset$Builder setValue(android.view.autofill.AutofillId, android.view.autofill.AutofillValue, java.util.regex.Pattern, android.widget.RemoteViews)
    {
        android.service.autofill.Dataset$Builder r0;
        android.view.autofill.AutofillId r1;
        android.view.autofill.AutofillValue r2;
        java.util.regex.Pattern r3;
        android.widget.RemoteViews r4;
        android.service.autofill.Dataset$DatasetFieldFilter $r6;

        r0 := @this: android.service.autofill.Dataset$Builder;

        r1 := @parameter0: android.view.autofill.AutofillId;

        r2 := @parameter1: android.view.autofill.AutofillValue;

        r3 := @parameter2: java.util.regex.Pattern;

        r4 := @parameter3: android.widget.RemoteViews;

        specialinvoke r0.<android.service.autofill.Dataset$Builder: void throwIfDestroyed()>();

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r4, "presentation cannot be null");

        $r6 = new android.service.autofill.Dataset$DatasetFieldFilter;

        specialinvoke $r6.<android.service.autofill.Dataset$DatasetFieldFilter: void <init>(java.util.regex.Pattern,android.service.autofill.Dataset$1)>(r3, null);

        specialinvoke r0.<android.service.autofill.Dataset$Builder: void setLifeTheUniverseAndEverything(android.view.autofill.AutofillId,android.view.autofill.AutofillValue,android.widget.RemoteViews,android.service.autofill.InlinePresentation,android.service.autofill.Dataset$DatasetFieldFilter)>(r1, r2, r4, null, $r6);

        return r0;
    }

    public android.service.autofill.Dataset$Builder setValue(android.view.autofill.AutofillId, android.view.autofill.AutofillValue, java.util.regex.Pattern, android.widget.RemoteViews, android.service.autofill.InlinePresentation)
    {
        android.service.autofill.Dataset$Builder r0;
        android.view.autofill.AutofillId r1;
        android.view.autofill.AutofillValue r2;
        java.util.regex.Pattern r3;
        android.widget.RemoteViews r4;
        android.service.autofill.InlinePresentation r5;
        android.service.autofill.Dataset$DatasetFieldFilter $r8;

        r0 := @this: android.service.autofill.Dataset$Builder;

        r1 := @parameter0: android.view.autofill.AutofillId;

        r2 := @parameter1: android.view.autofill.AutofillValue;

        r3 := @parameter2: java.util.regex.Pattern;

        r4 := @parameter3: android.widget.RemoteViews;

        r5 := @parameter4: android.service.autofill.InlinePresentation;

        specialinvoke r0.<android.service.autofill.Dataset$Builder: void throwIfDestroyed()>();

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r4, "presentation cannot be null");

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r5, "inlinePresentation cannot be null");

        $r8 = new android.service.autofill.Dataset$DatasetFieldFilter;

        specialinvoke $r8.<android.service.autofill.Dataset$DatasetFieldFilter: void <init>(java.util.regex.Pattern,android.service.autofill.Dataset$1)>(r3, null);

        specialinvoke r0.<android.service.autofill.Dataset$Builder: void setLifeTheUniverseAndEverything(android.view.autofill.AutofillId,android.view.autofill.AutofillValue,android.widget.RemoteViews,android.service.autofill.InlinePresentation,android.service.autofill.Dataset$DatasetFieldFilter)>(r1, r2, r4, r5, $r8);

        return r0;
    }
}
