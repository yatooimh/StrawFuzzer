public final class android.service.autofill.FillCallback extends java.lang.Object
{
    private static final java.lang.String TAG;
    private final android.service.autofill.IFillCallback mCallback;
    private boolean mCalled;
    private final int mRequestId;

    public void <init>(android.service.autofill.IFillCallback, int)
    {
        android.service.autofill.FillCallback r0;
        android.service.autofill.IFillCallback r1;
        int i0;

        r0 := @this: android.service.autofill.FillCallback;

        r1 := @parameter0: android.service.autofill.IFillCallback;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.service.autofill.FillCallback: android.service.autofill.IFillCallback mCallback> = r1;

        r0.<android.service.autofill.FillCallback: int mRequestId> = i0;

        return;
    }

    private void assertNotCalled()
    {
        android.service.autofill.FillCallback r0;
        boolean $z0;
        java.lang.IllegalStateException $r1;

        r0 := @this: android.service.autofill.FillCallback;

        $z0 = r0.<android.service.autofill.FillCallback: boolean mCalled>;

        if $z0 != 0 goto label1;

        return;

     label1:
        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Already called");

        throw $r1;
    }

    public void onFailure(java.lang.CharSequence)
    {
        android.service.autofill.FillCallback r0;
        java.lang.StringBuilder $r2;
        java.lang.String $r5;
        int $i1;
        android.service.autofill.IFillCallback $r6;
        android.os.RemoteException $r7;
        java.lang.CharSequence r9;

        r0 := @this: android.service.autofill.FillCallback;

        r9 := @parameter0: java.lang.CharSequence;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onFailure(): ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r9);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("FillCallback", $r5);

        specialinvoke r0.<android.service.autofill.FillCallback: void assertNotCalled()>();

        r0.<android.service.autofill.FillCallback: boolean mCalled> = 1;

     label1:
        $r6 = r0.<android.service.autofill.FillCallback: android.service.autofill.IFillCallback mCallback>;

        $i1 = r0.<android.service.autofill.FillCallback: int mRequestId>;

        interfaceinvoke $r6.<android.service.autofill.IFillCallback: void onFailure(int,java.lang.CharSequence)>($i1, r9);

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

        virtualinvoke $r7.<android.os.RemoteException: java.lang.RuntimeException rethrowAsRuntimeException()>();

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void onSuccess(android.service.autofill.FillResponse)
    {
        android.service.autofill.FillCallback r0;
        android.service.autofill.IFillCallback $r1;
        int $i0;
        android.os.RemoteException $r2;
        android.service.autofill.FillResponse r4;

        r0 := @this: android.service.autofill.FillCallback;

        r4 := @parameter0: android.service.autofill.FillResponse;

        specialinvoke r0.<android.service.autofill.FillCallback: void assertNotCalled()>();

        r0.<android.service.autofill.FillCallback: boolean mCalled> = 1;

        if r4 == null goto label1;

        $i0 = r0.<android.service.autofill.FillCallback: int mRequestId>;

        virtualinvoke r4.<android.service.autofill.FillResponse: void setRequestId(int)>($i0);

     label1:
        $r1 = r0.<android.service.autofill.FillCallback: android.service.autofill.IFillCallback mCallback>;

        interfaceinvoke $r1.<android.service.autofill.IFillCallback: void onSuccess(android.service.autofill.FillResponse)>(r4);

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        virtualinvoke $r2.<android.os.RemoteException: java.lang.RuntimeException rethrowAsRuntimeException()>();

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public static void <clinit>()
    {
        <android.service.autofill.FillCallback: java.lang.String TAG> = "FillCallback";

        return;
    }
}
