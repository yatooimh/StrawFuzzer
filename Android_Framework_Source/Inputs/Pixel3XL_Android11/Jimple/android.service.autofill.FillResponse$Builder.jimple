public final class android.service.autofill.FillResponse$Builder extends java.lang.Object
{
    private android.content.IntentSender mAuthentication;
    private android.view.autofill.AutofillId[] mAuthenticationIds;
    private int[] mCancelIds;
    private android.os.Bundle mClientState;
    private java.util.ArrayList mDatasets;
    private boolean mDestroyed;
    private long mDisableDuration;
    private android.view.autofill.AutofillId[] mFieldClassificationIds;
    private int mFlags;
    private android.widget.RemoteViews mFooter;
    private android.widget.RemoteViews mHeader;
    private android.view.autofill.AutofillId[] mIgnoredIds;
    private android.service.autofill.InlinePresentation mInlinePresentation;
    private android.widget.RemoteViews mPresentation;
    private android.service.autofill.SaveInfo mSaveInfo;
    private boolean mSupportsInlineSuggestions;
    private android.service.autofill.UserData mUserData;

    public void <init>()
    {
        android.service.autofill.FillResponse$Builder r0;

        r0 := @this: android.service.autofill.FillResponse$Builder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static java.util.ArrayList access$000(android.service.autofill.FillResponse$Builder)
    {
        android.service.autofill.FillResponse$Builder r0;
        java.util.ArrayList $r1;

        r0 := @parameter0: android.service.autofill.FillResponse$Builder;

        $r1 = r0.<android.service.autofill.FillResponse$Builder: java.util.ArrayList mDatasets>;

        return $r1;
    }

    static android.service.autofill.SaveInfo access$100(android.service.autofill.FillResponse$Builder)
    {
        android.service.autofill.FillResponse$Builder r0;
        android.service.autofill.SaveInfo $r1;

        r0 := @parameter0: android.service.autofill.FillResponse$Builder;

        $r1 = r0.<android.service.autofill.FillResponse$Builder: android.service.autofill.SaveInfo mSaveInfo>;

        return $r1;
    }

    static long access$1000(android.service.autofill.FillResponse$Builder)
    {
        android.service.autofill.FillResponse$Builder r0;
        long $l0;

        r0 := @parameter0: android.service.autofill.FillResponse$Builder;

        $l0 = r0.<android.service.autofill.FillResponse$Builder: long mDisableDuration>;

        return $l0;
    }

    static android.view.autofill.AutofillId[] access$1100(android.service.autofill.FillResponse$Builder)
    {
        android.service.autofill.FillResponse$Builder r0;
        android.view.autofill.AutofillId[] $r1;

        r0 := @parameter0: android.service.autofill.FillResponse$Builder;

        $r1 = r0.<android.service.autofill.FillResponse$Builder: android.view.autofill.AutofillId[] mFieldClassificationIds>;

        return $r1;
    }

    static int access$1200(android.service.autofill.FillResponse$Builder)
    {
        android.service.autofill.FillResponse$Builder r0;
        int $i0;

        r0 := @parameter0: android.service.autofill.FillResponse$Builder;

        $i0 = r0.<android.service.autofill.FillResponse$Builder: int mFlags>;

        return $i0;
    }

    static android.service.autofill.UserData access$1300(android.service.autofill.FillResponse$Builder)
    {
        android.service.autofill.FillResponse$Builder r0;
        android.service.autofill.UserData $r1;

        r0 := @parameter0: android.service.autofill.FillResponse$Builder;

        $r1 = r0.<android.service.autofill.FillResponse$Builder: android.service.autofill.UserData mUserData>;

        return $r1;
    }

    static int[] access$1400(android.service.autofill.FillResponse$Builder)
    {
        android.service.autofill.FillResponse$Builder r0;
        int[] $r1;

        r0 := @parameter0: android.service.autofill.FillResponse$Builder;

        $r1 = r0.<android.service.autofill.FillResponse$Builder: int[] mCancelIds>;

        return $r1;
    }

    static boolean access$1500(android.service.autofill.FillResponse$Builder)
    {
        android.service.autofill.FillResponse$Builder r0;
        boolean $z0;

        r0 := @parameter0: android.service.autofill.FillResponse$Builder;

        $z0 = r0.<android.service.autofill.FillResponse$Builder: boolean mSupportsInlineSuggestions>;

        return $z0;
    }

    static android.os.Bundle access$200(android.service.autofill.FillResponse$Builder)
    {
        android.service.autofill.FillResponse$Builder r0;
        android.os.Bundle $r1;

        r0 := @parameter0: android.service.autofill.FillResponse$Builder;

        $r1 = r0.<android.service.autofill.FillResponse$Builder: android.os.Bundle mClientState>;

        return $r1;
    }

    static android.widget.RemoteViews access$300(android.service.autofill.FillResponse$Builder)
    {
        android.service.autofill.FillResponse$Builder r0;
        android.widget.RemoteViews $r1;

        r0 := @parameter0: android.service.autofill.FillResponse$Builder;

        $r1 = r0.<android.service.autofill.FillResponse$Builder: android.widget.RemoteViews mPresentation>;

        return $r1;
    }

    static android.service.autofill.InlinePresentation access$400(android.service.autofill.FillResponse$Builder)
    {
        android.service.autofill.FillResponse$Builder r0;
        android.service.autofill.InlinePresentation $r1;

        r0 := @parameter0: android.service.autofill.FillResponse$Builder;

        $r1 = r0.<android.service.autofill.FillResponse$Builder: android.service.autofill.InlinePresentation mInlinePresentation>;

        return $r1;
    }

    static android.widget.RemoteViews access$500(android.service.autofill.FillResponse$Builder)
    {
        android.service.autofill.FillResponse$Builder r0;
        android.widget.RemoteViews $r1;

        r0 := @parameter0: android.service.autofill.FillResponse$Builder;

        $r1 = r0.<android.service.autofill.FillResponse$Builder: android.widget.RemoteViews mHeader>;

        return $r1;
    }

    static android.widget.RemoteViews access$600(android.service.autofill.FillResponse$Builder)
    {
        android.service.autofill.FillResponse$Builder r0;
        android.widget.RemoteViews $r1;

        r0 := @parameter0: android.service.autofill.FillResponse$Builder;

        $r1 = r0.<android.service.autofill.FillResponse$Builder: android.widget.RemoteViews mFooter>;

        return $r1;
    }

    static android.content.IntentSender access$700(android.service.autofill.FillResponse$Builder)
    {
        android.service.autofill.FillResponse$Builder r0;
        android.content.IntentSender $r1;

        r0 := @parameter0: android.service.autofill.FillResponse$Builder;

        $r1 = r0.<android.service.autofill.FillResponse$Builder: android.content.IntentSender mAuthentication>;

        return $r1;
    }

    static android.view.autofill.AutofillId[] access$800(android.service.autofill.FillResponse$Builder)
    {
        android.service.autofill.FillResponse$Builder r0;
        android.view.autofill.AutofillId[] $r1;

        r0 := @parameter0: android.service.autofill.FillResponse$Builder;

        $r1 = r0.<android.service.autofill.FillResponse$Builder: android.view.autofill.AutofillId[] mAuthenticationIds>;

        return $r1;
    }

    static android.view.autofill.AutofillId[] access$900(android.service.autofill.FillResponse$Builder)
    {
        android.service.autofill.FillResponse$Builder r0;
        android.view.autofill.AutofillId[] $r1;

        r0 := @parameter0: android.service.autofill.FillResponse$Builder;

        $r1 = r0.<android.service.autofill.FillResponse$Builder: android.view.autofill.AutofillId[] mIgnoredIds>;

        return $r1;
    }

    private void throwIfAuthenticationCalled()
    {
        android.service.autofill.FillResponse$Builder r0;
        android.content.IntentSender $r1;
        java.lang.IllegalStateException $r2;

        r0 := @this: android.service.autofill.FillResponse$Builder;

        $r1 = r0.<android.service.autofill.FillResponse$Builder: android.content.IntentSender mAuthentication>;

        if $r1 != null goto label1;

        return;

     label1:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Already called #setAuthentication()");

        throw $r2;
    }

    private void throwIfDestroyed()
    {
        android.service.autofill.FillResponse$Builder r0;
        boolean $z0;
        java.lang.IllegalStateException $r1;

        r0 := @this: android.service.autofill.FillResponse$Builder;

        $z0 = r0.<android.service.autofill.FillResponse$Builder: boolean mDestroyed>;

        if $z0 != 0 goto label1;

        return;

     label1:
        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Already called #build()");

        throw $r1;
    }

    private void throwIfDisableAutofillCalled()
    {
        android.service.autofill.FillResponse$Builder r0;
        long $l0;
        byte $b1;
        java.lang.IllegalStateException $r1;

        r0 := @this: android.service.autofill.FillResponse$Builder;

        $l0 = r0.<android.service.autofill.FillResponse$Builder: long mDisableDuration>;

        $b1 = $l0 cmp 0L;

        if $b1 > 0 goto label1;

        return;

     label1:
        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Already called #disableAutofill()");

        throw $r1;
    }

    public android.service.autofill.FillResponse$Builder addDataset(android.service.autofill.Dataset)
    {
        android.service.autofill.FillResponse$Builder r0;
        android.service.autofill.Dataset r1;
        java.util.ArrayList $r2, $r3, $r4;
        boolean $z0;

        r0 := @this: android.service.autofill.FillResponse$Builder;

        r1 := @parameter0: android.service.autofill.Dataset;

        specialinvoke r0.<android.service.autofill.FillResponse$Builder: void throwIfDestroyed()>();

        specialinvoke r0.<android.service.autofill.FillResponse$Builder: void throwIfDisableAutofillCalled()>();

        if r1 != null goto label1;

        return r0;

     label1:
        $r2 = r0.<android.service.autofill.FillResponse$Builder: java.util.ArrayList mDatasets>;

        if $r2 != null goto label2;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<android.service.autofill.FillResponse$Builder: java.util.ArrayList mDatasets> = $r4;

     label2:
        $r3 = r0.<android.service.autofill.FillResponse$Builder: java.util.ArrayList mDatasets>;

        $z0 = virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        if $z0 != 0 goto label3;

        return r0;

     label3:
        return r0;
    }

    public android.service.autofill.FillResponse build()
    {
        android.service.autofill.FillResponse$Builder r0;
        android.content.IntentSender $r1;
        android.service.autofill.InlinePresentation $r2, $r5;
        boolean $z0;
        java.lang.Object $r3;
        android.service.autofill.Dataset $r4;
        android.widget.RemoteViews $r6, $r8;
        java.lang.IllegalStateException $r7, $r13;
        java.util.ArrayList $r9, $r14, r15;
        android.service.autofill.SaveInfo $r10;
        long $l0;
        byte $b1;
        android.view.autofill.AutofillId[] $r11;
        android.os.Bundle $r12;
        java.util.Iterator r16;
        android.service.autofill.FillResponse $r17;

        r0 := @this: android.service.autofill.FillResponse$Builder;

        specialinvoke r0.<android.service.autofill.FillResponse$Builder: void throwIfDestroyed()>();

        $r1 = r0.<android.service.autofill.FillResponse$Builder: android.content.IntentSender mAuthentication>;

        if $r1 != null goto label2;

        $r9 = r0.<android.service.autofill.FillResponse$Builder: java.util.ArrayList mDatasets>;

        if $r9 != null goto label2;

        $r10 = r0.<android.service.autofill.FillResponse$Builder: android.service.autofill.SaveInfo mSaveInfo>;

        if $r10 != null goto label2;

        $l0 = r0.<android.service.autofill.FillResponse$Builder: long mDisableDuration>;

        $b1 = $l0 cmp 0L;

        if $b1 != 0 goto label2;

        $r11 = r0.<android.service.autofill.FillResponse$Builder: android.view.autofill.AutofillId[] mFieldClassificationIds>;

        if $r11 != null goto label2;

        $r12 = r0.<android.service.autofill.FillResponse$Builder: android.os.Bundle mClientState>;

        if $r12 == null goto label1;

        goto label2;

     label1:
        $r13 = new java.lang.IllegalStateException;

        specialinvoke $r13.<java.lang.IllegalStateException: void <init>(java.lang.String)>("need to provide: at least one DataSet, or a SaveInfo, or an authentication with a presentation, or a FieldsDetection, or a client state, or disable autofill");

        throw $r13;

     label2:
        $r14 = r0.<android.service.autofill.FillResponse$Builder: java.util.ArrayList mDatasets>;

        if $r14 != null goto label4;

        $r6 = r0.<android.service.autofill.FillResponse$Builder: android.widget.RemoteViews mHeader>;

        if $r6 != null goto label3;

        $r8 = r0.<android.service.autofill.FillResponse$Builder: android.widget.RemoteViews mFooter>;

        if $r8 != null goto label3;

        goto label4;

     label3:
        $r7 = new java.lang.IllegalStateException;

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>("must add at least 1 dataset when using header or footer");

        throw $r7;

     label4:
        r15 = r0.<android.service.autofill.FillResponse$Builder: java.util.ArrayList mDatasets>;

        if r15 == null goto label8;

        r16 = virtualinvoke r15.<java.util.ArrayList: java.util.Iterator iterator()>();

     label5:
        $z0 = interfaceinvoke r16.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label7;

        $r3 = interfaceinvoke r16.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (android.service.autofill.Dataset) $r3;

        $r5 = virtualinvoke $r4.<android.service.autofill.Dataset: android.service.autofill.InlinePresentation getFieldInlinePresentation(int)>(0);

        if $r5 == null goto label6;

        r0.<android.service.autofill.FillResponse$Builder: boolean mSupportsInlineSuggestions> = 1;

        goto label7;

     label6:
        goto label5;

     label7:
        goto label9;

     label8:
        $r2 = r0.<android.service.autofill.FillResponse$Builder: android.service.autofill.InlinePresentation mInlinePresentation>;

        if $r2 == null goto label9;

        r0.<android.service.autofill.FillResponse$Builder: boolean mSupportsInlineSuggestions> = 1;

     label9:
        r0.<android.service.autofill.FillResponse$Builder: boolean mDestroyed> = 1;

        $r17 = new android.service.autofill.FillResponse;

        specialinvoke $r17.<android.service.autofill.FillResponse: void <init>(android.service.autofill.FillResponse$Builder,android.service.autofill.FillResponse$1)>(r0, null);

        return $r17;
    }

    public android.service.autofill.FillResponse$Builder disableAutofill(long)
    {
        android.service.autofill.FillResponse$Builder r0;
        long l0;
        byte $b1;
        java.lang.IllegalArgumentException $r1;
        android.content.IntentSender $r2;
        java.util.ArrayList $r3;
        android.service.autofill.SaveInfo $r4;
        android.view.autofill.AutofillId[] $r5;
        android.os.Bundle $r6;
        java.lang.IllegalStateException $r7;

        r0 := @this: android.service.autofill.FillResponse$Builder;

        l0 := @parameter0: long;

        specialinvoke r0.<android.service.autofill.FillResponse$Builder: void throwIfDestroyed()>();

        $b1 = l0 cmp 0L;

        if $b1 <= 0 goto label2;

        $r2 = r0.<android.service.autofill.FillResponse$Builder: android.content.IntentSender mAuthentication>;

        if $r2 != null goto label1;

        $r3 = r0.<android.service.autofill.FillResponse$Builder: java.util.ArrayList mDatasets>;

        if $r3 != null goto label1;

        $r4 = r0.<android.service.autofill.FillResponse$Builder: android.service.autofill.SaveInfo mSaveInfo>;

        if $r4 != null goto label1;

        $r5 = r0.<android.service.autofill.FillResponse$Builder: android.view.autofill.AutofillId[] mFieldClassificationIds>;

        if $r5 != null goto label1;

        $r6 = r0.<android.service.autofill.FillResponse$Builder: android.os.Bundle mClientState>;

        if $r6 != null goto label1;

        r0.<android.service.autofill.FillResponse$Builder: long mDisableDuration> = l0;

        return r0;

     label1:
        $r7 = new java.lang.IllegalStateException;

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>("disableAutofill() must be the only method called");

        throw $r7;

     label2:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("duration must be greater than 0");

        throw $r1;
    }

    public android.service.autofill.FillResponse$Builder setAuthentication(android.view.autofill.AutofillId[], android.content.IntentSender, android.widget.RemoteViews)
    {
        android.service.autofill.FillResponse$Builder r0;
        android.view.autofill.AutofillId[] r1, $r8;
        android.content.IntentSender r2;
        android.widget.RemoteViews r3, $r4, $r6;
        java.lang.IllegalStateException $r5;
        boolean $z0, z1, z2;
        java.lang.IllegalArgumentException $r7;

        r0 := @this: android.service.autofill.FillResponse$Builder;

        r1 := @parameter0: android.view.autofill.AutofillId[];

        r2 := @parameter1: android.content.IntentSender;

        r3 := @parameter2: android.widget.RemoteViews;

        specialinvoke r0.<android.service.autofill.FillResponse$Builder: void throwIfDestroyed()>();

        specialinvoke r0.<android.service.autofill.FillResponse$Builder: void throwIfDisableAutofillCalled()>();

        $r4 = r0.<android.service.autofill.FillResponse$Builder: android.widget.RemoteViews mHeader>;

        if $r4 != null goto label6;

        $r6 = r0.<android.service.autofill.FillResponse$Builder: android.widget.RemoteViews mFooter>;

        if $r6 != null goto label6;

        z1 = 1;

        if r2 != null goto label1;

        z2 = 1;

        goto label2;

     label1:
        z2 = 0;

     label2:
        if r3 != null goto label3;

        goto label4;

     label3:
        z1 = 0;

     label4:
        $z0 = z1 ^ z2;

        if $z0 != 0 goto label5;

        r0.<android.service.autofill.FillResponse$Builder: android.content.IntentSender mAuthentication> = r2;

        r0.<android.service.autofill.FillResponse$Builder: android.widget.RemoteViews mPresentation> = r3;

        $r8 = staticinvoke <android.service.autofill.AutofillServiceHelper: android.view.autofill.AutofillId[] assertValid(android.view.autofill.AutofillId[])>(r1);

        r0.<android.service.autofill.FillResponse$Builder: android.view.autofill.AutofillId[] mAuthenticationIds> = $r8;

        return r0;

     label5:
        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("authentication and presentation must be both non-null or null");

        throw $r7;

     label6:
        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Already called #setHeader() or #setFooter()");

        throw $r5;
    }

    public android.service.autofill.FillResponse$Builder setAuthentication(android.view.autofill.AutofillId[], android.content.IntentSender, android.widget.RemoteViews, android.service.autofill.InlinePresentation)
    {
        android.service.autofill.FillResponse$Builder r0;
        android.view.autofill.AutofillId[] r1, $r9;
        android.content.IntentSender r2;
        android.widget.RemoteViews r3, $r5, $r7;
        android.service.autofill.InlinePresentation r4;
        java.lang.IllegalStateException $r6;
        java.lang.IllegalArgumentException $r8;
        boolean z0, z1, $z2;

        r0 := @this: android.service.autofill.FillResponse$Builder;

        r1 := @parameter0: android.view.autofill.AutofillId[];

        r2 := @parameter1: android.content.IntentSender;

        r3 := @parameter2: android.widget.RemoteViews;

        r4 := @parameter3: android.service.autofill.InlinePresentation;

        specialinvoke r0.<android.service.autofill.FillResponse$Builder: void throwIfDestroyed()>();

        specialinvoke r0.<android.service.autofill.FillResponse$Builder: void throwIfDisableAutofillCalled()>();

        $r5 = r0.<android.service.autofill.FillResponse$Builder: android.widget.RemoteViews mHeader>;

        if $r5 != null goto label6;

        $r7 = r0.<android.service.autofill.FillResponse$Builder: android.widget.RemoteViews mFooter>;

        if $r7 != null goto label6;

        z0 = 1;

        if r2 != null goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        if r3 != null goto label3;

        if r4 != null goto label3;

        goto label4;

     label3:
        z0 = 0;

     label4:
        $z2 = z0 ^ z1;

        if $z2 != 0 goto label5;

        r0.<android.service.autofill.FillResponse$Builder: android.content.IntentSender mAuthentication> = r2;

        r0.<android.service.autofill.FillResponse$Builder: android.widget.RemoteViews mPresentation> = r3;

        r0.<android.service.autofill.FillResponse$Builder: android.service.autofill.InlinePresentation mInlinePresentation> = r4;

        $r9 = staticinvoke <android.service.autofill.AutofillServiceHelper: android.view.autofill.AutofillId[] assertValid(android.view.autofill.AutofillId[])>(r1);

        r0.<android.service.autofill.FillResponse$Builder: android.view.autofill.AutofillId[] mAuthenticationIds> = $r9;

        return r0;

     label5:
        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("authentication and presentation (dropdown or inline), must be both non-null or null");

        throw $r8;

     label6:
        $r6 = new java.lang.IllegalStateException;

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Already called #setHeader() or #setFooter()");

        throw $r6;
    }

    public android.service.autofill.FillResponse$Builder setClientState(android.os.Bundle)
    {
        android.service.autofill.FillResponse$Builder r0;
        android.os.Bundle r1;

        r0 := @this: android.service.autofill.FillResponse$Builder;

        r1 := @parameter0: android.os.Bundle;

        specialinvoke r0.<android.service.autofill.FillResponse$Builder: void throwIfDestroyed()>();

        specialinvoke r0.<android.service.autofill.FillResponse$Builder: void throwIfDisableAutofillCalled()>();

        r0.<android.service.autofill.FillResponse$Builder: android.os.Bundle mClientState> = r1;

        return r0;
    }

    public transient android.service.autofill.FillResponse$Builder setFieldClassificationIds(android.view.autofill.AutofillId[])
    {
        android.service.autofill.FillResponse$Builder r0;
        android.view.autofill.AutofillId[] r1;
        int $i0, $i1, $i3, $i4;

        r0 := @this: android.service.autofill.FillResponse$Builder;

        r1 := @parameter0: android.view.autofill.AutofillId[];

        specialinvoke r0.<android.service.autofill.FillResponse$Builder: void throwIfDestroyed()>();

        specialinvoke r0.<android.service.autofill.FillResponse$Builder: void throwIfDisableAutofillCalled()>();

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object[] checkArrayElementsNotNull(java.lang.Object[],java.lang.String)>(r1, "ids");

        $i0 = lengthof r1;

        $i1 = staticinvoke <android.service.autofill.UserData: int getMaxFieldClassificationIdsSize()>();

        staticinvoke <com.android.internal.util.Preconditions: int checkArgumentInRange(int,int,int,java.lang.String)>($i0, 1, $i1, "ids length");

        r0.<android.service.autofill.FillResponse$Builder: android.view.autofill.AutofillId[] mFieldClassificationIds> = r1;

        $i3 = r0.<android.service.autofill.FillResponse$Builder: int mFlags>;

        $i4 = $i3 | 1;

        r0.<android.service.autofill.FillResponse$Builder: int mFlags> = $i4;

        return r0;
    }

    public android.service.autofill.FillResponse$Builder setFlags(int)
    {
        android.service.autofill.FillResponse$Builder r0;
        int i0, $i1;

        r0 := @this: android.service.autofill.FillResponse$Builder;

        i0 := @parameter0: int;

        specialinvoke r0.<android.service.autofill.FillResponse$Builder: void throwIfDestroyed()>();

        $i1 = staticinvoke <com.android.internal.util.Preconditions: int checkFlagsArgument(int,int)>(i0, 3);

        r0.<android.service.autofill.FillResponse$Builder: int mFlags> = $i1;

        return r0;
    }

    public android.service.autofill.FillResponse$Builder setFooter(android.widget.RemoteViews)
    {
        android.service.autofill.FillResponse$Builder r0;
        android.widget.RemoteViews r1, $r3;
        java.lang.Object $r2;

        r0 := @this: android.service.autofill.FillResponse$Builder;

        r1 := @parameter0: android.widget.RemoteViews;

        specialinvoke r0.<android.service.autofill.FillResponse$Builder: void throwIfDestroyed()>();

        specialinvoke r0.<android.service.autofill.FillResponse$Builder: void throwIfAuthenticationCalled()>();

        $r2 = staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r3 = (android.widget.RemoteViews) $r2;

        r0.<android.service.autofill.FillResponse$Builder: android.widget.RemoteViews mFooter> = $r3;

        return r0;
    }

    public android.service.autofill.FillResponse$Builder setHeader(android.widget.RemoteViews)
    {
        android.service.autofill.FillResponse$Builder r0;
        android.widget.RemoteViews r1, $r3;
        java.lang.Object $r2;

        r0 := @this: android.service.autofill.FillResponse$Builder;

        r1 := @parameter0: android.widget.RemoteViews;

        specialinvoke r0.<android.service.autofill.FillResponse$Builder: void throwIfDestroyed()>();

        specialinvoke r0.<android.service.autofill.FillResponse$Builder: void throwIfAuthenticationCalled()>();

        $r2 = staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r3 = (android.widget.RemoteViews) $r2;

        r0.<android.service.autofill.FillResponse$Builder: android.widget.RemoteViews mHeader> = $r3;

        return r0;
    }

    public transient android.service.autofill.FillResponse$Builder setIgnoredIds(android.view.autofill.AutofillId[])
    {
        android.service.autofill.FillResponse$Builder r0;
        android.view.autofill.AutofillId[] r1;

        r0 := @this: android.service.autofill.FillResponse$Builder;

        r1 := @parameter0: android.view.autofill.AutofillId[];

        specialinvoke r0.<android.service.autofill.FillResponse$Builder: void throwIfDestroyed()>();

        r0.<android.service.autofill.FillResponse$Builder: android.view.autofill.AutofillId[] mIgnoredIds> = r1;

        return r0;
    }

    public android.service.autofill.FillResponse$Builder setPresentationCancelIds(int[])
    {
        android.service.autofill.FillResponse$Builder r0;
        int[] r1;

        r0 := @this: android.service.autofill.FillResponse$Builder;

        r1 := @parameter0: int[];

        specialinvoke r0.<android.service.autofill.FillResponse$Builder: void throwIfDestroyed()>();

        r0.<android.service.autofill.FillResponse$Builder: int[] mCancelIds> = r1;

        return r0;
    }

    public android.service.autofill.FillResponse$Builder setSaveInfo(android.service.autofill.SaveInfo)
    {
        android.service.autofill.FillResponse$Builder r0;
        android.service.autofill.SaveInfo r1;

        r0 := @this: android.service.autofill.FillResponse$Builder;

        r1 := @parameter0: android.service.autofill.SaveInfo;

        specialinvoke r0.<android.service.autofill.FillResponse$Builder: void throwIfDestroyed()>();

        specialinvoke r0.<android.service.autofill.FillResponse$Builder: void throwIfDisableAutofillCalled()>();

        r0.<android.service.autofill.FillResponse$Builder: android.service.autofill.SaveInfo mSaveInfo> = r1;

        return r0;
    }

    public android.service.autofill.FillResponse$Builder setUserData(android.service.autofill.UserData)
    {
        android.service.autofill.FillResponse$Builder r0;
        android.service.autofill.UserData r1, $r3;
        java.lang.Object $r2;

        r0 := @this: android.service.autofill.FillResponse$Builder;

        r1 := @parameter0: android.service.autofill.UserData;

        specialinvoke r0.<android.service.autofill.FillResponse$Builder: void throwIfDestroyed()>();

        specialinvoke r0.<android.service.autofill.FillResponse$Builder: void throwIfAuthenticationCalled()>();

        $r2 = staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r3 = (android.service.autofill.UserData) $r2;

        r0.<android.service.autofill.FillResponse$Builder: android.service.autofill.UserData mUserData> = $r3;

        return r0;
    }
}
