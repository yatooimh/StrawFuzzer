public class android.service.autofill.ImageTransformation$Builder extends java.lang.Object
{
    private boolean mDestroyed;
    private final android.view.autofill.AutofillId mId;
    private final java.util.ArrayList mOptions;

    public void <init>(android.view.autofill.AutofillId, java.util.regex.Pattern, int)
    {
        android.service.autofill.ImageTransformation$Builder r0;
        android.view.autofill.AutofillId r1, $r5;
        java.util.regex.Pattern r2;
        int i0;
        java.util.ArrayList $r3;
        java.lang.Object $r4;

        r0 := @this: android.service.autofill.ImageTransformation$Builder;

        r1 := @parameter0: android.view.autofill.AutofillId;

        r2 := @parameter1: java.util.regex.Pattern;

        i0 := @parameter2: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<android.service.autofill.ImageTransformation$Builder: java.util.ArrayList mOptions> = $r3;

        $r4 = staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r5 = (android.view.autofill.AutofillId) $r4;

        r0.<android.service.autofill.ImageTransformation$Builder: android.view.autofill.AutofillId mId> = $r5;

        virtualinvoke r0.<android.service.autofill.ImageTransformation$Builder: android.service.autofill.ImageTransformation$Builder addOption(java.util.regex.Pattern,int)>(r2, i0);

        return;
    }

    public void <init>(android.view.autofill.AutofillId, java.util.regex.Pattern, int, java.lang.CharSequence)
    {
        android.service.autofill.ImageTransformation$Builder r0;
        android.view.autofill.AutofillId r1, $r6;
        java.util.regex.Pattern r2;
        int i0;
        java.lang.CharSequence r3;
        java.util.ArrayList $r4;
        java.lang.Object $r5;

        r0 := @this: android.service.autofill.ImageTransformation$Builder;

        r1 := @parameter0: android.view.autofill.AutofillId;

        r2 := @parameter1: java.util.regex.Pattern;

        i0 := @parameter2: int;

        r3 := @parameter3: java.lang.CharSequence;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<android.service.autofill.ImageTransformation$Builder: java.util.ArrayList mOptions> = $r4;

        $r5 = staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r6 = (android.view.autofill.AutofillId) $r5;

        r0.<android.service.autofill.ImageTransformation$Builder: android.view.autofill.AutofillId mId> = $r6;

        virtualinvoke r0.<android.service.autofill.ImageTransformation$Builder: android.service.autofill.ImageTransformation$Builder addOption(java.util.regex.Pattern,int,java.lang.CharSequence)>(r2, i0, r3);

        return;
    }

    static android.view.autofill.AutofillId access$000(android.service.autofill.ImageTransformation$Builder)
    {
        android.service.autofill.ImageTransformation$Builder r0;
        android.view.autofill.AutofillId $r1;

        r0 := @parameter0: android.service.autofill.ImageTransformation$Builder;

        $r1 = r0.<android.service.autofill.ImageTransformation$Builder: android.view.autofill.AutofillId mId>;

        return $r1;
    }

    static java.util.ArrayList access$100(android.service.autofill.ImageTransformation$Builder)
    {
        android.service.autofill.ImageTransformation$Builder r0;
        java.util.ArrayList $r1;

        r0 := @parameter0: android.service.autofill.ImageTransformation$Builder;

        $r1 = r0.<android.service.autofill.ImageTransformation$Builder: java.util.ArrayList mOptions>;

        return $r1;
    }

    private void addOptionInternal(java.util.regex.Pattern, int, java.lang.CharSequence)
    {
        android.service.autofill.ImageTransformation$Builder r0;
        java.util.regex.Pattern r1;
        int i0;
        java.lang.CharSequence r2;
        android.service.autofill.ImageTransformation$Option $r4;
        java.util.ArrayList $r5;
        boolean z1;

        r0 := @this: android.service.autofill.ImageTransformation$Builder;

        r1 := @parameter0: java.util.regex.Pattern;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.CharSequence;

        specialinvoke r0.<android.service.autofill.ImageTransformation$Builder: void throwIfDestroyed()>();

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        if i0 == 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        staticinvoke <com.android.internal.util.Preconditions: void checkArgument(boolean)>(z1);

        $r5 = r0.<android.service.autofill.ImageTransformation$Builder: java.util.ArrayList mOptions>;

        $r4 = new android.service.autofill.ImageTransformation$Option;

        specialinvoke $r4.<android.service.autofill.ImageTransformation$Option: void <init>(java.util.regex.Pattern,int,java.lang.CharSequence)>(r1, i0, r2);

        virtualinvoke $r5.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

        return;
    }

    private void throwIfDestroyed()
    {
        android.service.autofill.ImageTransformation$Builder r0;
        boolean $z0, $z1;

        r0 := @this: android.service.autofill.ImageTransformation$Builder;

        $z0 = r0.<android.service.autofill.ImageTransformation$Builder: boolean mDestroyed>;

        $z1 = $z0 ^ 1;

        staticinvoke <com.android.internal.util.Preconditions: void checkState(boolean,java.lang.String)>($z1, "Already called build()");

        return;
    }

    public android.service.autofill.ImageTransformation$Builder addOption(java.util.regex.Pattern, int)
    {
        android.service.autofill.ImageTransformation$Builder r0;
        java.util.regex.Pattern r1;
        int i0;

        r0 := @this: android.service.autofill.ImageTransformation$Builder;

        r1 := @parameter0: java.util.regex.Pattern;

        i0 := @parameter1: int;

        specialinvoke r0.<android.service.autofill.ImageTransformation$Builder: void addOptionInternal(java.util.regex.Pattern,int,java.lang.CharSequence)>(r1, i0, null);

        return r0;
    }

    public android.service.autofill.ImageTransformation$Builder addOption(java.util.regex.Pattern, int, java.lang.CharSequence)
    {
        android.service.autofill.ImageTransformation$Builder r0;
        java.util.regex.Pattern r1;
        int i0;
        java.lang.CharSequence r2, $r4;
        java.lang.Object $r3;

        r0 := @this: android.service.autofill.ImageTransformation$Builder;

        r1 := @parameter0: java.util.regex.Pattern;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.CharSequence;

        $r3 = staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r2);

        $r4 = (java.lang.CharSequence) $r3;

        specialinvoke r0.<android.service.autofill.ImageTransformation$Builder: void addOptionInternal(java.util.regex.Pattern,int,java.lang.CharSequence)>(r1, i0, $r4);

        return r0;
    }

    public android.service.autofill.ImageTransformation build()
    {
        android.service.autofill.ImageTransformation$Builder r0;
        android.service.autofill.ImageTransformation $r1;

        r0 := @this: android.service.autofill.ImageTransformation$Builder;

        specialinvoke r0.<android.service.autofill.ImageTransformation$Builder: void throwIfDestroyed()>();

        r0.<android.service.autofill.ImageTransformation$Builder: boolean mDestroyed> = 1;

        $r1 = new android.service.autofill.ImageTransformation;

        specialinvoke $r1.<android.service.autofill.ImageTransformation: void <init>(android.service.autofill.ImageTransformation$Builder,android.service.autofill.ImageTransformation$1)>(r0, null);

        return $r1;
    }
}
