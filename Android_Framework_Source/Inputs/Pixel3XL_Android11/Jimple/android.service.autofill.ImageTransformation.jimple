public final class android.service.autofill.ImageTransformation extends android.service.autofill.InternalTransformation implements android.service.autofill.Transformation, android.os.Parcelable
{
    public static final android.os.Parcelable$Creator CREATOR;
    private static final java.lang.String TAG;
    private final android.view.autofill.AutofillId mId;
    private final java.util.ArrayList mOptions;

    static void <clinit>()
    {
        android.service.autofill.ImageTransformation$1 $r0;

        <android.service.autofill.ImageTransformation: java.lang.String TAG> = "ImageTransformation";

        $r0 = new android.service.autofill.ImageTransformation$1;

        specialinvoke $r0.<android.service.autofill.ImageTransformation$1: void <init>()>();

        <android.service.autofill.ImageTransformation: android.os.Parcelable$Creator CREATOR> = $r0;

        return;
    }

    private void <init>(android.service.autofill.ImageTransformation$Builder)
    {
        android.service.autofill.ImageTransformation r0;
        android.service.autofill.ImageTransformation$Builder r1;
        android.view.autofill.AutofillId $r2;
        java.util.ArrayList $r3;

        r0 := @this: android.service.autofill.ImageTransformation;

        r1 := @parameter0: android.service.autofill.ImageTransformation$Builder;

        specialinvoke r0.<android.service.autofill.InternalTransformation: void <init>()>();

        $r2 = staticinvoke <android.service.autofill.ImageTransformation$Builder: android.view.autofill.AutofillId access$000(android.service.autofill.ImageTransformation$Builder)>(r1);

        r0.<android.service.autofill.ImageTransformation: android.view.autofill.AutofillId mId> = $r2;

        $r3 = staticinvoke <android.service.autofill.ImageTransformation$Builder: java.util.ArrayList access$100(android.service.autofill.ImageTransformation$Builder)>(r1);

        r0.<android.service.autofill.ImageTransformation: java.util.ArrayList mOptions> = $r3;

        return;
    }

    void <init>(android.service.autofill.ImageTransformation$Builder, android.service.autofill.ImageTransformation$1)
    {
        android.service.autofill.ImageTransformation r0;
        android.service.autofill.ImageTransformation$Builder r1;
        android.service.autofill.ImageTransformation$1 r2;

        r0 := @this: android.service.autofill.ImageTransformation;

        r1 := @parameter0: android.service.autofill.ImageTransformation$Builder;

        r2 := @parameter1: android.service.autofill.ImageTransformation$1;

        specialinvoke r0.<android.service.autofill.ImageTransformation: void <init>(android.service.autofill.ImageTransformation$Builder)>(r1);

        return;
    }

    public void apply(android.service.autofill.ValueFinder, android.widget.RemoteViews, int) throws java.lang.Exception
    {
        android.service.autofill.ImageTransformation r0;
        int i0, i1, $i4, $i7, i9;
        android.view.autofill.AutofillId $r1, $r26;
        java.util.ArrayList $r2, $r7;
        boolean $z0, $z1, $z2;
        java.lang.StringBuilder $r3, $r18, $r24, $r30, r48;
        java.lang.String $r6, $r15, $r23, $r28, $r41, r44;
        java.lang.Object $r8;
        java.util.regex.Pattern $r9, $r34;
        java.util.regex.Matcher $r10;
        java.lang.CharSequence $r16, $r17;
        java.lang.Exception $r29;
        java.lang.Class $r39;
        android.service.autofill.ValueFinder r42;
        android.widget.RemoteViews r43;
        android.service.autofill.ImageTransformation$Option r47;

        r0 := @this: android.service.autofill.ImageTransformation;

        r42 := @parameter0: android.service.autofill.ValueFinder;

        r43 := @parameter1: android.widget.RemoteViews;

        i0 := @parameter2: int;

        $r1 = r0.<android.service.autofill.ImageTransformation: android.view.autofill.AutofillId mId>;

        r44 = interfaceinvoke r42.<android.service.autofill.ValueFinder: java.lang.String findByAutofillId(android.view.autofill.AutofillId)>($r1);

        if r44 != null goto label1;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No view for id ");

        $r26 = r0.<android.service.autofill.ImageTransformation: android.view.autofill.AutofillId mId>;

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r26);

        $r28 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ImageTransformation", $r28);

        return;

     label1:
        $r2 = r0.<android.service.autofill.ImageTransformation: java.util.ArrayList mOptions>;

        i1 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        $z0 = <android.view.autofill.Helper: boolean sDebug>;

        if $z0 == 0 goto label2;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" multiple options on id ");

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to compare against");

        $r23 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ImageTransformation", $r23);

     label2:
        i9 = 0;

     label3:
        if i9 >= i1 goto label8;

        $r7 = r0.<android.service.autofill.ImageTransformation: java.util.ArrayList mOptions>;

        $r8 = virtualinvoke $r7.<java.util.ArrayList: java.lang.Object get(int)>(i9);

        r47 = (android.service.autofill.ImageTransformation$Option) $r8;

     label4:
        $r9 = r47.<android.service.autofill.ImageTransformation$Option: java.util.regex.Pattern pattern>;

        $r10 = virtualinvoke $r9.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r44);

        $z2 = virtualinvoke $r10.<java.util.regex.Matcher: boolean matches()>();

        if $z2 == 0 goto label6;

        r48 = new java.lang.StringBuilder;

        specialinvoke r48.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Found match at ");

        virtualinvoke r48.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i9);

        virtualinvoke r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        virtualinvoke r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r47);

        $r15 = virtualinvoke r48.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ImageTransformation", $r15);

        $i4 = r47.<android.service.autofill.ImageTransformation$Option: int resId>;

        virtualinvoke r43.<android.widget.RemoteViews: void setImageViewResource(int,int)>(i0, $i4);

        $r16 = r47.<android.service.autofill.ImageTransformation$Option: java.lang.CharSequence contentDescription>;

        if $r16 == null goto label5;

        $r17 = r47.<android.service.autofill.ImageTransformation$Option: java.lang.CharSequence contentDescription>;

        virtualinvoke r43.<android.widget.RemoteViews: void setContentDescription(int,java.lang.CharSequence)>(i0, $r17);

     label5:
        return;

     label6:
        i9 = i9 + 1;

        goto label3;

     label7:
        $r29 := @caughtexception;

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error matching regex #");

        virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i9);

        virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        $r34 = r47.<android.service.autofill.ImageTransformation$Option: java.util.regex.Pattern pattern>;

        virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r34);

        virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") on id ");

        $i7 = r47.<android.service.autofill.ImageTransformation$Option: int resId>;

        virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);

        virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r39 = virtualinvoke $r29.<java.lang.Object: java.lang.Class getClass()>();

        virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r39);

        $r41 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ImageTransformation", $r41);

        throw $r29;

     label8:
        $z1 = <android.view.autofill.Helper: boolean sDebug>;

        if $z1 == 0 goto label9;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No match for ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r44);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ImageTransformation", $r6);

     label9:
        return;

        catch java.lang.Exception from label4 to label5 with label7;
    }

    public int describeContents()
    {
        android.service.autofill.ImageTransformation r0;

        r0 := @this: android.service.autofill.ImageTransformation;

        return 0;
    }

    public java.lang.String toString()
    {
        android.service.autofill.ImageTransformation r0;
        boolean $z0;
        java.lang.StringBuilder $r2;
        android.view.autofill.AutofillId $r4;
        java.util.ArrayList $r7;
        java.lang.String $r10, $r11;

        r0 := @this: android.service.autofill.ImageTransformation;

        $z0 = <android.view.autofill.Helper: boolean sDebug>;

        if $z0 != 0 goto label1;

        $r11 = specialinvoke r0.<java.lang.Object: java.lang.String toString()>();

        return $r11;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ImageTransformation: [id=");

        $r4 = r0.<android.service.autofill.ImageTransformation: android.view.autofill.AutofillId mId>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", options=");

        $r7 = r0.<android.service.autofill.ImageTransformation: java.util.ArrayList mOptions>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r10 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r10;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.service.autofill.ImageTransformation r0;
        android.os.Parcel r1;
        int i0, $i1, i2, i3;
        java.util.regex.Pattern[] r2;
        int[] r3;
        java.lang.Object[] r4;
        android.service.autofill.ImageTransformation$Option r5;
        android.view.autofill.AutofillId $r6;
        java.util.ArrayList $r7, $r8;
        java.lang.Object $r9;
        java.util.regex.Pattern $r10;
        java.lang.CharSequence $r11;
        java.lang.CharSequence[] r12;

        r0 := @this: android.service.autofill.ImageTransformation;

        r1 := @parameter0: android.os.Parcel;

        i2 := @parameter1: int;

        $r6 = r0.<android.service.autofill.ImageTransformation: android.view.autofill.AutofillId mId>;

        virtualinvoke r1.<android.os.Parcel: void writeParcelable(android.os.Parcelable,int)>($r6, i2);

        $r7 = r0.<android.service.autofill.ImageTransformation: java.util.ArrayList mOptions>;

        i0 = virtualinvoke $r7.<java.util.ArrayList: int size()>();

        r2 = newarray (java.util.regex.Pattern)[i0];

        r3 = newarray (int)[i0];

        r4 = newarray (java.lang.String)[i0];

        i3 = 0;

     label1:
        if i3 >= i0 goto label2;

        $r8 = r0.<android.service.autofill.ImageTransformation: java.util.ArrayList mOptions>;

        $r9 = virtualinvoke $r8.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        r5 = (android.service.autofill.ImageTransformation$Option) $r9;

        $r10 = r5.<android.service.autofill.ImageTransformation$Option: java.util.regex.Pattern pattern>;

        r2[i3] = $r10;

        $i1 = r5.<android.service.autofill.ImageTransformation$Option: int resId>;

        r3[i3] = $i1;

        $r11 = r5.<android.service.autofill.ImageTransformation$Option: java.lang.CharSequence contentDescription>;

        r4[i3] = $r11;

        i3 = i3 + 1;

        goto label1;

     label2:
        virtualinvoke r1.<android.os.Parcel: void writeSerializable(java.io.Serializable)>(r2);

        virtualinvoke r1.<android.os.Parcel: void writeIntArray(int[])>(r3);

        r12 = (java.lang.CharSequence[]) r4;

        virtualinvoke r1.<android.os.Parcel: void writeCharSequenceArray(java.lang.CharSequence[])>(r12);

        return;
    }
}
