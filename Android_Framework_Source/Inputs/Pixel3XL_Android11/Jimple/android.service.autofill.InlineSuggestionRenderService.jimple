public abstract class android.service.autofill.InlineSuggestionRenderService extends android.app.Service
{
    public static final java.lang.String SERVICE_INTERFACE;
    private static final java.lang.String TAG;
    private final android.util.LruCache mActiveInlineSuggestions;
    private android.service.autofill.IInlineSuggestionUiCallback mCallback;
    private final android.os.Handler mMainHandler;

    public void <init>()
    {
        android.service.autofill.InlineSuggestionRenderService r0;
        android.os.Handler $r1;
        android.os.Looper $r2;
        android.service.autofill.InlineSuggestionRenderService$1 $r3;

        r0 := @this: android.service.autofill.InlineSuggestionRenderService;

        specialinvoke r0.<android.app.Service: void <init>()>();

        $r1 = new android.os.Handler;

        $r2 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        specialinvoke $r1.<android.os.Handler: void <init>(android.os.Looper,android.os.Handler$Callback,boolean)>($r2, null, 1);

        r0.<android.service.autofill.InlineSuggestionRenderService: android.os.Handler mMainHandler> = $r1;

        $r3 = new android.service.autofill.InlineSuggestionRenderService$1;

        specialinvoke $r3.<android.service.autofill.InlineSuggestionRenderService$1: void <init>(android.service.autofill.InlineSuggestionRenderService,int)>(r0, 30);

        r0.<android.service.autofill.InlineSuggestionRenderService: android.util.LruCache mActiveInlineSuggestions> = $r3;

        return;
    }

    static android.util.LruCache access$200(android.service.autofill.InlineSuggestionRenderService)
    {
        android.service.autofill.InlineSuggestionRenderService r0;
        android.util.LruCache $r1;

        r0 := @parameter0: android.service.autofill.InlineSuggestionRenderService;

        $r1 = r0.<android.service.autofill.InlineSuggestionRenderService: android.util.LruCache mActiveInlineSuggestions>;

        return $r1;
    }

    static android.os.Handler access$300(android.service.autofill.InlineSuggestionRenderService)
    {
        android.service.autofill.InlineSuggestionRenderService r0;
        android.os.Handler $r1;

        r0 := @parameter0: android.service.autofill.InlineSuggestionRenderService;

        $r1 = r0.<android.service.autofill.InlineSuggestionRenderService: android.os.Handler mMainHandler>;

        return $r1;
    }

    static void access$400(android.service.autofill.InlineSuggestionRenderService, int, int)
    {
        android.service.autofill.InlineSuggestionRenderService r0;
        int i0, i1;

        r0 := @parameter0: android.service.autofill.InlineSuggestionRenderService;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<android.service.autofill.InlineSuggestionRenderService: void handleDestroySuggestionViews(int,int)>(i0, i1);

        return;
    }

    static void access$500(android.service.autofill.InlineSuggestionRenderService, android.os.RemoteCallback)
    {
        android.service.autofill.InlineSuggestionRenderService r0;
        android.os.RemoteCallback r1;

        r0 := @parameter0: android.service.autofill.InlineSuggestionRenderService;

        r1 := @parameter1: android.os.RemoteCallback;

        specialinvoke r0.<android.service.autofill.InlineSuggestionRenderService: void handleGetInlineSuggestionsRendererInfo(android.os.RemoteCallback)>(r1);

        return;
    }

    static void access$600(android.service.autofill.InlineSuggestionRenderService, android.service.autofill.IInlineSuggestionUiCallback, android.service.autofill.InlinePresentation, int, int, android.os.IBinder, int, int, int)
    {
        android.service.autofill.InlineSuggestionRenderService r0;
        android.service.autofill.IInlineSuggestionUiCallback r1;
        android.service.autofill.InlinePresentation r2;
        int i0, i1, i2, i3, i4;
        android.os.IBinder r3;

        r0 := @parameter0: android.service.autofill.InlineSuggestionRenderService;

        r1 := @parameter1: android.service.autofill.IInlineSuggestionUiCallback;

        r2 := @parameter2: android.service.autofill.InlinePresentation;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        r3 := @parameter5: android.os.IBinder;

        i2 := @parameter6: int;

        i3 := @parameter7: int;

        i4 := @parameter8: int;

        specialinvoke r0.<android.service.autofill.InlineSuggestionRenderService: void handleRenderSuggestion(android.service.autofill.IInlineSuggestionUiCallback,android.service.autofill.InlinePresentation,int,int,android.os.IBinder,int,int,int)>(r1, r2, i0, i1, r3, i2, i3, i4);

        return;
    }

    private void handleDestroySuggestionViews(int, int)
    {
        android.service.autofill.InlineSuggestionRenderService r0;
        int i0, i1, $i3, $i4;
        android.service.autofill.InlineSuggestionRenderService$InlineSuggestionUiImpl r1;
        java.lang.StringBuilder $r3, $r13;
        java.lang.String $r8, $r16;
        android.util.LruCache $r9;
        java.util.Map $r10;
        java.util.Set $r11;
        boolean $z0;
        java.lang.Object $r12;
        java.util.Iterator r18;

        r0 := @this: android.service.autofill.InlineSuggestionRenderService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("handleDestroySuggestionViews called for ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r8 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("InlineSuggestionRenderService", $r8);

        $r9 = r0.<android.service.autofill.InlineSuggestionRenderService: android.util.LruCache mActiveInlineSuggestions>;

        $r10 = virtualinvoke $r9.<android.util.LruCache: java.util.Map snapshot()>();

        $r11 = interfaceinvoke $r10.<java.util.Map: java.util.Set keySet()>();

        r18 = interfaceinvoke $r11.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r18.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r12 = interfaceinvoke r18.<java.util.Iterator: java.lang.Object next()>();

        r1 = (android.service.autofill.InlineSuggestionRenderService$InlineSuggestionUiImpl) $r12;

        $i3 = staticinvoke <android.service.autofill.InlineSuggestionRenderService$InlineSuggestionUiImpl: int access$000(android.service.autofill.InlineSuggestionRenderService$InlineSuggestionUiImpl)>(r1);

        if $i3 != i0 goto label2;

        $i4 = staticinvoke <android.service.autofill.InlineSuggestionRenderService$InlineSuggestionUiImpl: int access$100(android.service.autofill.InlineSuggestionRenderService$InlineSuggestionUiImpl)>(r1);

        if $i4 != i1 goto label2;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Destroy ");

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("InlineSuggestionRenderService", $r16);

        virtualinvoke r1.<android.service.autofill.InlineSuggestionRenderService$InlineSuggestionUiImpl: void releaseSurfaceControlViewHost()>();

     label2:
        goto label1;

     label3:
        return;
    }

    private void handleGetInlineSuggestionsRendererInfo(android.os.RemoteCallback)
    {
        android.service.autofill.InlineSuggestionRenderService r0;
        android.os.RemoteCallback r1;
        android.os.Bundle $r2;

        r0 := @this: android.service.autofill.InlineSuggestionRenderService;

        r1 := @parameter0: android.os.RemoteCallback;

        $r2 = virtualinvoke r0.<android.service.autofill.InlineSuggestionRenderService: android.os.Bundle onGetInlineSuggestionsRendererInfo()>();

        virtualinvoke r1.<android.os.RemoteCallback: void sendResult(android.os.Bundle)>($r2);

        return;
    }

    private void handleRenderSuggestion(android.service.autofill.IInlineSuggestionUiCallback, android.service.autofill.InlinePresentation, int, int, android.os.IBinder, int, int, int)
    {
        android.service.autofill.InlineSuggestionRenderService r0;
        int i0, i1, i2, i3, i4, $i6, $i7;
        android.service.autofill.InlineSuggestionRoot r1;
        android.widget.inline.InlinePresentationSpec $r2, $r4;
        android.util.Size $r3, $r5, r27;
        java.lang.String $r12;
        android.view.Display $r13;
        android.os.Handler $r14, r35;
        android.util.LruCache $r15;
        java.lang.Boolean $r16;
        android.os.RemoteException $r18, $r19;
        java.lang.Throwable $r20;
        android.service.autofill.IInlineSuggestionUiCallback r21;
        android.service.autofill.InlinePresentation r22;
        android.os.IBinder r23;
        android.view.View r25;
        java.lang.StringBuilder r28;
        android.view.WindowManager$LayoutParams r29;
        android.view.SurfaceControlViewHost r30;
        android.service.autofill._$$Lambda$InlineSuggestionRenderService$4WveOqCGJeRb08DN4p3fTmw8h_M r31;
        android.view.View$OnLongClickListener r32;
        android.service.autofill._$$Lambda$InlineSuggestionRenderService$dfBSVSK_a4i7SZpYGrwwobqbHvM r33;
        android.service.autofill.InlineSuggestionRenderService$InlineSuggestionUiImpl r34;
        android.service.autofill._$$Lambda$InlineSuggestionRenderService$YF_fG0Ukz_FD1JUnOOmqINNG7Xc r36;

        r0 := @this: android.service.autofill.InlineSuggestionRenderService;

        r21 := @parameter0: android.service.autofill.IInlineSuggestionUiCallback;

        r22 := @parameter1: android.service.autofill.InlinePresentation;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        r23 := @parameter4: android.os.IBinder;

        i2 := @parameter5: int;

        i3 := @parameter6: int;

        i4 := @parameter7: int;

        if r23 != null goto label05;

     label01:
        interfaceinvoke r21.<android.service.autofill.IInlineSuggestionUiCallback: void onError()>();

     label02:
        goto label04;

     label03:
        $r18 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("InlineSuggestionRenderService", "RemoteException calling onError()");

     label04:
        return;

     label05:
        virtualinvoke r0.<android.service.autofill.InlineSuggestionRenderService: void updateDisplay(int)>(i2);

     label06:
        r25 = virtualinvoke r0.<android.service.autofill.InlineSuggestionRenderService: android.view.View onRenderSuggestion(android.service.autofill.InlinePresentation,int,int)>(r22, i0, i1);

     label07:
        if r25 != null goto label14;

     label08:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("InlineSuggestionRenderService", "ExtServices failed to render the inline suggestion view.");

     label09:
        interfaceinvoke r21.<android.service.autofill.IInlineSuggestionUiCallback: void onError()>();

     label10:
        goto label13;

     label11:
        $r19 := @caughtexception;

     label12:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("InlineSuggestionRenderService", "Null suggestion view returned by renderer");

     label13:
        virtualinvoke r0.<android.service.autofill.InlineSuggestionRenderService: void updateDisplay(int)>(0);

        return;

     label14:
        r0.<android.service.autofill.InlineSuggestionRenderService: android.service.autofill.IInlineSuggestionUiCallback mCallback> = r21;

     label15:
        $r2 = virtualinvoke r22.<android.service.autofill.InlinePresentation: android.widget.inline.InlinePresentationSpec getInlinePresentationSpec()>();

        $r3 = virtualinvoke $r2.<android.widget.inline.InlinePresentationSpec: android.util.Size getMinSize()>();

        $r4 = virtualinvoke r22.<android.service.autofill.InlinePresentation: android.widget.inline.InlinePresentationSpec getInlinePresentationSpec()>();

        $r5 = virtualinvoke $r4.<android.widget.inline.InlinePresentationSpec: android.util.Size getMaxSize()>();

        r27 = specialinvoke r0.<android.service.autofill.InlineSuggestionRenderService: android.util.Size measuredSize(android.view.View,int,int,android.util.Size,android.util.Size)>(r25, i0, i1, $r3, $r5);

        r28 = new java.lang.StringBuilder;

        specialinvoke r28.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("width=");

        virtualinvoke r28.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", height=");

        virtualinvoke r28.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        virtualinvoke r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", measuredSize=");

        virtualinvoke r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r27);

        $r12 = virtualinvoke r28.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("InlineSuggestionRenderService", $r12);

        r1 = new android.service.autofill.InlineSuggestionRoot;

        specialinvoke r1.<android.service.autofill.InlineSuggestionRoot: void <init>(android.content.Context,android.service.autofill.IInlineSuggestionUiCallback)>(r0, r21);

        virtualinvoke r1.<android.service.autofill.InlineSuggestionRoot: void addView(android.view.View)>(r25);

        r29 = new android.view.WindowManager$LayoutParams;

        $i6 = virtualinvoke r27.<android.util.Size: int getWidth()>();

        $i7 = virtualinvoke r27.<android.util.Size: int getHeight()>();

        specialinvoke r29.<android.view.WindowManager$LayoutParams: void <init>(int,int,int,int,int)>($i6, $i7, 2, 0, -2);

        r30 = new android.view.SurfaceControlViewHost;

        $r13 = virtualinvoke r0.<android.service.autofill.InlineSuggestionRenderService: android.view.Display getDisplay()>();

        specialinvoke r30.<android.view.SurfaceControlViewHost: void <init>(android.content.Context,android.view.Display,android.os.IBinder)>(r0, $r13, r23);

        virtualinvoke r30.<android.view.SurfaceControlViewHost: void setView(android.view.View,android.view.WindowManager$LayoutParams)>(r1, r29);

        virtualinvoke r25.<android.view.View: void setFocusable(boolean)>(0);

        r31 = new android.service.autofill._$$Lambda$InlineSuggestionRenderService$4WveOqCGJeRb08DN4p3fTmw8h_M;

        specialinvoke r31.<android.service.autofill._$$Lambda$InlineSuggestionRenderService$4WveOqCGJeRb08DN4p3fTmw8h_M: void <init>(android.service.autofill.IInlineSuggestionUiCallback)>(r21);

        virtualinvoke r25.<android.view.View: void setOnClickListener(android.view.View$OnClickListener)>(r31);

     label16:
        r32 = virtualinvoke r25.<android.view.View: android.view.View$OnLongClickListener getOnLongClickListener()>();

        r33 = new android.service.autofill._$$Lambda$InlineSuggestionRenderService$dfBSVSK_a4i7SZpYGrwwobqbHvM;

        specialinvoke r33.<android.service.autofill._$$Lambda$InlineSuggestionRenderService$dfBSVSK_a4i7SZpYGrwwobqbHvM: void <init>(android.view.View$OnLongClickListener,android.service.autofill.IInlineSuggestionUiCallback)>(r32, r21);

        virtualinvoke r25.<android.view.View: void setOnLongClickListener(android.view.View$OnLongClickListener)>(r33);

        r34 = new android.service.autofill.InlineSuggestionRenderService$InlineSuggestionUiImpl;

        $r14 = r0.<android.service.autofill.InlineSuggestionRenderService: android.os.Handler mMainHandler>;

        specialinvoke r34.<android.service.autofill.InlineSuggestionRenderService$InlineSuggestionUiImpl: void <init>(android.service.autofill.InlineSuggestionRenderService,android.view.SurfaceControlViewHost,android.os.Handler,int,int)>(r0, r30, $r14, i3, i4);

        $r15 = r0.<android.service.autofill.InlineSuggestionRenderService: android.util.LruCache mActiveInlineSuggestions>;

        $r16 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        virtualinvoke $r15.<android.util.LruCache: java.lang.Object put(java.lang.Object,java.lang.Object)>(r34, $r16);

        r35 = r0.<android.service.autofill.InlineSuggestionRenderService: android.os.Handler mMainHandler>;

        r36 = new android.service.autofill._$$Lambda$InlineSuggestionRenderService$YF_fG0Ukz_FD1JUnOOmqINNG7Xc;

        specialinvoke r36.<android.service.autofill._$$Lambda$InlineSuggestionRenderService$YF_fG0Ukz_FD1JUnOOmqINNG7Xc: void <init>(android.service.autofill.IInlineSuggestionUiCallback,android.service.autofill.InlineSuggestionRenderService$InlineSuggestionUiImpl,android.view.SurfaceControlViewHost,android.util.Size)>(r21, r34, r30, r27);

        virtualinvoke r35.<android.os.Handler: boolean post(java.lang.Runnable)>(r36);

     label17:
        virtualinvoke r0.<android.service.autofill.InlineSuggestionRenderService: void updateDisplay(int)>(0);

        return;

     label18:
        $r20 := @caughtexception;

        virtualinvoke r0.<android.service.autofill.InlineSuggestionRenderService: void updateDisplay(int)>(0);

        throw $r20;

        catch android.os.RemoteException from label01 to label02 with label03;
        catch java.lang.Throwable from label06 to label07 with label18;
        catch java.lang.Throwable from label08 to label09 with label18;
        catch android.os.RemoteException from label09 to label10 with label11;
        catch java.lang.Throwable from label09 to label10 with label18;
        catch java.lang.Throwable from label12 to label13 with label18;
        catch java.lang.Throwable from label14 to label15 with label18;
        catch java.lang.Throwable from label15 to label16 with label18;
        catch java.lang.Throwable from label16 to label17 with label18;
    }

    static void lambda$handleRenderSuggestion$0(android.service.autofill.IInlineSuggestionUiCallback, android.view.View)
    {
        android.view.View r0;
        android.os.RemoteException $r1;
        android.service.autofill.IInlineSuggestionUiCallback r2;

        r2 := @parameter0: android.service.autofill.IInlineSuggestionUiCallback;

        r0 := @parameter1: android.view.View;

     label1:
        interfaceinvoke r2.<android.service.autofill.IInlineSuggestionUiCallback: void onClick()>();

     label2:
        goto label4;

     label3:
        $r1 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("InlineSuggestionRenderService", "RemoteException calling onClick()");

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    static boolean lambda$handleRenderSuggestion$1(android.view.View$OnLongClickListener, android.service.autofill.IInlineSuggestionUiCallback, android.view.View)
    {
        android.service.autofill.IInlineSuggestionUiCallback r0;
        android.view.View r1;
        android.os.RemoteException $r2;
        android.view.View$OnLongClickListener r3;

        r3 := @parameter0: android.view.View$OnLongClickListener;

        r0 := @parameter1: android.service.autofill.IInlineSuggestionUiCallback;

        r1 := @parameter2: android.view.View;

        if r3 == null goto label1;

        interfaceinvoke r3.<android.view.View$OnLongClickListener: boolean onLongClick(android.view.View)>(r1);

     label1:
        interfaceinvoke r0.<android.service.autofill.IInlineSuggestionUiCallback: void onLongClick()>();

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("InlineSuggestionRenderService", "RemoteException calling onLongClick()");

     label4:
        return 1;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    static void lambda$handleRenderSuggestion$2(android.service.autofill.IInlineSuggestionUiCallback, android.service.autofill.InlineSuggestionRenderService$InlineSuggestionUiImpl, android.view.SurfaceControlViewHost, android.util.Size)
    {
        android.service.autofill.InlineSuggestionRenderService$InlineSuggestionUiImpl r0;
        android.view.SurfaceControlViewHost r1;
        android.util.Size r2;
        android.service.autofill.InlineSuggestionRenderService$InlineSuggestionUiWrapper r3;
        android.view.SurfaceControlViewHost$SurfacePackage $r4;
        int $i0, $i1;
        android.os.RemoteException $r5;
        android.service.autofill.IInlineSuggestionUiCallback r6;

        r6 := @parameter0: android.service.autofill.IInlineSuggestionUiCallback;

        r0 := @parameter1: android.service.autofill.InlineSuggestionRenderService$InlineSuggestionUiImpl;

        r1 := @parameter2: android.view.SurfaceControlViewHost;

        r2 := @parameter3: android.util.Size;

     label1:
        r3 = new android.service.autofill.InlineSuggestionRenderService$InlineSuggestionUiWrapper;

        specialinvoke r3.<android.service.autofill.InlineSuggestionRenderService$InlineSuggestionUiWrapper: void <init>(android.service.autofill.InlineSuggestionRenderService$InlineSuggestionUiImpl)>(r0);

        $r4 = virtualinvoke r1.<android.view.SurfaceControlViewHost: android.view.SurfaceControlViewHost$SurfacePackage getSurfacePackage()>();

        $i0 = virtualinvoke r2.<android.util.Size: int getWidth()>();

        $i1 = virtualinvoke r2.<android.util.Size: int getHeight()>();

        interfaceinvoke r6.<android.service.autofill.IInlineSuggestionUiCallback: void onContent(android.service.autofill.IInlineSuggestionUi,android.view.SurfaceControlViewHost$SurfacePackage,int,int)>(r3, $r4, $i0, $i1);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("InlineSuggestionRenderService", "RemoteException calling onContent()");

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    private android.util.Size measuredSize(android.view.View, int, int, android.util.Size, android.util.Size)
    {
        android.service.autofill.InlineSuggestionRenderService r0;
        android.view.View r1;
        android.util.Size r2, r3, $r4, $r5;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, i9, i10, i11;

        r0 := @this: android.service.autofill.InlineSuggestionRenderService;

        r1 := @parameter0: android.view.View;

        i8 := @parameter1: int;

        i9 := @parameter2: int;

        r2 := @parameter3: android.util.Size;

        r3 := @parameter4: android.util.Size;

        if i8 == -2 goto label1;

        if i9 == -2 goto label1;

        $r5 = new android.util.Size;

        specialinvoke $r5.<android.util.Size: void <init>(int,int)>(i8, i9);

        return $r5;

     label1:
        if i8 != -2 goto label2;

        $i7 = virtualinvoke r3.<android.util.Size: int getWidth()>();

        i10 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i7, -2147483648);

        goto label3;

     label2:
        i10 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(i8, 1073741824);

     label3:
        if i9 != -2 goto label4;

        $i6 = virtualinvoke r3.<android.util.Size: int getHeight()>();

        i11 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i6, -2147483648);

        goto label5;

     label4:
        i11 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(i9, 1073741824);

     label5:
        virtualinvoke r1.<android.view.View: void measure(int,int)>(i10, i11);

        $r4 = new android.util.Size;

        $i0 = virtualinvoke r1.<android.view.View: int getMeasuredWidth()>();

        $i1 = virtualinvoke r2.<android.util.Size: int getWidth()>();

        $i2 = staticinvoke <java.lang.Math: int max(int,int)>($i0, $i1);

        $i3 = virtualinvoke r1.<android.view.View: int getMeasuredHeight()>();

        $i4 = virtualinvoke r2.<android.util.Size: int getHeight()>();

        $i5 = staticinvoke <java.lang.Math: int max(int,int)>($i3, $i4);

        specialinvoke $r4.<android.util.Size: void <init>(int,int)>($i2, $i5);

        return $r4;
    }

    protected final void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        android.service.autofill.InlineSuggestionRenderService r0;
        java.io.PrintWriter r1;
        java.lang.StringBuilder $r2;
        android.util.LruCache $r4, $r7;
        int $i0, $i1, $i2;
        java.lang.String $r6;
        java.util.Map $r8;
        java.util.Set $r9;
        boolean $z0;
        java.lang.Object $r10;
        java.lang.Object[] $r11;
        java.lang.Integer $r12, $r13;
        java.io.FileDescriptor r15;
        java.lang.String[] r16;
        java.util.Iterator r18;
        android.service.autofill.InlineSuggestionRenderService$InlineSuggestionUiImpl r19;

        r0 := @this: android.service.autofill.InlineSuggestionRenderService;

        r15 := @parameter0: java.io.FileDescriptor;

        r1 := @parameter1: java.io.PrintWriter;

        r16 := @parameter2: java.lang.String[];

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mActiveInlineSuggestions: ");

        $r4 = r0.<android.service.autofill.InlineSuggestionRenderService: android.util.LruCache mActiveInlineSuggestions>;

        $i0 = virtualinvoke $r4.<android.util.LruCache: int size()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r6);

        $r7 = r0.<android.service.autofill.InlineSuggestionRenderService: android.util.LruCache mActiveInlineSuggestions>;

        $r8 = virtualinvoke $r7.<android.util.LruCache: java.util.Map snapshot()>();

        $r9 = interfaceinvoke $r8.<java.util.Map: java.util.Set keySet()>();

        r18 = interfaceinvoke $r9.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r18.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r10 = interfaceinvoke r18.<java.util.Iterator: java.lang.Object next()>();

        r19 = (android.service.autofill.InlineSuggestionRenderService$InlineSuggestionUiImpl) $r10;

        $r11 = newarray (java.lang.Object)[3];

        $r11[0] = r19;

        $i1 = staticinvoke <android.service.autofill.InlineSuggestionRenderService$InlineSuggestionUiImpl: int access$000(android.service.autofill.InlineSuggestionRenderService$InlineSuggestionUiImpl)>(r19);

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r11[1] = $r12;

        $i2 = staticinvoke <android.service.autofill.InlineSuggestionRenderService$InlineSuggestionUiImpl: int access$100(android.service.autofill.InlineSuggestionRenderService$InlineSuggestionUiImpl)>(r19);

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r11[2] = $r13;

        virtualinvoke r1.<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>("ui: [%s] - [%d]  [%d]\n", $r11);

        goto label1;

     label2:
        return;
    }

    public final android.os.IBinder onBind(android.content.Intent)
    {
        android.service.autofill.InlineSuggestionRenderService r0;
        android.content.Intent r1;
        java.lang.String $r3, $r4, $r8;
        boolean $z0;
        java.lang.StringBuilder $r5;
        android.service.autofill.InlineSuggestionRenderService$2 $r9;
        android.os.IBinder $r10;

        r0 := @this: android.service.autofill.InlineSuggestionRenderService;

        r1 := @parameter0: android.content.Intent;

        staticinvoke <android.os.BaseBundle: void setShouldDefuse(boolean)>(1);

        $r3 = "android.service.autofill.InlineSuggestionRenderService";

        $r4 = virtualinvoke r1.<android.content.Intent: java.lang.String getAction()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label1;

        $r9 = new android.service.autofill.InlineSuggestionRenderService$2;

        specialinvoke $r9.<android.service.autofill.InlineSuggestionRenderService$2: void <init>(android.service.autofill.InlineSuggestionRenderService)>(r0);

        $r10 = virtualinvoke $r9.<android.service.autofill.InlineSuggestionRenderService$2: android.os.IBinder asBinder()>();

        return $r10;

     label1:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Tried to bind to wrong intent (should be android.service.autofill.InlineSuggestionRenderService: ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("InlineSuggestionRenderService", $r8);

        return null;
    }

    public android.os.Bundle onGetInlineSuggestionsRendererInfo()
    {
        android.service.autofill.InlineSuggestionRenderService r0;
        android.os.Bundle $r1;

        r0 := @this: android.service.autofill.InlineSuggestionRenderService;

        $r1 = <android.os.Bundle: android.os.Bundle EMPTY>;

        return $r1;
    }

    public android.view.View onRenderSuggestion(android.service.autofill.InlinePresentation, int, int)
    {
        android.service.autofill.InlineSuggestionRenderService r0;
        int i0, i1;
        java.lang.StringBuilder $r1;
        java.lang.Class $r3;
        java.lang.String $r6;
        android.service.autofill.InlinePresentation r7;

        r0 := @this: android.service.autofill.InlineSuggestionRenderService;

        r7 := @parameter0: android.service.autofill.InlinePresentation;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("service implementation (");

        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not implement onRenderSuggestion()");

        $r6 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("InlineSuggestionRenderService", $r6);

        return null;
    }

    public final void startIntentSender(android.content.IntentSender)
    {
        android.service.autofill.InlineSuggestionRenderService r0;
        android.service.autofill.IInlineSuggestionUiCallback r1;
        android.os.RemoteException $r2;
        android.content.IntentSender r4;

        r0 := @this: android.service.autofill.InlineSuggestionRenderService;

        r4 := @parameter0: android.content.IntentSender;

        r1 = r0.<android.service.autofill.InlineSuggestionRenderService: android.service.autofill.IInlineSuggestionUiCallback mCallback>;

        if r1 != null goto label1;

        return;

     label1:
        interfaceinvoke r1.<android.service.autofill.IInlineSuggestionUiCallback: void onStartIntentSender(android.content.IntentSender)>(r4);

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        virtualinvoke $r2.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public static void <clinit>()
    {
        <android.service.autofill.InlineSuggestionRenderService: java.lang.String TAG> = "InlineSuggestionRenderService";

        <android.service.autofill.InlineSuggestionRenderService: java.lang.String SERVICE_INTERFACE> = "android.service.autofill.InlineSuggestionRenderService";

        return;
    }
}
