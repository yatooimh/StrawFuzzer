public final class android.service.autofill.SaveCallback extends java.lang.Object
{
    private static final java.lang.String TAG;
    private final android.service.autofill.ISaveCallback mCallback;
    private boolean mCalled;

    void <init>(android.service.autofill.ISaveCallback)
    {
        android.service.autofill.SaveCallback r0;
        android.service.autofill.ISaveCallback r1;

        r0 := @this: android.service.autofill.SaveCallback;

        r1 := @parameter0: android.service.autofill.ISaveCallback;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.service.autofill.SaveCallback: android.service.autofill.ISaveCallback mCallback> = r1;

        return;
    }

    private void assertNotCalled()
    {
        android.service.autofill.SaveCallback r0;
        boolean $z0;
        java.lang.IllegalStateException $r1;

        r0 := @this: android.service.autofill.SaveCallback;

        $z0 = r0.<android.service.autofill.SaveCallback: boolean mCalled>;

        if $z0 != 0 goto label1;

        return;

     label1:
        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Already called");

        throw $r1;
    }

    private void onSuccessInternal(android.content.IntentSender)
    {
        android.service.autofill.SaveCallback r0;
        android.service.autofill.ISaveCallback $r1;
        android.os.RemoteException $r2;
        android.content.IntentSender r4;

        r0 := @this: android.service.autofill.SaveCallback;

        r4 := @parameter0: android.content.IntentSender;

        specialinvoke r0.<android.service.autofill.SaveCallback: void assertNotCalled()>();

        r0.<android.service.autofill.SaveCallback: boolean mCalled> = 1;

     label1:
        $r1 = r0.<android.service.autofill.SaveCallback: android.service.autofill.ISaveCallback mCallback>;

        interfaceinvoke $r1.<android.service.autofill.ISaveCallback: void onSuccess(android.content.IntentSender)>(r4);

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        virtualinvoke $r2.<android.os.RemoteException: java.lang.RuntimeException rethrowAsRuntimeException()>();

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void onFailure(java.lang.CharSequence)
    {
        android.service.autofill.SaveCallback r0;
        java.lang.StringBuilder $r2;
        java.lang.String $r5;
        android.service.autofill.ISaveCallback $r6;
        android.os.RemoteException $r7;
        java.lang.CharSequence r9;

        r0 := @this: android.service.autofill.SaveCallback;

        r9 := @parameter0: java.lang.CharSequence;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onFailure(): ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r9);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("SaveCallback", $r5);

        specialinvoke r0.<android.service.autofill.SaveCallback: void assertNotCalled()>();

        r0.<android.service.autofill.SaveCallback: boolean mCalled> = 1;

     label1:
        $r6 = r0.<android.service.autofill.SaveCallback: android.service.autofill.ISaveCallback mCallback>;

        interfaceinvoke $r6.<android.service.autofill.ISaveCallback: void onFailure(java.lang.CharSequence)>(r9);

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

        virtualinvoke $r7.<android.os.RemoteException: java.lang.RuntimeException rethrowAsRuntimeException()>();

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void onSuccess()
    {
        android.service.autofill.SaveCallback r0;

        r0 := @this: android.service.autofill.SaveCallback;

        specialinvoke r0.<android.service.autofill.SaveCallback: void onSuccessInternal(android.content.IntentSender)>(null);

        return;
    }

    public void onSuccess(android.content.IntentSender)
    {
        android.service.autofill.SaveCallback r0;
        android.content.IntentSender r1, $r3;
        java.lang.Object $r2;

        r0 := @this: android.service.autofill.SaveCallback;

        r1 := @parameter0: android.content.IntentSender;

        $r2 = staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r3 = (android.content.IntentSender) $r2;

        specialinvoke r0.<android.service.autofill.SaveCallback: void onSuccessInternal(android.content.IntentSender)>($r3);

        return;
    }

    public static void <clinit>()
    {
        <android.service.autofill.SaveCallback: java.lang.String TAG> = "SaveCallback";

        return;
    }
}
