public final class android.service.autofill.augmented.FillWindow extends java.lang.Object implements java.lang.AutoCloseable
{
    private static final java.lang.String TAG;
    private android.graphics.Rect mBounds;
    private final dalvik.system.CloseGuard mCloseGuard;
    private boolean mDestroyed;
    private android.view.View mFillView;
    private final java.lang.Object mLock;
    private android.service.autofill.augmented.AugmentedAutofillService$AutofillProxy mProxy;
    private boolean mShowing;
    private final android.os.Handler mUiThreadHandler;
    private boolean mUpdateCalled;
    private android.view.WindowManager mWm;

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;

        $r0 = class "Landroid/service/autofill/augmented/FillWindow;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getSimpleName()>();

        <android.service.autofill.augmented.FillWindow: java.lang.String TAG> = $r1;

        return;
    }

    public void <init>()
    {
        android.service.autofill.augmented.FillWindow r0;
        java.lang.Object $r1;
        dalvik.system.CloseGuard $r2;
        android.os.Handler $r3;
        android.os.Looper $r4;

        r0 := @this: android.service.autofill.augmented.FillWindow;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.lang.Object;

        specialinvoke $r1.<java.lang.Object: void <init>()>();

        r0.<android.service.autofill.augmented.FillWindow: java.lang.Object mLock> = $r1;

        $r2 = staticinvoke <dalvik.system.CloseGuard: dalvik.system.CloseGuard get()>();

        r0.<android.service.autofill.augmented.FillWindow: dalvik.system.CloseGuard mCloseGuard> = $r2;

        $r3 = new android.os.Handler;

        $r4 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        specialinvoke $r3.<android.os.Handler: void <init>(android.os.Looper)>($r4);

        r0.<android.service.autofill.augmented.FillWindow: android.os.Handler mUiThreadHandler> = $r3;

        return;
    }

    static java.lang.String access$000()
    {
        java.lang.String $r0;

        $r0 = <android.service.autofill.augmented.FillWindow: java.lang.String TAG>;

        return $r0;
    }

    static android.os.Handler access$100(android.service.autofill.augmented.FillWindow)
    {
        android.service.autofill.augmented.FillWindow r0;
        android.os.Handler $r1;

        r0 := @parameter0: android.service.autofill.augmented.FillWindow;

        $r1 = r0.<android.service.autofill.augmented.FillWindow: android.os.Handler mUiThreadHandler>;

        return $r1;
    }

    static void access$200(android.service.autofill.augmented.FillWindow)
    {
        android.service.autofill.augmented.FillWindow r0;

        r0 := @parameter0: android.service.autofill.augmented.FillWindow;

        specialinvoke r0.<android.service.autofill.augmented.FillWindow: void handleHide()>();

        return;
    }

    static void access$300(android.service.autofill.augmented.FillWindow, android.view.WindowManager$LayoutParams)
    {
        android.service.autofill.augmented.FillWindow r0;
        android.view.WindowManager$LayoutParams r1;

        r0 := @parameter0: android.service.autofill.augmented.FillWindow;

        r1 := @parameter1: android.view.WindowManager$LayoutParams;

        specialinvoke r0.<android.service.autofill.augmented.FillWindow: void handleShow(android.view.WindowManager$LayoutParams)>(r1);

        return;
    }

    private void checkNotDestroyedLocked()
    {
        android.service.autofill.augmented.FillWindow r0;
        boolean $z0;
        java.lang.IllegalStateException $r1;

        r0 := @this: android.service.autofill.augmented.FillWindow;

        $z0 = r0.<android.service.autofill.augmented.FillWindow: boolean mDestroyed>;

        if $z0 != 0 goto label1;

        return;

     label1:
        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("already destroyed()");

        throw $r1;
    }

    private void handleHide()
    {
        android.service.autofill.augmented.FillWindow r0;
        java.lang.Object r1;
        boolean z0, $z1, $z2;
        android.view.WindowManager $r2, $r5;
        android.view.View $r3, $r4;
        java.lang.String $r6, $r8;
        java.lang.Throwable $r7, $r9;

        r0 := @this: android.service.autofill.augmented.FillWindow;

        $z1 = <android.service.autofill.augmented.AugmentedAutofillService: boolean sDebug>;

        if $z1 == 0 goto label01;

        $r6 = <android.service.autofill.augmented.FillWindow: java.lang.String TAG>;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r6, "handleHide()");

     label01:
        r1 = r0.<android.service.autofill.augmented.FillWindow: java.lang.Object mLock>;

        entermonitor r1;

     label02:
        $r2 = r0.<android.service.autofill.augmented.FillWindow: android.view.WindowManager mWm>;

        if $r2 == null goto label08;

        $r3 = r0.<android.service.autofill.augmented.FillWindow: android.view.View mFillView>;

        if $r3 == null goto label08;

        z0 = r0.<android.service.autofill.augmented.FillWindow: boolean mShowing>;

     label03:
        if z0 == 0 goto label08;

     label04:
        $r5 = r0.<android.service.autofill.augmented.FillWindow: android.view.WindowManager mWm>;

        $r4 = r0.<android.service.autofill.augmented.FillWindow: android.view.View mFillView>;

        interfaceinvoke $r5.<android.view.WindowManager: void removeView(android.view.View)>($r4);

        r0.<android.service.autofill.augmented.FillWindow: boolean mShowing> = 0;

     label05:
        goto label08;

     label06:
        $r7 := @caughtexception;

     label07:
        $z2 = <android.service.autofill.augmented.AugmentedAutofillService: boolean sDebug>;

        if $z2 == 0 goto label08;

        $r8 = <android.service.autofill.augmented.FillWindow: java.lang.String TAG>;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r8, "Exception hiding window.");

     label08:
        exitmonitor r1;

     label09:
        return;

     label10:
        $r9 := @caughtexception;

     label11:
        exitmonitor r1;

     label12:
        throw $r9;

        catch java.lang.Throwable from label02 to label03 with label10;
        catch java.lang.IllegalStateException from label04 to label05 with label06;
        catch java.lang.Throwable from label04 to label05 with label10;
        catch java.lang.Throwable from label07 to label08 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
    }

    private void handleShow(android.view.WindowManager$LayoutParams)
    {
        android.service.autofill.augmented.FillWindow r0;
        java.lang.Object r1;
        java.lang.StringBuilder r2;
        boolean $z0, $z1, $z2, $z3;
        android.view.WindowManager $r3, $r5, $r7;
        int $i0, $i1;
        android.view.View $r4, $r6, r19;
        java.lang.String $r8, $r10, $r16, r22;
        java.lang.Throwable $r9, $r17;
        android.view.WindowManager$BadTokenException $r11;
        android.os.IBinder $r13;
        android.view.WindowManager$LayoutParams r18;

        r0 := @this: android.service.autofill.augmented.FillWindow;

        r18 := @parameter0: android.view.WindowManager$LayoutParams;

        $z0 = <android.service.autofill.augmented.AugmentedAutofillService: boolean sDebug>;

        if $z0 == 0 goto label01;

        $r8 = <android.service.autofill.augmented.FillWindow: java.lang.String TAG>;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r8, "handleShow()");

     label01:
        r1 = r0.<android.service.autofill.augmented.FillWindow: java.lang.Object mLock>;

        entermonitor r1;

     label02:
        $r3 = r0.<android.service.autofill.augmented.FillWindow: android.view.WindowManager mWm>;

        if $r3 == null goto label13;

        r19 = r0.<android.service.autofill.augmented.FillWindow: android.view.View mFillView>;

     label03:
        if r19 == null goto label13;

     label04:
        $i0 = r18.<android.view.WindowManager$LayoutParams: int flags>;

        $i1 = $i0 | 262144;

        r18.<android.view.WindowManager$LayoutParams: int flags> = $i1;

        $z1 = r0.<android.service.autofill.augmented.FillWindow: boolean mShowing>;

        if $z1 != 0 goto label06;

        $r7 = r0.<android.service.autofill.augmented.FillWindow: android.view.WindowManager mWm>;

        $r6 = r0.<android.service.autofill.augmented.FillWindow: android.view.View mFillView>;

        interfaceinvoke $r7.<android.view.WindowManager: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>($r6, r18);

        r0.<android.service.autofill.augmented.FillWindow: boolean mShowing> = 1;

     label05:
        goto label13;

     label06:
        $r5 = r0.<android.service.autofill.augmented.FillWindow: android.view.WindowManager mWm>;

        $r4 = r0.<android.service.autofill.augmented.FillWindow: android.view.View mFillView>;

        interfaceinvoke $r5.<android.view.WindowManager: void updateViewLayout(android.view.View,android.view.ViewGroup$LayoutParams)>($r4, r18);

     label07:
        goto label13;

     label08:
        $r9 := @caughtexception;

     label09:
        $z2 = <android.service.autofill.augmented.AugmentedAutofillService: boolean sDebug>;

        if $z2 == 0 goto label13;

        $r10 = <android.service.autofill.augmented.FillWindow: java.lang.String TAG>;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r10, "Exception showing window.");

     label10:
        goto label13;

     label11:
        $r11 := @caughtexception;

     label12:
        $z3 = <android.service.autofill.augmented.AugmentedAutofillService: boolean sDebug>;

        if $z3 == 0 goto label13;

        r22 = <android.service.autofill.augmented.FillWindow: java.lang.String TAG>;

        r2 = new java.lang.StringBuilder;

        specialinvoke r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Filed with token ");

        $r13 = r18.<android.view.WindowManager$LayoutParams: android.os.IBinder token>;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r13);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" gone.");

        $r16 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>(r22, $r16);

     label13:
        exitmonitor r1;

     label14:
        return;

     label15:
        $r17 := @caughtexception;

     label16:
        exitmonitor r1;

     label17:
        throw $r17;

        catch java.lang.Throwable from label02 to label03 with label15;
        catch android.view.WindowManager$BadTokenException from label04 to label05 with label11;
        catch java.lang.IllegalStateException from label04 to label05 with label08;
        catch java.lang.Throwable from label04 to label05 with label15;
        catch android.view.WindowManager$BadTokenException from label06 to label07 with label11;
        catch java.lang.IllegalStateException from label06 to label07 with label08;
        catch java.lang.Throwable from label06 to label07 with label15;
        catch java.lang.Throwable from label09 to label10 with label15;
        catch java.lang.Throwable from label12 to label13 with label15;
        catch java.lang.Throwable from label13 to label14 with label15;
        catch java.lang.Throwable from label16 to label17 with label15;
    }

    private void hide()
    {
        android.service.autofill.augmented.FillWindow r0;
        java.lang.Object r1;
        boolean z0, $z1;
        android.view.WindowManager $r2;
        android.view.View $r3;
        android.service.autofill.augmented.AugmentedAutofillService$AutofillProxy $r4, $r5;
        java.lang.String $r6, $r8;
        android.os.RemoteException $r7;
        java.lang.Throwable $r9;
        java.lang.IllegalStateException r11;

        r0 := @this: android.service.autofill.augmented.FillWindow;

        $z1 = <android.service.autofill.augmented.AugmentedAutofillService: boolean sDebug>;

        if $z1 == 0 goto label01;

        $r6 = <android.service.autofill.augmented.FillWindow: java.lang.String TAG>;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r6, "hide()");

     label01:
        r1 = r0.<android.service.autofill.augmented.FillWindow: java.lang.Object mLock>;

        entermonitor r1;

     label02:
        specialinvoke r0.<android.service.autofill.augmented.FillWindow: void checkNotDestroyedLocked()>();

        $r2 = r0.<android.service.autofill.augmented.FillWindow: android.view.WindowManager mWm>;

        if $r2 == null goto label10;

        $r3 = r0.<android.service.autofill.augmented.FillWindow: android.view.View mFillView>;

        if $r3 == null goto label10;

        $r4 = r0.<android.service.autofill.augmented.FillWindow: android.service.autofill.augmented.AugmentedAutofillService$AutofillProxy mProxy>;

        if $r4 == null goto label08;

        z0 = r0.<android.service.autofill.augmented.FillWindow: boolean mShowing>;

     label03:
        if z0 == 0 goto label08;

     label04:
        $r5 = r0.<android.service.autofill.augmented.FillWindow: android.service.autofill.augmented.AugmentedAutofillService$AutofillProxy mProxy>;

        virtualinvoke $r5.<android.service.autofill.augmented.AugmentedAutofillService$AutofillProxy: void requestHideFillUi()>();

     label05:
        goto label08;

     label06:
        $r7 := @caughtexception;

     label07:
        $r8 = <android.service.autofill.augmented.FillWindow: java.lang.String TAG>;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>($r8, "Error requesting to hide fill window", $r7);

     label08:
        exitmonitor r1;

     label09:
        return;

     label10:
        r11 = new java.lang.IllegalStateException;

        specialinvoke r11.<java.lang.IllegalStateException: void <init>(java.lang.String)>("update() not called yet, or already destroyed()");

        throw r11;

     label11:
        $r9 := @caughtexception;

     label12:
        exitmonitor r1;

     label13:
        throw $r9;

        catch java.lang.Throwable from label02 to label03 with label11;
        catch android.os.RemoteException from label04 to label05 with label06;
        catch java.lang.Throwable from label04 to label05 with label11;
        catch java.lang.Throwable from label07 to label08 with label11;
        catch java.lang.Throwable from label08 to label09 with label11;
        catch java.lang.Throwable from label10 to label11 with label11;
        catch java.lang.Throwable from label12 to label13 with label11;
    }

    public void close()
    {
        android.service.autofill.augmented.FillWindow r0;

        r0 := @this: android.service.autofill.augmented.FillWindow;

        virtualinvoke r0.<android.service.autofill.augmented.FillWindow: void destroy()>();

        return;
    }

    public void destroy()
    {
        android.service.autofill.augmented.FillWindow r0;
        boolean $z0, $z1, $z2, $z3, $z4;
        dalvik.system.CloseGuard $r1;
        android.view.View $r2, $r10;
        android.service.autofill.augmented.AugmentedAutofillService$AutofillProxy $r3;
        java.lang.StringBuilder $r4;
        java.lang.String $r12, r14;
        java.lang.Throwable $r13;
        java.lang.Object r16;

        r0 := @this: android.service.autofill.augmented.FillWindow;

        $z0 = <android.service.autofill.augmented.AugmentedAutofillService: boolean sDebug>;

        if $z0 == 0 goto label1;

        r14 = <android.service.autofill.augmented.FillWindow: java.lang.String TAG>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("destroy(): mDestroyed=");

        $z3 = r0.<android.service.autofill.augmented.FillWindow: boolean mDestroyed>;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z3);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mShowing=");

        $z4 = r0.<android.service.autofill.augmented.FillWindow: boolean mShowing>;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z4);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mFillView=");

        $r10 = r0.<android.service.autofill.augmented.FillWindow: android.view.View mFillView>;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10);

        $r12 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>(r14, $r12);

     label1:
        r16 = r0.<android.service.autofill.augmented.FillWindow: java.lang.Object mLock>;

        entermonitor r16;

     label2:
        $z1 = r0.<android.service.autofill.augmented.FillWindow: boolean mDestroyed>;

        if $z1 == 0 goto label4;

        exitmonitor r16;

     label3:
        return;

     label4:
        $z2 = r0.<android.service.autofill.augmented.FillWindow: boolean mUpdateCalled>;

        if $z2 == 0 goto label5;

        $r2 = r0.<android.service.autofill.augmented.FillWindow: android.view.View mFillView>;

        virtualinvoke $r2.<android.view.View: void setOnClickListener(android.view.View$OnClickListener)>(null);

        specialinvoke r0.<android.service.autofill.augmented.FillWindow: void hide()>();

        $r3 = r0.<android.service.autofill.augmented.FillWindow: android.service.autofill.augmented.AugmentedAutofillService$AutofillProxy mProxy>;

        virtualinvoke $r3.<android.service.autofill.augmented.AugmentedAutofillService$AutofillProxy: void logEvent(int)>(3);

     label5:
        r0.<android.service.autofill.augmented.FillWindow: boolean mDestroyed> = 1;

        $r1 = r0.<android.service.autofill.augmented.FillWindow: dalvik.system.CloseGuard mCloseGuard>;

        virtualinvoke $r1.<dalvik.system.CloseGuard: void close()>();

        exitmonitor r16;

     label6:
        return;

     label7:
        $r13 := @caughtexception;

     label8:
        exitmonitor r16;

     label9:
        throw $r13;

        catch java.lang.Throwable from label2 to label3 with label7;
        catch java.lang.Throwable from label4 to label5 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public void dump(java.lang.String, java.io.PrintWriter)
    {
        android.service.autofill.augmented.FillWindow r0;
        java.io.PrintWriter r1;
        boolean $z0, $z1, $z2;
        android.view.View $r2, $r3;
        android.graphics.Rect $r4;
        android.view.WindowManager $r5;
        java.lang.Throwable $r6;
        java.lang.String r7, r8;

        r0 := @this: android.service.autofill.augmented.FillWindow;

        r7 := @parameter0: java.lang.String;

        r1 := @parameter1: java.io.PrintWriter;

        entermonitor r0;

     label1:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r7);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("destroyed: ");

        $z0 = r0.<android.service.autofill.augmented.FillWindow: boolean mDestroyed>;

        virtualinvoke r1.<java.io.PrintWriter: void println(boolean)>($z0);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r7);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("updateCalled: ");

        $z1 = r0.<android.service.autofill.augmented.FillWindow: boolean mUpdateCalled>;

        virtualinvoke r1.<java.io.PrintWriter: void println(boolean)>($z1);

        $r2 = r0.<android.service.autofill.augmented.FillWindow: android.view.View mFillView>;

        if $r2 == null goto label5;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r7);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("fill window: ");

        $z2 = r0.<android.service.autofill.augmented.FillWindow: boolean mShowing>;

        if $z2 == 0 goto label3;

     label2:
        r8 = "shown";

        goto label4;

     label3:
        r8 = "hidden";

     label4:
        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>(r8);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r7);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("fill view: ");

        $r3 = r0.<android.service.autofill.augmented.FillWindow: android.view.View mFillView>;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.Object)>($r3);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r7);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("mBounds: ");

        $r4 = r0.<android.service.autofill.augmented.FillWindow: android.graphics.Rect mBounds>;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.Object)>($r4);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r7);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("mWm: ");

        $r5 = r0.<android.service.autofill.augmented.FillWindow: android.view.WindowManager mWm>;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.Object)>($r5);

     label5:
        exitmonitor r0;

     label6:
        return;

     label7:
        $r6 := @caughtexception;

     label8:
        exitmonitor r0;

     label9:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label4 to label5 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    protected void finalize() throws java.lang.Throwable
    {
        android.service.autofill.augmented.FillWindow r0;
        dalvik.system.CloseGuard $r2;
        java.lang.Throwable $r3;

        r0 := @this: android.service.autofill.augmented.FillWindow;

     label1:
        $r2 = r0.<android.service.autofill.augmented.FillWindow: dalvik.system.CloseGuard mCloseGuard>;

        virtualinvoke $r2.<dalvik.system.CloseGuard: void warnIfOpen()>();

        virtualinvoke r0.<android.service.autofill.augmented.FillWindow: void destroy()>();

     label2:
        specialinvoke r0.<java.lang.Object: void finalize()>();

        return;

     label3:
        $r3 := @caughtexception;

        specialinvoke r0.<java.lang.Object: void finalize()>();

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public boolean lambda$update$0$FillWindow(android.view.View, android.view.MotionEvent)
    {
        android.service.autofill.augmented.FillWindow r0;
        android.view.View r1;
        android.view.MotionEvent r2;
        int $i0;
        boolean $z0;
        java.lang.String $r3;

        r0 := @this: android.service.autofill.augmented.FillWindow;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.view.MotionEvent;

        $i0 = virtualinvoke r2.<android.view.MotionEvent: int getAction()>();

        if $i0 != 4 goto label2;

        $z0 = <android.service.autofill.augmented.AugmentedAutofillService: boolean sVerbose>;

        if $z0 == 0 goto label1;

        $r3 = <android.service.autofill.augmented.FillWindow: java.lang.String TAG>;

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>($r3, "Outside touch detected, hiding the window");

     label1:
        specialinvoke r0.<android.service.autofill.augmented.FillWindow: void hide()>();

     label2:
        return 0;
    }

    void show()
    {
        android.service.autofill.augmented.FillWindow r0;
        java.lang.Object r1;
        int i0, i1, i2, i3, $i4, $i5;
        android.service.autofill.augmented.FillWindow$FillWindowPresenter r2;
        boolean $z0;
        android.view.WindowManager $r3;
        android.view.View $r4;
        android.graphics.Rect $r5, $r6, $r7, $r8;
        android.service.autofill.augmented.AugmentedAutofillService$AutofillProxy $r9, r14, r15;
        java.lang.String $r10, $r13;
        java.lang.Throwable $r11;
        android.os.RemoteException $r12;
        java.lang.IllegalStateException r17;

        r0 := @this: android.service.autofill.augmented.FillWindow;

        $z0 = <android.service.autofill.augmented.AugmentedAutofillService: boolean sDebug>;

        if $z0 == 0 goto label01;

        $r10 = <android.service.autofill.augmented.FillWindow: java.lang.String TAG>;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r10, "show()");

     label01:
        r1 = r0.<android.service.autofill.augmented.FillWindow: java.lang.Object mLock>;

        entermonitor r1;

     label02:
        specialinvoke r0.<android.service.autofill.augmented.FillWindow: void checkNotDestroyedLocked()>();

        $r3 = r0.<android.service.autofill.augmented.FillWindow: android.view.WindowManager mWm>;

        if $r3 == null goto label11;

        $r4 = r0.<android.service.autofill.augmented.FillWindow: android.view.View mFillView>;

        if $r4 == null goto label11;

        r14 = r0.<android.service.autofill.augmented.FillWindow: android.service.autofill.augmented.AugmentedAutofillService$AutofillProxy mProxy>;

     label03:
        if r14 == null goto label09;

     label04:
        r15 = r0.<android.service.autofill.augmented.FillWindow: android.service.autofill.augmented.AugmentedAutofillService$AutofillProxy mProxy>;

        $r5 = r0.<android.service.autofill.augmented.FillWindow: android.graphics.Rect mBounds>;

        i0 = $r5.<android.graphics.Rect: int right>;

        $r6 = r0.<android.service.autofill.augmented.FillWindow: android.graphics.Rect mBounds>;

        i1 = $r6.<android.graphics.Rect: int left>;

        $r7 = r0.<android.service.autofill.augmented.FillWindow: android.graphics.Rect mBounds>;

        i2 = $r7.<android.graphics.Rect: int bottom>;

        $r8 = r0.<android.service.autofill.augmented.FillWindow: android.graphics.Rect mBounds>;

        i3 = $r8.<android.graphics.Rect: int top>;

        r2 = new android.service.autofill.augmented.FillWindow$FillWindowPresenter;

        specialinvoke r2.<android.service.autofill.augmented.FillWindow$FillWindowPresenter: void <init>(android.service.autofill.augmented.FillWindow)>(r0);

        $i5 = i0 - i1;

        $i4 = i2 - i3;

        virtualinvoke r15.<android.service.autofill.augmented.AugmentedAutofillService$AutofillProxy: void requestShowFillUi(int,int,android.graphics.Rect,android.view.autofill.IAutofillWindowPresenter)>($i5, $i4, null, r2);

     label05:
        goto label08;

     label06:
        $r12 := @caughtexception;

     label07:
        $r13 = <android.service.autofill.augmented.FillWindow: java.lang.String TAG>;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>($r13, "Error requesting to show fill window", $r12);

     label08:
        $r9 = r0.<android.service.autofill.augmented.FillWindow: android.service.autofill.augmented.AugmentedAutofillService$AutofillProxy mProxy>;

        virtualinvoke $r9.<android.service.autofill.augmented.AugmentedAutofillService$AutofillProxy: void logEvent(int)>(2);

     label09:
        exitmonitor r1;

     label10:
        return;

     label11:
        r17 = new java.lang.IllegalStateException;

        specialinvoke r17.<java.lang.IllegalStateException: void <init>(java.lang.String)>("update() not called yet, or already destroyed()");

        throw r17;

     label12:
        $r11 := @caughtexception;

     label13:
        exitmonitor r1;

     label14:
        throw $r11;

        catch java.lang.Throwable from label02 to label03 with label12;
        catch android.os.RemoteException from label04 to label05 with label06;
        catch java.lang.Throwable from label04 to label05 with label12;
        catch java.lang.Throwable from label07 to label08 with label12;
        catch java.lang.Throwable from label08 to label09 with label12;
        catch java.lang.Throwable from label09 to label10 with label12;
        catch java.lang.Throwable from label11 to label12 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
    }

    public boolean update(android.service.autofill.augmented.PresentationParams$Area, android.view.View, long)
    {
        android.service.autofill.augmented.FillWindow r0;
        android.view.View r1;
        long l0;
        boolean $z0, $z1;
        android.service.autofill.augmented.AugmentedAutofillService$AutofillProxy $r3, $r6, $r8, $r13;
        android.graphics.Rect $r7, $r12, r34;
        android.content.Context $r9;
        java.lang.Object $r10, r32;
        android.view.WindowManager $r11;
        java.lang.String $r18, $r19, $r20, $r26, r29, r35;
        java.lang.StringBuilder $r21, r36;
        java.lang.Throwable $r27;
        android.service.autofill.augmented.PresentationParams$Area r28;
        android.service.autofill.augmented.PresentationParams$SystemPopupPresentationParams r31;
        android.service.autofill.augmented._$$Lambda$FillWindow$j5yljDJ4VfFL37B_iWRonGGOKN4 r33;

        r0 := @this: android.service.autofill.augmented.FillWindow;

        r28 := @parameter0: android.service.autofill.augmented.PresentationParams$Area;

        r1 := @parameter1: android.view.View;

        l0 := @parameter2: long;

        $z0 = <android.service.autofill.augmented.AugmentedAutofillService: boolean sDebug>;

        if $z0 == 0 goto label1;

        r29 = <android.service.autofill.augmented.FillWindow: java.lang.String TAG>;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Updating ");

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r28);

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" + with ");

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r26 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>(r29, $r26);

     label1:
        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r28);

        $r3 = r28.<android.service.autofill.augmented.PresentationParams$Area: android.service.autofill.augmented.AugmentedAutofillService$AutofillProxy proxy>;

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r3);

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r6 = r28.<android.service.autofill.augmented.PresentationParams$Area: android.service.autofill.augmented.AugmentedAutofillService$AutofillProxy proxy>;

        r31 = virtualinvoke $r6.<android.service.autofill.augmented.AugmentedAutofillService$AutofillProxy: android.service.autofill.augmented.PresentationParams$SystemPopupPresentationParams getSmartSuggestionParams()>();

        if r31 != null goto label2;

        $r20 = <android.service.autofill.augmented.FillWindow: java.lang.String TAG>;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r20, "No SmartSuggestionParams");

        return 0;

     label2:
        $r7 = virtualinvoke r28.<android.service.autofill.augmented.PresentationParams$Area: android.graphics.Rect getBounds()>();

        if $r7 != null goto label3;

        $r19 = <android.service.autofill.augmented.FillWindow: java.lang.String TAG>;

        staticinvoke <android.util.Log: int wtf(java.lang.String,java.lang.String)>($r19, "No Rect on SmartSuggestionParams");

        return 0;

     label3:
        r32 = r0.<android.service.autofill.augmented.FillWindow: java.lang.Object mLock>;

        entermonitor r32;

     label4:
        specialinvoke r0.<android.service.autofill.augmented.FillWindow: void checkNotDestroyedLocked()>();

        $r8 = r28.<android.service.autofill.augmented.PresentationParams$Area: android.service.autofill.augmented.AugmentedAutofillService$AutofillProxy proxy>;

        r0.<android.service.autofill.augmented.FillWindow: android.service.autofill.augmented.AugmentedAutofillService$AutofillProxy mProxy> = $r8;

        $r9 = virtualinvoke r1.<android.view.View: android.content.Context getContext()>();

        $r10 = virtualinvoke $r9.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/view/WindowManager;");

        $r11 = (android.view.WindowManager) $r10;

        r0.<android.service.autofill.augmented.FillWindow: android.view.WindowManager mWm> = $r11;

        r0.<android.service.autofill.augmented.FillWindow: android.view.View mFillView> = r1;

        r33 = new android.service.autofill.augmented._$$Lambda$FillWindow$j5yljDJ4VfFL37B_iWRonGGOKN4;

        specialinvoke r33.<android.service.autofill.augmented._$$Lambda$FillWindow$j5yljDJ4VfFL37B_iWRonGGOKN4: void <init>(android.service.autofill.augmented.FillWindow)>(r0);

        virtualinvoke r1.<android.view.View: void setOnTouchListener(android.view.View$OnTouchListener)>(r33);

        r0.<android.service.autofill.augmented.FillWindow: boolean mShowing> = 0;

        r34 = new android.graphics.Rect;

        $r12 = virtualinvoke r28.<android.service.autofill.augmented.PresentationParams$Area: android.graphics.Rect getBounds()>();

        specialinvoke r34.<android.graphics.Rect: void <init>(android.graphics.Rect)>($r12);

        r0.<android.service.autofill.augmented.FillWindow: android.graphics.Rect mBounds> = r34;

        $z1 = <android.service.autofill.augmented.AugmentedAutofillService: boolean sDebug>;

        if $z1 == 0 goto label5;

        r35 = <android.service.autofill.augmented.FillWindow: java.lang.String TAG>;

        r36 = new java.lang.StringBuilder;

        specialinvoke r36.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Created FillWindow: params= ");

        virtualinvoke r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r31);

        virtualinvoke r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" view=");

        virtualinvoke r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r18 = virtualinvoke r36.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>(r35, $r18);

     label5:
        r0.<android.service.autofill.augmented.FillWindow: boolean mUpdateCalled> = 1;

        r0.<android.service.autofill.augmented.FillWindow: boolean mDestroyed> = 0;

        $r13 = r0.<android.service.autofill.augmented.FillWindow: android.service.autofill.augmented.AugmentedAutofillService$AutofillProxy mProxy>;

        virtualinvoke $r13.<android.service.autofill.augmented.AugmentedAutofillService$AutofillProxy: void setFillWindow(android.service.autofill.augmented.FillWindow)>(r0);

        exitmonitor r32;

     label6:
        return 1;

     label7:
        $r27 := @caughtexception;

     label8:
        exitmonitor r32;

     label9:
        throw $r27;

        catch java.lang.Throwable from label4 to label5 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }
}
