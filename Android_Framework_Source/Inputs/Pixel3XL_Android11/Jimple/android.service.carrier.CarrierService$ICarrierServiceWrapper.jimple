public class android.service.carrier.CarrierService$ICarrierServiceWrapper extends android.service.carrier.ICarrierService$Stub
{
    public static final java.lang.String KEY_CONFIG_BUNDLE;
    public static final int RESULT_ERROR;
    public static final int RESULT_OK;
    final android.service.carrier.CarrierService this$0;

    public void <init>(android.service.carrier.CarrierService)
    {
        android.service.carrier.CarrierService$ICarrierServiceWrapper r0;
        android.service.carrier.CarrierService r1;

        r0 := @this: android.service.carrier.CarrierService$ICarrierServiceWrapper;

        r1 := @parameter0: android.service.carrier.CarrierService;

        r0.<android.service.carrier.CarrierService$ICarrierServiceWrapper: android.service.carrier.CarrierService this$0> = r1;

        specialinvoke r0.<android.service.carrier.ICarrierService$Stub: void <init>()>();

        return;
    }

    protected void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        android.service.carrier.CarrierService$ICarrierServiceWrapper r0;
        java.io.FileDescriptor r1;
        java.io.PrintWriter r2;
        java.lang.String[] r3;
        android.service.carrier.CarrierService $r4;

        r0 := @this: android.service.carrier.CarrierService$ICarrierServiceWrapper;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: java.io.PrintWriter;

        r3 := @parameter2: java.lang.String[];

        $r4 = r0.<android.service.carrier.CarrierService$ICarrierServiceWrapper: android.service.carrier.CarrierService this$0>;

        staticinvoke <android.service.carrier.CarrierService: void access$000(android.service.carrier.CarrierService,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>($r4, r1, r2, r3);

        return;
    }

    public void getCarrierConfig(android.service.carrier.CarrierIdentifier, android.os.ResultReceiver)
    {
        android.service.carrier.CarrierService$ICarrierServiceWrapper r0;
        android.os.ResultReceiver r1;
        android.service.carrier.CarrierService $r2;
        android.os.PersistableBundle $r3;
        java.lang.Exception $r4;
        java.lang.StringBuilder $r5;
        java.lang.String $r7, $r9;
        android.service.carrier.CarrierIdentifier r10;
        android.os.Bundle r11;

        r0 := @this: android.service.carrier.CarrierService$ICarrierServiceWrapper;

        r10 := @parameter0: android.service.carrier.CarrierIdentifier;

        r1 := @parameter1: android.os.ResultReceiver;

     label1:
        r11 = new android.os.Bundle;

        specialinvoke r11.<android.os.Bundle: void <init>()>();

        $r2 = r0.<android.service.carrier.CarrierService$ICarrierServiceWrapper: android.service.carrier.CarrierService this$0>;

        $r3 = virtualinvoke $r2.<android.service.carrier.CarrierService: android.os.PersistableBundle onLoadConfig(android.service.carrier.CarrierIdentifier)>(r10);

        virtualinvoke r11.<android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)>("config_bundle", $r3);

        virtualinvoke r1.<android.os.ResultReceiver: void send(int,android.os.Bundle)>(0, r11);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error in onLoadConfig: ");

        $r7 = virtualinvoke $r4.<java.lang.Exception: java.lang.String getMessage()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("CarrierService", $r9, $r4);

        virtualinvoke r1.<android.os.ResultReceiver: void send(int,android.os.Bundle)>(1, null);

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public static void <clinit>()
    {
        <android.service.carrier.CarrierService$ICarrierServiceWrapper: int RESULT_OK> = 0;

        <android.service.carrier.CarrierService$ICarrierServiceWrapper: int RESULT_ERROR> = 1;

        <android.service.carrier.CarrierService$ICarrierServiceWrapper: java.lang.String KEY_CONFIG_BUNDLE> = "config_bundle";

        return;
    }
}
