class android.service.contentcapture.ContentCaptureService$3 extends java.lang.Object implements android.service.contentcapture.DataShareCallback
{
    final android.service.contentcapture.ContentCaptureService this$0;
    final android.service.contentcapture.IDataShareCallback val$callback;

    void <init>(android.service.contentcapture.ContentCaptureService, android.service.contentcapture.IDataShareCallback)
    {
        android.service.contentcapture.ContentCaptureService$3 r0;
        android.service.contentcapture.ContentCaptureService r1;
        android.service.contentcapture.IDataShareCallback r2;

        r0 := @this: android.service.contentcapture.ContentCaptureService$3;

        r1 := @parameter0: android.service.contentcapture.ContentCaptureService;

        r2 := @parameter1: android.service.contentcapture.IDataShareCallback;

        r0.<android.service.contentcapture.ContentCaptureService$3: android.service.contentcapture.ContentCaptureService this$0> = r1;

        r0.<android.service.contentcapture.ContentCaptureService$3: android.service.contentcapture.IDataShareCallback val$callback> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onAccept(java.util.concurrent.Executor, android.service.contentcapture.DataShareReadAdapter)
    {
        android.service.contentcapture.ContentCaptureService$3 r0;
        android.service.contentcapture.DataShareReadAdapter r1;
        android.service.contentcapture.ContentCaptureService$DataShareReadAdapterDelegate $r4;
        android.service.contentcapture.ContentCaptureService $r5;
        android.service.contentcapture.ContentCaptureService$LocalDataShareAdapterResourceManager $r6;
        android.service.contentcapture.IDataShareCallback $r7;
        android.os.RemoteException $r8;
        java.lang.String $r9;
        java.util.concurrent.Executor r10;

        r0 := @this: android.service.contentcapture.ContentCaptureService$3;

        r10 := @parameter0: java.util.concurrent.Executor;

        r1 := @parameter1: android.service.contentcapture.DataShareReadAdapter;

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r10);

        $r4 = new android.service.contentcapture.ContentCaptureService$DataShareReadAdapterDelegate;

        $r5 = r0.<android.service.contentcapture.ContentCaptureService$3: android.service.contentcapture.ContentCaptureService this$0>;

        $r6 = staticinvoke <android.service.contentcapture.ContentCaptureService: android.service.contentcapture.ContentCaptureService$LocalDataShareAdapterResourceManager access$1100(android.service.contentcapture.ContentCaptureService)>($r5);

        specialinvoke $r4.<android.service.contentcapture.ContentCaptureService$DataShareReadAdapterDelegate: void <init>(java.util.concurrent.Executor,android.service.contentcapture.DataShareReadAdapter,android.service.contentcapture.ContentCaptureService$LocalDataShareAdapterResourceManager)>(r10, r1, $r6);

     label1:
        $r7 = r0.<android.service.contentcapture.ContentCaptureService$3: android.service.contentcapture.IDataShareCallback val$callback>;

        interfaceinvoke $r7.<android.service.contentcapture.IDataShareCallback: void accept(android.service.contentcapture.IDataShareReadAdapter)>($r4);

     label2:
        goto label4;

     label3:
        $r8 := @caughtexception;

        $r9 = staticinvoke <android.service.contentcapture.ContentCaptureService: java.lang.String access$1200()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r9, "Failed to accept data sharing", $r8);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void onReject()
    {
        android.service.contentcapture.ContentCaptureService$3 r0;
        android.service.contentcapture.IDataShareCallback $r2;
        android.os.RemoteException $r3;
        java.lang.String $r4;

        r0 := @this: android.service.contentcapture.ContentCaptureService$3;

     label1:
        $r2 = r0.<android.service.contentcapture.ContentCaptureService$3: android.service.contentcapture.IDataShareCallback val$callback>;

        interfaceinvoke $r2.<android.service.contentcapture.IDataShareCallback: void reject()>();

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        $r4 = staticinvoke <android.service.contentcapture.ContentCaptureService: java.lang.String access$1200()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r4, "Failed to reject data sharing", $r3);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }
}
