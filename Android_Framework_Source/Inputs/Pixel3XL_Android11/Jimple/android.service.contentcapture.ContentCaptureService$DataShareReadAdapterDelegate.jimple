class android.service.contentcapture.ContentCaptureService$DataShareReadAdapterDelegate extends android.service.contentcapture.IDataShareReadAdapter$Stub
{
    private final java.lang.Object mLock;
    private final java.lang.ref.WeakReference mResourceManagerReference;

    void <init>(java.util.concurrent.Executor, android.service.contentcapture.DataShareReadAdapter, android.service.contentcapture.ContentCaptureService$LocalDataShareAdapterResourceManager)
    {
        android.service.contentcapture.ContentCaptureService$DataShareReadAdapterDelegate r0;
        java.util.concurrent.Executor r1;
        android.service.contentcapture.DataShareReadAdapter r2;
        android.service.contentcapture.ContentCaptureService$LocalDataShareAdapterResourceManager r3;
        java.lang.Object $r4;
        java.lang.ref.WeakReference $r8;

        r0 := @this: android.service.contentcapture.ContentCaptureService$DataShareReadAdapterDelegate;

        r1 := @parameter0: java.util.concurrent.Executor;

        r2 := @parameter1: android.service.contentcapture.DataShareReadAdapter;

        r3 := @parameter2: android.service.contentcapture.ContentCaptureService$LocalDataShareAdapterResourceManager;

        specialinvoke r0.<android.service.contentcapture.IDataShareReadAdapter$Stub: void <init>()>();

        $r4 = new java.lang.Object;

        specialinvoke $r4.<java.lang.Object: void <init>()>();

        r0.<android.service.contentcapture.ContentCaptureService$DataShareReadAdapterDelegate: java.lang.Object mLock> = $r4;

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r2);

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r3);

        virtualinvoke r3.<android.service.contentcapture.ContentCaptureService$LocalDataShareAdapterResourceManager: void initializeForDelegate(android.service.contentcapture.ContentCaptureService$DataShareReadAdapterDelegate,android.service.contentcapture.DataShareReadAdapter,java.util.concurrent.Executor)>(r0, r2, r1);

        $r8 = new java.lang.ref.WeakReference;

        specialinvoke $r8.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>(r3);

        r0.<android.service.contentcapture.ContentCaptureService$DataShareReadAdapterDelegate: java.lang.ref.WeakReference mResourceManagerReference> = $r8;

        return;
    }

    private void clearHardReferences()
    {
        android.service.contentcapture.ContentCaptureService$DataShareReadAdapterDelegate r0;
        android.service.contentcapture.ContentCaptureService$LocalDataShareAdapterResourceManager r1;
        java.lang.ref.WeakReference $r2;
        java.lang.Object $r3;
        java.lang.String $r4;

        r0 := @this: android.service.contentcapture.ContentCaptureService$DataShareReadAdapterDelegate;

        $r2 = r0.<android.service.contentcapture.ContentCaptureService$DataShareReadAdapterDelegate: java.lang.ref.WeakReference mResourceManagerReference>;

        $r3 = virtualinvoke $r2.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r1 = (android.service.contentcapture.ContentCaptureService$LocalDataShareAdapterResourceManager) $r3;

        if r1 != null goto label1;

        $r4 = staticinvoke <android.service.contentcapture.ContentCaptureService: java.lang.String access$1200()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>($r4, "Can\'t clear references, resource manager has been GC\'ed");

        return;

     label1:
        virtualinvoke r1.<android.service.contentcapture.ContentCaptureService$LocalDataShareAdapterResourceManager: void clearHardReferences(android.service.contentcapture.ContentCaptureService$DataShareReadAdapterDelegate)>(r0);

        return;
    }

    private void executeAdapterMethodLocked(java.util.function.Consumer, java.lang.String)
    {
        android.service.contentcapture.ContentCaptureService$DataShareReadAdapterDelegate r0;
        long l0;
        java.lang.ref.WeakReference $r1;
        java.lang.Object $r2;
        java.lang.StringBuilder $r3, $r8;
        java.lang.String $r7, $r12, r15, r17, r23;
        java.lang.Throwable $r13;
        java.util.function.Consumer r14;
        android.service.contentcapture.ContentCaptureService$LocalDataShareAdapterResourceManager r16;
        android.service.contentcapture.DataShareReadAdapter r19;
        java.util.concurrent.Executor r20;
        android.service.contentcapture._$$Lambda$ContentCaptureService$DataShareReadAdapterDelegate$RLJmZHFfMn__QO6_Wcm57K0fhj8 r21;

        r0 := @this: android.service.contentcapture.ContentCaptureService$DataShareReadAdapterDelegate;

        r14 := @parameter0: java.util.function.Consumer;

        r15 := @parameter1: java.lang.String;

        $r1 = r0.<android.service.contentcapture.ContentCaptureService$DataShareReadAdapterDelegate: java.lang.ref.WeakReference mResourceManagerReference>;

        $r2 = virtualinvoke $r1.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r16 = (android.service.contentcapture.ContentCaptureService$LocalDataShareAdapterResourceManager) $r2;

        if r16 != null goto label1;

        r17 = staticinvoke <android.service.contentcapture.ContentCaptureService: java.lang.String access$1200()>();

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t execute ");

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r15);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(), resource manager has been GC\'ed");

        $r12 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>(r17, $r12);

        return;

     label1:
        r19 = virtualinvoke r16.<android.service.contentcapture.ContentCaptureService$LocalDataShareAdapterResourceManager: android.service.contentcapture.DataShareReadAdapter getAdapter(android.service.contentcapture.ContentCaptureService$DataShareReadAdapterDelegate)>(r0);

        r20 = virtualinvoke r16.<android.service.contentcapture.ContentCaptureService$LocalDataShareAdapterResourceManager: java.util.concurrent.Executor getExecutor(android.service.contentcapture.ContentCaptureService$DataShareReadAdapterDelegate)>(r0);

        if r19 == null goto label6;

        if r20 != null goto label2;

        goto label6;

     label2:
        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label3:
        r21 = new android.service.contentcapture._$$Lambda$ContentCaptureService$DataShareReadAdapterDelegate$RLJmZHFfMn__QO6_Wcm57K0fhj8;

        specialinvoke r21.<android.service.contentcapture._$$Lambda$ContentCaptureService$DataShareReadAdapterDelegate$RLJmZHFfMn__QO6_Wcm57K0fhj8: void <init>(java.util.function.Consumer,android.service.contentcapture.DataShareReadAdapter)>(r14, r19);

        interfaceinvoke r20.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>(r21);

     label4:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return;

     label5:
        $r13 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r13;

     label6:
        r23 = staticinvoke <android.service.contentcapture.ContentCaptureService: java.lang.String access$1200()>();

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t execute ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r15);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(), references are null");

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>(r23, $r7);

        return;

        catch java.lang.Throwable from label3 to label4 with label5;
    }

    static void lambda$error$1(int, android.service.contentcapture.DataShareReadAdapter)
    {
        int i0;
        android.service.contentcapture.DataShareReadAdapter r0;

        i0 := @parameter0: int;

        r0 := @parameter1: android.service.contentcapture.DataShareReadAdapter;

        interfaceinvoke r0.<android.service.contentcapture.DataShareReadAdapter: void onError(int)>(i0);

        return;
    }

    static void lambda$executeAdapterMethodLocked$2(java.util.function.Consumer, android.service.contentcapture.DataShareReadAdapter)
    {
        java.util.function.Consumer r0;
        android.service.contentcapture.DataShareReadAdapter r1;

        r0 := @parameter0: java.util.function.Consumer;

        r1 := @parameter1: android.service.contentcapture.DataShareReadAdapter;

        interfaceinvoke r0.<java.util.function.Consumer: void accept(java.lang.Object)>(r1);

        return;
    }

    static void lambda$start$0(android.os.ParcelFileDescriptor, android.service.contentcapture.DataShareReadAdapter)
    {
        android.os.ParcelFileDescriptor r0;
        android.service.contentcapture.DataShareReadAdapter r1;

        r0 := @parameter0: android.os.ParcelFileDescriptor;

        r1 := @parameter1: android.service.contentcapture.DataShareReadAdapter;

        interfaceinvoke r1.<android.service.contentcapture.DataShareReadAdapter: void onStart(android.os.ParcelFileDescriptor)>(r0);

        return;
    }

    public void error(int) throws android.os.RemoteException
    {
        android.service.contentcapture.ContentCaptureService$DataShareReadAdapterDelegate r0;
        int i0;
        java.lang.Object r1;
        java.lang.Throwable $r2;
        android.service.contentcapture._$$Lambda$ContentCaptureService$DataShareReadAdapterDelegate$Wuxtt_LzmmvHteiH6rnqxFy6Gng r3;

        r0 := @this: android.service.contentcapture.ContentCaptureService$DataShareReadAdapterDelegate;

        i0 := @parameter0: int;

        r1 = r0.<android.service.contentcapture.ContentCaptureService$DataShareReadAdapterDelegate: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        r3 = new android.service.contentcapture._$$Lambda$ContentCaptureService$DataShareReadAdapterDelegate$Wuxtt_LzmmvHteiH6rnqxFy6Gng;

        specialinvoke r3.<android.service.contentcapture._$$Lambda$ContentCaptureService$DataShareReadAdapterDelegate$Wuxtt_LzmmvHteiH6rnqxFy6Gng: void <init>(int)>(i0);

        specialinvoke r0.<android.service.contentcapture.ContentCaptureService$DataShareReadAdapterDelegate: void executeAdapterMethodLocked(java.util.function.Consumer,java.lang.String)>(r3, "onError");

        specialinvoke r0.<android.service.contentcapture.ContentCaptureService$DataShareReadAdapterDelegate: void clearHardReferences()>();

        exitmonitor r1;

     label2:
        return;

     label3:
        $r2 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void finish() throws android.os.RemoteException
    {
        android.service.contentcapture.ContentCaptureService$DataShareReadAdapterDelegate r0;
        java.lang.Object r1;
        java.lang.Throwable $r3;

        r0 := @this: android.service.contentcapture.ContentCaptureService$DataShareReadAdapterDelegate;

        r1 = r0.<android.service.contentcapture.ContentCaptureService$DataShareReadAdapterDelegate: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        specialinvoke r0.<android.service.contentcapture.ContentCaptureService$DataShareReadAdapterDelegate: void clearHardReferences()>();

        exitmonitor r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void start(android.os.ParcelFileDescriptor) throws android.os.RemoteException
    {
        android.service.contentcapture.ContentCaptureService$DataShareReadAdapterDelegate r0;
        java.lang.Object r1;
        android.service.contentcapture._$$Lambda$ContentCaptureService$DataShareReadAdapterDelegate$uTXwFANtzR3r3Y1Oa0xuBOje1MM r2;
        java.lang.Throwable $r3;
        android.os.ParcelFileDescriptor r4;

        r0 := @this: android.service.contentcapture.ContentCaptureService$DataShareReadAdapterDelegate;

        r4 := @parameter0: android.os.ParcelFileDescriptor;

        r1 = r0.<android.service.contentcapture.ContentCaptureService$DataShareReadAdapterDelegate: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        r2 = new android.service.contentcapture._$$Lambda$ContentCaptureService$DataShareReadAdapterDelegate$uTXwFANtzR3r3Y1Oa0xuBOje1MM;

        specialinvoke r2.<android.service.contentcapture._$$Lambda$ContentCaptureService$DataShareReadAdapterDelegate$uTXwFANtzR3r3Y1Oa0xuBOje1MM: void <init>(android.os.ParcelFileDescriptor)>(r4);

        specialinvoke r0.<android.service.contentcapture.ContentCaptureService$DataShareReadAdapterDelegate: void executeAdapterMethodLocked(java.util.function.Consumer,java.lang.String)>(r2, "onStart");

        exitmonitor r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }
}
