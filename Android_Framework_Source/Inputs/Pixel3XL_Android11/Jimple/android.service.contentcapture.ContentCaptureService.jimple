public abstract class android.service.contentcapture.ContentCaptureService extends android.app.Service
{
    public static final java.lang.String SERVICE_INTERFACE;
    public static final java.lang.String SERVICE_META_DATA;
    private static final java.lang.String TAG;
    private android.service.contentcapture.IContentCaptureServiceCallback mCallback;
    private long mCallerMismatchTimeout;
    private final android.view.contentcapture.IContentCaptureDirectManager mClientInterface;
    private final android.service.contentcapture.ContentCaptureService$LocalDataShareAdapterResourceManager mDataShareAdapterResourceManager;
    private android.os.Handler mHandler;
    private long mLastCallerMismatchLog;
    private final android.service.contentcapture.IContentCaptureService mServerInterface;
    private final android.util.SparseIntArray mSessionUids;

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;

        <android.service.contentcapture.ContentCaptureService: java.lang.String SERVICE_META_DATA> = "android.content_capture";

        <android.service.contentcapture.ContentCaptureService: java.lang.String SERVICE_INTERFACE> = "android.service.contentcapture.ContentCaptureService";

        $r0 = class "Landroid/service/contentcapture/ContentCaptureService;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getSimpleName()>();

        <android.service.contentcapture.ContentCaptureService: java.lang.String TAG> = $r1;

        return;
    }

    public void <init>()
    {
        android.service.contentcapture.ContentCaptureService r0;
        android.service.contentcapture.ContentCaptureService$LocalDataShareAdapterResourceManager $r1;
        android.service.contentcapture.ContentCaptureService$1 $r2;
        android.service.contentcapture.ContentCaptureService$2 $r3;
        android.util.SparseIntArray $r4;

        r0 := @this: android.service.contentcapture.ContentCaptureService;

        specialinvoke r0.<android.app.Service: void <init>()>();

        $r1 = new android.service.contentcapture.ContentCaptureService$LocalDataShareAdapterResourceManager;

        specialinvoke $r1.<android.service.contentcapture.ContentCaptureService$LocalDataShareAdapterResourceManager: void <init>(android.service.contentcapture.ContentCaptureService$1)>(null);

        r0.<android.service.contentcapture.ContentCaptureService: android.service.contentcapture.ContentCaptureService$LocalDataShareAdapterResourceManager mDataShareAdapterResourceManager> = $r1;

        r0.<android.service.contentcapture.ContentCaptureService: long mCallerMismatchTimeout> = 1000L;

        $r2 = new android.service.contentcapture.ContentCaptureService$1;

        specialinvoke $r2.<android.service.contentcapture.ContentCaptureService$1: void <init>(android.service.contentcapture.ContentCaptureService)>(r0);

        r0.<android.service.contentcapture.ContentCaptureService: android.service.contentcapture.IContentCaptureService mServerInterface> = $r2;

        $r3 = new android.service.contentcapture.ContentCaptureService$2;

        specialinvoke $r3.<android.service.contentcapture.ContentCaptureService$2: void <init>(android.service.contentcapture.ContentCaptureService)>(r0);

        r0.<android.service.contentcapture.ContentCaptureService: android.view.contentcapture.IContentCaptureDirectManager mClientInterface> = $r3;

        $r4 = new android.util.SparseIntArray;

        specialinvoke $r4.<android.util.SparseIntArray: void <init>()>();

        r0.<android.service.contentcapture.ContentCaptureService: android.util.SparseIntArray mSessionUids> = $r4;

        return;
    }

    static android.os.Handler access$100(android.service.contentcapture.ContentCaptureService)
    {
        android.service.contentcapture.ContentCaptureService r0;
        android.os.Handler $r1;

        r0 := @parameter0: android.service.contentcapture.ContentCaptureService;

        $r1 = r0.<android.service.contentcapture.ContentCaptureService: android.os.Handler mHandler>;

        return $r1;
    }

    static void access$1000(android.service.contentcapture.ContentCaptureService, int, android.content.pm.ParceledListSlice, int, android.content.ContentCaptureOptions)
    {
        android.service.contentcapture.ContentCaptureService r0;
        int i0, i1;
        android.content.pm.ParceledListSlice r1;
        android.content.ContentCaptureOptions r2;

        r0 := @parameter0: android.service.contentcapture.ContentCaptureService;

        i0 := @parameter1: int;

        r1 := @parameter2: android.content.pm.ParceledListSlice;

        i1 := @parameter3: int;

        r2 := @parameter4: android.content.ContentCaptureOptions;

        specialinvoke r0.<android.service.contentcapture.ContentCaptureService: void handleSendEvents(int,android.content.pm.ParceledListSlice,int,android.content.ContentCaptureOptions)>(i0, r1, i1, r2);

        return;
    }

    static android.service.contentcapture.ContentCaptureService$LocalDataShareAdapterResourceManager access$1100(android.service.contentcapture.ContentCaptureService)
    {
        android.service.contentcapture.ContentCaptureService r0;
        android.service.contentcapture.ContentCaptureService$LocalDataShareAdapterResourceManager $r1;

        r0 := @parameter0: android.service.contentcapture.ContentCaptureService;

        $r1 = r0.<android.service.contentcapture.ContentCaptureService: android.service.contentcapture.ContentCaptureService$LocalDataShareAdapterResourceManager mDataShareAdapterResourceManager>;

        return $r1;
    }

    static java.lang.String access$1200()
    {
        java.lang.String $r0;

        $r0 = <android.service.contentcapture.ContentCaptureService: java.lang.String TAG>;

        return $r0;
    }

    static void access$200(android.service.contentcapture.ContentCaptureService, android.service.contentcapture.ActivityEvent)
    {
        android.service.contentcapture.ContentCaptureService r0;
        android.service.contentcapture.ActivityEvent r1;

        r0 := @parameter0: android.service.contentcapture.ContentCaptureService;

        r1 := @parameter1: android.service.contentcapture.ActivityEvent;

        specialinvoke r0.<android.service.contentcapture.ContentCaptureService: void handleOnActivityEvent(android.service.contentcapture.ActivityEvent)>(r1);

        return;
    }

    static void access$300(android.service.contentcapture.ContentCaptureService, android.view.contentcapture.DataShareRequest, android.service.contentcapture.IDataShareCallback)
    {
        android.service.contentcapture.ContentCaptureService r0;
        android.view.contentcapture.DataShareRequest r1;
        android.service.contentcapture.IDataShareCallback r2;

        r0 := @parameter0: android.service.contentcapture.ContentCaptureService;

        r1 := @parameter1: android.view.contentcapture.DataShareRequest;

        r2 := @parameter2: android.service.contentcapture.IDataShareCallback;

        specialinvoke r0.<android.service.contentcapture.ContentCaptureService: void handleOnDataShared(android.view.contentcapture.DataShareRequest,android.service.contentcapture.IDataShareCallback)>(r1, r2);

        return;
    }

    static void access$400(android.service.contentcapture.ContentCaptureService, android.view.contentcapture.DataRemovalRequest)
    {
        android.service.contentcapture.ContentCaptureService r0;
        android.view.contentcapture.DataRemovalRequest r1;

        r0 := @parameter0: android.service.contentcapture.ContentCaptureService;

        r1 := @parameter1: android.view.contentcapture.DataRemovalRequest;

        specialinvoke r0.<android.service.contentcapture.ContentCaptureService: void handleOnDataRemovalRequest(android.view.contentcapture.DataRemovalRequest)>(r1);

        return;
    }

    static void access$500(android.service.contentcapture.ContentCaptureService, int)
    {
        android.service.contentcapture.ContentCaptureService r0;
        int i0;

        r0 := @parameter0: android.service.contentcapture.ContentCaptureService;

        i0 := @parameter1: int;

        specialinvoke r0.<android.service.contentcapture.ContentCaptureService: void handleFinishSession(int)>(i0);

        return;
    }

    static void access$600(android.service.contentcapture.ContentCaptureService, int, android.service.contentcapture.SnapshotData)
    {
        android.service.contentcapture.ContentCaptureService r0;
        int i0;
        android.service.contentcapture.SnapshotData r1;

        r0 := @parameter0: android.service.contentcapture.ContentCaptureService;

        i0 := @parameter1: int;

        r1 := @parameter2: android.service.contentcapture.SnapshotData;

        specialinvoke r0.<android.service.contentcapture.ContentCaptureService: void handleOnActivitySnapshot(int,android.service.contentcapture.SnapshotData)>(i0, r1);

        return;
    }

    static void access$700(android.service.contentcapture.ContentCaptureService, android.view.contentcapture.ContentCaptureContext, int, int, com.android.internal.os.IResultReceiver, int)
    {
        android.service.contentcapture.ContentCaptureService r0;
        android.view.contentcapture.ContentCaptureContext r1;
        int i0, i1, i2;
        com.android.internal.os.IResultReceiver r2;

        r0 := @parameter0: android.service.contentcapture.ContentCaptureService;

        r1 := @parameter1: android.view.contentcapture.ContentCaptureContext;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        r2 := @parameter4: com.android.internal.os.IResultReceiver;

        i2 := @parameter5: int;

        specialinvoke r0.<android.service.contentcapture.ContentCaptureService: void handleOnCreateSession(android.view.contentcapture.ContentCaptureContext,int,int,com.android.internal.os.IResultReceiver,int)>(r1, i0, i1, r2, i2);

        return;
    }

    static void access$800(android.service.contentcapture.ContentCaptureService)
    {
        android.service.contentcapture.ContentCaptureService r0;

        r0 := @parameter0: android.service.contentcapture.ContentCaptureService;

        specialinvoke r0.<android.service.contentcapture.ContentCaptureService: void handleOnDisconnected()>();

        return;
    }

    static void access$900(android.service.contentcapture.ContentCaptureService, android.os.IBinder)
    {
        android.service.contentcapture.ContentCaptureService r0;
        android.os.IBinder r1;

        r0 := @parameter0: android.service.contentcapture.ContentCaptureService;

        r1 := @parameter1: android.os.IBinder;

        specialinvoke r0.<android.service.contentcapture.ContentCaptureService: void handleOnConnected(android.os.IBinder)>(r1);

        return;
    }

    private void handleFinishSession(int)
    {
        android.service.contentcapture.ContentCaptureService r0;
        int i0;
        android.util.SparseIntArray $r1;
        android.view.contentcapture.ContentCaptureSessionId $r2;

        r0 := @this: android.service.contentcapture.ContentCaptureService;

        i0 := @parameter0: int;

        $r1 = r0.<android.service.contentcapture.ContentCaptureService: android.util.SparseIntArray mSessionUids>;

        virtualinvoke $r1.<android.util.SparseIntArray: void delete(int)>(i0);

        $r2 = new android.view.contentcapture.ContentCaptureSessionId;

        specialinvoke $r2.<android.view.contentcapture.ContentCaptureSessionId: void <init>(int)>(i0);

        virtualinvoke r0.<android.service.contentcapture.ContentCaptureService: void onDestroyContentCaptureSession(android.view.contentcapture.ContentCaptureSessionId)>($r2);

        return;
    }

    private boolean handleIsRightCallerFor(android.view.contentcapture.ContentCaptureEvent, int)
    {
        android.service.contentcapture.ContentCaptureService r0;
        int i0, i1, i9, i10, $i11;
        java.lang.String r1, $r10, $r12, $r14, $r23, r27;
        long l2, $l4, $l5, $l6;
        android.util.SparseIntArray $r2, $r21, $r25;
        java.lang.StringBuilder $r3, $r15;
        byte $b7;
        android.content.pm.PackageManager $r11, $r13;
        boolean $z0;
        android.view.contentcapture.ContentCaptureEvent r24;

        r0 := @this: android.service.contentcapture.ContentCaptureService;

        r24 := @parameter0: android.view.contentcapture.ContentCaptureEvent;

        i0 := @parameter1: int;

        i9 = virtualinvoke r24.<android.view.contentcapture.ContentCaptureEvent: int getType()>();

        if i9 == -2 goto label1;

        if i9 == -1 goto label1;

        i10 = virtualinvoke r24.<android.view.contentcapture.ContentCaptureEvent: int getSessionId()>();

        goto label2;

     label1:
        i10 = virtualinvoke r24.<android.view.contentcapture.ContentCaptureEvent: int getParentSessionId()>();

     label2:
        $r25 = r0.<android.service.contentcapture.ContentCaptureService: android.util.SparseIntArray mSessionUids>;

        $i11 = virtualinvoke $r25.<android.util.SparseIntArray: int indexOfKey(int)>(i10);

        if $i11 >= 0 goto label4;

        $z0 = <android.view.contentcapture.ContentCaptureHelper: boolean sVerbose>;

        if $z0 == 0 goto label3;

        r1 = <android.service.contentcapture.ContentCaptureService: java.lang.String TAG>;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("handleIsRightCallerFor(");

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r24);

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("): no session for ");

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i10);

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r21 = r0.<android.service.contentcapture.ContentCaptureService: android.util.SparseIntArray mSessionUids>;

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r21);

        $r23 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>(r1, $r23);

     label3:
        return 0;

     label4:
        $r2 = r0.<android.service.contentcapture.ContentCaptureService: android.util.SparseIntArray mSessionUids>;

        i1 = virtualinvoke $r2.<android.util.SparseIntArray: int get(int)>(i10);

        if i1 == i0 goto label6;

        r27 = <android.service.contentcapture.ContentCaptureService: java.lang.String TAG>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("invalid call from UID ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": session ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i10);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" belongs to ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r10 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>(r27, $r10);

        l2 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l4 = r0.<android.service.contentcapture.ContentCaptureService: long mLastCallerMismatchLog>;

        $l6 = l2 - $l4;

        $l5 = r0.<android.service.contentcapture.ContentCaptureService: long mCallerMismatchTimeout>;

        $b7 = $l6 cmp $l5;

        if $b7 <= 0 goto label5;

        $r11 = virtualinvoke r0.<android.service.contentcapture.ContentCaptureService: android.content.pm.PackageManager getPackageManager()>();

        $r12 = virtualinvoke $r11.<android.content.pm.PackageManager: java.lang.String getNameForUid(int)>(i1);

        $r13 = virtualinvoke r0.<android.service.contentcapture.ContentCaptureService: android.content.pm.PackageManager getPackageManager()>();

        $r14 = virtualinvoke $r13.<android.content.pm.PackageManager: java.lang.String getNameForUid(int)>(i0);

        staticinvoke <com.android.internal.util.FrameworkStatsLog: void write(int,java.lang.String,java.lang.String)>(206, $r12, $r14);

        r0.<android.service.contentcapture.ContentCaptureService: long mLastCallerMismatchLog> = l2;

     label5:
        return 0;

     label6:
        return 1;
    }

    private void handleOnActivityEvent(android.service.contentcapture.ActivityEvent)
    {
        android.service.contentcapture.ContentCaptureService r0;
        android.service.contentcapture.ActivityEvent r1;

        r0 := @this: android.service.contentcapture.ContentCaptureService;

        r1 := @parameter0: android.service.contentcapture.ActivityEvent;

        virtualinvoke r0.<android.service.contentcapture.ContentCaptureService: void onActivityEvent(android.service.contentcapture.ActivityEvent)>(r1);

        return;
    }

    private void handleOnActivitySnapshot(int, android.service.contentcapture.SnapshotData)
    {
        android.service.contentcapture.ContentCaptureService r0;
        int i0;
        android.service.contentcapture.SnapshotData r1;
        android.view.contentcapture.ContentCaptureSessionId $r2;

        r0 := @this: android.service.contentcapture.ContentCaptureService;

        i0 := @parameter0: int;

        r1 := @parameter1: android.service.contentcapture.SnapshotData;

        $r2 = new android.view.contentcapture.ContentCaptureSessionId;

        specialinvoke $r2.<android.view.contentcapture.ContentCaptureSessionId: void <init>(int)>(i0);

        virtualinvoke r0.<android.service.contentcapture.ContentCaptureService: void onActivitySnapshot(android.view.contentcapture.ContentCaptureSessionId,android.service.contentcapture.SnapshotData)>($r2, r1);

        return;
    }

    private void handleOnConnected(android.os.IBinder)
    {
        android.service.contentcapture.ContentCaptureService r0;
        android.os.IBinder r1;
        android.service.contentcapture.IContentCaptureServiceCallback $r2;

        r0 := @this: android.service.contentcapture.ContentCaptureService;

        r1 := @parameter0: android.os.IBinder;

        $r2 = staticinvoke <android.service.contentcapture.IContentCaptureServiceCallback$Stub: android.service.contentcapture.IContentCaptureServiceCallback asInterface(android.os.IBinder)>(r1);

        r0.<android.service.contentcapture.ContentCaptureService: android.service.contentcapture.IContentCaptureServiceCallback mCallback> = $r2;

        virtualinvoke r0.<android.service.contentcapture.ContentCaptureService: void onConnected()>();

        return;
    }

    private void handleOnCreateSession(android.view.contentcapture.ContentCaptureContext, int, int, com.android.internal.os.IResultReceiver, int)
    {
        android.service.contentcapture.ContentCaptureService r0;
        android.view.contentcapture.ContentCaptureContext r1;
        com.android.internal.os.IResultReceiver r2;
        int i0, i1, $i2, $i3, i4, i5, i8;
        android.util.SparseIntArray $r3;
        android.view.contentcapture.ContentCaptureSessionId $r4;
        android.view.contentcapture.IContentCaptureDirectManager $r5;
        android.os.IBinder $r6;
        byte b6, b7;

        r0 := @this: android.service.contentcapture.ContentCaptureService;

        r1 := @parameter0: android.view.contentcapture.ContentCaptureContext;

        i4 := @parameter1: int;

        i5 := @parameter2: int;

        r2 := @parameter3: com.android.internal.os.IResultReceiver;

        i0 := @parameter4: int;

        $r3 = r0.<android.service.contentcapture.ContentCaptureService: android.util.SparseIntArray mSessionUids>;

        virtualinvoke $r3.<android.util.SparseIntArray: void put(int,int)>(i4, i5);

        $r4 = new android.view.contentcapture.ContentCaptureSessionId;

        specialinvoke $r4.<android.view.contentcapture.ContentCaptureSessionId: void <init>(int)>(i4);

        virtualinvoke r0.<android.service.contentcapture.ContentCaptureService: void onCreateContentCaptureSession(android.view.contentcapture.ContentCaptureContext,android.view.contentcapture.ContentCaptureSessionId)>(r1, $r4);

        i1 = virtualinvoke r1.<android.view.contentcapture.ContentCaptureContext: int getFlags()>();

        b6 = 0;

        $i2 = i1 & 2;

        if $i2 == 0 goto label1;

        b6 = 0 | 32;

     label1:
        b7 = b6;

        $i3 = i1 & 1;

        if $i3 == 0 goto label2;

        b7 = b6 | 64;

     label2:
        if b7 != 0 goto label3;

        i8 = i0;

        goto label4;

     label3:
        i8 = b7 | 4;

     label4:
        $r5 = r0.<android.service.contentcapture.ContentCaptureService: android.view.contentcapture.IContentCaptureDirectManager mClientInterface>;

        $r6 = interfaceinvoke $r5.<android.view.contentcapture.IContentCaptureDirectManager: android.os.IBinder asBinder()>();

        staticinvoke <android.service.contentcapture.ContentCaptureService: void setClientState(com.android.internal.os.IResultReceiver,int,android.os.IBinder)>(r2, i8, $r6);

        return;
    }

    private void handleOnDataRemovalRequest(android.view.contentcapture.DataRemovalRequest)
    {
        android.service.contentcapture.ContentCaptureService r0;
        android.view.contentcapture.DataRemovalRequest r1;

        r0 := @this: android.service.contentcapture.ContentCaptureService;

        r1 := @parameter0: android.view.contentcapture.DataRemovalRequest;

        virtualinvoke r0.<android.service.contentcapture.ContentCaptureService: void onDataRemovalRequest(android.view.contentcapture.DataRemovalRequest)>(r1);

        return;
    }

    private void handleOnDataShared(android.view.contentcapture.DataShareRequest, android.service.contentcapture.IDataShareCallback)
    {
        android.service.contentcapture.ContentCaptureService r0;
        android.view.contentcapture.DataShareRequest r1;
        android.service.contentcapture.IDataShareCallback r2;
        android.service.contentcapture.ContentCaptureService$3 $r3;

        r0 := @this: android.service.contentcapture.ContentCaptureService;

        r1 := @parameter0: android.view.contentcapture.DataShareRequest;

        r2 := @parameter1: android.service.contentcapture.IDataShareCallback;

        $r3 = new android.service.contentcapture.ContentCaptureService$3;

        specialinvoke $r3.<android.service.contentcapture.ContentCaptureService$3: void <init>(android.service.contentcapture.ContentCaptureService,android.service.contentcapture.IDataShareCallback)>(r0, r2);

        virtualinvoke r0.<android.service.contentcapture.ContentCaptureService: void onDataShareRequest(android.view.contentcapture.DataShareRequest,android.service.contentcapture.DataShareCallback)>(r1, $r3);

        return;
    }

    private void handleOnDisconnected()
    {
        android.service.contentcapture.ContentCaptureService r0;

        r0 := @this: android.service.contentcapture.ContentCaptureService;

        virtualinvoke r0.<android.service.contentcapture.ContentCaptureService: void onDisconnected()>();

        r0.<android.service.contentcapture.ContentCaptureService: android.service.contentcapture.IContentCaptureServiceCallback mCallback> = null;

        return;
    }

    private void handleSendEvents(int, android.content.pm.ParceledListSlice, int, android.content.ContentCaptureOptions)
    {
        android.service.contentcapture.ContentCaptureService r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, i16, i17, i18, i19;
        android.content.ContentCaptureOptions r1;
        java.util.List r2;
        android.view.contentcapture.ContentCaptureEvent r4;
        android.view.contentcapture.ContentCaptureContext r5;
        boolean $z0, $z1;
        android.service.contentcapture.FlushMetrics $r6;
        java.lang.Object $r7;
        android.util.SparseIntArray $r8, $r9;
        android.view.contentcapture.ContentCaptureSessionId $r10, r14;
        java.lang.String $r11;
        android.content.pm.ParceledListSlice r12;
        android.content.ComponentName r13, r15;

        r0 := @this: android.service.contentcapture.ContentCaptureService;

        i0 := @parameter0: int;

        r12 := @parameter1: android.content.pm.ParceledListSlice;

        i1 := @parameter2: int;

        r1 := @parameter3: android.content.ContentCaptureOptions;

        r2 = virtualinvoke r12.<android.content.pm.ParceledListSlice: java.util.List getList()>();

        $z0 = interfaceinvoke r2.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label01;

        $r11 = <android.service.contentcapture.ContentCaptureService: java.lang.String TAG>;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r11, "handleSendEvents() received empty list of events");

        return;

     label01:
        $r6 = new android.service.contentcapture.FlushMetrics;

        specialinvoke $r6.<android.service.contentcapture.FlushMetrics: void <init>()>();

        r13 = null;

        i16 = 0;

        r14 = null;

        i17 = 0;

     label02:
        $i3 = interfaceinvoke r2.<java.util.List: int size()>();

        if i17 >= $i3 goto label13;

        $r7 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i17);

        r4 = (android.view.contentcapture.ContentCaptureEvent) $r7;

        $z1 = specialinvoke r0.<android.service.contentcapture.ContentCaptureService: boolean handleIsRightCallerFor(android.view.contentcapture.ContentCaptureEvent,int)>(r4, i0);

        if $z1 != 0 goto label03;

        goto label12;

     label03:
        i2 = virtualinvoke r4.<android.view.contentcapture.ContentCaptureEvent: int getSessionId()>();

        i18 = i16;

        if i2 == i16 goto label05;

        $r10 = new android.view.contentcapture.ContentCaptureSessionId;

        specialinvoke $r10.<android.view.contentcapture.ContentCaptureSessionId: void <init>(int)>(i2);

        r14 = $r10;

        if i17 == 0 goto label04;

        specialinvoke r0.<android.service.contentcapture.ContentCaptureService: void writeFlushMetrics(int,android.content.ComponentName,android.service.contentcapture.FlushMetrics,android.content.ContentCaptureOptions,int)>(i2, r13, $r6, r1, i1);

        virtualinvoke $r6.<android.service.contentcapture.FlushMetrics: void reset()>();

     label04:
        i18 = i2;

     label05:
        r5 = virtualinvoke r4.<android.view.contentcapture.ContentCaptureEvent: android.view.contentcapture.ContentCaptureContext getContentCaptureContext()>();

        r15 = r13;

        if r13 != null goto label06;

        r15 = r13;

        if r5 == null goto label06;

        r15 = virtualinvoke r5.<android.view.contentcapture.ContentCaptureContext: android.content.ComponentName getActivityComponent()>();

     label06:
        i19 = virtualinvoke r4.<android.view.contentcapture.ContentCaptureEvent: int getType()>();

        if i19 == -2 goto label11;

        if i19 == -1 goto label10;

        if i19 == 1 goto label09;

        if i19 == 2 goto label08;

        if i19 == 3 goto label07;

        virtualinvoke r0.<android.service.contentcapture.ContentCaptureService: void onContentCaptureEvent(android.view.contentcapture.ContentCaptureSessionId,android.view.contentcapture.ContentCaptureEvent)>(r14, r4);

        r13 = r15;

        i16 = i18;

        goto label12;

     label07:
        virtualinvoke r0.<android.service.contentcapture.ContentCaptureService: void onContentCaptureEvent(android.view.contentcapture.ContentCaptureSessionId,android.view.contentcapture.ContentCaptureEvent)>(r14, r4);

        $i13 = $r6.<android.service.contentcapture.FlushMetrics: int viewTextChangedCount>;

        $i14 = $i13 + 1;

        $r6.<android.service.contentcapture.FlushMetrics: int viewTextChangedCount> = $i14;

        r13 = r15;

        i16 = i18;

        goto label12;

     label08:
        virtualinvoke r0.<android.service.contentcapture.ContentCaptureService: void onContentCaptureEvent(android.view.contentcapture.ContentCaptureSessionId,android.view.contentcapture.ContentCaptureEvent)>(r14, r4);

        $i11 = $r6.<android.service.contentcapture.FlushMetrics: int viewDisappearedCount>;

        $i12 = $i11 + 1;

        $r6.<android.service.contentcapture.FlushMetrics: int viewDisappearedCount> = $i12;

        r13 = r15;

        i16 = i18;

        goto label12;

     label09:
        virtualinvoke r0.<android.service.contentcapture.ContentCaptureService: void onContentCaptureEvent(android.view.contentcapture.ContentCaptureSessionId,android.view.contentcapture.ContentCaptureEvent)>(r14, r4);

        $i9 = $r6.<android.service.contentcapture.FlushMetrics: int viewAppearedCount>;

        $i10 = $i9 + 1;

        $r6.<android.service.contentcapture.FlushMetrics: int viewAppearedCount> = $i10;

        r13 = r15;

        i16 = i18;

        goto label12;

     label10:
        $i6 = virtualinvoke r4.<android.view.contentcapture.ContentCaptureEvent: int getParentSessionId()>();

        virtualinvoke r5.<android.view.contentcapture.ContentCaptureContext: void setParentSessionId(int)>($i6);

        $r9 = r0.<android.service.contentcapture.ContentCaptureService: android.util.SparseIntArray mSessionUids>;

        virtualinvoke $r9.<android.util.SparseIntArray: void put(int,int)>(i2, i0);

        virtualinvoke r0.<android.service.contentcapture.ContentCaptureService: void onCreateContentCaptureSession(android.view.contentcapture.ContentCaptureContext,android.view.contentcapture.ContentCaptureSessionId)>(r5, r14);

        $i7 = $r6.<android.service.contentcapture.FlushMetrics: int sessionStarted>;

        $i8 = $i7 + 1;

        $r6.<android.service.contentcapture.FlushMetrics: int sessionStarted> = $i8;

        r13 = r15;

        i16 = i18;

        goto label12;

     label11:
        $r8 = r0.<android.service.contentcapture.ContentCaptureService: android.util.SparseIntArray mSessionUids>;

        virtualinvoke $r8.<android.util.SparseIntArray: void delete(int)>(i2);

        virtualinvoke r0.<android.service.contentcapture.ContentCaptureService: void onDestroyContentCaptureSession(android.view.contentcapture.ContentCaptureSessionId)>(r14);

        $i4 = $r6.<android.service.contentcapture.FlushMetrics: int sessionFinished>;

        $i5 = $i4 + 1;

        $r6.<android.service.contentcapture.FlushMetrics: int sessionFinished> = $i5;

        i16 = i18;

        r13 = r15;

     label12:
        i17 = i17 + 1;

        goto label02;

     label13:
        specialinvoke r0.<android.service.contentcapture.ContentCaptureService: void writeFlushMetrics(int,android.content.ComponentName,android.service.contentcapture.FlushMetrics,android.content.ContentCaptureOptions,int)>(i16, r13, $r6, r1, i1);

        return;
    }

    public static void setClientState(com.android.internal.os.IResultReceiver, int, android.os.IBinder)
    {
        int i0;
        android.os.RemoteException $r0;
        java.lang.StringBuilder $r1;
        java.lang.String $r4, r10;
        com.android.internal.os.IResultReceiver r5;
        android.os.IBinder r6;
        android.os.Bundle r7, r8;

        r5 := @parameter0: com.android.internal.os.IResultReceiver;

        i0 := @parameter1: int;

        r6 := @parameter2: android.os.IBinder;

        if r6 == null goto label4;

     label1:
        r7 = new android.os.Bundle;

        specialinvoke r7.<android.os.Bundle: void <init>()>();

        virtualinvoke r7.<android.os.Bundle: void putBinder(java.lang.String,android.os.IBinder)>("binder", r6);

     label2:
        r8 = r7;

        goto label5;

     label3:
        $r0 := @caughtexception;

        goto label7;

     label4:
        r8 = null;

     label5:
        interfaceinvoke r5.<com.android.internal.os.IResultReceiver: void send(int,android.os.Bundle)>(i0, r8);

     label6:
        goto label8;

     label7:
        r10 = <android.service.contentcapture.ContentCaptureService: java.lang.String TAG>;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error async reporting result to client: ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r0);

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>(r10, $r4);

     label8:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch android.os.RemoteException from label5 to label6 with label3;
    }

    private void writeFlushMetrics(int, android.content.ComponentName, android.service.contentcapture.FlushMetrics, android.content.ContentCaptureOptions, int)
    {
        android.service.contentcapture.ContentCaptureService r0;
        int i0, i1;
        android.service.contentcapture.IContentCaptureServiceCallback r1;
        java.lang.String $r2, $r7, r12;
        android.os.RemoteException $r3;
        java.lang.StringBuilder $r4;
        android.content.ComponentName r8;
        android.service.contentcapture.FlushMetrics r9;
        android.content.ContentCaptureOptions r10;

        r0 := @this: android.service.contentcapture.ContentCaptureService;

        i0 := @parameter0: int;

        r8 := @parameter1: android.content.ComponentName;

        r9 := @parameter2: android.service.contentcapture.FlushMetrics;

        r10 := @parameter3: android.content.ContentCaptureOptions;

        i1 := @parameter4: int;

        r1 = r0.<android.service.contentcapture.ContentCaptureService: android.service.contentcapture.IContentCaptureServiceCallback mCallback>;

        if r1 != null goto label1;

        $r2 = <android.service.contentcapture.ContentCaptureService: java.lang.String TAG>;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r2, "writeSessionFlush(): no server callback");

        return;

     label1:
        interfaceinvoke r1.<android.service.contentcapture.IContentCaptureServiceCallback: void writeSessionFlush(int,android.content.ComponentName,android.service.contentcapture.FlushMetrics,android.content.ContentCaptureOptions,int)>(i0, r8, r9, r10, i1);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        r12 = <android.service.contentcapture.ContentCaptureService: java.lang.String TAG>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("failed to write flush metrics: ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>(r12, $r7);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public final void disableSelf()
    {
        android.service.contentcapture.ContentCaptureService r0;
        boolean $z0;
        java.lang.String $r1, $r2;
        android.os.RemoteException $r3;
        android.service.contentcapture.IContentCaptureServiceCallback r5;

        r0 := @this: android.service.contentcapture.ContentCaptureService;

        $z0 = <android.view.contentcapture.ContentCaptureHelper: boolean sDebug>;

        if $z0 == 0 goto label1;

        $r2 = <android.service.contentcapture.ContentCaptureService: java.lang.String TAG>;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r2, "disableSelf()");

     label1:
        r5 = r0.<android.service.contentcapture.ContentCaptureService: android.service.contentcapture.IContentCaptureServiceCallback mCallback>;

        if r5 != null goto label2;

        $r1 = <android.service.contentcapture.ContentCaptureService: java.lang.String TAG>;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r1, "disableSelf(): no server callback");

        return;

     label2:
        interfaceinvoke r5.<android.service.contentcapture.IContentCaptureServiceCallback: void disableSelf()>();

     label3:
        goto label5;

     label4:
        $r3 := @caughtexception;

        virtualinvoke $r3.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

     label5:
        return;

        catch android.os.RemoteException from label2 to label3 with label4;
    }

    protected void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        android.service.contentcapture.ContentCaptureService r0;
        java.io.FileDescriptor r1;
        java.io.PrintWriter r2;
        java.lang.String[] r3;
        int i0, $i1, $i2, i3;
        boolean $z0, $z1;
        android.util.SparseIntArray $r4, $r5, $r6;

        r0 := @this: android.service.contentcapture.ContentCaptureService;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: java.io.PrintWriter;

        r3 := @parameter2: java.lang.String[];

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("Debug: ");

        $z0 = <android.view.contentcapture.ContentCaptureHelper: boolean sDebug>;

        virtualinvoke r2.<java.io.PrintWriter: void print(boolean)>($z0);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(" Verbose: ");

        $z1 = <android.view.contentcapture.ContentCaptureHelper: boolean sVerbose>;

        virtualinvoke r2.<java.io.PrintWriter: void println(boolean)>($z1);

        $r4 = r0.<android.service.contentcapture.ContentCaptureService: android.util.SparseIntArray mSessionUids>;

        i0 = virtualinvoke $r4.<android.util.SparseIntArray: int size()>();

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("Number sessions: ");

        virtualinvoke r2.<java.io.PrintWriter: void println(int)>(i0);

        if i0 <= 0 goto label2;

        i3 = 0;

     label1:
        if i3 >= i0 goto label2;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("  ");

        $r5 = r0.<android.service.contentcapture.ContentCaptureService: android.util.SparseIntArray mSessionUids>;

        $i1 = virtualinvoke $r5.<android.util.SparseIntArray: int keyAt(int)>(i3);

        virtualinvoke r2.<java.io.PrintWriter: void print(int)>($i1);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(": uid=");

        $r6 = r0.<android.service.contentcapture.ContentCaptureService: android.util.SparseIntArray mSessionUids>;

        $i2 = virtualinvoke $r6.<android.util.SparseIntArray: int valueAt(int)>(i3);

        virtualinvoke r2.<java.io.PrintWriter: void println(int)>($i2);

        i3 = i3 + 1;

        goto label1;

     label2:
        return;
    }

    public void onActivityEvent(android.service.contentcapture.ActivityEvent)
    {
        android.service.contentcapture.ContentCaptureService r0;
        android.service.contentcapture.ActivityEvent r1;
        java.lang.String r2, $r7;
        boolean $z0;
        java.lang.StringBuilder $r4;

        r0 := @this: android.service.contentcapture.ContentCaptureService;

        r1 := @parameter0: android.service.contentcapture.ActivityEvent;

        $z0 = <android.view.contentcapture.ContentCaptureHelper: boolean sVerbose>;

        if $z0 == 0 goto label1;

        r2 = <android.service.contentcapture.ContentCaptureService: java.lang.String TAG>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onActivityEvent(): ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>(r2, $r7);

     label1:
        return;
    }

    public void onActivitySnapshot(android.view.contentcapture.ContentCaptureSessionId, android.service.contentcapture.SnapshotData)
    {
        android.service.contentcapture.ContentCaptureService r0;
        android.view.contentcapture.ContentCaptureSessionId r1;
        boolean $z0;
        java.lang.StringBuilder $r3;
        java.lang.String $r7, r9;
        android.service.contentcapture.SnapshotData r8;

        r0 := @this: android.service.contentcapture.ContentCaptureService;

        r1 := @parameter0: android.view.contentcapture.ContentCaptureSessionId;

        r8 := @parameter1: android.service.contentcapture.SnapshotData;

        $z0 = <android.view.contentcapture.ContentCaptureHelper: boolean sVerbose>;

        if $z0 == 0 goto label1;

        r9 = <android.service.contentcapture.ContentCaptureService: java.lang.String TAG>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onActivitySnapshot(id=");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>(r9, $r7);

     label1:
        return;
    }

    public final android.os.IBinder onBind(android.content.Intent)
    {
        android.service.contentcapture.ContentCaptureService r0;
        android.content.Intent r1;
        java.lang.String r2, $r4, $r5, $r9;
        boolean $z0;
        java.lang.StringBuilder $r6;
        android.service.contentcapture.IContentCaptureService $r10;
        android.os.IBinder $r11;

        r0 := @this: android.service.contentcapture.ContentCaptureService;

        r1 := @parameter0: android.content.Intent;

        $r4 = "android.service.contentcapture.ContentCaptureService";

        $r5 = virtualinvoke r1.<android.content.Intent: java.lang.String getAction()>();

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z0 == 0 goto label1;

        $r10 = r0.<android.service.contentcapture.ContentCaptureService: android.service.contentcapture.IContentCaptureService mServerInterface>;

        $r11 = interfaceinvoke $r10.<android.service.contentcapture.IContentCaptureService: android.os.IBinder asBinder()>();

        return $r11;

     label1:
        r2 = <android.service.contentcapture.ContentCaptureService: java.lang.String TAG>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Tried to bind to wrong intent (should be android.service.contentcapture.ContentCaptureService: ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>(r2, $r9);

        return null;
    }

    public void onConnected()
    {
        android.service.contentcapture.ContentCaptureService r0;
        java.lang.String r1, $r6, $r8;
        java.lang.StringBuilder $r3;
        java.lang.Class $r5;

        r0 := @this: android.service.contentcapture.ContentCaptureService;

        r1 = <android.service.contentcapture.ContentCaptureService: java.lang.String TAG>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bound to ");

        $r5 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>(r1, $r8);

        return;
    }

    public void onContentCaptureEvent(android.view.contentcapture.ContentCaptureSessionId, android.view.contentcapture.ContentCaptureEvent)
    {
        android.service.contentcapture.ContentCaptureService r0;
        android.view.contentcapture.ContentCaptureSessionId r1;
        boolean $z0;
        java.lang.StringBuilder $r3;
        java.lang.String $r7, r9;
        android.view.contentcapture.ContentCaptureEvent r8;

        r0 := @this: android.service.contentcapture.ContentCaptureService;

        r1 := @parameter0: android.view.contentcapture.ContentCaptureSessionId;

        r8 := @parameter1: android.view.contentcapture.ContentCaptureEvent;

        $z0 = <android.view.contentcapture.ContentCaptureHelper: boolean sVerbose>;

        if $z0 == 0 goto label1;

        r9 = <android.service.contentcapture.ContentCaptureService: java.lang.String TAG>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onContentCaptureEventsRequest(id=");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>(r9, $r7);

     label1:
        return;
    }

    public void onCreate()
    {
        android.service.contentcapture.ContentCaptureService r0;
        android.os.Handler $r1;
        android.os.Looper $r2;

        r0 := @this: android.service.contentcapture.ContentCaptureService;

        specialinvoke r0.<android.app.Service: void onCreate()>();

        $r1 = new android.os.Handler;

        $r2 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        specialinvoke $r1.<android.os.Handler: void <init>(android.os.Looper,android.os.Handler$Callback,boolean)>($r2, null, 1);

        r0.<android.service.contentcapture.ContentCaptureService: android.os.Handler mHandler> = $r1;

        return;
    }

    public void onCreateContentCaptureSession(android.view.contentcapture.ContentCaptureContext, android.view.contentcapture.ContentCaptureSessionId)
    {
        android.service.contentcapture.ContentCaptureService r0;
        android.view.contentcapture.ContentCaptureContext r1;
        android.view.contentcapture.ContentCaptureSessionId r2;
        java.lang.String r3, $r11;
        boolean $z0;
        java.lang.StringBuilder $r5;

        r0 := @this: android.service.contentcapture.ContentCaptureService;

        r1 := @parameter0: android.view.contentcapture.ContentCaptureContext;

        r2 := @parameter1: android.view.contentcapture.ContentCaptureSessionId;

        $z0 = <android.view.contentcapture.ContentCaptureHelper: boolean sVerbose>;

        if $z0 == 0 goto label1;

        r3 = <android.service.contentcapture.ContentCaptureService: java.lang.String TAG>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onCreateContentCaptureSession(id=");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ctx=");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r11 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>(r3, $r11);

     label1:
        return;
    }

    public void onDataRemovalRequest(android.view.contentcapture.DataRemovalRequest)
    {
        android.service.contentcapture.ContentCaptureService r0;
        android.view.contentcapture.DataRemovalRequest r1;
        boolean $z0;
        java.lang.String $r2;

        r0 := @this: android.service.contentcapture.ContentCaptureService;

        r1 := @parameter0: android.view.contentcapture.DataRemovalRequest;

        $z0 = <android.view.contentcapture.ContentCaptureHelper: boolean sVerbose>;

        if $z0 == 0 goto label1;

        $r2 = <android.service.contentcapture.ContentCaptureService: java.lang.String TAG>;

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>($r2, "onDataRemovalRequest()");

     label1:
        return;
    }

    public void onDataShareRequest(android.view.contentcapture.DataShareRequest, android.service.contentcapture.DataShareCallback)
    {
        android.service.contentcapture.ContentCaptureService r0;
        android.view.contentcapture.DataShareRequest r1;
        android.service.contentcapture.DataShareCallback r2;
        boolean $z0;
        java.lang.String $r3;

        r0 := @this: android.service.contentcapture.ContentCaptureService;

        r1 := @parameter0: android.view.contentcapture.DataShareRequest;

        r2 := @parameter1: android.service.contentcapture.DataShareCallback;

        $z0 = <android.view.contentcapture.ContentCaptureHelper: boolean sVerbose>;

        if $z0 == 0 goto label1;

        $r3 = <android.service.contentcapture.ContentCaptureService: java.lang.String TAG>;

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>($r3, "onDataShareRequest()");

     label1:
        return;
    }

    public void onDestroyContentCaptureSession(android.view.contentcapture.ContentCaptureSessionId)
    {
        android.service.contentcapture.ContentCaptureService r0;
        android.view.contentcapture.ContentCaptureSessionId r1;
        java.lang.String r2, $r8;
        boolean $z0;
        java.lang.StringBuilder $r4;

        r0 := @this: android.service.contentcapture.ContentCaptureService;

        r1 := @parameter0: android.view.contentcapture.ContentCaptureSessionId;

        $z0 = <android.view.contentcapture.ContentCaptureHelper: boolean sVerbose>;

        if $z0 == 0 goto label1;

        r2 = <android.service.contentcapture.ContentCaptureService: java.lang.String TAG>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onDestroyContentCaptureSession(id=");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r8 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>(r2, $r8);

     label1:
        return;
    }

    public void onDisconnected()
    {
        android.service.contentcapture.ContentCaptureService r0;
        java.lang.String r1, $r6, $r8;
        java.lang.StringBuilder $r3;
        java.lang.Class $r5;

        r0 := @this: android.service.contentcapture.ContentCaptureService;

        r1 = <android.service.contentcapture.ContentCaptureService: java.lang.String TAG>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unbinding from ");

        $r5 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>(r1, $r8);

        return;
    }

    public final void setContentCaptureConditions(java.lang.String, java.util.Set)
    {
        android.service.contentcapture.ContentCaptureService r0;
        java.util.Set r1;
        android.service.contentcapture.IContentCaptureServiceCallback r2;
        java.util.ArrayList $r3;
        java.lang.String $r4, r7;
        android.os.RemoteException $r5;

        r0 := @this: android.service.contentcapture.ContentCaptureService;

        r7 := @parameter0: java.lang.String;

        r1 := @parameter1: java.util.Set;

        r2 = r0.<android.service.contentcapture.ContentCaptureService: android.service.contentcapture.IContentCaptureServiceCallback mCallback>;

        if r2 != null goto label1;

        $r4 = <android.service.contentcapture.ContentCaptureService: java.lang.String TAG>;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r4, "setContentCaptureConditions(): no server callback");

        return;

     label1:
        $r3 = staticinvoke <android.view.contentcapture.ContentCaptureHelper: java.util.ArrayList toList(java.util.Set)>(r1);

        interfaceinvoke r2.<android.service.contentcapture.IContentCaptureServiceCallback: void setContentCaptureConditions(java.lang.String,java.util.List)>(r7, $r3);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        virtualinvoke $r5.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public final void setContentCaptureWhitelist(java.util.Set, java.util.Set)
    {
        android.service.contentcapture.ContentCaptureService r0;
        java.util.Set r1, r8;
        android.service.contentcapture.IContentCaptureServiceCallback r2;
        java.util.ArrayList $r3, $r4;
        java.lang.String $r5;
        android.os.RemoteException $r6;

        r0 := @this: android.service.contentcapture.ContentCaptureService;

        r8 := @parameter0: java.util.Set;

        r1 := @parameter1: java.util.Set;

        r2 = r0.<android.service.contentcapture.ContentCaptureService: android.service.contentcapture.IContentCaptureServiceCallback mCallback>;

        if r2 != null goto label1;

        $r5 = <android.service.contentcapture.ContentCaptureService: java.lang.String TAG>;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r5, "setContentCaptureWhitelist(): no server callback");

        return;

     label1:
        $r3 = staticinvoke <android.view.contentcapture.ContentCaptureHelper: java.util.ArrayList toList(java.util.Set)>(r8);

        $r4 = staticinvoke <android.view.contentcapture.ContentCaptureHelper: java.util.ArrayList toList(java.util.Set)>(r1);

        interfaceinvoke r2.<android.service.contentcapture.IContentCaptureServiceCallback: void setContentCaptureWhitelist(java.util.List,java.util.List)>($r3, $r4);

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        virtualinvoke $r6.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }
}
