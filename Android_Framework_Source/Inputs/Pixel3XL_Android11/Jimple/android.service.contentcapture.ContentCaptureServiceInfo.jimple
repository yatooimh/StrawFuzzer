public final class android.service.contentcapture.ContentCaptureServiceInfo extends java.lang.Object
{
    private static final java.lang.String TAG;
    private static final java.lang.String XML_TAG_SERVICE;
    private final android.content.pm.ServiceInfo mServiceInfo;
    private final java.lang.String mSettingsActivity;

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;

        <android.service.contentcapture.ContentCaptureServiceInfo: java.lang.String XML_TAG_SERVICE> = "content-capture-service";

        $r0 = class "Landroid/service/contentcapture/ContentCaptureServiceInfo;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getSimpleName()>();

        <android.service.contentcapture.ContentCaptureServiceInfo: java.lang.String TAG> = $r1;

        return;
    }

    public void <init>(android.content.Context, android.content.ComponentName, boolean, int) throws android.content.pm.PackageManager$NameNotFoundException
    {
        android.service.contentcapture.ContentCaptureServiceInfo r0;
        android.content.Context r1;
        android.content.ComponentName r2;
        boolean z0;
        int i0;
        android.content.pm.ServiceInfo $r3;

        r0 := @this: android.service.contentcapture.ContentCaptureServiceInfo;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.content.ComponentName;

        z0 := @parameter2: boolean;

        i0 := @parameter3: int;

        $r3 = staticinvoke <android.service.contentcapture.ContentCaptureServiceInfo: android.content.pm.ServiceInfo getServiceInfoOrThrow(android.content.ComponentName,boolean,int)>(r2, z0, i0);

        specialinvoke r0.<android.service.contentcapture.ContentCaptureServiceInfo: void <init>(android.content.Context,android.content.pm.ServiceInfo)>(r1, $r3);

        return;
    }

    private void <init>(android.content.Context, android.content.pm.ServiceInfo)
    {
        android.service.contentcapture.ContentCaptureServiceInfo r0;
        android.content.res.XmlResourceParser r1;
        java.lang.String $r2, $r3, $r5, $r6, $r11, $r12, $r13, $r17, r20, r25, r26, r29;
        boolean $z0, $z1;
        java.lang.StringBuilder $r4;
        java.lang.SecurityException $r7;
        android.content.pm.PackageManager $r8, $r9;
        android.content.pm.ApplicationInfo $r10;
        int[] $r14;
        java.lang.Throwable $r15, $r16;
        android.content.Context r18;
        android.content.pm.ServiceInfo r19;
        android.content.res.Resources r21;
        int i0;
        android.util.AttributeSet r22;
        android.content.res.TypedArray r23, r24;

        r0 := @this: android.service.contentcapture.ContentCaptureServiceInfo;

        r18 := @parameter0: android.content.Context;

        r19 := @parameter1: android.content.pm.ServiceInfo;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = "android.permission.BIND_CONTENT_CAPTURE_SERVICE";

        $r2 = r19.<android.content.pm.ServiceInfo: java.lang.String permission>;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label28;

        r0.<android.service.contentcapture.ContentCaptureServiceInfo: android.content.pm.ServiceInfo mServiceInfo> = r19;

        $r8 = virtualinvoke r18.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        r1 = virtualinvoke r19.<android.content.pm.ServiceInfo: android.content.res.XmlResourceParser loadXmlMetaData(android.content.pm.PackageManager,java.lang.String)>($r8, "android.content_capture");

        if r1 != null goto label01;

        r0.<android.service.contentcapture.ContentCaptureServiceInfo: java.lang.String mSettingsActivity> = null;

        return;

     label01:
        r20 = null;

     label02:
        $r9 = virtualinvoke r18.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r10 = r19.<android.content.pm.ServiceInfo: android.content.pm.ApplicationInfo applicationInfo>;

        r21 = virtualinvoke $r9.<android.content.pm.PackageManager: android.content.res.Resources getResourcesForApplication(android.content.pm.ApplicationInfo)>($r10);

     label03:
        i0 = 0;

     label04:
        if i0 == 1 goto label07;

        if i0 == 2 goto label07;

        r20 = null;

     label05:
        i0 = interfaceinvoke r1.<android.content.res.XmlResourceParser: int next()>();

     label06:
        goto label04;

     label07:
        r20 = null;

     label08:
        $r11 = "content-capture-service";

        $r12 = interfaceinvoke r1.<android.content.res.XmlResourceParser: java.lang.String getName()>();

        $z1 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>($r12);

        if $z1 == 0 goto label22;

     label09:
        r20 = null;

     label10:
        r22 = staticinvoke <android.util.Xml: android.util.AttributeSet asAttributeSet(org.xmlpull.v1.XmlPullParser)>(r1);

     label11:
        r23 = null;

     label12:
        $r14 = <com.android.internal.R$styleable: int[] ContentCaptureService>;

        r24 = virtualinvoke r21.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>(r22, $r14);

     label13:
        r23 = r24;

     label14:
        r25 = virtualinvoke r24.<android.content.res.TypedArray: java.lang.String getString(int)>(0);

     label15:
        r26 = r25;

        if r24 == null goto label17;

        r20 = r25;

     label16:
        virtualinvoke r24.<android.content.res.TypedArray: void recycle()>();

     label17:
        goto label25;

     label18:
        $r15 := @caughtexception;

        if r23 == null goto label20;

        r20 = null;

     label19:
        virtualinvoke r23.<android.content.res.TypedArray: void recycle()>();

     label20:
        r20 = null;

     label21:
        throw $r15;

     label22:
        r20 = null;

     label23:
        $r13 = <android.service.contentcapture.ContentCaptureServiceInfo: java.lang.String TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r13, "Meta-data does not start with content-capture-service tag");

     label24:
        r26 = null;

     label25:
        goto label27;

     label26:
        $r16 := @caughtexception;

        $r17 = <android.service.contentcapture.ContentCaptureServiceInfo: java.lang.String TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r17, "Error parsing auto fill service meta-data", $r16);

        r26 = r20;

     label27:
        r0.<android.service.contentcapture.ContentCaptureServiceInfo: java.lang.String mSettingsActivity> = r26;

        return;

     label28:
        r29 = <android.service.contentcapture.ContentCaptureServiceInfo: java.lang.String TAG>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ContentCaptureService from \'");

        $r5 = r19.<android.content.pm.ServiceInfo: java.lang.String packageName>;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' does not require permission ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("android.permission.BIND_CONTENT_CAPTURE_SERVICE");

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>(r29, $r6);

        $r7 = new java.lang.SecurityException;

        specialinvoke $r7.<java.lang.SecurityException: void <init>(java.lang.String)>("Service does not require permission android.permission.BIND_CONTENT_CAPTURE_SERVICE");

        throw $r7;

        catch android.content.pm.PackageManager$NameNotFoundException from label02 to label03 with label26;
        catch java.io.IOException from label02 to label03 with label26;
        catch org.xmlpull.v1.XmlPullParserException from label02 to label03 with label26;
        catch android.content.pm.PackageManager$NameNotFoundException from label05 to label06 with label26;
        catch java.io.IOException from label05 to label06 with label26;
        catch org.xmlpull.v1.XmlPullParserException from label05 to label06 with label26;
        catch android.content.pm.PackageManager$NameNotFoundException from label08 to label09 with label26;
        catch java.io.IOException from label08 to label09 with label26;
        catch org.xmlpull.v1.XmlPullParserException from label08 to label09 with label26;
        catch android.content.pm.PackageManager$NameNotFoundException from label10 to label11 with label26;
        catch java.io.IOException from label10 to label11 with label26;
        catch org.xmlpull.v1.XmlPullParserException from label10 to label11 with label26;
        catch java.lang.Throwable from label12 to label13 with label18;
        catch java.lang.Throwable from label14 to label15 with label18;
        catch android.content.pm.PackageManager$NameNotFoundException from label16 to label17 with label26;
        catch java.io.IOException from label16 to label17 with label26;
        catch org.xmlpull.v1.XmlPullParserException from label16 to label17 with label26;
        catch android.content.pm.PackageManager$NameNotFoundException from label19 to label20 with label26;
        catch java.io.IOException from label19 to label20 with label26;
        catch org.xmlpull.v1.XmlPullParserException from label19 to label20 with label26;
        catch android.content.pm.PackageManager$NameNotFoundException from label21 to label22 with label26;
        catch java.io.IOException from label21 to label22 with label26;
        catch org.xmlpull.v1.XmlPullParserException from label21 to label22 with label26;
        catch android.content.pm.PackageManager$NameNotFoundException from label23 to label24 with label26;
        catch java.io.IOException from label23 to label24 with label26;
        catch org.xmlpull.v1.XmlPullParserException from label23 to label24 with label26;
    }

    private static android.content.pm.ServiceInfo getServiceInfoOrThrow(android.content.ComponentName, boolean, int) throws android.content.pm.PackageManager$NameNotFoundException
    {
        android.content.ComponentName r0;
        boolean z0;
        int i0, i1;
        android.content.pm.IPackageManager $r1;
        java.lang.StringBuilder $r2;
        java.lang.String $r6, $r9, r15;
        android.content.pm.PackageManager$NameNotFoundException $r8;
        android.os.RemoteException $r10;
        android.content.pm.ServiceInfo r11, r12;

        r0 := @parameter0: android.content.ComponentName;

        z0 := @parameter1: boolean;

        i0 := @parameter2: int;

        i1 = 128;

        if z0 != 0 goto label1;

        i1 = 128 | 1048576;

     label1:
        r11 = null;

     label2:
        $r1 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

        r12 = interfaceinvoke $r1.<android.content.pm.IPackageManager: android.content.pm.ServiceInfo getServiceInfo(android.content.ComponentName,int,int)>(r0, i1, i0);

     label3:
        r11 = r12;

        goto label5;

     label4:
        $r10 := @caughtexception;

     label5:
        if r11 != null goto label8;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not get serviceInfo for ");

        if z0 == 0 goto label6;

        r15 = " (temp)";

        goto label7;

     label6:
        r15 = "(default system)";

     label7:
        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r15);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r6 = virtualinvoke r0.<android.content.ComponentName: java.lang.String flattenToShortString()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = new android.content.pm.PackageManager$NameNotFoundException;

        $r9 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<android.content.pm.PackageManager$NameNotFoundException: void <init>(java.lang.String)>($r9);

        throw $r8;

     label8:
        return r11;

        catch android.os.RemoteException from label2 to label3 with label4;
    }

    public void dump(java.lang.String, java.io.PrintWriter)
    {
        android.service.contentcapture.ContentCaptureServiceInfo r0;
        java.lang.String r1, $r5;
        java.io.PrintWriter r2;
        android.content.pm.ServiceInfo $r3;
        android.content.ComponentName $r4;

        r0 := @this: android.service.contentcapture.ContentCaptureServiceInfo;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.io.PrintWriter;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("Component: ");

        $r3 = virtualinvoke r0.<android.service.contentcapture.ContentCaptureServiceInfo: android.content.pm.ServiceInfo getServiceInfo()>();

        $r4 = virtualinvoke $r3.<android.content.pm.ServiceInfo: android.content.ComponentName getComponentName()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.Object)>($r4);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("Settings: ");

        $r5 = r0.<android.service.contentcapture.ContentCaptureServiceInfo: java.lang.String mSettingsActivity>;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r5);

        return;
    }

    public android.content.pm.ServiceInfo getServiceInfo()
    {
        android.service.contentcapture.ContentCaptureServiceInfo r0;
        android.content.pm.ServiceInfo $r1;

        r0 := @this: android.service.contentcapture.ContentCaptureServiceInfo;

        $r1 = r0.<android.service.contentcapture.ContentCaptureServiceInfo: android.content.pm.ServiceInfo mServiceInfo>;

        return $r1;
    }

    public java.lang.String getSettingsActivity()
    {
        android.service.contentcapture.ContentCaptureServiceInfo r0;
        java.lang.String $r1;

        r0 := @this: android.service.contentcapture.ContentCaptureServiceInfo;

        $r1 = r0.<android.service.contentcapture.ContentCaptureServiceInfo: java.lang.String mSettingsActivity>;

        return $r1;
    }

    public java.lang.String toString()
    {
        android.service.contentcapture.ContentCaptureServiceInfo r0;
        java.lang.StringBuilder $r2;
        java.lang.Class $r3;
        java.lang.String $r4, $r10, $r12;
        android.content.pm.ServiceInfo $r7;

        r0 := @this: android.service.contentcapture.ContentCaptureServiceInfo;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getSimpleName()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        $r7 = r0.<android.service.contentcapture.ContentCaptureServiceInfo: android.content.pm.ServiceInfo mServiceInfo>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", settings:");

        $r10 = r0.<android.service.contentcapture.ContentCaptureServiceInfo: java.lang.String mSettingsActivity>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r12;
    }
}
