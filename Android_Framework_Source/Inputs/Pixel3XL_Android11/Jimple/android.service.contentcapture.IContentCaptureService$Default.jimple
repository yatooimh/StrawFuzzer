public class android.service.contentcapture.IContentCaptureService$Default extends java.lang.Object implements android.service.contentcapture.IContentCaptureService
{

    public void <init>()
    {
        android.service.contentcapture.IContentCaptureService$Default r0;

        r0 := @this: android.service.contentcapture.IContentCaptureService$Default;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public android.os.IBinder asBinder()
    {
        android.service.contentcapture.IContentCaptureService$Default r0;

        r0 := @this: android.service.contentcapture.IContentCaptureService$Default;

        return null;
    }

    public void onActivityEvent(android.service.contentcapture.ActivityEvent) throws android.os.RemoteException
    {
        android.service.contentcapture.IContentCaptureService$Default r0;
        android.service.contentcapture.ActivityEvent r1;

        r0 := @this: android.service.contentcapture.IContentCaptureService$Default;

        r1 := @parameter0: android.service.contentcapture.ActivityEvent;

        return;
    }

    public void onActivitySnapshot(int, android.service.contentcapture.SnapshotData) throws android.os.RemoteException
    {
        android.service.contentcapture.IContentCaptureService$Default r0;
        int i0;
        android.service.contentcapture.SnapshotData r1;

        r0 := @this: android.service.contentcapture.IContentCaptureService$Default;

        i0 := @parameter0: int;

        r1 := @parameter1: android.service.contentcapture.SnapshotData;

        return;
    }

    public void onConnected(android.os.IBinder, boolean, boolean) throws android.os.RemoteException
    {
        android.service.contentcapture.IContentCaptureService$Default r0;
        android.os.IBinder r1;
        boolean z0, z1;

        r0 := @this: android.service.contentcapture.IContentCaptureService$Default;

        r1 := @parameter0: android.os.IBinder;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        return;
    }

    public void onDataRemovalRequest(android.view.contentcapture.DataRemovalRequest) throws android.os.RemoteException
    {
        android.service.contentcapture.IContentCaptureService$Default r0;
        android.view.contentcapture.DataRemovalRequest r1;

        r0 := @this: android.service.contentcapture.IContentCaptureService$Default;

        r1 := @parameter0: android.view.contentcapture.DataRemovalRequest;

        return;
    }

    public void onDataShared(android.view.contentcapture.DataShareRequest, android.service.contentcapture.IDataShareCallback) throws android.os.RemoteException
    {
        android.service.contentcapture.IContentCaptureService$Default r0;
        android.view.contentcapture.DataShareRequest r1;
        android.service.contentcapture.IDataShareCallback r2;

        r0 := @this: android.service.contentcapture.IContentCaptureService$Default;

        r1 := @parameter0: android.view.contentcapture.DataShareRequest;

        r2 := @parameter1: android.service.contentcapture.IDataShareCallback;

        return;
    }

    public void onDisconnected() throws android.os.RemoteException
    {
        android.service.contentcapture.IContentCaptureService$Default r0;

        r0 := @this: android.service.contentcapture.IContentCaptureService$Default;

        return;
    }

    public void onSessionFinished(int) throws android.os.RemoteException
    {
        android.service.contentcapture.IContentCaptureService$Default r0;
        int i0;

        r0 := @this: android.service.contentcapture.IContentCaptureService$Default;

        i0 := @parameter0: int;

        return;
    }

    public void onSessionStarted(android.view.contentcapture.ContentCaptureContext, int, int, com.android.internal.os.IResultReceiver, int) throws android.os.RemoteException
    {
        android.service.contentcapture.IContentCaptureService$Default r0;
        android.view.contentcapture.ContentCaptureContext r1;
        int i0, i1, i2;
        com.android.internal.os.IResultReceiver r2;

        r0 := @this: android.service.contentcapture.IContentCaptureService$Default;

        r1 := @parameter0: android.view.contentcapture.ContentCaptureContext;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: com.android.internal.os.IResultReceiver;

        i2 := @parameter4: int;

        return;
    }
}
