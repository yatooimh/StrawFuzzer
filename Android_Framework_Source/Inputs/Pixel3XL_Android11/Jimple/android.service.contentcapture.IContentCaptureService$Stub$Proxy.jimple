class android.service.contentcapture.IContentCaptureService$Stub$Proxy extends java.lang.Object implements android.service.contentcapture.IContentCaptureService
{
    public static android.service.contentcapture.IContentCaptureService sDefaultImpl;
    private android.os.IBinder mRemote;

    void <init>(android.os.IBinder)
    {
        android.service.contentcapture.IContentCaptureService$Stub$Proxy r0;
        android.os.IBinder r1;

        r0 := @this: android.service.contentcapture.IContentCaptureService$Stub$Proxy;

        r1 := @parameter0: android.os.IBinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.service.contentcapture.IContentCaptureService$Stub$Proxy: android.os.IBinder mRemote> = r1;

        return;
    }

    public android.os.IBinder asBinder()
    {
        android.service.contentcapture.IContentCaptureService$Stub$Proxy r0;
        android.os.IBinder $r1;

        r0 := @this: android.service.contentcapture.IContentCaptureService$Stub$Proxy;

        $r1 = r0.<android.service.contentcapture.IContentCaptureService$Stub$Proxy: android.os.IBinder mRemote>;

        return $r1;
    }

    public java.lang.String getInterfaceDescriptor()
    {
        android.service.contentcapture.IContentCaptureService$Stub$Proxy r0;

        r0 := @this: android.service.contentcapture.IContentCaptureService$Stub$Proxy;

        return "android.service.contentcapture.IContentCaptureService";
    }

    public void onActivityEvent(android.service.contentcapture.ActivityEvent) throws android.os.RemoteException
    {
        android.service.contentcapture.IContentCaptureService$Stub$Proxy r0;
        android.os.Parcel r1;
        android.os.IBinder $r2;
        boolean $z0;
        android.service.contentcapture.IContentCaptureService $r3, $r4;
        java.lang.Throwable $r5;
        android.service.contentcapture.ActivityEvent r6;

        r0 := @this: android.service.contentcapture.IContentCaptureService$Stub$Proxy;

        r6 := @parameter0: android.service.contentcapture.ActivityEvent;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.service.contentcapture.IContentCaptureService");

     label2:
        if r6 == null goto label5;

     label3:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r6.<android.service.contentcapture.ActivityEvent: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label4:
        goto label6;

     label5:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label6:
        $r2 = r0.<android.service.contentcapture.IContentCaptureService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r2.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(8, r1, null, 1);

        if $z0 != 0 goto label8;

        $r3 = staticinvoke <android.service.contentcapture.IContentCaptureService$Stub: android.service.contentcapture.IContentCaptureService getDefaultImpl()>();

        if $r3 == null goto label8;

        $r4 = staticinvoke <android.service.contentcapture.IContentCaptureService$Stub: android.service.contentcapture.IContentCaptureService getDefaultImpl()>();

        interfaceinvoke $r4.<android.service.contentcapture.IContentCaptureService: void onActivityEvent(android.service.contentcapture.ActivityEvent)>(r6);

     label7:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label8:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label9:
        $r5 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.Throwable from label3 to label4 with label9;
        catch java.lang.Throwable from label5 to label6 with label9;
        catch java.lang.Throwable from label6 to label7 with label9;
    }

    public void onActivitySnapshot(int, android.service.contentcapture.SnapshotData) throws android.os.RemoteException
    {
        android.service.contentcapture.IContentCaptureService$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1;
        android.os.IBinder $r2;
        boolean $z0;
        android.service.contentcapture.IContentCaptureService $r3, $r4;
        java.lang.Throwable $r5;
        android.service.contentcapture.SnapshotData r6;

        r0 := @this: android.service.contentcapture.IContentCaptureService$Stub$Proxy;

        i0 := @parameter0: int;

        r6 := @parameter1: android.service.contentcapture.SnapshotData;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.service.contentcapture.IContentCaptureService");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

     label2:
        if r6 == null goto label5;

     label3:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r6.<android.service.contentcapture.SnapshotData: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label4:
        goto label6;

     label5:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label6:
        $r2 = r0.<android.service.contentcapture.IContentCaptureService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r2.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(5, r1, null, 1);

        if $z0 != 0 goto label8;

        $r3 = staticinvoke <android.service.contentcapture.IContentCaptureService$Stub: android.service.contentcapture.IContentCaptureService getDefaultImpl()>();

        if $r3 == null goto label8;

        $r4 = staticinvoke <android.service.contentcapture.IContentCaptureService$Stub: android.service.contentcapture.IContentCaptureService getDefaultImpl()>();

        interfaceinvoke $r4.<android.service.contentcapture.IContentCaptureService: void onActivitySnapshot(int,android.service.contentcapture.SnapshotData)>(i0, r6);

     label7:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label8:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label9:
        $r5 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.Throwable from label3 to label4 with label9;
        catch java.lang.Throwable from label5 to label6 with label9;
        catch java.lang.Throwable from label6 to label7 with label9;
    }

    public void onConnected(android.os.IBinder, boolean, boolean) throws android.os.RemoteException
    {
        android.service.contentcapture.IContentCaptureService$Stub$Proxy r0;
        boolean z0, z1, $z2;
        android.os.Parcel r1;
        android.os.IBinder $r2, r6;
        android.service.contentcapture.IContentCaptureService $r3, $r4;
        java.lang.Throwable $r5;
        byte b1, b2;

        r0 := @this: android.service.contentcapture.IContentCaptureService$Stub$Proxy;

        r6 := @parameter0: android.os.IBinder;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.service.contentcapture.IContentCaptureService");

        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r6);

     label2:
        if z0 == 0 goto label3;

        b1 = 1;

        goto label4;

     label3:
        b1 = 0;

     label4:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b1);

     label5:
        b2 = 0;

        if z1 == 0 goto label6;

        b2 = 1;

     label6:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b2);

        $r2 = r0.<android.service.contentcapture.IContentCaptureService$Stub$Proxy: android.os.IBinder mRemote>;

        $z2 = interfaceinvoke $r2.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1, r1, null, 1);

        if $z2 != 0 goto label8;

        $r3 = staticinvoke <android.service.contentcapture.IContentCaptureService$Stub: android.service.contentcapture.IContentCaptureService getDefaultImpl()>();

        if $r3 == null goto label8;

        $r4 = staticinvoke <android.service.contentcapture.IContentCaptureService$Stub: android.service.contentcapture.IContentCaptureService getDefaultImpl()>();

        interfaceinvoke $r4.<android.service.contentcapture.IContentCaptureService: void onConnected(android.os.IBinder,boolean,boolean)>(r6, z0, z1);

     label7:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label8:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label9:
        $r5 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.Throwable from label4 to label5 with label9;
        catch java.lang.Throwable from label6 to label7 with label9;
    }

    public void onDataRemovalRequest(android.view.contentcapture.DataRemovalRequest) throws android.os.RemoteException
    {
        android.service.contentcapture.IContentCaptureService$Stub$Proxy r0;
        android.os.Parcel r1;
        android.os.IBinder $r2;
        boolean $z0;
        android.service.contentcapture.IContentCaptureService $r3, $r4;
        java.lang.Throwable $r5;
        android.view.contentcapture.DataRemovalRequest r6;

        r0 := @this: android.service.contentcapture.IContentCaptureService$Stub$Proxy;

        r6 := @parameter0: android.view.contentcapture.DataRemovalRequest;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.service.contentcapture.IContentCaptureService");

     label2:
        if r6 == null goto label5;

     label3:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r6.<android.view.contentcapture.DataRemovalRequest: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label4:
        goto label6;

     label5:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label6:
        $r2 = r0.<android.service.contentcapture.IContentCaptureService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r2.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(6, r1, null, 1);

        if $z0 != 0 goto label8;

        $r3 = staticinvoke <android.service.contentcapture.IContentCaptureService$Stub: android.service.contentcapture.IContentCaptureService getDefaultImpl()>();

        if $r3 == null goto label8;

        $r4 = staticinvoke <android.service.contentcapture.IContentCaptureService$Stub: android.service.contentcapture.IContentCaptureService getDefaultImpl()>();

        interfaceinvoke $r4.<android.service.contentcapture.IContentCaptureService: void onDataRemovalRequest(android.view.contentcapture.DataRemovalRequest)>(r6);

     label7:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label8:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label9:
        $r5 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.Throwable from label3 to label4 with label9;
        catch java.lang.Throwable from label5 to label6 with label9;
        catch java.lang.Throwable from label6 to label7 with label9;
    }

    public void onDataShared(android.view.contentcapture.DataShareRequest, android.service.contentcapture.IDataShareCallback) throws android.os.RemoteException
    {
        android.service.contentcapture.IContentCaptureService$Stub$Proxy r0;
        android.service.contentcapture.IDataShareCallback r1;
        android.os.Parcel r2;
        android.os.IBinder $r3, r8;
        boolean $z0;
        android.service.contentcapture.IContentCaptureService $r4, $r5;
        java.lang.Throwable $r6;
        android.view.contentcapture.DataShareRequest r7;

        r0 := @this: android.service.contentcapture.IContentCaptureService$Stub$Proxy;

        r7 := @parameter0: android.view.contentcapture.DataShareRequest;

        r1 := @parameter1: android.service.contentcapture.IDataShareCallback;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.service.contentcapture.IContentCaptureService");

     label02:
        if r7 == null goto label05;

     label03:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r7.<android.view.contentcapture.DataShareRequest: void writeToParcel(android.os.Parcel,int)>(r2, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        if r1 == null goto label09;

     label07:
        r8 = interfaceinvoke r1.<android.service.contentcapture.IDataShareCallback: android.os.IBinder asBinder()>();

     label08:
        goto label10;

     label09:
        r8 = null;

     label10:
        virtualinvoke r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r8);

        $r3 = r0.<android.service.contentcapture.IContentCaptureService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(7, r2, null, 1);

        if $z0 != 0 goto label12;

        $r4 = staticinvoke <android.service.contentcapture.IContentCaptureService$Stub: android.service.contentcapture.IContentCaptureService getDefaultImpl()>();

        if $r4 == null goto label12;

        $r5 = staticinvoke <android.service.contentcapture.IContentCaptureService$Stub: android.service.contentcapture.IContentCaptureService getDefaultImpl()>();

        interfaceinvoke $r5.<android.service.contentcapture.IContentCaptureService: void onDataShared(android.view.contentcapture.DataShareRequest,android.service.contentcapture.IDataShareCallback)>(r7, r1);

     label11:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label12:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label13:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label03 to label04 with label13;
        catch java.lang.Throwable from label05 to label06 with label13;
        catch java.lang.Throwable from label07 to label08 with label13;
        catch java.lang.Throwable from label10 to label11 with label13;
    }

    public void onDisconnected() throws android.os.RemoteException
    {
        android.service.contentcapture.IContentCaptureService$Stub$Proxy r0;
        android.os.Parcel r1;
        android.os.IBinder $r3;
        boolean $z0;
        android.service.contentcapture.IContentCaptureService $r4, $r5;
        java.lang.Throwable $r6;

        r0 := @this: android.service.contentcapture.IContentCaptureService$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.service.contentcapture.IContentCaptureService");

        $r3 = r0.<android.service.contentcapture.IContentCaptureService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(2, r1, null, 1);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.service.contentcapture.IContentCaptureService$Stub: android.service.contentcapture.IContentCaptureService getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.service.contentcapture.IContentCaptureService$Stub: android.service.contentcapture.IContentCaptureService getDefaultImpl()>();

        interfaceinvoke $r5.<android.service.contentcapture.IContentCaptureService: void onDisconnected()>();

     label2:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label4:
        $r6 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public void onSessionFinished(int) throws android.os.RemoteException
    {
        android.service.contentcapture.IContentCaptureService$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1;
        android.os.IBinder $r3;
        boolean $z0;
        android.service.contentcapture.IContentCaptureService $r4, $r5;
        java.lang.Throwable $r6;

        r0 := @this: android.service.contentcapture.IContentCaptureService$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.service.contentcapture.IContentCaptureService");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r3 = r0.<android.service.contentcapture.IContentCaptureService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(4, r1, null, 1);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.service.contentcapture.IContentCaptureService$Stub: android.service.contentcapture.IContentCaptureService getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.service.contentcapture.IContentCaptureService$Stub: android.service.contentcapture.IContentCaptureService getDefaultImpl()>();

        interfaceinvoke $r5.<android.service.contentcapture.IContentCaptureService: void onSessionFinished(int)>(i0);

     label2:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label4:
        $r6 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public void onSessionStarted(android.view.contentcapture.ContentCaptureContext, int, int, com.android.internal.os.IResultReceiver, int) throws android.os.RemoteException
    {
        android.service.contentcapture.IContentCaptureService$Stub$Proxy r0;
        int i0, i1, i2;
        com.android.internal.os.IResultReceiver r1;
        android.os.Parcel r2;
        android.os.IBinder $r3, r8;
        boolean $z0;
        android.service.contentcapture.IContentCaptureService $r4, $r5;
        java.lang.Throwable $r6;
        android.view.contentcapture.ContentCaptureContext r7;

        r0 := @this: android.service.contentcapture.IContentCaptureService$Stub$Proxy;

        r7 := @parameter0: android.view.contentcapture.ContentCaptureContext;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 := @parameter3: com.android.internal.os.IResultReceiver;

        i2 := @parameter4: int;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.service.contentcapture.IContentCaptureService");

     label02:
        if r7 == null goto label05;

     label03:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r7.<android.view.contentcapture.ContentCaptureContext: void writeToParcel(android.os.Parcel,int)>(r2, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i1);

     label07:
        if r1 == null goto label10;

     label08:
        r8 = interfaceinvoke r1.<com.android.internal.os.IResultReceiver: android.os.IBinder asBinder()>();

     label09:
        goto label11;

     label10:
        r8 = null;

     label11:
        virtualinvoke r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r8);

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i2);

        $r3 = r0.<android.service.contentcapture.IContentCaptureService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(3, r2, null, 1);

        if $z0 != 0 goto label13;

        $r4 = staticinvoke <android.service.contentcapture.IContentCaptureService$Stub: android.service.contentcapture.IContentCaptureService getDefaultImpl()>();

        if $r4 == null goto label13;

        $r5 = staticinvoke <android.service.contentcapture.IContentCaptureService$Stub: android.service.contentcapture.IContentCaptureService getDefaultImpl()>();

        interfaceinvoke $r5.<android.service.contentcapture.IContentCaptureService: void onSessionStarted(android.view.contentcapture.ContentCaptureContext,int,int,com.android.internal.os.IResultReceiver,int)>(r7, i0, i1, r1, i2);

     label12:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label13:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label14:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label14;
        catch java.lang.Throwable from label03 to label04 with label14;
        catch java.lang.Throwable from label05 to label06 with label14;
        catch java.lang.Throwable from label06 to label07 with label14;
        catch java.lang.Throwable from label08 to label09 with label14;
        catch java.lang.Throwable from label11 to label12 with label14;
    }
}
