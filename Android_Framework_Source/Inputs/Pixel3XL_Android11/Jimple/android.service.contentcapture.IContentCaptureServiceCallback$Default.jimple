public class android.service.contentcapture.IContentCaptureServiceCallback$Default extends java.lang.Object implements android.service.contentcapture.IContentCaptureServiceCallback
{

    public void <init>()
    {
        android.service.contentcapture.IContentCaptureServiceCallback$Default r0;

        r0 := @this: android.service.contentcapture.IContentCaptureServiceCallback$Default;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public android.os.IBinder asBinder()
    {
        android.service.contentcapture.IContentCaptureServiceCallback$Default r0;

        r0 := @this: android.service.contentcapture.IContentCaptureServiceCallback$Default;

        return null;
    }

    public void disableSelf() throws android.os.RemoteException
    {
        android.service.contentcapture.IContentCaptureServiceCallback$Default r0;

        r0 := @this: android.service.contentcapture.IContentCaptureServiceCallback$Default;

        return;
    }

    public void setContentCaptureConditions(java.lang.String, java.util.List) throws android.os.RemoteException
    {
        android.service.contentcapture.IContentCaptureServiceCallback$Default r0;
        java.lang.String r1;
        java.util.List r2;

        r0 := @this: android.service.contentcapture.IContentCaptureServiceCallback$Default;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.List;

        return;
    }

    public void setContentCaptureWhitelist(java.util.List, java.util.List) throws android.os.RemoteException
    {
        android.service.contentcapture.IContentCaptureServiceCallback$Default r0;
        java.util.List r1, r2;

        r0 := @this: android.service.contentcapture.IContentCaptureServiceCallback$Default;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: java.util.List;

        return;
    }

    public void writeSessionFlush(int, android.content.ComponentName, android.service.contentcapture.FlushMetrics, android.content.ContentCaptureOptions, int) throws android.os.RemoteException
    {
        android.service.contentcapture.IContentCaptureServiceCallback$Default r0;
        int i0, i1;
        android.content.ComponentName r1;
        android.service.contentcapture.FlushMetrics r2;
        android.content.ContentCaptureOptions r3;

        r0 := @this: android.service.contentcapture.IContentCaptureServiceCallback$Default;

        i0 := @parameter0: int;

        r1 := @parameter1: android.content.ComponentName;

        r2 := @parameter2: android.service.contentcapture.FlushMetrics;

        r3 := @parameter3: android.content.ContentCaptureOptions;

        i1 := @parameter4: int;

        return;
    }
}
