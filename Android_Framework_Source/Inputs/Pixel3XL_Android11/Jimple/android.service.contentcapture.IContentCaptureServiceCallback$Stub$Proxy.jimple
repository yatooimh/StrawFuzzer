class android.service.contentcapture.IContentCaptureServiceCallback$Stub$Proxy extends java.lang.Object implements android.service.contentcapture.IContentCaptureServiceCallback
{
    public static android.service.contentcapture.IContentCaptureServiceCallback sDefaultImpl;
    private android.os.IBinder mRemote;

    void <init>(android.os.IBinder)
    {
        android.service.contentcapture.IContentCaptureServiceCallback$Stub$Proxy r0;
        android.os.IBinder r1;

        r0 := @this: android.service.contentcapture.IContentCaptureServiceCallback$Stub$Proxy;

        r1 := @parameter0: android.os.IBinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.service.contentcapture.IContentCaptureServiceCallback$Stub$Proxy: android.os.IBinder mRemote> = r1;

        return;
    }

    public android.os.IBinder asBinder()
    {
        android.service.contentcapture.IContentCaptureServiceCallback$Stub$Proxy r0;
        android.os.IBinder $r1;

        r0 := @this: android.service.contentcapture.IContentCaptureServiceCallback$Stub$Proxy;

        $r1 = r0.<android.service.contentcapture.IContentCaptureServiceCallback$Stub$Proxy: android.os.IBinder mRemote>;

        return $r1;
    }

    public void disableSelf() throws android.os.RemoteException
    {
        android.service.contentcapture.IContentCaptureServiceCallback$Stub$Proxy r0;
        android.os.Parcel r1;
        android.os.IBinder $r3;
        boolean $z0;
        android.service.contentcapture.IContentCaptureServiceCallback $r4, $r5;
        java.lang.Throwable $r6;

        r0 := @this: android.service.contentcapture.IContentCaptureServiceCallback$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.service.contentcapture.IContentCaptureServiceCallback");

        $r3 = r0.<android.service.contentcapture.IContentCaptureServiceCallback$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(3, r1, null, 1);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.service.contentcapture.IContentCaptureServiceCallback$Stub: android.service.contentcapture.IContentCaptureServiceCallback getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.service.contentcapture.IContentCaptureServiceCallback$Stub: android.service.contentcapture.IContentCaptureServiceCallback getDefaultImpl()>();

        interfaceinvoke $r5.<android.service.contentcapture.IContentCaptureServiceCallback: void disableSelf()>();

     label2:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label4:
        $r6 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public java.lang.String getInterfaceDescriptor()
    {
        android.service.contentcapture.IContentCaptureServiceCallback$Stub$Proxy r0;

        r0 := @this: android.service.contentcapture.IContentCaptureServiceCallback$Stub$Proxy;

        return "android.service.contentcapture.IContentCaptureServiceCallback";
    }

    public void setContentCaptureConditions(java.lang.String, java.util.List) throws android.os.RemoteException
    {
        android.service.contentcapture.IContentCaptureServiceCallback$Stub$Proxy r0;
        java.util.List r1;
        android.os.Parcel r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.service.contentcapture.IContentCaptureServiceCallback $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7;

        r0 := @this: android.service.contentcapture.IContentCaptureServiceCallback$Stub$Proxy;

        r7 := @parameter0: java.lang.String;

        r1 := @parameter1: java.util.List;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.service.contentcapture.IContentCaptureServiceCallback");

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r7);

        virtualinvoke r2.<android.os.Parcel: void writeTypedList(java.util.List)>(r1);

        $r3 = r0.<android.service.contentcapture.IContentCaptureServiceCallback$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(2, r2, null, 1);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.service.contentcapture.IContentCaptureServiceCallback$Stub: android.service.contentcapture.IContentCaptureServiceCallback getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.service.contentcapture.IContentCaptureServiceCallback$Stub: android.service.contentcapture.IContentCaptureServiceCallback getDefaultImpl()>();

        interfaceinvoke $r5.<android.service.contentcapture.IContentCaptureServiceCallback: void setContentCaptureConditions(java.lang.String,java.util.List)>(r7, r1);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label4:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public void setContentCaptureWhitelist(java.util.List, java.util.List) throws android.os.RemoteException
    {
        android.service.contentcapture.IContentCaptureServiceCallback$Stub$Proxy r0;
        java.util.List r1, r7;
        android.os.Parcel r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.service.contentcapture.IContentCaptureServiceCallback $r4, $r5;
        java.lang.Throwable $r6;

        r0 := @this: android.service.contentcapture.IContentCaptureServiceCallback$Stub$Proxy;

        r7 := @parameter0: java.util.List;

        r1 := @parameter1: java.util.List;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.service.contentcapture.IContentCaptureServiceCallback");

        virtualinvoke r2.<android.os.Parcel: void writeStringList(java.util.List)>(r7);

        virtualinvoke r2.<android.os.Parcel: void writeTypedList(java.util.List)>(r1);

        $r3 = r0.<android.service.contentcapture.IContentCaptureServiceCallback$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1, r2, null, 1);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.service.contentcapture.IContentCaptureServiceCallback$Stub: android.service.contentcapture.IContentCaptureServiceCallback getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.service.contentcapture.IContentCaptureServiceCallback$Stub: android.service.contentcapture.IContentCaptureServiceCallback getDefaultImpl()>();

        interfaceinvoke $r5.<android.service.contentcapture.IContentCaptureServiceCallback: void setContentCaptureWhitelist(java.util.List,java.util.List)>(r7, r1);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label4:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public void writeSessionFlush(int, android.content.ComponentName, android.service.contentcapture.FlushMetrics, android.content.ContentCaptureOptions, int) throws android.os.RemoteException
    {
        android.service.contentcapture.IContentCaptureServiceCallback$Stub$Proxy r0;
        int i0, i1;
        android.service.contentcapture.FlushMetrics r1;
        android.content.ContentCaptureOptions r2;
        android.os.Parcel r3;
        android.os.IBinder $r4;
        boolean $z0;
        android.service.contentcapture.IContentCaptureServiceCallback $r5, $r6;
        java.lang.Throwable $r7;
        android.content.ComponentName r8;

        r0 := @this: android.service.contentcapture.IContentCaptureServiceCallback$Stub$Proxy;

        i0 := @parameter0: int;

        r8 := @parameter1: android.content.ComponentName;

        r1 := @parameter2: android.service.contentcapture.FlushMetrics;

        r2 := @parameter3: android.content.ContentCaptureOptions;

        i1 := @parameter4: int;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.service.contentcapture.IContentCaptureServiceCallback");

        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(i0);

     label02:
        if r8 == null goto label05;

     label03:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r8.<android.content.ComponentName: void writeToParcel(android.os.Parcel,int)>(r3, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        if r1 == null goto label09;

     label07:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<android.service.contentcapture.FlushMetrics: void writeToParcel(android.os.Parcel,int)>(r3, 0);

     label08:
        goto label10;

     label09:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(0);

     label10:
        if r2 == null goto label13;

     label11:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r2.<android.content.ContentCaptureOptions: void writeToParcel(android.os.Parcel,int)>(r3, 0);

     label12:
        goto label14;

     label13:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(0);

     label14:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(i1);

        $r4 = r0.<android.service.contentcapture.IContentCaptureServiceCallback$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(4, r3, null, 1);

        if $z0 != 0 goto label16;

        $r5 = staticinvoke <android.service.contentcapture.IContentCaptureServiceCallback$Stub: android.service.contentcapture.IContentCaptureServiceCallback getDefaultImpl()>();

        if $r5 == null goto label16;

        $r6 = staticinvoke <android.service.contentcapture.IContentCaptureServiceCallback$Stub: android.service.contentcapture.IContentCaptureServiceCallback getDefaultImpl()>();

        interfaceinvoke $r6.<android.service.contentcapture.IContentCaptureServiceCallback: void writeSessionFlush(int,android.content.ComponentName,android.service.contentcapture.FlushMetrics,android.content.ContentCaptureOptions,int)>(i0, r8, r1, r2, i1);

     label15:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label16:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label17:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label17;
        catch java.lang.Throwable from label03 to label04 with label17;
        catch java.lang.Throwable from label05 to label06 with label17;
        catch java.lang.Throwable from label07 to label08 with label17;
        catch java.lang.Throwable from label09 to label10 with label17;
        catch java.lang.Throwable from label11 to label12 with label17;
        catch java.lang.Throwable from label13 to label14 with label17;
        catch java.lang.Throwable from label14 to label15 with label17;
    }
}
