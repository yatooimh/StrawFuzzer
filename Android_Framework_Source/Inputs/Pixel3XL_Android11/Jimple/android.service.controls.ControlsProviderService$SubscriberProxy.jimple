class android.service.controls.ControlsProviderService$SubscriberProxy extends java.lang.Object implements java.util.concurrent.Flow$Subscriber
{
    private android.service.controls.IControlsSubscriber mCs;
    private boolean mEnforceStateless;
    private android.os.IBinder mToken;

    void <init>(boolean, android.os.IBinder, android.service.controls.IControlsSubscriber)
    {
        android.service.controls.ControlsProviderService$SubscriberProxy r0;
        boolean z0;
        android.os.IBinder r1;
        android.service.controls.IControlsSubscriber r2;

        r0 := @this: android.service.controls.ControlsProviderService$SubscriberProxy;

        z0 := @parameter0: boolean;

        r1 := @parameter1: android.os.IBinder;

        r2 := @parameter2: android.service.controls.IControlsSubscriber;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.service.controls.ControlsProviderService$SubscriberProxy: boolean mEnforceStateless> = z0;

        r0.<android.service.controls.ControlsProviderService$SubscriberProxy: android.os.IBinder mToken> = r1;

        r0.<android.service.controls.ControlsProviderService$SubscriberProxy: android.service.controls.IControlsSubscriber mCs> = r2;

        return;
    }

    public void onComplete()
    {
        android.service.controls.ControlsProviderService$SubscriberProxy r0;
        android.os.IBinder $r2;
        android.service.controls.IControlsSubscriber $r3;
        android.os.RemoteException $r4;

        r0 := @this: android.service.controls.ControlsProviderService$SubscriberProxy;

     label1:
        $r3 = r0.<android.service.controls.ControlsProviderService$SubscriberProxy: android.service.controls.IControlsSubscriber mCs>;

        $r2 = r0.<android.service.controls.ControlsProviderService$SubscriberProxy: android.os.IBinder mToken>;

        interfaceinvoke $r3.<android.service.controls.IControlsSubscriber: void onComplete(android.os.IBinder)>($r2);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        virtualinvoke $r4.<android.os.RemoteException: java.lang.RuntimeException rethrowAsRuntimeException()>();

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void onError(java.lang.Throwable)
    {
        android.service.controls.ControlsProviderService$SubscriberProxy r0;
        android.service.controls.IControlsSubscriber $r1;
        android.os.IBinder $r2;
        java.lang.String $r3;
        android.os.RemoteException $r4;
        java.lang.Throwable r6;

        r0 := @this: android.service.controls.ControlsProviderService$SubscriberProxy;

        r6 := @parameter0: java.lang.Throwable;

     label1:
        $r1 = r0.<android.service.controls.ControlsProviderService$SubscriberProxy: android.service.controls.IControlsSubscriber mCs>;

        $r2 = r0.<android.service.controls.ControlsProviderService$SubscriberProxy: android.os.IBinder mToken>;

        $r3 = virtualinvoke r6.<java.lang.Throwable: java.lang.String toString()>();

        interfaceinvoke $r1.<android.service.controls.IControlsSubscriber: void onError(android.os.IBinder,java.lang.String)>($r2, $r3);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        virtualinvoke $r4.<android.os.RemoteException: java.lang.RuntimeException rethrowAsRuntimeException()>();

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void onNext(android.service.controls.Control)
    {
        android.service.controls.ControlsProviderService$SubscriberProxy r0;
        boolean $z0, $z1;
        android.os.RemoteException $r2;
        android.service.controls.Control r4, r5;
        android.service.controls.Control$StatelessBuilder r6;
        android.service.controls.IControlsSubscriber $r7;
        android.os.IBinder $r8;

        r0 := @this: android.service.controls.ControlsProviderService$SubscriberProxy;

        r4 := @parameter0: android.service.controls.Control;

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r4);

        r5 = r4;

     label1:
        $z0 = r0.<android.service.controls.ControlsProviderService$SubscriberProxy: boolean mEnforceStateless>;

        if $z0 == 0 goto label4;

     label2:
        r5 = r4;

     label3:
        $z1 = staticinvoke <android.service.controls.ControlsProviderService: boolean access$200(android.service.controls.Control)>(r4);

        if $z1 != 0 goto label4;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ControlsProviderService", "onNext(): control is not stateless. Use the Control.StatelessBuilder() to build the control.");

        r6 = new android.service.controls.Control$StatelessBuilder;

        specialinvoke r6.<android.service.controls.Control$StatelessBuilder: void <init>(android.service.controls.Control)>(r4);

        r5 = virtualinvoke r6.<android.service.controls.Control$StatelessBuilder: android.service.controls.Control build()>();

     label4:
        $r7 = r0.<android.service.controls.ControlsProviderService$SubscriberProxy: android.service.controls.IControlsSubscriber mCs>;

        $r8 = r0.<android.service.controls.ControlsProviderService$SubscriberProxy: android.os.IBinder mToken>;

        interfaceinvoke $r7.<android.service.controls.IControlsSubscriber: void onNext(android.os.IBinder,android.service.controls.Control)>($r8, r5);

     label5:
        goto label7;

     label6:
        $r2 := @caughtexception;

        virtualinvoke $r2.<android.os.RemoteException: java.lang.RuntimeException rethrowAsRuntimeException()>();

     label7:
        return;

        catch android.os.RemoteException from label1 to label2 with label6;
        catch android.os.RemoteException from label3 to label4 with label6;
        catch android.os.RemoteException from label4 to label5 with label6;
    }

    public volatile void onNext(java.lang.Object)
    {
        android.service.controls.ControlsProviderService$SubscriberProxy r0;
        java.lang.Object r1;
        android.service.controls.Control $r2;

        r0 := @this: android.service.controls.ControlsProviderService$SubscriberProxy;

        r1 := @parameter0: java.lang.Object;

        $r2 = (android.service.controls.Control) r1;

        virtualinvoke r0.<android.service.controls.ControlsProviderService$SubscriberProxy: void onNext(android.service.controls.Control)>($r2);

        return;
    }

    public void onSubscribe(java.util.concurrent.Flow$Subscription)
    {
        android.service.controls.ControlsProviderService$SubscriberProxy r0;
        android.service.controls.IControlsSubscriber r1;
        android.os.IBinder r2;
        android.service.controls.ControlsProviderService$SubscriptionAdapter r3;
        android.os.RemoteException $r4;
        java.util.concurrent.Flow$Subscription r6;

        r0 := @this: android.service.controls.ControlsProviderService$SubscriberProxy;

        r6 := @parameter0: java.util.concurrent.Flow$Subscription;

     label1:
        r1 = r0.<android.service.controls.ControlsProviderService$SubscriberProxy: android.service.controls.IControlsSubscriber mCs>;

        r2 = r0.<android.service.controls.ControlsProviderService$SubscriberProxy: android.os.IBinder mToken>;

        r3 = new android.service.controls.ControlsProviderService$SubscriptionAdapter;

        specialinvoke r3.<android.service.controls.ControlsProviderService$SubscriptionAdapter: void <init>(java.util.concurrent.Flow$Subscription)>(r6);

        interfaceinvoke r1.<android.service.controls.IControlsSubscriber: void onSubscribe(android.os.IBinder,android.service.controls.IControlsSubscription)>(r2, r3);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        virtualinvoke $r4.<android.os.RemoteException: java.lang.RuntimeException rethrowAsRuntimeException()>();

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }
}
