public abstract class android.service.controls.ControlsProviderService extends android.app.Service
{
    public static final java.lang.String ACTION_ADD_CONTROL;
    public static final java.lang.String CALLBACK_BUNDLE;
    public static final java.lang.String CALLBACK_TOKEN;
    public static final java.lang.String EXTRA_CONTROL;
    public static final java.lang.String SERVICE_CONTROLS;
    public static final java.lang.String TAG;
    private android.service.controls.ControlsProviderService$RequestHandler mHandler;
    private android.os.IBinder mToken;

    public void <init>()
    {
        android.service.controls.ControlsProviderService r0;

        r0 := @this: android.service.controls.ControlsProviderService;

        specialinvoke r0.<android.app.Service: void <init>()>();

        return;
    }

    static android.service.controls.ControlsProviderService$RequestHandler access$000(android.service.controls.ControlsProviderService)
    {
        android.service.controls.ControlsProviderService r0;
        android.service.controls.ControlsProviderService$RequestHandler $r1;

        r0 := @parameter0: android.service.controls.ControlsProviderService;

        $r1 = r0.<android.service.controls.ControlsProviderService: android.service.controls.ControlsProviderService$RequestHandler mHandler>;

        return $r1;
    }

    static android.os.IBinder access$100(android.service.controls.ControlsProviderService)
    {
        android.service.controls.ControlsProviderService r0;
        android.os.IBinder $r1;

        r0 := @parameter0: android.service.controls.ControlsProviderService;

        $r1 = r0.<android.service.controls.ControlsProviderService: android.os.IBinder mToken>;

        return $r1;
    }

    static boolean access$200(android.service.controls.Control)
    {
        android.service.controls.Control r0;
        boolean $z0;

        r0 := @parameter0: android.service.controls.Control;

        $z0 = staticinvoke <android.service.controls.ControlsProviderService: boolean isStatelessControl(android.service.controls.Control)>(r0);

        return $z0;
    }

    private static boolean isStatelessControl(android.service.controls.Control)
    {
        android.service.controls.Control r0;
        int $i0, $i1;
        android.service.controls.templates.ControlTemplate $r1;
        java.lang.CharSequence $r2;
        boolean $z0, z1;

        r0 := @parameter0: android.service.controls.Control;

        $i0 = virtualinvoke r0.<android.service.controls.Control: int getStatus()>();

        if $i0 != 0 goto label1;

        $r1 = virtualinvoke r0.<android.service.controls.Control: android.service.controls.templates.ControlTemplate getControlTemplate()>();

        $i1 = virtualinvoke $r1.<android.service.controls.templates.ControlTemplate: int getTemplateType()>();

        if $i1 != 0 goto label1;

        $r2 = virtualinvoke r0.<android.service.controls.Control: java.lang.CharSequence getStatusText()>();

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r2);

        if $z0 == 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    public static void requestAddControl(android.content.Context, android.content.ComponentName, android.service.controls.Control)
    {
        android.content.Context r0;
        android.content.ComponentName r1;
        android.service.controls.Control r2, $r12;
        java.lang.String r3;
        android.content.Intent $r8;
        boolean $z0;
        android.service.controls.Control$StatelessBuilder $r11;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: android.content.ComponentName;

        r2 := @parameter2: android.service.controls.Control;

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r0);

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r2);

        r3 = virtualinvoke r0.<android.content.Context: java.lang.String getString(int)>(17039841);

        $r8 = new android.content.Intent;

        specialinvoke $r8.<android.content.Intent: void <init>(java.lang.String)>("android.service.controls.action.ADD_CONTROL");

        virtualinvoke $r8.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("android.intent.extra.COMPONENT_NAME", r1);

        virtualinvoke $r8.<android.content.Intent: android.content.Intent setPackage(java.lang.String)>(r3);

        $z0 = staticinvoke <android.service.controls.ControlsProviderService: boolean isStatelessControl(android.service.controls.Control)>(r2);

        if $z0 == 0 goto label1;

        virtualinvoke $r8.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("android.service.controls.extra.CONTROL", r2);

        goto label2;

     label1:
        $r11 = new android.service.controls.Control$StatelessBuilder;

        specialinvoke $r11.<android.service.controls.Control$StatelessBuilder: void <init>(android.service.controls.Control)>(r2);

        $r12 = virtualinvoke $r11.<android.service.controls.Control$StatelessBuilder: android.service.controls.Control build()>();

        virtualinvoke $r8.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("android.service.controls.extra.CONTROL", $r12);

     label2:
        virtualinvoke r0.<android.content.Context: void sendBroadcast(android.content.Intent,java.lang.String)>($r8, "android.permission.BIND_CONTROLS");

        return;
    }

    public abstract java.util.concurrent.Flow$Publisher createPublisherFor(java.util.List);

    public abstract java.util.concurrent.Flow$Publisher createPublisherForAllAvailable();

    public java.util.concurrent.Flow$Publisher createPublisherForSuggested()
    {
        android.service.controls.ControlsProviderService r0;

        r0 := @this: android.service.controls.ControlsProviderService;

        return null;
    }

    public final android.os.IBinder onBind(android.content.Intent)
    {
        android.service.controls.ControlsProviderService r0;
        android.content.Intent r1;
        android.service.controls.ControlsProviderService$RequestHandler $r2;
        android.os.Looper $r3;
        android.os.Bundle $r4;
        android.os.IBinder $r5;
        android.service.controls.ControlsProviderService$1 $r6;

        r0 := @this: android.service.controls.ControlsProviderService;

        r1 := @parameter0: android.content.Intent;

        $r2 = new android.service.controls.ControlsProviderService$RequestHandler;

        $r3 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        specialinvoke $r2.<android.service.controls.ControlsProviderService$RequestHandler: void <init>(android.service.controls.ControlsProviderService,android.os.Looper)>(r0, $r3);

        r0.<android.service.controls.ControlsProviderService: android.service.controls.ControlsProviderService$RequestHandler mHandler> = $r2;

        $r4 = virtualinvoke r1.<android.content.Intent: android.os.Bundle getBundleExtra(java.lang.String)>("CALLBACK_BUNDLE");

        $r5 = virtualinvoke $r4.<android.os.Bundle: android.os.IBinder getBinder(java.lang.String)>("CALLBACK_TOKEN");

        r0.<android.service.controls.ControlsProviderService: android.os.IBinder mToken> = $r5;

        $r6 = new android.service.controls.ControlsProviderService$1;

        specialinvoke $r6.<android.service.controls.ControlsProviderService$1: void <init>(android.service.controls.ControlsProviderService)>(r0);

        return $r6;
    }

    public final boolean onUnbind(android.content.Intent)
    {
        android.service.controls.ControlsProviderService r0;
        android.content.Intent r1;

        r0 := @this: android.service.controls.ControlsProviderService;

        r1 := @parameter0: android.content.Intent;

        r0.<android.service.controls.ControlsProviderService: android.service.controls.ControlsProviderService$RequestHandler mHandler> = null;

        return 1;
    }

    public abstract void performControlAction(java.lang.String, android.service.controls.actions.ControlAction, java.util.function.Consumer);

    public static void <clinit>()
    {
        <android.service.controls.ControlsProviderService: java.lang.String TAG> = "ControlsProviderService";

        <android.service.controls.ControlsProviderService: java.lang.String SERVICE_CONTROLS> = "android.service.controls.ControlsProviderService";

        <android.service.controls.ControlsProviderService: java.lang.String EXTRA_CONTROL> = "android.service.controls.extra.CONTROL";

        <android.service.controls.ControlsProviderService: java.lang.String CALLBACK_TOKEN> = "CALLBACK_TOKEN";

        <android.service.controls.ControlsProviderService: java.lang.String CALLBACK_BUNDLE> = "CALLBACK_BUNDLE";

        <android.service.controls.ControlsProviderService: java.lang.String ACTION_ADD_CONTROL> = "android.service.controls.action.ADD_CONTROL";

        return;
    }
}
