class android.service.controls.IControlsProvider$Stub$Proxy extends java.lang.Object implements android.service.controls.IControlsProvider
{
    public static android.service.controls.IControlsProvider sDefaultImpl;
    private android.os.IBinder mRemote;

    void <init>(android.os.IBinder)
    {
        android.service.controls.IControlsProvider$Stub$Proxy r0;
        android.os.IBinder r1;

        r0 := @this: android.service.controls.IControlsProvider$Stub$Proxy;

        r1 := @parameter0: android.os.IBinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.service.controls.IControlsProvider$Stub$Proxy: android.os.IBinder mRemote> = r1;

        return;
    }

    public void action(java.lang.String, android.service.controls.actions.ControlActionWrapper, android.service.controls.IControlsActionCallback) throws android.os.RemoteException
    {
        android.service.controls.IControlsProvider$Stub$Proxy r0;
        android.service.controls.actions.ControlActionWrapper r1;
        android.service.controls.IControlsActionCallback r2;
        android.os.Parcel r3;
        android.os.IBinder $r4, r9;
        boolean $z0;
        android.service.controls.IControlsProvider $r5, $r6;
        java.lang.Throwable $r7;
        java.lang.String r8;

        r0 := @this: android.service.controls.IControlsProvider$Stub$Proxy;

        r8 := @parameter0: java.lang.String;

        r1 := @parameter1: android.service.controls.actions.ControlActionWrapper;

        r2 := @parameter2: android.service.controls.IControlsActionCallback;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.service.controls.IControlsProvider");

        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r8);

     label02:
        if r1 == null goto label05;

     label03:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<android.service.controls.actions.ControlActionWrapper: void writeToParcel(android.os.Parcel,int)>(r3, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        if r2 == null goto label09;

     label07:
        r9 = interfaceinvoke r2.<android.service.controls.IControlsActionCallback: android.os.IBinder asBinder()>();

     label08:
        goto label10;

     label09:
        r9 = null;

     label10:
        virtualinvoke r3.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r9);

        $r4 = r0.<android.service.controls.IControlsProvider$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(4, r3, null, 1);

        if $z0 != 0 goto label12;

        $r5 = staticinvoke <android.service.controls.IControlsProvider$Stub: android.service.controls.IControlsProvider getDefaultImpl()>();

        if $r5 == null goto label12;

        $r6 = staticinvoke <android.service.controls.IControlsProvider$Stub: android.service.controls.IControlsProvider getDefaultImpl()>();

        interfaceinvoke $r6.<android.service.controls.IControlsProvider: void action(java.lang.String,android.service.controls.actions.ControlActionWrapper,android.service.controls.IControlsActionCallback)>(r8, r1, r2);

     label11:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label12:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label13:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label03 to label04 with label13;
        catch java.lang.Throwable from label05 to label06 with label13;
        catch java.lang.Throwable from label07 to label08 with label13;
        catch java.lang.Throwable from label10 to label11 with label13;
    }

    public android.os.IBinder asBinder()
    {
        android.service.controls.IControlsProvider$Stub$Proxy r0;
        android.os.IBinder $r1;

        r0 := @this: android.service.controls.IControlsProvider$Stub$Proxy;

        $r1 = r0.<android.service.controls.IControlsProvider$Stub$Proxy: android.os.IBinder mRemote>;

        return $r1;
    }

    public java.lang.String getInterfaceDescriptor()
    {
        android.service.controls.IControlsProvider$Stub$Proxy r0;

        r0 := @this: android.service.controls.IControlsProvider$Stub$Proxy;

        return "android.service.controls.IControlsProvider";
    }

    public void load(android.service.controls.IControlsSubscriber) throws android.os.RemoteException
    {
        android.service.controls.IControlsProvider$Stub$Proxy r0;
        android.os.Parcel r1;
        android.os.IBinder $r2, r7;
        boolean $z0;
        android.service.controls.IControlsProvider $r3, $r4;
        java.lang.Throwable $r5;
        android.service.controls.IControlsSubscriber r6;

        r0 := @this: android.service.controls.IControlsProvider$Stub$Proxy;

        r6 := @parameter0: android.service.controls.IControlsSubscriber;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.service.controls.IControlsProvider");

     label2:
        if r6 == null goto label5;

     label3:
        r7 = interfaceinvoke r6.<android.service.controls.IControlsSubscriber: android.os.IBinder asBinder()>();

     label4:
        goto label6;

     label5:
        r7 = null;

     label6:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r7);

        $r2 = r0.<android.service.controls.IControlsProvider$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r2.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1, r1, null, 1);

        if $z0 != 0 goto label8;

        $r3 = staticinvoke <android.service.controls.IControlsProvider$Stub: android.service.controls.IControlsProvider getDefaultImpl()>();

        if $r3 == null goto label8;

        $r4 = staticinvoke <android.service.controls.IControlsProvider$Stub: android.service.controls.IControlsProvider getDefaultImpl()>();

        interfaceinvoke $r4.<android.service.controls.IControlsProvider: void load(android.service.controls.IControlsSubscriber)>(r6);

     label7:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label8:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label9:
        $r5 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.Throwable from label3 to label4 with label9;
        catch java.lang.Throwable from label6 to label7 with label9;
    }

    public void loadSuggested(android.service.controls.IControlsSubscriber) throws android.os.RemoteException
    {
        android.service.controls.IControlsProvider$Stub$Proxy r0;
        android.os.Parcel r1;
        android.os.IBinder $r2, r7;
        boolean $z0;
        android.service.controls.IControlsProvider $r3, $r4;
        java.lang.Throwable $r5;
        android.service.controls.IControlsSubscriber r6;

        r0 := @this: android.service.controls.IControlsProvider$Stub$Proxy;

        r6 := @parameter0: android.service.controls.IControlsSubscriber;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.service.controls.IControlsProvider");

     label2:
        if r6 == null goto label5;

     label3:
        r7 = interfaceinvoke r6.<android.service.controls.IControlsSubscriber: android.os.IBinder asBinder()>();

     label4:
        goto label6;

     label5:
        r7 = null;

     label6:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r7);

        $r2 = r0.<android.service.controls.IControlsProvider$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r2.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(2, r1, null, 1);

        if $z0 != 0 goto label8;

        $r3 = staticinvoke <android.service.controls.IControlsProvider$Stub: android.service.controls.IControlsProvider getDefaultImpl()>();

        if $r3 == null goto label8;

        $r4 = staticinvoke <android.service.controls.IControlsProvider$Stub: android.service.controls.IControlsProvider getDefaultImpl()>();

        interfaceinvoke $r4.<android.service.controls.IControlsProvider: void loadSuggested(android.service.controls.IControlsSubscriber)>(r6);

     label7:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label8:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label9:
        $r5 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.Throwable from label3 to label4 with label9;
        catch java.lang.Throwable from label6 to label7 with label9;
    }

    public void subscribe(java.util.List, android.service.controls.IControlsSubscriber) throws android.os.RemoteException
    {
        android.service.controls.IControlsProvider$Stub$Proxy r0;
        android.service.controls.IControlsSubscriber r1;
        android.os.Parcel r2;
        android.os.IBinder $r3, r8;
        boolean $z0;
        android.service.controls.IControlsProvider $r4, $r5;
        java.lang.Throwable $r6;
        java.util.List r7;

        r0 := @this: android.service.controls.IControlsProvider$Stub$Proxy;

        r7 := @parameter0: java.util.List;

        r1 := @parameter1: android.service.controls.IControlsSubscriber;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.service.controls.IControlsProvider");

        virtualinvoke r2.<android.os.Parcel: void writeStringList(java.util.List)>(r7);

     label2:
        if r1 == null goto label5;

     label3:
        r8 = interfaceinvoke r1.<android.service.controls.IControlsSubscriber: android.os.IBinder asBinder()>();

     label4:
        goto label6;

     label5:
        r8 = null;

     label6:
        virtualinvoke r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r8);

        $r3 = r0.<android.service.controls.IControlsProvider$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(3, r2, null, 1);

        if $z0 != 0 goto label8;

        $r4 = staticinvoke <android.service.controls.IControlsProvider$Stub: android.service.controls.IControlsProvider getDefaultImpl()>();

        if $r4 == null goto label8;

        $r5 = staticinvoke <android.service.controls.IControlsProvider$Stub: android.service.controls.IControlsProvider getDefaultImpl()>();

        interfaceinvoke $r5.<android.service.controls.IControlsProvider: void subscribe(java.util.List,android.service.controls.IControlsSubscriber)>(r7, r1);

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label8:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label9:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.Throwable from label3 to label4 with label9;
        catch java.lang.Throwable from label6 to label7 with label9;
    }
}
