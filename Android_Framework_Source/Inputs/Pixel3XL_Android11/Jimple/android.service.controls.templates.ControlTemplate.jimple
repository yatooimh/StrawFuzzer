public abstract class android.service.controls.templates.ControlTemplate extends java.lang.Object
{
    private static final android.service.controls.templates.ControlTemplate ERROR_TEMPLATE;
    private static final java.lang.String KEY_TEMPLATE_ID;
    private static final java.lang.String KEY_TEMPLATE_TYPE;
    public static final android.service.controls.templates.ControlTemplate NO_TEMPLATE;
    private static final java.lang.String TAG;
    public static final int TYPE_ERROR;
    public static final int TYPE_NO_TEMPLATE;
    public static final int TYPE_RANGE;
    public static final int TYPE_STATELESS;
    public static final int TYPE_TEMPERATURE;
    public static final int TYPE_TOGGLE;
    public static final int TYPE_TOGGLE_RANGE;
    private final java.lang.String mTemplateId;

    static void <clinit>()
    {
        android.service.controls.templates.ControlTemplate$1 $r0;
        android.service.controls.templates.ControlTemplate$2 $r1;

        <android.service.controls.templates.ControlTemplate: int TYPE_TOGGLE_RANGE> = 6;

        <android.service.controls.templates.ControlTemplate: int TYPE_TOGGLE> = 1;

        <android.service.controls.templates.ControlTemplate: int TYPE_TEMPERATURE> = 7;

        <android.service.controls.templates.ControlTemplate: int TYPE_STATELESS> = 8;

        <android.service.controls.templates.ControlTemplate: int TYPE_RANGE> = 2;

        <android.service.controls.templates.ControlTemplate: int TYPE_NO_TEMPLATE> = 0;

        <android.service.controls.templates.ControlTemplate: int TYPE_ERROR> = -1;

        <android.service.controls.templates.ControlTemplate: java.lang.String TAG> = "ControlTemplate";

        <android.service.controls.templates.ControlTemplate: java.lang.String KEY_TEMPLATE_TYPE> = "key_template_type";

        <android.service.controls.templates.ControlTemplate: java.lang.String KEY_TEMPLATE_ID> = "key_template_id";

        $r0 = new android.service.controls.templates.ControlTemplate$1;

        specialinvoke $r0.<android.service.controls.templates.ControlTemplate$1: void <init>(java.lang.String)>("");

        <android.service.controls.templates.ControlTemplate: android.service.controls.templates.ControlTemplate NO_TEMPLATE> = $r0;

        $r1 = new android.service.controls.templates.ControlTemplate$2;

        specialinvoke $r1.<android.service.controls.templates.ControlTemplate$2: void <init>(java.lang.String)>("");

        <android.service.controls.templates.ControlTemplate: android.service.controls.templates.ControlTemplate ERROR_TEMPLATE> = $r1;

        return;
    }

    private void <init>()
    {
        android.service.controls.templates.ControlTemplate r0;

        r0 := @this: android.service.controls.templates.ControlTemplate;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.service.controls.templates.ControlTemplate: java.lang.String mTemplateId> = "";

        return;
    }

    void <init>(android.os.Bundle)
    {
        android.service.controls.templates.ControlTemplate r0;
        android.os.Bundle r1;
        java.lang.String $r2;

        r0 := @this: android.service.controls.templates.ControlTemplate;

        r1 := @parameter0: android.os.Bundle;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = virtualinvoke r1.<android.os.Bundle: java.lang.String getString(java.lang.String)>("key_template_id");

        r0.<android.service.controls.templates.ControlTemplate: java.lang.String mTemplateId> = $r2;

        return;
    }

    void <init>(java.lang.String)
    {
        android.service.controls.templates.ControlTemplate r0;
        java.lang.String r1;

        r0 := @this: android.service.controls.templates.ControlTemplate;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        r0.<android.service.controls.templates.ControlTemplate: java.lang.String mTemplateId> = r1;

        return;
    }

    static android.service.controls.templates.ControlTemplate createTemplateFromBundle(android.os.Bundle)
    {
        int i0;
        android.service.controls.templates.ToggleTemplate $r0;
        android.service.controls.templates.RangeTemplate $r1;
        android.service.controls.templates.ToggleRangeTemplate $r2;
        android.service.controls.templates.TemperatureControlTemplate $r3;
        android.service.controls.templates.StatelessTemplate $r4;
        android.service.controls.templates.ControlTemplate $r5, $r6, $r8, r11;
        java.lang.Exception $r7;
        android.os.Bundle r9;

        r9 := @parameter0: android.os.Bundle;

        if r9 != null goto label01;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("ControlTemplate", "Null bundle");

        $r6 = <android.service.controls.templates.ControlTemplate: android.service.controls.templates.ControlTemplate ERROR_TEMPLATE>;

        return $r6;

     label01:
        i0 = virtualinvoke r9.<android.os.Bundle: int getInt(java.lang.String,int)>("key_template_type", -1);

        if i0 == 0 goto label09;

        if i0 == 1 goto label08;

        if i0 == 2 goto label07;

        if i0 == 6 goto label06;

        if i0 == 7 goto label05;

        if i0 == 8 goto label04;

     label02:
        $r5 = <android.service.controls.templates.ControlTemplate: android.service.controls.templates.ControlTemplate ERROR_TEMPLATE>;

        return $r5;

     label03:
        $r7 := @caughtexception;

        goto label11;

     label04:
        $r4 = new android.service.controls.templates.StatelessTemplate;

        specialinvoke $r4.<android.service.controls.templates.StatelessTemplate: void <init>(android.os.Bundle)>(r9);

        return $r4;

     label05:
        $r3 = new android.service.controls.templates.TemperatureControlTemplate;

        specialinvoke $r3.<android.service.controls.templates.TemperatureControlTemplate: void <init>(android.os.Bundle)>(r9);

        return $r3;

     label06:
        $r2 = new android.service.controls.templates.ToggleRangeTemplate;

        specialinvoke $r2.<android.service.controls.templates.ToggleRangeTemplate: void <init>(android.os.Bundle)>(r9);

        return $r2;

     label07:
        $r1 = new android.service.controls.templates.RangeTemplate;

        specialinvoke $r1.<android.service.controls.templates.RangeTemplate: void <init>(android.os.Bundle)>(r9);

        return $r1;

     label08:
        $r0 = new android.service.controls.templates.ToggleTemplate;

        specialinvoke $r0.<android.service.controls.templates.ToggleTemplate: void <init>(android.os.Bundle)>(r9);

        return $r0;

     label09:
        r11 = <android.service.controls.templates.ControlTemplate: android.service.controls.templates.ControlTemplate NO_TEMPLATE>;

     label10:
        return r11;

     label11:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ControlTemplate", "Error creating template", $r7);

        $r8 = <android.service.controls.templates.ControlTemplate: android.service.controls.templates.ControlTemplate ERROR_TEMPLATE>;

        return $r8;

        catch java.lang.Exception from label02 to label03 with label03;
        catch java.lang.Exception from label04 to label05 with label03;
        catch java.lang.Exception from label05 to label06 with label03;
        catch java.lang.Exception from label06 to label07 with label03;
        catch java.lang.Exception from label07 to label08 with label03;
        catch java.lang.Exception from label08 to label09 with label03;
        catch java.lang.Exception from label09 to label10 with label03;
    }

    public static android.service.controls.templates.ControlTemplate getErrorTemplate()
    {
        android.service.controls.templates.ControlTemplate $r0;

        $r0 = <android.service.controls.templates.ControlTemplate: android.service.controls.templates.ControlTemplate ERROR_TEMPLATE>;

        return $r0;
    }

    public static android.service.controls.templates.ControlTemplate getNoTemplateObject()
    {
        android.service.controls.templates.ControlTemplate $r0;

        $r0 = <android.service.controls.templates.ControlTemplate: android.service.controls.templates.ControlTemplate NO_TEMPLATE>;

        return $r0;
    }

    android.os.Bundle getDataBundle()
    {
        android.service.controls.templates.ControlTemplate r0;
        android.os.Bundle $r2;
        int $i0;
        java.lang.String $r3;

        r0 := @this: android.service.controls.templates.ControlTemplate;

        $r2 = new android.os.Bundle;

        specialinvoke $r2.<android.os.Bundle: void <init>()>();

        $i0 = virtualinvoke r0.<android.service.controls.templates.ControlTemplate: int getTemplateType()>();

        virtualinvoke $r2.<android.os.Bundle: void putInt(java.lang.String,int)>("key_template_type", $i0);

        $r3 = r0.<android.service.controls.templates.ControlTemplate: java.lang.String mTemplateId>;

        virtualinvoke $r2.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("key_template_id", $r3);

        return $r2;
    }

    public java.lang.String getTemplateId()
    {
        android.service.controls.templates.ControlTemplate r0;
        java.lang.String $r1;

        r0 := @this: android.service.controls.templates.ControlTemplate;

        $r1 = r0.<android.service.controls.templates.ControlTemplate: java.lang.String mTemplateId>;

        return $r1;
    }

    public abstract int getTemplateType();
}
