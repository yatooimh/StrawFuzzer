public final class android.service.controls.templates.ControlTemplateWrapper extends java.lang.Object implements android.os.Parcelable
{
    public static final android.os.Parcelable$Creator CREATOR;
    private final android.service.controls.templates.ControlTemplate mControlTemplate;

    static void <clinit>()
    {
        android.service.controls.templates.ControlTemplateWrapper$1 $r0;

        $r0 = new android.service.controls.templates.ControlTemplateWrapper$1;

        specialinvoke $r0.<android.service.controls.templates.ControlTemplateWrapper$1: void <init>()>();

        <android.service.controls.templates.ControlTemplateWrapper: android.os.Parcelable$Creator CREATOR> = $r0;

        return;
    }

    public void <init>(android.service.controls.templates.ControlTemplate)
    {
        android.service.controls.templates.ControlTemplateWrapper r0;
        android.service.controls.templates.ControlTemplate r1;

        r0 := @this: android.service.controls.templates.ControlTemplateWrapper;

        r1 := @parameter0: android.service.controls.templates.ControlTemplate;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        r0.<android.service.controls.templates.ControlTemplateWrapper: android.service.controls.templates.ControlTemplate mControlTemplate> = r1;

        return;
    }

    public int describeContents()
    {
        android.service.controls.templates.ControlTemplateWrapper r0;

        r0 := @this: android.service.controls.templates.ControlTemplateWrapper;

        return 0;
    }

    public android.service.controls.templates.ControlTemplate getWrappedTemplate()
    {
        android.service.controls.templates.ControlTemplateWrapper r0;
        android.service.controls.templates.ControlTemplate $r1;

        r0 := @this: android.service.controls.templates.ControlTemplateWrapper;

        $r1 = r0.<android.service.controls.templates.ControlTemplateWrapper: android.service.controls.templates.ControlTemplate mControlTemplate>;

        return $r1;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.service.controls.templates.ControlTemplateWrapper r0;
        android.os.Parcel r1;
        int i0;
        android.service.controls.templates.ControlTemplate $r2;
        android.os.Bundle $r3;

        r0 := @this: android.service.controls.templates.ControlTemplateWrapper;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        $r2 = r0.<android.service.controls.templates.ControlTemplateWrapper: android.service.controls.templates.ControlTemplate mControlTemplate>;

        $r3 = virtualinvoke $r2.<android.service.controls.templates.ControlTemplate: android.os.Bundle getDataBundle()>();

        virtualinvoke r1.<android.os.Parcel: void writeBundle(android.os.Bundle)>($r3);

        return;
    }
}
