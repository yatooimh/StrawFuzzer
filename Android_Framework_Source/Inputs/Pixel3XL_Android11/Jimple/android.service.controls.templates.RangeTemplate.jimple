public final class android.service.controls.templates.RangeTemplate extends android.service.controls.templates.ControlTemplate
{
    private static final java.lang.String KEY_CURRENT_VALUE;
    private static final java.lang.String KEY_FORMAT_STRING;
    private static final java.lang.String KEY_MAX_VALUE;
    private static final java.lang.String KEY_MIN_VALUE;
    private static final java.lang.String KEY_STEP_VALUE;
    private static final int TYPE;
    private final float mCurrentValue;
    private final java.lang.CharSequence mFormatString;
    private final float mMaxValue;
    private final float mMinValue;
    private final float mStepValue;

    void <init>(android.os.Bundle)
    {
        android.service.controls.templates.RangeTemplate r0;
        android.os.Bundle r1;
        float $f0, $f1, $f2, $f3;
        java.lang.CharSequence $r2;

        r0 := @this: android.service.controls.templates.RangeTemplate;

        r1 := @parameter0: android.os.Bundle;

        specialinvoke r0.<android.service.controls.templates.ControlTemplate: void <init>(android.os.Bundle)>(r1);

        $f0 = virtualinvoke r1.<android.os.Bundle: float getFloat(java.lang.String)>("key_min_value");

        r0.<android.service.controls.templates.RangeTemplate: float mMinValue> = $f0;

        $f1 = virtualinvoke r1.<android.os.Bundle: float getFloat(java.lang.String)>("key_max_value");

        r0.<android.service.controls.templates.RangeTemplate: float mMaxValue> = $f1;

        $f2 = virtualinvoke r1.<android.os.Bundle: float getFloat(java.lang.String)>("key_current_value");

        r0.<android.service.controls.templates.RangeTemplate: float mCurrentValue> = $f2;

        $f3 = virtualinvoke r1.<android.os.Bundle: float getFloat(java.lang.String)>("key_step_value");

        r0.<android.service.controls.templates.RangeTemplate: float mStepValue> = $f3;

        $r2 = virtualinvoke r1.<android.os.Bundle: java.lang.CharSequence getCharSequence(java.lang.String,java.lang.CharSequence)>("key_format_string", "%.1f");

        r0.<android.service.controls.templates.RangeTemplate: java.lang.CharSequence mFormatString> = $r2;

        specialinvoke r0.<android.service.controls.templates.RangeTemplate: void validate()>();

        return;
    }

    public void <init>(java.lang.String, float, float, float, float, java.lang.CharSequence)
    {
        android.service.controls.templates.RangeTemplate r0;
        java.lang.String r1;
        float f0, f1, f2, f3;
        java.lang.CharSequence r2;

        r0 := @this: android.service.controls.templates.RangeTemplate;

        r1 := @parameter0: java.lang.String;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        f2 := @parameter3: float;

        f3 := @parameter4: float;

        r2 := @parameter5: java.lang.CharSequence;

        specialinvoke r0.<android.service.controls.templates.ControlTemplate: void <init>(java.lang.String)>(r1);

        r0.<android.service.controls.templates.RangeTemplate: float mMinValue> = f0;

        r0.<android.service.controls.templates.RangeTemplate: float mMaxValue> = f1;

        r0.<android.service.controls.templates.RangeTemplate: float mCurrentValue> = f2;

        r0.<android.service.controls.templates.RangeTemplate: float mStepValue> = f3;

        if r2 == null goto label1;

        r0.<android.service.controls.templates.RangeTemplate: java.lang.CharSequence mFormatString> = r2;

        goto label2;

     label1:
        r0.<android.service.controls.templates.RangeTemplate: java.lang.CharSequence mFormatString> = "%.1f";

     label2:
        specialinvoke r0.<android.service.controls.templates.RangeTemplate: void validate()>();

        return;
    }

    private void validate()
    {
        android.service.controls.templates.RangeTemplate r0;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13;
        int $i0, $i1, $i2;
        java.lang.IllegalArgumentException $r1, $r6, $r11, $r16;
        java.lang.Object[] $r2, $r7, $r12, $r17;
        java.lang.Float $r3, $r4, $r8, $r9, $r13, $r14, $r18;
        java.lang.String $r5, $r10, $r15, $r19;
        byte $b3;

        r0 := @this: android.service.controls.templates.RangeTemplate;

        $f1 = r0.<android.service.controls.templates.RangeTemplate: float mMinValue>;

        $f0 = r0.<android.service.controls.templates.RangeTemplate: float mMaxValue>;

        $i0 = staticinvoke <java.lang.Float: int compare(float,float)>($f1, $f0);

        if $i0 > 0 goto label4;

        $f5 = r0.<android.service.controls.templates.RangeTemplate: float mMinValue>;

        $f4 = r0.<android.service.controls.templates.RangeTemplate: float mCurrentValue>;

        $i1 = staticinvoke <java.lang.Float: int compare(float,float)>($f5, $f4);

        if $i1 > 0 goto label3;

        $f9 = r0.<android.service.controls.templates.RangeTemplate: float mCurrentValue>;

        $f8 = r0.<android.service.controls.templates.RangeTemplate: float mMaxValue>;

        $i2 = staticinvoke <java.lang.Float: int compare(float,float)>($f9, $f8);

        if $i2 > 0 goto label2;

        $f12 = r0.<android.service.controls.templates.RangeTemplate: float mStepValue>;

        $b3 = $f12 cmpg 0.0F;

        if $b3 <= 0 goto label1;

        return;

     label1:
        $r16 = new java.lang.IllegalArgumentException;

        $r17 = newarray (java.lang.Object)[1];

        $f13 = r0.<android.service.controls.templates.RangeTemplate: float mStepValue>;

        $r18 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f13);

        $r17[0] = $r18;

        $r19 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("stepValue=%f <= 0", $r17);

        specialinvoke $r16.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r19);

        throw $r16;

     label2:
        $r11 = new java.lang.IllegalArgumentException;

        $r12 = newarray (java.lang.Object)[2];

        $f10 = r0.<android.service.controls.templates.RangeTemplate: float mCurrentValue>;

        $r13 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f10);

        $r12[0] = $r13;

        $f11 = r0.<android.service.controls.templates.RangeTemplate: float mMaxValue>;

        $r14 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f11);

        $r12[1] = $r14;

        $r15 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("currentValue=%f > maxValue=%f", $r12);

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r15);

        throw $r11;

     label3:
        $r6 = new java.lang.IllegalArgumentException;

        $r7 = newarray (java.lang.Object)[2];

        $f6 = r0.<android.service.controls.templates.RangeTemplate: float mMinValue>;

        $r8 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f6);

        $r7[0] = $r8;

        $f7 = r0.<android.service.controls.templates.RangeTemplate: float mCurrentValue>;

        $r9 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f7);

        $r7[1] = $r9;

        $r10 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("minValue=%f > currentValue=%f", $r7);

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r10);

        throw $r6;

     label4:
        $r1 = new java.lang.IllegalArgumentException;

        $r2 = newarray (java.lang.Object)[2];

        $f2 = r0.<android.service.controls.templates.RangeTemplate: float mMinValue>;

        $r3 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f2);

        $r2[0] = $r3;

        $f3 = r0.<android.service.controls.templates.RangeTemplate: float mMaxValue>;

        $r4 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f3);

        $r2[1] = $r4;

        $r5 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("minValue=%f > maxValue=%f", $r2);

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r1;
    }

    public float getCurrentValue()
    {
        android.service.controls.templates.RangeTemplate r0;
        float $f0;

        r0 := @this: android.service.controls.templates.RangeTemplate;

        $f0 = r0.<android.service.controls.templates.RangeTemplate: float mCurrentValue>;

        return $f0;
    }

    android.os.Bundle getDataBundle()
    {
        android.service.controls.templates.RangeTemplate r0;
        android.os.Bundle r1;
        float $f0, $f1, $f2, $f3;
        java.lang.CharSequence $r2;

        r0 := @this: android.service.controls.templates.RangeTemplate;

        r1 = specialinvoke r0.<android.service.controls.templates.ControlTemplate: android.os.Bundle getDataBundle()>();

        $f0 = r0.<android.service.controls.templates.RangeTemplate: float mMinValue>;

        virtualinvoke r1.<android.os.Bundle: void putFloat(java.lang.String,float)>("key_min_value", $f0);

        $f1 = r0.<android.service.controls.templates.RangeTemplate: float mMaxValue>;

        virtualinvoke r1.<android.os.Bundle: void putFloat(java.lang.String,float)>("key_max_value", $f1);

        $f2 = r0.<android.service.controls.templates.RangeTemplate: float mCurrentValue>;

        virtualinvoke r1.<android.os.Bundle: void putFloat(java.lang.String,float)>("key_current_value", $f2);

        $f3 = r0.<android.service.controls.templates.RangeTemplate: float mStepValue>;

        virtualinvoke r1.<android.os.Bundle: void putFloat(java.lang.String,float)>("key_step_value", $f3);

        $r2 = r0.<android.service.controls.templates.RangeTemplate: java.lang.CharSequence mFormatString>;

        virtualinvoke r1.<android.os.Bundle: void putCharSequence(java.lang.String,java.lang.CharSequence)>("key_format_string", $r2);

        return r1;
    }

    public java.lang.CharSequence getFormatString()
    {
        android.service.controls.templates.RangeTemplate r0;
        java.lang.CharSequence $r1;

        r0 := @this: android.service.controls.templates.RangeTemplate;

        $r1 = r0.<android.service.controls.templates.RangeTemplate: java.lang.CharSequence mFormatString>;

        return $r1;
    }

    public float getMaxValue()
    {
        android.service.controls.templates.RangeTemplate r0;
        float $f0;

        r0 := @this: android.service.controls.templates.RangeTemplate;

        $f0 = r0.<android.service.controls.templates.RangeTemplate: float mMaxValue>;

        return $f0;
    }

    public float getMinValue()
    {
        android.service.controls.templates.RangeTemplate r0;
        float $f0;

        r0 := @this: android.service.controls.templates.RangeTemplate;

        $f0 = r0.<android.service.controls.templates.RangeTemplate: float mMinValue>;

        return $f0;
    }

    public float getStepValue()
    {
        android.service.controls.templates.RangeTemplate r0;
        float $f0;

        r0 := @this: android.service.controls.templates.RangeTemplate;

        $f0 = r0.<android.service.controls.templates.RangeTemplate: float mStepValue>;

        return $f0;
    }

    public int getTemplateType()
    {
        android.service.controls.templates.RangeTemplate r0;

        r0 := @this: android.service.controls.templates.RangeTemplate;

        return 2;
    }

    public static void <clinit>()
    {
        <android.service.controls.templates.RangeTemplate: int TYPE> = 2;

        <android.service.controls.templates.RangeTemplate: java.lang.String KEY_STEP_VALUE> = "key_step_value";

        <android.service.controls.templates.RangeTemplate: java.lang.String KEY_MIN_VALUE> = "key_min_value";

        <android.service.controls.templates.RangeTemplate: java.lang.String KEY_MAX_VALUE> = "key_max_value";

        <android.service.controls.templates.RangeTemplate: java.lang.String KEY_FORMAT_STRING> = "key_format_string";

        <android.service.controls.templates.RangeTemplate: java.lang.String KEY_CURRENT_VALUE> = "key_current_value";

        return;
    }
}
