public final class android.service.dataloader.DataLoaderService$FileSystemConnector extends java.lang.Object
{
    private final long mNativeInstance;

    void <init>(long)
    {
        android.service.dataloader.DataLoaderService$FileSystemConnector r0;
        long l0;

        r0 := @this: android.service.dataloader.DataLoaderService$FileSystemConnector;

        l0 := @parameter0: long;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.service.dataloader.DataLoaderService$FileSystemConnector: long mNativeInstance> = l0;

        return;
    }

    public void writeData(java.lang.String, long, long, android.os.ParcelFileDescriptor) throws java.io.IOException
    {
        android.service.dataloader.DataLoaderService$FileSystemConnector r0;
        long l0, l1, $l2;
        android.os.ParcelFileDescriptor r1;
        java.lang.RuntimeException $r2;
        java.lang.String r3;

        r0 := @this: android.service.dataloader.DataLoaderService$FileSystemConnector;

        r3 := @parameter0: java.lang.String;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        r1 := @parameter3: android.os.ParcelFileDescriptor;

     label1:
        $l2 = r0.<android.service.dataloader.DataLoaderService$FileSystemConnector: long mNativeInstance>;

        staticinvoke <android.service.dataloader.DataLoaderService: void access$600(long,java.lang.String,long,long,android.os.ParcelFileDescriptor)>($l2, r3, l0, l1, r1);

     label2:
        return;

     label3:
        $r2 := @caughtexception;

        staticinvoke <android.util.ExceptionUtils: void maybeUnwrapIOException(java.lang.RuntimeException)>($r2);

        throw $r2;

        catch java.lang.RuntimeException from label1 to label2 with label3;
    }
}
