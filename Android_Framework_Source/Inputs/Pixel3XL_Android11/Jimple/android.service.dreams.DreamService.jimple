public class android.service.dreams.DreamService extends android.app.Service implements android.view.Window$Callback
{
    public static final java.lang.String DREAM_META_DATA;
    public static final java.lang.String DREAM_SERVICE;
    public static final java.lang.String SERVICE_INTERFACE;
    private final java.lang.String TAG;
    private android.app.Activity mActivity;
    private boolean mCanDoze;
    private boolean mDebug;
    private java.lang.Runnable mDispatchAfterOnAttachedToWindow;
    private int mDozeScreenBrightness;
    private int mDozeScreenState;
    private boolean mDozing;
    private final android.service.dreams.IDreamManager mDreamManager;
    private android.service.dreams.DreamService$DreamServiceWrapper mDreamServiceWrapper;
    private android.os.IBinder mDreamToken;
    private boolean mFinished;
    private boolean mFullscreen;
    private final android.os.Handler mHandler;
    private boolean mInteractive;
    private boolean mScreenBright;
    private boolean mStarted;
    private boolean mWaking;
    private android.view.Window mWindow;
    private boolean mWindowless;

    public void <init>()
    {
        android.service.dreams.DreamService r0;
        java.lang.StringBuilder $r2;
        java.lang.Class $r3, $r7;
        java.lang.String $r4, $r8, $r11;
        android.os.Handler $r12;
        android.os.Looper $r13;
        android.os.IBinder $r14;
        android.service.dreams.IDreamManager $r15;

        r0 := @this: android.service.dreams.DreamService;

        specialinvoke r0.<android.app.Service: void <init>()>();

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = class "Landroid/service/dreams/DreamService;";

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getSimpleName()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        $r7 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r8 = virtualinvoke $r7.<java.lang.Class: java.lang.String getSimpleName()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r11 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<android.service.dreams.DreamService: java.lang.String TAG> = $r11;

        $r12 = new android.os.Handler;

        $r13 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        specialinvoke $r12.<android.os.Handler: void <init>(android.os.Looper)>($r13);

        r0.<android.service.dreams.DreamService: android.os.Handler mHandler> = $r12;

        r0.<android.service.dreams.DreamService: boolean mScreenBright> = 1;

        r0.<android.service.dreams.DreamService: int mDozeScreenState> = 0;

        r0.<android.service.dreams.DreamService: int mDozeScreenBrightness> = -1;

        r0.<android.service.dreams.DreamService: boolean mDebug> = 0;

        $r14 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("dreams");

        $r15 = staticinvoke <android.service.dreams.IDreamManager$Stub: android.service.dreams.IDreamManager asInterface(android.os.IBinder)>($r14);

        r0.<android.service.dreams.DreamService: android.service.dreams.IDreamManager mDreamManager> = $r15;

        return;
    }

    static java.lang.Runnable access$000(android.service.dreams.DreamService)
    {
        android.service.dreams.DreamService r0;
        java.lang.Runnable $r1;

        r0 := @parameter0: android.service.dreams.DreamService;

        $r1 = r0.<android.service.dreams.DreamService: java.lang.Runnable mDispatchAfterOnAttachedToWindow>;

        return $r1;
    }

    static android.app.Activity access$100(android.service.dreams.DreamService)
    {
        android.service.dreams.DreamService r0;
        android.app.Activity $r1;

        r0 := @parameter0: android.service.dreams.DreamService;

        $r1 = r0.<android.service.dreams.DreamService: android.app.Activity mActivity>;

        return $r1;
    }

    static android.app.Activity access$102(android.service.dreams.DreamService, android.app.Activity)
    {
        android.service.dreams.DreamService r0;
        android.app.Activity r1;

        r0 := @parameter0: android.service.dreams.DreamService;

        r1 := @parameter1: android.app.Activity;

        r0.<android.service.dreams.DreamService: android.app.Activity mActivity> = r1;

        return r1;
    }

    static android.os.Handler access$200(android.service.dreams.DreamService)
    {
        android.service.dreams.DreamService r0;
        android.os.Handler $r1;

        r0 := @parameter0: android.service.dreams.DreamService;

        $r1 = r0.<android.service.dreams.DreamService: android.os.Handler mHandler>;

        return $r1;
    }

    static void access$300(android.service.dreams.DreamService, android.view.Window)
    {
        android.service.dreams.DreamService r0;
        android.view.Window r1;

        r0 := @parameter0: android.service.dreams.DreamService;

        r1 := @parameter1: android.view.Window;

        specialinvoke r0.<android.service.dreams.DreamService: void onWindowCreated(android.view.Window)>(r1);

        return;
    }

    static void access$400(android.service.dreams.DreamService, boolean)
    {
        android.service.dreams.DreamService r0;
        boolean z0;

        r0 := @parameter0: android.service.dreams.DreamService;

        z0 := @parameter1: boolean;

        specialinvoke r0.<android.service.dreams.DreamService: void wakeUp(boolean)>(z0);

        return;
    }

    static void access$500(android.service.dreams.DreamService)
    {
        android.service.dreams.DreamService r0;

        r0 := @parameter0: android.service.dreams.DreamService;

        specialinvoke r0.<android.service.dreams.DreamService: void detach()>();

        return;
    }

    static void access$600(android.service.dreams.DreamService, android.os.IBinder, boolean, android.os.IRemoteCallback)
    {
        android.service.dreams.DreamService r0;
        android.os.IBinder r1;
        boolean z0;
        android.os.IRemoteCallback r2;

        r0 := @parameter0: android.service.dreams.DreamService;

        r1 := @parameter1: android.os.IBinder;

        z0 := @parameter2: boolean;

        r2 := @parameter3: android.os.IRemoteCallback;

        specialinvoke r0.<android.service.dreams.DreamService: void attach(android.os.IBinder,boolean,android.os.IRemoteCallback)>(r1, z0, r2);

        return;
    }

    private int applyFlags(int, int, int)
    {
        android.service.dreams.DreamService r0;
        int i0, i1, i2, $i3, $i4, $i5;

        r0 := @this: android.service.dreams.DreamService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $i4 = i2 & i0;

        $i3 = i1 & i2;

        $i5 = $i4 | $i3;

        return $i5;
    }

    private void applyWindowFlags(int, int)
    {
        android.service.dreams.DreamService r0;
        int i0, i1, $i2, $i3;
        android.view.Window $r1, $r2, $r4, r6;
        android.view.WindowManager $r3;
        android.view.View $r5;
        android.view.WindowManager$LayoutParams r7;

        r0 := @this: android.service.dreams.DreamService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r6 = r0.<android.service.dreams.DreamService: android.view.Window mWindow>;

        if r6 == null goto label1;

        r7 = virtualinvoke r6.<android.view.Window: android.view.WindowManager$LayoutParams getAttributes()>();

        $i2 = r7.<android.view.WindowManager$LayoutParams: int flags>;

        $i3 = specialinvoke r0.<android.service.dreams.DreamService: int applyFlags(int,int,int)>($i2, i0, i1);

        r7.<android.view.WindowManager$LayoutParams: int flags> = $i3;

        $r1 = r0.<android.service.dreams.DreamService: android.view.Window mWindow>;

        virtualinvoke $r1.<android.view.Window: void setAttributes(android.view.WindowManager$LayoutParams)>(r7);

        $r2 = r0.<android.service.dreams.DreamService: android.view.Window mWindow>;

        $r3 = virtualinvoke $r2.<android.view.Window: android.view.WindowManager getWindowManager()>();

        $r4 = r0.<android.service.dreams.DreamService: android.view.Window mWindow>;

        $r5 = virtualinvoke $r4.<android.view.Window: android.view.View getDecorView()>();

        interfaceinvoke $r3.<android.view.WindowManager: void updateViewLayout(android.view.View,android.view.ViewGroup$LayoutParams)>($r5, r7);

     label1:
        return;
    }

    private void attach(android.os.IBinder, boolean, android.os.IRemoteCallback)
    {
        android.service.dreams.DreamService r0;
        boolean z0, $z1, $z2, $z3, $z4, $z5;
        android.os.IBinder $r1, $r16, r24;
        java.lang.String $r2, $r7, $r19, $r22, r26;
        android.service.dreams.IDreamManager $r3;
        android.service.dreams._$$Lambda$DreamService$uqzqbrpptkCH_tc1jkx48W1A6vM $r4;
        android.content.Intent $r5;
        android.content.Context $r6;
        android.service.dreams.DreamService$DreamServiceWrapper $r10;
        android.app.IActivityTaskManager $r12;
        java.lang.IllegalStateException $r13;
        java.lang.StringBuilder $r14;
        android.os.RemoteException $r20, $r21;
        android.os.IRemoteCallback r25;

        r0 := @this: android.service.dreams.DreamService;

        r24 := @parameter0: android.os.IBinder;

        z0 := @parameter1: boolean;

        r25 := @parameter2: android.os.IRemoteCallback;

        $r1 = r0.<android.service.dreams.DreamService: android.os.IBinder mDreamToken>;

        if $r1 == null goto label01;

        r26 = r0.<android.service.dreams.DreamService: java.lang.String TAG>;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("attach() called when dream with token=");

        $r16 = r0.<android.service.dreams.DreamService: android.os.IBinder mDreamToken>;

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r16);

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" already attached");

        $r19 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>(r26, $r19);

        return;

     label01:
        $z1 = r0.<android.service.dreams.DreamService: boolean mFinished>;

        if $z1 != 0 goto label12;

        $z2 = r0.<android.service.dreams.DreamService: boolean mWaking>;

        if $z2 == 0 goto label02;

        goto label12;

     label02:
        r0.<android.service.dreams.DreamService: android.os.IBinder mDreamToken> = r24;

        r0.<android.service.dreams.DreamService: boolean mCanDoze> = z0;

        $z3 = r0.<android.service.dreams.DreamService: boolean mWindowless>;

        if $z3 == 0 goto label04;

        if z0 == 0 goto label03;

        goto label04;

     label03:
        $r13 = new java.lang.IllegalStateException;

        specialinvoke $r13.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Only doze dreams can be windowless");

        throw $r13;

     label04:
        $r4 = new android.service.dreams._$$Lambda$DreamService$uqzqbrpptkCH_tc1jkx48W1A6vM;

        specialinvoke $r4.<android.service.dreams._$$Lambda$DreamService$uqzqbrpptkCH_tc1jkx48W1A6vM: void <init>(android.service.dreams.DreamService,android.os.IRemoteCallback)>(r0, r25);

        r0.<android.service.dreams.DreamService: java.lang.Runnable mDispatchAfterOnAttachedToWindow> = $r4;

        $z4 = r0.<android.service.dreams.DreamService: boolean mWindowless>;

        if $z4 != 0 goto label10;

        $r5 = new android.content.Intent;

        specialinvoke $r5.<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>(r0, class "Landroid/service/dreams/DreamActivity;");

        $r6 = virtualinvoke r0.<android.service.dreams.DreamService: android.content.Context getApplicationContext()>();

        $r7 = virtualinvoke $r6.<android.content.Context: java.lang.String getPackageName()>();

        virtualinvoke $r5.<android.content.Intent: android.content.Intent setPackage(java.lang.String)>($r7);

        virtualinvoke $r5.<android.content.Intent: android.content.Intent setFlags(int)>(268435456);

        $r10 = r0.<android.service.dreams.DreamService: android.service.dreams.DreamService$DreamServiceWrapper mDreamServiceWrapper>;

        virtualinvoke $r5.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.IBinder)>("binder", $r10);

     label05:
        $r12 = staticinvoke <android.app.ActivityTaskManager: android.app.IActivityTaskManager getService()>();

        $z5 = interfaceinvoke $r12.<android.app.IActivityTaskManager: boolean startDreamActivity(android.content.Intent)>($r5);

        if $z5 != 0 goto label07;

        specialinvoke r0.<android.service.dreams.DreamService: void detach()>();

     label06:
        return;

     label07:
        goto label09;

     label08:
        $r21 := @caughtexception;

        $r22 = r0.<android.service.dreams.DreamService: java.lang.String TAG>;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r22, "Could not connect to activity task manager to start dream activity");

        virtualinvoke $r21.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

     label09:
        goto label11;

     label10:
        interfaceinvoke $r4.<java.lang.Runnable: void run()>();

     label11:
        return;

     label12:
        $r2 = r0.<android.service.dreams.DreamService: java.lang.String TAG>;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>($r2, "attach() called after dream already finished");

     label13:
        $r3 = r0.<android.service.dreams.DreamService: android.service.dreams.IDreamManager mDreamManager>;

        interfaceinvoke $r3.<android.service.dreams.IDreamManager: void finishSelf(android.os.IBinder,boolean)>(r24, 1);

     label14:
        goto label16;

     label15:
        $r20 := @caughtexception;

     label16:
        return;

        catch android.os.RemoteException from label05 to label06 with label08;
        catch android.os.RemoteException from label13 to label14 with label15;
    }

    private static int clampAbsoluteBrightness(int)
    {
        int i0, $i1;

        i0 := @parameter0: int;

        $i1 = staticinvoke <android.util.MathUtils: int constrain(int,int,int)>(i0, 0, 255);

        return $i1;
    }

    private final void detach()
    {
        android.service.dreams.DreamService r0;
        android.app.Activity r1, $r2;
        boolean $z0, $z1, $z2;
        java.lang.String $r3;

        r0 := @this: android.service.dreams.DreamService;

        $z0 = r0.<android.service.dreams.DreamService: boolean mStarted>;

        if $z0 == 0 goto label2;

        $z2 = r0.<android.service.dreams.DreamService: boolean mDebug>;

        if $z2 == 0 goto label1;

        $r3 = r0.<android.service.dreams.DreamService: java.lang.String TAG>;

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>($r3, "detach(): Calling onDreamingStopped()");

     label1:
        r0.<android.service.dreams.DreamService: boolean mStarted> = 0;

        virtualinvoke r0.<android.service.dreams.DreamService: void onDreamingStopped()>();

     label2:
        r1 = r0.<android.service.dreams.DreamService: android.app.Activity mActivity>;

        if r1 == null goto label3;

        $z1 = virtualinvoke r1.<android.app.Activity: boolean isFinishing()>();

        if $z1 != 0 goto label3;

        $r2 = r0.<android.service.dreams.DreamService: android.app.Activity mActivity>;

        virtualinvoke $r2.<android.app.Activity: void finishAndRemoveTask()>();

        goto label4;

     label3:
        virtualinvoke r0.<android.service.dreams.DreamService: void finish()>();

     label4:
        r0.<android.service.dreams.DreamService: android.os.IBinder mDreamToken> = null;

        r0.<android.service.dreams.DreamService: boolean mCanDoze> = 0;

        return;
    }

    private boolean getWindowFlagValue(int, boolean)
    {
        android.service.dreams.DreamService r0;
        int i0, $i1, $i2;
        android.view.Window r1;
        android.view.WindowManager$LayoutParams $r2;
        boolean z0;

        r0 := @this: android.service.dreams.DreamService;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        r1 = r0.<android.service.dreams.DreamService: android.view.Window mWindow>;

        if r1 != null goto label1;

        goto label3;

     label1:
        $r2 = virtualinvoke r1.<android.view.Window: android.view.WindowManager$LayoutParams getAttributes()>();

        $i1 = $r2.<android.view.WindowManager$LayoutParams: int flags>;

        $i2 = $i1 & i0;

        if $i2 == 0 goto label2;

        z0 = 1;

        goto label3;

     label2:
        z0 = 0;

     label3:
        return z0;
    }

    private void onWindowCreated(android.view.Window)
    {
        android.service.dreams.DreamService r0;
        int i0, $i1, $i2, $i3;
        boolean z0, $z2;
        android.view.Window $r1, $r2, $r3, $r4, $r5, r8;
        android.view.View $r6;
        android.service.dreams.DreamService$1 $r7;
        android.view.WindowManager$LayoutParams r9;
        short s4, s5;

        r0 := @this: android.service.dreams.DreamService;

        r8 := @parameter0: android.view.Window;

        r0.<android.service.dreams.DreamService: android.view.Window mWindow> = r8;

        virtualinvoke r8.<android.view.Window: void setCallback(android.view.Window$Callback)>(r0);

        $r1 = r0.<android.service.dreams.DreamService: android.view.Window mWindow>;

        virtualinvoke $r1.<android.view.Window: boolean requestFeature(int)>(1);

        $r2 = r0.<android.service.dreams.DreamService: android.view.Window mWindow>;

        r9 = virtualinvoke $r2.<android.view.Window: android.view.WindowManager$LayoutParams getAttributes()>();

        i0 = r9.<android.view.WindowManager$LayoutParams: int flags>;

        z0 = r0.<android.service.dreams.DreamService: boolean mFullscreen>;

        s4 = 0;

        if z0 == 0 goto label1;

        s5 = 1024;

        goto label2;

     label1:
        s5 = 0;

     label2:
        $z2 = r0.<android.service.dreams.DreamService: boolean mScreenBright>;

        if $z2 == 0 goto label3;

        s4 = 128;

     label3:
        $i1 = s5 | 21561601;

        $i2 = $i1 | s4;

        $i3 = i0 | $i2;

        r9.<android.view.WindowManager$LayoutParams: int flags> = $i3;

        $r3 = r0.<android.service.dreams.DreamService: android.view.Window mWindow>;

        virtualinvoke $r3.<android.view.Window: void setAttributes(android.view.WindowManager$LayoutParams)>(r9);

        $r4 = r0.<android.service.dreams.DreamService: android.view.Window mWindow>;

        virtualinvoke $r4.<android.view.Window: void clearFlags(int)>(-2147483648);

        $r5 = r0.<android.service.dreams.DreamService: android.view.Window mWindow>;

        $r6 = virtualinvoke $r5.<android.view.Window: android.view.View getDecorView()>();

        $r7 = new android.service.dreams.DreamService$1;

        specialinvoke $r7.<android.service.dreams.DreamService$1: void <init>(android.service.dreams.DreamService)>(r0);

        virtualinvoke $r6.<android.view.View: void addOnAttachStateChangeListener(android.view.View$OnAttachStateChangeListener)>($r7);

        return;
    }

    private void updateDoze()
    {
        android.service.dreams.DreamService r0;
        boolean $z0;
        int $i0, $i1;
        android.service.dreams.IDreamManager $r1;
        java.lang.String $r2;
        android.os.RemoteException $r3;
        android.os.IBinder r4;

        r0 := @this: android.service.dreams.DreamService;

        r4 = r0.<android.service.dreams.DreamService: android.os.IBinder mDreamToken>;

        if r4 != null goto label1;

        $r2 = r0.<android.service.dreams.DreamService: java.lang.String TAG>;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>($r2, "Updating doze without a dream token.");

        return;

     label1:
        $z0 = r0.<android.service.dreams.DreamService: boolean mDozing>;

        if $z0 == 0 goto label5;

     label2:
        $r1 = r0.<android.service.dreams.DreamService: android.service.dreams.IDreamManager mDreamManager>;

        $i1 = r0.<android.service.dreams.DreamService: int mDozeScreenState>;

        $i0 = r0.<android.service.dreams.DreamService: int mDozeScreenBrightness>;

        interfaceinvoke $r1.<android.service.dreams.IDreamManager: void startDozing(android.os.IBinder,int,int)>(r4, $i1, $i0);

     label3:
        goto label5;

     label4:
        $r3 := @caughtexception;

     label5:
        return;

        catch android.os.RemoteException from label2 to label3 with label4;
    }

    private void wakeUp(boolean)
    {
        android.service.dreams.DreamService r0;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.lang.String r1, $r5, $r13;
        android.app.Activity $r2;
        android.os.IBinder $r3;
        android.service.dreams.IDreamManager $r4;
        java.lang.StringBuilder $r6;
        android.os.RemoteException $r14;

        r0 := @this: android.service.dreams.DreamService;

        z0 := @parameter0: boolean;

        $z1 = r0.<android.service.dreams.DreamService: boolean mDebug>;

        if $z1 == 0 goto label1;

        r1 = r0.<android.service.dreams.DreamService: java.lang.String TAG>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("wakeUp(): fromSystem=");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mWaking=");

        $z5 = r0.<android.service.dreams.DreamService: boolean mWaking>;

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z5);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mFinished=");

        $z6 = r0.<android.service.dreams.DreamService: boolean mFinished>;

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z6);

        $r13 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>(r1, $r13);

     label1:
        $z2 = r0.<android.service.dreams.DreamService: boolean mWaking>;

        if $z2 != 0 goto label5;

        $z3 = r0.<android.service.dreams.DreamService: boolean mFinished>;

        if $z3 != 0 goto label5;

        r0.<android.service.dreams.DreamService: boolean mWaking> = 1;

        virtualinvoke r0.<android.service.dreams.DreamService: void onWakeUp()>();

        if z0 != 0 goto label5;

        $z4 = r0.<android.service.dreams.DreamService: boolean mFinished>;

        if $z4 != 0 goto label5;

        $r2 = r0.<android.service.dreams.DreamService: android.app.Activity mActivity>;

        if $r2 != null goto label2;

        $r5 = r0.<android.service.dreams.DreamService: java.lang.String TAG>;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>($r5, "WakeUp was called before the dream was attached.");

        goto label5;

     label2:
        $r4 = r0.<android.service.dreams.DreamService: android.service.dreams.IDreamManager mDreamManager>;

        $r3 = r0.<android.service.dreams.DreamService: android.os.IBinder mDreamToken>;

        interfaceinvoke $r4.<android.service.dreams.IDreamManager: void finishSelf(android.os.IBinder,boolean)>($r3, 0);

     label3:
        goto label5;

     label4:
        $r14 := @caughtexception;

     label5:
        return;

        catch android.os.RemoteException from label2 to label3 with label4;
    }

    public void addContentView(android.view.View, android.view.ViewGroup$LayoutParams)
    {
        android.service.dreams.DreamService r0;
        android.view.View r1;
        android.view.ViewGroup$LayoutParams r2;
        android.view.Window $r3;

        r0 := @this: android.service.dreams.DreamService;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.view.ViewGroup$LayoutParams;

        $r3 = virtualinvoke r0.<android.service.dreams.DreamService: android.view.Window getWindow()>();

        virtualinvoke $r3.<android.view.Window: void addContentView(android.view.View,android.view.ViewGroup$LayoutParams)>(r1, r2);

        return;
    }

    public boolean canDoze()
    {
        android.service.dreams.DreamService r0;
        boolean $z0;

        r0 := @this: android.service.dreams.DreamService;

        $z0 = r0.<android.service.dreams.DreamService: boolean mCanDoze>;

        return $z0;
    }

    public boolean dispatchGenericMotionEvent(android.view.MotionEvent)
    {
        android.service.dreams.DreamService r0;
        android.view.MotionEvent r1;
        boolean $z0, $z1, $z2;
        android.view.Window $r2;
        java.lang.String $r3;

        r0 := @this: android.service.dreams.DreamService;

        r1 := @parameter0: android.view.MotionEvent;

        $z0 = r0.<android.service.dreams.DreamService: boolean mInteractive>;

        if $z0 != 0 goto label2;

        $z2 = r0.<android.service.dreams.DreamService: boolean mDebug>;

        if $z2 == 0 goto label1;

        $r3 = r0.<android.service.dreams.DreamService: java.lang.String TAG>;

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>($r3, "Waking up on genericMotionEvent");

     label1:
        virtualinvoke r0.<android.service.dreams.DreamService: void wakeUp()>();

        return 1;

     label2:
        $r2 = r0.<android.service.dreams.DreamService: android.view.Window mWindow>;

        $z1 = virtualinvoke $r2.<android.view.Window: boolean superDispatchGenericMotionEvent(android.view.MotionEvent)>(r1);

        return $z1;
    }

    public boolean dispatchKeyEvent(android.view.KeyEvent)
    {
        android.service.dreams.DreamService r0;
        android.view.KeyEvent r1;
        boolean $z0, $z1, $z2, $z3;
        int $i0;
        android.view.Window $r2;
        java.lang.String $r3, $r4;

        r0 := @this: android.service.dreams.DreamService;

        r1 := @parameter0: android.view.KeyEvent;

        $z0 = r0.<android.service.dreams.DreamService: boolean mInteractive>;

        if $z0 != 0 goto label2;

        $z3 = r0.<android.service.dreams.DreamService: boolean mDebug>;

        if $z3 == 0 goto label1;

        $r4 = r0.<android.service.dreams.DreamService: java.lang.String TAG>;

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>($r4, "Waking up on keyEvent");

     label1:
        virtualinvoke r0.<android.service.dreams.DreamService: void wakeUp()>();

        return 1;

     label2:
        $i0 = virtualinvoke r1.<android.view.KeyEvent: int getKeyCode()>();

        if $i0 != 4 goto label4;

        $z2 = r0.<android.service.dreams.DreamService: boolean mDebug>;

        if $z2 == 0 goto label3;

        $r3 = r0.<android.service.dreams.DreamService: java.lang.String TAG>;

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>($r3, "Waking up on back key");

     label3:
        virtualinvoke r0.<android.service.dreams.DreamService: void wakeUp()>();

        return 1;

     label4:
        $r2 = r0.<android.service.dreams.DreamService: android.view.Window mWindow>;

        $z1 = virtualinvoke $r2.<android.view.Window: boolean superDispatchKeyEvent(android.view.KeyEvent)>(r1);

        return $z1;
    }

    public boolean dispatchKeyShortcutEvent(android.view.KeyEvent)
    {
        android.service.dreams.DreamService r0;
        android.view.KeyEvent r1;
        boolean $z0, $z1, $z2;
        android.view.Window $r2;
        java.lang.String $r3;

        r0 := @this: android.service.dreams.DreamService;

        r1 := @parameter0: android.view.KeyEvent;

        $z0 = r0.<android.service.dreams.DreamService: boolean mInteractive>;

        if $z0 != 0 goto label2;

        $z2 = r0.<android.service.dreams.DreamService: boolean mDebug>;

        if $z2 == 0 goto label1;

        $r3 = r0.<android.service.dreams.DreamService: java.lang.String TAG>;

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>($r3, "Waking up on keyShortcutEvent");

     label1:
        virtualinvoke r0.<android.service.dreams.DreamService: void wakeUp()>();

        return 1;

     label2:
        $r2 = r0.<android.service.dreams.DreamService: android.view.Window mWindow>;

        $z1 = virtualinvoke $r2.<android.view.Window: boolean superDispatchKeyShortcutEvent(android.view.KeyEvent)>(r1);

        return $z1;
    }

    public boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
    {
        android.service.dreams.DreamService r0;
        android.view.accessibility.AccessibilityEvent r1;

        r0 := @this: android.service.dreams.DreamService;

        r1 := @parameter0: android.view.accessibility.AccessibilityEvent;

        return 0;
    }

    public boolean dispatchTouchEvent(android.view.MotionEvent)
    {
        android.service.dreams.DreamService r0;
        android.view.MotionEvent r1;
        boolean $z0, $z1, $z2;
        android.view.Window $r2;
        java.lang.String $r3;

        r0 := @this: android.service.dreams.DreamService;

        r1 := @parameter0: android.view.MotionEvent;

        $z0 = r0.<android.service.dreams.DreamService: boolean mInteractive>;

        if $z0 != 0 goto label2;

        $z2 = r0.<android.service.dreams.DreamService: boolean mDebug>;

        if $z2 == 0 goto label1;

        $r3 = r0.<android.service.dreams.DreamService: java.lang.String TAG>;

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>($r3, "Waking up on touchEvent");

     label1:
        virtualinvoke r0.<android.service.dreams.DreamService: void wakeUp()>();

        return 1;

     label2:
        $r2 = r0.<android.service.dreams.DreamService: android.view.Window mWindow>;

        $z1 = virtualinvoke $r2.<android.view.Window: boolean superDispatchTouchEvent(android.view.MotionEvent)>(r1);

        return $z1;
    }

    public boolean dispatchTrackballEvent(android.view.MotionEvent)
    {
        android.service.dreams.DreamService r0;
        android.view.MotionEvent r1;
        boolean $z0, $z1, $z2;
        android.view.Window $r2;
        java.lang.String $r3;

        r0 := @this: android.service.dreams.DreamService;

        r1 := @parameter0: android.view.MotionEvent;

        $z0 = r0.<android.service.dreams.DreamService: boolean mInteractive>;

        if $z0 != 0 goto label2;

        $z2 = r0.<android.service.dreams.DreamService: boolean mDebug>;

        if $z2 == 0 goto label1;

        $r3 = r0.<android.service.dreams.DreamService: java.lang.String TAG>;

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>($r3, "Waking up on trackballEvent");

     label1:
        virtualinvoke r0.<android.service.dreams.DreamService: void wakeUp()>();

        return 1;

     label2:
        $r2 = r0.<android.service.dreams.DreamService: android.view.Window mWindow>;

        $z1 = virtualinvoke $r2.<android.view.Window: boolean superDispatchTrackballEvent(android.view.MotionEvent)>(r1);

        return $z1;
    }

    protected void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        android.service.dreams.DreamService r0;
        java.io.FileDescriptor r1;
        java.io.PrintWriter r2;
        java.lang.String[] r3;
        android.service.dreams.DreamService$2 $r4;
        android.os.Handler $r5;

        r0 := @this: android.service.dreams.DreamService;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: java.io.PrintWriter;

        r3 := @parameter2: java.lang.String[];

        $r5 = r0.<android.service.dreams.DreamService: android.os.Handler mHandler>;

        $r4 = new android.service.dreams.DreamService$2;

        specialinvoke $r4.<android.service.dreams.DreamService$2: void <init>(android.service.dreams.DreamService,java.io.FileDescriptor,java.lang.String[])>(r0, r1, r3);

        staticinvoke <com.android.internal.util.DumpUtils: void dumpAsync(android.os.Handler,com.android.internal.util.DumpUtils$Dump,java.io.PrintWriter,java.lang.String,long)>($r5, $r4, r2, "", 1000L);

        return;
    }

    protected void dumpOnHandler(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        android.service.dreams.DreamService r0;
        java.io.PrintWriter r1;
        java.lang.String[] r2;
        java.lang.StringBuilder $r3, $r8, $r14, $r19, $r24;
        java.lang.String $r4, $r7, $r13, $r18, $r21, $r23, $r27;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        android.os.IBinder $r10;
        android.view.Window $r16;
        int $i0, $i1;
        java.io.FileDescriptor r28;

        r0 := @this: android.service.dreams.DreamService;

        r28 := @parameter0: java.io.FileDescriptor;

        r1 := @parameter1: java.io.PrintWriter;

        r2 := @parameter2: java.lang.String[];

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = r0.<android.service.dreams.DreamService: java.lang.String TAG>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r7);

        $z0 = r0.<android.service.dreams.DreamService: boolean mFinished>;

        if $z0 == 0 goto label1;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("stopped");

        goto label2;

     label1:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("running (dreamToken=");

        $r10 = r0.<android.service.dreams.DreamService: android.os.IBinder mDreamToken>;

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r13 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r13);

     label2:
        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  window: ");

        $r16 = r0.<android.service.dreams.DreamService: android.view.Window mWindow>;

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r16);

        $r18 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r18);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  flags:");

        $z1 = virtualinvoke r0.<android.service.dreams.DreamService: boolean isInteractive()>();

        if $z1 == 0 goto label3;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" interactive");

     label3:
        $z2 = virtualinvoke r0.<android.service.dreams.DreamService: boolean isFullscreen()>();

        if $z2 == 0 goto label4;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" fullscreen");

     label4:
        $z3 = virtualinvoke r0.<android.service.dreams.DreamService: boolean isScreenBright()>();

        if $z3 == 0 goto label5;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" bright");

     label5:
        $z4 = virtualinvoke r0.<android.service.dreams.DreamService: boolean isWindowless()>();

        if $z4 == 0 goto label6;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" windowless");

     label6:
        $z5 = virtualinvoke r0.<android.service.dreams.DreamService: boolean isDozing()>();

        if $z5 == 0 goto label7;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" dozing");

        goto label8;

     label7:
        $z6 = virtualinvoke r0.<android.service.dreams.DreamService: boolean canDoze()>();

        if $z6 == 0 goto label8;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" candoze");

     label8:
        virtualinvoke r1.<java.io.PrintWriter: void println()>();

        $z7 = virtualinvoke r0.<android.service.dreams.DreamService: boolean canDoze()>();

        if $z7 == 0 goto label9;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  doze screen state: ");

        $i0 = r0.<android.service.dreams.DreamService: int mDozeScreenState>;

        $r21 = staticinvoke <android.view.Display: java.lang.String stateToString(int)>($i0);

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r23 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r23);

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  doze screen brightness: ");

        $i1 = r0.<android.service.dreams.DreamService: int mDozeScreenBrightness>;

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r27 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r27);

     label9:
        return;
    }

    public android.view.View findViewById(int)
    {
        android.service.dreams.DreamService r0;
        int i0;
        android.view.Window $r1;
        android.view.View $r2;

        r0 := @this: android.service.dreams.DreamService;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<android.service.dreams.DreamService: android.view.Window getWindow()>();

        $r2 = virtualinvoke $r1.<android.view.Window: android.view.View findViewById(int)>(i0);

        return $r2;
    }

    public final void finish()
    {
        android.service.dreams.DreamService r0;
        boolean $z0, $z1, $z2, $z3;
        android.service.dreams.IDreamManager $r2;
        java.lang.String $r3, $r7, r9;
        java.lang.StringBuilder $r4;
        android.os.RemoteException $r8;
        android.app.Activity r10;
        android.os.IBinder r11;

        r0 := @this: android.service.dreams.DreamService;

        $z0 = r0.<android.service.dreams.DreamService: boolean mDebug>;

        if $z0 == 0 goto label1;

        r9 = r0.<android.service.dreams.DreamService: java.lang.String TAG>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("finish(): mFinished=");

        $z3 = r0.<android.service.dreams.DreamService: boolean mFinished>;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z3);

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>(r9, $r7);

     label1:
        r10 = r0.<android.service.dreams.DreamService: android.app.Activity mActivity>;

        if r10 == null goto label3;

        $z2 = virtualinvoke r10.<android.app.Activity: boolean isFinishing()>();

        if $z2 != 0 goto label2;

        virtualinvoke r10.<android.app.Activity: void finishAndRemoveTask()>();

     label2:
        return;

     label3:
        $z1 = r0.<android.service.dreams.DreamService: boolean mFinished>;

        if $z1 == 0 goto label4;

        return;

     label4:
        r0.<android.service.dreams.DreamService: boolean mFinished> = 1;

        r11 = r0.<android.service.dreams.DreamService: android.os.IBinder mDreamToken>;

        if r11 != null goto label5;

        $r3 = r0.<android.service.dreams.DreamService: java.lang.String TAG>;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>($r3, "Finish was called before the dream was attached.");

        virtualinvoke r0.<android.service.dreams.DreamService: void stopSelf()>();

        return;

     label5:
        $r2 = r0.<android.service.dreams.DreamService: android.service.dreams.IDreamManager mDreamManager>;

        interfaceinvoke $r2.<android.service.dreams.IDreamManager: void finishSelf(android.os.IBinder,boolean)>(r11, 1);

     label6:
        goto label8;

     label7:
        $r8 := @caughtexception;

     label8:
        return;

        catch android.os.RemoteException from label5 to label6 with label7;
    }

    public int getDozeScreenBrightness()
    {
        android.service.dreams.DreamService r0;
        int $i0;

        r0 := @this: android.service.dreams.DreamService;

        $i0 = r0.<android.service.dreams.DreamService: int mDozeScreenBrightness>;

        return $i0;
    }

    public int getDozeScreenState()
    {
        android.service.dreams.DreamService r0;
        int $i0;

        r0 := @this: android.service.dreams.DreamService;

        $i0 = r0.<android.service.dreams.DreamService: int mDozeScreenState>;

        return $i0;
    }

    public android.view.Window getWindow()
    {
        android.service.dreams.DreamService r0;
        android.view.Window $r1;

        r0 := @this: android.service.dreams.DreamService;

        $r1 = r0.<android.service.dreams.DreamService: android.view.Window mWindow>;

        return $r1;
    }

    public android.view.WindowManager getWindowManager()
    {
        android.service.dreams.DreamService r0;
        android.view.Window r1;
        android.view.WindowManager r2;

        r0 := @this: android.service.dreams.DreamService;

        r1 = r0.<android.service.dreams.DreamService: android.view.Window mWindow>;

        if r1 == null goto label1;

        r2 = virtualinvoke r1.<android.view.Window: android.view.WindowManager getWindowManager()>();

        goto label2;

     label1:
        r2 = null;

     label2:
        return r2;
    }

    public boolean isDozing()
    {
        android.service.dreams.DreamService r0;
        boolean $z0;

        r0 := @this: android.service.dreams.DreamService;

        $z0 = r0.<android.service.dreams.DreamService: boolean mDozing>;

        return $z0;
    }

    public boolean isFullscreen()
    {
        android.service.dreams.DreamService r0;
        boolean $z0;

        r0 := @this: android.service.dreams.DreamService;

        $z0 = r0.<android.service.dreams.DreamService: boolean mFullscreen>;

        return $z0;
    }

    public boolean isInteractive()
    {
        android.service.dreams.DreamService r0;
        boolean $z0;

        r0 := @this: android.service.dreams.DreamService;

        $z0 = r0.<android.service.dreams.DreamService: boolean mInteractive>;

        return $z0;
    }

    public boolean isScreenBright()
    {
        android.service.dreams.DreamService r0;
        boolean $z0, $z1;

        r0 := @this: android.service.dreams.DreamService;

        $z0 = r0.<android.service.dreams.DreamService: boolean mScreenBright>;

        $z1 = specialinvoke r0.<android.service.dreams.DreamService: boolean getWindowFlagValue(int,boolean)>(128, $z0);

        return $z1;
    }

    public boolean isWindowless()
    {
        android.service.dreams.DreamService r0;
        boolean $z0;

        r0 := @this: android.service.dreams.DreamService;

        $z0 = r0.<android.service.dreams.DreamService: boolean mWindowless>;

        return $z0;
    }

    public void lambda$attach$0$DreamService(android.os.IRemoteCallback)
    {
        android.service.dreams.DreamService r0;
        android.view.Window $r2;
        boolean $z0;
        android.os.RemoteException $r3, $r5;
        java.lang.RuntimeException $r4, $r6;
        java.lang.Throwable $r7;
        android.os.IRemoteCallback r8;

        r0 := @this: android.service.dreams.DreamService;

        r8 := @parameter0: android.os.IRemoteCallback;

        $r2 = r0.<android.service.dreams.DreamService: android.view.Window mWindow>;

        if $r2 != null goto label1;

        $z0 = r0.<android.service.dreams.DreamService: boolean mWindowless>;

        if $z0 == 0 goto label4;

     label1:
        r0.<android.service.dreams.DreamService: boolean mStarted> = 1;

     label2:
        virtualinvoke r0.<android.service.dreams.DreamService: void onDreamingStarted()>();

     label3:
        interfaceinvoke r8.<android.os.IRemoteCallback: void sendResult(android.os.Bundle)>(null);

     label4:
        return;

     label5:
        $r3 := @caughtexception;

        $r4 = virtualinvoke $r3.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r4;

     label6:
        $r7 := @caughtexception;

     label7:
        interfaceinvoke r8.<android.os.IRemoteCallback: void sendResult(android.os.Bundle)>(null);

     label8:
        throw $r7;

     label9:
        $r5 := @caughtexception;

        $r6 = virtualinvoke $r5.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r6;

        catch java.lang.Throwable from label2 to label3 with label6;
        catch android.os.RemoteException from label3 to label4 with label5;
        catch android.os.RemoteException from label7 to label8 with label9;
    }

    public void onActionModeFinished(android.view.ActionMode)
    {
        android.service.dreams.DreamService r0;
        android.view.ActionMode r1;

        r0 := @this: android.service.dreams.DreamService;

        r1 := @parameter0: android.view.ActionMode;

        return;
    }

    public void onActionModeStarted(android.view.ActionMode)
    {
        android.service.dreams.DreamService r0;
        android.view.ActionMode r1;

        r0 := @this: android.service.dreams.DreamService;

        r1 := @parameter0: android.view.ActionMode;

        return;
    }

    public void onAttachedToWindow()
    {
        android.service.dreams.DreamService r0;

        r0 := @this: android.service.dreams.DreamService;

        return;
    }

    public final android.os.IBinder onBind(android.content.Intent)
    {
        android.service.dreams.DreamService r0;
        java.lang.String r1, $r7;
        boolean $z0;
        android.service.dreams.DreamService$DreamServiceWrapper $r3;
        java.lang.StringBuilder $r4;
        android.content.Intent r8;

        r0 := @this: android.service.dreams.DreamService;

        r8 := @parameter0: android.content.Intent;

        $z0 = r0.<android.service.dreams.DreamService: boolean mDebug>;

        if $z0 == 0 goto label1;

        r1 = r0.<android.service.dreams.DreamService: java.lang.String TAG>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onBind() intent = ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r8);

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>(r1, $r7);

     label1:
        $r3 = new android.service.dreams.DreamService$DreamServiceWrapper;

        specialinvoke $r3.<android.service.dreams.DreamService$DreamServiceWrapper: void <init>(android.service.dreams.DreamService)>(r0);

        r0.<android.service.dreams.DreamService: android.service.dreams.DreamService$DreamServiceWrapper mDreamServiceWrapper> = $r3;

        return $r3;
    }

    public void onContentChanged()
    {
        android.service.dreams.DreamService r0;

        r0 := @this: android.service.dreams.DreamService;

        return;
    }

    public void onCreate()
    {
        android.service.dreams.DreamService r0;
        boolean $z0;
        java.lang.String $r1;

        r0 := @this: android.service.dreams.DreamService;

        $z0 = r0.<android.service.dreams.DreamService: boolean mDebug>;

        if $z0 == 0 goto label1;

        $r1 = r0.<android.service.dreams.DreamService: java.lang.String TAG>;

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>($r1, "onCreate()");

     label1:
        specialinvoke r0.<android.app.Service: void onCreate()>();

        return;
    }

    public boolean onCreatePanelMenu(int, android.view.Menu)
    {
        android.service.dreams.DreamService r0;
        int i0;
        android.view.Menu r1;

        r0 := @this: android.service.dreams.DreamService;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.Menu;

        return 0;
    }

    public android.view.View onCreatePanelView(int)
    {
        android.service.dreams.DreamService r0;
        int i0;

        r0 := @this: android.service.dreams.DreamService;

        i0 := @parameter0: int;

        return null;
    }

    public void onDestroy()
    {
        android.service.dreams.DreamService r0;
        boolean $z0;
        java.lang.String $r1;

        r0 := @this: android.service.dreams.DreamService;

        $z0 = r0.<android.service.dreams.DreamService: boolean mDebug>;

        if $z0 == 0 goto label1;

        $r1 = r0.<android.service.dreams.DreamService: java.lang.String TAG>;

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>($r1, "onDestroy()");

     label1:
        specialinvoke r0.<android.service.dreams.DreamService: void detach()>();

        specialinvoke r0.<android.app.Service: void onDestroy()>();

        return;
    }

    public void onDetachedFromWindow()
    {
        android.service.dreams.DreamService r0;

        r0 := @this: android.service.dreams.DreamService;

        return;
    }

    public void onDreamingStarted()
    {
        android.service.dreams.DreamService r0;
        boolean $z0;
        java.lang.String $r1;

        r0 := @this: android.service.dreams.DreamService;

        $z0 = r0.<android.service.dreams.DreamService: boolean mDebug>;

        if $z0 == 0 goto label1;

        $r1 = r0.<android.service.dreams.DreamService: java.lang.String TAG>;

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>($r1, "onDreamingStarted()");

     label1:
        return;
    }

    public void onDreamingStopped()
    {
        android.service.dreams.DreamService r0;
        boolean $z0;
        java.lang.String $r1;

        r0 := @this: android.service.dreams.DreamService;

        $z0 = r0.<android.service.dreams.DreamService: boolean mDebug>;

        if $z0 == 0 goto label1;

        $r1 = r0.<android.service.dreams.DreamService: java.lang.String TAG>;

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>($r1, "onDreamingStopped()");

     label1:
        return;
    }

    public boolean onMenuItemSelected(int, android.view.MenuItem)
    {
        android.service.dreams.DreamService r0;
        int i0;
        android.view.MenuItem r1;

        r0 := @this: android.service.dreams.DreamService;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.MenuItem;

        return 0;
    }

    public boolean onMenuOpened(int, android.view.Menu)
    {
        android.service.dreams.DreamService r0;
        int i0;
        android.view.Menu r1;

        r0 := @this: android.service.dreams.DreamService;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.Menu;

        return 0;
    }

    public void onPanelClosed(int, android.view.Menu)
    {
        android.service.dreams.DreamService r0;
        int i0;
        android.view.Menu r1;

        r0 := @this: android.service.dreams.DreamService;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.Menu;

        return;
    }

    public boolean onPreparePanel(int, android.view.View, android.view.Menu)
    {
        android.service.dreams.DreamService r0;
        int i0;
        android.view.View r1;
        android.view.Menu r2;

        r0 := @this: android.service.dreams.DreamService;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.View;

        r2 := @parameter2: android.view.Menu;

        return 0;
    }

    public boolean onSearchRequested()
    {
        android.service.dreams.DreamService r0;

        r0 := @this: android.service.dreams.DreamService;

        return 0;
    }

    public boolean onSearchRequested(android.view.SearchEvent)
    {
        android.service.dreams.DreamService r0;
        android.view.SearchEvent r1;
        boolean $z0;

        r0 := @this: android.service.dreams.DreamService;

        r1 := @parameter0: android.view.SearchEvent;

        $z0 = virtualinvoke r0.<android.service.dreams.DreamService: boolean onSearchRequested()>();

        return $z0;
    }

    public void onWakeUp()
    {
        android.service.dreams.DreamService r0;

        r0 := @this: android.service.dreams.DreamService;

        virtualinvoke r0.<android.service.dreams.DreamService: void finish()>();

        return;
    }

    public void onWindowAttributesChanged(android.view.WindowManager$LayoutParams)
    {
        android.service.dreams.DreamService r0;
        android.view.WindowManager$LayoutParams r1;

        r0 := @this: android.service.dreams.DreamService;

        r1 := @parameter0: android.view.WindowManager$LayoutParams;

        return;
    }

    public void onWindowFocusChanged(boolean)
    {
        android.service.dreams.DreamService r0;
        boolean z0;

        r0 := @this: android.service.dreams.DreamService;

        z0 := @parameter0: boolean;

        return;
    }

    public android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback)
    {
        android.service.dreams.DreamService r0;
        android.view.ActionMode$Callback r1;

        r0 := @this: android.service.dreams.DreamService;

        r1 := @parameter0: android.view.ActionMode$Callback;

        return null;
    }

    public android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback, int)
    {
        android.service.dreams.DreamService r0;
        android.view.ActionMode$Callback r1;
        int i0;

        r0 := @this: android.service.dreams.DreamService;

        r1 := @parameter0: android.view.ActionMode$Callback;

        i0 := @parameter1: int;

        return null;
    }

    public final android.view.View requireViewById(int)
    {
        android.service.dreams.DreamService r0;
        int i0;
        android.view.View r1;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: android.service.dreams.DreamService;

        i0 := @parameter0: int;

        r1 = virtualinvoke r0.<android.service.dreams.DreamService: android.view.View findViewById(int)>(i0);

        if r1 == null goto label1;

        return r1;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("ID does not reference a View inside this DreamService");

        throw $r2;
    }

    public void setContentView(int)
    {
        android.service.dreams.DreamService r0;
        int i0;
        android.view.Window $r1;

        r0 := @this: android.service.dreams.DreamService;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<android.service.dreams.DreamService: android.view.Window getWindow()>();

        virtualinvoke $r1.<android.view.Window: void setContentView(int)>(i0);

        return;
    }

    public void setContentView(android.view.View)
    {
        android.service.dreams.DreamService r0;
        android.view.View r1;
        android.view.Window $r2;

        r0 := @this: android.service.dreams.DreamService;

        r1 := @parameter0: android.view.View;

        $r2 = virtualinvoke r0.<android.service.dreams.DreamService: android.view.Window getWindow()>();

        virtualinvoke $r2.<android.view.Window: void setContentView(android.view.View)>(r1);

        return;
    }

    public void setContentView(android.view.View, android.view.ViewGroup$LayoutParams)
    {
        android.service.dreams.DreamService r0;
        android.view.View r1;
        android.view.ViewGroup$LayoutParams r2;
        android.view.Window $r3;

        r0 := @this: android.service.dreams.DreamService;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.view.ViewGroup$LayoutParams;

        $r3 = virtualinvoke r0.<android.service.dreams.DreamService: android.view.Window getWindow()>();

        virtualinvoke $r3.<android.view.Window: void setContentView(android.view.View,android.view.ViewGroup$LayoutParams)>(r1, r2);

        return;
    }

    public void setDebug(boolean)
    {
        android.service.dreams.DreamService r0;
        boolean z0;

        r0 := @this: android.service.dreams.DreamService;

        z0 := @parameter0: boolean;

        r0.<android.service.dreams.DreamService: boolean mDebug> = z0;

        return;
    }

    public void setDozeScreenBrightness(int)
    {
        android.service.dreams.DreamService r0;
        int i0, $i1, i2;

        r0 := @this: android.service.dreams.DreamService;

        i0 := @parameter0: int;

        i2 = i0;

        if i0 == -1 goto label1;

        i2 = staticinvoke <android.service.dreams.DreamService: int clampAbsoluteBrightness(int)>(i0);

     label1:
        $i1 = r0.<android.service.dreams.DreamService: int mDozeScreenBrightness>;

        if $i1 == i2 goto label2;

        r0.<android.service.dreams.DreamService: int mDozeScreenBrightness> = i2;

        specialinvoke r0.<android.service.dreams.DreamService: void updateDoze()>();

     label2:
        return;
    }

    public void setDozeScreenState(int)
    {
        android.service.dreams.DreamService r0;
        int i0, $i1;

        r0 := @this: android.service.dreams.DreamService;

        i0 := @parameter0: int;

        $i1 = r0.<android.service.dreams.DreamService: int mDozeScreenState>;

        if $i1 == i0 goto label1;

        r0.<android.service.dreams.DreamService: int mDozeScreenState> = i0;

        specialinvoke r0.<android.service.dreams.DreamService: void updateDoze()>();

     label1:
        return;
    }

    public void setFullscreen(boolean)
    {
        android.service.dreams.DreamService r0;
        boolean z0, $z1;
        short s0;

        r0 := @this: android.service.dreams.DreamService;

        z0 := @parameter0: boolean;

        $z1 = r0.<android.service.dreams.DreamService: boolean mFullscreen>;

        if $z1 == z0 goto label3;

        r0.<android.service.dreams.DreamService: boolean mFullscreen> = z0;

        if z0 == 0 goto label1;

        s0 = 1024;

        goto label2;

     label1:
        s0 = 0;

     label2:
        specialinvoke r0.<android.service.dreams.DreamService: void applyWindowFlags(int,int)>(s0, 1024);

     label3:
        return;
    }

    public void setInteractive(boolean)
    {
        android.service.dreams.DreamService r0;
        boolean z0;

        r0 := @this: android.service.dreams.DreamService;

        z0 := @parameter0: boolean;

        r0.<android.service.dreams.DreamService: boolean mInteractive> = z0;

        return;
    }

    public void setScreenBright(boolean)
    {
        android.service.dreams.DreamService r0;
        boolean z0, $z1;
        short s0;

        r0 := @this: android.service.dreams.DreamService;

        z0 := @parameter0: boolean;

        $z1 = r0.<android.service.dreams.DreamService: boolean mScreenBright>;

        if $z1 == z0 goto label3;

        r0.<android.service.dreams.DreamService: boolean mScreenBright> = z0;

        if z0 == 0 goto label1;

        s0 = 128;

        goto label2;

     label1:
        s0 = 0;

     label2:
        specialinvoke r0.<android.service.dreams.DreamService: void applyWindowFlags(int,int)>(s0, 128);

     label3:
        return;
    }

    public void setWindowless(boolean)
    {
        android.service.dreams.DreamService r0;
        boolean z0;

        r0 := @this: android.service.dreams.DreamService;

        z0 := @parameter0: boolean;

        r0.<android.service.dreams.DreamService: boolean mWindowless> = z0;

        return;
    }

    public void startDozing()
    {
        android.service.dreams.DreamService r0;
        boolean $z0, $z1;

        r0 := @this: android.service.dreams.DreamService;

        $z0 = r0.<android.service.dreams.DreamService: boolean mCanDoze>;

        if $z0 == 0 goto label1;

        $z1 = r0.<android.service.dreams.DreamService: boolean mDozing>;

        if $z1 != 0 goto label1;

        r0.<android.service.dreams.DreamService: boolean mDozing> = 1;

        specialinvoke r0.<android.service.dreams.DreamService: void updateDoze()>();

     label1:
        return;
    }

    public void stopDozing()
    {
        android.service.dreams.DreamService r0;
        boolean $z0;
        android.os.IBinder $r2;
        android.service.dreams.IDreamManager $r3;
        android.os.RemoteException $r4;

        r0 := @this: android.service.dreams.DreamService;

        $z0 = r0.<android.service.dreams.DreamService: boolean mDozing>;

        if $z0 == 0 goto label4;

        r0.<android.service.dreams.DreamService: boolean mDozing> = 0;

     label1:
        $r3 = r0.<android.service.dreams.DreamService: android.service.dreams.IDreamManager mDreamManager>;

        $r2 = r0.<android.service.dreams.DreamService: android.os.IBinder mDreamToken>;

        interfaceinvoke $r3.<android.service.dreams.IDreamManager: void stopDozing(android.os.IBinder)>($r2);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public final void wakeUp()
    {
        android.service.dreams.DreamService r0;

        r0 := @this: android.service.dreams.DreamService;

        specialinvoke r0.<android.service.dreams.DreamService: void wakeUp(boolean)>(0);

        return;
    }

    public static void <clinit>()
    {
        <android.service.dreams.DreamService: java.lang.String SERVICE_INTERFACE> = "android.service.dreams.DreamService";

        <android.service.dreams.DreamService: java.lang.String DREAM_SERVICE> = "dreams";

        <android.service.dreams.DreamService: java.lang.String DREAM_META_DATA> = "android.service.dream";

        return;
    }
}
