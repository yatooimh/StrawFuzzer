public abstract class android.service.dreams.IDreamManager$Stub extends android.os.Binder implements android.service.dreams.IDreamManager
{
    private static final java.lang.String DESCRIPTOR;
    static final int TRANSACTION_awaken;
    static final int TRANSACTION_dream;
    static final int TRANSACTION_finishSelf;
    static final int TRANSACTION_forceAmbientDisplayEnabled;
    static final int TRANSACTION_getDefaultDreamComponentForUser;
    static final int TRANSACTION_getDreamComponents;
    static final int TRANSACTION_getDreamComponentsForUser;
    static final int TRANSACTION_isDreaming;
    static final int TRANSACTION_setDreamComponents;
    static final int TRANSACTION_setDreamComponentsForUser;
    static final int TRANSACTION_startDozing;
    static final int TRANSACTION_stopDozing;
    static final int TRANSACTION_testDream;

    public void <init>()
    {
        android.service.dreams.IDreamManager$Stub r0;

        r0 := @this: android.service.dreams.IDreamManager$Stub;

        specialinvoke r0.<android.os.Binder: void <init>()>();

        virtualinvoke r0.<android.service.dreams.IDreamManager$Stub: void attachInterface(android.os.IInterface,java.lang.String)>(r0, "android.service.dreams.IDreamManager");

        return;
    }

    public static android.service.dreams.IDreamManager asInterface(android.os.IBinder)
    {
        android.os.IBinder r0;
        android.os.IInterface r1;
        android.service.dreams.IDreamManager$Stub$Proxy $r2;
        boolean $z0;
        android.service.dreams.IDreamManager $r3;

        r0 := @parameter0: android.os.IBinder;

        if r0 != null goto label1;

        return null;

     label1:
        r1 = interfaceinvoke r0.<android.os.IBinder: android.os.IInterface queryLocalInterface(java.lang.String)>("android.service.dreams.IDreamManager");

        if r1 == null goto label2;

        $z0 = r1 instanceof android.service.dreams.IDreamManager;

        if $z0 == 0 goto label2;

        $r3 = (android.service.dreams.IDreamManager) r1;

        return $r3;

     label2:
        $r2 = new android.service.dreams.IDreamManager$Stub$Proxy;

        specialinvoke $r2.<android.service.dreams.IDreamManager$Stub$Proxy: void <init>(android.os.IBinder)>(r0);

        return $r2;
    }

    public static android.service.dreams.IDreamManager getDefaultImpl()
    {
        android.service.dreams.IDreamManager $r0;

        $r0 = <android.service.dreams.IDreamManager$Stub$Proxy: android.service.dreams.IDreamManager sDefaultImpl>;

        return $r0;
    }

    public static java.lang.String getDefaultTransactionName(int)
    {
        int i0;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 1: goto label14;
            case 2: goto label13;
            case 3: goto label12;
            case 4: goto label11;
            case 5: goto label10;
            case 6: goto label09;
            case 7: goto label08;
            case 8: goto label07;
            case 9: goto label06;
            case 10: goto label05;
            case 11: goto label04;
            case 12: goto label03;
            case 13: goto label02;
            default: goto label01;
        };

     label01:
        return null;

     label02:
        return "setDreamComponentsForUser";

     label03:
        return "getDreamComponentsForUser";

     label04:
        return "forceAmbientDisplayEnabled";

     label05:
        return "stopDozing";

     label06:
        return "startDozing";

     label07:
        return "finishSelf";

     label08:
        return "isDreaming";

     label09:
        return "testDream";

     label10:
        return "getDefaultDreamComponentForUser";

     label11:
        return "getDreamComponents";

     label12:
        return "setDreamComponents";

     label13:
        return "awaken";

     label14:
        return "dream";
    }

    public static boolean setDefaultImpl(android.service.dreams.IDreamManager)
    {
        android.service.dreams.IDreamManager r0, $r1;
        java.lang.IllegalStateException $r2;

        r0 := @parameter0: android.service.dreams.IDreamManager;

        $r1 = <android.service.dreams.IDreamManager$Stub$Proxy: android.service.dreams.IDreamManager sDefaultImpl>;

        if $r1 != null goto label2;

        if r0 == null goto label1;

        <android.service.dreams.IDreamManager$Stub$Proxy: android.service.dreams.IDreamManager sDefaultImpl> = r0;

        return 1;

     label1:
        return 0;

     label2:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("setDefaultImpl() called twice");

        throw $r2;
    }

    public android.os.IBinder asBinder()
    {
        android.service.dreams.IDreamManager$Stub r0;

        r0 := @this: android.service.dreams.IDreamManager$Stub;

        return r0;
    }

    public java.lang.String getTransactionName(int)
    {
        android.service.dreams.IDreamManager$Stub r0;
        int i0;
        java.lang.String $r1;

        r0 := @this: android.service.dreams.IDreamManager$Stub;

        i0 := @parameter0: int;

        $r1 = staticinvoke <android.service.dreams.IDreamManager$Stub: java.lang.String getDefaultTransactionName(int)>(i0);

        return $r1;
    }

    public boolean onTransact(int, android.os.Parcel, android.os.Parcel, int) throws android.os.RemoteException
    {
        android.service.dreams.IDreamManager$Stub r0;
        android.os.Parcel r1, r13;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9, i10, i11;
        android.os.IBinder r2, $r6, $r7;
        android.os.Parcelable$Creator $r3, $r8, $r10;
        java.lang.Object[] $r4, $r11;
        android.content.ComponentName[] $r5, $r12, r14, r17;
        java.lang.Object $r9;
        boolean $z1, z2, z3, z4;
        android.content.ComponentName r15, r16;

        r0 := @this: android.service.dreams.IDreamManager$Stub;

        i9 := @parameter0: int;

        r13 := @parameter1: android.os.Parcel;

        r1 := @parameter2: android.os.Parcel;

        i0 := @parameter3: int;

        if i9 == 1598968902 goto label21;

        z2 = 0;

        tableswitch(i9)
        {
            case 1: goto label20;
            case 2: goto label19;
            case 3: goto label18;
            case 4: goto label17;
            case 5: goto label14;
            case 6: goto label11;
            case 7: goto label10;
            case 8: goto label08;
            case 9: goto label07;
            case 10: goto label06;
            case 11: goto label04;
            case 12: goto label03;
            case 13: goto label02;
            default: goto label01;
        };

     label01:
        $z1 = specialinvoke r0.<android.os.Binder: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>(i9, r13, r1, i0);

        return $z1;

     label02:
        virtualinvoke r13.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.service.dreams.IDreamManager");

        $i1 = virtualinvoke r13.<android.os.Parcel: int readInt()>();

        $r3 = <android.content.ComponentName: android.os.Parcelable$Creator CREATOR>;

        $r4 = virtualinvoke r13.<android.os.Parcel: java.lang.Object[] createTypedArray(android.os.Parcelable$Creator)>($r3);

        $r5 = (android.content.ComponentName[]) $r4;

        virtualinvoke r0.<android.service.dreams.IDreamManager$Stub: void setDreamComponentsForUser(int,android.content.ComponentName[])>($i1, $r5);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label03:
        virtualinvoke r13.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.service.dreams.IDreamManager");

        $i2 = virtualinvoke r13.<android.os.Parcel: int readInt()>();

        r14 = virtualinvoke r0.<android.service.dreams.IDreamManager$Stub: android.content.ComponentName[] getDreamComponentsForUser(int)>($i2);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeTypedArray(android.os.Parcelable[],int)>(r14, 1);

        return 1;

     label04:
        virtualinvoke r13.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.service.dreams.IDreamManager");

        $i3 = virtualinvoke r13.<android.os.Parcel: int readInt()>();

        if $i3 == 0 goto label05;

        z2 = 1;

     label05:
        virtualinvoke r0.<android.service.dreams.IDreamManager$Stub: void forceAmbientDisplayEnabled(boolean)>(z2);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label06:
        virtualinvoke r13.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.service.dreams.IDreamManager");

        $r6 = virtualinvoke r13.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        virtualinvoke r0.<android.service.dreams.IDreamManager$Stub: void stopDozing(android.os.IBinder)>($r6);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label07:
        virtualinvoke r13.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.service.dreams.IDreamManager");

        $r7 = virtualinvoke r13.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $i4 = virtualinvoke r13.<android.os.Parcel: int readInt()>();

        $i5 = virtualinvoke r13.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.service.dreams.IDreamManager$Stub: void startDozing(android.os.IBinder,int,int)>($r7, $i4, $i5);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label08:
        virtualinvoke r13.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.service.dreams.IDreamManager");

        r2 = virtualinvoke r13.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        z3 = 0;

        $i6 = virtualinvoke r13.<android.os.Parcel: int readInt()>();

        if $i6 == 0 goto label09;

        z3 = 1;

     label09:
        virtualinvoke r0.<android.service.dreams.IDreamManager$Stub: void finishSelf(android.os.IBinder,boolean)>(r2, z3);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label10:
        virtualinvoke r13.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.service.dreams.IDreamManager");

        z4 = virtualinvoke r0.<android.service.dreams.IDreamManager$Stub: boolean isDreaming()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i11 = (int) z4;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i11);

        return 1;

     label11:
        virtualinvoke r13.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.service.dreams.IDreamManager");

        i10 = virtualinvoke r13.<android.os.Parcel: int readInt()>();

        $i7 = virtualinvoke r13.<android.os.Parcel: int readInt()>();

        if $i7 == 0 goto label12;

        $r8 = <android.content.ComponentName: android.os.Parcelable$Creator CREATOR>;

        $r9 = interfaceinvoke $r8.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r13);

        r15 = (android.content.ComponentName) $r9;

        goto label13;

     label12:
        r15 = null;

     label13:
        virtualinvoke r0.<android.service.dreams.IDreamManager$Stub: void testDream(int,android.content.ComponentName)>(i10, r15);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label14:
        virtualinvoke r13.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.service.dreams.IDreamManager");

        $i8 = virtualinvoke r13.<android.os.Parcel: int readInt()>();

        r16 = virtualinvoke r0.<android.service.dreams.IDreamManager$Stub: android.content.ComponentName getDefaultDreamComponentForUser(int)>($i8);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        if r16 == null goto label15;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r16.<android.content.ComponentName: void writeToParcel(android.os.Parcel,int)>(r1, 1);

        goto label16;

     label15:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label16:
        return 1;

     label17:
        virtualinvoke r13.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.service.dreams.IDreamManager");

        r17 = virtualinvoke r0.<android.service.dreams.IDreamManager$Stub: android.content.ComponentName[] getDreamComponents()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeTypedArray(android.os.Parcelable[],int)>(r17, 1);

        return 1;

     label18:
        virtualinvoke r13.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.service.dreams.IDreamManager");

        $r10 = <android.content.ComponentName: android.os.Parcelable$Creator CREATOR>;

        $r11 = virtualinvoke r13.<android.os.Parcel: java.lang.Object[] createTypedArray(android.os.Parcelable$Creator)>($r10);

        $r12 = (android.content.ComponentName[]) $r11;

        virtualinvoke r0.<android.service.dreams.IDreamManager$Stub: void setDreamComponents(android.content.ComponentName[])>($r12);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label19:
        virtualinvoke r13.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.service.dreams.IDreamManager");

        virtualinvoke r0.<android.service.dreams.IDreamManager$Stub: void awaken()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label20:
        virtualinvoke r13.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.service.dreams.IDreamManager");

        virtualinvoke r0.<android.service.dreams.IDreamManager$Stub: void dream()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label21:
        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>("android.service.dreams.IDreamManager");

        return 1;
    }

    public static void <clinit>()
    {
        <android.service.dreams.IDreamManager$Stub: int TRANSACTION_testDream> = 6;

        <android.service.dreams.IDreamManager$Stub: int TRANSACTION_stopDozing> = 10;

        <android.service.dreams.IDreamManager$Stub: int TRANSACTION_startDozing> = 9;

        <android.service.dreams.IDreamManager$Stub: int TRANSACTION_setDreamComponentsForUser> = 13;

        <android.service.dreams.IDreamManager$Stub: int TRANSACTION_setDreamComponents> = 3;

        <android.service.dreams.IDreamManager$Stub: int TRANSACTION_isDreaming> = 7;

        <android.service.dreams.IDreamManager$Stub: int TRANSACTION_getDreamComponentsForUser> = 12;

        <android.service.dreams.IDreamManager$Stub: int TRANSACTION_getDreamComponents> = 4;

        <android.service.dreams.IDreamManager$Stub: int TRANSACTION_getDefaultDreamComponentForUser> = 5;

        <android.service.dreams.IDreamManager$Stub: int TRANSACTION_forceAmbientDisplayEnabled> = 11;

        <android.service.dreams.IDreamManager$Stub: int TRANSACTION_finishSelf> = 8;

        <android.service.dreams.IDreamManager$Stub: int TRANSACTION_dream> = 1;

        <android.service.dreams.IDreamManager$Stub: int TRANSACTION_awaken> = 2;

        <android.service.dreams.IDreamManager$Stub: java.lang.String DESCRIPTOR> = "android.service.dreams.IDreamManager";

        return;
    }
}
