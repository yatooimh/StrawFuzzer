public abstract class android.service.euicc.EuiccService extends android.app.Service
{
    public static final java.lang.String ACTION_BIND_CARRIER_PROVISIONING_SERVICE;
    public static final java.lang.String ACTION_DELETE_SUBSCRIPTION_PRIVILEGED;
    public static final java.lang.String ACTION_MANAGE_EMBEDDED_SUBSCRIPTIONS;
    public static final java.lang.String ACTION_PROVISION_EMBEDDED_SUBSCRIPTION;
    public static final java.lang.String ACTION_RENAME_SUBSCRIPTION_PRIVILEGED;
    public static final java.lang.String ACTION_RESOLVE_CONFIRMATION_CODE;
    public static final java.lang.String ACTION_RESOLVE_DEACTIVATE_SIM;
    public static final java.lang.String ACTION_RESOLVE_NO_PRIVILEGES;
    public static final java.lang.String ACTION_RESOLVE_RESOLVABLE_ERRORS;
    public static final java.lang.String ACTION_START_CARRIER_ACTIVATION;
    public static final java.lang.String ACTION_START_EUICC_ACTIVATION;
    public static final java.lang.String ACTION_TOGGLE_SUBSCRIPTION_PRIVILEGED;
    public static final java.lang.String CATEGORY_EUICC_UI;
    public static final java.lang.String EUICC_SERVICE_INTERFACE;
    public static final java.lang.String EXTRA_RESOLUTION_ALLOW_POLICY_RULES;
    public static final java.lang.String EXTRA_RESOLUTION_CALLING_PACKAGE;
    public static final java.lang.String EXTRA_RESOLUTION_CARD_ID;
    public static final java.lang.String EXTRA_RESOLUTION_CONFIRMATION_CODE;
    public static final java.lang.String EXTRA_RESOLUTION_CONFIRMATION_CODE_RETRIED;
    public static final java.lang.String EXTRA_RESOLUTION_CONSENT;
    public static final java.lang.String EXTRA_RESOLVABLE_ERRORS;
    public static final int RESOLVABLE_ERROR_CONFIRMATION_CODE;
    public static final int RESOLVABLE_ERROR_POLICY_RULES;
    public static final int RESULT_FIRST_USER;
    public static final int RESULT_MUST_DEACTIVATE_SIM;
    public static final int RESULT_NEED_CONFIRMATION_CODE;
    public static final int RESULT_OK;
    public static final int RESULT_RESOLVABLE_ERRORS;
    private static final java.lang.String TAG;
    private java.util.concurrent.ThreadPoolExecutor mExecutor;
    private final android.service.euicc.IEuiccService$Stub mStubWrapper;

    public void <init>()
    {
        android.service.euicc.EuiccService r0;
        android.service.euicc.EuiccService$IEuiccServiceWrapper $r1;

        r0 := @this: android.service.euicc.EuiccService;

        specialinvoke r0.<android.app.Service: void <init>()>();

        $r1 = new android.service.euicc.EuiccService$IEuiccServiceWrapper;

        specialinvoke $r1.<android.service.euicc.EuiccService$IEuiccServiceWrapper: void <init>(android.service.euicc.EuiccService,android.service.euicc.EuiccService$1)>(r0, null);

        r0.<android.service.euicc.EuiccService: android.service.euicc.IEuiccService$Stub mStubWrapper> = $r1;

        return;
    }

    static java.util.concurrent.ThreadPoolExecutor access$100(android.service.euicc.EuiccService)
    {
        android.service.euicc.EuiccService r0;
        java.util.concurrent.ThreadPoolExecutor $r1;

        r0 := @parameter0: android.service.euicc.EuiccService;

        $r1 = r0.<android.service.euicc.EuiccService: java.util.concurrent.ThreadPoolExecutor mExecutor>;

        return $r1;
    }

    public void dump(java.io.PrintWriter)
    {
        android.service.euicc.EuiccService r0;
        java.io.PrintWriter r1;

        r0 := @this: android.service.euicc.EuiccService;

        r1 := @parameter0: java.io.PrintWriter;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("The connected LPA does not implement EuiccService#dump()");

        return;
    }

    public int encodeSmdxSubjectAndReasonCode(java.lang.String, java.lang.String) throws java.lang.NumberFormatException, java.lang.IllegalArgumentException, java.lang.UnsupportedOperationException
    {
        android.service.euicc.EuiccService r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i11, i12, i14, i15, i16, i17, i18;
        boolean $z0, $z1;
        java.lang.IllegalArgumentException $r1;
        java.lang.UnsupportedOperationException $r2, $r4, $r6;
        java.lang.String $r3, $r5, r7, r8;
        java.lang.String[] r9, r10;

        r0 := @this: android.service.euicc.EuiccService;

        r7 := @parameter0: java.lang.String;

        r8 := @parameter1: java.lang.String;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r7);

        if $z0 != 0 goto label8;

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r8);

        if $z1 != 0 goto label8;

        r9 = virtualinvoke r7.<java.lang.String: java.lang.String[] split(java.lang.String)>("\\.");

        r10 = virtualinvoke r8.<java.lang.String: java.lang.String[] split(java.lang.String)>("\\.");

        $i1 = lengthof r9;

        if $i1 > 3 goto label7;

        $i2 = lengthof r10;

        if $i2 > 3 goto label7;

        $i3 = lengthof r9;

        $i4 = 3 - $i3;

        $i5 = $i4 * 4;

        i11 = 10 << $i5;

        i12 = lengthof r9;

        i14 = 0;

     label1:
        if i14 >= i12 goto label3;

        $r5 = r9[i14];

        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r5);

        if i0 > 15 goto label2;

        $i10 = i11 << 4;

        i11 = $i10 + i0;

        i14 = i14 + 1;

        goto label1;

     label2:
        $r6 = new java.lang.UnsupportedOperationException;

        specialinvoke $r6.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("SubjectCode exceeds 15");

        throw $r6;

     label3:
        $i6 = lengthof r10;

        $i7 = 3 - $i6;

        $i8 = $i7 * 4;

        i15 = i11 << $i8;

        i16 = lengthof r10;

        i17 = 0;

     label4:
        if i17 >= i16 goto label6;

        $r3 = r10[i17];

        i18 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r3);

        if i18 > 15 goto label5;

        $i9 = i15 << 4;

        i15 = $i9 + i18;

        i17 = i17 + 1;

        goto label4;

     label5:
        $r4 = new java.lang.UnsupportedOperationException;

        specialinvoke $r4.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("ReasonCode exceeds 15");

        throw $r4;

     label6:
        return i15;

     label7:
        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Only three nested layer is supported.");

        throw $r2;

     label8:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("SubjectCode/ReasonCode is empty");

        throw $r1;
    }

    public android.os.IBinder onBind(android.content.Intent)
    {
        android.service.euicc.EuiccService r0;
        android.content.Intent r1;
        android.service.euicc.IEuiccService$Stub $r2;

        r0 := @this: android.service.euicc.EuiccService;

        r1 := @parameter0: android.content.Intent;

        $r2 = r0.<android.service.euicc.EuiccService: android.service.euicc.IEuiccService$Stub mStubWrapper>;

        return $r2;
    }

    public void onCreate()
    {
        android.service.euicc.EuiccService r0;
        java.util.concurrent.ThreadPoolExecutor $r2;
        java.util.concurrent.LinkedBlockingQueue $r3;
        java.util.concurrent.TimeUnit $r4;
        android.service.euicc.EuiccService$1 $r5;

        r0 := @this: android.service.euicc.EuiccService;

        specialinvoke r0.<android.app.Service: void onCreate()>();

        $r2 = new java.util.concurrent.ThreadPoolExecutor;

        $r4 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>;

        $r3 = new java.util.concurrent.LinkedBlockingQueue;

        specialinvoke $r3.<java.util.concurrent.LinkedBlockingQueue: void <init>()>();

        $r5 = new android.service.euicc.EuiccService$1;

        specialinvoke $r5.<android.service.euicc.EuiccService$1: void <init>(android.service.euicc.EuiccService)>(r0);

        specialinvoke $r2.<java.util.concurrent.ThreadPoolExecutor: void <init>(int,int,long,java.util.concurrent.TimeUnit,java.util.concurrent.BlockingQueue,java.util.concurrent.ThreadFactory)>(4, 4, 30L, $r4, $r3, $r5);

        r0.<android.service.euicc.EuiccService: java.util.concurrent.ThreadPoolExecutor mExecutor> = $r2;

        virtualinvoke $r2.<java.util.concurrent.ThreadPoolExecutor: void allowCoreThreadTimeOut(boolean)>(1);

        return;
    }

    public abstract int onDeleteSubscription(int, java.lang.String);

    public void onDestroy()
    {
        android.service.euicc.EuiccService r0;
        java.util.concurrent.ThreadPoolExecutor $r1;

        r0 := @this: android.service.euicc.EuiccService;

        $r1 = r0.<android.service.euicc.EuiccService: java.util.concurrent.ThreadPoolExecutor mExecutor>;

        virtualinvoke $r1.<java.util.concurrent.ThreadPoolExecutor: java.util.List shutdownNow()>();

        specialinvoke r0.<android.app.Service: void onDestroy()>();

        return;
    }

    public int onDownloadSubscription(int, android.telephony.euicc.DownloadableSubscription, boolean, boolean)
    {
        android.service.euicc.EuiccService r0;
        int i0;
        android.telephony.euicc.DownloadableSubscription r1;
        boolean z0, z1;

        r0 := @this: android.service.euicc.EuiccService;

        i0 := @parameter0: int;

        r1 := @parameter1: android.telephony.euicc.DownloadableSubscription;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        return -2147483648;
    }

    public android.service.euicc.DownloadSubscriptionResult onDownloadSubscription(int, android.telephony.euicc.DownloadableSubscription, boolean, boolean, android.os.Bundle)
    {
        android.service.euicc.EuiccService r0;
        int i0;
        android.telephony.euicc.DownloadableSubscription r1;
        boolean z0, z1;
        android.os.Bundle r2;

        r0 := @this: android.service.euicc.EuiccService;

        i0 := @parameter0: int;

        r1 := @parameter1: android.telephony.euicc.DownloadableSubscription;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        r2 := @parameter4: android.os.Bundle;

        return null;
    }

    public abstract int onEraseSubscriptions(int);

    public int onEraseSubscriptions(int, int)
    {
        android.service.euicc.EuiccService r0;
        int i0, i1;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: android.service.euicc.EuiccService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("This method must be overridden to enable the ResetOption parameter");

        throw $r1;
    }

    public abstract android.service.euicc.GetDefaultDownloadableSubscriptionListResult onGetDefaultDownloadableSubscriptionList(int, boolean);

    public abstract android.service.euicc.GetDownloadableSubscriptionMetadataResult onGetDownloadableSubscriptionMetadata(int, android.telephony.euicc.DownloadableSubscription, boolean);

    public abstract java.lang.String onGetEid(int);

    public abstract android.telephony.euicc.EuiccInfo onGetEuiccInfo(int);

    public abstract android.service.euicc.GetEuiccProfileInfoListResult onGetEuiccProfileInfoList(int);

    public abstract int onGetOtaStatus(int);

    public abstract int onRetainSubscriptionsForFactoryReset(int);

    public abstract void onStartOtaIfNecessary(int, android.service.euicc.EuiccService$OtaStatusChangedCallback);

    public abstract int onSwitchToSubscription(int, java.lang.String, boolean);

    public abstract int onUpdateSubscriptionNickname(int, java.lang.String, java.lang.String);

    public static void <clinit>()
    {
        <android.service.euicc.EuiccService: java.lang.String TAG> = "EuiccService";

        <android.service.euicc.EuiccService: int RESULT_RESOLVABLE_ERRORS> = -2;

        <android.service.euicc.EuiccService: int RESULT_OK> = 0;

        <android.service.euicc.EuiccService: int RESULT_NEED_CONFIRMATION_CODE> = -2;

        <android.service.euicc.EuiccService: int RESULT_MUST_DEACTIVATE_SIM> = -1;

        <android.service.euicc.EuiccService: int RESULT_FIRST_USER> = 1;

        <android.service.euicc.EuiccService: int RESOLVABLE_ERROR_POLICY_RULES> = 2;

        <android.service.euicc.EuiccService: int RESOLVABLE_ERROR_CONFIRMATION_CODE> = 1;

        <android.service.euicc.EuiccService: java.lang.String EXTRA_RESOLVABLE_ERRORS> = "android.service.euicc.extra.RESOLVABLE_ERRORS";

        <android.service.euicc.EuiccService: java.lang.String EXTRA_RESOLUTION_CONSENT> = "android.service.euicc.extra.RESOLUTION_CONSENT";

        <android.service.euicc.EuiccService: java.lang.String EXTRA_RESOLUTION_CONFIRMATION_CODE_RETRIED> = "android.service.euicc.extra.RESOLUTION_CONFIRMATION_CODE_RETRIED";

        <android.service.euicc.EuiccService: java.lang.String EXTRA_RESOLUTION_CONFIRMATION_CODE> = "android.service.euicc.extra.RESOLUTION_CONFIRMATION_CODE";

        <android.service.euicc.EuiccService: java.lang.String EXTRA_RESOLUTION_CARD_ID> = "android.service.euicc.extra.RESOLUTION_CARD_ID";

        <android.service.euicc.EuiccService: java.lang.String EXTRA_RESOLUTION_CALLING_PACKAGE> = "android.service.euicc.extra.RESOLUTION_CALLING_PACKAGE";

        <android.service.euicc.EuiccService: java.lang.String EXTRA_RESOLUTION_ALLOW_POLICY_RULES> = "android.service.euicc.extra.RESOLUTION_ALLOW_POLICY_RULES";

        <android.service.euicc.EuiccService: java.lang.String EUICC_SERVICE_INTERFACE> = "android.service.euicc.EuiccService";

        <android.service.euicc.EuiccService: java.lang.String CATEGORY_EUICC_UI> = "android.service.euicc.category.EUICC_UI";

        <android.service.euicc.EuiccService: java.lang.String ACTION_TOGGLE_SUBSCRIPTION_PRIVILEGED> = "android.service.euicc.action.TOGGLE_SUBSCRIPTION_PRIVILEGED";

        <android.service.euicc.EuiccService: java.lang.String ACTION_START_EUICC_ACTIVATION> = "android.service.euicc.action.START_EUICC_ACTIVATION";

        <android.service.euicc.EuiccService: java.lang.String ACTION_START_CARRIER_ACTIVATION> = "android.service.euicc.action.START_CARRIER_ACTIVATION";

        <android.service.euicc.EuiccService: java.lang.String ACTION_RESOLVE_RESOLVABLE_ERRORS> = "android.service.euicc.action.RESOLVE_RESOLVABLE_ERRORS";

        <android.service.euicc.EuiccService: java.lang.String ACTION_RESOLVE_NO_PRIVILEGES> = "android.service.euicc.action.RESOLVE_NO_PRIVILEGES";

        <android.service.euicc.EuiccService: java.lang.String ACTION_RESOLVE_DEACTIVATE_SIM> = "android.service.euicc.action.RESOLVE_DEACTIVATE_SIM";

        <android.service.euicc.EuiccService: java.lang.String ACTION_RESOLVE_CONFIRMATION_CODE> = "android.service.euicc.action.RESOLVE_CONFIRMATION_CODE";

        <android.service.euicc.EuiccService: java.lang.String ACTION_RENAME_SUBSCRIPTION_PRIVILEGED> = "android.service.euicc.action.RENAME_SUBSCRIPTION_PRIVILEGED";

        <android.service.euicc.EuiccService: java.lang.String ACTION_PROVISION_EMBEDDED_SUBSCRIPTION> = "android.service.euicc.action.PROVISION_EMBEDDED_SUBSCRIPTION";

        <android.service.euicc.EuiccService: java.lang.String ACTION_MANAGE_EMBEDDED_SUBSCRIPTIONS> = "android.service.euicc.action.MANAGE_EMBEDDED_SUBSCRIPTIONS";

        <android.service.euicc.EuiccService: java.lang.String ACTION_DELETE_SUBSCRIPTION_PRIVILEGED> = "android.service.euicc.action.DELETE_SUBSCRIPTION_PRIVILEGED";

        <android.service.euicc.EuiccService: java.lang.String ACTION_BIND_CARRIER_PROVISIONING_SERVICE> = "android.service.euicc.action.BIND_CARRIER_PROVISIONING_SERVICE";

        return;
    }
}
