public abstract class android.service.media.MediaBrowserService extends android.app.Service
{
    private static final boolean DBG;
    public static final java.lang.String KEY_MEDIA_ITEM;
    private static final int RESULT_ERROR;
    private static final int RESULT_FLAG_ON_LOAD_ITEM_NOT_IMPLEMENTED;
    private static final int RESULT_FLAG_OPTION_NOT_HANDLED;
    private static final int RESULT_OK;
    public static final java.lang.String SERVICE_INTERFACE;
    private static final java.lang.String TAG;
    private android.service.media.MediaBrowserService$ServiceBinder mBinder;
    private final android.util.ArrayMap mConnections;
    private android.service.media.MediaBrowserService$ConnectionRecord mCurConnection;
    private final android.os.Handler mHandler;
    android.media.session.MediaSession$Token mSession;

    public void <init>()
    {
        android.service.media.MediaBrowserService r0;
        android.util.ArrayMap $r1;
        android.os.Handler $r2;

        r0 := @this: android.service.media.MediaBrowserService;

        specialinvoke r0.<android.app.Service: void <init>()>();

        $r1 = new android.util.ArrayMap;

        specialinvoke $r1.<android.util.ArrayMap: void <init>()>();

        r0.<android.service.media.MediaBrowserService: android.util.ArrayMap mConnections> = $r1;

        $r2 = new android.os.Handler;

        specialinvoke $r2.<android.os.Handler: void <init>()>();

        r0.<android.service.media.MediaBrowserService: android.os.Handler mHandler> = $r2;

        return;
    }

    static android.util.ArrayMap access$000(android.service.media.MediaBrowserService)
    {
        android.service.media.MediaBrowserService r0;
        android.util.ArrayMap $r1;

        r0 := @parameter0: android.service.media.MediaBrowserService;

        $r1 = r0.<android.service.media.MediaBrowserService: android.util.ArrayMap mConnections>;

        return $r1;
    }

    static android.os.Handler access$100(android.service.media.MediaBrowserService)
    {
        android.service.media.MediaBrowserService r0;
        android.os.Handler $r1;

        r0 := @parameter0: android.service.media.MediaBrowserService;

        $r1 = r0.<android.service.media.MediaBrowserService: android.os.Handler mHandler>;

        return $r1;
    }

    static java.util.List access$1000(android.service.media.MediaBrowserService, java.util.List, android.os.Bundle)
    {
        android.service.media.MediaBrowserService r0;
        java.util.List r1, $r3;
        android.os.Bundle r2;

        r0 := @parameter0: android.service.media.MediaBrowserService;

        r1 := @parameter1: java.util.List;

        r2 := @parameter2: android.os.Bundle;

        $r3 = specialinvoke r0.<android.service.media.MediaBrowserService: java.util.List applyOptions(java.util.List,android.os.Bundle)>(r1, r2);

        return $r3;
    }

    static boolean access$200(android.service.media.MediaBrowserService, java.lang.String, int)
    {
        android.service.media.MediaBrowserService r0;
        java.lang.String r1;
        int i0;
        boolean $z0;

        r0 := @parameter0: android.service.media.MediaBrowserService;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $z0 = specialinvoke r0.<android.service.media.MediaBrowserService: boolean isValidPackage(java.lang.String,int)>(r1, i0);

        return $z0;
    }

    static android.service.media.MediaBrowserService$ConnectionRecord access$402(android.service.media.MediaBrowserService, android.service.media.MediaBrowserService$ConnectionRecord)
    {
        android.service.media.MediaBrowserService r0;
        android.service.media.MediaBrowserService$ConnectionRecord r1;

        r0 := @parameter0: android.service.media.MediaBrowserService;

        r1 := @parameter1: android.service.media.MediaBrowserService$ConnectionRecord;

        r0.<android.service.media.MediaBrowserService: android.service.media.MediaBrowserService$ConnectionRecord mCurConnection> = r1;

        return r1;
    }

    static void access$500(android.service.media.MediaBrowserService, java.lang.String, android.service.media.MediaBrowserService$ConnectionRecord, android.os.IBinder, android.os.Bundle)
    {
        android.service.media.MediaBrowserService r0;
        java.lang.String r1;
        android.service.media.MediaBrowserService$ConnectionRecord r2;
        android.os.IBinder r3;
        android.os.Bundle r4;

        r0 := @parameter0: android.service.media.MediaBrowserService;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.service.media.MediaBrowserService$ConnectionRecord;

        r3 := @parameter3: android.os.IBinder;

        r4 := @parameter4: android.os.Bundle;

        specialinvoke r0.<android.service.media.MediaBrowserService: void addSubscription(java.lang.String,android.service.media.MediaBrowserService$ConnectionRecord,android.os.IBinder,android.os.Bundle)>(r1, r2, r3, r4);

        return;
    }

    static boolean access$600(android.service.media.MediaBrowserService, java.lang.String, android.service.media.MediaBrowserService$ConnectionRecord, android.os.IBinder)
    {
        android.service.media.MediaBrowserService r0;
        java.lang.String r1;
        android.service.media.MediaBrowserService$ConnectionRecord r2;
        android.os.IBinder r3;
        boolean $z0;

        r0 := @parameter0: android.service.media.MediaBrowserService;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.service.media.MediaBrowserService$ConnectionRecord;

        r3 := @parameter3: android.os.IBinder;

        $z0 = specialinvoke r0.<android.service.media.MediaBrowserService: boolean removeSubscription(java.lang.String,android.service.media.MediaBrowserService$ConnectionRecord,android.os.IBinder)>(r1, r2, r3);

        return $z0;
    }

    static void access$700(android.service.media.MediaBrowserService, java.lang.String, android.service.media.MediaBrowserService$ConnectionRecord, android.os.ResultReceiver)
    {
        android.service.media.MediaBrowserService r0;
        java.lang.String r1;
        android.service.media.MediaBrowserService$ConnectionRecord r2;
        android.os.ResultReceiver r3;

        r0 := @parameter0: android.service.media.MediaBrowserService;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.service.media.MediaBrowserService$ConnectionRecord;

        r3 := @parameter3: android.os.ResultReceiver;

        specialinvoke r0.<android.service.media.MediaBrowserService: void performLoadItem(java.lang.String,android.service.media.MediaBrowserService$ConnectionRecord,android.os.ResultReceiver)>(r1, r2, r3);

        return;
    }

    static void access$900(android.service.media.MediaBrowserService, java.lang.String, android.service.media.MediaBrowserService$ConnectionRecord, android.os.Bundle)
    {
        android.service.media.MediaBrowserService r0;
        java.lang.String r1;
        android.service.media.MediaBrowserService$ConnectionRecord r2;
        android.os.Bundle r3;

        r0 := @parameter0: android.service.media.MediaBrowserService;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.service.media.MediaBrowserService$ConnectionRecord;

        r3 := @parameter3: android.os.Bundle;

        specialinvoke r0.<android.service.media.MediaBrowserService: void performLoadChildren(java.lang.String,android.service.media.MediaBrowserService$ConnectionRecord,android.os.Bundle)>(r1, r2, r3);

        return;
    }

    private void addSubscription(java.lang.String, android.service.media.MediaBrowserService$ConnectionRecord, android.os.IBinder, android.os.Bundle)
    {
        android.service.media.MediaBrowserService r0;
        java.lang.String r1;
        android.service.media.MediaBrowserService$ConnectionRecord r2;
        android.os.IBinder r3;
        android.os.Bundle r4, $r14;
        java.util.Iterator r5;
        java.util.HashMap $r6, $r9;
        java.lang.Object $r7, $r11, $r12, $r13, r17;
        boolean $z1, $z2;
        java.util.List r16, r21, r22;
        android.util.Pair r18, r20;
        java.util.ArrayList r19;

        r0 := @this: android.service.media.MediaBrowserService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.service.media.MediaBrowserService$ConnectionRecord;

        r3 := @parameter2: android.os.IBinder;

        r4 := @parameter3: android.os.Bundle;

        $r6 = r2.<android.service.media.MediaBrowserService$ConnectionRecord: java.util.HashMap subscriptions>;

        $r7 = virtualinvoke $r6.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r16 = (java.util.List) $r7;

        r17 = r16;

        if r16 != null goto label1;

        r19 = new java.util.ArrayList;

        specialinvoke r19.<java.util.ArrayList: void <init>()>();

        r17 = r19;

     label1:
        r21 = (java.util.List) r17;

        r5 = interfaceinvoke r21.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z2 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label4;

        $r11 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r18 = (android.util.Pair) $r11;

        $r12 = r18.<android.util.Pair: java.lang.Object first>;

        if r3 != $r12 goto label3;

        $r13 = r18.<android.util.Pair: java.lang.Object second>;

        $r14 = (android.os.Bundle) $r13;

        $z1 = staticinvoke <android.media.browse.MediaBrowserUtils: boolean areSameOptions(android.os.Bundle,android.os.Bundle)>(r4, $r14);

        if $z1 == 0 goto label3;

        return;

     label3:
        goto label2;

     label4:
        r20 = new android.util.Pair;

        specialinvoke r20.<android.util.Pair: void <init>(java.lang.Object,java.lang.Object)>(r3, r4);

        r22 = (java.util.List) r17;

        interfaceinvoke r22.<java.util.List: boolean add(java.lang.Object)>(r20);

        $r9 = r2.<android.service.media.MediaBrowserService$ConnectionRecord: java.util.HashMap subscriptions>;

        virtualinvoke $r9.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r17);

        specialinvoke r0.<android.service.media.MediaBrowserService: void performLoadChildren(java.lang.String,android.service.media.MediaBrowserService$ConnectionRecord,android.os.Bundle)>(r1, r2, r4);

        return;
    }

    private java.util.List applyOptions(java.util.List, android.os.Bundle)
    {
        android.service.media.MediaBrowserService r0;
        java.util.List r1, $r3, $r4;
        android.os.Bundle r2;
        int i0, i1, i2, $i3, $i4, i5, i6;

        r0 := @this: android.service.media.MediaBrowserService;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: android.os.Bundle;

        if r1 != null goto label1;

        return null;

     label1:
        i5 = virtualinvoke r2.<android.os.Bundle: int getInt(java.lang.String,int)>("android.media.browse.extra.PAGE", -1);

        i0 = virtualinvoke r2.<android.os.Bundle: int getInt(java.lang.String,int)>("android.media.browse.extra.PAGE_SIZE", -1);

        if i5 != -1 goto label2;

        if i0 != -1 goto label2;

        return r1;

     label2:
        i1 = i0 * i5;

        i2 = i1 + i0;

        if i5 < 0 goto label5;

        if i0 < 1 goto label5;

        $i3 = interfaceinvoke r1.<java.util.List: int size()>();

        if i1 < $i3 goto label3;

        goto label5;

     label3:
        i6 = i2;

        $i4 = interfaceinvoke r1.<java.util.List: int size()>();

        if i2 <= $i4 goto label4;

        i6 = interfaceinvoke r1.<java.util.List: int size()>();

     label4:
        $r3 = interfaceinvoke r1.<java.util.List: java.util.List subList(int,int)>(i1, i6);

        return $r3;

     label5:
        $r4 = <java.util.Collections: java.util.List EMPTY_LIST>;

        return $r4;
    }

    private boolean isValidPackage(java.lang.String, int)
    {
        android.service.media.MediaBrowserService r0;
        java.lang.String r1, $r4;
        java.lang.String[] r2;
        int i0, i1, i2;
        android.content.pm.PackageManager $r3;
        boolean $z0;

        r0 := @this: android.service.media.MediaBrowserService;

        r1 := @parameter0: java.lang.String;

        i1 := @parameter1: int;

        if r1 != null goto label1;

        return 0;

     label1:
        $r3 = virtualinvoke r0.<android.service.media.MediaBrowserService: android.content.pm.PackageManager getPackageManager()>();

        r2 = virtualinvoke $r3.<android.content.pm.PackageManager: java.lang.String[] getPackagesForUid(int)>(i1);

        i0 = lengthof r2;

        i2 = 0;

     label2:
        if i2 >= i0 goto label4;

        $r4 = r2[i2];

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label3;

        return 1;

     label3:
        i2 = i2 + 1;

        goto label2;

     label4:
        return 0;
    }

    private void notifyChildrenChangedInternal(java.lang.String, android.os.Bundle)
    {
        android.service.media.MediaBrowserService r0;
        java.lang.String r1;
        android.os.Bundle r2;
        java.lang.IllegalArgumentException $r3;
        android.service.media.MediaBrowserService$2 $r4;
        android.os.Handler $r5;

        r0 := @this: android.service.media.MediaBrowserService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.Bundle;

        if r1 == null goto label1;

        $r5 = r0.<android.service.media.MediaBrowserService: android.os.Handler mHandler>;

        $r4 = new android.service.media.MediaBrowserService$2;

        specialinvoke $r4.<android.service.media.MediaBrowserService$2: void <init>(android.service.media.MediaBrowserService,java.lang.String,android.os.Bundle)>(r0, r1, r2);

        virtualinvoke $r5.<android.os.Handler: boolean post(java.lang.Runnable)>($r4);

        return;

     label1:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("parentId cannot be null in notifyChildrenChanged");

        throw $r3;
    }

    private void performLoadChildren(java.lang.String, android.service.media.MediaBrowserService$ConnectionRecord, android.os.Bundle)
    {
        android.service.media.MediaBrowserService r0;
        java.lang.String r1, $r7, $r12;
        android.service.media.MediaBrowserService$ConnectionRecord r2;
        android.service.media.MediaBrowserService$3 $r4;
        boolean $z0;
        java.lang.StringBuilder $r5;
        java.lang.IllegalStateException $r11;
        android.os.Bundle r13;

        r0 := @this: android.service.media.MediaBrowserService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.service.media.MediaBrowserService$ConnectionRecord;

        r13 := @parameter2: android.os.Bundle;

        $r4 = new android.service.media.MediaBrowserService$3;

        specialinvoke $r4.<android.service.media.MediaBrowserService$3: void <init>(android.service.media.MediaBrowserService,java.lang.Object,android.service.media.MediaBrowserService$ConnectionRecord,java.lang.String,android.os.Bundle)>(r0, r1, r2, r1, r13);

        r0.<android.service.media.MediaBrowserService: android.service.media.MediaBrowserService$ConnectionRecord mCurConnection> = r2;

        if r13 != null goto label1;

        virtualinvoke r0.<android.service.media.MediaBrowserService: void onLoadChildren(java.lang.String,android.service.media.MediaBrowserService$Result)>(r1, $r4);

        goto label2;

     label1:
        virtualinvoke r0.<android.service.media.MediaBrowserService: void onLoadChildren(java.lang.String,android.service.media.MediaBrowserService$Result,android.os.Bundle)>(r1, $r4, r13);

     label2:
        r0.<android.service.media.MediaBrowserService: android.service.media.MediaBrowserService$ConnectionRecord mCurConnection> = null;

        $z0 = virtualinvoke $r4.<android.service.media.MediaBrowserService$Result: boolean isDone()>();

        if $z0 == 0 goto label3;

        return;

     label3:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onLoadChildren must call detach() or sendResult() before returning for package=");

        $r7 = r2.<android.service.media.MediaBrowserService$ConnectionRecord: java.lang.String pkg>;

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" id=");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r11 = new java.lang.IllegalStateException;

        $r12 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r12);

        throw $r11;
    }

    private void performLoadItem(java.lang.String, android.service.media.MediaBrowserService$ConnectionRecord, android.os.ResultReceiver)
    {
        android.service.media.MediaBrowserService r0;
        java.lang.String r1, $r7;
        android.service.media.MediaBrowserService$4 $r2;
        boolean $z0;
        java.lang.StringBuilder $r3;
        java.lang.IllegalStateException $r6;
        android.service.media.MediaBrowserService$ConnectionRecord r8;
        android.os.ResultReceiver r9;

        r0 := @this: android.service.media.MediaBrowserService;

        r1 := @parameter0: java.lang.String;

        r8 := @parameter1: android.service.media.MediaBrowserService$ConnectionRecord;

        r9 := @parameter2: android.os.ResultReceiver;

        $r2 = new android.service.media.MediaBrowserService$4;

        specialinvoke $r2.<android.service.media.MediaBrowserService$4: void <init>(android.service.media.MediaBrowserService,java.lang.Object,android.service.media.MediaBrowserService$ConnectionRecord,java.lang.String,android.os.ResultReceiver)>(r0, r1, r8, r1, r9);

        r0.<android.service.media.MediaBrowserService: android.service.media.MediaBrowserService$ConnectionRecord mCurConnection> = r8;

        virtualinvoke r0.<android.service.media.MediaBrowserService: void onLoadItem(java.lang.String,android.service.media.MediaBrowserService$Result)>(r1, $r2);

        r0.<android.service.media.MediaBrowserService: android.service.media.MediaBrowserService$ConnectionRecord mCurConnection> = null;

        $z0 = virtualinvoke $r2.<android.service.media.MediaBrowserService$Result: boolean isDone()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onLoadItem must call detach() or sendResult() before returning for id=");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r6 = new java.lang.IllegalStateException;

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r7);

        throw $r6;
    }

    private boolean removeSubscription(java.lang.String, android.service.media.MediaBrowserService$ConnectionRecord, android.os.IBinder)
    {
        android.service.media.MediaBrowserService r0;
        java.lang.String r1;
        android.service.media.MediaBrowserService$ConnectionRecord r2;
        android.os.IBinder r3;
        java.util.List r4;
        java.util.Iterator r5;
        java.util.HashMap $r6, $r8, $r13;
        java.lang.Object $r7, $r10, $r12, $r14;
        int $i0;
        android.util.Pair $r11;
        boolean z0, z1, z2, $z3;

        r0 := @this: android.service.media.MediaBrowserService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.service.media.MediaBrowserService$ConnectionRecord;

        r3 := @parameter2: android.os.IBinder;

        if r3 != null goto label3;

        $r13 = r2.<android.service.media.MediaBrowserService$ConnectionRecord: java.util.HashMap subscriptions>;

        $r14 = virtualinvoke $r13.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>(r1);

        if $r14 == null goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;

     label3:
        z1 = 0;

        z2 = 0;

        $r6 = r2.<android.service.media.MediaBrowserService$ConnectionRecord: java.util.HashMap subscriptions>;

        $r7 = virtualinvoke $r6.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (java.util.List) $r7;

        if r4 == null goto label6;

        r5 = interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>();

     label4:
        $z3 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label5;

        $r10 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        $r11 = (android.util.Pair) $r10;

        $r12 = $r11.<android.util.Pair: java.lang.Object first>;

        if r3 != $r12 goto label4;

        z2 = 1;

        interfaceinvoke r5.<java.util.Iterator: void remove()>();

        goto label4;

     label5:
        z1 = z2;

        $i0 = interfaceinvoke r4.<java.util.List: int size()>();

        if $i0 != 0 goto label6;

        $r8 = r2.<android.service.media.MediaBrowserService$ConnectionRecord: java.util.HashMap subscriptions>;

        virtualinvoke $r8.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>(r1);

        z1 = z2;

     label6:
        return z1;
    }

    public void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        android.service.media.MediaBrowserService r0;
        java.io.FileDescriptor r1;
        java.io.PrintWriter r2;
        java.lang.String[] r3;

        r0 := @this: android.service.media.MediaBrowserService;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: java.io.PrintWriter;

        r3 := @parameter2: java.lang.String[];

        return;
    }

    public final android.os.Bundle getBrowserRootHints()
    {
        android.service.media.MediaBrowserService r0;
        java.lang.IllegalStateException $r1;
        android.os.Bundle $r2, $r3, $r5, r7;
        android.service.media.MediaBrowserService$ConnectionRecord $r4, r6;

        r0 := @this: android.service.media.MediaBrowserService;

        r6 = r0.<android.service.media.MediaBrowserService: android.service.media.MediaBrowserService$ConnectionRecord mCurConnection>;

        if r6 == null goto label3;

        $r2 = r6.<android.service.media.MediaBrowserService$ConnectionRecord: android.os.Bundle rootHints>;

        if $r2 != null goto label1;

        r7 = null;

        goto label2;

     label1:
        $r3 = new android.os.Bundle;

        $r4 = r0.<android.service.media.MediaBrowserService: android.service.media.MediaBrowserService$ConnectionRecord mCurConnection>;

        $r5 = $r4.<android.service.media.MediaBrowserService$ConnectionRecord: android.os.Bundle rootHints>;

        specialinvoke $r3.<android.os.Bundle: void <init>(android.os.Bundle)>($r5);

        r7 = $r3;

     label2:
        return r7;

     label3:
        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This should be called inside of onGetRoot or onLoadChildren or onLoadItem methods");

        throw $r1;
    }

    public final android.media.session.MediaSessionManager$RemoteUserInfo getCurrentBrowserInfo()
    {
        android.service.media.MediaBrowserService r0;
        android.service.media.MediaBrowserService$ConnectionRecord r1, $r4, $r5;
        java.lang.IllegalStateException $r2;
        android.media.session.MediaSessionManager$RemoteUserInfo $r3;
        int $i0, $i1;
        java.lang.String $r6;

        r0 := @this: android.service.media.MediaBrowserService;

        r1 = r0.<android.service.media.MediaBrowserService: android.service.media.MediaBrowserService$ConnectionRecord mCurConnection>;

        if r1 == null goto label1;

        $r3 = new android.media.session.MediaSessionManager$RemoteUserInfo;

        $r6 = r1.<android.service.media.MediaBrowserService$ConnectionRecord: java.lang.String pkg>;

        $r4 = r0.<android.service.media.MediaBrowserService: android.service.media.MediaBrowserService$ConnectionRecord mCurConnection>;

        $i1 = $r4.<android.service.media.MediaBrowserService$ConnectionRecord: int pid>;

        $r5 = r0.<android.service.media.MediaBrowserService: android.service.media.MediaBrowserService$ConnectionRecord mCurConnection>;

        $i0 = $r5.<android.service.media.MediaBrowserService$ConnectionRecord: int uid>;

        specialinvoke $r3.<android.media.session.MediaSessionManager$RemoteUserInfo: void <init>(java.lang.String,int,int)>($r6, $i1, $i0);

        return $r3;

     label1:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This should be called inside of onGetRoot or onLoadChildren or onLoadItem methods");

        throw $r2;
    }

    public android.media.session.MediaSession$Token getSessionToken()
    {
        android.service.media.MediaBrowserService r0;
        android.media.session.MediaSession$Token $r1;

        r0 := @this: android.service.media.MediaBrowserService;

        $r1 = r0.<android.service.media.MediaBrowserService: android.media.session.MediaSession$Token mSession>;

        return $r1;
    }

    public void notifyChildrenChanged(java.lang.String)
    {
        android.service.media.MediaBrowserService r0;
        java.lang.String r1;

        r0 := @this: android.service.media.MediaBrowserService;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<android.service.media.MediaBrowserService: void notifyChildrenChangedInternal(java.lang.String,android.os.Bundle)>(r1, null);

        return;
    }

    public void notifyChildrenChanged(java.lang.String, android.os.Bundle)
    {
        android.service.media.MediaBrowserService r0;
        java.lang.String r1;
        android.os.Bundle r2;
        java.lang.IllegalArgumentException $r3;

        r0 := @this: android.service.media.MediaBrowserService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.Bundle;

        if r2 == null goto label1;

        specialinvoke r0.<android.service.media.MediaBrowserService: void notifyChildrenChangedInternal(java.lang.String,android.os.Bundle)>(r1, r2);

        return;

     label1:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("options cannot be null in notifyChildrenChanged");

        throw $r3;
    }

    public android.os.IBinder onBind(android.content.Intent)
    {
        android.service.media.MediaBrowserService r0;
        android.content.Intent r1;
        java.lang.String $r2, $r3;
        boolean $z0;
        android.service.media.MediaBrowserService$ServiceBinder $r4;

        r0 := @this: android.service.media.MediaBrowserService;

        r1 := @parameter0: android.content.Intent;

        $r2 = "android.media.browse.MediaBrowserService";

        $r3 = virtualinvoke r1.<android.content.Intent: java.lang.String getAction()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label1;

        $r4 = r0.<android.service.media.MediaBrowserService: android.service.media.MediaBrowserService$ServiceBinder mBinder>;

        return $r4;

     label1:
        return null;
    }

    public void onCreate()
    {
        android.service.media.MediaBrowserService r0;
        android.service.media.MediaBrowserService$ServiceBinder $r1;

        r0 := @this: android.service.media.MediaBrowserService;

        specialinvoke r0.<android.app.Service: void onCreate()>();

        $r1 = new android.service.media.MediaBrowserService$ServiceBinder;

        specialinvoke $r1.<android.service.media.MediaBrowserService$ServiceBinder: void <init>(android.service.media.MediaBrowserService,android.service.media.MediaBrowserService$1)>(r0, null);

        r0.<android.service.media.MediaBrowserService: android.service.media.MediaBrowserService$ServiceBinder mBinder> = $r1;

        return;
    }

    public abstract android.service.media.MediaBrowserService$BrowserRoot onGetRoot(java.lang.String, int, android.os.Bundle);

    public abstract void onLoadChildren(java.lang.String, android.service.media.MediaBrowserService$Result);

    public void onLoadChildren(java.lang.String, android.service.media.MediaBrowserService$Result, android.os.Bundle)
    {
        android.service.media.MediaBrowserService r0;
        java.lang.String r1;
        android.service.media.MediaBrowserService$Result r2;
        android.os.Bundle r3;

        r0 := @this: android.service.media.MediaBrowserService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.service.media.MediaBrowserService$Result;

        r3 := @parameter2: android.os.Bundle;

        virtualinvoke r2.<android.service.media.MediaBrowserService$Result: void setFlags(int)>(1);

        virtualinvoke r0.<android.service.media.MediaBrowserService: void onLoadChildren(java.lang.String,android.service.media.MediaBrowserService$Result)>(r1, r2);

        return;
    }

    public void onLoadItem(java.lang.String, android.service.media.MediaBrowserService$Result)
    {
        android.service.media.MediaBrowserService r0;
        java.lang.String r1;
        android.service.media.MediaBrowserService$Result r2;

        r0 := @this: android.service.media.MediaBrowserService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.service.media.MediaBrowserService$Result;

        virtualinvoke r2.<android.service.media.MediaBrowserService$Result: void setFlags(int)>(2);

        virtualinvoke r2.<android.service.media.MediaBrowserService$Result: void sendResult(java.lang.Object)>(null);

        return;
    }

    public void setSessionToken(android.media.session.MediaSession$Token)
    {
        android.service.media.MediaBrowserService r0;
        android.media.session.MediaSession$Token r1, $r3;
        java.lang.IllegalArgumentException $r2;
        java.lang.IllegalStateException $r4;
        android.service.media.MediaBrowserService$1 $r5;
        android.os.Handler $r6;

        r0 := @this: android.service.media.MediaBrowserService;

        r1 := @parameter0: android.media.session.MediaSession$Token;

        if r1 == null goto label2;

        $r3 = r0.<android.service.media.MediaBrowserService: android.media.session.MediaSession$Token mSession>;

        if $r3 != null goto label1;

        r0.<android.service.media.MediaBrowserService: android.media.session.MediaSession$Token mSession> = r1;

        $r6 = r0.<android.service.media.MediaBrowserService: android.os.Handler mHandler>;

        $r5 = new android.service.media.MediaBrowserService$1;

        specialinvoke $r5.<android.service.media.MediaBrowserService$1: void <init>(android.service.media.MediaBrowserService,android.media.session.MediaSession$Token)>(r0, r1);

        virtualinvoke $r6.<android.os.Handler: boolean post(java.lang.Runnable)>($r5);

        return;

     label1:
        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("The session token has already been set.");

        throw $r4;

     label2:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Session token may not be null.");

        throw $r2;
    }

    public static void <clinit>()
    {
        <android.service.media.MediaBrowserService: java.lang.String TAG> = "MediaBrowserService";

        <android.service.media.MediaBrowserService: java.lang.String SERVICE_INTERFACE> = "android.media.browse.MediaBrowserService";

        <android.service.media.MediaBrowserService: int RESULT_OK> = 0;

        <android.service.media.MediaBrowserService: int RESULT_FLAG_OPTION_NOT_HANDLED> = 1;

        <android.service.media.MediaBrowserService: int RESULT_FLAG_ON_LOAD_ITEM_NOT_IMPLEMENTED> = 2;

        <android.service.media.MediaBrowserService: int RESULT_ERROR> = -1;

        <android.service.media.MediaBrowserService: java.lang.String KEY_MEDIA_ITEM> = "media_item";

        <android.service.media.MediaBrowserService: boolean DBG> = 0;

        return;
    }
}
