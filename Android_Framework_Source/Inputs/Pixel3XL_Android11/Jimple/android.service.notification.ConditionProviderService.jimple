public abstract class android.service.notification.ConditionProviderService extends android.app.Service
{
    public static final java.lang.String EXTRA_RULE_ID;
    public static final java.lang.String META_DATA_CONFIGURATION_ACTIVITY;
    public static final java.lang.String META_DATA_RULE_INSTANCE_LIMIT;
    public static final java.lang.String META_DATA_RULE_TYPE;
    public static final java.lang.String SERVICE_INTERFACE;
    private final java.lang.String TAG;
    private final android.service.notification.ConditionProviderService$H mHandler;
    boolean mIsConnected;
    private android.app.INotificationManager mNoMan;
    private android.service.notification.ConditionProviderService$Provider mProvider;

    public void <init>()
    {
        android.service.notification.ConditionProviderService r0;
        java.lang.StringBuilder $r2;
        java.lang.Class $r3, $r7;
        java.lang.String $r4, $r8, $r11;
        android.service.notification.ConditionProviderService$H $r12;

        r0 := @this: android.service.notification.ConditionProviderService;

        specialinvoke r0.<android.app.Service: void <init>()>();

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = class "Landroid/service/notification/ConditionProviderService;";

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getSimpleName()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        $r7 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r8 = virtualinvoke $r7.<java.lang.Class: java.lang.String getSimpleName()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r11 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<android.service.notification.ConditionProviderService: java.lang.String TAG> = $r11;

        $r12 = new android.service.notification.ConditionProviderService$H;

        specialinvoke $r12.<android.service.notification.ConditionProviderService$H: void <init>(android.service.notification.ConditionProviderService,android.service.notification.ConditionProviderService$1)>(r0, null);

        r0.<android.service.notification.ConditionProviderService: android.service.notification.ConditionProviderService$H mHandler> = $r12;

        return;
    }

    static android.service.notification.ConditionProviderService$H access$200(android.service.notification.ConditionProviderService)
    {
        android.service.notification.ConditionProviderService r0;
        android.service.notification.ConditionProviderService$H $r1;

        r0 := @parameter0: android.service.notification.ConditionProviderService;

        $r1 = r0.<android.service.notification.ConditionProviderService: android.service.notification.ConditionProviderService$H mHandler>;

        return $r1;
    }

    static java.lang.String access$300(android.service.notification.ConditionProviderService)
    {
        android.service.notification.ConditionProviderService r0;
        java.lang.String $r1;

        r0 := @parameter0: android.service.notification.ConditionProviderService;

        $r1 = r0.<android.service.notification.ConditionProviderService: java.lang.String TAG>;

        return $r1;
    }

    private final android.app.INotificationManager getNotificationInterface()
    {
        android.service.notification.ConditionProviderService r0;
        android.app.INotificationManager $r1, $r2, $r4;
        android.os.IBinder $r3;

        r0 := @this: android.service.notification.ConditionProviderService;

        $r1 = r0.<android.service.notification.ConditionProviderService: android.app.INotificationManager mNoMan>;

        if $r1 != null goto label1;

        $r3 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("notification");

        $r4 = staticinvoke <android.app.INotificationManager$Stub: android.app.INotificationManager asInterface(android.os.IBinder)>($r3);

        r0.<android.service.notification.ConditionProviderService: android.app.INotificationManager mNoMan> = $r4;

     label1:
        $r2 = r0.<android.service.notification.ConditionProviderService: android.app.INotificationManager mNoMan>;

        return $r2;
    }

    public static final void requestRebind(android.content.ComponentName)
    {
        android.app.INotificationManager r0;
        android.os.IBinder $r1;
        android.os.RemoteException $r2;
        java.lang.RuntimeException $r3;
        android.content.ComponentName r4;

        r4 := @parameter0: android.content.ComponentName;

        $r1 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("notification");

        r0 = staticinvoke <android.app.INotificationManager$Stub: android.app.INotificationManager asInterface(android.os.IBinder)>($r1);

     label1:
        interfaceinvoke r0.<android.app.INotificationManager: void requestBindProvider(android.content.ComponentName)>(r4);

     label2:
        return;

     label3:
        $r2 := @caughtexception;

        $r3 = virtualinvoke $r2.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r3;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean isBound()
    {
        android.service.notification.ConditionProviderService r0;
        boolean $z0, $z1;
        java.lang.String $r1;

        r0 := @this: android.service.notification.ConditionProviderService;

        $z0 = r0.<android.service.notification.ConditionProviderService: boolean mIsConnected>;

        if $z0 != 0 goto label1;

        $r1 = r0.<android.service.notification.ConditionProviderService: java.lang.String TAG>;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r1, "Condition provider service not yet bound.");

     label1:
        $z1 = r0.<android.service.notification.ConditionProviderService: boolean mIsConnected>;

        return $z1;
    }

    public final void notifyCondition(android.service.notification.Condition)
    {
        android.service.notification.ConditionProviderService r0;
        android.service.notification.Condition r1;
        android.service.notification.Condition[] $r2;

        r0 := @this: android.service.notification.ConditionProviderService;

        r1 := @parameter0: android.service.notification.Condition;

        if r1 != null goto label1;

        return;

     label1:
        $r2 = newarray (android.service.notification.Condition)[1];

        $r2[0] = r1;

        virtualinvoke r0.<android.service.notification.ConditionProviderService: void notifyConditions(android.service.notification.Condition[])>($r2);

        return;
    }

    public final transient void notifyConditions(android.service.notification.Condition[])
    {
        android.service.notification.ConditionProviderService r0;
        boolean $z0;
        android.app.INotificationManager $r1;
        java.lang.String $r2, $r5;
        android.service.notification.ConditionProviderService$Provider $r3;
        android.os.RemoteException $r4;
        android.service.notification.Condition[] r6;

        r0 := @this: android.service.notification.ConditionProviderService;

        r6 := @parameter0: android.service.notification.Condition[];

        $z0 = virtualinvoke r0.<android.service.notification.ConditionProviderService: boolean isBound()>();

        if $z0 == 0 goto label5;

        if r6 != null goto label1;

        goto label5;

     label1:
        $r1 = specialinvoke r0.<android.service.notification.ConditionProviderService: android.app.INotificationManager getNotificationInterface()>();

        $r2 = virtualinvoke r0.<android.service.notification.ConditionProviderService: java.lang.String getPackageName()>();

        $r3 = r0.<android.service.notification.ConditionProviderService: android.service.notification.ConditionProviderService$Provider mProvider>;

        interfaceinvoke $r1.<android.app.INotificationManager: void notifyConditions(java.lang.String,android.service.notification.IConditionProvider,android.service.notification.Condition[])>($r2, $r3, r6);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        $r5 = r0.<android.service.notification.ConditionProviderService: java.lang.String TAG>;

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String,java.lang.Throwable)>($r5, "Unable to contact notification manager", $r4);

     label4:
        return;

     label5:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.os.IBinder onBind(android.content.Intent)
    {
        android.service.notification.ConditionProviderService r0;
        android.content.Intent r1;
        android.service.notification.ConditionProviderService$Provider $r2, $r3, $r4;

        r0 := @this: android.service.notification.ConditionProviderService;

        r1 := @parameter0: android.content.Intent;

        $r2 = r0.<android.service.notification.ConditionProviderService: android.service.notification.ConditionProviderService$Provider mProvider>;

        if $r2 != null goto label1;

        $r4 = new android.service.notification.ConditionProviderService$Provider;

        specialinvoke $r4.<android.service.notification.ConditionProviderService$Provider: void <init>(android.service.notification.ConditionProviderService,android.service.notification.ConditionProviderService$1)>(r0, null);

        r0.<android.service.notification.ConditionProviderService: android.service.notification.ConditionProviderService$Provider mProvider> = $r4;

     label1:
        $r3 = r0.<android.service.notification.ConditionProviderService: android.service.notification.ConditionProviderService$Provider mProvider>;

        return $r3;
    }

    public abstract void onConnected();

    public void onRequestConditions(int)
    {
        android.service.notification.ConditionProviderService r0;
        int i0;

        r0 := @this: android.service.notification.ConditionProviderService;

        i0 := @parameter0: int;

        return;
    }

    public abstract void onSubscribe(android.net.Uri);

    public abstract void onUnsubscribe(android.net.Uri);

    public final void requestUnbind()
    {
        android.service.notification.ConditionProviderService r0;
        android.service.notification.ConditionProviderService$Provider $r1;
        android.os.RemoteException $r2;
        java.lang.RuntimeException $r3;
        android.app.INotificationManager r4;

        r0 := @this: android.service.notification.ConditionProviderService;

        r4 = specialinvoke r0.<android.service.notification.ConditionProviderService: android.app.INotificationManager getNotificationInterface()>();

     label1:
        $r1 = r0.<android.service.notification.ConditionProviderService: android.service.notification.ConditionProviderService$Provider mProvider>;

        interfaceinvoke r4.<android.app.INotificationManager: void requestUnbindProvider(android.service.notification.IConditionProvider)>($r1);

        r0.<android.service.notification.ConditionProviderService: boolean mIsConnected> = 0;

     label2:
        return;

     label3:
        $r2 := @caughtexception;

        $r3 = virtualinvoke $r2.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r3;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public static void <clinit>()
    {
        <android.service.notification.ConditionProviderService: java.lang.String SERVICE_INTERFACE> = "android.service.notification.ConditionProviderService";

        <android.service.notification.ConditionProviderService: java.lang.String META_DATA_RULE_TYPE> = "android.service.zen.automatic.ruleType";

        <android.service.notification.ConditionProviderService: java.lang.String META_DATA_RULE_INSTANCE_LIMIT> = "android.service.zen.automatic.ruleInstanceLimit";

        <android.service.notification.ConditionProviderService: java.lang.String META_DATA_CONFIGURATION_ACTIVITY> = "android.service.zen.automatic.configurationActivity";

        <android.service.notification.ConditionProviderService: java.lang.String EXTRA_RULE_ID> = "android.service.notification.extra.RULE_ID";

        return;
    }
}
