public class android.service.notification.ZenModeConfig extends java.lang.Object implements android.os.Parcelable
{
    private static final java.lang.String ALLOW_ATT_ALARMS;
    private static final java.lang.String ALLOW_ATT_CALLS;
    private static final java.lang.String ALLOW_ATT_CALLS_FROM;
    private static final java.lang.String ALLOW_ATT_CONV;
    private static final java.lang.String ALLOW_ATT_CONV_FROM;
    private static final java.lang.String ALLOW_ATT_EVENTS;
    private static final java.lang.String ALLOW_ATT_FROM;
    private static final java.lang.String ALLOW_ATT_MEDIA;
    private static final java.lang.String ALLOW_ATT_MESSAGES;
    private static final java.lang.String ALLOW_ATT_MESSAGES_FROM;
    private static final java.lang.String ALLOW_ATT_REMINDERS;
    private static final java.lang.String ALLOW_ATT_REPEAT_CALLERS;
    private static final java.lang.String ALLOW_ATT_SCREEN_OFF;
    private static final java.lang.String ALLOW_ATT_SCREEN_ON;
    private static final java.lang.String ALLOW_ATT_SYSTEM;
    private static final java.lang.String ALLOW_TAG;
    public static final int[] ALL_DAYS;
    private static final java.lang.String AUTOMATIC_TAG;
    private static final java.lang.String CONDITION_ATT_FLAGS;
    private static final java.lang.String CONDITION_ATT_ICON;
    private static final java.lang.String CONDITION_ATT_ID;
    private static final java.lang.String CONDITION_ATT_LINE1;
    private static final java.lang.String CONDITION_ATT_LINE2;
    private static final java.lang.String CONDITION_ATT_STATE;
    private static final java.lang.String CONDITION_ATT_SUMMARY;
    public static final java.lang.String COUNTDOWN_PATH;
    public static final android.os.Parcelable$Creator CREATOR;
    private static final int DAY_MINUTES;
    private static final boolean DEFAULT_ALLOW_ALARMS;
    private static final boolean DEFAULT_ALLOW_CALLS;
    private static final boolean DEFAULT_ALLOW_CONV;
    private static final int DEFAULT_ALLOW_CONV_FROM;
    private static final boolean DEFAULT_ALLOW_EVENTS;
    private static final boolean DEFAULT_ALLOW_MEDIA;
    private static final boolean DEFAULT_ALLOW_MESSAGES;
    private static final boolean DEFAULT_ALLOW_REMINDERS;
    private static final boolean DEFAULT_ALLOW_REPEAT_CALLERS;
    private static final boolean DEFAULT_ALLOW_SYSTEM;
    private static final int DEFAULT_CALLS_SOURCE;
    private static final boolean DEFAULT_CHANNELS_BYPASSING_DND;
    public static final java.util.List DEFAULT_RULE_IDS;
    private static final int DEFAULT_SOURCE;
    private static final int DEFAULT_SUPPRESSED_VISUAL_EFFECTS;
    private static final java.lang.String DISALLOW_ATT_VISUAL_EFFECTS;
    private static final java.lang.String DISALLOW_TAG;
    public static final java.lang.String EVENTS_DEFAULT_RULE_ID;
    public static final java.lang.String EVENT_PATH;
    public static final java.lang.String EVERY_NIGHT_DEFAULT_RULE_ID;
    public static final java.lang.String IS_ALARM_PATH;
    public static final java.lang.String MANUAL_RULE_ID;
    private static final java.lang.String MANUAL_TAG;
    public static final int MAX_SOURCE;
    private static final int MINUTES_MS;
    public static final int[] MINUTE_BUCKETS;
    private static final java.lang.String RULE_ATT_COMPONENT;
    private static final java.lang.String RULE_ATT_CONDITION_ID;
    private static final java.lang.String RULE_ATT_CONFIG_ACTIVITY;
    private static final java.lang.String RULE_ATT_CREATION_TIME;
    private static final java.lang.String RULE_ATT_ENABLED;
    private static final java.lang.String RULE_ATT_ENABLER;
    private static final java.lang.String RULE_ATT_ID;
    private static final java.lang.String RULE_ATT_MODIFIED;
    private static final java.lang.String RULE_ATT_NAME;
    private static final java.lang.String RULE_ATT_SNOOZING;
    private static final java.lang.String RULE_ATT_ZEN;
    public static final java.lang.String SCHEDULE_PATH;
    private static final int SECONDS_MS;
    private static final java.lang.String SHOW_ATT_AMBIENT;
    private static final java.lang.String SHOW_ATT_BADGES;
    private static final java.lang.String SHOW_ATT_FULL_SCREEN_INTENT;
    private static final java.lang.String SHOW_ATT_LIGHTS;
    private static final java.lang.String SHOW_ATT_NOTIFICATION_LIST;
    private static final java.lang.String SHOW_ATT_PEEK;
    private static final java.lang.String SHOW_ATT_STATUS_BAR_ICONS;
    public static final int SOURCE_ANYONE;
    public static final int SOURCE_CONTACT;
    public static final int SOURCE_STAR;
    private static final java.lang.String STATE_ATT_CHANNELS_BYPASSING_DND;
    private static final java.lang.String STATE_TAG;
    public static final java.lang.String SYSTEM_AUTHORITY;
    private static java.lang.String TAG;
    public static final int XML_VERSION;
    private static final java.lang.String ZEN_ATT_USER;
    private static final java.lang.String ZEN_ATT_VERSION;
    private static final java.lang.String ZEN_POLICY_TAG;
    public static final java.lang.String ZEN_TAG;
    private static final int ZERO_VALUE_MS;
    public boolean allowAlarms;
    public boolean allowCalls;
    public int allowCallsFrom;
    public boolean allowConversations;
    public int allowConversationsFrom;
    public boolean allowEvents;
    public boolean allowMedia;
    public boolean allowMessages;
    public int allowMessagesFrom;
    public boolean allowReminders;
    public boolean allowRepeatCallers;
    public boolean allowSystem;
    public boolean areChannelsBypassingDnd;
    public android.util.ArrayMap automaticRules;
    public android.service.notification.ZenModeConfig$ZenRule manualRule;
    public int suppressedVisualEffects;
    public int user;
    public int version;

    static void <clinit>()
    {
        java.lang.String[] $r0;
        java.util.List $r1;
        int[] $r2, $r3;
        android.service.notification.ZenModeConfig$1 $r4;

        <android.service.notification.ZenModeConfig: int ZERO_VALUE_MS> = 10000;

        <android.service.notification.ZenModeConfig: java.lang.String ZEN_TAG> = "zen";

        <android.service.notification.ZenModeConfig: java.lang.String ZEN_POLICY_TAG> = "zen_policy";

        <android.service.notification.ZenModeConfig: java.lang.String ZEN_ATT_VERSION> = "version";

        <android.service.notification.ZenModeConfig: java.lang.String ZEN_ATT_USER> = "user";

        <android.service.notification.ZenModeConfig: int XML_VERSION> = 8;

        <android.service.notification.ZenModeConfig: java.lang.String SYSTEM_AUTHORITY> = "android";

        <android.service.notification.ZenModeConfig: java.lang.String STATE_TAG> = "state";

        <android.service.notification.ZenModeConfig: java.lang.String STATE_ATT_CHANNELS_BYPASSING_DND> = "areChannelsBypassingDnd";

        <android.service.notification.ZenModeConfig: int SOURCE_STAR> = 2;

        <android.service.notification.ZenModeConfig: int SOURCE_CONTACT> = 1;

        <android.service.notification.ZenModeConfig: int SOURCE_ANYONE> = 0;

        <android.service.notification.ZenModeConfig: java.lang.String SHOW_ATT_STATUS_BAR_ICONS> = "showStatusBarIcons";

        <android.service.notification.ZenModeConfig: java.lang.String SHOW_ATT_PEEK> = "shoePeek";

        <android.service.notification.ZenModeConfig: java.lang.String SHOW_ATT_NOTIFICATION_LIST> = "showNotificationList";

        <android.service.notification.ZenModeConfig: java.lang.String SHOW_ATT_LIGHTS> = "showLights";

        <android.service.notification.ZenModeConfig: java.lang.String SHOW_ATT_FULL_SCREEN_INTENT> = "showFullScreenIntent";

        <android.service.notification.ZenModeConfig: java.lang.String SHOW_ATT_BADGES> = "showBadges";

        <android.service.notification.ZenModeConfig: java.lang.String SHOW_ATT_AMBIENT> = "showAmbient";

        <android.service.notification.ZenModeConfig: int SECONDS_MS> = 1000;

        <android.service.notification.ZenModeConfig: java.lang.String SCHEDULE_PATH> = "schedule";

        <android.service.notification.ZenModeConfig: java.lang.String RULE_ATT_ZEN> = "zen";

        <android.service.notification.ZenModeConfig: java.lang.String RULE_ATT_SNOOZING> = "snoozing";

        <android.service.notification.ZenModeConfig: java.lang.String RULE_ATT_NAME> = "name";

        <android.service.notification.ZenModeConfig: java.lang.String RULE_ATT_MODIFIED> = "modified";

        <android.service.notification.ZenModeConfig: java.lang.String RULE_ATT_ID> = "ruleId";

        <android.service.notification.ZenModeConfig: java.lang.String RULE_ATT_ENABLER> = "enabler";

        <android.service.notification.ZenModeConfig: java.lang.String RULE_ATT_ENABLED> = "enabled";

        <android.service.notification.ZenModeConfig: java.lang.String RULE_ATT_CREATION_TIME> = "creationTime";

        <android.service.notification.ZenModeConfig: java.lang.String RULE_ATT_CONFIG_ACTIVITY> = "configActivity";

        <android.service.notification.ZenModeConfig: java.lang.String RULE_ATT_CONDITION_ID> = "conditionId";

        <android.service.notification.ZenModeConfig: java.lang.String RULE_ATT_COMPONENT> = "component";

        <android.service.notification.ZenModeConfig: int MINUTES_MS> = 60000;

        <android.service.notification.ZenModeConfig: int MAX_SOURCE> = 2;

        <android.service.notification.ZenModeConfig: java.lang.String MANUAL_TAG> = "manual";

        <android.service.notification.ZenModeConfig: java.lang.String MANUAL_RULE_ID> = "MANUAL_RULE";

        <android.service.notification.ZenModeConfig: java.lang.String IS_ALARM_PATH> = "alarm";

        <android.service.notification.ZenModeConfig: java.lang.String EVERY_NIGHT_DEFAULT_RULE_ID> = "EVERY_NIGHT_DEFAULT_RULE";

        <android.service.notification.ZenModeConfig: java.lang.String EVENT_PATH> = "event";

        <android.service.notification.ZenModeConfig: java.lang.String EVENTS_DEFAULT_RULE_ID> = "EVENTS_DEFAULT_RULE";

        <android.service.notification.ZenModeConfig: java.lang.String DISALLOW_TAG> = "disallow";

        <android.service.notification.ZenModeConfig: java.lang.String DISALLOW_ATT_VISUAL_EFFECTS> = "visualEffects";

        <android.service.notification.ZenModeConfig: int DEFAULT_SUPPRESSED_VISUAL_EFFECTS> = 0;

        <android.service.notification.ZenModeConfig: int DEFAULT_SOURCE> = 1;

        <android.service.notification.ZenModeConfig: boolean DEFAULT_CHANNELS_BYPASSING_DND> = 0;

        <android.service.notification.ZenModeConfig: int DEFAULT_CALLS_SOURCE> = 2;

        <android.service.notification.ZenModeConfig: boolean DEFAULT_ALLOW_SYSTEM> = 0;

        <android.service.notification.ZenModeConfig: boolean DEFAULT_ALLOW_REPEAT_CALLERS> = 1;

        <android.service.notification.ZenModeConfig: boolean DEFAULT_ALLOW_REMINDERS> = 0;

        <android.service.notification.ZenModeConfig: boolean DEFAULT_ALLOW_MESSAGES> = 0;

        <android.service.notification.ZenModeConfig: boolean DEFAULT_ALLOW_MEDIA> = 1;

        <android.service.notification.ZenModeConfig: boolean DEFAULT_ALLOW_EVENTS> = 0;

        <android.service.notification.ZenModeConfig: int DEFAULT_ALLOW_CONV_FROM> = 3;

        <android.service.notification.ZenModeConfig: boolean DEFAULT_ALLOW_CONV> = 0;

        <android.service.notification.ZenModeConfig: boolean DEFAULT_ALLOW_CALLS> = 1;

        <android.service.notification.ZenModeConfig: boolean DEFAULT_ALLOW_ALARMS> = 1;

        <android.service.notification.ZenModeConfig: int DAY_MINUTES> = 1440;

        <android.service.notification.ZenModeConfig: java.lang.String COUNTDOWN_PATH> = "countdown";

        <android.service.notification.ZenModeConfig: java.lang.String CONDITION_ATT_SUMMARY> = "summary";

        <android.service.notification.ZenModeConfig: java.lang.String CONDITION_ATT_STATE> = "state";

        <android.service.notification.ZenModeConfig: java.lang.String CONDITION_ATT_LINE2> = "line2";

        <android.service.notification.ZenModeConfig: java.lang.String CONDITION_ATT_LINE1> = "line1";

        <android.service.notification.ZenModeConfig: java.lang.String CONDITION_ATT_ID> = "id";

        <android.service.notification.ZenModeConfig: java.lang.String CONDITION_ATT_ICON> = "icon";

        <android.service.notification.ZenModeConfig: java.lang.String CONDITION_ATT_FLAGS> = "flags";

        <android.service.notification.ZenModeConfig: java.lang.String AUTOMATIC_TAG> = "automatic";

        <android.service.notification.ZenModeConfig: java.lang.String ALLOW_TAG> = "allow";

        <android.service.notification.ZenModeConfig: java.lang.String ALLOW_ATT_SYSTEM> = "system";

        <android.service.notification.ZenModeConfig: java.lang.String ALLOW_ATT_SCREEN_ON> = "visualScreenOn";

        <android.service.notification.ZenModeConfig: java.lang.String ALLOW_ATT_SCREEN_OFF> = "visualScreenOff";

        <android.service.notification.ZenModeConfig: java.lang.String ALLOW_ATT_REPEAT_CALLERS> = "repeatCallers";

        <android.service.notification.ZenModeConfig: java.lang.String ALLOW_ATT_REMINDERS> = "reminders";

        <android.service.notification.ZenModeConfig: java.lang.String ALLOW_ATT_MESSAGES_FROM> = "messagesFrom";

        <android.service.notification.ZenModeConfig: java.lang.String ALLOW_ATT_MESSAGES> = "messages";

        <android.service.notification.ZenModeConfig: java.lang.String ALLOW_ATT_MEDIA> = "media";

        <android.service.notification.ZenModeConfig: java.lang.String ALLOW_ATT_FROM> = "from";

        <android.service.notification.ZenModeConfig: java.lang.String ALLOW_ATT_EVENTS> = "events";

        <android.service.notification.ZenModeConfig: java.lang.String ALLOW_ATT_CONV_FROM> = "convosFrom";

        <android.service.notification.ZenModeConfig: java.lang.String ALLOW_ATT_CONV> = "convos";

        <android.service.notification.ZenModeConfig: java.lang.String ALLOW_ATT_CALLS_FROM> = "callsFrom";

        <android.service.notification.ZenModeConfig: java.lang.String ALLOW_ATT_CALLS> = "calls";

        <android.service.notification.ZenModeConfig: java.lang.String ALLOW_ATT_ALARMS> = "alarms";

        <android.service.notification.ZenModeConfig: java.lang.String TAG> = "ZenModeConfig";

        $r0 = newarray (java.lang.String)[2];

        $r0[0] = "EVERY_NIGHT_DEFAULT_RULE";

        $r0[1] = "EVENTS_DEFAULT_RULE";

        $r1 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r0);

        <android.service.notification.ZenModeConfig: java.util.List DEFAULT_RULE_IDS> = $r1;

        $r2 = newarray (int)[7];

        $r2[0] = 1;

        $r2[1] = 2;

        $r2[2] = 3;

        $r2[3] = 4;

        $r2[4] = 5;

        $r2[5] = 6;

        $r2[6] = 7;

        <android.service.notification.ZenModeConfig: int[] ALL_DAYS> = $r2;

        $r3 = staticinvoke <android.service.notification.ZenModeConfig: int[] generateMinuteBuckets()>();

        <android.service.notification.ZenModeConfig: int[] MINUTE_BUCKETS> = $r3;

        $r4 = new android.service.notification.ZenModeConfig$1;

        specialinvoke $r4.<android.service.notification.ZenModeConfig$1: void <init>()>();

        <android.service.notification.ZenModeConfig: android.os.Parcelable$Creator CREATOR> = $r4;

        return;
    }

    public void <init>()
    {
        android.service.notification.ZenModeConfig r0;
        android.util.ArrayMap $r1;

        r0 := @this: android.service.notification.ZenModeConfig;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.service.notification.ZenModeConfig: boolean allowAlarms> = 1;

        r0.<android.service.notification.ZenModeConfig: boolean allowMedia> = 1;

        r0.<android.service.notification.ZenModeConfig: boolean allowSystem> = 0;

        r0.<android.service.notification.ZenModeConfig: boolean allowCalls> = 1;

        r0.<android.service.notification.ZenModeConfig: boolean allowRepeatCallers> = 1;

        r0.<android.service.notification.ZenModeConfig: boolean allowMessages> = 0;

        r0.<android.service.notification.ZenModeConfig: boolean allowReminders> = 0;

        r0.<android.service.notification.ZenModeConfig: boolean allowEvents> = 0;

        r0.<android.service.notification.ZenModeConfig: int allowCallsFrom> = 2;

        r0.<android.service.notification.ZenModeConfig: int allowMessagesFrom> = 1;

        r0.<android.service.notification.ZenModeConfig: boolean allowConversations> = 0;

        r0.<android.service.notification.ZenModeConfig: int allowConversationsFrom> = 3;

        r0.<android.service.notification.ZenModeConfig: int user> = 0;

        r0.<android.service.notification.ZenModeConfig: int suppressedVisualEffects> = 0;

        r0.<android.service.notification.ZenModeConfig: boolean areChannelsBypassingDnd> = 0;

        $r1 = new android.util.ArrayMap;

        specialinvoke $r1.<android.util.ArrayMap: void <init>()>();

        r0.<android.service.notification.ZenModeConfig: android.util.ArrayMap automaticRules> = $r1;

        return;
    }

    public void <init>(android.os.Parcel)
    {
        android.service.notification.ZenModeConfig r0;
        android.os.Parcel r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, i15;
        java.lang.String[] r2;
        android.service.notification.ZenModeConfig$ZenRule[] r3;
        android.util.ArrayMap $r4, $r10;
        android.os.Parcelable $r5;
        android.service.notification.ZenModeConfig$ZenRule $r6, $r8;
        boolean $z1, z2, z3, z4, z5, z6, z7, z8, z9, z10;
        android.os.Parcelable$Creator $r7;
        java.lang.String $r9;

        r0 := @this: android.service.notification.ZenModeConfig;

        r1 := @parameter0: android.os.Parcel;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.service.notification.ZenModeConfig: boolean allowAlarms> = 1;

        r0.<android.service.notification.ZenModeConfig: boolean allowMedia> = 1;

        r0.<android.service.notification.ZenModeConfig: boolean allowSystem> = 0;

        r0.<android.service.notification.ZenModeConfig: boolean allowCalls> = 1;

        r0.<android.service.notification.ZenModeConfig: boolean allowRepeatCallers> = 1;

        r0.<android.service.notification.ZenModeConfig: boolean allowMessages> = 0;

        r0.<android.service.notification.ZenModeConfig: boolean allowReminders> = 0;

        r0.<android.service.notification.ZenModeConfig: boolean allowEvents> = 0;

        r0.<android.service.notification.ZenModeConfig: int allowCallsFrom> = 2;

        r0.<android.service.notification.ZenModeConfig: int allowMessagesFrom> = 1;

        r0.<android.service.notification.ZenModeConfig: boolean allowConversations> = 0;

        r0.<android.service.notification.ZenModeConfig: int allowConversationsFrom> = 3;

        r0.<android.service.notification.ZenModeConfig: int user> = 0;

        r0.<android.service.notification.ZenModeConfig: int suppressedVisualEffects> = 0;

        r0.<android.service.notification.ZenModeConfig: boolean areChannelsBypassingDnd> = 0;

        $r4 = new android.util.ArrayMap;

        specialinvoke $r4.<android.util.ArrayMap: void <init>()>();

        r0.<android.service.notification.ZenModeConfig: android.util.ArrayMap automaticRules> = $r4;

        $i1 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i1 != 1 goto label01;

        z2 = 1;

        goto label02;

     label01:
        z2 = 0;

     label02:
        r0.<android.service.notification.ZenModeConfig: boolean allowCalls> = z2;

        $i2 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i2 != 1 goto label03;

        z3 = 1;

        goto label04;

     label03:
        z3 = 0;

     label04:
        r0.<android.service.notification.ZenModeConfig: boolean allowRepeatCallers> = z3;

        $i3 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i3 != 1 goto label05;

        z4 = 1;

        goto label06;

     label05:
        z4 = 0;

     label06:
        r0.<android.service.notification.ZenModeConfig: boolean allowMessages> = z4;

        $i4 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i4 != 1 goto label07;

        z5 = 1;

        goto label08;

     label07:
        z5 = 0;

     label08:
        r0.<android.service.notification.ZenModeConfig: boolean allowReminders> = z5;

        $i5 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i5 != 1 goto label09;

        z6 = 1;

        goto label10;

     label09:
        z6 = 0;

     label10:
        r0.<android.service.notification.ZenModeConfig: boolean allowEvents> = z6;

        $i6 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.service.notification.ZenModeConfig: int allowCallsFrom> = $i6;

        $i7 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.service.notification.ZenModeConfig: int allowMessagesFrom> = $i7;

        $i8 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.service.notification.ZenModeConfig: int user> = $i8;

        $r5 = virtualinvoke r1.<android.os.Parcel: android.os.Parcelable readParcelable(java.lang.ClassLoader)>(null);

        $r6 = (android.service.notification.ZenModeConfig$ZenRule) $r5;

        r0.<android.service.notification.ZenModeConfig: android.service.notification.ZenModeConfig$ZenRule manualRule> = $r6;

        i0 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if i0 <= 0 goto label12;

        r2 = newarray (java.lang.String)[i0];

        r3 = newarray (android.service.notification.ZenModeConfig$ZenRule)[i0];

        virtualinvoke r1.<android.os.Parcel: void readStringArray(java.lang.String[])>(r2);

        $r7 = <android.service.notification.ZenModeConfig$ZenRule: android.os.Parcelable$Creator CREATOR>;

        virtualinvoke r1.<android.os.Parcel: void readTypedArray(java.lang.Object[],android.os.Parcelable$Creator)>(r3, $r7);

        i15 = 0;

     label11:
        if i15 >= i0 goto label12;

        $r10 = r0.<android.service.notification.ZenModeConfig: android.util.ArrayMap automaticRules>;

        $r9 = r2[i15];

        $r8 = r3[i15];

        virtualinvoke $r10.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r9, $r8);

        i15 = i15 + 1;

        goto label11;

     label12:
        $i9 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i9 != 1 goto label13;

        z7 = 1;

        goto label14;

     label13:
        z7 = 0;

     label14:
        r0.<android.service.notification.ZenModeConfig: boolean allowAlarms> = z7;

        $i10 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i10 != 1 goto label15;

        z8 = 1;

        goto label16;

     label15:
        z8 = 0;

     label16:
        r0.<android.service.notification.ZenModeConfig: boolean allowMedia> = z8;

        $i11 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i11 != 1 goto label17;

        z9 = 1;

        goto label18;

     label17:
        z9 = 0;

     label18:
        r0.<android.service.notification.ZenModeConfig: boolean allowSystem> = z9;

        $i12 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.service.notification.ZenModeConfig: int suppressedVisualEffects> = $i12;

        $i13 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i13 != 1 goto label19;

        z10 = 1;

        goto label20;

     label19:
        z10 = 0;

     label20:
        r0.<android.service.notification.ZenModeConfig: boolean areChannelsBypassingDnd> = z10;

        $z1 = virtualinvoke r1.<android.os.Parcel: boolean readBoolean()>();

        r0.<android.service.notification.ZenModeConfig: boolean allowConversations> = $z1;

        $i14 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.service.notification.ZenModeConfig: int allowConversationsFrom> = $i14;

        return;
    }

    static java.lang.String access$200(int[])
    {
        int[] r0;
        java.lang.String $r1;

        r0 := @parameter0: int[];

        $r1 = staticinvoke <android.service.notification.ZenModeConfig: java.lang.String toDayList(int[])>(r0);

        return $r1;
    }

    private static void addKeys(android.util.ArraySet, android.util.ArrayMap)
    {
        android.util.ArraySet r0;
        android.util.ArrayMap r1;
        int $i0, i1;
        java.lang.Object $r2;

        r0 := @parameter0: android.util.ArraySet;

        r1 := @parameter1: android.util.ArrayMap;

        if r1 == null goto label2;

        i1 = 0;

     label1:
        $i0 = virtualinvoke r1.<android.util.ArrayMap: int size()>();

        if i1 >= $i0 goto label2;

        $r2 = virtualinvoke r1.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i1);

        virtualinvoke r0.<android.util.ArraySet: boolean add(java.lang.Object)>($r2);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public static boolean areAllPriorityOnlyRingerSoundsMuted(android.app.NotificationManager$Policy)
    {
        android.app.NotificationManager$Policy r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, i15;
        boolean z0, z1, z2, z3, z4, z5, z6, z7, z8;

        r0 := @parameter0: android.app.NotificationManager$Policy;

        i15 = r0.<android.app.NotificationManager$Policy: int priorityCategories>;

        z0 = 1;

        $i0 = i15 & 1;

        if $i0 == 0 goto label01;

        z1 = 1;

        goto label02;

     label01:
        z1 = 0;

     label02:
        $i1 = r0.<android.app.NotificationManager$Policy: int priorityCategories>;

        $i2 = $i1 & 8;

        if $i2 == 0 goto label03;

        z2 = 1;

        goto label04;

     label03:
        z2 = 0;

     label04:
        $i3 = r0.<android.app.NotificationManager$Policy: int priorityCategories>;

        $i4 = $i3 & 4;

        if $i4 == 0 goto label05;

        z3 = 1;

        goto label06;

     label05:
        z3 = 0;

     label06:
        $i5 = r0.<android.app.NotificationManager$Policy: int priorityCategories>;

        $i6 = $i5 & 2;

        if $i6 == 0 goto label07;

        z4 = 1;

        goto label08;

     label07:
        z4 = 0;

     label08:
        $i7 = r0.<android.app.NotificationManager$Policy: int priorityCategories>;

        $i8 = $i7 & 16;

        if $i8 == 0 goto label09;

        z5 = 1;

        goto label10;

     label09:
        z5 = 0;

     label10:
        $i9 = r0.<android.app.NotificationManager$Policy: int priorityConversationSenders>;

        $i10 = $i9 & 256;

        if $i10 == 0 goto label11;

        z6 = 1;

        goto label12;

     label11:
        z6 = 0;

     label12:
        $i11 = r0.<android.app.NotificationManager$Policy: int state>;

        $i12 = $i11 & 1;

        if $i12 == 0 goto label13;

        z7 = 1;

        goto label14;

     label13:
        z7 = 0;

     label14:
        $i13 = r0.<android.app.NotificationManager$Policy: int priorityCategories>;

        $i14 = $i13 & 128;

        if $i14 == 0 goto label15;

        z8 = 1;

        goto label16;

     label15:
        z8 = 0;

     label16:
        if z1 != 0 goto label17;

        if z2 != 0 goto label17;

        if z3 != 0 goto label17;

        if z4 != 0 goto label17;

        if z5 != 0 goto label17;

        if z7 != 0 goto label17;

        if z8 != 0 goto label17;

        if z6 != 0 goto label17;

        goto label18;

     label17:
        z0 = 0;

     label18:
        return z0;
    }

    public static boolean areAllPriorityOnlyRingerSoundsMuted(android.service.notification.ZenModeConfig)
    {
        android.service.notification.ZenModeConfig r0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, z7;

        r0 := @parameter0: android.service.notification.ZenModeConfig;

        $z0 = r0.<android.service.notification.ZenModeConfig: boolean allowReminders>;

        if $z0 != 0 goto label1;

        $z1 = r0.<android.service.notification.ZenModeConfig: boolean allowCalls>;

        if $z1 != 0 goto label1;

        $z2 = r0.<android.service.notification.ZenModeConfig: boolean allowMessages>;

        if $z2 != 0 goto label1;

        $z3 = r0.<android.service.notification.ZenModeConfig: boolean allowEvents>;

        if $z3 != 0 goto label1;

        $z4 = r0.<android.service.notification.ZenModeConfig: boolean allowRepeatCallers>;

        if $z4 != 0 goto label1;

        $z5 = r0.<android.service.notification.ZenModeConfig: boolean areChannelsBypassingDnd>;

        if $z5 != 0 goto label1;

        $z6 = r0.<android.service.notification.ZenModeConfig: boolean allowSystem>;

        if $z6 != 0 goto label1;

        z7 = 1;

        goto label2;

     label1:
        z7 = 0;

     label2:
        return z7;
    }

    public static boolean areAllZenBehaviorSoundsMuted(android.app.NotificationManager$Policy)
    {
        android.app.NotificationManager$Policy r0;
        int $i0, $i1, $i2, i3;
        boolean $z0, z1, z2, z3;

        r0 := @parameter0: android.app.NotificationManager$Policy;

        i3 = r0.<android.app.NotificationManager$Policy: int priorityCategories>;

        z1 = 1;

        $i0 = i3 & 32;

        if $i0 == 0 goto label1;

        z2 = 1;

        goto label2;

     label1:
        z2 = 0;

     label2:
        $i1 = r0.<android.app.NotificationManager$Policy: int priorityCategories>;

        $i2 = $i1 & 64;

        if $i2 == 0 goto label3;

        z3 = 1;

        goto label4;

     label3:
        z3 = 0;

     label4:
        if z2 != 0 goto label5;

        if z3 != 0 goto label5;

        $z0 = staticinvoke <android.service.notification.ZenModeConfig: boolean areAllPriorityOnlyRingerSoundsMuted(android.app.NotificationManager$Policy)>(r0);

        if $z0 == 0 goto label5;

        goto label6;

     label5:
        z1 = 0;

     label6:
        return z1;
    }

    public static boolean areAllZenBehaviorSoundsMuted(android.service.notification.ZenModeConfig)
    {
        android.service.notification.ZenModeConfig r0;
        boolean $z0, $z1, $z2, z3;

        r0 := @parameter0: android.service.notification.ZenModeConfig;

        $z0 = r0.<android.service.notification.ZenModeConfig: boolean allowAlarms>;

        if $z0 != 0 goto label1;

        $z1 = r0.<android.service.notification.ZenModeConfig: boolean allowMedia>;

        if $z1 != 0 goto label1;

        $z2 = staticinvoke <android.service.notification.ZenModeConfig: boolean areAllPriorityOnlyRingerSoundsMuted(android.service.notification.ZenModeConfig)>(r0);

        if $z2 == 0 goto label1;

        z3 = 1;

        goto label2;

     label1:
        z3 = 0;

     label2:
        return z3;
    }

    public static android.service.notification.ZenModeConfig$Diff diff(android.service.notification.ZenModeConfig, android.service.notification.ZenModeConfig)
    {
        android.service.notification.ZenModeConfig r0, r4;
        android.service.notification.ZenModeConfig$Diff $r1, $r2;

        r4 := @parameter0: android.service.notification.ZenModeConfig;

        r0 := @parameter1: android.service.notification.ZenModeConfig;

        if r4 != null goto label2;

        $r2 = new android.service.notification.ZenModeConfig$Diff;

        specialinvoke $r2.<android.service.notification.ZenModeConfig$Diff: void <init>()>();

        if r0 == null goto label1;

        staticinvoke <android.service.notification.ZenModeConfig$Diff: android.service.notification.ZenModeConfig$Diff access$000(android.service.notification.ZenModeConfig$Diff,java.lang.String,java.lang.String)>($r2, "config", "insert");

     label1:
        return $r2;

     label2:
        $r1 = virtualinvoke r4.<android.service.notification.ZenModeConfig: android.service.notification.ZenModeConfig$Diff diff(android.service.notification.ZenModeConfig)>(r0);

        return $r1;
    }

    private static int[] generateMinuteBuckets()
    {
        int[] r0;
        int $i0, $i1, i2;

        r0 = newarray (int)[15];

        r0[0] = 15;

        r0[1] = 30;

        r0[2] = 45;

        i2 = 1;

     label1:
        if i2 > 12 goto label2;

        $i1 = i2 + 2;

        $i0 = i2 * 60;

        r0[$i1] = $i0;

        i2 = i2 + 1;

        goto label1;

     label2:
        return r0;
    }

    private static java.lang.String getConditionLine(android.content.Context, android.service.notification.ZenModeConfig, int, boolean, boolean)
    {
        android.content.Context r0;
        int i0, $i5;
        boolean z0, z1, $z2, $z3, $z4, $z5;
        long l1, $l3, $l4;
        java.lang.Object $r1;
        android.content.res.Resources $r2;
        java.lang.Object[] $r3;
        java.lang.String $r4, $r6, $r9, r12, r20;
        android.service.notification.ZenModeConfig$ZenRule $r5, $r7, $r8, r13, r19;
        byte $b2;
        float $f0, $f1;
        android.service.notification.ZenModeConfig r10;
        android.net.Uri r14;
        android.service.notification.Condition r15;
        android.util.ArrayMap $r16;
        java.util.Collection $r17;
        java.util.Iterator r18;

        r0 := @parameter0: android.content.Context;

        r10 := @parameter1: android.service.notification.ZenModeConfig;

        i0 := @parameter2: int;

        z0 := @parameter3: boolean;

        z1 := @parameter4: boolean;

        if r10 != null goto label01;

        return "";

     label01:
        r12 = "";

        r13 = r10.<android.service.notification.ZenModeConfig: android.service.notification.ZenModeConfig$ZenRule manualRule>;

        if r13 == null goto label08;

        r14 = r13.<android.service.notification.ZenModeConfig$ZenRule: android.net.Uri conditionId>;

        $r5 = r10.<android.service.notification.ZenModeConfig: android.service.notification.ZenModeConfig$ZenRule manualRule>;

        $r6 = $r5.<android.service.notification.ZenModeConfig$ZenRule: java.lang.String enabler>;

        if $r6 == null goto label02;

        $r8 = r10.<android.service.notification.ZenModeConfig: android.service.notification.ZenModeConfig$ZenRule manualRule>;

        $r9 = $r8.<android.service.notification.ZenModeConfig$ZenRule: java.lang.String enabler>;

        r12 = staticinvoke <android.service.notification.ZenModeConfig: java.lang.String getOwnerCaption(android.content.Context,java.lang.String)>(r0, $r9);

        goto label08;

     label02:
        if r14 != null goto label03;

        r12 = virtualinvoke r0.<android.content.Context: java.lang.String getString(int)>(17041510);

        goto label08;

     label03:
        l1 = staticinvoke <android.service.notification.ZenModeConfig: long tryParseCountdownConditionId(android.net.Uri)>(r14);

        $r7 = r10.<android.service.notification.ZenModeConfig: android.service.notification.ZenModeConfig$ZenRule manualRule>;

        r15 = $r7.<android.service.notification.ZenModeConfig$ZenRule: android.service.notification.Condition condition>;

        $b2 = l1 cmp 0L;

        if $b2 <= 0 goto label04;

        $l3 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l4 = l1 - $l3;

        $f0 = (float) $l4;

        $f1 = $f0 / 60000.0F;

        $i5 = staticinvoke <java.lang.Math: int round(float)>($f1);

        r15 = staticinvoke <android.service.notification.ZenModeConfig: android.service.notification.Condition toTimeCondition(android.content.Context,long,int,int,boolean)>(r0, l1, $i5, i0, z1);

     label04:
        if r15 != null goto label05;

        r12 = "";

        goto label07;

     label05:
        if z0 == 0 goto label06;

        r12 = r15.<android.service.notification.Condition: java.lang.String line1>;

        goto label07;

     label06:
        r12 = r15.<android.service.notification.Condition: java.lang.String summary>;

     label07:
        $z4 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r12);

        if $z4 == 0 goto label08;

        r12 = "";

        goto label08;

     label08:
        $r16 = r10.<android.service.notification.ZenModeConfig: android.util.ArrayMap automaticRules>;

        $r17 = virtualinvoke $r16.<android.util.ArrayMap: java.util.Collection values()>();

        r18 = interfaceinvoke $r17.<java.util.Collection: java.util.Iterator iterator()>();

     label09:
        $z5 = interfaceinvoke r18.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label12;

        $r1 = interfaceinvoke r18.<java.util.Iterator: java.lang.Object next()>();

        r19 = (android.service.notification.ZenModeConfig$ZenRule) $r1;

        r20 = r12;

        $z2 = virtualinvoke r19.<android.service.notification.ZenModeConfig$ZenRule: boolean isAutomaticActive()>();

        if $z2 == 0 goto label11;

        $z3 = virtualinvoke r12.<java.lang.String: boolean isEmpty()>();

        if $z3 == 0 goto label10;

        r20 = r19.<android.service.notification.ZenModeConfig$ZenRule: java.lang.String name>;

        goto label11;

     label10:
        $r2 = virtualinvoke r0.<android.content.Context: android.content.res.Resources getResources()>();

        $r3 = newarray (java.lang.Object)[2];

        $r3[0] = r12;

        $r4 = r19.<android.service.notification.ZenModeConfig$ZenRule: java.lang.String name>;

        $r3[1] = $r4;

        r20 = virtualinvoke $r2.<android.content.res.Resources: java.lang.String getString(int,java.lang.Object[])>(17041512, $r3);

     label11:
        r12 = r20;

        goto label09;

     label12:
        return r12;
    }

    public static java.lang.String getConditionSummary(android.content.Context, android.service.notification.ZenModeConfig, int, boolean)
    {
        android.content.Context r0;
        android.service.notification.ZenModeConfig r1;
        int i0;
        boolean z0;
        java.lang.String $r2;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: android.service.notification.ZenModeConfig;

        i0 := @parameter2: int;

        z0 := @parameter3: boolean;

        $r2 = staticinvoke <android.service.notification.ZenModeConfig: java.lang.String getConditionLine(android.content.Context,android.service.notification.ZenModeConfig,int,boolean,boolean)>(r0, r1, i0, 0, z0);

        return $r2;
    }

    public static java.lang.String getDescription(android.content.Context, boolean, android.service.notification.ZenModeConfig, boolean)
    {
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        long l0, l4, l5, l6;
        java.lang.Object $r0;
        android.net.Uri $r1, $r2, $r3, r16;
        byte $b1, $b2;
        java.lang.String $r4, $r6, $r9, $r11, r15, r17, r22, r23;
        android.service.notification.ZenModeConfig$ZenRule $r5, $r10, r14, r21;
        java.lang.Object[] $r7;
        int $i3;
        java.lang.CharSequence $r8;
        android.content.Context r12;
        android.service.notification.ZenModeConfig r13;
        android.util.ArrayMap $r18;
        java.util.Collection $r19;
        java.util.Iterator r20;

        r12 := @parameter0: android.content.Context;

        z0 := @parameter1: boolean;

        r13 := @parameter2: android.service.notification.ZenModeConfig;

        z1 := @parameter3: boolean;

        if z0 == 0 goto label13;

        if r13 != null goto label01;

        goto label13;

     label01:
        r14 = r13.<android.service.notification.ZenModeConfig: android.service.notification.ZenModeConfig$ZenRule manualRule>;

        r15 = "";

        l4 = -1L;

        if r14 == null goto label06;

        r16 = r14.<android.service.notification.ZenModeConfig$ZenRule: android.net.Uri conditionId>;

        $r5 = r13.<android.service.notification.ZenModeConfig: android.service.notification.ZenModeConfig$ZenRule manualRule>;

        $r6 = $r5.<android.service.notification.ZenModeConfig$ZenRule: java.lang.String enabler>;

        if $r6 == null goto label03;

        $r10 = r13.<android.service.notification.ZenModeConfig: android.service.notification.ZenModeConfig$ZenRule manualRule>;

        $r11 = $r10.<android.service.notification.ZenModeConfig$ZenRule: java.lang.String enabler>;

        r17 = staticinvoke <android.service.notification.ZenModeConfig: java.lang.String getOwnerCaption(android.content.Context,java.lang.String)>(r12, $r11);

        r15 = "";

        $z7 = virtualinvoke r17.<java.lang.String: boolean isEmpty()>();

        if $z7 != 0 goto label02;

        r15 = r17;

     label02:
        l4 = -1L;

        goto label06;

     label03:
        if r16 != null goto label05;

        if z1 == 0 goto label04;

        $r9 = virtualinvoke r12.<android.content.Context: java.lang.String getString(int)>(17041510);

        return $r9;

     label04:
        return null;

     label05:
        l5 = staticinvoke <android.service.notification.ZenModeConfig: long tryParseCountdownConditionId(android.net.Uri)>(r16);

        r15 = "";

        l4 = l5;

        $b2 = l5 cmp 0L;

        if $b2 <= 0 goto label06;

        $r7 = newarray (java.lang.Object)[1];

        $z6 = staticinvoke <android.service.notification.ZenModeConfig: boolean isToday(long)>(l5);

        $i3 = virtualinvoke r12.<android.content.Context: int getUserId()>();

        $r8 = staticinvoke <android.service.notification.ZenModeConfig: java.lang.CharSequence getFormattedTime(android.content.Context,long,boolean,int)>(r12, l5, $z6, $i3);

        $r7[0] = $r8;

        r15 = virtualinvoke r12.<android.content.Context: java.lang.String getString(int,java.lang.Object[])>(17041513, $r7);

        l4 = l5;

     label06:
        $r18 = r13.<android.service.notification.ZenModeConfig: android.util.ArrayMap automaticRules>;

        $r19 = virtualinvoke $r18.<android.util.ArrayMap: java.util.Collection values()>();

        r20 = interfaceinvoke $r19.<java.util.Collection: java.util.Iterator iterator()>();

     label07:
        $z8 = interfaceinvoke r20.<java.util.Iterator: boolean hasNext()>();

        if $z8 == 0 goto label11;

        $r0 = interfaceinvoke r20.<java.util.Iterator: java.lang.Object next()>();

        r21 = (android.service.notification.ZenModeConfig$ZenRule) $r0;

        r22 = r15;

        l6 = l4;

        $z3 = virtualinvoke r21.<android.service.notification.ZenModeConfig$ZenRule: boolean isAutomaticActive()>();

        if $z3 == 0 goto label10;

        $r1 = r21.<android.service.notification.ZenModeConfig$ZenRule: android.net.Uri conditionId>;

        $z4 = staticinvoke <android.service.notification.ZenModeConfig: boolean isValidEventConditionId(android.net.Uri)>($r1);

        if $z4 != 0 goto label09;

        $r3 = r21.<android.service.notification.ZenModeConfig$ZenRule: android.net.Uri conditionId>;

        $z5 = staticinvoke <android.service.notification.ZenModeConfig: boolean isValidScheduleConditionId(android.net.Uri)>($r3);

        if $z5 == 0 goto label08;

        goto label09;

     label08:
        $r4 = r21.<android.service.notification.ZenModeConfig$ZenRule: java.lang.String name>;

        return $r4;

     label09:
        $r2 = r21.<android.service.notification.ZenModeConfig$ZenRule: android.net.Uri conditionId>;

        l0 = staticinvoke <android.service.notification.ZenModeConfig: long parseAutomaticRuleEndTime(android.content.Context,android.net.Uri)>(r12, $r2);

        r22 = r15;

        l6 = l4;

        $b1 = l0 cmp l4;

        if $b1 <= 0 goto label10;

        l6 = l0;

        r22 = r21.<android.service.notification.ZenModeConfig$ZenRule: java.lang.String name>;

     label10:
        r15 = r22;

        l4 = l6;

        goto label07;

     label11:
        r23 = null;

        $z2 = virtualinvoke r15.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z2 != 0 goto label12;

        r23 = r15;

     label12:
        return r23;

     label13:
        return null;
    }

    public static android.content.ComponentName getEventConditionProvider()
    {
        android.content.ComponentName $r0;

        $r0 = new android.content.ComponentName;

        specialinvoke $r0.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>("android", "EventConditionProvider");

        return $r0;
    }

    public static java.lang.CharSequence getFormattedTime(android.content.Context, long, boolean, int)
    {
        long l0;
        boolean z0, $z1;
        int i1;
        java.lang.StringBuilder $r1;
        java.util.Locale $r4;
        java.lang.String $r5, r8, r9, r10;
        java.lang.CharSequence $r6;
        android.content.Context r7;

        r7 := @parameter0: android.content.Context;

        l0 := @parameter1: long;

        z0 := @parameter2: boolean;

        i1 := @parameter3: int;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        if z0 != 0 goto label1;

        r8 = "EEE ";

        goto label2;

     label1:
        r8 = "";

     label2:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);

        $z1 = staticinvoke <android.text.format.DateFormat: boolean is24HourFormat(android.content.Context,int)>(r7, i1);

        if $z1 == 0 goto label3;

        r9 = "Hm";

        goto label4;

     label3:
        r9 = "hma";

     label4:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9);

        r10 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        $r4 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $r5 = staticinvoke <android.text.format.DateFormat: java.lang.String getBestDateTimePattern(java.util.Locale,java.lang.String)>($r4, r10);

        $r6 = staticinvoke <android.text.format.DateFormat: java.lang.CharSequence format(java.lang.CharSequence,long)>($r5, l0);

        return $r6;
    }

    private static long getNextAlarm(android.content.Context)
    {
        java.lang.Object $r0;
        android.app.AlarmManager $r1;
        int $i0;
        android.content.Context r2;
        android.app.AlarmManager$AlarmClockInfo r3;
        long l1;

        r2 := @parameter0: android.content.Context;

        $r0 = virtualinvoke r2.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("alarm");

        $r1 = (android.app.AlarmManager) $r0;

        $i0 = virtualinvoke r2.<android.content.Context: int getUserId()>();

        r3 = virtualinvoke $r1.<android.app.AlarmManager: android.app.AlarmManager$AlarmClockInfo getNextAlarmClock(int)>($i0);

        if r3 == null goto label1;

        l1 = virtualinvoke r3.<android.app.AlarmManager$AlarmClockInfo: long getTriggerTime()>();

        goto label2;

     label1:
        l1 = 0L;

     label2:
        return l1;
    }

    private int getNotificationPolicySenders(int, int)
    {
        android.service.notification.ZenModeConfig r0;
        int i0, i1;

        r0 := @this: android.service.notification.ZenModeConfig;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i0 == 1 goto label3;

        if i0 == 2 goto label2;

        if i0 == 3 goto label1;

        return i1;

     label1:
        return 2;

     label2:
        return 1;

     label3:
        return 0;
    }

    public static java.lang.String getOwnerCaption(android.content.Context, java.lang.String)
    {
        int i0;
        java.lang.String $r0, $r2, r4, r8;
        java.lang.Throwable $r1;
        android.content.Context r3;
        android.content.pm.PackageManager r5;
        android.content.pm.ApplicationInfo r6;
        java.lang.CharSequence r7;

        r3 := @parameter0: android.content.Context;

        r4 := @parameter1: java.lang.String;

        r5 = virtualinvoke r3.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

     label1:
        r6 = virtualinvoke r5.<android.content.pm.PackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int)>(r4, 0);

     label2:
        if r6 == null goto label7;

     label3:
        r7 = virtualinvoke r6.<android.content.pm.ApplicationInfo: java.lang.CharSequence loadLabel(android.content.pm.PackageManager)>(r5);

     label4:
        if r7 == null goto label7;

     label5:
        $r0 = interfaceinvoke r7.<java.lang.CharSequence: java.lang.String toString()>();

        r8 = virtualinvoke $r0.<java.lang.String: java.lang.String trim()>();

        i0 = virtualinvoke r8.<java.lang.String: int length()>();

     label6:
        if i0 <= 0 goto label7;

        return r8;

     label7:
        goto label9;

     label8:
        $r1 := @caughtexception;

        $r2 = <android.service.notification.ZenModeConfig: java.lang.String TAG>;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>($r2, "Error loading owner caption", $r1);

     label9:
        return "";

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public static android.content.ComponentName getScheduleConditionProvider()
    {
        android.content.ComponentName $r0;

        $r0 = new android.content.ComponentName;

        specialinvoke $r0.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>("android", "ScheduleConditionProvider");

        return $r0;
    }

    public static int getZenPolicySenders(int)
    {
        int i0;

        i0 := @parameter0: int;

        if i0 == 0 goto label2;

        if i0 == 1 goto label1;

        return 3;

     label1:
        return 2;

     label2:
        return 1;
    }

    private boolean isPriorityCategoryEnabled(int, android.app.NotificationManager$Policy)
    {
        android.service.notification.ZenModeConfig r0;
        int i0, $i1, $i2;
        android.app.NotificationManager$Policy r1;
        boolean z0;

        r0 := @this: android.service.notification.ZenModeConfig;

        i0 := @parameter0: int;

        r1 := @parameter1: android.app.NotificationManager$Policy;

        $i1 = r1.<android.app.NotificationManager$Policy: int priorityCategories>;

        $i2 = $i1 & i0;

        if $i2 == 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public static boolean isToday(long)
    {
        long l0;
        java.util.GregorianCalendar $r2, $r3;
        int $i1, $i2, $i3, $i4, $i5, $i6;

        l0 := @parameter0: long;

        $r2 = new java.util.GregorianCalendar;

        specialinvoke $r2.<java.util.GregorianCalendar: void <init>()>();

        $r3 = new java.util.GregorianCalendar;

        specialinvoke $r3.<java.util.GregorianCalendar: void <init>()>();

        virtualinvoke $r3.<java.util.GregorianCalendar: void setTimeInMillis(long)>(l0);

        $i1 = virtualinvoke $r2.<java.util.GregorianCalendar: int get(int)>(1);

        $i2 = virtualinvoke $r3.<java.util.GregorianCalendar: int get(int)>(1);

        if $i1 != $i2 goto label1;

        $i3 = virtualinvoke $r2.<java.util.GregorianCalendar: int get(int)>(2);

        $i4 = virtualinvoke $r3.<java.util.GregorianCalendar: int get(int)>(2);

        if $i3 != $i4 goto label1;

        $i5 = virtualinvoke $r2.<java.util.GregorianCalendar: int get(int)>(5);

        $i6 = virtualinvoke $r3.<java.util.GregorianCalendar: int get(int)>(5);

        if $i5 != $i6 goto label1;

        return 1;

     label1:
        return 0;
    }

    private static boolean isValidAutomaticRule(android.service.notification.ZenModeConfig$ZenRule)
    {
        android.service.notification.ZenModeConfig$ZenRule r0;
        java.lang.String $r1;
        boolean $z0, $z1, $z2, z3;
        int $i0;
        android.net.Uri $r2;

        r0 := @parameter0: android.service.notification.ZenModeConfig$ZenRule;

        if r0 == null goto label1;

        $r1 = r0.<android.service.notification.ZenModeConfig$ZenRule: java.lang.String name>;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

        if $z0 != 0 goto label1;

        $i0 = r0.<android.service.notification.ZenModeConfig$ZenRule: int zenMode>;

        $z1 = staticinvoke <android.provider.Settings$Global: boolean isValidZenMode(int)>($i0);

        if $z1 == 0 goto label1;

        $r2 = r0.<android.service.notification.ZenModeConfig$ZenRule: android.net.Uri conditionId>;

        if $r2 == null goto label1;

        $z2 = staticinvoke <android.service.notification.ZenModeConfig: boolean sameCondition(android.service.notification.ZenModeConfig$ZenRule)>(r0);

        if $z2 == 0 goto label1;

        z3 = 1;

        goto label2;

     label1:
        z3 = 0;

     label2:
        return z3;
    }

    public static boolean isValidCountdownConditionId(android.net.Uri)
    {
        android.net.Uri r0;
        long $l0;
        byte $b1;
        boolean z0;

        r0 := @parameter0: android.net.Uri;

        $l0 = staticinvoke <android.service.notification.ZenModeConfig: long tryParseCountdownConditionId(android.net.Uri)>(r0);

        $b1 = $l0 cmp 0L;

        if $b1 == 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public static boolean isValidCountdownToAlarmConditionId(android.net.Uri)
    {
        android.net.Uri r0;
        boolean z0, $z1;
        java.lang.String r2, $r5, $r10, $r15;
        long $l0;
        byte $b1;
        java.util.List $r4, $r6, $r8;
        int $i2;
        java.lang.Object $r7, $r9;
        java.lang.RuntimeException $r11;
        java.lang.StringBuilder $r12;

        r0 := @parameter0: android.net.Uri;

        $l0 = staticinvoke <android.service.notification.ZenModeConfig: long tryParseCountdownConditionId(android.net.Uri)>(r0);

        $b1 = $l0 cmp 0L;

        if $b1 == 0 goto label5;

        $r4 = virtualinvoke r0.<android.net.Uri: java.util.List getPathSegments()>();

        $i2 = interfaceinvoke $r4.<java.util.List: int size()>();

        if $i2 < 4 goto label4;

        $r5 = "alarm";

        $r6 = virtualinvoke r0.<android.net.Uri: java.util.List getPathSegments()>();

        $r7 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(2);

        $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z1 != 0 goto label1;

        goto label4;

     label1:
        $r8 = virtualinvoke r0.<android.net.Uri: java.util.List getPathSegments()>();

        $r9 = interfaceinvoke $r8.<java.util.List: java.lang.Object get(int)>(3);

        $r10 = (java.lang.String) $r9;

        z0 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r10);

     label2:
        return z0;

     label3:
        $r11 := @caughtexception;

        r2 = <android.service.notification.ZenModeConfig: java.lang.String TAG>;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error parsing countdown alarm condition: ");

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>(r2, $r15, $r11);

        return 0;

     label4:
        return 0;

     label5:
        return 0;

        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    public static boolean isValidEventConditionId(android.net.Uri)
    {
        android.net.Uri r0;
        android.service.notification.ZenModeConfig$EventInfo $r1;
        boolean z0;

        r0 := @parameter0: android.net.Uri;

        $r1 = staticinvoke <android.service.notification.ZenModeConfig: android.service.notification.ZenModeConfig$EventInfo tryParseEventConditionId(android.net.Uri)>(r0);

        if $r1 == null goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public static boolean isValidHour(int)
    {
        int i0;
        boolean z0;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        if i0 >= 24 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    private static boolean isValidManualRule(android.service.notification.ZenModeConfig$ZenRule)
    {
        android.service.notification.ZenModeConfig$ZenRule r0;
        int $i0;
        boolean $z0, $z1, z2;

        r0 := @parameter0: android.service.notification.ZenModeConfig$ZenRule;

        if r0 == null goto label2;

        $i0 = r0.<android.service.notification.ZenModeConfig$ZenRule: int zenMode>;

        $z0 = staticinvoke <android.provider.Settings$Global: boolean isValidZenMode(int)>($i0);

        if $z0 == 0 goto label1;

        $z1 = staticinvoke <android.service.notification.ZenModeConfig: boolean sameCondition(android.service.notification.ZenModeConfig$ZenRule)>(r0);

        if $z1 == 0 goto label1;

        goto label2;

     label1:
        z2 = 0;

        goto label3;

     label2:
        z2 = 1;

     label3:
        return z2;
    }

    public static boolean isValidMinute(int)
    {
        int i0;
        boolean z0;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        if i0 >= 60 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public static boolean isValidScheduleConditionId(android.net.Uri)
    {
        int[] $r0, $r1;
        int $i0;
        java.lang.RuntimeException $r2;
        android.net.Uri r3;
        android.service.notification.ZenModeConfig$ScheduleInfo r4;

        r3 := @parameter0: android.net.Uri;

     label1:
        r4 = staticinvoke <android.service.notification.ZenModeConfig: android.service.notification.ZenModeConfig$ScheduleInfo tryParseScheduleConditionId(android.net.Uri)>(r3);

     label2:
        if r4 == null goto label4;

        $r0 = r4.<android.service.notification.ZenModeConfig$ScheduleInfo: int[] days>;

        if $r0 == null goto label4;

        $r1 = r4.<android.service.notification.ZenModeConfig$ScheduleInfo: int[] days>;

        $i0 = lengthof $r1;

        if $i0 != 0 goto label3;

        goto label4;

     label3:
        return 1;

     label4:
        return 0;

     label5:
        $r2 := @caughtexception;

        return 0;

        catch java.lang.NullPointerException from label1 to label2 with label5;
        catch java.lang.ArrayIndexOutOfBoundsException from label1 to label2 with label5;
    }

    public static boolean isValidScheduleConditionId(android.net.Uri, boolean)
    {
        boolean z0;
        int[] $r0, $r1;
        int $i0;
        java.lang.RuntimeException $r2;
        android.net.Uri r3;
        android.service.notification.ZenModeConfig$ScheduleInfo r4;

        r3 := @parameter0: android.net.Uri;

        z0 := @parameter1: boolean;

     label1:
        r4 = staticinvoke <android.service.notification.ZenModeConfig: android.service.notification.ZenModeConfig$ScheduleInfo tryParseScheduleConditionId(android.net.Uri)>(r3);

     label2:
        if r4 == null goto label4;

        if z0 != 0 goto label3;

        $r0 = r4.<android.service.notification.ZenModeConfig$ScheduleInfo: int[] days>;

        if $r0 == null goto label4;

        $r1 = r4.<android.service.notification.ZenModeConfig$ScheduleInfo: int[] days>;

        $i0 = lengthof $r1;

        if $i0 != 0 goto label3;

        goto label4;

     label3:
        return 1;

     label4:
        return 0;

     label5:
        $r2 := @caughtexception;

        return 0;

        catch java.lang.NullPointerException from label1 to label2 with label5;
        catch java.lang.ArrayIndexOutOfBoundsException from label1 to label2 with label5;
    }

    private static boolean isValidSource(int)
    {
        int i0;
        boolean z0;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        if i0 > 2 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    private boolean isVisualEffectAllowed(int, android.app.NotificationManager$Policy)
    {
        android.service.notification.ZenModeConfig r0;
        int i0, $i1, $i2;
        android.app.NotificationManager$Policy r1;
        boolean z0;

        r0 := @this: android.service.notification.ZenModeConfig;

        i0 := @parameter0: int;

        r1 := @parameter1: android.app.NotificationManager$Policy;

        $i1 = r1.<android.app.NotificationManager$Policy: int suppressedVisualEffects>;

        $i2 = $i1 & i0;

        if $i2 != 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public static boolean isZenOverridingRinger(int, android.app.NotificationManager$Policy)
    {
        int i0;
        android.app.NotificationManager$Policy r0;
        boolean $z0, z1;

        i0 := @parameter0: int;

        r0 := @parameter1: android.app.NotificationManager$Policy;

        z1 = 1;

        if i0 == 2 goto label2;

        if i0 == 3 goto label2;

        if i0 != 1 goto label1;

        $z0 = staticinvoke <android.service.notification.ZenModeConfig: boolean areAllPriorityOnlyRingerSoundsMuted(android.app.NotificationManager$Policy)>(r0);

        if $z0 == 0 goto label1;

        goto label2;

     label1:
        z1 = 0;

        goto label2;

     label2:
        return z1;
    }

    public static java.lang.String newRuleId()
    {
        java.util.UUID $r0;
        java.lang.String $r1, $r2;

        $r0 = staticinvoke <java.util.UUID: java.util.UUID randomUUID()>();

        $r1 = virtualinvoke $r0.<java.util.UUID: java.lang.String toString()>();

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("-", "");

        return $r2;
    }

    private static int normalizeConversationSenders(boolean, int, int)
    {
        boolean z0;
        int i0, i1;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        if z0 != 0 goto label1;

        return 3;

     label1:
        if i0 == 1 goto label2;

        if i0 == 2 goto label2;

        if i0 == 3 goto label2;

        return i1;

     label2:
        return i0;
    }

    private static int normalizePrioritySenders(int, int)
    {
        int i0, i1;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i0 == 1 goto label1;

        if i0 == 2 goto label1;

        if i0 == 0 goto label1;

        return i1;

     label1:
        return i0;
    }

    private static long parseAutomaticRuleEndTime(android.content.Context, android.net.Uri)
    {
        android.content.Context r0;
        long l0, l1, $l2, $l3;
        boolean $z0, $z1, $z2, $z3;
        android.net.Uri r1;
        android.service.notification.ScheduleCalendar r2;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: android.net.Uri;

        $z0 = staticinvoke <android.service.notification.ZenModeConfig: boolean isValidEventConditionId(android.net.Uri)>(r1);

        if $z0 == 0 goto label1;

        return 9223372036854775807L;

     label1:
        $z1 = staticinvoke <android.service.notification.ZenModeConfig: boolean isValidScheduleConditionId(android.net.Uri)>(r1);

        if $z1 == 0 goto label3;

        r2 = staticinvoke <android.service.notification.ZenModeConfig: android.service.notification.ScheduleCalendar toScheduleCalendar(android.net.Uri)>(r1);

        $l2 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        l0 = virtualinvoke r2.<android.service.notification.ScheduleCalendar: long getNextChangeTime(long)>($l2);

        $z2 = virtualinvoke r2.<android.service.notification.ScheduleCalendar: boolean exitAtAlarm()>();

        if $z2 == 0 goto label2;

        l1 = staticinvoke <android.service.notification.ZenModeConfig: long getNextAlarm(android.content.Context)>(r0);

        $l3 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        virtualinvoke r2.<android.service.notification.ScheduleCalendar: void maybeSetNextAlarm(long,long)>($l3, l1);

        $z3 = virtualinvoke r2.<android.service.notification.ScheduleCalendar: boolean shouldExitForAlarm(long)>(l0);

        if $z3 == 0 goto label2;

        return l1;

     label2:
        return l0;

     label3:
        return -1L;
    }

    private static int prioritySendersToSource(int, int)
    {
        int i0, i1;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i0 == 0 goto label3;

        if i0 == 1 goto label2;

        if i0 == 2 goto label1;

        return i1;

     label1:
        return 2;

     label2:
        return 1;

     label3:
        return 0;
    }

    public static android.service.notification.Condition readConditionXml(org.xmlpull.v1.XmlPullParser)
    {
        android.net.Uri r0;
        java.lang.String r1, r2, r3, $r6;
        int i0, i1, i2;
        android.service.notification.Condition $r4;
        java.lang.Throwable $r5;
        org.xmlpull.v1.XmlPullParser r7;

        r7 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r0 = staticinvoke <android.service.notification.ZenModeConfig: android.net.Uri safeUri(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r7, "id");

        if r0 != null goto label1;

        return null;

     label1:
        r1 = interfaceinvoke r7.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "summary");

        r2 = interfaceinvoke r7.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "line1");

        r3 = interfaceinvoke r7.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "line2");

        i0 = staticinvoke <android.service.notification.ZenModeConfig: int safeInt(org.xmlpull.v1.XmlPullParser,java.lang.String,int)>(r7, "icon", -1);

        i1 = staticinvoke <android.service.notification.ZenModeConfig: int safeInt(org.xmlpull.v1.XmlPullParser,java.lang.String,int)>(r7, "state", -1);

        i2 = staticinvoke <android.service.notification.ZenModeConfig: int safeInt(org.xmlpull.v1.XmlPullParser,java.lang.String,int)>(r7, "flags", -1);

     label2:
        $r4 = new android.service.notification.Condition;

        specialinvoke $r4.<android.service.notification.Condition: void <init>(android.net.Uri,java.lang.String,java.lang.String,java.lang.String,int,int,int)>(r0, r1, r2, r3, i0, i1, i2);

     label3:
        return $r4;

     label4:
        $r5 := @caughtexception;

        $r6 = <android.service.notification.ZenModeConfig: java.lang.String TAG>;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>($r6, "Unable to read condition xml", $r5);

        return null;

        catch java.lang.IllegalArgumentException from label2 to label3 with label4;
    }

    public static android.service.notification.ZenModeConfig$ZenRule readRuleXml(org.xmlpull.v1.XmlPullParser)
    {
        android.service.notification.ZenModeConfig$ZenRule $r1;
        boolean $z0, $z1, $z2;
        java.lang.String $r2, $r11, $r13, $r19, r22, r23, r25, $r26, r28;
        int $i0, $i1, $i5;
        android.net.Uri $r3, $r8;
        android.content.ComponentName $r4, $r5, $r6, $r7, $r14, $r15;
        java.lang.StringBuilder $r9, $r16;
        org.xmlpull.v1.XmlPullParser r20;
        long $l4;
        android.service.notification.Condition $r27;
        android.service.notification.ZenPolicy $r29;

        r20 := @parameter0: org.xmlpull.v1.XmlPullParser;

        $r1 = new android.service.notification.ZenModeConfig$ZenRule;

        specialinvoke $r1.<android.service.notification.ZenModeConfig$ZenRule: void <init>()>();

        $z0 = staticinvoke <android.service.notification.ZenModeConfig: boolean safeBoolean(org.xmlpull.v1.XmlPullParser,java.lang.String,boolean)>(r20, "enabled", 1);

        $r1.<android.service.notification.ZenModeConfig$ZenRule: boolean enabled> = $z0;

        $r2 = interfaceinvoke r20.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "name");

        $r1.<android.service.notification.ZenModeConfig$ZenRule: java.lang.String name> = $r2;

        r22 = interfaceinvoke r20.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "zen");

        $i0 = staticinvoke <android.service.notification.ZenModeConfig: int tryParseZenMode(java.lang.String,int)>(r22, -1);

        $r1.<android.service.notification.ZenModeConfig$ZenRule: int zenMode> = $i0;

        $i1 = $r1.<android.service.notification.ZenModeConfig$ZenRule: int zenMode>;

        if $i1 != -1 goto label1;

        r23 = <android.service.notification.ZenModeConfig: java.lang.String TAG>;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad zen mode in rule xml:");

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r22);

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>(r23, $r19);

        return null;

     label1:
        $r3 = staticinvoke <android.service.notification.ZenModeConfig: android.net.Uri safeUri(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r20, "conditionId");

        $r1.<android.service.notification.ZenModeConfig$ZenRule: android.net.Uri conditionId> = $r3;

        $r4 = staticinvoke <android.service.notification.ZenModeConfig: android.content.ComponentName safeComponentName(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r20, "component");

        $r1.<android.service.notification.ZenModeConfig$ZenRule: android.content.ComponentName component> = $r4;

        $r5 = staticinvoke <android.service.notification.ZenModeConfig: android.content.ComponentName safeComponentName(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r20, "configActivity");

        $r1.<android.service.notification.ZenModeConfig$ZenRule: android.content.ComponentName configurationActivity> = $r5;

        $r6 = $r1.<android.service.notification.ZenModeConfig$ZenRule: android.content.ComponentName component>;

        if $r6 == null goto label2;

        $r15 = $r1.<android.service.notification.ZenModeConfig$ZenRule: android.content.ComponentName component>;

        r25 = virtualinvoke $r15.<android.content.ComponentName: java.lang.String getPackageName()>();

        goto label4;

     label2:
        $r7 = $r1.<android.service.notification.ZenModeConfig$ZenRule: android.content.ComponentName configurationActivity>;

        if $r7 == null goto label3;

        $r14 = $r1.<android.service.notification.ZenModeConfig$ZenRule: android.content.ComponentName configurationActivity>;

        r25 = virtualinvoke $r14.<android.content.ComponentName: java.lang.String getPackageName()>();

        goto label4;

     label3:
        r25 = null;

     label4:
        $r1.<android.service.notification.ZenModeConfig$ZenRule: java.lang.String pkg> = r25;

        $l4 = staticinvoke <android.service.notification.ZenModeConfig: long safeLong(org.xmlpull.v1.XmlPullParser,java.lang.String,long)>(r20, "creationTime", 0L);

        $r1.<android.service.notification.ZenModeConfig$ZenRule: long creationTime> = $l4;

        $r26 = interfaceinvoke r20.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "enabler");

        $r1.<android.service.notification.ZenModeConfig$ZenRule: java.lang.String enabler> = $r26;

        $r27 = staticinvoke <android.service.notification.ZenModeConfig: android.service.notification.Condition readConditionXml(org.xmlpull.v1.XmlPullParser)>(r20);

        $r1.<android.service.notification.ZenModeConfig$ZenRule: android.service.notification.Condition condition> = $r27;

        $i5 = $r1.<android.service.notification.ZenModeConfig$ZenRule: int zenMode>;

        if $i5 == 1 goto label5;

        $r8 = $r1.<android.service.notification.ZenModeConfig$ZenRule: android.net.Uri conditionId>;

        $z1 = staticinvoke <android.service.notification.Condition: boolean isValidId(android.net.Uri,java.lang.String)>($r8, "android");

        if $z1 == 0 goto label5;

        r28 = <android.service.notification.ZenModeConfig: java.lang.String TAG>;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Updating zenMode of automatic rule ");

        $r11 = $r1.<android.service.notification.ZenModeConfig$ZenRule: java.lang.String name>;

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>(r28, $r13);

        $r1.<android.service.notification.ZenModeConfig$ZenRule: int zenMode> = 1;

     label5:
        $z2 = staticinvoke <android.service.notification.ZenModeConfig: boolean safeBoolean(org.xmlpull.v1.XmlPullParser,java.lang.String,boolean)>(r20, "modified", 0);

        $r1.<android.service.notification.ZenModeConfig$ZenRule: boolean modified> = $z2;

        $r29 = staticinvoke <android.service.notification.ZenModeConfig: android.service.notification.ZenPolicy readZenPolicyXml(org.xmlpull.v1.XmlPullParser)>(r20);

        $r1.<android.service.notification.ZenModeConfig$ZenRule: android.service.notification.ZenPolicy zenPolicy> = $r29;

        return $r1;
    }

    public static android.service.notification.ZenModeConfig readXml(org.xmlpull.v1.XmlPullParser) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        org.xmlpull.v1.XmlPullParser r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i10, $i11, $i12, $i13, i15, i16;
        java.lang.String $r2, $r3, $r6, $r7, $r8, $r9, $r10, $r17, $r20, $r22, $r23, r24, r25, r29, r31;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, z19, $z20, $z21, $z22;
        android.service.notification.ZenModeConfig $r4;
        java.lang.IllegalStateException $r5;
        android.util.ArrayMap $r11;
        android.service.notification.ZenModeConfig$ZenRule $r13, r32;
        java.lang.StringBuilder $r14, $r18;
        java.lang.Boolean r27, r28;

        r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        $i2 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int getEventType()>();

        if $i2 == 2 goto label01;

        return null;

     label01:
        $r2 = "zen";

        $r3 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 != 0 goto label02;

        return null;

     label02:
        $r4 = new android.service.notification.ZenModeConfig;

        specialinvoke $r4.<android.service.notification.ZenModeConfig: void <init>()>();

        $i3 = staticinvoke <android.service.notification.ZenModeConfig: int safeInt(org.xmlpull.v1.XmlPullParser,java.lang.String,int)>(r0, "version", 8);

        $r4.<android.service.notification.ZenModeConfig: int version> = $i3;

        $i4 = $r4.<android.service.notification.ZenModeConfig: int user>;

        $i5 = staticinvoke <android.service.notification.ZenModeConfig: int safeInt(org.xmlpull.v1.XmlPullParser,java.lang.String,int)>(r0, "user", $i4);

        $r4.<android.service.notification.ZenModeConfig: int user> = $i5;

        z19 = 0;

     label03:
        i15 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int next()>();

        if i15 == 1 goto label16;

        r24 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        if i15 != 3 goto label04;

        $r23 = "zen";

        $z18 = virtualinvoke $r23.<java.lang.String: boolean equals(java.lang.Object)>(r24);

        if $z18 == 0 goto label04;

        return $r4;

     label04:
        if i15 != 2 goto label03;

        $r6 = "allow";

        $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r24);

        if $z1 == 0 goto label11;

        $z7 = staticinvoke <android.service.notification.ZenModeConfig: boolean safeBoolean(org.xmlpull.v1.XmlPullParser,java.lang.String,boolean)>(r0, "calls", 1);

        $r4.<android.service.notification.ZenModeConfig: boolean allowCalls> = $z7;

        $z8 = staticinvoke <android.service.notification.ZenModeConfig: boolean safeBoolean(org.xmlpull.v1.XmlPullParser,java.lang.String,boolean)>(r0, "repeatCallers", 1);

        $r4.<android.service.notification.ZenModeConfig: boolean allowRepeatCallers> = $z8;

        $z9 = staticinvoke <android.service.notification.ZenModeConfig: boolean safeBoolean(org.xmlpull.v1.XmlPullParser,java.lang.String,boolean)>(r0, "messages", 0);

        $r4.<android.service.notification.ZenModeConfig: boolean allowMessages> = $z9;

        $z10 = staticinvoke <android.service.notification.ZenModeConfig: boolean safeBoolean(org.xmlpull.v1.XmlPullParser,java.lang.String,boolean)>(r0, "reminders", 0);

        $r4.<android.service.notification.ZenModeConfig: boolean allowReminders> = $z10;

        $z11 = staticinvoke <android.service.notification.ZenModeConfig: boolean safeBoolean(org.xmlpull.v1.XmlPullParser,java.lang.String,boolean)>(r0, "convos", 0);

        $r4.<android.service.notification.ZenModeConfig: boolean allowConversations> = $z11;

        $z12 = staticinvoke <android.service.notification.ZenModeConfig: boolean safeBoolean(org.xmlpull.v1.XmlPullParser,java.lang.String,boolean)>(r0, "events", 0);

        $r4.<android.service.notification.ZenModeConfig: boolean allowEvents> = $z12;

        i16 = staticinvoke <android.service.notification.ZenModeConfig: int safeInt(org.xmlpull.v1.XmlPullParser,java.lang.String,int)>(r0, "from", -1);

        i0 = staticinvoke <android.service.notification.ZenModeConfig: int safeInt(org.xmlpull.v1.XmlPullParser,java.lang.String,int)>(r0, "callsFrom", -1);

        i1 = staticinvoke <android.service.notification.ZenModeConfig: int safeInt(org.xmlpull.v1.XmlPullParser,java.lang.String,int)>(r0, "messagesFrom", -1);

        $i7 = staticinvoke <android.service.notification.ZenModeConfig: int safeInt(org.xmlpull.v1.XmlPullParser,java.lang.String,int)>(r0, "convosFrom", 3);

        $r4.<android.service.notification.ZenModeConfig: int allowConversationsFrom> = $i7;

        $z13 = staticinvoke <android.service.notification.ZenModeConfig: boolean isValidSource(int)>(i0);

        if $z13 == 0 goto label05;

        $z17 = staticinvoke <android.service.notification.ZenModeConfig: boolean isValidSource(int)>(i1);

        if $z17 == 0 goto label05;

        $r4.<android.service.notification.ZenModeConfig: int allowCallsFrom> = i0;

        $r4.<android.service.notification.ZenModeConfig: int allowMessagesFrom> = i1;

        goto label07;

     label05:
        $z14 = staticinvoke <android.service.notification.ZenModeConfig: boolean isValidSource(int)>(i16);

        if $z14 == 0 goto label06;

        r25 = <android.service.notification.ZenModeConfig: java.lang.String TAG>;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Migrating existing shared \'from\': ");

        $r20 = staticinvoke <android.service.notification.ZenModeConfig: java.lang.String sourceToString(int)>(i16);

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>(r25, $r22);

        $r4.<android.service.notification.ZenModeConfig: int allowCallsFrom> = i16;

        $r4.<android.service.notification.ZenModeConfig: int allowMessagesFrom> = i16;

        goto label07;

     label06:
        $r4.<android.service.notification.ZenModeConfig: int allowCallsFrom> = 2;

        $r4.<android.service.notification.ZenModeConfig: int allowMessagesFrom> = 1;

     label07:
        $z20 = staticinvoke <android.service.notification.ZenModeConfig: boolean safeBoolean(org.xmlpull.v1.XmlPullParser,java.lang.String,boolean)>(r0, "alarms", 1);

        $r4.<android.service.notification.ZenModeConfig: boolean allowAlarms> = $z20;

        $z21 = staticinvoke <android.service.notification.ZenModeConfig: boolean safeBoolean(org.xmlpull.v1.XmlPullParser,java.lang.String,boolean)>(r0, "media", 1);

        $r4.<android.service.notification.ZenModeConfig: boolean allowMedia> = $z21;

        $z22 = staticinvoke <android.service.notification.ZenModeConfig: boolean safeBoolean(org.xmlpull.v1.XmlPullParser,java.lang.String,boolean)>(r0, "system", 0);

        $r4.<android.service.notification.ZenModeConfig: boolean allowSystem> = $z22;

        r27 = staticinvoke <android.service.notification.ZenModeConfig: java.lang.Boolean unsafeBoolean(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r0, "visualScreenOff");

        if r27 == null goto label08;

        z19 = 1;

        $z16 = virtualinvoke r27.<java.lang.Boolean: boolean booleanValue()>();

        if $z16 != 0 goto label08;

        $i12 = $r4.<android.service.notification.ZenModeConfig: int suppressedVisualEffects>;

        $i13 = $i12 | 12;

        $r4.<android.service.notification.ZenModeConfig: int suppressedVisualEffects> = $i13;

        z19 = 1;

     label08:
        r28 = staticinvoke <android.service.notification.ZenModeConfig: java.lang.Boolean unsafeBoolean(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r0, "visualScreenOn");

        if r28 == null goto label09;

        z19 = 1;

        $z15 = virtualinvoke r28.<java.lang.Boolean: boolean booleanValue()>();

        if $z15 != 0 goto label09;

        $i10 = $r4.<android.service.notification.ZenModeConfig: int suppressedVisualEffects>;

        $i11 = $i10 | 16;

        $r4.<android.service.notification.ZenModeConfig: int suppressedVisualEffects> = $i11;

        z19 = 1;

     label09:
        if z19 == 0 goto label10;

        r29 = <android.service.notification.ZenModeConfig: java.lang.String TAG>;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Migrated visual effects to ");

        $i8 = $r4.<android.service.notification.ZenModeConfig: int suppressedVisualEffects>;

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8);

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>(r29, $r17);

     label10:
        goto label03;

     label11:
        $r7 = "disallow";

        $z2 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r24);

        if $z2 == 0 goto label12;

        if z19 != 0 goto label12;

        $i6 = staticinvoke <android.service.notification.ZenModeConfig: int safeInt(org.xmlpull.v1.XmlPullParser,java.lang.String,int)>(r0, "visualEffects", 0);

        $r4.<android.service.notification.ZenModeConfig: int suppressedVisualEffects> = $i6;

        goto label03;

     label12:
        $r8 = "manual";

        $z3 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>(r24);

        if $z3 == 0 goto label13;

        $r13 = staticinvoke <android.service.notification.ZenModeConfig: android.service.notification.ZenModeConfig$ZenRule readRuleXml(org.xmlpull.v1.XmlPullParser)>(r0);

        $r4.<android.service.notification.ZenModeConfig: android.service.notification.ZenModeConfig$ZenRule manualRule> = $r13;

        goto label03;

     label13:
        $r9 = "automatic";

        $z4 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>(r24);

        if $z4 == 0 goto label14;

        r31 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "ruleId");

        r32 = staticinvoke <android.service.notification.ZenModeConfig: android.service.notification.ZenModeConfig$ZenRule readRuleXml(org.xmlpull.v1.XmlPullParser)>(r0);

        if r31 == null goto label15;

        if r32 == null goto label15;

        r32.<android.service.notification.ZenModeConfig$ZenRule: java.lang.String id> = r31;

        $r11 = $r4.<android.service.notification.ZenModeConfig: android.util.ArrayMap automaticRules>;

        virtualinvoke $r11.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r31, r32);

        goto label15;

     label14:
        $r10 = "state";

        $z5 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>(r24);

        if $z5 == 0 goto label15;

        $z6 = staticinvoke <android.service.notification.ZenModeConfig: boolean safeBoolean(org.xmlpull.v1.XmlPullParser,java.lang.String,boolean)>(r0, "areChannelsBypassingDnd", 0);

        $r4.<android.service.notification.ZenModeConfig: boolean areChannelsBypassingDnd> = $z6;

        goto label03;

     label15:
        goto label03;

     label16:
        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Failed to reach END_DOCUMENT");

        throw $r5;
    }

    public static android.service.notification.ZenPolicy readZenPolicyXml(org.xmlpull.v1.XmlPullParser)
    {
        org.xmlpull.v1.XmlPullParser r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, i13, i14;
        android.service.notification.ZenPolicy$Builder $r2;
        android.service.notification.ZenPolicy $r3;
        boolean z0, z1, z2, z3, z4, z5, z6, z7, z8, z9, z10, z11, z12, z13;

        r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        z0 = 0;

        $r2 = new android.service.notification.ZenPolicy$Builder;

        specialinvoke $r2.<android.service.notification.ZenPolicy$Builder: void <init>()>();

        i0 = staticinvoke <android.service.notification.ZenModeConfig: int safeInt(org.xmlpull.v1.XmlPullParser,java.lang.String,int)>(r0, "callsFrom", 0);

        i1 = staticinvoke <android.service.notification.ZenModeConfig: int safeInt(org.xmlpull.v1.XmlPullParser,java.lang.String,int)>(r0, "messagesFrom", 0);

        i2 = staticinvoke <android.service.notification.ZenModeConfig: int safeInt(org.xmlpull.v1.XmlPullParser,java.lang.String,int)>(r0, "repeatCallers", 0);

        i3 = staticinvoke <android.service.notification.ZenModeConfig: int safeInt(org.xmlpull.v1.XmlPullParser,java.lang.String,int)>(r0, "alarms", 0);

        i4 = staticinvoke <android.service.notification.ZenModeConfig: int safeInt(org.xmlpull.v1.XmlPullParser,java.lang.String,int)>(r0, "media", 0);

        i5 = staticinvoke <android.service.notification.ZenModeConfig: int safeInt(org.xmlpull.v1.XmlPullParser,java.lang.String,int)>(r0, "system", 0);

        i6 = staticinvoke <android.service.notification.ZenModeConfig: int safeInt(org.xmlpull.v1.XmlPullParser,java.lang.String,int)>(r0, "events", 0);

        i7 = staticinvoke <android.service.notification.ZenModeConfig: int safeInt(org.xmlpull.v1.XmlPullParser,java.lang.String,int)>(r0, "reminders", 0);

        if i0 == 0 goto label01;

        virtualinvoke $r2.<android.service.notification.ZenPolicy$Builder: android.service.notification.ZenPolicy$Builder allowCalls(int)>(i0);

        z0 = 1;

     label01:
        if i1 == 0 goto label02;

        virtualinvoke $r2.<android.service.notification.ZenPolicy$Builder: android.service.notification.ZenPolicy$Builder allowMessages(int)>(i1);

        z0 = 1;

     label02:
        if i2 == 0 goto label05;

        if i2 != 1 goto label03;

        z1 = 1;

        goto label04;

     label03:
        z1 = 0;

     label04:
        virtualinvoke $r2.<android.service.notification.ZenPolicy$Builder: android.service.notification.ZenPolicy$Builder allowRepeatCallers(boolean)>(z1);

        z0 = 1;

     label05:
        if i3 == 0 goto label08;

        if i3 != 1 goto label06;

        z2 = 1;

        goto label07;

     label06:
        z2 = 0;

     label07:
        virtualinvoke $r2.<android.service.notification.ZenPolicy$Builder: android.service.notification.ZenPolicy$Builder allowAlarms(boolean)>(z2);

        z0 = 1;

     label08:
        if i4 == 0 goto label11;

        if i4 != 1 goto label09;

        z3 = 1;

        goto label10;

     label09:
        z3 = 0;

     label10:
        virtualinvoke $r2.<android.service.notification.ZenPolicy$Builder: android.service.notification.ZenPolicy$Builder allowMedia(boolean)>(z3);

        z0 = 1;

     label11:
        if i5 == 0 goto label14;

        if i5 != 1 goto label12;

        z4 = 1;

        goto label13;

     label12:
        z4 = 0;

     label13:
        virtualinvoke $r2.<android.service.notification.ZenPolicy$Builder: android.service.notification.ZenPolicy$Builder allowSystem(boolean)>(z4);

        z0 = 1;

     label14:
        if i6 == 0 goto label17;

        if i6 != 1 goto label15;

        z5 = 1;

        goto label16;

     label15:
        z5 = 0;

     label16:
        virtualinvoke $r2.<android.service.notification.ZenPolicy$Builder: android.service.notification.ZenPolicy$Builder allowEvents(boolean)>(z5);

        z0 = 1;

     label17:
        if i7 == 0 goto label20;

        if i7 != 1 goto label18;

        z6 = 1;

        goto label19;

     label18:
        z6 = 0;

     label19:
        virtualinvoke $r2.<android.service.notification.ZenPolicy$Builder: android.service.notification.ZenPolicy$Builder allowReminders(boolean)>(z6);

        z0 = 1;

     label20:
        i8 = staticinvoke <android.service.notification.ZenModeConfig: int safeInt(org.xmlpull.v1.XmlPullParser,java.lang.String,int)>(r0, "showFullScreenIntent", 0);

        i9 = staticinvoke <android.service.notification.ZenModeConfig: int safeInt(org.xmlpull.v1.XmlPullParser,java.lang.String,int)>(r0, "showLights", 0);

        i10 = staticinvoke <android.service.notification.ZenModeConfig: int safeInt(org.xmlpull.v1.XmlPullParser,java.lang.String,int)>(r0, "shoePeek", 0);

        i11 = staticinvoke <android.service.notification.ZenModeConfig: int safeInt(org.xmlpull.v1.XmlPullParser,java.lang.String,int)>(r0, "showStatusBarIcons", 0);

        i12 = staticinvoke <android.service.notification.ZenModeConfig: int safeInt(org.xmlpull.v1.XmlPullParser,java.lang.String,int)>(r0, "showBadges", 0);

        i13 = staticinvoke <android.service.notification.ZenModeConfig: int safeInt(org.xmlpull.v1.XmlPullParser,java.lang.String,int)>(r0, "showAmbient", 0);

        i14 = staticinvoke <android.service.notification.ZenModeConfig: int safeInt(org.xmlpull.v1.XmlPullParser,java.lang.String,int)>(r0, "showNotificationList", 0);

        if i8 == 0 goto label23;

        if i8 != 1 goto label21;

        z7 = 1;

        goto label22;

     label21:
        z7 = 0;

     label22:
        virtualinvoke $r2.<android.service.notification.ZenPolicy$Builder: android.service.notification.ZenPolicy$Builder showFullScreenIntent(boolean)>(z7);

        z0 = 1;

     label23:
        if i9 == 0 goto label26;

        if i9 != 1 goto label24;

        z8 = 1;

        goto label25;

     label24:
        z8 = 0;

     label25:
        virtualinvoke $r2.<android.service.notification.ZenPolicy$Builder: android.service.notification.ZenPolicy$Builder showLights(boolean)>(z8);

        z0 = 1;

     label26:
        if i10 == 0 goto label29;

        if i10 != 1 goto label27;

        z9 = 1;

        goto label28;

     label27:
        z9 = 0;

     label28:
        virtualinvoke $r2.<android.service.notification.ZenPolicy$Builder: android.service.notification.ZenPolicy$Builder showPeeking(boolean)>(z9);

        z0 = 1;

     label29:
        if i11 == 0 goto label32;

        if i11 != 1 goto label30;

        z10 = 1;

        goto label31;

     label30:
        z10 = 0;

     label31:
        virtualinvoke $r2.<android.service.notification.ZenPolicy$Builder: android.service.notification.ZenPolicy$Builder showStatusBarIcons(boolean)>(z10);

        z0 = 1;

     label32:
        if i12 == 0 goto label35;

        if i12 != 1 goto label33;

        z11 = 1;

        goto label34;

     label33:
        z11 = 0;

     label34:
        virtualinvoke $r2.<android.service.notification.ZenPolicy$Builder: android.service.notification.ZenPolicy$Builder showBadges(boolean)>(z11);

        z0 = 1;

     label35:
        if i13 == 0 goto label38;

        if i13 != 1 goto label36;

        z12 = 1;

        goto label37;

     label36:
        z12 = 0;

     label37:
        virtualinvoke $r2.<android.service.notification.ZenPolicy$Builder: android.service.notification.ZenPolicy$Builder showInAmbientDisplay(boolean)>(z12);

        z0 = 1;

     label38:
        if i14 == 0 goto label41;

        z13 = 1;

        if i14 != 1 goto label39;

        goto label40;

     label39:
        z13 = 0;

     label40:
        virtualinvoke $r2.<android.service.notification.ZenPolicy$Builder: android.service.notification.ZenPolicy$Builder showInNotificationList(boolean)>(z13);

        z0 = 1;

     label41:
        if z0 == 0 goto label42;

        $r3 = virtualinvoke $r2.<android.service.notification.ZenPolicy$Builder: android.service.notification.ZenPolicy build()>();

        return $r3;

     label42:
        return null;
    }

    private java.lang.String rulesToString()
    {
        android.service.notification.ZenModeConfig r0;
        android.util.ArrayMap $r2, $r4, $r6, $r9;
        boolean $z0;
        java.lang.StringBuilder $r3;
        int $i0, $i1, $i2, i3;
        java.lang.String $r8;
        java.lang.Object $r10;

        r0 := @this: android.service.notification.ZenModeConfig;

        $r2 = r0.<android.service.notification.ZenModeConfig: android.util.ArrayMap automaticRules>;

        $z0 = virtualinvoke $r2.<android.util.ArrayMap: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return "{}";

     label1:
        $r3 = new java.lang.StringBuilder;

        $r4 = r0.<android.service.notification.ZenModeConfig: android.util.ArrayMap automaticRules>;

        $i0 = virtualinvoke $r4.<android.util.ArrayMap: int size()>();

        $i1 = $i0 * 28;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(int)>($i1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(123);

        i3 = 0;

     label2:
        $r6 = r0.<android.service.notification.ZenModeConfig: android.util.ArrayMap automaticRules>;

        $i2 = virtualinvoke $r6.<android.util.ArrayMap: int size()>();

        if i3 >= $i2 goto label4;

        if i3 <= 0 goto label3;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",\n");

     label3:
        $r9 = r0.<android.service.notification.ZenModeConfig: android.util.ArrayMap automaticRules>;

        $r10 = virtualinvoke $r9.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i3);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10);

        i3 = i3 + 1;

        goto label2;

     label4:
        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(125);

        $r8 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }

    private static boolean safeBoolean(java.lang.String, boolean)
    {
        java.lang.String r0;
        boolean z0, $z1, $z2;

        r0 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r0);

        if $z1 == 0 goto label1;

        return z0;

     label1:
        $z2 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>(r0);

        return $z2;
    }

    private static boolean safeBoolean(org.xmlpull.v1.XmlPullParser, java.lang.String, boolean)
    {
        org.xmlpull.v1.XmlPullParser r0;
        java.lang.String r1, $r2;
        boolean z0, $z1;

        r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r1 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        $r2 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, r1);

        $z1 = staticinvoke <android.service.notification.ZenModeConfig: boolean safeBoolean(java.lang.String,boolean)>($r2, z0);

        return $z1;
    }

    private static android.content.ComponentName safeComponentName(org.xmlpull.v1.XmlPullParser, java.lang.String)
    {
        java.lang.String r0, r3;
        boolean $z0;
        android.content.ComponentName $r1;
        org.xmlpull.v1.XmlPullParser r2;

        r2 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r0 := @parameter1: java.lang.String;

        r3 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, r0);

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r3);

        if $z0 == 0 goto label1;

        return null;

     label1:
        $r1 = staticinvoke <android.content.ComponentName: android.content.ComponentName unflattenFromString(java.lang.String)>(r3);

        return $r1;
    }

    private static int safeInt(org.xmlpull.v1.XmlPullParser, java.lang.String, int)
    {
        org.xmlpull.v1.XmlPullParser r0;
        java.lang.String r1, $r2;
        int i0, $i1;

        r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $r2 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, r1);

        $i1 = staticinvoke <android.service.notification.ZenModeConfig: int tryParseInt(java.lang.String,int)>($r2, i0);

        return $i1;
    }

    private static long safeLong(org.xmlpull.v1.XmlPullParser, java.lang.String, long)
    {
        org.xmlpull.v1.XmlPullParser r0;
        java.lang.String r1, $r2;
        long l0, $l1;

        r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r1 := @parameter1: java.lang.String;

        l0 := @parameter2: long;

        $r2 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, r1);

        $l1 = staticinvoke <android.service.notification.ZenModeConfig: long tryParseLong(java.lang.String,long)>($r2, l0);

        return $l1;
    }

    private static android.net.Uri safeUri(org.xmlpull.v1.XmlPullParser, java.lang.String)
    {
        java.lang.String r0, r3;
        boolean $z0;
        android.net.Uri $r1;
        org.xmlpull.v1.XmlPullParser r2;

        r2 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r0 := @parameter1: java.lang.String;

        r3 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, r0);

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r3);

        if $z0 == 0 goto label1;

        return null;

     label1:
        $r1 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>(r3);

        return $r1;
    }

    private static boolean sameCondition(android.service.notification.ZenModeConfig$ZenRule)
    {
        android.service.notification.ZenModeConfig$ZenRule r0;
        android.net.Uri $r1, $r4, $r5;
        android.service.notification.Condition $r2, $r3, $r6;
        boolean $z1, z2, z3;

        r0 := @parameter0: android.service.notification.ZenModeConfig$ZenRule;

        z2 = 0;

        if r0 != null goto label1;

        return 0;

     label1:
        $r1 = r0.<android.service.notification.ZenModeConfig$ZenRule: android.net.Uri conditionId>;

        if $r1 != null goto label3;

        $r6 = r0.<android.service.notification.ZenModeConfig$ZenRule: android.service.notification.Condition condition>;

        if $r6 != null goto label2;

        z2 = 1;

     label2:
        return z2;

     label3:
        $r2 = r0.<android.service.notification.ZenModeConfig$ZenRule: android.service.notification.Condition condition>;

        if $r2 == null goto label4;

        z3 = 0;

        $r5 = r0.<android.service.notification.ZenModeConfig$ZenRule: android.net.Uri conditionId>;

        $r3 = r0.<android.service.notification.ZenModeConfig$ZenRule: android.service.notification.Condition condition>;

        $r4 = $r3.<android.service.notification.Condition: android.net.Uri id>;

        $z1 = virtualinvoke $r5.<android.net.Uri: boolean equals(java.lang.Object)>($r4);

        if $z1 == 0 goto label5;

     label4:
        z3 = 1;

     label5:
        return z3;
    }

    private static int sourceToPrioritySenders(int, int)
    {
        int i0, i1;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i0 == 0 goto label3;

        if i0 == 1 goto label2;

        if i0 == 2 goto label1;

        return i1;

     label1:
        return 2;

     label2:
        return 1;

     label3:
        return 0;
    }

    public static java.lang.String sourceToString(int)
    {
        int i0;

        i0 := @parameter0: int;

        if i0 == 0 goto label3;

        if i0 == 1 goto label2;

        if i0 == 2 goto label1;

        return "UNKNOWN";

     label1:
        return "stars";

     label2:
        return "contacts";

     label3:
        return "anyone";
    }

    public static android.net.Uri toCountdownConditionId(long, boolean)
    {
        long l0;
        boolean z0;
        android.net.Uri$Builder $r0, $r1, $r2, $r3, $r5, $r6, $r8;
        java.lang.String $r4, $r7;
        android.net.Uri $r9;

        l0 := @parameter0: long;

        z0 := @parameter1: boolean;

        $r0 = new android.net.Uri$Builder;

        specialinvoke $r0.<android.net.Uri$Builder: void <init>()>();

        $r1 = virtualinvoke $r0.<android.net.Uri$Builder: android.net.Uri$Builder scheme(java.lang.String)>("condition");

        $r2 = virtualinvoke $r1.<android.net.Uri$Builder: android.net.Uri$Builder authority(java.lang.String)>("android");

        $r3 = virtualinvoke $r2.<android.net.Uri$Builder: android.net.Uri$Builder appendPath(java.lang.String)>("countdown");

        $r4 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0);

        $r5 = virtualinvoke $r3.<android.net.Uri$Builder: android.net.Uri$Builder appendPath(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<android.net.Uri$Builder: android.net.Uri$Builder appendPath(java.lang.String)>("alarm");

        $r7 = staticinvoke <java.lang.Boolean: java.lang.String toString(boolean)>(z0);

        $r8 = virtualinvoke $r6.<android.net.Uri$Builder: android.net.Uri$Builder appendPath(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<android.net.Uri$Builder: android.net.Uri build()>();

        return $r9;
    }

    private static java.lang.String toDayList(int[])
    {
        int[] r0;
        int $i0, $i1, $i2, i3;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;

        r0 := @parameter0: int[];

        if r0 == null goto label5;

        $i0 = lengthof r0;

        if $i0 != 0 goto label1;

        goto label5;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        i3 = 0;

     label2:
        $i1 = lengthof r0;

        if i3 >= $i1 goto label4;

        if i3 <= 0 goto label3;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);

     label3:
        $i2 = r0[i3];

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        i3 = i3 + 1;

        goto label2;

     label4:
        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;

     label5:
        return "";
    }

    public static android.net.Uri toEventConditionId(android.service.notification.ZenModeConfig$EventInfo)
    {
        android.service.notification.ZenModeConfig$EventInfo r0;
        android.net.Uri$Builder $r2, $r3, $r4, $r5, $r8, $r10, r13, r16;
        int $i0, $i2;
        long $l1;
        java.lang.String $r6, $r9, r14, r15, r17;
        java.lang.Long $r7, $r12;
        android.net.Uri $r11;

        r0 := @parameter0: android.service.notification.ZenModeConfig$EventInfo;

        $r2 = new android.net.Uri$Builder;

        specialinvoke $r2.<android.net.Uri$Builder: void <init>()>();

        $r3 = virtualinvoke $r2.<android.net.Uri$Builder: android.net.Uri$Builder scheme(java.lang.String)>("condition");

        $r4 = virtualinvoke $r3.<android.net.Uri$Builder: android.net.Uri$Builder authority(java.lang.String)>("android");

        $r5 = virtualinvoke $r4.<android.net.Uri$Builder: android.net.Uri$Builder appendPath(java.lang.String)>("event");

        $i0 = r0.<android.service.notification.ZenModeConfig$EventInfo: int userId>;

        $l1 = (long) $i0;

        $r6 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l1);

        r13 = virtualinvoke $r5.<android.net.Uri$Builder: android.net.Uri$Builder appendQueryParameter(java.lang.String,java.lang.String)>("userId", $r6);

        r14 = r0.<android.service.notification.ZenModeConfig$EventInfo: java.lang.String calName>;

        if r14 == null goto label1;

        r15 = r0.<android.service.notification.ZenModeConfig$EventInfo: java.lang.String calName>;

        goto label2;

     label1:
        r15 = "";

     label2:
        r16 = virtualinvoke r13.<android.net.Uri$Builder: android.net.Uri$Builder appendQueryParameter(java.lang.String,java.lang.String)>("calendar", r15);

        $r7 = r0.<android.service.notification.ZenModeConfig$EventInfo: java.lang.Long calendarId>;

        if $r7 == null goto label3;

        $r12 = r0.<android.service.notification.ZenModeConfig$EventInfo: java.lang.Long calendarId>;

        r17 = virtualinvoke $r12.<java.lang.Long: java.lang.String toString()>();

        goto label4;

     label3:
        r17 = "";

     label4:
        $r8 = virtualinvoke r16.<android.net.Uri$Builder: android.net.Uri$Builder appendQueryParameter(java.lang.String,java.lang.String)>("calendarId", r17);

        $i2 = r0.<android.service.notification.ZenModeConfig$EventInfo: int reply>;

        $r9 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i2);

        $r10 = virtualinvoke $r8.<android.net.Uri$Builder: android.net.Uri$Builder appendQueryParameter(java.lang.String,java.lang.String)>("reply", $r9);

        $r11 = virtualinvoke $r10.<android.net.Uri$Builder: android.net.Uri build()>();

        return $r11;
    }

    public static android.service.notification.Condition toNextAlarmCondition(android.content.Context, long, int)
    {
        long l0;
        int i1;
        java.lang.CharSequence r0;
        boolean $z0;
        android.content.res.Resources $r1;
        java.lang.Object[] $r2;
        android.service.notification.Condition $r3;
        android.net.Uri $r4;
        android.content.Context r5;
        java.lang.String r6;

        r5 := @parameter0: android.content.Context;

        l0 := @parameter1: long;

        i1 := @parameter2: int;

        $z0 = staticinvoke <android.service.notification.ZenModeConfig: boolean isToday(long)>(l0);

        r0 = staticinvoke <android.service.notification.ZenModeConfig: java.lang.CharSequence getFormattedTime(android.content.Context,long,boolean,int)>(r5, l0, $z0, i1);

        $r1 = virtualinvoke r5.<android.content.Context: android.content.res.Resources getResources()>();

        $r2 = newarray (java.lang.Object)[1];

        $r2[0] = r0;

        r6 = virtualinvoke $r1.<android.content.res.Resources: java.lang.String getString(int,java.lang.Object[])>(17041513, $r2);

        $r3 = new android.service.notification.Condition;

        $r4 = staticinvoke <android.service.notification.ZenModeConfig: android.net.Uri toCountdownConditionId(long,boolean)>(l0, 1);

        specialinvoke $r3.<android.service.notification.Condition: void <init>(android.net.Uri,java.lang.String,java.lang.String,java.lang.String,int,int,int)>($r4, "", r6, "", 0, 1, 1);

        return $r3;
    }

    public static android.service.notification.ScheduleCalendar toScheduleCalendar(android.net.Uri)
    {
        int[] $r1, $r2;
        int $i0;
        android.service.notification.ScheduleCalendar $r3;
        java.util.TimeZone $r4;
        android.net.Uri r5;
        android.service.notification.ZenModeConfig$ScheduleInfo r6;

        r5 := @parameter0: android.net.Uri;

        r6 = staticinvoke <android.service.notification.ZenModeConfig: android.service.notification.ZenModeConfig$ScheduleInfo tryParseScheduleConditionId(android.net.Uri)>(r5);

        if r6 == null goto label2;

        $r1 = r6.<android.service.notification.ZenModeConfig$ScheduleInfo: int[] days>;

        if $r1 == null goto label2;

        $r2 = r6.<android.service.notification.ZenModeConfig$ScheduleInfo: int[] days>;

        $i0 = lengthof $r2;

        if $i0 != 0 goto label1;

        goto label2;

     label1:
        $r3 = new android.service.notification.ScheduleCalendar;

        specialinvoke $r3.<android.service.notification.ScheduleCalendar: void <init>()>();

        virtualinvoke $r3.<android.service.notification.ScheduleCalendar: void setSchedule(android.service.notification.ZenModeConfig$ScheduleInfo)>(r6);

        $r4 = staticinvoke <java.util.TimeZone: java.util.TimeZone getDefault()>();

        virtualinvoke $r3.<android.service.notification.ScheduleCalendar: void setTimeZone(java.util.TimeZone)>($r4);

        return $r3;

     label2:
        return null;
    }

    public static android.net.Uri toScheduleConditionId(android.service.notification.ZenModeConfig$ScheduleInfo)
    {
        android.service.notification.ZenModeConfig$ScheduleInfo r0;
        android.net.Uri$Builder $r1, $r2, $r3, $r4, $r17, $r19, r21, r23;
        int[] $r5;
        java.lang.String $r6, $r11, $r16, $r18;
        java.lang.StringBuilder $r7, $r12;
        int $i0, $i1, $i2, $i3;
        boolean $z0;
        android.net.Uri $r20;

        r0 := @parameter0: android.service.notification.ZenModeConfig$ScheduleInfo;

        $r1 = new android.net.Uri$Builder;

        specialinvoke $r1.<android.net.Uri$Builder: void <init>()>();

        $r2 = virtualinvoke $r1.<android.net.Uri$Builder: android.net.Uri$Builder scheme(java.lang.String)>("condition");

        $r3 = virtualinvoke $r2.<android.net.Uri$Builder: android.net.Uri$Builder authority(java.lang.String)>("android");

        $r4 = virtualinvoke $r3.<android.net.Uri$Builder: android.net.Uri$Builder appendPath(java.lang.String)>("schedule");

        $r5 = r0.<android.service.notification.ZenModeConfig$ScheduleInfo: int[] days>;

        $r6 = staticinvoke <android.service.notification.ZenModeConfig: java.lang.String toDayList(int[])>($r5);

        r21 = virtualinvoke $r4.<android.net.Uri$Builder: android.net.Uri$Builder appendQueryParameter(java.lang.String,java.lang.String)>("days", $r6);

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $i0 = r0.<android.service.notification.ZenModeConfig$ScheduleInfo: int startHour>;

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $i1 = r0.<android.service.notification.ZenModeConfig$ScheduleInfo: int startMinute>;

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r11 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        r23 = virtualinvoke r21.<android.net.Uri$Builder: android.net.Uri$Builder appendQueryParameter(java.lang.String,java.lang.String)>("start", $r11);

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $i2 = r0.<android.service.notification.ZenModeConfig$ScheduleInfo: int endHour>;

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $i3 = r0.<android.service.notification.ZenModeConfig$ScheduleInfo: int endMinute>;

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r16 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        $r17 = virtualinvoke r23.<android.net.Uri$Builder: android.net.Uri$Builder appendQueryParameter(java.lang.String,java.lang.String)>("end", $r16);

        $z0 = r0.<android.service.notification.ZenModeConfig$ScheduleInfo: boolean exitAtAlarm>;

        $r18 = staticinvoke <java.lang.String: java.lang.String valueOf(boolean)>($z0);

        $r19 = virtualinvoke $r17.<android.net.Uri$Builder: android.net.Uri$Builder appendQueryParameter(java.lang.String,java.lang.String)>("exitAtAlarm", $r18);

        $r20 = virtualinvoke $r19.<android.net.Uri$Builder: android.net.Uri build()>();

        return $r20;
    }

    public static android.service.notification.Condition toTimeCondition(android.content.Context, int, int)
    {
        android.content.Context r0;
        int i0, i1;
        android.service.notification.Condition $r1;

        r0 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r1 = staticinvoke <android.service.notification.ZenModeConfig: android.service.notification.Condition toTimeCondition(android.content.Context,int,int,boolean)>(r0, i0, i1, 0);

        return $r1;
    }

    public static android.service.notification.Condition toTimeCondition(android.content.Context, int, int, boolean)
    {
        android.content.Context r0;
        int i0, i1, $i3;
        boolean z0;
        long l2, $l4, l5;
        android.service.notification.Condition $r1;

        r0 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        z0 := @parameter3: boolean;

        l2 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        if i0 != 0 goto label1;

        l5 = 10000L;

        goto label2;

     label1:
        $i3 = 60000 * i0;

        l5 = (long) $i3;

     label2:
        $l4 = l2 + l5;

        $r1 = staticinvoke <android.service.notification.ZenModeConfig: android.service.notification.Condition toTimeCondition(android.content.Context,long,int,int,boolean)>(r0, $l4, i0, i1, z0);

        return $r1;
    }

    public static android.service.notification.Condition toTimeCondition(android.content.Context, long, int, int, boolean)
    {
        long l0;
        boolean z0, $z1;
        java.lang.CharSequence r0;
        java.lang.Object[] $r1, $r2, $r4, $r6, $r7, $r9, $r11;
        float $f0, $f1;
        java.lang.Integer $r3, $r5, $r8, $r10;
        android.content.Context r12;
        int i1, i2, i3, i4, i5, i6, i7;
        android.content.res.Resources r13;
        java.lang.String r14, r15, r16;
        android.service.notification.Condition $r17;
        android.net.Uri $r18;

        r12 := @parameter0: android.content.Context;

        l0 := @parameter1: long;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        z0 := @parameter4: boolean;

        $z1 = staticinvoke <android.service.notification.ZenModeConfig: boolean isToday(long)>(l0);

        r0 = staticinvoke <android.service.notification.ZenModeConfig: java.lang.CharSequence getFormattedTime(android.content.Context,long,boolean,int)>(r12, l0, $z1, i2);

        r13 = virtualinvoke r12.<android.content.Context: android.content.res.Resources getResources()>();

        if i1 >= 60 goto label05;

        if z0 == 0 goto label01;

        i3 = 18153505;

        goto label02;

     label01:
        i3 = 18153504;

     label02:
        $r7 = newarray (java.lang.Object)[2];

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r7[0] = $r8;

        $r7[1] = r0;

        r14 = virtualinvoke r13.<android.content.res.Resources: java.lang.String getQuantityString(int,int,java.lang.Object[])>(i3, i1, $r7);

        if z0 == 0 goto label03;

        i4 = 18153503;

        goto label04;

     label03:
        i4 = 18153502;

     label04:
        $r9 = newarray (java.lang.Object)[2];

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r9[0] = $r10;

        $r9[1] = r0;

        r15 = virtualinvoke r13.<android.content.res.Resources: java.lang.String getQuantityString(int,int,java.lang.Object[])>(i4, i1, $r9);

        $r11 = newarray (java.lang.Object)[1];

        $r11[0] = r0;

        r16 = virtualinvoke r13.<android.content.res.Resources: java.lang.String getString(int,java.lang.Object[])>(17041513, $r11);

        goto label11;

     label05:
        if i1 >= 1440 goto label10;

        $f0 = (float) i1;

        $f1 = $f0 / 60.0F;

        i5 = staticinvoke <java.lang.Math: int round(float)>($f1);

        if z0 == 0 goto label06;

        i6 = 18153501;

        goto label07;

     label06:
        i6 = 18153500;

     label07:
        $r2 = newarray (java.lang.Object)[2];

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i5);

        $r2[0] = $r3;

        $r2[1] = r0;

        r14 = virtualinvoke r13.<android.content.res.Resources: java.lang.String getQuantityString(int,int,java.lang.Object[])>(i6, i5, $r2);

        if z0 == 0 goto label08;

        i7 = 18153499;

        goto label09;

     label08:
        i7 = 18153498;

     label09:
        $r4 = newarray (java.lang.Object)[2];

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i5);

        $r4[0] = $r5;

        $r4[1] = r0;

        r15 = virtualinvoke r13.<android.content.res.Resources: java.lang.String getQuantityString(int,int,java.lang.Object[])>(i7, i5, $r4);

        $r6 = newarray (java.lang.Object)[1];

        $r6[0] = r0;

        r16 = virtualinvoke r13.<android.content.res.Resources: java.lang.String getString(int,java.lang.Object[])>(17041513, $r6);

        goto label11;

     label10:
        $r1 = newarray (java.lang.Object)[1];

        $r1[0] = r0;

        r16 = virtualinvoke r13.<android.content.res.Resources: java.lang.String getString(int,java.lang.Object[])>(17041513, $r1);

        r14 = r16;

        r15 = r16;

     label11:
        $r17 = new android.service.notification.Condition;

        $r18 = staticinvoke <android.service.notification.ZenModeConfig: android.net.Uri toCountdownConditionId(long,boolean)>(l0, 0);

        specialinvoke $r17.<android.service.notification.Condition: void <init>(android.net.Uri,java.lang.String,java.lang.String,java.lang.String,int,int,int)>($r18, r14, r15, r16, 0, 1, 1);

        return $r17;
    }

    public static long tryParseCountdownConditionId(android.net.Uri)
    {
        android.net.Uri r0;
        long l0;
        java.lang.String r2, $r5, $r10, $r15;
        boolean $z0, $z1;
        java.util.List $r4, $r6, $r8;
        int $i1;
        java.lang.Object $r7, $r9;
        java.lang.RuntimeException $r11;
        java.lang.StringBuilder $r12;

        r0 := @parameter0: android.net.Uri;

        $z0 = staticinvoke <android.service.notification.Condition: boolean isValidId(android.net.Uri,java.lang.String)>(r0, "android");

        if $z0 != 0 goto label1;

        return 0L;

     label1:
        $r4 = virtualinvoke r0.<android.net.Uri: java.util.List getPathSegments()>();

        $i1 = interfaceinvoke $r4.<java.util.List: int size()>();

        if $i1 < 2 goto label5;

        $r5 = "countdown";

        $r6 = virtualinvoke r0.<android.net.Uri: java.util.List getPathSegments()>();

        $r7 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(0);

        $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z1 != 0 goto label2;

        goto label5;

     label2:
        $r8 = virtualinvoke r0.<android.net.Uri: java.util.List getPathSegments()>();

        $r9 = interfaceinvoke $r8.<java.util.List: java.lang.Object get(int)>(1);

        $r10 = (java.lang.String) $r9;

        l0 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r10);

     label3:
        return l0;

     label4:
        $r11 := @caughtexception;

        r2 = <android.service.notification.ZenModeConfig: java.lang.String TAG>;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error parsing countdown condition: ");

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>(r2, $r15, $r11);

        return 0L;

     label5:
        return 0L;

        catch java.lang.RuntimeException from label2 to label3 with label4;
    }

    private static int[] tryParseDayList(java.lang.String, java.lang.String)
    {
        int i0, $i1, $i2, $i3, i4;
        java.lang.String $r0, r1, r2;
        java.lang.String[] r3;
        int[] r4;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        if r1 != null goto label1;

        return null;

     label1:
        r3 = virtualinvoke r1.<java.lang.String: java.lang.String[] split(java.lang.String)>(r2);

        $i1 = lengthof r3;

        if $i1 != 0 goto label2;

        return null;

     label2:
        $i2 = lengthof r3;

        r4 = newarray (int)[$i2];

        i4 = 0;

     label3:
        $i3 = lengthof r3;

        if i4 >= $i3 goto label5;

        $r0 = r3[i4];

        i0 = staticinvoke <android.service.notification.ZenModeConfig: int tryParseInt(java.lang.String,int)>($r0, -1);

        if i0 != -1 goto label4;

        return null;

     label4:
        r4[i4] = i0;

        i4 = i4 + 1;

        goto label3;

     label5:
        return r4;
    }

    public static android.service.notification.ZenModeConfig$EventInfo tryParseEventConditionId(android.net.Uri)
    {
        android.net.Uri r0;
        android.service.notification.ZenModeConfig$EventInfo $r2;
        java.lang.String $r3, $r4, $r5, $r6, $r8, $r9, $r10, $r11, $r12, $r14;
        int $i0, $i1, $i2;
        boolean $z0, $z1, $z2, $z3, z4;
        java.lang.Long $r7;
        java.util.List $r13, $r15;
        java.lang.Object $r16;

        r0 := @parameter0: android.net.Uri;

        z4 = 1;

        if r0 == null goto label1;

        $r9 = "condition";

        $r10 = virtualinvoke r0.<android.net.Uri: java.lang.String getScheme()>();

        $z1 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>($r10);

        if $z1 == 0 goto label1;

        $r11 = "android";

        $r12 = virtualinvoke r0.<android.net.Uri: java.lang.String getAuthority()>();

        $z2 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>($r12);

        if $z2 == 0 goto label1;

        $r13 = virtualinvoke r0.<android.net.Uri: java.util.List getPathSegments()>();

        $i2 = interfaceinvoke $r13.<java.util.List: int size()>();

        if $i2 != 1 goto label1;

        $r14 = "event";

        $r15 = virtualinvoke r0.<android.net.Uri: java.util.List getPathSegments()>();

        $r16 = interfaceinvoke $r15.<java.util.List: java.lang.Object get(int)>(0);

        $z3 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>($r16);

        if $z3 == 0 goto label1;

        goto label2;

     label1:
        z4 = 0;

     label2:
        if z4 != 0 goto label3;

        return null;

     label3:
        $r2 = new android.service.notification.ZenModeConfig$EventInfo;

        specialinvoke $r2.<android.service.notification.ZenModeConfig$EventInfo: void <init>()>();

        $r3 = virtualinvoke r0.<android.net.Uri: java.lang.String getQueryParameter(java.lang.String)>("userId");

        $i0 = staticinvoke <android.service.notification.ZenModeConfig: int tryParseInt(java.lang.String,int)>($r3, -10000);

        $r2.<android.service.notification.ZenModeConfig$EventInfo: int userId> = $i0;

        $r4 = virtualinvoke r0.<android.net.Uri: java.lang.String getQueryParameter(java.lang.String)>("calendar");

        $r2.<android.service.notification.ZenModeConfig$EventInfo: java.lang.String calName> = $r4;

        $r5 = $r2.<android.service.notification.ZenModeConfig$EventInfo: java.lang.String calName>;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r5);

        if $z0 == 0 goto label4;

        $r2.<android.service.notification.ZenModeConfig$EventInfo: java.lang.String calName> = null;

     label4:
        $r6 = virtualinvoke r0.<android.net.Uri: java.lang.String getQueryParameter(java.lang.String)>("calendarId");

        $r7 = staticinvoke <android.service.notification.ZenModeConfig: java.lang.Long tryParseLong(java.lang.String,java.lang.Long)>($r6, null);

        $r2.<android.service.notification.ZenModeConfig$EventInfo: java.lang.Long calendarId> = $r7;

        $r8 = virtualinvoke r0.<android.net.Uri: java.lang.String getQueryParameter(java.lang.String)>("reply");

        $i1 = staticinvoke <android.service.notification.ZenModeConfig: int tryParseInt(java.lang.String,int)>($r8, 0);

        $r2.<android.service.notification.ZenModeConfig$EventInfo: int reply> = $i1;

        return $r2;
    }

    private static int[] tryParseHourAndMinute(java.lang.String)
    {
        boolean z0, $z1, $z2;
        int i0, $i1, $i2, $i3, i4, i5;
        java.lang.String $r0, $r1, r2;
        int[] r3;

        r2 := @parameter0: java.lang.String;

        z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r2);

        if z0 == 0 goto label1;

        return null;

     label1:
        i4 = virtualinvoke r2.<java.lang.String: int indexOf(int)>(46);

        if i4 < 1 goto label4;

        $i1 = virtualinvoke r2.<java.lang.String: int length()>();

        $i2 = $i1 - 1;

        if i4 < $i2 goto label2;

        goto label4;

     label2:
        $r0 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(0, i4);

        i0 = staticinvoke <android.service.notification.ZenModeConfig: int tryParseInt(java.lang.String,int)>($r0, -1);

        $i3 = i4 + 1;

        $r1 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int)>($i3);

        i5 = staticinvoke <android.service.notification.ZenModeConfig: int tryParseInt(java.lang.String,int)>($r1, -1);

        r3 = null;

        $z1 = staticinvoke <android.service.notification.ZenModeConfig: boolean isValidHour(int)>(i0);

        if $z1 == 0 goto label3;

        r3 = null;

        $z2 = staticinvoke <android.service.notification.ZenModeConfig: boolean isValidMinute(int)>(i5);

        if $z2 == 0 goto label3;

        r3 = newarray (int)[2];

        r3[0] = i0;

        r3[1] = i5;

     label3:
        return r3;

     label4:
        return null;
    }

    private static int tryParseInt(java.lang.String, int)
    {
        int i0, i1;
        boolean $z0;
        java.lang.Throwable $r0;
        java.lang.String r1;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 == 0 goto label1;

        return i0;

     label1:
        i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r1);

     label2:
        return i1;

     label3:
        $r0 := @caughtexception;

        return i0;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    private static long tryParseLong(java.lang.String, long)
    {
        long l0, l1;
        boolean $z0;
        java.lang.Throwable $r0;
        java.lang.String r1;

        r1 := @parameter0: java.lang.String;

        l0 := @parameter1: long;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 == 0 goto label1;

        return l0;

     label1:
        l1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(r1);

     label2:
        return l1;

     label3:
        $r0 := @caughtexception;

        return l0;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    private static java.lang.Long tryParseLong(java.lang.String, java.lang.Long)
    {
        java.lang.Long r0, $r1;
        long l0;
        boolean $z0;
        java.lang.Throwable $r2;
        java.lang.String r3;

        r3 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.Long;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r3);

        if $z0 == 0 goto label1;

        return r0;

     label1:
        l0 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(r3);

     label2:
        $r1 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        return $r1;

     label3:
        $r2 := @caughtexception;

        return r0;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    public static android.service.notification.ZenModeConfig$ScheduleInfo tryParseScheduleConditionId(android.net.Uri)
    {
        android.net.Uri r0;
        int[] r1, r2, $r8;
        java.lang.String $r4, $r5, $r7, $r9, $r10, $r11, $r12, $r13, $r15;
        android.service.notification.ZenModeConfig$ScheduleInfo $r6;
        int $i0, $i1, $i2, $i3, $i4;
        boolean $z0, $z1, $z2, $z3, z4;
        java.util.List $r14, $r16;
        java.lang.Object $r17;

        r0 := @parameter0: android.net.Uri;

        if r0 == null goto label1;

        $r10 = "condition";

        $r11 = virtualinvoke r0.<android.net.Uri: java.lang.String getScheme()>();

        $z1 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>($r11);

        if $z1 == 0 goto label1;

        $r12 = "android";

        $r13 = virtualinvoke r0.<android.net.Uri: java.lang.String getAuthority()>();

        $z2 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>($r13);

        if $z2 == 0 goto label1;

        $r14 = virtualinvoke r0.<android.net.Uri: java.util.List getPathSegments()>();

        $i4 = interfaceinvoke $r14.<java.util.List: int size()>();

        if $i4 != 1 goto label1;

        $r15 = "schedule";

        $r16 = virtualinvoke r0.<android.net.Uri: java.util.List getPathSegments()>();

        $r17 = interfaceinvoke $r16.<java.util.List: java.lang.Object get(int)>(0);

        $z3 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>($r17);

        if $z3 == 0 goto label1;

        z4 = 1;

        goto label2;

     label1:
        z4 = 0;

     label2:
        if z4 != 0 goto label3;

        return null;

     label3:
        $r4 = virtualinvoke r0.<android.net.Uri: java.lang.String getQueryParameter(java.lang.String)>("start");

        r1 = staticinvoke <android.service.notification.ZenModeConfig: int[] tryParseHourAndMinute(java.lang.String)>($r4);

        $r5 = virtualinvoke r0.<android.net.Uri: java.lang.String getQueryParameter(java.lang.String)>("end");

        r2 = staticinvoke <android.service.notification.ZenModeConfig: int[] tryParseHourAndMinute(java.lang.String)>($r5);

        if r1 == null goto label5;

        if r2 != null goto label4;

        goto label5;

     label4:
        $r6 = new android.service.notification.ZenModeConfig$ScheduleInfo;

        specialinvoke $r6.<android.service.notification.ZenModeConfig$ScheduleInfo: void <init>()>();

        $r7 = virtualinvoke r0.<android.net.Uri: java.lang.String getQueryParameter(java.lang.String)>("days");

        $r8 = staticinvoke <android.service.notification.ZenModeConfig: int[] tryParseDayList(java.lang.String,java.lang.String)>($r7, "\\.");

        $r6.<android.service.notification.ZenModeConfig$ScheduleInfo: int[] days> = $r8;

        $i0 = r1[0];

        $r6.<android.service.notification.ZenModeConfig$ScheduleInfo: int startHour> = $i0;

        $i1 = r1[1];

        $r6.<android.service.notification.ZenModeConfig$ScheduleInfo: int startMinute> = $i1;

        $i2 = r2[0];

        $r6.<android.service.notification.ZenModeConfig$ScheduleInfo: int endHour> = $i2;

        $i3 = r2[1];

        $r6.<android.service.notification.ZenModeConfig$ScheduleInfo: int endMinute> = $i3;

        $r9 = virtualinvoke r0.<android.net.Uri: java.lang.String getQueryParameter(java.lang.String)>("exitAtAlarm");

        $z0 = staticinvoke <android.service.notification.ZenModeConfig: boolean safeBoolean(java.lang.String,boolean)>($r9, 0);

        $r6.<android.service.notification.ZenModeConfig$ScheduleInfo: boolean exitAtAlarm> = $z0;

        return $r6;

     label5:
        return null;
    }

    private static int tryParseZenMode(java.lang.String, int)
    {
        java.lang.String r0;
        int i0, i1;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        i1 := @parameter1: int;

        i0 = staticinvoke <android.service.notification.ZenModeConfig: int tryParseInt(java.lang.String,int)>(r0, i1);

        $z0 = staticinvoke <android.provider.Settings$Global: boolean isValidZenMode(int)>(i0);

        if $z0 == 0 goto label1;

        i1 = i0;

        goto label1;

     label1:
        return i1;
    }

    private static java.lang.Boolean unsafeBoolean(org.xmlpull.v1.XmlPullParser, java.lang.String)
    {
        java.lang.String r0, r3;
        boolean $z0, $z1;
        java.lang.Boolean $r1;
        org.xmlpull.v1.XmlPullParser r2;

        r2 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r0 := @parameter1: java.lang.String;

        r3 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, r0);

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r3);

        if $z0 == 0 goto label1;

        return null;

     label1:
        $z1 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>(r3);

        $r1 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1);

        return $r1;
    }

    public static void writeConditionXml(android.service.notification.Condition, org.xmlpull.v1.XmlSerializer) throws java.io.IOException
    {
        android.service.notification.Condition r0;
        org.xmlpull.v1.XmlSerializer r1;
        android.net.Uri $r2;
        java.lang.String $r3, $r5, $r7, $r9, $r11, $r13, $r15;
        int $i0, $i1, $i2;

        r0 := @parameter0: android.service.notification.Condition;

        r1 := @parameter1: org.xmlpull.v1.XmlSerializer;

        $r2 = r0.<android.service.notification.Condition: android.net.Uri id>;

        $r3 = virtualinvoke $r2.<android.net.Uri: java.lang.String toString()>();

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "id", $r3);

        $r5 = r0.<android.service.notification.Condition: java.lang.String summary>;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "summary", $r5);

        $r7 = r0.<android.service.notification.Condition: java.lang.String line1>;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "line1", $r7);

        $r9 = r0.<android.service.notification.Condition: java.lang.String line2>;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "line2", $r9);

        $i0 = r0.<android.service.notification.Condition: int icon>;

        $r11 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "icon", $r11);

        $i1 = r0.<android.service.notification.Condition: int state>;

        $r13 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i1);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "state", $r13);

        $i2 = r0.<android.service.notification.Condition: int flags>;

        $r15 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i2);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "flags", $r15);

        return;
    }

    public static void writeRuleXml(android.service.notification.ZenModeConfig$ZenRule, org.xmlpull.v1.XmlSerializer) throws java.io.IOException
    {
        android.service.notification.ZenModeConfig$ZenRule r0;
        org.xmlpull.v1.XmlSerializer r1;
        boolean $z0, $z1;
        java.lang.String $r2, $r4, $r5, $r10, $r12, $r15, $r19, $r22, $r25, $r28, $r30;
        int $i0;
        android.content.ComponentName $r7, $r8, $r24, $r27;
        android.net.Uri $r9, $r21;
        long $l1;
        android.service.notification.Condition $r13, $r18;
        android.service.notification.ZenPolicy $r14, $r17;

        r0 := @parameter0: android.service.notification.ZenModeConfig$ZenRule;

        r1 := @parameter1: org.xmlpull.v1.XmlSerializer;

        $z0 = r0.<android.service.notification.ZenModeConfig$ZenRule: boolean enabled>;

        $r2 = staticinvoke <java.lang.Boolean: java.lang.String toString(boolean)>($z0);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "enabled", $r2);

        $r4 = r0.<android.service.notification.ZenModeConfig$ZenRule: java.lang.String name>;

        if $r4 == null goto label1;

        $r30 = r0.<android.service.notification.ZenModeConfig$ZenRule: java.lang.String name>;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "name", $r30);

     label1:
        $i0 = r0.<android.service.notification.ZenModeConfig$ZenRule: int zenMode>;

        $r5 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "zen", $r5);

        $r7 = r0.<android.service.notification.ZenModeConfig$ZenRule: android.content.ComponentName component>;

        if $r7 == null goto label2;

        $r27 = r0.<android.service.notification.ZenModeConfig$ZenRule: android.content.ComponentName component>;

        $r28 = virtualinvoke $r27.<android.content.ComponentName: java.lang.String flattenToString()>();

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "component", $r28);

     label2:
        $r8 = r0.<android.service.notification.ZenModeConfig$ZenRule: android.content.ComponentName configurationActivity>;

        if $r8 == null goto label3;

        $r24 = r0.<android.service.notification.ZenModeConfig$ZenRule: android.content.ComponentName configurationActivity>;

        $r25 = virtualinvoke $r24.<android.content.ComponentName: java.lang.String flattenToString()>();

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "configActivity", $r25);

     label3:
        $r9 = r0.<android.service.notification.ZenModeConfig$ZenRule: android.net.Uri conditionId>;

        if $r9 == null goto label4;

        $r21 = r0.<android.service.notification.ZenModeConfig$ZenRule: android.net.Uri conditionId>;

        $r22 = virtualinvoke $r21.<android.net.Uri: java.lang.String toString()>();

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "conditionId", $r22);

     label4:
        $l1 = r0.<android.service.notification.ZenModeConfig$ZenRule: long creationTime>;

        $r10 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l1);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "creationTime", $r10);

        $r12 = r0.<android.service.notification.ZenModeConfig$ZenRule: java.lang.String enabler>;

        if $r12 == null goto label5;

        $r19 = r0.<android.service.notification.ZenModeConfig$ZenRule: java.lang.String enabler>;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "enabler", $r19);

     label5:
        $r13 = r0.<android.service.notification.ZenModeConfig$ZenRule: android.service.notification.Condition condition>;

        if $r13 == null goto label6;

        $r18 = r0.<android.service.notification.ZenModeConfig$ZenRule: android.service.notification.Condition condition>;

        staticinvoke <android.service.notification.ZenModeConfig: void writeConditionXml(android.service.notification.Condition,org.xmlpull.v1.XmlSerializer)>($r18, r1);

     label6:
        $r14 = r0.<android.service.notification.ZenModeConfig$ZenRule: android.service.notification.ZenPolicy zenPolicy>;

        if $r14 == null goto label7;

        $r17 = r0.<android.service.notification.ZenModeConfig$ZenRule: android.service.notification.ZenPolicy zenPolicy>;

        staticinvoke <android.service.notification.ZenModeConfig: void writeZenPolicyXml(android.service.notification.ZenPolicy,org.xmlpull.v1.XmlSerializer)>($r17, r1);

     label7:
        $z1 = r0.<android.service.notification.ZenModeConfig$ZenRule: boolean modified>;

        $r15 = staticinvoke <java.lang.Boolean: java.lang.String toString(boolean)>($z1);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "modified", $r15);

        return;
    }

    private static void writeZenPolicyState(java.lang.String, int, org.xmlpull.v1.XmlSerializer) throws java.io.IOException
    {
        java.lang.String r0, $r2, $r4;
        int i0;
        org.xmlpull.v1.XmlSerializer r1;
        boolean $z0, $z1;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r1 := @parameter2: org.xmlpull.v1.XmlSerializer;

        $z0 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>(r0, "callsFrom");

        if $z0 != 0 goto label2;

        $z1 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>(r0, "messagesFrom");

        if $z1 == 0 goto label1;

        goto label2;

     label1:
        if i0 == 0 goto label3;

        $r4 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, r0, $r4);

        goto label3;

     label2:
        if i0 == 0 goto label3;

        $r2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, r0, $r2);

     label3:
        return;
    }

    public static void writeZenPolicyXml(android.service.notification.ZenPolicy, org.xmlpull.v1.XmlSerializer) throws java.io.IOException
    {
        android.service.notification.ZenPolicy r0;
        org.xmlpull.v1.XmlSerializer r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14;

        r0 := @parameter0: android.service.notification.ZenPolicy;

        r1 := @parameter1: org.xmlpull.v1.XmlSerializer;

        $i0 = virtualinvoke r0.<android.service.notification.ZenPolicy: int getPriorityCallSenders()>();

        staticinvoke <android.service.notification.ZenModeConfig: void writeZenPolicyState(java.lang.String,int,org.xmlpull.v1.XmlSerializer)>("callsFrom", $i0, r1);

        $i1 = virtualinvoke r0.<android.service.notification.ZenPolicy: int getPriorityMessageSenders()>();

        staticinvoke <android.service.notification.ZenModeConfig: void writeZenPolicyState(java.lang.String,int,org.xmlpull.v1.XmlSerializer)>("messagesFrom", $i1, r1);

        $i2 = virtualinvoke r0.<android.service.notification.ZenPolicy: int getPriorityCategoryRepeatCallers()>();

        staticinvoke <android.service.notification.ZenModeConfig: void writeZenPolicyState(java.lang.String,int,org.xmlpull.v1.XmlSerializer)>("repeatCallers", $i2, r1);

        $i3 = virtualinvoke r0.<android.service.notification.ZenPolicy: int getPriorityCategoryAlarms()>();

        staticinvoke <android.service.notification.ZenModeConfig: void writeZenPolicyState(java.lang.String,int,org.xmlpull.v1.XmlSerializer)>("alarms", $i3, r1);

        $i4 = virtualinvoke r0.<android.service.notification.ZenPolicy: int getPriorityCategoryMedia()>();

        staticinvoke <android.service.notification.ZenModeConfig: void writeZenPolicyState(java.lang.String,int,org.xmlpull.v1.XmlSerializer)>("media", $i4, r1);

        $i5 = virtualinvoke r0.<android.service.notification.ZenPolicy: int getPriorityCategorySystem()>();

        staticinvoke <android.service.notification.ZenModeConfig: void writeZenPolicyState(java.lang.String,int,org.xmlpull.v1.XmlSerializer)>("system", $i5, r1);

        $i6 = virtualinvoke r0.<android.service.notification.ZenPolicy: int getPriorityCategoryReminders()>();

        staticinvoke <android.service.notification.ZenModeConfig: void writeZenPolicyState(java.lang.String,int,org.xmlpull.v1.XmlSerializer)>("reminders", $i6, r1);

        $i7 = virtualinvoke r0.<android.service.notification.ZenPolicy: int getPriorityCategoryEvents()>();

        staticinvoke <android.service.notification.ZenModeConfig: void writeZenPolicyState(java.lang.String,int,org.xmlpull.v1.XmlSerializer)>("events", $i7, r1);

        $i8 = virtualinvoke r0.<android.service.notification.ZenPolicy: int getVisualEffectFullScreenIntent()>();

        staticinvoke <android.service.notification.ZenModeConfig: void writeZenPolicyState(java.lang.String,int,org.xmlpull.v1.XmlSerializer)>("showFullScreenIntent", $i8, r1);

        $i9 = virtualinvoke r0.<android.service.notification.ZenPolicy: int getVisualEffectLights()>();

        staticinvoke <android.service.notification.ZenModeConfig: void writeZenPolicyState(java.lang.String,int,org.xmlpull.v1.XmlSerializer)>("showLights", $i9, r1);

        $i10 = virtualinvoke r0.<android.service.notification.ZenPolicy: int getVisualEffectPeek()>();

        staticinvoke <android.service.notification.ZenModeConfig: void writeZenPolicyState(java.lang.String,int,org.xmlpull.v1.XmlSerializer)>("shoePeek", $i10, r1);

        $i11 = virtualinvoke r0.<android.service.notification.ZenPolicy: int getVisualEffectStatusBar()>();

        staticinvoke <android.service.notification.ZenModeConfig: void writeZenPolicyState(java.lang.String,int,org.xmlpull.v1.XmlSerializer)>("showStatusBarIcons", $i11, r1);

        $i12 = virtualinvoke r0.<android.service.notification.ZenPolicy: int getVisualEffectBadge()>();

        staticinvoke <android.service.notification.ZenModeConfig: void writeZenPolicyState(java.lang.String,int,org.xmlpull.v1.XmlSerializer)>("showBadges", $i12, r1);

        $i13 = virtualinvoke r0.<android.service.notification.ZenPolicy: int getVisualEffectAmbient()>();

        staticinvoke <android.service.notification.ZenModeConfig: void writeZenPolicyState(java.lang.String,int,org.xmlpull.v1.XmlSerializer)>("showAmbient", $i13, r1);

        $i14 = virtualinvoke r0.<android.service.notification.ZenPolicy: int getVisualEffectNotificationList()>();

        staticinvoke <android.service.notification.ZenModeConfig: void writeZenPolicyState(java.lang.String,int,org.xmlpull.v1.XmlSerializer)>("showNotificationList", $i14, r1);

        return;
    }

    public void applyNotificationPolicy(android.app.NotificationManager$Policy)
    {
        android.service.notification.ZenModeConfig r0;
        android.app.NotificationManager$Policy r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31;
        boolean z1, z2, z3, z4, z5, z6, z7, z8, z9, z10;

        r0 := @this: android.service.notification.ZenModeConfig;

        r1 := @parameter0: android.app.NotificationManager$Policy;

        if r1 != null goto label01;

        return;

     label01:
        i0 = r1.<android.app.NotificationManager$Policy: int priorityCategories>;

        $i1 = i0 & 32;

        if $i1 == 0 goto label02;

        z1 = 1;

        goto label03;

     label02:
        z1 = 0;

     label03:
        r0.<android.service.notification.ZenModeConfig: boolean allowAlarms> = z1;

        $i2 = r1.<android.app.NotificationManager$Policy: int priorityCategories>;

        $i3 = $i2 & 64;

        if $i3 == 0 goto label04;

        z2 = 1;

        goto label05;

     label04:
        z2 = 0;

     label05:
        r0.<android.service.notification.ZenModeConfig: boolean allowMedia> = z2;

        $i4 = r1.<android.app.NotificationManager$Policy: int priorityCategories>;

        $i5 = $i4 & 128;

        if $i5 == 0 goto label06;

        z3 = 1;

        goto label07;

     label06:
        z3 = 0;

     label07:
        r0.<android.service.notification.ZenModeConfig: boolean allowSystem> = z3;

        $i6 = r1.<android.app.NotificationManager$Policy: int priorityCategories>;

        $i7 = $i6 & 2;

        if $i7 == 0 goto label08;

        z4 = 1;

        goto label09;

     label08:
        z4 = 0;

     label09:
        r0.<android.service.notification.ZenModeConfig: boolean allowEvents> = z4;

        $i8 = r1.<android.app.NotificationManager$Policy: int priorityCategories>;

        $i9 = $i8 & 1;

        if $i9 == 0 goto label10;

        z5 = 1;

        goto label11;

     label10:
        z5 = 0;

     label11:
        r0.<android.service.notification.ZenModeConfig: boolean allowReminders> = z5;

        $i10 = r1.<android.app.NotificationManager$Policy: int priorityCategories>;

        $i11 = $i10 & 8;

        if $i11 == 0 goto label12;

        z6 = 1;

        goto label13;

     label12:
        z6 = 0;

     label13:
        r0.<android.service.notification.ZenModeConfig: boolean allowCalls> = z6;

        $i12 = r1.<android.app.NotificationManager$Policy: int priorityCategories>;

        $i13 = $i12 & 4;

        if $i13 == 0 goto label14;

        z7 = 1;

        goto label15;

     label14:
        z7 = 0;

     label15:
        r0.<android.service.notification.ZenModeConfig: boolean allowMessages> = z7;

        $i14 = r1.<android.app.NotificationManager$Policy: int priorityCategories>;

        $i15 = $i14 & 16;

        if $i15 == 0 goto label16;

        z8 = 1;

        goto label17;

     label16:
        z8 = 0;

     label17:
        r0.<android.service.notification.ZenModeConfig: boolean allowRepeatCallers> = z8;

        $i17 = r1.<android.app.NotificationManager$Policy: int priorityCallSenders>;

        $i16 = r0.<android.service.notification.ZenModeConfig: int allowCallsFrom>;

        $i18 = staticinvoke <android.service.notification.ZenModeConfig: int normalizePrioritySenders(int,int)>($i17, $i16);

        r0.<android.service.notification.ZenModeConfig: int allowCallsFrom> = $i18;

        $i20 = r1.<android.app.NotificationManager$Policy: int priorityMessageSenders>;

        $i19 = r0.<android.service.notification.ZenModeConfig: int allowMessagesFrom>;

        $i21 = staticinvoke <android.service.notification.ZenModeConfig: int normalizePrioritySenders(int,int)>($i20, $i19);

        r0.<android.service.notification.ZenModeConfig: int allowMessagesFrom> = $i21;

        $i22 = r1.<android.app.NotificationManager$Policy: int suppressedVisualEffects>;

        if $i22 == -1 goto label18;

        $i31 = r1.<android.app.NotificationManager$Policy: int suppressedVisualEffects>;

        r0.<android.service.notification.ZenModeConfig: int suppressedVisualEffects> = $i31;

     label18:
        $i23 = r1.<android.app.NotificationManager$Policy: int priorityCategories>;

        $i24 = $i23 & 256;

        if $i24 == 0 goto label19;

        z9 = 1;

        goto label20;

     label19:
        z9 = 0;

     label20:
        r0.<android.service.notification.ZenModeConfig: boolean allowConversations> = z9;

        $i26 = r1.<android.app.NotificationManager$Policy: int priorityConversationSenders>;

        $i25 = r0.<android.service.notification.ZenModeConfig: int allowConversationsFrom>;

        $i27 = staticinvoke <android.service.notification.ZenModeConfig: int normalizeConversationSenders(boolean,int,int)>(z9, $i26, $i25);

        r0.<android.service.notification.ZenModeConfig: int allowConversationsFrom> = $i27;

        $i28 = r1.<android.app.NotificationManager$Policy: int state>;

        if $i28 == -1 goto label22;

        z10 = 0;

        $i29 = r1.<android.app.NotificationManager$Policy: int state>;

        $i30 = $i29 & 1;

        if $i30 == 0 goto label21;

        z10 = 1;

     label21:
        r0.<android.service.notification.ZenModeConfig: boolean areChannelsBypassingDnd> = z10;

     label22:
        return;
    }

    public android.service.notification.ZenModeConfig copy()
    {
        android.service.notification.ZenModeConfig r0, $r2;
        android.os.Parcel r1;
        java.lang.Throwable $r3;

        r0 := @this: android.service.notification.ZenModeConfig;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r0.<android.service.notification.ZenModeConfig: void writeToParcel(android.os.Parcel,int)>(r1, 0);

        virtualinvoke r1.<android.os.Parcel: void setDataPosition(int)>(0);

        $r2 = new android.service.notification.ZenModeConfig;

        specialinvoke $r2.<android.service.notification.ZenModeConfig: void <init>(android.os.Parcel)>(r1);

     label2:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return $r2;

     label3:
        $r3 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public int describeContents()
    {
        android.service.notification.ZenModeConfig r0;

        r0 := @this: android.service.notification.ZenModeConfig;

        return 0;
    }

    public android.service.notification.ZenModeConfig$Diff diff(android.service.notification.ZenModeConfig)
    {
        android.service.notification.ZenModeConfig r0, r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9, i10, i11, i12, i13;
        java.lang.String r4, $r19;
        android.service.notification.ZenModeConfig$Diff $r5, $r58;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, z18, z19, z20, z21, z22, z23, z24, z25, z26;
        android.util.ArraySet $r6;
        android.util.ArrayMap $r7, $r8, r59, r62;
        android.service.notification.ZenModeConfig$ZenRule $r9, $r10, r60, r61;
        java.lang.Boolean $r11, $r12, $r31, $r32, $r34, $r35, $r37, $r38, $r40, $r41, $r43, $r44, $r46, $r47, $r49, $r50, $r52, $r53;
        java.lang.Object $r14, $r20, $r21;
        java.lang.StringBuilder $r15;
        java.lang.Integer $r22, $r23, $r25, $r26, $r28, $r29, $r55, $r56;

        r0 := @this: android.service.notification.ZenModeConfig;

        r1 := @parameter0: android.service.notification.ZenModeConfig;

        $r5 = new android.service.notification.ZenModeConfig$Diff;

        specialinvoke $r5.<android.service.notification.ZenModeConfig$Diff: void <init>()>();

        if r1 != null goto label01;

        $r58 = staticinvoke <android.service.notification.ZenModeConfig$Diff: android.service.notification.ZenModeConfig$Diff access$000(android.service.notification.ZenModeConfig$Diff,java.lang.String,java.lang.String)>($r5, "config", "delete");

        return $r58;

     label01:
        i9 = r0.<android.service.notification.ZenModeConfig: int user>;

        $i1 = r1.<android.service.notification.ZenModeConfig: int user>;

        if i9 == $i1 goto label02;

        $r55 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i9);

        $i8 = r1.<android.service.notification.ZenModeConfig: int user>;

        $r56 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i8);

        virtualinvoke $r5.<android.service.notification.ZenModeConfig$Diff: android.service.notification.ZenModeConfig$Diff addLine(java.lang.String,java.lang.Object,java.lang.Object)>("user", $r55, $r56);

     label02:
        z18 = r0.<android.service.notification.ZenModeConfig: boolean allowAlarms>;

        $z0 = r1.<android.service.notification.ZenModeConfig: boolean allowAlarms>;

        if z18 == $z0 goto label03;

        $r52 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z18);

        $z17 = r1.<android.service.notification.ZenModeConfig: boolean allowAlarms>;

        $r53 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z17);

        virtualinvoke $r5.<android.service.notification.ZenModeConfig$Diff: android.service.notification.ZenModeConfig$Diff addLine(java.lang.String,java.lang.Object,java.lang.Object)>("allowAlarms", $r52, $r53);

     label03:
        z19 = r0.<android.service.notification.ZenModeConfig: boolean allowMedia>;

        $z1 = r1.<android.service.notification.ZenModeConfig: boolean allowMedia>;

        if z19 == $z1 goto label04;

        $r49 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z19);

        $z16 = r1.<android.service.notification.ZenModeConfig: boolean allowMedia>;

        $r50 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z16);

        virtualinvoke $r5.<android.service.notification.ZenModeConfig$Diff: android.service.notification.ZenModeConfig$Diff addLine(java.lang.String,java.lang.Object,java.lang.Object)>("allowMedia", $r49, $r50);

     label04:
        z20 = r0.<android.service.notification.ZenModeConfig: boolean allowSystem>;

        $z2 = r1.<android.service.notification.ZenModeConfig: boolean allowSystem>;

        if z20 == $z2 goto label05;

        $r46 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z20);

        $z15 = r1.<android.service.notification.ZenModeConfig: boolean allowSystem>;

        $r47 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z15);

        virtualinvoke $r5.<android.service.notification.ZenModeConfig$Diff: android.service.notification.ZenModeConfig$Diff addLine(java.lang.String,java.lang.Object,java.lang.Object)>("allowSystem", $r46, $r47);

     label05:
        z21 = r0.<android.service.notification.ZenModeConfig: boolean allowCalls>;

        $z3 = r1.<android.service.notification.ZenModeConfig: boolean allowCalls>;

        if z21 == $z3 goto label06;

        $r43 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z21);

        $z14 = r1.<android.service.notification.ZenModeConfig: boolean allowCalls>;

        $r44 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z14);

        virtualinvoke $r5.<android.service.notification.ZenModeConfig$Diff: android.service.notification.ZenModeConfig$Diff addLine(java.lang.String,java.lang.Object,java.lang.Object)>("allowCalls", $r43, $r44);

     label06:
        z22 = r0.<android.service.notification.ZenModeConfig: boolean allowReminders>;

        $z4 = r1.<android.service.notification.ZenModeConfig: boolean allowReminders>;

        if z22 == $z4 goto label07;

        $r40 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z22);

        $z13 = r1.<android.service.notification.ZenModeConfig: boolean allowReminders>;

        $r41 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z13);

        virtualinvoke $r5.<android.service.notification.ZenModeConfig$Diff: android.service.notification.ZenModeConfig$Diff addLine(java.lang.String,java.lang.Object,java.lang.Object)>("allowReminders", $r40, $r41);

     label07:
        z23 = r0.<android.service.notification.ZenModeConfig: boolean allowEvents>;

        $z5 = r1.<android.service.notification.ZenModeConfig: boolean allowEvents>;

        if z23 == $z5 goto label08;

        $r37 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z23);

        $z12 = r1.<android.service.notification.ZenModeConfig: boolean allowEvents>;

        $r38 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z12);

        virtualinvoke $r5.<android.service.notification.ZenModeConfig$Diff: android.service.notification.ZenModeConfig$Diff addLine(java.lang.String,java.lang.Object,java.lang.Object)>("allowEvents", $r37, $r38);

     label08:
        z24 = r0.<android.service.notification.ZenModeConfig: boolean allowRepeatCallers>;

        $z6 = r1.<android.service.notification.ZenModeConfig: boolean allowRepeatCallers>;

        if z24 == $z6 goto label09;

        $r34 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z24);

        $z11 = r1.<android.service.notification.ZenModeConfig: boolean allowRepeatCallers>;

        $r35 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z11);

        virtualinvoke $r5.<android.service.notification.ZenModeConfig$Diff: android.service.notification.ZenModeConfig$Diff addLine(java.lang.String,java.lang.Object,java.lang.Object)>("allowRepeatCallers", $r34, $r35);

     label09:
        z25 = r0.<android.service.notification.ZenModeConfig: boolean allowMessages>;

        $z7 = r1.<android.service.notification.ZenModeConfig: boolean allowMessages>;

        if z25 == $z7 goto label10;

        $r31 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z25);

        $z10 = r1.<android.service.notification.ZenModeConfig: boolean allowMessages>;

        $r32 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z10);

        virtualinvoke $r5.<android.service.notification.ZenModeConfig$Diff: android.service.notification.ZenModeConfig$Diff addLine(java.lang.String,java.lang.Object,java.lang.Object)>("allowMessages", $r31, $r32);

     label10:
        i10 = r0.<android.service.notification.ZenModeConfig: int allowCallsFrom>;

        $i2 = r1.<android.service.notification.ZenModeConfig: int allowCallsFrom>;

        if i10 == $i2 goto label11;

        $r28 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i10);

        $i7 = r1.<android.service.notification.ZenModeConfig: int allowCallsFrom>;

        $r29 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i7);

        virtualinvoke $r5.<android.service.notification.ZenModeConfig$Diff: android.service.notification.ZenModeConfig$Diff addLine(java.lang.String,java.lang.Object,java.lang.Object)>("allowCallsFrom", $r28, $r29);

     label11:
        i11 = r0.<android.service.notification.ZenModeConfig: int allowMessagesFrom>;

        $i3 = r1.<android.service.notification.ZenModeConfig: int allowMessagesFrom>;

        if i11 == $i3 goto label12;

        $r25 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i11);

        $i6 = r1.<android.service.notification.ZenModeConfig: int allowMessagesFrom>;

        $r26 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i6);

        virtualinvoke $r5.<android.service.notification.ZenModeConfig$Diff: android.service.notification.ZenModeConfig$Diff addLine(java.lang.String,java.lang.Object,java.lang.Object)>("allowMessagesFrom", $r25, $r26);

     label12:
        i12 = r0.<android.service.notification.ZenModeConfig: int suppressedVisualEffects>;

        $i4 = r1.<android.service.notification.ZenModeConfig: int suppressedVisualEffects>;

        if i12 == $i4 goto label13;

        $r22 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i12);

        $i5 = r1.<android.service.notification.ZenModeConfig: int suppressedVisualEffects>;

        $r23 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5);

        virtualinvoke $r5.<android.service.notification.ZenModeConfig$Diff: android.service.notification.ZenModeConfig$Diff addLine(java.lang.String,java.lang.Object,java.lang.Object)>("suppressedVisualEffects", $r22, $r23);

     label13:
        $r6 = new android.util.ArraySet;

        specialinvoke $r6.<android.util.ArraySet: void <init>()>();

        $r7 = r0.<android.service.notification.ZenModeConfig: android.util.ArrayMap automaticRules>;

        staticinvoke <android.service.notification.ZenModeConfig: void addKeys(android.util.ArraySet,android.util.ArrayMap)>($r6, $r7);

        $r8 = r1.<android.service.notification.ZenModeConfig: android.util.ArrayMap automaticRules>;

        staticinvoke <android.service.notification.ZenModeConfig: void addKeys(android.util.ArraySet,android.util.ArrayMap)>($r6, $r8);

        i0 = virtualinvoke $r6.<android.util.ArraySet: int size()>();

        i13 = 0;

     label14:
        if i13 >= i0 goto label18;

        $r14 = virtualinvoke $r6.<android.util.ArraySet: java.lang.Object valueAt(int)>(i13);

        r4 = (java.lang.String) $r14;

        r59 = r0.<android.service.notification.ZenModeConfig: android.util.ArrayMap automaticRules>;

        r60 = null;

        if r59 == null goto label15;

        $r21 = virtualinvoke r59.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r4);

        r61 = (android.service.notification.ZenModeConfig$ZenRule) $r21;

        goto label16;

     label15:
        r61 = null;

     label16:
        r62 = r1.<android.service.notification.ZenModeConfig: android.util.ArrayMap automaticRules>;

        if r62 == null goto label17;

        $r20 = virtualinvoke r62.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r4);

        r60 = (android.service.notification.ZenModeConfig$ZenRule) $r20;

     label17:
        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("automaticRule[");

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r19 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.service.notification.ZenModeConfig$ZenRule: void access$100(android.service.notification.ZenModeConfig$Diff,java.lang.String,android.service.notification.ZenModeConfig$ZenRule,android.service.notification.ZenModeConfig$ZenRule)>($r5, $r19, r61, r60);

        i13 = i13 + 1;

        goto label14;

     label18:
        $r10 = r0.<android.service.notification.ZenModeConfig: android.service.notification.ZenModeConfig$ZenRule manualRule>;

        $r9 = r1.<android.service.notification.ZenModeConfig: android.service.notification.ZenModeConfig$ZenRule manualRule>;

        staticinvoke <android.service.notification.ZenModeConfig$ZenRule: void access$100(android.service.notification.ZenModeConfig$Diff,java.lang.String,android.service.notification.ZenModeConfig$ZenRule,android.service.notification.ZenModeConfig$ZenRule)>($r5, "manualRule", $r10, $r9);

        z26 = r0.<android.service.notification.ZenModeConfig: boolean areChannelsBypassingDnd>;

        $z8 = r1.<android.service.notification.ZenModeConfig: boolean areChannelsBypassingDnd>;

        if z26 == $z8 goto label19;

        $r11 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z26);

        $z9 = r1.<android.service.notification.ZenModeConfig: boolean areChannelsBypassingDnd>;

        $r12 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z9);

        virtualinvoke $r5.<android.service.notification.ZenModeConfig$Diff: android.service.notification.ZenModeConfig$Diff addLine(java.lang.String,java.lang.Object,java.lang.Object)>("areChannelsBypassingDnd", $r11, $r12);

     label19:
        return $r5;
    }

    public boolean equals(java.lang.Object)
    {
        android.service.notification.ZenModeConfig r0, r6;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, z23;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        android.util.ArrayMap $r1, $r2;
        android.service.notification.ZenModeConfig$ZenRule $r3, $r4;
        java.lang.Object r5;

        r0 := @this: android.service.notification.ZenModeConfig;

        r5 := @parameter0: java.lang.Object;

        z0 = r5 instanceof android.service.notification.ZenModeConfig;

        z23 = 0;

        if z0 != 0 goto label1;

        return 0;

     label1:
        if r5 != r0 goto label2;

        return 1;

     label2:
        r6 = (android.service.notification.ZenModeConfig) r5;

        $z2 = r6.<android.service.notification.ZenModeConfig: boolean allowAlarms>;

        $z1 = r0.<android.service.notification.ZenModeConfig: boolean allowAlarms>;

        if $z2 != $z1 goto label3;

        $z4 = r6.<android.service.notification.ZenModeConfig: boolean allowMedia>;

        $z3 = r0.<android.service.notification.ZenModeConfig: boolean allowMedia>;

        if $z4 != $z3 goto label3;

        $z6 = r6.<android.service.notification.ZenModeConfig: boolean allowSystem>;

        $z5 = r0.<android.service.notification.ZenModeConfig: boolean allowSystem>;

        if $z6 != $z5 goto label3;

        $z8 = r6.<android.service.notification.ZenModeConfig: boolean allowCalls>;

        $z7 = r0.<android.service.notification.ZenModeConfig: boolean allowCalls>;

        if $z8 != $z7 goto label3;

        $z10 = r6.<android.service.notification.ZenModeConfig: boolean allowRepeatCallers>;

        $z9 = r0.<android.service.notification.ZenModeConfig: boolean allowRepeatCallers>;

        if $z10 != $z9 goto label3;

        $z12 = r6.<android.service.notification.ZenModeConfig: boolean allowMessages>;

        $z11 = r0.<android.service.notification.ZenModeConfig: boolean allowMessages>;

        if $z12 != $z11 goto label3;

        $i1 = r6.<android.service.notification.ZenModeConfig: int allowCallsFrom>;

        $i0 = r0.<android.service.notification.ZenModeConfig: int allowCallsFrom>;

        if $i1 != $i0 goto label3;

        $i3 = r6.<android.service.notification.ZenModeConfig: int allowMessagesFrom>;

        $i2 = r0.<android.service.notification.ZenModeConfig: int allowMessagesFrom>;

        if $i3 != $i2 goto label3;

        $z14 = r6.<android.service.notification.ZenModeConfig: boolean allowReminders>;

        $z13 = r0.<android.service.notification.ZenModeConfig: boolean allowReminders>;

        if $z14 != $z13 goto label3;

        $z16 = r6.<android.service.notification.ZenModeConfig: boolean allowEvents>;

        $z15 = r0.<android.service.notification.ZenModeConfig: boolean allowEvents>;

        if $z16 != $z15 goto label3;

        $i5 = r6.<android.service.notification.ZenModeConfig: int user>;

        $i4 = r0.<android.service.notification.ZenModeConfig: int user>;

        if $i5 != $i4 goto label3;

        $r2 = r6.<android.service.notification.ZenModeConfig: android.util.ArrayMap automaticRules>;

        $r1 = r0.<android.service.notification.ZenModeConfig: android.util.ArrayMap automaticRules>;

        $z17 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r2, $r1);

        if $z17 == 0 goto label3;

        $r4 = r6.<android.service.notification.ZenModeConfig: android.service.notification.ZenModeConfig$ZenRule manualRule>;

        $r3 = r0.<android.service.notification.ZenModeConfig: android.service.notification.ZenModeConfig$ZenRule manualRule>;

        $z18 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r4, $r3);

        if $z18 == 0 goto label3;

        $i7 = r6.<android.service.notification.ZenModeConfig: int suppressedVisualEffects>;

        $i6 = r0.<android.service.notification.ZenModeConfig: int suppressedVisualEffects>;

        if $i7 != $i6 goto label3;

        $z20 = r6.<android.service.notification.ZenModeConfig: boolean areChannelsBypassingDnd>;

        $z19 = r0.<android.service.notification.ZenModeConfig: boolean areChannelsBypassingDnd>;

        if $z20 != $z19 goto label3;

        $z22 = r6.<android.service.notification.ZenModeConfig: boolean allowConversations>;

        $z21 = r0.<android.service.notification.ZenModeConfig: boolean allowConversations>;

        if $z22 != $z21 goto label3;

        $i9 = r6.<android.service.notification.ZenModeConfig: int allowConversationsFrom>;

        $i8 = r0.<android.service.notification.ZenModeConfig: int allowConversationsFrom>;

        if $i9 != $i8 goto label3;

        z23 = 1;

        goto label3;

     label3:
        return z23;
    }

    public int hashCode()
    {
        android.service.notification.ZenModeConfig r0;
        java.lang.Object[] $r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        java.lang.Boolean $r2, $r3, $r4, $r5, $r6, $r7, $r10, $r11, $r16, $r17;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.Integer $r8, $r9, $r12, $r15, $r18;
        android.util.ArrayMap $r13;
        android.service.notification.ZenModeConfig$ZenRule $r14;

        r0 := @this: android.service.notification.ZenModeConfig;

        $r1 = newarray (java.lang.Object)[17];

        $z0 = r0.<android.service.notification.ZenModeConfig: boolean allowAlarms>;

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r1[0] = $r2;

        $z1 = r0.<android.service.notification.ZenModeConfig: boolean allowMedia>;

        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1);

        $r1[1] = $r3;

        $z2 = r0.<android.service.notification.ZenModeConfig: boolean allowSystem>;

        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z2);

        $r1[2] = $r4;

        $z3 = r0.<android.service.notification.ZenModeConfig: boolean allowCalls>;

        $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z3);

        $r1[3] = $r5;

        $z4 = r0.<android.service.notification.ZenModeConfig: boolean allowRepeatCallers>;

        $r6 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z4);

        $r1[4] = $r6;

        $z5 = r0.<android.service.notification.ZenModeConfig: boolean allowMessages>;

        $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z5);

        $r1[5] = $r7;

        $i0 = r0.<android.service.notification.ZenModeConfig: int allowCallsFrom>;

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r1[6] = $r8;

        $i1 = r0.<android.service.notification.ZenModeConfig: int allowMessagesFrom>;

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r1[7] = $r9;

        $z6 = r0.<android.service.notification.ZenModeConfig: boolean allowReminders>;

        $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z6);

        $r1[8] = $r10;

        $z7 = r0.<android.service.notification.ZenModeConfig: boolean allowEvents>;

        $r11 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z7);

        $r1[9] = $r11;

        $i2 = r0.<android.service.notification.ZenModeConfig: int user>;

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r1[10] = $r12;

        $r13 = r0.<android.service.notification.ZenModeConfig: android.util.ArrayMap automaticRules>;

        $r1[11] = $r13;

        $r14 = r0.<android.service.notification.ZenModeConfig: android.service.notification.ZenModeConfig$ZenRule manualRule>;

        $r1[12] = $r14;

        $i3 = r0.<android.service.notification.ZenModeConfig: int suppressedVisualEffects>;

        $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $r1[13] = $r15;

        $z8 = r0.<android.service.notification.ZenModeConfig: boolean areChannelsBypassingDnd>;

        $r16 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z8);

        $r1[14] = $r16;

        $z9 = r0.<android.service.notification.ZenModeConfig: boolean allowConversations>;

        $r17 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z9);

        $r1[15] = $r17;

        $i4 = r0.<android.service.notification.ZenModeConfig: int allowConversationsFrom>;

        $r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        $r1[16] = $r18;

        $i5 = staticinvoke <java.util.Objects: int hash(java.lang.Object[])>($r1);

        return $i5;
    }

    public boolean isValid()
    {
        android.service.notification.ZenModeConfig r0;
        int i0, i1;
        android.service.notification.ZenModeConfig$ZenRule $r1, $r5;
        boolean $z0, $z1;
        android.util.ArrayMap $r2, $r3;
        java.lang.Object $r4;

        r0 := @this: android.service.notification.ZenModeConfig;

        $r1 = r0.<android.service.notification.ZenModeConfig: android.service.notification.ZenModeConfig$ZenRule manualRule>;

        $z0 = staticinvoke <android.service.notification.ZenModeConfig: boolean isValidManualRule(android.service.notification.ZenModeConfig$ZenRule)>($r1);

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r2 = r0.<android.service.notification.ZenModeConfig: android.util.ArrayMap automaticRules>;

        i0 = virtualinvoke $r2.<android.util.ArrayMap: int size()>();

        i1 = 0;

     label2:
        if i1 >= i0 goto label4;

        $r3 = r0.<android.service.notification.ZenModeConfig: android.util.ArrayMap automaticRules>;

        $r4 = virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i1);

        $r5 = (android.service.notification.ZenModeConfig$ZenRule) $r4;

        $z1 = staticinvoke <android.service.notification.ZenModeConfig: boolean isValidAutomaticRule(android.service.notification.ZenModeConfig$ZenRule)>($r5);

        if $z1 != 0 goto label3;

        return 0;

     label3:
        i1 = i1 + 1;

        goto label2;

     label4:
        return 1;
    }

    public android.app.NotificationManager$Policy toNotificationPolicy()
    {
        android.service.notification.ZenModeConfig r0;
        int i0, i1, i2, $i3, $i4, i14;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        android.app.NotificationManager$Policy $r1;
        short s5, s6, s7, s8, s9, s10, s11, s12, s13;
        byte b15;

        r0 := @this: android.service.notification.ZenModeConfig;

        s5 = 0;

        $z0 = r0.<android.service.notification.ZenModeConfig: boolean allowConversations>;

        if $z0 == 0 goto label01;

        s5 = 0 | 256;

     label01:
        s6 = s5;

        $z1 = r0.<android.service.notification.ZenModeConfig: boolean allowCalls>;

        if $z1 == 0 goto label02;

        s6 = s5 | 8;

     label02:
        s7 = s6;

        $z2 = r0.<android.service.notification.ZenModeConfig: boolean allowMessages>;

        if $z2 == 0 goto label03;

        s7 = s6 | 4;

     label03:
        s8 = s7;

        $z3 = r0.<android.service.notification.ZenModeConfig: boolean allowEvents>;

        if $z3 == 0 goto label04;

        s8 = s7 | 2;

     label04:
        s9 = s8;

        $z4 = r0.<android.service.notification.ZenModeConfig: boolean allowReminders>;

        if $z4 == 0 goto label05;

        s9 = s8 | 1;

     label05:
        s10 = s9;

        $z5 = r0.<android.service.notification.ZenModeConfig: boolean allowRepeatCallers>;

        if $z5 == 0 goto label06;

        s10 = s9 | 16;

     label06:
        s11 = s10;

        $z6 = r0.<android.service.notification.ZenModeConfig: boolean allowAlarms>;

        if $z6 == 0 goto label07;

        s11 = s10 | 32;

     label07:
        s12 = s11;

        $z7 = r0.<android.service.notification.ZenModeConfig: boolean allowMedia>;

        if $z7 == 0 goto label08;

        s12 = s11 | 64;

     label08:
        s13 = s12;

        $z8 = r0.<android.service.notification.ZenModeConfig: boolean allowSystem>;

        if $z8 == 0 goto label09;

        s13 = s12 | 128;

     label09:
        $i3 = r0.<android.service.notification.ZenModeConfig: int allowCallsFrom>;

        i0 = staticinvoke <android.service.notification.ZenModeConfig: int sourceToPrioritySenders(int,int)>($i3, 1);

        $i4 = r0.<android.service.notification.ZenModeConfig: int allowMessagesFrom>;

        i1 = staticinvoke <android.service.notification.ZenModeConfig: int sourceToPrioritySenders(int,int)>($i4, 1);

        i2 = r0.<android.service.notification.ZenModeConfig: int allowConversationsFrom>;

        i14 = r0.<android.service.notification.ZenModeConfig: int suppressedVisualEffects>;

        $z9 = r0.<android.service.notification.ZenModeConfig: boolean areChannelsBypassingDnd>;

        if $z9 == 0 goto label10;

        b15 = 1;

        goto label11;

     label10:
        b15 = 0;

     label11:
        $r1 = new android.app.NotificationManager$Policy;

        specialinvoke $r1.<android.app.NotificationManager$Policy: void <init>(int,int,int,int,int,int)>(s13, i0, i1, i14, b15, i2);

        return $r1;
    }

    public android.app.NotificationManager$Policy toNotificationPolicy(android.service.notification.ZenPolicy)
    {
        android.service.notification.ZenModeConfig r0;
        android.service.notification.ZenPolicy r1;
        android.app.NotificationManager$Policy r2, $r3;
        boolean z0, z1, z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26, $z27, $z28, $z29, $z30, $z31, $z32, $z33, $z34;
        int $i1, $i2, $i3, $i4, $i5, i6, i7, i8, i9, i10, i11, i12, i13, i14, i15, i16, i17, i18, i19, i20, i21, i22, i23, i24, i25, i26, i27, i28;

        r0 := @this: android.service.notification.ZenModeConfig;

        r1 := @parameter0: android.service.notification.ZenPolicy;

        r2 = virtualinvoke r0.<android.service.notification.ZenModeConfig: android.app.NotificationManager$Policy toNotificationPolicy()>();

        i6 = 0;

        i7 = r2.<android.app.NotificationManager$Policy: int priorityCallSenders>;

        i8 = r2.<android.app.NotificationManager$Policy: int priorityMessageSenders>;

        i9 = r2.<android.app.NotificationManager$Policy: int priorityConversationSenders>;

        $z3 = specialinvoke r0.<android.service.notification.ZenModeConfig: boolean isPriorityCategoryEnabled(int,android.app.NotificationManager$Policy)>(1, r2);

        $z4 = virtualinvoke r1.<android.service.notification.ZenPolicy: boolean isCategoryAllowed(int,boolean)>(0, $z3);

        if $z4 == 0 goto label01;

        i6 = 0 | 1;

     label01:
        i10 = i6;

        $z5 = specialinvoke r0.<android.service.notification.ZenModeConfig: boolean isPriorityCategoryEnabled(int,android.app.NotificationManager$Policy)>(2, r2);

        $z6 = virtualinvoke r1.<android.service.notification.ZenPolicy: boolean isCategoryAllowed(int,boolean)>(1, $z5);

        if $z6 == 0 goto label02;

        i10 = i6 | 2;

     label02:
        i11 = i10;

        i12 = i8;

        $z7 = specialinvoke r0.<android.service.notification.ZenModeConfig: boolean isPriorityCategoryEnabled(int,android.app.NotificationManager$Policy)>(4, r2);

        $z8 = virtualinvoke r1.<android.service.notification.ZenPolicy: boolean isCategoryAllowed(int,boolean)>(2, $z7);

        if $z8 == 0 goto label03;

        i11 = i10 | 4;

        $i5 = virtualinvoke r1.<android.service.notification.ZenPolicy: int getPriorityMessageSenders()>();

        i12 = specialinvoke r0.<android.service.notification.ZenModeConfig: int getNotificationPolicySenders(int,int)>($i5, i8);

     label03:
        i13 = i11;

        i14 = i9;

        $z9 = specialinvoke r0.<android.service.notification.ZenModeConfig: boolean isPriorityCategoryEnabled(int,android.app.NotificationManager$Policy)>(256, r2);

        $z10 = virtualinvoke r1.<android.service.notification.ZenPolicy: boolean isCategoryAllowed(int,boolean)>(8, $z9);

        if $z10 == 0 goto label04;

        i13 = i11 | 256;

        $i4 = virtualinvoke r1.<android.service.notification.ZenPolicy: int getPriorityConversationSenders()>();

        i14 = specialinvoke r0.<android.service.notification.ZenModeConfig: int getNotificationPolicySenders(int,int)>($i4, i9);

     label04:
        i15 = i13;

        i16 = i7;

        $z11 = specialinvoke r0.<android.service.notification.ZenModeConfig: boolean isPriorityCategoryEnabled(int,android.app.NotificationManager$Policy)>(8, r2);

        $z12 = virtualinvoke r1.<android.service.notification.ZenPolicy: boolean isCategoryAllowed(int,boolean)>(3, $z11);

        if $z12 == 0 goto label05;

        i15 = i13 | 8;

        $i3 = virtualinvoke r1.<android.service.notification.ZenPolicy: int getPriorityCallSenders()>();

        i16 = specialinvoke r0.<android.service.notification.ZenModeConfig: int getNotificationPolicySenders(int,int)>($i3, i7);

     label05:
        i17 = i15;

        $z13 = specialinvoke r0.<android.service.notification.ZenModeConfig: boolean isPriorityCategoryEnabled(int,android.app.NotificationManager$Policy)>(16, r2);

        $z14 = virtualinvoke r1.<android.service.notification.ZenPolicy: boolean isCategoryAllowed(int,boolean)>(4, $z13);

        if $z14 == 0 goto label06;

        i17 = i15 | 16;

     label06:
        i18 = i17;

        $z15 = specialinvoke r0.<android.service.notification.ZenModeConfig: boolean isPriorityCategoryEnabled(int,android.app.NotificationManager$Policy)>(32, r2);

        $z16 = virtualinvoke r1.<android.service.notification.ZenPolicy: boolean isCategoryAllowed(int,boolean)>(5, $z15);

        if $z16 == 0 goto label07;

        i18 = i17 | 32;

     label07:
        i19 = i18;

        $z17 = specialinvoke r0.<android.service.notification.ZenModeConfig: boolean isPriorityCategoryEnabled(int,android.app.NotificationManager$Policy)>(64, r2);

        $z18 = virtualinvoke r1.<android.service.notification.ZenPolicy: boolean isCategoryAllowed(int,boolean)>(6, $z17);

        if $z18 == 0 goto label08;

        i19 = i18 | 64;

     label08:
        i20 = i19;

        $z19 = specialinvoke r0.<android.service.notification.ZenModeConfig: boolean isPriorityCategoryEnabled(int,android.app.NotificationManager$Policy)>(128, r2);

        $z20 = virtualinvoke r1.<android.service.notification.ZenPolicy: boolean isCategoryAllowed(int,boolean)>(7, $z19);

        if $z20 == 0 goto label09;

        i20 = i19 | 128;

     label09:
        $z21 = specialinvoke r0.<android.service.notification.ZenModeConfig: boolean isVisualEffectAllowed(int,android.app.NotificationManager$Policy)>(4, r2);

        $z22 = virtualinvoke r1.<android.service.notification.ZenPolicy: boolean isVisualEffectAllowed(int,boolean)>(0, $z21);

        z0 = $z22 ^ 1;

        $z23 = specialinvoke r0.<android.service.notification.ZenModeConfig: boolean isVisualEffectAllowed(int,android.app.NotificationManager$Policy)>(8, r2);

        $z24 = virtualinvoke r1.<android.service.notification.ZenPolicy: boolean isVisualEffectAllowed(int,boolean)>(1, $z23);

        z1 = $z24 ^ 1;

        $z25 = specialinvoke r0.<android.service.notification.ZenModeConfig: boolean isVisualEffectAllowed(int,android.app.NotificationManager$Policy)>(128, r2);

        $z26 = virtualinvoke r1.<android.service.notification.ZenPolicy: boolean isVisualEffectAllowed(int,boolean)>(5, $z25);

        z2 = 1 ^ $z26;

        i21 = 0;

        if z0 == 0 goto label10;

        i21 = 0;

        if z1 == 0 goto label10;

        i21 = 0;

        if z2 == 0 goto label10;

        i21 = 0 | 1;

     label10:
        i22 = i21;

        if z0 == 0 goto label11;

        i22 = i21 | 4;

     label11:
        i23 = i22;

        if z1 == 0 goto label12;

        i23 = i22 | 8;

     label12:
        i24 = i23;

        $z27 = specialinvoke r0.<android.service.notification.ZenModeConfig: boolean isVisualEffectAllowed(int,android.app.NotificationManager$Policy)>(16, r2);

        $z28 = virtualinvoke r1.<android.service.notification.ZenPolicy: boolean isVisualEffectAllowed(int,boolean)>(2, $z27);

        if $z28 != 0 goto label13;

        $i2 = i23 | 16;

        i24 = $i2 | 2;

     label13:
        i25 = i24;

        $z29 = specialinvoke r0.<android.service.notification.ZenModeConfig: boolean isVisualEffectAllowed(int,android.app.NotificationManager$Policy)>(32, r2);

        $z30 = virtualinvoke r1.<android.service.notification.ZenPolicy: boolean isVisualEffectAllowed(int,boolean)>(3, $z29);

        if $z30 != 0 goto label14;

        i25 = i24 | 32;

     label14:
        i26 = i25;

        $z31 = specialinvoke r0.<android.service.notification.ZenModeConfig: boolean isVisualEffectAllowed(int,android.app.NotificationManager$Policy)>(64, r2);

        $z32 = virtualinvoke r1.<android.service.notification.ZenPolicy: boolean isVisualEffectAllowed(int,boolean)>(4, $z31);

        if $z32 != 0 goto label15;

        i26 = i25 | 64;

     label15:
        i27 = i26;

        if z2 == 0 goto label16;

        i27 = i26 | 128;

     label16:
        i28 = i27;

        $z33 = specialinvoke r0.<android.service.notification.ZenModeConfig: boolean isVisualEffectAllowed(int,android.app.NotificationManager$Policy)>(256, r2);

        $z34 = virtualinvoke r1.<android.service.notification.ZenPolicy: boolean isVisualEffectAllowed(int,boolean)>(6, $z33);

        if $z34 != 0 goto label17;

        i28 = i27 | 256;

     label17:
        $r3 = new android.app.NotificationManager$Policy;

        $i1 = r2.<android.app.NotificationManager$Policy: int state>;

        specialinvoke $r3.<android.app.NotificationManager$Policy: void <init>(int,int,int,int,int,int)>(i20, i16, i12, i28, $i1, i14);

        return $r3;
    }

    public java.lang.String toString()
    {
        android.service.notification.ZenModeConfig r0;
        java.lang.StringBuilder $r2;
        java.lang.Class $r3;
        java.lang.String $r4, $r27, $r30, $r33, $r40, $r46;
        int $i0, $i1, $i2, $i3, $i4;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        android.service.notification.ZenModeConfig$ZenRule $r43;

        r0 := @this: android.service.notification.ZenModeConfig;

        $r2 = new java.lang.StringBuilder;

        $r3 = class "Landroid/service/notification/ZenModeConfig;";

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getSimpleName()>();

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(91);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("user=");

        $i0 = r0.<android.service.notification.ZenModeConfig: int user>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",allowAlarms=");

        $z0 = r0.<android.service.notification.ZenModeConfig: boolean allowAlarms>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",allowMedia=");

        $z1 = r0.<android.service.notification.ZenModeConfig: boolean allowMedia>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",allowSystem=");

        $z2 = r0.<android.service.notification.ZenModeConfig: boolean allowSystem>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z2);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",allowReminders=");

        $z3 = r0.<android.service.notification.ZenModeConfig: boolean allowReminders>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z3);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",allowEvents=");

        $z4 = r0.<android.service.notification.ZenModeConfig: boolean allowEvents>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z4);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",allowCalls=");

        $z5 = r0.<android.service.notification.ZenModeConfig: boolean allowCalls>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z5);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",allowRepeatCallers=");

        $z6 = r0.<android.service.notification.ZenModeConfig: boolean allowRepeatCallers>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z6);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",allowMessages=");

        $z7 = r0.<android.service.notification.ZenModeConfig: boolean allowMessages>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z7);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",allowConversations=");

        $z8 = r0.<android.service.notification.ZenModeConfig: boolean allowConversations>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z8);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",allowCallsFrom=");

        $i1 = r0.<android.service.notification.ZenModeConfig: int allowCallsFrom>;

        $r27 = staticinvoke <android.service.notification.ZenModeConfig: java.lang.String sourceToString(int)>($i1);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",allowMessagesFrom=");

        $i2 = r0.<android.service.notification.ZenModeConfig: int allowMessagesFrom>;

        $r30 = staticinvoke <android.service.notification.ZenModeConfig: java.lang.String sourceToString(int)>($i2);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",allowConvFrom=");

        $i3 = r0.<android.service.notification.ZenModeConfig: int allowConversationsFrom>;

        $r33 = staticinvoke <android.service.notification.ZenPolicy: java.lang.String conversationTypeToString(int)>($i3);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",suppressedVisualEffects=");

        $i4 = r0.<android.service.notification.ZenModeConfig: int suppressedVisualEffects>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",areChannelsBypassingDnd=");

        $z9 = r0.<android.service.notification.ZenModeConfig: boolean areChannelsBypassingDnd>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z9);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",\nautomaticRules=");

        $r40 = specialinvoke r0.<android.service.notification.ZenModeConfig: java.lang.String rulesToString()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r40);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",\nmanualRule=");

        $r43 = r0.<android.service.notification.ZenModeConfig: android.service.notification.ZenModeConfig$ZenRule manualRule>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r43);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(93);

        $r46 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r46;
    }

    public android.service.notification.ZenPolicy toZenPolicy()
    {
        android.service.notification.ZenModeConfig r0;
        android.service.notification.ZenPolicy$Builder $r1, $r2, $r3, $r4, $r5, $r6, $r7, r17, r18, r19;
        boolean $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, z10, z11, z12, z13, z14, z15, z16;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, i16, i17, i18, i19;
        android.service.notification.ZenPolicy $r20;

        r0 := @this: android.service.notification.ZenModeConfig;

        $r1 = new android.service.notification.ZenPolicy$Builder;

        specialinvoke $r1.<android.service.notification.ZenPolicy$Builder: void <init>()>();

        $z1 = r0.<android.service.notification.ZenModeConfig: boolean allowCalls>;

        if $z1 == 0 goto label01;

        $i15 = r0.<android.service.notification.ZenModeConfig: int allowCallsFrom>;

        i16 = staticinvoke <android.service.notification.ZenModeConfig: int getZenPolicySenders(int)>($i15);

        goto label02;

     label01:
        i16 = 4;

     label02:
        $r2 = virtualinvoke $r1.<android.service.notification.ZenPolicy$Builder: android.service.notification.ZenPolicy$Builder allowCalls(int)>(i16);

        $z2 = r0.<android.service.notification.ZenModeConfig: boolean allowRepeatCallers>;

        r17 = virtualinvoke $r2.<android.service.notification.ZenPolicy$Builder: android.service.notification.ZenPolicy$Builder allowRepeatCallers(boolean)>($z2);

        $z3 = r0.<android.service.notification.ZenModeConfig: boolean allowMessages>;

        if $z3 == 0 goto label03;

        $i14 = r0.<android.service.notification.ZenModeConfig: int allowMessagesFrom>;

        i17 = staticinvoke <android.service.notification.ZenModeConfig: int getZenPolicySenders(int)>($i14);

        goto label04;

     label03:
        i17 = 4;

     label04:
        $r3 = virtualinvoke r17.<android.service.notification.ZenPolicy$Builder: android.service.notification.ZenPolicy$Builder allowMessages(int)>(i17);

        $z4 = r0.<android.service.notification.ZenModeConfig: boolean allowReminders>;

        $r4 = virtualinvoke $r3.<android.service.notification.ZenPolicy$Builder: android.service.notification.ZenPolicy$Builder allowReminders(boolean)>($z4);

        $z5 = r0.<android.service.notification.ZenModeConfig: boolean allowEvents>;

        $r5 = virtualinvoke $r4.<android.service.notification.ZenPolicy$Builder: android.service.notification.ZenPolicy$Builder allowEvents(boolean)>($z5);

        $z6 = r0.<android.service.notification.ZenModeConfig: boolean allowAlarms>;

        $r6 = virtualinvoke $r5.<android.service.notification.ZenPolicy$Builder: android.service.notification.ZenPolicy$Builder allowAlarms(boolean)>($z6);

        $z7 = r0.<android.service.notification.ZenModeConfig: boolean allowMedia>;

        $r7 = virtualinvoke $r6.<android.service.notification.ZenPolicy$Builder: android.service.notification.ZenPolicy$Builder allowMedia(boolean)>($z7);

        $z8 = r0.<android.service.notification.ZenModeConfig: boolean allowSystem>;

        r18 = virtualinvoke $r7.<android.service.notification.ZenPolicy$Builder: android.service.notification.ZenPolicy$Builder allowSystem(boolean)>($z8);

        $z9 = r0.<android.service.notification.ZenModeConfig: boolean allowConversations>;

        if $z9 == 0 goto label05;

        $i13 = r0.<android.service.notification.ZenModeConfig: int allowConversationsFrom>;

        i18 = staticinvoke <android.service.notification.ZenModeConfig: int getZenPolicySenders(int)>($i13);

        goto label06;

     label05:
        i18 = 4;

     label06:
        r19 = virtualinvoke r18.<android.service.notification.ZenPolicy$Builder: android.service.notification.ZenPolicy$Builder allowConversations(int)>(i18);

        i19 = r0.<android.service.notification.ZenModeConfig: int suppressedVisualEffects>;

        if i19 != 0 goto label07;

        virtualinvoke r19.<android.service.notification.ZenPolicy$Builder: android.service.notification.ZenPolicy$Builder showAllVisualEffects()>();

        goto label22;

     label07:
        $i0 = i19 & 4;

        if $i0 != 0 goto label08;

        z10 = 1;

        goto label09;

     label08:
        z10 = 0;

     label09:
        virtualinvoke r19.<android.service.notification.ZenPolicy$Builder: android.service.notification.ZenPolicy$Builder showFullScreenIntent(boolean)>(z10);

        $i1 = r0.<android.service.notification.ZenModeConfig: int suppressedVisualEffects>;

        $i2 = $i1 & 8;

        if $i2 != 0 goto label10;

        z11 = 1;

        goto label11;

     label10:
        z11 = 0;

     label11:
        virtualinvoke r19.<android.service.notification.ZenPolicy$Builder: android.service.notification.ZenPolicy$Builder showLights(boolean)>(z11);

        $i3 = r0.<android.service.notification.ZenModeConfig: int suppressedVisualEffects>;

        $i4 = $i3 & 16;

        if $i4 != 0 goto label12;

        z12 = 1;

        goto label13;

     label12:
        z12 = 0;

     label13:
        virtualinvoke r19.<android.service.notification.ZenPolicy$Builder: android.service.notification.ZenPolicy$Builder showPeeking(boolean)>(z12);

        $i5 = r0.<android.service.notification.ZenModeConfig: int suppressedVisualEffects>;

        $i6 = $i5 & 32;

        if $i6 != 0 goto label14;

        z13 = 1;

        goto label15;

     label14:
        z13 = 0;

     label15:
        virtualinvoke r19.<android.service.notification.ZenPolicy$Builder: android.service.notification.ZenPolicy$Builder showStatusBarIcons(boolean)>(z13);

        $i7 = r0.<android.service.notification.ZenModeConfig: int suppressedVisualEffects>;

        $i8 = $i7 & 64;

        if $i8 != 0 goto label16;

        z14 = 1;

        goto label17;

     label16:
        z14 = 0;

     label17:
        virtualinvoke r19.<android.service.notification.ZenPolicy$Builder: android.service.notification.ZenPolicy$Builder showBadges(boolean)>(z14);

        $i9 = r0.<android.service.notification.ZenModeConfig: int suppressedVisualEffects>;

        $i10 = $i9 & 128;

        if $i10 != 0 goto label18;

        z15 = 1;

        goto label19;

     label18:
        z15 = 0;

     label19:
        virtualinvoke r19.<android.service.notification.ZenPolicy$Builder: android.service.notification.ZenPolicy$Builder showInAmbientDisplay(boolean)>(z15);

        $i11 = r0.<android.service.notification.ZenModeConfig: int suppressedVisualEffects>;

        $i12 = $i11 & 256;

        if $i12 != 0 goto label20;

        z16 = 1;

        goto label21;

     label20:
        z16 = 0;

     label21:
        virtualinvoke r19.<android.service.notification.ZenPolicy$Builder: android.service.notification.ZenPolicy$Builder showInNotificationList(boolean)>(z16);

     label22:
        $r20 = virtualinvoke r19.<android.service.notification.ZenPolicy$Builder: android.service.notification.ZenPolicy build()>();

        return $r20;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.service.notification.ZenModeConfig r0;
        android.os.Parcel r1;
        int i0, $i1, $i2, $i3, $i4, $i5, i6, i7, i8, i9, i10, i11, i12, i13, i14, i15, i16;
        java.lang.String[] r2;
        android.service.notification.ZenModeConfig$ZenRule[] r3;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10;
        android.service.notification.ZenModeConfig$ZenRule $r4, $r12;
        android.util.ArrayMap $r5, $r6, $r7, $r10;
        java.lang.Object $r8, $r11;
        java.lang.String $r9;

        r0 := @this: android.service.notification.ZenModeConfig;

        r1 := @parameter0: android.os.Parcel;

        i6 := @parameter1: int;

        $z0 = r0.<android.service.notification.ZenModeConfig: boolean allowCalls>;

        i8 = (int) $z0;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i8);

        $z1 = r0.<android.service.notification.ZenModeConfig: boolean allowRepeatCallers>;

        i9 = (int) $z1;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i9);

        $z2 = r0.<android.service.notification.ZenModeConfig: boolean allowMessages>;

        i10 = (int) $z2;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i10);

        $z3 = r0.<android.service.notification.ZenModeConfig: boolean allowReminders>;

        i11 = (int) $z3;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i11);

        $z4 = r0.<android.service.notification.ZenModeConfig: boolean allowEvents>;

        i12 = (int) $z4;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i12);

        $i1 = r0.<android.service.notification.ZenModeConfig: int allowCallsFrom>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i1);

        $i2 = r0.<android.service.notification.ZenModeConfig: int allowMessagesFrom>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i2);

        $i3 = r0.<android.service.notification.ZenModeConfig: int user>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i3);

        $r4 = r0.<android.service.notification.ZenModeConfig: android.service.notification.ZenModeConfig$ZenRule manualRule>;

        virtualinvoke r1.<android.os.Parcel: void writeParcelable(android.os.Parcelable,int)>($r4, 0);

        $r5 = r0.<android.service.notification.ZenModeConfig: android.util.ArrayMap automaticRules>;

        $z5 = virtualinvoke $r5.<android.util.ArrayMap: boolean isEmpty()>();

        if $z5 != 0 goto label3;

        $r6 = r0.<android.service.notification.ZenModeConfig: android.util.ArrayMap automaticRules>;

        i0 = virtualinvoke $r6.<android.util.ArrayMap: int size()>();

        r2 = newarray (java.lang.String)[i0];

        r3 = newarray (android.service.notification.ZenModeConfig$ZenRule)[i0];

        i7 = 0;

     label1:
        if i7 >= i0 goto label2;

        $r7 = r0.<android.service.notification.ZenModeConfig: android.util.ArrayMap automaticRules>;

        $r8 = virtualinvoke $r7.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i7);

        $r9 = (java.lang.String) $r8;

        r2[i7] = $r9;

        $r10 = r0.<android.service.notification.ZenModeConfig: android.util.ArrayMap automaticRules>;

        $r11 = virtualinvoke $r10.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i7);

        $r12 = (android.service.notification.ZenModeConfig$ZenRule) $r11;

        r3[i7] = $r12;

        i7 = i7 + 1;

        goto label1;

     label2:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeStringArray(java.lang.String[])>(r2);

        virtualinvoke r1.<android.os.Parcel: void writeTypedArray(android.os.Parcelable[],int)>(r3, 0);

        goto label4;

     label3:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label4:
        $z6 = r0.<android.service.notification.ZenModeConfig: boolean allowAlarms>;

        i13 = (int) $z6;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i13);

        $z7 = r0.<android.service.notification.ZenModeConfig: boolean allowMedia>;

        i14 = (int) $z7;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i14);

        $z8 = r0.<android.service.notification.ZenModeConfig: boolean allowSystem>;

        i15 = (int) $z8;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i15);

        $i4 = r0.<android.service.notification.ZenModeConfig: int suppressedVisualEffects>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i4);

        $z9 = r0.<android.service.notification.ZenModeConfig: boolean areChannelsBypassingDnd>;

        i16 = (int) $z9;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i16);

        $z10 = r0.<android.service.notification.ZenModeConfig: boolean allowConversations>;

        virtualinvoke r1.<android.os.Parcel: void writeBoolean(boolean)>($z10);

        $i5 = r0.<android.service.notification.ZenModeConfig: int allowConversationsFrom>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i5);

        return;
    }

    public void writeXml(org.xmlpull.v1.XmlSerializer, java.lang.Integer) throws java.io.IOException
    {
        android.service.notification.ZenModeConfig r0;
        org.xmlpull.v1.XmlSerializer r1;
        int i0, $i1, $i2, $i3, $i4, $i5, i6, i7;
        java.lang.String r2, $r4, $r6, $r9, $r11, $r13, $r15, $r17, $r19, $r21, $r23, $r25, $r27, $r29, $r31, $r35, $r41;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        android.service.notification.ZenModeConfig$ZenRule $r38, $r53, r56;
        android.util.ArrayMap $r39, $r45, $r47;
        java.lang.Object $r46, $r48;
        java.lang.Integer r55;

        r0 := @this: android.service.notification.ZenModeConfig;

        r1 := @parameter0: org.xmlpull.v1.XmlSerializer;

        r55 := @parameter1: java.lang.Integer;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "zen");

        if r55 != null goto label1;

        i6 = 8;

        goto label2;

     label1:
        i6 = virtualinvoke r55.<java.lang.Integer: int intValue()>();

     label2:
        $r4 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i6);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "version", $r4);

        $i1 = r0.<android.service.notification.ZenModeConfig: int user>;

        $r6 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i1);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "user", $r6);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "allow");

        $z0 = r0.<android.service.notification.ZenModeConfig: boolean allowCalls>;

        $r9 = staticinvoke <java.lang.Boolean: java.lang.String toString(boolean)>($z0);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "calls", $r9);

        $z1 = r0.<android.service.notification.ZenModeConfig: boolean allowRepeatCallers>;

        $r11 = staticinvoke <java.lang.Boolean: java.lang.String toString(boolean)>($z1);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "repeatCallers", $r11);

        $z2 = r0.<android.service.notification.ZenModeConfig: boolean allowMessages>;

        $r13 = staticinvoke <java.lang.Boolean: java.lang.String toString(boolean)>($z2);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "messages", $r13);

        $z3 = r0.<android.service.notification.ZenModeConfig: boolean allowReminders>;

        $r15 = staticinvoke <java.lang.Boolean: java.lang.String toString(boolean)>($z3);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "reminders", $r15);

        $z4 = r0.<android.service.notification.ZenModeConfig: boolean allowEvents>;

        $r17 = staticinvoke <java.lang.Boolean: java.lang.String toString(boolean)>($z4);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "events", $r17);

        $i2 = r0.<android.service.notification.ZenModeConfig: int allowCallsFrom>;

        $r19 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i2);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "callsFrom", $r19);

        $i3 = r0.<android.service.notification.ZenModeConfig: int allowMessagesFrom>;

        $r21 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i3);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "messagesFrom", $r21);

        $z5 = r0.<android.service.notification.ZenModeConfig: boolean allowAlarms>;

        $r23 = staticinvoke <java.lang.Boolean: java.lang.String toString(boolean)>($z5);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "alarms", $r23);

        $z6 = r0.<android.service.notification.ZenModeConfig: boolean allowMedia>;

        $r25 = staticinvoke <java.lang.Boolean: java.lang.String toString(boolean)>($z6);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "media", $r25);

        $z7 = r0.<android.service.notification.ZenModeConfig: boolean allowSystem>;

        $r27 = staticinvoke <java.lang.Boolean: java.lang.String toString(boolean)>($z7);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "system", $r27);

        $z8 = r0.<android.service.notification.ZenModeConfig: boolean allowConversations>;

        $r29 = staticinvoke <java.lang.Boolean: java.lang.String toString(boolean)>($z8);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "convos", $r29);

        $i4 = r0.<android.service.notification.ZenModeConfig: int allowConversationsFrom>;

        $r31 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i4);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "convosFrom", $r31);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "allow");

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "disallow");

        $i5 = r0.<android.service.notification.ZenModeConfig: int suppressedVisualEffects>;

        $r35 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i5);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "visualEffects", $r35);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "disallow");

        $r38 = r0.<android.service.notification.ZenModeConfig: android.service.notification.ZenModeConfig$ZenRule manualRule>;

        if $r38 == null goto label3;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "manual");

        $r53 = r0.<android.service.notification.ZenModeConfig: android.service.notification.ZenModeConfig$ZenRule manualRule>;

        staticinvoke <android.service.notification.ZenModeConfig: void writeRuleXml(android.service.notification.ZenModeConfig$ZenRule,org.xmlpull.v1.XmlSerializer)>($r53, r1);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "manual");

     label3:
        $r39 = r0.<android.service.notification.ZenModeConfig: android.util.ArrayMap automaticRules>;

        i0 = virtualinvoke $r39.<android.util.ArrayMap: int size()>();

        i7 = 0;

     label4:
        if i7 >= i0 goto label5;

        $r45 = r0.<android.service.notification.ZenModeConfig: android.util.ArrayMap automaticRules>;

        $r46 = virtualinvoke $r45.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i7);

        r2 = (java.lang.String) $r46;

        $r47 = r0.<android.service.notification.ZenModeConfig: android.util.ArrayMap automaticRules>;

        $r48 = virtualinvoke $r47.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i7);

        r56 = (android.service.notification.ZenModeConfig$ZenRule) $r48;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "automatic");

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "ruleId", r2);

        staticinvoke <android.service.notification.ZenModeConfig: void writeRuleXml(android.service.notification.ZenModeConfig$ZenRule,org.xmlpull.v1.XmlSerializer)>(r56, r1);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "automatic");

        i7 = i7 + 1;

        goto label4;

     label5:
        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "state");

        $z9 = r0.<android.service.notification.ZenModeConfig: boolean areChannelsBypassingDnd>;

        $r41 = staticinvoke <java.lang.Boolean: java.lang.String toString(boolean)>($z9);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "areChannelsBypassingDnd", $r41);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "state");

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "zen");

        return;
    }
}
