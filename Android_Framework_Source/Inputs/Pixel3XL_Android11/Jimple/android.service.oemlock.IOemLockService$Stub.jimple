public abstract class android.service.oemlock.IOemLockService$Stub extends android.os.Binder implements android.service.oemlock.IOemLockService
{
    private static final java.lang.String DESCRIPTOR;
    static final int TRANSACTION_getLockName;
    static final int TRANSACTION_isDeviceOemUnlocked;
    static final int TRANSACTION_isOemUnlockAllowed;
    static final int TRANSACTION_isOemUnlockAllowedByCarrier;
    static final int TRANSACTION_isOemUnlockAllowedByUser;
    static final int TRANSACTION_setOemUnlockAllowedByCarrier;
    static final int TRANSACTION_setOemUnlockAllowedByUser;

    public void <init>()
    {
        android.service.oemlock.IOemLockService$Stub r0;

        r0 := @this: android.service.oemlock.IOemLockService$Stub;

        specialinvoke r0.<android.os.Binder: void <init>()>();

        virtualinvoke r0.<android.service.oemlock.IOemLockService$Stub: void attachInterface(android.os.IInterface,java.lang.String)>(r0, "android.service.oemlock.IOemLockService");

        return;
    }

    public static android.service.oemlock.IOemLockService asInterface(android.os.IBinder)
    {
        android.os.IBinder r0;
        android.os.IInterface r1;
        android.service.oemlock.IOemLockService$Stub$Proxy $r2;
        boolean $z0;
        android.service.oemlock.IOemLockService $r3;

        r0 := @parameter0: android.os.IBinder;

        if r0 != null goto label1;

        return null;

     label1:
        r1 = interfaceinvoke r0.<android.os.IBinder: android.os.IInterface queryLocalInterface(java.lang.String)>("android.service.oemlock.IOemLockService");

        if r1 == null goto label2;

        $z0 = r1 instanceof android.service.oemlock.IOemLockService;

        if $z0 == 0 goto label2;

        $r3 = (android.service.oemlock.IOemLockService) r1;

        return $r3;

     label2:
        $r2 = new android.service.oemlock.IOemLockService$Stub$Proxy;

        specialinvoke $r2.<android.service.oemlock.IOemLockService$Stub$Proxy: void <init>(android.os.IBinder)>(r0);

        return $r2;
    }

    public static android.service.oemlock.IOemLockService getDefaultImpl()
    {
        android.service.oemlock.IOemLockService $r0;

        $r0 = <android.service.oemlock.IOemLockService$Stub$Proxy: android.service.oemlock.IOemLockService sDefaultImpl>;

        return $r0;
    }

    public static java.lang.String getDefaultTransactionName(int)
    {
        int i0;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 1: goto label8;
            case 2: goto label7;
            case 3: goto label6;
            case 4: goto label5;
            case 5: goto label4;
            case 6: goto label3;
            case 7: goto label2;
            default: goto label1;
        };

     label1:
        return null;

     label2:
        return "isDeviceOemUnlocked";

     label3:
        return "isOemUnlockAllowed";

     label4:
        return "isOemUnlockAllowedByUser";

     label5:
        return "setOemUnlockAllowedByUser";

     label6:
        return "isOemUnlockAllowedByCarrier";

     label7:
        return "setOemUnlockAllowedByCarrier";

     label8:
        return "getLockName";
    }

    public static boolean setDefaultImpl(android.service.oemlock.IOemLockService)
    {
        android.service.oemlock.IOemLockService r0, $r1;
        java.lang.IllegalStateException $r2;

        r0 := @parameter0: android.service.oemlock.IOemLockService;

        $r1 = <android.service.oemlock.IOemLockService$Stub$Proxy: android.service.oemlock.IOemLockService sDefaultImpl>;

        if $r1 != null goto label2;

        if r0 == null goto label1;

        <android.service.oemlock.IOemLockService$Stub$Proxy: android.service.oemlock.IOemLockService sDefaultImpl> = r0;

        return 1;

     label1:
        return 0;

     label2:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("setDefaultImpl() called twice");

        throw $r2;
    }

    public android.os.IBinder asBinder()
    {
        android.service.oemlock.IOemLockService$Stub r0;

        r0 := @this: android.service.oemlock.IOemLockService$Stub;

        return r0;
    }

    public java.lang.String getTransactionName(int)
    {
        android.service.oemlock.IOemLockService$Stub r0;
        int i0;
        java.lang.String $r1;

        r0 := @this: android.service.oemlock.IOemLockService$Stub;

        i0 := @parameter0: int;

        $r1 = staticinvoke <android.service.oemlock.IOemLockService$Stub: java.lang.String getDefaultTransactionName(int)>(i0);

        return $r1;
    }

    public boolean onTransact(int, android.os.Parcel, android.os.Parcel, int) throws android.os.RemoteException
    {
        android.service.oemlock.IOemLockService$Stub r0;
        android.os.Parcel r1, r3;
        int i0, $i1, $i2, i3, i4, i5, i6, i7;
        byte[] $r2;
        boolean $z1, z2, z3, z4, z5, z6, z7;
        java.lang.String r4;

        r0 := @this: android.service.oemlock.IOemLockService$Stub;

        i3 := @parameter0: int;

        r3 := @parameter1: android.os.Parcel;

        r1 := @parameter2: android.os.Parcel;

        i0 := @parameter3: int;

        if i3 == 1598968902 goto label11;

        z2 = 0;

        tableswitch(i3)
        {
            case 1: goto label10;
            case 2: goto label08;
            case 3: goto label07;
            case 4: goto label05;
            case 5: goto label04;
            case 6: goto label03;
            case 7: goto label02;
            default: goto label01;
        };

     label01:
        $z1 = specialinvoke r0.<android.os.Binder: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>(i3, r3, r1, i0);

        return $z1;

     label02:
        virtualinvoke r3.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.service.oemlock.IOemLockService");

        z3 = virtualinvoke r0.<android.service.oemlock.IOemLockService$Stub: boolean isDeviceOemUnlocked()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i4 = (int) z3;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i4);

        return 1;

     label03:
        virtualinvoke r3.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.service.oemlock.IOemLockService");

        z4 = virtualinvoke r0.<android.service.oemlock.IOemLockService$Stub: boolean isOemUnlockAllowed()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i5 = (int) z4;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i5);

        return 1;

     label04:
        virtualinvoke r3.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.service.oemlock.IOemLockService");

        z5 = virtualinvoke r0.<android.service.oemlock.IOemLockService$Stub: boolean isOemUnlockAllowedByUser()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i6 = (int) z5;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i6);

        return 1;

     label05:
        virtualinvoke r3.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.service.oemlock.IOemLockService");

        $i1 = virtualinvoke r3.<android.os.Parcel: int readInt()>();

        if $i1 == 0 goto label06;

        z2 = 1;

     label06:
        virtualinvoke r0.<android.service.oemlock.IOemLockService$Stub: void setOemUnlockAllowedByUser(boolean)>(z2);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label07:
        virtualinvoke r3.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.service.oemlock.IOemLockService");

        z6 = virtualinvoke r0.<android.service.oemlock.IOemLockService$Stub: boolean isOemUnlockAllowedByCarrier()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i7 = (int) z6;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i7);

        return 1;

     label08:
        virtualinvoke r3.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.service.oemlock.IOemLockService");

        z7 = 0;

        $i2 = virtualinvoke r3.<android.os.Parcel: int readInt()>();

        if $i2 == 0 goto label09;

        z7 = 1;

     label09:
        $r2 = virtualinvoke r3.<android.os.Parcel: byte[] createByteArray()>();

        virtualinvoke r0.<android.service.oemlock.IOemLockService$Stub: void setOemUnlockAllowedByCarrier(boolean,byte[])>(z7, $r2);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label10:
        virtualinvoke r3.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.service.oemlock.IOemLockService");

        r4 = virtualinvoke r0.<android.service.oemlock.IOemLockService$Stub: java.lang.String getLockName()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r4);

        return 1;

     label11:
        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>("android.service.oemlock.IOemLockService");

        return 1;
    }

    public static void <clinit>()
    {
        <android.service.oemlock.IOemLockService$Stub: int TRANSACTION_setOemUnlockAllowedByUser> = 4;

        <android.service.oemlock.IOemLockService$Stub: int TRANSACTION_setOemUnlockAllowedByCarrier> = 2;

        <android.service.oemlock.IOemLockService$Stub: int TRANSACTION_isOemUnlockAllowedByUser> = 5;

        <android.service.oemlock.IOemLockService$Stub: int TRANSACTION_isOemUnlockAllowedByCarrier> = 3;

        <android.service.oemlock.IOemLockService$Stub: int TRANSACTION_isOemUnlockAllowed> = 6;

        <android.service.oemlock.IOemLockService$Stub: int TRANSACTION_isDeviceOemUnlocked> = 7;

        <android.service.oemlock.IOemLockService$Stub: int TRANSACTION_getLockName> = 1;

        <android.service.oemlock.IOemLockService$Stub: java.lang.String DESCRIPTOR> = "android.service.oemlock.IOemLockService";

        return;
    }
}
