public class android.service.oemlock.OemLockManager extends java.lang.Object
{
    private android.service.oemlock.IOemLockService mService;

    public void <init>(android.service.oemlock.IOemLockService)
    {
        android.service.oemlock.OemLockManager r0;
        android.service.oemlock.IOemLockService r1;

        r0 := @this: android.service.oemlock.OemLockManager;

        r1 := @parameter0: android.service.oemlock.IOemLockService;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.service.oemlock.OemLockManager: android.service.oemlock.IOemLockService mService> = r1;

        return;
    }

    public java.lang.String getLockName()
    {
        android.service.oemlock.OemLockManager r0;
        android.service.oemlock.IOemLockService $r1;
        android.os.RemoteException $r2;
        java.lang.RuntimeException $r3;
        java.lang.String r4;

        r0 := @this: android.service.oemlock.OemLockManager;

     label1:
        $r1 = r0.<android.service.oemlock.OemLockManager: android.service.oemlock.IOemLockService mService>;

        r4 = interfaceinvoke $r1.<android.service.oemlock.IOemLockService: java.lang.String getLockName()>();

     label2:
        return r4;

     label3:
        $r2 := @caughtexception;

        $r3 = virtualinvoke $r2.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r3;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean isDeviceOemUnlocked()
    {
        android.service.oemlock.OemLockManager r0;
        boolean z0;
        android.service.oemlock.IOemLockService $r2;
        android.os.RemoteException $r3;
        java.lang.RuntimeException $r4;

        r0 := @this: android.service.oemlock.OemLockManager;

     label1:
        $r2 = r0.<android.service.oemlock.OemLockManager: android.service.oemlock.IOemLockService mService>;

        z0 = interfaceinvoke $r2.<android.service.oemlock.IOemLockService: boolean isDeviceOemUnlocked()>();

     label2:
        return z0;

     label3:
        $r3 := @caughtexception;

        $r4 = virtualinvoke $r3.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r4;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean isOemUnlockAllowed()
    {
        android.service.oemlock.OemLockManager r0;
        boolean z0;
        android.service.oemlock.IOemLockService $r2;
        android.os.RemoteException $r3;
        java.lang.RuntimeException $r4;

        r0 := @this: android.service.oemlock.OemLockManager;

     label1:
        $r2 = r0.<android.service.oemlock.OemLockManager: android.service.oemlock.IOemLockService mService>;

        z0 = interfaceinvoke $r2.<android.service.oemlock.IOemLockService: boolean isOemUnlockAllowed()>();

     label2:
        return z0;

     label3:
        $r3 := @caughtexception;

        $r4 = virtualinvoke $r3.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r4;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean isOemUnlockAllowedByCarrier()
    {
        android.service.oemlock.OemLockManager r0;
        boolean z0;
        android.service.oemlock.IOemLockService $r2;
        android.os.RemoteException $r3;
        java.lang.RuntimeException $r4;

        r0 := @this: android.service.oemlock.OemLockManager;

     label1:
        $r2 = r0.<android.service.oemlock.OemLockManager: android.service.oemlock.IOemLockService mService>;

        z0 = interfaceinvoke $r2.<android.service.oemlock.IOemLockService: boolean isOemUnlockAllowedByCarrier()>();

     label2:
        return z0;

     label3:
        $r3 := @caughtexception;

        $r4 = virtualinvoke $r3.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r4;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean isOemUnlockAllowedByUser()
    {
        android.service.oemlock.OemLockManager r0;
        boolean z0;
        android.service.oemlock.IOemLockService $r2;
        android.os.RemoteException $r3;
        java.lang.RuntimeException $r4;

        r0 := @this: android.service.oemlock.OemLockManager;

     label1:
        $r2 = r0.<android.service.oemlock.OemLockManager: android.service.oemlock.IOemLockService mService>;

        z0 = interfaceinvoke $r2.<android.service.oemlock.IOemLockService: boolean isOemUnlockAllowedByUser()>();

     label2:
        return z0;

     label3:
        $r3 := @caughtexception;

        $r4 = virtualinvoke $r3.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r4;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void setOemUnlockAllowedByCarrier(boolean, byte[])
    {
        android.service.oemlock.OemLockManager r0;
        boolean z0;
        android.service.oemlock.IOemLockService $r1;
        android.os.RemoteException $r2;
        java.lang.RuntimeException $r3;
        byte[] r4;

        r0 := @this: android.service.oemlock.OemLockManager;

        z0 := @parameter0: boolean;

        r4 := @parameter1: byte[];

     label1:
        $r1 = r0.<android.service.oemlock.OemLockManager: android.service.oemlock.IOemLockService mService>;

        interfaceinvoke $r1.<android.service.oemlock.IOemLockService: void setOemUnlockAllowedByCarrier(boolean,byte[])>(z0, r4);

     label2:
        return;

     label3:
        $r2 := @caughtexception;

        $r3 = virtualinvoke $r2.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r3;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void setOemUnlockAllowedByUser(boolean)
    {
        android.service.oemlock.OemLockManager r0;
        boolean z0;
        android.service.oemlock.IOemLockService $r2;
        android.os.RemoteException $r3;
        java.lang.RuntimeException $r4;

        r0 := @this: android.service.oemlock.OemLockManager;

        z0 := @parameter0: boolean;

     label1:
        $r2 = r0.<android.service.oemlock.OemLockManager: android.service.oemlock.IOemLockService mService>;

        interfaceinvoke $r2.<android.service.oemlock.IOemLockService: void setOemUnlockAllowedByUser(boolean)>(z0);

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        $r4 = virtualinvoke $r3.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r4;

        catch android.os.RemoteException from label1 to label2 with label3;
    }
}
