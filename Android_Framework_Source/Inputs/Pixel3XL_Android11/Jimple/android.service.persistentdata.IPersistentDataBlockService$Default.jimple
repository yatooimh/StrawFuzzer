public class android.service.persistentdata.IPersistentDataBlockService$Default extends java.lang.Object implements android.service.persistentdata.IPersistentDataBlockService
{

    public void <init>()
    {
        android.service.persistentdata.IPersistentDataBlockService$Default r0;

        r0 := @this: android.service.persistentdata.IPersistentDataBlockService$Default;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public android.os.IBinder asBinder()
    {
        android.service.persistentdata.IPersistentDataBlockService$Default r0;

        r0 := @this: android.service.persistentdata.IPersistentDataBlockService$Default;

        return null;
    }

    public int getDataBlockSize() throws android.os.RemoteException
    {
        android.service.persistentdata.IPersistentDataBlockService$Default r0;

        r0 := @this: android.service.persistentdata.IPersistentDataBlockService$Default;

        return 0;
    }

    public int getFlashLockState() throws android.os.RemoteException
    {
        android.service.persistentdata.IPersistentDataBlockService$Default r0;

        r0 := @this: android.service.persistentdata.IPersistentDataBlockService$Default;

        return 0;
    }

    public long getMaximumDataBlockSize() throws android.os.RemoteException
    {
        android.service.persistentdata.IPersistentDataBlockService$Default r0;

        r0 := @this: android.service.persistentdata.IPersistentDataBlockService$Default;

        return 0L;
    }

    public boolean getOemUnlockEnabled() throws android.os.RemoteException
    {
        android.service.persistentdata.IPersistentDataBlockService$Default r0;

        r0 := @this: android.service.persistentdata.IPersistentDataBlockService$Default;

        return 0;
    }

    public boolean hasFrpCredentialHandle() throws android.os.RemoteException
    {
        android.service.persistentdata.IPersistentDataBlockService$Default r0;

        r0 := @this: android.service.persistentdata.IPersistentDataBlockService$Default;

        return 0;
    }

    public byte[] read() throws android.os.RemoteException
    {
        android.service.persistentdata.IPersistentDataBlockService$Default r0;

        r0 := @this: android.service.persistentdata.IPersistentDataBlockService$Default;

        return null;
    }

    public void setOemUnlockEnabled(boolean) throws android.os.RemoteException
    {
        android.service.persistentdata.IPersistentDataBlockService$Default r0;
        boolean z0;

        r0 := @this: android.service.persistentdata.IPersistentDataBlockService$Default;

        z0 := @parameter0: boolean;

        return;
    }

    public void wipe() throws android.os.RemoteException
    {
        android.service.persistentdata.IPersistentDataBlockService$Default r0;

        r0 := @this: android.service.persistentdata.IPersistentDataBlockService$Default;

        return;
    }

    public int write(byte[]) throws android.os.RemoteException
    {
        android.service.persistentdata.IPersistentDataBlockService$Default r0;
        byte[] r1;

        r0 := @this: android.service.persistentdata.IPersistentDataBlockService$Default;

        r1 := @parameter0: byte[];

        return 0;
    }
}
