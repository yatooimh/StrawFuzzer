public abstract class android.service.persistentdata.IPersistentDataBlockService$Stub extends android.os.Binder implements android.service.persistentdata.IPersistentDataBlockService
{
    private static final java.lang.String DESCRIPTOR;
    static final int TRANSACTION_getDataBlockSize;
    static final int TRANSACTION_getFlashLockState;
    static final int TRANSACTION_getMaximumDataBlockSize;
    static final int TRANSACTION_getOemUnlockEnabled;
    static final int TRANSACTION_hasFrpCredentialHandle;
    static final int TRANSACTION_read;
    static final int TRANSACTION_setOemUnlockEnabled;
    static final int TRANSACTION_wipe;
    static final int TRANSACTION_write;

    public void <init>()
    {
        android.service.persistentdata.IPersistentDataBlockService$Stub r0;

        r0 := @this: android.service.persistentdata.IPersistentDataBlockService$Stub;

        specialinvoke r0.<android.os.Binder: void <init>()>();

        virtualinvoke r0.<android.service.persistentdata.IPersistentDataBlockService$Stub: void attachInterface(android.os.IInterface,java.lang.String)>(r0, "android.service.persistentdata.IPersistentDataBlockService");

        return;
    }

    public static android.service.persistentdata.IPersistentDataBlockService asInterface(android.os.IBinder)
    {
        android.os.IBinder r0;
        android.os.IInterface r1;
        android.service.persistentdata.IPersistentDataBlockService$Stub$Proxy $r2;
        boolean $z0;
        android.service.persistentdata.IPersistentDataBlockService $r3;

        r0 := @parameter0: android.os.IBinder;

        if r0 != null goto label1;

        return null;

     label1:
        r1 = interfaceinvoke r0.<android.os.IBinder: android.os.IInterface queryLocalInterface(java.lang.String)>("android.service.persistentdata.IPersistentDataBlockService");

        if r1 == null goto label2;

        $z0 = r1 instanceof android.service.persistentdata.IPersistentDataBlockService;

        if $z0 == 0 goto label2;

        $r3 = (android.service.persistentdata.IPersistentDataBlockService) r1;

        return $r3;

     label2:
        $r2 = new android.service.persistentdata.IPersistentDataBlockService$Stub$Proxy;

        specialinvoke $r2.<android.service.persistentdata.IPersistentDataBlockService$Stub$Proxy: void <init>(android.os.IBinder)>(r0);

        return $r2;
    }

    public static android.service.persistentdata.IPersistentDataBlockService getDefaultImpl()
    {
        android.service.persistentdata.IPersistentDataBlockService $r0;

        $r0 = <android.service.persistentdata.IPersistentDataBlockService$Stub$Proxy: android.service.persistentdata.IPersistentDataBlockService sDefaultImpl>;

        return $r0;
    }

    public static java.lang.String getDefaultTransactionName(int)
    {
        int i0;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 1: goto label10;
            case 2: goto label09;
            case 3: goto label08;
            case 4: goto label07;
            case 5: goto label06;
            case 6: goto label05;
            case 7: goto label04;
            case 8: goto label03;
            case 9: goto label02;
            default: goto label01;
        };

     label01:
        return null;

     label02:
        return "hasFrpCredentialHandle";

     label03:
        return "getFlashLockState";

     label04:
        return "getOemUnlockEnabled";

     label05:
        return "setOemUnlockEnabled";

     label06:
        return "getMaximumDataBlockSize";

     label07:
        return "getDataBlockSize";

     label08:
        return "wipe";

     label09:
        return "read";

     label10:
        return "write";
    }

    public static boolean setDefaultImpl(android.service.persistentdata.IPersistentDataBlockService)
    {
        android.service.persistentdata.IPersistentDataBlockService r0, $r1;
        java.lang.IllegalStateException $r2;

        r0 := @parameter0: android.service.persistentdata.IPersistentDataBlockService;

        $r1 = <android.service.persistentdata.IPersistentDataBlockService$Stub$Proxy: android.service.persistentdata.IPersistentDataBlockService sDefaultImpl>;

        if $r1 != null goto label2;

        if r0 == null goto label1;

        <android.service.persistentdata.IPersistentDataBlockService$Stub$Proxy: android.service.persistentdata.IPersistentDataBlockService sDefaultImpl> = r0;

        return 1;

     label1:
        return 0;

     label2:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("setDefaultImpl() called twice");

        throw $r2;
    }

    public android.os.IBinder asBinder()
    {
        android.service.persistentdata.IPersistentDataBlockService$Stub r0;

        r0 := @this: android.service.persistentdata.IPersistentDataBlockService$Stub;

        return r0;
    }

    public java.lang.String getTransactionName(int)
    {
        android.service.persistentdata.IPersistentDataBlockService$Stub r0;
        int i0;
        java.lang.String $r1;

        r0 := @this: android.service.persistentdata.IPersistentDataBlockService$Stub;

        i0 := @parameter0: int;

        $r1 = staticinvoke <android.service.persistentdata.IPersistentDataBlockService$Stub: java.lang.String getDefaultTransactionName(int)>(i0);

        return $r1;
    }

    public boolean onTransact(int, android.os.Parcel, android.os.Parcel, int) throws android.os.RemoteException
    {
        android.service.persistentdata.IPersistentDataBlockService$Stub r0;
        android.os.Parcel r1, r3;
        int i0, $i2, i3, i4, i5, i6, i7, i8;
        long l1;
        byte[] $r2, r4;
        boolean $z0, z1, z2, z3;

        r0 := @this: android.service.persistentdata.IPersistentDataBlockService$Stub;

        i3 := @parameter0: int;

        r3 := @parameter1: android.os.Parcel;

        r1 := @parameter2: android.os.Parcel;

        i0 := @parameter3: int;

        if i3 == 1598968902 goto label13;

        tableswitch(i3)
        {
            case 1: goto label12;
            case 2: goto label11;
            case 3: goto label10;
            case 4: goto label09;
            case 5: goto label08;
            case 6: goto label05;
            case 7: goto label04;
            case 8: goto label03;
            case 9: goto label02;
            default: goto label01;
        };

     label01:
        $z0 = specialinvoke r0.<android.os.Binder: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>(i3, r3, r1, i0);

        return $z0;

     label02:
        virtualinvoke r3.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.service.persistentdata.IPersistentDataBlockService");

        z1 = virtualinvoke r0.<android.service.persistentdata.IPersistentDataBlockService$Stub: boolean hasFrpCredentialHandle()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i7 = (int) z1;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i7);

        return 1;

     label03:
        virtualinvoke r3.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.service.persistentdata.IPersistentDataBlockService");

        i4 = virtualinvoke r0.<android.service.persistentdata.IPersistentDataBlockService$Stub: int getFlashLockState()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i4);

        return 1;

     label04:
        virtualinvoke r3.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.service.persistentdata.IPersistentDataBlockService");

        z2 = virtualinvoke r0.<android.service.persistentdata.IPersistentDataBlockService$Stub: boolean getOemUnlockEnabled()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i8 = (int) z2;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i8);

        return 1;

     label05:
        virtualinvoke r3.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.service.persistentdata.IPersistentDataBlockService");

        $i2 = virtualinvoke r3.<android.os.Parcel: int readInt()>();

        if $i2 == 0 goto label06;

        z3 = 1;

        goto label07;

     label06:
        z3 = 0;

     label07:
        virtualinvoke r0.<android.service.persistentdata.IPersistentDataBlockService$Stub: void setOemUnlockEnabled(boolean)>(z3);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label08:
        virtualinvoke r3.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.service.persistentdata.IPersistentDataBlockService");

        l1 = virtualinvoke r0.<android.service.persistentdata.IPersistentDataBlockService$Stub: long getMaximumDataBlockSize()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>(l1);

        return 1;

     label09:
        virtualinvoke r3.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.service.persistentdata.IPersistentDataBlockService");

        i5 = virtualinvoke r0.<android.service.persistentdata.IPersistentDataBlockService$Stub: int getDataBlockSize()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i5);

        return 1;

     label10:
        virtualinvoke r3.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.service.persistentdata.IPersistentDataBlockService");

        virtualinvoke r0.<android.service.persistentdata.IPersistentDataBlockService$Stub: void wipe()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label11:
        virtualinvoke r3.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.service.persistentdata.IPersistentDataBlockService");

        r4 = virtualinvoke r0.<android.service.persistentdata.IPersistentDataBlockService$Stub: byte[] read()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeByteArray(byte[])>(r4);

        return 1;

     label12:
        virtualinvoke r3.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.service.persistentdata.IPersistentDataBlockService");

        $r2 = virtualinvoke r3.<android.os.Parcel: byte[] createByteArray()>();

        i6 = virtualinvoke r0.<android.service.persistentdata.IPersistentDataBlockService$Stub: int write(byte[])>($r2);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i6);

        return 1;

     label13:
        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>("android.service.persistentdata.IPersistentDataBlockService");

        return 1;
    }

    public static void <clinit>()
    {
        <android.service.persistentdata.IPersistentDataBlockService$Stub: int TRANSACTION_write> = 1;

        <android.service.persistentdata.IPersistentDataBlockService$Stub: int TRANSACTION_wipe> = 3;

        <android.service.persistentdata.IPersistentDataBlockService$Stub: int TRANSACTION_setOemUnlockEnabled> = 6;

        <android.service.persistentdata.IPersistentDataBlockService$Stub: int TRANSACTION_read> = 2;

        <android.service.persistentdata.IPersistentDataBlockService$Stub: int TRANSACTION_hasFrpCredentialHandle> = 9;

        <android.service.persistentdata.IPersistentDataBlockService$Stub: int TRANSACTION_getOemUnlockEnabled> = 7;

        <android.service.persistentdata.IPersistentDataBlockService$Stub: int TRANSACTION_getMaximumDataBlockSize> = 5;

        <android.service.persistentdata.IPersistentDataBlockService$Stub: int TRANSACTION_getFlashLockState> = 8;

        <android.service.persistentdata.IPersistentDataBlockService$Stub: int TRANSACTION_getDataBlockSize> = 4;

        <android.service.persistentdata.IPersistentDataBlockService$Stub: java.lang.String DESCRIPTOR> = "android.service.persistentdata.IPersistentDataBlockService";

        return;
    }
}
