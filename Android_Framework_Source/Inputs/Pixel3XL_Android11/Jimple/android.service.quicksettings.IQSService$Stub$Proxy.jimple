class android.service.quicksettings.IQSService$Stub$Proxy extends java.lang.Object implements android.service.quicksettings.IQSService
{
    public static android.service.quicksettings.IQSService sDefaultImpl;
    private android.os.IBinder mRemote;

    void <init>(android.os.IBinder)
    {
        android.service.quicksettings.IQSService$Stub$Proxy r0;
        android.os.IBinder r1;

        r0 := @this: android.service.quicksettings.IQSService$Stub$Proxy;

        r1 := @parameter0: android.os.IBinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.service.quicksettings.IQSService$Stub$Proxy: android.os.IBinder mRemote> = r1;

        return;
    }

    public android.os.IBinder asBinder()
    {
        android.service.quicksettings.IQSService$Stub$Proxy r0;
        android.os.IBinder $r1;

        r0 := @this: android.service.quicksettings.IQSService$Stub$Proxy;

        $r1 = r0.<android.service.quicksettings.IQSService$Stub$Proxy: android.os.IBinder mRemote>;

        return $r1;
    }

    public java.lang.String getInterfaceDescriptor()
    {
        android.service.quicksettings.IQSService$Stub$Proxy r0;

        r0 := @this: android.service.quicksettings.IQSService$Stub$Proxy;

        return "android.service.quicksettings.IQSService";
    }

    public android.service.quicksettings.Tile getTile(android.os.IBinder) throws android.os.RemoteException
    {
        android.service.quicksettings.IQSService$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r9;
        boolean $z0;
        int $i0;
        android.os.Parcelable$Creator $r4;
        java.lang.Object $r5;
        android.service.quicksettings.IQSService $r6, $r7;
        java.lang.Throwable $r8;
        android.service.quicksettings.Tile r10, r11;

        r0 := @this: android.service.quicksettings.IQSService$Stub$Proxy;

        r9 := @parameter0: android.os.IBinder;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.service.quicksettings.IQSService");

        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r9);

        $r3 = r0.<android.service.quicksettings.IQSService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <android.service.quicksettings.IQSService$Stub: android.service.quicksettings.IQSService getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <android.service.quicksettings.IQSService$Stub: android.service.quicksettings.IQSService getDefaultImpl()>();

        r10 = interfaceinvoke $r7.<android.service.quicksettings.IQSService: android.service.quicksettings.Tile getTile(android.os.IBinder)>(r9);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r10;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

        if $i0 == 0 goto label5;

        $r4 = <android.service.quicksettings.Tile: android.os.Parcelable$Creator CREATOR>;

        $r5 = interfaceinvoke $r4.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r2);

        r11 = (android.service.quicksettings.Tile) $r5;

     label4:
        goto label6;

     label5:
        r11 = null;

     label6:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r11;

     label7:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
    }

    public boolean isLocked() throws android.os.RemoteException
    {
        android.service.quicksettings.IQSService$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        int i0;
        boolean $z0, z1, z2;
        android.service.quicksettings.IQSService $r3, $r4;
        java.lang.Throwable $r5;
        android.os.IBinder r6;

        r0 := @this: android.service.quicksettings.IQSService$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.service.quicksettings.IQSService");

        r6 = r0.<android.service.quicksettings.IQSService$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(6, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r3 = staticinvoke <android.service.quicksettings.IQSService$Stub: android.service.quicksettings.IQSService getDefaultImpl()>();

        if $r3 == null goto label5;

        $r4 = staticinvoke <android.service.quicksettings.IQSService$Stub: android.service.quicksettings.IQSService getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<android.service.quicksettings.IQSService: boolean isLocked()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i0 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public boolean isSecure() throws android.os.RemoteException
    {
        android.service.quicksettings.IQSService$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        int i0;
        boolean $z0, z1, z2;
        android.service.quicksettings.IQSService $r3, $r4;
        java.lang.Throwable $r5;
        android.os.IBinder r6;

        r0 := @this: android.service.quicksettings.IQSService$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.service.quicksettings.IQSService");

        r6 = r0.<android.service.quicksettings.IQSService$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(7, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r3 = staticinvoke <android.service.quicksettings.IQSService$Stub: android.service.quicksettings.IQSService getDefaultImpl()>();

        if $r3 == null goto label5;

        $r4 = staticinvoke <android.service.quicksettings.IQSService$Stub: android.service.quicksettings.IQSService getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<android.service.quicksettings.IQSService: boolean isSecure()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i0 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public void onDialogHidden(android.os.IBinder) throws android.os.RemoteException
    {
        android.service.quicksettings.IQSService$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r7;
        boolean $z0;
        android.service.quicksettings.IQSService $r4, $r5;
        java.lang.Throwable $r6;

        r0 := @this: android.service.quicksettings.IQSService$Stub$Proxy;

        r7 := @parameter0: android.os.IBinder;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.service.quicksettings.IQSService");

        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r7);

        $r3 = r0.<android.service.quicksettings.IQSService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(9, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.service.quicksettings.IQSService$Stub: android.service.quicksettings.IQSService getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.service.quicksettings.IQSService$Stub: android.service.quicksettings.IQSService getDefaultImpl()>();

        interfaceinvoke $r5.<android.service.quicksettings.IQSService: void onDialogHidden(android.os.IBinder)>(r7);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void onShowDialog(android.os.IBinder) throws android.os.RemoteException
    {
        android.service.quicksettings.IQSService$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r7;
        boolean $z0;
        android.service.quicksettings.IQSService $r4, $r5;
        java.lang.Throwable $r6;

        r0 := @this: android.service.quicksettings.IQSService$Stub$Proxy;

        r7 := @parameter0: android.os.IBinder;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.service.quicksettings.IQSService");

        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r7);

        $r3 = r0.<android.service.quicksettings.IQSService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(4, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.service.quicksettings.IQSService$Stub: android.service.quicksettings.IQSService getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.service.quicksettings.IQSService$Stub: android.service.quicksettings.IQSService getDefaultImpl()>();

        interfaceinvoke $r5.<android.service.quicksettings.IQSService: void onShowDialog(android.os.IBinder)>(r7);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void onStartActivity(android.os.IBinder) throws android.os.RemoteException
    {
        android.service.quicksettings.IQSService$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r7;
        boolean $z0;
        android.service.quicksettings.IQSService $r4, $r5;
        java.lang.Throwable $r6;

        r0 := @this: android.service.quicksettings.IQSService$Stub$Proxy;

        r7 := @parameter0: android.os.IBinder;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.service.quicksettings.IQSService");

        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r7);

        $r3 = r0.<android.service.quicksettings.IQSService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(5, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.service.quicksettings.IQSService$Stub: android.service.quicksettings.IQSService getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.service.quicksettings.IQSService$Stub: android.service.quicksettings.IQSService getDefaultImpl()>();

        interfaceinvoke $r5.<android.service.quicksettings.IQSService: void onStartActivity(android.os.IBinder)>(r7);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void onStartSuccessful(android.os.IBinder) throws android.os.RemoteException
    {
        android.service.quicksettings.IQSService$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r7;
        boolean $z0;
        android.service.quicksettings.IQSService $r4, $r5;
        java.lang.Throwable $r6;

        r0 := @this: android.service.quicksettings.IQSService$Stub$Proxy;

        r7 := @parameter0: android.os.IBinder;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.service.quicksettings.IQSService");

        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r7);

        $r3 = r0.<android.service.quicksettings.IQSService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(10, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.service.quicksettings.IQSService$Stub: android.service.quicksettings.IQSService getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.service.quicksettings.IQSService$Stub: android.service.quicksettings.IQSService getDefaultImpl()>();

        interfaceinvoke $r5.<android.service.quicksettings.IQSService: void onStartSuccessful(android.os.IBinder)>(r7);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void startUnlockAndRun(android.os.IBinder) throws android.os.RemoteException
    {
        android.service.quicksettings.IQSService$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r7;
        boolean $z0;
        android.service.quicksettings.IQSService $r4, $r5;
        java.lang.Throwable $r6;

        r0 := @this: android.service.quicksettings.IQSService$Stub$Proxy;

        r7 := @parameter0: android.os.IBinder;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.service.quicksettings.IQSService");

        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r7);

        $r3 = r0.<android.service.quicksettings.IQSService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(8, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.service.quicksettings.IQSService$Stub: android.service.quicksettings.IQSService getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.service.quicksettings.IQSService$Stub: android.service.quicksettings.IQSService getDefaultImpl()>();

        interfaceinvoke $r5.<android.service.quicksettings.IQSService: void startUnlockAndRun(android.os.IBinder)>(r7);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void updateQsTile(android.service.quicksettings.Tile, android.os.IBinder) throws android.os.RemoteException
    {
        android.service.quicksettings.IQSService$Stub$Proxy r0;
        android.os.IBinder r1, $r4;
        android.os.Parcel r2, r3;
        boolean $z0;
        android.service.quicksettings.IQSService $r5, $r6;
        java.lang.Throwable $r7;
        android.service.quicksettings.Tile r8;

        r0 := @this: android.service.quicksettings.IQSService$Stub$Proxy;

        r8 := @parameter0: android.service.quicksettings.Tile;

        r1 := @parameter1: android.os.IBinder;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.service.quicksettings.IQSService");

     label02:
        if r8 == null goto label05;

     label03:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r8.<android.service.quicksettings.Tile: void writeToParcel(android.os.Parcel,int)>(r2, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        virtualinvoke r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r1);

        $r4 = r0.<android.service.quicksettings.IQSService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(2, r2, r3, 0);

        if $z0 != 0 goto label08;

        $r5 = staticinvoke <android.service.quicksettings.IQSService$Stub: android.service.quicksettings.IQSService getDefaultImpl()>();

        if $r5 == null goto label08;

        $r6 = staticinvoke <android.service.quicksettings.IQSService$Stub: android.service.quicksettings.IQSService getDefaultImpl()>();

        interfaceinvoke $r6.<android.service.quicksettings.IQSService: void updateQsTile(android.service.quicksettings.Tile,android.os.IBinder)>(r8, r1);

     label07:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void updateStatusIcon(android.os.IBinder, android.graphics.drawable.Icon, java.lang.String) throws android.os.RemoteException
    {
        android.service.quicksettings.IQSService$Stub$Proxy r0;
        android.graphics.drawable.Icon r1;
        java.lang.String r2;
        android.os.Parcel r3, r4;
        android.os.IBinder $r5, r9;
        boolean $z0;
        android.service.quicksettings.IQSService $r6, $r7;
        java.lang.Throwable $r8;

        r0 := @this: android.service.quicksettings.IQSService$Stub$Proxy;

        r9 := @parameter0: android.os.IBinder;

        r1 := @parameter1: android.graphics.drawable.Icon;

        r2 := @parameter2: java.lang.String;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.service.quicksettings.IQSService");

        virtualinvoke r3.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r9);

     label02:
        if r1 == null goto label05;

     label03:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<android.graphics.drawable.Icon: void writeToParcel(android.os.Parcel,int)>(r3, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r2);

        $r5 = r0.<android.service.quicksettings.IQSService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(3, r3, r4, 0);

        if $z0 != 0 goto label08;

        $r6 = staticinvoke <android.service.quicksettings.IQSService$Stub: android.service.quicksettings.IQSService getDefaultImpl()>();

        if $r6 == null goto label08;

        $r7 = staticinvoke <android.service.quicksettings.IQSService$Stub: android.service.quicksettings.IQSService getDefaultImpl()>();

        interfaceinvoke $r7.<android.service.quicksettings.IQSService: void updateStatusIcon(android.os.IBinder,android.graphics.drawable.Icon,java.lang.String)>(r9, r1, r2);

     label07:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r4.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r8 := @caughtexception;

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }
}
