public class android.service.quicksettings.TileService extends android.app.Service
{
    public static final java.lang.String ACTION_QS_TILE;
    public static final java.lang.String ACTION_QS_TILE_PREFERENCES;
    public static final java.lang.String ACTION_REQUEST_LISTENING;
    private static final boolean DEBUG;
    public static final java.lang.String EXTRA_SERVICE;
    public static final java.lang.String EXTRA_STATE;
    public static final java.lang.String EXTRA_TOKEN;
    public static final java.lang.String META_DATA_ACTIVE_TILE;
    public static final java.lang.String META_DATA_TOGGLEABLE_TILE;
    private static final java.lang.String TAG;
    private final android.service.quicksettings.TileService$H mHandler;
    private boolean mListening;
    private android.service.quicksettings.IQSService mService;
    private android.service.quicksettings.Tile mTile;
    private android.os.IBinder mTileToken;
    private android.os.IBinder mToken;
    private java.lang.Runnable mUnlockRunnable;

    public void <init>()
    {
        android.service.quicksettings.TileService r0;
        android.service.quicksettings.TileService$H $r1;
        android.os.Looper $r2;

        r0 := @this: android.service.quicksettings.TileService;

        specialinvoke r0.<android.app.Service: void <init>()>();

        $r1 = new android.service.quicksettings.TileService$H;

        $r2 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        specialinvoke $r1.<android.service.quicksettings.TileService$H: void <init>(android.service.quicksettings.TileService,android.os.Looper)>(r0, $r2);

        r0.<android.service.quicksettings.TileService: android.service.quicksettings.TileService$H mHandler> = $r1;

        r0.<android.service.quicksettings.TileService: boolean mListening> = 0;

        return;
    }

    static android.os.IBinder access$000(android.service.quicksettings.TileService)
    {
        android.service.quicksettings.TileService r0;
        android.os.IBinder $r1;

        r0 := @parameter0: android.service.quicksettings.TileService;

        $r1 = r0.<android.service.quicksettings.TileService: android.os.IBinder mTileToken>;

        return $r1;
    }

    static android.service.quicksettings.IQSService access$100(android.service.quicksettings.TileService)
    {
        android.service.quicksettings.TileService r0;
        android.service.quicksettings.IQSService $r1;

        r0 := @parameter0: android.service.quicksettings.TileService;

        $r1 = r0.<android.service.quicksettings.TileService: android.service.quicksettings.IQSService mService>;

        return $r1;
    }

    static android.service.quicksettings.TileService$H access$200(android.service.quicksettings.TileService)
    {
        android.service.quicksettings.TileService r0;
        android.service.quicksettings.TileService$H $r1;

        r0 := @parameter0: android.service.quicksettings.TileService;

        $r1 = r0.<android.service.quicksettings.TileService: android.service.quicksettings.TileService$H mHandler>;

        return $r1;
    }

    static boolean access$300(android.service.quicksettings.TileService)
    {
        android.service.quicksettings.TileService r0;
        boolean $z0;

        r0 := @parameter0: android.service.quicksettings.TileService;

        $z0 = r0.<android.service.quicksettings.TileService: boolean mListening>;

        return $z0;
    }

    static boolean access$302(android.service.quicksettings.TileService, boolean)
    {
        android.service.quicksettings.TileService r0;
        boolean z0;

        r0 := @parameter0: android.service.quicksettings.TileService;

        z0 := @parameter1: boolean;

        r0.<android.service.quicksettings.TileService: boolean mListening> = z0;

        return z0;
    }

    static android.os.IBinder access$402(android.service.quicksettings.TileService, android.os.IBinder)
    {
        android.service.quicksettings.TileService r0;
        android.os.IBinder r1;

        r0 := @parameter0: android.service.quicksettings.TileService;

        r1 := @parameter1: android.os.IBinder;

        r0.<android.service.quicksettings.TileService: android.os.IBinder mToken> = r1;

        return r1;
    }

    static java.lang.Runnable access$500(android.service.quicksettings.TileService)
    {
        android.service.quicksettings.TileService r0;
        java.lang.Runnable $r1;

        r0 := @parameter0: android.service.quicksettings.TileService;

        $r1 = r0.<android.service.quicksettings.TileService: java.lang.Runnable mUnlockRunnable>;

        return $r1;
    }

    public static boolean isQuickSettingsSupported()
    {
        android.content.res.Resources $r0;
        boolean $z0;

        $r0 = staticinvoke <android.content.res.Resources: android.content.res.Resources getSystem()>();

        $z0 = virtualinvoke $r0.<android.content.res.Resources: boolean getBoolean(int)>(17891507);

        return $z0;
    }

    public static final void requestListeningState(android.content.Context, android.content.ComponentName)
    {
        android.content.Context r0;
        android.content.ComponentName r1, r2;
        android.content.res.Resources $r4;
        java.lang.String $r5, $r8;
        android.content.Intent $r6;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: android.content.ComponentName;

        $r4 = virtualinvoke r0.<android.content.Context: android.content.res.Resources getResources()>();

        $r5 = virtualinvoke $r4.<android.content.res.Resources: java.lang.String getString(int)>(17039950);

        r2 = staticinvoke <android.content.ComponentName: android.content.ComponentName unflattenFromString(java.lang.String)>($r5);

        $r6 = new android.content.Intent;

        specialinvoke $r6.<android.content.Intent: void <init>(java.lang.String)>("android.service.quicksettings.action.REQUEST_LISTENING");

        virtualinvoke $r6.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("android.intent.extra.COMPONENT_NAME", r1);

        $r8 = virtualinvoke r2.<android.content.ComponentName: java.lang.String getPackageName()>();

        virtualinvoke $r6.<android.content.Intent: android.content.Intent setPackage(java.lang.String)>($r8);

        virtualinvoke r0.<android.content.Context: void sendBroadcast(android.content.Intent,java.lang.String)>($r6, "android.permission.BIND_QUICK_SETTINGS_TILE");

        return;
    }

    public final android.service.quicksettings.Tile getQsTile()
    {
        android.service.quicksettings.TileService r0;
        android.service.quicksettings.Tile $r1;

        r0 := @this: android.service.quicksettings.TileService;

        $r1 = r0.<android.service.quicksettings.TileService: android.service.quicksettings.Tile mTile>;

        return $r1;
    }

    public final boolean isLocked()
    {
        android.service.quicksettings.TileService r0;
        boolean z0;
        android.service.quicksettings.IQSService $r2;
        android.os.RemoteException $r3;

        r0 := @this: android.service.quicksettings.TileService;

     label1:
        $r2 = r0.<android.service.quicksettings.TileService: android.service.quicksettings.IQSService mService>;

        z0 = interfaceinvoke $r2.<android.service.quicksettings.IQSService: boolean isLocked()>();

     label2:
        return z0;

     label3:
        $r3 := @caughtexception;

        return 1;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public final boolean isSecure()
    {
        android.service.quicksettings.TileService r0;
        boolean z0;
        android.service.quicksettings.IQSService $r2;
        android.os.RemoteException $r3;

        r0 := @this: android.service.quicksettings.TileService;

     label1:
        $r2 = r0.<android.service.quicksettings.TileService: android.service.quicksettings.IQSService mService>;

        z0 = interfaceinvoke $r2.<android.service.quicksettings.IQSService: boolean isSecure()>();

     label2:
        return z0;

     label3:
        $r3 := @caughtexception;

        return 1;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.os.IBinder onBind(android.content.Intent)
    {
        android.service.quicksettings.TileService r0;
        android.os.IBinder $r1, $r5, r11;
        android.service.quicksettings.IQSService $r2, $r3, $r6;
        android.service.quicksettings.TileService$2 $r4;
        android.service.quicksettings.TileService$H $r7;
        android.os.RemoteException $r8;
        java.lang.RuntimeException $r9;
        android.content.Intent r10;
        android.service.quicksettings.Tile r12;

        r0 := @this: android.service.quicksettings.TileService;

        r10 := @parameter0: android.content.Intent;

        $r1 = virtualinvoke r10.<android.content.Intent: android.os.IBinder getIBinderExtra(java.lang.String)>("service");

        $r2 = staticinvoke <android.service.quicksettings.IQSService$Stub: android.service.quicksettings.IQSService asInterface(android.os.IBinder)>($r1);

        r0.<android.service.quicksettings.TileService: android.service.quicksettings.IQSService mService> = $r2;

        r11 = virtualinvoke r10.<android.content.Intent: android.os.IBinder getIBinderExtra(java.lang.String)>("token");

        r0.<android.service.quicksettings.TileService: android.os.IBinder mTileToken> = r11;

     label1:
        $r3 = r0.<android.service.quicksettings.TileService: android.service.quicksettings.IQSService mService>;

        r12 = interfaceinvoke $r3.<android.service.quicksettings.IQSService: android.service.quicksettings.Tile getTile(android.os.IBinder)>(r11);

        r0.<android.service.quicksettings.TileService: android.service.quicksettings.Tile mTile> = r12;

     label2:
        if r12 == null goto label3;

        $r6 = r0.<android.service.quicksettings.TileService: android.service.quicksettings.IQSService mService>;

        $r5 = r0.<android.service.quicksettings.TileService: android.os.IBinder mTileToken>;

        virtualinvoke r12.<android.service.quicksettings.Tile: void setService(android.service.quicksettings.IQSService,android.os.IBinder)>($r6, $r5);

        $r7 = r0.<android.service.quicksettings.TileService: android.service.quicksettings.TileService$H mHandler>;

        virtualinvoke $r7.<android.service.quicksettings.TileService$H: boolean sendEmptyMessage(int)>(7);

     label3:
        $r4 = new android.service.quicksettings.TileService$2;

        specialinvoke $r4.<android.service.quicksettings.TileService$2: void <init>(android.service.quicksettings.TileService)>(r0);

        return $r4;

     label4:
        $r8 := @caughtexception;

        $r9 = new java.lang.RuntimeException;

        specialinvoke $r9.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Unable to reach IQSService", $r8);

        throw $r9;

        catch android.os.RemoteException from label1 to label2 with label4;
    }

    public void onClick()
    {
        android.service.quicksettings.TileService r0;

        r0 := @this: android.service.quicksettings.TileService;

        return;
    }

    public void onDestroy()
    {
        android.service.quicksettings.TileService r0;
        boolean $z0;

        r0 := @this: android.service.quicksettings.TileService;

        $z0 = r0.<android.service.quicksettings.TileService: boolean mListening>;

        if $z0 == 0 goto label1;

        virtualinvoke r0.<android.service.quicksettings.TileService: void onStopListening()>();

        r0.<android.service.quicksettings.TileService: boolean mListening> = 0;

     label1:
        specialinvoke r0.<android.app.Service: void onDestroy()>();

        return;
    }

    public void onStartListening()
    {
        android.service.quicksettings.TileService r0;

        r0 := @this: android.service.quicksettings.TileService;

        return;
    }

    public void onStopListening()
    {
        android.service.quicksettings.TileService r0;

        r0 := @this: android.service.quicksettings.TileService;

        return;
    }

    public void onTileAdded()
    {
        android.service.quicksettings.TileService r0;

        r0 := @this: android.service.quicksettings.TileService;

        return;
    }

    public void onTileRemoved()
    {
        android.service.quicksettings.TileService r0;

        r0 := @this: android.service.quicksettings.TileService;

        return;
    }

    public final void setStatusIcon(android.graphics.drawable.Icon, java.lang.String)
    {
        android.service.quicksettings.TileService r0;
        java.lang.String r1;
        android.service.quicksettings.IQSService r2;
        android.os.IBinder $r3;
        android.os.RemoteException $r4;
        android.graphics.drawable.Icon r5;

        r0 := @this: android.service.quicksettings.TileService;

        r5 := @parameter0: android.graphics.drawable.Icon;

        r1 := @parameter1: java.lang.String;

        r2 = r0.<android.service.quicksettings.TileService: android.service.quicksettings.IQSService mService>;

        if r2 == null goto label4;

     label1:
        $r3 = r0.<android.service.quicksettings.TileService: android.os.IBinder mTileToken>;

        interfaceinvoke r2.<android.service.quicksettings.IQSService: void updateStatusIcon(android.os.IBinder,android.graphics.drawable.Icon,java.lang.String)>($r3, r5, r1);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public final void showDialog(android.app.Dialog)
    {
        android.service.quicksettings.TileService r0;
        android.view.Window $r1, $r4, $r5;
        android.view.WindowManager$LayoutParams $r2;
        android.os.IBinder $r3, $r8;
        android.view.View $r6;
        android.service.quicksettings.TileService$1 $r7;
        android.service.quicksettings.IQSService $r9;
        android.os.RemoteException $r10;
        android.app.Dialog r11;

        r0 := @this: android.service.quicksettings.TileService;

        r11 := @parameter0: android.app.Dialog;

        $r1 = virtualinvoke r11.<android.app.Dialog: android.view.Window getWindow()>();

        $r2 = virtualinvoke $r1.<android.view.Window: android.view.WindowManager$LayoutParams getAttributes()>();

        $r3 = r0.<android.service.quicksettings.TileService: android.os.IBinder mToken>;

        $r2.<android.view.WindowManager$LayoutParams: android.os.IBinder token> = $r3;

        $r4 = virtualinvoke r11.<android.app.Dialog: android.view.Window getWindow()>();

        virtualinvoke $r4.<android.view.Window: void setType(int)>(2035);

        $r5 = virtualinvoke r11.<android.app.Dialog: android.view.Window getWindow()>();

        $r6 = virtualinvoke $r5.<android.view.Window: android.view.View getDecorView()>();

        $r7 = new android.service.quicksettings.TileService$1;

        specialinvoke $r7.<android.service.quicksettings.TileService$1: void <init>(android.service.quicksettings.TileService)>(r0);

        virtualinvoke $r6.<android.view.View: void addOnAttachStateChangeListener(android.view.View$OnAttachStateChangeListener)>($r7);

        virtualinvoke r11.<android.app.Dialog: void show()>();

     label1:
        $r9 = r0.<android.service.quicksettings.TileService: android.service.quicksettings.IQSService mService>;

        $r8 = r0.<android.service.quicksettings.TileService: android.os.IBinder mTileToken>;

        interfaceinvoke $r9.<android.service.quicksettings.IQSService: void onShowDialog(android.os.IBinder)>($r8);

     label2:
        goto label4;

     label3:
        $r10 := @caughtexception;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public final void startActivityAndCollapse(android.content.Intent)
    {
        android.service.quicksettings.TileService r0;
        android.os.IBinder $r1;
        android.service.quicksettings.IQSService $r2;
        android.os.RemoteException $r3;
        android.content.Intent r4;

        r0 := @this: android.service.quicksettings.TileService;

        r4 := @parameter0: android.content.Intent;

        virtualinvoke r0.<android.service.quicksettings.TileService: void startActivity(android.content.Intent)>(r4);

     label1:
        $r2 = r0.<android.service.quicksettings.TileService: android.service.quicksettings.IQSService mService>;

        $r1 = r0.<android.service.quicksettings.TileService: android.os.IBinder mTileToken>;

        interfaceinvoke $r2.<android.service.quicksettings.IQSService: void onStartActivity(android.os.IBinder)>($r1);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public final void unlockAndRun(java.lang.Runnable)
    {
        android.service.quicksettings.TileService r0;
        android.os.IBinder $r1;
        android.service.quicksettings.IQSService $r2;
        android.os.RemoteException $r3;
        java.lang.Runnable r4;

        r0 := @this: android.service.quicksettings.TileService;

        r4 := @parameter0: java.lang.Runnable;

        r0.<android.service.quicksettings.TileService: java.lang.Runnable mUnlockRunnable> = r4;

     label1:
        $r2 = r0.<android.service.quicksettings.TileService: android.service.quicksettings.IQSService mService>;

        $r1 = r0.<android.service.quicksettings.TileService: android.os.IBinder mTileToken>;

        interfaceinvoke $r2.<android.service.quicksettings.IQSService: void startUnlockAndRun(android.os.IBinder)>($r1);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public static void <clinit>()
    {
        <android.service.quicksettings.TileService: java.lang.String TAG> = "TileService";

        <android.service.quicksettings.TileService: java.lang.String META_DATA_TOGGLEABLE_TILE> = "android.service.quicksettings.TOGGLEABLE_TILE";

        <android.service.quicksettings.TileService: java.lang.String META_DATA_ACTIVE_TILE> = "android.service.quicksettings.ACTIVE_TILE";

        <android.service.quicksettings.TileService: java.lang.String EXTRA_TOKEN> = "token";

        <android.service.quicksettings.TileService: java.lang.String EXTRA_STATE> = "state";

        <android.service.quicksettings.TileService: java.lang.String EXTRA_SERVICE> = "service";

        <android.service.quicksettings.TileService: boolean DEBUG> = 0;

        <android.service.quicksettings.TileService: java.lang.String ACTION_REQUEST_LISTENING> = "android.service.quicksettings.action.REQUEST_LISTENING";

        <android.service.quicksettings.TileService: java.lang.String ACTION_QS_TILE_PREFERENCES> = "android.service.quicksettings.action.QS_TILE_PREFERENCES";

        <android.service.quicksettings.TileService: java.lang.String ACTION_QS_TILE> = "android.service.quicksettings.action.QS_TILE";

        return;
    }
}
