public abstract class android.service.textclassifier.TextClassifierService extends android.app.Service
{
    public static final int CONNECTED;
    public static final int DISCONNECTED;
    private static final java.lang.String KEY_RESULT;
    private static final java.lang.String LOG_TAG;
    public static final java.lang.String SERVICE_INTERFACE;
    private final android.service.textclassifier.ITextClassifierService$Stub mBinder;
    private final android.os.Handler mMainThreadHandler;
    private final java.util.concurrent.ExecutorService mSingleThreadExecutor;

    public void <init>()
    {
        android.service.textclassifier.TextClassifierService r0;
        android.os.Handler $r1;
        android.os.Looper $r2;
        java.util.concurrent.ExecutorService $r3;
        android.service.textclassifier.TextClassifierService$1 $r4;

        r0 := @this: android.service.textclassifier.TextClassifierService;

        specialinvoke r0.<android.app.Service: void <init>()>();

        $r1 = new android.os.Handler;

        $r2 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        specialinvoke $r1.<android.os.Handler: void <init>(android.os.Looper,android.os.Handler$Callback,boolean)>($r2, null, 1);

        r0.<android.service.textclassifier.TextClassifierService: android.os.Handler mMainThreadHandler> = $r1;

        $r3 = staticinvoke <java.util.concurrent.Executors: java.util.concurrent.ExecutorService newSingleThreadExecutor()>();

        r0.<android.service.textclassifier.TextClassifierService: java.util.concurrent.ExecutorService mSingleThreadExecutor> = $r3;

        $r4 = new android.service.textclassifier.TextClassifierService$1;

        specialinvoke $r4.<android.service.textclassifier.TextClassifierService$1: void <init>(android.service.textclassifier.TextClassifierService)>(r0);

        r0.<android.service.textclassifier.TextClassifierService: android.service.textclassifier.ITextClassifierService$Stub mBinder> = $r4;

        return;
    }

    static android.os.Handler access$000(android.service.textclassifier.TextClassifierService)
    {
        android.service.textclassifier.TextClassifierService r0;
        android.os.Handler $r1;

        r0 := @parameter0: android.service.textclassifier.TextClassifierService;

        $r1 = r0.<android.service.textclassifier.TextClassifierService: android.os.Handler mMainThreadHandler>;

        return $r1;
    }

    public static android.view.textclassifier.TextClassifier getDefaultTextClassifierImplementation(android.content.Context)
    {
        android.content.Context r0;
        java.lang.String r1, $r3;
        android.content.pm.PackageManager $r2;
        boolean $z0, $z1;
        java.lang.RuntimeException $r4;
        java.lang.Object $r5;
        android.view.textclassifier.TextClassificationManager $r6;
        android.view.textclassifier.TextClassifier $r7, $r8;

        r0 := @parameter0: android.content.Context;

        $r2 = virtualinvoke r0.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        r1 = virtualinvoke $r2.<android.content.pm.PackageManager: java.lang.String getDefaultTextClassifierPackageName()>();

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 == 0 goto label1;

        $r8 = <android.view.textclassifier.TextClassifier: android.view.textclassifier.TextClassifier NO_OP>;

        return $r8;

     label1:
        $r3 = virtualinvoke r0.<android.content.Context: java.lang.String getPackageName()>();

        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z1 != 0 goto label2;

        $r5 = virtualinvoke r0.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/view/textclassifier/TextClassificationManager;");

        $r6 = (android.view.textclassifier.TextClassificationManager) $r5;

        $r7 = virtualinvoke $r6.<android.view.textclassifier.TextClassificationManager: android.view.textclassifier.TextClassifier getTextClassifier(int)>(2);

        return $r7;

     label2:
        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String)>("The default text classifier itself should not call thegetDefaultTextClassifierImplementation() method.");

        throw $r4;
    }

    public static android.os.Parcelable getResponse(android.os.Bundle)
    {
        android.os.Bundle r0;
        android.os.Parcelable $r1;

        r0 := @parameter0: android.os.Bundle;

        $r1 = virtualinvoke r0.<android.os.Bundle: android.os.Parcelable getParcelable(java.lang.String)>("key_result");

        return $r1;
    }

    public static android.content.ComponentName getServiceComponentName(android.content.Context, java.lang.String, int)
    {
        java.lang.String r0, $r5, $r7, $r8, $r11, $r12;
        int i0, $i1;
        android.content.Intent $r1, r15;
        android.content.pm.PackageManager $r2;
        java.lang.Object[] $r3, $r9;
        java.lang.Integer $r4;
        android.content.pm.ServiceInfo $r6, r17;
        boolean $z0;
        android.content.ComponentName $r10, $r13;
        android.content.Context r14;
        android.content.pm.ResolveInfo r16;

        r14 := @parameter0: android.content.Context;

        r0 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $r1 = new android.content.Intent;

        specialinvoke $r1.<android.content.Intent: void <init>(java.lang.String)>("android.service.textclassifier.TextClassifierService");

        r15 = virtualinvoke $r1.<android.content.Intent: android.content.Intent setPackage(java.lang.String)>(r0);

        $r2 = virtualinvoke r14.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        r16 = virtualinvoke $r2.<android.content.pm.PackageManager: android.content.pm.ResolveInfo resolveService(android.content.Intent,int)>(r15, i0);

        if r16 == null goto label3;

        $r6 = r16.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

        if $r6 != null goto label1;

        goto label3;

     label1:
        r17 = r16.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

        $r8 = "android.permission.BIND_TEXTCLASSIFIER_SERVICE";

        $r7 = r17.<android.content.pm.ServiceInfo: java.lang.String permission>;

        $z0 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z0 == 0 goto label2;

        $r13 = virtualinvoke r17.<android.content.pm.ServiceInfo: android.content.ComponentName getComponentName()>();

        return $r13;

     label2:
        $r9 = newarray (java.lang.Object)[3];

        $r10 = virtualinvoke r17.<android.content.pm.ServiceInfo: android.content.ComponentName getComponentName()>();

        $r9[0] = $r10;

        $r9[1] = "android.permission.BIND_TEXTCLASSIFIER_SERVICE";

        $r11 = r17.<android.content.pm.ServiceInfo: java.lang.String permission>;

        $r9[2] = $r11;

        $r12 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Service %s should require %s permission. Found %s permission", $r9);

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("TextClassifierService", $r12);

        return null;

     label3:
        $r3 = newarray (java.lang.Object)[2];

        $r3[0] = r0;

        $i1 = virtualinvoke r14.<android.content.Context: int getUserId()>();

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r3[1] = $r4;

        $r5 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Package or service not found in package %s for user %d", $r3);

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("TextClassifierService", $r5);

        return null;
    }

    public static void putResponse(android.os.Bundle, android.os.Parcelable)
    {
        android.os.Bundle r0;
        android.os.Parcelable r1;

        r0 := @parameter0: android.os.Bundle;

        r1 := @parameter1: android.os.Parcelable;

        virtualinvoke r0.<android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)>("key_result", r1);

        return;
    }

    public final android.view.textclassifier.TextClassifier getLocalTextClassifier()
    {
        android.service.textclassifier.TextClassifierService r0;
        android.view.textclassifier.TextClassifier $r1;

        r0 := @this: android.service.textclassifier.TextClassifierService;

        $r1 = <android.view.textclassifier.TextClassifier: android.view.textclassifier.TextClassifier NO_OP>;

        return $r1;
    }

    public void lambda$onDetectLanguage$0$TextClassifierService(android.service.textclassifier.TextClassifierService$Callback, android.view.textclassifier.TextLanguage$Request)
    {
        android.service.textclassifier.TextClassifierService r0;
        android.service.textclassifier.TextClassifierService$Callback r1;
        android.view.textclassifier.TextLanguage$Request r2;
        android.view.textclassifier.TextClassifier $r3;
        android.view.textclassifier.TextLanguage $r4;

        r0 := @this: android.service.textclassifier.TextClassifierService;

        r1 := @parameter0: android.service.textclassifier.TextClassifierService$Callback;

        r2 := @parameter1: android.view.textclassifier.TextLanguage$Request;

        $r3 = virtualinvoke r0.<android.service.textclassifier.TextClassifierService: android.view.textclassifier.TextClassifier getLocalTextClassifier()>();

        $r4 = interfaceinvoke $r3.<android.view.textclassifier.TextClassifier: android.view.textclassifier.TextLanguage detectLanguage(android.view.textclassifier.TextLanguage$Request)>(r2);

        interfaceinvoke r1.<android.service.textclassifier.TextClassifierService$Callback: void onSuccess(java.lang.Object)>($r4);

        return;
    }

    public void lambda$onSuggestConversationActions$1$TextClassifierService(android.service.textclassifier.TextClassifierService$Callback, android.view.textclassifier.ConversationActions$Request)
    {
        android.service.textclassifier.TextClassifierService r0;
        android.service.textclassifier.TextClassifierService$Callback r1;
        android.view.textclassifier.ConversationActions$Request r2;
        android.view.textclassifier.TextClassifier $r3;
        android.view.textclassifier.ConversationActions $r4;

        r0 := @this: android.service.textclassifier.TextClassifierService;

        r1 := @parameter0: android.service.textclassifier.TextClassifierService$Callback;

        r2 := @parameter1: android.view.textclassifier.ConversationActions$Request;

        $r3 = virtualinvoke r0.<android.service.textclassifier.TextClassifierService: android.view.textclassifier.TextClassifier getLocalTextClassifier()>();

        $r4 = interfaceinvoke $r3.<android.view.textclassifier.TextClassifier: android.view.textclassifier.ConversationActions suggestConversationActions(android.view.textclassifier.ConversationActions$Request)>(r2);

        interfaceinvoke r1.<android.service.textclassifier.TextClassifierService$Callback: void onSuccess(java.lang.Object)>($r4);

        return;
    }

    public final android.os.IBinder onBind(android.content.Intent)
    {
        android.service.textclassifier.TextClassifierService r0;
        android.content.Intent r1;
        java.lang.String $r2, $r3;
        boolean $z0;
        android.service.textclassifier.ITextClassifierService$Stub $r4;

        r0 := @this: android.service.textclassifier.TextClassifierService;

        r1 := @parameter0: android.content.Intent;

        $r2 = "android.service.textclassifier.TextClassifierService";

        $r3 = virtualinvoke r1.<android.content.Intent: java.lang.String getAction()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label1;

        $r4 = r0.<android.service.textclassifier.TextClassifierService: android.service.textclassifier.ITextClassifierService$Stub mBinder>;

        return $r4;

     label1:
        return null;
    }

    public abstract void onClassifyText(android.view.textclassifier.TextClassificationSessionId, android.view.textclassifier.TextClassification$Request, android.os.CancellationSignal, android.service.textclassifier.TextClassifierService$Callback);

    public void onConnected()
    {
        android.service.textclassifier.TextClassifierService r0;

        r0 := @this: android.service.textclassifier.TextClassifierService;

        return;
    }

    public void onCreateTextClassificationSession(android.view.textclassifier.TextClassificationContext, android.view.textclassifier.TextClassificationSessionId)
    {
        android.service.textclassifier.TextClassifierService r0;
        android.view.textclassifier.TextClassificationContext r1;
        android.view.textclassifier.TextClassificationSessionId r2;

        r0 := @this: android.service.textclassifier.TextClassifierService;

        r1 := @parameter0: android.view.textclassifier.TextClassificationContext;

        r2 := @parameter1: android.view.textclassifier.TextClassificationSessionId;

        return;
    }

    public void onDestroyTextClassificationSession(android.view.textclassifier.TextClassificationSessionId)
    {
        android.service.textclassifier.TextClassifierService r0;
        android.view.textclassifier.TextClassificationSessionId r1;

        r0 := @this: android.service.textclassifier.TextClassifierService;

        r1 := @parameter0: android.view.textclassifier.TextClassificationSessionId;

        return;
    }

    public void onDetectLanguage(android.view.textclassifier.TextClassificationSessionId, android.view.textclassifier.TextLanguage$Request, android.os.CancellationSignal, android.service.textclassifier.TextClassifierService$Callback)
    {
        android.service.textclassifier.TextClassifierService r0;
        android.view.textclassifier.TextClassificationSessionId r1;
        android.view.textclassifier.TextLanguage$Request r2;
        android.os.CancellationSignal r3;
        android.service.textclassifier.TextClassifierService$Callback r4;
        android.service.textclassifier._$$Lambda$TextClassifierService$9kfVuo6FJ1uQiU277_n9JgliEEc $r5;
        java.util.concurrent.ExecutorService $r6;

        r0 := @this: android.service.textclassifier.TextClassifierService;

        r1 := @parameter0: android.view.textclassifier.TextClassificationSessionId;

        r2 := @parameter1: android.view.textclassifier.TextLanguage$Request;

        r3 := @parameter2: android.os.CancellationSignal;

        r4 := @parameter3: android.service.textclassifier.TextClassifierService$Callback;

        $r6 = r0.<android.service.textclassifier.TextClassifierService: java.util.concurrent.ExecutorService mSingleThreadExecutor>;

        $r5 = new android.service.textclassifier._$$Lambda$TextClassifierService$9kfVuo6FJ1uQiU277_n9JgliEEc;

        specialinvoke $r5.<android.service.textclassifier._$$Lambda$TextClassifierService$9kfVuo6FJ1uQiU277_n9JgliEEc: void <init>(android.service.textclassifier.TextClassifierService,android.service.textclassifier.TextClassifierService$Callback,android.view.textclassifier.TextLanguage$Request)>(r0, r4, r2);

        interfaceinvoke $r6.<java.util.concurrent.ExecutorService: java.util.concurrent.Future submit(java.lang.Runnable)>($r5);

        return;
    }

    public void onDisconnected()
    {
        android.service.textclassifier.TextClassifierService r0;

        r0 := @this: android.service.textclassifier.TextClassifierService;

        return;
    }

    public abstract void onGenerateLinks(android.view.textclassifier.TextClassificationSessionId, android.view.textclassifier.TextLinks$Request, android.os.CancellationSignal, android.service.textclassifier.TextClassifierService$Callback);

    public void onSelectionEvent(android.view.textclassifier.TextClassificationSessionId, android.view.textclassifier.SelectionEvent)
    {
        android.service.textclassifier.TextClassifierService r0;
        android.view.textclassifier.TextClassificationSessionId r1;
        android.view.textclassifier.SelectionEvent r2;

        r0 := @this: android.service.textclassifier.TextClassifierService;

        r1 := @parameter0: android.view.textclassifier.TextClassificationSessionId;

        r2 := @parameter1: android.view.textclassifier.SelectionEvent;

        return;
    }

    public void onSuggestConversationActions(android.view.textclassifier.TextClassificationSessionId, android.view.textclassifier.ConversationActions$Request, android.os.CancellationSignal, android.service.textclassifier.TextClassifierService$Callback)
    {
        android.service.textclassifier.TextClassifierService r0;
        android.view.textclassifier.TextClassificationSessionId r1;
        android.view.textclassifier.ConversationActions$Request r2;
        android.os.CancellationSignal r3;
        android.service.textclassifier.TextClassifierService$Callback r4;
        android.service.textclassifier._$$Lambda$TextClassifierService$OMrgO9sL3mlBJfpfxbmg7ieGoWk $r5;
        java.util.concurrent.ExecutorService $r6;

        r0 := @this: android.service.textclassifier.TextClassifierService;

        r1 := @parameter0: android.view.textclassifier.TextClassificationSessionId;

        r2 := @parameter1: android.view.textclassifier.ConversationActions$Request;

        r3 := @parameter2: android.os.CancellationSignal;

        r4 := @parameter3: android.service.textclassifier.TextClassifierService$Callback;

        $r6 = r0.<android.service.textclassifier.TextClassifierService: java.util.concurrent.ExecutorService mSingleThreadExecutor>;

        $r5 = new android.service.textclassifier._$$Lambda$TextClassifierService$OMrgO9sL3mlBJfpfxbmg7ieGoWk;

        specialinvoke $r5.<android.service.textclassifier._$$Lambda$TextClassifierService$OMrgO9sL3mlBJfpfxbmg7ieGoWk: void <init>(android.service.textclassifier.TextClassifierService,android.service.textclassifier.TextClassifierService$Callback,android.view.textclassifier.ConversationActions$Request)>(r0, r4, r2);

        interfaceinvoke $r6.<java.util.concurrent.ExecutorService: java.util.concurrent.Future submit(java.lang.Runnable)>($r5);

        return;
    }

    public abstract void onSuggestSelection(android.view.textclassifier.TextClassificationSessionId, android.view.textclassifier.TextSelection$Request, android.os.CancellationSignal, android.service.textclassifier.TextClassifierService$Callback);

    public void onTextClassifierEvent(android.view.textclassifier.TextClassificationSessionId, android.view.textclassifier.TextClassifierEvent)
    {
        android.service.textclassifier.TextClassifierService r0;
        android.view.textclassifier.TextClassificationSessionId r1;
        android.view.textclassifier.TextClassifierEvent r2;

        r0 := @this: android.service.textclassifier.TextClassifierService;

        r1 := @parameter0: android.view.textclassifier.TextClassificationSessionId;

        r2 := @parameter1: android.view.textclassifier.TextClassifierEvent;

        return;
    }

    public boolean onUnbind(android.content.Intent)
    {
        android.service.textclassifier.TextClassifierService r0;
        android.content.Intent r1;
        boolean $z0;

        r0 := @this: android.service.textclassifier.TextClassifierService;

        r1 := @parameter0: android.content.Intent;

        virtualinvoke r0.<android.service.textclassifier.TextClassifierService: void onDisconnected()>();

        $z0 = specialinvoke r0.<android.app.Service: boolean onUnbind(android.content.Intent)>(r1);

        return $z0;
    }

    public static void <clinit>()
    {
        <android.service.textclassifier.TextClassifierService: java.lang.String SERVICE_INTERFACE> = "android.service.textclassifier.TextClassifierService";

        <android.service.textclassifier.TextClassifierService: java.lang.String LOG_TAG> = "TextClassifierService";

        <android.service.textclassifier.TextClassifierService: java.lang.String KEY_RESULT> = "key_result";

        <android.service.textclassifier.TextClassifierService: int DISCONNECTED> = 1;

        <android.service.textclassifier.TextClassifierService: int CONNECTED> = 0;

        return;
    }
}
