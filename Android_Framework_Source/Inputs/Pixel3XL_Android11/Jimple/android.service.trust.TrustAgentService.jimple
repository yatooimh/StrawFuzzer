public class android.service.trust.TrustAgentService extends android.app.Service
{
    private static final boolean DEBUG;
    private static final java.lang.String EXTRA_TOKEN;
    private static final java.lang.String EXTRA_TOKEN_HANDLE;
    private static final java.lang.String EXTRA_TOKEN_REMOVED_RESULT;
    private static final java.lang.String EXTRA_TOKEN_STATE;
    private static final java.lang.String EXTRA_USER_HANDLE;
    public static final int FLAG_GRANT_TRUST_DISMISS_KEYGUARD;
    public static final int FLAG_GRANT_TRUST_INITIATED_BY_USER;
    private static final int MSG_CONFIGURE;
    private static final int MSG_DEVICE_LOCKED;
    private static final int MSG_DEVICE_UNLOCKED;
    private static final int MSG_ESCROW_TOKEN_ADDED;
    private static final int MSG_ESCROW_TOKEN_REMOVED;
    private static final int MSG_ESCROW_TOKEN_STATE_RECEIVED;
    private static final int MSG_TRUST_TIMEOUT;
    private static final int MSG_UNLOCK_ATTEMPT;
    private static final int MSG_UNLOCK_LOCKOUT;
    public static final java.lang.String SERVICE_INTERFACE;
    public static final int TOKEN_STATE_ACTIVE;
    public static final int TOKEN_STATE_INACTIVE;
    public static final java.lang.String TRUST_AGENT_META_DATA;
    private final java.lang.String TAG;
    private android.service.trust.ITrustAgentServiceCallback mCallback;
    private android.os.Handler mHandler;
    private final java.lang.Object mLock;
    private boolean mManagingTrust;
    private java.lang.Runnable mPendingGrantTrustTask;

    public void <init>()
    {
        android.service.trust.TrustAgentService r0;
        java.lang.StringBuilder $r2;
        java.lang.Class $r3, $r7;
        java.lang.String $r4, $r8, $r11;
        java.lang.Object $r12;
        android.service.trust.TrustAgentService$1 $r13;

        r0 := @this: android.service.trust.TrustAgentService;

        specialinvoke r0.<android.app.Service: void <init>()>();

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = class "Landroid/service/trust/TrustAgentService;";

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getSimpleName()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        $r7 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r8 = virtualinvoke $r7.<java.lang.Class: java.lang.String getSimpleName()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r11 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<android.service.trust.TrustAgentService: java.lang.String TAG> = $r11;

        $r12 = new java.lang.Object;

        specialinvoke $r12.<java.lang.Object: void <init>()>();

        r0.<android.service.trust.TrustAgentService: java.lang.Object mLock> = $r12;

        $r13 = new android.service.trust.TrustAgentService$1;

        specialinvoke $r13.<android.service.trust.TrustAgentService$1: void <init>(android.service.trust.TrustAgentService)>(r0);

        r0.<android.service.trust.TrustAgentService: android.os.Handler mHandler> = $r13;

        return;
    }

    static java.lang.Object access$000(android.service.trust.TrustAgentService)
    {
        android.service.trust.TrustAgentService r0;
        java.lang.Object $r1;

        r0 := @parameter0: android.service.trust.TrustAgentService;

        $r1 = r0.<android.service.trust.TrustAgentService: java.lang.Object mLock>;

        return $r1;
    }

    static android.service.trust.ITrustAgentServiceCallback access$100(android.service.trust.TrustAgentService)
    {
        android.service.trust.TrustAgentService r0;
        android.service.trust.ITrustAgentServiceCallback $r1;

        r0 := @parameter0: android.service.trust.TrustAgentService;

        $r1 = r0.<android.service.trust.TrustAgentService: android.service.trust.ITrustAgentServiceCallback mCallback>;

        return $r1;
    }

    static android.service.trust.ITrustAgentServiceCallback access$102(android.service.trust.TrustAgentService, android.service.trust.ITrustAgentServiceCallback)
    {
        android.service.trust.TrustAgentService r0;
        android.service.trust.ITrustAgentServiceCallback r1;

        r0 := @parameter0: android.service.trust.TrustAgentService;

        r1 := @parameter1: android.service.trust.ITrustAgentServiceCallback;

        r0.<android.service.trust.TrustAgentService: android.service.trust.ITrustAgentServiceCallback mCallback> = r1;

        return r1;
    }

    static void access$200(android.service.trust.TrustAgentService, java.lang.String)
    {
        android.service.trust.TrustAgentService r0;
        java.lang.String r1;

        r0 := @parameter0: android.service.trust.TrustAgentService;

        r1 := @parameter1: java.lang.String;

        specialinvoke r0.<android.service.trust.TrustAgentService: void onError(java.lang.String)>(r1);

        return;
    }

    static android.os.Handler access$400(android.service.trust.TrustAgentService)
    {
        android.service.trust.TrustAgentService r0;
        android.os.Handler $r1;

        r0 := @parameter0: android.service.trust.TrustAgentService;

        $r1 = r0.<android.service.trust.TrustAgentService: android.os.Handler mHandler>;

        return $r1;
    }

    static boolean access$500(android.service.trust.TrustAgentService)
    {
        android.service.trust.TrustAgentService r0;
        boolean $z0;

        r0 := @parameter0: android.service.trust.TrustAgentService;

        $z0 = r0.<android.service.trust.TrustAgentService: boolean mManagingTrust>;

        return $z0;
    }

    static java.lang.Runnable access$600(android.service.trust.TrustAgentService)
    {
        android.service.trust.TrustAgentService r0;
        java.lang.Runnable $r1;

        r0 := @parameter0: android.service.trust.TrustAgentService;

        $r1 = r0.<android.service.trust.TrustAgentService: java.lang.Runnable mPendingGrantTrustTask>;

        return $r1;
    }

    static java.lang.Runnable access$602(android.service.trust.TrustAgentService, java.lang.Runnable)
    {
        android.service.trust.TrustAgentService r0;
        java.lang.Runnable r1;

        r0 := @parameter0: android.service.trust.TrustAgentService;

        r1 := @parameter1: java.lang.Runnable;

        r0.<android.service.trust.TrustAgentService: java.lang.Runnable mPendingGrantTrustTask> = r1;

        return r1;
    }

    private void onError(java.lang.String)
    {
        android.service.trust.TrustAgentService r0;
        java.lang.String r1, r2, $r7;
        java.lang.StringBuilder $r4;

        r0 := @this: android.service.trust.TrustAgentService;

        r1 := @parameter0: java.lang.String;

        r2 = r0.<android.service.trust.TrustAgentService: java.lang.String TAG>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Remote exception while ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>(r2, $r7);

        return;
    }

    public final void addEscrowToken(byte[], android.os.UserHandle)
    {
        android.service.trust.TrustAgentService r0;
        android.os.UserHandle r1;
        java.lang.Object r2;
        android.service.trust.ITrustAgentServiceCallback r3, $r5;
        java.lang.String $r4;
        int $i1;
        android.os.RemoteException $r6;
        java.lang.Throwable $r7;
        byte[] r8;
        java.lang.IllegalStateException r10;

        r0 := @this: android.service.trust.TrustAgentService;

        r8 := @parameter0: byte[];

        r1 := @parameter1: android.os.UserHandle;

        r2 = r0.<android.service.trust.TrustAgentService: java.lang.Object mLock>;

        entermonitor r2;

     label01:
        r3 = r0.<android.service.trust.TrustAgentService: android.service.trust.ITrustAgentServiceCallback mCallback>;

     label02:
        if r3 == null goto label09;

     label03:
        $r5 = r0.<android.service.trust.TrustAgentService: android.service.trust.ITrustAgentServiceCallback mCallback>;

        $i1 = virtualinvoke r1.<android.os.UserHandle: int getIdentifier()>();

        interfaceinvoke $r5.<android.service.trust.ITrustAgentServiceCallback: void addEscrowToken(byte[],int)>(r8, $i1);

     label04:
        goto label07;

     label05:
        $r6 := @caughtexception;

     label06:
        specialinvoke r0.<android.service.trust.TrustAgentService: void onError(java.lang.String)>("calling addEscrowToken");

     label07:
        exitmonitor r2;

     label08:
        return;

     label09:
        $r4 = r0.<android.service.trust.TrustAgentService: java.lang.String TAG>;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>($r4, "Cannot add escrow token if the agent is not connecting to framework");

        r10 = new java.lang.IllegalStateException;

        specialinvoke r10.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Trust agent is not connected");

        throw r10;

     label10:
        $r7 := @caughtexception;

     label11:
        exitmonitor r2;

     label12:
        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch android.os.RemoteException from label03 to label04 with label05;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label07 to label08 with label10;
        catch java.lang.Throwable from label09 to label10 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
    }

    public final void grantTrust(java.lang.CharSequence, long, int)
    {
        android.service.trust.TrustAgentService r0;
        long l0;
        int i1;
        java.lang.Object r1;
        boolean $z0;
        android.service.trust.ITrustAgentServiceCallback $r2, r7;
        java.lang.String $r3;
        android.os.RemoteException $r4;
        java.lang.Throwable $r5;
        java.lang.CharSequence r6;
        android.service.trust.TrustAgentService$2 r9;
        java.lang.IllegalStateException r10;

        r0 := @this: android.service.trust.TrustAgentService;

        r6 := @parameter0: java.lang.CharSequence;

        l0 := @parameter1: long;

        i1 := @parameter2: int;

        r1 = r0.<android.service.trust.TrustAgentService: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $z0 = r0.<android.service.trust.TrustAgentService: boolean mManagingTrust>;

        if $z0 == 0 goto label11;

        r7 = r0.<android.service.trust.TrustAgentService: android.service.trust.ITrustAgentServiceCallback mCallback>;

     label02:
        if r7 == null goto label08;

     label03:
        $r2 = r0.<android.service.trust.TrustAgentService: android.service.trust.ITrustAgentServiceCallback mCallback>;

        $r3 = interfaceinvoke r6.<java.lang.CharSequence: java.lang.String toString()>();

        interfaceinvoke $r2.<android.service.trust.ITrustAgentServiceCallback: void grantTrust(java.lang.CharSequence,long,int)>($r3, l0, i1);

     label04:
        goto label09;

     label05:
        $r4 := @caughtexception;

     label06:
        specialinvoke r0.<android.service.trust.TrustAgentService: void onError(java.lang.String)>("calling enableTrust()");

     label07:
        goto label04;

     label08:
        r9 = new android.service.trust.TrustAgentService$2;

        specialinvoke r9.<android.service.trust.TrustAgentService$2: void <init>(android.service.trust.TrustAgentService,java.lang.CharSequence,long,int)>(r0, r6, l0, i1);

        r0.<android.service.trust.TrustAgentService: java.lang.Runnable mPendingGrantTrustTask> = r9;

     label09:
        exitmonitor r1;

     label10:
        return;

     label11:
        r10 = new java.lang.IllegalStateException;

        specialinvoke r10.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Cannot grant trust if agent is not managing trust. Call setManagingTrust(true) first.");

        throw r10;

     label12:
        $r5 := @caughtexception;

     label13:
        exitmonitor r1;

     label14:
        throw $r5;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch android.os.RemoteException from label03 to label04 with label05;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch java.lang.Throwable from label06 to label07 with label12;
        catch java.lang.Throwable from label08 to label09 with label12;
        catch java.lang.Throwable from label09 to label10 with label12;
        catch java.lang.Throwable from label11 to label12 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
    }

    public final void grantTrust(java.lang.CharSequence, long, boolean)
    {
        android.service.trust.TrustAgentService r0;
        java.lang.CharSequence r1;
        long l0;
        boolean z0;
        int i1;

        r0 := @this: android.service.trust.TrustAgentService;

        r1 := @parameter0: java.lang.CharSequence;

        l0 := @parameter1: long;

        z0 := @parameter2: boolean;

        i1 = (int) z0;

        virtualinvoke r0.<android.service.trust.TrustAgentService: void grantTrust(java.lang.CharSequence,long,int)>(r1, l0, i1);

        return;
    }

    public final void isEscrowTokenActive(long, android.os.UserHandle)
    {
        android.service.trust.TrustAgentService r0;
        long l0;
        java.lang.Object r1;
        android.service.trust.ITrustAgentServiceCallback r2, $r4;
        java.lang.String $r3;
        int $i2;
        java.lang.Throwable $r5;
        android.os.RemoteException $r6;
        android.os.UserHandle r7;
        java.lang.IllegalStateException r9;

        r0 := @this: android.service.trust.TrustAgentService;

        l0 := @parameter0: long;

        r7 := @parameter1: android.os.UserHandle;

        r1 = r0.<android.service.trust.TrustAgentService: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        r2 = r0.<android.service.trust.TrustAgentService: android.service.trust.ITrustAgentServiceCallback mCallback>;

     label02:
        if r2 == null goto label09;

     label03:
        $r4 = r0.<android.service.trust.TrustAgentService: android.service.trust.ITrustAgentServiceCallback mCallback>;

        $i2 = virtualinvoke r7.<android.os.UserHandle: int getIdentifier()>();

        interfaceinvoke $r4.<android.service.trust.ITrustAgentServiceCallback: void isEscrowTokenActive(long,int)>(l0, $i2);

     label04:
        goto label07;

     label05:
        $r6 := @caughtexception;

     label06:
        specialinvoke r0.<android.service.trust.TrustAgentService: void onError(java.lang.String)>("calling isEscrowTokenActive");

     label07:
        exitmonitor r1;

     label08:
        return;

     label09:
        $r3 = r0.<android.service.trust.TrustAgentService: java.lang.String TAG>;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>($r3, "Cannot add escrow token if the agent is not connecting to framework");

        r9 = new java.lang.IllegalStateException;

        specialinvoke r9.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Trust agent is not connected");

        throw r9;

     label10:
        $r5 := @caughtexception;

     label11:
        exitmonitor r1;

     label12:
        throw $r5;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch android.os.RemoteException from label03 to label04 with label05;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label07 to label08 with label10;
        catch java.lang.Throwable from label09 to label10 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
    }

    public final android.os.IBinder onBind(android.content.Intent)
    {
        android.service.trust.TrustAgentService r0;
        android.content.Intent r1;
        android.service.trust.TrustAgentService$TrustAgentServiceWrapper $r2;

        r0 := @this: android.service.trust.TrustAgentService;

        r1 := @parameter0: android.content.Intent;

        $r2 = new android.service.trust.TrustAgentService$TrustAgentServiceWrapper;

        specialinvoke $r2.<android.service.trust.TrustAgentService$TrustAgentServiceWrapper: void <init>(android.service.trust.TrustAgentService,android.service.trust.TrustAgentService$1)>(r0, null);

        return $r2;
    }

    public boolean onConfigure(java.util.List)
    {
        android.service.trust.TrustAgentService r0;
        java.util.List r1;

        r0 := @this: android.service.trust.TrustAgentService;

        r1 := @parameter0: java.util.List;

        return 0;
    }

    public void onCreate()
    {
        android.service.trust.TrustAgentService r0;
        android.content.ComponentName $r2;
        java.lang.Class $r3;
        java.lang.String $r4, $r7, $r8, $r13, $r17, $r19, r23;
        android.content.pm.PackageManager $r5;
        android.content.pm.ServiceInfo $r6;
        boolean $z0;
        android.content.pm.PackageManager$NameNotFoundException $r14;
        java.lang.StringBuilder $r15, r21;
        java.lang.IllegalStateException r20;

        r0 := @this: android.service.trust.TrustAgentService;

        specialinvoke r0.<android.app.Service: void onCreate()>();

        $r2 = new android.content.ComponentName;

        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        specialinvoke $r2.<android.content.ComponentName: void <init>(android.content.Context,java.lang.Class)>(r0, $r3);

     label1:
        $r4 = "android.permission.BIND_TRUST_AGENT";

        $r5 = virtualinvoke r0.<android.service.trust.TrustAgentService: android.content.pm.PackageManager getPackageManager()>();

        $r6 = virtualinvoke $r5.<android.content.pm.PackageManager: android.content.pm.ServiceInfo getServiceInfo(android.content.ComponentName,int)>($r2, 0);

        $r7 = $r6.<android.content.pm.ServiceInfo: java.lang.String permission>;

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z0 == 0 goto label3;

     label2:
        goto label5;

     label3:
        r20 = new java.lang.IllegalStateException;

        r21 = new java.lang.StringBuilder;

        specialinvoke r21.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r2.<android.content.ComponentName: java.lang.String flattenToShortString()>();

        virtualinvoke r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        virtualinvoke r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not declared with the permission \"");

        virtualinvoke r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("android.permission.BIND_TRUST_AGENT");

        virtualinvoke r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r13 = virtualinvoke r21.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r20.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r13);

        throw r20;

     label4:
        $r14 := @caughtexception;

        r23 = r0.<android.service.trust.TrustAgentService: java.lang.String TAG>;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t get ServiceInfo for ");

        $r17 = virtualinvoke $r2.<android.content.ComponentName: java.lang.String toShortString()>();

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>(r23, $r19);

     label5:
        return;

        catch android.content.pm.PackageManager$NameNotFoundException from label1 to label2 with label4;
        catch android.content.pm.PackageManager$NameNotFoundException from label3 to label4 with label4;
    }

    public void onDeviceLocked()
    {
        android.service.trust.TrustAgentService r0;

        r0 := @this: android.service.trust.TrustAgentService;

        return;
    }

    public void onDeviceUnlockLockout(long)
    {
        android.service.trust.TrustAgentService r0;
        long l0;

        r0 := @this: android.service.trust.TrustAgentService;

        l0 := @parameter0: long;

        return;
    }

    public void onDeviceUnlocked()
    {
        android.service.trust.TrustAgentService r0;

        r0 := @this: android.service.trust.TrustAgentService;

        return;
    }

    public void onEscrowTokenAdded(byte[], long, android.os.UserHandle)
    {
        android.service.trust.TrustAgentService r0;
        byte[] r1;
        long l0;
        android.os.UserHandle r2;

        r0 := @this: android.service.trust.TrustAgentService;

        r1 := @parameter0: byte[];

        l0 := @parameter1: long;

        r2 := @parameter2: android.os.UserHandle;

        return;
    }

    public void onEscrowTokenRemoved(long, boolean)
    {
        android.service.trust.TrustAgentService r0;
        long l0;
        boolean z0;

        r0 := @this: android.service.trust.TrustAgentService;

        l0 := @parameter0: long;

        z0 := @parameter1: boolean;

        return;
    }

    public void onEscrowTokenStateReceived(long, int)
    {
        android.service.trust.TrustAgentService r0;
        long l0;
        int i1;

        r0 := @this: android.service.trust.TrustAgentService;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        return;
    }

    public void onTrustTimeout()
    {
        android.service.trust.TrustAgentService r0;

        r0 := @this: android.service.trust.TrustAgentService;

        return;
    }

    public void onUnlockAttempt(boolean)
    {
        android.service.trust.TrustAgentService r0;
        boolean z0;

        r0 := @this: android.service.trust.TrustAgentService;

        z0 := @parameter0: boolean;

        return;
    }

    public final void removeEscrowToken(long, android.os.UserHandle)
    {
        android.service.trust.TrustAgentService r0;
        long l0;
        java.lang.Object r1;
        android.service.trust.ITrustAgentServiceCallback r2, $r4;
        java.lang.String $r3;
        int $i2;
        java.lang.Throwable $r5;
        android.os.RemoteException $r6;
        android.os.UserHandle r7;
        java.lang.IllegalStateException r9;

        r0 := @this: android.service.trust.TrustAgentService;

        l0 := @parameter0: long;

        r7 := @parameter1: android.os.UserHandle;

        r1 = r0.<android.service.trust.TrustAgentService: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        r2 = r0.<android.service.trust.TrustAgentService: android.service.trust.ITrustAgentServiceCallback mCallback>;

     label02:
        if r2 == null goto label09;

     label03:
        $r4 = r0.<android.service.trust.TrustAgentService: android.service.trust.ITrustAgentServiceCallback mCallback>;

        $i2 = virtualinvoke r7.<android.os.UserHandle: int getIdentifier()>();

        interfaceinvoke $r4.<android.service.trust.ITrustAgentServiceCallback: void removeEscrowToken(long,int)>(l0, $i2);

     label04:
        goto label07;

     label05:
        $r6 := @caughtexception;

     label06:
        specialinvoke r0.<android.service.trust.TrustAgentService: void onError(java.lang.String)>("callling removeEscrowToken");

     label07:
        exitmonitor r1;

     label08:
        return;

     label09:
        $r3 = r0.<android.service.trust.TrustAgentService: java.lang.String TAG>;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>($r3, "Cannot add escrow token if the agent is not connecting to framework");

        r9 = new java.lang.IllegalStateException;

        specialinvoke r9.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Trust agent is not connected");

        throw r9;

     label10:
        $r5 := @caughtexception;

     label11:
        exitmonitor r1;

     label12:
        throw $r5;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch android.os.RemoteException from label03 to label04 with label05;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label07 to label08 with label10;
        catch java.lang.Throwable from label09 to label10 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
    }

    public final void revokeTrust()
    {
        android.service.trust.TrustAgentService r0;
        java.lang.Object r1;
        java.lang.Runnable $r2;
        android.service.trust.ITrustAgentServiceCallback $r3, r6;
        android.os.RemoteException $r4;
        java.lang.Throwable $r5;

        r0 := @this: android.service.trust.TrustAgentService;

        r1 = r0.<android.service.trust.TrustAgentService: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $r2 = r0.<android.service.trust.TrustAgentService: java.lang.Runnable mPendingGrantTrustTask>;

        if $r2 == null goto label02;

        r0.<android.service.trust.TrustAgentService: java.lang.Runnable mPendingGrantTrustTask> = null;

     label02:
        r6 = r0.<android.service.trust.TrustAgentService: android.service.trust.ITrustAgentServiceCallback mCallback>;

     label03:
        if r6 == null goto label08;

     label04:
        $r3 = r0.<android.service.trust.TrustAgentService: android.service.trust.ITrustAgentServiceCallback mCallback>;

        interfaceinvoke $r3.<android.service.trust.ITrustAgentServiceCallback: void revokeTrust()>();

     label05:
        goto label08;

     label06:
        $r4 := @caughtexception;

     label07:
        specialinvoke r0.<android.service.trust.TrustAgentService: void onError(java.lang.String)>("calling revokeTrust()");

     label08:
        exitmonitor r1;

     label09:
        return;

     label10:
        $r5 := @caughtexception;

     label11:
        exitmonitor r1;

     label12:
        throw $r5;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label02 to label03 with label10;
        catch android.os.RemoteException from label04 to label05 with label06;
        catch java.lang.Throwable from label04 to label05 with label10;
        catch java.lang.Throwable from label07 to label08 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
    }

    public final void setManagingTrust(boolean)
    {
        android.service.trust.TrustAgentService r0;
        boolean z0, $z1;
        java.lang.Object r1;
        android.service.trust.ITrustAgentServiceCallback $r2, r5;
        android.os.RemoteException $r3;
        java.lang.Throwable $r4;

        r0 := @this: android.service.trust.TrustAgentService;

        z0 := @parameter0: boolean;

        r1 = r0.<android.service.trust.TrustAgentService: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $z1 = r0.<android.service.trust.TrustAgentService: boolean mManagingTrust>;

        if $z1 == z0 goto label07;

        r0.<android.service.trust.TrustAgentService: boolean mManagingTrust> = z0;

        r5 = r0.<android.service.trust.TrustAgentService: android.service.trust.ITrustAgentServiceCallback mCallback>;

     label02:
        if r5 == null goto label07;

     label03:
        $r2 = r0.<android.service.trust.TrustAgentService: android.service.trust.ITrustAgentServiceCallback mCallback>;

        interfaceinvoke $r2.<android.service.trust.ITrustAgentServiceCallback: void setManagingTrust(boolean)>(z0);

     label04:
        goto label07;

     label05:
        $r3 := @caughtexception;

     label06:
        specialinvoke r0.<android.service.trust.TrustAgentService: void onError(java.lang.String)>("calling setManagingTrust()");

     label07:
        exitmonitor r1;

     label08:
        return;

     label09:
        $r4 := @caughtexception;

     label10:
        exitmonitor r1;

     label11:
        throw $r4;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch android.os.RemoteException from label03 to label04 with label05;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label06 to label07 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    public final void showKeyguardErrorMessage(java.lang.CharSequence)
    {
        android.service.trust.TrustAgentService r0;
        java.lang.Object r1;
        android.service.trust.ITrustAgentServiceCallback r2, $r5;
        java.lang.IllegalArgumentException $r3;
        java.lang.String $r4;
        android.os.RemoteException $r6;
        java.lang.Throwable $r7;
        java.lang.CharSequence r8;
        java.lang.IllegalStateException r10;

        r0 := @this: android.service.trust.TrustAgentService;

        r8 := @parameter0: java.lang.CharSequence;

        if r8 == null goto label13;

        r1 = r0.<android.service.trust.TrustAgentService: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        r2 = r0.<android.service.trust.TrustAgentService: android.service.trust.ITrustAgentServiceCallback mCallback>;

     label02:
        if r2 == null goto label09;

     label03:
        $r5 = r0.<android.service.trust.TrustAgentService: android.service.trust.ITrustAgentServiceCallback mCallback>;

        interfaceinvoke $r5.<android.service.trust.ITrustAgentServiceCallback: void showKeyguardErrorMessage(java.lang.CharSequence)>(r8);

     label04:
        goto label07;

     label05:
        $r6 := @caughtexception;

     label06:
        specialinvoke r0.<android.service.trust.TrustAgentService: void onError(java.lang.String)>("calling showKeyguardErrorMessage");

     label07:
        exitmonitor r1;

     label08:
        return;

     label09:
        $r4 = r0.<android.service.trust.TrustAgentService: java.lang.String TAG>;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>($r4, "Cannot show message because service is not connected to framework.");

        r10 = new java.lang.IllegalStateException;

        specialinvoke r10.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Trust agent is not connected");

        throw r10;

     label10:
        $r7 := @caughtexception;

     label11:
        exitmonitor r1;

     label12:
        throw $r7;

     label13:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("message cannot be null");

        throw $r3;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch android.os.RemoteException from label03 to label04 with label05;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label07 to label08 with label10;
        catch java.lang.Throwable from label09 to label10 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
    }

    public final void unlockUserWithToken(long, byte[], android.os.UserHandle)
    {
        android.service.trust.TrustAgentService r0;
        long l0;
        android.os.UserHandle r1;
        java.lang.Object r2, $r4;
        android.service.trust.ITrustAgentServiceCallback r3, $r7;
        android.os.UserManager $r5;
        boolean $z0;
        java.lang.String $r6, $r8;
        int $i2;
        android.os.RemoteException $r9;
        java.lang.Throwable $r10;
        byte[] r11;
        java.lang.IllegalStateException r13;

        r0 := @this: android.service.trust.TrustAgentService;

        l0 := @parameter0: long;

        r11 := @parameter1: byte[];

        r1 := @parameter2: android.os.UserHandle;

        $r4 = virtualinvoke r0.<android.service.trust.TrustAgentService: java.lang.Object getSystemService(java.lang.String)>("user");

        $r5 = (android.os.UserManager) $r4;

        $z0 = virtualinvoke $r5.<android.os.UserManager: boolean isUserUnlocked(android.os.UserHandle)>(r1);

        if $z0 == 0 goto label01;

        $r8 = r0.<android.service.trust.TrustAgentService: java.lang.String TAG>;

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>($r8, "User already unlocked");

        return;

     label01:
        r2 = r0.<android.service.trust.TrustAgentService: java.lang.Object mLock>;

        entermonitor r2;

     label02:
        r3 = r0.<android.service.trust.TrustAgentService: android.service.trust.ITrustAgentServiceCallback mCallback>;

     label03:
        if r3 == null goto label10;

     label04:
        $r7 = r0.<android.service.trust.TrustAgentService: android.service.trust.ITrustAgentServiceCallback mCallback>;

        $i2 = virtualinvoke r1.<android.os.UserHandle: int getIdentifier()>();

        interfaceinvoke $r7.<android.service.trust.ITrustAgentServiceCallback: void unlockUserWithToken(long,byte[],int)>(l0, r11, $i2);

     label05:
        goto label08;

     label06:
        $r9 := @caughtexception;

     label07:
        specialinvoke r0.<android.service.trust.TrustAgentService: void onError(java.lang.String)>("calling unlockUserWithToken");

     label08:
        exitmonitor r2;

     label09:
        return;

     label10:
        $r6 = r0.<android.service.trust.TrustAgentService: java.lang.String TAG>;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>($r6, "Cannot add escrow token if the agent is not connecting to framework");

        r13 = new java.lang.IllegalStateException;

        specialinvoke r13.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Trust agent is not connected");

        throw r13;

     label11:
        $r10 := @caughtexception;

     label12:
        exitmonitor r2;

     label13:
        throw $r10;

        catch java.lang.Throwable from label02 to label03 with label11;
        catch android.os.RemoteException from label04 to label05 with label06;
        catch java.lang.Throwable from label04 to label05 with label11;
        catch java.lang.Throwable from label07 to label08 with label11;
        catch java.lang.Throwable from label08 to label09 with label11;
        catch java.lang.Throwable from label10 to label11 with label11;
        catch java.lang.Throwable from label12 to label13 with label11;
    }

    public static void <clinit>()
    {
        <android.service.trust.TrustAgentService: java.lang.String TRUST_AGENT_META_DATA> = "android.service.trust.trustagent";

        <android.service.trust.TrustAgentService: int TOKEN_STATE_INACTIVE> = 0;

        <android.service.trust.TrustAgentService: int TOKEN_STATE_ACTIVE> = 1;

        <android.service.trust.TrustAgentService: java.lang.String SERVICE_INTERFACE> = "android.service.trust.TrustAgentService";

        <android.service.trust.TrustAgentService: int MSG_UNLOCK_LOCKOUT> = 6;

        <android.service.trust.TrustAgentService: int MSG_UNLOCK_ATTEMPT> = 1;

        <android.service.trust.TrustAgentService: int MSG_TRUST_TIMEOUT> = 3;

        <android.service.trust.TrustAgentService: int MSG_ESCROW_TOKEN_STATE_RECEIVED> = 8;

        <android.service.trust.TrustAgentService: int MSG_ESCROW_TOKEN_REMOVED> = 9;

        <android.service.trust.TrustAgentService: int MSG_ESCROW_TOKEN_ADDED> = 7;

        <android.service.trust.TrustAgentService: int MSG_DEVICE_UNLOCKED> = 5;

        <android.service.trust.TrustAgentService: int MSG_DEVICE_LOCKED> = 4;

        <android.service.trust.TrustAgentService: int MSG_CONFIGURE> = 2;

        <android.service.trust.TrustAgentService: int FLAG_GRANT_TRUST_INITIATED_BY_USER> = 1;

        <android.service.trust.TrustAgentService: int FLAG_GRANT_TRUST_DISMISS_KEYGUARD> = 2;

        <android.service.trust.TrustAgentService: java.lang.String EXTRA_USER_HANDLE> = "user_handle";

        <android.service.trust.TrustAgentService: java.lang.String EXTRA_TOKEN_STATE> = "token_state";

        <android.service.trust.TrustAgentService: java.lang.String EXTRA_TOKEN_REMOVED_RESULT> = "token_removed_result";

        <android.service.trust.TrustAgentService: java.lang.String EXTRA_TOKEN_HANDLE> = "token_handle";

        <android.service.trust.TrustAgentService: java.lang.String EXTRA_TOKEN> = "token";

        <android.service.trust.TrustAgentService: boolean DEBUG> = 0;

        return;
    }
}
