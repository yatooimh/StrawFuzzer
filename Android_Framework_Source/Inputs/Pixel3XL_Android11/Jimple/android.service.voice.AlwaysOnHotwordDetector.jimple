public class android.service.voice.AlwaysOnHotwordDetector extends java.lang.Object
{
    public static final int AUDIO_CAPABILITY_ECHO_CANCELLATION;
    public static final int AUDIO_CAPABILITY_NOISE_SUPPRESSION;
    static final boolean DBG;
    public static final int MODEL_PARAM_THRESHOLD_FACTOR;
    private static final int MSG_AVAILABILITY_CHANGED;
    private static final int MSG_DETECTION_ERROR;
    private static final int MSG_DETECTION_PAUSE;
    private static final int MSG_DETECTION_RESUME;
    private static final int MSG_HOTWORD_DETECTED;
    public static final int RECOGNITION_FLAG_ALLOW_MULTIPLE_TRIGGERS;
    public static final int RECOGNITION_FLAG_CAPTURE_TRIGGER_AUDIO;
    public static final int RECOGNITION_FLAG_ENABLE_AUDIO_ECHO_CANCELLATION;
    public static final int RECOGNITION_FLAG_ENABLE_AUDIO_NOISE_SUPPRESSION;
    public static final int RECOGNITION_FLAG_NONE;
    public static final int RECOGNITION_MODE_USER_IDENTIFICATION;
    public static final int RECOGNITION_MODE_VOICE_TRIGGER;
    public static final int STATE_HARDWARE_UNAVAILABLE;
    private static final int STATE_INVALID;
    public static final int STATE_KEYPHRASE_ENROLLED;
    public static final int STATE_KEYPHRASE_UNENROLLED;
    public static final int STATE_KEYPHRASE_UNSUPPORTED;
    private static final int STATE_NOT_READY;
    private static final int STATUS_ERROR;
    private static final int STATUS_OK;
    static final java.lang.String TAG;
    private int mAvailability;
    private final android.service.voice.AlwaysOnHotwordDetector$Callback mExternalCallback;
    private final android.os.Handler mHandler;
    private final android.service.voice.AlwaysOnHotwordDetector$SoundTriggerListener mInternalCallback;
    private final android.hardware.soundtrigger.KeyphraseEnrollmentInfo mKeyphraseEnrollmentInfo;
    private android.hardware.soundtrigger.KeyphraseMetadata mKeyphraseMetadata;
    private final java.util.Locale mLocale;
    private final java.lang.Object mLock;
    private final com.android.internal.app.IVoiceInteractionManagerService mModelManagementService;
    private final java.lang.String mText;

    public void <init>(java.lang.String, java.util.Locale, android.service.voice.AlwaysOnHotwordDetector$Callback, android.hardware.soundtrigger.KeyphraseEnrollmentInfo, com.android.internal.app.IVoiceInteractionManagerService)
    {
        android.service.voice.AlwaysOnHotwordDetector r0;
        java.lang.String r1;
        java.util.Locale r2;
        android.service.voice.AlwaysOnHotwordDetector$Callback r3;
        android.hardware.soundtrigger.KeyphraseEnrollmentInfo r4;
        com.android.internal.app.IVoiceInteractionManagerService r5;
        java.lang.Object $r6;
        android.service.voice.AlwaysOnHotwordDetector$MyHandler $r7;
        android.service.voice.AlwaysOnHotwordDetector$SoundTriggerListener $r8;
        android.os.Handler $r9;
        android.service.voice.AlwaysOnHotwordDetector$RefreshAvailabiltyTask $r10;
        java.lang.Void[] $r11;

        r0 := @this: android.service.voice.AlwaysOnHotwordDetector;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.Locale;

        r3 := @parameter2: android.service.voice.AlwaysOnHotwordDetector$Callback;

        r4 := @parameter3: android.hardware.soundtrigger.KeyphraseEnrollmentInfo;

        r5 := @parameter4: com.android.internal.app.IVoiceInteractionManagerService;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r6 = new java.lang.Object;

        specialinvoke $r6.<java.lang.Object: void <init>()>();

        r0.<android.service.voice.AlwaysOnHotwordDetector: java.lang.Object mLock> = $r6;

        r0.<android.service.voice.AlwaysOnHotwordDetector: int mAvailability> = 0;

        r0.<android.service.voice.AlwaysOnHotwordDetector: java.lang.String mText> = r1;

        r0.<android.service.voice.AlwaysOnHotwordDetector: java.util.Locale mLocale> = r2;

        r0.<android.service.voice.AlwaysOnHotwordDetector: android.hardware.soundtrigger.KeyphraseEnrollmentInfo mKeyphraseEnrollmentInfo> = r4;

        r0.<android.service.voice.AlwaysOnHotwordDetector: android.service.voice.AlwaysOnHotwordDetector$Callback mExternalCallback> = r3;

        $r7 = new android.service.voice.AlwaysOnHotwordDetector$MyHandler;

        specialinvoke $r7.<android.service.voice.AlwaysOnHotwordDetector$MyHandler: void <init>(android.service.voice.AlwaysOnHotwordDetector)>(r0);

        r0.<android.service.voice.AlwaysOnHotwordDetector: android.os.Handler mHandler> = $r7;

        $r8 = new android.service.voice.AlwaysOnHotwordDetector$SoundTriggerListener;

        $r9 = r0.<android.service.voice.AlwaysOnHotwordDetector: android.os.Handler mHandler>;

        specialinvoke $r8.<android.service.voice.AlwaysOnHotwordDetector$SoundTriggerListener: void <init>(android.os.Handler)>($r9);

        r0.<android.service.voice.AlwaysOnHotwordDetector: android.service.voice.AlwaysOnHotwordDetector$SoundTriggerListener mInternalCallback> = $r8;

        r0.<android.service.voice.AlwaysOnHotwordDetector: com.android.internal.app.IVoiceInteractionManagerService mModelManagementService> = r5;

        $r10 = new android.service.voice.AlwaysOnHotwordDetector$RefreshAvailabiltyTask;

        specialinvoke $r10.<android.service.voice.AlwaysOnHotwordDetector$RefreshAvailabiltyTask: void <init>(android.service.voice.AlwaysOnHotwordDetector)>(r0);

        $r11 = newarray (java.lang.Void)[0];

        virtualinvoke $r10.<android.service.voice.AlwaysOnHotwordDetector$RefreshAvailabiltyTask: android.os.AsyncTask execute(java.lang.Object[])>($r11);

        return;
    }

    static java.lang.Object access$100(android.service.voice.AlwaysOnHotwordDetector)
    {
        android.service.voice.AlwaysOnHotwordDetector r0;
        java.lang.Object $r1;

        r0 := @parameter0: android.service.voice.AlwaysOnHotwordDetector;

        $r1 = r0.<android.service.voice.AlwaysOnHotwordDetector: java.lang.Object mLock>;

        return $r1;
    }

    static int access$200(android.service.voice.AlwaysOnHotwordDetector)
    {
        android.service.voice.AlwaysOnHotwordDetector r0;
        int $i0;

        r0 := @parameter0: android.service.voice.AlwaysOnHotwordDetector;

        $i0 = r0.<android.service.voice.AlwaysOnHotwordDetector: int mAvailability>;

        return $i0;
    }

    static int access$202(android.service.voice.AlwaysOnHotwordDetector, int)
    {
        android.service.voice.AlwaysOnHotwordDetector r0;
        int i0;

        r0 := @parameter0: android.service.voice.AlwaysOnHotwordDetector;

        i0 := @parameter1: int;

        r0.<android.service.voice.AlwaysOnHotwordDetector: int mAvailability> = i0;

        return i0;
    }

    static android.service.voice.AlwaysOnHotwordDetector$Callback access$300(android.service.voice.AlwaysOnHotwordDetector)
    {
        android.service.voice.AlwaysOnHotwordDetector r0;
        android.service.voice.AlwaysOnHotwordDetector$Callback $r1;

        r0 := @parameter0: android.service.voice.AlwaysOnHotwordDetector;

        $r1 = r0.<android.service.voice.AlwaysOnHotwordDetector: android.service.voice.AlwaysOnHotwordDetector$Callback mExternalCallback>;

        return $r1;
    }

    static android.hardware.soundtrigger.KeyphraseMetadata access$400(android.service.voice.AlwaysOnHotwordDetector)
    {
        android.service.voice.AlwaysOnHotwordDetector r0;
        android.hardware.soundtrigger.KeyphraseMetadata $r1;

        r0 := @parameter0: android.service.voice.AlwaysOnHotwordDetector;

        $r1 = r0.<android.service.voice.AlwaysOnHotwordDetector: android.hardware.soundtrigger.KeyphraseMetadata mKeyphraseMetadata>;

        return $r1;
    }

    static android.hardware.soundtrigger.KeyphraseMetadata access$402(android.service.voice.AlwaysOnHotwordDetector, android.hardware.soundtrigger.KeyphraseMetadata)
    {
        android.service.voice.AlwaysOnHotwordDetector r0;
        android.hardware.soundtrigger.KeyphraseMetadata r1;

        r0 := @parameter0: android.service.voice.AlwaysOnHotwordDetector;

        r1 := @parameter1: android.hardware.soundtrigger.KeyphraseMetadata;

        r0.<android.service.voice.AlwaysOnHotwordDetector: android.hardware.soundtrigger.KeyphraseMetadata mKeyphraseMetadata> = r1;

        return r1;
    }

    static void access$500(android.service.voice.AlwaysOnHotwordDetector)
    {
        android.service.voice.AlwaysOnHotwordDetector r0;

        r0 := @parameter0: android.service.voice.AlwaysOnHotwordDetector;

        specialinvoke r0.<android.service.voice.AlwaysOnHotwordDetector: void notifyStateChangedLocked()>();

        return;
    }

    static com.android.internal.app.IVoiceInteractionManagerService access$600(android.service.voice.AlwaysOnHotwordDetector)
    {
        android.service.voice.AlwaysOnHotwordDetector r0;
        com.android.internal.app.IVoiceInteractionManagerService $r1;

        r0 := @parameter0: android.service.voice.AlwaysOnHotwordDetector;

        $r1 = r0.<android.service.voice.AlwaysOnHotwordDetector: com.android.internal.app.IVoiceInteractionManagerService mModelManagementService>;

        return $r1;
    }

    static java.lang.String access$700(android.service.voice.AlwaysOnHotwordDetector)
    {
        android.service.voice.AlwaysOnHotwordDetector r0;
        java.lang.String $r1;

        r0 := @parameter0: android.service.voice.AlwaysOnHotwordDetector;

        $r1 = r0.<android.service.voice.AlwaysOnHotwordDetector: java.lang.String mText>;

        return $r1;
    }

    static java.util.Locale access$800(android.service.voice.AlwaysOnHotwordDetector)
    {
        android.service.voice.AlwaysOnHotwordDetector r0;
        java.util.Locale $r1;

        r0 := @parameter0: android.service.voice.AlwaysOnHotwordDetector;

        $r1 = r0.<android.service.voice.AlwaysOnHotwordDetector: java.util.Locale mLocale>;

        return $r1;
    }

    private android.content.Intent getManageIntentLocked(int)
    {
        android.service.voice.AlwaysOnHotwordDetector r0;
        int i0, i1;
        java.lang.IllegalStateException $r1;
        java.util.Locale $r2;
        java.lang.String $r3;
        android.hardware.soundtrigger.KeyphraseEnrollmentInfo $r4;
        android.content.Intent $r5;
        java.lang.UnsupportedOperationException $r6;

        r0 := @this: android.service.voice.AlwaysOnHotwordDetector;

        i0 := @parameter0: int;

        i1 = r0.<android.service.voice.AlwaysOnHotwordDetector: int mAvailability>;

        if i1 == -3 goto label3;

        if i1 == 2 goto label2;

        if i1 != 1 goto label1;

        goto label2;

     label1:
        $r6 = new java.lang.UnsupportedOperationException;

        specialinvoke $r6.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Managing the given keyphrase is not supported");

        throw $r6;

     label2:
        $r4 = r0.<android.service.voice.AlwaysOnHotwordDetector: android.hardware.soundtrigger.KeyphraseEnrollmentInfo mKeyphraseEnrollmentInfo>;

        $r3 = r0.<android.service.voice.AlwaysOnHotwordDetector: java.lang.String mText>;

        $r2 = r0.<android.service.voice.AlwaysOnHotwordDetector: java.util.Locale mLocale>;

        $r5 = virtualinvoke $r4.<android.hardware.soundtrigger.KeyphraseEnrollmentInfo: android.content.Intent getManageKeyphraseIntent(int,java.lang.String,java.util.Locale)>(i0, $r3, $r2);

        return $r5;

     label3:
        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("getManageIntent called on an invalid detector");

        throw $r1;
    }

    private int getParameterLocked(int)
    {
        android.service.voice.AlwaysOnHotwordDetector r0;
        android.hardware.soundtrigger.KeyphraseMetadata $r2;
        com.android.internal.app.IVoiceInteractionManagerService $r3;
        int $i0, i1, i2;
        android.os.RemoteException $r4;
        java.lang.RuntimeException $r5;

        r0 := @this: android.service.voice.AlwaysOnHotwordDetector;

        i1 := @parameter0: int;

     label1:
        $r3 = r0.<android.service.voice.AlwaysOnHotwordDetector: com.android.internal.app.IVoiceInteractionManagerService mModelManagementService>;

        $r2 = r0.<android.service.voice.AlwaysOnHotwordDetector: android.hardware.soundtrigger.KeyphraseMetadata mKeyphraseMetadata>;

        $i0 = virtualinvoke $r2.<android.hardware.soundtrigger.KeyphraseMetadata: int getId()>();

        i2 = interfaceinvoke $r3.<com.android.internal.app.IVoiceInteractionManagerService: int getParameter(int,int)>($i0, i1);

     label2:
        return i2;

     label3:
        $r4 := @caughtexception;

        $r5 = virtualinvoke $r4.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r5;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    private int getSupportedAudioCapabilitiesLocked()
    {
        android.service.voice.AlwaysOnHotwordDetector r0;
        int i0;
        com.android.internal.app.IVoiceInteractionManagerService $r1;
        android.os.RemoteException $r2;
        java.lang.RuntimeException $r3;
        android.hardware.soundtrigger.SoundTrigger$ModuleProperties r4;

        r0 := @this: android.service.voice.AlwaysOnHotwordDetector;

     label1:
        $r1 = r0.<android.service.voice.AlwaysOnHotwordDetector: com.android.internal.app.IVoiceInteractionManagerService mModelManagementService>;

        r4 = interfaceinvoke $r1.<com.android.internal.app.IVoiceInteractionManagerService: android.hardware.soundtrigger.SoundTrigger$ModuleProperties getDspModuleProperties()>();

     label2:
        if r4 == null goto label5;

     label3:
        i0 = virtualinvoke r4.<android.hardware.soundtrigger.SoundTrigger$ModuleProperties: int getAudioCapabilities()>();

     label4:
        return i0;

     label5:
        return 0;

     label6:
        $r2 := @caughtexception;

        $r3 = virtualinvoke $r2.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r3;

        catch android.os.RemoteException from label1 to label2 with label6;
        catch android.os.RemoteException from label3 to label4 with label6;
    }

    private int getSupportedRecognitionModesLocked()
    {
        android.service.voice.AlwaysOnHotwordDetector r0;
        int i0, $i1;
        android.hardware.soundtrigger.KeyphraseMetadata r1;
        java.lang.IllegalStateException $r2;
        java.lang.UnsupportedOperationException $r3;

        r0 := @this: android.service.voice.AlwaysOnHotwordDetector;

        i0 = r0.<android.service.voice.AlwaysOnHotwordDetector: int mAvailability>;

        if i0 == -3 goto label2;

        if i0 != 2 goto label1;

        r1 = r0.<android.service.voice.AlwaysOnHotwordDetector: android.hardware.soundtrigger.KeyphraseMetadata mKeyphraseMetadata>;

        if r1 == null goto label1;

        $i1 = virtualinvoke r1.<android.hardware.soundtrigger.KeyphraseMetadata: int getRecognitionModeFlags()>();

        return $i1;

     label1:
        $r3 = new java.lang.UnsupportedOperationException;

        specialinvoke $r3.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Getting supported recognition modes for the keyphrase is not supported");

        throw $r3;

     label2:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("getSupportedRecognitionModes called on an invalid detector");

        throw $r2;
    }

    private void notifyStateChangedLocked()
    {
        android.service.voice.AlwaysOnHotwordDetector r0;
        android.os.Message r1;
        android.os.Handler $r2;
        int $i0;

        r0 := @this: android.service.voice.AlwaysOnHotwordDetector;

        $r2 = r0.<android.service.voice.AlwaysOnHotwordDetector: android.os.Handler mHandler>;

        r1 = staticinvoke <android.os.Message: android.os.Message obtain(android.os.Handler,int)>($r2, 1);

        $i0 = r0.<android.service.voice.AlwaysOnHotwordDetector: int mAvailability>;

        r1.<android.os.Message: int arg1> = $i0;

        virtualinvoke r1.<android.os.Message: void sendToTarget()>();

        return;
    }

    private android.service.voice.AlwaysOnHotwordDetector$ModelParamRange queryParameterLocked(int)
    {
        android.service.voice.AlwaysOnHotwordDetector r0;
        int i0, $i1;
        android.hardware.soundtrigger.KeyphraseMetadata $r1;
        com.android.internal.app.IVoiceInteractionManagerService $r2;
        android.service.voice.AlwaysOnHotwordDetector$ModelParamRange $r3;
        android.os.RemoteException $r4;
        java.lang.RuntimeException $r5;
        android.hardware.soundtrigger.SoundTrigger$ModelParamRange r6;

        r0 := @this: android.service.voice.AlwaysOnHotwordDetector;

        i0 := @parameter0: int;

     label1:
        $r2 = r0.<android.service.voice.AlwaysOnHotwordDetector: com.android.internal.app.IVoiceInteractionManagerService mModelManagementService>;

        $r1 = r0.<android.service.voice.AlwaysOnHotwordDetector: android.hardware.soundtrigger.KeyphraseMetadata mKeyphraseMetadata>;

        $i1 = virtualinvoke $r1.<android.hardware.soundtrigger.KeyphraseMetadata: int getId()>();

        r6 = interfaceinvoke $r2.<com.android.internal.app.IVoiceInteractionManagerService: android.hardware.soundtrigger.SoundTrigger$ModelParamRange queryParameter(int,int)>($i1, i0);

     label2:
        if r6 != null goto label3;

        return null;

     label3:
        $r3 = new android.service.voice.AlwaysOnHotwordDetector$ModelParamRange;

        specialinvoke $r3.<android.service.voice.AlwaysOnHotwordDetector$ModelParamRange: void <init>(android.hardware.soundtrigger.SoundTrigger$ModelParamRange)>(r6);

     label4:
        return $r3;

     label5:
        $r4 := @caughtexception;

        $r5 = virtualinvoke $r4.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r5;

        catch android.os.RemoteException from label1 to label2 with label5;
        catch android.os.RemoteException from label3 to label4 with label5;
    }

    private int setParameterLocked(int, int)
    {
        android.service.voice.AlwaysOnHotwordDetector r0;
        int i0, $i1, i3, i4;
        android.hardware.soundtrigger.KeyphraseMetadata $r1;
        com.android.internal.app.IVoiceInteractionManagerService $r2;
        java.lang.String $r5;
        android.os.RemoteException $r6;
        java.lang.RuntimeException $r7;
        java.lang.StringBuilder r8;

        r0 := @this: android.service.voice.AlwaysOnHotwordDetector;

        i3 := @parameter0: int;

        i0 := @parameter1: int;

     label1:
        $r2 = r0.<android.service.voice.AlwaysOnHotwordDetector: com.android.internal.app.IVoiceInteractionManagerService mModelManagementService>;

        $r1 = r0.<android.service.voice.AlwaysOnHotwordDetector: android.hardware.soundtrigger.KeyphraseMetadata mKeyphraseMetadata>;

        $i1 = virtualinvoke $r1.<android.hardware.soundtrigger.KeyphraseMetadata: int getId()>();

        i4 = interfaceinvoke $r2.<com.android.internal.app.IVoiceInteractionManagerService: int setParameter(int,int,int)>($i1, i3, i0);

     label2:
        if i4 == 0 goto label4;

     label3:
        r8 = new java.lang.StringBuilder;

        specialinvoke r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setParameter failed with error code ");

        virtualinvoke r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4);

        $r5 = virtualinvoke r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("AlwaysOnHotwordDetector", $r5);

     label4:
        return i4;

     label5:
        $r6 := @caughtexception;

        $r7 = virtualinvoke $r6.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r7;

        catch android.os.RemoteException from label1 to label2 with label5;
        catch android.os.RemoteException from label3 to label4 with label5;
    }

    private int startRecognitionLocked(int)
    {
        android.service.voice.AlwaysOnHotwordDetector r0;
        com.android.internal.app.IVoiceInteractionManagerService r2;
        java.lang.String r3, $r15;
        android.hardware.soundtrigger.SoundTrigger$RecognitionConfig r4;
        android.hardware.soundtrigger.SoundTrigger$KeyphraseRecognitionExtra $r5;
        android.hardware.soundtrigger.KeyphraseMetadata $r6, $r7, $r9;
        int $i0, $i1, $i2, $i3, $i4, $i5, i7, i10, i11;
        android.hardware.soundtrigger.SoundTrigger$ConfidenceLevel[] $r8;
        java.util.Locale $r10;
        android.hardware.soundtrigger.SoundTrigger$KeyphraseRecognitionExtra[] $r11;
        java.lang.StringBuilder $r12;
        android.os.RemoteException $r16;
        java.lang.RuntimeException $r17;
        boolean z0, z1;
        byte b8, b9;
        android.service.voice.AlwaysOnHotwordDetector$SoundTriggerListener r18;

        r0 := @this: android.service.voice.AlwaysOnHotwordDetector;

        i7 := @parameter0: int;

        $r5 = new android.hardware.soundtrigger.SoundTrigger$KeyphraseRecognitionExtra;

        $r6 = r0.<android.service.voice.AlwaysOnHotwordDetector: android.hardware.soundtrigger.KeyphraseMetadata mKeyphraseMetadata>;

        $i0 = virtualinvoke $r6.<android.hardware.soundtrigger.KeyphraseMetadata: int getId()>();

        $r7 = r0.<android.service.voice.AlwaysOnHotwordDetector: android.hardware.soundtrigger.KeyphraseMetadata mKeyphraseMetadata>;

        $i1 = virtualinvoke $r7.<android.hardware.soundtrigger.KeyphraseMetadata: int getRecognitionModeFlags()>();

        $r8 = newarray (android.hardware.soundtrigger.SoundTrigger$ConfidenceLevel)[0];

        specialinvoke $r5.<android.hardware.soundtrigger.SoundTrigger$KeyphraseRecognitionExtra: void <init>(int,int,int,android.hardware.soundtrigger.SoundTrigger$ConfidenceLevel[])>($i0, $i1, 0, $r8);

        $i2 = i7 & 1;

        if $i2 == 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        $i3 = i7 & 2;

        if $i3 == 0 goto label3;

        z1 = 1;

        goto label4;

     label3:
        z1 = 0;

     label4:
        b8 = 0;

        $i4 = i7 & 4;

        if $i4 == 0 goto label5;

        b8 = 0 | 1;

     label5:
        b9 = b8;

        $i5 = i7 & 8;

        if $i5 == 0 goto label6;

        b9 = b8 | 2;

     label6:
        r2 = r0.<android.service.voice.AlwaysOnHotwordDetector: com.android.internal.app.IVoiceInteractionManagerService mModelManagementService>;

        $r9 = r0.<android.service.voice.AlwaysOnHotwordDetector: android.hardware.soundtrigger.KeyphraseMetadata mKeyphraseMetadata>;

        i10 = virtualinvoke $r9.<android.hardware.soundtrigger.KeyphraseMetadata: int getId()>();

        $r10 = r0.<android.service.voice.AlwaysOnHotwordDetector: java.util.Locale mLocale>;

        r3 = virtualinvoke $r10.<java.util.Locale: java.lang.String toLanguageTag()>();

        r18 = r0.<android.service.voice.AlwaysOnHotwordDetector: android.service.voice.AlwaysOnHotwordDetector$SoundTriggerListener mInternalCallback>;

        r4 = new android.hardware.soundtrigger.SoundTrigger$RecognitionConfig;

        $r11 = newarray (android.hardware.soundtrigger.SoundTrigger$KeyphraseRecognitionExtra)[1];

        $r11[0] = $r5;

        specialinvoke r4.<android.hardware.soundtrigger.SoundTrigger$RecognitionConfig: void <init>(boolean,boolean,android.hardware.soundtrigger.SoundTrigger$KeyphraseRecognitionExtra[],byte[],int)>(z0, z1, $r11, null, b9);

        i11 = interfaceinvoke r2.<com.android.internal.app.IVoiceInteractionManagerService: int startRecognition(int,java.lang.String,android.hardware.soundtrigger.IRecognitionStatusCallback,android.hardware.soundtrigger.SoundTrigger$RecognitionConfig)>(i10, r3, r18, r4);

     label7:
        if i11 == 0 goto label8;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("startRecognition() failed with error code ");

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i11);

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("AlwaysOnHotwordDetector", $r15);

     label8:
        return i11;

     label9:
        $r16 := @caughtexception;

        $r17 = virtualinvoke $r16.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r17;

        catch android.os.RemoteException from label6 to label7 with label9;
    }

    private int stopRecognitionLocked()
    {
        android.service.voice.AlwaysOnHotwordDetector r0;
        int i0, $i1;
        android.hardware.soundtrigger.KeyphraseMetadata $r1;
        com.android.internal.app.IVoiceInteractionManagerService $r2;
        android.service.voice.AlwaysOnHotwordDetector$SoundTriggerListener $r3;
        java.lang.StringBuilder $r4;
        java.lang.String $r7;
        android.os.RemoteException $r8;
        java.lang.RuntimeException $r9;

        r0 := @this: android.service.voice.AlwaysOnHotwordDetector;

     label1:
        $r2 = r0.<android.service.voice.AlwaysOnHotwordDetector: com.android.internal.app.IVoiceInteractionManagerService mModelManagementService>;

        $r1 = r0.<android.service.voice.AlwaysOnHotwordDetector: android.hardware.soundtrigger.KeyphraseMetadata mKeyphraseMetadata>;

        $i1 = virtualinvoke $r1.<android.hardware.soundtrigger.KeyphraseMetadata: int getId()>();

        $r3 = r0.<android.service.voice.AlwaysOnHotwordDetector: android.service.voice.AlwaysOnHotwordDetector$SoundTriggerListener mInternalCallback>;

        i0 = interfaceinvoke $r2.<com.android.internal.app.IVoiceInteractionManagerService: int stopRecognition(int,android.hardware.soundtrigger.IRecognitionStatusCallback)>($i1, $r3);

     label2:
        if i0 == 0 goto label3;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("stopRecognition() failed with error code ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("AlwaysOnHotwordDetector", $r7);

     label3:
        return i0;

     label4:
        $r8 := @caughtexception;

        $r9 = virtualinvoke $r8.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r9;

        catch android.os.RemoteException from label1 to label2 with label4;
    }

    public android.content.Intent createEnrollIntent()
    {
        android.service.voice.AlwaysOnHotwordDetector r0;
        java.lang.Object r1;
        java.lang.Throwable $r2;
        android.content.Intent r3;

        r0 := @this: android.service.voice.AlwaysOnHotwordDetector;

        r1 = r0.<android.service.voice.AlwaysOnHotwordDetector: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        r3 = specialinvoke r0.<android.service.voice.AlwaysOnHotwordDetector: android.content.Intent getManageIntentLocked(int)>(0);

        exitmonitor r1;

     label2:
        return r3;

     label3:
        $r2 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public android.content.Intent createReEnrollIntent()
    {
        android.service.voice.AlwaysOnHotwordDetector r0;
        java.lang.Object r1;
        java.lang.Throwable $r2;
        android.content.Intent r3;

        r0 := @this: android.service.voice.AlwaysOnHotwordDetector;

        r1 = r0.<android.service.voice.AlwaysOnHotwordDetector: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        r3 = specialinvoke r0.<android.service.voice.AlwaysOnHotwordDetector: android.content.Intent getManageIntentLocked(int)>(1);

        exitmonitor r1;

     label2:
        return r3;

     label3:
        $r2 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public android.content.Intent createUnEnrollIntent()
    {
        android.service.voice.AlwaysOnHotwordDetector r0;
        java.lang.Object r1;
        java.lang.Throwable $r2;
        android.content.Intent r3;

        r0 := @this: android.service.voice.AlwaysOnHotwordDetector;

        r1 = r0.<android.service.voice.AlwaysOnHotwordDetector: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        r3 = specialinvoke r0.<android.service.voice.AlwaysOnHotwordDetector: android.content.Intent getManageIntentLocked(int)>(2);

        exitmonitor r1;

     label2:
        return r3;

     label3:
        $r2 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void dump(java.lang.String, java.io.PrintWriter)
    {
        android.service.voice.AlwaysOnHotwordDetector r0;
        java.io.PrintWriter r1;
        java.lang.Object r2;
        java.lang.String $r3, r8;
        java.util.Locale $r4;
        int $i0;
        android.hardware.soundtrigger.KeyphraseMetadata $r5;
        android.hardware.soundtrigger.KeyphraseEnrollmentInfo $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.service.voice.AlwaysOnHotwordDetector;

        r8 := @parameter0: java.lang.String;

        r1 := @parameter1: java.io.PrintWriter;

        r2 = r0.<android.service.voice.AlwaysOnHotwordDetector: java.lang.Object mLock>;

        entermonitor r2;

     label1:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r8);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("Text=");

        $r3 = r0.<android.service.voice.AlwaysOnHotwordDetector: java.lang.String mText>;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r3);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r8);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("Locale=");

        $r4 = r0.<android.service.voice.AlwaysOnHotwordDetector: java.util.Locale mLocale>;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.Object)>($r4);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r8);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("Availability=");

        $i0 = r0.<android.service.voice.AlwaysOnHotwordDetector: int mAvailability>;

        virtualinvoke r1.<java.io.PrintWriter: void println(int)>($i0);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r8);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("KeyphraseMetadata=");

        $r5 = r0.<android.service.voice.AlwaysOnHotwordDetector: android.hardware.soundtrigger.KeyphraseMetadata mKeyphraseMetadata>;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.Object)>($r5);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r8);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("EnrollmentInfo=");

        $r6 = r0.<android.service.voice.AlwaysOnHotwordDetector: android.hardware.soundtrigger.KeyphraseEnrollmentInfo mKeyphraseEnrollmentInfo>;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.Object)>($r6);

        exitmonitor r2;

     label2:
        return;

     label3:
        $r7 := @caughtexception;

     label4:
        exitmonitor r2;

     label5:
        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public int getParameter(int)
    {
        android.service.voice.AlwaysOnHotwordDetector r0;
        java.lang.Object r1;
        int $i0, i1, i2;
        java.lang.Throwable $r2;
        java.lang.IllegalStateException r3;

        r0 := @this: android.service.voice.AlwaysOnHotwordDetector;

        i1 := @parameter0: int;

        r1 = r0.<android.service.voice.AlwaysOnHotwordDetector: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $i0 = r0.<android.service.voice.AlwaysOnHotwordDetector: int mAvailability>;

        if $i0 == -3 goto label3;

        i2 = specialinvoke r0.<android.service.voice.AlwaysOnHotwordDetector: int getParameterLocked(int)>(i1);

        exitmonitor r1;

     label2:
        return i2;

     label3:
        r3 = new java.lang.IllegalStateException;

        specialinvoke r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("getParameter called on an invalid detector");

        throw r3;

     label4:
        $r2 := @caughtexception;

     label5:
        exitmonitor r1;

     label6:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label3 to label4 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public int getSupportedAudioCapabilities()
    {
        android.service.voice.AlwaysOnHotwordDetector r0;
        java.lang.Object r1;
        int i0;
        java.lang.Throwable $r3;

        r0 := @this: android.service.voice.AlwaysOnHotwordDetector;

        r1 = r0.<android.service.voice.AlwaysOnHotwordDetector: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        i0 = specialinvoke r0.<android.service.voice.AlwaysOnHotwordDetector: int getSupportedAudioCapabilitiesLocked()>();

        exitmonitor r1;

     label2:
        return i0;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public int getSupportedRecognitionModes()
    {
        android.service.voice.AlwaysOnHotwordDetector r0;
        java.lang.Object r1;
        int i0;
        java.lang.Throwable $r3;

        r0 := @this: android.service.voice.AlwaysOnHotwordDetector;

        r1 = r0.<android.service.voice.AlwaysOnHotwordDetector: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        i0 = specialinvoke r0.<android.service.voice.AlwaysOnHotwordDetector: int getSupportedRecognitionModesLocked()>();

        exitmonitor r1;

     label2:
        return i0;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    void invalidate()
    {
        android.service.voice.AlwaysOnHotwordDetector r0;
        java.lang.Object r1;
        java.lang.Throwable $r3;

        r0 := @this: android.service.voice.AlwaysOnHotwordDetector;

        r1 = r0.<android.service.voice.AlwaysOnHotwordDetector: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        r0.<android.service.voice.AlwaysOnHotwordDetector: int mAvailability> = -3;

        specialinvoke r0.<android.service.voice.AlwaysOnHotwordDetector: void notifyStateChangedLocked()>();

        exitmonitor r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    void onSoundModelsChanged()
    {
        android.service.voice.AlwaysOnHotwordDetector r0;
        java.lang.Object r1;
        int $i0, $i2, $i3;
        java.lang.Void[] $r2;
        java.lang.Throwable $r4;
        android.service.voice.AlwaysOnHotwordDetector$RefreshAvailabiltyTask r5;

        r0 := @this: android.service.voice.AlwaysOnHotwordDetector;

        r1 = r0.<android.service.voice.AlwaysOnHotwordDetector: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $i0 = r0.<android.service.voice.AlwaysOnHotwordDetector: int mAvailability>;

        if $i0 == -3 goto label06;

        $i2 = r0.<android.service.voice.AlwaysOnHotwordDetector: int mAvailability>;

        if $i2 != -2 goto label03;

     label02:
        goto label06;

     label03:
        $i3 = r0.<android.service.voice.AlwaysOnHotwordDetector: int mAvailability>;

        if $i3 != 2 goto label04;

        specialinvoke r0.<android.service.voice.AlwaysOnHotwordDetector: int stopRecognitionLocked()>();

     label04:
        r5 = new android.service.voice.AlwaysOnHotwordDetector$RefreshAvailabiltyTask;

        specialinvoke r5.<android.service.voice.AlwaysOnHotwordDetector$RefreshAvailabiltyTask: void <init>(android.service.voice.AlwaysOnHotwordDetector)>(r0);

        $r2 = newarray (java.lang.Void)[0];

        virtualinvoke r5.<android.service.voice.AlwaysOnHotwordDetector$RefreshAvailabiltyTask: android.os.AsyncTask execute(java.lang.Object[])>($r2);

        exitmonitor r1;

     label05:
        return;

     label06:
        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("AlwaysOnHotwordDetector", "Received onSoundModelsChanged for an unsupported keyphrase/config");

        exitmonitor r1;

     label07:
        return;

     label08:
        $r4 := @caughtexception;

     label09:
        exitmonitor r1;

     label10:
        throw $r4;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    public android.service.voice.AlwaysOnHotwordDetector$ModelParamRange queryParameter(int)
    {
        android.service.voice.AlwaysOnHotwordDetector r0;
        int i0, $i1;
        java.lang.Object r1;
        java.lang.Throwable $r2;
        android.service.voice.AlwaysOnHotwordDetector$ModelParamRange r3;
        java.lang.IllegalStateException r4;

        r0 := @this: android.service.voice.AlwaysOnHotwordDetector;

        i0 := @parameter0: int;

        r1 = r0.<android.service.voice.AlwaysOnHotwordDetector: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $i1 = r0.<android.service.voice.AlwaysOnHotwordDetector: int mAvailability>;

        if $i1 == -3 goto label3;

        r3 = specialinvoke r0.<android.service.voice.AlwaysOnHotwordDetector: android.service.voice.AlwaysOnHotwordDetector$ModelParamRange queryParameterLocked(int)>(i0);

        exitmonitor r1;

     label2:
        return r3;

     label3:
        r4 = new java.lang.IllegalStateException;

        specialinvoke r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("queryParameter called on an invalid detector");

        throw r4;

     label4:
        $r2 := @caughtexception;

     label5:
        exitmonitor r1;

     label6:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label3 to label4 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public int setParameter(int, int)
    {
        android.service.voice.AlwaysOnHotwordDetector r0;
        int i0, $i1, i2, i3;
        java.lang.Object r1;
        java.lang.Throwable $r2;
        java.lang.IllegalStateException r3;

        r0 := @this: android.service.voice.AlwaysOnHotwordDetector;

        i2 := @parameter0: int;

        i0 := @parameter1: int;

        r1 = r0.<android.service.voice.AlwaysOnHotwordDetector: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $i1 = r0.<android.service.voice.AlwaysOnHotwordDetector: int mAvailability>;

        if $i1 == -3 goto label3;

        i3 = specialinvoke r0.<android.service.voice.AlwaysOnHotwordDetector: int setParameterLocked(int,int)>(i2, i0);

        exitmonitor r1;

     label2:
        return i3;

     label3:
        r3 = new java.lang.IllegalStateException;

        specialinvoke r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("setParameter called on an invalid detector");

        throw r3;

     label4:
        $r2 := @caughtexception;

     label5:
        exitmonitor r1;

     label6:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label3 to label4 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public boolean startRecognition(int)
    {
        android.service.voice.AlwaysOnHotwordDetector r0;
        int i0, $i1, $i2, $i3;
        java.lang.Object r1;
        java.lang.Throwable $r2;
        boolean z0;
        java.lang.UnsupportedOperationException r3;
        java.lang.IllegalStateException r4;

        r0 := @this: android.service.voice.AlwaysOnHotwordDetector;

        i0 := @parameter0: int;

        r1 = r0.<android.service.voice.AlwaysOnHotwordDetector: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $i1 = r0.<android.service.voice.AlwaysOnHotwordDetector: int mAvailability>;

        if $i1 == -3 goto label07;

        $i2 = r0.<android.service.voice.AlwaysOnHotwordDetector: int mAvailability>;

        if $i2 != 2 goto label06;

        $i3 = specialinvoke r0.<android.service.voice.AlwaysOnHotwordDetector: int startRecognitionLocked(int)>(i0);

        if $i3 != 0 goto label03;

     label02:
        z0 = 1;

        goto label04;

     label03:
        z0 = 0;

     label04:
        exitmonitor r1;

     label05:
        return z0;

     label06:
        r3 = new java.lang.UnsupportedOperationException;

        specialinvoke r3.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Recognition for the given keyphrase is not supported");

        throw r3;

     label07:
        r4 = new java.lang.IllegalStateException;

        specialinvoke r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("startRecognition called on an invalid detector");

        throw r4;

     label08:
        $r2 := @caughtexception;

     label09:
        exitmonitor r1;

     label10:
        throw $r2;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label07 to label08 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    public boolean stopRecognition()
    {
        android.service.voice.AlwaysOnHotwordDetector r0;
        java.lang.Object r1;
        int $i0, $i1, $i2;
        java.lang.Throwable $r2;
        boolean z0;
        java.lang.UnsupportedOperationException r3;
        java.lang.IllegalStateException r4;

        r0 := @this: android.service.voice.AlwaysOnHotwordDetector;

        r1 = r0.<android.service.voice.AlwaysOnHotwordDetector: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $i0 = r0.<android.service.voice.AlwaysOnHotwordDetector: int mAvailability>;

        if $i0 == -3 goto label07;

        $i1 = r0.<android.service.voice.AlwaysOnHotwordDetector: int mAvailability>;

        if $i1 != 2 goto label06;

        $i2 = specialinvoke r0.<android.service.voice.AlwaysOnHotwordDetector: int stopRecognitionLocked()>();

        if $i2 != 0 goto label03;

     label02:
        z0 = 1;

        goto label04;

     label03:
        z0 = 0;

     label04:
        exitmonitor r1;

     label05:
        return z0;

     label06:
        r3 = new java.lang.UnsupportedOperationException;

        specialinvoke r3.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Recognition for the given keyphrase is not supported");

        throw r3;

     label07:
        r4 = new java.lang.IllegalStateException;

        specialinvoke r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("stopRecognition called on an invalid detector");

        throw r4;

     label08:
        $r2 := @caughtexception;

     label09:
        exitmonitor r1;

     label10:
        throw $r2;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label07 to label08 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    public static void <clinit>()
    {
        <android.service.voice.AlwaysOnHotwordDetector: java.lang.String TAG> = "AlwaysOnHotwordDetector";

        <android.service.voice.AlwaysOnHotwordDetector: int STATUS_OK> = 0;

        <android.service.voice.AlwaysOnHotwordDetector: int STATUS_ERROR> = -2147483648;

        <android.service.voice.AlwaysOnHotwordDetector: int STATE_NOT_READY> = 0;

        <android.service.voice.AlwaysOnHotwordDetector: int STATE_KEYPHRASE_UNSUPPORTED> = -1;

        <android.service.voice.AlwaysOnHotwordDetector: int STATE_KEYPHRASE_UNENROLLED> = 1;

        <android.service.voice.AlwaysOnHotwordDetector: int STATE_KEYPHRASE_ENROLLED> = 2;

        <android.service.voice.AlwaysOnHotwordDetector: int STATE_INVALID> = -3;

        <android.service.voice.AlwaysOnHotwordDetector: int STATE_HARDWARE_UNAVAILABLE> = -2;

        <android.service.voice.AlwaysOnHotwordDetector: int RECOGNITION_MODE_VOICE_TRIGGER> = 1;

        <android.service.voice.AlwaysOnHotwordDetector: int RECOGNITION_MODE_USER_IDENTIFICATION> = 2;

        <android.service.voice.AlwaysOnHotwordDetector: int RECOGNITION_FLAG_NONE> = 0;

        <android.service.voice.AlwaysOnHotwordDetector: int RECOGNITION_FLAG_ENABLE_AUDIO_NOISE_SUPPRESSION> = 8;

        <android.service.voice.AlwaysOnHotwordDetector: int RECOGNITION_FLAG_ENABLE_AUDIO_ECHO_CANCELLATION> = 4;

        <android.service.voice.AlwaysOnHotwordDetector: int RECOGNITION_FLAG_CAPTURE_TRIGGER_AUDIO> = 1;

        <android.service.voice.AlwaysOnHotwordDetector: int RECOGNITION_FLAG_ALLOW_MULTIPLE_TRIGGERS> = 2;

        <android.service.voice.AlwaysOnHotwordDetector: int MSG_HOTWORD_DETECTED> = 2;

        <android.service.voice.AlwaysOnHotwordDetector: int MSG_DETECTION_RESUME> = 5;

        <android.service.voice.AlwaysOnHotwordDetector: int MSG_DETECTION_PAUSE> = 4;

        <android.service.voice.AlwaysOnHotwordDetector: int MSG_DETECTION_ERROR> = 3;

        <android.service.voice.AlwaysOnHotwordDetector: int MSG_AVAILABILITY_CHANGED> = 1;

        <android.service.voice.AlwaysOnHotwordDetector: int MODEL_PARAM_THRESHOLD_FACTOR> = 0;

        <android.service.voice.AlwaysOnHotwordDetector: boolean DBG> = 0;

        <android.service.voice.AlwaysOnHotwordDetector: int AUDIO_CAPABILITY_NOISE_SUPPRESSION> = 2;

        <android.service.voice.AlwaysOnHotwordDetector: int AUDIO_CAPABILITY_ECHO_CANCELLATION> = 1;

        return;
    }
}
