public class android.service.voice.VoiceInteractionService extends android.app.Service
{
    public static final java.lang.String SERVICE_INTERFACE;
    public static final java.lang.String SERVICE_META_DATA;
    static final java.lang.String TAG;
    private android.os.IBinder$DeathRecipient mDeathRecipient;
    private android.service.voice.AlwaysOnHotwordDetector mHotwordDetector;
    android.service.voice.IVoiceInteractionService mInterface;
    private android.hardware.soundtrigger.KeyphraseEnrollmentInfo mKeyphraseEnrollmentInfo;
    private final java.lang.Object mLock;
    com.android.internal.app.IVoiceInteractionManagerService mSystemService;

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;

        <android.service.voice.VoiceInteractionService: java.lang.String SERVICE_META_DATA> = "android.voice_interaction";

        <android.service.voice.VoiceInteractionService: java.lang.String SERVICE_INTERFACE> = "android.service.voice.VoiceInteractionService";

        $r0 = class "Landroid/service/voice/VoiceInteractionService;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getSimpleName()>();

        <android.service.voice.VoiceInteractionService: java.lang.String TAG> = $r1;

        return;
    }

    public void <init>()
    {
        android.service.voice.VoiceInteractionService r0;
        android.service.voice.VoiceInteractionService$1 $r1;
        java.lang.Object $r2;
        android.service.voice._$$Lambda$VoiceInteractionService$yug9azdKctkf1nIeEMtq_56D_GE $r3;

        r0 := @this: android.service.voice.VoiceInteractionService;

        specialinvoke r0.<android.app.Service: void <init>()>();

        $r1 = new android.service.voice.VoiceInteractionService$1;

        specialinvoke $r1.<android.service.voice.VoiceInteractionService$1: void <init>(android.service.voice.VoiceInteractionService)>(r0);

        r0.<android.service.voice.VoiceInteractionService: android.service.voice.IVoiceInteractionService mInterface> = $r1;

        $r2 = new java.lang.Object;

        specialinvoke $r2.<java.lang.Object: void <init>()>();

        r0.<android.service.voice.VoiceInteractionService: java.lang.Object mLock> = $r2;

        $r3 = new android.service.voice._$$Lambda$VoiceInteractionService$yug9azdKctkf1nIeEMtq_56D_GE;

        specialinvoke $r3.<android.service.voice._$$Lambda$VoiceInteractionService$yug9azdKctkf1nIeEMtq_56D_GE: void <init>(android.service.voice.VoiceInteractionService)>(r0);

        r0.<android.service.voice.VoiceInteractionService: android.os.IBinder$DeathRecipient mDeathRecipient> = $r3;

        return;
    }

    static void access$000(android.service.voice.VoiceInteractionService, java.util.List, com.android.internal.app.IVoiceActionCheckCallback)
    {
        android.service.voice.VoiceInteractionService r0;
        java.util.List r1;
        com.android.internal.app.IVoiceActionCheckCallback r2;

        r0 := @parameter0: android.service.voice.VoiceInteractionService;

        r1 := @parameter1: java.util.List;

        r2 := @parameter2: com.android.internal.app.IVoiceActionCheckCallback;

        specialinvoke r0.<android.service.voice.VoiceInteractionService: void onHandleVoiceActionCheck(java.util.List,com.android.internal.app.IVoiceActionCheckCallback)>(r1, r2);

        return;
    }

    static void access$100(android.service.voice.VoiceInteractionService)
    {
        android.service.voice.VoiceInteractionService r0;

        r0 := @parameter0: android.service.voice.VoiceInteractionService;

        specialinvoke r0.<android.service.voice.VoiceInteractionService: void onSoundModelsChangedInternal()>();

        return;
    }

    static void access$200(android.service.voice.VoiceInteractionService)
    {
        android.service.voice.VoiceInteractionService r0;

        r0 := @parameter0: android.service.voice.VoiceInteractionService;

        specialinvoke r0.<android.service.voice.VoiceInteractionService: void onShutdownInternal()>();

        return;
    }

    public static boolean isActiveService(android.content.Context, android.content.ComponentName)
    {
        android.content.ComponentName r0, r4;
        android.content.ContentResolver $r1;
        boolean $z0, $z1;
        android.content.Context r2;
        java.lang.String r3;

        r2 := @parameter0: android.content.Context;

        r0 := @parameter1: android.content.ComponentName;

        $r1 = virtualinvoke r2.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        r3 = staticinvoke <android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)>($r1, "voice_interaction_service");

        if r3 == null goto label3;

        $z0 = virtualinvoke r3.<java.lang.String: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        goto label3;

     label1:
        r4 = staticinvoke <android.content.ComponentName: android.content.ComponentName unflattenFromString(java.lang.String)>(r3);

        if r4 != null goto label2;

        return 0;

     label2:
        $z1 = virtualinvoke r4.<android.content.ComponentName: boolean equals(java.lang.Object)>(r0);

        return $z1;

     label3:
        return 0;
    }

    public static void lambda$V4h-zKzsPhikYYwTTwjkcep67fc(android.service.voice.VoiceInteractionService)
    {
        android.service.voice.VoiceInteractionService r0;

        r0 := @parameter0: android.service.voice.VoiceInteractionService;

        specialinvoke r0.<android.service.voice.VoiceInteractionService: void onShutdownInternal()>();

        return;
    }

    private void onHandleVoiceActionCheck(java.util.List, com.android.internal.app.IVoiceActionCheckCallback)
    {
        android.service.voice.VoiceInteractionService r0;
        com.android.internal.app.IVoiceActionCheckCallback r1;
        android.os.RemoteException $r2;
        java.util.List r3;
        android.util.ArraySet r4;
        java.util.Set r5;
        java.util.ArrayList r6;

        r0 := @this: android.service.voice.VoiceInteractionService;

        r3 := @parameter0: java.util.List;

        r1 := @parameter1: com.android.internal.app.IVoiceActionCheckCallback;

        if r1 == null goto label4;

     label1:
        r4 = new android.util.ArraySet;

        specialinvoke r4.<android.util.ArraySet: void <init>(java.util.Collection)>(r3);

        r5 = virtualinvoke r0.<android.service.voice.VoiceInteractionService: java.util.Set onGetSupportedVoiceActions(java.util.Set)>(r4);

        r6 = new java.util.ArrayList;

        specialinvoke r6.<java.util.ArrayList: void <init>(java.util.Collection)>(r5);

        interfaceinvoke r1.<com.android.internal.app.IVoiceActionCheckCallback: void onComplete(java.util.List)>(r6);

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    private void onShutdownInternal()
    {
        android.service.voice.VoiceInteractionService r0;

        r0 := @this: android.service.voice.VoiceInteractionService;

        virtualinvoke r0.<android.service.voice.VoiceInteractionService: void onShutdown()>();

        specialinvoke r0.<android.service.voice.VoiceInteractionService: void safelyShutdownHotwordDetector()>();

        return;
    }

    private void onSoundModelsChangedInternal()
    {
        android.service.voice.VoiceInteractionService r0;
        android.service.voice.AlwaysOnHotwordDetector $r2, $r3;
        java.lang.Throwable $r4;

        r0 := @this: android.service.voice.VoiceInteractionService;

        entermonitor r0;

     label1:
        $r2 = r0.<android.service.voice.VoiceInteractionService: android.service.voice.AlwaysOnHotwordDetector mHotwordDetector>;

        if $r2 == null goto label2;

        $r3 = r0.<android.service.voice.VoiceInteractionService: android.service.voice.AlwaysOnHotwordDetector mHotwordDetector>;

        virtualinvoke $r3.<android.service.voice.AlwaysOnHotwordDetector: void onSoundModelsChanged()>();

     label2:
        exitmonitor r0;

     label3:
        return;

     label4:
        $r4 := @caughtexception;

     label5:
        exitmonitor r0;

     label6:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    private void safelyShutdownHotwordDetector()
    {
        android.service.voice.VoiceInteractionService r0;
        java.lang.Object r1;
        android.service.voice.AlwaysOnHotwordDetector $r2, $r3, $r4;
        java.lang.Throwable $r5;
        java.lang.Exception $r6, $r7;

        r0 := @this: android.service.voice.VoiceInteractionService;

        r1 = r0.<android.service.voice.VoiceInteractionService: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $r2 = r0.<android.service.voice.VoiceInteractionService: android.service.voice.AlwaysOnHotwordDetector mHotwordDetector>;

        if $r2 != null goto label03;

        exitmonitor r1;

     label02:
        return;

     label03:
        $r3 = r0.<android.service.voice.VoiceInteractionService: android.service.voice.AlwaysOnHotwordDetector mHotwordDetector>;

        virtualinvoke $r3.<android.service.voice.AlwaysOnHotwordDetector: boolean stopRecognition()>();

     label04:
        goto label06;

     label05:
        $r7 := @caughtexception;

     label06:
        $r4 = r0.<android.service.voice.VoiceInteractionService: android.service.voice.AlwaysOnHotwordDetector mHotwordDetector>;

        virtualinvoke $r4.<android.service.voice.AlwaysOnHotwordDetector: void invalidate()>();

     label07:
        goto label09;

     label08:
        $r6 := @caughtexception;

     label09:
        r0.<android.service.voice.VoiceInteractionService: android.service.voice.AlwaysOnHotwordDetector mHotwordDetector> = null;

        exitmonitor r1;

     label10:
        return;

     label11:
        $r5 := @caughtexception;

     label12:
        exitmonitor r1;

     label13:
        throw $r5;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Exception from label03 to label04 with label05;
        catch java.lang.Throwable from label03 to label04 with label11;
        catch java.lang.Exception from label06 to label07 with label08;
        catch java.lang.Throwable from label06 to label07 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label12 to label13 with label11;
    }

    public final android.service.voice.AlwaysOnHotwordDetector createAlwaysOnHotwordDetector(java.lang.String, java.util.Locale, android.service.voice.AlwaysOnHotwordDetector$Callback)
    {
        android.service.voice.VoiceInteractionService r0;
        java.util.Locale r1;
        android.service.voice.AlwaysOnHotwordDetector$Callback r2;
        java.lang.Object r3;
        android.service.voice.AlwaysOnHotwordDetector r4;
        com.android.internal.app.IVoiceInteractionManagerService $r5, $r7;
        java.lang.IllegalStateException $r6;
        android.hardware.soundtrigger.KeyphraseEnrollmentInfo $r8;
        java.lang.Throwable $r9;
        java.lang.String r10;

        r0 := @this: android.service.voice.VoiceInteractionService;

        r10 := @parameter0: java.lang.String;

        r1 := @parameter1: java.util.Locale;

        r2 := @parameter2: android.service.voice.AlwaysOnHotwordDetector$Callback;

        $r5 = r0.<android.service.voice.VoiceInteractionService: com.android.internal.app.IVoiceInteractionManagerService mSystemService>;

        if $r5 == null goto label6;

        r3 = r0.<android.service.voice.VoiceInteractionService: java.lang.Object mLock>;

        entermonitor r3;

     label1:
        specialinvoke r0.<android.service.voice.VoiceInteractionService: void safelyShutdownHotwordDetector()>();

        r4 = new android.service.voice.AlwaysOnHotwordDetector;

        $r8 = r0.<android.service.voice.VoiceInteractionService: android.hardware.soundtrigger.KeyphraseEnrollmentInfo mKeyphraseEnrollmentInfo>;

        $r7 = r0.<android.service.voice.VoiceInteractionService: com.android.internal.app.IVoiceInteractionManagerService mSystemService>;

        specialinvoke r4.<android.service.voice.AlwaysOnHotwordDetector: void <init>(java.lang.String,java.util.Locale,android.service.voice.AlwaysOnHotwordDetector$Callback,android.hardware.soundtrigger.KeyphraseEnrollmentInfo,com.android.internal.app.IVoiceInteractionManagerService)>(r10, r1, r2, $r8, $r7);

        r0.<android.service.voice.VoiceInteractionService: android.service.voice.AlwaysOnHotwordDetector mHotwordDetector> = r4;

        exitmonitor r3;

     label2:
        return r4;

     label3:
        $r9 := @caughtexception;

     label4:
        exitmonitor r3;

     label5:
        throw $r9;

     label6:
        $r6 = new java.lang.IllegalStateException;

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Not available until onReady() is called");

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public final android.media.voice.KeyphraseModelManager createKeyphraseModelManager()
    {
        android.service.voice.VoiceInteractionService r0;
        java.lang.Object r1;
        com.android.internal.app.IVoiceInteractionManagerService $r2, $r4;
        java.lang.IllegalStateException $r3;
        java.lang.Throwable $r5;
        android.media.voice.KeyphraseModelManager r6;

        r0 := @this: android.service.voice.VoiceInteractionService;

        $r2 = r0.<android.service.voice.VoiceInteractionService: com.android.internal.app.IVoiceInteractionManagerService mSystemService>;

        if $r2 == null goto label6;

        r1 = r0.<android.service.voice.VoiceInteractionService: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        r6 = new android.media.voice.KeyphraseModelManager;

        $r4 = r0.<android.service.voice.VoiceInteractionService: com.android.internal.app.IVoiceInteractionManagerService mSystemService>;

        specialinvoke r6.<android.media.voice.KeyphraseModelManager: void <init>(com.android.internal.app.IVoiceInteractionManagerService)>($r4);

        exitmonitor r1;

     label2:
        return r6;

     label3:
        $r5 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r5;

     label6:
        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Not available until onReady() is called");

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    protected void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        android.service.voice.VoiceInteractionService r0;
        java.lang.String[] r1;
        android.service.voice.AlwaysOnHotwordDetector $r2, $r3;
        java.lang.Throwable $r4;
        java.io.FileDescriptor r5;
        java.io.PrintWriter r6;
        java.lang.Object r7;

        r0 := @this: android.service.voice.VoiceInteractionService;

        r5 := @parameter0: java.io.FileDescriptor;

        r6 := @parameter1: java.io.PrintWriter;

        r1 := @parameter2: java.lang.String[];

        virtualinvoke r6.<java.io.PrintWriter: void println(java.lang.String)>("VOICE INTERACTION");

        r7 = r0.<android.service.voice.VoiceInteractionService: java.lang.Object mLock>;

        entermonitor r7;

     label1:
        virtualinvoke r6.<java.io.PrintWriter: void println(java.lang.String)>("  AlwaysOnHotwordDetector");

        $r2 = r0.<android.service.voice.VoiceInteractionService: android.service.voice.AlwaysOnHotwordDetector mHotwordDetector>;

        if $r2 != null goto label3;

        virtualinvoke r6.<java.io.PrintWriter: void println(java.lang.String)>("    NULL");

     label2:
        goto label4;

     label3:
        $r3 = r0.<android.service.voice.VoiceInteractionService: android.service.voice.AlwaysOnHotwordDetector mHotwordDetector>;

        virtualinvoke $r3.<android.service.voice.AlwaysOnHotwordDetector: void dump(java.lang.String,java.io.PrintWriter)>("    ", r6);

     label4:
        exitmonitor r7;

     label5:
        return;

     label6:
        $r4 := @caughtexception;

     label7:
        exitmonitor r7;

     label8:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public int getDisabledShowContext()
    {
        android.service.voice.VoiceInteractionService r0;
        int i0;
        com.android.internal.app.IVoiceInteractionManagerService $r2;
        android.os.RemoteException $r3;

        r0 := @this: android.service.voice.VoiceInteractionService;

     label1:
        $r2 = r0.<android.service.voice.VoiceInteractionService: com.android.internal.app.IVoiceInteractionManagerService mSystemService>;

        i0 = interfaceinvoke $r2.<com.android.internal.app.IVoiceInteractionManagerService: int getDisabledShowContext()>();

     label2:
        return i0;

     label3:
        $r3 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    protected final android.hardware.soundtrigger.KeyphraseEnrollmentInfo getKeyphraseEnrollmentInfo()
    {
        android.service.voice.VoiceInteractionService r0;
        android.hardware.soundtrigger.KeyphraseEnrollmentInfo $r1;

        r0 := @this: android.service.voice.VoiceInteractionService;

        $r1 = r0.<android.service.voice.VoiceInteractionService: android.hardware.soundtrigger.KeyphraseEnrollmentInfo mKeyphraseEnrollmentInfo>;

        return $r1;
    }

    public final boolean isKeyphraseAndLocaleSupportedForHotword(java.lang.String, java.util.Locale)
    {
        android.service.voice.VoiceInteractionService r0;
        java.lang.String r1;
        java.util.Locale r2;
        android.hardware.soundtrigger.KeyphraseEnrollmentInfo r3;
        android.hardware.soundtrigger.KeyphraseMetadata $r4;
        boolean z0;

        r0 := @this: android.service.voice.VoiceInteractionService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.Locale;

        r3 = r0.<android.service.voice.VoiceInteractionService: android.hardware.soundtrigger.KeyphraseEnrollmentInfo mKeyphraseEnrollmentInfo>;

        z0 = 0;

        if r3 != null goto label1;

        return 0;

     label1:
        $r4 = virtualinvoke r3.<android.hardware.soundtrigger.KeyphraseEnrollmentInfo: android.hardware.soundtrigger.KeyphraseMetadata getKeyphraseMetadata(java.lang.String,java.util.Locale)>(r1, r2);

        if $r4 == null goto label2;

        z0 = 1;

     label2:
        return z0;
    }

    public void lambda$new$0$VoiceInteractionService()
    {
        android.service.voice.VoiceInteractionService r0;
        java.lang.String $r1;
        android.os.Handler $r2;
        android.service.voice.'-$$Lambda$VoiceInteractionService$V4h-zKzsPhikYYwTTwjkcep67fc' $r3;
        android.os.Message $r4;
        java.util.function.Consumer r5;

        r0 := @this: android.service.voice.VoiceInteractionService;

        $r1 = <android.service.voice.VoiceInteractionService: java.lang.String TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r1, "system service binder died shutting down");

        $r2 = staticinvoke <android.os.Handler: android.os.Handler getMain()>();

        $r3 = <android.service.voice._$$Lambda$VoiceInteractionService$V4h_zKzsPhikYYwTTwjkcep67fc: android.service.voice.'-$$Lambda$VoiceInteractionService$V4h-zKzsPhikYYwTTwjkcep67fc' INSTANCE>;

        r5 = (java.util.function.Consumer) $r3;

        $r4 = staticinvoke <com.android.internal.util.function.pooled.PooledLambda: android.os.Message obtainMessage(java.util.function.Consumer,java.lang.Object)>(r5, r0);

        virtualinvoke $r2.<android.os.Handler: boolean executeOrSendMessage(android.os.Message)>($r4);

        return;
    }

    public android.os.IBinder onBind(android.content.Intent)
    {
        android.service.voice.VoiceInteractionService r0;
        android.content.Intent r1;
        java.lang.String $r2, $r3;
        boolean $z0;
        android.service.voice.IVoiceInteractionService $r4;
        android.os.IBinder $r5;

        r0 := @this: android.service.voice.VoiceInteractionService;

        r1 := @parameter0: android.content.Intent;

        $r2 = "android.service.voice.VoiceInteractionService";

        $r3 = virtualinvoke r1.<android.content.Intent: java.lang.String getAction()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label1;

        $r4 = r0.<android.service.voice.VoiceInteractionService: android.service.voice.IVoiceInteractionService mInterface>;

        $r5 = interfaceinvoke $r4.<android.service.voice.IVoiceInteractionService: android.os.IBinder asBinder()>();

        return $r5;

     label1:
        return null;
    }

    public java.util.Set onGetSupportedVoiceActions(java.util.Set)
    {
        android.service.voice.VoiceInteractionService r0;
        java.util.Set r1, $r2;

        r0 := @this: android.service.voice.VoiceInteractionService;

        r1 := @parameter0: java.util.Set;

        $r2 = staticinvoke <java.util.Collections: java.util.Set emptySet()>();

        return $r2;
    }

    public void onLaunchVoiceAssistFromKeyguard()
    {
        android.service.voice.VoiceInteractionService r0;

        r0 := @this: android.service.voice.VoiceInteractionService;

        return;
    }

    public void onReady()
    {
        android.service.voice.VoiceInteractionService r0;
        android.os.IBinder $r1, $r4;
        com.android.internal.app.IVoiceInteractionManagerService $r3, r10;
        android.os.IBinder$DeathRecipient $r5;
        android.hardware.soundtrigger.KeyphraseEnrollmentInfo $r6;
        android.content.pm.PackageManager $r7;
        android.os.RemoteException $r8;
        java.lang.String $r9;

        r0 := @this: android.service.voice.VoiceInteractionService;

        $r1 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("voiceinteraction");

        r10 = staticinvoke <com.android.internal.app.IVoiceInteractionManagerService$Stub: com.android.internal.app.IVoiceInteractionManagerService asInterface(android.os.IBinder)>($r1);

        r0.<android.service.voice.VoiceInteractionService: com.android.internal.app.IVoiceInteractionManagerService mSystemService> = r10;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r10);

     label1:
        $r3 = r0.<android.service.voice.VoiceInteractionService: com.android.internal.app.IVoiceInteractionManagerService mSystemService>;

        $r4 = interfaceinvoke $r3.<com.android.internal.app.IVoiceInteractionManagerService: android.os.IBinder asBinder()>();

        $r5 = r0.<android.service.voice.VoiceInteractionService: android.os.IBinder$DeathRecipient mDeathRecipient>;

        interfaceinvoke $r4.<android.os.IBinder: void linkToDeath(android.os.IBinder$DeathRecipient,int)>($r5, 0);

     label2:
        goto label4;

     label3:
        $r8 := @caughtexception;

        $r9 = <android.service.voice.VoiceInteractionService: java.lang.String TAG>;

        staticinvoke <android.util.Log: int wtf(java.lang.String,java.lang.String)>($r9, "unable to link to death with system service");

     label4:
        $r6 = new android.hardware.soundtrigger.KeyphraseEnrollmentInfo;

        $r7 = virtualinvoke r0.<android.service.voice.VoiceInteractionService: android.content.pm.PackageManager getPackageManager()>();

        specialinvoke $r6.<android.hardware.soundtrigger.KeyphraseEnrollmentInfo: void <init>(android.content.pm.PackageManager)>($r7);

        r0.<android.service.voice.VoiceInteractionService: android.hardware.soundtrigger.KeyphraseEnrollmentInfo mKeyphraseEnrollmentInfo> = $r6;

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void onShutdown()
    {
        android.service.voice.VoiceInteractionService r0;

        r0 := @this: android.service.voice.VoiceInteractionService;

        return;
    }

    public void setDisabledShowContext(int)
    {
        android.service.voice.VoiceInteractionService r0;
        int i0;
        com.android.internal.app.IVoiceInteractionManagerService $r2;
        android.os.RemoteException $r3;

        r0 := @this: android.service.voice.VoiceInteractionService;

        i0 := @parameter0: int;

     label1:
        $r2 = r0.<android.service.voice.VoiceInteractionService: com.android.internal.app.IVoiceInteractionManagerService mSystemService>;

        interfaceinvoke $r2.<com.android.internal.app.IVoiceInteractionManagerService: void setDisabledShowContext(int)>(i0);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public final void setUiHints(android.os.Bundle)
    {
        android.service.voice.VoiceInteractionService r0;
        java.lang.IllegalArgumentException $r1;
        com.android.internal.app.IVoiceInteractionManagerService $r2;
        android.os.RemoteException $r3;
        java.lang.RuntimeException $r4;
        android.os.Bundle r5;

        r0 := @this: android.service.voice.VoiceInteractionService;

        r5 := @parameter0: android.os.Bundle;

        if r5 == null goto label4;

     label1:
        $r2 = r0.<android.service.voice.VoiceInteractionService: com.android.internal.app.IVoiceInteractionManagerService mSystemService>;

        interfaceinvoke $r2.<com.android.internal.app.IVoiceInteractionManagerService: void setUiHints(android.os.Bundle)>(r5);

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        $r4 = virtualinvoke $r3.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r4;

     label4:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Hints must be non-null");

        throw $r1;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void showSession(android.os.Bundle, int)
    {
        android.service.voice.VoiceInteractionService r0;
        int i0;
        com.android.internal.app.IVoiceInteractionManagerService r1;
        java.lang.IllegalStateException $r2;
        android.os.RemoteException $r3;
        android.os.Bundle r4;

        r0 := @this: android.service.voice.VoiceInteractionService;

        r4 := @parameter0: android.os.Bundle;

        i0 := @parameter1: int;

        r1 = r0.<android.service.voice.VoiceInteractionService: com.android.internal.app.IVoiceInteractionManagerService mSystemService>;

        if r1 == null goto label5;

     label1:
        interfaceinvoke r1.<com.android.internal.app.IVoiceInteractionManagerService: void showSession(android.os.Bundle,int)>(r4, i0);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

     label4:
        return;

     label5:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Not available until onReady() is called");

        throw $r2;

        catch android.os.RemoteException from label1 to label2 with label3;
    }
}
