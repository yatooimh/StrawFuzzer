public class android.service.voice.VoiceInteractionSession extends java.lang.Object implements android.view.KeyEvent$Callback, android.content.ComponentCallbacks2
{
    static final boolean DEBUG;
    static final int MSG_CANCEL;
    static final int MSG_CLOSE_SYSTEM_DIALOGS;
    static final int MSG_DESTROY;
    static final int MSG_HANDLE_ASSIST;
    static final int MSG_HANDLE_SCREENSHOT;
    static final int MSG_HIDE;
    static final int MSG_ON_LOCKSCREEN_SHOWN;
    static final int MSG_SHOW;
    static final int MSG_START_ABORT_VOICE;
    static final int MSG_START_COMMAND;
    static final int MSG_START_COMPLETE_VOICE;
    static final int MSG_START_CONFIRMATION;
    static final int MSG_START_PICK_OPTION;
    static final int MSG_SUPPORTS_COMMANDS;
    static final int MSG_TASK_FINISHED;
    static final int MSG_TASK_STARTED;
    public static final int SHOW_SOURCE_ACTIVITY;
    public static final int SHOW_SOURCE_APPLICATION;
    public static final int SHOW_SOURCE_ASSIST_GESTURE;
    public static final int SHOW_SOURCE_AUTOMOTIVE_SYSTEM_UI;
    public static final int SHOW_SOURCE_NOTIFICATION;
    public static final int SHOW_SOURCE_PUSH_TO_TALK;
    public static final int SHOW_WITH_ASSIST;
    public static final int SHOW_WITH_SCREENSHOT;
    static final java.lang.String TAG;
    final android.util.ArrayMap mActiveRequests;
    final android.service.voice.VoiceInteractionSession$MyCallbacks mCallbacks;
    android.widget.FrameLayout mContentFrame;
    final android.content.Context mContext;
    final android.view.KeyEvent$DispatcherState mDispatcherState;
    final com.android.internal.os.HandlerCaller mHandlerCaller;
    boolean mInShowWindow;
    android.view.LayoutInflater mInflater;
    boolean mInitialized;
    final android.view.ViewTreeObserver$OnComputeInternalInsetsListener mInsetsComputer;
    final com.android.internal.app.IVoiceInteractor mInteractor;
    android.os.ICancellationSignal mKillCallback;
    final java.util.Map mRemoteCallbacks;
    android.view.View mRootView;
    final android.service.voice.IVoiceInteractionSession mSession;
    com.android.internal.app.IVoiceInteractionManagerService mSystemService;
    int mTheme;
    android.content.res.TypedArray mThemeAttrs;
    final android.service.voice.VoiceInteractionSession$Insets mTmpInsets;
    android.os.IBinder mToken;
    boolean mUiEnabled;
    final java.lang.ref.WeakReference mWeakRef;
    android.inputmethodservice.SoftInputWindow mWindow;
    boolean mWindowAdded;
    boolean mWindowVisible;
    boolean mWindowWasVisible;

    public void <init>(android.content.Context)
    {
        android.service.voice.VoiceInteractionSession r0;
        android.content.Context r1;
        android.os.Handler $r2;

        r0 := @this: android.service.voice.VoiceInteractionSession;

        r1 := @parameter0: android.content.Context;

        $r2 = new android.os.Handler;

        specialinvoke $r2.<android.os.Handler: void <init>()>();

        specialinvoke r0.<android.service.voice.VoiceInteractionSession: void <init>(android.content.Context,android.os.Handler)>(r1, $r2);

        return;
    }

    public void <init>(android.content.Context, android.os.Handler)
    {
        android.service.voice.VoiceInteractionSession r0;
        android.content.Context r1;
        android.os.Handler r2;
        android.view.KeyEvent$DispatcherState $r3;
        android.util.ArrayMap $r4, $r7;
        android.service.voice.VoiceInteractionSession$Insets $r5;
        java.lang.ref.WeakReference $r6;
        android.service.voice.VoiceInteractionSession$1 $r8;
        android.service.voice.VoiceInteractionSession$2 $r9;
        android.service.voice.VoiceInteractionSession$MyCallbacks $r10, $r14;
        android.service.voice.VoiceInteractionSession$3 $r11;
        com.android.internal.os.HandlerCaller $r12;
        android.os.Looper $r13;

        r0 := @this: android.service.voice.VoiceInteractionSession;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.os.Handler;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new android.view.KeyEvent$DispatcherState;

        specialinvoke $r3.<android.view.KeyEvent$DispatcherState: void <init>()>();

        r0.<android.service.voice.VoiceInteractionSession: android.view.KeyEvent$DispatcherState mDispatcherState> = $r3;

        r0.<android.service.voice.VoiceInteractionSession: int mTheme> = 0;

        r0.<android.service.voice.VoiceInteractionSession: boolean mUiEnabled> = 1;

        $r4 = new android.util.ArrayMap;

        specialinvoke $r4.<android.util.ArrayMap: void <init>()>();

        r0.<android.service.voice.VoiceInteractionSession: android.util.ArrayMap mActiveRequests> = $r4;

        $r5 = new android.service.voice.VoiceInteractionSession$Insets;

        specialinvoke $r5.<android.service.voice.VoiceInteractionSession$Insets: void <init>()>();

        r0.<android.service.voice.VoiceInteractionSession: android.service.voice.VoiceInteractionSession$Insets mTmpInsets> = $r5;

        $r6 = new java.lang.ref.WeakReference;

        specialinvoke $r6.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>(r0);

        r0.<android.service.voice.VoiceInteractionSession: java.lang.ref.WeakReference mWeakRef> = $r6;

        $r7 = new android.util.ArrayMap;

        specialinvoke $r7.<android.util.ArrayMap: void <init>()>();

        r0.<android.service.voice.VoiceInteractionSession: java.util.Map mRemoteCallbacks> = $r7;

        $r8 = new android.service.voice.VoiceInteractionSession$1;

        specialinvoke $r8.<android.service.voice.VoiceInteractionSession$1: void <init>(android.service.voice.VoiceInteractionSession)>(r0);

        r0.<android.service.voice.VoiceInteractionSession: com.android.internal.app.IVoiceInteractor mInteractor> = $r8;

        $r9 = new android.service.voice.VoiceInteractionSession$2;

        specialinvoke $r9.<android.service.voice.VoiceInteractionSession$2: void <init>(android.service.voice.VoiceInteractionSession)>(r0);

        r0.<android.service.voice.VoiceInteractionSession: android.service.voice.IVoiceInteractionSession mSession> = $r9;

        $r10 = new android.service.voice.VoiceInteractionSession$MyCallbacks;

        specialinvoke $r10.<android.service.voice.VoiceInteractionSession$MyCallbacks: void <init>(android.service.voice.VoiceInteractionSession)>(r0);

        r0.<android.service.voice.VoiceInteractionSession: android.service.voice.VoiceInteractionSession$MyCallbacks mCallbacks> = $r10;

        $r11 = new android.service.voice.VoiceInteractionSession$3;

        specialinvoke $r11.<android.service.voice.VoiceInteractionSession$3: void <init>(android.service.voice.VoiceInteractionSession)>(r0);

        r0.<android.service.voice.VoiceInteractionSession: android.view.ViewTreeObserver$OnComputeInternalInsetsListener mInsetsComputer> = $r11;

        r0.<android.service.voice.VoiceInteractionSession: android.content.Context mContext> = r1;

        $r12 = new com.android.internal.os.HandlerCaller;

        $r13 = virtualinvoke r2.<android.os.Handler: android.os.Looper getLooper()>();

        $r14 = r0.<android.service.voice.VoiceInteractionSession: android.service.voice.VoiceInteractionSession$MyCallbacks mCallbacks>;

        specialinvoke $r12.<com.android.internal.os.HandlerCaller: void <init>(android.content.Context,android.os.Looper,com.android.internal.os.HandlerCaller$Callback,boolean)>(r1, $r13, $r14, 1);

        r0.<android.service.voice.VoiceInteractionSession: com.android.internal.os.HandlerCaller mHandlerCaller> = $r12;

        return;
    }

    static java.util.function.Consumer access$000(android.service.voice.VoiceInteractionSession, android.service.voice.VoiceInteractionSession$SafeResultListener)
    {
        android.service.voice.VoiceInteractionSession r0;
        android.service.voice.VoiceInteractionSession$SafeResultListener r1;
        java.util.function.Consumer $r2;

        r0 := @parameter0: android.service.voice.VoiceInteractionSession;

        r1 := @parameter1: android.service.voice.VoiceInteractionSession$SafeResultListener;

        $r2 = specialinvoke r0.<android.service.voice.VoiceInteractionSession: java.util.function.Consumer removeSafeResultListener(android.service.voice.VoiceInteractionSession$SafeResultListener)>(r1);

        return $r2;
    }

    private android.service.voice.VoiceInteractionSession$SafeResultListener createSafeResultListener(java.util.function.Consumer)
    {
        android.service.voice.VoiceInteractionSession r0;
        android.service.voice.VoiceInteractionSession$SafeResultListener r1;
        java.util.Map $r2;
        java.lang.Throwable $r4;
        java.util.function.Consumer r5;

        r0 := @this: android.service.voice.VoiceInteractionSession;

        r5 := @parameter0: java.util.function.Consumer;

        entermonitor r0;

     label1:
        r1 = new android.service.voice.VoiceInteractionSession$SafeResultListener;

        specialinvoke r1.<android.service.voice.VoiceInteractionSession$SafeResultListener: void <init>(java.util.function.Consumer,android.service.voice.VoiceInteractionSession)>(r5, r0);

        $r2 = r0.<android.service.voice.VoiceInteractionSession: java.util.Map mRemoteCallbacks>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r5);

        exitmonitor r0;

     label2:
        return r1;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r0;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    private void doOnCreate()
    {
        android.service.voice.VoiceInteractionSession r0;
        int i0;

        r0 := @this: android.service.voice.VoiceInteractionSession;

        i0 = r0.<android.service.voice.VoiceInteractionSession: int mTheme>;

        if i0 == 0 goto label1;

        goto label2;

     label1:
        i0 = 16974854;

     label2:
        r0.<android.service.voice.VoiceInteractionSession: int mTheme> = i0;

        return;
    }

    static void lambda$performDirectAction$3(android.os.CancellationSignal, android.os.Bundle)
    {
        android.os.CancellationSignal r0;
        android.os.ICancellationSignal $r1;
        android.os.Bundle r2;
        android.os.IBinder r3;

        r0 := @parameter0: android.os.CancellationSignal;

        r2 := @parameter1: android.os.Bundle;

        if r2 == null goto label1;

        r3 = virtualinvoke r2.<android.os.Bundle: android.os.IBinder getBinder(java.lang.String)>("key_cancellation_signal");

        if r3 == null goto label1;

        $r1 = staticinvoke <android.os.ICancellationSignal$Stub: android.os.ICancellationSignal asInterface(android.os.IBinder)>(r3);

        virtualinvoke r0.<android.os.CancellationSignal: void setRemote(android.os.ICancellationSignal)>($r1);

     label1:
        return;
    }

    static void lambda$performDirectAction$4(java.util.function.Consumer, android.os.Bundle)
    {
        java.util.function.Consumer r0;
        android.os.Bundle r1;

        r0 := @parameter0: java.util.function.Consumer;

        r1 := @parameter1: android.os.Bundle;

        interfaceinvoke r0.<java.util.function.Consumer: void accept(java.lang.Object)>(r1);

        return;
    }

    static void lambda$performDirectAction$5(java.util.function.Consumer)
    {
        java.util.function.Consumer r0;
        android.os.Bundle $r1;

        r0 := @parameter0: java.util.function.Consumer;

        $r1 = <android.os.Bundle: android.os.Bundle EMPTY>;

        interfaceinvoke r0.<java.util.function.Consumer: void accept(java.lang.Object)>($r1);

        return;
    }

    static void lambda$performDirectAction$6(java.util.concurrent.Executor, java.util.function.Consumer, android.os.Bundle)
    {
        java.util.concurrent.Executor r0;
        java.util.function.Consumer r1;
        android.os.Bundle r2;
        android.service.voice._$$Lambda$VoiceInteractionSession$bujvs7MJfXO9xSx9M8NS3hINZ_k $r3;
        android.service.voice._$$Lambda$VoiceInteractionSession$sg0qPgWHpOBD2lLJ7BGNEVSsBdo $r4;

        r0 := @parameter0: java.util.concurrent.Executor;

        r1 := @parameter1: java.util.function.Consumer;

        r2 := @parameter2: android.os.Bundle;

        if r2 == null goto label1;

        $r4 = new android.service.voice._$$Lambda$VoiceInteractionSession$sg0qPgWHpOBD2lLJ7BGNEVSsBdo;

        specialinvoke $r4.<android.service.voice._$$Lambda$VoiceInteractionSession$sg0qPgWHpOBD2lLJ7BGNEVSsBdo: void <init>(java.util.function.Consumer,android.os.Bundle)>(r1, r2);

        interfaceinvoke r0.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r4);

        goto label2;

     label1:
        $r3 = new android.service.voice._$$Lambda$VoiceInteractionSession$bujvs7MJfXO9xSx9M8NS3hINZ_k;

        specialinvoke $r3.<android.service.voice._$$Lambda$VoiceInteractionSession$bujvs7MJfXO9xSx9M8NS3hINZ_k: void <init>(java.util.function.Consumer)>(r1);

        interfaceinvoke r0.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r3);

     label2:
        return;
    }

    static void lambda$requestDirectActions$0(android.os.CancellationSignal, android.os.Bundle)
    {
        android.os.CancellationSignal r0;
        android.os.ICancellationSignal $r1;
        android.os.Bundle r2;
        android.os.IBinder r3;

        r0 := @parameter0: android.os.CancellationSignal;

        r2 := @parameter1: android.os.Bundle;

        if r2 == null goto label1;

        r3 = virtualinvoke r2.<android.os.Bundle: android.os.IBinder getBinder(java.lang.String)>("key_cancellation_signal");

        if r3 == null goto label1;

        $r1 = staticinvoke <android.os.ICancellationSignal$Stub: android.os.ICancellationSignal asInterface(android.os.IBinder)>(r3);

        virtualinvoke r0.<android.os.CancellationSignal: void setRemote(android.os.ICancellationSignal)>($r1);

     label1:
        return;
    }

    static void lambda$requestDirectActions$1(java.util.function.Consumer, java.util.List)
    {
        java.util.function.Consumer r0;
        java.util.List r1;

        r0 := @parameter0: java.util.function.Consumer;

        r1 := @parameter1: java.util.List;

        interfaceinvoke r0.<java.util.function.Consumer: void accept(java.lang.Object)>(r1);

        return;
    }

    static void lambda$requestDirectActions$2(java.util.concurrent.Executor, java.util.function.Consumer, android.os.Bundle)
    {
        java.util.concurrent.Executor r0;
        java.util.function.Consumer r1;
        android.os.Parcelable $r2;
        android.os.Bundle r3;
        java.util.List r4;
        android.content.pm.ParceledListSlice r5;
        android.service.voice._$$Lambda$VoiceInteractionSession$fvrSEzYI3LvOp_mfME5kNVi91bw $r6;

        r0 := @parameter0: java.util.concurrent.Executor;

        r1 := @parameter1: java.util.function.Consumer;

        r3 := @parameter2: android.os.Bundle;

        if r3 != null goto label1;

        r4 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        goto label5;

     label1:
        $r2 = virtualinvoke r3.<android.os.Bundle: android.os.Parcelable getParcelable(java.lang.String)>("actions_list");

        r5 = (android.content.pm.ParceledListSlice) $r2;

        if r5 == null goto label4;

        r4 = virtualinvoke r5.<android.content.pm.ParceledListSlice: java.util.List getList()>();

        if r4 == null goto label2;

        goto label3;

     label2:
        r4 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

     label3:
        goto label5;

     label4:
        r4 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

     label5:
        $r6 = new android.service.voice._$$Lambda$VoiceInteractionSession$fvrSEzYI3LvOp_mfME5kNVi91bw;

        specialinvoke $r6.<android.service.voice._$$Lambda$VoiceInteractionSession$fvrSEzYI3LvOp_mfME5kNVi91bw: void <init>(java.util.function.Consumer,java.util.List)>(r1, r4);

        interfaceinvoke r0.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r6);

        return;
    }

    private java.util.function.Consumer removeSafeResultListener(android.service.voice.VoiceInteractionSession$SafeResultListener)
    {
        android.service.voice.VoiceInteractionSession r0;
        java.util.Map $r1;
        java.lang.Object $r2;
        java.lang.Throwable $r3;
        android.service.voice.VoiceInteractionSession$SafeResultListener r4;
        java.util.function.Consumer r5;

        r0 := @this: android.service.voice.VoiceInteractionSession;

        r4 := @parameter0: android.service.voice.VoiceInteractionSession$SafeResultListener;

        entermonitor r0;

     label1:
        $r1 = r0.<android.service.voice.VoiceInteractionSession: java.util.Map mRemoteCallbacks>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r4);

        r5 = (java.util.function.Consumer) $r2;

        exitmonitor r0;

     label2:
        return r5;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r0;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    void addRequest(android.service.voice.VoiceInteractionSession$Request)
    {
        android.service.voice.VoiceInteractionSession r0;
        com.android.internal.app.IVoiceInteractorRequest $r1;
        android.util.ArrayMap $r2;
        android.os.IBinder $r3;
        java.lang.Throwable $r5;
        android.service.voice.VoiceInteractionSession$Request r6;

        r0 := @this: android.service.voice.VoiceInteractionSession;

        r6 := @parameter0: android.service.voice.VoiceInteractionSession$Request;

        entermonitor r0;

     label1:
        $r2 = r0.<android.service.voice.VoiceInteractionSession: android.util.ArrayMap mActiveRequests>;

        $r1 = r6.<android.service.voice.VoiceInteractionSession$Request: com.android.internal.app.IVoiceInteractorRequest mInterface>;

        $r3 = interfaceinvoke $r1.<com.android.internal.app.IVoiceInteractorRequest: android.os.IBinder asBinder()>();

        virtualinvoke $r2.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, r6);

        exitmonitor r0;

     label2:
        return;

     label3:
        $r5 := @caughtexception;

     label4:
        exitmonitor r0;

     label5:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void closeSystemDialogs()
    {
        android.service.voice.VoiceInteractionSession r0;
        java.lang.IllegalStateException $r1;
        com.android.internal.app.IVoiceInteractionManagerService $r2;
        android.os.RemoteException $r3;
        android.os.IBinder r4;

        r0 := @this: android.service.voice.VoiceInteractionSession;

        r4 = r0.<android.service.voice.VoiceInteractionSession: android.os.IBinder mToken>;

        if r4 == null goto label5;

     label1:
        $r2 = r0.<android.service.voice.VoiceInteractionSession: com.android.internal.app.IVoiceInteractionManagerService mSystemService>;

        interfaceinvoke $r2.<com.android.internal.app.IVoiceInteractionManagerService: void closeSystemDialogs(android.os.IBinder)>(r4);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

     label4:
        return;

     label5:
        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Can\'t call before onCreate()");

        throw $r1;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    void doCreate(com.android.internal.app.IVoiceInteractionManagerService, android.os.IBinder)
    {
        android.service.voice.VoiceInteractionSession r0;
        com.android.internal.app.IVoiceInteractionManagerService r1;
        android.os.IBinder r2;

        r0 := @this: android.service.voice.VoiceInteractionSession;

        r1 := @parameter0: com.android.internal.app.IVoiceInteractionManagerService;

        r2 := @parameter1: android.os.IBinder;

        r0.<android.service.voice.VoiceInteractionSession: com.android.internal.app.IVoiceInteractionManagerService mSystemService> = r1;

        r0.<android.service.voice.VoiceInteractionSession: android.os.IBinder mToken> = r2;

        virtualinvoke r0.<android.service.voice.VoiceInteractionSession: void onCreate()>();

        return;
    }

    void doDestroy()
    {
        android.service.voice.VoiceInteractionSession r0;
        android.view.View $r1;
        android.view.ViewTreeObserver $r2;
        android.view.ViewTreeObserver$OnComputeInternalInsetsListener $r3;
        boolean $z0, $z1;
        android.inputmethodservice.SoftInputWindow $r4;
        android.os.RemoteException $r5;
        android.os.ICancellationSignal r6;

        r0 := @this: android.service.voice.VoiceInteractionSession;

        virtualinvoke r0.<android.service.voice.VoiceInteractionSession: void onDestroy()>();

        r6 = r0.<android.service.voice.VoiceInteractionSession: android.os.ICancellationSignal mKillCallback>;

        if r6 == null goto label5;

     label1:
        interfaceinvoke r6.<android.os.ICancellationSignal: void cancel()>();

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

     label4:
        r0.<android.service.voice.VoiceInteractionSession: android.os.ICancellationSignal mKillCallback> = null;

     label5:
        $z1 = r0.<android.service.voice.VoiceInteractionSession: boolean mInitialized>;

        if $z1 == 0 goto label7;

        $r1 = r0.<android.service.voice.VoiceInteractionSession: android.view.View mRootView>;

        $r2 = virtualinvoke $r1.<android.view.View: android.view.ViewTreeObserver getViewTreeObserver()>();

        $r3 = r0.<android.service.voice.VoiceInteractionSession: android.view.ViewTreeObserver$OnComputeInternalInsetsListener mInsetsComputer>;

        virtualinvoke $r2.<android.view.ViewTreeObserver: void removeOnComputeInternalInsetsListener(android.view.ViewTreeObserver$OnComputeInternalInsetsListener)>($r3);

        $z0 = r0.<android.service.voice.VoiceInteractionSession: boolean mWindowAdded>;

        if $z0 == 0 goto label6;

        $r4 = r0.<android.service.voice.VoiceInteractionSession: android.inputmethodservice.SoftInputWindow mWindow>;

        virtualinvoke $r4.<android.inputmethodservice.SoftInputWindow: void dismiss()>();

        r0.<android.service.voice.VoiceInteractionSession: boolean mWindowAdded> = 0;

     label6:
        r0.<android.service.voice.VoiceInteractionSession: boolean mInitialized> = 0;

     label7:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    void doHide()
    {
        android.service.voice.VoiceInteractionSession r0;
        boolean $z0;

        r0 := @this: android.service.voice.VoiceInteractionSession;

        $z0 = r0.<android.service.voice.VoiceInteractionSession: boolean mWindowVisible>;

        if $z0 == 0 goto label1;

        virtualinvoke r0.<android.service.voice.VoiceInteractionSession: void ensureWindowHidden()>();

        r0.<android.service.voice.VoiceInteractionSession: boolean mWindowVisible> = 0;

        virtualinvoke r0.<android.service.voice.VoiceInteractionSession: void onHide()>();

     label1:
        return;
    }

    void doOnHandleAssist(int, android.os.IBinder, android.os.Bundle, android.app.assist.AssistStructure, java.lang.Throwable, android.app.assist.AssistContent, int, int)
    {
        android.service.voice.VoiceInteractionSession r0;
        int i0, i1, i2;
        android.os.IBinder r1;
        android.os.Bundle r2;
        android.app.assist.AssistStructure r3;
        java.lang.Throwable r4;
        android.app.assist.AssistContent r5;
        android.service.voice.VoiceInteractionSession$AssistState $r6;
        android.service.voice.VoiceInteractionSession$ActivityId $r7;

        r0 := @this: android.service.voice.VoiceInteractionSession;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.IBinder;

        r2 := @parameter2: android.os.Bundle;

        r3 := @parameter3: android.app.assist.AssistStructure;

        r4 := @parameter4: java.lang.Throwable;

        r5 := @parameter5: android.app.assist.AssistContent;

        i1 := @parameter6: int;

        i2 := @parameter7: int;

        if r4 == null goto label1;

        virtualinvoke r0.<android.service.voice.VoiceInteractionSession: void onAssistStructureFailure(java.lang.Throwable)>(r4);

     label1:
        $r6 = new android.service.voice.VoiceInteractionSession$AssistState;

        $r7 = new android.service.voice.VoiceInteractionSession$ActivityId;

        specialinvoke $r7.<android.service.voice.VoiceInteractionSession$ActivityId: void <init>(int,android.os.IBinder)>(i0, r1);

        specialinvoke $r6.<android.service.voice.VoiceInteractionSession$AssistState: void <init>(android.service.voice.VoiceInteractionSession$ActivityId,android.os.Bundle,android.app.assist.AssistStructure,android.app.assist.AssistContent,int,int)>($r7, r2, r3, r5, i1, i2);

        virtualinvoke r0.<android.service.voice.VoiceInteractionSession: void onHandleAssist(android.service.voice.VoiceInteractionSession$AssistState)>($r6);

        return;
    }

    void doShow(android.os.Bundle, int, com.android.internal.app.IVoiceInteractionSessionShowCallback)
    {
        android.service.voice.VoiceInteractionSession r0;
        int i0;
        com.android.internal.app.IVoiceInteractionSessionShowCallback r1;
        android.view.ViewTreeObserver r2;
        boolean $z0, $z1, $z2, $z3, $z4;
        android.view.View $r3, $r4;
        android.inputmethodservice.SoftInputWindow $r5;
        java.lang.Throwable $r6;
        android.os.RemoteException $r7;
        android.os.Bundle r8;
        android.service.voice.VoiceInteractionSession$4 r9;

        r0 := @this: android.service.voice.VoiceInteractionSession;

        r8 := @parameter0: android.os.Bundle;

        i0 := @parameter1: int;

        r1 := @parameter2: com.android.internal.app.IVoiceInteractionSessionShowCallback;

        $z0 = r0.<android.service.voice.VoiceInteractionSession: boolean mInShowWindow>;

        if $z0 == 0 goto label01;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("VoiceInteractionSession", "Re-entrance in to showWindow");

        return;

     label01:
        r0.<android.service.voice.VoiceInteractionSession: boolean mInShowWindow> = 1;

        virtualinvoke r0.<android.service.voice.VoiceInteractionSession: void onPrepareShow(android.os.Bundle,int)>(r8, i0);

        $z1 = r0.<android.service.voice.VoiceInteractionSession: boolean mWindowVisible>;

        if $z1 != 0 goto label02;

        virtualinvoke r0.<android.service.voice.VoiceInteractionSession: void ensureWindowAdded()>();

     label02:
        virtualinvoke r0.<android.service.voice.VoiceInteractionSession: void onShow(android.os.Bundle,int)>(r8, i0);

        $z2 = r0.<android.service.voice.VoiceInteractionSession: boolean mWindowVisible>;

        if $z2 != 0 goto label03;

        r0.<android.service.voice.VoiceInteractionSession: boolean mWindowVisible> = 1;

        $z4 = r0.<android.service.voice.VoiceInteractionSession: boolean mUiEnabled>;

        if $z4 == 0 goto label03;

        $r5 = r0.<android.service.voice.VoiceInteractionSession: android.inputmethodservice.SoftInputWindow mWindow>;

        virtualinvoke $r5.<android.inputmethodservice.SoftInputWindow: void show()>();

     label03:
        if r1 == null goto label10;

     label04:
        $z3 = r0.<android.service.voice.VoiceInteractionSession: boolean mUiEnabled>;

        if $z3 == 0 goto label06;

        $r3 = r0.<android.service.voice.VoiceInteractionSession: android.view.View mRootView>;

        virtualinvoke $r3.<android.view.View: void invalidate()>();

        $r4 = r0.<android.service.voice.VoiceInteractionSession: android.view.View mRootView>;

        r2 = virtualinvoke $r4.<android.view.View: android.view.ViewTreeObserver getViewTreeObserver()>();

        r9 = new android.service.voice.VoiceInteractionSession$4;

        specialinvoke r9.<android.service.voice.VoiceInteractionSession$4: void <init>(android.service.voice.VoiceInteractionSession,com.android.internal.app.IVoiceInteractionSessionShowCallback)>(r0, r1);

        virtualinvoke r2.<android.view.ViewTreeObserver: void addOnPreDrawListener(android.view.ViewTreeObserver$OnPreDrawListener)>(r9);

     label05:
        goto label10;

     label06:
        interfaceinvoke r1.<com.android.internal.app.IVoiceInteractionSessionShowCallback: void onShown()>();

     label07:
        goto label10;

     label08:
        $r7 := @caughtexception;

     label09:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("VoiceInteractionSession", "Error calling onShown", $r7);

     label10:
        r0.<android.service.voice.VoiceInteractionSession: boolean mWindowWasVisible> = 1;

        r0.<android.service.voice.VoiceInteractionSession: boolean mInShowWindow> = 0;

        return;

     label11:
        $r6 := @caughtexception;

        r0.<android.service.voice.VoiceInteractionSession: boolean mWindowWasVisible> = 1;

        r0.<android.service.voice.VoiceInteractionSession: boolean mInShowWindow> = 0;

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label02 to label03 with label11;
        catch java.lang.Throwable from label04 to label05 with label11;
        catch android.os.RemoteException from label06 to label07 with label08;
        catch java.lang.Throwable from label06 to label07 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
    }

    public void dump(java.lang.String, java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        android.service.voice.VoiceInteractionSession r0;
        java.lang.String r1, $r7, r16;
        java.io.FileDescriptor r2;
        java.io.PrintWriter r3;
        java.lang.String[] r4;
        android.service.voice.VoiceInteractionSession$Request r5;
        android.os.IBinder $r6;
        int $i0, $i1, $i2, i3;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        android.util.ArrayMap $r8, $r12, $r13;
        java.lang.StringBuilder $r9;
        java.lang.Object $r14;

        r0 := @this: android.service.voice.VoiceInteractionSession;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.io.FileDescriptor;

        r3 := @parameter2: java.io.PrintWriter;

        r4 := @parameter3: java.lang.String[];

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>("mToken=");

        $r6 = r0.<android.service.voice.VoiceInteractionSession: android.os.IBinder mToken>;

        virtualinvoke r3.<java.io.PrintWriter: void println(java.lang.Object)>($r6);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>("mTheme=#");

        $i0 = r0.<android.service.voice.VoiceInteractionSession: int mTheme>;

        $r7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        virtualinvoke r3.<java.io.PrintWriter: void println(java.lang.String)>($r7);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>("mUiEnabled=");

        $z0 = r0.<android.service.voice.VoiceInteractionSession: boolean mUiEnabled>;

        virtualinvoke r3.<java.io.PrintWriter: void println(boolean)>($z0);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>(" mInitialized=");

        $z1 = r0.<android.service.voice.VoiceInteractionSession: boolean mInitialized>;

        virtualinvoke r3.<java.io.PrintWriter: void println(boolean)>($z1);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>("mWindowAdded=");

        $z2 = r0.<android.service.voice.VoiceInteractionSession: boolean mWindowAdded>;

        virtualinvoke r3.<java.io.PrintWriter: void print(boolean)>($z2);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>(" mWindowVisible=");

        $z3 = r0.<android.service.voice.VoiceInteractionSession: boolean mWindowVisible>;

        virtualinvoke r3.<java.io.PrintWriter: void println(boolean)>($z3);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>("mWindowWasVisible=");

        $z4 = r0.<android.service.voice.VoiceInteractionSession: boolean mWindowWasVisible>;

        virtualinvoke r3.<java.io.PrintWriter: void print(boolean)>($z4);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>(" mInShowWindow=");

        $z5 = r0.<android.service.voice.VoiceInteractionSession: boolean mInShowWindow>;

        virtualinvoke r3.<java.io.PrintWriter: void println(boolean)>($z5);

        $r8 = r0.<android.service.voice.VoiceInteractionSession: android.util.ArrayMap mActiveRequests>;

        $i1 = virtualinvoke $r8.<android.util.ArrayMap: int size()>();

        if $i1 <= 0 goto label2;

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r3.<java.io.PrintWriter: void println(java.lang.String)>("Active requests:");

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    ");

        r16 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        i3 = 0;

     label1:
        $r12 = r0.<android.service.voice.VoiceInteractionSession: android.util.ArrayMap mActiveRequests>;

        $i2 = virtualinvoke $r12.<android.util.ArrayMap: int size()>();

        if i3 >= $i2 goto label2;

        $r13 = r0.<android.service.voice.VoiceInteractionSession: android.util.ArrayMap mActiveRequests>;

        $r14 = virtualinvoke $r13.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i3);

        r5 = (android.service.voice.VoiceInteractionSession$Request) $r14;

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>("  #");

        virtualinvoke r3.<java.io.PrintWriter: void print(int)>(i3);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>(": ");

        virtualinvoke r3.<java.io.PrintWriter: void println(java.lang.Object)>(r5);

        virtualinvoke r5.<android.service.voice.VoiceInteractionSession$Request: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>(r16, r2, r3, r4);

        i3 = i3 + 1;

        goto label1;

     label2:
        return;
    }

    void ensureWindowAdded()
    {
        android.service.voice.VoiceInteractionSession r0;
        android.view.View r1;
        boolean $z0, $z1;

        r0 := @this: android.service.voice.VoiceInteractionSession;

        $z0 = r0.<android.service.voice.VoiceInteractionSession: boolean mUiEnabled>;

        if $z0 == 0 goto label1;

        $z1 = r0.<android.service.voice.VoiceInteractionSession: boolean mWindowAdded>;

        if $z1 != 0 goto label1;

        r0.<android.service.voice.VoiceInteractionSession: boolean mWindowAdded> = 1;

        virtualinvoke r0.<android.service.voice.VoiceInteractionSession: void ensureWindowCreated()>();

        r1 = virtualinvoke r0.<android.service.voice.VoiceInteractionSession: android.view.View onCreateContentView()>();

        if r1 == null goto label1;

        virtualinvoke r0.<android.service.voice.VoiceInteractionSession: void setContentView(android.view.View)>(r1);

     label1:
        return;
    }

    void ensureWindowCreated()
    {
        android.service.voice.VoiceInteractionSession r0;
        boolean $z0, $z1;
        java.lang.IllegalStateException $r1;
        android.content.Context $r2, $r8, $r14;
        java.lang.Object $r3;
        android.view.LayoutInflater $r4, $r16;
        android.inputmethodservice.SoftInputWindow $r5, $r11, $r18, $r25, $r28;
        android.view.KeyEvent$DispatcherState $r6;
        android.service.voice.VoiceInteractionSession$MyCallbacks $r7;
        int $i0;
        android.view.Window $r9, $r12, $r26;
        android.view.WindowManager$LayoutParams $r10;
        int[] $r13;
        android.content.res.TypedArray $r15;
        android.view.View $r17, $r19, $r22, $r23, r30;
        android.view.ViewTreeObserver $r20;
        android.view.ViewTreeObserver$OnComputeInternalInsetsListener $r21;
        android.widget.FrameLayout $r24;
        android.os.IBinder $r27;

        r0 := @this: android.service.voice.VoiceInteractionSession;

        $z0 = r0.<android.service.voice.VoiceInteractionSession: boolean mInitialized>;

        if $z0 == 0 goto label1;

        return;

     label1:
        $z1 = r0.<android.service.voice.VoiceInteractionSession: boolean mUiEnabled>;

        if $z1 == 0 goto label2;

        r0.<android.service.voice.VoiceInteractionSession: boolean mInitialized> = 1;

        $r2 = r0.<android.service.voice.VoiceInteractionSession: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("layout_inflater");

        $r4 = (android.view.LayoutInflater) $r3;

        r0.<android.service.voice.VoiceInteractionSession: android.view.LayoutInflater mInflater> = $r4;

        $r5 = new android.inputmethodservice.SoftInputWindow;

        $r8 = r0.<android.service.voice.VoiceInteractionSession: android.content.Context mContext>;

        $i0 = r0.<android.service.voice.VoiceInteractionSession: int mTheme>;

        $r7 = r0.<android.service.voice.VoiceInteractionSession: android.service.voice.VoiceInteractionSession$MyCallbacks mCallbacks>;

        $r6 = r0.<android.service.voice.VoiceInteractionSession: android.view.KeyEvent$DispatcherState mDispatcherState>;

        specialinvoke $r5.<android.inputmethodservice.SoftInputWindow: void <init>(android.content.Context,java.lang.String,int,android.inputmethodservice.SoftInputWindow$Callback,android.view.KeyEvent$Callback,android.view.KeyEvent$DispatcherState,int,int,boolean)>($r8, "VoiceInteractionSession", $i0, $r7, r0, $r6, 2031, 80, 1);

        r0.<android.service.voice.VoiceInteractionSession: android.inputmethodservice.SoftInputWindow mWindow> = $r5;

        $r9 = virtualinvoke $r5.<android.inputmethodservice.SoftInputWindow: android.view.Window getWindow()>();

        $r10 = virtualinvoke $r9.<android.view.Window: android.view.WindowManager$LayoutParams getAttributes()>();

        virtualinvoke $r10.<android.view.WindowManager$LayoutParams: void setFitInsetsTypes(int)>(0);

        $r11 = r0.<android.service.voice.VoiceInteractionSession: android.inputmethodservice.SoftInputWindow mWindow>;

        $r12 = virtualinvoke $r11.<android.inputmethodservice.SoftInputWindow: android.view.Window getWindow()>();

        virtualinvoke $r12.<android.view.Window: void addFlags(int)>(16843008);

        $r14 = r0.<android.service.voice.VoiceInteractionSession: android.content.Context mContext>;

        $r13 = <android.R$styleable: int[] VoiceInteractionSession>;

        $r15 = virtualinvoke $r14.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(int[])>($r13);

        r0.<android.service.voice.VoiceInteractionSession: android.content.res.TypedArray mThemeAttrs> = $r15;

        $r16 = r0.<android.service.voice.VoiceInteractionSession: android.view.LayoutInflater mInflater>;

        r30 = virtualinvoke $r16.<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup)>(17367348, null);

        r0.<android.service.voice.VoiceInteractionSession: android.view.View mRootView> = r30;

        virtualinvoke r30.<android.view.View: void setSystemUiVisibility(int)>(1792);

        $r18 = r0.<android.service.voice.VoiceInteractionSession: android.inputmethodservice.SoftInputWindow mWindow>;

        $r17 = r0.<android.service.voice.VoiceInteractionSession: android.view.View mRootView>;

        virtualinvoke $r18.<android.inputmethodservice.SoftInputWindow: void setContentView(android.view.View)>($r17);

        $r19 = r0.<android.service.voice.VoiceInteractionSession: android.view.View mRootView>;

        $r20 = virtualinvoke $r19.<android.view.View: android.view.ViewTreeObserver getViewTreeObserver()>();

        $r21 = r0.<android.service.voice.VoiceInteractionSession: android.view.ViewTreeObserver$OnComputeInternalInsetsListener mInsetsComputer>;

        virtualinvoke $r20.<android.view.ViewTreeObserver: void addOnComputeInternalInsetsListener(android.view.ViewTreeObserver$OnComputeInternalInsetsListener)>($r21);

        $r22 = r0.<android.service.voice.VoiceInteractionSession: android.view.View mRootView>;

        $r23 = virtualinvoke $r22.<android.view.View: android.view.View findViewById(int)>(16908290);

        $r24 = (android.widget.FrameLayout) $r23;

        r0.<android.service.voice.VoiceInteractionSession: android.widget.FrameLayout mContentFrame> = $r24;

        $r25 = r0.<android.service.voice.VoiceInteractionSession: android.inputmethodservice.SoftInputWindow mWindow>;

        $r26 = virtualinvoke $r25.<android.inputmethodservice.SoftInputWindow: android.view.Window getWindow()>();

        virtualinvoke $r26.<android.view.Window: void setLayout(int,int)>(-1, -1);

        $r28 = r0.<android.service.voice.VoiceInteractionSession: android.inputmethodservice.SoftInputWindow mWindow>;

        $r27 = r0.<android.service.voice.VoiceInteractionSession: android.os.IBinder mToken>;

        virtualinvoke $r28.<android.inputmethodservice.SoftInputWindow: void setToken(android.os.IBinder)>($r27);

        return;

     label2:
        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("setUiEnabled is false");

        throw $r1;
    }

    void ensureWindowHidden()
    {
        android.service.voice.VoiceInteractionSession r0;
        android.inputmethodservice.SoftInputWindow r1;

        r0 := @this: android.service.voice.VoiceInteractionSession;

        r1 = r0.<android.service.voice.VoiceInteractionSession: android.inputmethodservice.SoftInputWindow mWindow>;

        if r1 == null goto label1;

        virtualinvoke r1.<android.inputmethodservice.SoftInputWindow: void hide()>();

     label1:
        return;
    }

    public void finish()
    {
        android.service.voice.VoiceInteractionSession r0;
        java.lang.IllegalStateException $r1;
        com.android.internal.app.IVoiceInteractionManagerService $r2;
        android.os.RemoteException $r3;
        android.os.IBinder r4;

        r0 := @this: android.service.voice.VoiceInteractionSession;

        r4 = r0.<android.service.voice.VoiceInteractionSession: android.os.IBinder mToken>;

        if r4 == null goto label5;

     label1:
        $r2 = r0.<android.service.voice.VoiceInteractionSession: com.android.internal.app.IVoiceInteractionManagerService mSystemService>;

        interfaceinvoke $r2.<com.android.internal.app.IVoiceInteractionManagerService: void finish(android.os.IBinder)>(r4);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

     label4:
        return;

     label5:
        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Can\'t call before onCreate()");

        throw $r1;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.content.Context getContext()
    {
        android.service.voice.VoiceInteractionSession r0;
        android.content.Context $r1;

        r0 := @this: android.service.voice.VoiceInteractionSession;

        $r1 = r0.<android.service.voice.VoiceInteractionSession: android.content.Context mContext>;

        return $r1;
    }

    public int getDisabledShowContext()
    {
        android.service.voice.VoiceInteractionSession r0;
        int i0;
        com.android.internal.app.IVoiceInteractionManagerService $r2;
        android.os.RemoteException $r3;

        r0 := @this: android.service.voice.VoiceInteractionSession;

     label1:
        $r2 = r0.<android.service.voice.VoiceInteractionSession: com.android.internal.app.IVoiceInteractionManagerService mSystemService>;

        i0 = interfaceinvoke $r2.<com.android.internal.app.IVoiceInteractionManagerService: int getDisabledShowContext()>();

     label2:
        return i0;

     label3:
        $r3 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.view.LayoutInflater getLayoutInflater()
    {
        android.service.voice.VoiceInteractionSession r0;
        android.view.LayoutInflater $r1;

        r0 := @this: android.service.voice.VoiceInteractionSession;

        virtualinvoke r0.<android.service.voice.VoiceInteractionSession: void ensureWindowCreated()>();

        $r1 = r0.<android.service.voice.VoiceInteractionSession: android.view.LayoutInflater mInflater>;

        return $r1;
    }

    public int getUserDisabledShowContext()
    {
        android.service.voice.VoiceInteractionSession r0;
        int i0;
        com.android.internal.app.IVoiceInteractionManagerService $r2;
        android.os.RemoteException $r3;

        r0 := @this: android.service.voice.VoiceInteractionSession;

     label1:
        $r2 = r0.<android.service.voice.VoiceInteractionSession: com.android.internal.app.IVoiceInteractionManagerService mSystemService>;

        i0 = interfaceinvoke $r2.<com.android.internal.app.IVoiceInteractionManagerService: int getUserDisabledShowContext()>();

     label2:
        return i0;

     label3:
        $r3 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.app.Dialog getWindow()
    {
        android.service.voice.VoiceInteractionSession r0;
        android.inputmethodservice.SoftInputWindow $r1;

        r0 := @this: android.service.voice.VoiceInteractionSession;

        virtualinvoke r0.<android.service.voice.VoiceInteractionSession: void ensureWindowCreated()>();

        $r1 = r0.<android.service.voice.VoiceInteractionSession: android.inputmethodservice.SoftInputWindow mWindow>;

        return $r1;
    }

    public void hide()
    {
        android.service.voice.VoiceInteractionSession r0;
        java.lang.IllegalStateException $r1;
        com.android.internal.app.IVoiceInteractionManagerService $r2;
        android.os.RemoteException $r3;
        android.os.IBinder r4;

        r0 := @this: android.service.voice.VoiceInteractionSession;

        r4 = r0.<android.service.voice.VoiceInteractionSession: android.os.IBinder mToken>;

        if r4 == null goto label5;

     label1:
        $r2 = r0.<android.service.voice.VoiceInteractionSession: com.android.internal.app.IVoiceInteractionManagerService mSystemService>;

        interfaceinvoke $r2.<com.android.internal.app.IVoiceInteractionManagerService: boolean hideSessionFromSession(android.os.IBinder)>(r4);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

     label4:
        return;

     label5:
        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Can\'t call before onCreate()");

        throw $r1;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    boolean isRequestActive(android.os.IBinder)
    {
        android.service.voice.VoiceInteractionSession r0;
        boolean z0;
        android.util.ArrayMap $r1;
        java.lang.Throwable $r2;
        android.os.IBinder r3;

        r0 := @this: android.service.voice.VoiceInteractionSession;

        r3 := @parameter0: android.os.IBinder;

        entermonitor r0;

     label1:
        $r1 = r0.<android.service.voice.VoiceInteractionSession: android.util.ArrayMap mActiveRequests>;

        z0 = virtualinvoke $r1.<android.util.ArrayMap: boolean containsKey(java.lang.Object)>(r3);

        exitmonitor r0;

     label2:
        return z0;

     label3:
        $r2 := @caughtexception;

     label4:
        exitmonitor r0;

     label5:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void onAssistStructureFailure(java.lang.Throwable)
    {
        android.service.voice.VoiceInteractionSession r0;
        java.lang.Throwable r1;

        r0 := @this: android.service.voice.VoiceInteractionSession;

        r1 := @parameter0: java.lang.Throwable;

        return;
    }

    public void onBackPressed()
    {
        android.service.voice.VoiceInteractionSession r0;

        r0 := @this: android.service.voice.VoiceInteractionSession;

        virtualinvoke r0.<android.service.voice.VoiceInteractionSession: void hide()>();

        return;
    }

    public void onCancelRequest(android.service.voice.VoiceInteractionSession$Request)
    {
        android.service.voice.VoiceInteractionSession r0;
        android.service.voice.VoiceInteractionSession$Request r1;

        r0 := @this: android.service.voice.VoiceInteractionSession;

        r1 := @parameter0: android.service.voice.VoiceInteractionSession$Request;

        return;
    }

    public void onCloseSystemDialogs()
    {
        android.service.voice.VoiceInteractionSession r0;

        r0 := @this: android.service.voice.VoiceInteractionSession;

        virtualinvoke r0.<android.service.voice.VoiceInteractionSession: void hide()>();

        return;
    }

    public void onComputeInsets(android.service.voice.VoiceInteractionSession$Insets)
    {
        android.service.voice.VoiceInteractionSession r0;
        android.service.voice.VoiceInteractionSession$Insets r1;
        android.view.View r2;
        android.graphics.Rect $r3, $r4, $r5, $r8;
        android.app.Dialog $r6;
        android.view.Window $r7;
        int $i0;
        android.graphics.Region $r9;

        r0 := @this: android.service.voice.VoiceInteractionSession;

        r1 := @parameter0: android.service.voice.VoiceInteractionSession$Insets;

        $r3 = r1.<android.service.voice.VoiceInteractionSession$Insets: android.graphics.Rect contentInsets>;

        $r3.<android.graphics.Rect: int left> = 0;

        $r4 = r1.<android.service.voice.VoiceInteractionSession$Insets: android.graphics.Rect contentInsets>;

        $r4.<android.graphics.Rect: int bottom> = 0;

        $r5 = r1.<android.service.voice.VoiceInteractionSession$Insets: android.graphics.Rect contentInsets>;

        $r5.<android.graphics.Rect: int right> = 0;

        $r6 = virtualinvoke r0.<android.service.voice.VoiceInteractionSession: android.app.Dialog getWindow()>();

        $r7 = virtualinvoke $r6.<android.app.Dialog: android.view.Window getWindow()>();

        r2 = virtualinvoke $r7.<android.view.Window: android.view.View getDecorView()>();

        $r8 = r1.<android.service.voice.VoiceInteractionSession$Insets: android.graphics.Rect contentInsets>;

        $i0 = virtualinvoke r2.<android.view.View: int getHeight()>();

        $r8.<android.graphics.Rect: int top> = $i0;

        r1.<android.service.voice.VoiceInteractionSession$Insets: int touchableInsets> = 0;

        $r9 = r1.<android.service.voice.VoiceInteractionSession$Insets: android.graphics.Region touchableRegion>;

        virtualinvoke $r9.<android.graphics.Region: void setEmpty()>();

        return;
    }

    public void onConfigurationChanged(android.content.res.Configuration)
    {
        android.service.voice.VoiceInteractionSession r0;
        android.content.res.Configuration r1;

        r0 := @this: android.service.voice.VoiceInteractionSession;

        r1 := @parameter0: android.content.res.Configuration;

        return;
    }

    public void onCreate()
    {
        android.service.voice.VoiceInteractionSession r0;

        r0 := @this: android.service.voice.VoiceInteractionSession;

        specialinvoke r0.<android.service.voice.VoiceInteractionSession: void doOnCreate()>();

        return;
    }

    public android.view.View onCreateContentView()
    {
        android.service.voice.VoiceInteractionSession r0;

        r0 := @this: android.service.voice.VoiceInteractionSession;

        return null;
    }

    public void onDestroy()
    {
        android.service.voice.VoiceInteractionSession r0;

        r0 := @this: android.service.voice.VoiceInteractionSession;

        return;
    }

    public void onDirectActionsInvalidated(android.service.voice.VoiceInteractionSession$ActivityId)
    {
        android.service.voice.VoiceInteractionSession r0;
        android.service.voice.VoiceInteractionSession$ActivityId r1;

        r0 := @this: android.service.voice.VoiceInteractionSession;

        r1 := @parameter0: android.service.voice.VoiceInteractionSession$ActivityId;

        return;
    }

    public boolean[] onGetSupportedCommands(java.lang.String[])
    {
        android.service.voice.VoiceInteractionSession r0;
        java.lang.String[] r1;
        int $i0;
        boolean[] $r2;

        r0 := @this: android.service.voice.VoiceInteractionSession;

        r1 := @parameter0: java.lang.String[];

        $i0 = lengthof r1;

        $r2 = newarray (boolean)[$i0];

        return $r2;
    }

    public void onHandleAssist(android.os.Bundle, android.app.assist.AssistStructure, android.app.assist.AssistContent)
    {
        android.service.voice.VoiceInteractionSession r0;
        android.os.Bundle r1;
        android.app.assist.AssistStructure r2;
        android.app.assist.AssistContent r3;

        r0 := @this: android.service.voice.VoiceInteractionSession;

        r1 := @parameter0: android.os.Bundle;

        r2 := @parameter1: android.app.assist.AssistStructure;

        r3 := @parameter2: android.app.assist.AssistContent;

        return;
    }

    public void onHandleAssist(android.service.voice.VoiceInteractionSession$AssistState)
    {
        android.service.voice.VoiceInteractionSession r0;
        android.service.voice.VoiceInteractionSession$AssistState r1;
        int $i0, $i1, $i2;
        android.os.Bundle $r2, $r5;
        android.app.assist.AssistStructure $r3, $r6;
        android.app.assist.AssistContent $r4, $r7;

        r0 := @this: android.service.voice.VoiceInteractionSession;

        r1 := @parameter0: android.service.voice.VoiceInteractionSession$AssistState;

        $i0 = virtualinvoke r1.<android.service.voice.VoiceInteractionSession$AssistState: int getIndex()>();

        if $i0 != 0 goto label1;

        $r5 = virtualinvoke r1.<android.service.voice.VoiceInteractionSession$AssistState: android.os.Bundle getAssistData()>();

        $r6 = virtualinvoke r1.<android.service.voice.VoiceInteractionSession$AssistState: android.app.assist.AssistStructure getAssistStructure()>();

        $r7 = virtualinvoke r1.<android.service.voice.VoiceInteractionSession$AssistState: android.app.assist.AssistContent getAssistContent()>();

        virtualinvoke r0.<android.service.voice.VoiceInteractionSession: void onHandleAssist(android.os.Bundle,android.app.assist.AssistStructure,android.app.assist.AssistContent)>($r5, $r6, $r7);

        goto label2;

     label1:
        $r2 = virtualinvoke r1.<android.service.voice.VoiceInteractionSession$AssistState: android.os.Bundle getAssistData()>();

        $r3 = virtualinvoke r1.<android.service.voice.VoiceInteractionSession$AssistState: android.app.assist.AssistStructure getAssistStructure()>();

        $r4 = virtualinvoke r1.<android.service.voice.VoiceInteractionSession$AssistState: android.app.assist.AssistContent getAssistContent()>();

        $i1 = virtualinvoke r1.<android.service.voice.VoiceInteractionSession$AssistState: int getIndex()>();

        $i2 = virtualinvoke r1.<android.service.voice.VoiceInteractionSession$AssistState: int getCount()>();

        virtualinvoke r0.<android.service.voice.VoiceInteractionSession: void onHandleAssistSecondary(android.os.Bundle,android.app.assist.AssistStructure,android.app.assist.AssistContent,int,int)>($r2, $r3, $r4, $i1, $i2);

     label2:
        return;
    }

    public void onHandleAssistSecondary(android.os.Bundle, android.app.assist.AssistStructure, android.app.assist.AssistContent, int, int)
    {
        android.service.voice.VoiceInteractionSession r0;
        android.os.Bundle r1;
        android.app.assist.AssistStructure r2;
        android.app.assist.AssistContent r3;
        int i0, i1;

        r0 := @this: android.service.voice.VoiceInteractionSession;

        r1 := @parameter0: android.os.Bundle;

        r2 := @parameter1: android.app.assist.AssistStructure;

        r3 := @parameter2: android.app.assist.AssistContent;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        return;
    }

    public void onHandleScreenshot(android.graphics.Bitmap)
    {
        android.service.voice.VoiceInteractionSession r0;
        android.graphics.Bitmap r1;

        r0 := @this: android.service.voice.VoiceInteractionSession;

        r1 := @parameter0: android.graphics.Bitmap;

        return;
    }

    public void onHide()
    {
        android.service.voice.VoiceInteractionSession r0;

        r0 := @this: android.service.voice.VoiceInteractionSession;

        return;
    }

    public boolean onKeyDown(int, android.view.KeyEvent)
    {
        android.service.voice.VoiceInteractionSession r0;
        int i0;
        android.view.KeyEvent r1;

        r0 := @this: android.service.voice.VoiceInteractionSession;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.KeyEvent;

        return 0;
    }

    public boolean onKeyLongPress(int, android.view.KeyEvent)
    {
        android.service.voice.VoiceInteractionSession r0;
        int i0;
        android.view.KeyEvent r1;

        r0 := @this: android.service.voice.VoiceInteractionSession;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.KeyEvent;

        return 0;
    }

    public boolean onKeyMultiple(int, int, android.view.KeyEvent)
    {
        android.service.voice.VoiceInteractionSession r0;
        int i0, i1;
        android.view.KeyEvent r1;

        r0 := @this: android.service.voice.VoiceInteractionSession;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: android.view.KeyEvent;

        return 0;
    }

    public boolean onKeyUp(int, android.view.KeyEvent)
    {
        android.service.voice.VoiceInteractionSession r0;
        int i0;
        android.view.KeyEvent r1;

        r0 := @this: android.service.voice.VoiceInteractionSession;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.KeyEvent;

        return 0;
    }

    public void onLockscreenShown()
    {
        android.service.voice.VoiceInteractionSession r0;

        r0 := @this: android.service.voice.VoiceInteractionSession;

        virtualinvoke r0.<android.service.voice.VoiceInteractionSession: void hide()>();

        return;
    }

    public void onLowMemory()
    {
        android.service.voice.VoiceInteractionSession r0;

        r0 := @this: android.service.voice.VoiceInteractionSession;

        return;
    }

    public void onPrepareShow(android.os.Bundle, int)
    {
        android.service.voice.VoiceInteractionSession r0;
        android.os.Bundle r1;
        int i0;

        r0 := @this: android.service.voice.VoiceInteractionSession;

        r1 := @parameter0: android.os.Bundle;

        i0 := @parameter1: int;

        return;
    }

    public void onRequestAbortVoice(android.service.voice.VoiceInteractionSession$AbortVoiceRequest)
    {
        android.service.voice.VoiceInteractionSession r0;
        android.service.voice.VoiceInteractionSession$AbortVoiceRequest r1;

        r0 := @this: android.service.voice.VoiceInteractionSession;

        r1 := @parameter0: android.service.voice.VoiceInteractionSession$AbortVoiceRequest;

        return;
    }

    public void onRequestCommand(android.service.voice.VoiceInteractionSession$CommandRequest)
    {
        android.service.voice.VoiceInteractionSession r0;
        android.service.voice.VoiceInteractionSession$CommandRequest r1;

        r0 := @this: android.service.voice.VoiceInteractionSession;

        r1 := @parameter0: android.service.voice.VoiceInteractionSession$CommandRequest;

        return;
    }

    public void onRequestCompleteVoice(android.service.voice.VoiceInteractionSession$CompleteVoiceRequest)
    {
        android.service.voice.VoiceInteractionSession r0;
        android.service.voice.VoiceInteractionSession$CompleteVoiceRequest r1;

        r0 := @this: android.service.voice.VoiceInteractionSession;

        r1 := @parameter0: android.service.voice.VoiceInteractionSession$CompleteVoiceRequest;

        return;
    }

    public void onRequestConfirmation(android.service.voice.VoiceInteractionSession$ConfirmationRequest)
    {
        android.service.voice.VoiceInteractionSession r0;
        android.service.voice.VoiceInteractionSession$ConfirmationRequest r1;

        r0 := @this: android.service.voice.VoiceInteractionSession;

        r1 := @parameter0: android.service.voice.VoiceInteractionSession$ConfirmationRequest;

        return;
    }

    public void onRequestPickOption(android.service.voice.VoiceInteractionSession$PickOptionRequest)
    {
        android.service.voice.VoiceInteractionSession r0;
        android.service.voice.VoiceInteractionSession$PickOptionRequest r1;

        r0 := @this: android.service.voice.VoiceInteractionSession;

        r1 := @parameter0: android.service.voice.VoiceInteractionSession$PickOptionRequest;

        return;
    }

    public void onShow(android.os.Bundle, int)
    {
        android.service.voice.VoiceInteractionSession r0;
        android.os.Bundle r1;
        int i0;

        r0 := @this: android.service.voice.VoiceInteractionSession;

        r1 := @parameter0: android.os.Bundle;

        i0 := @parameter1: int;

        return;
    }

    public void onTaskFinished(android.content.Intent, int)
    {
        android.service.voice.VoiceInteractionSession r0;
        android.content.Intent r1;
        int i0;

        r0 := @this: android.service.voice.VoiceInteractionSession;

        r1 := @parameter0: android.content.Intent;

        i0 := @parameter1: int;

        virtualinvoke r0.<android.service.voice.VoiceInteractionSession: void hide()>();

        return;
    }

    public void onTaskStarted(android.content.Intent, int)
    {
        android.service.voice.VoiceInteractionSession r0;
        android.content.Intent r1;
        int i0;

        r0 := @this: android.service.voice.VoiceInteractionSession;

        r1 := @parameter0: android.content.Intent;

        i0 := @parameter1: int;

        return;
    }

    public void onTrimMemory(int)
    {
        android.service.voice.VoiceInteractionSession r0;
        int i0;

        r0 := @this: android.service.voice.VoiceInteractionSession;

        i0 := @parameter0: int;

        return;
    }

    public final void performDirectAction(android.app.DirectAction, android.os.Bundle, android.os.CancellationSignal, java.util.concurrent.Executor, java.util.function.Consumer)
    {
        android.service.voice.VoiceInteractionSession r0;
        android.os.Bundle r1;
        java.util.function.Consumer r2;
        android.os.IBinder $r3, $r11, $r13;
        java.lang.IllegalStateException $r4;
        android.os.RemoteCallback $r7, $r14, r22;
        android.service.voice._$$Lambda$VoiceInteractionSession$9GV3ALC6LWOMyg5zazTo6TodsHU $r8;
        android.service.voice.VoiceInteractionSession$SafeResultListener $r9, $r16;
        com.android.internal.app.IVoiceInteractionManagerService $r10;
        java.lang.String $r12;
        int $i0;
        android.service.voice._$$Lambda$VoiceInteractionSession$2YI2merL0_kdgL83g93OW541J8w $r15;
        android.os.RemoteException $r17;
        android.app.DirectAction r19;
        android.os.CancellationSignal r20;
        java.util.concurrent.Executor r21;

        r0 := @this: android.service.voice.VoiceInteractionSession;

        r19 := @parameter0: android.app.DirectAction;

        r1 := @parameter1: android.os.Bundle;

        r20 := @parameter2: android.os.CancellationSignal;

        r21 := @parameter3: java.util.concurrent.Executor;

        r2 := @parameter4: java.util.function.Consumer;

        $r3 = r0.<android.service.voice.VoiceInteractionSession: android.os.IBinder mToken>;

        if $r3 == null goto label8;

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r21);

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r2);

        if r20 == null goto label1;

        virtualinvoke r20.<android.os.CancellationSignal: void throwIfCanceled()>();

     label1:
        if r20 == null goto label2;

        $r14 = new android.os.RemoteCallback;

        $r15 = new android.service.voice._$$Lambda$VoiceInteractionSession$2YI2merL0_kdgL83g93OW541J8w;

        specialinvoke $r15.<android.service.voice._$$Lambda$VoiceInteractionSession$2YI2merL0_kdgL83g93OW541J8w: void <init>(android.os.CancellationSignal)>(r20);

        $r16 = specialinvoke r0.<android.service.voice.VoiceInteractionSession: android.service.voice.VoiceInteractionSession$SafeResultListener createSafeResultListener(java.util.function.Consumer)>($r15);

        specialinvoke $r14.<android.os.RemoteCallback: void <init>(android.os.RemoteCallback$OnResultListener)>($r16);

        r22 = $r14;

        goto label3;

     label2:
        r22 = null;

     label3:
        $r7 = new android.os.RemoteCallback;

        $r8 = new android.service.voice._$$Lambda$VoiceInteractionSession$9GV3ALC6LWOMyg5zazTo6TodsHU;

        specialinvoke $r8.<android.service.voice._$$Lambda$VoiceInteractionSession$9GV3ALC6LWOMyg5zazTo6TodsHU: void <init>(java.util.concurrent.Executor,java.util.function.Consumer)>(r21, r2);

        $r9 = specialinvoke r0.<android.service.voice.VoiceInteractionSession: android.service.voice.VoiceInteractionSession$SafeResultListener createSafeResultListener(java.util.function.Consumer)>($r8);

        specialinvoke $r7.<android.os.RemoteCallback: void <init>(android.os.RemoteCallback$OnResultListener)>($r9);

     label4:
        $r10 = r0.<android.service.voice.VoiceInteractionSession: com.android.internal.app.IVoiceInteractionManagerService mSystemService>;

        $r11 = r0.<android.service.voice.VoiceInteractionSession: android.os.IBinder mToken>;

        $r12 = virtualinvoke r19.<android.app.DirectAction: java.lang.String getId()>();

        $i0 = virtualinvoke r19.<android.app.DirectAction: int getTaskId()>();

        $r13 = virtualinvoke r19.<android.app.DirectAction: android.os.IBinder getActivityId()>();

        interfaceinvoke $r10.<com.android.internal.app.IVoiceInteractionManagerService: void performDirectAction(android.os.IBinder,java.lang.String,android.os.Bundle,int,android.os.IBinder,android.os.RemoteCallback,android.os.RemoteCallback)>($r11, $r12, r1, $i0, $r13, r22, $r7);

     label5:
        goto label7;

     label6:
        $r17 := @caughtexception;

        virtualinvoke $r17.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

     label7:
        return;

     label8:
        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Can\'t call before onCreate()");

        throw $r4;

        catch android.os.RemoteException from label4 to label5 with label6;
    }

    android.service.voice.VoiceInteractionSession$Request removeRequest(android.os.IBinder)
    {
        android.service.voice.VoiceInteractionSession r0;
        android.util.ArrayMap $r1;
        java.lang.Object $r2;
        java.lang.Throwable $r3;
        android.os.IBinder r4;
        android.service.voice.VoiceInteractionSession$Request r5;

        r0 := @this: android.service.voice.VoiceInteractionSession;

        r4 := @parameter0: android.os.IBinder;

        entermonitor r0;

     label1:
        $r1 = r0.<android.service.voice.VoiceInteractionSession: android.util.ArrayMap mActiveRequests>;

        $r2 = virtualinvoke $r1.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>(r4);

        r5 = (android.service.voice.VoiceInteractionSession$Request) $r2;

        exitmonitor r0;

     label2:
        return r5;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r0;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public final void requestDirectActions(android.service.voice.VoiceInteractionSession$ActivityId, android.os.CancellationSignal, java.util.concurrent.Executor, java.util.function.Consumer)
    {
        android.service.voice.VoiceInteractionSession r0;
        java.util.concurrent.Executor r1;
        java.util.function.Consumer r2;
        com.android.internal.app.IVoiceInteractionManagerService r3;
        android.os.IBinder r4, $r10, r20;
        int i0;
        android.os.RemoteCallback r5, $r13, r19;
        android.service.voice._$$Lambda$VoiceInteractionSession$ONdRuCs_OqsJCBOvPdgOMEsz684 r6;
        java.lang.IllegalStateException $r11;
        android.service.voice.VoiceInteractionSession$SafeResultListener $r12;
        android.service.voice._$$Lambda$VoiceInteractionSession$KRmvXWbKzOj6uOiuAkDjhkUvQiw $r14;
        android.os.RemoteException $r15;
        android.service.voice.VoiceInteractionSession$ActivityId r17;
        android.os.CancellationSignal r18;

        r0 := @this: android.service.voice.VoiceInteractionSession;

        r17 := @parameter0: android.service.voice.VoiceInteractionSession$ActivityId;

        r18 := @parameter1: android.os.CancellationSignal;

        r1 := @parameter2: java.util.concurrent.Executor;

        r2 := @parameter3: java.util.function.Consumer;

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r17);

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r2);

        $r10 = r0.<android.service.voice.VoiceInteractionSession: android.os.IBinder mToken>;

        if $r10 == null goto label7;

        if r18 == null goto label1;

        virtualinvoke r18.<android.os.CancellationSignal: void throwIfCanceled()>();

     label1:
        if r18 == null goto label2;

        $r13 = new android.os.RemoteCallback;

        $r14 = new android.service.voice._$$Lambda$VoiceInteractionSession$KRmvXWbKzOj6uOiuAkDjhkUvQiw;

        specialinvoke $r14.<android.service.voice._$$Lambda$VoiceInteractionSession$KRmvXWbKzOj6uOiuAkDjhkUvQiw: void <init>(android.os.CancellationSignal)>(r18);

        specialinvoke $r13.<android.os.RemoteCallback: void <init>(android.os.RemoteCallback$OnResultListener)>($r14);

        r19 = $r13;

        goto label3;

     label2:
        r19 = null;

     label3:
        r3 = r0.<android.service.voice.VoiceInteractionSession: com.android.internal.app.IVoiceInteractionManagerService mSystemService>;

        r4 = r0.<android.service.voice.VoiceInteractionSession: android.os.IBinder mToken>;

        i0 = virtualinvoke r17.<android.service.voice.VoiceInteractionSession$ActivityId: int getTaskId()>();

        r20 = virtualinvoke r17.<android.service.voice.VoiceInteractionSession$ActivityId: android.os.IBinder getAssistToken()>();

        r5 = new android.os.RemoteCallback;

        r6 = new android.service.voice._$$Lambda$VoiceInteractionSession$ONdRuCs_OqsJCBOvPdgOMEsz684;

        specialinvoke r6.<android.service.voice._$$Lambda$VoiceInteractionSession$ONdRuCs_OqsJCBOvPdgOMEsz684: void <init>(java.util.concurrent.Executor,java.util.function.Consumer)>(r1, r2);

        $r12 = specialinvoke r0.<android.service.voice.VoiceInteractionSession: android.service.voice.VoiceInteractionSession$SafeResultListener createSafeResultListener(java.util.function.Consumer)>(r6);

        specialinvoke r5.<android.os.RemoteCallback: void <init>(android.os.RemoteCallback$OnResultListener)>($r12);

        interfaceinvoke r3.<com.android.internal.app.IVoiceInteractionManagerService: void requestDirectActions(android.os.IBinder,int,android.os.IBinder,android.os.RemoteCallback,android.os.RemoteCallback)>(r4, i0, r20, r19, r5);

     label4:
        goto label6;

     label5:
        $r15 := @caughtexception;

        virtualinvoke $r15.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

     label6:
        return;

     label7:
        $r11 = new java.lang.IllegalStateException;

        specialinvoke $r11.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Can\'t call before onCreate()");

        throw $r11;

        catch android.os.RemoteException from label3 to label4 with label5;
    }

    public void setContentView(android.view.View)
    {
        android.service.voice.VoiceInteractionSession r0;
        android.view.View r1;
        android.widget.FrameLayout $r2, $r4, $r5;
        android.widget.FrameLayout$LayoutParams $r3;

        r0 := @this: android.service.voice.VoiceInteractionSession;

        r1 := @parameter0: android.view.View;

        virtualinvoke r0.<android.service.voice.VoiceInteractionSession: void ensureWindowCreated()>();

        $r2 = r0.<android.service.voice.VoiceInteractionSession: android.widget.FrameLayout mContentFrame>;

        virtualinvoke $r2.<android.widget.FrameLayout: void removeAllViews()>();

        $r4 = r0.<android.service.voice.VoiceInteractionSession: android.widget.FrameLayout mContentFrame>;

        $r3 = new android.widget.FrameLayout$LayoutParams;

        specialinvoke $r3.<android.widget.FrameLayout$LayoutParams: void <init>(int,int)>(-1, -1);

        virtualinvoke $r4.<android.widget.FrameLayout: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>(r1, $r3);

        $r5 = r0.<android.service.voice.VoiceInteractionSession: android.widget.FrameLayout mContentFrame>;

        virtualinvoke $r5.<android.widget.FrameLayout: void requestApplyInsets()>();

        return;
    }

    public void setDisabledShowContext(int)
    {
        android.service.voice.VoiceInteractionSession r0;
        int i0;
        com.android.internal.app.IVoiceInteractionManagerService $r2;
        android.os.RemoteException $r3;

        r0 := @this: android.service.voice.VoiceInteractionSession;

        i0 := @parameter0: int;

     label1:
        $r2 = r0.<android.service.voice.VoiceInteractionSession: com.android.internal.app.IVoiceInteractionManagerService mSystemService>;

        interfaceinvoke $r2.<com.android.internal.app.IVoiceInteractionManagerService: void setDisabledShowContext(int)>(i0);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void setKeepAwake(boolean)
    {
        android.service.voice.VoiceInteractionSession r0;
        boolean z0;
        java.lang.IllegalStateException $r1;
        com.android.internal.app.IVoiceInteractionManagerService $r2;
        android.os.RemoteException $r3;
        android.os.IBinder r4;

        r0 := @this: android.service.voice.VoiceInteractionSession;

        z0 := @parameter0: boolean;

        r4 = r0.<android.service.voice.VoiceInteractionSession: android.os.IBinder mToken>;

        if r4 == null goto label5;

     label1:
        $r2 = r0.<android.service.voice.VoiceInteractionSession: com.android.internal.app.IVoiceInteractionManagerService mSystemService>;

        interfaceinvoke $r2.<com.android.internal.app.IVoiceInteractionManagerService: void setKeepAwake(android.os.IBinder,boolean)>(r4, z0);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

     label4:
        return;

     label5:
        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Can\'t call before onCreate()");

        throw $r1;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void setTheme(int)
    {
        android.service.voice.VoiceInteractionSession r0;
        int i0;
        android.inputmethodservice.SoftInputWindow $r1;
        java.lang.IllegalStateException $r2;

        r0 := @this: android.service.voice.VoiceInteractionSession;

        i0 := @parameter0: int;

        $r1 = r0.<android.service.voice.VoiceInteractionSession: android.inputmethodservice.SoftInputWindow mWindow>;

        if $r1 != null goto label1;

        r0.<android.service.voice.VoiceInteractionSession: int mTheme> = i0;

        return;

     label1:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Must be called before onCreate()");

        throw $r2;
    }

    public void setUiEnabled(boolean)
    {
        android.service.voice.VoiceInteractionSession r0;
        boolean z0, $z1, $z2;
        android.inputmethodservice.SoftInputWindow $r1;

        r0 := @this: android.service.voice.VoiceInteractionSession;

        z0 := @parameter0: boolean;

        $z1 = r0.<android.service.voice.VoiceInteractionSession: boolean mUiEnabled>;

        if $z1 == z0 goto label2;

        r0.<android.service.voice.VoiceInteractionSession: boolean mUiEnabled> = z0;

        $z2 = r0.<android.service.voice.VoiceInteractionSession: boolean mWindowVisible>;

        if $z2 == 0 goto label2;

        if z0 == 0 goto label1;

        virtualinvoke r0.<android.service.voice.VoiceInteractionSession: void ensureWindowAdded()>();

        $r1 = r0.<android.service.voice.VoiceInteractionSession: android.inputmethodservice.SoftInputWindow mWindow>;

        virtualinvoke $r1.<android.inputmethodservice.SoftInputWindow: void show()>();

        goto label2;

     label1:
        virtualinvoke r0.<android.service.voice.VoiceInteractionSession: void ensureWindowHidden()>();

     label2:
        return;
    }

    public void show(android.os.Bundle, int)
    {
        android.service.voice.VoiceInteractionSession r0;
        int i0;
        android.os.IBinder r1;
        java.lang.IllegalStateException $r2;
        com.android.internal.app.IVoiceInteractionManagerService $r3;
        android.os.RemoteException $r4;
        android.os.Bundle r5;

        r0 := @this: android.service.voice.VoiceInteractionSession;

        r5 := @parameter0: android.os.Bundle;

        i0 := @parameter1: int;

        r1 = r0.<android.service.voice.VoiceInteractionSession: android.os.IBinder mToken>;

        if r1 == null goto label5;

     label1:
        $r3 = r0.<android.service.voice.VoiceInteractionSession: com.android.internal.app.IVoiceInteractionManagerService mSystemService>;

        interfaceinvoke $r3.<com.android.internal.app.IVoiceInteractionManagerService: boolean showSessionFromSession(android.os.IBinder,android.os.Bundle,int)>(r1, r5, i0);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

     label4:
        return;

     label5:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Can\'t call before onCreate()");

        throw $r2;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void startAssistantActivity(android.content.Intent)
    {
        android.service.voice.VoiceInteractionSession r0;
        android.os.IBinder $r1, $r7;
        java.lang.IllegalStateException $r2;
        android.content.Context $r3, $r4, $r5, $r10;
        com.android.internal.app.IVoiceInteractionManagerService $r6;
        android.content.ContentResolver $r8;
        java.lang.String $r9, $r11;
        int $i0;
        android.os.RemoteException $r12;
        android.content.Intent r13;

        r0 := @this: android.service.voice.VoiceInteractionSession;

        r13 := @parameter0: android.content.Intent;

        $r1 = r0.<android.service.voice.VoiceInteractionSession: android.os.IBinder mToken>;

        if $r1 == null goto label5;

     label1:
        $r3 = r0.<android.service.voice.VoiceInteractionSession: android.content.Context mContext>;

        virtualinvoke r13.<android.content.Intent: boolean migrateExtraStreamToClipData(android.content.Context)>($r3);

        $r4 = r0.<android.service.voice.VoiceInteractionSession: android.content.Context mContext>;

        virtualinvoke r13.<android.content.Intent: void prepareToLeaveProcess(android.content.Context)>($r4);

        $r6 = r0.<android.service.voice.VoiceInteractionSession: com.android.internal.app.IVoiceInteractionManagerService mSystemService>;

        $r7 = r0.<android.service.voice.VoiceInteractionSession: android.os.IBinder mToken>;

        $r5 = r0.<android.service.voice.VoiceInteractionSession: android.content.Context mContext>;

        $r8 = virtualinvoke $r5.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r9 = virtualinvoke r13.<android.content.Intent: java.lang.String resolveType(android.content.ContentResolver)>($r8);

        $r10 = r0.<android.service.voice.VoiceInteractionSession: android.content.Context mContext>;

        $r11 = virtualinvoke $r10.<android.content.Context: java.lang.String getAttributionTag()>();

        $i0 = interfaceinvoke $r6.<com.android.internal.app.IVoiceInteractionManagerService: int startAssistantActivity(android.os.IBinder,android.content.Intent,java.lang.String,java.lang.String)>($r7, r13, $r9, $r11);

        staticinvoke <android.app.Instrumentation: void checkStartActivityResult(int,java.lang.Object)>($i0, r13);

     label2:
        goto label4;

     label3:
        $r12 := @caughtexception;

     label4:
        return;

     label5:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Can\'t call before onCreate()");

        throw $r2;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void startVoiceActivity(android.content.Intent)
    {
        android.service.voice.VoiceInteractionSession r0;
        android.os.IBinder $r1, $r7;
        java.lang.IllegalStateException $r2;
        android.content.Context $r3, $r4, $r5, $r10;
        com.android.internal.app.IVoiceInteractionManagerService $r6;
        android.content.ContentResolver $r8;
        java.lang.String $r9, $r11;
        int $i0;
        android.os.RemoteException $r12;
        android.content.Intent r13;

        r0 := @this: android.service.voice.VoiceInteractionSession;

        r13 := @parameter0: android.content.Intent;

        $r1 = r0.<android.service.voice.VoiceInteractionSession: android.os.IBinder mToken>;

        if $r1 == null goto label5;

     label1:
        $r3 = r0.<android.service.voice.VoiceInteractionSession: android.content.Context mContext>;

        virtualinvoke r13.<android.content.Intent: boolean migrateExtraStreamToClipData(android.content.Context)>($r3);

        $r4 = r0.<android.service.voice.VoiceInteractionSession: android.content.Context mContext>;

        virtualinvoke r13.<android.content.Intent: void prepareToLeaveProcess(android.content.Context)>($r4);

        $r6 = r0.<android.service.voice.VoiceInteractionSession: com.android.internal.app.IVoiceInteractionManagerService mSystemService>;

        $r7 = r0.<android.service.voice.VoiceInteractionSession: android.os.IBinder mToken>;

        $r5 = r0.<android.service.voice.VoiceInteractionSession: android.content.Context mContext>;

        $r8 = virtualinvoke $r5.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r9 = virtualinvoke r13.<android.content.Intent: java.lang.String resolveType(android.content.ContentResolver)>($r8);

        $r10 = r0.<android.service.voice.VoiceInteractionSession: android.content.Context mContext>;

        $r11 = virtualinvoke $r10.<android.content.Context: java.lang.String getAttributionTag()>();

        $i0 = interfaceinvoke $r6.<com.android.internal.app.IVoiceInteractionManagerService: int startVoiceActivity(android.os.IBinder,android.content.Intent,java.lang.String,java.lang.String)>($r7, r13, $r9, $r11);

        staticinvoke <android.app.Instrumentation: void checkStartActivityResult(int,java.lang.Object)>($i0, r13);

     label2:
        goto label4;

     label3:
        $r12 := @caughtexception;

     label4:
        return;

     label5:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Can\'t call before onCreate()");

        throw $r2;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public static void <clinit>()
    {
        <android.service.voice.VoiceInteractionSession: java.lang.String TAG> = "VoiceInteractionSession";

        <android.service.voice.VoiceInteractionSession: int SHOW_WITH_SCREENSHOT> = 2;

        <android.service.voice.VoiceInteractionSession: int SHOW_WITH_ASSIST> = 1;

        <android.service.voice.VoiceInteractionSession: int SHOW_SOURCE_PUSH_TO_TALK> = 32;

        <android.service.voice.VoiceInteractionSession: int SHOW_SOURCE_NOTIFICATION> = 64;

        <android.service.voice.VoiceInteractionSession: int SHOW_SOURCE_AUTOMOTIVE_SYSTEM_UI> = 128;

        <android.service.voice.VoiceInteractionSession: int SHOW_SOURCE_ASSIST_GESTURE> = 4;

        <android.service.voice.VoiceInteractionSession: int SHOW_SOURCE_APPLICATION> = 8;

        <android.service.voice.VoiceInteractionSession: int SHOW_SOURCE_ACTIVITY> = 16;

        <android.service.voice.VoiceInteractionSession: int MSG_TASK_STARTED> = 100;

        <android.service.voice.VoiceInteractionSession: int MSG_TASK_FINISHED> = 101;

        <android.service.voice.VoiceInteractionSession: int MSG_SUPPORTS_COMMANDS> = 6;

        <android.service.voice.VoiceInteractionSession: int MSG_START_PICK_OPTION> = 2;

        <android.service.voice.VoiceInteractionSession: int MSG_START_CONFIRMATION> = 1;

        <android.service.voice.VoiceInteractionSession: int MSG_START_COMPLETE_VOICE> = 3;

        <android.service.voice.VoiceInteractionSession: int MSG_START_COMMAND> = 5;

        <android.service.voice.VoiceInteractionSession: int MSG_START_ABORT_VOICE> = 4;

        <android.service.voice.VoiceInteractionSession: int MSG_SHOW> = 106;

        <android.service.voice.VoiceInteractionSession: int MSG_ON_LOCKSCREEN_SHOWN> = 108;

        <android.service.voice.VoiceInteractionSession: int MSG_HIDE> = 107;

        <android.service.voice.VoiceInteractionSession: int MSG_HANDLE_SCREENSHOT> = 105;

        <android.service.voice.VoiceInteractionSession: int MSG_HANDLE_ASSIST> = 104;

        <android.service.voice.VoiceInteractionSession: int MSG_DESTROY> = 103;

        <android.service.voice.VoiceInteractionSession: int MSG_CLOSE_SYSTEM_DIALOGS> = 102;

        <android.service.voice.VoiceInteractionSession: int MSG_CANCEL> = 7;

        <android.service.voice.VoiceInteractionSession: boolean DEBUG> = 0;

        return;
    }
}
