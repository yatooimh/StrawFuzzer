public abstract class android.service.wallpaper.IWallpaperEngine$Stub extends android.os.Binder implements android.service.wallpaper.IWallpaperEngine
{
    private static final java.lang.String DESCRIPTOR;
    static final int TRANSACTION_destroy;
    static final int TRANSACTION_dispatchPointer;
    static final int TRANSACTION_dispatchWallpaperCommand;
    static final int TRANSACTION_requestWallpaperColors;
    static final int TRANSACTION_setDesiredSize;
    static final int TRANSACTION_setDisplayPadding;
    static final int TRANSACTION_setInAmbientMode;
    static final int TRANSACTION_setVisibility;
    static final int TRANSACTION_setZoomOut;

    public void <init>()
    {
        android.service.wallpaper.IWallpaperEngine$Stub r0;

        r0 := @this: android.service.wallpaper.IWallpaperEngine$Stub;

        specialinvoke r0.<android.os.Binder: void <init>()>();

        virtualinvoke r0.<android.service.wallpaper.IWallpaperEngine$Stub: void attachInterface(android.os.IInterface,java.lang.String)>(r0, "android.service.wallpaper.IWallpaperEngine");

        return;
    }

    public static android.service.wallpaper.IWallpaperEngine asInterface(android.os.IBinder)
    {
        android.os.IBinder r0;
        android.os.IInterface r1;
        android.service.wallpaper.IWallpaperEngine$Stub$Proxy $r2;
        boolean $z0;
        android.service.wallpaper.IWallpaperEngine $r3;

        r0 := @parameter0: android.os.IBinder;

        if r0 != null goto label1;

        return null;

     label1:
        r1 = interfaceinvoke r0.<android.os.IBinder: android.os.IInterface queryLocalInterface(java.lang.String)>("android.service.wallpaper.IWallpaperEngine");

        if r1 == null goto label2;

        $z0 = r1 instanceof android.service.wallpaper.IWallpaperEngine;

        if $z0 == 0 goto label2;

        $r3 = (android.service.wallpaper.IWallpaperEngine) r1;

        return $r3;

     label2:
        $r2 = new android.service.wallpaper.IWallpaperEngine$Stub$Proxy;

        specialinvoke $r2.<android.service.wallpaper.IWallpaperEngine$Stub$Proxy: void <init>(android.os.IBinder)>(r0);

        return $r2;
    }

    public static android.service.wallpaper.IWallpaperEngine getDefaultImpl()
    {
        android.service.wallpaper.IWallpaperEngine $r0;

        $r0 = <android.service.wallpaper.IWallpaperEngine$Stub$Proxy: android.service.wallpaper.IWallpaperEngine sDefaultImpl>;

        return $r0;
    }

    public static java.lang.String getDefaultTransactionName(int)
    {
        int i0;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 1: goto label10;
            case 2: goto label09;
            case 3: goto label08;
            case 4: goto label07;
            case 5: goto label06;
            case 6: goto label05;
            case 7: goto label04;
            case 8: goto label03;
            case 9: goto label02;
            default: goto label01;
        };

     label01:
        return null;

     label02:
        return "setZoomOut";

     label03:
        return "destroy";

     label04:
        return "requestWallpaperColors";

     label05:
        return "dispatchWallpaperCommand";

     label06:
        return "dispatchPointer";

     label07:
        return "setInAmbientMode";

     label08:
        return "setVisibility";

     label09:
        return "setDisplayPadding";

     label10:
        return "setDesiredSize";
    }

    public static boolean setDefaultImpl(android.service.wallpaper.IWallpaperEngine)
    {
        android.service.wallpaper.IWallpaperEngine r0, $r1;
        java.lang.IllegalStateException $r2;

        r0 := @parameter0: android.service.wallpaper.IWallpaperEngine;

        $r1 = <android.service.wallpaper.IWallpaperEngine$Stub$Proxy: android.service.wallpaper.IWallpaperEngine sDefaultImpl>;

        if $r1 != null goto label2;

        if r0 == null goto label1;

        <android.service.wallpaper.IWallpaperEngine$Stub$Proxy: android.service.wallpaper.IWallpaperEngine sDefaultImpl> = r0;

        return 1;

     label1:
        return 0;

     label2:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("setDefaultImpl() called twice");

        throw $r2;
    }

    public android.os.IBinder asBinder()
    {
        android.service.wallpaper.IWallpaperEngine$Stub r0;

        r0 := @this: android.service.wallpaper.IWallpaperEngine$Stub;

        return r0;
    }

    public java.lang.String getTransactionName(int)
    {
        android.service.wallpaper.IWallpaperEngine$Stub r0;
        int i0;
        java.lang.String $r1;

        r0 := @this: android.service.wallpaper.IWallpaperEngine$Stub;

        i0 := @parameter0: int;

        $r1 = staticinvoke <android.service.wallpaper.IWallpaperEngine$Stub: java.lang.String getDefaultTransactionName(int)>(i0);

        return $r1;
    }

    public boolean onTransact(int, android.os.Parcel, android.os.Parcel, int) throws android.os.RemoteException
    {
        android.service.wallpaper.IWallpaperEngine$Stub r0;
        int i0, $i1, $i2, $i3, $i5, $i6, $i7, $i8, i9, i10, i11, i12;
        float $f0;
        android.os.Parcelable$Creator $r1, $r3, $r5;
        java.lang.Object $r2, $r4, $r6;
        long $l4;
        boolean $z1, z2, z3;
        android.os.Parcel r7, r8;
        java.lang.String r9;
        android.os.Bundle r10;
        android.view.MotionEvent r11;
        android.graphics.Rect r12;

        r0 := @this: android.service.wallpaper.IWallpaperEngine$Stub;

        i9 := @parameter0: int;

        r7 := @parameter1: android.os.Parcel;

        r8 := @parameter2: android.os.Parcel;

        i10 := @parameter3: int;

        if i9 == 1598968902 goto label19;

        z2 = 0;

        tableswitch(i9)
        {
            case 1: goto label18;
            case 2: goto label15;
            case 3: goto label13;
            case 4: goto label11;
            case 5: goto label08;
            case 6: goto label05;
            case 7: goto label04;
            case 8: goto label03;
            case 9: goto label02;
            default: goto label01;
        };

     label01:
        $z1 = specialinvoke r0.<android.os.Binder: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>(i9, r7, r8, i10);

        return $z1;

     label02:
        virtualinvoke r7.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.service.wallpaper.IWallpaperEngine");

        $f0 = virtualinvoke r7.<android.os.Parcel: float readFloat()>();

        virtualinvoke r0.<android.service.wallpaper.IWallpaperEngine$Stub: void setZoomOut(float)>($f0);

        return 1;

     label03:
        virtualinvoke r7.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.service.wallpaper.IWallpaperEngine");

        virtualinvoke r0.<android.service.wallpaper.IWallpaperEngine$Stub: void destroy()>();

        return 1;

     label04:
        virtualinvoke r7.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.service.wallpaper.IWallpaperEngine");

        virtualinvoke r0.<android.service.wallpaper.IWallpaperEngine$Stub: void requestWallpaperColors()>();

        return 1;

     label05:
        virtualinvoke r7.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.service.wallpaper.IWallpaperEngine");

        r9 = virtualinvoke r7.<android.os.Parcel: java.lang.String readString()>();

        i11 = virtualinvoke r7.<android.os.Parcel: int readInt()>();

        i0 = virtualinvoke r7.<android.os.Parcel: int readInt()>();

        i12 = virtualinvoke r7.<android.os.Parcel: int readInt()>();

        $i1 = virtualinvoke r7.<android.os.Parcel: int readInt()>();

        if $i1 == 0 goto label06;

        $r1 = <android.os.Bundle: android.os.Parcelable$Creator CREATOR>;

        $r2 = interfaceinvoke $r1.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r7);

        r10 = (android.os.Bundle) $r2;

        goto label07;

     label06:
        r10 = null;

     label07:
        virtualinvoke r0.<android.service.wallpaper.IWallpaperEngine$Stub: void dispatchWallpaperCommand(java.lang.String,int,int,int,android.os.Bundle)>(r9, i11, i0, i12, r10);

        return 1;

     label08:
        virtualinvoke r7.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.service.wallpaper.IWallpaperEngine");

        $i2 = virtualinvoke r7.<android.os.Parcel: int readInt()>();

        if $i2 == 0 goto label09;

        $r3 = <android.view.MotionEvent: android.os.Parcelable$Creator CREATOR>;

        $r4 = interfaceinvoke $r3.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r7);

        r11 = (android.view.MotionEvent) $r4;

        goto label10;

     label09:
        r11 = null;

     label10:
        virtualinvoke r0.<android.service.wallpaper.IWallpaperEngine$Stub: void dispatchPointer(android.view.MotionEvent)>(r11);

        return 1;

     label11:
        virtualinvoke r7.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.service.wallpaper.IWallpaperEngine");

        $i3 = virtualinvoke r7.<android.os.Parcel: int readInt()>();

        if $i3 == 0 goto label12;

        z2 = 1;

     label12:
        $l4 = virtualinvoke r7.<android.os.Parcel: long readLong()>();

        virtualinvoke r0.<android.service.wallpaper.IWallpaperEngine$Stub: void setInAmbientMode(boolean,long)>(z2, $l4);

        return 1;

     label13:
        virtualinvoke r7.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.service.wallpaper.IWallpaperEngine");

        z3 = 0;

        $i5 = virtualinvoke r7.<android.os.Parcel: int readInt()>();

        if $i5 == 0 goto label14;

        z3 = 1;

     label14:
        virtualinvoke r0.<android.service.wallpaper.IWallpaperEngine$Stub: void setVisibility(boolean)>(z3);

        return 1;

     label15:
        virtualinvoke r7.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.service.wallpaper.IWallpaperEngine");

        $i6 = virtualinvoke r7.<android.os.Parcel: int readInt()>();

        if $i6 == 0 goto label16;

        $r5 = <android.graphics.Rect: android.os.Parcelable$Creator CREATOR>;

        $r6 = interfaceinvoke $r5.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r7);

        r12 = (android.graphics.Rect) $r6;

        goto label17;

     label16:
        r12 = null;

     label17:
        virtualinvoke r0.<android.service.wallpaper.IWallpaperEngine$Stub: void setDisplayPadding(android.graphics.Rect)>(r12);

        return 1;

     label18:
        virtualinvoke r7.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.service.wallpaper.IWallpaperEngine");

        $i7 = virtualinvoke r7.<android.os.Parcel: int readInt()>();

        $i8 = virtualinvoke r7.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.service.wallpaper.IWallpaperEngine$Stub: void setDesiredSize(int,int)>($i7, $i8);

        return 1;

     label19:
        virtualinvoke r8.<android.os.Parcel: void writeString(java.lang.String)>("android.service.wallpaper.IWallpaperEngine");

        return 1;
    }

    public static void <clinit>()
    {
        <android.service.wallpaper.IWallpaperEngine$Stub: int TRANSACTION_setZoomOut> = 9;

        <android.service.wallpaper.IWallpaperEngine$Stub: int TRANSACTION_setVisibility> = 3;

        <android.service.wallpaper.IWallpaperEngine$Stub: int TRANSACTION_setInAmbientMode> = 4;

        <android.service.wallpaper.IWallpaperEngine$Stub: int TRANSACTION_setDisplayPadding> = 2;

        <android.service.wallpaper.IWallpaperEngine$Stub: int TRANSACTION_setDesiredSize> = 1;

        <android.service.wallpaper.IWallpaperEngine$Stub: int TRANSACTION_requestWallpaperColors> = 7;

        <android.service.wallpaper.IWallpaperEngine$Stub: int TRANSACTION_dispatchWallpaperCommand> = 6;

        <android.service.wallpaper.IWallpaperEngine$Stub: int TRANSACTION_dispatchPointer> = 5;

        <android.service.wallpaper.IWallpaperEngine$Stub: int TRANSACTION_destroy> = 8;

        <android.service.wallpaper.IWallpaperEngine$Stub: java.lang.String DESCRIPTOR> = "android.service.wallpaper.IWallpaperEngine";

        return;
    }
}
