class android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper extends android.service.wallpaper.IWallpaperEngine$Stub implements com.android.internal.os.HandlerCaller$Callback
{
    private final com.android.internal.os.HandlerCaller mCaller;
    final android.service.wallpaper.IWallpaperConnection mConnection;
    private final java.util.concurrent.atomic.AtomicBoolean mDetached;
    final android.view.Display mDisplay;
    final int mDisplayId;
    final android.hardware.display.DisplayManager mDisplayManager;
    final android.graphics.Rect mDisplayPadding;
    android.service.wallpaper.WallpaperService$Engine mEngine;
    final boolean mIsPreview;
    int mReqHeight;
    int mReqWidth;
    boolean mShownReported;
    final android.os.IBinder mWindowToken;
    final int mWindowType;
    final android.service.wallpaper.WallpaperService this$0;

    void <init>(android.service.wallpaper.WallpaperService, android.service.wallpaper.WallpaperService, android.service.wallpaper.IWallpaperConnection, android.os.IBinder, int, boolean, int, int, android.graphics.Rect, int)
    {
        android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper r0;
        android.service.wallpaper.WallpaperService r1, r18;
        android.service.wallpaper.IWallpaperConnection r2;
        android.os.IBinder r3;
        int i0, i1, i2, i3, $i4, $i5;
        boolean z0;
        android.graphics.Rect r4, $r5, $r9;
        java.util.concurrent.atomic.AtomicBoolean $r6;
        com.android.internal.os.HandlerCaller $r7, $r16, $r17;
        android.os.Looper $r8;
        java.lang.Object $r10;
        java.lang.StringBuilder $r11;
        java.lang.IllegalArgumentException $r14;
        java.lang.String $r15;
        android.hardware.display.DisplayManager r19;
        android.view.Display r20;
        android.os.Message r21;

        r0 := @this: android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper;

        r18 := @parameter0: android.service.wallpaper.WallpaperService;

        r1 := @parameter1: android.service.wallpaper.WallpaperService;

        r2 := @parameter2: android.service.wallpaper.IWallpaperConnection;

        r3 := @parameter3: android.os.IBinder;

        i0 := @parameter4: int;

        z0 := @parameter5: boolean;

        i1 := @parameter6: int;

        i2 := @parameter7: int;

        r4 := @parameter8: android.graphics.Rect;

        i3 := @parameter9: int;

        r0.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: android.service.wallpaper.WallpaperService this$0> = r18;

        specialinvoke r0.<android.service.wallpaper.IWallpaperEngine$Stub: void <init>()>();

        $r5 = new android.graphics.Rect;

        specialinvoke $r5.<android.graphics.Rect: void <init>()>();

        r0.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: android.graphics.Rect mDisplayPadding> = $r5;

        $r6 = new java.util.concurrent.atomic.AtomicBoolean;

        specialinvoke $r6.<java.util.concurrent.atomic.AtomicBoolean: void <init>()>();

        r0.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: java.util.concurrent.atomic.AtomicBoolean mDetached> = $r6;

        $r7 = new com.android.internal.os.HandlerCaller;

        $r8 = virtualinvoke r1.<android.service.wallpaper.WallpaperService: android.os.Looper getMainLooper()>();

        specialinvoke $r7.<com.android.internal.os.HandlerCaller: void <init>(android.content.Context,android.os.Looper,com.android.internal.os.HandlerCaller$Callback,boolean)>(r1, $r8, r0, 1);

        r0.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: com.android.internal.os.HandlerCaller mCaller> = $r7;

        r0.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: android.service.wallpaper.IWallpaperConnection mConnection> = r2;

        r0.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: android.os.IBinder mWindowToken> = r3;

        r0.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: int mWindowType> = i0;

        r0.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: boolean mIsPreview> = z0;

        r0.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: int mReqWidth> = i1;

        r0.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: int mReqHeight> = i2;

        $r9 = r0.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: android.graphics.Rect mDisplayPadding>;

        virtualinvoke $r9.<android.graphics.Rect: void set(android.graphics.Rect)>(r4);

        r0.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: int mDisplayId> = i3;

        $r10 = virtualinvoke r18.<android.service.wallpaper.WallpaperService: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/hardware/display/DisplayManager;");

        r19 = (android.hardware.display.DisplayManager) $r10;

        r0.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: android.hardware.display.DisplayManager mDisplayManager> = r19;

        $i4 = r0.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: int mDisplayId>;

        r20 = virtualinvoke r19.<android.hardware.display.DisplayManager: android.view.Display getDisplay(int)>($i4);

        r0.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: android.view.Display mDisplay> = r20;

        if r20 == null goto label1;

        $r16 = r0.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: com.android.internal.os.HandlerCaller mCaller>;

        r21 = virtualinvoke $r16.<com.android.internal.os.HandlerCaller: android.os.Message obtainMessage(int)>(10);

        $r17 = r0.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: com.android.internal.os.HandlerCaller mCaller>;

        virtualinvoke $r17.<com.android.internal.os.HandlerCaller: void sendMessage(android.os.Message)>(r21);

        return;

     label1:
        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot find display with id");

        $i5 = r0.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: int mDisplayId>;

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r14 = new java.lang.IllegalArgumentException;

        $r15 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r15);

        throw $r14;
    }

    static com.android.internal.os.HandlerCaller access$200(android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper)
    {
        android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper r0;
        com.android.internal.os.HandlerCaller $r1;

        r0 := @parameter0: android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper;

        $r1 = r0.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: com.android.internal.os.HandlerCaller mCaller>;

        return $r1;
    }

    private void doDetachEngine()
    {
        android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper r0;
        android.service.wallpaper.WallpaperService $r1;
        java.util.ArrayList $r2;
        android.service.wallpaper.WallpaperService$Engine $r3, $r4;

        r0 := @this: android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper;

        $r1 = r0.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: android.service.wallpaper.WallpaperService this$0>;

        $r2 = staticinvoke <android.service.wallpaper.WallpaperService: java.util.ArrayList access$400(android.service.wallpaper.WallpaperService)>($r1);

        $r3 = r0.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: android.service.wallpaper.WallpaperService$Engine mEngine>;

        virtualinvoke $r2.<java.util.ArrayList: boolean remove(java.lang.Object)>($r3);

        $r4 = r0.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: android.service.wallpaper.WallpaperService$Engine mEngine>;

        virtualinvoke $r4.<android.service.wallpaper.WallpaperService$Engine: void detach()>();

        return;
    }

    public void destroy()
    {
        android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper r0;
        android.os.Message r1;
        com.android.internal.os.HandlerCaller $r2, $r3;

        r0 := @this: android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper;

        $r2 = r0.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: com.android.internal.os.HandlerCaller mCaller>;

        r1 = virtualinvoke $r2.<com.android.internal.os.HandlerCaller: android.os.Message obtainMessage(int)>(20);

        $r3 = r0.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: com.android.internal.os.HandlerCaller mCaller>;

        virtualinvoke $r3.<com.android.internal.os.HandlerCaller: void sendMessage(android.os.Message)>(r1);

        return;
    }

    public void detach()
    {
        android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper r0;
        java.util.concurrent.atomic.AtomicBoolean $r1;

        r0 := @this: android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper;

        $r1 = r0.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: java.util.concurrent.atomic.AtomicBoolean mDetached>;

        virtualinvoke $r1.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(1);

        return;
    }

    public void dispatchPointer(android.view.MotionEvent)
    {
        android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper r0;
        android.view.MotionEvent r1;
        android.service.wallpaper.WallpaperService$Engine r2;

        r0 := @this: android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper;

        r1 := @parameter0: android.view.MotionEvent;

        r2 = r0.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: android.service.wallpaper.WallpaperService$Engine mEngine>;

        if r2 == null goto label1;

        staticinvoke <android.service.wallpaper.WallpaperService$Engine: void access$100(android.service.wallpaper.WallpaperService$Engine,android.view.MotionEvent)>(r2, r1);

        goto label2;

     label1:
        virtualinvoke r1.<android.view.MotionEvent: void recycle()>();

     label2:
        return;
    }

    public void dispatchWallpaperCommand(java.lang.String, int, int, int, android.os.Bundle)
    {
        android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper r0;
        java.lang.String r1;
        int i0, i1, i2;
        android.os.Bundle r2;
        android.service.wallpaper.WallpaperService$Engine r3;
        com.android.internal.view.BaseIWindow $r4;

        r0 := @this: android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        r2 := @parameter4: android.os.Bundle;

        r3 = r0.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: android.service.wallpaper.WallpaperService$Engine mEngine>;

        if r3 == null goto label1;

        $r4 = r3.<android.service.wallpaper.WallpaperService$Engine: com.android.internal.view.BaseIWindow mWindow>;

        virtualinvoke $r4.<com.android.internal.view.BaseIWindow: void dispatchWallpaperCommand(java.lang.String,int,int,int,android.os.Bundle,boolean)>(r1, i0, i1, i2, r2, 0);

     label1:
        return;
    }

    public void executeMessage(android.os.Message)
    {
        android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper r0;
        java.util.concurrent.atomic.AtomicBoolean $r1;
        boolean $z2, $z4, z5, z6, z7, z8;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i7, $i8, $i9, $i10, i13;
        android.service.wallpaper.WallpaperService$Engine $r2, $r3, $r6, $r7, $r8, $r10, $r11, $r12, $r14, $r15, $r16, $r21, $r22, $r33, r45, r46, r47;
        float $f0;
        android.app.WallpaperColors $r4;
        java.lang.Object $r5, $r13, $r17, $r19, r42;
        android.view.MotionEvent $r9, r41;
        java.lang.Long $r18;
        long $l6;
        android.graphics.Rect $r20;
        android.service.wallpaper.IWallpaperConnection $r23, r39;
        android.service.wallpaper.WallpaperService $r24, $r25, $r31;
        java.util.ArrayList $r26, $r32;
        java.lang.StringBuilder $r27;
        java.lang.String $r30;
        android.os.RemoteException $r34, $r36;
        java.lang.Throwable $r35;
        android.os.Message r37;
        android.service.wallpaper.WallpaperService$WallpaperCommand r44;

        r0 := @this: android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper;

        r37 := @parameter0: android.os.Message;

        $r1 = r0.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: java.util.concurrent.atomic.AtomicBoolean mDetached>;

        $z2 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicBoolean: boolean get()>();

        if $z2 == 0 goto label02;

        $r31 = r0.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: android.service.wallpaper.WallpaperService this$0>;

        $r32 = staticinvoke <android.service.wallpaper.WallpaperService: java.util.ArrayList access$400(android.service.wallpaper.WallpaperService)>($r31);

        $r33 = r0.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: android.service.wallpaper.WallpaperService$Engine mEngine>;

        $z4 = virtualinvoke $r32.<java.util.ArrayList: boolean contains(java.lang.Object)>($r33);

        if $z4 == 0 goto label01;

        specialinvoke r0.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: void doDetachEngine()>();

     label01:
        return;

     label02:
        i13 = r37.<android.os.Message: int what>;

        z5 = 0;

        lookupswitch(i13)
        {
            case 10: goto label34;
            case 20: goto label33;
            case 30: goto label32;
            case 40: goto label31;
            case 50: goto label29;
            case 10000: goto label28;
            case 10010: goto label26;
            case 10020: goto label25;
            case 10025: goto label24;
            case 10030: goto label21;
            case 10035: goto label20;
            case 10040: goto label09;
            case 10050: goto label05;
            case 10100: goto label04;
            default: goto label03;
        };

     label03:
        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown message type ");

        $i10 = r37.<android.os.Message: int what>;

        virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i10);

        $r30 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("WallpaperService", $r30);

        goto label37;

     label04:
        $r2 = r0.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: android.service.wallpaper.WallpaperService$Engine mEngine>;

        $i0 = r37.<android.os.Message: int arg1>;

        $f0 = staticinvoke <java.lang.Float: float intBitsToFloat(int)>($i0);

        virtualinvoke $r2.<android.service.wallpaper.WallpaperService$Engine: void setZoom(float)>($f0);

        goto label37;

     label05:
        r39 = r0.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: android.service.wallpaper.IWallpaperConnection mConnection>;

        if r39 != null goto label06;

        goto label37;

     label06:
        $r3 = r0.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: android.service.wallpaper.WallpaperService$Engine mEngine>;

        $r4 = virtualinvoke $r3.<android.service.wallpaper.WallpaperService$Engine: android.app.WallpaperColors onComputeColors()>();

        $i1 = r0.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: int mDisplayId>;

        interfaceinvoke r39.<android.service.wallpaper.IWallpaperConnection: void onWallpaperColorsChanged(android.app.WallpaperColors,int)>($r4, $i1);

     label07:
        goto label37;

     label08:
        $r36 := @caughtexception;

        goto label37;

     label09:
        z6 = 0;

        $r5 = r37.<android.os.Message: java.lang.Object obj>;

        r41 = (android.view.MotionEvent) $r5;

        $i2 = virtualinvoke r41.<android.view.MotionEvent: int getAction()>();

        if $i2 != 2 goto label18;

        $r7 = r0.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: android.service.wallpaper.WallpaperService$Engine mEngine>;

        r42 = $r7.<android.service.wallpaper.WallpaperService$Engine: java.lang.Object mLock>;

        entermonitor r42;

     label10:
        $r8 = r0.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: android.service.wallpaper.WallpaperService$Engine mEngine>;

        $r9 = $r8.<android.service.wallpaper.WallpaperService$Engine: android.view.MotionEvent mPendingMove>;

        if $r9 != r41 goto label12;

        $r10 = r0.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: android.service.wallpaper.WallpaperService$Engine mEngine>;

        $r10.<android.service.wallpaper.WallpaperService$Engine: android.view.MotionEvent mPendingMove> = null;

     label11:
        z6 = 0;

        goto label13;

     label12:
        z6 = 1;

     label13:
        exitmonitor r42;

     label14:
        goto label18;

     label15:
        $r35 := @caughtexception;

     label16:
        exitmonitor r42;

     label17:
        throw $r35;

     label18:
        if z6 != 0 goto label19;

        $r6 = r0.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: android.service.wallpaper.WallpaperService$Engine mEngine>;

        virtualinvoke $r6.<android.service.wallpaper.WallpaperService$Engine: void onTouchEvent(android.view.MotionEvent)>(r41);

     label19:
        virtualinvoke r41.<android.view.MotionEvent: void recycle()>();

        goto label37;

     label20:
        goto label37;

     label21:
        $i3 = r37.<android.os.Message: int arg1>;

        if $i3 == 0 goto label22;

        z7 = 1;

        goto label23;

     label22:
        z7 = 0;

     label23:
        $r11 = r0.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: android.service.wallpaper.WallpaperService$Engine mEngine>;

        virtualinvoke $r11.<android.service.wallpaper.WallpaperService$Engine: void updateSurface(boolean,boolean,boolean)>(1, 0, z7);

        $r12 = r0.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: android.service.wallpaper.WallpaperService$Engine mEngine>;

        virtualinvoke $r12.<android.service.wallpaper.WallpaperService$Engine: void doOffsetsChanged(boolean)>(1);

        goto label37;

     label24:
        $r13 = r37.<android.os.Message: java.lang.Object obj>;

        r44 = (android.service.wallpaper.WallpaperService$WallpaperCommand) $r13;

        $r14 = r0.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: android.service.wallpaper.WallpaperService$Engine mEngine>;

        virtualinvoke $r14.<android.service.wallpaper.WallpaperService$Engine: void doCommand(android.service.wallpaper.WallpaperService$WallpaperCommand)>(r44);

        goto label37;

     label25:
        $r15 = r0.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: android.service.wallpaper.WallpaperService$Engine mEngine>;

        virtualinvoke $r15.<android.service.wallpaper.WallpaperService$Engine: void doOffsetsChanged(boolean)>(1);

        goto label37;

     label26:
        r45 = r0.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: android.service.wallpaper.WallpaperService$Engine mEngine>;

        $i4 = r37.<android.os.Message: int arg1>;

        if $i4 == 0 goto label27;

        z5 = 1;

     label27:
        virtualinvoke r45.<android.service.wallpaper.WallpaperService$Engine: void doVisibilityChanged(boolean)>(z5);

        goto label37;

     label28:
        $r16 = r0.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: android.service.wallpaper.WallpaperService$Engine mEngine>;

        virtualinvoke $r16.<android.service.wallpaper.WallpaperService$Engine: void updateSurface(boolean,boolean,boolean)>(1, 0, 0);

        goto label37;

     label29:
        r46 = r0.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: android.service.wallpaper.WallpaperService$Engine mEngine>;

        z8 = 0;

        $i5 = r37.<android.os.Message: int arg1>;

        if $i5 == 0 goto label30;

        z8 = 1;

     label30:
        $r17 = r37.<android.os.Message: java.lang.Object obj>;

        $r18 = (java.lang.Long) $r17;

        $l6 = virtualinvoke $r18.<java.lang.Long: long longValue()>();

        virtualinvoke r46.<android.service.wallpaper.WallpaperService$Engine: void doAmbientModeChanged(boolean,long)>(z8, $l6);

        return;

     label31:
        $r21 = r0.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: android.service.wallpaper.WallpaperService$Engine mEngine>;

        $r19 = r37.<android.os.Message: java.lang.Object obj>;

        $r20 = (android.graphics.Rect) $r19;

        virtualinvoke $r21.<android.service.wallpaper.WallpaperService$Engine: void doDisplayPaddingChanged(android.graphics.Rect)>($r20);

        return;

     label32:
        $r22 = r0.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: android.service.wallpaper.WallpaperService$Engine mEngine>;

        $i8 = r37.<android.os.Message: int arg1>;

        $i7 = r37.<android.os.Message: int arg2>;

        virtualinvoke $r22.<android.service.wallpaper.WallpaperService$Engine: void doDesiredSizeChanged(int,int)>($i8, $i7);

        return;

     label33:
        specialinvoke r0.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: void doDetachEngine()>();

        return;

     label34:
        $r23 = r0.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: android.service.wallpaper.IWallpaperConnection mConnection>;

        $i9 = r0.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: int mDisplayId>;

        interfaceinvoke $r23.<android.service.wallpaper.IWallpaperConnection: void attachEngine(android.service.wallpaper.IWallpaperEngine,int)>(r0, $i9);

     label35:
        $r24 = r0.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: android.service.wallpaper.WallpaperService this$0>;

        r47 = virtualinvoke $r24.<android.service.wallpaper.WallpaperService: android.service.wallpaper.WallpaperService$Engine onCreateEngine()>();

        r0.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: android.service.wallpaper.WallpaperService$Engine mEngine> = r47;

        $r25 = r0.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: android.service.wallpaper.WallpaperService this$0>;

        $r26 = staticinvoke <android.service.wallpaper.WallpaperService: java.util.ArrayList access$400(android.service.wallpaper.WallpaperService)>($r25);

        virtualinvoke $r26.<java.util.ArrayList: boolean add(java.lang.Object)>(r47);

        virtualinvoke r47.<android.service.wallpaper.WallpaperService$Engine: void attach(android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper)>(r0);

        return;

     label36:
        $r34 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("WallpaperService", "Wallpaper host disappeared", $r34);

        return;

     label37:
        return;

        catch android.os.RemoteException from label06 to label07 with label08;
        catch java.lang.Throwable from label10 to label11 with label15;
        catch java.lang.Throwable from label13 to label14 with label15;
        catch java.lang.Throwable from label16 to label17 with label15;
        catch android.os.RemoteException from label34 to label35 with label36;
    }

    public void reportShown()
    {
        android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper r0;
        boolean $z0;
        android.service.wallpaper.IWallpaperConnection $r2;
        android.os.RemoteException $r3;

        r0 := @this: android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper;

        $z0 = r0.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: boolean mShownReported>;

        if $z0 != 0 goto label4;

        r0.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: boolean mShownReported> = 1;

     label1:
        $r2 = r0.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: android.service.wallpaper.IWallpaperConnection mConnection>;

        interfaceinvoke $r2.<android.service.wallpaper.IWallpaperConnection: void engineShown(android.service.wallpaper.IWallpaperEngine)>(r0);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("WallpaperService", "Wallpaper host disappeared", $r3);

        return;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void requestWallpaperColors()
    {
        android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper r0;
        android.os.Message r1;
        com.android.internal.os.HandlerCaller $r2, $r3;

        r0 := @this: android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper;

        $r2 = r0.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: com.android.internal.os.HandlerCaller mCaller>;

        r1 = virtualinvoke $r2.<com.android.internal.os.HandlerCaller: android.os.Message obtainMessage(int)>(10050);

        $r3 = r0.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: com.android.internal.os.HandlerCaller mCaller>;

        virtualinvoke $r3.<com.android.internal.os.HandlerCaller: void sendMessage(android.os.Message)>(r1);

        return;
    }

    public void setDesiredSize(int, int)
    {
        android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper r0;
        int i0, i1;
        android.os.Message r1;
        com.android.internal.os.HandlerCaller $r2, $r3;

        r0 := @this: android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r2 = r0.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: com.android.internal.os.HandlerCaller mCaller>;

        r1 = virtualinvoke $r2.<com.android.internal.os.HandlerCaller: android.os.Message obtainMessageII(int,int,int)>(30, i0, i1);

        $r3 = r0.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: com.android.internal.os.HandlerCaller mCaller>;

        virtualinvoke $r3.<com.android.internal.os.HandlerCaller: void sendMessage(android.os.Message)>(r1);

        return;
    }

    public void setDisplayPadding(android.graphics.Rect)
    {
        android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper r0;
        com.android.internal.os.HandlerCaller $r1, $r2;
        android.graphics.Rect r3;
        android.os.Message r4;

        r0 := @this: android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper;

        r3 := @parameter0: android.graphics.Rect;

        $r1 = r0.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: com.android.internal.os.HandlerCaller mCaller>;

        r4 = virtualinvoke $r1.<com.android.internal.os.HandlerCaller: android.os.Message obtainMessageO(int,java.lang.Object)>(40, r3);

        $r2 = r0.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: com.android.internal.os.HandlerCaller mCaller>;

        virtualinvoke $r2.<com.android.internal.os.HandlerCaller: void sendMessage(android.os.Message)>(r4);

        return;
    }

    public void setInAmbientMode(boolean, long) throws android.os.RemoteException
    {
        android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper r0;
        boolean z0;
        long l0;
        android.os.Message r1;
        com.android.internal.os.HandlerCaller $r2, $r4;
        java.lang.Long $r3;
        int i1;

        r0 := @this: android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper;

        z0 := @parameter0: boolean;

        l0 := @parameter1: long;

        $r2 = r0.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: com.android.internal.os.HandlerCaller mCaller>;

        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        i1 = (int) z0;

        r1 = virtualinvoke $r2.<com.android.internal.os.HandlerCaller: android.os.Message obtainMessageIO(int,int,java.lang.Object)>(50, i1, $r3);

        $r4 = r0.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: com.android.internal.os.HandlerCaller mCaller>;

        virtualinvoke $r4.<com.android.internal.os.HandlerCaller: void sendMessage(android.os.Message)>(r1);

        return;
    }

    public void setVisibility(boolean)
    {
        android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper r0;
        boolean z0;
        com.android.internal.os.HandlerCaller $r1, r2;
        android.os.Message r3;
        int i0;

        r0 := @this: android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper;

        z0 := @parameter0: boolean;

        r2 = r0.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: com.android.internal.os.HandlerCaller mCaller>;

        i0 = (int) z0;

        r3 = virtualinvoke r2.<com.android.internal.os.HandlerCaller: android.os.Message obtainMessageI(int,int)>(10010, i0);

        $r1 = r0.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: com.android.internal.os.HandlerCaller mCaller>;

        virtualinvoke $r1.<com.android.internal.os.HandlerCaller: void sendMessage(android.os.Message)>(r3);

        return;
    }

    public void setZoomOut(float)
    {
        android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper r0;
        float f0;
        android.os.Message r1;
        com.android.internal.os.HandlerCaller $r2, $r3;
        int $i0;

        r0 := @this: android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper;

        f0 := @parameter0: float;

        $r2 = r0.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: com.android.internal.os.HandlerCaller mCaller>;

        $i0 = staticinvoke <java.lang.Float: int floatToIntBits(float)>(f0);

        r1 = virtualinvoke $r2.<com.android.internal.os.HandlerCaller: android.os.Message obtainMessageI(int,int)>(10100, $i0);

        $r3 = r0.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: com.android.internal.os.HandlerCaller mCaller>;

        virtualinvoke $r3.<com.android.internal.os.HandlerCaller: void sendMessage(android.os.Message)>(r1);

        return;
    }
}
