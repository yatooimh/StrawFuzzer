public abstract class android.service.watchdog.ExplicitHealthCheckService extends android.app.Service
{
    public static final java.lang.String BIND_PERMISSION;
    public static final java.lang.String EXTRA_HEALTH_CHECK_PASSED_PACKAGE;
    public static final java.lang.String EXTRA_REQUESTED_PACKAGES;
    public static final java.lang.String EXTRA_SUPPORTED_PACKAGES;
    public static final java.lang.String SERVICE_INTERFACE;
    private static final java.lang.String TAG;
    private android.os.RemoteCallback mCallback;
    private final android.os.Handler mHandler;
    private final android.service.watchdog.ExplicitHealthCheckService$ExplicitHealthCheckServiceWrapper mWrapper;

    public void <init>()
    {
        android.service.watchdog.ExplicitHealthCheckService r0;
        android.service.watchdog.ExplicitHealthCheckService$ExplicitHealthCheckServiceWrapper $r1;
        android.os.Handler $r2;
        android.os.Looper $r3;

        r0 := @this: android.service.watchdog.ExplicitHealthCheckService;

        specialinvoke r0.<android.app.Service: void <init>()>();

        $r1 = new android.service.watchdog.ExplicitHealthCheckService$ExplicitHealthCheckServiceWrapper;

        specialinvoke $r1.<android.service.watchdog.ExplicitHealthCheckService$ExplicitHealthCheckServiceWrapper: void <init>(android.service.watchdog.ExplicitHealthCheckService,android.service.watchdog.ExplicitHealthCheckService$1)>(r0, null);

        r0.<android.service.watchdog.ExplicitHealthCheckService: android.service.watchdog.ExplicitHealthCheckService$ExplicitHealthCheckServiceWrapper mWrapper> = $r1;

        $r2 = new android.os.Handler;

        $r3 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        specialinvoke $r2.<android.os.Handler: void <init>(android.os.Looper,android.os.Handler$Callback,boolean)>($r3, null, 1);

        r0.<android.service.watchdog.ExplicitHealthCheckService: android.os.Handler mHandler> = $r2;

        return;
    }

    static android.os.Handler access$200(android.service.watchdog.ExplicitHealthCheckService)
    {
        android.service.watchdog.ExplicitHealthCheckService r0;
        android.os.Handler $r1;

        r0 := @parameter0: android.service.watchdog.ExplicitHealthCheckService;

        $r1 = r0.<android.service.watchdog.ExplicitHealthCheckService: android.os.Handler mHandler>;

        return $r1;
    }

    static android.os.RemoteCallback access$302(android.service.watchdog.ExplicitHealthCheckService, android.os.RemoteCallback)
    {
        android.service.watchdog.ExplicitHealthCheckService r0;
        android.os.RemoteCallback r1;

        r0 := @parameter0: android.service.watchdog.ExplicitHealthCheckService;

        r1 := @parameter1: android.os.RemoteCallback;

        r0.<android.service.watchdog.ExplicitHealthCheckService: android.os.RemoteCallback mCallback> = r1;

        return r1;
    }

    public void lambda$notifyHealthCheckPassed$0$ExplicitHealthCheckService(java.lang.String)
    {
        android.service.watchdog.ExplicitHealthCheckService r0;
        java.lang.String r1, $r6;
        android.os.RemoteCallback $r2, $r9;
        java.lang.StringBuilder $r3;
        android.os.Bundle $r8;

        r0 := @this: android.service.watchdog.ExplicitHealthCheckService;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<android.service.watchdog.ExplicitHealthCheckService: android.os.RemoteCallback mCallback>;

        if $r2 == null goto label1;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, "Package passing explicit health check must be non-null");

        $r8 = new android.os.Bundle;

        specialinvoke $r8.<android.os.Bundle: void <init>()>();

        virtualinvoke $r8.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("android.service.watchdog.extra.health_check_passed_package", r1);

        $r9 = r0.<android.service.watchdog.ExplicitHealthCheckService: android.os.RemoteCallback mCallback>;

        virtualinvoke $r9.<android.os.RemoteCallback: void sendResult(android.os.Bundle)>($r8);

        goto label2;

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("System missed explicit health check result for ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int wtf(java.lang.String,java.lang.String)>("ExplicitHealthCheckService", $r6);

     label2:
        return;
    }

    public final void notifyHealthCheckPassed(java.lang.String)
    {
        android.service.watchdog.ExplicitHealthCheckService r0;
        java.lang.String r1;
        android.service.watchdog._$$Lambda$ExplicitHealthCheckService$ulagkAZ2bM7_LW9T7PSTxSLQfBE $r2;
        android.os.Handler $r3;

        r0 := @this: android.service.watchdog.ExplicitHealthCheckService;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<android.service.watchdog.ExplicitHealthCheckService: android.os.Handler mHandler>;

        $r2 = new android.service.watchdog._$$Lambda$ExplicitHealthCheckService$ulagkAZ2bM7_LW9T7PSTxSLQfBE;

        specialinvoke $r2.<android.service.watchdog._$$Lambda$ExplicitHealthCheckService$ulagkAZ2bM7_LW9T7PSTxSLQfBE: void <init>(android.service.watchdog.ExplicitHealthCheckService,java.lang.String)>(r0, r1);

        virtualinvoke $r3.<android.os.Handler: boolean post(java.lang.Runnable)>($r2);

        return;
    }

    public final android.os.IBinder onBind(android.content.Intent)
    {
        android.service.watchdog.ExplicitHealthCheckService r0;
        android.content.Intent r1;
        android.service.watchdog.ExplicitHealthCheckService$ExplicitHealthCheckServiceWrapper $r2;

        r0 := @this: android.service.watchdog.ExplicitHealthCheckService;

        r1 := @parameter0: android.content.Intent;

        $r2 = r0.<android.service.watchdog.ExplicitHealthCheckService: android.service.watchdog.ExplicitHealthCheckService$ExplicitHealthCheckServiceWrapper mWrapper>;

        return $r2;
    }

    public abstract void onCancelHealthCheck(java.lang.String);

    public abstract java.util.List onGetRequestedPackages();

    public abstract java.util.List onGetSupportedPackages();

    public abstract void onRequestHealthCheck(java.lang.String);

    public void setCallback(android.os.RemoteCallback)
    {
        android.service.watchdog.ExplicitHealthCheckService r0;
        android.os.RemoteCallback r1;

        r0 := @this: android.service.watchdog.ExplicitHealthCheckService;

        r1 := @parameter0: android.os.RemoteCallback;

        r0.<android.service.watchdog.ExplicitHealthCheckService: android.os.RemoteCallback mCallback> = r1;

        return;
    }

    public static void <clinit>()
    {
        <android.service.watchdog.ExplicitHealthCheckService: java.lang.String TAG> = "ExplicitHealthCheckService";

        <android.service.watchdog.ExplicitHealthCheckService: java.lang.String SERVICE_INTERFACE> = "android.service.watchdog.ExplicitHealthCheckService";

        <android.service.watchdog.ExplicitHealthCheckService: java.lang.String EXTRA_SUPPORTED_PACKAGES> = "android.service.watchdog.extra.supported_packages";

        <android.service.watchdog.ExplicitHealthCheckService: java.lang.String EXTRA_REQUESTED_PACKAGES> = "android.service.watchdog.extra.requested_packages";

        <android.service.watchdog.ExplicitHealthCheckService: java.lang.String EXTRA_HEALTH_CHECK_PASSED_PACKAGE> = "android.service.watchdog.extra.health_check_passed_package";

        <android.service.watchdog.ExplicitHealthCheckService: java.lang.String BIND_PERMISSION> = "android.permission.BIND_EXPLICIT_HEALTH_CHECK_SERVICE";

        return;
    }
}
