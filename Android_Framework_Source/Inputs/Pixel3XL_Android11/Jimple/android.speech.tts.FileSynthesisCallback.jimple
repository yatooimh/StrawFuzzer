class android.speech.tts.FileSynthesisCallback extends android.speech.tts.AbstractSynthesisCallback
{
    private static final boolean DBG;
    private static final int MAX_AUDIO_BUFFER_SIZE;
    private static final java.lang.String TAG;
    private static final short WAV_FORMAT_PCM;
    private static final int WAV_HEADER_LENGTH;
    private int mAudioFormat;
    private int mChannelCount;
    private final android.speech.tts.TextToSpeechService$UtteranceProgressDispatcher mDispatcher;
    private boolean mDone;
    private java.nio.channels.FileChannel mFileChannel;
    private int mSampleRateInHz;
    private boolean mStarted;
    private final java.lang.Object mStateLock;
    protected int mStatusCode;

    void <init>(java.nio.channels.FileChannel, android.speech.tts.TextToSpeechService$UtteranceProgressDispatcher, boolean)
    {
        android.speech.tts.FileSynthesisCallback r0;
        java.nio.channels.FileChannel r1;
        android.speech.tts.TextToSpeechService$UtteranceProgressDispatcher r2;
        boolean z0;
        java.lang.Object $r3;

        r0 := @this: android.speech.tts.FileSynthesisCallback;

        r1 := @parameter0: java.nio.channels.FileChannel;

        r2 := @parameter1: android.speech.tts.TextToSpeechService$UtteranceProgressDispatcher;

        z0 := @parameter2: boolean;

        specialinvoke r0.<android.speech.tts.AbstractSynthesisCallback: void <init>(boolean)>(z0);

        $r3 = new java.lang.Object;

        specialinvoke $r3.<java.lang.Object: void <init>()>();

        r0.<android.speech.tts.FileSynthesisCallback: java.lang.Object mStateLock> = $r3;

        r0.<android.speech.tts.FileSynthesisCallback: boolean mStarted> = 0;

        r0.<android.speech.tts.FileSynthesisCallback: boolean mDone> = 0;

        r0.<android.speech.tts.FileSynthesisCallback: java.nio.channels.FileChannel mFileChannel> = r1;

        r0.<android.speech.tts.FileSynthesisCallback: android.speech.tts.TextToSpeechService$UtteranceProgressDispatcher mDispatcher> = r2;

        r0.<android.speech.tts.FileSynthesisCallback: int mStatusCode> = 0;

        return;
    }

    private void cleanUp()
    {
        android.speech.tts.FileSynthesisCallback r0;

        r0 := @this: android.speech.tts.FileSynthesisCallback;

        specialinvoke r0.<android.speech.tts.FileSynthesisCallback: void closeFile()>();

        return;
    }

    private void closeFile()
    {
        android.speech.tts.FileSynthesisCallback r0;

        r0 := @this: android.speech.tts.FileSynthesisCallback;

        r0.<android.speech.tts.FileSynthesisCallback: java.nio.channels.FileChannel mFileChannel> = null;

        return;
    }

    private java.nio.ByteBuffer makeWavHeader(int, int, int, int)
    {
        android.speech.tts.FileSynthesisCallback r0;
        int i0, i1, i2, $i5, $i6, $i7, $i8, $i10, $i11, i12, i13;
        short s3, s4, $s9;
        java.nio.ByteBuffer r1;
        byte[] $r2, $r5, $r8, $r10, $r19;
        java.nio.ByteOrder $r3;

        r0 := @this: android.speech.tts.FileSynthesisCallback;

        i0 := @parameter0: int;

        i12 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i13 = staticinvoke <android.media.AudioFormat: int getBytesPerSample(int)>(i12);

        $i5 = i13 * i1;

        s3 = (short) $i5;

        $i6 = i13 * 8;

        s4 = (short) $i6;

        $r2 = newarray (byte)[44];

        r1 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>($r2);

        $r3 = <java.nio.ByteOrder: java.nio.ByteOrder LITTLE_ENDIAN>;

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer order(java.nio.ByteOrder)>($r3);

        $r5 = newarray (byte)[4];

        $r5[0] = 82;

        $r5[1] = 73;

        $r5[2] = 70;

        $r5[3] = 70;

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[])>($r5);

        $i7 = i2 + 44;

        $i8 = $i7 - 8;

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer putInt(int)>($i8);

        $r8 = newarray (byte)[4];

        $r8[0] = 87;

        $r8[1] = 65;

        $r8[2] = 86;

        $r8[3] = 69;

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[])>($r8);

        $r10 = newarray (byte)[4];

        $r10[0] = 102;

        $r10[1] = 109;

        $r10[2] = 116;

        $r10[3] = 32;

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[])>($r10);

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer putInt(int)>(16);

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer putShort(short)>(1);

        $s9 = (short) i1;

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer putShort(short)>($s9);

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer putInt(int)>(i0);

        $i10 = i0 * i13;

        $i11 = $i10 * i1;

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer putInt(int)>($i11);

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer putShort(short)>(s3);

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer putShort(short)>(s4);

        $r19 = newarray (byte)[4];

        $r19[0] = 100;

        $r19[1] = 97;

        $r19[2] = 116;

        $r19[3] = 97;

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[])>($r19);

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer putInt(int)>(i2);

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.Buffer flip()>();

        return r1;
    }

    public int audioAvailable(byte[], int, int)
    {
        android.speech.tts.FileSynthesisCallback r0;
        int i0, $i1, $i2, i7, i8;
        java.nio.channels.FileChannel $r1, r9;
        boolean $z0;
        android.speech.tts.TextToSpeechService$UtteranceProgressDispatcher $r2;
        java.nio.ByteBuffer $r3;
        java.lang.Throwable $r4, $r5, $r6;
        byte[] r7, r10;
        java.lang.Object r8, r12;

        r0 := @this: android.speech.tts.FileSynthesisCallback;

        r7 := @parameter0: byte[];

        i7 := @parameter1: int;

        i0 := @parameter2: int;

        r8 = r0.<android.speech.tts.FileSynthesisCallback: java.lang.Object mStateLock>;

        entermonitor r8;

     label01:
        $i1 = r0.<android.speech.tts.FileSynthesisCallback: int mStatusCode>;

        if $i1 != -2 goto label03;

        i8 = virtualinvoke r0.<android.speech.tts.FileSynthesisCallback: int errorCodeOnStop()>();

        exitmonitor r8;

     label02:
        return i8;

     label03:
        $i2 = r0.<android.speech.tts.FileSynthesisCallback: int mStatusCode>;

        if $i2 == 0 goto label05;

        exitmonitor r8;

     label04:
        return -1;

     label05:
        $r1 = r0.<android.speech.tts.FileSynthesisCallback: java.nio.channels.FileChannel mFileChannel>;

        if $r1 != null goto label07;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("FileSynthesisRequest", "File not open");

        r0.<android.speech.tts.FileSynthesisCallback: int mStatusCode> = -5;

        exitmonitor r8;

     label06:
        return -1;

     label07:
        $z0 = r0.<android.speech.tts.FileSynthesisCallback: boolean mStarted>;

        if $z0 != 0 goto label09;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("FileSynthesisRequest", "Start method was not called");

        exitmonitor r8;

     label08:
        return -1;

     label09:
        r9 = r0.<android.speech.tts.FileSynthesisCallback: java.nio.channels.FileChannel mFileChannel>;

        exitmonitor r8;

     label10:
        r10 = newarray (byte)[i0];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r7, i7, r10, 0, i0);

        $r2 = r0.<android.speech.tts.FileSynthesisCallback: android.speech.tts.TextToSpeechService$UtteranceProgressDispatcher mDispatcher>;

        interfaceinvoke $r2.<android.speech.tts.TextToSpeechService$UtteranceProgressDispatcher: void dispatchOnAudioAvailable(byte[])>(r10);

     label11:
        $r3 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[],int,int)>(r7, i7, i0);

        virtualinvoke r9.<java.nio.channels.FileChannel: int write(java.nio.ByteBuffer)>($r3);

     label12:
        return 0;

     label13:
        $r5 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("FileSynthesisRequest", "Failed to write to output file descriptor", $r5);

        r12 = r0.<android.speech.tts.FileSynthesisCallback: java.lang.Object mStateLock>;

        entermonitor r12;

     label14:
        specialinvoke r0.<android.speech.tts.FileSynthesisCallback: void cleanUp()>();

        r0.<android.speech.tts.FileSynthesisCallback: int mStatusCode> = -5;

        exitmonitor r12;

     label15:
        return -1;

     label16:
        $r6 := @caughtexception;

     label17:
        exitmonitor r12;

     label18:
        throw $r6;

     label19:
        $r4 := @caughtexception;

     label20:
        exitmonitor r8;

     label21:
        throw $r4;

        catch java.lang.Throwable from label01 to label02 with label19;
        catch java.lang.Throwable from label03 to label04 with label19;
        catch java.lang.Throwable from label05 to label06 with label19;
        catch java.lang.Throwable from label07 to label08 with label19;
        catch java.lang.Throwable from label09 to label10 with label19;
        catch java.io.IOException from label11 to label12 with label13;
        catch java.lang.Throwable from label14 to label15 with label16;
        catch java.lang.Throwable from label17 to label18 with label16;
        catch java.lang.Throwable from label20 to label21 with label19;
    }

    public int done()
    {
        android.speech.tts.FileSynthesisCallback r0;
        int i0, i1, i2, $i3, $i4, $i9, $i10, i13, i14;
        boolean $z0;
        java.nio.channels.FileChannel $r1, r11;
        long $l5, $l6;
        java.nio.ByteBuffer $r3;
        android.speech.tts.TextToSpeechService$UtteranceProgressDispatcher $r4, $r5;
        java.lang.Throwable $r6, $r7, $r8, $r9;
        java.lang.Object r10, r12, r15;

        r0 := @this: android.speech.tts.FileSynthesisCallback;

        r10 = r0.<android.speech.tts.FileSynthesisCallback: java.lang.Object mStateLock>;

        entermonitor r10;

     label01:
        $z0 = r0.<android.speech.tts.FileSynthesisCallback: boolean mDone>;

        if $z0 == 0 goto label03;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("FileSynthesisRequest", "Duplicate call to done()");

        exitmonitor r10;

     label02:
        return -1;

     label03:
        $i3 = r0.<android.speech.tts.FileSynthesisCallback: int mStatusCode>;

        if $i3 != -2 goto label05;

        i13 = virtualinvoke r0.<android.speech.tts.FileSynthesisCallback: int errorCodeOnStop()>();

        exitmonitor r10;

     label04:
        return i13;

     label05:
        $i4 = r0.<android.speech.tts.FileSynthesisCallback: int mStatusCode>;

        if $i4 == 0 goto label07;

        $i9 = r0.<android.speech.tts.FileSynthesisCallback: int mStatusCode>;

        if $i9 == -2 goto label07;

        $r5 = r0.<android.speech.tts.FileSynthesisCallback: android.speech.tts.TextToSpeechService$UtteranceProgressDispatcher mDispatcher>;

        $i10 = r0.<android.speech.tts.FileSynthesisCallback: int mStatusCode>;

        interfaceinvoke $r5.<android.speech.tts.TextToSpeechService$UtteranceProgressDispatcher: void dispatchOnError(int)>($i10);

        exitmonitor r10;

     label06:
        return -1;

     label07:
        $r1 = r0.<android.speech.tts.FileSynthesisCallback: java.nio.channels.FileChannel mFileChannel>;

        if $r1 != null goto label09;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("FileSynthesisRequest", "File not open");

        exitmonitor r10;

     label08:
        return -1;

     label09:
        r0.<android.speech.tts.FileSynthesisCallback: boolean mDone> = 1;

        r11 = r0.<android.speech.tts.FileSynthesisCallback: java.nio.channels.FileChannel mFileChannel>;

        i14 = r0.<android.speech.tts.FileSynthesisCallback: int mSampleRateInHz>;

        i0 = r0.<android.speech.tts.FileSynthesisCallback: int mAudioFormat>;

        i1 = r0.<android.speech.tts.FileSynthesisCallback: int mChannelCount>;

        exitmonitor r10;

     label10:
        virtualinvoke r11.<java.nio.channels.FileChannel: java.nio.channels.FileChannel position(long)>(0L);

        $l5 = virtualinvoke r11.<java.nio.channels.FileChannel: long size()>();

        $l6 = $l5 - 44L;

        i2 = (int) $l6;

     label11:
        $r3 = specialinvoke r0.<android.speech.tts.FileSynthesisCallback: java.nio.ByteBuffer makeWavHeader(int,int,int,int)>(i14, i0, i1, i2);

        virtualinvoke r11.<java.nio.channels.FileChannel: int write(java.nio.ByteBuffer)>($r3);

        r12 = r0.<android.speech.tts.FileSynthesisCallback: java.lang.Object mStateLock>;

        entermonitor r12;

     label12:
        specialinvoke r0.<android.speech.tts.FileSynthesisCallback: void closeFile()>();

        $r4 = r0.<android.speech.tts.FileSynthesisCallback: android.speech.tts.TextToSpeechService$UtteranceProgressDispatcher mDispatcher>;

        interfaceinvoke $r4.<android.speech.tts.TextToSpeechService$UtteranceProgressDispatcher: void dispatchOnSuccess()>();

        exitmonitor r12;

     label13:
        return 0;

     label14:
        $r6 := @caughtexception;

     label15:
        exitmonitor r12;

     label16:
        throw $r6;

     label17:
        $r7 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("FileSynthesisRequest", "Failed to write to output file descriptor", $r7);

        r15 = r0.<android.speech.tts.FileSynthesisCallback: java.lang.Object mStateLock>;

        entermonitor r15;

     label18:
        specialinvoke r0.<android.speech.tts.FileSynthesisCallback: void cleanUp()>();

        exitmonitor r15;

     label19:
        return -1;

     label20:
        $r8 := @caughtexception;

     label21:
        exitmonitor r15;

     label22:
        throw $r8;

     label23:
        $r9 := @caughtexception;

     label24:
        exitmonitor r10;

     label25:
        throw $r9;

        catch java.lang.Throwable from label01 to label02 with label23;
        catch java.lang.Throwable from label03 to label04 with label23;
        catch java.lang.Throwable from label05 to label06 with label23;
        catch java.lang.Throwable from label07 to label08 with label23;
        catch java.lang.Throwable from label09 to label10 with label23;
        catch java.io.IOException from label10 to label11 with label17;
        catch java.io.IOException from label11 to label12 with label17;
        catch java.lang.Throwable from label12 to label13 with label14;
        catch java.lang.Throwable from label15 to label16 with label14;
        catch java.io.IOException from label16 to label17 with label17;
        catch java.lang.Throwable from label18 to label19 with label20;
        catch java.lang.Throwable from label21 to label22 with label20;
        catch java.lang.Throwable from label24 to label25 with label23;
    }

    public void error()
    {
        android.speech.tts.FileSynthesisCallback r0;

        r0 := @this: android.speech.tts.FileSynthesisCallback;

        virtualinvoke r0.<android.speech.tts.FileSynthesisCallback: void error(int)>(-3);

        return;
    }

    public void error(int)
    {
        android.speech.tts.FileSynthesisCallback r0;
        int i0;
        java.lang.Object r1;
        boolean $z0;
        java.lang.Throwable $r3;

        r0 := @this: android.speech.tts.FileSynthesisCallback;

        i0 := @parameter0: int;

        r1 = r0.<android.speech.tts.FileSynthesisCallback: java.lang.Object mStateLock>;

        entermonitor r1;

     label1:
        $z0 = r0.<android.speech.tts.FileSynthesisCallback: boolean mDone>;

        if $z0 == 0 goto label3;

        exitmonitor r1;

     label2:
        return;

     label3:
        specialinvoke r0.<android.speech.tts.FileSynthesisCallback: void cleanUp()>();

        r0.<android.speech.tts.FileSynthesisCallback: int mStatusCode> = i0;

        exitmonitor r1;

     label4:
        return;

     label5:
        $r3 := @caughtexception;

     label6:
        exitmonitor r1;

     label7:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public int getMaxBufferSize()
    {
        android.speech.tts.FileSynthesisCallback r0;

        r0 := @this: android.speech.tts.FileSynthesisCallback;

        return 8192;
    }

    public boolean hasFinished()
    {
        android.speech.tts.FileSynthesisCallback r0;
        java.lang.Object r1;
        boolean z0;
        java.lang.Throwable $r3;

        r0 := @this: android.speech.tts.FileSynthesisCallback;

        r1 = r0.<android.speech.tts.FileSynthesisCallback: java.lang.Object mStateLock>;

        entermonitor r1;

     label1:
        z0 = r0.<android.speech.tts.FileSynthesisCallback: boolean mDone>;

        exitmonitor r1;

     label2:
        return z0;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public boolean hasStarted()
    {
        android.speech.tts.FileSynthesisCallback r0;
        java.lang.Object r1;
        boolean z0;
        java.lang.Throwable $r3;

        r0 := @this: android.speech.tts.FileSynthesisCallback;

        r1 = r0.<android.speech.tts.FileSynthesisCallback: java.lang.Object mStateLock>;

        entermonitor r1;

     label1:
        z0 = r0.<android.speech.tts.FileSynthesisCallback: boolean mStarted>;

        exitmonitor r1;

     label2:
        return z0;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void rangeStart(int, int, int)
    {
        android.speech.tts.FileSynthesisCallback r0;
        int i0, i1, i2;
        android.speech.tts.TextToSpeechService$UtteranceProgressDispatcher $r1;

        r0 := @this: android.speech.tts.FileSynthesisCallback;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $r1 = r0.<android.speech.tts.FileSynthesisCallback: android.speech.tts.TextToSpeechService$UtteranceProgressDispatcher mDispatcher>;

        interfaceinvoke $r1.<android.speech.tts.TextToSpeechService$UtteranceProgressDispatcher: void dispatchOnRangeStart(int,int,int)>(i0, i1, i2);

        return;
    }

    public int start(int, int, int)
    {
        android.speech.tts.FileSynthesisCallback r0;
        int i0, i1, $i2, i7, $i8, i9;
        boolean $z0;
        android.speech.tts.TextToSpeechService$UtteranceProgressDispatcher $r1, $r12;
        java.nio.ByteBuffer $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r7;
        java.lang.Throwable $r8, $r9, $r10;
        java.lang.Object r13, r16;
        java.nio.channels.FileChannel r14;

        r0 := @this: android.speech.tts.FileSynthesisCallback;

        i7 := @parameter0: int;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        if i0 == 3 goto label01;

        if i0 == 2 goto label01;

        if i0 == 4 goto label01;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Audio format encoding ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not supported. Please use one of AudioFormat.ENCODING_PCM_8BIT, AudioFormat.ENCODING_PCM_16BIT or AudioFormat.ENCODING_PCM_FLOAT");

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("FileSynthesisRequest", $r7);

     label01:
        $r12 = r0.<android.speech.tts.FileSynthesisCallback: android.speech.tts.TextToSpeechService$UtteranceProgressDispatcher mDispatcher>;

        interfaceinvoke $r12.<android.speech.tts.TextToSpeechService$UtteranceProgressDispatcher: void dispatchOnBeginSynthesis(int,int,int)>(i7, i0, i1);

        r13 = r0.<android.speech.tts.FileSynthesisCallback: java.lang.Object mStateLock>;

        entermonitor r13;

     label02:
        $i8 = r0.<android.speech.tts.FileSynthesisCallback: int mStatusCode>;

        if $i8 != -2 goto label04;

        i9 = virtualinvoke r0.<android.speech.tts.FileSynthesisCallback: int errorCodeOnStop()>();

        exitmonitor r13;

     label03:
        return i9;

     label04:
        $i2 = r0.<android.speech.tts.FileSynthesisCallback: int mStatusCode>;

        if $i2 == 0 goto label06;

        exitmonitor r13;

     label05:
        return -1;

     label06:
        $z0 = r0.<android.speech.tts.FileSynthesisCallback: boolean mStarted>;

        if $z0 == 0 goto label08;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("FileSynthesisRequest", "Start called twice");

        exitmonitor r13;

     label07:
        return -1;

     label08:
        r0.<android.speech.tts.FileSynthesisCallback: boolean mStarted> = 1;

        r0.<android.speech.tts.FileSynthesisCallback: int mSampleRateInHz> = i7;

        r0.<android.speech.tts.FileSynthesisCallback: int mAudioFormat> = i0;

        r0.<android.speech.tts.FileSynthesisCallback: int mChannelCount> = i1;

        $r1 = r0.<android.speech.tts.FileSynthesisCallback: android.speech.tts.TextToSpeechService$UtteranceProgressDispatcher mDispatcher>;

        interfaceinvoke $r1.<android.speech.tts.TextToSpeechService$UtteranceProgressDispatcher: void dispatchOnStart()>();

        r14 = r0.<android.speech.tts.FileSynthesisCallback: java.nio.channels.FileChannel mFileChannel>;

        exitmonitor r13;

     label09:
        $r2 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>(44);

        virtualinvoke r14.<java.nio.channels.FileChannel: int write(java.nio.ByteBuffer)>($r2);

     label10:
        return 0;

     label11:
        $r10 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("FileSynthesisRequest", "Failed to write wav header to output file descriptor", $r10);

        r16 = r0.<android.speech.tts.FileSynthesisCallback: java.lang.Object mStateLock>;

        entermonitor r16;

     label12:
        specialinvoke r0.<android.speech.tts.FileSynthesisCallback: void cleanUp()>();

        r0.<android.speech.tts.FileSynthesisCallback: int mStatusCode> = -5;

        exitmonitor r16;

     label13:
        return -1;

     label14:
        $r8 := @caughtexception;

     label15:
        exitmonitor r16;

     label16:
        throw $r8;

     label17:
        $r9 := @caughtexception;

     label18:
        exitmonitor r13;

     label19:
        throw $r9;

        catch java.lang.Throwable from label02 to label03 with label17;
        catch java.lang.Throwable from label04 to label05 with label17;
        catch java.lang.Throwable from label06 to label07 with label17;
        catch java.lang.Throwable from label08 to label09 with label17;
        catch java.io.IOException from label09 to label10 with label11;
        catch java.lang.Throwable from label12 to label13 with label14;
        catch java.lang.Throwable from label15 to label16 with label14;
        catch java.lang.Throwable from label18 to label19 with label17;
    }

    void stop()
    {
        android.speech.tts.FileSynthesisCallback r0;
        java.lang.Object r1;
        boolean $z0;
        int $i0;
        android.speech.tts.TextToSpeechService$UtteranceProgressDispatcher $r3;
        java.lang.Throwable $r4;

        r0 := @this: android.speech.tts.FileSynthesisCallback;

        r1 = r0.<android.speech.tts.FileSynthesisCallback: java.lang.Object mStateLock>;

        entermonitor r1;

     label1:
        $z0 = r0.<android.speech.tts.FileSynthesisCallback: boolean mDone>;

        if $z0 == 0 goto label3;

        exitmonitor r1;

     label2:
        return;

     label3:
        $i0 = r0.<android.speech.tts.FileSynthesisCallback: int mStatusCode>;

        if $i0 != -2 goto label5;

        exitmonitor r1;

     label4:
        return;

     label5:
        r0.<android.speech.tts.FileSynthesisCallback: int mStatusCode> = -2;

        specialinvoke r0.<android.speech.tts.FileSynthesisCallback: void cleanUp()>();

        $r3 = r0.<android.speech.tts.FileSynthesisCallback: android.speech.tts.TextToSpeechService$UtteranceProgressDispatcher mDispatcher>;

        interfaceinvoke $r3.<android.speech.tts.TextToSpeechService$UtteranceProgressDispatcher: void dispatchOnStop()>();

        exitmonitor r1;

     label6:
        return;

     label7:
        $r4 := @caughtexception;

     label8:
        exitmonitor r1;

     label9:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public static void <clinit>()
    {
        <android.speech.tts.FileSynthesisCallback: int WAV_HEADER_LENGTH> = 44;

        <android.speech.tts.FileSynthesisCallback: short WAV_FORMAT_PCM> = 1;

        <android.speech.tts.FileSynthesisCallback: java.lang.String TAG> = "FileSynthesisRequest";

        <android.speech.tts.FileSynthesisCallback: int MAX_AUDIO_BUFFER_SIZE> = 8192;

        <android.speech.tts.FileSynthesisCallback: boolean DBG> = 0;

        return;
    }
}
