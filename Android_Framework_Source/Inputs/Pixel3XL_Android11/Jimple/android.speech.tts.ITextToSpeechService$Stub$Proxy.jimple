class android.speech.tts.ITextToSpeechService$Stub$Proxy extends java.lang.Object implements android.speech.tts.ITextToSpeechService
{
    public static android.speech.tts.ITextToSpeechService sDefaultImpl;
    private android.os.IBinder mRemote;

    void <init>(android.os.IBinder)
    {
        android.speech.tts.ITextToSpeechService$Stub$Proxy r0;
        android.os.IBinder r1;

        r0 := @this: android.speech.tts.ITextToSpeechService$Stub$Proxy;

        r1 := @parameter0: android.os.IBinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.speech.tts.ITextToSpeechService$Stub$Proxy: android.os.IBinder mRemote> = r1;

        return;
    }

    public android.os.IBinder asBinder()
    {
        android.speech.tts.ITextToSpeechService$Stub$Proxy r0;
        android.os.IBinder $r1;

        r0 := @this: android.speech.tts.ITextToSpeechService$Stub$Proxy;

        $r1 = r0.<android.speech.tts.ITextToSpeechService$Stub$Proxy: android.os.IBinder mRemote>;

        return $r1;
    }

    public java.lang.String[] getClientDefaultLanguage() throws android.os.RemoteException
    {
        android.speech.tts.ITextToSpeechService$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.speech.tts.ITextToSpeechService $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String[] r7, r8;

        r0 := @this: android.speech.tts.ITextToSpeechService$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.speech.tts.ITextToSpeechService");

        $r3 = r0.<android.speech.tts.ITextToSpeechService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(8, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.speech.tts.ITextToSpeechService$Stub: android.speech.tts.ITextToSpeechService getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.speech.tts.ITextToSpeechService$Stub: android.speech.tts.ITextToSpeechService getDefaultImpl()>();

        r7 = interfaceinvoke $r5.<android.speech.tts.ITextToSpeechService: java.lang.String[] getClientDefaultLanguage()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r7;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        r8 = virtualinvoke r2.<android.os.Parcel: java.lang.String[] createStringArray()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r8;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public java.lang.String getDefaultVoiceNameFor(java.lang.String, java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        android.speech.tts.ITextToSpeechService$Stub$Proxy r0;
        java.lang.String r1, r2, r9, r10, r11;
        android.os.Parcel r3, r4;
        android.os.IBinder $r5;
        boolean $z0;
        android.speech.tts.ITextToSpeechService $r6, $r7;
        java.lang.Throwable $r8;

        r0 := @this: android.speech.tts.ITextToSpeechService$Stub$Proxy;

        r9 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.speech.tts.ITextToSpeechService");

        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r9);

        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r2);

        $r5 = r0.<android.speech.tts.ITextToSpeechService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(15, r3, r4, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <android.speech.tts.ITextToSpeechService$Stub: android.speech.tts.ITextToSpeechService getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <android.speech.tts.ITextToSpeechService$Stub: android.speech.tts.ITextToSpeechService getDefaultImpl()>();

        r10 = interfaceinvoke $r7.<android.speech.tts.ITextToSpeechService: java.lang.String getDefaultVoiceNameFor(java.lang.String,java.lang.String,java.lang.String)>(r9, r1, r2);

     label2:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return r10;

     label3:
        virtualinvoke r4.<android.os.Parcel: void readException()>();

        r11 = virtualinvoke r4.<android.os.Parcel: java.lang.String readString()>();

     label4:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return r11;

     label5:
        $r8 := @caughtexception;

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public java.lang.String[] getFeaturesForLanguage(java.lang.String, java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        android.speech.tts.ITextToSpeechService$Stub$Proxy r0;
        java.lang.String r1, r2, r9;
        android.os.Parcel r3, r4;
        android.os.IBinder $r5;
        boolean $z0;
        android.speech.tts.ITextToSpeechService $r6, $r7;
        java.lang.Throwable $r8;
        java.lang.String[] r10, r11;

        r0 := @this: android.speech.tts.ITextToSpeechService$Stub$Proxy;

        r9 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.speech.tts.ITextToSpeechService");

        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r9);

        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r2);

        $r5 = r0.<android.speech.tts.ITextToSpeechService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(10, r3, r4, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <android.speech.tts.ITextToSpeechService$Stub: android.speech.tts.ITextToSpeechService getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <android.speech.tts.ITextToSpeechService$Stub: android.speech.tts.ITextToSpeechService getDefaultImpl()>();

        r10 = interfaceinvoke $r7.<android.speech.tts.ITextToSpeechService: java.lang.String[] getFeaturesForLanguage(java.lang.String,java.lang.String,java.lang.String)>(r9, r1, r2);

     label2:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return r10;

     label3:
        virtualinvoke r4.<android.os.Parcel: void readException()>();

        r11 = virtualinvoke r4.<android.os.Parcel: java.lang.String[] createStringArray()>();

     label4:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return r11;

     label5:
        $r8 := @caughtexception;

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public java.lang.String getInterfaceDescriptor()
    {
        android.speech.tts.ITextToSpeechService$Stub$Proxy r0;

        r0 := @this: android.speech.tts.ITextToSpeechService$Stub$Proxy;

        return "android.speech.tts.ITextToSpeechService";
    }

    public java.lang.String[] getLanguage() throws android.os.RemoteException
    {
        android.speech.tts.ITextToSpeechService$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.speech.tts.ITextToSpeechService $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String[] r7, r8;

        r0 := @this: android.speech.tts.ITextToSpeechService$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.speech.tts.ITextToSpeechService");

        $r3 = r0.<android.speech.tts.ITextToSpeechService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(7, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.speech.tts.ITextToSpeechService$Stub: android.speech.tts.ITextToSpeechService getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.speech.tts.ITextToSpeechService$Stub: android.speech.tts.ITextToSpeechService getDefaultImpl()>();

        r7 = interfaceinvoke $r5.<android.speech.tts.ITextToSpeechService: java.lang.String[] getLanguage()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r7;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        r8 = virtualinvoke r2.<android.os.Parcel: java.lang.String[] createStringArray()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r8;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public java.util.List getVoices() throws android.os.RemoteException
    {
        android.speech.tts.ITextToSpeechService$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.os.Parcelable$Creator $r4;
        android.speech.tts.ITextToSpeechService $r5, $r6;
        java.lang.Throwable $r7;
        java.util.List r8;
        java.util.ArrayList r9;

        r0 := @this: android.speech.tts.ITextToSpeechService$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.speech.tts.ITextToSpeechService");

        $r3 = r0.<android.speech.tts.ITextToSpeechService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(13, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.speech.tts.ITextToSpeechService$Stub: android.speech.tts.ITextToSpeechService getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.speech.tts.ITextToSpeechService$Stub: android.speech.tts.ITextToSpeechService getDefaultImpl()>();

        r8 = interfaceinvoke $r6.<android.speech.tts.ITextToSpeechService: java.util.List getVoices()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r8;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $r4 = <android.speech.tts.Voice: android.os.Parcelable$Creator CREATOR>;

        r9 = virtualinvoke r2.<android.os.Parcel: java.util.ArrayList createTypedArrayList(android.os.Parcelable$Creator)>($r4);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public int isLanguageAvailable(java.lang.String, java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        android.speech.tts.ITextToSpeechService$Stub$Proxy r0;
        java.lang.String r1, r2, r9;
        android.os.Parcel r3, r4;
        android.os.IBinder $r5;
        boolean $z0;
        android.speech.tts.ITextToSpeechService $r6, $r7;
        java.lang.Throwable $r8;
        int i0, i1;

        r0 := @this: android.speech.tts.ITextToSpeechService$Stub$Proxy;

        r9 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.speech.tts.ITextToSpeechService");

        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r9);

        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r2);

        $r5 = r0.<android.speech.tts.ITextToSpeechService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(9, r3, r4, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <android.speech.tts.ITextToSpeechService$Stub: android.speech.tts.ITextToSpeechService getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <android.speech.tts.ITextToSpeechService$Stub: android.speech.tts.ITextToSpeechService getDefaultImpl()>();

        i0 = interfaceinvoke $r7.<android.speech.tts.ITextToSpeechService: int isLanguageAvailable(java.lang.String,java.lang.String,java.lang.String)>(r9, r1, r2);

     label2:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return i0;

     label3:
        virtualinvoke r4.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r4.<android.os.Parcel: int readInt()>();

     label4:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return i1;

     label5:
        $r8 := @caughtexception;

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public boolean isSpeaking() throws android.os.RemoteException
    {
        android.speech.tts.ITextToSpeechService$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        int i0;
        boolean $z0, z1, z2;
        android.speech.tts.ITextToSpeechService $r3, $r4;
        java.lang.Throwable $r5;
        android.os.IBinder r6;

        r0 := @this: android.speech.tts.ITextToSpeechService$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.speech.tts.ITextToSpeechService");

        r6 = r0.<android.speech.tts.ITextToSpeechService$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(5, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r3 = staticinvoke <android.speech.tts.ITextToSpeechService$Stub: android.speech.tts.ITextToSpeechService getDefaultImpl()>();

        if $r3 == null goto label5;

        $r4 = staticinvoke <android.speech.tts.ITextToSpeechService$Stub: android.speech.tts.ITextToSpeechService getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<android.speech.tts.ITextToSpeechService: boolean isSpeaking()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i0 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public int loadLanguage(android.os.IBinder, java.lang.String, java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        android.speech.tts.ITextToSpeechService$Stub$Proxy r0;
        java.lang.String r1, r2, r3;
        android.os.Parcel r4, r5;
        android.os.IBinder $r6, r10;
        boolean $z0;
        android.speech.tts.ITextToSpeechService $r7, $r8;
        java.lang.Throwable $r9;
        int i0, i1;

        r0 := @this: android.speech.tts.ITextToSpeechService$Stub$Proxy;

        r10 := @parameter0: android.os.IBinder;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r5 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r4.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.speech.tts.ITextToSpeechService");

        virtualinvoke r4.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r10);

        virtualinvoke r4.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        virtualinvoke r4.<android.os.Parcel: void writeString(java.lang.String)>(r2);

        virtualinvoke r4.<android.os.Parcel: void writeString(java.lang.String)>(r3);

        $r6 = r0.<android.speech.tts.ITextToSpeechService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(11, r4, r5, 0);

        if $z0 != 0 goto label3;

        $r7 = staticinvoke <android.speech.tts.ITextToSpeechService$Stub: android.speech.tts.ITextToSpeechService getDefaultImpl()>();

        if $r7 == null goto label3;

        $r8 = staticinvoke <android.speech.tts.ITextToSpeechService$Stub: android.speech.tts.ITextToSpeechService getDefaultImpl()>();

        i0 = interfaceinvoke $r8.<android.speech.tts.ITextToSpeechService: int loadLanguage(android.os.IBinder,java.lang.String,java.lang.String,java.lang.String)>(r10, r1, r2, r3);

     label2:
        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        return i0;

     label3:
        virtualinvoke r5.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r5.<android.os.Parcel: int readInt()>();

     label4:
        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        return i1;

     label5:
        $r9 := @caughtexception;

        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        throw $r9;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public int loadVoice(android.os.IBinder, java.lang.String) throws android.os.RemoteException
    {
        android.speech.tts.ITextToSpeechService$Stub$Proxy r0;
        java.lang.String r1;
        android.os.Parcel r2, r3;
        android.os.IBinder $r4, r8;
        boolean $z0;
        android.speech.tts.ITextToSpeechService $r5, $r6;
        java.lang.Throwable $r7;
        int i0, i1;

        r0 := @this: android.speech.tts.ITextToSpeechService$Stub$Proxy;

        r8 := @parameter0: android.os.IBinder;

        r1 := @parameter1: java.lang.String;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.speech.tts.ITextToSpeechService");

        virtualinvoke r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r8);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r4 = r0.<android.speech.tts.ITextToSpeechService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(14, r2, r3, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.speech.tts.ITextToSpeechService$Stub: android.speech.tts.ITextToSpeechService getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.speech.tts.ITextToSpeechService$Stub: android.speech.tts.ITextToSpeechService getDefaultImpl()>();

        i0 = interfaceinvoke $r6.<android.speech.tts.ITextToSpeechService: int loadVoice(android.os.IBinder,java.lang.String)>(r8, r1);

     label2:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return i0;

     label3:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r3.<android.os.Parcel: int readInt()>();

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return i1;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public int playAudio(android.os.IBinder, android.net.Uri, int, android.os.Bundle, java.lang.String) throws android.os.RemoteException
    {
        android.speech.tts.ITextToSpeechService$Stub$Proxy r0;
        android.net.Uri r1;
        android.os.Bundle r2;
        java.lang.String r3;
        android.os.Parcel r4, r5;
        android.os.IBinder $r6, r10;
        boolean $z0;
        android.speech.tts.ITextToSpeechService $r7, $r8;
        java.lang.Throwable $r9;
        int i0, i1, i2;

        r0 := @this: android.speech.tts.ITextToSpeechService$Stub$Proxy;

        r10 := @parameter0: android.os.IBinder;

        r1 := @parameter1: android.net.Uri;

        i0 := @parameter2: int;

        r2 := @parameter3: android.os.Bundle;

        r3 := @parameter4: java.lang.String;

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r5 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r4.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.speech.tts.ITextToSpeechService");

        virtualinvoke r4.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r10);

     label02:
        if r1 == null goto label05;

     label03:
        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<android.net.Uri: void writeToParcel(android.os.Parcel,int)>(r4, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(i0);

     label07:
        if r2 == null goto label10;

     label08:
        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r2.<android.os.Bundle: void writeToParcel(android.os.Parcel,int)>(r4, 0);

     label09:
        goto label11;

     label10:
        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(0);

     label11:
        virtualinvoke r4.<android.os.Parcel: void writeString(java.lang.String)>(r3);

        $r6 = r0.<android.speech.tts.ITextToSpeechService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(3, r4, r5, 0);

        if $z0 != 0 goto label13;

        $r7 = staticinvoke <android.speech.tts.ITextToSpeechService$Stub: android.speech.tts.ITextToSpeechService getDefaultImpl()>();

        if $r7 == null goto label13;

        $r8 = staticinvoke <android.speech.tts.ITextToSpeechService$Stub: android.speech.tts.ITextToSpeechService getDefaultImpl()>();

        i1 = interfaceinvoke $r8.<android.speech.tts.ITextToSpeechService: int playAudio(android.os.IBinder,android.net.Uri,int,android.os.Bundle,java.lang.String)>(r10, r1, i0, r2, r3);

     label12:
        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        return i1;

     label13:
        virtualinvoke r5.<android.os.Parcel: void readException()>();

        i2 = virtualinvoke r5.<android.os.Parcel: int readInt()>();

     label14:
        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        return i2;

     label15:
        $r9 := @caughtexception;

        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        throw $r9;

        catch java.lang.Throwable from label01 to label02 with label15;
        catch java.lang.Throwable from label03 to label04 with label15;
        catch java.lang.Throwable from label05 to label06 with label15;
        catch java.lang.Throwable from label06 to label07 with label15;
        catch java.lang.Throwable from label08 to label09 with label15;
        catch java.lang.Throwable from label10 to label11 with label15;
        catch java.lang.Throwable from label11 to label12 with label15;
        catch java.lang.Throwable from label13 to label14 with label15;
    }

    public int playSilence(android.os.IBinder, long, int, java.lang.String) throws android.os.RemoteException
    {
        android.speech.tts.ITextToSpeechService$Stub$Proxy r0;
        long l0;
        java.lang.String r1;
        android.os.Parcel r2, r3;
        android.os.IBinder $r4, r8;
        boolean $z0;
        android.speech.tts.ITextToSpeechService $r5, $r6;
        java.lang.Throwable $r7;
        int i1, i2, i3;

        r0 := @this: android.speech.tts.ITextToSpeechService$Stub$Proxy;

        r8 := @parameter0: android.os.IBinder;

        l0 := @parameter1: long;

        i1 := @parameter2: int;

        r1 := @parameter3: java.lang.String;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.speech.tts.ITextToSpeechService");

        virtualinvoke r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r8);

        virtualinvoke r2.<android.os.Parcel: void writeLong(long)>(l0);

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i1);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r4 = r0.<android.speech.tts.ITextToSpeechService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(4, r2, r3, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.speech.tts.ITextToSpeechService$Stub: android.speech.tts.ITextToSpeechService getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.speech.tts.ITextToSpeechService$Stub: android.speech.tts.ITextToSpeechService getDefaultImpl()>();

        i2 = interfaceinvoke $r6.<android.speech.tts.ITextToSpeechService: int playSilence(android.os.IBinder,long,int,java.lang.String)>(r8, l0, i1, r1);

     label2:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return i2;

     label3:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

        i3 = virtualinvoke r3.<android.os.Parcel: int readInt()>();

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return i3;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void setCallback(android.os.IBinder, android.speech.tts.ITextToSpeechCallback) throws android.os.RemoteException
    {
        android.speech.tts.ITextToSpeechService$Stub$Proxy r0;
        android.speech.tts.ITextToSpeechCallback r1;
        android.os.Parcel r2, r3;
        android.os.IBinder $r4, r8, r9;
        boolean $z0;
        android.speech.tts.ITextToSpeechService $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.speech.tts.ITextToSpeechService$Stub$Proxy;

        r8 := @parameter0: android.os.IBinder;

        r1 := @parameter1: android.speech.tts.ITextToSpeechCallback;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.speech.tts.ITextToSpeechService");

        virtualinvoke r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r8);

     label02:
        if r1 == null goto label05;

     label03:
        r9 = interfaceinvoke r1.<android.speech.tts.ITextToSpeechCallback: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r9 = null;

     label06:
        virtualinvoke r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r9);

        $r4 = r0.<android.speech.tts.ITextToSpeechService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(12, r2, r3, 0);

        if $z0 != 0 goto label08;

        $r5 = staticinvoke <android.speech.tts.ITextToSpeechService$Stub: android.speech.tts.ITextToSpeechService getDefaultImpl()>();

        if $r5 == null goto label08;

        $r6 = staticinvoke <android.speech.tts.ITextToSpeechService$Stub: android.speech.tts.ITextToSpeechService getDefaultImpl()>();

        interfaceinvoke $r6.<android.speech.tts.ITextToSpeechService: void setCallback(android.os.IBinder,android.speech.tts.ITextToSpeechCallback)>(r8, r1);

     label07:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public int speak(android.os.IBinder, java.lang.CharSequence, int, android.os.Bundle, java.lang.String) throws android.os.RemoteException
    {
        android.speech.tts.ITextToSpeechService$Stub$Proxy r0;
        java.lang.CharSequence r1;
        android.os.Bundle r2;
        java.lang.String r3;
        android.os.Parcel r4, r5;
        android.os.IBinder $r6, r10;
        boolean $z0;
        android.speech.tts.ITextToSpeechService $r7, $r8;
        java.lang.Throwable $r9;
        int i0, i1, i2;

        r0 := @this: android.speech.tts.ITextToSpeechService$Stub$Proxy;

        r10 := @parameter0: android.os.IBinder;

        r1 := @parameter1: java.lang.CharSequence;

        i0 := @parameter2: int;

        r2 := @parameter3: android.os.Bundle;

        r3 := @parameter4: java.lang.String;

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r5 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r4.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.speech.tts.ITextToSpeechService");

        virtualinvoke r4.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r10);

     label02:
        if r1 == null goto label05;

     label03:
        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(1);

        staticinvoke <android.text.TextUtils: void writeToParcel(java.lang.CharSequence,android.os.Parcel,int)>(r1, r4, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(i0);

     label07:
        if r2 == null goto label10;

     label08:
        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r2.<android.os.Bundle: void writeToParcel(android.os.Parcel,int)>(r4, 0);

     label09:
        goto label11;

     label10:
        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(0);

     label11:
        virtualinvoke r4.<android.os.Parcel: void writeString(java.lang.String)>(r3);

        $r6 = r0.<android.speech.tts.ITextToSpeechService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1, r4, r5, 0);

        if $z0 != 0 goto label13;

        $r7 = staticinvoke <android.speech.tts.ITextToSpeechService$Stub: android.speech.tts.ITextToSpeechService getDefaultImpl()>();

        if $r7 == null goto label13;

        $r8 = staticinvoke <android.speech.tts.ITextToSpeechService$Stub: android.speech.tts.ITextToSpeechService getDefaultImpl()>();

        i1 = interfaceinvoke $r8.<android.speech.tts.ITextToSpeechService: int speak(android.os.IBinder,java.lang.CharSequence,int,android.os.Bundle,java.lang.String)>(r10, r1, i0, r2, r3);

     label12:
        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        return i1;

     label13:
        virtualinvoke r5.<android.os.Parcel: void readException()>();

        i2 = virtualinvoke r5.<android.os.Parcel: int readInt()>();

     label14:
        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        return i2;

     label15:
        $r9 := @caughtexception;

        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        throw $r9;

        catch java.lang.Throwable from label01 to label02 with label15;
        catch java.lang.Throwable from label03 to label04 with label15;
        catch java.lang.Throwable from label05 to label06 with label15;
        catch java.lang.Throwable from label06 to label07 with label15;
        catch java.lang.Throwable from label08 to label09 with label15;
        catch java.lang.Throwable from label10 to label11 with label15;
        catch java.lang.Throwable from label11 to label12 with label15;
        catch java.lang.Throwable from label13 to label14 with label15;
    }

    public int stop(android.os.IBinder) throws android.os.RemoteException
    {
        android.speech.tts.ITextToSpeechService$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r7;
        boolean $z0;
        android.speech.tts.ITextToSpeechService $r4, $r5;
        java.lang.Throwable $r6;
        int i0, i1;

        r0 := @this: android.speech.tts.ITextToSpeechService$Stub$Proxy;

        r7 := @parameter0: android.os.IBinder;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.speech.tts.ITextToSpeechService");

        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r7);

        $r3 = r0.<android.speech.tts.ITextToSpeechService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(6, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.speech.tts.ITextToSpeechService$Stub: android.speech.tts.ITextToSpeechService getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.speech.tts.ITextToSpeechService$Stub: android.speech.tts.ITextToSpeechService getDefaultImpl()>();

        i0 = interfaceinvoke $r5.<android.speech.tts.ITextToSpeechService: int stop(android.os.IBinder)>(r7);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i0;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i1;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public int synthesizeToFileDescriptor(android.os.IBinder, java.lang.CharSequence, android.os.ParcelFileDescriptor, android.os.Bundle, java.lang.String) throws android.os.RemoteException
    {
        android.speech.tts.ITextToSpeechService$Stub$Proxy r0;
        java.lang.CharSequence r1;
        android.os.ParcelFileDescriptor r2;
        android.os.Bundle r3;
        java.lang.String r4;
        android.os.Parcel r5, r6;
        android.os.IBinder $r7, r11;
        boolean $z0;
        android.speech.tts.ITextToSpeechService $r8, $r9;
        java.lang.Throwable $r10;
        int i0, i1;

        r0 := @this: android.speech.tts.ITextToSpeechService$Stub$Proxy;

        r11 := @parameter0: android.os.IBinder;

        r1 := @parameter1: java.lang.CharSequence;

        r2 := @parameter2: android.os.ParcelFileDescriptor;

        r3 := @parameter3: android.os.Bundle;

        r4 := @parameter4: java.lang.String;

        r5 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r6 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r5.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.speech.tts.ITextToSpeechService");

        virtualinvoke r5.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r11);

     label02:
        if r1 == null goto label05;

     label03:
        virtualinvoke r5.<android.os.Parcel: void writeInt(int)>(1);

        staticinvoke <android.text.TextUtils: void writeToParcel(java.lang.CharSequence,android.os.Parcel,int)>(r1, r5, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r5.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        if r2 == null goto label09;

     label07:
        virtualinvoke r5.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r2.<android.os.ParcelFileDescriptor: void writeToParcel(android.os.Parcel,int)>(r5, 0);

     label08:
        goto label10;

     label09:
        virtualinvoke r5.<android.os.Parcel: void writeInt(int)>(0);

     label10:
        if r3 == null goto label13;

     label11:
        virtualinvoke r5.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r3.<android.os.Bundle: void writeToParcel(android.os.Parcel,int)>(r5, 0);

     label12:
        goto label14;

     label13:
        virtualinvoke r5.<android.os.Parcel: void writeInt(int)>(0);

     label14:
        virtualinvoke r5.<android.os.Parcel: void writeString(java.lang.String)>(r4);

        $r7 = r0.<android.speech.tts.ITextToSpeechService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r7.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(2, r5, r6, 0);

        if $z0 != 0 goto label16;

        $r8 = staticinvoke <android.speech.tts.ITextToSpeechService$Stub: android.speech.tts.ITextToSpeechService getDefaultImpl()>();

        if $r8 == null goto label16;

        $r9 = staticinvoke <android.speech.tts.ITextToSpeechService$Stub: android.speech.tts.ITextToSpeechService getDefaultImpl()>();

        i0 = interfaceinvoke $r9.<android.speech.tts.ITextToSpeechService: int synthesizeToFileDescriptor(android.os.IBinder,java.lang.CharSequence,android.os.ParcelFileDescriptor,android.os.Bundle,java.lang.String)>(r11, r1, r2, r3, r4);

     label15:
        virtualinvoke r6.<android.os.Parcel: void recycle()>();

        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        return i0;

     label16:
        virtualinvoke r6.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r6.<android.os.Parcel: int readInt()>();

     label17:
        virtualinvoke r6.<android.os.Parcel: void recycle()>();

        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        return i1;

     label18:
        $r10 := @caughtexception;

        virtualinvoke r6.<android.os.Parcel: void recycle()>();

        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        throw $r10;

        catch java.lang.Throwable from label01 to label02 with label18;
        catch java.lang.Throwable from label03 to label04 with label18;
        catch java.lang.Throwable from label05 to label06 with label18;
        catch java.lang.Throwable from label07 to label08 with label18;
        catch java.lang.Throwable from label09 to label10 with label18;
        catch java.lang.Throwable from label11 to label12 with label18;
        catch java.lang.Throwable from label13 to label14 with label18;
        catch java.lang.Throwable from label14 to label15 with label18;
        catch java.lang.Throwable from label16 to label17 with label18;
    }
}
