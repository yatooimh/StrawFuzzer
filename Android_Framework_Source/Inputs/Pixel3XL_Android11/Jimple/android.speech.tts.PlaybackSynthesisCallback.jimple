class android.speech.tts.PlaybackSynthesisCallback extends android.speech.tts.AbstractSynthesisCallback
{
    private static final boolean DBG;
    private static final int MIN_AUDIO_BUFFER_SIZE;
    private static final java.lang.String TAG;
    private final android.speech.tts.TextToSpeechService$AudioOutputParams mAudioParams;
    private final android.speech.tts.AudioPlaybackHandler mAudioTrackHandler;
    private final java.lang.Object mCallerIdentity;
    private final android.speech.tts.TextToSpeechService$UtteranceProgressDispatcher mDispatcher;
    private volatile boolean mDone;
    private android.speech.tts.SynthesisPlaybackQueueItem mItem;
    private final android.speech.tts.AbstractEventLogger mLogger;
    private final java.lang.Object mStateLock;
    protected int mStatusCode;

    void <init>(android.speech.tts.TextToSpeechService$AudioOutputParams, android.speech.tts.AudioPlaybackHandler, android.speech.tts.TextToSpeechService$UtteranceProgressDispatcher, java.lang.Object, android.speech.tts.AbstractEventLogger, boolean)
    {
        android.speech.tts.PlaybackSynthesisCallback r0;
        android.speech.tts.TextToSpeechService$AudioOutputParams r1;
        android.speech.tts.AudioPlaybackHandler r2;
        android.speech.tts.TextToSpeechService$UtteranceProgressDispatcher r3;
        java.lang.Object r4, $r6;
        android.speech.tts.AbstractEventLogger r5;
        boolean z0;

        r0 := @this: android.speech.tts.PlaybackSynthesisCallback;

        r1 := @parameter0: android.speech.tts.TextToSpeechService$AudioOutputParams;

        r2 := @parameter1: android.speech.tts.AudioPlaybackHandler;

        r3 := @parameter2: android.speech.tts.TextToSpeechService$UtteranceProgressDispatcher;

        r4 := @parameter3: java.lang.Object;

        r5 := @parameter4: android.speech.tts.AbstractEventLogger;

        z0 := @parameter5: boolean;

        specialinvoke r0.<android.speech.tts.AbstractSynthesisCallback: void <init>(boolean)>(z0);

        $r6 = new java.lang.Object;

        specialinvoke $r6.<java.lang.Object: void <init>()>();

        r0.<android.speech.tts.PlaybackSynthesisCallback: java.lang.Object mStateLock> = $r6;

        r0.<android.speech.tts.PlaybackSynthesisCallback: android.speech.tts.SynthesisPlaybackQueueItem mItem> = null;

        r0.<android.speech.tts.PlaybackSynthesisCallback: boolean mDone> = 0;

        r0.<android.speech.tts.PlaybackSynthesisCallback: android.speech.tts.TextToSpeechService$AudioOutputParams mAudioParams> = r1;

        r0.<android.speech.tts.PlaybackSynthesisCallback: android.speech.tts.AudioPlaybackHandler mAudioTrackHandler> = r2;

        r0.<android.speech.tts.PlaybackSynthesisCallback: android.speech.tts.TextToSpeechService$UtteranceProgressDispatcher mDispatcher> = r3;

        r0.<android.speech.tts.PlaybackSynthesisCallback: java.lang.Object mCallerIdentity> = r4;

        r0.<android.speech.tts.PlaybackSynthesisCallback: android.speech.tts.AbstractEventLogger mLogger> = r5;

        r0.<android.speech.tts.PlaybackSynthesisCallback: int mStatusCode> = 0;

        return;
    }

    public int audioAvailable(byte[], int, int)
    {
        android.speech.tts.PlaybackSynthesisCallback r0;
        int i0, $i1, $i2, $i3, i4, i5;
        android.speech.tts.SynthesisPlaybackQueueItem r1, $r8;
        java.lang.StringBuilder $r2;
        java.lang.IllegalArgumentException $r6;
        java.lang.String $r7;
        android.speech.tts.TextToSpeechService$UtteranceProgressDispatcher $r9;
        android.speech.tts.AbstractEventLogger $r10;
        java.lang.Throwable $r11, $r12, $r13;
        byte[] r14, r16;
        java.lang.Object r15, r18;

        r0 := @this: android.speech.tts.PlaybackSynthesisCallback;

        r14 := @parameter0: byte[];

        i4 := @parameter1: int;

        i0 := @parameter2: int;

        $i1 = virtualinvoke r0.<android.speech.tts.PlaybackSynthesisCallback: int getMaxBufferSize()>();

        if i0 > $i1 goto label20;

        if i0 <= 0 goto label20;

        r15 = r0.<android.speech.tts.PlaybackSynthesisCallback: java.lang.Object mStateLock>;

        entermonitor r15;

     label01:
        $r8 = r0.<android.speech.tts.PlaybackSynthesisCallback: android.speech.tts.SynthesisPlaybackQueueItem mItem>;

        if $r8 != null goto label03;

        r0.<android.speech.tts.PlaybackSynthesisCallback: int mStatusCode> = -5;

        exitmonitor r15;

     label02:
        return -1;

     label03:
        $i2 = r0.<android.speech.tts.PlaybackSynthesisCallback: int mStatusCode>;

        if $i2 == 0 goto label05;

        exitmonitor r15;

     label04:
        return -1;

     label05:
        $i3 = r0.<android.speech.tts.PlaybackSynthesisCallback: int mStatusCode>;

        if $i3 != -2 goto label07;

        i5 = virtualinvoke r0.<android.speech.tts.PlaybackSynthesisCallback: int errorCodeOnStop()>();

        exitmonitor r15;

     label06:
        return i5;

     label07:
        r1 = r0.<android.speech.tts.PlaybackSynthesisCallback: android.speech.tts.SynthesisPlaybackQueueItem mItem>;

        exitmonitor r15;

     label08:
        r16 = newarray (byte)[i0];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r14, i4, r16, 0, i0);

        $r9 = r0.<android.speech.tts.PlaybackSynthesisCallback: android.speech.tts.TextToSpeechService$UtteranceProgressDispatcher mDispatcher>;

        interfaceinvoke $r9.<android.speech.tts.TextToSpeechService$UtteranceProgressDispatcher: void dispatchOnAudioAvailable(byte[])>(r16);

     label09:
        virtualinvoke r1.<android.speech.tts.SynthesisPlaybackQueueItem: void put(byte[])>(r16);

     label10:
        $r10 = r0.<android.speech.tts.PlaybackSynthesisCallback: android.speech.tts.AbstractEventLogger mLogger>;

        virtualinvoke $r10.<android.speech.tts.AbstractEventLogger: void onEngineDataReceived()>();

        return 0;

     label11:
        $r11 := @caughtexception;

        r18 = r0.<android.speech.tts.PlaybackSynthesisCallback: java.lang.Object mStateLock>;

        entermonitor r18;

     label12:
        r0.<android.speech.tts.PlaybackSynthesisCallback: int mStatusCode> = -5;

        exitmonitor r18;

     label13:
        return -1;

     label14:
        $r13 := @caughtexception;

     label15:
        exitmonitor r18;

     label16:
        throw $r13;

     label17:
        $r12 := @caughtexception;

     label18:
        exitmonitor r15;

     label19:
        throw $r12;

     label20:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("buffer is too large or of zero length (");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" bytes)");

        $r6 = new java.lang.IllegalArgumentException;

        $r7 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label17;
        catch java.lang.Throwable from label03 to label04 with label17;
        catch java.lang.Throwable from label05 to label06 with label17;
        catch java.lang.Throwable from label07 to label08 with label17;
        catch java.lang.InterruptedException from label09 to label10 with label11;
        catch java.lang.Throwable from label12 to label13 with label14;
        catch java.lang.Throwable from label15 to label16 with label14;
        catch java.lang.Throwable from label18 to label19 with label17;
    }

    public int done()
    {
        android.speech.tts.PlaybackSynthesisCallback r0;
        java.lang.Object r1;
        boolean $z0;
        int $i0, $i2, $i3, i5, i6;
        android.speech.tts.SynthesisPlaybackQueueItem $r2, r8;
        android.speech.tts.AbstractEventLogger $r3, $r5;
        android.speech.tts.TextToSpeechService$UtteranceProgressDispatcher $r4, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.speech.tts.PlaybackSynthesisCallback;

        r1 = r0.<android.speech.tts.PlaybackSynthesisCallback: java.lang.Object mStateLock>;

        entermonitor r1;

     label01:
        $z0 = r0.<android.speech.tts.PlaybackSynthesisCallback: boolean mDone>;

        if $z0 == 0 goto label03;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("PlaybackSynthesisRequest", "Duplicate call to done()");

        exitmonitor r1;

     label02:
        return -1;

     label03:
        $i0 = r0.<android.speech.tts.PlaybackSynthesisCallback: int mStatusCode>;

        if $i0 != -2 goto label05;

        i5 = virtualinvoke r0.<android.speech.tts.PlaybackSynthesisCallback: int errorCodeOnStop()>();

        exitmonitor r1;

     label04:
        return i5;

     label05:
        r0.<android.speech.tts.PlaybackSynthesisCallback: boolean mDone> = 1;

        $r2 = r0.<android.speech.tts.PlaybackSynthesisCallback: android.speech.tts.SynthesisPlaybackQueueItem mItem>;

        if $r2 != null goto label10;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("PlaybackSynthesisRequest", "done() was called before start() call");

        $i2 = r0.<android.speech.tts.PlaybackSynthesisCallback: int mStatusCode>;

        if $i2 != 0 goto label07;

        $r6 = r0.<android.speech.tts.PlaybackSynthesisCallback: android.speech.tts.TextToSpeechService$UtteranceProgressDispatcher mDispatcher>;

        interfaceinvoke $r6.<android.speech.tts.TextToSpeechService$UtteranceProgressDispatcher: void dispatchOnSuccess()>();

     label06:
        goto label08;

     label07:
        $r4 = r0.<android.speech.tts.PlaybackSynthesisCallback: android.speech.tts.TextToSpeechService$UtteranceProgressDispatcher mDispatcher>;

        $i3 = r0.<android.speech.tts.PlaybackSynthesisCallback: int mStatusCode>;

        interfaceinvoke $r4.<android.speech.tts.TextToSpeechService$UtteranceProgressDispatcher: void dispatchOnError(int)>($i3);

     label08:
        $r5 = r0.<android.speech.tts.PlaybackSynthesisCallback: android.speech.tts.AbstractEventLogger mLogger>;

        virtualinvoke $r5.<android.speech.tts.AbstractEventLogger: void onEngineComplete()>();

        exitmonitor r1;

     label09:
        return -1;

     label10:
        r8 = r0.<android.speech.tts.PlaybackSynthesisCallback: android.speech.tts.SynthesisPlaybackQueueItem mItem>;

        i6 = r0.<android.speech.tts.PlaybackSynthesisCallback: int mStatusCode>;

        exitmonitor r1;

     label11:
        if i6 != 0 goto label12;

        virtualinvoke r8.<android.speech.tts.SynthesisPlaybackQueueItem: void done()>();

        goto label13;

     label12:
        virtualinvoke r8.<android.speech.tts.SynthesisPlaybackQueueItem: void stop(int)>(i6);

     label13:
        $r3 = r0.<android.speech.tts.PlaybackSynthesisCallback: android.speech.tts.AbstractEventLogger mLogger>;

        virtualinvoke $r3.<android.speech.tts.AbstractEventLogger: void onEngineComplete()>();

        return 0;

     label14:
        $r7 := @caughtexception;

     label15:
        exitmonitor r1;

     label16:
        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label14;
        catch java.lang.Throwable from label03 to label04 with label14;
        catch java.lang.Throwable from label05 to label06 with label14;
        catch java.lang.Throwable from label07 to label08 with label14;
        catch java.lang.Throwable from label08 to label09 with label14;
        catch java.lang.Throwable from label10 to label11 with label14;
        catch java.lang.Throwable from label15 to label16 with label14;
    }

    public void error()
    {
        android.speech.tts.PlaybackSynthesisCallback r0;

        r0 := @this: android.speech.tts.PlaybackSynthesisCallback;

        virtualinvoke r0.<android.speech.tts.PlaybackSynthesisCallback: void error(int)>(-3);

        return;
    }

    public void error(int)
    {
        android.speech.tts.PlaybackSynthesisCallback r0;
        int i0;
        java.lang.Object r1;
        boolean $z0;
        java.lang.Throwable $r3;

        r0 := @this: android.speech.tts.PlaybackSynthesisCallback;

        i0 := @parameter0: int;

        r1 = r0.<android.speech.tts.PlaybackSynthesisCallback: java.lang.Object mStateLock>;

        entermonitor r1;

     label1:
        $z0 = r0.<android.speech.tts.PlaybackSynthesisCallback: boolean mDone>;

        if $z0 == 0 goto label3;

        exitmonitor r1;

     label2:
        return;

     label3:
        r0.<android.speech.tts.PlaybackSynthesisCallback: int mStatusCode> = i0;

        exitmonitor r1;

     label4:
        return;

     label5:
        $r3 := @caughtexception;

     label6:
        exitmonitor r1;

     label7:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public int getMaxBufferSize()
    {
        android.speech.tts.PlaybackSynthesisCallback r0;

        r0 := @this: android.speech.tts.PlaybackSynthesisCallback;

        return 8192;
    }

    public boolean hasFinished()
    {
        android.speech.tts.PlaybackSynthesisCallback r0;
        java.lang.Object r1;
        boolean z0;
        java.lang.Throwable $r3;

        r0 := @this: android.speech.tts.PlaybackSynthesisCallback;

        r1 = r0.<android.speech.tts.PlaybackSynthesisCallback: java.lang.Object mStateLock>;

        entermonitor r1;

     label1:
        z0 = r0.<android.speech.tts.PlaybackSynthesisCallback: boolean mDone>;

        exitmonitor r1;

     label2:
        return z0;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public boolean hasStarted()
    {
        android.speech.tts.PlaybackSynthesisCallback r0;
        java.lang.Object r1;
        android.speech.tts.SynthesisPlaybackQueueItem $r3;
        java.lang.Throwable $r4;
        boolean z0;

        r0 := @this: android.speech.tts.PlaybackSynthesisCallback;

        r1 = r0.<android.speech.tts.PlaybackSynthesisCallback: java.lang.Object mStateLock>;

        entermonitor r1;

     label1:
        $r3 = r0.<android.speech.tts.PlaybackSynthesisCallback: android.speech.tts.SynthesisPlaybackQueueItem mItem>;

        if $r3 == null goto label3;

     label2:
        z0 = 1;

        goto label4;

     label3:
        z0 = 0;

     label4:
        exitmonitor r1;

     label5:
        return z0;

     label6:
        $r4 := @caughtexception;

     label7:
        exitmonitor r1;

     label8:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public void rangeStart(int, int, int)
    {
        android.speech.tts.PlaybackSynthesisCallback r0;
        int i0, i1, i2;
        android.speech.tts.SynthesisPlaybackQueueItem r1;

        r0 := @this: android.speech.tts.PlaybackSynthesisCallback;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r1 = r0.<android.speech.tts.PlaybackSynthesisCallback: android.speech.tts.SynthesisPlaybackQueueItem mItem>;

        if r1 != null goto label1;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("PlaybackSynthesisRequest", "mItem is null");

        return;

     label1:
        virtualinvoke r1.<android.speech.tts.SynthesisPlaybackQueueItem: void rangeStart(int,int,int)>(i0, i1, i2);

        return;
    }

    public int start(int, int, int)
    {
        android.speech.tts.PlaybackSynthesisCallback r0;
        int i0, i1, i2, $i3, $i4, i8, i9;
        android.speech.tts.SynthesisPlaybackQueueItem $r1, r20;
        android.speech.tts.AbstractEventLogger $r2;
        java.lang.Object $r3, r18;
        android.speech.tts.TextToSpeechService$UtteranceProgressDispatcher $r4, $r17;
        android.speech.tts.TextToSpeechService$AudioOutputParams $r5;
        android.speech.tts.AudioPlaybackHandler $r6;
        java.lang.String $r9, $r14;
        java.lang.StringBuilder $r10, r19;
        java.lang.Throwable $r15;

        r0 := @this: android.speech.tts.PlaybackSynthesisCallback;

        i8 := @parameter0: int;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        if i0 == 3 goto label01;

        if i0 == 2 goto label01;

        if i0 == 4 goto label01;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Audio format encoding ");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not supported. Please use one of AudioFormat.ENCODING_PCM_8BIT, AudioFormat.ENCODING_PCM_16BIT or AudioFormat.ENCODING_PCM_FLOAT");

        $r14 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("PlaybackSynthesisRequest", $r14);

     label01:
        $r17 = r0.<android.speech.tts.PlaybackSynthesisCallback: android.speech.tts.TextToSpeechService$UtteranceProgressDispatcher mDispatcher>;

        interfaceinvoke $r17.<android.speech.tts.TextToSpeechService$UtteranceProgressDispatcher: void dispatchOnBeginSynthesis(int,int,int)>(i8, i0, i1);

        i2 = staticinvoke <android.speech.tts.BlockingAudioTrack: int getChannelConfig(int)>(i1);

        r18 = r0.<android.speech.tts.PlaybackSynthesisCallback: java.lang.Object mStateLock>;

        entermonitor r18;

        if i2 != 0 goto label04;

     label02:
        r19 = new java.lang.StringBuilder;

        specialinvoke r19.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported number of channels :");

        virtualinvoke r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r9 = virtualinvoke r19.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("PlaybackSynthesisRequest", $r9);

        r0.<android.speech.tts.PlaybackSynthesisCallback: int mStatusCode> = -5;

        exitmonitor r18;

     label03:
        return -1;

     label04:
        $i3 = r0.<android.speech.tts.PlaybackSynthesisCallback: int mStatusCode>;

        if $i3 != -2 goto label06;

        i9 = virtualinvoke r0.<android.speech.tts.PlaybackSynthesisCallback: int errorCodeOnStop()>();

        exitmonitor r18;

     label05:
        return i9;

     label06:
        $i4 = r0.<android.speech.tts.PlaybackSynthesisCallback: int mStatusCode>;

        if $i4 == 0 goto label08;

        exitmonitor r18;

     label07:
        return -1;

     label08:
        $r1 = r0.<android.speech.tts.PlaybackSynthesisCallback: android.speech.tts.SynthesisPlaybackQueueItem mItem>;

        if $r1 == null goto label10;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("PlaybackSynthesisRequest", "Start called twice");

        exitmonitor r18;

     label09:
        return -1;

     label10:
        r20 = new android.speech.tts.SynthesisPlaybackQueueItem;

        $r5 = r0.<android.speech.tts.PlaybackSynthesisCallback: android.speech.tts.TextToSpeechService$AudioOutputParams mAudioParams>;

        $r4 = r0.<android.speech.tts.PlaybackSynthesisCallback: android.speech.tts.TextToSpeechService$UtteranceProgressDispatcher mDispatcher>;

        $r3 = r0.<android.speech.tts.PlaybackSynthesisCallback: java.lang.Object mCallerIdentity>;

        $r2 = r0.<android.speech.tts.PlaybackSynthesisCallback: android.speech.tts.AbstractEventLogger mLogger>;

        specialinvoke r20.<android.speech.tts.SynthesisPlaybackQueueItem: void <init>(android.speech.tts.TextToSpeechService$AudioOutputParams,int,int,int,android.speech.tts.TextToSpeechService$UtteranceProgressDispatcher,java.lang.Object,android.speech.tts.AbstractEventLogger)>($r5, i8, i0, i1, $r4, $r3, $r2);

        $r6 = r0.<android.speech.tts.PlaybackSynthesisCallback: android.speech.tts.AudioPlaybackHandler mAudioTrackHandler>;

        virtualinvoke $r6.<android.speech.tts.AudioPlaybackHandler: void enqueue(android.speech.tts.PlaybackQueueItem)>(r20);

        r0.<android.speech.tts.PlaybackSynthesisCallback: android.speech.tts.SynthesisPlaybackQueueItem mItem> = r20;

        exitmonitor r18;

     label11:
        return 0;

     label12:
        $r15 := @caughtexception;

     label13:
        exitmonitor r18;

     label14:
        throw $r15;

        catch java.lang.Throwable from label02 to label03 with label12;
        catch java.lang.Throwable from label04 to label05 with label12;
        catch java.lang.Throwable from label06 to label07 with label12;
        catch java.lang.Throwable from label08 to label09 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
    }

    void stop()
    {
        android.speech.tts.PlaybackSynthesisCallback r0;
        java.lang.Object r1;
        boolean $z0;
        int $i0;
        android.speech.tts.AbstractEventLogger $r2;
        android.speech.tts.TextToSpeechService$UtteranceProgressDispatcher $r3;
        java.lang.Throwable $r4;
        android.speech.tts.SynthesisPlaybackQueueItem r5;

        r0 := @this: android.speech.tts.PlaybackSynthesisCallback;

        r1 = r0.<android.speech.tts.PlaybackSynthesisCallback: java.lang.Object mStateLock>;

        entermonitor r1;

     label01:
        $z0 = r0.<android.speech.tts.PlaybackSynthesisCallback: boolean mDone>;

        if $z0 == 0 goto label03;

        exitmonitor r1;

     label02:
        return;

     label03:
        $i0 = r0.<android.speech.tts.PlaybackSynthesisCallback: int mStatusCode>;

        if $i0 != -2 goto label05;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("PlaybackSynthesisRequest", "stop() called twice");

        exitmonitor r1;

     label04:
        return;

     label05:
        r5 = r0.<android.speech.tts.PlaybackSynthesisCallback: android.speech.tts.SynthesisPlaybackQueueItem mItem>;

        r0.<android.speech.tts.PlaybackSynthesisCallback: int mStatusCode> = -2;

        exitmonitor r1;

     label06:
        if r5 == null goto label07;

        virtualinvoke r5.<android.speech.tts.SynthesisPlaybackQueueItem: void stop(int)>(-2);

        goto label08;

     label07:
        $r2 = r0.<android.speech.tts.PlaybackSynthesisCallback: android.speech.tts.AbstractEventLogger mLogger>;

        virtualinvoke $r2.<android.speech.tts.AbstractEventLogger: void onCompleted(int)>(-2);

        $r3 = r0.<android.speech.tts.PlaybackSynthesisCallback: android.speech.tts.TextToSpeechService$UtteranceProgressDispatcher mDispatcher>;

        interfaceinvoke $r3.<android.speech.tts.TextToSpeechService$UtteranceProgressDispatcher: void dispatchOnStop()>();

     label08:
        return;

     label09:
        $r4 := @caughtexception;

     label10:
        exitmonitor r1;

     label11:
        throw $r4;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label05 to label06 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    public static void <clinit>()
    {
        <android.speech.tts.PlaybackSynthesisCallback: java.lang.String TAG> = "PlaybackSynthesisRequest";

        <android.speech.tts.PlaybackSynthesisCallback: int MIN_AUDIO_BUFFER_SIZE> = 8192;

        <android.speech.tts.PlaybackSynthesisCallback: boolean DBG> = 0;

        return;
    }
}
