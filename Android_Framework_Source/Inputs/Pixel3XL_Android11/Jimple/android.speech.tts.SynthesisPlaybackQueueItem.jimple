final class android.speech.tts.SynthesisPlaybackQueueItem extends android.speech.tts.PlaybackQueueItem implements android.media.AudioTrack$OnPlaybackPositionUpdateListener
{
    private static final boolean DBG;
    private static final long MAX_UNCONSUMED_AUDIO_MS;
    private static final int NOT_RUN;
    private static final int RUN_CALLED;
    private static final int STOP_CALLED;
    private static final java.lang.String TAG;
    private final android.speech.tts.BlockingAudioTrack mAudioTrack;
    private final java.util.LinkedList mDataBufferList;
    private volatile boolean mDone;
    private final java.util.concurrent.locks.Lock mListLock;
    private final android.speech.tts.AbstractEventLogger mLogger;
    private final java.util.concurrent.locks.Condition mNotFull;
    private final java.util.concurrent.locks.Condition mReadReady;
    private final java.util.concurrent.atomic.AtomicInteger mRunState;
    private volatile int mStatusCode;
    private volatile boolean mStopped;
    private int mUnconsumedBytes;
    private java.util.concurrent.ConcurrentLinkedQueue markerList;

    void <init>(android.speech.tts.TextToSpeechService$AudioOutputParams, int, int, int, android.speech.tts.TextToSpeechService$UtteranceProgressDispatcher, java.lang.Object, android.speech.tts.AbstractEventLogger)
    {
        android.speech.tts.SynthesisPlaybackQueueItem r0;
        android.speech.tts.TextToSpeechService$AudioOutputParams r1;
        int i0, i1, i2;
        java.lang.Object r2;
        android.speech.tts.AbstractEventLogger r3;
        java.util.concurrent.locks.ReentrantLock $r4;
        java.util.concurrent.locks.Condition $r5, $r7;
        java.util.concurrent.locks.Lock $r6;
        java.util.LinkedList $r8;
        java.util.concurrent.ConcurrentLinkedQueue $r9;
        java.util.concurrent.atomic.AtomicInteger $r10;
        android.speech.tts.BlockingAudioTrack $r11;
        android.speech.tts.TextToSpeechService$UtteranceProgressDispatcher r12;

        r0 := @this: android.speech.tts.SynthesisPlaybackQueueItem;

        r1 := @parameter0: android.speech.tts.TextToSpeechService$AudioOutputParams;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        r12 := @parameter4: android.speech.tts.TextToSpeechService$UtteranceProgressDispatcher;

        r2 := @parameter5: java.lang.Object;

        r3 := @parameter6: android.speech.tts.AbstractEventLogger;

        specialinvoke r0.<android.speech.tts.PlaybackQueueItem: void <init>(android.speech.tts.TextToSpeechService$UtteranceProgressDispatcher,java.lang.Object)>(r12, r2);

        $r4 = new java.util.concurrent.locks.ReentrantLock;

        specialinvoke $r4.<java.util.concurrent.locks.ReentrantLock: void <init>()>();

        r0.<android.speech.tts.SynthesisPlaybackQueueItem: java.util.concurrent.locks.Lock mListLock> = $r4;

        $r5 = interfaceinvoke $r4.<java.util.concurrent.locks.Lock: java.util.concurrent.locks.Condition newCondition()>();

        r0.<android.speech.tts.SynthesisPlaybackQueueItem: java.util.concurrent.locks.Condition mReadReady> = $r5;

        $r6 = r0.<android.speech.tts.SynthesisPlaybackQueueItem: java.util.concurrent.locks.Lock mListLock>;

        $r7 = interfaceinvoke $r6.<java.util.concurrent.locks.Lock: java.util.concurrent.locks.Condition newCondition()>();

        r0.<android.speech.tts.SynthesisPlaybackQueueItem: java.util.concurrent.locks.Condition mNotFull> = $r7;

        $r8 = new java.util.LinkedList;

        specialinvoke $r8.<java.util.LinkedList: void <init>()>();

        r0.<android.speech.tts.SynthesisPlaybackQueueItem: java.util.LinkedList mDataBufferList> = $r8;

        $r9 = new java.util.concurrent.ConcurrentLinkedQueue;

        specialinvoke $r9.<java.util.concurrent.ConcurrentLinkedQueue: void <init>()>();

        r0.<android.speech.tts.SynthesisPlaybackQueueItem: java.util.concurrent.ConcurrentLinkedQueue markerList> = $r9;

        $r10 = new java.util.concurrent.atomic.AtomicInteger;

        specialinvoke $r10.<java.util.concurrent.atomic.AtomicInteger: void <init>(int)>(0);

        r0.<android.speech.tts.SynthesisPlaybackQueueItem: java.util.concurrent.atomic.AtomicInteger mRunState> = $r10;

        r0.<android.speech.tts.SynthesisPlaybackQueueItem: int mUnconsumedBytes> = 0;

        r0.<android.speech.tts.SynthesisPlaybackQueueItem: boolean mStopped> = 0;

        r0.<android.speech.tts.SynthesisPlaybackQueueItem: boolean mDone> = 0;

        r0.<android.speech.tts.SynthesisPlaybackQueueItem: int mStatusCode> = 0;

        $r11 = new android.speech.tts.BlockingAudioTrack;

        specialinvoke $r11.<android.speech.tts.BlockingAudioTrack: void <init>(android.speech.tts.TextToSpeechService$AudioOutputParams,int,int,int)>(r1, i0, i1, i2);

        r0.<android.speech.tts.SynthesisPlaybackQueueItem: android.speech.tts.BlockingAudioTrack mAudioTrack> = $r11;

        r0.<android.speech.tts.SynthesisPlaybackQueueItem: android.speech.tts.AbstractEventLogger mLogger> = r3;

        return;
    }

    private void dispatchEndStatus()
    {
        android.speech.tts.SynthesisPlaybackQueueItem r0;
        android.speech.tts.TextToSpeechService$UtteranceProgressDispatcher r1;
        int $i0, $i1, $i2, $i3;
        android.speech.tts.AbstractEventLogger $r2;

        r0 := @this: android.speech.tts.SynthesisPlaybackQueueItem;

        r1 = virtualinvoke r0.<android.speech.tts.SynthesisPlaybackQueueItem: android.speech.tts.TextToSpeechService$UtteranceProgressDispatcher getDispatcher()>();

        $i0 = r0.<android.speech.tts.SynthesisPlaybackQueueItem: int mStatusCode>;

        if $i0 != 0 goto label1;

        interfaceinvoke r1.<android.speech.tts.TextToSpeechService$UtteranceProgressDispatcher: void dispatchOnSuccess()>();

        goto label3;

     label1:
        $i1 = r0.<android.speech.tts.SynthesisPlaybackQueueItem: int mStatusCode>;

        if $i1 != -2 goto label2;

        interfaceinvoke r1.<android.speech.tts.TextToSpeechService$UtteranceProgressDispatcher: void dispatchOnStop()>();

        goto label3;

     label2:
        $i2 = r0.<android.speech.tts.SynthesisPlaybackQueueItem: int mStatusCode>;

        interfaceinvoke r1.<android.speech.tts.TextToSpeechService$UtteranceProgressDispatcher: void dispatchOnError(int)>($i2);

     label3:
        $r2 = r0.<android.speech.tts.SynthesisPlaybackQueueItem: android.speech.tts.AbstractEventLogger mLogger>;

        $i3 = r0.<android.speech.tts.SynthesisPlaybackQueueItem: int mStatusCode>;

        virtualinvoke $r2.<android.speech.tts.AbstractEventLogger: void onCompleted(int)>($i3);

        return;
    }

    private byte[] take() throws java.lang.InterruptedException
    {
        android.speech.tts.SynthesisPlaybackQueueItem r0;
        boolean z0, $z1, $z2;
        java.util.concurrent.locks.Lock $r1, $r7, $r8, $r9, $r12;
        java.util.LinkedList $r2, $r3;
        int $i0, $i1, $i2, $i3;
        java.lang.Object $r4;
        byte[] $r5, r14;
        java.util.concurrent.locks.Condition $r6, $r10;
        java.lang.Throwable $r11;
        android.speech.tts.SynthesisPlaybackQueueItem$ListEntry r13;

        r0 := @this: android.speech.tts.SynthesisPlaybackQueueItem;

     label01:
        $r1 = r0.<android.speech.tts.SynthesisPlaybackQueueItem: java.util.concurrent.locks.Lock mListLock>;

        interfaceinvoke $r1.<java.util.concurrent.locks.Lock: void lock()>();

     label02:
        $r2 = r0.<android.speech.tts.SynthesisPlaybackQueueItem: java.util.LinkedList mDataBufferList>;

        $i0 = virtualinvoke $r2.<java.util.LinkedList: int size()>();

        if $i0 != 0 goto label04;

        $z1 = r0.<android.speech.tts.SynthesisPlaybackQueueItem: boolean mStopped>;

        if $z1 != 0 goto label04;

        $z2 = r0.<android.speech.tts.SynthesisPlaybackQueueItem: boolean mDone>;

        if $z2 != 0 goto label04;

        $r10 = r0.<android.speech.tts.SynthesisPlaybackQueueItem: java.util.concurrent.locks.Condition mReadReady>;

        interfaceinvoke $r10.<java.util.concurrent.locks.Condition: void await()>();

     label03:
        goto label02;

     label04:
        z0 = r0.<android.speech.tts.SynthesisPlaybackQueueItem: boolean mStopped>;

     label05:
        if z0 == 0 goto label06;

        $r9 = r0.<android.speech.tts.SynthesisPlaybackQueueItem: java.util.concurrent.locks.Lock mListLock>;

        interfaceinvoke $r9.<java.util.concurrent.locks.Lock: void unlock()>();

        return null;

     label06:
        $r3 = r0.<android.speech.tts.SynthesisPlaybackQueueItem: java.util.LinkedList mDataBufferList>;

        $r4 = virtualinvoke $r3.<java.util.LinkedList: java.lang.Object poll()>();

        r13 = (android.speech.tts.SynthesisPlaybackQueueItem$ListEntry) $r4;

     label07:
        if r13 != null goto label08;

        $r8 = r0.<android.speech.tts.SynthesisPlaybackQueueItem: java.util.concurrent.locks.Lock mListLock>;

        interfaceinvoke $r8.<java.util.concurrent.locks.Lock: void unlock()>();

        return null;

     label08:
        $i2 = r0.<android.speech.tts.SynthesisPlaybackQueueItem: int mUnconsumedBytes>;

        $r5 = r13.<android.speech.tts.SynthesisPlaybackQueueItem$ListEntry: byte[] mBytes>;

        $i1 = lengthof $r5;

        $i3 = $i2 - $i1;

        r0.<android.speech.tts.SynthesisPlaybackQueueItem: int mUnconsumedBytes> = $i3;

        $r6 = r0.<android.speech.tts.SynthesisPlaybackQueueItem: java.util.concurrent.locks.Condition mNotFull>;

        interfaceinvoke $r6.<java.util.concurrent.locks.Condition: void signal()>();

        r14 = r13.<android.speech.tts.SynthesisPlaybackQueueItem$ListEntry: byte[] mBytes>;

     label09:
        $r7 = r0.<android.speech.tts.SynthesisPlaybackQueueItem: java.util.concurrent.locks.Lock mListLock>;

        interfaceinvoke $r7.<java.util.concurrent.locks.Lock: void unlock()>();

        return r14;

     label10:
        $r11 := @caughtexception;

        $r12 = r0.<android.speech.tts.SynthesisPlaybackQueueItem: java.util.concurrent.locks.Lock mListLock>;

        interfaceinvoke $r12.<java.util.concurrent.locks.Lock: void unlock()>();

        throw $r11;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label02 to label03 with label10;
        catch java.lang.Throwable from label04 to label05 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    void done()
    {
        android.speech.tts.SynthesisPlaybackQueueItem r0;
        java.util.concurrent.locks.Lock $r2, $r5, $r7;
        java.util.concurrent.locks.Condition $r3, $r4;
        java.lang.Throwable $r6;

        r0 := @this: android.speech.tts.SynthesisPlaybackQueueItem;

     label1:
        $r2 = r0.<android.speech.tts.SynthesisPlaybackQueueItem: java.util.concurrent.locks.Lock mListLock>;

        interfaceinvoke $r2.<java.util.concurrent.locks.Lock: void lock()>();

        r0.<android.speech.tts.SynthesisPlaybackQueueItem: boolean mDone> = 1;

        $r3 = r0.<android.speech.tts.SynthesisPlaybackQueueItem: java.util.concurrent.locks.Condition mReadReady>;

        interfaceinvoke $r3.<java.util.concurrent.locks.Condition: void signal()>();

        $r4 = r0.<android.speech.tts.SynthesisPlaybackQueueItem: java.util.concurrent.locks.Condition mNotFull>;

        interfaceinvoke $r4.<java.util.concurrent.locks.Condition: void signal()>();

     label2:
        $r5 = r0.<android.speech.tts.SynthesisPlaybackQueueItem: java.util.concurrent.locks.Lock mListLock>;

        interfaceinvoke $r5.<java.util.concurrent.locks.Lock: void unlock()>();

        return;

     label3:
        $r6 := @caughtexception;

        $r7 = r0.<android.speech.tts.SynthesisPlaybackQueueItem: java.util.concurrent.locks.Lock mListLock>;

        interfaceinvoke $r7.<java.util.concurrent.locks.Lock: void unlock()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void onMarkerReached(android.media.AudioTrack)
    {
        android.speech.tts.SynthesisPlaybackQueueItem r0;
        java.util.concurrent.ConcurrentLinkedQueue $r1;
        java.lang.Object $r2;
        android.speech.tts.TextToSpeechService$UtteranceProgressDispatcher $r3;
        int $i0, $i1, $i2;
        android.media.AudioTrack r4;
        android.speech.tts.SynthesisPlaybackQueueItem$ProgressMarker r5;

        r0 := @this: android.speech.tts.SynthesisPlaybackQueueItem;

        r4 := @parameter0: android.media.AudioTrack;

        $r1 = r0.<android.speech.tts.SynthesisPlaybackQueueItem: java.util.concurrent.ConcurrentLinkedQueue markerList>;

        $r2 = virtualinvoke $r1.<java.util.concurrent.ConcurrentLinkedQueue: java.lang.Object poll()>();

        r5 = (android.speech.tts.SynthesisPlaybackQueueItem$ProgressMarker) $r2;

        if r5 != null goto label1;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("TTS.SynthQueueItem", "onMarkerReached reached called but no marker in queue");

        return;

     label1:
        $r3 = virtualinvoke r0.<android.speech.tts.SynthesisPlaybackQueueItem: android.speech.tts.TextToSpeechService$UtteranceProgressDispatcher getDispatcher()>();

        $i2 = r5.<android.speech.tts.SynthesisPlaybackQueueItem$ProgressMarker: int start>;

        $i1 = r5.<android.speech.tts.SynthesisPlaybackQueueItem$ProgressMarker: int end>;

        $i0 = r5.<android.speech.tts.SynthesisPlaybackQueueItem$ProgressMarker: int frames>;

        interfaceinvoke $r3.<android.speech.tts.TextToSpeechService$UtteranceProgressDispatcher: void dispatchOnRangeStart(int,int,int)>($i2, $i1, $i0);

        virtualinvoke r0.<android.speech.tts.SynthesisPlaybackQueueItem: void updateMarker()>();

        return;
    }

    public void onPeriodicNotification(android.media.AudioTrack)
    {
        android.speech.tts.SynthesisPlaybackQueueItem r0;
        android.media.AudioTrack r1;

        r0 := @this: android.speech.tts.SynthesisPlaybackQueueItem;

        r1 := @parameter0: android.media.AudioTrack;

        return;
    }

    void put(byte[]) throws java.lang.InterruptedException
    {
        android.speech.tts.SynthesisPlaybackQueueItem r0;
        boolean z0, $z2;
        java.util.LinkedList r1;
        android.speech.tts.SynthesisPlaybackQueueItem$ListEntry r2;
        java.util.concurrent.locks.Lock $r3, $r6, $r7, $r10;
        int $i0, $i3, $i4, $i5;
        android.speech.tts.BlockingAudioTrack $r4;
        long $l1;
        byte $b2;
        java.util.concurrent.locks.Condition $r5, $r8;
        java.lang.Throwable $r9;
        byte[] r11;

        r0 := @this: android.speech.tts.SynthesisPlaybackQueueItem;

        r11 := @parameter0: byte[];

     label1:
        $r3 = r0.<android.speech.tts.SynthesisPlaybackQueueItem: java.util.concurrent.locks.Lock mListLock>;

        interfaceinvoke $r3.<java.util.concurrent.locks.Lock: void lock()>();

     label2:
        $r4 = r0.<android.speech.tts.SynthesisPlaybackQueueItem: android.speech.tts.BlockingAudioTrack mAudioTrack>;

        $i0 = r0.<android.speech.tts.SynthesisPlaybackQueueItem: int mUnconsumedBytes>;

        $l1 = virtualinvoke $r4.<android.speech.tts.BlockingAudioTrack: long getAudioLengthMs(int)>($i0);

        $b2 = $l1 cmp 500L;

        if $b2 <= 0 goto label4;

        $z2 = r0.<android.speech.tts.SynthesisPlaybackQueueItem: boolean mStopped>;

        if $z2 != 0 goto label4;

        $r8 = r0.<android.speech.tts.SynthesisPlaybackQueueItem: java.util.concurrent.locks.Condition mNotFull>;

        interfaceinvoke $r8.<java.util.concurrent.locks.Condition: void await()>();

     label3:
        goto label2;

     label4:
        z0 = r0.<android.speech.tts.SynthesisPlaybackQueueItem: boolean mStopped>;

     label5:
        if z0 == 0 goto label6;

        $r7 = r0.<android.speech.tts.SynthesisPlaybackQueueItem: java.util.concurrent.locks.Lock mListLock>;

        interfaceinvoke $r7.<java.util.concurrent.locks.Lock: void unlock()>();

        return;

     label6:
        r1 = r0.<android.speech.tts.SynthesisPlaybackQueueItem: java.util.LinkedList mDataBufferList>;

        r2 = new android.speech.tts.SynthesisPlaybackQueueItem$ListEntry;

        specialinvoke r2.<android.speech.tts.SynthesisPlaybackQueueItem$ListEntry: void <init>(byte[])>(r11);

        virtualinvoke r1.<java.util.LinkedList: boolean add(java.lang.Object)>(r2);

        $i4 = r0.<android.speech.tts.SynthesisPlaybackQueueItem: int mUnconsumedBytes>;

        $i3 = lengthof r11;

        $i5 = $i4 + $i3;

        r0.<android.speech.tts.SynthesisPlaybackQueueItem: int mUnconsumedBytes> = $i5;

        $r5 = r0.<android.speech.tts.SynthesisPlaybackQueueItem: java.util.concurrent.locks.Condition mReadReady>;

        interfaceinvoke $r5.<java.util.concurrent.locks.Condition: void signal()>();

     label7:
        $r6 = r0.<android.speech.tts.SynthesisPlaybackQueueItem: java.util.concurrent.locks.Lock mListLock>;

        interfaceinvoke $r6.<java.util.concurrent.locks.Lock: void unlock()>();

        return;

     label8:
        $r9 := @caughtexception;

        $r10 = r0.<android.speech.tts.SynthesisPlaybackQueueItem: java.util.concurrent.locks.Lock mListLock>;

        interfaceinvoke $r10.<java.util.concurrent.locks.Lock: void unlock()>();

        throw $r9;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label2 to label3 with label8;
        catch java.lang.Throwable from label4 to label5 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
    }

    void rangeStart(int, int, int)
    {
        android.speech.tts.SynthesisPlaybackQueueItem r0;
        int i0, i1, i2;
        android.speech.tts.SynthesisPlaybackQueueItem$ProgressMarker $r1;
        java.util.concurrent.ConcurrentLinkedQueue $r2;

        r0 := @this: android.speech.tts.SynthesisPlaybackQueueItem;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $r2 = r0.<android.speech.tts.SynthesisPlaybackQueueItem: java.util.concurrent.ConcurrentLinkedQueue markerList>;

        $r1 = new android.speech.tts.SynthesisPlaybackQueueItem$ProgressMarker;

        specialinvoke $r1.<android.speech.tts.SynthesisPlaybackQueueItem$ProgressMarker: void <init>(android.speech.tts.SynthesisPlaybackQueueItem,int,int,int)>(r0, i0, i1, i2);

        virtualinvoke $r2.<java.util.concurrent.ConcurrentLinkedQueue: boolean add(java.lang.Object)>($r1);

        virtualinvoke r0.<android.speech.tts.SynthesisPlaybackQueueItem: void updateMarker()>();

        return;
    }

    public void run()
    {
        android.speech.tts.SynthesisPlaybackQueueItem r0;
        java.util.concurrent.atomic.AtomicInteger $r1;
        boolean $z0, $z1;
        android.speech.tts.BlockingAudioTrack $r2, $r3, $r4, $r5;
        android.speech.tts.AbstractEventLogger $r6;
        java.lang.Throwable $r7;
        android.speech.tts.TextToSpeechService$UtteranceProgressDispatcher r8;
        byte[] r9;

        r0 := @this: android.speech.tts.SynthesisPlaybackQueueItem;

        $r1 = r0.<android.speech.tts.SynthesisPlaybackQueueItem: java.util.concurrent.atomic.AtomicInteger mRunState>;

        $z0 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicInteger: boolean compareAndSet(int,int)>(0, 1);

        if $z0 != 0 goto label1;

        return;

     label1:
        r8 = virtualinvoke r0.<android.speech.tts.SynthesisPlaybackQueueItem: android.speech.tts.TextToSpeechService$UtteranceProgressDispatcher getDispatcher()>();

        interfaceinvoke r8.<android.speech.tts.TextToSpeechService$UtteranceProgressDispatcher: void dispatchOnStart()>();

        $r2 = r0.<android.speech.tts.SynthesisPlaybackQueueItem: android.speech.tts.BlockingAudioTrack mAudioTrack>;

        $z1 = virtualinvoke $r2.<android.speech.tts.BlockingAudioTrack: boolean init()>();

        if $z1 != 0 goto label2;

        interfaceinvoke r8.<android.speech.tts.TextToSpeechService$UtteranceProgressDispatcher: void dispatchOnError(int)>(-5);

        return;

     label2:
        $r3 = r0.<android.speech.tts.SynthesisPlaybackQueueItem: android.speech.tts.BlockingAudioTrack mAudioTrack>;

        virtualinvoke $r3.<android.speech.tts.BlockingAudioTrack: void setPlaybackPositionUpdateListener(android.media.AudioTrack$OnPlaybackPositionUpdateListener)>(r0);

        virtualinvoke r0.<android.speech.tts.SynthesisPlaybackQueueItem: void updateMarker()>();

     label3:
        r9 = specialinvoke r0.<android.speech.tts.SynthesisPlaybackQueueItem: byte[] take()>();

     label4:
        if r9 == null goto label7;

     label5:
        $r5 = r0.<android.speech.tts.SynthesisPlaybackQueueItem: android.speech.tts.BlockingAudioTrack mAudioTrack>;

        virtualinvoke $r5.<android.speech.tts.BlockingAudioTrack: int write(byte[])>(r9);

        $r6 = r0.<android.speech.tts.SynthesisPlaybackQueueItem: android.speech.tts.AbstractEventLogger mLogger>;

        virtualinvoke $r6.<android.speech.tts.AbstractEventLogger: void onAudioDataWritten()>();

     label6:
        goto label3;

     label7:
        goto label9;

     label8:
        $r7 := @caughtexception;

     label9:
        $r4 = r0.<android.speech.tts.SynthesisPlaybackQueueItem: android.speech.tts.BlockingAudioTrack mAudioTrack>;

        virtualinvoke $r4.<android.speech.tts.BlockingAudioTrack: void waitAndRelease()>();

        specialinvoke r0.<android.speech.tts.SynthesisPlaybackQueueItem: void dispatchEndStatus()>();

        return;

        catch java.lang.InterruptedException from label3 to label4 with label8;
        catch java.lang.InterruptedException from label5 to label6 with label8;
    }

    void stop(int)
    {
        android.speech.tts.SynthesisPlaybackQueueItem r0;
        int i0, $i1;
        java.util.concurrent.locks.Lock $r2, $r6, $r8, $r10;
        java.util.concurrent.locks.Condition $r3, $r5;
        java.util.concurrent.atomic.AtomicInteger $r4;
        android.speech.tts.BlockingAudioTrack $r7;
        java.lang.Throwable $r9;

        r0 := @this: android.speech.tts.SynthesisPlaybackQueueItem;

        i0 := @parameter0: int;

     label1:
        $r2 = r0.<android.speech.tts.SynthesisPlaybackQueueItem: java.util.concurrent.locks.Lock mListLock>;

        interfaceinvoke $r2.<java.util.concurrent.locks.Lock: void lock()>();

        r0.<android.speech.tts.SynthesisPlaybackQueueItem: boolean mStopped> = 1;

        r0.<android.speech.tts.SynthesisPlaybackQueueItem: int mStatusCode> = i0;

        $r3 = r0.<android.speech.tts.SynthesisPlaybackQueueItem: java.util.concurrent.locks.Condition mNotFull>;

        interfaceinvoke $r3.<java.util.concurrent.locks.Condition: void signal()>();

        $r4 = r0.<android.speech.tts.SynthesisPlaybackQueueItem: java.util.concurrent.atomic.AtomicInteger mRunState>;

        $i1 = virtualinvoke $r4.<java.util.concurrent.atomic.AtomicInteger: int getAndSet(int)>(2);

        if $i1 != 0 goto label3;

        specialinvoke r0.<android.speech.tts.SynthesisPlaybackQueueItem: void dispatchEndStatus()>();

     label2:
        $r8 = r0.<android.speech.tts.SynthesisPlaybackQueueItem: java.util.concurrent.locks.Lock mListLock>;

        interfaceinvoke $r8.<java.util.concurrent.locks.Lock: void unlock()>();

        return;

     label3:
        $r5 = r0.<android.speech.tts.SynthesisPlaybackQueueItem: java.util.concurrent.locks.Condition mReadReady>;

        interfaceinvoke $r5.<java.util.concurrent.locks.Condition: void signal()>();

     label4:
        $r6 = r0.<android.speech.tts.SynthesisPlaybackQueueItem: java.util.concurrent.locks.Lock mListLock>;

        interfaceinvoke $r6.<java.util.concurrent.locks.Lock: void unlock()>();

        $r7 = r0.<android.speech.tts.SynthesisPlaybackQueueItem: android.speech.tts.BlockingAudioTrack mAudioTrack>;

        virtualinvoke $r7.<android.speech.tts.BlockingAudioTrack: void stop()>();

        return;

     label5:
        $r9 := @caughtexception;

        $r10 = r0.<android.speech.tts.SynthesisPlaybackQueueItem: java.util.concurrent.locks.Lock mListLock>;

        interfaceinvoke $r10.<java.util.concurrent.locks.Lock: void unlock()>();

        throw $r9;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    void updateMarker()
    {
        android.speech.tts.SynthesisPlaybackQueueItem r0;
        android.speech.tts.SynthesisPlaybackQueueItem$ProgressMarker r1;
        java.util.concurrent.ConcurrentLinkedQueue $r2;
        java.lang.Object $r3;
        int $i0, i1;
        android.speech.tts.BlockingAudioTrack $r4;

        r0 := @this: android.speech.tts.SynthesisPlaybackQueueItem;

        $r2 = r0.<android.speech.tts.SynthesisPlaybackQueueItem: java.util.concurrent.ConcurrentLinkedQueue markerList>;

        $r3 = virtualinvoke $r2.<java.util.concurrent.ConcurrentLinkedQueue: java.lang.Object peek()>();

        r1 = (android.speech.tts.SynthesisPlaybackQueueItem$ProgressMarker) $r3;

        if r1 == null goto label3;

        $i0 = r1.<android.speech.tts.SynthesisPlaybackQueueItem$ProgressMarker: int frames>;

        if $i0 != 0 goto label1;

        i1 = 1;

        goto label2;

     label1:
        i1 = r1.<android.speech.tts.SynthesisPlaybackQueueItem$ProgressMarker: int frames>;

     label2:
        $r4 = r0.<android.speech.tts.SynthesisPlaybackQueueItem: android.speech.tts.BlockingAudioTrack mAudioTrack>;

        virtualinvoke $r4.<android.speech.tts.BlockingAudioTrack: void setNotificationMarkerPosition(int)>(i1);

     label3:
        return;
    }

    public static void <clinit>()
    {
        <android.speech.tts.SynthesisPlaybackQueueItem: java.lang.String TAG> = "TTS.SynthQueueItem";

        <android.speech.tts.SynthesisPlaybackQueueItem: int STOP_CALLED> = 2;

        <android.speech.tts.SynthesisPlaybackQueueItem: int RUN_CALLED> = 1;

        <android.speech.tts.SynthesisPlaybackQueueItem: int NOT_RUN> = 0;

        <android.speech.tts.SynthesisPlaybackQueueItem: long MAX_UNCONSUMED_AUDIO_MS> = 500L;

        <android.speech.tts.SynthesisPlaybackQueueItem: boolean DBG> = 0;

        return;
    }
}
