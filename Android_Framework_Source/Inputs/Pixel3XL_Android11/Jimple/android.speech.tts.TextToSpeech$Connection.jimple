class android.speech.tts.TextToSpeech$Connection extends java.lang.Object implements android.content.ServiceConnection
{
    private final android.speech.tts.ITextToSpeechCallback$Stub mCallback;
    private boolean mEstablished;
    private android.speech.tts.TextToSpeech$Connection$SetupConnectionAsyncTask mOnSetupConnectionAsyncTask;
    private android.speech.tts.ITextToSpeechService mService;
    final android.speech.tts.TextToSpeech this$0;

    private void <init>(android.speech.tts.TextToSpeech)
    {
        android.speech.tts.TextToSpeech$Connection r0;
        android.speech.tts.TextToSpeech r1;
        android.speech.tts.TextToSpeech$Connection$1 $r2;

        r0 := @this: android.speech.tts.TextToSpeech$Connection;

        r1 := @parameter0: android.speech.tts.TextToSpeech;

        r0.<android.speech.tts.TextToSpeech$Connection: android.speech.tts.TextToSpeech this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new android.speech.tts.TextToSpeech$Connection$1;

        specialinvoke $r2.<android.speech.tts.TextToSpeech$Connection$1: void <init>(android.speech.tts.TextToSpeech$Connection)>(r0);

        r0.<android.speech.tts.TextToSpeech$Connection: android.speech.tts.ITextToSpeechCallback$Stub mCallback> = $r2;

        return;
    }

    void <init>(android.speech.tts.TextToSpeech, android.speech.tts.TextToSpeech$1)
    {
        android.speech.tts.TextToSpeech$Connection r0;
        android.speech.tts.TextToSpeech r1;
        android.speech.tts.TextToSpeech$1 r2;

        r0 := @this: android.speech.tts.TextToSpeech$Connection;

        r1 := @parameter0: android.speech.tts.TextToSpeech;

        r2 := @parameter1: android.speech.tts.TextToSpeech$1;

        specialinvoke r0.<android.speech.tts.TextToSpeech$Connection: void <init>(android.speech.tts.TextToSpeech)>(r1);

        return;
    }

    static android.speech.tts.ITextToSpeechCallback$Stub access$300(android.speech.tts.TextToSpeech$Connection)
    {
        android.speech.tts.TextToSpeech$Connection r0;
        android.speech.tts.ITextToSpeechCallback$Stub $r1;

        r0 := @parameter0: android.speech.tts.TextToSpeech$Connection;

        $r1 = r0.<android.speech.tts.TextToSpeech$Connection: android.speech.tts.ITextToSpeechCallback$Stub mCallback>;

        return $r1;
    }

    static android.speech.tts.ITextToSpeechService access$400(android.speech.tts.TextToSpeech$Connection)
    {
        android.speech.tts.TextToSpeech$Connection r0;
        android.speech.tts.ITextToSpeechService $r1;

        r0 := @parameter0: android.speech.tts.TextToSpeech$Connection;

        $r1 = r0.<android.speech.tts.TextToSpeech$Connection: android.speech.tts.ITextToSpeechService mService>;

        return $r1;
    }

    static android.speech.tts.TextToSpeech$Connection$SetupConnectionAsyncTask access$600(android.speech.tts.TextToSpeech$Connection)
    {
        android.speech.tts.TextToSpeech$Connection r0;
        android.speech.tts.TextToSpeech$Connection$SetupConnectionAsyncTask $r1;

        r0 := @parameter0: android.speech.tts.TextToSpeech$Connection;

        $r1 = r0.<android.speech.tts.TextToSpeech$Connection: android.speech.tts.TextToSpeech$Connection$SetupConnectionAsyncTask mOnSetupConnectionAsyncTask>;

        return $r1;
    }

    static android.speech.tts.TextToSpeech$Connection$SetupConnectionAsyncTask access$602(android.speech.tts.TextToSpeech$Connection, android.speech.tts.TextToSpeech$Connection$SetupConnectionAsyncTask)
    {
        android.speech.tts.TextToSpeech$Connection r0;
        android.speech.tts.TextToSpeech$Connection$SetupConnectionAsyncTask r1;

        r0 := @parameter0: android.speech.tts.TextToSpeech$Connection;

        r1 := @parameter1: android.speech.tts.TextToSpeech$Connection$SetupConnectionAsyncTask;

        r0.<android.speech.tts.TextToSpeech$Connection: android.speech.tts.TextToSpeech$Connection$SetupConnectionAsyncTask mOnSetupConnectionAsyncTask> = r1;

        return r1;
    }

    static boolean access$702(android.speech.tts.TextToSpeech$Connection, boolean)
    {
        android.speech.tts.TextToSpeech$Connection r0;
        boolean z0;

        r0 := @parameter0: android.speech.tts.TextToSpeech$Connection;

        z0 := @parameter1: boolean;

        r0.<android.speech.tts.TextToSpeech$Connection: boolean mEstablished> = z0;

        return z0;
    }

    private boolean clearServiceConnection()
    {
        android.speech.tts.TextToSpeech$Connection r0, $r6;
        java.lang.Object r1;
        android.speech.tts.TextToSpeech $r3, $r5, $r7;
        android.speech.tts.TextToSpeech$Connection$SetupConnectionAsyncTask $r4, $r9;
        java.lang.Throwable $r10;
        boolean z0;

        r0 := @this: android.speech.tts.TextToSpeech$Connection;

        $r3 = r0.<android.speech.tts.TextToSpeech$Connection: android.speech.tts.TextToSpeech this$0>;

        r1 = staticinvoke <android.speech.tts.TextToSpeech: java.lang.Object access$200(android.speech.tts.TextToSpeech)>($r3);

        entermonitor r1;

        z0 = 0;

     label1:
        $r4 = r0.<android.speech.tts.TextToSpeech$Connection: android.speech.tts.TextToSpeech$Connection$SetupConnectionAsyncTask mOnSetupConnectionAsyncTask>;

        if $r4 == null goto label2;

        $r9 = r0.<android.speech.tts.TextToSpeech$Connection: android.speech.tts.TextToSpeech$Connection$SetupConnectionAsyncTask mOnSetupConnectionAsyncTask>;

        z0 = virtualinvoke $r9.<android.speech.tts.TextToSpeech$Connection$SetupConnectionAsyncTask: boolean cancel(boolean)>(0);

        r0.<android.speech.tts.TextToSpeech$Connection: android.speech.tts.TextToSpeech$Connection$SetupConnectionAsyncTask mOnSetupConnectionAsyncTask> = null;

     label2:
        r0.<android.speech.tts.TextToSpeech$Connection: android.speech.tts.ITextToSpeechService mService> = null;

        $r5 = r0.<android.speech.tts.TextToSpeech$Connection: android.speech.tts.TextToSpeech this$0>;

        $r6 = staticinvoke <android.speech.tts.TextToSpeech: android.speech.tts.TextToSpeech$Connection access$1000(android.speech.tts.TextToSpeech)>($r5);

        if $r6 != r0 goto label3;

        $r7 = r0.<android.speech.tts.TextToSpeech$Connection: android.speech.tts.TextToSpeech this$0>;

        staticinvoke <android.speech.tts.TextToSpeech: android.speech.tts.TextToSpeech$Connection access$1002(android.speech.tts.TextToSpeech,android.speech.tts.TextToSpeech$Connection)>($r7, null);

     label3:
        exitmonitor r1;

     label4:
        return z0;

     label5:
        $r10 := @caughtexception;

     label6:
        exitmonitor r1;

     label7:
        throw $r10;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label2 to label3 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public void disconnect()
    {
        android.speech.tts.TextToSpeech$Connection r0;
        android.speech.tts.TextToSpeech $r1;
        android.content.Context $r2;

        r0 := @this: android.speech.tts.TextToSpeech$Connection;

        $r1 = r0.<android.speech.tts.TextToSpeech$Connection: android.speech.tts.TextToSpeech this$0>;

        $r2 = staticinvoke <android.speech.tts.TextToSpeech: android.content.Context access$1100(android.speech.tts.TextToSpeech)>($r1);

        virtualinvoke $r2.<android.content.Context: void unbindService(android.content.ServiceConnection)>(r0);

        specialinvoke r0.<android.speech.tts.TextToSpeech$Connection: boolean clearServiceConnection()>();

        return;
    }

    public android.os.IBinder getCallerIdentity()
    {
        android.speech.tts.TextToSpeech$Connection r0;
        android.speech.tts.ITextToSpeechCallback$Stub $r1;

        r0 := @this: android.speech.tts.TextToSpeech$Connection;

        $r1 = r0.<android.speech.tts.TextToSpeech$Connection: android.speech.tts.ITextToSpeechCallback$Stub mCallback>;

        return $r1;
    }

    public boolean isEstablished()
    {
        android.speech.tts.TextToSpeech$Connection r0;
        android.speech.tts.ITextToSpeechService $r1;
        boolean $z0, z1;

        r0 := @this: android.speech.tts.TextToSpeech$Connection;

        $r1 = r0.<android.speech.tts.TextToSpeech$Connection: android.speech.tts.ITextToSpeechService mService>;

        if $r1 == null goto label1;

        $z0 = r0.<android.speech.tts.TextToSpeech$Connection: boolean mEstablished>;

        if $z0 == 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    public void onServiceConnected(android.content.ComponentName, android.os.IBinder)
    {
        android.speech.tts.TextToSpeech$Connection r0;
        java.lang.Object r1;
        java.lang.StringBuilder r2;
        android.speech.tts.TextToSpeech $r3, $r4, $r11;
        java.lang.String $r8;
        android.speech.tts.TextToSpeech$Connection$SetupConnectionAsyncTask $r9, $r15, r19;
        android.speech.tts.ITextToSpeechService $r10;
        java.lang.Void[] $r13;
        java.lang.Throwable $r16;
        android.content.ComponentName r17;
        android.os.IBinder r18;

        r0 := @this: android.speech.tts.TextToSpeech$Connection;

        r17 := @parameter0: android.content.ComponentName;

        r18 := @parameter1: android.os.IBinder;

        $r3 = r0.<android.speech.tts.TextToSpeech$Connection: android.speech.tts.TextToSpeech this$0>;

        r1 = staticinvoke <android.speech.tts.TextToSpeech: java.lang.Object access$200(android.speech.tts.TextToSpeech)>($r3);

        entermonitor r1;

     label1:
        $r4 = r0.<android.speech.tts.TextToSpeech$Connection: android.speech.tts.TextToSpeech this$0>;

        staticinvoke <android.speech.tts.TextToSpeech: android.speech.tts.TextToSpeech$Connection access$902(android.speech.tts.TextToSpeech,android.speech.tts.TextToSpeech$Connection)>($r4, null);

        r2 = new java.lang.StringBuilder;

        specialinvoke r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Connected to ");

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r17);

        $r8 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("TextToSpeech", $r8);

        $r9 = r0.<android.speech.tts.TextToSpeech$Connection: android.speech.tts.TextToSpeech$Connection$SetupConnectionAsyncTask mOnSetupConnectionAsyncTask>;

        if $r9 == null goto label2;

        $r15 = r0.<android.speech.tts.TextToSpeech$Connection: android.speech.tts.TextToSpeech$Connection$SetupConnectionAsyncTask mOnSetupConnectionAsyncTask>;

        virtualinvoke $r15.<android.speech.tts.TextToSpeech$Connection$SetupConnectionAsyncTask: boolean cancel(boolean)>(0);

     label2:
        $r10 = staticinvoke <android.speech.tts.ITextToSpeechService$Stub: android.speech.tts.ITextToSpeechService asInterface(android.os.IBinder)>(r18);

        r0.<android.speech.tts.TextToSpeech$Connection: android.speech.tts.ITextToSpeechService mService> = $r10;

        $r11 = r0.<android.speech.tts.TextToSpeech$Connection: android.speech.tts.TextToSpeech this$0>;

        staticinvoke <android.speech.tts.TextToSpeech: android.speech.tts.TextToSpeech$Connection access$1002(android.speech.tts.TextToSpeech,android.speech.tts.TextToSpeech$Connection)>($r11, r0);

        r0.<android.speech.tts.TextToSpeech$Connection: boolean mEstablished> = 0;

        r19 = new android.speech.tts.TextToSpeech$Connection$SetupConnectionAsyncTask;

        specialinvoke r19.<android.speech.tts.TextToSpeech$Connection$SetupConnectionAsyncTask: void <init>(android.speech.tts.TextToSpeech$Connection,android.content.ComponentName)>(r0, r17);

        r0.<android.speech.tts.TextToSpeech$Connection: android.speech.tts.TextToSpeech$Connection$SetupConnectionAsyncTask mOnSetupConnectionAsyncTask> = r19;

        $r13 = newarray (java.lang.Void)[0];

        virtualinvoke r19.<android.speech.tts.TextToSpeech$Connection$SetupConnectionAsyncTask: android.os.AsyncTask execute(java.lang.Object[])>($r13);

        exitmonitor r1;

     label3:
        return;

     label4:
        $r16 := @caughtexception;

     label5:
        exitmonitor r1;

     label6:
        throw $r16;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public void onServiceDisconnected(android.content.ComponentName)
    {
        android.speech.tts.TextToSpeech$Connection r0;
        android.content.ComponentName r1;
        java.lang.StringBuilder $r3;
        java.lang.String $r6;
        boolean $z0;
        android.speech.tts.TextToSpeech $r7;

        r0 := @this: android.speech.tts.TextToSpeech$Connection;

        r1 := @parameter0: android.content.ComponentName;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Asked to disconnect from ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("TextToSpeech", $r6);

        $z0 = specialinvoke r0.<android.speech.tts.TextToSpeech$Connection: boolean clearServiceConnection()>();

        if $z0 == 0 goto label1;

        $r7 = r0.<android.speech.tts.TextToSpeech$Connection: android.speech.tts.TextToSpeech this$0>;

        staticinvoke <android.speech.tts.TextToSpeech: void access$800(android.speech.tts.TextToSpeech,int)>($r7, -1);

     label1:
        return;
    }

    public java.lang.Object runAction(android.speech.tts.TextToSpeech$Action, java.lang.Object, java.lang.String, boolean, boolean)
    {
        android.speech.tts.TextToSpeech$Connection r0;
        java.lang.Object r1, r3, r23;
        java.lang.String r2, $r10, $r13, $r18;
        boolean z0, z1, $z2;
        android.speech.tts.TextToSpeech $r5, $r19;
        android.speech.tts.ITextToSpeechService $r6, $r7;
        java.lang.Throwable $r14;
        android.os.RemoteException $r15;
        android.speech.tts.TextToSpeech$Action r20;
        java.lang.StringBuilder r21, r22, r25;

        r0 := @this: android.speech.tts.TextToSpeech$Connection;

        r20 := @parameter0: android.speech.tts.TextToSpeech$Action;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: java.lang.String;

        z0 := @parameter3: boolean;

        z1 := @parameter4: boolean;

        $r5 = r0.<android.speech.tts.TextToSpeech$Connection: android.speech.tts.TextToSpeech this$0>;

        r3 = staticinvoke <android.speech.tts.TextToSpeech: java.lang.Object access$200(android.speech.tts.TextToSpeech)>($r5);

        entermonitor r3;

     label01:
        $r6 = r0.<android.speech.tts.TextToSpeech$Connection: android.speech.tts.ITextToSpeechService mService>;

        if $r6 != null goto label04;

        r21 = new java.lang.StringBuilder;

        specialinvoke r21.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        virtualinvoke r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" failed: not connected to TTS engine");

        $r13 = virtualinvoke r21.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("TextToSpeech", $r13);

     label02:
        exitmonitor r3;

     label03:
        return r1;

     label04:
        if z1 == 0 goto label08;

     label05:
        $z2 = virtualinvoke r0.<android.speech.tts.TextToSpeech$Connection: boolean isEstablished()>();

        if $z2 != 0 goto label08;

        r22 = new java.lang.StringBuilder;

        specialinvoke r22.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        virtualinvoke r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" failed: TTS engine connection not fully set up");

        $r10 = virtualinvoke r22.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("TextToSpeech", $r10);

     label06:
        exitmonitor r3;

     label07:
        return r1;

     label08:
        $r7 = r0.<android.speech.tts.TextToSpeech$Connection: android.speech.tts.ITextToSpeechService mService>;

        r23 = interfaceinvoke r20.<android.speech.tts.TextToSpeech$Action: java.lang.Object run(android.speech.tts.ITextToSpeechService)>($r7);

     label09:
        exitmonitor r3;

     label10:
        return r23;

     label11:
        $r14 := @caughtexception;

        goto label18;

     label12:
        $r15 := @caughtexception;

     label13:
        r25 = new java.lang.StringBuilder;

        specialinvoke r25.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        virtualinvoke r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" failed");

        $r18 = virtualinvoke r25.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TextToSpeech", $r18, $r15);

     label14:
        if z0 == 0 goto label16;

     label15:
        virtualinvoke r0.<android.speech.tts.TextToSpeech$Connection: void disconnect()>();

        $r19 = r0.<android.speech.tts.TextToSpeech$Connection: android.speech.tts.TextToSpeech this$0>;

        staticinvoke <android.speech.tts.TextToSpeech: int access$1200(android.speech.tts.TextToSpeech)>($r19);

     label16:
        exitmonitor r3;

     label17:
        return r1;

     label18:
        exitmonitor r3;

     label19:
        throw $r14;

        catch android.os.RemoteException from label01 to label02 with label12;
        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label02 to label03 with label11;
        catch android.os.RemoteException from label05 to label06 with label12;
        catch java.lang.Throwable from label05 to label06 with label11;
        catch java.lang.Throwable from label06 to label07 with label11;
        catch android.os.RemoteException from label08 to label09 with label12;
        catch java.lang.Throwable from label08 to label09 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label13 to label14 with label11;
        catch java.lang.Throwable from label15 to label16 with label11;
        catch java.lang.Throwable from label16 to label17 with label11;
        catch java.lang.Throwable from label18 to label19 with label11;
    }
}
