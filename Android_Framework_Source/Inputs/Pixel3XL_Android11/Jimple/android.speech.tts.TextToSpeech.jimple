public class android.speech.tts.TextToSpeech extends java.lang.Object
{
    public static final java.lang.String ACTION_TTS_QUEUE_PROCESSING_COMPLETED;
    public static final int ERROR;
    public static final int ERROR_INVALID_REQUEST;
    public static final int ERROR_NETWORK;
    public static final int ERROR_NETWORK_TIMEOUT;
    public static final int ERROR_NOT_INSTALLED_YET;
    public static final int ERROR_OUTPUT;
    public static final int ERROR_SERVICE;
    public static final int ERROR_SYNTHESIS;
    public static final int LANG_AVAILABLE;
    public static final int LANG_COUNTRY_AVAILABLE;
    public static final int LANG_COUNTRY_VAR_AVAILABLE;
    public static final int LANG_MISSING_DATA;
    public static final int LANG_NOT_SUPPORTED;
    public static final int QUEUE_ADD;
    static final int QUEUE_DESTROY;
    public static final int QUEUE_FLUSH;
    public static final int STOPPED;
    public static final int SUCCESS;
    private static final java.lang.String TAG;
    private android.speech.tts.TextToSpeech$Connection mConnectingServiceConnection;
    private final android.content.Context mContext;
    private volatile java.lang.String mCurrentEngine;
    private final java.util.Map mEarcons;
    private final android.speech.tts.TtsEngines mEnginesHelper;
    private android.speech.tts.TextToSpeech$OnInitListener mInitListener;
    private final android.os.Bundle mParams;
    private java.lang.String mRequestedEngine;
    private android.speech.tts.TextToSpeech$Connection mServiceConnection;
    private final java.lang.Object mStartLock;
    private final boolean mUseFallback;
    private volatile android.speech.tts.UtteranceProgressListener mUtteranceProgressListener;
    private final java.util.Map mUtterances;

    public void <init>(android.content.Context, android.speech.tts.TextToSpeech$OnInitListener)
    {
        android.speech.tts.TextToSpeech r0;
        android.content.Context r1;
        android.speech.tts.TextToSpeech$OnInitListener r2;

        r0 := @this: android.speech.tts.TextToSpeech;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.speech.tts.TextToSpeech$OnInitListener;

        specialinvoke r0.<android.speech.tts.TextToSpeech: void <init>(android.content.Context,android.speech.tts.TextToSpeech$OnInitListener,java.lang.String)>(r1, r2, null);

        return;
    }

    public void <init>(android.content.Context, android.speech.tts.TextToSpeech$OnInitListener, java.lang.String)
    {
        android.speech.tts.TextToSpeech r0;
        android.content.Context r1;
        android.speech.tts.TextToSpeech$OnInitListener r2;
        java.lang.String r3;

        r0 := @this: android.speech.tts.TextToSpeech;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.speech.tts.TextToSpeech$OnInitListener;

        r3 := @parameter2: java.lang.String;

        specialinvoke r0.<android.speech.tts.TextToSpeech: void <init>(android.content.Context,android.speech.tts.TextToSpeech$OnInitListener,java.lang.String,java.lang.String,boolean)>(r1, r2, r3, null, 1);

        return;
    }

    public void <init>(android.content.Context, android.speech.tts.TextToSpeech$OnInitListener, java.lang.String, java.lang.String, boolean)
    {
        android.speech.tts.TextToSpeech r0;
        android.content.Context r1, $r10;
        android.speech.tts.TextToSpeech$OnInitListener r2;
        java.lang.String r3, r4;
        boolean z0;
        java.lang.Object $r5;
        android.os.Bundle $r6;
        java.util.HashMap $r7, $r8;
        android.speech.tts.TtsEngines $r9;

        r0 := @this: android.speech.tts.TextToSpeech;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.speech.tts.TextToSpeech$OnInitListener;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        z0 := @parameter4: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r5 = new java.lang.Object;

        specialinvoke $r5.<java.lang.Object: void <init>()>();

        r0.<android.speech.tts.TextToSpeech: java.lang.Object mStartLock> = $r5;

        $r6 = new android.os.Bundle;

        specialinvoke $r6.<android.os.Bundle: void <init>()>();

        r0.<android.speech.tts.TextToSpeech: android.os.Bundle mParams> = $r6;

        r0.<android.speech.tts.TextToSpeech: java.lang.String mCurrentEngine> = null;

        r0.<android.speech.tts.TextToSpeech: android.content.Context mContext> = r1;

        r0.<android.speech.tts.TextToSpeech: android.speech.tts.TextToSpeech$OnInitListener mInitListener> = r2;

        r0.<android.speech.tts.TextToSpeech: java.lang.String mRequestedEngine> = r3;

        r0.<android.speech.tts.TextToSpeech: boolean mUseFallback> = z0;

        $r7 = new java.util.HashMap;

        specialinvoke $r7.<java.util.HashMap: void <init>()>();

        r0.<android.speech.tts.TextToSpeech: java.util.Map mEarcons> = $r7;

        $r8 = new java.util.HashMap;

        specialinvoke $r8.<java.util.HashMap: void <init>()>();

        r0.<android.speech.tts.TextToSpeech: java.util.Map mUtterances> = $r8;

        r0.<android.speech.tts.TextToSpeech: android.speech.tts.UtteranceProgressListener mUtteranceProgressListener> = null;

        $r9 = new android.speech.tts.TtsEngines;

        $r10 = r0.<android.speech.tts.TextToSpeech: android.content.Context mContext>;

        specialinvoke $r9.<android.speech.tts.TtsEngines: void <init>(android.content.Context)>($r10);

        r0.<android.speech.tts.TextToSpeech: android.speech.tts.TtsEngines mEnginesHelper> = $r9;

        specialinvoke r0.<android.speech.tts.TextToSpeech: int initTts()>();

        return;
    }

    static android.speech.tts.UtteranceProgressListener access$100(android.speech.tts.TextToSpeech)
    {
        android.speech.tts.TextToSpeech r0;
        android.speech.tts.UtteranceProgressListener $r1;

        r0 := @parameter0: android.speech.tts.TextToSpeech;

        $r1 = r0.<android.speech.tts.TextToSpeech: android.speech.tts.UtteranceProgressListener mUtteranceProgressListener>;

        return $r1;
    }

    static android.speech.tts.TextToSpeech$Connection access$1000(android.speech.tts.TextToSpeech)
    {
        android.speech.tts.TextToSpeech r0;
        android.speech.tts.TextToSpeech$Connection $r1;

        r0 := @parameter0: android.speech.tts.TextToSpeech;

        $r1 = r0.<android.speech.tts.TextToSpeech: android.speech.tts.TextToSpeech$Connection mServiceConnection>;

        return $r1;
    }

    static android.speech.tts.TextToSpeech$Connection access$1002(android.speech.tts.TextToSpeech, android.speech.tts.TextToSpeech$Connection)
    {
        android.speech.tts.TextToSpeech r0;
        android.speech.tts.TextToSpeech$Connection r1;

        r0 := @parameter0: android.speech.tts.TextToSpeech;

        r1 := @parameter1: android.speech.tts.TextToSpeech$Connection;

        r0.<android.speech.tts.TextToSpeech: android.speech.tts.TextToSpeech$Connection mServiceConnection> = r1;

        return r1;
    }

    static android.content.Context access$1100(android.speech.tts.TextToSpeech)
    {
        android.speech.tts.TextToSpeech r0;
        android.content.Context $r1;

        r0 := @parameter0: android.speech.tts.TextToSpeech;

        $r1 = r0.<android.speech.tts.TextToSpeech: android.content.Context mContext>;

        return $r1;
    }

    static int access$1200(android.speech.tts.TextToSpeech)
    {
        android.speech.tts.TextToSpeech r0;
        int $i0;

        r0 := @parameter0: android.speech.tts.TextToSpeech;

        $i0 = specialinvoke r0.<android.speech.tts.TextToSpeech: int initTts()>();

        return $i0;
    }

    static java.lang.Object access$200(android.speech.tts.TextToSpeech)
    {
        android.speech.tts.TextToSpeech r0;
        java.lang.Object $r1;

        r0 := @parameter0: android.speech.tts.TextToSpeech;

        $r1 = r0.<android.speech.tts.TextToSpeech: java.lang.Object mStartLock>;

        return $r1;
    }

    static android.os.Bundle access$500(android.speech.tts.TextToSpeech)
    {
        android.speech.tts.TextToSpeech r0;
        android.os.Bundle $r1;

        r0 := @parameter0: android.speech.tts.TextToSpeech;

        $r1 = r0.<android.speech.tts.TextToSpeech: android.os.Bundle mParams>;

        return $r1;
    }

    static void access$800(android.speech.tts.TextToSpeech, int)
    {
        android.speech.tts.TextToSpeech r0;
        int i0;

        r0 := @parameter0: android.speech.tts.TextToSpeech;

        i0 := @parameter1: int;

        specialinvoke r0.<android.speech.tts.TextToSpeech: void dispatchOnInit(int)>(i0);

        return;
    }

    static android.speech.tts.TextToSpeech$Connection access$902(android.speech.tts.TextToSpeech, android.speech.tts.TextToSpeech$Connection)
    {
        android.speech.tts.TextToSpeech r0;
        android.speech.tts.TextToSpeech$Connection r1;

        r0 := @parameter0: android.speech.tts.TextToSpeech;

        r1 := @parameter1: android.speech.tts.TextToSpeech$Connection;

        r0.<android.speech.tts.TextToSpeech: android.speech.tts.TextToSpeech$Connection mConnectingServiceConnection> = r1;

        return r1;
    }

    private boolean connectToEngine(java.lang.String)
    {
        android.speech.tts.TextToSpeech r0;
        java.lang.String r1, $r9, $r13;
        android.speech.tts.TextToSpeech$Connection $r2;
        android.content.Intent $r3;
        android.content.Context $r5;
        boolean $z0;
        java.lang.StringBuilder $r6, $r10;

        r0 := @this: android.speech.tts.TextToSpeech;

        r1 := @parameter0: java.lang.String;

        $r2 = new android.speech.tts.TextToSpeech$Connection;

        specialinvoke $r2.<android.speech.tts.TextToSpeech$Connection: void <init>(android.speech.tts.TextToSpeech,android.speech.tts.TextToSpeech$1)>(r0, null);

        $r3 = new android.content.Intent;

        specialinvoke $r3.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.TTS_SERVICE");

        virtualinvoke $r3.<android.content.Intent: android.content.Intent setPackage(java.lang.String)>(r1);

        $r5 = r0.<android.speech.tts.TextToSpeech: android.content.Context mContext>;

        $z0 = virtualinvoke $r5.<android.content.Context: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)>($r3, $r2, 1);

        if $z0 != 0 goto label1;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to bind to ");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("TextToSpeech", $r13);

        return 0;

     label1:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Sucessfully bound to ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("TextToSpeech", $r9);

        r0.<android.speech.tts.TextToSpeech: android.speech.tts.TextToSpeech$Connection mConnectingServiceConnection> = $r2;

        return 1;
    }

    private android.os.Bundle convertParamsHashMaptoBundle(java.util.HashMap)
    {
        android.speech.tts.TextToSpeech r0;
        java.util.Iterator r2;
        java.lang.String r3, $r5, $r9, $r11;
        boolean $z0, $z1, $z2, $z3;
        android.os.Bundle $r4;
        java.util.Set $r6;
        java.lang.Object $r7, $r8, $r10;
        java.util.HashMap r12;
        java.util.Map$Entry r13;

        r0 := @this: android.speech.tts.TextToSpeech;

        r12 := @parameter0: java.util.HashMap;

        if r12 == null goto label4;

        $z0 = virtualinvoke r12.<java.util.HashMap: boolean isEmpty()>();

        if $z0 != 0 goto label4;

        $r4 = new android.os.Bundle;

        specialinvoke $r4.<android.os.Bundle: void <init>()>();

        specialinvoke r0.<android.speech.tts.TextToSpeech: void copyIntParam(android.os.Bundle,java.util.HashMap,java.lang.String)>($r4, r12, "streamType");

        specialinvoke r0.<android.speech.tts.TextToSpeech: void copyIntParam(android.os.Bundle,java.util.HashMap,java.lang.String)>($r4, r12, "sessionId");

        specialinvoke r0.<android.speech.tts.TextToSpeech: void copyStringParam(android.os.Bundle,java.util.HashMap,java.lang.String)>($r4, r12, "utteranceId");

        specialinvoke r0.<android.speech.tts.TextToSpeech: void copyFloatParam(android.os.Bundle,java.util.HashMap,java.lang.String)>($r4, r12, "volume");

        specialinvoke r0.<android.speech.tts.TextToSpeech: void copyFloatParam(android.os.Bundle,java.util.HashMap,java.lang.String)>($r4, r12, "pan");

        specialinvoke r0.<android.speech.tts.TextToSpeech: void copyStringParam(android.os.Bundle,java.util.HashMap,java.lang.String)>($r4, r12, "networkTts");

        specialinvoke r0.<android.speech.tts.TextToSpeech: void copyStringParam(android.os.Bundle,java.util.HashMap,java.lang.String)>($r4, r12, "embeddedTts");

        specialinvoke r0.<android.speech.tts.TextToSpeech: void copyIntParam(android.os.Bundle,java.util.HashMap,java.lang.String)>($r4, r12, "networkTimeoutMs");

        specialinvoke r0.<android.speech.tts.TextToSpeech: void copyIntParam(android.os.Bundle,java.util.HashMap,java.lang.String)>($r4, r12, "networkRetriesCount");

        $r5 = r0.<android.speech.tts.TextToSpeech: java.lang.String mCurrentEngine>;

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r5);

        if $z1 != 0 goto label3;

        $r6 = virtualinvoke r12.<java.util.HashMap: java.util.Set entrySet()>();

        r2 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z2 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label3;

        $r7 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r13 = (java.util.Map$Entry) $r7;

        $r8 = interfaceinvoke r13.<java.util.Map$Entry: java.lang.Object getKey()>();

        r3 = (java.lang.String) $r8;

        if r3 == null goto label2;

        $r9 = r0.<android.speech.tts.TextToSpeech: java.lang.String mCurrentEngine>;

        $z3 = virtualinvoke r3.<java.lang.String: boolean startsWith(java.lang.String)>($r9);

        if $z3 == 0 goto label2;

        $r10 = interfaceinvoke r13.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r11 = (java.lang.String) $r10;

        virtualinvoke $r4.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>(r3, $r11);

     label2:
        goto label1;

     label3:
        return $r4;

     label4:
        return null;
    }

    private void copyFloatParam(android.os.Bundle, java.util.HashMap, java.lang.String)
    {
        android.speech.tts.TextToSpeech r0;
        java.lang.String r1, r6;
        java.lang.Object $r2;
        boolean $z0;
        float $f0;
        java.lang.Throwable $r3;
        android.os.Bundle r4;
        java.util.HashMap r5;

        r0 := @this: android.speech.tts.TextToSpeech;

        r4 := @parameter0: android.os.Bundle;

        r5 := @parameter1: java.util.HashMap;

        r1 := @parameter2: java.lang.String;

        $r2 = virtualinvoke r5.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r6 = (java.lang.String) $r2;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r6);

        if $z0 != 0 goto label4;

     label1:
        $f0 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>(r6);

        virtualinvoke r4.<android.os.Bundle: void putFloat(java.lang.String,float)>(r1, $f0);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

     label4:
        return;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    private void copyIntParam(android.os.Bundle, java.util.HashMap, java.lang.String)
    {
        android.speech.tts.TextToSpeech r0;
        java.lang.String r1, r6;
        java.lang.Object $r2;
        boolean $z0;
        int $i0;
        java.lang.Throwable $r3;
        android.os.Bundle r4;
        java.util.HashMap r5;

        r0 := @this: android.speech.tts.TextToSpeech;

        r4 := @parameter0: android.os.Bundle;

        r5 := @parameter1: java.util.HashMap;

        r1 := @parameter2: java.lang.String;

        $r2 = virtualinvoke r5.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r6 = (java.lang.String) $r2;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r6);

        if $z0 != 0 goto label4;

     label1:
        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r6);

        virtualinvoke r4.<android.os.Bundle: void putInt(java.lang.String,int)>(r1, $i0);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

     label4:
        return;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    private void copyStringParam(android.os.Bundle, java.util.HashMap, java.lang.String)
    {
        android.speech.tts.TextToSpeech r0;
        android.os.Bundle r1;
        java.lang.String r2, r5;
        java.lang.Object $r3;
        java.util.HashMap r4;

        r0 := @this: android.speech.tts.TextToSpeech;

        r1 := @parameter0: android.os.Bundle;

        r4 := @parameter1: java.util.HashMap;

        r2 := @parameter2: java.lang.String;

        $r3 = virtualinvoke r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r2);

        r5 = (java.lang.String) $r3;

        if r5 == null goto label1;

        virtualinvoke r1.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>(r2, r5);

     label1:
        return;
    }

    private void dispatchOnInit(int)
    {
        android.speech.tts.TextToSpeech r0;
        int i0;
        java.lang.Object r1;
        android.speech.tts.TextToSpeech$OnInitListener $r3, $r4;
        java.lang.Throwable $r5;

        r0 := @this: android.speech.tts.TextToSpeech;

        i0 := @parameter0: int;

        r1 = r0.<android.speech.tts.TextToSpeech: java.lang.Object mStartLock>;

        entermonitor r1;

     label1:
        $r3 = r0.<android.speech.tts.TextToSpeech: android.speech.tts.TextToSpeech$OnInitListener mInitListener>;

        if $r3 == null goto label2;

        $r4 = r0.<android.speech.tts.TextToSpeech: android.speech.tts.TextToSpeech$OnInitListener mInitListener>;

        interfaceinvoke $r4.<android.speech.tts.TextToSpeech$OnInitListener: void onInit(int)>(i0);

        r0.<android.speech.tts.TextToSpeech: android.speech.tts.TextToSpeech$OnInitListener mInitListener> = null;

     label2:
        exitmonitor r1;

     label3:
        return;

     label4:
        $r5 := @caughtexception;

     label5:
        exitmonitor r1;

     label6:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    private android.os.IBinder getCallerIdentity()
    {
        android.speech.tts.TextToSpeech r0;
        android.speech.tts.TextToSpeech$Connection $r1;
        android.os.IBinder $r2;

        r0 := @this: android.speech.tts.TextToSpeech;

        $r1 = r0.<android.speech.tts.TextToSpeech: android.speech.tts.TextToSpeech$Connection mServiceConnection>;

        $r2 = virtualinvoke $r1.<android.speech.tts.TextToSpeech$Connection: android.os.IBinder getCallerIdentity()>();

        return $r2;
    }

    public static int getMaxSpeechInputLength()
    {
        return 4000;
    }

    private android.os.Bundle getParams(android.os.Bundle)
    {
        android.speech.tts.TextToSpeech r0;
        android.os.Bundle r1, $r3, $r4, $r5;
        boolean $z0;

        r0 := @this: android.speech.tts.TextToSpeech;

        r1 := @parameter0: android.os.Bundle;

        if r1 == null goto label1;

        $z0 = virtualinvoke r1.<android.os.Bundle: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $r4 = new android.os.Bundle;

        $r5 = r0.<android.speech.tts.TextToSpeech: android.os.Bundle mParams>;

        specialinvoke $r4.<android.os.Bundle: void <init>(android.os.Bundle)>($r5);

        virtualinvoke $r4.<android.os.Bundle: void putAll(android.os.Bundle)>(r1);

        staticinvoke <android.speech.tts.TextToSpeech: boolean verifyIntegerBundleParam(android.os.Bundle,java.lang.String)>($r4, "streamType");

        staticinvoke <android.speech.tts.TextToSpeech: boolean verifyIntegerBundleParam(android.os.Bundle,java.lang.String)>($r4, "sessionId");

        staticinvoke <android.speech.tts.TextToSpeech: boolean verifyStringBundleParam(android.os.Bundle,java.lang.String)>($r4, "utteranceId");

        staticinvoke <android.speech.tts.TextToSpeech: boolean verifyFloatBundleParam(android.os.Bundle,java.lang.String)>($r4, "volume");

        staticinvoke <android.speech.tts.TextToSpeech: boolean verifyFloatBundleParam(android.os.Bundle,java.lang.String)>($r4, "pan");

        staticinvoke <android.speech.tts.TextToSpeech: boolean verifyBooleanBundleParam(android.os.Bundle,java.lang.String)>($r4, "networkTts");

        staticinvoke <android.speech.tts.TextToSpeech: boolean verifyBooleanBundleParam(android.os.Bundle,java.lang.String)>($r4, "embeddedTts");

        staticinvoke <android.speech.tts.TextToSpeech: boolean verifyIntegerBundleParam(android.os.Bundle,java.lang.String)>($r4, "networkTimeoutMs");

        staticinvoke <android.speech.tts.TextToSpeech: boolean verifyIntegerBundleParam(android.os.Bundle,java.lang.String)>($r4, "networkRetriesCount");

        return $r4;

     label1:
        $r3 = r0.<android.speech.tts.TextToSpeech: android.os.Bundle mParams>;

        return $r3;
    }

    private android.speech.tts.Voice getVoice(android.speech.tts.ITextToSpeechService, java.lang.String) throws android.os.RemoteException
    {
        android.speech.tts.TextToSpeech r0;
        java.lang.String r1, $r7, $r9;
        android.speech.tts.Voice r2;
        boolean $z0, $z1;
        java.lang.StringBuilder $r3;
        java.lang.Object $r8;
        android.speech.tts.ITextToSpeechService r10;
        java.util.List r11;
        java.util.Iterator r12;

        r0 := @this: android.speech.tts.TextToSpeech;

        r10 := @parameter0: android.speech.tts.ITextToSpeechService;

        r1 := @parameter1: java.lang.String;

        r11 = interfaceinvoke r10.<android.speech.tts.ITextToSpeechService: java.util.List getVoices()>();

        if r11 != null goto label1;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("TextToSpeech", "getVoices returned null");

        return null;

     label1:
        r12 = interfaceinvoke r11.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r8 = interfaceinvoke r12.<java.util.Iterator: java.lang.Object next()>();

        r2 = (android.speech.tts.Voice) $r8;

        $r9 = virtualinvoke r2.<android.speech.tts.Voice: java.lang.String getName()>();

        $z1 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z1 == 0 goto label3;

        return r2;

     label3:
        goto label2;

     label4:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not find voice ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in voice list");

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("TextToSpeech", $r7);

        return null;
    }

    private int initTts()
    {
        android.speech.tts.TextToSpeech r0;
        java.lang.String r1, $r2, $r3, $r7, $r9, $r10, $r11, r12, r14;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        android.speech.tts.TtsEngines $r4, $r15;
        java.lang.StringBuilder $r5;

        r0 := @this: android.speech.tts.TextToSpeech;

        r12 = r0.<android.speech.tts.TextToSpeech: java.lang.String mRequestedEngine>;

        if r12 == null goto label3;

        $r4 = r0.<android.speech.tts.TextToSpeech: android.speech.tts.TtsEngines mEnginesHelper>;

        $z5 = virtualinvoke $r4.<android.speech.tts.TtsEngines: boolean isEngineInstalled(java.lang.String)>(r12);

        if $z5 == 0 goto label2;

        $r10 = r0.<android.speech.tts.TextToSpeech: java.lang.String mRequestedEngine>;

        $z7 = specialinvoke r0.<android.speech.tts.TextToSpeech: boolean connectToEngine(java.lang.String)>($r10);

        if $z7 == 0 goto label1;

        $r11 = r0.<android.speech.tts.TextToSpeech: java.lang.String mRequestedEngine>;

        r0.<android.speech.tts.TextToSpeech: java.lang.String mCurrentEngine> = $r11;

        return 0;

     label1:
        $z8 = r0.<android.speech.tts.TextToSpeech: boolean mUseFallback>;

        if $z8 != 0 goto label3;

        r0.<android.speech.tts.TextToSpeech: java.lang.String mCurrentEngine> = null;

        specialinvoke r0.<android.speech.tts.TextToSpeech: void dispatchOnInit(int)>(-1);

        return -1;

     label2:
        $z6 = r0.<android.speech.tts.TextToSpeech: boolean mUseFallback>;

        if $z6 != 0 goto label3;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Requested engine not installed: ");

        $r7 = r0.<android.speech.tts.TextToSpeech: java.lang.String mRequestedEngine>;

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("TextToSpeech", $r9);

        r0.<android.speech.tts.TextToSpeech: java.lang.String mCurrentEngine> = null;

        specialinvoke r0.<android.speech.tts.TextToSpeech: void dispatchOnInit(int)>(-1);

        return -1;

     label3:
        r14 = virtualinvoke r0.<android.speech.tts.TextToSpeech: java.lang.String getDefaultEngine()>();

        if r14 == null goto label4;

        $r3 = r0.<android.speech.tts.TextToSpeech: java.lang.String mRequestedEngine>;

        $z3 = virtualinvoke r14.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z3 != 0 goto label4;

        $z4 = specialinvoke r0.<android.speech.tts.TextToSpeech: boolean connectToEngine(java.lang.String)>(r14);

        if $z4 == 0 goto label4;

        r0.<android.speech.tts.TextToSpeech: java.lang.String mCurrentEngine> = r14;

        return 0;

     label4:
        $r15 = r0.<android.speech.tts.TextToSpeech: android.speech.tts.TtsEngines mEnginesHelper>;

        r1 = virtualinvoke $r15.<android.speech.tts.TtsEngines: java.lang.String getHighestRankedEngineName()>();

        if r1 == null goto label5;

        $r2 = r0.<android.speech.tts.TextToSpeech: java.lang.String mRequestedEngine>;

        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 != 0 goto label5;

        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>(r14);

        if $z1 != 0 goto label5;

        $z2 = specialinvoke r0.<android.speech.tts.TextToSpeech: boolean connectToEngine(java.lang.String)>(r1);

        if $z2 == 0 goto label5;

        r0.<android.speech.tts.TextToSpeech: java.lang.String mCurrentEngine> = r1;

        return 0;

     label5:
        r0.<android.speech.tts.TextToSpeech: java.lang.String mCurrentEngine> = null;

        specialinvoke r0.<android.speech.tts.TextToSpeech: void dispatchOnInit(int)>(-1);

        return -1;
    }

    static java.util.HashSet lambda$getAvailableLanguages$10(android.speech.tts.ITextToSpeechService) throws android.os.RemoteException
    {
        java.util.HashSet $r0, $r4;
        boolean $z0;
        java.lang.Object $r1;
        android.speech.tts.Voice $r2;
        java.util.Locale $r3;
        android.speech.tts.ITextToSpeechService r5;
        java.util.List r6;
        java.util.Iterator r8;

        r5 := @parameter0: android.speech.tts.ITextToSpeechService;

        r6 = interfaceinvoke r5.<android.speech.tts.ITextToSpeechService: java.util.List getVoices()>();

        if r6 != null goto label1;

        $r4 = new java.util.HashSet;

        specialinvoke $r4.<java.util.HashSet: void <init>()>();

        return $r4;

     label1:
        $r0 = new java.util.HashSet;

        specialinvoke $r0.<java.util.HashSet: void <init>()>();

        r8 = interfaceinvoke r6.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r1 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>();

        $r2 = (android.speech.tts.Voice) $r1;

        $r3 = virtualinvoke $r2.<android.speech.tts.Voice: java.util.Locale getLocale()>();

        virtualinvoke $r0.<java.util.HashSet: boolean add(java.lang.Object)>($r3);

        goto label2;

     label3:
        return $r0;
    }

    static java.util.Locale lambda$getDefaultLanguage$7(android.speech.tts.ITextToSpeechService) throws android.os.RemoteException
    {
        java.util.Locale $r0;
        java.lang.String $r1, $r2, $r3;
        android.speech.tts.ITextToSpeechService r4;
        java.lang.String[] r5;

        r4 := @parameter0: android.speech.tts.ITextToSpeechService;

        r5 = interfaceinvoke r4.<android.speech.tts.ITextToSpeechService: java.lang.String[] getClientDefaultLanguage()>();

        $r0 = new java.util.Locale;

        $r3 = r5[0];

        $r2 = r5[1];

        $r1 = r5[2];

        specialinvoke $r0.<java.util.Locale: void <init>(java.lang.String,java.lang.String,java.lang.String)>($r3, $r2, $r1);

        return $r0;
    }

    static android.speech.tts.Voice lambda$getDefaultVoice$14(android.speech.tts.ITextToSpeechService) throws android.os.RemoteException
    {
        java.lang.String[] r0;
        java.lang.String r1, $r3, r5, r6, r7;
        int i0, $i2, $i3, $i4;
        boolean $z0, $z1, $z2;
        java.lang.Object $r2;
        android.speech.tts.ITextToSpeechService r4;
        java.util.List r8;
        java.util.Iterator r9;
        android.speech.tts.Voice r10;

        r4 := @parameter0: android.speech.tts.ITextToSpeechService;

        r0 = interfaceinvoke r4.<android.speech.tts.ITextToSpeechService: java.lang.String[] getClientDefaultLanguage()>();

        if r0 == null goto label11;

        $i2 = lengthof r0;

        if $i2 != 0 goto label01;

        goto label11;

     label01:
        r1 = r0[0];

        i0 = lengthof r0;

        r5 = "";

        if i0 <= 1 goto label02;

        r6 = r0[1];

        goto label03;

     label02:
        r6 = "";

     label03:
        $i3 = lengthof r0;

        if $i3 <= 2 goto label04;

        r5 = r0[2];

     label04:
        $i4 = interfaceinvoke r4.<android.speech.tts.ITextToSpeechService: int isLanguageAvailable(java.lang.String,java.lang.String,java.lang.String)>(r1, r6, r5);

        if $i4 >= 0 goto label05;

        return null;

     label05:
        r7 = interfaceinvoke r4.<android.speech.tts.ITextToSpeechService: java.lang.String getDefaultVoiceNameFor(java.lang.String,java.lang.String,java.lang.String)>(r1, r6, r5);

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r7);

        if $z0 == 0 goto label06;

        return null;

     label06:
        r8 = interfaceinvoke r4.<android.speech.tts.ITextToSpeechService: java.util.List getVoices()>();

        if r8 != null goto label07;

        return null;

     label07:
        r9 = interfaceinvoke r8.<java.util.List: java.util.Iterator iterator()>();

     label08:
        $z1 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label10;

        $r2 = interfaceinvoke r9.<java.util.Iterator: java.lang.Object next()>();

        r10 = (android.speech.tts.Voice) $r2;

        $r3 = virtualinvoke r10.<android.speech.tts.Voice: java.lang.String getName()>();

        $z2 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r7);

        if $z2 == 0 goto label09;

        return r10;

     label09:
        goto label08;

     label10:
        return null;

     label11:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("TextToSpeech", "service.getClientDefaultLanguage() returned empty array");

        return null;
    }

    static java.util.Set lambda$getFeatures$4(java.util.Locale, android.speech.tts.ITextToSpeechService) throws android.os.RemoteException
    {
        java.lang.String $r1, $r2, $r3, $r9;
        java.util.HashSet $r4;
        java.lang.Throwable $r5;
        java.lang.StringBuilder $r6;
        java.util.Locale r10;
        android.speech.tts.ITextToSpeechService r11;
        java.lang.String[] r12;

        r10 := @parameter0: java.util.Locale;

        r11 := @parameter1: android.speech.tts.ITextToSpeechService;

     label1:
        $r1 = virtualinvoke r10.<java.util.Locale: java.lang.String getISO3Language()>();

        $r2 = virtualinvoke r10.<java.util.Locale: java.lang.String getISO3Country()>();

        $r3 = virtualinvoke r10.<java.util.Locale: java.lang.String getVariant()>();

        r12 = interfaceinvoke r11.<android.speech.tts.ITextToSpeechService: java.lang.String[] getFeaturesForLanguage(java.lang.String,java.lang.String,java.lang.String)>($r1, $r2, $r3);

     label2:
        if r12 == null goto label3;

        $r4 = new java.util.HashSet;

        specialinvoke $r4.<java.util.HashSet: void <init>()>();

        staticinvoke <java.util.Collections: boolean addAll(java.util.Collection,java.lang.Object[])>($r4, r12);

        return $r4;

     label3:
        return null;

     label4:
        $r5 := @caughtexception;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Couldn\'t retrieve 3 letter ISO 639-2/T language and/or ISO 3166 country code for locale: ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r10);

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("TextToSpeech", $r9, $r5);

        return null;

        catch java.util.MissingResourceException from label1 to label2 with label4;
    }

    static java.util.HashSet lambda$getVoices$11(android.speech.tts.ITextToSpeechService) throws android.os.RemoteException
    {
        java.util.HashSet r0;
        android.speech.tts.ITextToSpeechService r1;
        java.util.List r2;

        r1 := @parameter0: android.speech.tts.ITextToSpeechService;

        r2 = interfaceinvoke r1.<android.speech.tts.ITextToSpeechService: java.util.List getVoices()>();

        r0 = new java.util.HashSet;

        if r2 == null goto label1;

        specialinvoke r0.<java.util.HashSet: void <init>(java.util.Collection)>(r2);

        goto label2;

     label1:
        specialinvoke r0.<java.util.HashSet: void <init>()>();

     label2:
        return r0;
    }

    static java.lang.Integer lambda$isLanguageAvailable$15(java.util.Locale, android.speech.tts.ITextToSpeechService) throws android.os.RemoteException
    {
        java.util.Locale r0;
        java.lang.String r1, $r2, $r8, $r14, r17;
        int $i0;
        java.lang.Integer $r3, $r9, $r15;
        java.lang.Throwable $r4, $r10;
        java.lang.StringBuilder $r5, $r11;
        android.speech.tts.ITextToSpeechService r16;

        r0 := @parameter0: java.util.Locale;

        r16 := @parameter1: android.speech.tts.ITextToSpeechService;

     label1:
        r1 = virtualinvoke r0.<java.util.Locale: java.lang.String getISO3Language()>();

     label2:
        r17 = virtualinvoke r0.<java.util.Locale: java.lang.String getISO3Country()>();

     label3:
        $r2 = virtualinvoke r0.<java.util.Locale: java.lang.String getVariant()>();

        $i0 = interfaceinvoke r16.<android.speech.tts.ITextToSpeechService: int isLanguageAvailable(java.lang.String,java.lang.String,java.lang.String)>(r1, r17, $r2);

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        return $r3;

     label4:
        $r10 := @caughtexception;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Couldn\'t retrieve ISO 3166 country code for locale: ");

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("TextToSpeech", $r14, $r10);

        $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-2);

        return $r15;

     label5:
        $r4 := @caughtexception;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Couldn\'t retrieve ISO 639-2/T language code for locale: ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("TextToSpeech", $r8, $r4);

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-2);

        return $r9;

        catch java.util.MissingResourceException from label1 to label2 with label5;
        catch java.util.MissingResourceException from label2 to label3 with label4;
    }

    static java.lang.Boolean lambda$isSpeaking$5(android.speech.tts.ITextToSpeechService) throws android.os.RemoteException
    {
        android.speech.tts.ITextToSpeechService r0;
        boolean $z0;
        java.lang.Boolean $r1;

        r0 := @parameter0: android.speech.tts.ITextToSpeechService;

        $z0 = interfaceinvoke r0.<android.speech.tts.ITextToSpeechService: boolean isSpeaking()>();

        $r1 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        return $r1;
    }

    private android.net.Uri makeResourceUri(java.lang.String, int)
    {
        android.speech.tts.TextToSpeech r0;
        java.lang.String r1, $r5;
        int i0;
        android.net.Uri$Builder $r2, $r3, $r4, $r6;
        android.net.Uri $r7;

        r0 := @this: android.speech.tts.TextToSpeech;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r2 = new android.net.Uri$Builder;

        specialinvoke $r2.<android.net.Uri$Builder: void <init>()>();

        $r3 = virtualinvoke $r2.<android.net.Uri$Builder: android.net.Uri$Builder scheme(java.lang.String)>("android.resource");

        $r4 = virtualinvoke $r3.<android.net.Uri$Builder: android.net.Uri$Builder encodedAuthority(java.lang.String)>(r1);

        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(i0);

        $r6 = virtualinvoke $r4.<android.net.Uri$Builder: android.net.Uri$Builder appendEncodedPath(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<android.net.Uri$Builder: android.net.Uri build()>();

        return $r7;
    }

    private java.lang.Object runAction(android.speech.tts.TextToSpeech$Action, java.lang.Object, java.lang.String)
    {
        android.speech.tts.TextToSpeech r0;
        android.speech.tts.TextToSpeech$Action r1;
        java.lang.Object r2, $r4;
        java.lang.String r3;

        r0 := @this: android.speech.tts.TextToSpeech;

        r1 := @parameter0: android.speech.tts.TextToSpeech$Action;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.String;

        $r4 = specialinvoke r0.<android.speech.tts.TextToSpeech: java.lang.Object runAction(android.speech.tts.TextToSpeech$Action,java.lang.Object,java.lang.String,boolean,boolean)>(r1, r2, r3, 1, 1);

        return $r4;
    }

    private java.lang.Object runAction(android.speech.tts.TextToSpeech$Action, java.lang.Object, java.lang.String, boolean, boolean)
    {
        android.speech.tts.TextToSpeech r0;
        java.lang.Object r1, r3, r12;
        java.lang.String r2, $r8;
        boolean z0, z1;
        android.speech.tts.TextToSpeech$Connection $r4, $r5;
        java.lang.Throwable $r9;
        android.speech.tts.TextToSpeech$Action r10;
        java.lang.StringBuilder r11;

        r0 := @this: android.speech.tts.TextToSpeech;

        r10 := @parameter0: android.speech.tts.TextToSpeech$Action;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: java.lang.String;

        z0 := @parameter3: boolean;

        z1 := @parameter4: boolean;

        r3 = r0.<android.speech.tts.TextToSpeech: java.lang.Object mStartLock>;

        entermonitor r3;

     label1:
        $r4 = r0.<android.speech.tts.TextToSpeech: android.speech.tts.TextToSpeech$Connection mServiceConnection>;

        if $r4 != null goto label3;

        r11 = new java.lang.StringBuilder;

        specialinvoke r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        virtualinvoke r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" failed: not bound to TTS engine");

        $r8 = virtualinvoke r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("TextToSpeech", $r8);

        exitmonitor r3;

     label2:
        return r1;

     label3:
        $r5 = r0.<android.speech.tts.TextToSpeech: android.speech.tts.TextToSpeech$Connection mServiceConnection>;

        r12 = virtualinvoke $r5.<android.speech.tts.TextToSpeech$Connection: java.lang.Object runAction(android.speech.tts.TextToSpeech$Action,java.lang.Object,java.lang.String,boolean,boolean)>(r10, r1, r2, z0, z1);

        exitmonitor r3;

     label4:
        return r12;

     label5:
        $r9 := @caughtexception;

     label6:
        exitmonitor r3;

     label7:
        throw $r9;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    private java.lang.Object runActionNoReconnect(android.speech.tts.TextToSpeech$Action, java.lang.Object, java.lang.String, boolean)
    {
        android.speech.tts.TextToSpeech r0;
        android.speech.tts.TextToSpeech$Action r1;
        java.lang.Object r2, $r4;
        java.lang.String r3;
        boolean z0;

        r0 := @this: android.speech.tts.TextToSpeech;

        r1 := @parameter0: android.speech.tts.TextToSpeech$Action;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.String;

        z0 := @parameter3: boolean;

        $r4 = specialinvoke r0.<android.speech.tts.TextToSpeech: java.lang.Object runAction(android.speech.tts.TextToSpeech$Action,java.lang.Object,java.lang.String,boolean,boolean)>(r1, r2, r3, 0, z0);

        return $r4;
    }

    private static boolean verifyBooleanBundleParam(android.os.Bundle, java.lang.String)
    {
        java.lang.String r0, $r7;
        boolean $z0, $z1, $z2;
        java.lang.Object $r1, $r2;
        java.lang.StringBuilder $r3;
        android.os.Bundle r8;

        r8 := @parameter0: android.os.Bundle;

        r0 := @parameter1: java.lang.String;

        $z0 = virtualinvoke r8.<android.os.Bundle: boolean containsKey(java.lang.String)>(r0);

        if $z0 == 0 goto label1;

        $r1 = virtualinvoke r8.<android.os.Bundle: java.lang.Object get(java.lang.String)>(r0);

        $z1 = $r1 instanceof java.lang.Boolean;

        if $z1 != 0 goto label1;

        $r2 = virtualinvoke r8.<android.os.Bundle: java.lang.Object get(java.lang.String)>(r0);

        $z2 = $r2 instanceof java.lang.String;

        if $z2 != 0 goto label1;

        virtualinvoke r8.<android.os.Bundle: void remove(java.lang.String)>(r0);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Synthesis request paramter ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" containst value  with invalid type. Should be a Boolean or String");

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("TextToSpeech", $r7);

        return 0;

     label1:
        return 1;
    }

    private static boolean verifyFloatBundleParam(android.os.Bundle, java.lang.String)
    {
        java.lang.String r0, $r7;
        boolean $z0, $z1, $z2;
        java.lang.Object $r1, $r2;
        java.lang.StringBuilder $r3;
        android.os.Bundle r8;

        r8 := @parameter0: android.os.Bundle;

        r0 := @parameter1: java.lang.String;

        $z0 = virtualinvoke r8.<android.os.Bundle: boolean containsKey(java.lang.String)>(r0);

        if $z0 == 0 goto label1;

        $r1 = virtualinvoke r8.<android.os.Bundle: java.lang.Object get(java.lang.String)>(r0);

        $z1 = $r1 instanceof java.lang.Float;

        if $z1 != 0 goto label1;

        $r2 = virtualinvoke r8.<android.os.Bundle: java.lang.Object get(java.lang.String)>(r0);

        $z2 = $r2 instanceof java.lang.Double;

        if $z2 != 0 goto label1;

        virtualinvoke r8.<android.os.Bundle: void remove(java.lang.String)>(r0);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Synthesis request paramter ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" containst value  with invalid type. Should be a Float or a Double");

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("TextToSpeech", $r7);

        return 0;

     label1:
        return 1;
    }

    private static boolean verifyIntegerBundleParam(android.os.Bundle, java.lang.String)
    {
        java.lang.String r0, $r7;
        boolean $z0, $z1, $z2;
        java.lang.Object $r1, $r2;
        java.lang.StringBuilder $r3;
        android.os.Bundle r8;

        r8 := @parameter0: android.os.Bundle;

        r0 := @parameter1: java.lang.String;

        $z0 = virtualinvoke r8.<android.os.Bundle: boolean containsKey(java.lang.String)>(r0);

        if $z0 == 0 goto label1;

        $r1 = virtualinvoke r8.<android.os.Bundle: java.lang.Object get(java.lang.String)>(r0);

        $z1 = $r1 instanceof java.lang.Integer;

        if $z1 != 0 goto label1;

        $r2 = virtualinvoke r8.<android.os.Bundle: java.lang.Object get(java.lang.String)>(r0);

        $z2 = $r2 instanceof java.lang.Long;

        if $z2 != 0 goto label1;

        virtualinvoke r8.<android.os.Bundle: void remove(java.lang.String)>(r0);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Synthesis request paramter ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" containst value  with invalid type. Should be an Integer or a Long");

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("TextToSpeech", $r7);

        return 0;

     label1:
        return 1;
    }

    private static boolean verifyStringBundleParam(android.os.Bundle, java.lang.String)
    {
        java.lang.String r0, $r6;
        boolean $z0, $z1;
        java.lang.Object $r1;
        java.lang.StringBuilder $r2;
        android.os.Bundle r7;

        r7 := @parameter0: android.os.Bundle;

        r0 := @parameter1: java.lang.String;

        $z0 = virtualinvoke r7.<android.os.Bundle: boolean containsKey(java.lang.String)>(r0);

        if $z0 == 0 goto label1;

        $r1 = virtualinvoke r7.<android.os.Bundle: java.lang.Object get(java.lang.String)>(r0);

        $z1 = $r1 instanceof java.lang.String;

        if $z1 != 0 goto label1;

        virtualinvoke r7.<android.os.Bundle: void remove(java.lang.String)>(r0);

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Synthesis request paramter ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" containst value  with invalid type. Should be a String");

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("TextToSpeech", $r6);

        return 0;

     label1:
        return 1;
    }

    public int addEarcon(java.lang.String, java.io.File)
    {
        android.speech.tts.TextToSpeech r0;
        java.io.File r1;
        java.lang.Object r2;
        java.util.Map $r3;
        android.net.Uri $r4;
        java.lang.Throwable $r6;
        java.lang.String r7;

        r0 := @this: android.speech.tts.TextToSpeech;

        r7 := @parameter0: java.lang.String;

        r1 := @parameter1: java.io.File;

        r2 = r0.<android.speech.tts.TextToSpeech: java.lang.Object mStartLock>;

        entermonitor r2;

     label1:
        $r3 = r0.<android.speech.tts.TextToSpeech: java.util.Map mEarcons>;

        $r4 = staticinvoke <android.net.Uri: android.net.Uri fromFile(java.io.File)>(r1);

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r7, $r4);

        exitmonitor r2;

     label2:
        return 0;

     label3:
        $r6 := @caughtexception;

     label4:
        exitmonitor r2;

     label5:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public int addEarcon(java.lang.String, java.lang.String)
    {
        android.speech.tts.TextToSpeech r0;
        java.lang.String r1, r7;
        java.lang.Object r2;
        java.util.Map $r3;
        android.net.Uri $r4;
        java.lang.Throwable $r6;

        r0 := @this: android.speech.tts.TextToSpeech;

        r7 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 = r0.<android.speech.tts.TextToSpeech: java.lang.Object mStartLock>;

        entermonitor r2;

     label1:
        $r3 = r0.<android.speech.tts.TextToSpeech: java.util.Map mEarcons>;

        $r4 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>(r1);

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r7, $r4);

        exitmonitor r2;

     label2:
        return 0;

     label3:
        $r6 := @caughtexception;

     label4:
        exitmonitor r2;

     label5:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public int addEarcon(java.lang.String, java.lang.String, int)
    {
        android.speech.tts.TextToSpeech r0;
        java.lang.String r1, r7;
        int i0;
        java.lang.Object r2;
        java.util.Map $r3;
        android.net.Uri $r4;
        java.lang.Throwable $r6;

        r0 := @this: android.speech.tts.TextToSpeech;

        r7 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r2 = r0.<android.speech.tts.TextToSpeech: java.lang.Object mStartLock>;

        entermonitor r2;

     label1:
        $r3 = r0.<android.speech.tts.TextToSpeech: java.util.Map mEarcons>;

        $r4 = specialinvoke r0.<android.speech.tts.TextToSpeech: android.net.Uri makeResourceUri(java.lang.String,int)>(r1, i0);

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r7, $r4);

        exitmonitor r2;

     label2:
        return 0;

     label3:
        $r6 := @caughtexception;

     label4:
        exitmonitor r2;

     label5:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public int addSpeech(java.lang.CharSequence, java.io.File)
    {
        android.speech.tts.TextToSpeech r0;
        java.io.File r1;
        java.lang.Object r2;
        java.util.Map $r3;
        android.net.Uri $r4;
        java.lang.Throwable $r6;
        java.lang.CharSequence r7;

        r0 := @this: android.speech.tts.TextToSpeech;

        r7 := @parameter0: java.lang.CharSequence;

        r1 := @parameter1: java.io.File;

        r2 = r0.<android.speech.tts.TextToSpeech: java.lang.Object mStartLock>;

        entermonitor r2;

     label1:
        $r3 = r0.<android.speech.tts.TextToSpeech: java.util.Map mUtterances>;

        $r4 = staticinvoke <android.net.Uri: android.net.Uri fromFile(java.io.File)>(r1);

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r7, $r4);

        exitmonitor r2;

     label2:
        return 0;

     label3:
        $r6 := @caughtexception;

     label4:
        exitmonitor r2;

     label5:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public int addSpeech(java.lang.CharSequence, java.lang.String, int)
    {
        android.speech.tts.TextToSpeech r0;
        java.lang.String r1;
        int i0;
        java.lang.Object r2;
        java.util.Map $r3;
        android.net.Uri $r4;
        java.lang.Throwable $r6;
        java.lang.CharSequence r7;

        r0 := @this: android.speech.tts.TextToSpeech;

        r7 := @parameter0: java.lang.CharSequence;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r2 = r0.<android.speech.tts.TextToSpeech: java.lang.Object mStartLock>;

        entermonitor r2;

     label1:
        $r3 = r0.<android.speech.tts.TextToSpeech: java.util.Map mUtterances>;

        $r4 = specialinvoke r0.<android.speech.tts.TextToSpeech: android.net.Uri makeResourceUri(java.lang.String,int)>(r1, i0);

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r7, $r4);

        exitmonitor r2;

     label2:
        return 0;

     label3:
        $r6 := @caughtexception;

     label4:
        exitmonitor r2;

     label5:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public int addSpeech(java.lang.String, java.lang.String)
    {
        android.speech.tts.TextToSpeech r0;
        java.lang.String r1, r7;
        java.lang.Object r2;
        java.util.Map $r3;
        android.net.Uri $r4;
        java.lang.Throwable $r6;

        r0 := @this: android.speech.tts.TextToSpeech;

        r7 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 = r0.<android.speech.tts.TextToSpeech: java.lang.Object mStartLock>;

        entermonitor r2;

     label1:
        $r3 = r0.<android.speech.tts.TextToSpeech: java.util.Map mUtterances>;

        $r4 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>(r1);

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r7, $r4);

        exitmonitor r2;

     label2:
        return 0;

     label3:
        $r6 := @caughtexception;

     label4:
        exitmonitor r2;

     label5:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public int addSpeech(java.lang.String, java.lang.String, int)
    {
        android.speech.tts.TextToSpeech r0;
        java.lang.String r1, r7;
        int i0;
        java.lang.Object r2;
        java.util.Map $r3;
        android.net.Uri $r4;
        java.lang.Throwable $r6;

        r0 := @this: android.speech.tts.TextToSpeech;

        r7 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r2 = r0.<android.speech.tts.TextToSpeech: java.lang.Object mStartLock>;

        entermonitor r2;

     label1:
        $r3 = r0.<android.speech.tts.TextToSpeech: java.util.Map mUtterances>;

        $r4 = specialinvoke r0.<android.speech.tts.TextToSpeech: android.net.Uri makeResourceUri(java.lang.String,int)>(r1, i0);

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r7, $r4);

        exitmonitor r2;

     label2:
        return 0;

     label3:
        $r6 := @caughtexception;

     label4:
        exitmonitor r2;

     label5:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public boolean areDefaultsEnforced()
    {
        android.speech.tts.TextToSpeech r0;

        r0 := @this: android.speech.tts.TextToSpeech;

        return 0;
    }

    public java.util.Set getAvailableLanguages()
    {
        android.speech.tts.TextToSpeech r0;
        android.speech.tts.'-$$Lambda$TextToSpeech$u9Oi4DXhm78ulJUBVghiKVZQjPU' $r1;
        java.lang.Object $r2;
        java.util.Set $r3;
        android.speech.tts.TextToSpeech$Action r4;

        r0 := @this: android.speech.tts.TextToSpeech;

        $r1 = <android.speech.tts._$$Lambda$TextToSpeech$u9Oi4DXhm78ulJUBVghiKVZQjPU: android.speech.tts.'-$$Lambda$TextToSpeech$u9Oi4DXhm78ulJUBVghiKVZQjPU' INSTANCE>;

        r4 = (android.speech.tts.TextToSpeech$Action) $r1;

        $r2 = specialinvoke r0.<android.speech.tts.TextToSpeech: java.lang.Object runAction(android.speech.tts.TextToSpeech$Action,java.lang.Object,java.lang.String)>(r4, null, "getAvailableLanguages");

        $r3 = (java.util.Set) $r2;

        return $r3;
    }

    public java.lang.String getCurrentEngine()
    {
        android.speech.tts.TextToSpeech r0;
        java.lang.String $r1;

        r0 := @this: android.speech.tts.TextToSpeech;

        $r1 = r0.<android.speech.tts.TextToSpeech: java.lang.String mCurrentEngine>;

        return $r1;
    }

    public java.lang.String getDefaultEngine()
    {
        android.speech.tts.TextToSpeech r0;
        android.speech.tts.TtsEngines $r1;
        java.lang.String $r2;

        r0 := @this: android.speech.tts.TextToSpeech;

        $r1 = r0.<android.speech.tts.TextToSpeech: android.speech.tts.TtsEngines mEnginesHelper>;

        $r2 = virtualinvoke $r1.<android.speech.tts.TtsEngines: java.lang.String getDefaultEngine()>();

        return $r2;
    }

    public java.util.Locale getDefaultLanguage()
    {
        android.speech.tts.TextToSpeech r0;
        android.speech.tts.'-$$Lambda$TextToSpeech$xH3gJMX0vD1oEt8piDmZt3rN_I0' $r1;
        java.lang.Object $r2;
        java.util.Locale $r3;
        android.speech.tts.TextToSpeech$Action r4;

        r0 := @this: android.speech.tts.TextToSpeech;

        $r1 = <android.speech.tts._$$Lambda$TextToSpeech$xH3gJMX0vD1oEt8piDmZt3rN_I0: android.speech.tts.'-$$Lambda$TextToSpeech$xH3gJMX0vD1oEt8piDmZt3rN_I0' INSTANCE>;

        r4 = (android.speech.tts.TextToSpeech$Action) $r1;

        $r2 = specialinvoke r0.<android.speech.tts.TextToSpeech: java.lang.Object runAction(android.speech.tts.TextToSpeech$Action,java.lang.Object,java.lang.String)>(r4, null, "getDefaultLanguage");

        $r3 = (java.util.Locale) $r2;

        return $r3;
    }

    public android.speech.tts.Voice getDefaultVoice()
    {
        android.speech.tts.TextToSpeech r0;
        android.speech.tts.'-$$Lambda$TextToSpeech$CLvszYuZtoVXMK_ouZ7G19Unb-E' $r1;
        java.lang.Object $r2;
        android.speech.tts.Voice $r3;
        android.speech.tts.TextToSpeech$Action r4;

        r0 := @this: android.speech.tts.TextToSpeech;

        $r1 = <android.speech.tts._$$Lambda$TextToSpeech$CLvszYuZtoVXMK_ouZ7G19Unb_E: android.speech.tts.'-$$Lambda$TextToSpeech$CLvszYuZtoVXMK_ouZ7G19Unb-E' INSTANCE>;

        r4 = (android.speech.tts.TextToSpeech$Action) $r1;

        $r2 = specialinvoke r0.<android.speech.tts.TextToSpeech: java.lang.Object runAction(android.speech.tts.TextToSpeech$Action,java.lang.Object,java.lang.String)>(r4, null, "getDefaultVoice");

        $r3 = (android.speech.tts.Voice) $r2;

        return $r3;
    }

    public java.util.List getEngines()
    {
        android.speech.tts.TextToSpeech r0;
        android.speech.tts.TtsEngines $r1;
        java.util.List $r2;

        r0 := @this: android.speech.tts.TextToSpeech;

        $r1 = r0.<android.speech.tts.TextToSpeech: android.speech.tts.TtsEngines mEnginesHelper>;

        $r2 = virtualinvoke $r1.<android.speech.tts.TtsEngines: java.util.List getEngines()>();

        return $r2;
    }

    public java.util.Set getFeatures(java.util.Locale)
    {
        android.speech.tts.TextToSpeech r0;
        java.util.Locale r1;
        android.speech.tts._$$Lambda$TextToSpeech$3k0fKs0_apyWO_AX6PsXCEYJz_E $r2;
        java.lang.Object $r3;
        java.util.Set $r4;

        r0 := @this: android.speech.tts.TextToSpeech;

        r1 := @parameter0: java.util.Locale;

        $r2 = new android.speech.tts._$$Lambda$TextToSpeech$3k0fKs0_apyWO_AX6PsXCEYJz_E;

        specialinvoke $r2.<android.speech.tts._$$Lambda$TextToSpeech$3k0fKs0_apyWO_AX6PsXCEYJz_E: void <init>(java.util.Locale)>(r1);

        $r3 = specialinvoke r0.<android.speech.tts.TextToSpeech: java.lang.Object runAction(android.speech.tts.TextToSpeech$Action,java.lang.Object,java.lang.String)>($r2, null, "getFeatures");

        $r4 = (java.util.Set) $r3;

        return $r4;
    }

    public java.util.Locale getLanguage()
    {
        android.speech.tts.TextToSpeech r0;
        android.speech.tts._$$Lambda$TextToSpeech$SCSPSCsV21MGYtjsy7CFU8T2th8 $r1;
        java.lang.Object $r2;
        java.util.Locale $r3;

        r0 := @this: android.speech.tts.TextToSpeech;

        $r1 = new android.speech.tts._$$Lambda$TextToSpeech$SCSPSCsV21MGYtjsy7CFU8T2th8;

        specialinvoke $r1.<android.speech.tts._$$Lambda$TextToSpeech$SCSPSCsV21MGYtjsy7CFU8T2th8: void <init>(android.speech.tts.TextToSpeech)>(r0);

        $r2 = specialinvoke r0.<android.speech.tts.TextToSpeech: java.lang.Object runAction(android.speech.tts.TextToSpeech$Action,java.lang.Object,java.lang.String)>($r1, null, "getLanguage");

        $r3 = (java.util.Locale) $r2;

        return $r3;
    }

    public android.speech.tts.Voice getVoice()
    {
        android.speech.tts.TextToSpeech r0;
        android.speech.tts._$$Lambda$TextToSpeech$uFLQixb7gBl79G3qfDlUfVtjF1s $r1;
        java.lang.Object $r2;
        android.speech.tts.Voice $r3;

        r0 := @this: android.speech.tts.TextToSpeech;

        $r1 = new android.speech.tts._$$Lambda$TextToSpeech$uFLQixb7gBl79G3qfDlUfVtjF1s;

        specialinvoke $r1.<android.speech.tts._$$Lambda$TextToSpeech$uFLQixb7gBl79G3qfDlUfVtjF1s: void <init>(android.speech.tts.TextToSpeech)>(r0);

        $r2 = specialinvoke r0.<android.speech.tts.TextToSpeech: java.lang.Object runAction(android.speech.tts.TextToSpeech$Action,java.lang.Object,java.lang.String)>($r1, null, "getVoice");

        $r3 = (android.speech.tts.Voice) $r2;

        return $r3;
    }

    public java.util.Set getVoices()
    {
        android.speech.tts.TextToSpeech r0;
        android.speech.tts.'-$$Lambda$TextToSpeech$XHpwKL0cN9fnzsF2ozBQilRypm4' $r1;
        java.lang.Object $r2;
        java.util.Set $r3;
        android.speech.tts.TextToSpeech$Action r4;

        r0 := @this: android.speech.tts.TextToSpeech;

        $r1 = <android.speech.tts._$$Lambda$TextToSpeech$XHpwKL0cN9fnzsF2ozBQilRypm4: android.speech.tts.'-$$Lambda$TextToSpeech$XHpwKL0cN9fnzsF2ozBQilRypm4' INSTANCE>;

        r4 = (android.speech.tts.TextToSpeech$Action) $r1;

        $r2 = specialinvoke r0.<android.speech.tts.TextToSpeech: java.lang.Object runAction(android.speech.tts.TextToSpeech$Action,java.lang.Object,java.lang.String)>(r4, null, "getVoices");

        $r3 = (java.util.Set) $r2;

        return $r3;
    }

    public int isLanguageAvailable(java.util.Locale)
    {
        android.speech.tts.TextToSpeech r0;
        java.util.Locale r1;
        android.speech.tts._$$Lambda$TextToSpeech$_4bXSG9GsOV2bM_POOTpSFszEZs $r2;
        java.lang.Integer $r3, $r5;
        java.lang.Object $r4;
        int $i0;

        r0 := @this: android.speech.tts.TextToSpeech;

        r1 := @parameter0: java.util.Locale;

        $r2 = new android.speech.tts._$$Lambda$TextToSpeech$_4bXSG9GsOV2bM_POOTpSFszEZs;

        specialinvoke $r2.<android.speech.tts._$$Lambda$TextToSpeech$_4bXSG9GsOV2bM_POOTpSFszEZs: void <init>(java.util.Locale)>(r1);

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-2);

        $r4 = specialinvoke r0.<android.speech.tts.TextToSpeech: java.lang.Object runAction(android.speech.tts.TextToSpeech$Action,java.lang.Object,java.lang.String)>($r2, $r3, "isLanguageAvailable");

        $r5 = (java.lang.Integer) $r4;

        $i0 = virtualinvoke $r5.<java.lang.Integer: int intValue()>();

        return $i0;
    }

    public boolean isSpeaking()
    {
        android.speech.tts.TextToSpeech r0;
        android.speech.tts.'-$$Lambda$TextToSpeech$0X57btyWBAcjYI3iFilFzkbog6o' $r1;
        java.lang.Boolean $r2, $r4;
        java.lang.Object $r3;
        boolean $z0;
        android.speech.tts.TextToSpeech$Action r5;

        r0 := @this: android.speech.tts.TextToSpeech;

        $r1 = <android.speech.tts._$$Lambda$TextToSpeech$0X57btyWBAcjYI3iFilFzkbog6o: android.speech.tts.'-$$Lambda$TextToSpeech$0X57btyWBAcjYI3iFilFzkbog6o' INSTANCE>;

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        r5 = (android.speech.tts.TextToSpeech$Action) $r1;

        $r3 = specialinvoke r0.<android.speech.tts.TextToSpeech: java.lang.Object runAction(android.speech.tts.TextToSpeech$Action,java.lang.Object,java.lang.String)>(r5, $r2, "isSpeaking");

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        return $z0;
    }

    public java.util.Locale lambda$getLanguage$9$TextToSpeech(android.speech.tts.ITextToSpeechService) throws android.os.RemoteException
    {
        android.speech.tts.TextToSpeech r0;
        android.speech.tts.ITextToSpeechService r1;
        java.util.Locale $r2;
        android.os.Bundle $r3, $r5, $r7;
        java.lang.String $r4, $r6, $r8;

        r0 := @this: android.speech.tts.TextToSpeech;

        r1 := @parameter0: android.speech.tts.ITextToSpeechService;

        $r2 = new java.util.Locale;

        $r3 = r0.<android.speech.tts.TextToSpeech: android.os.Bundle mParams>;

        $r4 = virtualinvoke $r3.<android.os.Bundle: java.lang.String getString(java.lang.String,java.lang.String)>("language", "");

        $r5 = r0.<android.speech.tts.TextToSpeech: android.os.Bundle mParams>;

        $r6 = virtualinvoke $r5.<android.os.Bundle: java.lang.String getString(java.lang.String,java.lang.String)>("country", "");

        $r7 = r0.<android.speech.tts.TextToSpeech: android.os.Bundle mParams>;

        $r8 = virtualinvoke $r7.<android.os.Bundle: java.lang.String getString(java.lang.String,java.lang.String)>("variant", "");

        specialinvoke $r2.<java.util.Locale: void <init>(java.lang.String,java.lang.String,java.lang.String)>($r4, $r6, $r8);

        return $r2;
    }

    public android.speech.tts.Voice lambda$getVoice$13$TextToSpeech(android.speech.tts.ITextToSpeechService) throws android.os.RemoteException
    {
        android.speech.tts.TextToSpeech r0;
        android.speech.tts.ITextToSpeechService r1;
        java.lang.String r2;
        android.os.Bundle $r3;
        boolean $z0;
        android.speech.tts.Voice $r4;

        r0 := @this: android.speech.tts.TextToSpeech;

        r1 := @parameter0: android.speech.tts.ITextToSpeechService;

        $r3 = r0.<android.speech.tts.TextToSpeech: android.os.Bundle mParams>;

        r2 = virtualinvoke $r3.<android.os.Bundle: java.lang.String getString(java.lang.String,java.lang.String)>("voiceName", "");

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r2);

        if $z0 == 0 goto label1;

        return null;

     label1:
        $r4 = specialinvoke r0.<android.speech.tts.TextToSpeech: android.speech.tts.Voice getVoice(android.speech.tts.ITextToSpeechService,java.lang.String)>(r1, r2);

        return $r4;
    }

    public java.lang.Integer lambda$playEarcon$2$TextToSpeech(java.lang.String, int, android.os.Bundle, java.lang.String, android.speech.tts.ITextToSpeechService) throws android.os.RemoteException
    {
        android.speech.tts.TextToSpeech r0;
        int i0, $i1;
        android.os.Bundle r1, $r7;
        java.lang.String r2, r10;
        android.speech.tts.ITextToSpeechService r3;
        java.util.Map $r4;
        java.lang.Object $r5;
        android.os.IBinder $r6;
        java.lang.Integer $r8, $r9;
        android.net.Uri r11;

        r0 := @this: android.speech.tts.TextToSpeech;

        r10 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r1 := @parameter2: android.os.Bundle;

        r2 := @parameter3: java.lang.String;

        r3 := @parameter4: android.speech.tts.ITextToSpeechService;

        $r4 = r0.<android.speech.tts.TextToSpeech: java.util.Map mEarcons>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r10);

        r11 = (android.net.Uri) $r5;

        if r11 != null goto label1;

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-1);

        return $r9;

     label1:
        $r6 = specialinvoke r0.<android.speech.tts.TextToSpeech: android.os.IBinder getCallerIdentity()>();

        $r7 = specialinvoke r0.<android.speech.tts.TextToSpeech: android.os.Bundle getParams(android.os.Bundle)>(r1);

        $i1 = interfaceinvoke r3.<android.speech.tts.ITextToSpeechService: int playAudio(android.os.IBinder,android.net.Uri,int,android.os.Bundle,java.lang.String)>($r6, r11, i0, $r7, r2);

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        return $r8;
    }

    public java.lang.Integer lambda$playSilentUtterance$3$TextToSpeech(long, int, java.lang.String, android.speech.tts.ITextToSpeechService) throws android.os.RemoteException
    {
        android.speech.tts.TextToSpeech r0;
        long l0;
        int i1, $i2;
        java.lang.String r1;
        android.speech.tts.ITextToSpeechService r2;
        android.os.IBinder $r3;
        java.lang.Integer $r4;

        r0 := @this: android.speech.tts.TextToSpeech;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        r2 := @parameter3: android.speech.tts.ITextToSpeechService;

        $r3 = specialinvoke r0.<android.speech.tts.TextToSpeech: android.os.IBinder getCallerIdentity()>();

        $i2 = interfaceinvoke r2.<android.speech.tts.ITextToSpeechService: int playSilence(android.os.IBinder,long,int,java.lang.String)>($r3, l0, i1, r1);

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        return $r4;
    }

    public java.lang.Integer lambda$setLanguage$8$TextToSpeech(java.util.Locale, android.speech.tts.ITextToSpeechService) throws android.os.RemoteException
    {
        android.speech.tts.TextToSpeech r0;
        java.lang.String r1, $r11, $r22, $r33, $r41, $r47, $r53, $r58, $r63, r67, r68, r69, r73, r74, r77, r78;
        int i0, $i1;
        android.speech.tts.Voice r2;
        boolean $z0;
        android.os.IBinder $r3;
        java.util.Locale $r4, $r5, $r10, $r45, $r51, r64;
        android.os.Bundle $r6, $r7, $r8, $r9;
        java.lang.StringBuilder $r12, $r23, $r34, $r43, $r49, $r55, $r60;
        java.lang.Throwable $r42, $r48, $r54, $r59;
        android.speech.tts.ITextToSpeechService r65;
        java.lang.Integer r66, $r81;

        r0 := @this: android.speech.tts.TextToSpeech;

        r64 := @parameter0: java.util.Locale;

        r65 := @parameter1: android.speech.tts.ITextToSpeechService;

        r66 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-2);

        if r64 != null goto label01;

        return r66;

     label01:
        r1 = virtualinvoke r64.<java.util.Locale: java.lang.String getISO3Language()>();

     label02:
        r67 = virtualinvoke r64.<java.util.Locale: java.lang.String getISO3Country()>();

     label03:
        r68 = virtualinvoke r64.<java.util.Locale: java.lang.String getVariant()>();

        i0 = interfaceinvoke r65.<android.speech.tts.ITextToSpeechService: int isLanguageAvailable(java.lang.String,java.lang.String,java.lang.String)>(r1, r67, r68);

        if i0 < 0 goto label15;

        r69 = interfaceinvoke r65.<android.speech.tts.ITextToSpeechService: java.lang.String getDefaultVoiceNameFor(java.lang.String,java.lang.String,java.lang.String)>(r1, r67, r68);

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r69);

        if $z0 == 0 goto label04;

        $r34 = new java.lang.StringBuilder;

        specialinvoke $r34.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Couldn\'t find the default voice for ");

        virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-");

        virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r67);

        virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-");

        virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r68);

        $r41 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("TextToSpeech", $r41);

        return r66;

     label04:
        $r3 = specialinvoke r0.<android.speech.tts.TextToSpeech: android.os.IBinder getCallerIdentity()>();

        $i1 = interfaceinvoke r65.<android.speech.tts.ITextToSpeechService: int loadVoice(android.os.IBinder,java.lang.String)>($r3, r69);

        if $i1 != -1 goto label05;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The service claimed ");

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-");

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r67);

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-");

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r68);

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" was available with voice name ");

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r69);

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but loadVoice returned ERROR");

        $r33 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("TextToSpeech", $r33);

        return r66;

     label05:
        r2 = specialinvoke r0.<android.speech.tts.TextToSpeech: android.speech.tts.Voice getVoice(android.speech.tts.ITextToSpeechService,java.lang.String)>(r65, r69);

        if r2 != null goto label06;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getDefaultVoiceNameFor returned ");

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r69);

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for locale ");

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-");

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r67);

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-");

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r68);

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but getVoice returns null");

        $r22 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("TextToSpeech", $r22);

        return r66;

     label06:
        r73 = "";

     label07:
        $r4 = virtualinvoke r2.<android.speech.tts.Voice: java.util.Locale getLocale()>();

        r74 = virtualinvoke $r4.<java.util.Locale: java.lang.String getISO3Language()>();

     label08:
        r73 = r74;

        goto label10;

     label09:
        $r42 := @caughtexception;

        $r43 = new java.lang.StringBuilder;

        specialinvoke $r43.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Couldn\'t retrieve ISO 639-2/T language code for locale: ");

        $r45 = virtualinvoke r2.<android.speech.tts.Voice: java.util.Locale getLocale()>();

        virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r45);

        $r47 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("TextToSpeech", $r47, $r42);

     label10:
        r77 = "";

     label11:
        $r5 = virtualinvoke r2.<android.speech.tts.Voice: java.util.Locale getLocale()>();

        r78 = virtualinvoke $r5.<java.util.Locale: java.lang.String getISO3Country()>();

     label12:
        r77 = r78;

        goto label14;

     label13:
        $r48 := @caughtexception;

        $r49 = new java.lang.StringBuilder;

        specialinvoke $r49.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Couldn\'t retrieve ISO 3166 country code for locale: ");

        $r51 = virtualinvoke r2.<android.speech.tts.Voice: java.util.Locale getLocale()>();

        virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r51);

        $r53 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("TextToSpeech", $r53, $r48);

     label14:
        $r6 = r0.<android.speech.tts.TextToSpeech: android.os.Bundle mParams>;

        virtualinvoke $r6.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("voiceName", r69);

        $r7 = r0.<android.speech.tts.TextToSpeech: android.os.Bundle mParams>;

        virtualinvoke $r7.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("language", r73);

        $r8 = r0.<android.speech.tts.TextToSpeech: android.os.Bundle mParams>;

        virtualinvoke $r8.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("country", r77);

        $r9 = r0.<android.speech.tts.TextToSpeech: android.os.Bundle mParams>;

        $r10 = virtualinvoke r2.<android.speech.tts.Voice: java.util.Locale getLocale()>();

        $r11 = virtualinvoke $r10.<java.util.Locale: java.lang.String getVariant()>();

        virtualinvoke $r9.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("variant", $r11);

     label15:
        $r81 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        return $r81;

     label16:
        $r59 := @caughtexception;

        $r60 = new java.lang.StringBuilder;

        specialinvoke $r60.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Couldn\'t retrieve ISO 3166 country code for locale: ");

        virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r64);

        $r63 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("TextToSpeech", $r63, $r59);

        return r66;

     label17:
        $r54 := @caughtexception;

        $r55 = new java.lang.StringBuilder;

        specialinvoke $r55.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Couldn\'t retrieve ISO 639-2/T language code for locale: ");

        virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r64);

        $r58 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("TextToSpeech", $r58, $r54);

        return r66;

        catch java.util.MissingResourceException from label01 to label02 with label17;
        catch java.util.MissingResourceException from label02 to label03 with label16;
        catch java.util.MissingResourceException from label07 to label08 with label09;
        catch java.util.MissingResourceException from label11 to label12 with label13;
    }

    public java.lang.Integer lambda$setVoice$12$TextToSpeech(android.speech.tts.Voice, android.speech.tts.ITextToSpeechService) throws android.os.RemoteException
    {
        android.speech.tts.TextToSpeech r0;
        android.speech.tts.Voice r1;
        int i0;
        android.os.IBinder $r3;
        java.lang.String $r4, $r6, $r13, $r19, $r25, r27, r28, r31, r32;
        android.os.Bundle $r5, $r9, $r10, $r11;
        java.util.Locale $r7, $r8, $r12, $r17, $r23;
        java.lang.Throwable $r14, $r20;
        java.lang.StringBuilder $r15, $r21;
        android.speech.tts.ITextToSpeechService r26;
        java.lang.Integer $r34;

        r0 := @this: android.speech.tts.TextToSpeech;

        r1 := @parameter0: android.speech.tts.Voice;

        r26 := @parameter1: android.speech.tts.ITextToSpeechService;

        $r3 = specialinvoke r0.<android.speech.tts.TextToSpeech: android.os.IBinder getCallerIdentity()>();

        $r4 = virtualinvoke r1.<android.speech.tts.Voice: java.lang.String getName()>();

        i0 = interfaceinvoke r26.<android.speech.tts.ITextToSpeechService: int loadVoice(android.os.IBinder,java.lang.String)>($r3, $r4);

        if i0 != 0 goto label9;

        $r5 = r0.<android.speech.tts.TextToSpeech: android.os.Bundle mParams>;

        $r6 = virtualinvoke r1.<android.speech.tts.Voice: java.lang.String getName()>();

        virtualinvoke $r5.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("voiceName", $r6);

        r27 = "";

     label1:
        $r7 = virtualinvoke r1.<android.speech.tts.Voice: java.util.Locale getLocale()>();

        r28 = virtualinvoke $r7.<java.util.Locale: java.lang.String getISO3Language()>();

     label2:
        r27 = r28;

        goto label4;

     label3:
        $r20 := @caughtexception;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Couldn\'t retrieve ISO 639-2/T language code for locale: ");

        $r23 = virtualinvoke r1.<android.speech.tts.Voice: java.util.Locale getLocale()>();

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r23);

        $r25 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("TextToSpeech", $r25, $r20);

     label4:
        r31 = "";

     label5:
        $r8 = virtualinvoke r1.<android.speech.tts.Voice: java.util.Locale getLocale()>();

        r32 = virtualinvoke $r8.<java.util.Locale: java.lang.String getISO3Country()>();

     label6:
        r31 = r32;

        goto label8;

     label7:
        $r14 := @caughtexception;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Couldn\'t retrieve ISO 3166 country code for locale: ");

        $r17 = virtualinvoke r1.<android.speech.tts.Voice: java.util.Locale getLocale()>();

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r17);

        $r19 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("TextToSpeech", $r19, $r14);

     label8:
        $r9 = r0.<android.speech.tts.TextToSpeech: android.os.Bundle mParams>;

        virtualinvoke $r9.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("language", r27);

        $r10 = r0.<android.speech.tts.TextToSpeech: android.os.Bundle mParams>;

        virtualinvoke $r10.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("country", r31);

        $r11 = r0.<android.speech.tts.TextToSpeech: android.os.Bundle mParams>;

        $r12 = virtualinvoke r1.<android.speech.tts.Voice: java.util.Locale getLocale()>();

        $r13 = virtualinvoke $r12.<java.util.Locale: java.lang.String getVariant()>();

        virtualinvoke $r11.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("variant", $r13);

     label9:
        $r34 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        return $r34;

        catch java.util.MissingResourceException from label1 to label2 with label3;
        catch java.util.MissingResourceException from label5 to label6 with label7;
    }

    public java.lang.Object lambda$shutdown$0$TextToSpeech(android.speech.tts.ITextToSpeechService) throws android.os.RemoteException
    {
        android.speech.tts.TextToSpeech r0;
        android.speech.tts.ITextToSpeechService r1;
        android.os.IBinder $r2, $r3;
        android.speech.tts.TextToSpeech$Connection $r4;

        r0 := @this: android.speech.tts.TextToSpeech;

        r1 := @parameter0: android.speech.tts.ITextToSpeechService;

        $r2 = specialinvoke r0.<android.speech.tts.TextToSpeech: android.os.IBinder getCallerIdentity()>();

        interfaceinvoke r1.<android.speech.tts.ITextToSpeechService: void setCallback(android.os.IBinder,android.speech.tts.ITextToSpeechCallback)>($r2, null);

        $r3 = specialinvoke r0.<android.speech.tts.TextToSpeech: android.os.IBinder getCallerIdentity()>();

        interfaceinvoke r1.<android.speech.tts.ITextToSpeechService: int stop(android.os.IBinder)>($r3);

        $r4 = r0.<android.speech.tts.TextToSpeech: android.speech.tts.TextToSpeech$Connection mServiceConnection>;

        virtualinvoke $r4.<android.speech.tts.TextToSpeech$Connection: void disconnect()>();

        r0.<android.speech.tts.TextToSpeech: android.speech.tts.TextToSpeech$Connection mServiceConnection> = null;

        r0.<android.speech.tts.TextToSpeech: java.lang.String mCurrentEngine> = null;

        return null;
    }

    public java.lang.Integer lambda$speak$1$TextToSpeech(java.lang.CharSequence, int, android.os.Bundle, java.lang.String, android.speech.tts.ITextToSpeechService) throws android.os.RemoteException
    {
        android.speech.tts.TextToSpeech r0;
        java.lang.CharSequence r1;
        int i0, $i1, $i2;
        android.os.Bundle r2, $r9, $r12;
        java.lang.String r3;
        android.speech.tts.ITextToSpeechService r4;
        android.net.Uri r5;
        java.util.Map $r6;
        java.lang.Object $r7;
        android.os.IBinder $r8, $r11;
        java.lang.Integer $r10, $r13;

        r0 := @this: android.speech.tts.TextToSpeech;

        r1 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        r2 := @parameter2: android.os.Bundle;

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: android.speech.tts.ITextToSpeechService;

        $r6 = r0.<android.speech.tts.TextToSpeech: java.util.Map mUtterances>;

        $r7 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r5 = (android.net.Uri) $r7;

        if r5 == null goto label1;

        $r11 = specialinvoke r0.<android.speech.tts.TextToSpeech: android.os.IBinder getCallerIdentity()>();

        $r12 = specialinvoke r0.<android.speech.tts.TextToSpeech: android.os.Bundle getParams(android.os.Bundle)>(r2);

        $i2 = interfaceinvoke r4.<android.speech.tts.ITextToSpeechService: int playAudio(android.os.IBinder,android.net.Uri,int,android.os.Bundle,java.lang.String)>($r11, r5, i0, $r12, r3);

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        return $r13;

     label1:
        $r8 = specialinvoke r0.<android.speech.tts.TextToSpeech: android.os.IBinder getCallerIdentity()>();

        $r9 = specialinvoke r0.<android.speech.tts.TextToSpeech: android.os.Bundle getParams(android.os.Bundle)>(r2);

        $i1 = interfaceinvoke r4.<android.speech.tts.ITextToSpeechService: int speak(android.os.IBinder,java.lang.CharSequence,int,android.os.Bundle,java.lang.String)>($r8, r1, i0, $r9, r3);

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        return $r10;
    }

    public java.lang.Integer lambda$stop$6$TextToSpeech(android.speech.tts.ITextToSpeechService) throws android.os.RemoteException
    {
        android.speech.tts.TextToSpeech r0;
        android.speech.tts.ITextToSpeechService r1;
        android.os.IBinder $r2;
        int $i0;
        java.lang.Integer $r3;

        r0 := @this: android.speech.tts.TextToSpeech;

        r1 := @parameter0: android.speech.tts.ITextToSpeechService;

        $r2 = specialinvoke r0.<android.speech.tts.TextToSpeech: android.os.IBinder getCallerIdentity()>();

        $i0 = interfaceinvoke r1.<android.speech.tts.ITextToSpeechService: int stop(android.os.IBinder)>($r2);

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        return $r3;
    }

    public java.lang.Integer lambda$synthesizeToFile$16$TextToSpeech(java.lang.CharSequence, android.os.ParcelFileDescriptor, android.os.Bundle, java.lang.String, android.speech.tts.ITextToSpeechService) throws android.os.RemoteException
    {
        android.speech.tts.TextToSpeech r0;
        java.lang.CharSequence r1;
        android.os.ParcelFileDescriptor r2;
        android.os.Bundle r3, $r7;
        java.lang.String r4;
        android.speech.tts.ITextToSpeechService r5;
        android.os.IBinder $r6;
        int $i0;
        java.lang.Integer $r8;

        r0 := @this: android.speech.tts.TextToSpeech;

        r1 := @parameter0: java.lang.CharSequence;

        r2 := @parameter1: android.os.ParcelFileDescriptor;

        r3 := @parameter2: android.os.Bundle;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: android.speech.tts.ITextToSpeechService;

        $r6 = specialinvoke r0.<android.speech.tts.TextToSpeech: android.os.IBinder getCallerIdentity()>();

        $r7 = specialinvoke r0.<android.speech.tts.TextToSpeech: android.os.Bundle getParams(android.os.Bundle)>(r3);

        $i0 = interfaceinvoke r5.<android.speech.tts.ITextToSpeechService: int synthesizeToFileDescriptor(android.os.IBinder,java.lang.CharSequence,android.os.ParcelFileDescriptor,android.os.Bundle,java.lang.String)>($r6, r1, r2, $r7, r4);

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        return $r8;
    }

    public int playEarcon(java.lang.String, int, android.os.Bundle, java.lang.String)
    {
        android.speech.tts.TextToSpeech r0;
        java.lang.String r1, r3;
        int i0, $i1;
        android.os.Bundle r2;
        android.speech.tts._$$Lambda$TextToSpeech$S_Nd5U1XLz0kJB_yE5zdE9y8JCQ $r4;
        java.lang.Integer $r5, $r7;
        java.lang.Object $r6;

        r0 := @this: android.speech.tts.TextToSpeech;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: android.os.Bundle;

        r3 := @parameter3: java.lang.String;

        $r4 = new android.speech.tts._$$Lambda$TextToSpeech$S_Nd5U1XLz0kJB_yE5zdE9y8JCQ;

        specialinvoke $r4.<android.speech.tts._$$Lambda$TextToSpeech$S_Nd5U1XLz0kJB_yE5zdE9y8JCQ: void <init>(android.speech.tts.TextToSpeech,java.lang.String,int,android.os.Bundle,java.lang.String)>(r0, r1, i0, r2, r3);

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-1);

        $r6 = specialinvoke r0.<android.speech.tts.TextToSpeech: java.lang.Object runAction(android.speech.tts.TextToSpeech$Action,java.lang.Object,java.lang.String)>($r4, $r5, "playEarcon");

        $r7 = (java.lang.Integer) $r6;

        $i1 = virtualinvoke $r7.<java.lang.Integer: int intValue()>();

        return $i1;
    }

    public int playEarcon(java.lang.String, int, java.util.HashMap)
    {
        android.speech.tts.TextToSpeech r0;
        java.lang.String r1, r5;
        int i0, $i1;
        android.os.Bundle r2;
        java.lang.Object $r3;
        java.util.HashMap r4;

        r0 := @this: android.speech.tts.TextToSpeech;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r4 := @parameter2: java.util.HashMap;

        r2 = specialinvoke r0.<android.speech.tts.TextToSpeech: android.os.Bundle convertParamsHashMaptoBundle(java.util.HashMap)>(r4);

        if r4 != null goto label1;

        r5 = null;

        goto label2;

     label1:
        $r3 = virtualinvoke r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("utteranceId");

        r5 = (java.lang.String) $r3;

     label2:
        $i1 = virtualinvoke r0.<android.speech.tts.TextToSpeech: int playEarcon(java.lang.String,int,android.os.Bundle,java.lang.String)>(r1, i0, r2, r5);

        return $i1;
    }

    public int playSilence(long, int, java.util.HashMap)
    {
        android.speech.tts.TextToSpeech r0;
        long l0;
        int i1, $i2;
        java.lang.Object $r1;
        java.util.HashMap r2;
        java.lang.String r3;

        r0 := @this: android.speech.tts.TextToSpeech;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        r2 := @parameter2: java.util.HashMap;

        if r2 != null goto label1;

        r3 = null;

        goto label2;

     label1:
        $r1 = virtualinvoke r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("utteranceId");

        r3 = (java.lang.String) $r1;

     label2:
        $i2 = virtualinvoke r0.<android.speech.tts.TextToSpeech: int playSilentUtterance(long,int,java.lang.String)>(l0, i1, r3);

        return $i2;
    }

    public int playSilentUtterance(long, int, java.lang.String)
    {
        android.speech.tts.TextToSpeech r0;
        long l0;
        int i1, $i2;
        java.lang.String r1;
        android.speech.tts._$$Lambda$TextToSpeech$gWiZrbosTL_zRtizDp_NJINTIlw $r2;
        java.lang.Integer $r3, $r5;
        java.lang.Object $r4;

        r0 := @this: android.speech.tts.TextToSpeech;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        $r2 = new android.speech.tts._$$Lambda$TextToSpeech$gWiZrbosTL_zRtizDp_NJINTIlw;

        specialinvoke $r2.<android.speech.tts._$$Lambda$TextToSpeech$gWiZrbosTL_zRtizDp_NJINTIlw: void <init>(android.speech.tts.TextToSpeech,long,int,java.lang.String)>(r0, l0, i1, r1);

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-1);

        $r4 = specialinvoke r0.<android.speech.tts.TextToSpeech: java.lang.Object runAction(android.speech.tts.TextToSpeech$Action,java.lang.Object,java.lang.String)>($r2, $r3, "playSilentUtterance");

        $r5 = (java.lang.Integer) $r4;

        $i2 = virtualinvoke $r5.<java.lang.Integer: int intValue()>();

        return $i2;
    }

    public int setAudioAttributes(android.media.AudioAttributes)
    {
        android.speech.tts.TextToSpeech r0;
        java.lang.Object r1;
        android.os.Bundle $r2;
        java.lang.Throwable $r3;
        android.media.AudioAttributes r4;

        r0 := @this: android.speech.tts.TextToSpeech;

        r4 := @parameter0: android.media.AudioAttributes;

        if r4 == null goto label6;

        r1 = r0.<android.speech.tts.TextToSpeech: java.lang.Object mStartLock>;

        entermonitor r1;

     label1:
        $r2 = r0.<android.speech.tts.TextToSpeech: android.os.Bundle mParams>;

        virtualinvoke $r2.<android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)>("audioAttributes", r4);

        exitmonitor r1;

     label2:
        return 0;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

     label6:
        return -1;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public int setEngineByPackageName(java.lang.String)
    {
        android.speech.tts.TextToSpeech r0;
        java.lang.String r1;
        int $i0;

        r0 := @this: android.speech.tts.TextToSpeech;

        r1 := @parameter0: java.lang.String;

        r0.<android.speech.tts.TextToSpeech: java.lang.String mRequestedEngine> = r1;

        $i0 = specialinvoke r0.<android.speech.tts.TextToSpeech: int initTts()>();

        return $i0;
    }

    public int setLanguage(java.util.Locale)
    {
        android.speech.tts.TextToSpeech r0;
        java.util.Locale r1;
        android.speech.tts._$$Lambda$TextToSpeech$RsLPOHbMGtIthv7AyRho2VQZrE0 $r2;
        java.lang.Integer $r3, $r5;
        java.lang.Object $r4;
        int $i0;

        r0 := @this: android.speech.tts.TextToSpeech;

        r1 := @parameter0: java.util.Locale;

        $r2 = new android.speech.tts._$$Lambda$TextToSpeech$RsLPOHbMGtIthv7AyRho2VQZrE0;

        specialinvoke $r2.<android.speech.tts._$$Lambda$TextToSpeech$RsLPOHbMGtIthv7AyRho2VQZrE0: void <init>(android.speech.tts.TextToSpeech,java.util.Locale)>(r0, r1);

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-2);

        $r4 = specialinvoke r0.<android.speech.tts.TextToSpeech: java.lang.Object runAction(android.speech.tts.TextToSpeech$Action,java.lang.Object,java.lang.String)>($r2, $r3, "setLanguage");

        $r5 = (java.lang.Integer) $r4;

        $i0 = virtualinvoke $r5.<java.lang.Integer: int intValue()>();

        return $i0;
    }

    public int setOnUtteranceCompletedListener(android.speech.tts.TextToSpeech$OnUtteranceCompletedListener)
    {
        android.speech.tts.TextToSpeech r0;
        android.speech.tts.TextToSpeech$OnUtteranceCompletedListener r1;
        android.speech.tts.UtteranceProgressListener $r2;

        r0 := @this: android.speech.tts.TextToSpeech;

        r1 := @parameter0: android.speech.tts.TextToSpeech$OnUtteranceCompletedListener;

        $r2 = staticinvoke <android.speech.tts.UtteranceProgressListener: android.speech.tts.UtteranceProgressListener 'from'(android.speech.tts.TextToSpeech$OnUtteranceCompletedListener)>(r1);

        r0.<android.speech.tts.TextToSpeech: android.speech.tts.UtteranceProgressListener mUtteranceProgressListener> = $r2;

        return 0;
    }

    public int setOnUtteranceProgressListener(android.speech.tts.UtteranceProgressListener)
    {
        android.speech.tts.TextToSpeech r0;
        android.speech.tts.UtteranceProgressListener r1;

        r0 := @this: android.speech.tts.TextToSpeech;

        r1 := @parameter0: android.speech.tts.UtteranceProgressListener;

        r0.<android.speech.tts.TextToSpeech: android.speech.tts.UtteranceProgressListener mUtteranceProgressListener> = r1;

        return 0;
    }

    public int setPitch(float)
    {
        android.speech.tts.TextToSpeech r0;
        float f0, $f1;
        int i0;
        java.lang.Object r1;
        byte $b1;
        android.os.Bundle $r3;
        java.lang.Throwable $r4;

        r0 := @this: android.speech.tts.TextToSpeech;

        f0 := @parameter0: float;

        $b1 = f0 cmpl 0.0F;

        if $b1 <= 0 goto label6;

        $f1 = 100.0F * f0;

        i0 = (int) $f1;

        if i0 <= 0 goto label6;

        r1 = r0.<android.speech.tts.TextToSpeech: java.lang.Object mStartLock>;

        entermonitor r1;

     label1:
        $r3 = r0.<android.speech.tts.TextToSpeech: android.os.Bundle mParams>;

        virtualinvoke $r3.<android.os.Bundle: void putInt(java.lang.String,int)>("pitch", i0);

        exitmonitor r1;

     label2:
        return 0;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

     label6:
        return -1;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public int setSpeechRate(float)
    {
        android.speech.tts.TextToSpeech r0;
        float f0, $f1;
        int i0;
        java.lang.Object r1;
        byte $b1;
        android.os.Bundle $r3;
        java.lang.Throwable $r4;

        r0 := @this: android.speech.tts.TextToSpeech;

        f0 := @parameter0: float;

        $b1 = f0 cmpl 0.0F;

        if $b1 <= 0 goto label6;

        $f1 = 100.0F * f0;

        i0 = (int) $f1;

        if i0 <= 0 goto label6;

        r1 = r0.<android.speech.tts.TextToSpeech: java.lang.Object mStartLock>;

        entermonitor r1;

     label1:
        $r3 = r0.<android.speech.tts.TextToSpeech: android.os.Bundle mParams>;

        virtualinvoke $r3.<android.os.Bundle: void putInt(java.lang.String,int)>("rate", i0);

        exitmonitor r1;

     label2:
        return 0;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

     label6:
        return -1;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public int setVoice(android.speech.tts.Voice)
    {
        android.speech.tts.TextToSpeech r0;
        android.speech.tts.Voice r1;
        android.speech.tts._$$Lambda$TextToSpeech$6gq2_hmHwhnAAw1VHrcD_6tHMw8 $r2;
        java.lang.Integer $r3, $r5;
        java.lang.Object $r4;
        int $i0;

        r0 := @this: android.speech.tts.TextToSpeech;

        r1 := @parameter0: android.speech.tts.Voice;

        $r2 = new android.speech.tts._$$Lambda$TextToSpeech$6gq2_hmHwhnAAw1VHrcD_6tHMw8;

        specialinvoke $r2.<android.speech.tts._$$Lambda$TextToSpeech$6gq2_hmHwhnAAw1VHrcD_6tHMw8: void <init>(android.speech.tts.TextToSpeech,android.speech.tts.Voice)>(r0, r1);

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-2);

        $r4 = specialinvoke r0.<android.speech.tts.TextToSpeech: java.lang.Object runAction(android.speech.tts.TextToSpeech$Action,java.lang.Object,java.lang.String)>($r2, $r3, "setVoice");

        $r5 = (java.lang.Integer) $r4;

        $i0 = virtualinvoke $r5.<java.lang.Integer: int intValue()>();

        return $i0;
    }

    public void shutdown()
    {
        android.speech.tts.TextToSpeech r0;
        java.lang.Object r1;
        android.speech.tts.TextToSpeech$Connection $r3, $r6;
        android.speech.tts._$$Lambda$TextToSpeech$_uDA9GI4eb2MQUEii8nt8nERxiY $r4;
        android.content.Context $r7;
        java.lang.Throwable $r8;

        r0 := @this: android.speech.tts.TextToSpeech;

        r1 = r0.<android.speech.tts.TextToSpeech: java.lang.Object mStartLock>;

        entermonitor r1;

     label1:
        $r3 = r0.<android.speech.tts.TextToSpeech: android.speech.tts.TextToSpeech$Connection mConnectingServiceConnection>;

        if $r3 == null goto label3;

        $r7 = r0.<android.speech.tts.TextToSpeech: android.content.Context mContext>;

        $r6 = r0.<android.speech.tts.TextToSpeech: android.speech.tts.TextToSpeech$Connection mConnectingServiceConnection>;

        virtualinvoke $r7.<android.content.Context: void unbindService(android.content.ServiceConnection)>($r6);

        r0.<android.speech.tts.TextToSpeech: android.speech.tts.TextToSpeech$Connection mConnectingServiceConnection> = null;

        exitmonitor r1;

     label2:
        return;

     label3:
        exitmonitor r1;

     label4:
        $r4 = new android.speech.tts._$$Lambda$TextToSpeech$_uDA9GI4eb2MQUEii8nt8nERxiY;

        specialinvoke $r4.<android.speech.tts._$$Lambda$TextToSpeech$_uDA9GI4eb2MQUEii8nt8nERxiY: void <init>(android.speech.tts.TextToSpeech)>(r0);

        specialinvoke r0.<android.speech.tts.TextToSpeech: java.lang.Object runActionNoReconnect(android.speech.tts.TextToSpeech$Action,java.lang.Object,java.lang.String,boolean)>($r4, null, "shutdown", 0);

        return;

     label5:
        $r8 := @caughtexception;

     label6:
        exitmonitor r1;

     label7:
        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public int speak(java.lang.CharSequence, int, android.os.Bundle, java.lang.String)
    {
        android.speech.tts.TextToSpeech r0;
        java.lang.CharSequence r1;
        int i0, $i1;
        android.os.Bundle r2;
        java.lang.String r3;
        android.speech.tts._$$Lambda$TextToSpeech$0sxRIm64uH_HLqkzl4HmvlrT8_8 $r4;
        java.lang.Integer $r5, $r7;
        java.lang.Object $r6;

        r0 := @this: android.speech.tts.TextToSpeech;

        r1 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        r2 := @parameter2: android.os.Bundle;

        r3 := @parameter3: java.lang.String;

        $r4 = new android.speech.tts._$$Lambda$TextToSpeech$0sxRIm64uH_HLqkzl4HmvlrT8_8;

        specialinvoke $r4.<android.speech.tts._$$Lambda$TextToSpeech$0sxRIm64uH_HLqkzl4HmvlrT8_8: void <init>(android.speech.tts.TextToSpeech,java.lang.CharSequence,int,android.os.Bundle,java.lang.String)>(r0, r1, i0, r2, r3);

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-1);

        $r6 = specialinvoke r0.<android.speech.tts.TextToSpeech: java.lang.Object runAction(android.speech.tts.TextToSpeech$Action,java.lang.Object,java.lang.String)>($r4, $r5, "speak");

        $r7 = (java.lang.Integer) $r6;

        $i1 = virtualinvoke $r7.<java.lang.Integer: int intValue()>();

        return $i1;
    }

    public int speak(java.lang.String, int, java.util.HashMap)
    {
        android.speech.tts.TextToSpeech r0;
        java.lang.String r1, r5;
        int i0, $i1;
        android.os.Bundle r2;
        java.lang.Object $r3;
        java.util.HashMap r4;

        r0 := @this: android.speech.tts.TextToSpeech;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r4 := @parameter2: java.util.HashMap;

        r2 = specialinvoke r0.<android.speech.tts.TextToSpeech: android.os.Bundle convertParamsHashMaptoBundle(java.util.HashMap)>(r4);

        if r4 != null goto label1;

        r5 = null;

        goto label2;

     label1:
        $r3 = virtualinvoke r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("utteranceId");

        r5 = (java.lang.String) $r3;

     label2:
        $i1 = virtualinvoke r0.<android.speech.tts.TextToSpeech: int speak(java.lang.CharSequence,int,android.os.Bundle,java.lang.String)>(r1, i0, r2, r5);

        return $i1;
    }

    public int stop()
    {
        android.speech.tts.TextToSpeech r0;
        android.speech.tts._$$Lambda$TextToSpeech$rAlRDxyrlufrWCXLLCrw4EQupZo $r1;
        java.lang.Integer $r2, $r4;
        java.lang.Object $r3;
        int $i0;

        r0 := @this: android.speech.tts.TextToSpeech;

        $r1 = new android.speech.tts._$$Lambda$TextToSpeech$rAlRDxyrlufrWCXLLCrw4EQupZo;

        specialinvoke $r1.<android.speech.tts._$$Lambda$TextToSpeech$rAlRDxyrlufrWCXLLCrw4EQupZo: void <init>(android.speech.tts.TextToSpeech)>(r0);

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-1);

        $r3 = specialinvoke r0.<android.speech.tts.TextToSpeech: java.lang.Object runAction(android.speech.tts.TextToSpeech$Action,java.lang.Object,java.lang.String)>($r1, $r2, "stop");

        $r4 = (java.lang.Integer) $r3;

        $i0 = virtualinvoke $r4.<java.lang.Integer: int intValue()>();

        return $i0;
    }

    public int synthesizeToFile(java.lang.CharSequence, android.os.Bundle, android.os.ParcelFileDescriptor, java.lang.String)
    {
        android.speech.tts.TextToSpeech r0;
        java.lang.CharSequence r1;
        android.os.Bundle r2;
        android.os.ParcelFileDescriptor r3;
        java.lang.String r4;
        android.speech.tts._$$Lambda$TextToSpeech$RmMsygQ8Y8_w6j3mi5IAGOmSEIg $r5;
        java.lang.Integer $r6, $r8;
        java.lang.Object $r7;
        int $i0;

        r0 := @this: android.speech.tts.TextToSpeech;

        r1 := @parameter0: java.lang.CharSequence;

        r2 := @parameter1: android.os.Bundle;

        r3 := @parameter2: android.os.ParcelFileDescriptor;

        r4 := @parameter3: java.lang.String;

        $r5 = new android.speech.tts._$$Lambda$TextToSpeech$RmMsygQ8Y8_w6j3mi5IAGOmSEIg;

        specialinvoke $r5.<android.speech.tts._$$Lambda$TextToSpeech$RmMsygQ8Y8_w6j3mi5IAGOmSEIg: void <init>(android.speech.tts.TextToSpeech,java.lang.CharSequence,android.os.ParcelFileDescriptor,android.os.Bundle,java.lang.String)>(r0, r1, r3, r2, r4);

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-1);

        $r7 = specialinvoke r0.<android.speech.tts.TextToSpeech: java.lang.Object runAction(android.speech.tts.TextToSpeech$Action,java.lang.Object,java.lang.String)>($r5, $r6, "synthesizeToFile");

        $r8 = (java.lang.Integer) $r7;

        $i0 = virtualinvoke $r8.<java.lang.Integer: int intValue()>();

        return $i0;
    }

    public int synthesizeToFile(java.lang.CharSequence, android.os.Bundle, java.io.File, java.lang.String)
    {
        android.speech.tts.TextToSpeech r0;
        java.io.File r1;
        java.lang.String r2, $r7, $r14, $r20;
        android.os.ParcelFileDescriptor r3;
        int i0;
        boolean $z0, $z1;
        java.lang.StringBuilder $r4, $r10, $r16;
        java.lang.Throwable $r8, $r9, $r15, $r21;
        java.lang.CharSequence r22;
        android.os.Bundle r23;

        r0 := @this: android.speech.tts.TextToSpeech;

        r22 := @parameter0: java.lang.CharSequence;

        r23 := @parameter1: android.os.Bundle;

        r1 := @parameter2: java.io.File;

        r2 := @parameter3: java.lang.String;

        $z0 = virtualinvoke r1.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label01;

        $z1 = virtualinvoke r1.<java.io.File: boolean canWrite()>();

        if $z1 != 0 goto label01;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t write to ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("TextToSpeech", $r7);

        return -1;

     label01:
        r3 = staticinvoke <android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor open(java.io.File,int)>(r1, 738197504);

     label02:
        i0 = virtualinvoke r0.<android.speech.tts.TextToSpeech: int synthesizeToFile(java.lang.CharSequence,android.os.Bundle,android.os.ParcelFileDescriptor,java.lang.String)>(r22, r23, r3, r2);

        virtualinvoke r3.<android.os.ParcelFileDescriptor: void close()>();

     label03:
        if r3 == null goto label05;

     label04:
        virtualinvoke r3.<android.os.ParcelFileDescriptor: void close()>();

     label05:
        return i0;

     label06:
        $r21 := @caughtexception;

        if r3 == null goto label11;

     label07:
        virtualinvoke r3.<android.os.ParcelFileDescriptor: void close()>();

     label08:
        goto label11;

     label09:
        $r8 := @caughtexception;

     label10:
        virtualinvoke $r21.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r8);

     label11:
        throw $r21;

     label12:
        $r9 := @caughtexception;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Closing file ");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" failed");

        $r14 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TextToSpeech", $r14, $r9);

        return -1;

     label13:
        $r15 := @caughtexception;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Opening file ");

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" failed");

        $r20 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TextToSpeech", $r20, $r15);

        return -1;

        catch java.io.FileNotFoundException from label01 to label02 with label13;
        catch java.io.IOException from label01 to label02 with label12;
        catch java.lang.Throwable from label02 to label03 with label06;
        catch java.io.FileNotFoundException from label04 to label05 with label13;
        catch java.io.IOException from label04 to label05 with label12;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.io.FileNotFoundException from label10 to label11 with label13;
        catch java.io.IOException from label10 to label11 with label12;
        catch java.io.FileNotFoundException from label11 to label12 with label13;
        catch java.io.IOException from label11 to label12 with label12;
    }

    public int synthesizeToFile(java.lang.String, java.util.HashMap, java.lang.String)
    {
        android.speech.tts.TextToSpeech r0;
        java.lang.String r1, r3, $r7;
        java.util.HashMap r2;
        android.os.Bundle $r4;
        java.io.File $r5;
        java.lang.Object $r6;
        int $i0;

        r0 := @this: android.speech.tts.TextToSpeech;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.HashMap;

        r3 := @parameter2: java.lang.String;

        $r4 = specialinvoke r0.<android.speech.tts.TextToSpeech: android.os.Bundle convertParamsHashMaptoBundle(java.util.HashMap)>(r2);

        $r5 = new java.io.File;

        specialinvoke $r5.<java.io.File: void <init>(java.lang.String)>(r3);

        $r6 = virtualinvoke r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("utteranceId");

        $r7 = (java.lang.String) $r6;

        $i0 = virtualinvoke r0.<android.speech.tts.TextToSpeech: int synthesizeToFile(java.lang.CharSequence,android.os.Bundle,java.io.File,java.lang.String)>(r1, $r4, $r5, $r7);

        return $i0;
    }

    public static void <clinit>()
    {
        <android.speech.tts.TextToSpeech: java.lang.String TAG> = "TextToSpeech";

        <android.speech.tts.TextToSpeech: int SUCCESS> = 0;

        <android.speech.tts.TextToSpeech: int STOPPED> = -2;

        <android.speech.tts.TextToSpeech: int QUEUE_FLUSH> = 0;

        <android.speech.tts.TextToSpeech: int QUEUE_DESTROY> = 2;

        <android.speech.tts.TextToSpeech: int QUEUE_ADD> = 1;

        <android.speech.tts.TextToSpeech: int LANG_NOT_SUPPORTED> = -2;

        <android.speech.tts.TextToSpeech: int LANG_MISSING_DATA> = -1;

        <android.speech.tts.TextToSpeech: int LANG_COUNTRY_VAR_AVAILABLE> = 2;

        <android.speech.tts.TextToSpeech: int LANG_COUNTRY_AVAILABLE> = 1;

        <android.speech.tts.TextToSpeech: int LANG_AVAILABLE> = 0;

        <android.speech.tts.TextToSpeech: int ERROR_SYNTHESIS> = -3;

        <android.speech.tts.TextToSpeech: int ERROR_SERVICE> = -4;

        <android.speech.tts.TextToSpeech: int ERROR_OUTPUT> = -5;

        <android.speech.tts.TextToSpeech: int ERROR_NOT_INSTALLED_YET> = -9;

        <android.speech.tts.TextToSpeech: int ERROR_NETWORK_TIMEOUT> = -7;

        <android.speech.tts.TextToSpeech: int ERROR_NETWORK> = -6;

        <android.speech.tts.TextToSpeech: int ERROR_INVALID_REQUEST> = -8;

        <android.speech.tts.TextToSpeech: int ERROR> = -1;

        <android.speech.tts.TextToSpeech: java.lang.String ACTION_TTS_QUEUE_PROCESSING_COMPLETED> = "android.speech.tts.TTS_QUEUE_PROCESSING_COMPLETED";

        return;
    }
}
