class android.speech.tts.TextToSpeechService$CallbackMap extends android.os.RemoteCallbackList
{
    private final java.util.HashMap mCallerToCallback;
    final android.speech.tts.TextToSpeechService this$0;

    private void <init>(android.speech.tts.TextToSpeechService)
    {
        android.speech.tts.TextToSpeechService$CallbackMap r0;
        android.speech.tts.TextToSpeechService r1;
        java.util.HashMap $r2;

        r0 := @this: android.speech.tts.TextToSpeechService$CallbackMap;

        r1 := @parameter0: android.speech.tts.TextToSpeechService;

        r0.<android.speech.tts.TextToSpeechService$CallbackMap: android.speech.tts.TextToSpeechService this$0> = r1;

        specialinvoke r0.<android.os.RemoteCallbackList: void <init>()>();

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<android.speech.tts.TextToSpeechService$CallbackMap: java.util.HashMap mCallerToCallback> = $r2;

        return;
    }

    void <init>(android.speech.tts.TextToSpeechService, android.speech.tts.TextToSpeechService$1)
    {
        android.speech.tts.TextToSpeechService$CallbackMap r0;
        android.speech.tts.TextToSpeechService r1;
        android.speech.tts.TextToSpeechService$1 r2;

        r0 := @this: android.speech.tts.TextToSpeechService$CallbackMap;

        r1 := @parameter0: android.speech.tts.TextToSpeechService;

        r2 := @parameter1: android.speech.tts.TextToSpeechService$1;

        specialinvoke r0.<android.speech.tts.TextToSpeechService$CallbackMap: void <init>(android.speech.tts.TextToSpeechService)>(r1);

        return;
    }

    private android.speech.tts.ITextToSpeechCallback getCallbackFor(java.lang.Object)
    {
        android.speech.tts.TextToSpeechService$CallbackMap r0;
        java.util.HashMap $r1, r6;
        java.lang.Object $r2, r4;
        java.lang.Throwable $r3;
        android.os.IBinder r5;
        android.speech.tts.ITextToSpeechCallback r7;

        r0 := @this: android.speech.tts.TextToSpeechService$CallbackMap;

        r4 := @parameter0: java.lang.Object;

        r5 = (android.os.IBinder) r4;

        r6 = r0.<android.speech.tts.TextToSpeechService$CallbackMap: java.util.HashMap mCallerToCallback>;

        entermonitor r6;

     label1:
        $r1 = r0.<android.speech.tts.TextToSpeechService$CallbackMap: java.util.HashMap mCallerToCallback>;

        $r2 = virtualinvoke $r1.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r5);

        r7 = (android.speech.tts.ITextToSpeechCallback) $r2;

        exitmonitor r6;

     label2:
        return r7;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r6;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void dispatchOnAudioAvailable(java.lang.Object, java.lang.String, byte[])
    {
        android.speech.tts.TextToSpeechService$CallbackMap r0;
        byte[] r1;
        android.os.RemoteException $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r6, r8;
        java.lang.Object r7;
        android.speech.tts.ITextToSpeechCallback r9;

        r0 := @this: android.speech.tts.TextToSpeechService$CallbackMap;

        r7 := @parameter0: java.lang.Object;

        r8 := @parameter1: java.lang.String;

        r1 := @parameter2: byte[];

        r9 = specialinvoke r0.<android.speech.tts.TextToSpeechService$CallbackMap: android.speech.tts.ITextToSpeechCallback getCallbackFor(java.lang.Object)>(r7);

        if r9 != null goto label1;

        return;

     label1:
        interfaceinvoke r9.<android.speech.tts.ITextToSpeechCallback: void onAudioAvailable(java.lang.String,byte[])>(r8, r1);

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Callback dispatchOnAudioAvailable(String, byte[]) failed: ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("TextToSpeechService", $r6);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void dispatchOnBeginSynthesis(java.lang.Object, java.lang.String, int, int, int)
    {
        android.speech.tts.TextToSpeechService$CallbackMap r0;
        int i0, i1, i2;
        android.os.RemoteException $r1;
        java.lang.StringBuilder $r2;
        java.lang.String $r5, r7;
        java.lang.Object r6;
        android.speech.tts.ITextToSpeechCallback r8;

        r0 := @this: android.speech.tts.TextToSpeechService$CallbackMap;

        r6 := @parameter0: java.lang.Object;

        r7 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        r8 = specialinvoke r0.<android.speech.tts.TextToSpeechService$CallbackMap: android.speech.tts.ITextToSpeechCallback getCallbackFor(java.lang.Object)>(r6);

        if r8 != null goto label1;

        return;

     label1:
        interfaceinvoke r8.<android.speech.tts.ITextToSpeechCallback: void onBeginSynthesis(java.lang.String,int,int,int)>(r7, i0, i1, i2);

     label2:
        goto label4;

     label3:
        $r1 := @caughtexception;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Callback dispatchOnBeginSynthesis(String, int, int, int) failed: ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("TextToSpeechService", $r5);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void dispatchOnError(java.lang.Object, java.lang.String, int)
    {
        android.speech.tts.TextToSpeechService$CallbackMap r0;
        int i0;
        android.os.RemoteException $r1;
        java.lang.StringBuilder $r2;
        java.lang.String $r5, r7;
        java.lang.Object r6;
        android.speech.tts.ITextToSpeechCallback r8;

        r0 := @this: android.speech.tts.TextToSpeechService$CallbackMap;

        r6 := @parameter0: java.lang.Object;

        r7 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r8 = specialinvoke r0.<android.speech.tts.TextToSpeechService$CallbackMap: android.speech.tts.ITextToSpeechCallback getCallbackFor(java.lang.Object)>(r6);

        if r8 != null goto label1;

        return;

     label1:
        interfaceinvoke r8.<android.speech.tts.ITextToSpeechCallback: void onError(java.lang.String,int)>(r7, i0);

     label2:
        goto label4;

     label3:
        $r1 := @caughtexception;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Callback onError failed: ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("TextToSpeechService", $r5);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void dispatchOnRangeStart(java.lang.Object, java.lang.String, int, int, int)
    {
        android.speech.tts.TextToSpeechService$CallbackMap r0;
        int i0, i1, i2;
        android.os.RemoteException $r1;
        java.lang.StringBuilder $r2;
        java.lang.String $r5, r7;
        java.lang.Object r6;
        android.speech.tts.ITextToSpeechCallback r8;

        r0 := @this: android.speech.tts.TextToSpeechService$CallbackMap;

        r6 := @parameter0: java.lang.Object;

        r7 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        r8 = specialinvoke r0.<android.speech.tts.TextToSpeechService$CallbackMap: android.speech.tts.ITextToSpeechCallback getCallbackFor(java.lang.Object)>(r6);

        if r8 != null goto label1;

        return;

     label1:
        interfaceinvoke r8.<android.speech.tts.ITextToSpeechCallback: void onRangeStart(java.lang.String,int,int,int)>(r7, i0, i1, i2);

     label2:
        goto label4;

     label3:
        $r1 := @caughtexception;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Callback dispatchOnRangeStart(String, int, int, int) failed: ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("TextToSpeechService", $r5);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void dispatchOnStart(java.lang.Object, java.lang.String)
    {
        android.speech.tts.TextToSpeechService$CallbackMap r0;
        android.os.RemoteException $r1;
        java.lang.StringBuilder $r2;
        java.lang.String $r5, r7;
        java.lang.Object r6;
        android.speech.tts.ITextToSpeechCallback r8;

        r0 := @this: android.speech.tts.TextToSpeechService$CallbackMap;

        r6 := @parameter0: java.lang.Object;

        r7 := @parameter1: java.lang.String;

        r8 = specialinvoke r0.<android.speech.tts.TextToSpeechService$CallbackMap: android.speech.tts.ITextToSpeechCallback getCallbackFor(java.lang.Object)>(r6);

        if r8 != null goto label1;

        return;

     label1:
        interfaceinvoke r8.<android.speech.tts.ITextToSpeechCallback: void onStart(java.lang.String)>(r7);

     label2:
        goto label4;

     label3:
        $r1 := @caughtexception;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Callback onStart failed: ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("TextToSpeechService", $r5);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void dispatchOnStop(java.lang.Object, java.lang.String, boolean)
    {
        android.speech.tts.TextToSpeechService$CallbackMap r0;
        boolean z0;
        android.os.RemoteException $r1;
        java.lang.StringBuilder $r2;
        java.lang.String $r5, r7;
        java.lang.Object r6;
        android.speech.tts.ITextToSpeechCallback r8;

        r0 := @this: android.speech.tts.TextToSpeechService$CallbackMap;

        r6 := @parameter0: java.lang.Object;

        r7 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        r8 = specialinvoke r0.<android.speech.tts.TextToSpeechService$CallbackMap: android.speech.tts.ITextToSpeechCallback getCallbackFor(java.lang.Object)>(r6);

        if r8 != null goto label1;

        return;

     label1:
        interfaceinvoke r8.<android.speech.tts.ITextToSpeechCallback: void onStop(java.lang.String,boolean)>(r7, z0);

     label2:
        goto label4;

     label3:
        $r1 := @caughtexception;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Callback onStop failed: ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("TextToSpeechService", $r5);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void dispatchOnSuccess(java.lang.Object, java.lang.String)
    {
        android.speech.tts.TextToSpeechService$CallbackMap r0;
        android.os.RemoteException $r1;
        java.lang.StringBuilder $r2;
        java.lang.String $r5, r7;
        java.lang.Object r6;
        android.speech.tts.ITextToSpeechCallback r8;

        r0 := @this: android.speech.tts.TextToSpeechService$CallbackMap;

        r6 := @parameter0: java.lang.Object;

        r7 := @parameter1: java.lang.String;

        r8 = specialinvoke r0.<android.speech.tts.TextToSpeechService$CallbackMap: android.speech.tts.ITextToSpeechCallback getCallbackFor(java.lang.Object)>(r6);

        if r8 != null goto label1;

        return;

     label1:
        interfaceinvoke r8.<android.speech.tts.ITextToSpeechCallback: void onSuccess(java.lang.String)>(r7);

     label2:
        goto label4;

     label3:
        $r1 := @caughtexception;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Callback onDone failed: ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("TextToSpeechService", $r5);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void kill()
    {
        android.speech.tts.TextToSpeechService$CallbackMap r0;
        java.util.HashMap r1, $r3;
        java.lang.Throwable $r4;

        r0 := @this: android.speech.tts.TextToSpeechService$CallbackMap;

        r1 = r0.<android.speech.tts.TextToSpeechService$CallbackMap: java.util.HashMap mCallerToCallback>;

        entermonitor r1;

     label1:
        $r3 = r0.<android.speech.tts.TextToSpeechService$CallbackMap: java.util.HashMap mCallerToCallback>;

        virtualinvoke $r3.<java.util.HashMap: void clear()>();

        specialinvoke r0.<android.os.RemoteCallbackList: void kill()>();

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public volatile void onCallbackDied(android.os.IInterface, java.lang.Object)
    {
        android.speech.tts.TextToSpeechService$CallbackMap r0;
        android.os.IInterface r1;
        java.lang.Object r2;
        android.speech.tts.ITextToSpeechCallback $r3;

        r0 := @this: android.speech.tts.TextToSpeechService$CallbackMap;

        r1 := @parameter0: android.os.IInterface;

        r2 := @parameter1: java.lang.Object;

        $r3 = (android.speech.tts.ITextToSpeechCallback) r1;

        virtualinvoke r0.<android.speech.tts.TextToSpeechService$CallbackMap: void onCallbackDied(android.speech.tts.ITextToSpeechCallback,java.lang.Object)>($r3, r2);

        return;
    }

    public void onCallbackDied(android.speech.tts.ITextToSpeechCallback, java.lang.Object)
    {
        android.speech.tts.TextToSpeechService$CallbackMap r0;
        java.util.HashMap $r1, r9;
        android.speech.tts.TextToSpeechService $r3;
        android.speech.tts.TextToSpeechService$SynthHandler $r4;
        java.lang.Throwable $r5;
        android.speech.tts.ITextToSpeechCallback r6;
        java.lang.Object r7;
        android.os.IBinder r8;

        r0 := @this: android.speech.tts.TextToSpeechService$CallbackMap;

        r6 := @parameter0: android.speech.tts.ITextToSpeechCallback;

        r7 := @parameter1: java.lang.Object;

        r8 = (android.os.IBinder) r7;

        r9 = r0.<android.speech.tts.TextToSpeechService$CallbackMap: java.util.HashMap mCallerToCallback>;

        entermonitor r9;

     label1:
        $r1 = r0.<android.speech.tts.TextToSpeechService$CallbackMap: java.util.HashMap mCallerToCallback>;

        virtualinvoke $r1.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>(r8);

        exitmonitor r9;

     label2:
        $r3 = r0.<android.speech.tts.TextToSpeechService$CallbackMap: android.speech.tts.TextToSpeechService this$0>;

        $r4 = staticinvoke <android.speech.tts.TextToSpeechService: android.speech.tts.TextToSpeechService$SynthHandler access$1000(android.speech.tts.TextToSpeechService)>($r3);

        virtualinvoke $r4.<android.speech.tts.TextToSpeechService$SynthHandler: int stopForApp(java.lang.Object)>(r8);

        return;

     label3:
        $r5 := @caughtexception;

     label4:
        exitmonitor r9;

     label5:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void setCallback(android.os.IBinder, android.speech.tts.ITextToSpeechCallback)
    {
        android.speech.tts.TextToSpeechService$CallbackMap r0;
        android.speech.tts.ITextToSpeechCallback r1, r9;
        java.util.HashMap r2, $r3, $r5;
        java.lang.Object $r4, $r6;
        java.lang.Throwable $r7;
        android.os.IBinder r8;

        r0 := @this: android.speech.tts.TextToSpeechService$CallbackMap;

        r8 := @parameter0: android.os.IBinder;

        r1 := @parameter1: android.speech.tts.ITextToSpeechCallback;

        r2 = r0.<android.speech.tts.TextToSpeechService$CallbackMap: java.util.HashMap mCallerToCallback>;

        entermonitor r2;

        if r1 == null goto label03;

     label01:
        virtualinvoke r0.<android.speech.tts.TextToSpeechService$CallbackMap: boolean register(android.os.IInterface,java.lang.Object)>(r1, r8);

        $r5 = r0.<android.speech.tts.TextToSpeechService$CallbackMap: java.util.HashMap mCallerToCallback>;

        $r6 = virtualinvoke $r5.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r8, r1);

        r9 = (android.speech.tts.ITextToSpeechCallback) $r6;

     label02:
        goto label04;

     label03:
        $r3 = r0.<android.speech.tts.TextToSpeechService$CallbackMap: java.util.HashMap mCallerToCallback>;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>(r8);

        r9 = (android.speech.tts.ITextToSpeechCallback) $r4;

     label04:
        if r9 == null goto label06;

        if r9 == r1 goto label06;

     label05:
        virtualinvoke r0.<android.speech.tts.TextToSpeechService$CallbackMap: boolean unregister(android.os.IInterface)>(r9);

     label06:
        exitmonitor r2;

     label07:
        return;

     label08:
        $r7 := @caughtexception;

     label09:
        exitmonitor r2;

     label10:
        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label05 to label06 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }
}
