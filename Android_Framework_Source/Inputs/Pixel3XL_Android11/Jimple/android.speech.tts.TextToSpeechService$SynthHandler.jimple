class android.speech.tts.TextToSpeechService$SynthHandler extends android.os.Handler
{
    private android.speech.tts.TextToSpeechService$SpeechItem mCurrentSpeechItem;
    private int mFlushAll;
    private java.util.List mFlushedObjects;
    final android.speech.tts.TextToSpeechService this$0;

    public void <init>(android.speech.tts.TextToSpeechService, android.os.Looper)
    {
        android.speech.tts.TextToSpeechService$SynthHandler r0;
        android.speech.tts.TextToSpeechService r1;
        android.os.Looper r2;
        java.util.ArrayList $r3;

        r0 := @this: android.speech.tts.TextToSpeechService$SynthHandler;

        r1 := @parameter0: android.speech.tts.TextToSpeechService;

        r2 := @parameter1: android.os.Looper;

        r0.<android.speech.tts.TextToSpeechService$SynthHandler: android.speech.tts.TextToSpeechService this$0> = r1;

        specialinvoke r0.<android.os.Handler: void <init>(android.os.Looper)>(r2);

        r0.<android.speech.tts.TextToSpeechService$SynthHandler: android.speech.tts.TextToSpeechService$SpeechItem mCurrentSpeechItem> = null;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<android.speech.tts.TextToSpeechService$SynthHandler: java.util.List mFlushedObjects> = $r3;

        r0.<android.speech.tts.TextToSpeechService$SynthHandler: int mFlushAll> = 0;

        return;
    }

    static boolean access$100(android.speech.tts.TextToSpeechService$SynthHandler, android.speech.tts.TextToSpeechService$SpeechItem)
    {
        android.speech.tts.TextToSpeechService$SynthHandler r0;
        android.speech.tts.TextToSpeechService$SpeechItem r1;
        boolean $z0;

        r0 := @parameter0: android.speech.tts.TextToSpeechService$SynthHandler;

        r1 := @parameter1: android.speech.tts.TextToSpeechService$SpeechItem;

        $z0 = specialinvoke r0.<android.speech.tts.TextToSpeechService$SynthHandler: boolean setCurrentSpeechItem(android.speech.tts.TextToSpeechService$SpeechItem)>(r1);

        return $z0;
    }

    static android.speech.tts.TextToSpeechService$SpeechItem access$200(android.speech.tts.TextToSpeechService$SynthHandler)
    {
        android.speech.tts.TextToSpeechService$SynthHandler r0;
        android.speech.tts.TextToSpeechService$SpeechItem $r1;

        r0 := @parameter0: android.speech.tts.TextToSpeechService$SynthHandler;

        $r1 = specialinvoke r0.<android.speech.tts.TextToSpeechService$SynthHandler: android.speech.tts.TextToSpeechService$SpeechItem removeCurrentSpeechItem()>();

        return $r1;
    }

    static void access$400(android.speech.tts.TextToSpeechService$SynthHandler, java.lang.Object)
    {
        android.speech.tts.TextToSpeechService$SynthHandler r0;
        java.lang.Object r1;

        r0 := @parameter0: android.speech.tts.TextToSpeechService$SynthHandler;

        r1 := @parameter1: java.lang.Object;

        specialinvoke r0.<android.speech.tts.TextToSpeechService$SynthHandler: void endFlushingSpeechItems(java.lang.Object)>(r1);

        return;
    }

    private void endFlushingSpeechItems(java.lang.Object)
    {
        android.speech.tts.TextToSpeechService$SynthHandler r0;
        java.util.List r1, $r2;
        int $i0, $i1;
        java.lang.Throwable $r3;
        java.lang.Object r4;

        r0 := @this: android.speech.tts.TextToSpeechService$SynthHandler;

        r4 := @parameter0: java.lang.Object;

        r1 = r0.<android.speech.tts.TextToSpeechService$SynthHandler: java.util.List mFlushedObjects>;

        entermonitor r1;

        if r4 != null goto label3;

     label1:
        $i0 = r0.<android.speech.tts.TextToSpeechService$SynthHandler: int mFlushAll>;

        $i1 = $i0 - 1;

        r0.<android.speech.tts.TextToSpeechService$SynthHandler: int mFlushAll> = $i1;

     label2:
        goto label4;

     label3:
        $r2 = r0.<android.speech.tts.TextToSpeechService$SynthHandler: java.util.List mFlushedObjects>;

        interfaceinvoke $r2.<java.util.List: boolean remove(java.lang.Object)>(r4);

     label4:
        exitmonitor r1;

     label5:
        return;

     label6:
        $r3 := @caughtexception;

     label7:
        exitmonitor r1;

     label8:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    private android.speech.tts.TextToSpeechService$SpeechItem getCurrentSpeechItem()
    {
        android.speech.tts.TextToSpeechService$SynthHandler r0;
        java.lang.Throwable $r1;
        android.speech.tts.TextToSpeechService$SpeechItem r2;

        r0 := @this: android.speech.tts.TextToSpeechService$SynthHandler;

        entermonitor r0;

     label1:
        r2 = r0.<android.speech.tts.TextToSpeechService$SynthHandler: android.speech.tts.TextToSpeechService$SpeechItem mCurrentSpeechItem>;

     label2:
        exitmonitor r0;

        return r2;

     label3:
        $r1 := @caughtexception;

        exitmonitor r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    private boolean isFlushed(android.speech.tts.TextToSpeechService$SpeechItem)
    {
        android.speech.tts.TextToSpeechService$SynthHandler r0;
        java.util.List r1, $r2;
        int $i0;
        java.lang.Object $r3;
        boolean $z0, z1;
        java.lang.Throwable $r4;
        android.speech.tts.TextToSpeechService$SpeechItem r5;

        r0 := @this: android.speech.tts.TextToSpeechService$SynthHandler;

        r5 := @parameter0: android.speech.tts.TextToSpeechService$SpeechItem;

        r1 = r0.<android.speech.tts.TextToSpeechService$SynthHandler: java.util.List mFlushedObjects>;

        entermonitor r1;

     label1:
        $i0 = r0.<android.speech.tts.TextToSpeechService$SynthHandler: int mFlushAll>;

        if $i0 > 0 goto label4;

        $r2 = r0.<android.speech.tts.TextToSpeechService$SynthHandler: java.util.List mFlushedObjects>;

        $r3 = virtualinvoke r5.<android.speech.tts.TextToSpeechService$SpeechItem: java.lang.Object getCallerIdentity()>();

        $z0 = interfaceinvoke $r2.<java.util.List: boolean contains(java.lang.Object)>($r3);

        if $z0 == 0 goto label3;

     label2:
        goto label4;

     label3:
        z1 = 0;

        goto label5;

     label4:
        z1 = 1;

     label5:
        exitmonitor r1;

     label6:
        return z1;

     label7:
        $r4 := @caughtexception;

     label8:
        exitmonitor r1;

     label9:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    private android.speech.tts.TextToSpeechService$SpeechItem maybeRemoveCurrentSpeechItem(java.lang.Object)
    {
        android.speech.tts.TextToSpeechService$SynthHandler r0;
        android.speech.tts.TextToSpeechService$SpeechItem $r1, $r2, r6;
        java.lang.Object $r3, r5;
        java.lang.Throwable $r4;

        r0 := @this: android.speech.tts.TextToSpeechService$SynthHandler;

        r5 := @parameter0: java.lang.Object;

        entermonitor r0;

     label1:
        $r1 = r0.<android.speech.tts.TextToSpeechService$SynthHandler: android.speech.tts.TextToSpeechService$SpeechItem mCurrentSpeechItem>;

        if $r1 == null goto label3;

        $r2 = r0.<android.speech.tts.TextToSpeechService$SynthHandler: android.speech.tts.TextToSpeechService$SpeechItem mCurrentSpeechItem>;

        $r3 = virtualinvoke $r2.<android.speech.tts.TextToSpeechService$SpeechItem: java.lang.Object getCallerIdentity()>();

        if $r3 != r5 goto label3;

        r6 = r0.<android.speech.tts.TextToSpeechService$SynthHandler: android.speech.tts.TextToSpeechService$SpeechItem mCurrentSpeechItem>;

        r0.<android.speech.tts.TextToSpeechService$SynthHandler: android.speech.tts.TextToSpeechService$SpeechItem mCurrentSpeechItem> = null;

     label2:
        exitmonitor r0;

        return r6;

     label3:
        exitmonitor r0;

        return null;

     label4:
        $r4 := @caughtexception;

        exitmonitor r0;

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    private android.speech.tts.TextToSpeechService$SpeechItem removeCurrentSpeechItem()
    {
        android.speech.tts.TextToSpeechService$SynthHandler r0;
        java.lang.Throwable $r1;
        android.speech.tts.TextToSpeechService$SpeechItem r2;

        r0 := @this: android.speech.tts.TextToSpeechService$SynthHandler;

        entermonitor r0;

     label1:
        r2 = r0.<android.speech.tts.TextToSpeechService$SynthHandler: android.speech.tts.TextToSpeechService$SpeechItem mCurrentSpeechItem>;

        r0.<android.speech.tts.TextToSpeechService$SynthHandler: android.speech.tts.TextToSpeechService$SpeechItem mCurrentSpeechItem> = null;

     label2:
        exitmonitor r0;

        return r2;

     label3:
        $r1 := @caughtexception;

        exitmonitor r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    private boolean setCurrentSpeechItem(android.speech.tts.TextToSpeechService$SpeechItem)
    {
        android.speech.tts.TextToSpeechService$SynthHandler r0;
        boolean z0;
        java.lang.Throwable $r1;
        android.speech.tts.TextToSpeechService$SpeechItem r2;

        r0 := @this: android.speech.tts.TextToSpeechService$SynthHandler;

        r2 := @parameter0: android.speech.tts.TextToSpeechService$SpeechItem;

        entermonitor r0;

        if r2 == null goto label3;

     label1:
        z0 = specialinvoke r0.<android.speech.tts.TextToSpeechService$SynthHandler: boolean isFlushed(android.speech.tts.TextToSpeechService$SpeechItem)>(r2);

     label2:
        if z0 == 0 goto label3;

        exitmonitor r0;

        return 0;

     label3:
        r0.<android.speech.tts.TextToSpeechService$SynthHandler: android.speech.tts.TextToSpeechService$SpeechItem mCurrentSpeechItem> = r2;

     label4:
        exitmonitor r0;

        return 1;

     label5:
        $r1 := @caughtexception;

        exitmonitor r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    private void startFlushingSpeechItems(java.lang.Object)
    {
        android.speech.tts.TextToSpeechService$SynthHandler r0;
        java.util.List r1, $r2;
        int $i0, $i1;
        java.lang.Throwable $r3;
        java.lang.Object r4;

        r0 := @this: android.speech.tts.TextToSpeechService$SynthHandler;

        r4 := @parameter0: java.lang.Object;

        r1 = r0.<android.speech.tts.TextToSpeechService$SynthHandler: java.util.List mFlushedObjects>;

        entermonitor r1;

        if r4 != null goto label3;

     label1:
        $i0 = r0.<android.speech.tts.TextToSpeechService$SynthHandler: int mFlushAll>;

        $i1 = $i0 + 1;

        r0.<android.speech.tts.TextToSpeechService$SynthHandler: int mFlushAll> = $i1;

     label2:
        goto label4;

     label3:
        $r2 = r0.<android.speech.tts.TextToSpeechService$SynthHandler: java.util.List mFlushedObjects>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r4);

     label4:
        exitmonitor r1;

     label5:
        return;

     label6:
        $r3 := @caughtexception;

     label7:
        exitmonitor r1;

     label8:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public int enqueueSpeechItem(int, android.speech.tts.TextToSpeechService$SpeechItem)
    {
        android.speech.tts.TextToSpeechService$SynthHandler r0;
        int i0;
        android.speech.tts.TextToSpeechService$SpeechItem r1;
        android.os.Message r2;
        boolean $z0, $z1, $z2;
        java.lang.Object $r3, $r6;
        android.speech.tts.TextToSpeechService$UtteranceProgressDispatcher r4;
        android.speech.tts.TextToSpeechService$SynthHandler$1 $r5;

        r0 := @this: android.speech.tts.TextToSpeechService$SynthHandler;

        i0 := @parameter0: int;

        r1 := @parameter1: android.speech.tts.TextToSpeechService$SpeechItem;

        r4 = null;

        $z0 = r1 instanceof android.speech.tts.TextToSpeechService$UtteranceProgressDispatcher;

        if $z0 == 0 goto label1;

        r4 = (android.speech.tts.TextToSpeechService$UtteranceProgressDispatcher) r1;

     label1:
        $z1 = virtualinvoke r1.<android.speech.tts.TextToSpeechService$SpeechItem: boolean isValid()>();

        if $z1 != 0 goto label3;

        if r4 == null goto label2;

        interfaceinvoke r4.<android.speech.tts.TextToSpeechService$UtteranceProgressDispatcher: void dispatchOnError(int)>(-8);

     label2:
        return -1;

     label3:
        if i0 != 0 goto label4;

        $r3 = virtualinvoke r1.<android.speech.tts.TextToSpeechService$SpeechItem: java.lang.Object getCallerIdentity()>();

        virtualinvoke r0.<android.speech.tts.TextToSpeechService$SynthHandler: int stopForApp(java.lang.Object)>($r3);

        goto label5;

     label4:
        if i0 != 2 goto label5;

        virtualinvoke r0.<android.speech.tts.TextToSpeechService$SynthHandler: int stopAll()>();

     label5:
        $r5 = new android.speech.tts.TextToSpeechService$SynthHandler$1;

        specialinvoke $r5.<android.speech.tts.TextToSpeechService$SynthHandler$1: void <init>(android.speech.tts.TextToSpeechService$SynthHandler,android.speech.tts.TextToSpeechService$SpeechItem)>(r0, r1);

        r2 = staticinvoke <android.os.Message: android.os.Message obtain(android.os.Handler,java.lang.Runnable)>(r0, $r5);

        $r6 = virtualinvoke r1.<android.speech.tts.TextToSpeechService$SpeechItem: java.lang.Object getCallerIdentity()>();

        r2.<android.os.Message: java.lang.Object obj> = $r6;

        $z2 = virtualinvoke r0.<android.speech.tts.TextToSpeechService$SynthHandler: boolean sendMessage(android.os.Message)>(r2);

        if $z2 == 0 goto label6;

        return 0;

     label6:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("TextToSpeechService", "SynthThread has quit");

        if r4 == null goto label7;

        interfaceinvoke r4.<android.speech.tts.TextToSpeechService$UtteranceProgressDispatcher: void dispatchOnError(int)>(-4);

     label7:
        return -1;
    }

    public boolean isSpeaking()
    {
        android.speech.tts.TextToSpeechService$SynthHandler r0;
        android.speech.tts.TextToSpeechService$SpeechItem $r1;
        boolean z0;

        r0 := @this: android.speech.tts.TextToSpeechService$SynthHandler;

        $r1 = specialinvoke r0.<android.speech.tts.TextToSpeechService$SynthHandler: android.speech.tts.TextToSpeechService$SpeechItem getCurrentSpeechItem()>();

        if $r1 == null goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public void quit()
    {
        android.speech.tts.TextToSpeechService$SynthHandler r0;
        android.speech.tts.TextToSpeechService$SpeechItem r1;
        android.os.Looper $r2;

        r0 := @this: android.speech.tts.TextToSpeechService$SynthHandler;

        $r2 = virtualinvoke r0.<android.speech.tts.TextToSpeechService$SynthHandler: android.os.Looper getLooper()>();

        virtualinvoke $r2.<android.os.Looper: void quit()>();

        r1 = specialinvoke r0.<android.speech.tts.TextToSpeechService$SynthHandler: android.speech.tts.TextToSpeechService$SpeechItem removeCurrentSpeechItem()>();

        if r1 == null goto label1;

        virtualinvoke r1.<android.speech.tts.TextToSpeechService$SpeechItem: void stop()>();

     label1:
        return;
    }

    public int stopAll()
    {
        android.speech.tts.TextToSpeechService$SynthHandler r0;
        android.speech.tts.TextToSpeechService$SpeechItem r1;
        android.speech.tts.TextToSpeechService $r2;
        android.speech.tts.AudioPlaybackHandler $r3;
        android.speech.tts.TextToSpeechService$SynthHandler$3 $r4;
        android.os.Message $r5;

        r0 := @this: android.speech.tts.TextToSpeechService$SynthHandler;

        specialinvoke r0.<android.speech.tts.TextToSpeechService$SynthHandler: void startFlushingSpeechItems(java.lang.Object)>(null);

        r1 = specialinvoke r0.<android.speech.tts.TextToSpeechService$SynthHandler: android.speech.tts.TextToSpeechService$SpeechItem removeCurrentSpeechItem()>();

        if r1 == null goto label1;

        virtualinvoke r1.<android.speech.tts.TextToSpeechService$SpeechItem: void stop()>();

     label1:
        $r2 = r0.<android.speech.tts.TextToSpeechService$SynthHandler: android.speech.tts.TextToSpeechService this$0>;

        $r3 = staticinvoke <android.speech.tts.TextToSpeechService: android.speech.tts.AudioPlaybackHandler access$300(android.speech.tts.TextToSpeechService)>($r2);

        virtualinvoke $r3.<android.speech.tts.AudioPlaybackHandler: void stop()>();

        $r4 = new android.speech.tts.TextToSpeechService$SynthHandler$3;

        specialinvoke $r4.<android.speech.tts.TextToSpeechService$SynthHandler$3: void <init>(android.speech.tts.TextToSpeechService$SynthHandler)>(r0);

        $r5 = staticinvoke <android.os.Message: android.os.Message obtain(android.os.Handler,java.lang.Runnable)>(r0, $r4);

        virtualinvoke r0.<android.speech.tts.TextToSpeechService$SynthHandler: boolean sendMessage(android.os.Message)>($r5);

        return 0;
    }

    public int stopForApp(java.lang.Object)
    {
        android.speech.tts.TextToSpeechService$SynthHandler r0;
        java.lang.Object r1;
        android.speech.tts.TextToSpeechService$SpeechItem r2;
        android.speech.tts.TextToSpeechService $r3;
        android.speech.tts.AudioPlaybackHandler $r4;
        android.speech.tts.TextToSpeechService$SynthHandler$2 $r5;
        android.os.Message $r6;

        r0 := @this: android.speech.tts.TextToSpeechService$SynthHandler;

        r1 := @parameter0: java.lang.Object;

        if r1 != null goto label1;

        return -1;

     label1:
        specialinvoke r0.<android.speech.tts.TextToSpeechService$SynthHandler: void startFlushingSpeechItems(java.lang.Object)>(r1);

        r2 = specialinvoke r0.<android.speech.tts.TextToSpeechService$SynthHandler: android.speech.tts.TextToSpeechService$SpeechItem maybeRemoveCurrentSpeechItem(java.lang.Object)>(r1);

        if r2 == null goto label2;

        virtualinvoke r2.<android.speech.tts.TextToSpeechService$SpeechItem: void stop()>();

     label2:
        $r3 = r0.<android.speech.tts.TextToSpeechService$SynthHandler: android.speech.tts.TextToSpeechService this$0>;

        $r4 = staticinvoke <android.speech.tts.TextToSpeechService: android.speech.tts.AudioPlaybackHandler access$300(android.speech.tts.TextToSpeechService)>($r3);

        virtualinvoke $r4.<android.speech.tts.AudioPlaybackHandler: void stopForApp(java.lang.Object)>(r1);

        $r5 = new android.speech.tts.TextToSpeechService$SynthHandler$2;

        specialinvoke $r5.<android.speech.tts.TextToSpeechService$SynthHandler$2: void <init>(android.speech.tts.TextToSpeechService$SynthHandler,java.lang.Object)>(r0, r1);

        $r6 = staticinvoke <android.os.Message: android.os.Message obtain(android.os.Handler,java.lang.Runnable)>(r0, $r5);

        virtualinvoke r0.<android.speech.tts.TextToSpeechService$SynthHandler: boolean sendMessage(android.os.Message)>($r6);

        return 0;
    }
}
