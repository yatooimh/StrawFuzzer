public abstract class android.speech.tts.TextToSpeechService extends android.app.Service
{
    private static final boolean DBG;
    private static final java.lang.String SYNTH_THREAD_NAME;
    private static final java.lang.String TAG;
    private android.speech.tts.AudioPlaybackHandler mAudioPlaybackHandler;
    private final android.speech.tts.ITextToSpeechService$Stub mBinder;
    private android.speech.tts.TextToSpeechService$CallbackMap mCallbacks;
    private android.speech.tts.TtsEngines mEngineHelper;
    private java.lang.String mPackageName;
    private android.speech.tts.TextToSpeechService$SynthHandler mSynthHandler;
    private final java.lang.Object mVoicesInfoLock;

    public void <init>()
    {
        android.speech.tts.TextToSpeechService r0;
        java.lang.Object $r1;
        android.speech.tts.TextToSpeechService$1 $r2;

        r0 := @this: android.speech.tts.TextToSpeechService;

        specialinvoke r0.<android.app.Service: void <init>()>();

        $r1 = new java.lang.Object;

        specialinvoke $r1.<java.lang.Object: void <init>()>();

        r0.<android.speech.tts.TextToSpeechService: java.lang.Object mVoicesInfoLock> = $r1;

        $r2 = new android.speech.tts.TextToSpeechService$1;

        specialinvoke $r2.<android.speech.tts.TextToSpeechService$1: void <init>(android.speech.tts.TextToSpeechService)>(r0);

        r0.<android.speech.tts.TextToSpeechService: android.speech.tts.ITextToSpeechService$Stub mBinder> = $r2;

        return;
    }

    static android.speech.tts.TextToSpeechService$SynthHandler access$1000(android.speech.tts.TextToSpeechService)
    {
        android.speech.tts.TextToSpeechService r0;
        android.speech.tts.TextToSpeechService$SynthHandler $r1;

        r0 := @parameter0: android.speech.tts.TextToSpeechService;

        $r1 = r0.<android.speech.tts.TextToSpeechService: android.speech.tts.TextToSpeechService$SynthHandler mSynthHandler>;

        return $r1;
    }

    static android.speech.tts.AudioPlaybackHandler access$300(android.speech.tts.TextToSpeechService)
    {
        android.speech.tts.TextToSpeechService r0;
        android.speech.tts.AudioPlaybackHandler $r1;

        r0 := @parameter0: android.speech.tts.TextToSpeechService;

        $r1 = r0.<android.speech.tts.TextToSpeechService: android.speech.tts.AudioPlaybackHandler mAudioPlaybackHandler>;

        return $r1;
    }

    static android.speech.tts.TextToSpeechService$CallbackMap access$500(android.speech.tts.TextToSpeechService)
    {
        android.speech.tts.TextToSpeechService r0;
        android.speech.tts.TextToSpeechService$CallbackMap $r1;

        r0 := @parameter0: android.speech.tts.TextToSpeechService;

        $r1 = r0.<android.speech.tts.TextToSpeechService: android.speech.tts.TextToSpeechService$CallbackMap mCallbacks>;

        return $r1;
    }

    static int access$600(android.speech.tts.TextToSpeechService)
    {
        android.speech.tts.TextToSpeechService r0;
        int $i0;

        r0 := @parameter0: android.speech.tts.TextToSpeechService;

        $i0 = specialinvoke r0.<android.speech.tts.TextToSpeechService: int getDefaultSpeechRate()>();

        return $i0;
    }

    static int access$700(android.speech.tts.TextToSpeechService)
    {
        android.speech.tts.TextToSpeechService r0;
        int $i0;

        r0 := @parameter0: android.speech.tts.TextToSpeechService;

        $i0 = specialinvoke r0.<android.speech.tts.TextToSpeechService: int getDefaultPitch()>();

        return $i0;
    }

    static java.lang.String[] access$800(android.speech.tts.TextToSpeechService)
    {
        android.speech.tts.TextToSpeechService r0;
        java.lang.String[] $r1;

        r0 := @parameter0: android.speech.tts.TextToSpeechService;

        $r1 = specialinvoke r0.<android.speech.tts.TextToSpeechService: java.lang.String[] getSettingsLocale()>();

        return $r1;
    }

    static java.lang.String access$900(android.speech.tts.TextToSpeechService)
    {
        android.speech.tts.TextToSpeechService r0;
        java.lang.String $r1;

        r0 := @parameter0: android.speech.tts.TextToSpeechService;

        $r1 = r0.<android.speech.tts.TextToSpeechService: java.lang.String mPackageName>;

        return $r1;
    }

    private int getDefaultPitch()
    {
        android.speech.tts.TextToSpeechService r0;
        int $i0;

        r0 := @this: android.speech.tts.TextToSpeechService;

        $i0 = specialinvoke r0.<android.speech.tts.TextToSpeechService: int getSecureSettingInt(java.lang.String,int)>("tts_default_pitch", 100);

        return $i0;
    }

    private int getDefaultSpeechRate()
    {
        android.speech.tts.TextToSpeechService r0;
        int $i0;

        r0 := @this: android.speech.tts.TextToSpeechService;

        $i0 = specialinvoke r0.<android.speech.tts.TextToSpeechService: int getSecureSettingInt(java.lang.String,int)>("tts_default_rate", 100);

        return $i0;
    }

    private int getExpectedLanguageAvailableStatus(java.util.Locale)
    {
        android.speech.tts.TextToSpeechService r0;
        java.util.Locale r1;
        java.lang.String $r2, $r3;
        boolean $z0, $z1;
        byte b0;

        r0 := @this: android.speech.tts.TextToSpeechService;

        r1 := @parameter0: java.util.Locale;

        b0 = 2;

        $r2 = virtualinvoke r1.<java.util.Locale: java.lang.String getVariant()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean isEmpty()>();

        if $z0 == 0 goto label2;

        $r3 = virtualinvoke r1.<java.util.Locale: java.lang.String getCountry()>();

        $z1 = virtualinvoke $r3.<java.lang.String: boolean isEmpty()>();

        if $z1 == 0 goto label1;

        b0 = 0;

        goto label2;

     label1:
        b0 = 1;

     label2:
        return b0;
    }

    private int getSecureSettingInt(java.lang.String, int)
    {
        android.speech.tts.TextToSpeechService r0;
        java.lang.String r1;
        int i0, $i1;
        android.content.ContentResolver $r2;

        r0 := @this: android.speech.tts.TextToSpeechService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r2 = virtualinvoke r0.<android.speech.tts.TextToSpeechService: android.content.ContentResolver getContentResolver()>();

        $i1 = staticinvoke <android.provider.Settings$Secure: int getInt(android.content.ContentResolver,java.lang.String,int)>($r2, r1, i0);

        return $i1;
    }

    private java.lang.String[] getSettingsLocale()
    {
        android.speech.tts.TextToSpeechService r0;
        java.lang.String $r1;
        android.speech.tts.TtsEngines $r2;
        java.util.Locale $r3;
        java.lang.String[] $r4;

        r0 := @this: android.speech.tts.TextToSpeechService;

        $r2 = r0.<android.speech.tts.TextToSpeechService: android.speech.tts.TtsEngines mEngineHelper>;

        $r1 = r0.<android.speech.tts.TextToSpeechService: java.lang.String mPackageName>;

        $r3 = virtualinvoke $r2.<android.speech.tts.TtsEngines: java.util.Locale getLocalePrefForEngine(java.lang.String)>($r1);

        $r4 = staticinvoke <android.speech.tts.TtsEngines: java.lang.String[] toOldLocaleStringFormat(java.util.Locale)>($r3);

        return $r4;
    }

    public android.os.IBinder onBind(android.content.Intent)
    {
        android.speech.tts.TextToSpeechService r0;
        android.content.Intent r1;
        java.lang.String $r2, $r3;
        boolean $z0;
        android.speech.tts.ITextToSpeechService$Stub $r4, $r7;
        android.os.IBinder $r5;

        r0 := @this: android.speech.tts.TextToSpeechService;

        r1 := @parameter0: android.content.Intent;

        $r2 = "android.intent.action.TTS_SERVICE";

        $r3 = virtualinvoke r1.<android.content.Intent: java.lang.String getAction()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label1;

        $r4 = r0.<android.speech.tts.TextToSpeechService: android.speech.tts.ITextToSpeechService$Stub mBinder>;

        $r5 = virtualinvoke $r4.<android.speech.tts.ITextToSpeechService$Stub: android.os.IBinder asBinder()>();

        staticinvoke <android.os.Binder: android.os.IBinder allowBlocking(android.os.IBinder)>($r5);

        $r7 = r0.<android.speech.tts.TextToSpeechService: android.speech.tts.ITextToSpeechService$Stub mBinder>;

        return $r7;

     label1:
        return null;
    }

    public void onCreate()
    {
        android.speech.tts.TextToSpeechService r0;
        android.speech.tts.TextToSpeechService$SynthThread $r1;
        android.speech.tts.TextToSpeechService$SynthHandler $r2;
        android.os.Looper $r3;
        android.speech.tts.AudioPlaybackHandler $r4;
        android.speech.tts.TtsEngines $r5;
        android.speech.tts.TextToSpeechService$CallbackMap $r6;
        android.content.pm.ApplicationInfo $r7;
        java.lang.String $r8, $r9, $r10, $r11;
        java.lang.String[] r14;

        r0 := @this: android.speech.tts.TextToSpeechService;

        specialinvoke r0.<android.app.Service: void onCreate()>();

        $r1 = new android.speech.tts.TextToSpeechService$SynthThread;

        specialinvoke $r1.<android.speech.tts.TextToSpeechService$SynthThread: void <init>(android.speech.tts.TextToSpeechService)>(r0);

        virtualinvoke $r1.<android.speech.tts.TextToSpeechService$SynthThread: void start()>();

        $r2 = new android.speech.tts.TextToSpeechService$SynthHandler;

        $r3 = virtualinvoke $r1.<android.speech.tts.TextToSpeechService$SynthThread: android.os.Looper getLooper()>();

        specialinvoke $r2.<android.speech.tts.TextToSpeechService$SynthHandler: void <init>(android.speech.tts.TextToSpeechService,android.os.Looper)>(r0, $r3);

        r0.<android.speech.tts.TextToSpeechService: android.speech.tts.TextToSpeechService$SynthHandler mSynthHandler> = $r2;

        $r4 = new android.speech.tts.AudioPlaybackHandler;

        specialinvoke $r4.<android.speech.tts.AudioPlaybackHandler: void <init>()>();

        r0.<android.speech.tts.TextToSpeechService: android.speech.tts.AudioPlaybackHandler mAudioPlaybackHandler> = $r4;

        virtualinvoke $r4.<android.speech.tts.AudioPlaybackHandler: void start()>();

        $r5 = new android.speech.tts.TtsEngines;

        specialinvoke $r5.<android.speech.tts.TtsEngines: void <init>(android.content.Context)>(r0);

        r0.<android.speech.tts.TextToSpeechService: android.speech.tts.TtsEngines mEngineHelper> = $r5;

        $r6 = new android.speech.tts.TextToSpeechService$CallbackMap;

        specialinvoke $r6.<android.speech.tts.TextToSpeechService$CallbackMap: void <init>(android.speech.tts.TextToSpeechService,android.speech.tts.TextToSpeechService$1)>(r0, null);

        r0.<android.speech.tts.TextToSpeechService: android.speech.tts.TextToSpeechService$CallbackMap mCallbacks> = $r6;

        $r7 = virtualinvoke r0.<android.speech.tts.TextToSpeechService: android.content.pm.ApplicationInfo getApplicationInfo()>();

        $r8 = $r7.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        r0.<android.speech.tts.TextToSpeechService: java.lang.String mPackageName> = $r8;

        r14 = specialinvoke r0.<android.speech.tts.TextToSpeechService: java.lang.String[] getSettingsLocale()>();

        $r11 = r14[0];

        $r10 = r14[1];

        $r9 = r14[2];

        virtualinvoke r0.<android.speech.tts.TextToSpeechService: int onLoadLanguage(java.lang.String,java.lang.String,java.lang.String)>($r11, $r10, $r9);

        return;
    }

    public void onDestroy()
    {
        android.speech.tts.TextToSpeechService r0;
        android.speech.tts.TextToSpeechService$SynthHandler $r1;
        android.speech.tts.AudioPlaybackHandler $r2;
        android.speech.tts.TextToSpeechService$CallbackMap $r3;

        r0 := @this: android.speech.tts.TextToSpeechService;

        $r1 = r0.<android.speech.tts.TextToSpeechService: android.speech.tts.TextToSpeechService$SynthHandler mSynthHandler>;

        virtualinvoke $r1.<android.speech.tts.TextToSpeechService$SynthHandler: void quit()>();

        $r2 = r0.<android.speech.tts.TextToSpeechService: android.speech.tts.AudioPlaybackHandler mAudioPlaybackHandler>;

        virtualinvoke $r2.<android.speech.tts.AudioPlaybackHandler: void quit()>();

        $r3 = r0.<android.speech.tts.TextToSpeechService: android.speech.tts.TextToSpeechService$CallbackMap mCallbacks>;

        virtualinvoke $r3.<android.speech.tts.TextToSpeechService$CallbackMap: void kill()>();

        specialinvoke r0.<android.app.Service: void onDestroy()>();

        return;
    }

    public java.lang.String onGetDefaultVoiceNameFor(java.lang.String, java.lang.String, java.lang.String)
    {
        android.speech.tts.TextToSpeechService r0;
        java.lang.String r1, r2, r6, r9;
        int i0, $i1;
        java.util.Locale $r3, $r4, $r5, r7, $r8;

        r0 := @this: android.speech.tts.TextToSpeechService;

        r6 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        i0 = virtualinvoke r0.<android.speech.tts.TextToSpeechService: int onIsLanguageAvailable(java.lang.String,java.lang.String,java.lang.String)>(r6, r1, r2);

        if i0 == 0 goto label3;

        if i0 == 1 goto label2;

        if i0 == 2 goto label1;

        return null;

     label1:
        $r5 = new java.util.Locale;

        specialinvoke $r5.<java.util.Locale: void <init>(java.lang.String,java.lang.String,java.lang.String)>(r6, r1, r2);

        r7 = $r5;

        goto label4;

     label2:
        $r4 = new java.util.Locale;

        specialinvoke $r4.<java.util.Locale: void <init>(java.lang.String,java.lang.String)>(r6, r1);

        r7 = $r4;

        goto label4;

     label3:
        $r3 = new java.util.Locale;

        specialinvoke $r3.<java.util.Locale: void <init>(java.lang.String)>(r6);

        r7 = $r3;

     label4:
        $r8 = staticinvoke <android.speech.tts.TtsEngines: java.util.Locale normalizeTTSLocale(java.util.Locale)>(r7);

        r9 = virtualinvoke $r8.<java.util.Locale: java.lang.String toLanguageTag()>();

        $i1 = virtualinvoke r0.<android.speech.tts.TextToSpeechService: int onIsValidVoiceName(java.lang.String)>(r9);

        if $i1 != 0 goto label5;

        return r9;

     label5:
        return null;
    }

    protected java.util.Set onGetFeaturesForLanguage(java.lang.String, java.lang.String, java.lang.String)
    {
        android.speech.tts.TextToSpeechService r0;
        java.lang.String r1, r2, r3;
        java.util.HashSet $r4;

        r0 := @this: android.speech.tts.TextToSpeechService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        $r4 = new java.util.HashSet;

        specialinvoke $r4.<java.util.HashSet: void <init>()>();

        return $r4;
    }

    protected abstract java.lang.String[] onGetLanguage();

    public java.util.List onGetVoices()
    {
        android.speech.tts.TextToSpeechService r0;
        java.util.Locale[] r2;
        int i0, i1, i2, i3;
        java.util.Locale r3;
        java.util.Set r4;
        java.util.ArrayList $r5;
        java.lang.String $r6, $r7, $r8, $r9, $r10, $r11, $r13, $r14, $r15, $r16;
        android.speech.tts.Voice $r12;
        java.lang.Throwable $r17;

        r0 := @this: android.speech.tts.TextToSpeechService;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r2 = staticinvoke <java.util.Locale: java.util.Locale[] getAvailableLocales()>();

        i0 = lengthof r2;

        i3 = 0;

     label1:
        if i3 >= i0 goto label7;

        r3 = r2[i3];

        i1 = specialinvoke r0.<android.speech.tts.TextToSpeechService: int getExpectedLanguageAvailableStatus(java.util.Locale)>(r3);

     label2:
        $r6 = virtualinvoke r3.<java.util.Locale: java.lang.String getISO3Language()>();

        $r7 = virtualinvoke r3.<java.util.Locale: java.lang.String getISO3Country()>();

        $r8 = virtualinvoke r3.<java.util.Locale: java.lang.String getVariant()>();

        i2 = virtualinvoke r0.<android.speech.tts.TextToSpeechService: int onIsLanguageAvailable(java.lang.String,java.lang.String,java.lang.String)>($r6, $r7, $r8);

     label3:
        if i2 == i1 goto label4;

        goto label6;

     label4:
        $r9 = virtualinvoke r3.<java.util.Locale: java.lang.String getISO3Language()>();

        $r10 = virtualinvoke r3.<java.util.Locale: java.lang.String getISO3Country()>();

        $r11 = virtualinvoke r3.<java.util.Locale: java.lang.String getVariant()>();

        r4 = virtualinvoke r0.<android.speech.tts.TextToSpeechService: java.util.Set onGetFeaturesForLanguage(java.lang.String,java.lang.String,java.lang.String)>($r9, $r10, $r11);

        $r12 = new android.speech.tts.Voice;

        $r13 = virtualinvoke r3.<java.util.Locale: java.lang.String getISO3Language()>();

        $r14 = virtualinvoke r3.<java.util.Locale: java.lang.String getISO3Country()>();

        $r15 = virtualinvoke r3.<java.util.Locale: java.lang.String getVariant()>();

        $r16 = virtualinvoke r0.<android.speech.tts.TextToSpeechService: java.lang.String onGetDefaultVoiceNameFor(java.lang.String,java.lang.String,java.lang.String)>($r13, $r14, $r15);

        specialinvoke $r12.<android.speech.tts.Voice: void <init>(java.lang.String,java.util.Locale,int,int,boolean,java.util.Set)>($r16, r3, 300, 300, 0, r4);

        virtualinvoke $r5.<java.util.ArrayList: boolean add(java.lang.Object)>($r12);

        goto label6;

     label5:
        $r17 := @caughtexception;

     label6:
        i3 = i3 + 1;

        goto label1;

     label7:
        return $r5;

        catch java.util.MissingResourceException from label2 to label3 with label5;
    }

    protected abstract int onIsLanguageAvailable(java.lang.String, java.lang.String, java.lang.String);

    public int onIsValidVoiceName(java.lang.String)
    {
        android.speech.tts.TextToSpeechService r0;
        int i0, i1;
        java.lang.String $r1, $r2, $r3, r5;
        java.lang.Throwable $r4;
        java.util.Locale r6;

        r0 := @this: android.speech.tts.TextToSpeechService;

        r5 := @parameter0: java.lang.String;

        r6 = staticinvoke <java.util.Locale: java.util.Locale forLanguageTag(java.lang.String)>(r5);

        if r6 != null goto label1;

        return -1;

     label1:
        i0 = specialinvoke r0.<android.speech.tts.TextToSpeechService: int getExpectedLanguageAvailableStatus(java.util.Locale)>(r6);

     label2:
        $r1 = virtualinvoke r6.<java.util.Locale: java.lang.String getISO3Language()>();

        $r2 = virtualinvoke r6.<java.util.Locale: java.lang.String getISO3Country()>();

        $r3 = virtualinvoke r6.<java.util.Locale: java.lang.String getVariant()>();

        i1 = virtualinvoke r0.<android.speech.tts.TextToSpeechService: int onIsLanguageAvailable(java.lang.String,java.lang.String,java.lang.String)>($r1, $r2, $r3);

     label3:
        if i1 == i0 goto label4;

        return -1;

     label4:
        return 0;

     label5:
        $r4 := @caughtexception;

        return -1;

        catch java.util.MissingResourceException from label2 to label3 with label5;
    }

    protected abstract int onLoadLanguage(java.lang.String, java.lang.String, java.lang.String);

    public int onLoadVoice(java.lang.String)
    {
        android.speech.tts.TextToSpeechService r0;
        int i0, $i1;
        java.lang.String $r1, $r2, $r3, $r4, $r5, $r6, r8;
        java.lang.Throwable $r7;
        java.util.Locale r9;

        r0 := @this: android.speech.tts.TextToSpeechService;

        r8 := @parameter0: java.lang.String;

        r9 = staticinvoke <java.util.Locale: java.util.Locale forLanguageTag(java.lang.String)>(r8);

        if r9 != null goto label1;

        return -1;

     label1:
        i0 = specialinvoke r0.<android.speech.tts.TextToSpeechService: int getExpectedLanguageAvailableStatus(java.util.Locale)>(r9);

     label2:
        $r1 = virtualinvoke r9.<java.util.Locale: java.lang.String getISO3Language()>();

        $r2 = virtualinvoke r9.<java.util.Locale: java.lang.String getISO3Country()>();

        $r3 = virtualinvoke r9.<java.util.Locale: java.lang.String getVariant()>();

        $i1 = virtualinvoke r0.<android.speech.tts.TextToSpeechService: int onIsLanguageAvailable(java.lang.String,java.lang.String,java.lang.String)>($r1, $r2, $r3);

        if $i1 == i0 goto label4;

     label3:
        return -1;

     label4:
        $r4 = virtualinvoke r9.<java.util.Locale: java.lang.String getISO3Language()>();

        $r5 = virtualinvoke r9.<java.util.Locale: java.lang.String getISO3Country()>();

        $r6 = virtualinvoke r9.<java.util.Locale: java.lang.String getVariant()>();

        virtualinvoke r0.<android.speech.tts.TextToSpeechService: int onLoadLanguage(java.lang.String,java.lang.String,java.lang.String)>($r4, $r5, $r6);

     label5:
        return 0;

     label6:
        $r7 := @caughtexception;

        return -1;

        catch java.util.MissingResourceException from label2 to label3 with label6;
        catch java.util.MissingResourceException from label4 to label5 with label6;
    }

    protected abstract void onStop();

    protected abstract void onSynthesizeText(android.speech.tts.SynthesisRequest, android.speech.tts.SynthesisCallback);

    public static void <clinit>()
    {
        <android.speech.tts.TextToSpeechService: java.lang.String TAG> = "TextToSpeechService";

        <android.speech.tts.TextToSpeechService: java.lang.String SYNTH_THREAD_NAME> = "SynthThread";

        <android.speech.tts.TextToSpeechService: boolean DBG> = 0;

        return;
    }
}
