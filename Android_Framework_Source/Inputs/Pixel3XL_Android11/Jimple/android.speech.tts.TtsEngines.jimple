public class android.speech.tts.TtsEngines extends java.lang.Object
{
    private static final boolean DBG;
    private static final java.lang.String LOCALE_DELIMITER_NEW;
    private static final java.lang.String LOCALE_DELIMITER_OLD;
    private static final java.lang.String TAG;
    private static final java.lang.String XML_TAG_NAME;
    private static final java.util.Map sNormalizeCountry;
    private static final java.util.Map sNormalizeLanguage;
    private final android.content.Context mContext;

    static void <clinit>()
    {
        java.util.HashMap $r0, $r2;
        java.util.Map $r1, $r3;
        java.lang.String $r4, $r6, r12, r17;
        java.lang.Throwable $r8, $r9;
        java.lang.String[] r11, r16;
        int i1, i2, i3, i4;
        java.util.Locale r13, r18;

        <android.speech.tts.TtsEngines: java.lang.String XML_TAG_NAME> = "tts-engine";

        <android.speech.tts.TtsEngines: java.lang.String TAG> = "TtsEngines";

        <android.speech.tts.TtsEngines: java.lang.String LOCALE_DELIMITER_OLD> = "-";

        <android.speech.tts.TtsEngines: java.lang.String LOCALE_DELIMITER_NEW> = "_";

        <android.speech.tts.TtsEngines: boolean DBG> = 0;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        r11 = staticinvoke <java.util.Locale: java.lang.String[] getISOLanguages()>();

        i1 = lengthof r11;

        i2 = 0;

     label01:
        if i2 >= i1 goto label06;

        r12 = r11[i2];

     label02:
        r13 = new java.util.Locale;

        specialinvoke r13.<java.util.Locale: void <init>(java.lang.String)>(r12);

        $r6 = virtualinvoke r13.<java.util.Locale: java.lang.String getISO3Language()>();

        virtualinvoke $r0.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, r12);

     label03:
        goto label05;

     label04:
        $r8 := @caughtexception;

     label05:
        i2 = i2 + 1;

        goto label01;

     label06:
        $r1 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>($r0);

        <android.speech.tts.TtsEngines: java.util.Map sNormalizeLanguage> = $r1;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r16 = staticinvoke <java.util.Locale: java.lang.String[] getISOCountries()>();

        i3 = lengthof r16;

        i4 = 0;

     label07:
        if i4 >= i3 goto label12;

        r17 = r16[i4];

     label08:
        r18 = new java.util.Locale;

        specialinvoke r18.<java.util.Locale: void <init>(java.lang.String,java.lang.String)>("", r17);

        $r4 = virtualinvoke r18.<java.util.Locale: java.lang.String getISO3Country()>();

        virtualinvoke $r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, r17);

     label09:
        goto label11;

     label10:
        $r9 := @caughtexception;

     label11:
        i4 = i4 + 1;

        goto label07;

     label12:
        $r3 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>($r2);

        <android.speech.tts.TtsEngines: java.util.Map sNormalizeCountry> = $r3;

        return;

        catch java.util.MissingResourceException from label02 to label03 with label04;
        catch java.util.MissingResourceException from label08 to label09 with label10;
    }

    public void <init>(android.content.Context)
    {
        android.speech.tts.TtsEngines r0;
        android.content.Context r1;

        r0 := @this: android.speech.tts.TtsEngines;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.speech.tts.TtsEngines: android.content.Context mContext> = r1;

        return;
    }

    private android.speech.tts.TextToSpeech$EngineInfo getEngineInfo(android.content.pm.ResolveInfo, android.content.pm.PackageManager)
    {
        android.speech.tts.TtsEngines r0;
        android.content.pm.ResolveInfo r1;
        android.content.pm.ServiceInfo r2;
        android.speech.tts.TextToSpeech$EngineInfo $r4;
        java.lang.String $r5, r8;
        boolean $z0, $z1;
        int $i0, $i1;
        android.content.pm.PackageManager r6;
        java.lang.CharSequence r7;

        r0 := @this: android.speech.tts.TtsEngines;

        r1 := @parameter0: android.content.pm.ResolveInfo;

        r6 := @parameter1: android.content.pm.PackageManager;

        r2 = r1.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

        if r2 == null goto label3;

        $r4 = new android.speech.tts.TextToSpeech$EngineInfo;

        specialinvoke $r4.<android.speech.tts.TextToSpeech$EngineInfo: void <init>()>();

        $r5 = r2.<android.content.pm.ServiceInfo: java.lang.String packageName>;

        $r4.<android.speech.tts.TextToSpeech$EngineInfo: java.lang.String name> = $r5;

        r7 = virtualinvoke r2.<android.content.pm.ServiceInfo: java.lang.CharSequence loadLabel(android.content.pm.PackageManager)>(r6);

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r7);

        if $z0 == 0 goto label1;

        r8 = $r4.<android.speech.tts.TextToSpeech$EngineInfo: java.lang.String name>;

        goto label2;

     label1:
        r8 = interfaceinvoke r7.<java.lang.CharSequence: java.lang.String toString()>();

     label2:
        $r4.<android.speech.tts.TextToSpeech$EngineInfo: java.lang.String label> = r8;

        $i0 = virtualinvoke r2.<android.content.pm.ServiceInfo: int getIconResource()>();

        $r4.<android.speech.tts.TextToSpeech$EngineInfo: int icon> = $i0;

        $i1 = r1.<android.content.pm.ResolveInfo: int priority>;

        $r4.<android.speech.tts.TextToSpeech$EngineInfo: int priority> = $i1;

        $z1 = specialinvoke r0.<android.speech.tts.TtsEngines: boolean isSystemEngine(android.content.pm.ServiceInfo)>(r2);

        $r4.<android.speech.tts.TextToSpeech$EngineInfo: boolean system> = $z1;

        return $r4;

     label3:
        return null;
    }

    private boolean isSystemEngine(android.content.pm.ServiceInfo)
    {
        android.speech.tts.TtsEngines r0;
        int $i0, $i1;
        android.content.pm.ServiceInfo r1;
        android.content.pm.ApplicationInfo r2;
        boolean z0;

        r0 := @this: android.speech.tts.TtsEngines;

        r1 := @parameter0: android.content.pm.ServiceInfo;

        r2 = r1.<android.content.pm.ServiceInfo: android.content.pm.ApplicationInfo applicationInfo>;

        z0 = 1;

        if r2 == null goto label1;

        $i0 = r2.<android.content.pm.ApplicationInfo: int flags>;

        $i1 = $i0 & 1;

        if $i1 == 0 goto label1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public static java.util.Locale normalizeTTSLocale(java.util.Locale)
    {
        java.util.Locale r0, $r11;
        java.lang.String r1, r6, r7, r8, r9, r10, $r12;
        boolean $z0, $z1;
        java.util.Map $r2, $r4;
        java.lang.Object $r3, $r5;

        r0 := @parameter0: java.util.Locale;

        r6 = virtualinvoke r0.<java.util.Locale: java.lang.String getLanguage()>();

        r7 = r6;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r6);

        if $z0 != 0 goto label1;

        $r4 = <android.speech.tts.TtsEngines: java.util.Map sNormalizeLanguage>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r6);

        r8 = (java.lang.String) $r5;

        r7 = r6;

        if r8 == null goto label1;

        r7 = r8;

     label1:
        r1 = virtualinvoke r0.<java.util.Locale: java.lang.String getCountry()>();

        r9 = r1;

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z1 != 0 goto label2;

        $r2 = <android.speech.tts.TtsEngines: java.util.Map sNormalizeCountry>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r10 = (java.lang.String) $r3;

        r9 = r1;

        if r10 == null goto label2;

        r9 = r10;

     label2:
        $r11 = new java.util.Locale;

        $r12 = virtualinvoke r0.<java.util.Locale: java.lang.String getVariant()>();

        specialinvoke $r11.<java.util.Locale: void <init>(java.lang.String,java.lang.String,java.lang.String)>(r7, r9, $r12);

        return $r11;
    }

    private static java.lang.String parseEnginePrefFromList(java.lang.String, java.lang.String)
    {
        java.lang.String r0, $r2, $r3, r4, r5;
        java.lang.String[] r1;
        int i0, i1, $i2, i3;
        boolean $z0, $z1;

        r4 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.String;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r4);

        if $z0 == 0 goto label1;

        return null;

     label1:
        r1 = virtualinvoke r4.<java.lang.String: java.lang.String[] split(java.lang.String)>(",");

        i0 = lengthof r1;

        i3 = 0;

     label2:
        if i3 >= i0 goto label4;

        r5 = r1[i3];

        i1 = virtualinvoke r5.<java.lang.String: int indexOf(int)>(58);

        if i1 <= 0 goto label3;

        $r2 = virtualinvoke r5.<java.lang.String: java.lang.String substring(int,int)>(0, i1);

        $z1 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z1 == 0 goto label3;

        $i2 = i1 + 1;

        $r3 = virtualinvoke r5.<java.lang.String: java.lang.String substring(int)>($i2);

        return $r3;

     label3:
        i3 = i3 + 1;

        goto label2;

     label4:
        return null;
    }

    private java.lang.String settingsActivityFromServiceInfo(android.content.pm.ServiceInfo, android.content.pm.PackageManager)
    {
        android.speech.tts.TtsEngines r0;
        int i0;
        java.lang.String r1, $r3, $r4, $r10, $r12, $r15, $r21, $r27, $r31;
        android.content.pm.ApplicationInfo $r2;
        boolean $z0;
        android.util.AttributeSet $r5;
        int[] $r6;
        java.lang.Throwable $r16, $r22, $r32;
        android.content.pm.PackageManager$NameNotFoundException $r28;
        android.content.pm.ServiceInfo r33;
        android.content.pm.PackageManager r34;
        android.content.res.XmlResourceParser r35, r36, r37, r38, r39;
        java.lang.StringBuilder r40, r42, r46, r48, r50;
        android.content.res.Resources r41;
        android.content.res.TypedArray r43;

        r0 := @this: android.speech.tts.TtsEngines;

        r33 := @parameter0: android.content.pm.ServiceInfo;

        r34 := @parameter1: android.content.pm.PackageManager;

        r35 = null;

        r36 = null;

        r37 = null;

        r38 = null;

     label01:
        r39 = virtualinvoke r33.<android.content.pm.ServiceInfo: android.content.res.XmlResourceParser loadXmlMetaData(android.content.pm.PackageManager,java.lang.String)>(r34, "android.speech.tts");

     label02:
        if r39 != null goto label14;

        r38 = r39;

        r35 = r39;

        r36 = r39;

        r37 = r39;

     label03:
        r40 = new java.lang.StringBuilder;

     label04:
        r38 = r39;

        r35 = r39;

        r36 = r39;

        r37 = r39;

     label05:
        specialinvoke r40.<java.lang.StringBuilder: void <init>()>();

     label06:
        r38 = r39;

        r35 = r39;

        r36 = r39;

        r37 = r39;

     label07:
        virtualinvoke r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No meta-data found for :");

     label08:
        r38 = r39;

        r35 = r39;

        r36 = r39;

        r37 = r39;

     label09:
        virtualinvoke r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r33);

     label10:
        r38 = r39;

        r35 = r39;

        r36 = r39;

        r37 = r39;

     label11:
        $r15 = virtualinvoke r40.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("TtsEngines", $r15);

     label12:
        if r39 == null goto label13;

        interfaceinvoke r39.<android.content.res.XmlResourceParser: void close()>();

     label13:
        return null;

     label14:
        r38 = r39;

        r35 = r39;

        r36 = r39;

        r37 = r39;

     label15:
        $r2 = r33.<android.content.pm.ServiceInfo: android.content.pm.ApplicationInfo applicationInfo>;

        r41 = virtualinvoke r34.<android.content.pm.PackageManager: android.content.res.Resources getResourcesForApplication(android.content.pm.ApplicationInfo)>($r2);

     label16:
        r38 = r39;

        r35 = r39;

        r36 = r39;

        r37 = r39;

     label17:
        i0 = interfaceinvoke r39.<android.content.res.XmlResourceParser: int next()>();

     label18:
        if i0 == 1 goto label44;

        if i0 != 2 goto label16;

        r38 = r39;

        r35 = r39;

        r36 = r39;

        r37 = r39;

     label19:
        $r3 = "tts-engine";

        $r4 = interfaceinvoke r39.<android.content.res.XmlResourceParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 != 0 goto label36;

     label20:
        r38 = r39;

        r35 = r39;

        r36 = r39;

        r37 = r39;

     label21:
        r42 = new java.lang.StringBuilder;

     label22:
        r38 = r39;

        r35 = r39;

        r36 = r39;

        r37 = r39;

     label23:
        specialinvoke r42.<java.lang.StringBuilder: void <init>()>();

     label24:
        r38 = r39;

        r35 = r39;

        r36 = r39;

        r37 = r39;

     label25:
        virtualinvoke r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package ");

     label26:
        r38 = r39;

        r35 = r39;

        r36 = r39;

        r37 = r39;

     label27:
        virtualinvoke r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r33);

     label28:
        r38 = r39;

        r35 = r39;

        r36 = r39;

        r37 = r39;

     label29:
        virtualinvoke r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" uses unknown tag :");

     label30:
        r38 = r39;

        r35 = r39;

        r36 = r39;

        r37 = r39;

     label31:
        $r10 = interfaceinvoke r39.<android.content.res.XmlResourceParser: java.lang.String getName()>();

        virtualinvoke r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

     label32:
        r38 = r39;

        r35 = r39;

        r36 = r39;

        r37 = r39;

     label33:
        $r12 = virtualinvoke r42.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("TtsEngines", $r12);

     label34:
        if r39 == null goto label35;

        interfaceinvoke r39.<android.content.res.XmlResourceParser: void close()>();

     label35:
        return null;

     label36:
        r38 = r39;

        r35 = r39;

        r36 = r39;

        r37 = r39;

     label37:
        $r5 = staticinvoke <android.util.Xml: android.util.AttributeSet asAttributeSet(org.xmlpull.v1.XmlPullParser)>(r39);

        $r6 = <com.android.internal.R$styleable: int[] TextToSpeechEngine>;

        r43 = virtualinvoke r41.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>($r5, $r6);

     label38:
        r38 = r39;

        r35 = r39;

        r36 = r39;

        r37 = r39;

     label39:
        r1 = virtualinvoke r43.<android.content.res.TypedArray: java.lang.String getString(int)>(0);

     label40:
        r38 = r39;

        r35 = r39;

        r36 = r39;

        r37 = r39;

     label41:
        virtualinvoke r43.<android.content.res.TypedArray: void recycle()>();

     label42:
        if r39 == null goto label43;

        interfaceinvoke r39.<android.content.res.XmlResourceParser: void close()>();

     label43:
        return r1;

     label44:
        if r39 == null goto label45;

        interfaceinvoke r39.<android.content.res.XmlResourceParser: void close()>();

     label45:
        return null;

     label46:
        $r32 := @caughtexception;

        goto label91;

     label47:
        $r22 := @caughtexception;

        r38 = r35;

     label48:
        r46 = new java.lang.StringBuilder;

     label49:
        r38 = r35;

     label50:
        specialinvoke r46.<java.lang.StringBuilder: void <init>()>();

     label51:
        r38 = r35;

     label52:
        virtualinvoke r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error parsing metadata for ");

     label53:
        r38 = r35;

     label54:
        virtualinvoke r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r33);

     label55:
        r38 = r35;

     label56:
        virtualinvoke r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

     label57:
        r38 = r35;

     label58:
        virtualinvoke r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r22);

     label59:
        r38 = r35;

     label60:
        $r27 = virtualinvoke r46.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("TtsEngines", $r27);

     label61:
        if r35 == null goto label62;

        interfaceinvoke r35.<android.content.res.XmlResourceParser: void close()>();

     label62:
        return null;

     label63:
        $r16 := @caughtexception;

        r38 = r36;

     label64:
        r48 = new java.lang.StringBuilder;

     label65:
        r38 = r36;

     label66:
        specialinvoke r48.<java.lang.StringBuilder: void <init>()>();

     label67:
        r38 = r36;

     label68:
        virtualinvoke r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error parsing metadata for ");

     label69:
        r38 = r36;

     label70:
        virtualinvoke r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r33);

     label71:
        r38 = r36;

     label72:
        virtualinvoke r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

     label73:
        r38 = r36;

     label74:
        virtualinvoke r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r16);

     label75:
        r38 = r36;

     label76:
        $r21 = virtualinvoke r48.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("TtsEngines", $r21);

     label77:
        if r36 == null goto label78;

        interfaceinvoke r36.<android.content.res.XmlResourceParser: void close()>();

     label78:
        return null;

     label79:
        $r28 := @caughtexception;

        r38 = r37;

     label80:
        r50 = new java.lang.StringBuilder;

     label81:
        r38 = r37;

     label82:
        specialinvoke r50.<java.lang.StringBuilder: void <init>()>();

     label83:
        r38 = r37;

     label84:
        virtualinvoke r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not load resources for : ");

     label85:
        r38 = r37;

     label86:
        virtualinvoke r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r33);

     label87:
        r38 = r37;

     label88:
        $r31 = virtualinvoke r50.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("TtsEngines", $r31);

     label89:
        if r37 == null goto label90;

        interfaceinvoke r37.<android.content.res.XmlResourceParser: void close()>();

     label90:
        return null;

     label91:
        if r38 == null goto label92;

        interfaceinvoke r38.<android.content.res.XmlResourceParser: void close()>();

     label92:
        throw $r32;

        catch android.content.pm.PackageManager$NameNotFoundException from label01 to label02 with label79;
        catch org.xmlpull.v1.XmlPullParserException from label01 to label02 with label63;
        catch java.io.IOException from label01 to label02 with label47;
        catch java.lang.Throwable from label01 to label02 with label46;
        catch android.content.pm.PackageManager$NameNotFoundException from label03 to label04 with label79;
        catch org.xmlpull.v1.XmlPullParserException from label03 to label04 with label63;
        catch java.io.IOException from label03 to label04 with label47;
        catch java.lang.Throwable from label03 to label04 with label46;
        catch android.content.pm.PackageManager$NameNotFoundException from label05 to label06 with label79;
        catch org.xmlpull.v1.XmlPullParserException from label05 to label06 with label63;
        catch java.io.IOException from label05 to label06 with label47;
        catch java.lang.Throwable from label05 to label06 with label46;
        catch android.content.pm.PackageManager$NameNotFoundException from label07 to label08 with label79;
        catch org.xmlpull.v1.XmlPullParserException from label07 to label08 with label63;
        catch java.io.IOException from label07 to label08 with label47;
        catch java.lang.Throwable from label07 to label08 with label46;
        catch android.content.pm.PackageManager$NameNotFoundException from label09 to label10 with label79;
        catch org.xmlpull.v1.XmlPullParserException from label09 to label10 with label63;
        catch java.io.IOException from label09 to label10 with label47;
        catch java.lang.Throwable from label09 to label10 with label46;
        catch android.content.pm.PackageManager$NameNotFoundException from label11 to label12 with label79;
        catch org.xmlpull.v1.XmlPullParserException from label11 to label12 with label63;
        catch java.io.IOException from label11 to label12 with label47;
        catch java.lang.Throwable from label11 to label12 with label46;
        catch android.content.pm.PackageManager$NameNotFoundException from label15 to label16 with label79;
        catch org.xmlpull.v1.XmlPullParserException from label15 to label16 with label63;
        catch java.io.IOException from label15 to label16 with label47;
        catch java.lang.Throwable from label15 to label16 with label46;
        catch android.content.pm.PackageManager$NameNotFoundException from label17 to label18 with label79;
        catch org.xmlpull.v1.XmlPullParserException from label17 to label18 with label63;
        catch java.io.IOException from label17 to label18 with label47;
        catch java.lang.Throwable from label17 to label18 with label46;
        catch android.content.pm.PackageManager$NameNotFoundException from label19 to label20 with label79;
        catch org.xmlpull.v1.XmlPullParserException from label19 to label20 with label63;
        catch java.io.IOException from label19 to label20 with label47;
        catch java.lang.Throwable from label19 to label20 with label46;
        catch android.content.pm.PackageManager$NameNotFoundException from label21 to label22 with label79;
        catch org.xmlpull.v1.XmlPullParserException from label21 to label22 with label63;
        catch java.io.IOException from label21 to label22 with label47;
        catch java.lang.Throwable from label21 to label22 with label46;
        catch android.content.pm.PackageManager$NameNotFoundException from label23 to label24 with label79;
        catch org.xmlpull.v1.XmlPullParserException from label23 to label24 with label63;
        catch java.io.IOException from label23 to label24 with label47;
        catch java.lang.Throwable from label23 to label24 with label46;
        catch android.content.pm.PackageManager$NameNotFoundException from label25 to label26 with label79;
        catch org.xmlpull.v1.XmlPullParserException from label25 to label26 with label63;
        catch java.io.IOException from label25 to label26 with label47;
        catch java.lang.Throwable from label25 to label26 with label46;
        catch android.content.pm.PackageManager$NameNotFoundException from label27 to label28 with label79;
        catch org.xmlpull.v1.XmlPullParserException from label27 to label28 with label63;
        catch java.io.IOException from label27 to label28 with label47;
        catch java.lang.Throwable from label27 to label28 with label46;
        catch android.content.pm.PackageManager$NameNotFoundException from label29 to label30 with label79;
        catch org.xmlpull.v1.XmlPullParserException from label29 to label30 with label63;
        catch java.io.IOException from label29 to label30 with label47;
        catch java.lang.Throwable from label29 to label30 with label46;
        catch android.content.pm.PackageManager$NameNotFoundException from label31 to label32 with label79;
        catch org.xmlpull.v1.XmlPullParserException from label31 to label32 with label63;
        catch java.io.IOException from label31 to label32 with label47;
        catch java.lang.Throwable from label31 to label32 with label46;
        catch android.content.pm.PackageManager$NameNotFoundException from label33 to label34 with label79;
        catch org.xmlpull.v1.XmlPullParserException from label33 to label34 with label63;
        catch java.io.IOException from label33 to label34 with label47;
        catch java.lang.Throwable from label33 to label34 with label46;
        catch android.content.pm.PackageManager$NameNotFoundException from label37 to label38 with label79;
        catch org.xmlpull.v1.XmlPullParserException from label37 to label38 with label63;
        catch java.io.IOException from label37 to label38 with label47;
        catch java.lang.Throwable from label37 to label38 with label46;
        catch android.content.pm.PackageManager$NameNotFoundException from label39 to label40 with label79;
        catch org.xmlpull.v1.XmlPullParserException from label39 to label40 with label63;
        catch java.io.IOException from label39 to label40 with label47;
        catch java.lang.Throwable from label39 to label40 with label46;
        catch android.content.pm.PackageManager$NameNotFoundException from label41 to label42 with label79;
        catch org.xmlpull.v1.XmlPullParserException from label41 to label42 with label63;
        catch java.io.IOException from label41 to label42 with label47;
        catch java.lang.Throwable from label41 to label42 with label46;
        catch java.lang.Throwable from label48 to label49 with label46;
        catch java.lang.Throwable from label50 to label51 with label46;
        catch java.lang.Throwable from label52 to label53 with label46;
        catch java.lang.Throwable from label54 to label55 with label46;
        catch java.lang.Throwable from label56 to label57 with label46;
        catch java.lang.Throwable from label58 to label59 with label46;
        catch java.lang.Throwable from label60 to label61 with label46;
        catch java.lang.Throwable from label64 to label65 with label46;
        catch java.lang.Throwable from label66 to label67 with label46;
        catch java.lang.Throwable from label68 to label69 with label46;
        catch java.lang.Throwable from label70 to label71 with label46;
        catch java.lang.Throwable from label72 to label73 with label46;
        catch java.lang.Throwable from label74 to label75 with label46;
        catch java.lang.Throwable from label76 to label77 with label46;
        catch java.lang.Throwable from label80 to label81 with label46;
        catch java.lang.Throwable from label82 to label83 with label46;
        catch java.lang.Throwable from label84 to label85 with label46;
        catch java.lang.Throwable from label86 to label87 with label46;
        catch java.lang.Throwable from label88 to label89 with label46;
    }

    public static java.lang.String[] toOldLocaleStringFormat(java.util.Locale)
    {
        java.lang.String[] r0, $r5;
        java.lang.String $r1, $r2, $r3;
        java.lang.Throwable $r4;
        java.util.Locale r6;

        r6 := @parameter0: java.util.Locale;

        r0 = newarray (java.lang.String)[3];

        r0[0] = "";

        r0[1] = "";

        r0[2] = "";

     label1:
        $r1 = virtualinvoke r6.<java.util.Locale: java.lang.String getISO3Language()>();

        r0[0] = $r1;

        $r2 = virtualinvoke r6.<java.util.Locale: java.lang.String getISO3Country()>();

        r0[1] = $r2;

        $r3 = virtualinvoke r6.<java.util.Locale: java.lang.String getVariant()>();

        r0[2] = $r3;

     label2:
        return r0;

     label3:
        $r4 := @caughtexception;

        $r5 = newarray (java.lang.String)[3];

        $r5[0] = "eng";

        $r5[1] = "USA";

        $r5[2] = "";

        return $r5;

        catch java.util.MissingResourceException from label1 to label2 with label3;
    }

    private java.lang.String updateValueInCommaSeparatedList(java.lang.String, java.lang.String, java.lang.String)
    {
        android.speech.tts.TtsEngines r0;
        java.lang.String r1, r2, r4, $r10, r20, $r22;
        int i0, i1, i2;
        java.lang.StringBuilder $r5;
        boolean $z0, $z1, z2, z3, z4, z5;
        java.lang.String[] r21;

        r0 := @this: android.speech.tts.TtsEngines;

        r20 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r20);

        if $z0 == 0 goto label01;

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        goto label10;

     label01:
        r21 = virtualinvoke r20.<java.lang.String: java.lang.String[] split(java.lang.String)>(",");

        z2 = 1;

        z3 = 0;

        i0 = lengthof r21;

        i2 = 0;

     label02:
        if i2 >= i0 goto label09;

        r4 = r21[i2];

        i1 = virtualinvoke r4.<java.lang.String: int indexOf(int)>(58);

        z4 = z2;

        z5 = z3;

        if i1 <= 0 goto label08;

        $r10 = virtualinvoke r4.<java.lang.String: java.lang.String substring(int,int)>(0, i1);

        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r10);

        if $z1 == 0 goto label05;

        if z2 == 0 goto label03;

        z2 = 0;

        goto label04;

     label03:
        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(44);

     label04:
        z5 = 1;

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        z4 = z2;

        goto label08;

     label05:
        if z2 == 0 goto label06;

        z2 = 0;

        goto label07;

     label06:
        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(44);

     label07:
        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        z5 = z3;

        z4 = z2;

     label08:
        i2 = i2 + 1;

        z2 = z4;

        z3 = z5;

        goto label02;

     label09:
        if z3 != 0 goto label10;

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(44);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

     label10:
        $r22 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r22;
    }

    public java.lang.String getDefaultEngine()
    {
        android.speech.tts.TtsEngines r0;
        android.content.Context $r1;
        android.content.ContentResolver $r2;
        boolean $z0;
        java.lang.String r3;

        r0 := @this: android.speech.tts.TtsEngines;

        $r1 = r0.<android.speech.tts.TtsEngines: android.content.Context mContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        r3 = staticinvoke <android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)>($r2, "tts_default_synth");

        $z0 = virtualinvoke r0.<android.speech.tts.TtsEngines: boolean isEngineInstalled(java.lang.String)>(r3);

        if $z0 == 0 goto label1;

        goto label2;

     label1:
        r3 = virtualinvoke r0.<android.speech.tts.TtsEngines: java.lang.String getHighestRankedEngineName()>();

     label2:
        return r3;
    }

    public android.speech.tts.TextToSpeech$EngineInfo getEngineInfo(java.lang.String)
    {
        android.speech.tts.TtsEngines r0;
        android.content.pm.PackageManager r1;
        android.content.Context $r3;
        android.content.Intent $r4;
        int $i0;
        java.lang.Object $r6;
        android.content.pm.ResolveInfo $r7;
        android.speech.tts.TextToSpeech$EngineInfo $r8;
        java.lang.String r9;
        java.util.List r10;

        r0 := @this: android.speech.tts.TtsEngines;

        r9 := @parameter0: java.lang.String;

        $r3 = r0.<android.speech.tts.TtsEngines: android.content.Context mContext>;

        r1 = virtualinvoke $r3.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r4 = new android.content.Intent;

        specialinvoke $r4.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.TTS_SERVICE");

        virtualinvoke $r4.<android.content.Intent: android.content.Intent setPackage(java.lang.String)>(r9);

        r10 = virtualinvoke r1.<android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)>($r4, 65536);

        if r10 == null goto label1;

        $i0 = interfaceinvoke r10.<java.util.List: int size()>();

        if $i0 != 1 goto label1;

        $r6 = interfaceinvoke r10.<java.util.List: java.lang.Object get(int)>(0);

        $r7 = (android.content.pm.ResolveInfo) $r6;

        $r8 = specialinvoke r0.<android.speech.tts.TtsEngines: android.speech.tts.TextToSpeech$EngineInfo getEngineInfo(android.content.pm.ResolveInfo,android.content.pm.PackageManager)>($r7, r1);

        return $r8;

     label1:
        return null;
    }

    public java.util.List getEngines()
    {
        android.speech.tts.TtsEngines r0;
        android.content.pm.PackageManager r1;
        android.speech.tts.TextToSpeech$EngineInfo r2;
        android.content.Context $r3;
        android.content.Intent $r4;
        java.util.ArrayList $r5;
        int $i0;
        boolean $z0;
        android.speech.tts.TtsEngines$EngineInfoComparator $r6;
        java.lang.Object $r7;
        android.content.pm.ResolveInfo $r8;
        java.util.List $r9, r11;
        java.util.Iterator r13;

        r0 := @this: android.speech.tts.TtsEngines;

        $r3 = r0.<android.speech.tts.TtsEngines: android.content.Context mContext>;

        r1 = virtualinvoke $r3.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r4 = new android.content.Intent;

        specialinvoke $r4.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.TTS_SERVICE");

        r11 = virtualinvoke r1.<android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)>($r4, 65536);

        if r11 != null goto label1;

        $r9 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $r9;

     label1:
        $r5 = new java.util.ArrayList;

        $i0 = interfaceinvoke r11.<java.util.List: int size()>();

        specialinvoke $r5.<java.util.ArrayList: void <init>(int)>($i0);

        r13 = interfaceinvoke r11.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r13.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r7 = interfaceinvoke r13.<java.util.Iterator: java.lang.Object next()>();

        $r8 = (android.content.pm.ResolveInfo) $r7;

        r2 = specialinvoke r0.<android.speech.tts.TtsEngines: android.speech.tts.TextToSpeech$EngineInfo getEngineInfo(android.content.pm.ResolveInfo,android.content.pm.PackageManager)>($r8, r1);

        if r2 == null goto label3;

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>(r2);

     label3:
        goto label2;

     label4:
        $r6 = <android.speech.tts.TtsEngines$EngineInfoComparator: android.speech.tts.TtsEngines$EngineInfoComparator INSTANCE>;

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>($r5, $r6);

        return $r5;
    }

    public java.lang.String getHighestRankedEngineName()
    {
        android.speech.tts.TtsEngines r0;
        java.util.List r1;
        int $i0;
        java.lang.Object $r2, $r4;
        android.speech.tts.TextToSpeech$EngineInfo $r3, $r5;
        boolean $z0;
        java.lang.String $r6;

        r0 := @this: android.speech.tts.TtsEngines;

        r1 = virtualinvoke r0.<android.speech.tts.TtsEngines: java.util.List getEngines()>();

        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        if $i0 <= 0 goto label1;

        $r2 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(0);

        $r3 = (android.speech.tts.TextToSpeech$EngineInfo) $r2;

        $z0 = $r3.<android.speech.tts.TextToSpeech$EngineInfo: boolean system>;

        if $z0 == 0 goto label1;

        $r4 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(0);

        $r5 = (android.speech.tts.TextToSpeech$EngineInfo) $r4;

        $r6 = $r5.<android.speech.tts.TextToSpeech$EngineInfo: java.lang.String name>;

        return $r6;

     label1:
        return null;
    }

    public java.util.Locale getLocalePrefForEngine(java.lang.String)
    {
        android.speech.tts.TtsEngines r0;
        java.lang.String r1, $r4;
        android.content.Context $r2;
        android.content.ContentResolver $r3;
        java.util.Locale $r5;

        r0 := @this: android.speech.tts.TtsEngines;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<android.speech.tts.TtsEngines: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r4 = staticinvoke <android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)>($r3, "tts_default_locale");

        $r5 = virtualinvoke r0.<android.speech.tts.TtsEngines: java.util.Locale getLocalePrefForEngine(java.lang.String,java.lang.String)>(r1, $r4);

        return $r5;
    }

    public java.util.Locale getLocalePrefForEngine(java.lang.String, java.lang.String)
    {
        android.speech.tts.TtsEngines r0;
        java.lang.String r1, $r6, r8, r9;
        boolean $z0;
        java.lang.StringBuilder $r2;
        java.util.Locale $r7, r10, r11;

        r0 := @this: android.speech.tts.TtsEngines;

        r8 := @parameter0: java.lang.String;

        r9 := @parameter1: java.lang.String;

        r1 = staticinvoke <android.speech.tts.TtsEngines: java.lang.String parseEnginePrefFromList(java.lang.String,java.lang.String)>(r9, r8);

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 == 0 goto label1;

        $r7 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        return $r7;

     label1:
        r10 = virtualinvoke r0.<android.speech.tts.TtsEngines: java.util.Locale parseLocaleString(java.lang.String)>(r1);

        r11 = r10;

        if r10 != null goto label2;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to parse locale ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", returning en_US instead");

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("TtsEngines", $r6);

        r11 = <java.util.Locale: java.util.Locale US>;

     label2:
        return r11;
    }

    public android.content.Intent getSettingsIntent(java.lang.String)
    {
        android.speech.tts.TtsEngines r0;
        java.lang.String r1, r13;
        android.content.Context $r2;
        android.content.Intent $r3, $r7;
        int $i0;
        java.lang.Object $r5;
        android.content.pm.ResolveInfo $r6;
        android.content.pm.PackageManager r9;
        java.util.List r11;
        android.content.pm.ServiceInfo r12;

        r0 := @this: android.speech.tts.TtsEngines;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<android.speech.tts.TtsEngines: android.content.Context mContext>;

        r9 = virtualinvoke $r2.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r3 = new android.content.Intent;

        specialinvoke $r3.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.TTS_SERVICE");

        virtualinvoke $r3.<android.content.Intent: android.content.Intent setPackage(java.lang.String)>(r1);

        r11 = virtualinvoke r9.<android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)>($r3, 65664);

        if r11 == null goto label1;

        $i0 = interfaceinvoke r11.<java.util.List: int size()>();

        if $i0 != 1 goto label1;

        $r5 = interfaceinvoke r11.<java.util.List: java.lang.Object get(int)>(0);

        $r6 = (android.content.pm.ResolveInfo) $r5;

        r12 = $r6.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

        if r12 == null goto label1;

        r13 = specialinvoke r0.<android.speech.tts.TtsEngines: java.lang.String settingsActivityFromServiceInfo(android.content.pm.ServiceInfo,android.content.pm.PackageManager)>(r12, r9);

        if r13 == null goto label1;

        $r7 = new android.content.Intent;

        specialinvoke $r7.<android.content.Intent: void <init>()>();

        virtualinvoke $r7.<android.content.Intent: android.content.Intent setClassName(java.lang.String,java.lang.String)>(r1, r13);

        return $r7;

     label1:
        return null;
    }

    public boolean isEngineInstalled(java.lang.String)
    {
        android.speech.tts.TtsEngines r0;
        java.lang.String r1;
        android.speech.tts.TextToSpeech$EngineInfo $r2;
        boolean z0;

        r0 := @this: android.speech.tts.TtsEngines;

        r1 := @parameter0: java.lang.String;

        z0 = 0;

        if r1 != null goto label1;

        return 0;

     label1:
        $r2 = virtualinvoke r0.<android.speech.tts.TtsEngines: android.speech.tts.TextToSpeech$EngineInfo getEngineInfo(java.lang.String)>(r1);

        if $r2 == null goto label2;

        z0 = 1;

     label2:
        return z0;
    }

    public boolean isLocaleSetToDefaultForEngine(java.lang.String)
    {
        android.speech.tts.TtsEngines r0;
        java.lang.String r1, $r4, $r5;
        android.content.Context $r2;
        android.content.ContentResolver $r3;
        boolean $z0;

        r0 := @this: android.speech.tts.TtsEngines;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<android.speech.tts.TtsEngines: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r4 = staticinvoke <android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)>($r3, "tts_default_locale");

        $r5 = staticinvoke <android.speech.tts.TtsEngines: java.lang.String parseEnginePrefFromList(java.lang.String,java.lang.String)>($r4, r1);

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r5);

        return $z0;
    }

    public java.util.Locale parseLocaleString(java.lang.String)
    {
        android.speech.tts.TtsEngines r0;
        java.lang.String r1, r4, $r10, $r11, $r16, $r21, $r27, r28, r29, r30, r31, r36, r37;
        java.lang.String[] r3;
        boolean $z0;
        java.util.Map $r5, $r34;
        java.lang.Object $r6, $r35;
        java.util.Locale $r7;
        int $i0, $i1, $i2, $i3;
        java.lang.StringBuilder $r12, $r17, $r23;
        java.lang.Throwable $r22;

        r0 := @this: android.speech.tts.TtsEngines;

        r1 := @parameter0: java.lang.String;

        r28 = "";

        r29 = "";

        r30 = "";

        r31 = "";

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 != 0 goto label4;

        r3 = virtualinvoke r1.<java.lang.String: java.lang.String[] split(java.lang.String)>("[-_]");

        $r10 = r3[0];

        r4 = virtualinvoke $r10.<java.lang.String: java.lang.String toLowerCase()>();

        $i0 = lengthof r3;

        if $i0 != 0 goto label1;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to convert ");

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to a valid Locale object. Only separators");

        $r21 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("TtsEngines", $r21);

        return null;

     label1:
        $i1 = lengthof r3;

        if $i1 <= 3 goto label2;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to convert ");

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to a valid Locale object. Too many separators");

        $r16 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("TtsEngines", $r16);

        return null;

     label2:
        $i2 = lengthof r3;

        if $i2 < 2 goto label3;

        $r11 = r3[1];

        r29 = virtualinvoke $r11.<java.lang.String: java.lang.String toUpperCase()>();

     label3:
        r28 = r4;

        r30 = r29;

        r31 = "";

        $i3 = lengthof r3;

        if $i3 < 3 goto label4;

        r31 = r3[2];

        r30 = r29;

        r28 = r4;

     label4:
        $r34 = <android.speech.tts.TtsEngines: java.util.Map sNormalizeLanguage>;

        $r35 = interfaceinvoke $r34.<java.util.Map: java.lang.Object get(java.lang.Object)>(r28);

        r36 = (java.lang.String) $r35;

        if r36 == null goto label5;

        r28 = r36;

     label5:
        $r5 = <android.speech.tts.TtsEngines: java.util.Map sNormalizeCountry>;

        $r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>(r30);

        r37 = (java.lang.String) $r6;

        if r37 == null goto label6;

        r30 = r37;

     label6:
        $r7 = new java.util.Locale;

        specialinvoke $r7.<java.util.Locale: void <init>(java.lang.String,java.lang.String,java.lang.String)>(r28, r30, r31);

     label7:
        virtualinvoke $r7.<java.util.Locale: java.lang.String getISO3Language()>();

        virtualinvoke $r7.<java.util.Locale: java.lang.String getISO3Country()>();

     label8:
        return $r7;

     label9:
        $r22 := @caughtexception;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to convert ");

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to a valid Locale object.");

        $r27 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("TtsEngines", $r27);

        return null;

        catch java.util.MissingResourceException from label7 to label8 with label9;
    }

    public void updateLocalePrefForEngine(java.lang.String, java.util.Locale)
    {
        android.speech.tts.TtsEngines r0;
        java.lang.String r1, $r6, r8, r10, r11;
        android.content.Context $r2, $r4;
        android.content.ContentResolver $r3, $r5;
        java.lang.Throwable $r7;
        java.util.Locale r9;

        r0 := @this: android.speech.tts.TtsEngines;

        r8 := @parameter0: java.lang.String;

        r9 := @parameter1: java.util.Locale;

        entermonitor r0;

     label1:
        $r2 = r0.<android.speech.tts.TtsEngines: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        r1 = staticinvoke <android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)>($r3, "tts_default_locale");

     label2:
        if r9 == null goto label5;

     label3:
        r10 = virtualinvoke r9.<java.util.Locale: java.lang.String toString()>();

     label4:
        goto label6;

     label5:
        r10 = "";

     label6:
        r11 = specialinvoke r0.<android.speech.tts.TtsEngines: java.lang.String updateValueInCommaSeparatedList(java.lang.String,java.lang.String,java.lang.String)>(r1, r8, r10);

        $r4 = r0.<android.speech.tts.TtsEngines: android.content.Context mContext>;

        $r5 = virtualinvoke $r4.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r6 = virtualinvoke r11.<java.lang.String: java.lang.String toString()>();

        staticinvoke <android.provider.Settings$Secure: boolean putString(android.content.ContentResolver,java.lang.String,java.lang.String)>($r5, "tts_default_locale", $r6);

     label7:
        exitmonitor r0;

        return;

     label8:
        $r7 := @caughtexception;

        exitmonitor r0;

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
    }
}
