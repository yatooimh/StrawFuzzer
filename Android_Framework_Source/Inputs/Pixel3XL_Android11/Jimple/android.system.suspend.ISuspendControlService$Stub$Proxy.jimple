class android.system.suspend.ISuspendControlService$Stub$Proxy extends java.lang.Object implements android.system.suspend.ISuspendControlService
{
    public static android.system.suspend.ISuspendControlService sDefaultImpl;
    private android.os.IBinder mRemote;

    void <init>(android.os.IBinder)
    {
        android.system.suspend.ISuspendControlService$Stub$Proxy r0;
        android.os.IBinder r1;

        r0 := @this: android.system.suspend.ISuspendControlService$Stub$Proxy;

        r1 := @parameter0: android.os.IBinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.system.suspend.ISuspendControlService$Stub$Proxy: android.os.IBinder mRemote> = r1;

        return;
    }

    public android.os.IBinder asBinder()
    {
        android.system.suspend.ISuspendControlService$Stub$Proxy r0;
        android.os.IBinder $r1;

        r0 := @this: android.system.suspend.ISuspendControlService$Stub$Proxy;

        $r1 = r0.<android.system.suspend.ISuspendControlService$Stub$Proxy: android.os.IBinder mRemote>;

        return $r1;
    }

    public boolean enableAutosuspend() throws android.os.RemoteException
    {
        android.system.suspend.ISuspendControlService$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        int i0;
        java.lang.String $r3;
        boolean $z0, z1, z2;
        android.system.suspend.ISuspendControlService $r4, $r5;
        java.lang.Throwable $r6;
        android.os.IBinder r7;

        r0 := @this: android.system.suspend.ISuspendControlService$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        $r3 = staticinvoke <android.system.suspend.ISuspendControlService$Stub: java.lang.String access$000()>();

        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>($r3);

        r7 = r0.<android.system.suspend.ISuspendControlService$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r7.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r4 = staticinvoke <android.system.suspend.ISuspendControlService$Stub: android.system.suspend.ISuspendControlService getDefaultImpl()>();

        if $r4 == null goto label5;

        $r5 = staticinvoke <android.system.suspend.ISuspendControlService$Stub: android.system.suspend.ISuspendControlService getDefaultImpl()>();

        z2 = interfaceinvoke $r5.<android.system.suspend.ISuspendControlService: boolean enableAutosuspend()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i0 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public boolean forceSuspend() throws android.os.RemoteException
    {
        android.system.suspend.ISuspendControlService$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        int i0;
        java.lang.String $r3;
        boolean $z0, z1, z2;
        android.system.suspend.ISuspendControlService $r4, $r5;
        java.lang.Throwable $r6;
        android.os.IBinder r7;

        r0 := @this: android.system.suspend.ISuspendControlService$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        $r3 = staticinvoke <android.system.suspend.ISuspendControlService$Stub: java.lang.String access$000()>();

        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>($r3);

        r7 = r0.<android.system.suspend.ISuspendControlService$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r7.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(3, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r4 = staticinvoke <android.system.suspend.ISuspendControlService$Stub: android.system.suspend.ISuspendControlService getDefaultImpl()>();

        if $r4 == null goto label5;

        $r5 = staticinvoke <android.system.suspend.ISuspendControlService$Stub: android.system.suspend.ISuspendControlService getDefaultImpl()>();

        z2 = interfaceinvoke $r5.<android.system.suspend.ISuspendControlService: boolean forceSuspend()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i0 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public java.lang.String getInterfaceDescriptor()
    {
        android.system.suspend.ISuspendControlService$Stub$Proxy r0;
        java.lang.String $r1;

        r0 := @this: android.system.suspend.ISuspendControlService$Stub$Proxy;

        $r1 = staticinvoke <android.system.suspend.ISuspendControlService$Stub: java.lang.String access$000()>();

        return $r1;
    }

    public android.system.suspend.WakeLockInfo[] getWakeLockStats() throws android.os.RemoteException
    {
        android.system.suspend.ISuspendControlService$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        java.lang.String $r3;
        android.os.IBinder $r4;
        boolean $z0;
        android.os.Parcelable$Creator $r5;
        java.lang.Object[] $r6;
        android.system.suspend.ISuspendControlService $r7, $r8;
        java.lang.Throwable $r9;
        android.system.suspend.WakeLockInfo[] r10, r11;

        r0 := @this: android.system.suspend.ISuspendControlService$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        $r3 = staticinvoke <android.system.suspend.ISuspendControlService$Stub: java.lang.String access$000()>();

        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>($r3);

        $r4 = r0.<android.system.suspend.ISuspendControlService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(4, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r7 = staticinvoke <android.system.suspend.ISuspendControlService$Stub: android.system.suspend.ISuspendControlService getDefaultImpl()>();

        if $r7 == null goto label3;

        $r8 = staticinvoke <android.system.suspend.ISuspendControlService$Stub: android.system.suspend.ISuspendControlService getDefaultImpl()>();

        r10 = interfaceinvoke $r8.<android.system.suspend.ISuspendControlService: android.system.suspend.WakeLockInfo[] getWakeLockStats()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r10;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $r5 = <android.system.suspend.WakeLockInfo: android.os.Parcelable$Creator CREATOR>;

        $r6 = virtualinvoke r2.<android.os.Parcel: java.lang.Object[] createTypedArray(android.os.Parcelable$Creator)>($r5);

        r11 = (android.system.suspend.WakeLockInfo[]) $r6;

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r11;

     label5:
        $r9 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r9;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public boolean registerCallback(android.system.suspend.ISuspendCallback) throws android.os.RemoteException
    {
        android.system.suspend.ISuspendControlService$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        int i0;
        java.lang.String $r3;
        boolean $z0, z1, z2;
        android.system.suspend.ISuspendControlService $r4, $r5;
        java.lang.Throwable $r6;
        android.system.suspend.ISuspendCallback r7;
        android.os.IBinder r8, r9;

        r0 := @this: android.system.suspend.ISuspendControlService$Stub$Proxy;

        r7 := @parameter0: android.system.suspend.ISuspendCallback;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        $r3 = staticinvoke <android.system.suspend.ISuspendControlService$Stub: java.lang.String access$000()>();

        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>($r3);

     label02:
        if r7 == null goto label05;

     label03:
        r8 = interfaceinvoke r7.<android.system.suspend.ISuspendCallback: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r8 = null;

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r8);

        r9 = r0.<android.system.suspend.ISuspendControlService$Stub$Proxy: android.os.IBinder mRemote>;

     label07:
        z1 = 0;

     label08:
        $z0 = interfaceinvoke r9.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(2, r1, r2, 0);

        if $z0 != 0 goto label10;

        $r4 = staticinvoke <android.system.suspend.ISuspendControlService$Stub: android.system.suspend.ISuspendControlService getDefaultImpl()>();

        if $r4 == null goto label10;

        $r5 = staticinvoke <android.system.suspend.ISuspendControlService$Stub: android.system.suspend.ISuspendControlService getDefaultImpl()>();

        z2 = interfaceinvoke $r5.<android.system.suspend.ISuspendControlService: boolean registerCallback(android.system.suspend.ISuspendCallback)>(r7);

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label10:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label11:
        if i0 == 0 goto label12;

        z1 = 1;

     label12:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label13:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label03 to label04 with label13;
        catch java.lang.Throwable from label06 to label07 with label13;
        catch java.lang.Throwable from label08 to label09 with label13;
        catch java.lang.Throwable from label10 to label11 with label13;
    }
}
