public final class android.telecom.Call extends java.lang.Object
{
    public static final java.lang.String AVAILABLE_PHONE_ACCOUNTS;
    public static final java.lang.String EVENT_HANDOVER_COMPLETE;
    public static final java.lang.String EVENT_HANDOVER_FAILED;
    public static final java.lang.String EVENT_HANDOVER_SOURCE_DISCONNECTED;
    public static final java.lang.String EVENT_REQUEST_HANDOVER;
    public static final java.lang.String EXTRA_HANDOVER_EXTRAS;
    public static final java.lang.String EXTRA_HANDOVER_PHONE_ACCOUNT_HANDLE;
    public static final java.lang.String EXTRA_HANDOVER_VIDEO_STATE;
    public static final java.lang.String EXTRA_LAST_EMERGENCY_CALLBACK_TIME_MILLIS;
    public static final java.lang.String EXTRA_SILENT_RINGING_REQUESTED;
    public static final java.lang.String EXTRA_SUGGESTED_PHONE_ACCOUNTS;
    public static final int REJECT_REASON_DECLINED;
    public static final int REJECT_REASON_UNWANTED;
    public static final int STATE_ACTIVE;
    public static final int STATE_AUDIO_PROCESSING;
    public static final int STATE_CONNECTING;
    public static final int STATE_DIALING;
    public static final int STATE_DISCONNECTED;
    public static final int STATE_DISCONNECTING;
    public static final int STATE_HOLDING;
    public static final int STATE_NEW;
    public static final int STATE_PRE_DIAL_WAIT;
    public static final int STATE_PULLING_CALL;
    public static final int STATE_RINGING;
    public static final int STATE_SELECT_PHONE_ACCOUNT;
    public static final int STATE_SIMULATED_RINGING;
    private java.lang.String mActiveGenericConferenceChild;
    private final java.util.List mCallbackRecords;
    private java.lang.String mCallingPackage;
    private java.util.List mCannedTextResponses;
    private final java.util.List mChildren;
    private boolean mChildrenCached;
    private final java.util.List mChildrenIds;
    private final java.util.List mConferenceableCalls;
    private android.telecom.Call$Details mDetails;
    private android.os.Bundle mExtras;
    private final android.telecom.InCallAdapter mInCallAdapter;
    private java.lang.String mParentId;
    private final android.telecom.Phone mPhone;
    private java.lang.String mRemainingPostDialSequence;
    private android.telecom.Call$RttCall mRttCall;
    private int mState;
    private int mTargetSdkVersion;
    private final java.lang.String mTelecomCallId;
    private final java.util.List mUnmodifiableChildren;
    private final java.util.List mUnmodifiableConferenceableCalls;
    private android.telecom.VideoCallImpl mVideoCallImpl;

    void <init>(android.telecom.Phone, java.lang.String, android.telecom.InCallAdapter, int, java.lang.String, int)
    {
        android.telecom.Call r0;
        android.telecom.Phone r1;
        java.lang.String r2, r4;
        android.telecom.InCallAdapter r3;
        int i0, i1;
        java.util.ArrayList $r5, $r6, $r9;
        java.util.List $r7, $r10;
        java.util.concurrent.CopyOnWriteArrayList $r8;

        r0 := @this: android.telecom.Call;

        r1 := @parameter0: android.telecom.Phone;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.telecom.InCallAdapter;

        i0 := @parameter3: int;

        r4 := @parameter4: java.lang.String;

        i1 := @parameter5: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r0.<android.telecom.Call: java.util.List mChildrenIds> = $r5;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r0.<android.telecom.Call: java.util.List mChildren> = $r6;

        $r7 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r6);

        r0.<android.telecom.Call: java.util.List mUnmodifiableChildren> = $r7;

        $r8 = new java.util.concurrent.CopyOnWriteArrayList;

        specialinvoke $r8.<java.util.concurrent.CopyOnWriteArrayList: void <init>()>();

        r0.<android.telecom.Call: java.util.List mCallbackRecords> = $r8;

        $r9 = new java.util.ArrayList;

        specialinvoke $r9.<java.util.ArrayList: void <init>()>();

        r0.<android.telecom.Call: java.util.List mConferenceableCalls> = $r9;

        $r10 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r9);

        r0.<android.telecom.Call: java.util.List mUnmodifiableConferenceableCalls> = $r10;

        r0.<android.telecom.Call: java.lang.String mParentId> = null;

        r0.<android.telecom.Call: java.lang.String mActiveGenericConferenceChild> = null;

        r0.<android.telecom.Call: java.util.List mCannedTextResponses> = null;

        r0.<android.telecom.Call: android.telecom.Phone mPhone> = r1;

        r0.<android.telecom.Call: java.lang.String mTelecomCallId> = r2;

        r0.<android.telecom.Call: android.telecom.InCallAdapter mInCallAdapter> = r3;

        r0.<android.telecom.Call: int mState> = i0;

        r0.<android.telecom.Call: java.lang.String mCallingPackage> = r4;

        r0.<android.telecom.Call: int mTargetSdkVersion> = i1;

        return;
    }

    void <init>(android.telecom.Phone, java.lang.String, android.telecom.InCallAdapter, java.lang.String, int)
    {
        android.telecom.Call r0;
        android.telecom.Phone r1;
        java.lang.String r2, r4;
        android.telecom.InCallAdapter r3;
        int i0;
        java.util.ArrayList $r5, $r6, $r9;
        java.util.List $r7, $r10;
        java.util.concurrent.CopyOnWriteArrayList $r8;

        r0 := @this: android.telecom.Call;

        r1 := @parameter0: android.telecom.Phone;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.telecom.InCallAdapter;

        r4 := @parameter3: java.lang.String;

        i0 := @parameter4: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r0.<android.telecom.Call: java.util.List mChildrenIds> = $r5;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r0.<android.telecom.Call: java.util.List mChildren> = $r6;

        $r7 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r6);

        r0.<android.telecom.Call: java.util.List mUnmodifiableChildren> = $r7;

        $r8 = new java.util.concurrent.CopyOnWriteArrayList;

        specialinvoke $r8.<java.util.concurrent.CopyOnWriteArrayList: void <init>()>();

        r0.<android.telecom.Call: java.util.List mCallbackRecords> = $r8;

        $r9 = new java.util.ArrayList;

        specialinvoke $r9.<java.util.ArrayList: void <init>()>();

        r0.<android.telecom.Call: java.util.List mConferenceableCalls> = $r9;

        $r10 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r9);

        r0.<android.telecom.Call: java.util.List mUnmodifiableConferenceableCalls> = $r10;

        r0.<android.telecom.Call: java.lang.String mParentId> = null;

        r0.<android.telecom.Call: java.lang.String mActiveGenericConferenceChild> = null;

        r0.<android.telecom.Call: java.util.List mCannedTextResponses> = null;

        r0.<android.telecom.Call: android.telecom.Phone mPhone> = r1;

        r0.<android.telecom.Call: java.lang.String mTelecomCallId> = r2;

        r0.<android.telecom.Call: android.telecom.InCallAdapter mInCallAdapter> = r3;

        r0.<android.telecom.Call: int mState> = 0;

        r0.<android.telecom.Call: java.lang.String mCallingPackage> = r4;

        r0.<android.telecom.Call: int mTargetSdkVersion> = i0;

        return;
    }

    static boolean access$000(android.os.Bundle, android.os.Bundle)
    {
        android.os.Bundle r0, r1;
        boolean $z0;

        r0 := @parameter0: android.os.Bundle;

        r1 := @parameter1: android.os.Bundle;

        $z0 = staticinvoke <android.telecom.Call: boolean areBundlesEqual(android.os.Bundle,android.os.Bundle)>(r0, r1);

        return $z0;
    }

    static java.util.List access$100(android.telecom.Call)
    {
        android.telecom.Call r0;
        java.util.List $r1;

        r0 := @parameter0: android.telecom.Call;

        $r1 = r0.<android.telecom.Call: java.util.List mCallbackRecords>;

        return $r1;
    }

    static android.telecom.Phone access$200(android.telecom.Call)
    {
        android.telecom.Call r0;
        android.telecom.Phone $r1;

        r0 := @parameter0: android.telecom.Call;

        $r1 = r0.<android.telecom.Call: android.telecom.Phone mPhone>;

        return $r1;
    }

    static java.util.List access$300(android.telecom.Call)
    {
        android.telecom.Call r0;
        java.util.List $r1;

        r0 := @parameter0: android.telecom.Call;

        $r1 = r0.<android.telecom.Call: java.util.List mUnmodifiableConferenceableCalls>;

        return $r1;
    }

    private static boolean areBundlesEqual(android.os.Bundle, android.os.Bundle)
    {
        android.os.Bundle r0, r1;
        java.util.Iterator r2;
        java.lang.String r3;
        int $i0, $i1;
        java.util.Set $r4;
        boolean $z0, $z1, z2;
        java.lang.Object $r5, $r6, $r7;

        r0 := @parameter0: android.os.Bundle;

        r1 := @parameter1: android.os.Bundle;

        z2 = 1;

        if r0 == null goto label6;

        if r1 != null goto label1;

        goto label6;

     label1:
        $i0 = virtualinvoke r0.<android.os.Bundle: int size()>();

        $i1 = virtualinvoke r1.<android.os.Bundle: int size()>();

        if $i0 == $i1 goto label2;

        return 0;

     label2:
        $r4 = virtualinvoke r0.<android.os.Bundle: java.util.Set keySet()>();

        r2 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.lang.String) $r5;

        if r3 == null goto label4;

        $r6 = virtualinvoke r0.<android.os.Bundle: java.lang.Object get(java.lang.String)>(r3);

        $r7 = virtualinvoke r1.<android.os.Bundle: java.lang.Object get(java.lang.String)>(r3);

        $z1 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r6, $r7);

        if $z1 != 0 goto label4;

        return 0;

     label4:
        goto label3;

     label5:
        return 1;

     label6:
        if r0 != r1 goto label7;

        goto label8;

     label7:
        z2 = 0;

     label8:
        return z2;
    }

    private void fireCallDestroyed()
    {
        android.telecom.Call r0;
        java.util.Iterator r1;
        android.telecom.CallbackRecord r2;
        android.telecom.Call$Callback r3;
        java.util.List $r4, $r5;
        boolean $z0, $z2;
        java.lang.Object $r6, $r7;
        android.os.Handler $r8;
        android.telecom.Call$8 $r9;
        android.telecom.Phone $r10;

        r0 := @this: android.telecom.Call;

        $r4 = r0.<android.telecom.Call: java.util.List mCallbackRecords>;

        $z0 = interfaceinvoke $r4.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r10 = r0.<android.telecom.Call: android.telecom.Phone mPhone>;

        virtualinvoke $r10.<android.telecom.Phone: void internalRemoveCall(android.telecom.Call)>(r0);

     label1:
        $r5 = r0.<android.telecom.Call: java.util.List mCallbackRecords>;

        r1 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z2 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label3;

        $r6 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (android.telecom.CallbackRecord) $r6;

        $r7 = virtualinvoke r2.<android.telecom.CallbackRecord: java.lang.Object getCallback()>();

        r3 = (android.telecom.Call$Callback) $r7;

        $r8 = virtualinvoke r2.<android.telecom.CallbackRecord: android.os.Handler getHandler()>();

        $r9 = new android.telecom.Call$8;

        specialinvoke $r9.<android.telecom.Call$8: void <init>(android.telecom.Call,android.telecom.Call$Callback,android.telecom.Call,android.telecom.CallbackRecord)>(r0, r3, r0, r2);

        virtualinvoke $r8.<android.os.Handler: boolean post(java.lang.Runnable)>($r9);

        goto label2;

     label3:
        return;
    }

    private void fireCannedTextResponsesLoaded(java.util.List)
    {
        android.telecom.Call r0;
        java.util.List r1, $r5;
        java.util.Iterator r2;
        android.telecom.CallbackRecord r3;
        android.telecom.Call$Callback r4;
        boolean $z0;
        java.lang.Object $r6, $r7;
        android.os.Handler $r8;
        android.telecom.Call$5 $r9;

        r0 := @this: android.telecom.Call;

        r1 := @parameter0: java.util.List;

        $r5 = r0.<android.telecom.Call: java.util.List mCallbackRecords>;

        r2 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.telecom.CallbackRecord) $r6;

        $r7 = virtualinvoke r3.<android.telecom.CallbackRecord: java.lang.Object getCallback()>();

        r4 = (android.telecom.Call$Callback) $r7;

        $r8 = virtualinvoke r3.<android.telecom.CallbackRecord: android.os.Handler getHandler()>();

        $r9 = new android.telecom.Call$5;

        specialinvoke $r9.<android.telecom.Call$5: void <init>(android.telecom.Call,android.telecom.Call$Callback,android.telecom.Call,java.util.List)>(r0, r4, r0, r1);

        virtualinvoke $r8.<android.os.Handler: boolean post(java.lang.Runnable)>($r9);

        goto label1;

     label2:
        return;
    }

    private void fireChildrenChanged(java.util.List)
    {
        android.telecom.Call r0;
        java.util.List r1, $r5;
        java.util.Iterator r2;
        android.telecom.CallbackRecord r3;
        android.telecom.Call$Callback r4;
        boolean $z0;
        java.lang.Object $r6, $r7;
        android.os.Handler $r8;
        android.telecom.Call$3 $r9;

        r0 := @this: android.telecom.Call;

        r1 := @parameter0: java.util.List;

        $r5 = r0.<android.telecom.Call: java.util.List mCallbackRecords>;

        r2 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.telecom.CallbackRecord) $r6;

        $r7 = virtualinvoke r3.<android.telecom.CallbackRecord: java.lang.Object getCallback()>();

        r4 = (android.telecom.Call$Callback) $r7;

        $r8 = virtualinvoke r3.<android.telecom.CallbackRecord: android.os.Handler getHandler()>();

        $r9 = new android.telecom.Call$3;

        specialinvoke $r9.<android.telecom.Call$3: void <init>(android.telecom.Call,android.telecom.Call$Callback,android.telecom.Call,java.util.List)>(r0, r4, r0, r1);

        virtualinvoke $r8.<android.os.Handler: boolean post(java.lang.Runnable)>($r9);

        goto label1;

     label2:
        return;
    }

    private void fireConferenceableCallsChanged()
    {
        android.telecom.Call r0;
        java.util.Iterator r1;
        android.telecom.CallbackRecord r2;
        android.telecom.Call$Callback r3;
        java.util.List $r4;
        boolean $z0;
        java.lang.Object $r5, $r6;
        android.os.Handler $r7;
        android.telecom.Call$9 $r8;

        r0 := @this: android.telecom.Call;

        $r4 = r0.<android.telecom.Call: java.util.List mCallbackRecords>;

        r1 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (android.telecom.CallbackRecord) $r5;

        $r6 = virtualinvoke r2.<android.telecom.CallbackRecord: java.lang.Object getCallback()>();

        r3 = (android.telecom.Call$Callback) $r6;

        $r7 = virtualinvoke r2.<android.telecom.CallbackRecord: android.os.Handler getHandler()>();

        $r8 = new android.telecom.Call$9;

        specialinvoke $r8.<android.telecom.Call$9: void <init>(android.telecom.Call,android.telecom.Call$Callback,android.telecom.Call)>(r0, r3, r0);

        virtualinvoke $r7.<android.os.Handler: boolean post(java.lang.Runnable)>($r8);

        goto label1;

     label2:
        return;
    }

    private void fireDetailsChanged(android.telecom.Call$Details)
    {
        android.telecom.Call r0;
        android.telecom.Call$Details r1;
        java.util.Iterator r2;
        android.telecom.CallbackRecord r3;
        android.telecom.Call$Callback r4;
        java.util.List $r5;
        boolean $z0;
        java.lang.Object $r6, $r7;
        android.os.Handler $r8;
        android.telecom.Call$4 $r9;

        r0 := @this: android.telecom.Call;

        r1 := @parameter0: android.telecom.Call$Details;

        $r5 = r0.<android.telecom.Call: java.util.List mCallbackRecords>;

        r2 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.telecom.CallbackRecord) $r6;

        $r7 = virtualinvoke r3.<android.telecom.CallbackRecord: java.lang.Object getCallback()>();

        r4 = (android.telecom.Call$Callback) $r7;

        $r8 = virtualinvoke r3.<android.telecom.CallbackRecord: android.os.Handler getHandler()>();

        $r9 = new android.telecom.Call$4;

        specialinvoke $r9.<android.telecom.Call$4: void <init>(android.telecom.Call,android.telecom.Call$Callback,android.telecom.Call,android.telecom.Call$Details)>(r0, r4, r0, r1);

        virtualinvoke $r8.<android.os.Handler: boolean post(java.lang.Runnable)>($r9);

        goto label1;

     label2:
        return;
    }

    private void fireOnConnectionEvent(java.lang.String, android.os.Bundle)
    {
        android.telecom.Call r0;
        java.lang.String r1;
        android.os.Bundle r2;
        java.util.Iterator r3;
        android.telecom.CallbackRecord r4;
        android.telecom.Call$Callback r5;
        java.util.List $r6;
        boolean $z0;
        java.lang.Object $r7, $r8;
        android.os.Handler $r9;
        android.telecom.Call$10 $r10;

        r0 := @this: android.telecom.Call;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.Bundle;

        $r6 = r0.<android.telecom.Call: java.util.List mCallbackRecords>;

        r3 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r7 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (android.telecom.CallbackRecord) $r7;

        $r8 = virtualinvoke r4.<android.telecom.CallbackRecord: java.lang.Object getCallback()>();

        r5 = (android.telecom.Call$Callback) $r8;

        $r9 = virtualinvoke r4.<android.telecom.CallbackRecord: android.os.Handler getHandler()>();

        $r10 = new android.telecom.Call$10;

        specialinvoke $r10.<android.telecom.Call$10: void <init>(android.telecom.Call,android.telecom.Call$Callback,android.telecom.Call,java.lang.String,android.os.Bundle)>(r0, r5, r0, r1, r2);

        virtualinvoke $r9.<android.os.Handler: boolean post(java.lang.Runnable)>($r10);

        goto label1;

     label2:
        return;
    }

    private void fireOnIsRttChanged(boolean, android.telecom.Call$RttCall)
    {
        android.telecom.Call r0;
        boolean z0, $z1;
        android.telecom.Call$RttCall r1;
        java.util.Iterator r2;
        android.telecom.CallbackRecord r3;
        android.telecom.Call$Callback r4;
        java.util.List $r5;
        java.lang.Object $r6, $r7;
        android.os.Handler $r8;
        android.telecom._$$Lambda$Call$5JdbCgV1DP_WhiljnHJKKAJdCu0 $r9;

        r0 := @this: android.telecom.Call;

        z0 := @parameter0: boolean;

        r1 := @parameter1: android.telecom.Call$RttCall;

        $r5 = r0.<android.telecom.Call: java.util.List mCallbackRecords>;

        r2 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label2;

        $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.telecom.CallbackRecord) $r6;

        $r7 = virtualinvoke r3.<android.telecom.CallbackRecord: java.lang.Object getCallback()>();

        r4 = (android.telecom.Call$Callback) $r7;

        $r8 = virtualinvoke r3.<android.telecom.CallbackRecord: android.os.Handler getHandler()>();

        $r9 = new android.telecom._$$Lambda$Call$5JdbCgV1DP_WhiljnHJKKAJdCu0;

        specialinvoke $r9.<android.telecom._$$Lambda$Call$5JdbCgV1DP_WhiljnHJKKAJdCu0: void <init>(android.telecom.Call$Callback,android.telecom.Call,boolean,android.telecom.Call$RttCall)>(r4, r0, z0, r1);

        virtualinvoke $r8.<android.os.Handler: boolean post(java.lang.Runnable)>($r9);

        goto label1;

     label2:
        return;
    }

    private void fireOnRttModeChanged(int)
    {
        android.telecom.Call r0;
        int i0;
        java.util.Iterator r1;
        android.telecom.CallbackRecord r2;
        android.telecom.Call$Callback r3;
        java.util.List $r4;
        boolean $z0;
        java.lang.Object $r5, $r6;
        android.os.Handler $r7;
        android.telecom._$$Lambda$Call$qjo4awib5yVZC_4Qe_hhqUSk7ho $r8;

        r0 := @this: android.telecom.Call;

        i0 := @parameter0: int;

        $r4 = r0.<android.telecom.Call: java.util.List mCallbackRecords>;

        r1 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (android.telecom.CallbackRecord) $r5;

        $r6 = virtualinvoke r2.<android.telecom.CallbackRecord: java.lang.Object getCallback()>();

        r3 = (android.telecom.Call$Callback) $r6;

        $r7 = virtualinvoke r2.<android.telecom.CallbackRecord: android.os.Handler getHandler()>();

        $r8 = new android.telecom._$$Lambda$Call$qjo4awib5yVZC_4Qe_hhqUSk7ho;

        specialinvoke $r8.<android.telecom._$$Lambda$Call$qjo4awib5yVZC_4Qe_hhqUSk7ho: void <init>(android.telecom.Call$Callback,android.telecom.Call,int)>(r3, r0, i0);

        virtualinvoke $r7.<android.os.Handler: boolean post(java.lang.Runnable)>($r8);

        goto label1;

     label2:
        return;
    }

    private void fireParentChanged(android.telecom.Call)
    {
        android.telecom.Call r0, r1;
        java.util.Iterator r2;
        android.telecom.CallbackRecord r3;
        android.telecom.Call$Callback r4;
        java.util.List $r5;
        boolean $z0;
        java.lang.Object $r6, $r7;
        android.os.Handler $r8;
        android.telecom.Call$2 $r9;

        r0 := @this: android.telecom.Call;

        r1 := @parameter0: android.telecom.Call;

        $r5 = r0.<android.telecom.Call: java.util.List mCallbackRecords>;

        r2 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.telecom.CallbackRecord) $r6;

        $r7 = virtualinvoke r3.<android.telecom.CallbackRecord: java.lang.Object getCallback()>();

        r4 = (android.telecom.Call$Callback) $r7;

        $r8 = virtualinvoke r3.<android.telecom.CallbackRecord: android.os.Handler getHandler()>();

        $r9 = new android.telecom.Call$2;

        specialinvoke $r9.<android.telecom.Call$2: void <init>(android.telecom.Call,android.telecom.Call$Callback,android.telecom.Call,android.telecom.Call)>(r0, r4, r0, r1);

        virtualinvoke $r8.<android.os.Handler: boolean post(java.lang.Runnable)>($r9);

        goto label1;

     label2:
        return;
    }

    private void firePostDialWait(java.lang.String)
    {
        android.telecom.Call r0;
        java.lang.String r1;
        java.util.Iterator r2;
        android.telecom.CallbackRecord r3;
        android.telecom.Call$Callback r4;
        java.util.List $r5;
        boolean $z0;
        java.lang.Object $r6, $r7;
        android.os.Handler $r8;
        android.telecom.Call$7 $r9;

        r0 := @this: android.telecom.Call;

        r1 := @parameter0: java.lang.String;

        $r5 = r0.<android.telecom.Call: java.util.List mCallbackRecords>;

        r2 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.telecom.CallbackRecord) $r6;

        $r7 = virtualinvoke r3.<android.telecom.CallbackRecord: java.lang.Object getCallback()>();

        r4 = (android.telecom.Call$Callback) $r7;

        $r8 = virtualinvoke r3.<android.telecom.CallbackRecord: android.os.Handler getHandler()>();

        $r9 = new android.telecom.Call$7;

        specialinvoke $r9.<android.telecom.Call$7: void <init>(android.telecom.Call,android.telecom.Call$Callback,android.telecom.Call,java.lang.String)>(r0, r4, r0, r1);

        virtualinvoke $r8.<android.os.Handler: boolean post(java.lang.Runnable)>($r9);

        goto label1;

     label2:
        return;
    }

    private void fireStateChanged(int)
    {
        android.telecom.Call r0;
        int i0;
        java.util.Iterator r1;
        android.telecom.CallbackRecord r2;
        android.telecom.Call$Callback r3;
        java.util.List $r4;
        boolean $z0;
        java.lang.Object $r5, $r6;
        android.os.Handler $r7;
        android.telecom.Call$1 $r8;

        r0 := @this: android.telecom.Call;

        i0 := @parameter0: int;

        $r4 = r0.<android.telecom.Call: java.util.List mCallbackRecords>;

        r1 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (android.telecom.CallbackRecord) $r5;

        $r6 = virtualinvoke r2.<android.telecom.CallbackRecord: java.lang.Object getCallback()>();

        r3 = (android.telecom.Call$Callback) $r6;

        $r7 = virtualinvoke r2.<android.telecom.CallbackRecord: android.os.Handler getHandler()>();

        $r8 = new android.telecom.Call$1;

        specialinvoke $r8.<android.telecom.Call$1: void <init>(android.telecom.Call,android.telecom.Call$Callback,android.telecom.Call,int)>(r0, r3, r0, i0);

        virtualinvoke $r7.<android.os.Handler: boolean post(java.lang.Runnable)>($r8);

        goto label1;

     label2:
        return;
    }

    private void fireVideoCallChanged(android.telecom.InCallService$VideoCall)
    {
        android.telecom.Call r0;
        android.telecom.InCallService$VideoCall r1;
        java.util.Iterator r2;
        android.telecom.CallbackRecord r3;
        android.telecom.Call$Callback r4;
        java.util.List $r5;
        boolean $z0;
        java.lang.Object $r6, $r7;
        android.os.Handler $r8;
        android.telecom.Call$6 $r9;

        r0 := @this: android.telecom.Call;

        r1 := @parameter0: android.telecom.InCallService$VideoCall;

        $r5 = r0.<android.telecom.Call: java.util.List mCallbackRecords>;

        r2 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.telecom.CallbackRecord) $r6;

        $r7 = virtualinvoke r3.<android.telecom.CallbackRecord: java.lang.Object getCallback()>();

        r4 = (android.telecom.Call$Callback) $r7;

        $r8 = virtualinvoke r3.<android.telecom.CallbackRecord: android.os.Handler getHandler()>();

        $r9 = new android.telecom.Call$6;

        specialinvoke $r9.<android.telecom.Call$6: void <init>(android.telecom.Call,android.telecom.Call$Callback,android.telecom.Call,android.telecom.InCallService$VideoCall)>(r0, r4, r0, r1);

        virtualinvoke $r8.<android.os.Handler: boolean post(java.lang.Runnable)>($r9);

        goto label1;

     label2:
        return;
    }

    static void lambda$fireOnIsRttChanged$4(android.telecom.Call$Callback, android.telecom.Call, boolean, android.telecom.Call$RttCall)
    {
        android.telecom.Call$Callback r0;
        android.telecom.Call r1;
        boolean z0;
        android.telecom.Call$RttCall r2;

        r0 := @parameter0: android.telecom.Call$Callback;

        r1 := @parameter1: android.telecom.Call;

        z0 := @parameter2: boolean;

        r2 := @parameter3: android.telecom.Call$RttCall;

        virtualinvoke r0.<android.telecom.Call$Callback: void onRttStatusChanged(android.telecom.Call,boolean,android.telecom.Call$RttCall)>(r1, z0, r2);

        return;
    }

    static void lambda$fireOnRttModeChanged$5(android.telecom.Call$Callback, android.telecom.Call, int)
    {
        android.telecom.Call$Callback r0;
        android.telecom.Call r1;
        int i0;

        r0 := @parameter0: android.telecom.Call$Callback;

        r1 := @parameter1: android.telecom.Call;

        i0 := @parameter2: int;

        virtualinvoke r0.<android.telecom.Call$Callback: void onRttModeChanged(android.telecom.Call,int)>(r1, i0);

        return;
    }

    static void lambda$internalOnHandoverComplete$3(android.telecom.Call$Callback, android.telecom.Call)
    {
        android.telecom.Call$Callback r0;
        android.telecom.Call r1;

        r0 := @parameter0: android.telecom.Call$Callback;

        r1 := @parameter1: android.telecom.Call;

        virtualinvoke r0.<android.telecom.Call$Callback: void onHandoverComplete(android.telecom.Call)>(r1);

        return;
    }

    static void lambda$internalOnHandoverFailed$2(android.telecom.Call$Callback, android.telecom.Call, int)
    {
        android.telecom.Call$Callback r0;
        android.telecom.Call r1;
        int i0;

        r0 := @parameter0: android.telecom.Call$Callback;

        r1 := @parameter1: android.telecom.Call;

        i0 := @parameter2: int;

        virtualinvoke r0.<android.telecom.Call$Callback: void onHandoverFailed(android.telecom.Call,int)>(r1, i0);

        return;
    }

    static void lambda$internalOnRttInitiationFailure$1(android.telecom.Call$Callback, android.telecom.Call, int)
    {
        android.telecom.Call$Callback r0;
        android.telecom.Call r1;
        int i0;

        r0 := @parameter0: android.telecom.Call$Callback;

        r1 := @parameter1: android.telecom.Call;

        i0 := @parameter2: int;

        virtualinvoke r0.<android.telecom.Call$Callback: void onRttInitiationFailure(android.telecom.Call,int)>(r1, i0);

        return;
    }

    static void lambda$internalOnRttUpgradeRequest$0(android.telecom.Call$Callback, android.telecom.Call, int)
    {
        android.telecom.Call$Callback r0;
        android.telecom.Call r1;
        int i0;

        r0 := @parameter0: android.telecom.Call$Callback;

        r1 := @parameter1: android.telecom.Call;

        i0 := @parameter2: int;

        virtualinvoke r0.<android.telecom.Call$Callback: void onRttRequest(android.telecom.Call,int)>(r1, i0);

        return;
    }

    private static java.lang.String stateToString(int)
    {
        int i0;
        java.lang.Object[] $r0;
        java.lang.Integer $r1;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 0: goto label12;
            case 1: goto label11;
            case 2: goto label10;
            case 3: goto label09;
            case 4: goto label08;
            case 5: goto label01;
            case 6: goto label01;
            case 7: goto label07;
            case 8: goto label06;
            case 9: goto label05;
            case 10: goto label04;
            case 11: goto label01;
            case 12: goto label03;
            case 13: goto label02;
            default: goto label01;
        };

     label01:
        $r0 = newarray (java.lang.Object)[1];

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r0[0] = $r1;

        staticinvoke <android.telecom.Log: void w(java.lang.Object,java.lang.String,java.lang.Object[])>(class "Landroid/telecom/Call;", "Unknown state %d", $r0);

        return "UNKNOWN";

     label02:
        return "SIMULATED_RINGING";

     label03:
        return "AUDIO_PROCESSING";

     label04:
        return "DISCONNECTING";

     label05:
        return "CONNECTING";

     label06:
        return "SELECT_PHONE_ACCOUNT";

     label07:
        return "DISCONNECTED";

     label08:
        return "ACTIVE";

     label09:
        return "HOLDING";

     label10:
        return "RINGING";

     label11:
        return "DIALING";

     label12:
        return "NEW";
    }

    public void addConferenceParticipants(java.util.List)
    {
        android.telecom.Call r0;
        java.util.List r1;
        java.lang.String $r2;
        android.telecom.InCallAdapter $r3;

        r0 := @this: android.telecom.Call;

        r1 := @parameter0: java.util.List;

        $r3 = r0.<android.telecom.Call: android.telecom.InCallAdapter mInCallAdapter>;

        $r2 = r0.<android.telecom.Call: java.lang.String mTelecomCallId>;

        virtualinvoke $r3.<android.telecom.InCallAdapter: void addConferenceParticipants(java.lang.String,java.util.List)>($r2, r1);

        return;
    }

    public void addListener(android.telecom.Call$Listener)
    {
        android.telecom.Call r0;
        android.telecom.Call$Listener r1;

        r0 := @this: android.telecom.Call;

        r1 := @parameter0: android.telecom.Call$Listener;

        virtualinvoke r0.<android.telecom.Call: void registerCallback(android.telecom.Call$Callback)>(r1);

        return;
    }

    public void answer(int)
    {
        android.telecom.Call r0;
        int i0;
        java.lang.String $r1;
        android.telecom.InCallAdapter $r2;

        r0 := @this: android.telecom.Call;

        i0 := @parameter0: int;

        $r2 = r0.<android.telecom.Call: android.telecom.InCallAdapter mInCallAdapter>;

        $r1 = r0.<android.telecom.Call: java.lang.String mTelecomCallId>;

        virtualinvoke $r2.<android.telecom.InCallAdapter: void answerCall(java.lang.String,int)>($r1, i0);

        return;
    }

    public void conference(android.telecom.Call)
    {
        android.telecom.Call r0, r1;
        java.lang.String $r2, $r3;
        android.telecom.InCallAdapter $r4;

        r0 := @this: android.telecom.Call;

        r1 := @parameter0: android.telecom.Call;

        if r1 == null goto label1;

        $r4 = r0.<android.telecom.Call: android.telecom.InCallAdapter mInCallAdapter>;

        $r3 = r0.<android.telecom.Call: java.lang.String mTelecomCallId>;

        $r2 = r1.<android.telecom.Call: java.lang.String mTelecomCallId>;

        virtualinvoke $r4.<android.telecom.InCallAdapter: void conference(java.lang.String,java.lang.String)>($r3, $r2);

     label1:
        return;
    }

    public void deflect(android.net.Uri)
    {
        android.telecom.Call r0;
        android.net.Uri r1;
        java.lang.String $r2;
        android.telecom.InCallAdapter $r3;

        r0 := @this: android.telecom.Call;

        r1 := @parameter0: android.net.Uri;

        $r3 = r0.<android.telecom.Call: android.telecom.InCallAdapter mInCallAdapter>;

        $r2 = r0.<android.telecom.Call: java.lang.String mTelecomCallId>;

        virtualinvoke $r3.<android.telecom.InCallAdapter: void deflectCall(java.lang.String,android.net.Uri)>($r2, r1);

        return;
    }

    public void disconnect()
    {
        android.telecom.Call r0;
        java.lang.String $r1;
        android.telecom.InCallAdapter $r2;

        r0 := @this: android.telecom.Call;

        $r2 = r0.<android.telecom.Call: android.telecom.InCallAdapter mInCallAdapter>;

        $r1 = r0.<android.telecom.Call: java.lang.String mTelecomCallId>;

        virtualinvoke $r2.<android.telecom.InCallAdapter: void disconnectCall(java.lang.String)>($r1);

        return;
    }

    public void enterBackgroundAudioProcessing()
    {
        android.telecom.Call r0;
        int i0;
        java.lang.String $r1;
        android.telecom.InCallAdapter $r2;
        java.lang.IllegalStateException $r3;

        r0 := @this: android.telecom.Call;

        i0 = r0.<android.telecom.Call: int mState>;

        if i0 == 4 goto label2;

        if i0 != 2 goto label1;

        goto label2;

     label1:
        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Call must be active or ringing");

        throw $r3;

     label2:
        $r2 = r0.<android.telecom.Call: android.telecom.InCallAdapter mInCallAdapter>;

        $r1 = r0.<android.telecom.Call: java.lang.String mTelecomCallId>;

        virtualinvoke $r2.<android.telecom.InCallAdapter: void enterBackgroundAudioProcessing(java.lang.String)>($r1);

        return;
    }

    public void exitBackgroundAudioProcessing(boolean)
    {
        android.telecom.Call r0;
        boolean z0;
        int $i0;
        java.lang.IllegalStateException $r1;
        java.lang.String $r2;
        android.telecom.InCallAdapter $r3;

        r0 := @this: android.telecom.Call;

        z0 := @parameter0: boolean;

        $i0 = r0.<android.telecom.Call: int mState>;

        if $i0 != 12 goto label1;

        $r3 = r0.<android.telecom.Call: android.telecom.InCallAdapter mInCallAdapter>;

        $r2 = r0.<android.telecom.Call: java.lang.String mTelecomCallId>;

        virtualinvoke $r3.<android.telecom.InCallAdapter: void exitBackgroundAudioProcessing(java.lang.String,boolean)>($r2, z0);

        return;

     label1:
        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Call must in the audio processing state");

        throw $r1;
    }

    public java.util.List getCannedTextResponses()
    {
        android.telecom.Call r0;
        java.util.List $r1;

        r0 := @this: android.telecom.Call;

        $r1 = r0.<android.telecom.Call: java.util.List mCannedTextResponses>;

        return $r1;
    }

    public java.util.List getChildren()
    {
        android.telecom.Call r0, r9;
        java.util.Iterator r1;
        boolean $z0, $z1;
        java.util.List $r2, $r3, $r4, $r7;
        java.lang.Object $r5;
        android.telecom.Phone $r6;
        java.lang.String r8;

        r0 := @this: android.telecom.Call;

        $z0 = r0.<android.telecom.Call: boolean mChildrenCached>;

        if $z0 != 0 goto label4;

        r0.<android.telecom.Call: boolean mChildrenCached> = 1;

        $r3 = r0.<android.telecom.Call: java.util.List mChildren>;

        interfaceinvoke $r3.<java.util.List: void clear()>();

        $r4 = r0.<android.telecom.Call: java.util.List mChildrenIds>;

        r1 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r5 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r8 = (java.lang.String) $r5;

        $r6 = r0.<android.telecom.Call: android.telecom.Phone mPhone>;

        r9 = virtualinvoke $r6.<android.telecom.Phone: android.telecom.Call internalGetCallByTelecomId(java.lang.String)>(r8);

        if r9 != null goto label2;

        r0.<android.telecom.Call: boolean mChildrenCached> = 0;

        goto label3;

     label2:
        $r7 = r0.<android.telecom.Call: java.util.List mChildren>;

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>(r9);

     label3:
        goto label1;

     label4:
        $r2 = r0.<android.telecom.Call: java.util.List mUnmodifiableChildren>;

        return $r2;
    }

    public java.util.List getConferenceableCalls()
    {
        android.telecom.Call r0;
        java.util.List $r1;

        r0 := @this: android.telecom.Call;

        $r1 = r0.<android.telecom.Call: java.util.List mUnmodifiableConferenceableCalls>;

        return $r1;
    }

    public android.telecom.Call$Details getDetails()
    {
        android.telecom.Call r0;
        android.telecom.Call$Details $r1;

        r0 := @this: android.telecom.Call;

        $r1 = r0.<android.telecom.Call: android.telecom.Call$Details mDetails>;

        return $r1;
    }

    public android.telecom.Call getGenericConferenceActiveChildCall()
    {
        android.telecom.Call r0, $r3;
        java.lang.String r1;
        android.telecom.Phone $r2;

        r0 := @this: android.telecom.Call;

        r1 = r0.<android.telecom.Call: java.lang.String mActiveGenericConferenceChild>;

        if r1 == null goto label1;

        $r2 = r0.<android.telecom.Call: android.telecom.Phone mPhone>;

        $r3 = virtualinvoke $r2.<android.telecom.Phone: android.telecom.Call internalGetCallByTelecomId(java.lang.String)>(r1);

        return $r3;

     label1:
        return null;
    }

    public android.telecom.Call getParent()
    {
        android.telecom.Call r0, $r3;
        java.lang.String r1;
        android.telecom.Phone $r2;

        r0 := @this: android.telecom.Call;

        r1 = r0.<android.telecom.Call: java.lang.String mParentId>;

        if r1 == null goto label1;

        $r2 = r0.<android.telecom.Call: android.telecom.Phone mPhone>;

        $r3 = virtualinvoke $r2.<android.telecom.Phone: android.telecom.Call internalGetCallByTelecomId(java.lang.String)>(r1);

        return $r3;

     label1:
        return null;
    }

    public java.lang.String getRemainingPostDialSequence()
    {
        android.telecom.Call r0;
        java.lang.String $r1;

        r0 := @this: android.telecom.Call;

        $r1 = r0.<android.telecom.Call: java.lang.String mRemainingPostDialSequence>;

        return $r1;
    }

    public android.telecom.Call$RttCall getRttCall()
    {
        android.telecom.Call r0;
        android.telecom.Call$RttCall $r1;

        r0 := @this: android.telecom.Call;

        $r1 = r0.<android.telecom.Call: android.telecom.Call$RttCall mRttCall>;

        return $r1;
    }

    public int getState()
    {
        android.telecom.Call r0;
        int $i0;

        r0 := @this: android.telecom.Call;

        $i0 = r0.<android.telecom.Call: int mState>;

        return $i0;
    }

    public android.telecom.InCallService$VideoCall getVideoCall()
    {
        android.telecom.Call r0;
        android.telecom.VideoCallImpl $r1;

        r0 := @this: android.telecom.Call;

        $r1 = r0.<android.telecom.Call: android.telecom.VideoCallImpl mVideoCallImpl>;

        return $r1;
    }

    public void handoverTo(android.telecom.PhoneAccountHandle, int, android.os.Bundle)
    {
        android.telecom.Call r0;
        android.telecom.PhoneAccountHandle r1;
        int i0;
        android.os.Bundle r2;
        java.lang.String $r3;
        android.telecom.InCallAdapter $r4;

        r0 := @this: android.telecom.Call;

        r1 := @parameter0: android.telecom.PhoneAccountHandle;

        i0 := @parameter1: int;

        r2 := @parameter2: android.os.Bundle;

        $r4 = r0.<android.telecom.Call: android.telecom.InCallAdapter mInCallAdapter>;

        $r3 = r0.<android.telecom.Call: java.lang.String mTelecomCallId>;

        virtualinvoke $r4.<android.telecom.InCallAdapter: void handoverTo(java.lang.String,android.telecom.PhoneAccountHandle,int,android.os.Bundle)>($r3, r1, i0, r2);

        return;
    }

    public void hold()
    {
        android.telecom.Call r0;
        java.lang.String $r1;
        android.telecom.InCallAdapter $r2;

        r0 := @this: android.telecom.Call;

        $r2 = r0.<android.telecom.Call: android.telecom.InCallAdapter mInCallAdapter>;

        $r1 = r0.<android.telecom.Call: java.lang.String mTelecomCallId>;

        virtualinvoke $r2.<android.telecom.InCallAdapter: void holdCall(java.lang.String)>($r1);

        return;
    }

    final java.lang.String internalGetCallId()
    {
        android.telecom.Call r0;
        java.lang.String $r1;

        r0 := @this: android.telecom.Call;

        $r1 = r0.<android.telecom.Call: java.lang.String mTelecomCallId>;

        return $r1;
    }

    final void internalOnConnectionEvent(java.lang.String, android.os.Bundle)
    {
        android.telecom.Call r0;
        java.lang.String r1;
        android.os.Bundle r2;

        r0 := @this: android.telecom.Call;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.Bundle;

        specialinvoke r0.<android.telecom.Call: void fireOnConnectionEvent(java.lang.String,android.os.Bundle)>(r1, r2);

        return;
    }

    final void internalOnHandoverComplete()
    {
        android.telecom.Call r0;
        java.util.Iterator r1;
        android.telecom.CallbackRecord r2;
        android.telecom.Call$Callback r3;
        java.util.List $r4;
        boolean $z0;
        java.lang.Object $r5, $r6;
        android.os.Handler $r7;
        android.telecom._$$Lambda$Call$bt1B6cq3ylYqEtzOXnJWMeJ_ojc $r8;

        r0 := @this: android.telecom.Call;

        $r4 = r0.<android.telecom.Call: java.util.List mCallbackRecords>;

        r1 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (android.telecom.CallbackRecord) $r5;

        $r6 = virtualinvoke r2.<android.telecom.CallbackRecord: java.lang.Object getCallback()>();

        r3 = (android.telecom.Call$Callback) $r6;

        $r7 = virtualinvoke r2.<android.telecom.CallbackRecord: android.os.Handler getHandler()>();

        $r8 = new android.telecom._$$Lambda$Call$bt1B6cq3ylYqEtzOXnJWMeJ_ojc;

        specialinvoke $r8.<android.telecom._$$Lambda$Call$bt1B6cq3ylYqEtzOXnJWMeJ_ojc: void <init>(android.telecom.Call$Callback,android.telecom.Call)>(r3, r0);

        virtualinvoke $r7.<android.os.Handler: boolean post(java.lang.Runnable)>($r8);

        goto label1;

     label2:
        return;
    }

    final void internalOnHandoverFailed(int)
    {
        android.telecom.Call r0;
        int i0;
        java.util.Iterator r1;
        android.telecom.CallbackRecord r2;
        android.telecom.Call$Callback r3;
        java.util.List $r4;
        boolean $z0;
        java.lang.Object $r5, $r6;
        android.os.Handler $r7;
        android.telecom._$$Lambda$Call$aPdcAxyKfpxcuraTjET8ce3xApc $r8;

        r0 := @this: android.telecom.Call;

        i0 := @parameter0: int;

        $r4 = r0.<android.telecom.Call: java.util.List mCallbackRecords>;

        r1 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (android.telecom.CallbackRecord) $r5;

        $r6 = virtualinvoke r2.<android.telecom.CallbackRecord: java.lang.Object getCallback()>();

        r3 = (android.telecom.Call$Callback) $r6;

        $r7 = virtualinvoke r2.<android.telecom.CallbackRecord: android.os.Handler getHandler()>();

        $r8 = new android.telecom._$$Lambda$Call$aPdcAxyKfpxcuraTjET8ce3xApc;

        specialinvoke $r8.<android.telecom._$$Lambda$Call$aPdcAxyKfpxcuraTjET8ce3xApc: void <init>(android.telecom.Call$Callback,android.telecom.Call,int)>(r3, r0, i0);

        virtualinvoke $r7.<android.os.Handler: boolean post(java.lang.Runnable)>($r8);

        goto label1;

     label2:
        return;
    }

    final void internalOnRttInitiationFailure(int)
    {
        android.telecom.Call r0;
        int i0;
        java.util.Iterator r1;
        android.telecom.CallbackRecord r2;
        android.telecom.Call$Callback r3;
        java.util.List $r4;
        boolean $z0;
        java.lang.Object $r5, $r6;
        android.os.Handler $r7;
        android.telecom._$$Lambda$Call$JyYlHynNNc3DTrfrP5aXatJNft4 $r8;

        r0 := @this: android.telecom.Call;

        i0 := @parameter0: int;

        $r4 = r0.<android.telecom.Call: java.util.List mCallbackRecords>;

        r1 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (android.telecom.CallbackRecord) $r5;

        $r6 = virtualinvoke r2.<android.telecom.CallbackRecord: java.lang.Object getCallback()>();

        r3 = (android.telecom.Call$Callback) $r6;

        $r7 = virtualinvoke r2.<android.telecom.CallbackRecord: android.os.Handler getHandler()>();

        $r8 = new android.telecom._$$Lambda$Call$JyYlHynNNc3DTrfrP5aXatJNft4;

        specialinvoke $r8.<android.telecom._$$Lambda$Call$JyYlHynNNc3DTrfrP5aXatJNft4: void <init>(android.telecom.Call$Callback,android.telecom.Call,int)>(r3, r0, i0);

        virtualinvoke $r7.<android.os.Handler: boolean post(java.lang.Runnable)>($r8);

        goto label1;

     label2:
        return;
    }

    final void internalOnRttUpgradeRequest(int)
    {
        android.telecom.Call r0;
        int i0;
        java.util.Iterator r1;
        android.telecom.CallbackRecord r2;
        android.telecom.Call$Callback r3;
        java.util.List $r4;
        boolean $z0;
        java.lang.Object $r5, $r6;
        android.os.Handler $r7;
        android.telecom._$$Lambda$Call$hgXdGxKbb9IRpCeFrYieOwUuElE $r8;

        r0 := @this: android.telecom.Call;

        i0 := @parameter0: int;

        $r4 = r0.<android.telecom.Call: java.util.List mCallbackRecords>;

        r1 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (android.telecom.CallbackRecord) $r5;

        $r6 = virtualinvoke r2.<android.telecom.CallbackRecord: java.lang.Object getCallback()>();

        r3 = (android.telecom.Call$Callback) $r6;

        $r7 = virtualinvoke r2.<android.telecom.CallbackRecord: android.os.Handler getHandler()>();

        $r8 = new android.telecom._$$Lambda$Call$hgXdGxKbb9IRpCeFrYieOwUuElE;

        specialinvoke $r8.<android.telecom._$$Lambda$Call$hgXdGxKbb9IRpCeFrYieOwUuElE: void <init>(android.telecom.Call$Callback,android.telecom.Call,int)>(r3, r0, i0);

        virtualinvoke $r7.<android.os.Handler: boolean post(java.lang.Runnable)>($r8);

        goto label1;

     label2:
        return;
    }

    final void internalSetDisconnected()
    {
        android.telecom.Call r0;
        int $i0;

        r0 := @this: android.telecom.Call;

        $i0 = r0.<android.telecom.Call: int mState>;

        if $i0 == 7 goto label1;

        r0.<android.telecom.Call: int mState> = 7;

        specialinvoke r0.<android.telecom.Call: void fireStateChanged(int)>(7);

        specialinvoke r0.<android.telecom.Call: void fireCallDestroyed()>();

     label1:
        return;
    }

    final void internalSetPostDialWait(java.lang.String)
    {
        android.telecom.Call r0;
        java.lang.String r1;

        r0 := @this: android.telecom.Call;

        r1 := @parameter0: java.lang.String;

        r0.<android.telecom.Call: java.lang.String mRemainingPostDialSequence> = r1;

        specialinvoke r0.<android.telecom.Call: void firePostDialWait(java.lang.String)>(r1);

        return;
    }

    final void internalUpdate(android.telecom.ParcelableCall, java.util.Map)
    {
        android.telecom.Call r0, $r16, $r37;
        boolean z0, z1, z2, z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z14, $z17, $z18, $z19, z21, z22, z23, $z24, z25, z26, z27;
        java.lang.String r2, $r5, $r8, $r31, $r42, r56, r57;
        android.telecom.Call$Details $r3, $r19, $r21, $r41, r49;
        java.util.List $r4, $r6, $r7, $r10, $r12, $r18, $r33, $r34, $r38, $r39, $r40, $r43, $r44, $r45, $r46, r58;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10, i11, $i12;
        java.util.ArrayList $r9;
        android.telecom.Call$RttCall $r11, $r13, $r14, $r15, $r30, r65;
        android.telecom.VideoCallImpl $r17, r50, r53, r54, r55;
        android.telecom.ParcelableRttCall $r20, r61;
        java.io.InputStreamReader $r22;
        android.os.ParcelFileDescriptor$AutoCloseInputStream $r23;
        android.os.ParcelFileDescriptor $r24, $r28;
        java.nio.charset.Charset $r25, $r29;
        java.io.OutputStreamWriter $r26;
        android.os.ParcelFileDescriptor$AutoCloseOutputStream $r27;
        android.telecom.InCallAdapter $r32;
        java.lang.Object $r35, $r36;
        android.telecom.ParcelableCall r47;
        java.util.Map r48;
        com.android.internal.telecom.IVideoProvider r51, r52;
        java.util.Iterator r59;

        r0 := @this: android.telecom.Call;

        r47 := @parameter0: android.telecom.ParcelableCall;

        r48 := @parameter1: java.util.Map;

        r49 = staticinvoke <android.telecom.Call$Details: android.telecom.Call$Details createFromParcelableCall(android.telecom.ParcelableCall)>(r47);

        $r3 = r0.<android.telecom.Call: android.telecom.Call$Details mDetails>;

        $z4 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r3, r49);

        z0 = $z4 ^ 1;

        if z0 == 0 goto label01;

        r0.<android.telecom.Call: android.telecom.Call$Details mDetails> = r49;

     label01:
        z21 = 0;

        $r4 = r0.<android.telecom.Call: java.util.List mCannedTextResponses>;

        if $r4 != null goto label02;

        z21 = 0;

        $r43 = virtualinvoke r47.<android.telecom.ParcelableCall: java.util.List getCannedSmsResponses()>();

        if $r43 == null goto label02;

        z21 = 0;

        $r44 = virtualinvoke r47.<android.telecom.ParcelableCall: java.util.List getCannedSmsResponses()>();

        $z19 = interfaceinvoke $r44.<java.util.List: boolean isEmpty()>();

        if $z19 != 0 goto label02;

        $r45 = virtualinvoke r47.<android.telecom.ParcelableCall: java.util.List getCannedSmsResponses()>();

        $r46 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r45);

        r0.<android.telecom.Call: java.util.List mCannedTextResponses> = $r46;

        z21 = 1;

     label02:
        r50 = r0.<android.telecom.Call: android.telecom.VideoCallImpl mVideoCallImpl>;

        if r50 != null goto label03;

        r51 = null;

        goto label04;

     label03:
        r51 = virtualinvoke r50.<android.telecom.VideoCallImpl: com.android.internal.telecom.IVideoProvider getVideoProvider()>();

     label04:
        r52 = virtualinvoke r47.<android.telecom.ParcelableCall: com.android.internal.telecom.IVideoProvider getVideoProvider()>();

        $z5 = virtualinvoke r47.<android.telecom.ParcelableCall: boolean isVideoCallProviderChanged()>();

        if $z5 == 0 goto label05;

        $z18 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>(r51, r52);

        if $z18 != 0 goto label05;

        z22 = 1;

        goto label06;

     label05:
        z22 = 0;

     label06:
        if z22 == 0 goto label10;

        r53 = r0.<android.telecom.Call: android.telecom.VideoCallImpl mVideoCallImpl>;

        if r53 == null goto label07;

        virtualinvoke r53.<android.telecom.VideoCallImpl: void destroy()>();

     label07:
        $z17 = virtualinvoke r47.<android.telecom.ParcelableCall: boolean isVideoCallProviderChanged()>();

        if $z17 == 0 goto label08;

        $r42 = r0.<android.telecom.Call: java.lang.String mCallingPackage>;

        $i9 = r0.<android.telecom.Call: int mTargetSdkVersion>;

        r54 = virtualinvoke r47.<android.telecom.ParcelableCall: android.telecom.VideoCallImpl getVideoCallImpl(java.lang.String,int)>($r42, $i9);

        goto label09;

     label08:
        r54 = null;

     label09:
        r0.<android.telecom.Call: android.telecom.VideoCallImpl mVideoCallImpl> = r54;

        goto label10;

     label10:
        r55 = r0.<android.telecom.Call: android.telecom.VideoCallImpl mVideoCallImpl>;

        if r55 == null goto label11;

        $r41 = virtualinvoke r0.<android.telecom.Call: android.telecom.Call$Details getDetails()>();

        $i8 = virtualinvoke $r41.<android.telecom.Call$Details: int getVideoState()>();

        virtualinvoke r55.<android.telecom.VideoCallImpl: void setVideoState(int)>($i8);

     label11:
        i10 = virtualinvoke r47.<android.telecom.ParcelableCall: int getState()>();

        i11 = i10;

        $i0 = r0.<android.telecom.Call: int mTargetSdkVersion>;

        if $i0 >= 30 goto label12;

        i11 = i10;

        if i10 != 13 goto label12;

        i11 = 2;

     label12:
        $i12 = r0.<android.telecom.Call: int mState>;

        if $i12 == i11 goto label13;

        z23 = 1;

        goto label14;

     label13:
        z23 = 0;

     label14:
        if z23 == 0 goto label15;

        r0.<android.telecom.Call: int mState> = i11;

     label15:
        r56 = virtualinvoke r47.<android.telecom.ParcelableCall: java.lang.String getParentCallId()>();

        $r5 = r0.<android.telecom.Call: java.lang.String mParentId>;

        $z6 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r5, r56);

        z1 = $z6 ^ 1;

        if z1 == 0 goto label16;

        r0.<android.telecom.Call: java.lang.String mParentId> = r56;

     label16:
        $r6 = virtualinvoke r47.<android.telecom.ParcelableCall: java.util.List getChildCallIds()>();

        $r7 = r0.<android.telecom.Call: java.util.List mChildrenIds>;

        $z7 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r6, $r7);

        z2 = $z7 ^ 1;

        if z2 == 0 goto label17;

        $r38 = r0.<android.telecom.Call: java.util.List mChildrenIds>;

        interfaceinvoke $r38.<java.util.List: void clear()>();

        $r39 = r0.<android.telecom.Call: java.util.List mChildrenIds>;

        $r40 = virtualinvoke r47.<android.telecom.ParcelableCall: java.util.List getChildCallIds()>();

        interfaceinvoke $r39.<java.util.List: boolean addAll(java.util.Collection)>($r40);

        r0.<android.telecom.Call: boolean mChildrenCached> = 0;

        goto label17;

     label17:
        r57 = virtualinvoke r47.<android.telecom.ParcelableCall: java.lang.String getActiveChildCallId()>();

        $r8 = r0.<android.telecom.Call: java.lang.String mActiveGenericConferenceChild>;

        $z8 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>(r57, $r8);

        z3 = $z8 ^ 1;

        if z3 == 0 goto label18;

        r0.<android.telecom.Call: java.lang.String mActiveGenericConferenceChild> = r57;

     label18:
        r58 = virtualinvoke r47.<android.telecom.ParcelableCall: java.util.List getConferenceableCallIds()>();

        $r9 = new java.util.ArrayList;

        $i1 = interfaceinvoke r58.<java.util.List: int size()>();

        specialinvoke $r9.<java.util.ArrayList: void <init>(int)>($i1);

        r59 = interfaceinvoke r58.<java.util.List: java.util.Iterator iterator()>();

     label19:
        $z24 = interfaceinvoke r59.<java.util.Iterator: boolean hasNext()>();

        if $z24 == 0 goto label21;

        $r35 = interfaceinvoke r59.<java.util.Iterator: java.lang.Object next()>();

        r2 = (java.lang.String) $r35;

        $z14 = interfaceinvoke r48.<java.util.Map: boolean containsKey(java.lang.Object)>(r2);

        if $z14 == 0 goto label20;

        $r36 = interfaceinvoke r48.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2);

        $r37 = (android.telecom.Call) $r36;

        interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>($r37);

     label20:
        goto label19;

     label21:
        $r10 = r0.<android.telecom.Call: java.util.List mConferenceableCalls>;

        $z9 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r10, $r9);

        if $z9 != 0 goto label22;

        $r33 = r0.<android.telecom.Call: java.util.List mConferenceableCalls>;

        interfaceinvoke $r33.<java.util.List: void clear()>();

        $r34 = r0.<android.telecom.Call: java.util.List mConferenceableCalls>;

        interfaceinvoke $r34.<java.util.List: boolean addAll(java.util.Collection)>($r9);

        specialinvoke r0.<android.telecom.Call: void fireConferenceableCallsChanged()>();

     label22:
        $z10 = virtualinvoke r47.<android.telecom.ParcelableCall: boolean getIsRttCallChanged()>();

        if $z10 == 0 goto label27;

        z25 = 0;

        $r21 = r0.<android.telecom.Call: android.telecom.Call$Details mDetails>;

        $z12 = virtualinvoke $r21.<android.telecom.Call$Details: boolean hasProperty(int)>(1024);

        if $z12 == 0 goto label26;

        r61 = virtualinvoke r47.<android.telecom.ParcelableCall: android.telecom.ParcelableRttCall getParcelableRttCall()>();

        $r22 = new java.io.InputStreamReader;

        $r23 = new android.os.ParcelFileDescriptor$AutoCloseInputStream;

        $r24 = virtualinvoke r61.<android.telecom.ParcelableRttCall: android.os.ParcelFileDescriptor getReceiveStream()>();

        specialinvoke $r23.<android.os.ParcelFileDescriptor$AutoCloseInputStream: void <init>(android.os.ParcelFileDescriptor)>($r24);

        $r25 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;

        specialinvoke $r22.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.nio.charset.Charset)>($r23, $r25);

        $r26 = new java.io.OutputStreamWriter;

        $r27 = new android.os.ParcelFileDescriptor$AutoCloseOutputStream;

        $r28 = virtualinvoke r61.<android.telecom.ParcelableRttCall: android.os.ParcelFileDescriptor getTransmitStream()>();

        specialinvoke $r27.<android.os.ParcelFileDescriptor$AutoCloseOutputStream: void <init>(android.os.ParcelFileDescriptor)>($r28);

        $r29 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;

        specialinvoke $r26.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.nio.charset.Charset)>($r27, $r29);

        $r30 = new android.telecom.Call$RttCall;

        $r31 = r0.<android.telecom.Call: java.lang.String mTelecomCallId>;

        $i5 = virtualinvoke r61.<android.telecom.ParcelableRttCall: int getRttMode()>();

        $r32 = r0.<android.telecom.Call: android.telecom.InCallAdapter mInCallAdapter>;

        specialinvoke $r30.<android.telecom.Call$RttCall: void <init>(java.lang.String,java.io.InputStreamReader,java.io.OutputStreamWriter,int,android.telecom.InCallAdapter)>($r31, $r22, $r26, $i5, $r32);

        r65 = r0.<android.telecom.Call: android.telecom.Call$RttCall mRttCall>;

        if r65 != null goto label23;

        z25 = 1;

        z26 = 0;

        goto label25;

     label23:
        $i6 = virtualinvoke r65.<android.telecom.Call$RttCall: int getRttAudioMode()>();

        $i7 = virtualinvoke $r30.<android.telecom.Call$RttCall: int getRttAudioMode()>();

        if $i6 == $i7 goto label24;

        z26 = 1;

        goto label25;

     label24:
        z26 = 0;

     label25:
        r0.<android.telecom.Call: android.telecom.Call$RttCall mRttCall> = $r30;

        goto label29;

     label26:
        goto label27;

     label27:
        $r11 = r0.<android.telecom.Call: android.telecom.Call$RttCall mRttCall>;

        if $r11 == null goto label28;

        $r20 = virtualinvoke r47.<android.telecom.ParcelableCall: android.telecom.ParcelableRttCall getParcelableRttCall()>();

        if $r20 != null goto label28;

        $z11 = virtualinvoke r47.<android.telecom.ParcelableCall: boolean getIsRttCallChanged()>();

        if $z11 == 0 goto label28;

        z25 = 1;

        r0.<android.telecom.Call: android.telecom.Call$RttCall mRttCall> = null;

        z26 = 0;

        goto label29;

     label28:
        z25 = 0;

        z26 = 0;

     label29:
        if z23 == 0 goto label30;

        $i4 = r0.<android.telecom.Call: int mState>;

        specialinvoke r0.<android.telecom.Call: void fireStateChanged(int)>($i4);

     label30:
        if z0 == 0 goto label31;

        $r19 = r0.<android.telecom.Call: android.telecom.Call$Details mDetails>;

        specialinvoke r0.<android.telecom.Call: void fireDetailsChanged(android.telecom.Call$Details)>($r19);

     label31:
        if z21 == 0 goto label32;

        $r18 = r0.<android.telecom.Call: java.util.List mCannedTextResponses>;

        specialinvoke r0.<android.telecom.Call: void fireCannedTextResponsesLoaded(java.util.List)>($r18);

     label32:
        if z22 == 0 goto label33;

        $r17 = r0.<android.telecom.Call: android.telecom.VideoCallImpl mVideoCallImpl>;

        specialinvoke r0.<android.telecom.Call: void fireVideoCallChanged(android.telecom.InCallService$VideoCall)>($r17);

     label33:
        if z1 == 0 goto label34;

        $r16 = virtualinvoke r0.<android.telecom.Call: android.telecom.Call getParent()>();

        specialinvoke r0.<android.telecom.Call: void fireParentChanged(android.telecom.Call)>($r16);

     label34:
        if z2 != 0 goto label35;

        if z3 == 0 goto label36;

     label35:
        $r12 = virtualinvoke r0.<android.telecom.Call: java.util.List getChildren()>();

        specialinvoke r0.<android.telecom.Call: void fireChildrenChanged(java.util.List)>($r12);

     label36:
        if z25 == 0 goto label39;

        $r14 = r0.<android.telecom.Call: android.telecom.Call$RttCall mRttCall>;

        if $r14 == null goto label37;

        z27 = 1;

        goto label38;

     label37:
        z27 = 0;

     label38:
        $r15 = r0.<android.telecom.Call: android.telecom.Call$RttCall mRttCall>;

        specialinvoke r0.<android.telecom.Call: void fireOnIsRttChanged(boolean,android.telecom.Call$RttCall)>(z27, $r15);

     label39:
        if z26 == 0 goto label40;

        $r13 = r0.<android.telecom.Call: android.telecom.Call$RttCall mRttCall>;

        $i3 = virtualinvoke $r13.<android.telecom.Call$RttCall: int getRttAudioMode()>();

        specialinvoke r0.<android.telecom.Call: void fireOnRttModeChanged(int)>($i3);

     label40:
        $i2 = r0.<android.telecom.Call: int mState>;

        if $i2 != 7 goto label41;

        specialinvoke r0.<android.telecom.Call: void fireCallDestroyed()>();

     label41:
        return;
    }

    public boolean isRttActive()
    {
        android.telecom.Call r0;
        android.telecom.Call$RttCall $r1;
        android.telecom.Call$Details $r2;
        boolean $z0, z1;

        r0 := @this: android.telecom.Call;

        $r1 = r0.<android.telecom.Call: android.telecom.Call$RttCall mRttCall>;

        if $r1 == null goto label1;

        $r2 = r0.<android.telecom.Call: android.telecom.Call$Details mDetails>;

        $z0 = virtualinvoke $r2.<android.telecom.Call$Details: boolean hasProperty(int)>(1024);

        if $z0 == 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    public void mergeConference()
    {
        android.telecom.Call r0;
        java.lang.String $r1;
        android.telecom.InCallAdapter $r2;

        r0 := @this: android.telecom.Call;

        $r2 = r0.<android.telecom.Call: android.telecom.InCallAdapter mInCallAdapter>;

        $r1 = r0.<android.telecom.Call: java.lang.String mTelecomCallId>;

        virtualinvoke $r2.<android.telecom.InCallAdapter: void mergeConference(java.lang.String)>($r1);

        return;
    }

    public void phoneAccountSelected(android.telecom.PhoneAccountHandle, boolean)
    {
        android.telecom.Call r0;
        android.telecom.PhoneAccountHandle r1;
        boolean z0;
        java.lang.String $r2;
        android.telecom.InCallAdapter $r3;

        r0 := @this: android.telecom.Call;

        r1 := @parameter0: android.telecom.PhoneAccountHandle;

        z0 := @parameter1: boolean;

        $r3 = r0.<android.telecom.Call: android.telecom.InCallAdapter mInCallAdapter>;

        $r2 = r0.<android.telecom.Call: java.lang.String mTelecomCallId>;

        virtualinvoke $r3.<android.telecom.InCallAdapter: void phoneAccountSelected(java.lang.String,android.telecom.PhoneAccountHandle,boolean)>($r2, r1, z0);

        return;
    }

    public void playDtmfTone(char)
    {
        android.telecom.Call r0;
        char c0;
        java.lang.String $r1;
        android.telecom.InCallAdapter $r2;

        r0 := @this: android.telecom.Call;

        c0 := @parameter0: char;

        $r2 = r0.<android.telecom.Call: android.telecom.InCallAdapter mInCallAdapter>;

        $r1 = r0.<android.telecom.Call: java.lang.String mTelecomCallId>;

        virtualinvoke $r2.<android.telecom.InCallAdapter: void playDtmfTone(java.lang.String,char)>($r1, c0);

        return;
    }

    public void postDialContinue(boolean)
    {
        android.telecom.Call r0;
        boolean z0;
        java.lang.String $r1;
        android.telecom.InCallAdapter $r2;

        r0 := @this: android.telecom.Call;

        z0 := @parameter0: boolean;

        $r2 = r0.<android.telecom.Call: android.telecom.InCallAdapter mInCallAdapter>;

        $r1 = r0.<android.telecom.Call: java.lang.String mTelecomCallId>;

        virtualinvoke $r2.<android.telecom.InCallAdapter: void postDialContinue(java.lang.String,boolean)>($r1, z0);

        return;
    }

    public void pullExternalCall()
    {
        android.telecom.Call r0;
        android.telecom.Call$Details $r1;
        boolean $z0;
        java.lang.String $r2;
        android.telecom.InCallAdapter $r3;

        r0 := @this: android.telecom.Call;

        $r1 = r0.<android.telecom.Call: android.telecom.Call$Details mDetails>;

        $z0 = virtualinvoke $r1.<android.telecom.Call$Details: boolean hasProperty(int)>(64);

        if $z0 != 0 goto label1;

        return;

     label1:
        $r3 = r0.<android.telecom.Call: android.telecom.InCallAdapter mInCallAdapter>;

        $r2 = r0.<android.telecom.Call: java.lang.String mTelecomCallId>;

        virtualinvoke $r3.<android.telecom.InCallAdapter: void pullExternalCall(java.lang.String)>($r2);

        return;
    }

    public final void putExtra(java.lang.String, int)
    {
        android.telecom.Call r0;
        java.lang.String r1, $r4;
        int i0;
        android.os.Bundle $r2, $r3, $r6;
        android.telecom.InCallAdapter $r5;

        r0 := @this: android.telecom.Call;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r2 = r0.<android.telecom.Call: android.os.Bundle mExtras>;

        if $r2 != null goto label1;

        $r6 = new android.os.Bundle;

        specialinvoke $r6.<android.os.Bundle: void <init>()>();

        r0.<android.telecom.Call: android.os.Bundle mExtras> = $r6;

     label1:
        $r3 = r0.<android.telecom.Call: android.os.Bundle mExtras>;

        virtualinvoke $r3.<android.os.Bundle: void putInt(java.lang.String,int)>(r1, i0);

        $r5 = r0.<android.telecom.Call: android.telecom.InCallAdapter mInCallAdapter>;

        $r4 = r0.<android.telecom.Call: java.lang.String mTelecomCallId>;

        virtualinvoke $r5.<android.telecom.InCallAdapter: void putExtra(java.lang.String,java.lang.String,int)>($r4, r1, i0);

        return;
    }

    public final void putExtra(java.lang.String, java.lang.String)
    {
        android.telecom.Call r0;
        java.lang.String r1, r2, $r5;
        android.os.Bundle $r3, $r4, $r7;
        android.telecom.InCallAdapter $r6;

        r0 := @this: android.telecom.Call;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<android.telecom.Call: android.os.Bundle mExtras>;

        if $r3 != null goto label1;

        $r7 = new android.os.Bundle;

        specialinvoke $r7.<android.os.Bundle: void <init>()>();

        r0.<android.telecom.Call: android.os.Bundle mExtras> = $r7;

     label1:
        $r4 = r0.<android.telecom.Call: android.os.Bundle mExtras>;

        virtualinvoke $r4.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>(r1, r2);

        $r6 = r0.<android.telecom.Call: android.telecom.InCallAdapter mInCallAdapter>;

        $r5 = r0.<android.telecom.Call: java.lang.String mTelecomCallId>;

        virtualinvoke $r6.<android.telecom.InCallAdapter: void putExtra(java.lang.String,java.lang.String,java.lang.String)>($r5, r1, r2);

        return;
    }

    public final void putExtra(java.lang.String, boolean)
    {
        android.telecom.Call r0;
        java.lang.String r1, $r4;
        boolean z0;
        android.os.Bundle $r2, $r3, $r6;
        android.telecom.InCallAdapter $r5;

        r0 := @this: android.telecom.Call;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $r2 = r0.<android.telecom.Call: android.os.Bundle mExtras>;

        if $r2 != null goto label1;

        $r6 = new android.os.Bundle;

        specialinvoke $r6.<android.os.Bundle: void <init>()>();

        r0.<android.telecom.Call: android.os.Bundle mExtras> = $r6;

     label1:
        $r3 = r0.<android.telecom.Call: android.os.Bundle mExtras>;

        virtualinvoke $r3.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>(r1, z0);

        $r5 = r0.<android.telecom.Call: android.telecom.InCallAdapter mInCallAdapter>;

        $r4 = r0.<android.telecom.Call: java.lang.String mTelecomCallId>;

        virtualinvoke $r5.<android.telecom.InCallAdapter: void putExtra(java.lang.String,java.lang.String,boolean)>($r4, r1, z0);

        return;
    }

    public final void putExtras(android.os.Bundle)
    {
        android.telecom.Call r0;
        android.os.Bundle r1, $r2, $r3, $r6;
        java.lang.String $r4;
        android.telecom.InCallAdapter $r5;

        r0 := @this: android.telecom.Call;

        r1 := @parameter0: android.os.Bundle;

        if r1 != null goto label1;

        return;

     label1:
        $r2 = r0.<android.telecom.Call: android.os.Bundle mExtras>;

        if $r2 != null goto label2;

        $r6 = new android.os.Bundle;

        specialinvoke $r6.<android.os.Bundle: void <init>()>();

        r0.<android.telecom.Call: android.os.Bundle mExtras> = $r6;

     label2:
        $r3 = r0.<android.telecom.Call: android.os.Bundle mExtras>;

        virtualinvoke $r3.<android.os.Bundle: void putAll(android.os.Bundle)>(r1);

        $r5 = r0.<android.telecom.Call: android.telecom.InCallAdapter mInCallAdapter>;

        $r4 = r0.<android.telecom.Call: java.lang.String mTelecomCallId>;

        virtualinvoke $r5.<android.telecom.InCallAdapter: void putExtras(java.lang.String,android.os.Bundle)>($r4, r1);

        return;
    }

    public void registerCallback(android.telecom.Call$Callback)
    {
        android.telecom.Call r0;
        android.telecom.Call$Callback r1;
        android.os.Handler $r2;

        r0 := @this: android.telecom.Call;

        r1 := @parameter0: android.telecom.Call$Callback;

        $r2 = new android.os.Handler;

        specialinvoke $r2.<android.os.Handler: void <init>()>();

        virtualinvoke r0.<android.telecom.Call: void registerCallback(android.telecom.Call$Callback,android.os.Handler)>(r1, $r2);

        return;
    }

    public void registerCallback(android.telecom.Call$Callback, android.os.Handler)
    {
        android.telecom.Call r0;
        android.telecom.Call$Callback r1;
        android.os.Handler r2;
        int $i0;
        android.telecom.CallbackRecord $r3;
        java.util.List $r4;

        r0 := @this: android.telecom.Call;

        r1 := @parameter0: android.telecom.Call$Callback;

        r2 := @parameter1: android.os.Handler;

        virtualinvoke r0.<android.telecom.Call: void unregisterCallback(android.telecom.Call$Callback)>(r1);

        if r1 == null goto label1;

        if r2 == null goto label1;

        $i0 = r0.<android.telecom.Call: int mState>;

        if $i0 == 7 goto label1;

        $r4 = r0.<android.telecom.Call: java.util.List mCallbackRecords>;

        $r3 = new android.telecom.CallbackRecord;

        specialinvoke $r3.<android.telecom.CallbackRecord: void <init>(java.lang.Object,android.os.Handler)>(r1, r2);

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r3);

     label1:
        return;
    }

    public void reject(int)
    {
        android.telecom.Call r0;
        int i0;
        java.lang.String $r1;
        android.telecom.InCallAdapter $r2;

        r0 := @this: android.telecom.Call;

        i0 := @parameter0: int;

        $r2 = r0.<android.telecom.Call: android.telecom.InCallAdapter mInCallAdapter>;

        $r1 = r0.<android.telecom.Call: java.lang.String mTelecomCallId>;

        virtualinvoke $r2.<android.telecom.InCallAdapter: void rejectCall(java.lang.String,int)>($r1, i0);

        return;
    }

    public void reject(boolean, java.lang.String)
    {
        android.telecom.Call r0;
        boolean z0;
        java.lang.String r1, $r2;
        android.telecom.InCallAdapter $r3;

        r0 := @this: android.telecom.Call;

        z0 := @parameter0: boolean;

        r1 := @parameter1: java.lang.String;

        $r3 = r0.<android.telecom.Call: android.telecom.InCallAdapter mInCallAdapter>;

        $r2 = r0.<android.telecom.Call: java.lang.String mTelecomCallId>;

        virtualinvoke $r3.<android.telecom.InCallAdapter: void rejectCall(java.lang.String,boolean,java.lang.String)>($r2, z0, r1);

        return;
    }

    public final void removeExtras(java.util.List)
    {
        android.telecom.Call r0;
        java.util.List r1;
        java.util.Iterator r2;
        java.lang.String r3, $r9;
        android.os.Bundle $r4, $r5, $r7;
        boolean $z0;
        int $i0;
        java.lang.Object $r6;
        android.telecom.InCallAdapter $r8;

        r0 := @this: android.telecom.Call;

        r1 := @parameter0: java.util.List;

        $r4 = r0.<android.telecom.Call: android.os.Bundle mExtras>;

        if $r4 == null goto label3;

        r2 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.lang.String) $r6;

        $r7 = r0.<android.telecom.Call: android.os.Bundle mExtras>;

        virtualinvoke $r7.<android.os.Bundle: void remove(java.lang.String)>(r3);

        goto label1;

     label2:
        $r5 = r0.<android.telecom.Call: android.os.Bundle mExtras>;

        $i0 = virtualinvoke $r5.<android.os.Bundle: int size()>();

        if $i0 != 0 goto label3;

        r0.<android.telecom.Call: android.os.Bundle mExtras> = null;

     label3:
        $r8 = r0.<android.telecom.Call: android.telecom.InCallAdapter mInCallAdapter>;

        $r9 = r0.<android.telecom.Call: java.lang.String mTelecomCallId>;

        virtualinvoke $r8.<android.telecom.InCallAdapter: void removeExtras(java.lang.String,java.util.List)>($r9, r1);

        return;
    }

    public final transient void removeExtras(java.lang.String[])
    {
        android.telecom.Call r0;
        java.lang.String[] r1;
        java.util.List $r2;

        r0 := @this: android.telecom.Call;

        r1 := @parameter0: java.lang.String[];

        $r2 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r1);

        virtualinvoke r0.<android.telecom.Call: void removeExtras(java.util.List)>($r2);

        return;
    }

    public void removeListener(android.telecom.Call$Listener)
    {
        android.telecom.Call r0;
        android.telecom.Call$Listener r1;

        r0 := @this: android.telecom.Call;

        r1 := @parameter0: android.telecom.Call$Listener;

        virtualinvoke r0.<android.telecom.Call: void unregisterCallback(android.telecom.Call$Callback)>(r1);

        return;
    }

    public void respondToRttRequest(int, boolean)
    {
        android.telecom.Call r0;
        int i0;
        boolean z0;
        java.lang.String $r1;
        android.telecom.InCallAdapter $r2;

        r0 := @this: android.telecom.Call;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        $r2 = r0.<android.telecom.Call: android.telecom.InCallAdapter mInCallAdapter>;

        $r1 = r0.<android.telecom.Call: java.lang.String mTelecomCallId>;

        virtualinvoke $r2.<android.telecom.InCallAdapter: void respondToRttRequest(java.lang.String,int,boolean)>($r1, i0, z0);

        return;
    }

    public void sendCallEvent(java.lang.String, android.os.Bundle)
    {
        android.telecom.Call r0;
        java.lang.String r1, $r3;
        android.os.Bundle r2;
        int $i0;
        android.telecom.InCallAdapter $r4;

        r0 := @this: android.telecom.Call;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.Bundle;

        $r4 = r0.<android.telecom.Call: android.telecom.InCallAdapter mInCallAdapter>;

        $r3 = r0.<android.telecom.Call: java.lang.String mTelecomCallId>;

        $i0 = r0.<android.telecom.Call: int mTargetSdkVersion>;

        virtualinvoke $r4.<android.telecom.InCallAdapter: void sendCallEvent(java.lang.String,java.lang.String,int,android.os.Bundle)>($r3, r1, $i0, r2);

        return;
    }

    public void sendRttRequest()
    {
        android.telecom.Call r0;
        java.lang.String $r1;
        android.telecom.InCallAdapter $r2;

        r0 := @this: android.telecom.Call;

        $r2 = r0.<android.telecom.Call: android.telecom.InCallAdapter mInCallAdapter>;

        $r1 = r0.<android.telecom.Call: java.lang.String mTelecomCallId>;

        virtualinvoke $r2.<android.telecom.InCallAdapter: void sendRttRequest(java.lang.String)>($r1);

        return;
    }

    public void splitFromConference()
    {
        android.telecom.Call r0;
        java.lang.String $r1;
        android.telecom.InCallAdapter $r2;

        r0 := @this: android.telecom.Call;

        $r2 = r0.<android.telecom.Call: android.telecom.InCallAdapter mInCallAdapter>;

        $r1 = r0.<android.telecom.Call: java.lang.String mTelecomCallId>;

        virtualinvoke $r2.<android.telecom.InCallAdapter: void splitFromConference(java.lang.String)>($r1);

        return;
    }

    public void stopDtmfTone()
    {
        android.telecom.Call r0;
        java.lang.String $r1;
        android.telecom.InCallAdapter $r2;

        r0 := @this: android.telecom.Call;

        $r2 = r0.<android.telecom.Call: android.telecom.InCallAdapter mInCallAdapter>;

        $r1 = r0.<android.telecom.Call: java.lang.String mTelecomCallId>;

        virtualinvoke $r2.<android.telecom.InCallAdapter: void stopDtmfTone(java.lang.String)>($r1);

        return;
    }

    public void stopRtt()
    {
        android.telecom.Call r0;
        java.lang.String $r1;
        android.telecom.InCallAdapter $r2;

        r0 := @this: android.telecom.Call;

        $r2 = r0.<android.telecom.Call: android.telecom.InCallAdapter mInCallAdapter>;

        $r1 = r0.<android.telecom.Call: java.lang.String mTelecomCallId>;

        virtualinvoke $r2.<android.telecom.InCallAdapter: void stopRtt(java.lang.String)>($r1);

        return;
    }

    public void swapConference()
    {
        android.telecom.Call r0;
        java.lang.String $r1;
        android.telecom.InCallAdapter $r2;

        r0 := @this: android.telecom.Call;

        $r2 = r0.<android.telecom.Call: android.telecom.InCallAdapter mInCallAdapter>;

        $r1 = r0.<android.telecom.Call: java.lang.String mTelecomCallId>;

        virtualinvoke $r2.<android.telecom.InCallAdapter: void swapConference(java.lang.String)>($r1);

        return;
    }

    public java.lang.String toString()
    {
        android.telecom.Call r0;
        java.lang.StringBuilder $r2;
        java.lang.String $r4, $r7, $r13;
        int $i0;
        android.telecom.Call$Details $r10;

        r0 := @this: android.telecom.Call;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Call [id: ");

        $r4 = r0.<android.telecom.Call: java.lang.String mTelecomCallId>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", state: ");

        $i0 = r0.<android.telecom.Call: int mState>;

        $r7 = staticinvoke <android.telecom.Call: java.lang.String stateToString(int)>($i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", details: ");

        $r10 = r0.<android.telecom.Call: android.telecom.Call$Details mDetails>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r13 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r13;
    }

    public void transfer(android.net.Uri, boolean)
    {
        android.telecom.Call r0;
        android.net.Uri r1;
        boolean z0;
        java.lang.String $r2;
        android.telecom.InCallAdapter $r3;

        r0 := @this: android.telecom.Call;

        r1 := @parameter0: android.net.Uri;

        z0 := @parameter1: boolean;

        $r3 = r0.<android.telecom.Call: android.telecom.InCallAdapter mInCallAdapter>;

        $r2 = r0.<android.telecom.Call: java.lang.String mTelecomCallId>;

        virtualinvoke $r3.<android.telecom.InCallAdapter: void transferCall(java.lang.String,android.net.Uri,boolean)>($r2, r1, z0);

        return;
    }

    public void transfer(android.telecom.Call)
    {
        android.telecom.Call r0, r1;
        java.lang.String $r2, $r3;
        android.telecom.InCallAdapter $r4;

        r0 := @this: android.telecom.Call;

        r1 := @parameter0: android.telecom.Call;

        $r4 = r0.<android.telecom.Call: android.telecom.InCallAdapter mInCallAdapter>;

        $r3 = r0.<android.telecom.Call: java.lang.String mTelecomCallId>;

        $r2 = r1.<android.telecom.Call: java.lang.String mTelecomCallId>;

        virtualinvoke $r4.<android.telecom.InCallAdapter: void transferCall(java.lang.String,java.lang.String)>($r3, $r2);

        return;
    }

    public void unhold()
    {
        android.telecom.Call r0;
        java.lang.String $r1;
        android.telecom.InCallAdapter $r2;

        r0 := @this: android.telecom.Call;

        $r2 = r0.<android.telecom.Call: android.telecom.InCallAdapter mInCallAdapter>;

        $r1 = r0.<android.telecom.Call: java.lang.String mTelecomCallId>;

        virtualinvoke $r2.<android.telecom.InCallAdapter: void unholdCall(java.lang.String)>($r1);

        return;
    }

    public void unregisterCallback(android.telecom.Call$Callback)
    {
        android.telecom.Call r0;
        android.telecom.Call$Callback r1;
        java.util.Iterator r2;
        android.telecom.CallbackRecord r3;
        int $i0;
        java.util.List $r4, $r7;
        boolean $z0;
        java.lang.Object $r5, $r6;

        r0 := @this: android.telecom.Call;

        r1 := @parameter0: android.telecom.Call$Callback;

        if r1 == null goto label3;

        $i0 = r0.<android.telecom.Call: int mState>;

        if $i0 == 7 goto label3;

        $r4 = r0.<android.telecom.Call: java.util.List mCallbackRecords>;

        r2 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.telecom.CallbackRecord) $r5;

        $r6 = virtualinvoke r3.<android.telecom.CallbackRecord: java.lang.Object getCallback()>();

        if $r6 != r1 goto label2;

        $r7 = r0.<android.telecom.Call: java.util.List mCallbackRecords>;

        interfaceinvoke $r7.<java.util.List: boolean remove(java.lang.Object)>(r3);

        goto label3;

     label2:
        goto label1;

     label3:
        return;
    }

    public static void <clinit>()
    {
        <android.telecom.Call: int STATE_SIMULATED_RINGING> = 13;

        <android.telecom.Call: int STATE_SELECT_PHONE_ACCOUNT> = 8;

        <android.telecom.Call: int STATE_RINGING> = 2;

        <android.telecom.Call: int STATE_PULLING_CALL> = 11;

        <android.telecom.Call: int STATE_PRE_DIAL_WAIT> = 8;

        <android.telecom.Call: int STATE_NEW> = 0;

        <android.telecom.Call: int STATE_HOLDING> = 3;

        <android.telecom.Call: int STATE_DISCONNECTING> = 10;

        <android.telecom.Call: int STATE_DISCONNECTED> = 7;

        <android.telecom.Call: int STATE_DIALING> = 1;

        <android.telecom.Call: int STATE_CONNECTING> = 9;

        <android.telecom.Call: int STATE_AUDIO_PROCESSING> = 12;

        <android.telecom.Call: int STATE_ACTIVE> = 4;

        <android.telecom.Call: int REJECT_REASON_UNWANTED> = 2;

        <android.telecom.Call: int REJECT_REASON_DECLINED> = 1;

        <android.telecom.Call: java.lang.String EXTRA_SUGGESTED_PHONE_ACCOUNTS> = "android.telecom.extra.SUGGESTED_PHONE_ACCOUNTS";

        <android.telecom.Call: java.lang.String EXTRA_SILENT_RINGING_REQUESTED> = "android.telecom.extra.SILENT_RINGING_REQUESTED";

        <android.telecom.Call: java.lang.String EXTRA_LAST_EMERGENCY_CALLBACK_TIME_MILLIS> = "android.telecom.extra.LAST_EMERGENCY_CALLBACK_TIME_MILLIS";

        <android.telecom.Call: java.lang.String EXTRA_HANDOVER_VIDEO_STATE> = "android.telecom.extra.HANDOVER_VIDEO_STATE";

        <android.telecom.Call: java.lang.String EXTRA_HANDOVER_PHONE_ACCOUNT_HANDLE> = "android.telecom.extra.HANDOVER_PHONE_ACCOUNT_HANDLE";

        <android.telecom.Call: java.lang.String EXTRA_HANDOVER_EXTRAS> = "android.telecom.extra.HANDOVER_EXTRAS";

        <android.telecom.Call: java.lang.String EVENT_REQUEST_HANDOVER> = "android.telecom.event.REQUEST_HANDOVER";

        <android.telecom.Call: java.lang.String EVENT_HANDOVER_SOURCE_DISCONNECTED> = "android.telecom.event.HANDOVER_SOURCE_DISCONNECTED";

        <android.telecom.Call: java.lang.String EVENT_HANDOVER_FAILED> = "android.telecom.event.HANDOVER_FAILED";

        <android.telecom.Call: java.lang.String EVENT_HANDOVER_COMPLETE> = "android.telecom.event.HANDOVER_COMPLETE";

        <android.telecom.Call: java.lang.String AVAILABLE_PHONE_ACCOUNTS> = "selectPhoneAccountAccounts";

        return;
    }
}
