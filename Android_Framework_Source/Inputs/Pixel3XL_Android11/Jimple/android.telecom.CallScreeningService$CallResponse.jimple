public class android.telecom.CallScreeningService$CallResponse extends java.lang.Object
{
    private final boolean mShouldDisallowCall;
    private final boolean mShouldRejectCall;
    private final boolean mShouldScreenCallViaAudioProcessing;
    private final boolean mShouldSilenceCall;
    private final boolean mShouldSkipCallLog;
    private final boolean mShouldSkipNotification;

    private void <init>(boolean, boolean, boolean, boolean, boolean, boolean)
    {
        android.telecom.CallScreeningService$CallResponse r0;
        boolean z0, z1, z2, z3, z4, z5;
        java.lang.IllegalStateException $r1, $r2;

        r0 := @this: android.telecom.CallScreeningService$CallResponse;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        z2 := @parameter2: boolean;

        z3 := @parameter3: boolean;

        z4 := @parameter4: boolean;

        z5 := @parameter5: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if z0 != 0 goto label2;

        if z1 != 0 goto label1;

        if z3 != 0 goto label1;

        if z4 != 0 goto label1;

        goto label2;

     label1:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Invalid response state for allowed call.");

        throw $r2;

     label2:
        if z0 == 0 goto label4;

        if z5 != 0 goto label3;

        goto label4;

     label3:
        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Invalid response state for allowed call.");

        throw $r1;

     label4:
        r0.<android.telecom.CallScreeningService$CallResponse: boolean mShouldDisallowCall> = z0;

        r0.<android.telecom.CallScreeningService$CallResponse: boolean mShouldRejectCall> = z1;

        r0.<android.telecom.CallScreeningService$CallResponse: boolean mShouldSkipCallLog> = z3;

        r0.<android.telecom.CallScreeningService$CallResponse: boolean mShouldSkipNotification> = z4;

        r0.<android.telecom.CallScreeningService$CallResponse: boolean mShouldSilenceCall> = z2;

        r0.<android.telecom.CallScreeningService$CallResponse: boolean mShouldScreenCallViaAudioProcessing> = z5;

        return;
    }

    void <init>(boolean, boolean, boolean, boolean, boolean, boolean, android.telecom.CallScreeningService$1)
    {
        android.telecom.CallScreeningService$CallResponse r0;
        boolean z0, z1, z2, z3, z4, z5;
        android.telecom.CallScreeningService$1 r1;

        r0 := @this: android.telecom.CallScreeningService$CallResponse;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        z2 := @parameter2: boolean;

        z3 := @parameter3: boolean;

        z4 := @parameter4: boolean;

        z5 := @parameter5: boolean;

        r1 := @parameter6: android.telecom.CallScreeningService$1;

        specialinvoke r0.<android.telecom.CallScreeningService$CallResponse: void <init>(boolean,boolean,boolean,boolean,boolean,boolean)>(z0, z1, z2, z3, z4, z5);

        return;
    }

    public boolean getDisallowCall()
    {
        android.telecom.CallScreeningService$CallResponse r0;
        boolean $z0;

        r0 := @this: android.telecom.CallScreeningService$CallResponse;

        $z0 = r0.<android.telecom.CallScreeningService$CallResponse: boolean mShouldDisallowCall>;

        return $z0;
    }

    public boolean getRejectCall()
    {
        android.telecom.CallScreeningService$CallResponse r0;
        boolean $z0;

        r0 := @this: android.telecom.CallScreeningService$CallResponse;

        $z0 = r0.<android.telecom.CallScreeningService$CallResponse: boolean mShouldRejectCall>;

        return $z0;
    }

    public boolean getShouldScreenCallViaAudioProcessing()
    {
        android.telecom.CallScreeningService$CallResponse r0;
        boolean $z0;

        r0 := @this: android.telecom.CallScreeningService$CallResponse;

        $z0 = r0.<android.telecom.CallScreeningService$CallResponse: boolean mShouldScreenCallViaAudioProcessing>;

        return $z0;
    }

    public boolean getSilenceCall()
    {
        android.telecom.CallScreeningService$CallResponse r0;
        boolean $z0;

        r0 := @this: android.telecom.CallScreeningService$CallResponse;

        $z0 = r0.<android.telecom.CallScreeningService$CallResponse: boolean mShouldSilenceCall>;

        return $z0;
    }

    public boolean getSkipCallLog()
    {
        android.telecom.CallScreeningService$CallResponse r0;
        boolean $z0;

        r0 := @this: android.telecom.CallScreeningService$CallResponse;

        $z0 = r0.<android.telecom.CallScreeningService$CallResponse: boolean mShouldSkipCallLog>;

        return $z0;
    }

    public boolean getSkipNotification()
    {
        android.telecom.CallScreeningService$CallResponse r0;
        boolean $z0;

        r0 := @this: android.telecom.CallScreeningService$CallResponse;

        $z0 = r0.<android.telecom.CallScreeningService$CallResponse: boolean mShouldSkipNotification>;

        return $z0;
    }
}
