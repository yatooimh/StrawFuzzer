public abstract class android.telecom.CallScreeningService extends android.app.Service
{
    private static final int MSG_SCREEN_CALL;
    public static final java.lang.String SERVICE_INTERFACE;
    private com.android.internal.telecom.ICallScreeningAdapter mCallScreeningAdapter;
    private final android.os.Handler mHandler;

    public void <init>()
    {
        android.telecom.CallScreeningService r0;
        android.telecom.CallScreeningService$1 $r1;
        android.os.Looper $r2;

        r0 := @this: android.telecom.CallScreeningService;

        specialinvoke r0.<android.app.Service: void <init>()>();

        $r1 = new android.telecom.CallScreeningService$1;

        $r2 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        specialinvoke $r1.<android.telecom.CallScreeningService$1: void <init>(android.telecom.CallScreeningService,android.os.Looper)>(r0, $r2);

        r0.<android.telecom.CallScreeningService: android.os.Handler mHandler> = $r1;

        return;
    }

    static com.android.internal.telecom.ICallScreeningAdapter access$000(android.telecom.CallScreeningService)
    {
        android.telecom.CallScreeningService r0;
        com.android.internal.telecom.ICallScreeningAdapter $r1;

        r0 := @parameter0: android.telecom.CallScreeningService;

        $r1 = r0.<android.telecom.CallScreeningService: com.android.internal.telecom.ICallScreeningAdapter mCallScreeningAdapter>;

        return $r1;
    }

    static com.android.internal.telecom.ICallScreeningAdapter access$002(android.telecom.CallScreeningService, com.android.internal.telecom.ICallScreeningAdapter)
    {
        android.telecom.CallScreeningService r0;
        com.android.internal.telecom.ICallScreeningAdapter r1;

        r0 := @parameter0: android.telecom.CallScreeningService;

        r1 := @parameter1: com.android.internal.telecom.ICallScreeningAdapter;

        r0.<android.telecom.CallScreeningService: com.android.internal.telecom.ICallScreeningAdapter mCallScreeningAdapter> = r1;

        return r1;
    }

    static android.os.Handler access$100(android.telecom.CallScreeningService)
    {
        android.telecom.CallScreeningService r0;
        android.os.Handler $r1;

        r0 := @parameter0: android.telecom.CallScreeningService;

        $r1 = r0.<android.telecom.CallScreeningService: android.os.Handler mHandler>;

        return $r1;
    }

    public android.os.IBinder onBind(android.content.Intent)
    {
        android.telecom.CallScreeningService r0;
        android.content.Intent r1;
        java.lang.Object[] $r2;
        android.telecom.CallScreeningService$CallScreeningBinder $r3;

        r0 := @this: android.telecom.CallScreeningService;

        r1 := @parameter0: android.content.Intent;

        $r2 = newarray (java.lang.Object)[0];

        staticinvoke <android.telecom.Log: void v(java.lang.Object,java.lang.String,java.lang.Object[])>(r0, "onBind", $r2);

        $r3 = new android.telecom.CallScreeningService$CallScreeningBinder;

        specialinvoke $r3.<android.telecom.CallScreeningService$CallScreeningBinder: void <init>(android.telecom.CallScreeningService,android.telecom.CallScreeningService$1)>(r0, null);

        return $r3;
    }

    public abstract void onScreenCall(android.telecom.Call$Details);

    public boolean onUnbind(android.content.Intent)
    {
        android.telecom.CallScreeningService r0;
        android.content.Intent r1;
        java.lang.Object[] $r2;

        r0 := @this: android.telecom.CallScreeningService;

        r1 := @parameter0: android.content.Intent;

        $r2 = newarray (java.lang.Object)[0];

        staticinvoke <android.telecom.Log: void v(java.lang.Object,java.lang.String,java.lang.Object[])>(r0, "onUnbind", $r2);

        return 0;
    }

    public final void respondToCall(android.telecom.Call$Details, android.telecom.CallScreeningService$CallResponse)
    {
        android.telecom.CallScreeningService r0;
        com.android.internal.telecom.ICallScreeningAdapter r1, $r2, $r4, $r6;
        boolean z0, $z1, $z2, $z3, $z4, z5, z6, z7;
        java.lang.String $r3, $r5, $r7, $r8, $r10, r14;
        java.lang.Class $r9;
        android.os.RemoteException $r11;
        android.telecom.Call$Details r12;
        android.telecom.CallScreeningService$CallResponse r13;
        android.content.ComponentName r15;

        r0 := @this: android.telecom.CallScreeningService;

        r12 := @parameter0: android.telecom.Call$Details;

        r13 := @parameter1: android.telecom.CallScreeningService$CallResponse;

     label01:
        $z1 = virtualinvoke r13.<android.telecom.CallScreeningService$CallResponse: boolean getDisallowCall()>();

        if $z1 == 0 goto label08;

        r1 = r0.<android.telecom.CallScreeningService: com.android.internal.telecom.ICallScreeningAdapter mCallScreeningAdapter>;

        r14 = virtualinvoke r12.<android.telecom.Call$Details: java.lang.String getTelecomCallId()>();

        z0 = virtualinvoke r13.<android.telecom.CallScreeningService$CallResponse: boolean getRejectCall()>();

        z5 = virtualinvoke r13.<android.telecom.CallScreeningService$CallResponse: boolean getSkipCallLog()>();

     label02:
        z6 = 0;

        if z5 != 0 goto label03;

        z7 = 1;

        goto label04;

     label03:
        z7 = 0;

     label04:
        $z4 = virtualinvoke r13.<android.telecom.CallScreeningService$CallResponse: boolean getSkipNotification()>();

        if $z4 != 0 goto label06;

     label05:
        z6 = 1;

     label06:
        r15 = new android.content.ComponentName;

        $r8 = virtualinvoke r0.<android.telecom.CallScreeningService: java.lang.String getPackageName()>();

        $r9 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r10 = virtualinvoke $r9.<java.lang.Class: java.lang.String getName()>();

        specialinvoke r15.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r8, $r10);

        interfaceinvoke r1.<com.android.internal.telecom.ICallScreeningAdapter: void disallowCall(java.lang.String,boolean,boolean,boolean,android.content.ComponentName)>(r14, z0, z7, z6, r15);

     label07:
        goto label13;

     label08:
        $z2 = virtualinvoke r13.<android.telecom.CallScreeningService$CallResponse: boolean getSilenceCall()>();

        if $z2 == 0 goto label10;

        $r6 = r0.<android.telecom.CallScreeningService: com.android.internal.telecom.ICallScreeningAdapter mCallScreeningAdapter>;

        $r7 = virtualinvoke r12.<android.telecom.Call$Details: java.lang.String getTelecomCallId()>();

        interfaceinvoke $r6.<com.android.internal.telecom.ICallScreeningAdapter: void silenceCall(java.lang.String)>($r7);

     label09:
        goto label13;

     label10:
        $z3 = virtualinvoke r13.<android.telecom.CallScreeningService$CallResponse: boolean getShouldScreenCallViaAudioProcessing()>();

        if $z3 == 0 goto label12;

        $r4 = r0.<android.telecom.CallScreeningService: com.android.internal.telecom.ICallScreeningAdapter mCallScreeningAdapter>;

        $r5 = virtualinvoke r12.<android.telecom.Call$Details: java.lang.String getTelecomCallId()>();

        interfaceinvoke $r4.<com.android.internal.telecom.ICallScreeningAdapter: void screenCallFurther(java.lang.String)>($r5);

     label11:
        goto label13;

     label12:
        $r2 = r0.<android.telecom.CallScreeningService: com.android.internal.telecom.ICallScreeningAdapter mCallScreeningAdapter>;

        $r3 = virtualinvoke r12.<android.telecom.Call$Details: java.lang.String getTelecomCallId()>();

        interfaceinvoke $r2.<com.android.internal.telecom.ICallScreeningAdapter: void allowCall(java.lang.String)>($r3);

     label13:
        goto label15;

     label14:
        $r11 := @caughtexception;

     label15:
        return;

        catch android.os.RemoteException from label01 to label02 with label14;
        catch android.os.RemoteException from label04 to label05 with label14;
        catch android.os.RemoteException from label06 to label07 with label14;
        catch android.os.RemoteException from label08 to label09 with label14;
        catch android.os.RemoteException from label10 to label11 with label14;
        catch android.os.RemoteException from label12 to label13 with label14;
    }

    public static void <clinit>()
    {
        <android.telecom.CallScreeningService: java.lang.String SERVICE_INTERFACE> = "android.telecom.CallScreeningService";

        <android.telecom.CallScreeningService: int MSG_SCREEN_CALL> = 1;

        return;
    }
}
