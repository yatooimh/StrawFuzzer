class android.telecom.Conference$FailureSignalingConference extends android.telecom.Conference
{
    private boolean mImmutable;

    public void <init>(android.telecom.DisconnectCause, android.telecom.PhoneAccountHandle)
    {
        android.telecom.Conference$FailureSignalingConference r0;
        android.telecom.DisconnectCause r1;
        android.telecom.PhoneAccountHandle r2;

        r0 := @this: android.telecom.Conference$FailureSignalingConference;

        r1 := @parameter0: android.telecom.DisconnectCause;

        r2 := @parameter1: android.telecom.PhoneAccountHandle;

        specialinvoke r0.<android.telecom.Conference: void <init>(android.telecom.PhoneAccountHandle)>(r2);

        r0.<android.telecom.Conference$FailureSignalingConference: boolean mImmutable> = 0;

        virtualinvoke r0.<android.telecom.Conference$FailureSignalingConference: void setDisconnected(android.telecom.DisconnectCause)>(r1);

        r0.<android.telecom.Conference$FailureSignalingConference: boolean mImmutable> = 1;

        return;
    }

    public void checkImmutable()
    {
        android.telecom.Conference$FailureSignalingConference r0;
        boolean $z0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: android.telecom.Conference$FailureSignalingConference;

        $z0 = r0.<android.telecom.Conference$FailureSignalingConference: boolean mImmutable>;

        if $z0 != 0 goto label1;

        return;

     label1:
        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Conference is immutable");

        throw $r1;
    }
}
