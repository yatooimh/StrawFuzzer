public final class android.telecom.Connection$RttTextStream extends java.lang.Object
{
    private static final int READ_BUFFER_SIZE;
    private final android.os.ParcelFileDescriptor mFdFromInCall;
    private final android.os.ParcelFileDescriptor mFdToInCall;
    private final java.io.FileInputStream mFromInCallFileInputStream;
    private final java.io.InputStreamReader mPipeFromInCall;
    private final java.io.OutputStreamWriter mPipeToInCall;
    private char[] mReadBuffer;

    public void <init>(android.os.ParcelFileDescriptor, android.os.ParcelFileDescriptor)
    {
        android.telecom.Connection$RttTextStream r0;
        android.os.ParcelFileDescriptor r1, r2;
        char[] $r3;
        java.io.FileInputStream $r4, $r7;
        java.io.FileDescriptor $r5, $r12;
        java.io.InputStreamReader $r6;
        java.nio.channels.ReadableByteChannel $r8;
        java.io.InputStream $r9;
        java.io.OutputStreamWriter $r10;
        java.io.FileOutputStream $r11;

        r0 := @this: android.telecom.Connection$RttTextStream;

        r1 := @parameter0: android.os.ParcelFileDescriptor;

        r2 := @parameter1: android.os.ParcelFileDescriptor;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = newarray (char)[1000];

        r0.<android.telecom.Connection$RttTextStream: char[] mReadBuffer> = $r3;

        r0.<android.telecom.Connection$RttTextStream: android.os.ParcelFileDescriptor mFdFromInCall> = r2;

        r0.<android.telecom.Connection$RttTextStream: android.os.ParcelFileDescriptor mFdToInCall> = r1;

        $r4 = new java.io.FileInputStream;

        $r5 = virtualinvoke r2.<android.os.ParcelFileDescriptor: java.io.FileDescriptor getFileDescriptor()>();

        specialinvoke $r4.<java.io.FileInputStream: void <init>(java.io.FileDescriptor)>($r5);

        r0.<android.telecom.Connection$RttTextStream: java.io.FileInputStream mFromInCallFileInputStream> = $r4;

        $r6 = new java.io.InputStreamReader;

        $r7 = r0.<android.telecom.Connection$RttTextStream: java.io.FileInputStream mFromInCallFileInputStream>;

        $r8 = staticinvoke <java.nio.channels.Channels: java.nio.channels.ReadableByteChannel newChannel(java.io.InputStream)>($r7);

        $r9 = staticinvoke <java.nio.channels.Channels: java.io.InputStream newInputStream(java.nio.channels.ReadableByteChannel)>($r8);

        specialinvoke $r6.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r9);

        r0.<android.telecom.Connection$RttTextStream: java.io.InputStreamReader mPipeFromInCall> = $r6;

        $r10 = new java.io.OutputStreamWriter;

        $r11 = new java.io.FileOutputStream;

        $r12 = virtualinvoke r1.<android.os.ParcelFileDescriptor: java.io.FileDescriptor getFileDescriptor()>();

        specialinvoke $r11.<java.io.FileOutputStream: void <init>(java.io.FileDescriptor)>($r12);

        specialinvoke $r10.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream)>($r11);

        r0.<android.telecom.Connection$RttTextStream: java.io.OutputStreamWriter mPipeToInCall> = $r10;

        return;
    }

    public android.os.ParcelFileDescriptor getFdFromInCall()
    {
        android.telecom.Connection$RttTextStream r0;
        android.os.ParcelFileDescriptor $r1;

        r0 := @this: android.telecom.Connection$RttTextStream;

        $r1 = r0.<android.telecom.Connection$RttTextStream: android.os.ParcelFileDescriptor mFdFromInCall>;

        return $r1;
    }

    public android.os.ParcelFileDescriptor getFdToInCall()
    {
        android.telecom.Connection$RttTextStream r0;
        android.os.ParcelFileDescriptor $r1;

        r0 := @this: android.telecom.Connection$RttTextStream;

        $r1 = r0.<android.telecom.Connection$RttTextStream: android.os.ParcelFileDescriptor mFdToInCall>;

        return $r1;
    }

    public java.lang.String read() throws java.io.IOException
    {
        android.telecom.Connection$RttTextStream r0;
        int i0;
        char[] $r1, $r4;
        java.io.InputStreamReader $r2;
        java.lang.String $r3;

        r0 := @this: android.telecom.Connection$RttTextStream;

        $r2 = r0.<android.telecom.Connection$RttTextStream: java.io.InputStreamReader mPipeFromInCall>;

        $r1 = r0.<android.telecom.Connection$RttTextStream: char[] mReadBuffer>;

        i0 = virtualinvoke $r2.<java.io.InputStreamReader: int read(char[],int,int)>($r1, 0, 1000);

        if i0 >= 0 goto label1;

        return null;

     label1:
        $r3 = new java.lang.String;

        $r4 = r0.<android.telecom.Connection$RttTextStream: char[] mReadBuffer>;

        specialinvoke $r3.<java.lang.String: void <init>(char[],int,int)>($r4, 0, i0);

        return $r3;
    }

    public java.lang.String readImmediately() throws java.io.IOException
    {
        android.telecom.Connection$RttTextStream r0;
        java.io.FileInputStream $r1;
        int $i0;
        java.lang.String $r2;

        r0 := @this: android.telecom.Connection$RttTextStream;

        $r1 = r0.<android.telecom.Connection$RttTextStream: java.io.FileInputStream mFromInCallFileInputStream>;

        $i0 = virtualinvoke $r1.<java.io.FileInputStream: int available()>();

        if $i0 <= 0 goto label1;

        $r2 = virtualinvoke r0.<android.telecom.Connection$RttTextStream: java.lang.String read()>();

        return $r2;

     label1:
        return null;
    }

    public void write(java.lang.String) throws java.io.IOException
    {
        android.telecom.Connection$RttTextStream r0;
        java.lang.String r1;
        java.io.OutputStreamWriter $r2, $r3;

        r0 := @this: android.telecom.Connection$RttTextStream;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<android.telecom.Connection$RttTextStream: java.io.OutputStreamWriter mPipeToInCall>;

        virtualinvoke $r2.<java.io.OutputStreamWriter: void write(java.lang.String)>(r1);

        $r3 = r0.<android.telecom.Connection$RttTextStream: java.io.OutputStreamWriter mPipeToInCall>;

        virtualinvoke $r3.<java.io.OutputStreamWriter: void flush()>();

        return;
    }

    public static void <clinit>()
    {
        <android.telecom.Connection$RttTextStream: int READ_BUFFER_SIZE> = 1000;

        return;
    }
}
