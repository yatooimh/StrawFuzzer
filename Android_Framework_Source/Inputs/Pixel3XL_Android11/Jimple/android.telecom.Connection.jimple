public abstract class android.telecom.Connection extends android.telecom.Conferenceable
{
    public static final int AUDIO_CODEC_AMR;
    public static final int AUDIO_CODEC_AMR_WB;
    public static final int AUDIO_CODEC_EVRC;
    public static final int AUDIO_CODEC_EVRC_B;
    public static final int AUDIO_CODEC_EVRC_NW;
    public static final int AUDIO_CODEC_EVRC_WB;
    public static final int AUDIO_CODEC_EVS_FB;
    public static final int AUDIO_CODEC_EVS_NB;
    public static final int AUDIO_CODEC_EVS_SWB;
    public static final int AUDIO_CODEC_EVS_WB;
    public static final int AUDIO_CODEC_G711A;
    public static final int AUDIO_CODEC_G711AB;
    public static final int AUDIO_CODEC_G711U;
    public static final int AUDIO_CODEC_G722;
    public static final int AUDIO_CODEC_G723;
    public static final int AUDIO_CODEC_G729;
    public static final int AUDIO_CODEC_GSM_EFR;
    public static final int AUDIO_CODEC_GSM_FR;
    public static final int AUDIO_CODEC_GSM_HR;
    public static final int AUDIO_CODEC_NONE;
    public static final int AUDIO_CODEC_QCELP13K;
    public static final int CAPABILITY_ADD_PARTICIPANT;
    public static final int CAPABILITY_CANNOT_DOWNGRADE_VIDEO_TO_AUDIO;
    public static final int CAPABILITY_CAN_PAUSE_VIDEO;
    public static final int CAPABILITY_CAN_PULL_CALL;
    public static final int CAPABILITY_CAN_SEND_RESPONSE_VIA_CONNECTION;
    public static final int CAPABILITY_CAN_UPGRADE_TO_VIDEO;
    public static final int CAPABILITY_CONFERENCE_HAS_NO_CHILDREN;
    public static final int CAPABILITY_DISCONNECT_FROM_CONFERENCE;
    public static final int CAPABILITY_HOLD;
    public static final int CAPABILITY_MANAGE_CONFERENCE;
    public static final int CAPABILITY_MERGE_CONFERENCE;
    public static final int CAPABILITY_MUTE;
    public static final int CAPABILITY_RESPOND_VIA_TEXT;
    public static final int CAPABILITY_SEPARATE_FROM_CONFERENCE;
    public static final int CAPABILITY_SPEED_UP_MT_AUDIO;
    public static final int CAPABILITY_SUPPORTS_VT_LOCAL_BIDIRECTIONAL;
    public static final int CAPABILITY_SUPPORTS_VT_LOCAL_RX;
    public static final int CAPABILITY_SUPPORTS_VT_LOCAL_TX;
    public static final int CAPABILITY_SUPPORTS_VT_REMOTE_BIDIRECTIONAL;
    public static final int CAPABILITY_SUPPORTS_VT_REMOTE_RX;
    public static final int CAPABILITY_SUPPORTS_VT_REMOTE_TX;
    public static final int CAPABILITY_SUPPORT_DEFLECT;
    public static final int CAPABILITY_SUPPORT_HOLD;
    public static final int CAPABILITY_SWAP_CONFERENCE;
    public static final int CAPABILITY_TRANSFER;
    public static final int CAPABILITY_TRANSFER_CONSULTATIVE;
    public static final int CAPABILITY_UNUSED;
    public static final int CAPABILITY_UNUSED_2;
    public static final int CAPABILITY_UNUSED_3;
    public static final int CAPABILITY_UNUSED_4;
    public static final int CAPABILITY_UNUSED_5;
    public static final java.lang.String EVENT_CALL_HOLD_FAILED;
    public static final java.lang.String EVENT_CALL_MERGE_FAILED;
    public static final java.lang.String EVENT_CALL_PULL_FAILED;
    public static final java.lang.String EVENT_CALL_REMOTELY_HELD;
    public static final java.lang.String EVENT_CALL_REMOTELY_UNHELD;
    public static final java.lang.String EVENT_CALL_SWITCH_FAILED;
    public static final java.lang.String EVENT_HANDOVER_COMPLETE;
    public static final java.lang.String EVENT_HANDOVER_FAILED;
    public static final java.lang.String EVENT_MERGE_COMPLETE;
    public static final java.lang.String EVENT_MERGE_START;
    public static final java.lang.String EVENT_ON_HOLD_TONE_END;
    public static final java.lang.String EVENT_ON_HOLD_TONE_START;
    public static final java.lang.String EVENT_RTT_AUDIO_INDICATION_CHANGED;
    public static final java.lang.String EXTRA_ANSWERING_DROPS_FG_CALL;
    public static final java.lang.String EXTRA_ANSWERING_DROPS_FG_CALL_APP_NAME;
    public static final java.lang.String EXTRA_AUDIO_CODEC;
    public static final java.lang.String EXTRA_CALL_SUBJECT;
    public static final java.lang.String EXTRA_CHILD_ADDRESS;
    public static final java.lang.String EXTRA_DISABLE_ADD_CALL;
    public static final java.lang.String EXTRA_IS_RTT_AUDIO_PRESENT;
    public static final java.lang.String EXTRA_LAST_FORWARDED_NUMBER;
    public static final java.lang.String EXTRA_ORIGINAL_CONNECTION_ID;
    public static final java.lang.String EXTRA_REMOTE_CONNECTION_ORIGINATING_PACKAGE_NAME;
    public static final java.lang.String EXTRA_REMOTE_PHONE_ACCOUNT_HANDLE;
    public static final java.lang.String EXTRA_SIP_INVITE;
    private static final boolean PII_DEBUG;
    public static final int PROPERTY_ASSISTED_DIALING;
    public static final int PROPERTY_EMERGENCY_CALLBACK_MODE;
    public static final int PROPERTY_GENERIC_CONFERENCE;
    public static final int PROPERTY_HAS_CDMA_VOICE_PRIVACY;
    public static final int PROPERTY_HIGH_DEF_AUDIO;
    public static final int PROPERTY_IS_ADHOC_CONFERENCE;
    public static final int PROPERTY_IS_DOWNGRADED_CONFERENCE;
    public static final int PROPERTY_IS_EXTERNAL_CALL;
    public static final int PROPERTY_IS_RTT;
    public static final int PROPERTY_NETWORK_IDENTIFIED_EMERGENCY_CALL;
    public static final int PROPERTY_REMOTELY_HOSTED;
    public static final int PROPERTY_SELF_MANAGED;
    public static final int PROPERTY_WIFI;
    public static final int STATE_ACTIVE;
    public static final int STATE_DIALING;
    public static final int STATE_DISCONNECTED;
    public static final int STATE_HOLDING;
    public static final int STATE_INITIALIZING;
    public static final int STATE_NEW;
    public static final int STATE_PULLING_CALL;
    public static final int STATE_RINGING;
    public static final int VERIFICATION_STATUS_FAILED;
    public static final int VERIFICATION_STATUS_NOT_VERIFIED;
    public static final int VERIFICATION_STATUS_PASSED;
    private android.net.Uri mAddress;
    private int mAddressPresentation;
    private boolean mAudioModeIsVoip;
    private android.telecom.CallAudioState mCallAudioState;
    private int mCallDirection;
    private java.lang.String mCallerDisplayName;
    private int mCallerDisplayNamePresentation;
    private int mCallerNumberVerificationStatus;
    private android.telecom.Conference mConference;
    private final android.telecom.Conference$Listener mConferenceDeathListener;
    private final java.util.List mConferenceables;
    private long mConnectElapsedTimeMillis;
    private long mConnectTimeMillis;
    private int mConnectionCapabilities;
    private final android.telecom.Connection$Listener mConnectionDeathListener;
    private int mConnectionProperties;
    private android.telecom.ConnectionService mConnectionService;
    private android.telecom.DisconnectCause mDisconnectCause;
    private android.os.Bundle mExtras;
    private final java.lang.Object mExtrasLock;
    private final java.util.Set mListeners;
    private android.telecom.PhoneAccountHandle mPhoneAccountHandle;
    private java.util.Set mPreviousExtraKeys;
    private boolean mRingbackRequested;
    private int mState;
    private android.telecom.StatusHints mStatusHints;
    private int mSupportedAudioRoutes;
    private java.lang.String mTelecomCallId;
    private final java.util.List mUnmodifiableConferenceables;
    private android.telecom.Connection$VideoProvider mVideoProvider;
    private int mVideoState;

    static void <clinit>()
    {
        boolean $z0;

        <android.telecom.Connection: int VERIFICATION_STATUS_PASSED> = 1;

        <android.telecom.Connection: int VERIFICATION_STATUS_NOT_VERIFIED> = 0;

        <android.telecom.Connection: int VERIFICATION_STATUS_FAILED> = 2;

        <android.telecom.Connection: int STATE_RINGING> = 2;

        <android.telecom.Connection: int STATE_PULLING_CALL> = 7;

        <android.telecom.Connection: int STATE_NEW> = 1;

        <android.telecom.Connection: int STATE_INITIALIZING> = 0;

        <android.telecom.Connection: int STATE_HOLDING> = 5;

        <android.telecom.Connection: int STATE_DISCONNECTED> = 6;

        <android.telecom.Connection: int STATE_DIALING> = 3;

        <android.telecom.Connection: int STATE_ACTIVE> = 4;

        <android.telecom.Connection: int PROPERTY_WIFI> = 8;

        <android.telecom.Connection: int PROPERTY_SELF_MANAGED> = 128;

        <android.telecom.Connection: int PROPERTY_REMOTELY_HOSTED> = 2048;

        <android.telecom.Connection: int PROPERTY_NETWORK_IDENTIFIED_EMERGENCY_CALL> = 1024;

        <android.telecom.Connection: int PROPERTY_IS_RTT> = 256;

        <android.telecom.Connection: int PROPERTY_IS_EXTERNAL_CALL> = 16;

        <android.telecom.Connection: int PROPERTY_IS_DOWNGRADED_CONFERENCE> = 64;

        <android.telecom.Connection: int PROPERTY_IS_ADHOC_CONFERENCE> = 4096;

        <android.telecom.Connection: int PROPERTY_HIGH_DEF_AUDIO> = 4;

        <android.telecom.Connection: int PROPERTY_HAS_CDMA_VOICE_PRIVACY> = 32;

        <android.telecom.Connection: int PROPERTY_GENERIC_CONFERENCE> = 2;

        <android.telecom.Connection: int PROPERTY_EMERGENCY_CALLBACK_MODE> = 1;

        <android.telecom.Connection: int PROPERTY_ASSISTED_DIALING> = 512;

        <android.telecom.Connection: java.lang.String EXTRA_SIP_INVITE> = "android.telecom.extra.SIP_INVITE";

        <android.telecom.Connection: java.lang.String EXTRA_REMOTE_PHONE_ACCOUNT_HANDLE> = "android.telecom.extra.REMOTE_PHONE_ACCOUNT_HANDLE";

        <android.telecom.Connection: java.lang.String EXTRA_REMOTE_CONNECTION_ORIGINATING_PACKAGE_NAME> = "android.telecom.extra.REMOTE_CONNECTION_ORIGINATING_PACKAGE_NAME";

        <android.telecom.Connection: java.lang.String EXTRA_ORIGINAL_CONNECTION_ID> = "android.telecom.extra.ORIGINAL_CONNECTION_ID";

        <android.telecom.Connection: java.lang.String EXTRA_LAST_FORWARDED_NUMBER> = "android.telecom.extra.LAST_FORWARDED_NUMBER";

        <android.telecom.Connection: java.lang.String EXTRA_IS_RTT_AUDIO_PRESENT> = "android.telecom.extra.IS_RTT_AUDIO_PRESENT";

        <android.telecom.Connection: java.lang.String EXTRA_DISABLE_ADD_CALL> = "android.telecom.extra.DISABLE_ADD_CALL";

        <android.telecom.Connection: java.lang.String EXTRA_CHILD_ADDRESS> = "android.telecom.extra.CHILD_ADDRESS";

        <android.telecom.Connection: java.lang.String EXTRA_CALL_SUBJECT> = "android.telecom.extra.CALL_SUBJECT";

        <android.telecom.Connection: java.lang.String EXTRA_AUDIO_CODEC> = "android.telecom.extra.AUDIO_CODEC";

        <android.telecom.Connection: java.lang.String EXTRA_ANSWERING_DROPS_FG_CALL_APP_NAME> = "android.telecom.extra.ANSWERING_DROPS_FG_CALL_APP_NAME";

        <android.telecom.Connection: java.lang.String EXTRA_ANSWERING_DROPS_FG_CALL> = "android.telecom.extra.ANSWERING_DROPS_FG_CALL";

        <android.telecom.Connection: java.lang.String EVENT_RTT_AUDIO_INDICATION_CHANGED> = "android.telecom.event.RTT_AUDIO_INDICATION_CHANGED";

        <android.telecom.Connection: java.lang.String EVENT_ON_HOLD_TONE_START> = "android.telecom.event.ON_HOLD_TONE_START";

        <android.telecom.Connection: java.lang.String EVENT_ON_HOLD_TONE_END> = "android.telecom.event.ON_HOLD_TONE_END";

        <android.telecom.Connection: java.lang.String EVENT_MERGE_START> = "android.telecom.event.MERGE_START";

        <android.telecom.Connection: java.lang.String EVENT_MERGE_COMPLETE> = "android.telecom.event.MERGE_COMPLETE";

        <android.telecom.Connection: java.lang.String EVENT_HANDOVER_FAILED> = "android.telecom.event.HANDOVER_FAILED";

        <android.telecom.Connection: java.lang.String EVENT_HANDOVER_COMPLETE> = "android.telecom.event.HANDOVER_COMPLETE";

        <android.telecom.Connection: java.lang.String EVENT_CALL_SWITCH_FAILED> = "android.telecom.event.CALL_SWITCH_FAILED";

        <android.telecom.Connection: java.lang.String EVENT_CALL_REMOTELY_UNHELD> = "android.telecom.event.CALL_REMOTELY_UNHELD";

        <android.telecom.Connection: java.lang.String EVENT_CALL_REMOTELY_HELD> = "android.telecom.event.CALL_REMOTELY_HELD";

        <android.telecom.Connection: java.lang.String EVENT_CALL_PULL_FAILED> = "android.telecom.event.CALL_PULL_FAILED";

        <android.telecom.Connection: java.lang.String EVENT_CALL_MERGE_FAILED> = "android.telecom.event.CALL_MERGE_FAILED";

        <android.telecom.Connection: java.lang.String EVENT_CALL_HOLD_FAILED> = "android.telecom.event.CALL_HOLD_FAILED";

        <android.telecom.Connection: int CAPABILITY_UNUSED_5> = 131072;

        <android.telecom.Connection: int CAPABILITY_UNUSED_4> = 65536;

        <android.telecom.Connection: int CAPABILITY_UNUSED_3> = 32768;

        <android.telecom.Connection: int CAPABILITY_UNUSED_2> = 16384;

        <android.telecom.Connection: int CAPABILITY_UNUSED> = 16;

        <android.telecom.Connection: int CAPABILITY_TRANSFER_CONSULTATIVE> = 268435456;

        <android.telecom.Connection: int CAPABILITY_TRANSFER> = 134217728;

        <android.telecom.Connection: int CAPABILITY_SWAP_CONFERENCE> = 8;

        <android.telecom.Connection: int CAPABILITY_SUPPORT_HOLD> = 2;

        <android.telecom.Connection: int CAPABILITY_SUPPORT_DEFLECT> = 33554432;

        <android.telecom.Connection: int CAPABILITY_SUPPORTS_VT_REMOTE_TX> = 2048;

        <android.telecom.Connection: int CAPABILITY_SUPPORTS_VT_REMOTE_RX> = 1024;

        <android.telecom.Connection: int CAPABILITY_SUPPORTS_VT_REMOTE_BIDIRECTIONAL> = 3072;

        <android.telecom.Connection: int CAPABILITY_SUPPORTS_VT_LOCAL_TX> = 512;

        <android.telecom.Connection: int CAPABILITY_SUPPORTS_VT_LOCAL_RX> = 256;

        <android.telecom.Connection: int CAPABILITY_SUPPORTS_VT_LOCAL_BIDIRECTIONAL> = 768;

        <android.telecom.Connection: int CAPABILITY_SPEED_UP_MT_AUDIO> = 262144;

        <android.telecom.Connection: int CAPABILITY_SEPARATE_FROM_CONFERENCE> = 4096;

        <android.telecom.Connection: int CAPABILITY_RESPOND_VIA_TEXT> = 32;

        <android.telecom.Connection: int CAPABILITY_MUTE> = 64;

        <android.telecom.Connection: int CAPABILITY_MERGE_CONFERENCE> = 4;

        <android.telecom.Connection: int CAPABILITY_MANAGE_CONFERENCE> = 128;

        <android.telecom.Connection: int CAPABILITY_HOLD> = 1;

        <android.telecom.Connection: int CAPABILITY_DISCONNECT_FROM_CONFERENCE> = 8192;

        <android.telecom.Connection: int CAPABILITY_CONFERENCE_HAS_NO_CHILDREN> = 2097152;

        <android.telecom.Connection: int CAPABILITY_CAN_UPGRADE_TO_VIDEO> = 524288;

        <android.telecom.Connection: int CAPABILITY_CAN_SEND_RESPONSE_VIA_CONNECTION> = 4194304;

        <android.telecom.Connection: int CAPABILITY_CAN_PULL_CALL> = 16777216;

        <android.telecom.Connection: int CAPABILITY_CAN_PAUSE_VIDEO> = 1048576;

        <android.telecom.Connection: int CAPABILITY_CANNOT_DOWNGRADE_VIDEO_TO_AUDIO> = 8388608;

        <android.telecom.Connection: int CAPABILITY_ADD_PARTICIPANT> = 67108864;

        <android.telecom.Connection: int AUDIO_CODEC_QCELP13K> = 3;

        <android.telecom.Connection: int AUDIO_CODEC_NONE> = 0;

        <android.telecom.Connection: int AUDIO_CODEC_GSM_HR> = 10;

        <android.telecom.Connection: int AUDIO_CODEC_GSM_FR> = 9;

        <android.telecom.Connection: int AUDIO_CODEC_GSM_EFR> = 8;

        <android.telecom.Connection: int AUDIO_CODEC_G729> = 16;

        <android.telecom.Connection: int AUDIO_CODEC_G723> = 12;

        <android.telecom.Connection: int AUDIO_CODEC_G722> = 14;

        <android.telecom.Connection: int AUDIO_CODEC_G711U> = 11;

        <android.telecom.Connection: int AUDIO_CODEC_G711AB> = 15;

        <android.telecom.Connection: int AUDIO_CODEC_G711A> = 13;

        <android.telecom.Connection: int AUDIO_CODEC_EVS_WB> = 18;

        <android.telecom.Connection: int AUDIO_CODEC_EVS_SWB> = 19;

        <android.telecom.Connection: int AUDIO_CODEC_EVS_NB> = 17;

        <android.telecom.Connection: int AUDIO_CODEC_EVS_FB> = 20;

        <android.telecom.Connection: int AUDIO_CODEC_EVRC_WB> = 6;

        <android.telecom.Connection: int AUDIO_CODEC_EVRC_NW> = 7;

        <android.telecom.Connection: int AUDIO_CODEC_EVRC_B> = 5;

        <android.telecom.Connection: int AUDIO_CODEC_EVRC> = 4;

        <android.telecom.Connection: int AUDIO_CODEC_AMR_WB> = 2;

        <android.telecom.Connection: int AUDIO_CODEC_AMR> = 1;

        $z0 = staticinvoke <android.telecom.Log: boolean isLoggable(int)>(3);

        <android.telecom.Connection: boolean PII_DEBUG> = $z0;

        return;
    }

    public void <init>()
    {
        android.telecom.Connection r0;
        android.telecom.Connection$1 $r2;
        android.telecom.Connection$2 $r3;
        java.util.concurrent.ConcurrentHashMap $r4;
        java.util.Set $r5;
        java.util.ArrayList $r6;
        java.util.List $r7;
        java.lang.Object $r8;

        r0 := @this: android.telecom.Connection;

        specialinvoke r0.<android.telecom.Conferenceable: void <init>()>();

        $r2 = new android.telecom.Connection$1;

        specialinvoke $r2.<android.telecom.Connection$1: void <init>(android.telecom.Connection)>(r0);

        r0.<android.telecom.Connection: android.telecom.Connection$Listener mConnectionDeathListener> = $r2;

        $r3 = new android.telecom.Connection$2;

        specialinvoke $r3.<android.telecom.Connection$2: void <init>(android.telecom.Connection)>(r0);

        r0.<android.telecom.Connection: android.telecom.Conference$Listener mConferenceDeathListener> = $r3;

        $r4 = new java.util.concurrent.ConcurrentHashMap;

        specialinvoke $r4.<java.util.concurrent.ConcurrentHashMap: void <init>(int,float,int)>(8, 0.9F, 1);

        $r5 = staticinvoke <java.util.Collections: java.util.Set newSetFromMap(java.util.Map)>($r4);

        r0.<android.telecom.Connection: java.util.Set mListeners> = $r5;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r0.<android.telecom.Connection: java.util.List mConferenceables> = $r6;

        $r7 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r6);

        r0.<android.telecom.Connection: java.util.List mUnmodifiableConferenceables> = $r7;

        r0.<android.telecom.Connection: int mState> = 1;

        r0.<android.telecom.Connection: boolean mRingbackRequested> = 0;

        r0.<android.telecom.Connection: int mSupportedAudioRoutes> = 15;

        r0.<android.telecom.Connection: long mConnectTimeMillis> = 0L;

        r0.<android.telecom.Connection: long mConnectElapsedTimeMillis> = 0L;

        $r8 = new java.lang.Object;

        specialinvoke $r8.<java.lang.Object: void <init>()>();

        r0.<android.telecom.Connection: java.lang.Object mExtrasLock> = $r8;

        r0.<android.telecom.Connection: int mCallDirection> = -1;

        return;
    }

    static java.util.List access$300(android.telecom.Connection)
    {
        android.telecom.Connection r0;
        java.util.List $r1;

        r0 := @parameter0: android.telecom.Connection;

        $r1 = r0.<android.telecom.Connection: java.util.List mConferenceables>;

        return $r1;
    }

    static void access$400(android.telecom.Connection)
    {
        android.telecom.Connection r0;

        r0 := @parameter0: android.telecom.Connection;

        specialinvoke r0.<android.telecom.Connection: void fireOnConferenceableConnectionsChanged()>();

        return;
    }

    public static java.lang.String capabilitiesToString(int)
    {
        int i0;
        java.lang.String $r0;

        i0 := @parameter0: int;

        $r0 = staticinvoke <android.telecom.Connection: java.lang.String capabilitiesToStringInternal(int,boolean)>(i0, 1);

        return $r0;
    }

    private static java.lang.String capabilitiesToStringInternal(int, boolean)
    {
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24;
        boolean z0;
        java.lang.StringBuilder $r1;
        java.lang.String r29, r30, r31, r32, r33, r34, r35, r36, r37, r38, r39, r40, r41, r42, r43, r44, r45, r46, r47, r48, r49, r50, r51, r52, $r53;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        if z0 == 0 goto label01;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Capabilities:");

     label01:
        $i1 = i0 & 1;

        if $i1 != 1 goto label04;

        if z0 == 0 goto label02;

        r29 = " CAPABILITY_HOLD";

        goto label03;

     label02:
        r29 = " hld";

     label03:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r29);

     label04:
        $i2 = i0 & 2;

        if $i2 != 2 goto label07;

        if z0 == 0 goto label05;

        r30 = " CAPABILITY_SUPPORT_HOLD";

        goto label06;

     label05:
        r30 = " sup_hld";

     label06:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r30);

     label07:
        $i3 = i0 & 4;

        if $i3 != 4 goto label10;

        if z0 == 0 goto label08;

        r31 = " CAPABILITY_MERGE_CONFERENCE";

        goto label09;

     label08:
        r31 = " mrg_cnf";

     label09:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r31);

     label10:
        $i4 = i0 & 8;

        if $i4 != 8 goto label13;

        if z0 == 0 goto label11;

        r32 = " CAPABILITY_SWAP_CONFERENCE";

        goto label12;

     label11:
        r32 = " swp_cnf";

     label12:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r32);

     label13:
        $i5 = i0 & 32;

        if $i5 != 32 goto label16;

        if z0 == 0 goto label14;

        r33 = " CAPABILITY_RESPOND_VIA_TEXT";

        goto label15;

     label14:
        r33 = " txt";

     label15:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r33);

     label16:
        $i6 = i0 & 64;

        if $i6 != 64 goto label19;

        if z0 == 0 goto label17;

        r34 = " CAPABILITY_MUTE";

        goto label18;

     label17:
        r34 = " mut";

     label18:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r34);

     label19:
        $i7 = i0 & 128;

        if $i7 != 128 goto label22;

        if z0 == 0 goto label20;

        r35 = " CAPABILITY_MANAGE_CONFERENCE";

        goto label21;

     label20:
        r35 = " mng_cnf";

     label21:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r35);

     label22:
        $i8 = i0 & 256;

        if $i8 != 256 goto label25;

        if z0 == 0 goto label23;

        r36 = " CAPABILITY_SUPPORTS_VT_LOCAL_RX";

        goto label24;

     label23:
        r36 = " VTlrx";

     label24:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r36);

     label25:
        $i9 = i0 & 512;

        if $i9 != 512 goto label28;

        if z0 == 0 goto label26;

        r37 = " CAPABILITY_SUPPORTS_VT_LOCAL_TX";

        goto label27;

     label26:
        r37 = " VTltx";

     label27:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r37);

     label28:
        $i10 = i0 & 768;

        if $i10 != 768 goto label31;

        if z0 == 0 goto label29;

        r38 = " CAPABILITY_SUPPORTS_VT_LOCAL_BIDIRECTIONAL";

        goto label30;

     label29:
        r38 = " VTlbi";

     label30:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r38);

     label31:
        $i11 = i0 & 1024;

        if $i11 != 1024 goto label34;

        if z0 == 0 goto label32;

        r39 = " CAPABILITY_SUPPORTS_VT_REMOTE_RX";

        goto label33;

     label32:
        r39 = " VTrrx";

     label33:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r39);

     label34:
        $i12 = i0 & 2048;

        if $i12 != 2048 goto label37;

        if z0 == 0 goto label35;

        r40 = " CAPABILITY_SUPPORTS_VT_REMOTE_TX";

        goto label36;

     label35:
        r40 = " VTrtx";

     label36:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r40);

     label37:
        $i13 = i0 & 3072;

        if $i13 != 3072 goto label40;

        if z0 == 0 goto label38;

        r41 = " CAPABILITY_SUPPORTS_VT_REMOTE_BIDIRECTIONAL";

        goto label39;

     label38:
        r41 = " VTrbi";

     label39:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r41);

     label40:
        $i14 = i0 & 8388608;

        if $i14 != 8388608 goto label43;

        if z0 == 0 goto label41;

        r42 = " CAPABILITY_CANNOT_DOWNGRADE_VIDEO_TO_AUDIO";

        goto label42;

     label41:
        r42 = " !v2a";

     label42:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r42);

     label43:
        $i15 = i0 & 262144;

        if $i15 != 262144 goto label46;

        if z0 == 0 goto label44;

        r43 = " CAPABILITY_SPEED_UP_MT_AUDIO";

        goto label45;

     label44:
        r43 = " spd_aud";

     label45:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r43);

     label46:
        $i16 = i0 & 524288;

        if $i16 != 524288 goto label49;

        if z0 == 0 goto label47;

        r44 = " CAPABILITY_CAN_UPGRADE_TO_VIDEO";

        goto label48;

     label47:
        r44 = " a2v";

     label48:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r44);

     label49:
        $i17 = i0 & 1048576;

        if $i17 != 1048576 goto label52;

        if z0 == 0 goto label50;

        r45 = " CAPABILITY_CAN_PAUSE_VIDEO";

        goto label51;

     label50:
        r45 = " paus_VT";

     label51:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r45);

     label52:
        $i18 = i0 & 2097152;

        if $i18 != 2097152 goto label55;

        if z0 == 0 goto label53;

        r46 = " CAPABILITY_SINGLE_PARTY_CONFERENCE";

        goto label54;

     label53:
        r46 = " 1p_cnf";

     label54:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r46);

     label55:
        $i19 = i0 & 4194304;

        if $i19 != 4194304 goto label58;

        if z0 == 0 goto label56;

        r47 = " CAPABILITY_CAN_SEND_RESPONSE_VIA_CONNECTION";

        goto label57;

     label56:
        r47 = " rsp_by_con";

     label57:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r47);

     label58:
        $i20 = i0 & 16777216;

        if $i20 != 16777216 goto label61;

        if z0 == 0 goto label59;

        r48 = " CAPABILITY_CAN_PULL_CALL";

        goto label60;

     label59:
        r48 = " pull";

     label60:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r48);

     label61:
        $i21 = i0 & 33554432;

        if $i21 != 33554432 goto label64;

        if z0 == 0 goto label62;

        r49 = " CAPABILITY_SUPPORT_DEFLECT";

        goto label63;

     label62:
        r49 = " sup_def";

     label63:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r49);

     label64:
        $i22 = i0 & 67108864;

        if $i22 != 67108864 goto label67;

        if z0 == 0 goto label65;

        r50 = " CAPABILITY_ADD_PARTICIPANT";

        goto label66;

     label65:
        r50 = " add_participant";

     label66:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r50);

     label67:
        $i23 = 134217728 & i0;

        if $i23 != 134217728 goto label70;

        if z0 == 0 goto label68;

        r51 = " CAPABILITY_TRANSFER";

        goto label69;

     label68:
        r51 = " sup_trans";

     label69:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r51);

     label70:
        $i24 = 268435456 & i0;

        if $i24 != 268435456 goto label73;

        if z0 == 0 goto label71;

        r52 = " CAPABILITY_TRANSFER_CONSULTATIVE";

        goto label72;

     label71:
        r52 = " sup_cTrans";

     label72:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r52);

     label73:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r53 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r53;
    }

    public static java.lang.String capabilitiesToStringShort(int)
    {
        int i0;
        java.lang.String $r0;

        i0 := @parameter0: int;

        $r0 = staticinvoke <android.telecom.Connection: java.lang.String capabilitiesToStringInternal(int,boolean)>(i0, 0);

        return $r0;
    }

    private final void clearConferenceableList()
    {
        android.telecom.Connection r0, $r10;
        java.util.Iterator r1;
        android.telecom.Conferenceable r2;
        java.util.List $r3, $r4;
        boolean $z0, $z1, $z2;
        java.lang.Object $r5;
        android.telecom.Conference$Listener $r6;
        android.telecom.Conference $r7;
        android.telecom.Connection$Listener $r9;

        r0 := @this: android.telecom.Connection;

        $r3 = r0.<android.telecom.Connection: java.util.List mConferenceables>;

        r1 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r5 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (android.telecom.Conferenceable) $r5;

        $z1 = r2 instanceof android.telecom.Connection;

        if $z1 == 0 goto label2;

        $r10 = (android.telecom.Connection) r2;

        $r9 = r0.<android.telecom.Connection: android.telecom.Connection$Listener mConnectionDeathListener>;

        virtualinvoke $r10.<android.telecom.Connection: android.telecom.Connection removeConnectionListener(android.telecom.Connection$Listener)>($r9);

        goto label3;

     label2:
        $z2 = r2 instanceof android.telecom.Conference;

        if $z2 == 0 goto label3;

        $r7 = (android.telecom.Conference) r2;

        $r6 = r0.<android.telecom.Connection: android.telecom.Conference$Listener mConferenceDeathListener>;

        virtualinvoke $r7.<android.telecom.Conference: android.telecom.Conference removeListener(android.telecom.Conference$Listener)>($r6);

        goto label3;

     label3:
        goto label1;

     label4:
        $r4 = r0.<android.telecom.Connection: java.util.List mConferenceables>;

        interfaceinvoke $r4.<java.util.List: void clear()>();

        return;
    }

    public static android.telecom.Connection createCanceledConnection()
    {
        android.telecom.Connection$FailureSignalingConnection $r0;
        android.telecom.DisconnectCause $r1;

        $r0 = new android.telecom.Connection$FailureSignalingConnection;

        $r1 = new android.telecom.DisconnectCause;

        specialinvoke $r1.<android.telecom.DisconnectCause: void <init>(int)>(4);

        specialinvoke $r0.<android.telecom.Connection$FailureSignalingConnection: void <init>(android.telecom.DisconnectCause)>($r1);

        return $r0;
    }

    public static android.telecom.Connection createFailedConnection(android.telecom.DisconnectCause)
    {
        android.telecom.DisconnectCause r0;
        android.telecom.Connection$FailureSignalingConnection $r1;

        r0 := @parameter0: android.telecom.DisconnectCause;

        $r1 = new android.telecom.Connection$FailureSignalingConnection;

        specialinvoke $r1.<android.telecom.Connection$FailureSignalingConnection: void <init>(android.telecom.DisconnectCause)>(r0);

        return $r1;
    }

    private final void fireConferenceChanged()
    {
        android.telecom.Connection r0;
        java.util.Iterator r1;
        java.util.Set $r2;
        boolean $z0;
        java.lang.Object $r3;
        android.telecom.Conference $r4;
        android.telecom.Connection$Listener $r5;

        r0 := @this: android.telecom.Connection;

        $r2 = r0.<android.telecom.Connection: java.util.Set mListeners>;

        r1 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (android.telecom.Connection$Listener) $r3;

        $r4 = r0.<android.telecom.Connection: android.telecom.Conference mConference>;

        virtualinvoke $r5.<android.telecom.Connection$Listener: void onConferenceChanged(android.telecom.Connection,android.telecom.Conference)>(r0, $r4);

        goto label1;

     label2:
        return;
    }

    private final void fireOnConferenceableConnectionsChanged()
    {
        android.telecom.Connection r0;
        java.util.Iterator r1;
        java.util.Set $r2;
        boolean $z0;
        java.lang.Object $r3;
        android.telecom.Connection$Listener $r4;
        java.util.List $r5;

        r0 := @this: android.telecom.Connection;

        $r2 = r0.<android.telecom.Connection: java.util.Set mListeners>;

        r1 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (android.telecom.Connection$Listener) $r3;

        $r5 = virtualinvoke r0.<android.telecom.Connection: java.util.List getConferenceables()>();

        virtualinvoke $r4.<android.telecom.Connection$Listener: void onConferenceablesChanged(android.telecom.Connection,java.util.List)>(r0, $r5);

        goto label1;

     label2:
        return;
    }

    public static java.lang.String propertiesToString(int)
    {
        int i0;
        java.lang.String $r0;

        i0 := @parameter0: int;

        $r0 = staticinvoke <android.telecom.Connection: java.lang.String propertiesToStringInternal(int,boolean)>(i0, 1);

        return $r0;
    }

    private static java.lang.String propertiesToStringInternal(int, boolean)
    {
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        boolean z0;
        java.lang.StringBuilder $r1;
        java.lang.String r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26, $r27;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        if z0 == 0 goto label01;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Properties:");

     label01:
        $i1 = i0 & 128;

        if $i1 != 128 goto label04;

        if z0 == 0 goto label02;

        r16 = " PROPERTY_SELF_MANAGED";

        goto label03;

     label02:
        r16 = " self_mng";

     label03:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r16);

     label04:
        $i2 = i0 & 1;

        if $i2 != 1 goto label07;

        if z0 == 0 goto label05;

        r17 = " PROPERTY_EMERGENCY_CALLBACK_MODE";

        goto label06;

     label05:
        r17 = " ecbm";

     label06:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r17);

     label07:
        $i3 = i0 & 4;

        if $i3 != 4 goto label10;

        if z0 == 0 goto label08;

        r18 = " PROPERTY_HIGH_DEF_AUDIO";

        goto label09;

     label08:
        r18 = " HD";

     label09:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r18);

     label10:
        $i4 = i0 & 8;

        if $i4 != 8 goto label13;

        if z0 == 0 goto label11;

        r19 = " PROPERTY_WIFI";

        goto label12;

     label11:
        r19 = " wifi";

     label12:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r19);

     label13:
        $i5 = i0 & 2;

        if $i5 != 2 goto label16;

        if z0 == 0 goto label14;

        r20 = " PROPERTY_GENERIC_CONFERENCE";

        goto label15;

     label14:
        r20 = " gen_conf";

     label15:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r20);

     label16:
        $i6 = i0 & 16;

        if $i6 != 16 goto label19;

        if z0 == 0 goto label17;

        r21 = " PROPERTY_IS_EXTERNAL_CALL";

        goto label18;

     label17:
        r21 = " xtrnl";

     label18:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r21);

     label19:
        $i7 = i0 & 32;

        if $i7 != 32 goto label22;

        if z0 == 0 goto label20;

        r22 = " PROPERTY_HAS_CDMA_VOICE_PRIVACY";

        goto label21;

     label20:
        r22 = " priv";

     label21:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r22);

     label22:
        $i8 = i0 & 256;

        if $i8 != 256 goto label25;

        if z0 == 0 goto label23;

        r23 = " PROPERTY_IS_RTT";

        goto label24;

     label23:
        r23 = " rtt";

     label24:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r23);

     label25:
        $i9 = i0 & 1024;

        if $i9 != 1024 goto label28;

        if z0 == 0 goto label26;

        r24 = " PROPERTY_NETWORK_IDENTIFIED_EMERGENCY_CALL";

        goto label27;

     label26:
        r24 = " ecall";

     label27:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r24);

     label28:
        $i10 = i0 & 2048;

        if $i10 != 2048 goto label31;

        if z0 == 0 goto label29;

        r25 = " PROPERTY_REMOTELY_HOSTED";

        goto label30;

     label29:
        r25 = " remote_hst";

     label30:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r25);

     label31:
        $i11 = i0 & 4096;

        if $i11 != 4096 goto label34;

        if z0 == 0 goto label32;

        r26 = " PROPERTY_IS_ADHOC_CONFERENCE";

        goto label33;

     label32:
        r26 = " adhoc_conf";

     label33:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r26);

     label34:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r27 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r27;
    }

    public static java.lang.String propertiesToStringShort(int)
    {
        int i0;
        java.lang.String $r0;

        i0 := @parameter0: int;

        $r0 = staticinvoke <android.telecom.Connection: java.lang.String propertiesToStringInternal(int,boolean)>(i0, 0);

        return $r0;
    }

    private void setState(int)
    {
        android.telecom.Connection r0;
        int i0, i1, $i2;
        java.util.Iterator r1;
        java.lang.Object[] $r2, $r7;
        java.lang.String $r3;
        java.util.Set $r4;
        boolean $z0;
        java.lang.Object $r5;
        android.telecom.Connection$Listener $r6;

        r0 := @this: android.telecom.Connection;

        i0 := @parameter0: int;

        virtualinvoke r0.<android.telecom.Connection: void checkImmutable()>();

        i1 = r0.<android.telecom.Connection: int mState>;

        if i1 != 6 goto label1;

        if i1 == i0 goto label1;

        $r7 = newarray (java.lang.Object)[0];

        staticinvoke <android.telecom.Log: void d(java.lang.Object,java.lang.String,java.lang.Object[])>(r0, "Connection already DISCONNECTED; cannot transition out of this state.", $r7);

        return;

     label1:
        $i2 = r0.<android.telecom.Connection: int mState>;

        if $i2 == i0 goto label3;

        $r2 = newarray (java.lang.Object)[1];

        $r3 = staticinvoke <android.telecom.Connection: java.lang.String stateToString(int)>(i0);

        $r2[0] = $r3;

        staticinvoke <android.telecom.Log: void d(java.lang.Object,java.lang.String,java.lang.Object[])>(r0, "setState: %s", $r2);

        r0.<android.telecom.Connection: int mState> = i0;

        virtualinvoke r0.<android.telecom.Connection: void onStateChanged(int)>(i0);

        $r4 = r0.<android.telecom.Connection: java.util.Set mListeners>;

        r1 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (android.telecom.Connection$Listener) $r5;

        virtualinvoke $r6.<android.telecom.Connection$Listener: void onStateChanged(android.telecom.Connection,int)>(r0, i0);

        goto label2;

     label3:
        return;
    }

    public static java.lang.String stateToString(int)
    {
        int i0;
        java.lang.Object[] $r0;
        java.lang.Integer $r1;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 0: goto label9;
            case 1: goto label8;
            case 2: goto label7;
            case 3: goto label6;
            case 4: goto label5;
            case 5: goto label4;
            case 6: goto label3;
            case 7: goto label2;
            default: goto label1;
        };

     label1:
        $r0 = newarray (java.lang.Object)[1];

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r0[0] = $r1;

        staticinvoke <android.telecom.Log: void wtf(java.lang.Object,java.lang.String,java.lang.Object[])>(class "Landroid/telecom/Connection;", "Unknown state %d", $r0);

        return "UNKNOWN";

     label2:
        return "PULLING_CALL";

     label3:
        return "DISCONNECTED";

     label4:
        return "HOLDING";

     label5:
        return "ACTIVE";

     label6:
        return "DIALING";

     label7:
        return "RINGING";

     label8:
        return "NEW";

     label9:
        return "INITIALIZING";
    }

    static java.lang.String toLogSafePhoneNumber(java.lang.String)
    {
        java.lang.String r0, $r3;
        char c0;
        boolean $z0;
        java.lang.StringBuilder $r2;
        int $i1, i2;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        return "";

     label1:
        $z0 = <android.telecom.Connection: boolean PII_DEBUG>;

        if $z0 == 0 goto label2;

        return r0;

     label2:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        i2 = 0;

     label3:
        $i1 = virtualinvoke r0.<java.lang.String: int length()>();

        if i2 >= $i1 goto label7;

        c0 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i2);

        if c0 == 45 goto label5;

        if c0 == 64 goto label5;

        if c0 != 46 goto label4;

        goto label5;

     label4:
        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(120);

        goto label6;

     label5:
        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c0);

     label6:
        i2 = i2 + 1;

        goto label3;

     label7:
        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }

    final android.telecom.Connection addConnectionListener(android.telecom.Connection$Listener)
    {
        android.telecom.Connection r0;
        android.telecom.Connection$Listener r1;
        java.util.Set $r2;

        r0 := @this: android.telecom.Connection;

        r1 := @parameter0: android.telecom.Connection$Listener;

        $r2 = r0.<android.telecom.Connection: java.util.Set mListeners>;

        interfaceinvoke $r2.<java.util.Set: boolean add(java.lang.Object)>(r1);

        return r0;
    }

    public void checkImmutable()
    {
        android.telecom.Connection r0;

        r0 := @this: android.telecom.Connection;

        return;
    }

    public final void destroy()
    {
        android.telecom.Connection r0;
        java.util.Iterator r1;
        java.util.Set $r2;
        boolean $z0;
        java.lang.Object $r3;
        android.telecom.Connection$Listener $r4;

        r0 := @this: android.telecom.Connection;

        $r2 = r0.<android.telecom.Connection: java.util.Set mListeners>;

        r1 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (android.telecom.Connection$Listener) $r3;

        virtualinvoke $r4.<android.telecom.Connection$Listener: void onDestroyed(android.telecom.Connection)>(r0);

        goto label1;

     label2:
        return;
    }

    public final android.net.Uri getAddress()
    {
        android.telecom.Connection r0;
        android.net.Uri $r1;

        r0 := @this: android.telecom.Connection;

        $r1 = r0.<android.telecom.Connection: android.net.Uri mAddress>;

        return $r1;
    }

    public final int getAddressPresentation()
    {
        android.telecom.Connection r0;
        int $i0;

        r0 := @this: android.telecom.Connection;

        $i0 = r0.<android.telecom.Connection: int mAddressPresentation>;

        return $i0;
    }

    public final boolean getAudioModeIsVoip()
    {
        android.telecom.Connection r0;
        boolean $z0;

        r0 := @this: android.telecom.Connection;

        $z0 = r0.<android.telecom.Connection: boolean mAudioModeIsVoip>;

        return $z0;
    }

    public final android.telecom.AudioState getAudioState()
    {
        android.telecom.Connection r0;
        android.telecom.CallAudioState $r1, $r3;
        android.telecom.AudioState $r2;

        r0 := @this: android.telecom.Connection;

        $r1 = r0.<android.telecom.Connection: android.telecom.CallAudioState mCallAudioState>;

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = new android.telecom.AudioState;

        $r3 = r0.<android.telecom.Connection: android.telecom.CallAudioState mCallAudioState>;

        specialinvoke $r2.<android.telecom.AudioState: void <init>(android.telecom.CallAudioState)>($r3);

        return $r2;
    }

    public final android.telecom.CallAudioState getCallAudioState()
    {
        android.telecom.Connection r0;
        android.telecom.CallAudioState $r1;

        r0 := @this: android.telecom.Connection;

        $r1 = r0.<android.telecom.Connection: android.telecom.CallAudioState mCallAudioState>;

        return $r1;
    }

    public final int getCallDirection()
    {
        android.telecom.Connection r0;
        int $i0;

        r0 := @this: android.telecom.Connection;

        $i0 = r0.<android.telecom.Connection: int mCallDirection>;

        return $i0;
    }

    public final java.lang.String getCallerDisplayName()
    {
        android.telecom.Connection r0;
        java.lang.String $r1;

        r0 := @this: android.telecom.Connection;

        $r1 = r0.<android.telecom.Connection: java.lang.String mCallerDisplayName>;

        return $r1;
    }

    public final int getCallerDisplayNamePresentation()
    {
        android.telecom.Connection r0;
        int $i0;

        r0 := @this: android.telecom.Connection;

        $i0 = r0.<android.telecom.Connection: int mCallerDisplayNamePresentation>;

        return $i0;
    }

    public final int getCallerNumberVerificationStatus()
    {
        android.telecom.Connection r0;
        int $i0;

        r0 := @this: android.telecom.Connection;

        $i0 = r0.<android.telecom.Connection: int mCallerNumberVerificationStatus>;

        return $i0;
    }

    public final android.telecom.Conference getConference()
    {
        android.telecom.Connection r0;
        android.telecom.Conference $r1;

        r0 := @this: android.telecom.Connection;

        $r1 = r0.<android.telecom.Connection: android.telecom.Conference mConference>;

        return $r1;
    }

    public final java.util.List getConferenceables()
    {
        android.telecom.Connection r0;
        java.util.List $r1;

        r0 := @this: android.telecom.Connection;

        $r1 = r0.<android.telecom.Connection: java.util.List mUnmodifiableConferenceables>;

        return $r1;
    }

    public final long getConnectTimeMillis()
    {
        android.telecom.Connection r0;
        long $l0;

        r0 := @this: android.telecom.Connection;

        $l0 = r0.<android.telecom.Connection: long mConnectTimeMillis>;

        return $l0;
    }

    public final int getConnectionCapabilities()
    {
        android.telecom.Connection r0;
        int $i0;

        r0 := @this: android.telecom.Connection;

        $i0 = r0.<android.telecom.Connection: int mConnectionCapabilities>;

        return $i0;
    }

    public final int getConnectionProperties()
    {
        android.telecom.Connection r0;
        int $i0;

        r0 := @this: android.telecom.Connection;

        $i0 = r0.<android.telecom.Connection: int mConnectionProperties>;

        return $i0;
    }

    public final long getConnectionStartElapsedRealtimeMillis()
    {
        android.telecom.Connection r0;
        long $l0;

        r0 := @this: android.telecom.Connection;

        $l0 = r0.<android.telecom.Connection: long mConnectElapsedTimeMillis>;

        return $l0;
    }

    public final android.telecom.DisconnectCause getDisconnectCause()
    {
        android.telecom.Connection r0;
        android.telecom.DisconnectCause $r1;

        r0 := @this: android.telecom.Connection;

        $r1 = r0.<android.telecom.Connection: android.telecom.DisconnectCause mDisconnectCause>;

        return $r1;
    }

    public final android.os.Bundle getExtras()
    {
        android.telecom.Connection r0;
        java.lang.Object r1;
        android.os.Bundle $r2, $r3, r5;
        java.lang.Throwable $r4;

        r0 := @this: android.telecom.Connection;

        r5 = null;

        r1 = r0.<android.telecom.Connection: java.lang.Object mExtrasLock>;

        entermonitor r1;

     label1:
        $r2 = r0.<android.telecom.Connection: android.os.Bundle mExtras>;

        if $r2 == null goto label2;

        r5 = new android.os.Bundle;

        $r3 = r0.<android.telecom.Connection: android.os.Bundle mExtras>;

        specialinvoke r5.<android.os.Bundle: void <init>(android.os.Bundle)>($r3);

     label2:
        exitmonitor r1;

     label3:
        return r5;

     label4:
        $r4 := @caughtexception;

     label5:
        exitmonitor r1;

     label6:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public android.telecom.PhoneAccountHandle getPhoneAccountHandle()
    {
        android.telecom.Connection r0;
        android.telecom.PhoneAccountHandle $r1;

        r0 := @this: android.telecom.Connection;

        $r1 = r0.<android.telecom.Connection: android.telecom.PhoneAccountHandle mPhoneAccountHandle>;

        return $r1;
    }

    public final int getState()
    {
        android.telecom.Connection r0;
        int $i0;

        r0 := @this: android.telecom.Connection;

        $i0 = r0.<android.telecom.Connection: int mState>;

        return $i0;
    }

    public final android.telecom.StatusHints getStatusHints()
    {
        android.telecom.Connection r0;
        android.telecom.StatusHints $r1;

        r0 := @this: android.telecom.Connection;

        $r1 = r0.<android.telecom.Connection: android.telecom.StatusHints mStatusHints>;

        return $r1;
    }

    public final int getSupportedAudioRoutes()
    {
        android.telecom.Connection r0;
        int $i0;

        r0 := @this: android.telecom.Connection;

        $i0 = r0.<android.telecom.Connection: int mSupportedAudioRoutes>;

        return $i0;
    }

    public final java.lang.String getTelecomCallId()
    {
        android.telecom.Connection r0;
        java.lang.String $r1;

        r0 := @this: android.telecom.Connection;

        $r1 = r0.<android.telecom.Connection: java.lang.String mTelecomCallId>;

        return $r1;
    }

    public final android.telecom.Connection$VideoProvider getVideoProvider()
    {
        android.telecom.Connection r0;
        android.telecom.Connection$VideoProvider $r1;

        r0 := @this: android.telecom.Connection;

        $r1 = r0.<android.telecom.Connection: android.telecom.Connection$VideoProvider mVideoProvider>;

        return $r1;
    }

    public final int getVideoState()
    {
        android.telecom.Connection r0;
        int $i0;

        r0 := @this: android.telecom.Connection;

        $i0 = r0.<android.telecom.Connection: int mVideoState>;

        return $i0;
    }

    final void handleExtrasChanged(android.os.Bundle)
    {
        android.telecom.Connection r0;
        java.lang.Object r1;
        android.os.Bundle $r2, r4, r5;
        java.lang.Throwable $r3;

        r0 := @this: android.telecom.Connection;

        r4 := @parameter0: android.os.Bundle;

        r5 = null;

        r1 = r0.<android.telecom.Connection: java.lang.Object mExtrasLock>;

        entermonitor r1;

     label1:
        r0.<android.telecom.Connection: android.os.Bundle mExtras> = r4;

     label2:
        if r4 == null goto label4;

     label3:
        r5 = new android.os.Bundle;

        $r2 = r0.<android.telecom.Connection: android.os.Bundle mExtras>;

        specialinvoke r5.<android.os.Bundle: void <init>(android.os.Bundle)>($r2);

     label4:
        exitmonitor r1;

     label5:
        virtualinvoke r0.<android.telecom.Connection: void onExtrasChanged(android.os.Bundle)>(r5);

        return;

     label6:
        $r3 := @caughtexception;

     label7:
        exitmonitor r1;

     label8:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public void handleRttUpgradeResponse(android.telecom.Connection$RttTextStream)
    {
        android.telecom.Connection r0;
        android.telecom.Connection$RttTextStream r1;

        r0 := @this: android.telecom.Connection;

        r1 := @parameter0: android.telecom.Connection$RttTextStream;

        return;
    }

    public final boolean isRingbackRequested()
    {
        android.telecom.Connection r0;
        boolean $z0;

        r0 := @this: android.telecom.Connection;

        $z0 = r0.<android.telecom.Connection: boolean mRingbackRequested>;

        return $z0;
    }

    public void lambda$sendRemoteRttRequest$3$Connection(android.telecom.Connection$Listener)
    {
        android.telecom.Connection r0;
        android.telecom.Connection$Listener r1;

        r0 := @this: android.telecom.Connection;

        r1 := @parameter0: android.telecom.Connection$Listener;

        virtualinvoke r1.<android.telecom.Connection$Listener: void onRemoteRttRequest(android.telecom.Connection)>(r0);

        return;
    }

    public void lambda$sendRttInitiationFailure$1$Connection(int, android.telecom.Connection$Listener)
    {
        android.telecom.Connection r0;
        int i0;
        android.telecom.Connection$Listener r1;

        r0 := @this: android.telecom.Connection;

        i0 := @parameter0: int;

        r1 := @parameter1: android.telecom.Connection$Listener;

        virtualinvoke r1.<android.telecom.Connection$Listener: void onRttInitiationFailure(android.telecom.Connection,int)>(r0, i0);

        return;
    }

    public void lambda$sendRttInitiationSuccess$0$Connection(android.telecom.Connection$Listener)
    {
        android.telecom.Connection r0;
        android.telecom.Connection$Listener r1;

        r0 := @this: android.telecom.Connection;

        r1 := @parameter0: android.telecom.Connection$Listener;

        virtualinvoke r1.<android.telecom.Connection$Listener: void onRttInitiationSuccess(android.telecom.Connection)>(r0);

        return;
    }

    public void lambda$sendRttSessionRemotelyTerminated$2$Connection(android.telecom.Connection$Listener)
    {
        android.telecom.Connection r0;
        android.telecom.Connection$Listener r1;

        r0 := @this: android.telecom.Connection;

        r1 := @parameter0: android.telecom.Connection$Listener;

        virtualinvoke r1.<android.telecom.Connection$Listener: void onRttSessionRemotelyTerminated(android.telecom.Connection)>(r0);

        return;
    }

    public final void notifyConferenceMergeFailed()
    {
        android.telecom.Connection r0;
        java.util.Iterator r1;
        java.util.Set $r2;
        boolean $z0;
        java.lang.Object $r3;
        android.telecom.Connection$Listener $r4;

        r0 := @this: android.telecom.Connection;

        $r2 = r0.<android.telecom.Connection: java.util.Set mListeners>;

        r1 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (android.telecom.Connection$Listener) $r3;

        virtualinvoke $r4.<android.telecom.Connection$Listener: void onConferenceMergeFailed(android.telecom.Connection)>(r0);

        goto label1;

     label2:
        return;
    }

    public void notifyPhoneAccountChanged(android.telecom.PhoneAccountHandle)
    {
        android.telecom.Connection r0;
        android.telecom.PhoneAccountHandle r1;
        java.util.Iterator r2;
        java.util.Set $r3;
        boolean $z0;
        java.lang.Object $r4;
        android.telecom.Connection$Listener $r5;

        r0 := @this: android.telecom.Connection;

        r1 := @parameter0: android.telecom.PhoneAccountHandle;

        $r3 = r0.<android.telecom.Connection: java.util.Set mListeners>;

        r2 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (android.telecom.Connection$Listener) $r4;

        virtualinvoke $r5.<android.telecom.Connection$Listener: void onPhoneAccountChanged(android.telecom.Connection,android.telecom.PhoneAccountHandle)>(r0, r1);

        goto label1;

     label2:
        return;
    }

    public void onAbort()
    {
        android.telecom.Connection r0;

        r0 := @this: android.telecom.Connection;

        return;
    }

    public void onAddConferenceParticipants(java.util.List)
    {
        android.telecom.Connection r0;
        java.util.List r1;

        r0 := @this: android.telecom.Connection;

        r1 := @parameter0: java.util.List;

        return;
    }

    public void onAnswer()
    {
        android.telecom.Connection r0;

        r0 := @this: android.telecom.Connection;

        virtualinvoke r0.<android.telecom.Connection: void onAnswer(int)>(0);

        return;
    }

    public void onAnswer(int)
    {
        android.telecom.Connection r0;
        int i0;

        r0 := @this: android.telecom.Connection;

        i0 := @parameter0: int;

        return;
    }

    public void onAudioStateChanged(android.telecom.AudioState)
    {
        android.telecom.Connection r0;
        android.telecom.AudioState r1;

        r0 := @this: android.telecom.Connection;

        r1 := @parameter0: android.telecom.AudioState;

        return;
    }

    public void onCallAudioStateChanged(android.telecom.CallAudioState)
    {
        android.telecom.Connection r0;
        android.telecom.CallAudioState r1;

        r0 := @this: android.telecom.Connection;

        r1 := @parameter0: android.telecom.CallAudioState;

        return;
    }

    public void onCallEvent(java.lang.String, android.os.Bundle)
    {
        android.telecom.Connection r0;
        java.lang.String r1;
        android.os.Bundle r2;

        r0 := @this: android.telecom.Connection;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.Bundle;

        return;
    }

    public void onDeflect(android.net.Uri)
    {
        android.telecom.Connection r0;
        android.net.Uri r1;

        r0 := @this: android.telecom.Connection;

        r1 := @parameter0: android.net.Uri;

        return;
    }

    public void onDisconnect()
    {
        android.telecom.Connection r0;

        r0 := @this: android.telecom.Connection;

        return;
    }

    public void onDisconnectConferenceParticipant(android.net.Uri)
    {
        android.telecom.Connection r0;
        android.net.Uri r1;

        r0 := @this: android.telecom.Connection;

        r1 := @parameter0: android.net.Uri;

        return;
    }

    public void onExtrasChanged(android.os.Bundle)
    {
        android.telecom.Connection r0;
        android.os.Bundle r1;

        r0 := @this: android.telecom.Connection;

        r1 := @parameter0: android.os.Bundle;

        return;
    }

    public void onHandoverComplete()
    {
        android.telecom.Connection r0;

        r0 := @this: android.telecom.Connection;

        return;
    }

    public void onHold()
    {
        android.telecom.Connection r0;

        r0 := @this: android.telecom.Connection;

        return;
    }

    public void onPlayDtmfTone(char)
    {
        android.telecom.Connection r0;
        char c0;

        r0 := @this: android.telecom.Connection;

        c0 := @parameter0: char;

        return;
    }

    public void onPostDialContinue(boolean)
    {
        android.telecom.Connection r0;
        boolean z0;

        r0 := @this: android.telecom.Connection;

        z0 := @parameter0: boolean;

        return;
    }

    public void onPullExternalCall()
    {
        android.telecom.Connection r0;

        r0 := @this: android.telecom.Connection;

        return;
    }

    public void onReject()
    {
        android.telecom.Connection r0;

        r0 := @this: android.telecom.Connection;

        return;
    }

    public void onReject(int)
    {
        android.telecom.Connection r0;
        int i0;

        r0 := @this: android.telecom.Connection;

        i0 := @parameter0: int;

        return;
    }

    public void onReject(java.lang.String)
    {
        android.telecom.Connection r0;
        java.lang.String r1;

        r0 := @this: android.telecom.Connection;

        r1 := @parameter0: java.lang.String;

        return;
    }

    public void onSeparate()
    {
        android.telecom.Connection r0;

        r0 := @this: android.telecom.Connection;

        return;
    }

    public void onShowIncomingCallUi()
    {
        android.telecom.Connection r0;

        r0 := @this: android.telecom.Connection;

        return;
    }

    public void onSilence()
    {
        android.telecom.Connection r0;

        r0 := @this: android.telecom.Connection;

        return;
    }

    public void onStartRtt(android.telecom.Connection$RttTextStream)
    {
        android.telecom.Connection r0;
        android.telecom.Connection$RttTextStream r1;

        r0 := @this: android.telecom.Connection;

        r1 := @parameter0: android.telecom.Connection$RttTextStream;

        return;
    }

    public void onStateChanged(int)
    {
        android.telecom.Connection r0;
        int i0;

        r0 := @this: android.telecom.Connection;

        i0 := @parameter0: int;

        return;
    }

    public void onStopDtmfTone()
    {
        android.telecom.Connection r0;

        r0 := @this: android.telecom.Connection;

        return;
    }

    public void onStopRtt()
    {
        android.telecom.Connection r0;

        r0 := @this: android.telecom.Connection;

        return;
    }

    public void onTransfer(android.net.Uri, boolean)
    {
        android.telecom.Connection r0;
        android.net.Uri r1;
        boolean z0;

        r0 := @this: android.telecom.Connection;

        r1 := @parameter0: android.net.Uri;

        z0 := @parameter1: boolean;

        return;
    }

    public void onTransfer(android.telecom.Connection)
    {
        android.telecom.Connection r0, r1;

        r0 := @this: android.telecom.Connection;

        r1 := @parameter0: android.telecom.Connection;

        return;
    }

    public void onUnhold()
    {
        android.telecom.Connection r0;

        r0 := @this: android.telecom.Connection;

        return;
    }

    public final void putExtras(android.os.Bundle)
    {
        android.telecom.Connection r0;
        android.os.Bundle r1, $r2, $r3, $r4, $r7, r10, r12;
        java.util.Set $r5;
        java.lang.Object $r6, r11;
        android.telecom.Connection$Listener $r8;
        java.lang.Throwable $r9;
        java.util.Iterator r13;
        boolean $z0;

        r0 := @this: android.telecom.Connection;

        r10 := @parameter0: android.os.Bundle;

        virtualinvoke r0.<android.telecom.Connection: void checkImmutable()>();

        if r10 != null goto label1;

        return;

     label1:
        r11 = r0.<android.telecom.Connection: java.lang.Object mExtrasLock>;

        entermonitor r11;

     label2:
        $r2 = r0.<android.telecom.Connection: android.os.Bundle mExtras>;

        if $r2 != null goto label3;

        r1 = new android.os.Bundle;

        specialinvoke r1.<android.os.Bundle: void <init>()>();

        r0.<android.telecom.Connection: android.os.Bundle mExtras> = r1;

     label3:
        $r3 = r0.<android.telecom.Connection: android.os.Bundle mExtras>;

        virtualinvoke $r3.<android.os.Bundle: void putAll(android.os.Bundle)>(r10);

        r12 = new android.os.Bundle;

        $r4 = r0.<android.telecom.Connection: android.os.Bundle mExtras>;

        specialinvoke r12.<android.os.Bundle: void <init>(android.os.Bundle)>($r4);

        exitmonitor r11;

     label4:
        $r5 = r0.<android.telecom.Connection: java.util.Set mListeners>;

        r13 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label5:
        $z0 = interfaceinvoke r13.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r6 = interfaceinvoke r13.<java.util.Iterator: java.lang.Object next()>();

        $r8 = (android.telecom.Connection$Listener) $r6;

        $r7 = new android.os.Bundle;

        specialinvoke $r7.<android.os.Bundle: void <init>(android.os.Bundle)>(r12);

        virtualinvoke $r8.<android.telecom.Connection$Listener: void onExtrasChanged(android.telecom.Connection,android.os.Bundle)>(r0, $r7);

        goto label5;

     label6:
        return;

     label7:
        $r9 := @caughtexception;

     label8:
        exitmonitor r11;

     label9:
        throw $r9;

        catch java.lang.Throwable from label2 to label3 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    final android.telecom.Connection removeConnectionListener(android.telecom.Connection$Listener)
    {
        android.telecom.Connection r0;
        android.telecom.Connection$Listener r1;
        java.util.Set $r2;

        r0 := @this: android.telecom.Connection;

        r1 := @parameter0: android.telecom.Connection$Listener;

        if r1 == null goto label1;

        $r2 = r0.<android.telecom.Connection: java.util.Set mListeners>;

        interfaceinvoke $r2.<java.util.Set: boolean remove(java.lang.Object)>(r1);

     label1:
        return r0;
    }

    public final void removeExtras(java.util.List)
    {
        android.telecom.Connection r0;
        java.util.Iterator r1, r13;
        java.lang.String r2;
        android.os.Bundle $r3, $r8;
        java.util.Set $r4;
        java.lang.Object $r5, $r7, r11;
        android.telecom.Connection$Listener $r6;
        boolean $z0, $z1;
        java.lang.Throwable $r9;
        java.util.List r10, r12;

        r0 := @this: android.telecom.Connection;

        r10 := @parameter0: java.util.List;

        r11 = r0.<android.telecom.Connection: java.lang.Object mExtrasLock>;

        entermonitor r11;

     label01:
        $r3 = r0.<android.telecom.Connection: android.os.Bundle mExtras>;

        if $r3 == null goto label04;

        r1 = interfaceinvoke r10.<java.util.List: java.util.Iterator iterator()>();

     label02:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label04;

        $r7 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (java.lang.String) $r7;

        $r8 = r0.<android.telecom.Connection: android.os.Bundle mExtras>;

        virtualinvoke $r8.<android.os.Bundle: void remove(java.lang.String)>(r2);

     label03:
        goto label02;

     label04:
        exitmonitor r11;

     label05:
        r12 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>(r10);

        $r4 = r0.<android.telecom.Connection: java.util.Set mListeners>;

        r13 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label06:
        $z1 = interfaceinvoke r13.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label07;

        $r5 = interfaceinvoke r13.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (android.telecom.Connection$Listener) $r5;

        virtualinvoke $r6.<android.telecom.Connection$Listener: void onExtrasRemoved(android.telecom.Connection,java.util.List)>(r0, r12);

        goto label06;

     label07:
        return;

     label08:
        $r9 := @caughtexception;

     label09:
        exitmonitor r11;

     label10:
        throw $r9;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label02 to label03 with label08;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    public final transient void removeExtras(java.lang.String[])
    {
        android.telecom.Connection r0;
        java.lang.String[] r1;
        java.util.List $r2;

        r0 := @this: android.telecom.Connection;

        r1 := @parameter0: java.lang.String[];

        $r2 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r1);

        virtualinvoke r0.<android.telecom.Connection: void removeExtras(java.util.List)>($r2);

        return;
    }

    public void requestBluetoothAudio(android.bluetooth.BluetoothDevice)
    {
        android.telecom.Connection r0;
        android.bluetooth.BluetoothDevice r1;
        java.util.Iterator r2;
        java.util.Set $r3;
        boolean $z0;
        java.lang.Object $r4;
        android.telecom.Connection$Listener $r5;
        java.lang.String $r6;

        r0 := @this: android.telecom.Connection;

        r1 := @parameter0: android.bluetooth.BluetoothDevice;

        $r3 = r0.<android.telecom.Connection: java.util.Set mListeners>;

        r2 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (android.telecom.Connection$Listener) $r4;

        $r6 = virtualinvoke r1.<android.bluetooth.BluetoothDevice: java.lang.String getAddress()>();

        virtualinvoke $r5.<android.telecom.Connection$Listener: void onAudioRouteChanged(android.telecom.Connection,int,java.lang.String)>(r0, 2, $r6);

        goto label1;

     label2:
        return;
    }

    public final void resetConference()
    {
        android.telecom.Connection r0;
        android.telecom.Conference $r1;
        java.lang.Object[] $r2;

        r0 := @this: android.telecom.Connection;

        $r1 = r0.<android.telecom.Connection: android.telecom.Conference mConference>;

        if $r1 == null goto label1;

        $r2 = newarray (java.lang.Object)[0];

        staticinvoke <android.telecom.Log: void d(java.lang.Object,java.lang.String,java.lang.Object[])>(r0, "Conference reset", $r2);

        r0.<android.telecom.Connection: android.telecom.Conference mConference> = null;

        specialinvoke r0.<android.telecom.Connection: void fireConferenceChanged()>();

     label1:
        return;
    }

    public final void resetConnectionTime()
    {
        android.telecom.Connection r0;
        java.util.Iterator r1;
        java.util.Set $r2;
        boolean $z0;
        java.lang.Object $r3;
        android.telecom.Connection$Listener $r4;

        r0 := @this: android.telecom.Connection;

        $r2 = r0.<android.telecom.Connection: java.util.Set mListeners>;

        r1 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (android.telecom.Connection$Listener) $r3;

        virtualinvoke $r4.<android.telecom.Connection$Listener: void onConnectionTimeReset(android.telecom.Connection)>(r0);

        goto label1;

     label2:
        return;
    }

    public void sendConnectionEvent(java.lang.String, android.os.Bundle)
    {
        android.telecom.Connection r0;
        java.lang.String r1;
        android.os.Bundle r2;
        java.util.Iterator r3;
        java.util.Set $r4;
        boolean $z0;
        java.lang.Object $r5;
        android.telecom.Connection$Listener $r6;

        r0 := @this: android.telecom.Connection;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.Bundle;

        $r4 = r0.<android.telecom.Connection: java.util.Set mListeners>;

        r3 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (android.telecom.Connection$Listener) $r5;

        virtualinvoke $r6.<android.telecom.Connection$Listener: void onConnectionEvent(android.telecom.Connection,java.lang.String,android.os.Bundle)>(r0, r1, r2);

        goto label1;

     label2:
        return;
    }

    public final void sendRemoteRttRequest()
    {
        android.telecom.Connection r0;
        android.telecom._$$Lambda$Connection$lnfFNF0t9fPLEf01JE291g4chSk $r1;
        java.util.Set $r2;

        r0 := @this: android.telecom.Connection;

        $r2 = r0.<android.telecom.Connection: java.util.Set mListeners>;

        $r1 = new android.telecom._$$Lambda$Connection$lnfFNF0t9fPLEf01JE291g4chSk;

        specialinvoke $r1.<android.telecom._$$Lambda$Connection$lnfFNF0t9fPLEf01JE291g4chSk: void <init>(android.telecom.Connection)>(r0);

        interfaceinvoke $r2.<java.util.Set: void forEach(java.util.function.Consumer)>($r1);

        return;
    }

    public final void sendRttInitiationFailure(int)
    {
        android.telecom.Connection r0;
        int i0;
        android.telecom._$$Lambda$Connection$noXZvls4rxmO_SOjgkFMZLLrfSg $r1;
        java.util.Set $r2;

        r0 := @this: android.telecom.Connection;

        i0 := @parameter0: int;

        $r2 = r0.<android.telecom.Connection: java.util.Set mListeners>;

        $r1 = new android.telecom._$$Lambda$Connection$noXZvls4rxmO_SOjgkFMZLLrfSg;

        specialinvoke $r1.<android.telecom._$$Lambda$Connection$noXZvls4rxmO_SOjgkFMZLLrfSg: void <init>(android.telecom.Connection,int)>(r0, i0);

        interfaceinvoke $r2.<java.util.Set: void forEach(java.util.function.Consumer)>($r1);

        return;
    }

    public final void sendRttInitiationSuccess()
    {
        android.telecom.Connection r0;
        android.telecom._$$Lambda$Connection$8xeoCKtoHEwnDqv6gbuSfOMODH0 $r1;
        java.util.Set $r2;

        r0 := @this: android.telecom.Connection;

        $r2 = r0.<android.telecom.Connection: java.util.Set mListeners>;

        $r1 = new android.telecom._$$Lambda$Connection$8xeoCKtoHEwnDqv6gbuSfOMODH0;

        specialinvoke $r1.<android.telecom._$$Lambda$Connection$8xeoCKtoHEwnDqv6gbuSfOMODH0: void <init>(android.telecom.Connection)>(r0);

        interfaceinvoke $r2.<java.util.Set: void forEach(java.util.function.Consumer)>($r1);

        return;
    }

    public final void sendRttSessionRemotelyTerminated()
    {
        android.telecom.Connection r0;
        android.telecom._$$Lambda$Connection$SYsjtKchY2AYvOeGveCrqxSfKTU $r1;
        java.util.Set $r2;

        r0 := @this: android.telecom.Connection;

        $r2 = r0.<android.telecom.Connection: java.util.Set mListeners>;

        $r1 = new android.telecom._$$Lambda$Connection$SYsjtKchY2AYvOeGveCrqxSfKTU;

        specialinvoke $r1.<android.telecom._$$Lambda$Connection$SYsjtKchY2AYvOeGveCrqxSfKTU: void <init>(android.telecom.Connection)>(r0);

        interfaceinvoke $r2.<java.util.Set: void forEach(java.util.function.Consumer)>($r1);

        return;
    }

    public final void setActive()
    {
        android.telecom.Connection r0;

        r0 := @this: android.telecom.Connection;

        virtualinvoke r0.<android.telecom.Connection: void checkImmutable()>();

        virtualinvoke r0.<android.telecom.Connection: void setRingbackRequested(boolean)>(0);

        specialinvoke r0.<android.telecom.Connection: void setState(int)>(4);

        return;
    }

    public final void setAddress(android.net.Uri, int)
    {
        android.telecom.Connection r0;
        android.net.Uri r1;
        int i0;
        java.util.Iterator r2;
        java.lang.Object[] $r3;
        java.util.Set $r4;
        boolean $z0;
        java.lang.Object $r5;
        android.telecom.Connection$Listener $r6;

        r0 := @this: android.telecom.Connection;

        r1 := @parameter0: android.net.Uri;

        i0 := @parameter1: int;

        $r3 = newarray (java.lang.Object)[1];

        $r3[0] = r1;

        staticinvoke <android.telecom.Log: void d(java.lang.Object,java.lang.String,java.lang.Object[])>(r0, "setAddress %s", $r3);

        r0.<android.telecom.Connection: android.net.Uri mAddress> = r1;

        r0.<android.telecom.Connection: int mAddressPresentation> = i0;

        $r4 = r0.<android.telecom.Connection: java.util.Set mListeners>;

        r2 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (android.telecom.Connection$Listener) $r5;

        virtualinvoke $r6.<android.telecom.Connection$Listener: void onAddressChanged(android.telecom.Connection,android.net.Uri,int)>(r0, r1, i0);

        goto label1;

     label2:
        return;
    }

    public final void setAudioModeIsVoip(boolean)
    {
        android.telecom.Connection r0;
        boolean z0, $z1;
        java.util.Iterator r1;
        java.util.Set $r2;
        java.lang.Object $r3;
        android.telecom.Connection$Listener $r4;

        r0 := @this: android.telecom.Connection;

        z0 := @parameter0: boolean;

        virtualinvoke r0.<android.telecom.Connection: void checkImmutable()>();

        r0.<android.telecom.Connection: boolean mAudioModeIsVoip> = z0;

        $r2 = r0.<android.telecom.Connection: java.util.Set mListeners>;

        r1 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label2;

        $r3 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (android.telecom.Connection$Listener) $r3;

        virtualinvoke $r4.<android.telecom.Connection$Listener: void onAudioModeIsVoipChanged(android.telecom.Connection,boolean)>(r0, z0);

        goto label1;

     label2:
        return;
    }

    public final void setAudioRoute(int)
    {
        android.telecom.Connection r0;
        int i0;
        java.util.Iterator r1;
        java.util.Set $r2;
        boolean $z0;
        java.lang.Object $r3;
        android.telecom.Connection$Listener $r4;

        r0 := @this: android.telecom.Connection;

        i0 := @parameter0: int;

        $r2 = r0.<android.telecom.Connection: java.util.Set mListeners>;

        r1 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (android.telecom.Connection$Listener) $r3;

        virtualinvoke $r4.<android.telecom.Connection$Listener: void onAudioRouteChanged(android.telecom.Connection,int,java.lang.String)>(r0, i0, null);

        goto label1;

     label2:
        return;
    }

    final void setCallAudioState(android.telecom.CallAudioState)
    {
        android.telecom.Connection r0;
        android.telecom.CallAudioState r1;
        java.lang.Object[] $r2;
        android.telecom.AudioState $r3;

        r0 := @this: android.telecom.Connection;

        r1 := @parameter0: android.telecom.CallAudioState;

        virtualinvoke r0.<android.telecom.Connection: void checkImmutable()>();

        $r2 = newarray (java.lang.Object)[1];

        $r2[0] = r1;

        staticinvoke <android.telecom.Log: void d(java.lang.Object,java.lang.String,java.lang.Object[])>(r0, "setAudioState %s", $r2);

        r0.<android.telecom.Connection: android.telecom.CallAudioState mCallAudioState> = r1;

        $r3 = virtualinvoke r0.<android.telecom.Connection: android.telecom.AudioState getAudioState()>();

        virtualinvoke r0.<android.telecom.Connection: void onAudioStateChanged(android.telecom.AudioState)>($r3);

        virtualinvoke r0.<android.telecom.Connection: void onCallAudioStateChanged(android.telecom.CallAudioState)>(r1);

        return;
    }

    public void setCallDirection(int)
    {
        android.telecom.Connection r0;
        int i0;

        r0 := @this: android.telecom.Connection;

        i0 := @parameter0: int;

        r0.<android.telecom.Connection: int mCallDirection> = i0;

        return;
    }

    public final void setCallerDisplayName(java.lang.String, int)
    {
        android.telecom.Connection r0;
        java.lang.String r1;
        int i0;
        java.util.Iterator r2;
        java.lang.Object[] $r3;
        java.util.Set $r4;
        boolean $z0;
        java.lang.Object $r5;
        android.telecom.Connection$Listener $r6;

        r0 := @this: android.telecom.Connection;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        virtualinvoke r0.<android.telecom.Connection: void checkImmutable()>();

        $r3 = newarray (java.lang.Object)[1];

        $r3[0] = r1;

        staticinvoke <android.telecom.Log: void d(java.lang.Object,java.lang.String,java.lang.Object[])>(r0, "setCallerDisplayName %s", $r3);

        r0.<android.telecom.Connection: java.lang.String mCallerDisplayName> = r1;

        r0.<android.telecom.Connection: int mCallerDisplayNamePresentation> = i0;

        $r4 = r0.<android.telecom.Connection: java.util.Set mListeners>;

        r2 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (android.telecom.Connection$Listener) $r5;

        virtualinvoke $r6.<android.telecom.Connection$Listener: void onCallerDisplayNameChanged(android.telecom.Connection,java.lang.String,int)>(r0, r1, i0);

        goto label1;

     label2:
        return;
    }

    public final void setCallerNumberVerificationStatus(int)
    {
        android.telecom.Connection r0;
        int i0;

        r0 := @this: android.telecom.Connection;

        i0 := @parameter0: int;

        r0.<android.telecom.Connection: int mCallerNumberVerificationStatus> = i0;

        return;
    }

    public final boolean setConference(android.telecom.Conference)
    {
        android.telecom.Connection r0;
        android.telecom.Conference r1, $r3;
        android.telecom.ConnectionService r2;
        boolean $z0;

        r0 := @this: android.telecom.Connection;

        r1 := @parameter0: android.telecom.Conference;

        virtualinvoke r0.<android.telecom.Connection: void checkImmutable()>();

        $r3 = r0.<android.telecom.Connection: android.telecom.Conference mConference>;

        if $r3 != null goto label2;

        r0.<android.telecom.Connection: android.telecom.Conference mConference> = r1;

        r2 = r0.<android.telecom.Connection: android.telecom.ConnectionService mConnectionService>;

        if r2 == null goto label1;

        $z0 = virtualinvoke r2.<android.telecom.ConnectionService: boolean containsConference(android.telecom.Conference)>(r1);

        if $z0 == 0 goto label1;

        specialinvoke r0.<android.telecom.Connection: void fireConferenceChanged()>();

     label1:
        return 1;

     label2:
        return 0;
    }

    public final void setConferenceableConnections(java.util.List)
    {
        android.telecom.Connection r0, r1;
        boolean $z0, $z1;
        java.lang.Object $r2;
        java.util.List $r3, $r6, r7;
        android.telecom.Connection$Listener $r4;
        java.util.Iterator r8;

        r0 := @this: android.telecom.Connection;

        r7 := @parameter0: java.util.List;

        virtualinvoke r0.<android.telecom.Connection: void checkImmutable()>();

        specialinvoke r0.<android.telecom.Connection: void clearConferenceableList()>();

        r8 = interfaceinvoke r7.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r2 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>();

        r1 = (android.telecom.Connection) $r2;

        $r3 = r0.<android.telecom.Connection: java.util.List mConferenceables>;

        $z1 = interfaceinvoke $r3.<java.util.List: boolean contains(java.lang.Object)>(r1);

        if $z1 != 0 goto label2;

        $r4 = r0.<android.telecom.Connection: android.telecom.Connection$Listener mConnectionDeathListener>;

        virtualinvoke r1.<android.telecom.Connection: android.telecom.Connection addConnectionListener(android.telecom.Connection$Listener)>($r4);

        $r6 = r0.<android.telecom.Connection: java.util.List mConferenceables>;

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>(r1);

     label2:
        goto label1;

     label3:
        specialinvoke r0.<android.telecom.Connection: void fireOnConferenceableConnectionsChanged()>();

        return;
    }

    public final void setConferenceables(java.util.List)
    {
        android.telecom.Connection r0, $r8;
        android.telecom.Conferenceable r1;
        boolean $z0, $z1, $z2, $z3;
        java.lang.Object $r2;
        java.util.List $r3, r10, $r12;
        android.telecom.Conference$Listener $r4;
        android.telecom.Conference $r5;
        android.telecom.Connection$Listener $r7;
        java.util.Iterator r11;

        r0 := @this: android.telecom.Connection;

        r10 := @parameter0: java.util.List;

        specialinvoke r0.<android.telecom.Connection: void clearConferenceableList()>();

        r11 = interfaceinvoke r10.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r2 = interfaceinvoke r11.<java.util.Iterator: java.lang.Object next()>();

        r1 = (android.telecom.Conferenceable) $r2;

        $r3 = r0.<android.telecom.Connection: java.util.List mConferenceables>;

        $z1 = interfaceinvoke $r3.<java.util.List: boolean contains(java.lang.Object)>(r1);

        if $z1 != 0 goto label4;

        $z2 = r1 instanceof android.telecom.Connection;

        if $z2 == 0 goto label2;

        $r8 = (android.telecom.Connection) r1;

        $r7 = r0.<android.telecom.Connection: android.telecom.Connection$Listener mConnectionDeathListener>;

        virtualinvoke $r8.<android.telecom.Connection: android.telecom.Connection addConnectionListener(android.telecom.Connection$Listener)>($r7);

        goto label3;

     label2:
        $z3 = r1 instanceof android.telecom.Conference;

        if $z3 == 0 goto label3;

        $r5 = (android.telecom.Conference) r1;

        $r4 = r0.<android.telecom.Connection: android.telecom.Conference$Listener mConferenceDeathListener>;

        virtualinvoke $r5.<android.telecom.Conference: android.telecom.Conference addListener(android.telecom.Conference$Listener)>($r4);

        goto label3;

     label3:
        $r12 = r0.<android.telecom.Connection: java.util.List mConferenceables>;

        interfaceinvoke $r12.<java.util.List: boolean add(java.lang.Object)>(r1);

     label4:
        goto label1;

     label5:
        specialinvoke r0.<android.telecom.Connection: void fireOnConferenceableConnectionsChanged()>();

        return;
    }

    public final void setConnectTimeMillis(long)
    {
        android.telecom.Connection r0;
        long l0;

        r0 := @this: android.telecom.Connection;

        l0 := @parameter0: long;

        r0.<android.telecom.Connection: long mConnectTimeMillis> = l0;

        return;
    }

    public final void setConnectionCapabilities(int)
    {
        android.telecom.Connection r0;
        int i0, $i1, $i2;
        java.util.Iterator r1;
        java.util.Set $r2;
        boolean $z0;
        java.lang.Object $r3;
        android.telecom.Connection$Listener $r4;

        r0 := @this: android.telecom.Connection;

        i0 := @parameter0: int;

        virtualinvoke r0.<android.telecom.Connection: void checkImmutable()>();

        $i1 = r0.<android.telecom.Connection: int mConnectionCapabilities>;

        if $i1 == i0 goto label2;

        r0.<android.telecom.Connection: int mConnectionCapabilities> = i0;

        $r2 = r0.<android.telecom.Connection: java.util.Set mListeners>;

        r1 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (android.telecom.Connection$Listener) $r3;

        $i2 = r0.<android.telecom.Connection: int mConnectionCapabilities>;

        virtualinvoke $r4.<android.telecom.Connection$Listener: void onConnectionCapabilitiesChanged(android.telecom.Connection,int)>(r0, $i2);

        goto label1;

     label2:
        return;
    }

    public final void setConnectionProperties(int)
    {
        android.telecom.Connection r0;
        int i0, $i1, $i2;
        java.util.Iterator r1;
        java.util.Set $r2;
        boolean $z0;
        java.lang.Object $r3;
        android.telecom.Connection$Listener $r4;

        r0 := @this: android.telecom.Connection;

        i0 := @parameter0: int;

        virtualinvoke r0.<android.telecom.Connection: void checkImmutable()>();

        $i1 = r0.<android.telecom.Connection: int mConnectionProperties>;

        if $i1 == i0 goto label2;

        r0.<android.telecom.Connection: int mConnectionProperties> = i0;

        $r2 = r0.<android.telecom.Connection: java.util.Set mListeners>;

        r1 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (android.telecom.Connection$Listener) $r3;

        $i2 = r0.<android.telecom.Connection: int mConnectionProperties>;

        virtualinvoke $r4.<android.telecom.Connection$Listener: void onConnectionPropertiesChanged(android.telecom.Connection,int)>(r0, $i2);

        goto label1;

     label2:
        return;
    }

    public final void setConnectionService(android.telecom.ConnectionService)
    {
        android.telecom.Connection r0;
        android.telecom.ConnectionService r1, $r2;
        java.lang.Exception $r3;
        java.lang.Object[] $r4;

        r0 := @this: android.telecom.Connection;

        r1 := @parameter0: android.telecom.ConnectionService;

        virtualinvoke r0.<android.telecom.Connection: void checkImmutable()>();

        $r2 = r0.<android.telecom.Connection: android.telecom.ConnectionService mConnectionService>;

        if $r2 == null goto label1;

        $r3 = new java.lang.Exception;

        specialinvoke $r3.<java.lang.Exception: void <init>()>();

        $r4 = newarray (java.lang.Object)[0];

        staticinvoke <android.telecom.Log: void e(java.lang.Object,java.lang.Throwable,java.lang.String,java.lang.Object[])>(r0, $r3, "Trying to set ConnectionService on a connection which is already associated with another ConnectionService.", $r4);

        goto label2;

     label1:
        r0.<android.telecom.Connection: android.telecom.ConnectionService mConnectionService> = r1;

     label2:
        return;
    }

    public final void setConnectionStartElapsedRealtimeMillis(long)
    {
        android.telecom.Connection r0;
        long l0;

        r0 := @this: android.telecom.Connection;

        l0 := @parameter0: long;

        r0.<android.telecom.Connection: long mConnectElapsedTimeMillis> = l0;

        return;
    }

    public final void setDialing()
    {
        android.telecom.Connection r0;

        r0 := @this: android.telecom.Connection;

        virtualinvoke r0.<android.telecom.Connection: void checkImmutable()>();

        specialinvoke r0.<android.telecom.Connection: void setState(int)>(3);

        return;
    }

    public final void setDisconnected(android.telecom.DisconnectCause)
    {
        android.telecom.Connection r0;
        android.telecom.DisconnectCause r1;
        java.util.Iterator r2;
        java.lang.Object[] $r3;
        java.util.Set $r4;
        boolean $z0;
        java.lang.Object $r5;
        android.telecom.Connection$Listener $r6;

        r0 := @this: android.telecom.Connection;

        r1 := @parameter0: android.telecom.DisconnectCause;

        virtualinvoke r0.<android.telecom.Connection: void checkImmutable()>();

        r0.<android.telecom.Connection: android.telecom.DisconnectCause mDisconnectCause> = r1;

        specialinvoke r0.<android.telecom.Connection: void setState(int)>(6);

        $r3 = newarray (java.lang.Object)[1];

        $r3[0] = r1;

        staticinvoke <android.telecom.Log: void d(java.lang.Object,java.lang.String,java.lang.Object[])>(r0, "Disconnected with cause %s", $r3);

        $r4 = r0.<android.telecom.Connection: java.util.Set mListeners>;

        r2 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (android.telecom.Connection$Listener) $r5;

        virtualinvoke $r6.<android.telecom.Connection$Listener: void onDisconnected(android.telecom.Connection,android.telecom.DisconnectCause)>(r0, r1);

        goto label1;

     label2:
        return;
    }

    public final void setExtras(android.os.Bundle)
    {
        android.telecom.Connection r0;
        android.os.Bundle r1;
        java.util.Iterator r3;
        java.lang.String r4;
        java.util.Set $r5, $r6, $r7, $r8, $r11, $r13;
        android.util.ArraySet $r9;
        java.util.ArrayList $r10;
        boolean $z1, $z2, $z4;
        java.lang.Object $r12;

        r0 := @this: android.telecom.Connection;

        r1 := @parameter0: android.os.Bundle;

        virtualinvoke r0.<android.telecom.Connection: void checkImmutable()>();

        virtualinvoke r0.<android.telecom.Connection: void putExtras(android.os.Bundle)>(r1);

        $r5 = r0.<android.telecom.Connection: java.util.Set mPreviousExtraKeys>;

        if $r5 == null goto label5;

        $r10 = new java.util.ArrayList;

        specialinvoke $r10.<java.util.ArrayList: void <init>()>();

        $r11 = r0.<android.telecom.Connection: java.util.Set mPreviousExtraKeys>;

        r3 = interfaceinvoke $r11.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r12 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.lang.String) $r12;

        if r1 == null goto label2;

        $z4 = virtualinvoke r1.<android.os.Bundle: boolean containsKey(java.lang.String)>(r4);

        if $z4 != 0 goto label3;

     label2:
        interfaceinvoke $r10.<java.util.List: boolean add(java.lang.Object)>(r4);

     label3:
        goto label1;

     label4:
        $z2 = interfaceinvoke $r10.<java.util.List: boolean isEmpty()>();

        if $z2 != 0 goto label5;

        virtualinvoke r0.<android.telecom.Connection: void removeExtras(java.util.List)>($r10);

     label5:
        $r13 = r0.<android.telecom.Connection: java.util.Set mPreviousExtraKeys>;

        if $r13 != null goto label6;

        $r9 = new android.util.ArraySet;

        specialinvoke $r9.<android.util.ArraySet: void <init>()>();

        r0.<android.telecom.Connection: java.util.Set mPreviousExtraKeys> = $r9;

     label6:
        $r6 = r0.<android.telecom.Connection: java.util.Set mPreviousExtraKeys>;

        interfaceinvoke $r6.<java.util.Set: void clear()>();

        if r1 == null goto label7;

        $r7 = r0.<android.telecom.Connection: java.util.Set mPreviousExtraKeys>;

        $r8 = virtualinvoke r1.<android.os.Bundle: java.util.Set keySet()>();

        interfaceinvoke $r7.<java.util.Set: boolean addAll(java.util.Collection)>($r8);

     label7:
        return;
    }

    public final void setInitialized()
    {
        android.telecom.Connection r0;

        r0 := @this: android.telecom.Connection;

        virtualinvoke r0.<android.telecom.Connection: void checkImmutable()>();

        specialinvoke r0.<android.telecom.Connection: void setState(int)>(1);

        return;
    }

    public final void setInitializing()
    {
        android.telecom.Connection r0;

        r0 := @this: android.telecom.Connection;

        virtualinvoke r0.<android.telecom.Connection: void checkImmutable()>();

        specialinvoke r0.<android.telecom.Connection: void setState(int)>(0);

        return;
    }

    public final void setNextPostDialChar(char)
    {
        android.telecom.Connection r0;
        char c0;
        java.util.Iterator r1;
        java.util.Set $r2;
        boolean $z0;
        java.lang.Object $r3;
        android.telecom.Connection$Listener $r4;

        r0 := @this: android.telecom.Connection;

        c0 := @parameter0: char;

        virtualinvoke r0.<android.telecom.Connection: void checkImmutable()>();

        $r2 = r0.<android.telecom.Connection: java.util.Set mListeners>;

        r1 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (android.telecom.Connection$Listener) $r3;

        virtualinvoke $r4.<android.telecom.Connection$Listener: void onPostDialChar(android.telecom.Connection,char)>(r0, c0);

        goto label1;

     label2:
        return;
    }

    public final void setOnHold()
    {
        android.telecom.Connection r0;

        r0 := @this: android.telecom.Connection;

        virtualinvoke r0.<android.telecom.Connection: void checkImmutable()>();

        specialinvoke r0.<android.telecom.Connection: void setState(int)>(5);

        return;
    }

    public void setPhoneAccountHandle(android.telecom.PhoneAccountHandle)
    {
        android.telecom.Connection r0;
        android.telecom.PhoneAccountHandle r1, $r2;

        r0 := @this: android.telecom.Connection;

        r1 := @parameter0: android.telecom.PhoneAccountHandle;

        $r2 = r0.<android.telecom.Connection: android.telecom.PhoneAccountHandle mPhoneAccountHandle>;

        if $r2 == r1 goto label1;

        r0.<android.telecom.Connection: android.telecom.PhoneAccountHandle mPhoneAccountHandle> = r1;

        virtualinvoke r0.<android.telecom.Connection: void notifyPhoneAccountChanged(android.telecom.PhoneAccountHandle)>(r1);

     label1:
        return;
    }

    public final void setPostDialWait(java.lang.String)
    {
        android.telecom.Connection r0;
        java.lang.String r1;
        java.util.Iterator r2;
        java.util.Set $r3;
        boolean $z0;
        java.lang.Object $r4;
        android.telecom.Connection$Listener $r5;

        r0 := @this: android.telecom.Connection;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<android.telecom.Connection: void checkImmutable()>();

        $r3 = r0.<android.telecom.Connection: java.util.Set mListeners>;

        r2 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (android.telecom.Connection$Listener) $r4;

        virtualinvoke $r5.<android.telecom.Connection$Listener: void onPostDialWait(android.telecom.Connection,java.lang.String)>(r0, r1);

        goto label1;

     label2:
        return;
    }

    public final void setPulling()
    {
        android.telecom.Connection r0;

        r0 := @this: android.telecom.Connection;

        virtualinvoke r0.<android.telecom.Connection: void checkImmutable()>();

        specialinvoke r0.<android.telecom.Connection: void setState(int)>(7);

        return;
    }

    public final void setRingbackRequested(boolean)
    {
        android.telecom.Connection r0;
        boolean z0, $z1, $z2;
        java.util.Iterator r1;
        java.util.Set $r2;
        java.lang.Object $r3;
        android.telecom.Connection$Listener $r4;

        r0 := @this: android.telecom.Connection;

        z0 := @parameter0: boolean;

        virtualinvoke r0.<android.telecom.Connection: void checkImmutable()>();

        $z1 = r0.<android.telecom.Connection: boolean mRingbackRequested>;

        if $z1 == z0 goto label2;

        r0.<android.telecom.Connection: boolean mRingbackRequested> = z0;

        $r2 = r0.<android.telecom.Connection: java.util.Set mListeners>;

        r1 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z2 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label2;

        $r3 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (android.telecom.Connection$Listener) $r3;

        virtualinvoke $r4.<android.telecom.Connection$Listener: void onRingbackRequested(android.telecom.Connection,boolean)>(r0, z0);

        goto label1;

     label2:
        return;
    }

    public final void setRinging()
    {
        android.telecom.Connection r0;

        r0 := @this: android.telecom.Connection;

        virtualinvoke r0.<android.telecom.Connection: void checkImmutable()>();

        specialinvoke r0.<android.telecom.Connection: void setState(int)>(2);

        return;
    }

    public final void setStatusHints(android.telecom.StatusHints)
    {
        android.telecom.Connection r0;
        android.telecom.StatusHints r1;
        java.util.Iterator r2;
        java.util.Set $r3;
        boolean $z0;
        java.lang.Object $r4;
        android.telecom.Connection$Listener $r5;

        r0 := @this: android.telecom.Connection;

        r1 := @parameter0: android.telecom.StatusHints;

        virtualinvoke r0.<android.telecom.Connection: void checkImmutable()>();

        r0.<android.telecom.Connection: android.telecom.StatusHints mStatusHints> = r1;

        $r3 = r0.<android.telecom.Connection: java.util.Set mListeners>;

        r2 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (android.telecom.Connection$Listener) $r4;

        virtualinvoke $r5.<android.telecom.Connection$Listener: void onStatusHintsChanged(android.telecom.Connection,android.telecom.StatusHints)>(r0, r1);

        goto label1;

     label2:
        return;
    }

    public final void setSupportedAudioRoutes(int)
    {
        android.telecom.Connection r0;
        int i0, $i1, $i2, $i3;
        java.util.Iterator r1;
        java.lang.IllegalArgumentException $r2;
        java.util.Set $r3;
        boolean $z0;
        java.lang.Object $r4;
        android.telecom.Connection$Listener $r5;

        r0 := @this: android.telecom.Connection;

        i0 := @parameter0: int;

        $i1 = i0 & 9;

        if $i1 == 0 goto label3;

        $i2 = r0.<android.telecom.Connection: int mSupportedAudioRoutes>;

        if $i2 == i0 goto label2;

        r0.<android.telecom.Connection: int mSupportedAudioRoutes> = i0;

        $r3 = r0.<android.telecom.Connection: java.util.Set mListeners>;

        r1 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (android.telecom.Connection$Listener) $r4;

        $i3 = r0.<android.telecom.Connection: int mSupportedAudioRoutes>;

        virtualinvoke $r5.<android.telecom.Connection$Listener: void onSupportedAudioRoutesChanged(android.telecom.Connection,int)>(r0, $i3);

        goto label1;

     label2:
        return;

     label3:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("supported audio routes must include either speaker or earpiece");

        throw $r2;
    }

    public void setTelecomCallId(java.lang.String)
    {
        android.telecom.Connection r0;
        java.lang.String r1;

        r0 := @this: android.telecom.Connection;

        r1 := @parameter0: java.lang.String;

        r0.<android.telecom.Connection: java.lang.String mTelecomCallId> = r1;

        return;
    }

    public final void setVideoProvider(android.telecom.Connection$VideoProvider)
    {
        android.telecom.Connection r0;
        android.telecom.Connection$VideoProvider r1;
        java.util.Iterator r2;
        java.util.Set $r3;
        boolean $z0;
        java.lang.Object $r4;
        android.telecom.Connection$Listener $r5;

        r0 := @this: android.telecom.Connection;

        r1 := @parameter0: android.telecom.Connection$VideoProvider;

        virtualinvoke r0.<android.telecom.Connection: void checkImmutable()>();

        r0.<android.telecom.Connection: android.telecom.Connection$VideoProvider mVideoProvider> = r1;

        $r3 = r0.<android.telecom.Connection: java.util.Set mListeners>;

        r2 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (android.telecom.Connection$Listener) $r4;

        virtualinvoke $r5.<android.telecom.Connection$Listener: void onVideoProviderChanged(android.telecom.Connection,android.telecom.Connection$VideoProvider)>(r0, r1);

        goto label1;

     label2:
        return;
    }

    public final void setVideoState(int)
    {
        android.telecom.Connection r0;
        int i0, $i1;
        java.util.Iterator r1;
        java.lang.Object[] $r2;
        java.lang.Integer $r3;
        java.util.Set $r4;
        boolean $z0;
        java.lang.Object $r5;
        android.telecom.Connection$Listener $r6;

        r0 := @this: android.telecom.Connection;

        i0 := @parameter0: int;

        virtualinvoke r0.<android.telecom.Connection: void checkImmutable()>();

        $r2 = newarray (java.lang.Object)[1];

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r2[0] = $r3;

        staticinvoke <android.telecom.Log: void d(java.lang.Object,java.lang.String,java.lang.Object[])>(r0, "setVideoState %d", $r2);

        r0.<android.telecom.Connection: int mVideoState> = i0;

        $r4 = r0.<android.telecom.Connection: java.util.Set mListeners>;

        r1 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (android.telecom.Connection$Listener) $r5;

        $i1 = r0.<android.telecom.Connection: int mVideoState>;

        virtualinvoke $r6.<android.telecom.Connection$Listener: void onVideoStateChanged(android.telecom.Connection,int)>(r0, $i1);

        goto label1;

     label2:
        return;
    }

    public final void unsetConnectionService(android.telecom.ConnectionService)
    {
        android.telecom.Connection r0;
        android.telecom.ConnectionService r1, $r2;
        java.lang.Exception $r3;
        java.lang.Object[] $r4;

        r0 := @this: android.telecom.Connection;

        r1 := @parameter0: android.telecom.ConnectionService;

        $r2 = r0.<android.telecom.Connection: android.telecom.ConnectionService mConnectionService>;

        if $r2 == r1 goto label1;

        $r3 = new java.lang.Exception;

        specialinvoke $r3.<java.lang.Exception: void <init>()>();

        $r4 = newarray (java.lang.Object)[0];

        staticinvoke <android.telecom.Log: void e(java.lang.Object,java.lang.Throwable,java.lang.String,java.lang.Object[])>(r0, $r3, "Trying to remove ConnectionService from a Connection that does not belong to the ConnectionService.", $r4);

        goto label2;

     label1:
        r0.<android.telecom.Connection: android.telecom.ConnectionService mConnectionService> = null;

     label2:
        return;
    }
}
