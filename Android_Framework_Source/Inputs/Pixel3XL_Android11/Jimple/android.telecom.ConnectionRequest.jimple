public final class android.telecom.ConnectionRequest extends java.lang.Object implements android.os.Parcelable
{
    public static final android.os.Parcelable$Creator CREATOR;
    private final android.telecom.PhoneAccountHandle mAccountHandle;
    private final android.net.Uri mAddress;
    private final android.os.Bundle mExtras;
    private final boolean mIsAdhocConference;
    private java.util.List mParticipants;
    private final android.os.ParcelFileDescriptor mRttPipeFromInCall;
    private final android.os.ParcelFileDescriptor mRttPipeToInCall;
    private android.telecom.Connection$RttTextStream mRttTextStream;
    private final boolean mShouldShowIncomingCallUi;
    private final java.lang.String mTelecomCallId;
    private final int mVideoState;

    static void <clinit>()
    {
        android.telecom.ConnectionRequest$1 $r0;

        $r0 = new android.telecom.ConnectionRequest$1;

        specialinvoke $r0.<android.telecom.ConnectionRequest$1: void <init>()>();

        <android.telecom.ConnectionRequest: android.os.Parcelable$Creator CREATOR> = $r0;

        return;
    }

    private void <init>(android.os.Parcel)
    {
        android.telecom.ConnectionRequest r0;
        android.os.Parcel r1;
        int i0, $i1, $i2;
        java.lang.Class $r3, $r7, $r11, $r16, $r20, $r25;
        java.lang.ClassLoader $r4, $r8, $r12, $r17, $r21, $r26;
        android.os.Parcelable $r5, $r9, $r13, $r18, $r22;
        android.telecom.PhoneAccountHandle $r6;
        android.net.Uri $r10;
        android.os.Bundle $r14;
        java.lang.String $r15;
        android.os.ParcelFileDescriptor $r19, $r23;
        java.util.ArrayList $r24;
        boolean z1, z2;

        r0 := @this: android.telecom.ConnectionRequest;

        r1 := @parameter0: android.os.Parcel;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        $r5 = virtualinvoke r1.<android.os.Parcel: android.os.Parcelable readParcelable(java.lang.ClassLoader)>($r4);

        $r6 = (android.telecom.PhoneAccountHandle) $r5;

        r0.<android.telecom.ConnectionRequest: android.telecom.PhoneAccountHandle mAccountHandle> = $r6;

        $r7 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r8 = virtualinvoke $r7.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        $r9 = virtualinvoke r1.<android.os.Parcel: android.os.Parcelable readParcelable(java.lang.ClassLoader)>($r8);

        $r10 = (android.net.Uri) $r9;

        r0.<android.telecom.ConnectionRequest: android.net.Uri mAddress> = $r10;

        $r11 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r12 = virtualinvoke $r11.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        $r13 = virtualinvoke r1.<android.os.Parcel: android.os.Parcelable readParcelable(java.lang.ClassLoader)>($r12);

        $r14 = (android.os.Bundle) $r13;

        r0.<android.telecom.ConnectionRequest: android.os.Bundle mExtras> = $r14;

        $i1 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.telecom.ConnectionRequest: int mVideoState> = $i1;

        $r15 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r0.<android.telecom.ConnectionRequest: java.lang.String mTelecomCallId> = $r15;

        i0 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if i0 != 1 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        r0.<android.telecom.ConnectionRequest: boolean mShouldShowIncomingCallUi> = z1;

        $r16 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r17 = virtualinvoke $r16.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        $r18 = virtualinvoke r1.<android.os.Parcel: android.os.Parcelable readParcelable(java.lang.ClassLoader)>($r17);

        $r19 = (android.os.ParcelFileDescriptor) $r18;

        r0.<android.telecom.ConnectionRequest: android.os.ParcelFileDescriptor mRttPipeFromInCall> = $r19;

        $r20 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r21 = virtualinvoke $r20.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        $r22 = virtualinvoke r1.<android.os.Parcel: android.os.Parcelable readParcelable(java.lang.ClassLoader)>($r21);

        $r23 = (android.os.ParcelFileDescriptor) $r22;

        r0.<android.telecom.ConnectionRequest: android.os.ParcelFileDescriptor mRttPipeToInCall> = $r23;

        $r24 = new java.util.ArrayList;

        specialinvoke $r24.<java.util.ArrayList: void <init>()>();

        r0.<android.telecom.ConnectionRequest: java.util.List mParticipants> = $r24;

        $r25 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r26 = virtualinvoke $r25.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        virtualinvoke r1.<android.os.Parcel: void readList(java.util.List,java.lang.ClassLoader)>($r24, $r26);

        z2 = 0;

        $i2 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i2 != 1 goto label3;

        z2 = 1;

     label3:
        r0.<android.telecom.ConnectionRequest: boolean mIsAdhocConference> = z2;

        return;
    }

    void <init>(android.os.Parcel, android.telecom.ConnectionRequest$1)
    {
        android.telecom.ConnectionRequest r0;
        android.os.Parcel r1;
        android.telecom.ConnectionRequest$1 r2;

        r0 := @this: android.telecom.ConnectionRequest;

        r1 := @parameter0: android.os.Parcel;

        r2 := @parameter1: android.telecom.ConnectionRequest$1;

        specialinvoke r0.<android.telecom.ConnectionRequest: void <init>(android.os.Parcel)>(r1);

        return;
    }

    public void <init>(android.telecom.PhoneAccountHandle, android.net.Uri, android.os.Bundle)
    {
        android.telecom.ConnectionRequest r0;
        android.telecom.PhoneAccountHandle r1;
        android.net.Uri r2;
        android.os.Bundle r3;

        r0 := @this: android.telecom.ConnectionRequest;

        r1 := @parameter0: android.telecom.PhoneAccountHandle;

        r2 := @parameter1: android.net.Uri;

        r3 := @parameter2: android.os.Bundle;

        specialinvoke r0.<android.telecom.ConnectionRequest: void <init>(android.telecom.PhoneAccountHandle,android.net.Uri,android.os.Bundle,int,java.lang.String,boolean,android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor)>(r1, r2, r3, 0, null, 0, null, null);

        return;
    }

    public void <init>(android.telecom.PhoneAccountHandle, android.net.Uri, android.os.Bundle, int)
    {
        android.telecom.ConnectionRequest r0;
        android.telecom.PhoneAccountHandle r1;
        android.net.Uri r2;
        android.os.Bundle r3;
        int i0;

        r0 := @this: android.telecom.ConnectionRequest;

        r1 := @parameter0: android.telecom.PhoneAccountHandle;

        r2 := @parameter1: android.net.Uri;

        r3 := @parameter2: android.os.Bundle;

        i0 := @parameter3: int;

        specialinvoke r0.<android.telecom.ConnectionRequest: void <init>(android.telecom.PhoneAccountHandle,android.net.Uri,android.os.Bundle,int,java.lang.String,boolean,android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor)>(r1, r2, r3, i0, null, 0, null, null);

        return;
    }

    public void <init>(android.telecom.PhoneAccountHandle, android.net.Uri, android.os.Bundle, int, java.lang.String, boolean)
    {
        android.telecom.ConnectionRequest r0;
        android.telecom.PhoneAccountHandle r1;
        android.net.Uri r2;
        android.os.Bundle r3;
        int i0;
        java.lang.String r4;
        boolean z0;

        r0 := @this: android.telecom.ConnectionRequest;

        r1 := @parameter0: android.telecom.PhoneAccountHandle;

        r2 := @parameter1: android.net.Uri;

        r3 := @parameter2: android.os.Bundle;

        i0 := @parameter3: int;

        r4 := @parameter4: java.lang.String;

        z0 := @parameter5: boolean;

        specialinvoke r0.<android.telecom.ConnectionRequest: void <init>(android.telecom.PhoneAccountHandle,android.net.Uri,android.os.Bundle,int,java.lang.String,boolean,android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor)>(r1, r2, r3, i0, r4, z0, null, null);

        return;
    }

    private void <init>(android.telecom.PhoneAccountHandle, android.net.Uri, android.os.Bundle, int, java.lang.String, boolean, android.os.ParcelFileDescriptor, android.os.ParcelFileDescriptor)
    {
        android.telecom.ConnectionRequest r0;
        android.telecom.PhoneAccountHandle r1;
        android.net.Uri r2;
        android.os.Bundle r3;
        int i0;
        java.lang.String r4;
        boolean z0;
        android.os.ParcelFileDescriptor r5, r6;

        r0 := @this: android.telecom.ConnectionRequest;

        r1 := @parameter0: android.telecom.PhoneAccountHandle;

        r2 := @parameter1: android.net.Uri;

        r3 := @parameter2: android.os.Bundle;

        i0 := @parameter3: int;

        r4 := @parameter4: java.lang.String;

        z0 := @parameter5: boolean;

        r5 := @parameter6: android.os.ParcelFileDescriptor;

        r6 := @parameter7: android.os.ParcelFileDescriptor;

        specialinvoke r0.<android.telecom.ConnectionRequest: void <init>(android.telecom.PhoneAccountHandle,android.net.Uri,android.os.Bundle,int,java.lang.String,boolean,android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor,java.util.List,boolean)>(r1, r2, r3, i0, r4, z0, r5, r6, null, 0);

        return;
    }

    private void <init>(android.telecom.PhoneAccountHandle, android.net.Uri, android.os.Bundle, int, java.lang.String, boolean, android.os.ParcelFileDescriptor, android.os.ParcelFileDescriptor, java.util.List, boolean)
    {
        android.telecom.ConnectionRequest r0;
        android.telecom.PhoneAccountHandle r1;
        android.net.Uri r2;
        android.os.Bundle r3;
        int i0;
        java.lang.String r4;
        boolean z0, z1;
        android.os.ParcelFileDescriptor r5, r6;
        java.util.List r7;

        r0 := @this: android.telecom.ConnectionRequest;

        r1 := @parameter0: android.telecom.PhoneAccountHandle;

        r2 := @parameter1: android.net.Uri;

        r3 := @parameter2: android.os.Bundle;

        i0 := @parameter3: int;

        r4 := @parameter4: java.lang.String;

        z0 := @parameter5: boolean;

        r5 := @parameter6: android.os.ParcelFileDescriptor;

        r6 := @parameter7: android.os.ParcelFileDescriptor;

        r7 := @parameter8: java.util.List;

        z1 := @parameter9: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.telecom.ConnectionRequest: android.telecom.PhoneAccountHandle mAccountHandle> = r1;

        r0.<android.telecom.ConnectionRequest: android.net.Uri mAddress> = r2;

        r0.<android.telecom.ConnectionRequest: android.os.Bundle mExtras> = r3;

        r0.<android.telecom.ConnectionRequest: int mVideoState> = i0;

        r0.<android.telecom.ConnectionRequest: java.lang.String mTelecomCallId> = r4;

        r0.<android.telecom.ConnectionRequest: boolean mShouldShowIncomingCallUi> = z0;

        r0.<android.telecom.ConnectionRequest: android.os.ParcelFileDescriptor mRttPipeFromInCall> = r5;

        r0.<android.telecom.ConnectionRequest: android.os.ParcelFileDescriptor mRttPipeToInCall> = r6;

        r0.<android.telecom.ConnectionRequest: java.util.List mParticipants> = r7;

        r0.<android.telecom.ConnectionRequest: boolean mIsAdhocConference> = z1;

        return;
    }

    void <init>(android.telecom.PhoneAccountHandle, android.net.Uri, android.os.Bundle, int, java.lang.String, boolean, android.os.ParcelFileDescriptor, android.os.ParcelFileDescriptor, java.util.List, boolean, android.telecom.ConnectionRequest$1)
    {
        android.telecom.ConnectionRequest r0;
        android.telecom.PhoneAccountHandle r1;
        android.net.Uri r2;
        android.os.Bundle r3;
        int i0;
        java.lang.String r4;
        boolean z0, z1;
        android.os.ParcelFileDescriptor r5, r6;
        java.util.List r7;
        android.telecom.ConnectionRequest$1 r8;

        r0 := @this: android.telecom.ConnectionRequest;

        r1 := @parameter0: android.telecom.PhoneAccountHandle;

        r2 := @parameter1: android.net.Uri;

        r3 := @parameter2: android.os.Bundle;

        i0 := @parameter3: int;

        r4 := @parameter4: java.lang.String;

        z0 := @parameter5: boolean;

        r5 := @parameter6: android.os.ParcelFileDescriptor;

        r6 := @parameter7: android.os.ParcelFileDescriptor;

        r7 := @parameter8: java.util.List;

        z1 := @parameter9: boolean;

        r8 := @parameter10: android.telecom.ConnectionRequest$1;

        specialinvoke r0.<android.telecom.ConnectionRequest: void <init>(android.telecom.PhoneAccountHandle,android.net.Uri,android.os.Bundle,int,java.lang.String,boolean,android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor,java.util.List,boolean)>(r1, r2, r3, i0, r4, z0, r5, r6, r7, z1);

        return;
    }

    private static java.lang.String bundleToString(android.os.Bundle)
    {
        android.os.Bundle r0;
        java.util.Iterator r2;
        java.lang.String r3, $r8, $r13;
        int i0;
        java.lang.StringBuilder $r4;
        java.util.Set $r6;
        boolean $z0, $z1, $z2;
        java.lang.Object $r9, $r12, $r16;
        byte b1;

        r0 := @parameter0: android.os.Bundle;

        if r0 != null goto label1;

        return "";

     label1:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bundle[");

        $r6 = virtualinvoke r0.<android.os.Bundle: java.util.Set keySet()>();

        r2 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label9;

        $r9 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.lang.String) $r9;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        b1 = -1;

        i0 = virtualinvoke r3.<java.lang.String: int hashCode()>();

        if i0 == -1582002592 goto label5;

        if i0 == -1513984200 goto label4;

     label3:
        goto label6;

     label4:
        $z2 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("android.telecom.extra.INCOMING_CALL_ADDRESS");

        if $z2 == 0 goto label3;

        b1 = 0;

        goto label6;

     label5:
        $z1 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("android.telecom.extra.UNKNOWN_CALL_HANDLE");

        if $z1 == 0 goto label3;

        b1 = 1;

     label6:
        if b1 == 0 goto label7;

        if b1 == 1 goto label7;

        $r16 = virtualinvoke r0.<android.os.Bundle: java.lang.Object get(java.lang.String)>(r3);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r16);

        goto label8;

     label7:
        $r12 = virtualinvoke r0.<android.os.Bundle: java.lang.Object get(java.lang.String)>(r3);

        $r13 = staticinvoke <android.telecom.Log: java.lang.String pii(java.lang.Object)>($r12);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

     label8:
        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        goto label2;

     label9:
        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r8 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }

    public int describeContents()
    {
        android.telecom.ConnectionRequest r0;

        r0 := @this: android.telecom.ConnectionRequest;

        return 0;
    }

    public android.telecom.PhoneAccountHandle getAccountHandle()
    {
        android.telecom.ConnectionRequest r0;
        android.telecom.PhoneAccountHandle $r1;

        r0 := @this: android.telecom.ConnectionRequest;

        $r1 = r0.<android.telecom.ConnectionRequest: android.telecom.PhoneAccountHandle mAccountHandle>;

        return $r1;
    }

    public android.net.Uri getAddress()
    {
        android.telecom.ConnectionRequest r0;
        android.net.Uri $r1;

        r0 := @this: android.telecom.ConnectionRequest;

        $r1 = r0.<android.telecom.ConnectionRequest: android.net.Uri mAddress>;

        return $r1;
    }

    public android.os.Bundle getExtras()
    {
        android.telecom.ConnectionRequest r0;
        android.os.Bundle $r1;

        r0 := @this: android.telecom.ConnectionRequest;

        $r1 = r0.<android.telecom.ConnectionRequest: android.os.Bundle mExtras>;

        return $r1;
    }

    public java.util.List getParticipants()
    {
        android.telecom.ConnectionRequest r0;
        java.util.List $r1;

        r0 := @this: android.telecom.ConnectionRequest;

        $r1 = r0.<android.telecom.ConnectionRequest: java.util.List mParticipants>;

        return $r1;
    }

    public android.os.ParcelFileDescriptor getRttPipeFromInCall()
    {
        android.telecom.ConnectionRequest r0;
        android.os.ParcelFileDescriptor $r1;

        r0 := @this: android.telecom.ConnectionRequest;

        $r1 = r0.<android.telecom.ConnectionRequest: android.os.ParcelFileDescriptor mRttPipeFromInCall>;

        return $r1;
    }

    public android.os.ParcelFileDescriptor getRttPipeToInCall()
    {
        android.telecom.ConnectionRequest r0;
        android.os.ParcelFileDescriptor $r1;

        r0 := @this: android.telecom.ConnectionRequest;

        $r1 = r0.<android.telecom.ConnectionRequest: android.os.ParcelFileDescriptor mRttPipeToInCall>;

        return $r1;
    }

    public android.telecom.Connection$RttTextStream getRttTextStream()
    {
        android.telecom.ConnectionRequest r0;
        boolean $z0;
        android.telecom.Connection$RttTextStream $r1, $r2, $r3;
        android.os.ParcelFileDescriptor $r4, $r5;

        r0 := @this: android.telecom.ConnectionRequest;

        $z0 = virtualinvoke r0.<android.telecom.ConnectionRequest: boolean isRequestingRtt()>();

        if $z0 == 0 goto label2;

        $r1 = r0.<android.telecom.ConnectionRequest: android.telecom.Connection$RttTextStream mRttTextStream>;

        if $r1 != null goto label1;

        $r3 = new android.telecom.Connection$RttTextStream;

        $r5 = r0.<android.telecom.ConnectionRequest: android.os.ParcelFileDescriptor mRttPipeToInCall>;

        $r4 = r0.<android.telecom.ConnectionRequest: android.os.ParcelFileDescriptor mRttPipeFromInCall>;

        specialinvoke $r3.<android.telecom.Connection$RttTextStream: void <init>(android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor)>($r5, $r4);

        r0.<android.telecom.ConnectionRequest: android.telecom.Connection$RttTextStream mRttTextStream> = $r3;

     label1:
        $r2 = r0.<android.telecom.ConnectionRequest: android.telecom.Connection$RttTextStream mRttTextStream>;

        return $r2;

     label2:
        return null;
    }

    public java.lang.String getTelecomCallId()
    {
        android.telecom.ConnectionRequest r0;
        java.lang.String $r1;

        r0 := @this: android.telecom.ConnectionRequest;

        $r1 = r0.<android.telecom.ConnectionRequest: java.lang.String mTelecomCallId>;

        return $r1;
    }

    public int getVideoState()
    {
        android.telecom.ConnectionRequest r0;
        int $i0;

        r0 := @this: android.telecom.ConnectionRequest;

        $i0 = r0.<android.telecom.ConnectionRequest: int mVideoState>;

        return $i0;
    }

    public boolean isAdhocConferenceCall()
    {
        android.telecom.ConnectionRequest r0;
        boolean $z0;

        r0 := @this: android.telecom.ConnectionRequest;

        $z0 = r0.<android.telecom.ConnectionRequest: boolean mIsAdhocConference>;

        return $z0;
    }

    public boolean isRequestingRtt()
    {
        android.telecom.ConnectionRequest r0;
        android.os.ParcelFileDescriptor $r1, $r2;
        boolean z0;

        r0 := @this: android.telecom.ConnectionRequest;

        $r1 = r0.<android.telecom.ConnectionRequest: android.os.ParcelFileDescriptor mRttPipeFromInCall>;

        if $r1 == null goto label1;

        $r2 = r0.<android.telecom.ConnectionRequest: android.os.ParcelFileDescriptor mRttPipeToInCall>;

        if $r2 == null goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public boolean shouldShowIncomingCallUi()
    {
        android.telecom.ConnectionRequest r0;
        boolean $z0;

        r0 := @this: android.telecom.ConnectionRequest;

        $z0 = r0.<android.telecom.ConnectionRequest: boolean mShouldShowIncomingCallUi>;

        return $z0;
    }

    public java.lang.String toString()
    {
        android.telecom.ConnectionRequest r0;
        java.lang.String r1, $r2, $r5, r8;
        android.os.Bundle $r3;
        boolean $z0;
        java.lang.Object[] $r4;
        android.net.Uri r6;
        java.lang.Object r7;

        r0 := @this: android.telecom.ConnectionRequest;

        r6 = r0.<android.telecom.ConnectionRequest: android.net.Uri mAddress>;

        if r6 != null goto label1;

        r7 = <android.net.Uri: android.net.Uri EMPTY>;

        goto label2;

     label1:
        $r2 = virtualinvoke r6.<android.net.Uri: java.lang.String toString()>();

        r7 = staticinvoke <android.telecom.Connection: java.lang.String toLogSafePhoneNumber(java.lang.String)>($r2);

     label2:
        $r3 = r0.<android.telecom.ConnectionRequest: android.os.Bundle mExtras>;

        r1 = staticinvoke <android.telecom.ConnectionRequest: java.lang.String bundleToString(android.os.Bundle)>($r3);

        $z0 = virtualinvoke r0.<android.telecom.ConnectionRequest: boolean isAdhocConferenceCall()>();

        if $z0 == 0 goto label3;

        r8 = "Y";

        goto label4;

     label3:
        r8 = "N";

     label4:
        $r4 = newarray (java.lang.Object)[3];

        $r4[0] = r7;

        $r4[1] = r1;

        $r4[2] = r8;

        $r5 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("ConnectionRequest %s %s isAdhocConf: %s", $r4);

        return $r5;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.telecom.ConnectionRequest r0;
        android.os.Parcel r1;
        int i0, $i1, i2, i3;
        android.telecom.PhoneAccountHandle $r2;
        android.net.Uri $r3;
        android.os.Bundle $r4;
        java.lang.String $r5;
        boolean $z0, $z1;
        android.os.ParcelFileDescriptor $r6, $r7;
        java.util.List $r8;

        r0 := @this: android.telecom.ConnectionRequest;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        $r2 = r0.<android.telecom.ConnectionRequest: android.telecom.PhoneAccountHandle mAccountHandle>;

        virtualinvoke r1.<android.os.Parcel: void writeParcelable(android.os.Parcelable,int)>($r2, 0);

        $r3 = r0.<android.telecom.ConnectionRequest: android.net.Uri mAddress>;

        virtualinvoke r1.<android.os.Parcel: void writeParcelable(android.os.Parcelable,int)>($r3, 0);

        $r4 = r0.<android.telecom.ConnectionRequest: android.os.Bundle mExtras>;

        virtualinvoke r1.<android.os.Parcel: void writeParcelable(android.os.Parcelable,int)>($r4, 0);

        $i1 = r0.<android.telecom.ConnectionRequest: int mVideoState>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i1);

        $r5 = r0.<android.telecom.ConnectionRequest: java.lang.String mTelecomCallId>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r5);

        $z0 = r0.<android.telecom.ConnectionRequest: boolean mShouldShowIncomingCallUi>;

        i2 = (int) $z0;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i2);

        $r6 = r0.<android.telecom.ConnectionRequest: android.os.ParcelFileDescriptor mRttPipeFromInCall>;

        virtualinvoke r1.<android.os.Parcel: void writeParcelable(android.os.Parcelable,int)>($r6, 0);

        $r7 = r0.<android.telecom.ConnectionRequest: android.os.ParcelFileDescriptor mRttPipeToInCall>;

        virtualinvoke r1.<android.os.Parcel: void writeParcelable(android.os.Parcelable,int)>($r7, 0);

        $r8 = r0.<android.telecom.ConnectionRequest: java.util.List mParticipants>;

        virtualinvoke r1.<android.os.Parcel: void writeList(java.util.List)>($r8);

        $z1 = r0.<android.telecom.ConnectionRequest: boolean mIsAdhocConference>;

        i3 = (int) $z1;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i3);

        return;
    }
}
