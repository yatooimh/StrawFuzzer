class android.telecom.ConnectionService$1 extends com.android.internal.telecom.IConnectionService$Stub
{
    final android.telecom.ConnectionService this$0;

    void <init>(android.telecom.ConnectionService)
    {
        android.telecom.ConnectionService$1 r0;
        android.telecom.ConnectionService r1;

        r0 := @this: android.telecom.ConnectionService$1;

        r1 := @parameter0: android.telecom.ConnectionService;

        r0.<android.telecom.ConnectionService$1: android.telecom.ConnectionService this$0> = r1;

        specialinvoke r0.<com.android.internal.telecom.IConnectionService$Stub: void <init>()>();

        return;
    }

    public void abort(java.lang.String, android.telecom.Logging.Session$Info)
    {
        android.telecom.ConnectionService$1 r0;
        android.telecom.Logging.Session $r1;
        android.telecom.ConnectionService $r2;
        android.os.Handler $r3;
        android.os.Message $r4;
        java.lang.Throwable $r5;
        java.lang.String r6;
        android.telecom.Logging.Session$Info r7;
        com.android.internal.os.SomeArgs r8;

        r0 := @this: android.telecom.ConnectionService$1;

        r6 := @parameter0: java.lang.String;

        r7 := @parameter1: android.telecom.Logging.Session$Info;

        staticinvoke <android.telecom.Log: void startSession(android.telecom.Logging.Session$Info,java.lang.String)>(r7, "CS.ab");

     label1:
        r8 = staticinvoke <com.android.internal.os.SomeArgs: com.android.internal.os.SomeArgs obtain()>();

        r8.<com.android.internal.os.SomeArgs: java.lang.Object arg1> = r6;

        $r1 = staticinvoke <android.telecom.Log: android.telecom.Logging.Session createSubsession()>();

        r8.<com.android.internal.os.SomeArgs: java.lang.Object arg2> = $r1;

        $r2 = r0.<android.telecom.ConnectionService$1: android.telecom.ConnectionService this$0>;

        $r3 = staticinvoke <android.telecom.ConnectionService: android.os.Handler access$000(android.telecom.ConnectionService)>($r2);

        $r4 = virtualinvoke $r3.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(3, r8);

        virtualinvoke $r4.<android.os.Message: void sendToTarget()>();

     label2:
        staticinvoke <android.telecom.Log: void endSession()>();

        return;

     label3:
        $r5 := @caughtexception;

        staticinvoke <android.telecom.Log: void endSession()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void addConferenceParticipants(java.lang.String, java.util.List, android.telecom.Logging.Session$Info)
    {
        android.telecom.ConnectionService$1 r0;
        java.util.List r1;
        android.telecom.Logging.Session $r2;
        android.telecom.ConnectionService $r3;
        android.os.Handler $r4;
        android.os.Message $r5;
        java.lang.Throwable $r6;
        java.lang.String r7;
        android.telecom.Logging.Session$Info r8;
        com.android.internal.os.SomeArgs r9;

        r0 := @this: android.telecom.ConnectionService$1;

        r7 := @parameter0: java.lang.String;

        r1 := @parameter1: java.util.List;

        r8 := @parameter2: android.telecom.Logging.Session$Info;

        staticinvoke <android.telecom.Log: void startSession(android.telecom.Logging.Session$Info,java.lang.String)>(r8, "CS.aP");

     label1:
        r9 = staticinvoke <com.android.internal.os.SomeArgs: com.android.internal.os.SomeArgs obtain()>();

        r9.<com.android.internal.os.SomeArgs: java.lang.Object arg1> = r7;

        r9.<com.android.internal.os.SomeArgs: java.lang.Object arg2> = r1;

        $r2 = staticinvoke <android.telecom.Log: android.telecom.Logging.Session createSubsession()>();

        r9.<com.android.internal.os.SomeArgs: java.lang.Object arg3> = $r2;

        $r3 = r0.<android.telecom.ConnectionService$1: android.telecom.ConnectionService this$0>;

        $r4 = staticinvoke <android.telecom.ConnectionService: android.os.Handler access$000(android.telecom.ConnectionService)>($r3);

        $r5 = virtualinvoke $r4.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(39, r9);

        virtualinvoke $r5.<android.os.Message: void sendToTarget()>();

     label2:
        staticinvoke <android.telecom.Log: void endSession()>();

        return;

     label3:
        $r6 := @caughtexception;

        staticinvoke <android.telecom.Log: void endSession()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void addConnectionServiceAdapter(com.android.internal.telecom.IConnectionServiceAdapter, android.telecom.Logging.Session$Info)
    {
        android.telecom.ConnectionService$1 r0;
        android.telecom.Logging.Session $r1;
        android.telecom.ConnectionService $r2;
        android.os.Handler $r3;
        android.os.Message $r4;
        java.lang.Throwable $r5;
        com.android.internal.telecom.IConnectionServiceAdapter r6;
        android.telecom.Logging.Session$Info r7;
        com.android.internal.os.SomeArgs r8;

        r0 := @this: android.telecom.ConnectionService$1;

        r6 := @parameter0: com.android.internal.telecom.IConnectionServiceAdapter;

        r7 := @parameter1: android.telecom.Logging.Session$Info;

        staticinvoke <android.telecom.Log: void startSession(android.telecom.Logging.Session$Info,java.lang.String)>(r7, "CS.aCSA");

     label1:
        r8 = staticinvoke <com.android.internal.os.SomeArgs: com.android.internal.os.SomeArgs obtain()>();

        r8.<com.android.internal.os.SomeArgs: java.lang.Object arg1> = r6;

        $r1 = staticinvoke <android.telecom.Log: android.telecom.Logging.Session createSubsession()>();

        r8.<com.android.internal.os.SomeArgs: java.lang.Object arg2> = $r1;

        $r2 = r0.<android.telecom.ConnectionService$1: android.telecom.ConnectionService this$0>;

        $r3 = staticinvoke <android.telecom.ConnectionService: android.os.Handler access$000(android.telecom.ConnectionService)>($r2);

        $r4 = virtualinvoke $r3.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(1, r8);

        virtualinvoke $r4.<android.os.Message: void sendToTarget()>();

     label2:
        staticinvoke <android.telecom.Log: void endSession()>();

        return;

     label3:
        $r5 := @caughtexception;

        staticinvoke <android.telecom.Log: void endSession()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void answer(java.lang.String, android.telecom.Logging.Session$Info)
    {
        android.telecom.ConnectionService$1 r0;
        android.telecom.Logging.Session $r1;
        android.telecom.ConnectionService $r2;
        android.os.Handler $r3;
        android.os.Message $r4;
        java.lang.Throwable $r5;
        java.lang.String r6;
        android.telecom.Logging.Session$Info r7;
        com.android.internal.os.SomeArgs r8;

        r0 := @this: android.telecom.ConnectionService$1;

        r6 := @parameter0: java.lang.String;

        r7 := @parameter1: android.telecom.Logging.Session$Info;

        staticinvoke <android.telecom.Log: void startSession(android.telecom.Logging.Session$Info,java.lang.String)>(r7, "CS.an");

     label1:
        r8 = staticinvoke <com.android.internal.os.SomeArgs: com.android.internal.os.SomeArgs obtain()>();

        r8.<com.android.internal.os.SomeArgs: java.lang.Object arg1> = r6;

        $r1 = staticinvoke <android.telecom.Log: android.telecom.Logging.Session createSubsession()>();

        r8.<com.android.internal.os.SomeArgs: java.lang.Object arg2> = $r1;

        $r2 = r0.<android.telecom.ConnectionService$1: android.telecom.ConnectionService this$0>;

        $r3 = staticinvoke <android.telecom.ConnectionService: android.os.Handler access$000(android.telecom.ConnectionService)>($r2);

        $r4 = virtualinvoke $r3.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(4, r8);

        virtualinvoke $r4.<android.os.Message: void sendToTarget()>();

     label2:
        staticinvoke <android.telecom.Log: void endSession()>();

        return;

     label3:
        $r5 := @caughtexception;

        staticinvoke <android.telecom.Log: void endSession()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void answerVideo(java.lang.String, int, android.telecom.Logging.Session$Info)
    {
        android.telecom.ConnectionService$1 r0;
        int i0;
        android.telecom.Logging.Session $r1;
        android.telecom.ConnectionService $r2;
        android.os.Handler $r3;
        android.os.Message $r4;
        java.lang.Throwable $r5;
        java.lang.String r6;
        android.telecom.Logging.Session$Info r7;
        com.android.internal.os.SomeArgs r8;

        r0 := @this: android.telecom.ConnectionService$1;

        r6 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r7 := @parameter2: android.telecom.Logging.Session$Info;

        staticinvoke <android.telecom.Log: void startSession(android.telecom.Logging.Session$Info,java.lang.String)>(r7, "CS.anV");

     label1:
        r8 = staticinvoke <com.android.internal.os.SomeArgs: com.android.internal.os.SomeArgs obtain()>();

        r8.<com.android.internal.os.SomeArgs: java.lang.Object arg1> = r6;

        $r1 = staticinvoke <android.telecom.Log: android.telecom.Logging.Session createSubsession()>();

        r8.<com.android.internal.os.SomeArgs: java.lang.Object arg2> = $r1;

        r8.<com.android.internal.os.SomeArgs: int argi1> = i0;

        $r2 = r0.<android.telecom.ConnectionService$1: android.telecom.ConnectionService this$0>;

        $r3 = staticinvoke <android.telecom.ConnectionService: android.os.Handler access$000(android.telecom.ConnectionService)>($r2);

        $r4 = virtualinvoke $r3.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(17, r8);

        virtualinvoke $r4.<android.os.Message: void sendToTarget()>();

     label2:
        staticinvoke <android.telecom.Log: void endSession()>();

        return;

     label3:
        $r5 := @caughtexception;

        staticinvoke <android.telecom.Log: void endSession()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void conference(java.lang.String, java.lang.String, android.telecom.Logging.Session$Info)
    {
        android.telecom.ConnectionService$1 r0;
        java.lang.String r1, r7;
        android.telecom.Logging.Session $r2;
        android.telecom.ConnectionService $r3;
        android.os.Handler $r4;
        android.os.Message $r5;
        java.lang.Throwable $r6;
        android.telecom.Logging.Session$Info r8;
        com.android.internal.os.SomeArgs r9;

        r0 := @this: android.telecom.ConnectionService$1;

        r7 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r8 := @parameter2: android.telecom.Logging.Session$Info;

        staticinvoke <android.telecom.Log: void startSession(android.telecom.Logging.Session$Info,java.lang.String)>(r8, "CS.c");

     label1:
        r9 = staticinvoke <com.android.internal.os.SomeArgs: com.android.internal.os.SomeArgs obtain()>();

        r9.<com.android.internal.os.SomeArgs: java.lang.Object arg1> = r7;

        r9.<com.android.internal.os.SomeArgs: java.lang.Object arg2> = r1;

        $r2 = staticinvoke <android.telecom.Log: android.telecom.Logging.Session createSubsession()>();

        r9.<com.android.internal.os.SomeArgs: java.lang.Object arg3> = $r2;

        $r3 = r0.<android.telecom.ConnectionService$1: android.telecom.ConnectionService this$0>;

        $r4 = staticinvoke <android.telecom.ConnectionService: android.os.Handler access$000(android.telecom.ConnectionService)>($r3);

        $r5 = virtualinvoke $r4.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(12, r9);

        virtualinvoke $r5.<android.os.Message: void sendToTarget()>();

     label2:
        staticinvoke <android.telecom.Log: void endSession()>();

        return;

     label3:
        $r6 := @caughtexception;

        staticinvoke <android.telecom.Log: void endSession()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void connectionServiceFocusGained(android.telecom.Logging.Session$Info) throws android.os.RemoteException
    {
        android.telecom.ConnectionService$1 r0;
        android.telecom.ConnectionService $r1;
        android.os.Handler $r2;
        android.os.Message $r3;
        java.lang.Throwable $r4;
        android.telecom.Logging.Session$Info r5;

        r0 := @this: android.telecom.ConnectionService$1;

        r5 := @parameter0: android.telecom.Logging.Session$Info;

        staticinvoke <android.telecom.Log: void startSession(android.telecom.Logging.Session$Info,java.lang.String)>(r5, "CS.cSFG");

     label1:
        $r1 = r0.<android.telecom.ConnectionService$1: android.telecom.ConnectionService this$0>;

        $r2 = staticinvoke <android.telecom.ConnectionService: android.os.Handler access$000(android.telecom.ConnectionService)>($r1);

        $r3 = virtualinvoke $r2.<android.os.Handler: android.os.Message obtainMessage(int)>(31);

        virtualinvoke $r3.<android.os.Message: void sendToTarget()>();

     label2:
        staticinvoke <android.telecom.Log: void endSession()>();

        return;

     label3:
        $r4 := @caughtexception;

        staticinvoke <android.telecom.Log: void endSession()>();

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void connectionServiceFocusLost(android.telecom.Logging.Session$Info) throws android.os.RemoteException
    {
        android.telecom.ConnectionService$1 r0;
        android.telecom.ConnectionService $r1;
        android.os.Handler $r2;
        android.os.Message $r3;
        java.lang.Throwable $r4;
        android.telecom.Logging.Session$Info r5;

        r0 := @this: android.telecom.ConnectionService$1;

        r5 := @parameter0: android.telecom.Logging.Session$Info;

        staticinvoke <android.telecom.Log: void startSession(android.telecom.Logging.Session$Info,java.lang.String)>(r5, "CS.cSFL");

     label1:
        $r1 = r0.<android.telecom.ConnectionService$1: android.telecom.ConnectionService this$0>;

        $r2 = staticinvoke <android.telecom.ConnectionService: android.os.Handler access$000(android.telecom.ConnectionService)>($r1);

        $r3 = virtualinvoke $r2.<android.os.Handler: android.os.Message obtainMessage(int)>(30);

        virtualinvoke $r3.<android.os.Message: void sendToTarget()>();

     label2:
        staticinvoke <android.telecom.Log: void endSession()>();

        return;

     label3:
        $r4 := @caughtexception;

        staticinvoke <android.telecom.Log: void endSession()>();

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void consultativeTransfer(java.lang.String, java.lang.String, android.telecom.Logging.Session$Info)
    {
        android.telecom.ConnectionService$1 r0;
        java.lang.String r1, r7;
        android.telecom.Logging.Session $r2;
        android.telecom.ConnectionService $r3;
        android.os.Handler $r4;
        android.os.Message $r5;
        java.lang.Throwable $r6;
        android.telecom.Logging.Session$Info r8;
        com.android.internal.os.SomeArgs r9;

        r0 := @this: android.telecom.ConnectionService$1;

        r7 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r8 := @parameter2: android.telecom.Logging.Session$Info;

        staticinvoke <android.telecom.Log: void startSession(android.telecom.Logging.Session$Info,java.lang.String)>(r8, "CS.cTrans");

     label1:
        r9 = staticinvoke <com.android.internal.os.SomeArgs: com.android.internal.os.SomeArgs obtain()>();

        r9.<com.android.internal.os.SomeArgs: java.lang.Object arg1> = r7;

        r9.<com.android.internal.os.SomeArgs: java.lang.Object arg2> = r1;

        $r2 = staticinvoke <android.telecom.Log: android.telecom.Logging.Session createSubsession()>();

        r9.<com.android.internal.os.SomeArgs: java.lang.Object arg3> = $r2;

        $r3 = r0.<android.telecom.ConnectionService$1: android.telecom.ConnectionService this$0>;

        $r4 = staticinvoke <android.telecom.ConnectionService: android.os.Handler access$000(android.telecom.ConnectionService)>($r3);

        $r5 = virtualinvoke $r4.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(41, r9);

        virtualinvoke $r5.<android.os.Message: void sendToTarget()>();

     label2:
        staticinvoke <android.telecom.Log: void endSession()>();

        return;

     label3:
        $r6 := @caughtexception;

        staticinvoke <android.telecom.Log: void endSession()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void createConference(android.telecom.PhoneAccountHandle, java.lang.String, android.telecom.ConnectionRequest, boolean, boolean, android.telecom.Logging.Session$Info)
    {
        android.telecom.ConnectionService$1 r0;
        java.lang.String r1;
        android.telecom.ConnectionRequest r2;
        boolean z0, z1;
        android.telecom.Logging.Session $r3;
        android.telecom.ConnectionService $r4;
        android.os.Handler $r5;
        android.os.Message $r6;
        java.lang.Throwable $r7;
        android.telecom.PhoneAccountHandle r8;
        android.telecom.Logging.Session$Info r9;
        com.android.internal.os.SomeArgs r10;
        byte b1, b2;

        r0 := @this: android.telecom.ConnectionService$1;

        r8 := @parameter0: android.telecom.PhoneAccountHandle;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.telecom.ConnectionRequest;

        z0 := @parameter3: boolean;

        z1 := @parameter4: boolean;

        r9 := @parameter5: android.telecom.Logging.Session$Info;

        staticinvoke <android.telecom.Log: void startSession(android.telecom.Logging.Session$Info,java.lang.String)>(r9, "CS.crConf");

     label1:
        r10 = staticinvoke <com.android.internal.os.SomeArgs: com.android.internal.os.SomeArgs obtain()>();

        r10.<com.android.internal.os.SomeArgs: java.lang.Object arg1> = r8;

        r10.<com.android.internal.os.SomeArgs: java.lang.Object arg2> = r1;

        r10.<com.android.internal.os.SomeArgs: java.lang.Object arg3> = r2;

        $r3 = staticinvoke <android.telecom.Log: android.telecom.Logging.Session createSubsession()>();

        r10.<com.android.internal.os.SomeArgs: java.lang.Object arg4> = $r3;

     label2:
        if z0 == 0 goto label3;

        b1 = 1;

        goto label4;

     label3:
        b1 = 0;

     label4:
        r10.<com.android.internal.os.SomeArgs: int argi1> = b1;

     label5:
        if z1 == 0 goto label6;

        b2 = 1;

        goto label7;

     label6:
        b2 = 0;

     label7:
        r10.<com.android.internal.os.SomeArgs: int argi2> = b2;

        $r4 = r0.<android.telecom.ConnectionService$1: android.telecom.ConnectionService this$0>;

        $r5 = staticinvoke <android.telecom.ConnectionService: android.os.Handler access$000(android.telecom.ConnectionService)>($r4);

        $r6 = virtualinvoke $r5.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(35, r10);

        virtualinvoke $r6.<android.os.Message: void sendToTarget()>();

     label8:
        staticinvoke <android.telecom.Log: void endSession()>();

        return;

     label9:
        $r7 := @caughtexception;

        staticinvoke <android.telecom.Log: void endSession()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.Throwable from label4 to label5 with label9;
        catch java.lang.Throwable from label7 to label8 with label9;
    }

    public void createConferenceComplete(java.lang.String, android.telecom.Logging.Session$Info)
    {
        android.telecom.ConnectionService$1 r0;
        android.telecom.Logging.Session $r1;
        android.telecom.ConnectionService $r2;
        android.os.Handler $r3;
        android.os.Message $r4;
        java.lang.Throwable $r5;
        java.lang.String r6;
        android.telecom.Logging.Session$Info r7;
        com.android.internal.os.SomeArgs r8;

        r0 := @this: android.telecom.ConnectionService$1;

        r6 := @parameter0: java.lang.String;

        r7 := @parameter1: android.telecom.Logging.Session$Info;

        staticinvoke <android.telecom.Log: void startSession(android.telecom.Logging.Session$Info,java.lang.String)>(r7, "CS.crConfC");

     label1:
        r8 = staticinvoke <com.android.internal.os.SomeArgs: com.android.internal.os.SomeArgs obtain()>();

        r8.<com.android.internal.os.SomeArgs: java.lang.Object arg1> = r6;

        $r1 = staticinvoke <android.telecom.Log: android.telecom.Logging.Session createSubsession()>();

        r8.<com.android.internal.os.SomeArgs: java.lang.Object arg2> = $r1;

        $r2 = r0.<android.telecom.ConnectionService$1: android.telecom.ConnectionService this$0>;

        $r3 = staticinvoke <android.telecom.ConnectionService: android.os.Handler access$000(android.telecom.ConnectionService)>($r2);

        $r4 = virtualinvoke $r3.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(36, r8);

        virtualinvoke $r4.<android.os.Message: void sendToTarget()>();

     label2:
        staticinvoke <android.telecom.Log: void endSession()>();

        return;

     label3:
        $r5 := @caughtexception;

        staticinvoke <android.telecom.Log: void endSession()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void createConferenceFailed(android.telecom.PhoneAccountHandle, java.lang.String, android.telecom.ConnectionRequest, boolean, android.telecom.Logging.Session$Info)
    {
        android.telecom.ConnectionService$1 r0;
        java.lang.String r1;
        android.telecom.ConnectionRequest r2;
        boolean z0;
        android.telecom.Logging.Session $r3;
        android.telecom.ConnectionService $r4;
        android.os.Handler $r5;
        android.os.Message $r6;
        java.lang.Throwable $r7;
        android.telecom.PhoneAccountHandle r8;
        android.telecom.Logging.Session$Info r9;
        com.android.internal.os.SomeArgs r10;
        byte b0;

        r0 := @this: android.telecom.ConnectionService$1;

        r8 := @parameter0: android.telecom.PhoneAccountHandle;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.telecom.ConnectionRequest;

        z0 := @parameter3: boolean;

        r9 := @parameter4: android.telecom.Logging.Session$Info;

        staticinvoke <android.telecom.Log: void startSession(android.telecom.Logging.Session$Info,java.lang.String)>(r9, "CS.crConfF");

     label1:
        r10 = staticinvoke <com.android.internal.os.SomeArgs: com.android.internal.os.SomeArgs obtain()>();

        r10.<com.android.internal.os.SomeArgs: java.lang.Object arg1> = r1;

        r10.<com.android.internal.os.SomeArgs: java.lang.Object arg2> = r2;

        $r3 = staticinvoke <android.telecom.Log: android.telecom.Logging.Session createSubsession()>();

        r10.<com.android.internal.os.SomeArgs: java.lang.Object arg3> = $r3;

        r10.<com.android.internal.os.SomeArgs: java.lang.Object arg4> = r8;

     label2:
        if z0 == 0 goto label3;

        b0 = 1;

        goto label4;

     label3:
        b0 = 0;

     label4:
        r10.<com.android.internal.os.SomeArgs: int argi1> = b0;

        $r4 = r0.<android.telecom.ConnectionService$1: android.telecom.ConnectionService this$0>;

        $r5 = staticinvoke <android.telecom.ConnectionService: android.os.Handler access$000(android.telecom.ConnectionService)>($r4);

        $r6 = virtualinvoke $r5.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(37, r10);

        virtualinvoke $r6.<android.os.Message: void sendToTarget()>();

     label5:
        staticinvoke <android.telecom.Log: void endSession()>();

        return;

     label6:
        $r7 := @caughtexception;

        staticinvoke <android.telecom.Log: void endSession()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
    }

    public void createConnection(android.telecom.PhoneAccountHandle, java.lang.String, android.telecom.ConnectionRequest, boolean, boolean, android.telecom.Logging.Session$Info)
    {
        android.telecom.ConnectionService$1 r0;
        java.lang.String r1;
        android.telecom.ConnectionRequest r2;
        boolean z0, z1;
        android.telecom.Logging.Session $r3;
        android.telecom.ConnectionService $r4;
        android.os.Handler $r5;
        android.os.Message $r6;
        java.lang.Throwable $r7;
        android.telecom.PhoneAccountHandle r8;
        android.telecom.Logging.Session$Info r9;
        com.android.internal.os.SomeArgs r10;
        byte b1, b2;

        r0 := @this: android.telecom.ConnectionService$1;

        r8 := @parameter0: android.telecom.PhoneAccountHandle;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.telecom.ConnectionRequest;

        z0 := @parameter3: boolean;

        z1 := @parameter4: boolean;

        r9 := @parameter5: android.telecom.Logging.Session$Info;

        staticinvoke <android.telecom.Log: void startSession(android.telecom.Logging.Session$Info,java.lang.String)>(r9, "CS.crCo");

     label1:
        r10 = staticinvoke <com.android.internal.os.SomeArgs: com.android.internal.os.SomeArgs obtain()>();

        r10.<com.android.internal.os.SomeArgs: java.lang.Object arg1> = r8;

        r10.<com.android.internal.os.SomeArgs: java.lang.Object arg2> = r1;

        r10.<com.android.internal.os.SomeArgs: java.lang.Object arg3> = r2;

        $r3 = staticinvoke <android.telecom.Log: android.telecom.Logging.Session createSubsession()>();

        r10.<com.android.internal.os.SomeArgs: java.lang.Object arg4> = $r3;

     label2:
        if z0 == 0 goto label3;

        b1 = 1;

        goto label4;

     label3:
        b1 = 0;

     label4:
        r10.<com.android.internal.os.SomeArgs: int argi1> = b1;

     label5:
        if z1 == 0 goto label6;

        b2 = 1;

        goto label7;

     label6:
        b2 = 0;

     label7:
        r10.<com.android.internal.os.SomeArgs: int argi2> = b2;

        $r4 = r0.<android.telecom.ConnectionService$1: android.telecom.ConnectionService this$0>;

        $r5 = staticinvoke <android.telecom.ConnectionService: android.os.Handler access$000(android.telecom.ConnectionService)>($r4);

        $r6 = virtualinvoke $r5.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(2, r10);

        virtualinvoke $r6.<android.os.Message: void sendToTarget()>();

     label8:
        staticinvoke <android.telecom.Log: void endSession()>();

        return;

     label9:
        $r7 := @caughtexception;

        staticinvoke <android.telecom.Log: void endSession()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.Throwable from label4 to label5 with label9;
        catch java.lang.Throwable from label7 to label8 with label9;
    }

    public void createConnectionComplete(java.lang.String, android.telecom.Logging.Session$Info)
    {
        android.telecom.ConnectionService$1 r0;
        android.telecom.Logging.Session $r1;
        android.telecom.ConnectionService $r2;
        android.os.Handler $r3;
        android.os.Message $r4;
        java.lang.Throwable $r5;
        java.lang.String r6;
        android.telecom.Logging.Session$Info r7;
        com.android.internal.os.SomeArgs r8;

        r0 := @this: android.telecom.ConnectionService$1;

        r6 := @parameter0: java.lang.String;

        r7 := @parameter1: android.telecom.Logging.Session$Info;

        staticinvoke <android.telecom.Log: void startSession(android.telecom.Logging.Session$Info,java.lang.String)>(r7, "CS.crCoC");

     label1:
        r8 = staticinvoke <com.android.internal.os.SomeArgs: com.android.internal.os.SomeArgs obtain()>();

        r8.<com.android.internal.os.SomeArgs: java.lang.Object arg1> = r6;

        $r1 = staticinvoke <android.telecom.Log: android.telecom.Logging.Session createSubsession()>();

        r8.<com.android.internal.os.SomeArgs: java.lang.Object arg2> = $r1;

        $r2 = r0.<android.telecom.ConnectionService$1: android.telecom.ConnectionService this$0>;

        $r3 = staticinvoke <android.telecom.ConnectionService: android.os.Handler access$000(android.telecom.ConnectionService)>($r2);

        $r4 = virtualinvoke $r3.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(29, r8);

        virtualinvoke $r4.<android.os.Message: void sendToTarget()>();

     label2:
        staticinvoke <android.telecom.Log: void endSession()>();

        return;

     label3:
        $r5 := @caughtexception;

        staticinvoke <android.telecom.Log: void endSession()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void createConnectionFailed(android.telecom.PhoneAccountHandle, java.lang.String, android.telecom.ConnectionRequest, boolean, android.telecom.Logging.Session$Info)
    {
        android.telecom.ConnectionService$1 r0;
        java.lang.String r1;
        android.telecom.ConnectionRequest r2;
        boolean z0;
        android.telecom.Logging.Session $r3;
        android.telecom.ConnectionService $r4;
        android.os.Handler $r5;
        android.os.Message $r6;
        java.lang.Throwable $r7;
        android.telecom.PhoneAccountHandle r8;
        android.telecom.Logging.Session$Info r9;
        com.android.internal.os.SomeArgs r10;
        byte b0;

        r0 := @this: android.telecom.ConnectionService$1;

        r8 := @parameter0: android.telecom.PhoneAccountHandle;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.telecom.ConnectionRequest;

        z0 := @parameter3: boolean;

        r9 := @parameter4: android.telecom.Logging.Session$Info;

        staticinvoke <android.telecom.Log: void startSession(android.telecom.Logging.Session$Info,java.lang.String)>(r9, "CS.crCoF");

     label1:
        r10 = staticinvoke <com.android.internal.os.SomeArgs: com.android.internal.os.SomeArgs obtain()>();

        r10.<com.android.internal.os.SomeArgs: java.lang.Object arg1> = r1;

        r10.<com.android.internal.os.SomeArgs: java.lang.Object arg2> = r2;

        $r3 = staticinvoke <android.telecom.Log: android.telecom.Logging.Session createSubsession()>();

        r10.<com.android.internal.os.SomeArgs: java.lang.Object arg3> = $r3;

        r10.<com.android.internal.os.SomeArgs: java.lang.Object arg4> = r8;

     label2:
        if z0 == 0 goto label3;

        b0 = 1;

        goto label4;

     label3:
        b0 = 0;

     label4:
        r10.<com.android.internal.os.SomeArgs: int argi1> = b0;

        $r4 = r0.<android.telecom.ConnectionService$1: android.telecom.ConnectionService this$0>;

        $r5 = staticinvoke <android.telecom.ConnectionService: android.os.Handler access$000(android.telecom.ConnectionService)>($r4);

        $r6 = virtualinvoke $r5.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(25, r10);

        virtualinvoke $r6.<android.os.Message: void sendToTarget()>();

     label5:
        staticinvoke <android.telecom.Log: void endSession()>();

        return;

     label6:
        $r7 := @caughtexception;

        staticinvoke <android.telecom.Log: void endSession()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
    }

    public void deflect(java.lang.String, android.net.Uri, android.telecom.Logging.Session$Info)
    {
        android.telecom.ConnectionService$1 r0;
        android.net.Uri r1;
        android.telecom.Logging.Session $r2;
        android.telecom.ConnectionService $r3;
        android.os.Handler $r4;
        android.os.Message $r5;
        java.lang.Throwable $r6;
        java.lang.String r7;
        android.telecom.Logging.Session$Info r8;
        com.android.internal.os.SomeArgs r9;

        r0 := @this: android.telecom.ConnectionService$1;

        r7 := @parameter0: java.lang.String;

        r1 := @parameter1: android.net.Uri;

        r8 := @parameter2: android.telecom.Logging.Session$Info;

        staticinvoke <android.telecom.Log: void startSession(android.telecom.Logging.Session$Info,java.lang.String)>(r8, "CS.def");

     label1:
        r9 = staticinvoke <com.android.internal.os.SomeArgs: com.android.internal.os.SomeArgs obtain()>();

        r9.<com.android.internal.os.SomeArgs: java.lang.Object arg1> = r7;

        r9.<com.android.internal.os.SomeArgs: java.lang.Object arg2> = r1;

        $r2 = staticinvoke <android.telecom.Log: android.telecom.Logging.Session createSubsession()>();

        r9.<com.android.internal.os.SomeArgs: java.lang.Object arg3> = $r2;

        $r3 = r0.<android.telecom.ConnectionService$1: android.telecom.ConnectionService this$0>;

        $r4 = staticinvoke <android.telecom.ConnectionService: android.os.Handler access$000(android.telecom.ConnectionService)>($r3);

        $r5 = virtualinvoke $r4.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(34, r9);

        virtualinvoke $r5.<android.os.Message: void sendToTarget()>();

     label2:
        staticinvoke <android.telecom.Log: void endSession()>();

        return;

     label3:
        $r6 := @caughtexception;

        staticinvoke <android.telecom.Log: void endSession()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void disconnect(java.lang.String, android.telecom.Logging.Session$Info)
    {
        android.telecom.ConnectionService$1 r0;
        android.telecom.Logging.Session $r1;
        android.telecom.ConnectionService $r2;
        android.os.Handler $r3;
        android.os.Message $r4;
        java.lang.Throwable $r5;
        java.lang.String r6;
        android.telecom.Logging.Session$Info r7;
        com.android.internal.os.SomeArgs r8;

        r0 := @this: android.telecom.ConnectionService$1;

        r6 := @parameter0: java.lang.String;

        r7 := @parameter1: android.telecom.Logging.Session$Info;

        staticinvoke <android.telecom.Log: void startSession(android.telecom.Logging.Session$Info,java.lang.String)>(r7, "CS.d");

     label1:
        r8 = staticinvoke <com.android.internal.os.SomeArgs: com.android.internal.os.SomeArgs obtain()>();

        r8.<com.android.internal.os.SomeArgs: java.lang.Object arg1> = r6;

        $r1 = staticinvoke <android.telecom.Log: android.telecom.Logging.Session createSubsession()>();

        r8.<com.android.internal.os.SomeArgs: java.lang.Object arg2> = $r1;

        $r2 = r0.<android.telecom.ConnectionService$1: android.telecom.ConnectionService this$0>;

        $r3 = staticinvoke <android.telecom.ConnectionService: android.os.Handler access$000(android.telecom.ConnectionService)>($r2);

        $r4 = virtualinvoke $r3.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(6, r8);

        virtualinvoke $r4.<android.os.Message: void sendToTarget()>();

     label2:
        staticinvoke <android.telecom.Log: void endSession()>();

        return;

     label3:
        $r5 := @caughtexception;

        staticinvoke <android.telecom.Log: void endSession()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void handoverComplete(java.lang.String, android.telecom.Logging.Session$Info)
    {
        android.telecom.ConnectionService$1 r0;
        android.telecom.Logging.Session $r1;
        android.telecom.ConnectionService $r2;
        android.os.Handler $r3;
        android.os.Message $r4;
        java.lang.Throwable $r5;
        java.lang.String r6;
        android.telecom.Logging.Session$Info r7;
        com.android.internal.os.SomeArgs r8;

        r0 := @this: android.telecom.ConnectionService$1;

        r6 := @parameter0: java.lang.String;

        r7 := @parameter1: android.telecom.Logging.Session$Info;

        staticinvoke <android.telecom.Log: void startSession(android.telecom.Logging.Session$Info,java.lang.String)>(r7, "CS.hC");

     label1:
        r8 = staticinvoke <com.android.internal.os.SomeArgs: com.android.internal.os.SomeArgs obtain()>();

        r8.<com.android.internal.os.SomeArgs: java.lang.Object arg1> = r6;

        $r1 = staticinvoke <android.telecom.Log: android.telecom.Logging.Session createSubsession()>();

        r8.<com.android.internal.os.SomeArgs: java.lang.Object arg2> = $r1;

        $r2 = r0.<android.telecom.ConnectionService$1: android.telecom.ConnectionService this$0>;

        $r3 = staticinvoke <android.telecom.ConnectionService: android.os.Handler access$000(android.telecom.ConnectionService)>($r2);

        $r4 = virtualinvoke $r3.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(33, r8);

        virtualinvoke $r4.<android.os.Message: void sendToTarget()>();

     label2:
        staticinvoke <android.telecom.Log: void endSession()>();

        return;

     label3:
        $r5 := @caughtexception;

        staticinvoke <android.telecom.Log: void endSession()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void handoverFailed(java.lang.String, android.telecom.ConnectionRequest, int, android.telecom.Logging.Session$Info)
    {
        android.telecom.ConnectionService$1 r0;
        android.telecom.ConnectionRequest r1;
        int i0;
        android.telecom.Logging.Session $r2;
        java.lang.Integer $r3;
        android.telecom.ConnectionService $r4;
        android.os.Handler $r5;
        android.os.Message $r6;
        java.lang.Throwable $r7;
        java.lang.String r8;
        android.telecom.Logging.Session$Info r9;
        com.android.internal.os.SomeArgs r10;

        r0 := @this: android.telecom.ConnectionService$1;

        r8 := @parameter0: java.lang.String;

        r1 := @parameter1: android.telecom.ConnectionRequest;

        i0 := @parameter2: int;

        r9 := @parameter3: android.telecom.Logging.Session$Info;

        staticinvoke <android.telecom.Log: void startSession(android.telecom.Logging.Session$Info,java.lang.String)>(r9, "CS.haF");

     label1:
        r10 = staticinvoke <com.android.internal.os.SomeArgs: com.android.internal.os.SomeArgs obtain()>();

        r10.<com.android.internal.os.SomeArgs: java.lang.Object arg1> = r8;

        r10.<com.android.internal.os.SomeArgs: java.lang.Object arg2> = r1;

        $r2 = staticinvoke <android.telecom.Log: android.telecom.Logging.Session createSubsession()>();

        r10.<com.android.internal.os.SomeArgs: java.lang.Object arg3> = $r2;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        r10.<com.android.internal.os.SomeArgs: java.lang.Object arg4> = $r3;

        $r4 = r0.<android.telecom.ConnectionService$1: android.telecom.ConnectionService this$0>;

        $r5 = staticinvoke <android.telecom.ConnectionService: android.os.Handler access$000(android.telecom.ConnectionService)>($r4);

        $r6 = virtualinvoke $r5.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(32, r10);

        virtualinvoke $r6.<android.os.Message: void sendToTarget()>();

     label2:
        staticinvoke <android.telecom.Log: void endSession()>();

        return;

     label3:
        $r7 := @caughtexception;

        staticinvoke <android.telecom.Log: void endSession()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void hold(java.lang.String, android.telecom.Logging.Session$Info)
    {
        android.telecom.ConnectionService$1 r0;
        android.telecom.Logging.Session $r1;
        android.telecom.ConnectionService $r2;
        android.os.Handler $r3;
        android.os.Message $r4;
        java.lang.Throwable $r5;
        java.lang.String r6;
        android.telecom.Logging.Session$Info r7;
        com.android.internal.os.SomeArgs r8;

        r0 := @this: android.telecom.ConnectionService$1;

        r6 := @parameter0: java.lang.String;

        r7 := @parameter1: android.telecom.Logging.Session$Info;

        staticinvoke <android.telecom.Log: void startSession(android.telecom.Logging.Session$Info,java.lang.String)>(r7, "CS.h");

     label1:
        r8 = staticinvoke <com.android.internal.os.SomeArgs: com.android.internal.os.SomeArgs obtain()>();

        r8.<com.android.internal.os.SomeArgs: java.lang.Object arg1> = r6;

        $r1 = staticinvoke <android.telecom.Log: android.telecom.Logging.Session createSubsession()>();

        r8.<com.android.internal.os.SomeArgs: java.lang.Object arg2> = $r1;

        $r2 = r0.<android.telecom.ConnectionService$1: android.telecom.ConnectionService this$0>;

        $r3 = staticinvoke <android.telecom.ConnectionService: android.os.Handler access$000(android.telecom.ConnectionService)>($r2);

        $r4 = virtualinvoke $r3.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(7, r8);

        virtualinvoke $r4.<android.os.Message: void sendToTarget()>();

     label2:
        staticinvoke <android.telecom.Log: void endSession()>();

        return;

     label3:
        $r5 := @caughtexception;

        staticinvoke <android.telecom.Log: void endSession()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void mergeConference(java.lang.String, android.telecom.Logging.Session$Info)
    {
        android.telecom.ConnectionService$1 r0;
        android.telecom.Logging.Session $r1;
        android.telecom.ConnectionService $r2;
        android.os.Handler $r3;
        android.os.Message $r4;
        java.lang.Throwable $r5;
        java.lang.String r6;
        android.telecom.Logging.Session$Info r7;
        com.android.internal.os.SomeArgs r8;

        r0 := @this: android.telecom.ConnectionService$1;

        r6 := @parameter0: java.lang.String;

        r7 := @parameter1: android.telecom.Logging.Session$Info;

        staticinvoke <android.telecom.Log: void startSession(android.telecom.Logging.Session$Info,java.lang.String)>(r7, "CS.mC");

     label1:
        r8 = staticinvoke <com.android.internal.os.SomeArgs: com.android.internal.os.SomeArgs obtain()>();

        r8.<com.android.internal.os.SomeArgs: java.lang.Object arg1> = r6;

        $r1 = staticinvoke <android.telecom.Log: android.telecom.Logging.Session createSubsession()>();

        r8.<com.android.internal.os.SomeArgs: java.lang.Object arg2> = $r1;

        $r2 = r0.<android.telecom.ConnectionService$1: android.telecom.ConnectionService this$0>;

        $r3 = staticinvoke <android.telecom.ConnectionService: android.os.Handler access$000(android.telecom.ConnectionService)>($r2);

        $r4 = virtualinvoke $r3.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(18, r8);

        virtualinvoke $r4.<android.os.Message: void sendToTarget()>();

     label2:
        staticinvoke <android.telecom.Log: void endSession()>();

        return;

     label3:
        $r5 := @caughtexception;

        staticinvoke <android.telecom.Log: void endSession()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void onCallAudioStateChanged(java.lang.String, android.telecom.CallAudioState, android.telecom.Logging.Session$Info)
    {
        android.telecom.ConnectionService$1 r0;
        android.telecom.CallAudioState r1;
        android.telecom.Logging.Session $r2;
        android.telecom.ConnectionService $r3;
        android.os.Handler $r4;
        android.os.Message $r5;
        java.lang.Throwable $r6;
        java.lang.String r7;
        android.telecom.Logging.Session$Info r8;
        com.android.internal.os.SomeArgs r9;

        r0 := @this: android.telecom.ConnectionService$1;

        r7 := @parameter0: java.lang.String;

        r1 := @parameter1: android.telecom.CallAudioState;

        r8 := @parameter2: android.telecom.Logging.Session$Info;

        staticinvoke <android.telecom.Log: void startSession(android.telecom.Logging.Session$Info,java.lang.String)>(r8, "CS.cASC");

     label1:
        r9 = staticinvoke <com.android.internal.os.SomeArgs: com.android.internal.os.SomeArgs obtain()>();

        r9.<com.android.internal.os.SomeArgs: java.lang.Object arg1> = r7;

        r9.<com.android.internal.os.SomeArgs: java.lang.Object arg2> = r1;

        $r2 = staticinvoke <android.telecom.Log: android.telecom.Logging.Session createSubsession()>();

        r9.<com.android.internal.os.SomeArgs: java.lang.Object arg3> = $r2;

        $r3 = r0.<android.telecom.ConnectionService$1: android.telecom.ConnectionService this$0>;

        $r4 = staticinvoke <android.telecom.ConnectionService: android.os.Handler access$000(android.telecom.ConnectionService)>($r3);

        $r5 = virtualinvoke $r4.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(9, r9);

        virtualinvoke $r5.<android.os.Message: void sendToTarget()>();

     label2:
        staticinvoke <android.telecom.Log: void endSession()>();

        return;

     label3:
        $r6 := @caughtexception;

        staticinvoke <android.telecom.Log: void endSession()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void onExtrasChanged(java.lang.String, android.os.Bundle, android.telecom.Logging.Session$Info)
    {
        android.telecom.ConnectionService$1 r0;
        android.os.Bundle r1;
        android.telecom.Logging.Session $r2;
        android.telecom.ConnectionService $r3;
        android.os.Handler $r4;
        android.os.Message $r5;
        java.lang.Throwable $r6;
        java.lang.String r7;
        android.telecom.Logging.Session$Info r8;
        com.android.internal.os.SomeArgs r9;

        r0 := @this: android.telecom.ConnectionService$1;

        r7 := @parameter0: java.lang.String;

        r1 := @parameter1: android.os.Bundle;

        r8 := @parameter2: android.telecom.Logging.Session$Info;

        staticinvoke <android.telecom.Log: void startSession(android.telecom.Logging.Session$Info,java.lang.String)>(r8, "CS.oEC");

     label1:
        r9 = staticinvoke <com.android.internal.os.SomeArgs: com.android.internal.os.SomeArgs obtain()>();

        r9.<com.android.internal.os.SomeArgs: java.lang.Object arg1> = r7;

        r9.<com.android.internal.os.SomeArgs: java.lang.Object arg2> = r1;

        $r2 = staticinvoke <android.telecom.Log: android.telecom.Logging.Session createSubsession()>();

        r9.<com.android.internal.os.SomeArgs: java.lang.Object arg3> = $r2;

        $r3 = r0.<android.telecom.ConnectionService$1: android.telecom.ConnectionService this$0>;

        $r4 = staticinvoke <android.telecom.ConnectionService: android.os.Handler access$000(android.telecom.ConnectionService)>($r3);

        $r5 = virtualinvoke $r4.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(24, r9);

        virtualinvoke $r5.<android.os.Message: void sendToTarget()>();

     label2:
        staticinvoke <android.telecom.Log: void endSession()>();

        return;

     label3:
        $r6 := @caughtexception;

        staticinvoke <android.telecom.Log: void endSession()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void onPostDialContinue(java.lang.String, boolean, android.telecom.Logging.Session$Info)
    {
        android.telecom.ConnectionService$1 r0;
        boolean z0;
        android.telecom.Logging.Session $r1;
        android.telecom.ConnectionService $r2;
        android.os.Handler $r3;
        android.os.Message $r4;
        java.lang.Throwable $r5;
        java.lang.String r6;
        android.telecom.Logging.Session$Info r7;
        com.android.internal.os.SomeArgs r8;
        byte b0;

        r0 := @this: android.telecom.ConnectionService$1;

        r6 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        r7 := @parameter2: android.telecom.Logging.Session$Info;

        staticinvoke <android.telecom.Log: void startSession(android.telecom.Logging.Session$Info,java.lang.String)>(r7, "CS.oPDC");

     label1:
        r8 = staticinvoke <com.android.internal.os.SomeArgs: com.android.internal.os.SomeArgs obtain()>();

        r8.<com.android.internal.os.SomeArgs: java.lang.Object arg1> = r6;

        $r1 = staticinvoke <android.telecom.Log: android.telecom.Logging.Session createSubsession()>();

        r8.<com.android.internal.os.SomeArgs: java.lang.Object arg2> = $r1;

     label2:
        if z0 == 0 goto label3;

        b0 = 1;

        goto label4;

     label3:
        b0 = 0;

     label4:
        r8.<com.android.internal.os.SomeArgs: int argi1> = b0;

        $r2 = r0.<android.telecom.ConnectionService$1: android.telecom.ConnectionService this$0>;

        $r3 = staticinvoke <android.telecom.ConnectionService: android.os.Handler access$000(android.telecom.ConnectionService)>($r2);

        $r4 = virtualinvoke $r3.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(14, r8);

        virtualinvoke $r4.<android.os.Message: void sendToTarget()>();

     label5:
        staticinvoke <android.telecom.Log: void endSession()>();

        return;

     label6:
        $r5 := @caughtexception;

        staticinvoke <android.telecom.Log: void endSession()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
    }

    public void playDtmfTone(java.lang.String, char, android.telecom.Logging.Session$Info)
    {
        android.telecom.ConnectionService$1 r0;
        char c0;
        java.lang.Character $r1;
        android.telecom.Logging.Session $r2;
        android.telecom.ConnectionService $r3;
        android.os.Handler $r4;
        android.os.Message $r5;
        java.lang.Throwable $r6;
        java.lang.String r7;
        android.telecom.Logging.Session$Info r8;
        com.android.internal.os.SomeArgs r9;

        r0 := @this: android.telecom.ConnectionService$1;

        r7 := @parameter0: java.lang.String;

        c0 := @parameter1: char;

        r8 := @parameter2: android.telecom.Logging.Session$Info;

        staticinvoke <android.telecom.Log: void startSession(android.telecom.Logging.Session$Info,java.lang.String)>(r8, "CS.pDT");

     label1:
        r9 = staticinvoke <com.android.internal.os.SomeArgs: com.android.internal.os.SomeArgs obtain()>();

        $r1 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(c0);

        r9.<com.android.internal.os.SomeArgs: java.lang.Object arg1> = $r1;

        r9.<com.android.internal.os.SomeArgs: java.lang.Object arg2> = r7;

        $r2 = staticinvoke <android.telecom.Log: android.telecom.Logging.Session createSubsession()>();

        r9.<com.android.internal.os.SomeArgs: java.lang.Object arg3> = $r2;

        $r3 = r0.<android.telecom.ConnectionService$1: android.telecom.ConnectionService this$0>;

        $r4 = staticinvoke <android.telecom.ConnectionService: android.os.Handler access$000(android.telecom.ConnectionService)>($r3);

        $r5 = virtualinvoke $r4.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(10, r9);

        virtualinvoke $r5.<android.os.Message: void sendToTarget()>();

     label2:
        staticinvoke <android.telecom.Log: void endSession()>();

        return;

     label3:
        $r6 := @caughtexception;

        staticinvoke <android.telecom.Log: void endSession()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void pullExternalCall(java.lang.String, android.telecom.Logging.Session$Info)
    {
        android.telecom.ConnectionService$1 r0;
        android.telecom.Logging.Session $r1;
        android.telecom.ConnectionService $r2;
        android.os.Handler $r3;
        android.os.Message $r4;
        java.lang.Throwable $r5;
        java.lang.String r6;
        android.telecom.Logging.Session$Info r7;
        com.android.internal.os.SomeArgs r8;

        r0 := @this: android.telecom.ConnectionService$1;

        r6 := @parameter0: java.lang.String;

        r7 := @parameter1: android.telecom.Logging.Session$Info;

        staticinvoke <android.telecom.Log: void startSession(android.telecom.Logging.Session$Info,java.lang.String)>(r7, "CS.pEC");

     label1:
        r8 = staticinvoke <com.android.internal.os.SomeArgs: com.android.internal.os.SomeArgs obtain()>();

        r8.<com.android.internal.os.SomeArgs: java.lang.Object arg1> = r6;

        $r1 = staticinvoke <android.telecom.Log: android.telecom.Logging.Session createSubsession()>();

        r8.<com.android.internal.os.SomeArgs: java.lang.Object arg2> = $r1;

        $r2 = r0.<android.telecom.ConnectionService$1: android.telecom.ConnectionService this$0>;

        $r3 = staticinvoke <android.telecom.ConnectionService: android.os.Handler access$000(android.telecom.ConnectionService)>($r2);

        $r4 = virtualinvoke $r3.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(22, r8);

        virtualinvoke $r4.<android.os.Message: void sendToTarget()>();

     label2:
        staticinvoke <android.telecom.Log: void endSession()>();

        return;

     label3:
        $r5 := @caughtexception;

        staticinvoke <android.telecom.Log: void endSession()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void reject(java.lang.String, android.telecom.Logging.Session$Info)
    {
        android.telecom.ConnectionService$1 r0;
        android.telecom.Logging.Session $r1;
        android.telecom.ConnectionService $r2;
        android.os.Handler $r3;
        android.os.Message $r4;
        java.lang.Throwable $r5;
        java.lang.String r6;
        android.telecom.Logging.Session$Info r7;
        com.android.internal.os.SomeArgs r8;

        r0 := @this: android.telecom.ConnectionService$1;

        r6 := @parameter0: java.lang.String;

        r7 := @parameter1: android.telecom.Logging.Session$Info;

        staticinvoke <android.telecom.Log: void startSession(android.telecom.Logging.Session$Info,java.lang.String)>(r7, "CS.r");

     label1:
        r8 = staticinvoke <com.android.internal.os.SomeArgs: com.android.internal.os.SomeArgs obtain()>();

        r8.<com.android.internal.os.SomeArgs: java.lang.Object arg1> = r6;

        $r1 = staticinvoke <android.telecom.Log: android.telecom.Logging.Session createSubsession()>();

        r8.<com.android.internal.os.SomeArgs: java.lang.Object arg2> = $r1;

        $r2 = r0.<android.telecom.ConnectionService$1: android.telecom.ConnectionService this$0>;

        $r3 = staticinvoke <android.telecom.ConnectionService: android.os.Handler access$000(android.telecom.ConnectionService)>($r2);

        $r4 = virtualinvoke $r3.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(5, r8);

        virtualinvoke $r4.<android.os.Message: void sendToTarget()>();

     label2:
        staticinvoke <android.telecom.Log: void endSession()>();

        return;

     label3:
        $r5 := @caughtexception;

        staticinvoke <android.telecom.Log: void endSession()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void rejectWithMessage(java.lang.String, java.lang.String, android.telecom.Logging.Session$Info)
    {
        android.telecom.ConnectionService$1 r0;
        java.lang.String r1, r7;
        android.telecom.Logging.Session $r2;
        android.telecom.ConnectionService $r3;
        android.os.Handler $r4;
        android.os.Message $r5;
        java.lang.Throwable $r6;
        android.telecom.Logging.Session$Info r8;
        com.android.internal.os.SomeArgs r9;

        r0 := @this: android.telecom.ConnectionService$1;

        r7 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r8 := @parameter2: android.telecom.Logging.Session$Info;

        staticinvoke <android.telecom.Log: void startSession(android.telecom.Logging.Session$Info,java.lang.String)>(r8, "CS.rWM");

     label1:
        r9 = staticinvoke <com.android.internal.os.SomeArgs: com.android.internal.os.SomeArgs obtain()>();

        r9.<com.android.internal.os.SomeArgs: java.lang.Object arg1> = r7;

        r9.<com.android.internal.os.SomeArgs: java.lang.Object arg2> = r1;

        $r2 = staticinvoke <android.telecom.Log: android.telecom.Logging.Session createSubsession()>();

        r9.<com.android.internal.os.SomeArgs: java.lang.Object arg3> = $r2;

        $r3 = r0.<android.telecom.ConnectionService$1: android.telecom.ConnectionService this$0>;

        $r4 = staticinvoke <android.telecom.ConnectionService: android.os.Handler access$000(android.telecom.ConnectionService)>($r3);

        $r5 = virtualinvoke $r4.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(20, r9);

        virtualinvoke $r5.<android.os.Message: void sendToTarget()>();

     label2:
        staticinvoke <android.telecom.Log: void endSession()>();

        return;

     label3:
        $r6 := @caughtexception;

        staticinvoke <android.telecom.Log: void endSession()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void rejectWithReason(java.lang.String, int, android.telecom.Logging.Session$Info)
    {
        android.telecom.ConnectionService$1 r0;
        int i0;
        android.telecom.Logging.Session $r1;
        android.telecom.ConnectionService $r2;
        android.os.Handler $r3;
        android.os.Message $r4;
        java.lang.Throwable $r5;
        java.lang.String r6;
        android.telecom.Logging.Session$Info r7;
        com.android.internal.os.SomeArgs r8;

        r0 := @this: android.telecom.ConnectionService$1;

        r6 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r7 := @parameter2: android.telecom.Logging.Session$Info;

        staticinvoke <android.telecom.Log: void startSession(android.telecom.Logging.Session$Info,java.lang.String)>(r7, "CS.r");

     label1:
        r8 = staticinvoke <com.android.internal.os.SomeArgs: com.android.internal.os.SomeArgs obtain()>();

        r8.<com.android.internal.os.SomeArgs: java.lang.Object arg1> = r6;

        r8.<com.android.internal.os.SomeArgs: int argi1> = i0;

        $r1 = staticinvoke <android.telecom.Log: android.telecom.Logging.Session createSubsession()>();

        r8.<com.android.internal.os.SomeArgs: java.lang.Object arg2> = $r1;

        $r2 = r0.<android.telecom.ConnectionService$1: android.telecom.ConnectionService this$0>;

        $r3 = staticinvoke <android.telecom.ConnectionService: android.os.Handler access$000(android.telecom.ConnectionService)>($r2);

        $r4 = virtualinvoke $r3.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(38, r8);

        virtualinvoke $r4.<android.os.Message: void sendToTarget()>();

     label2:
        staticinvoke <android.telecom.Log: void endSession()>();

        return;

     label3:
        $r5 := @caughtexception;

        staticinvoke <android.telecom.Log: void endSession()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void removeConnectionServiceAdapter(com.android.internal.telecom.IConnectionServiceAdapter, android.telecom.Logging.Session$Info)
    {
        android.telecom.ConnectionService$1 r0;
        android.telecom.Logging.Session $r1;
        android.telecom.ConnectionService $r2;
        android.os.Handler $r3;
        android.os.Message $r4;
        java.lang.Throwable $r5;
        com.android.internal.telecom.IConnectionServiceAdapter r6;
        android.telecom.Logging.Session$Info r7;
        com.android.internal.os.SomeArgs r8;

        r0 := @this: android.telecom.ConnectionService$1;

        r6 := @parameter0: com.android.internal.telecom.IConnectionServiceAdapter;

        r7 := @parameter1: android.telecom.Logging.Session$Info;

        staticinvoke <android.telecom.Log: void startSession(android.telecom.Logging.Session$Info,java.lang.String)>(r7, "CS.rCSA");

     label1:
        r8 = staticinvoke <com.android.internal.os.SomeArgs: com.android.internal.os.SomeArgs obtain()>();

        r8.<com.android.internal.os.SomeArgs: java.lang.Object arg1> = r6;

        $r1 = staticinvoke <android.telecom.Log: android.telecom.Logging.Session createSubsession()>();

        r8.<com.android.internal.os.SomeArgs: java.lang.Object arg2> = $r1;

        $r2 = r0.<android.telecom.ConnectionService$1: android.telecom.ConnectionService this$0>;

        $r3 = staticinvoke <android.telecom.ConnectionService: android.os.Handler access$000(android.telecom.ConnectionService)>($r2);

        $r4 = virtualinvoke $r3.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(16, r8);

        virtualinvoke $r4.<android.os.Message: void sendToTarget()>();

     label2:
        staticinvoke <android.telecom.Log: void endSession()>();

        return;

     label3:
        $r5 := @caughtexception;

        staticinvoke <android.telecom.Log: void endSession()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void respondToRttUpgradeRequest(java.lang.String, android.os.ParcelFileDescriptor, android.os.ParcelFileDescriptor, android.telecom.Logging.Session$Info) throws android.os.RemoteException
    {
        android.telecom.ConnectionService$1 r0;
        android.os.ParcelFileDescriptor r1, r2;
        java.lang.Throwable $r3;
        java.lang.String r4;
        android.telecom.Logging.Session$Info r5;
        com.android.internal.os.SomeArgs r6;
        android.telecom.Connection$RttTextStream r7;
        android.telecom.Logging.Session $r8;
        android.telecom.ConnectionService $r9;
        android.os.Handler $r10;
        android.os.Message $r11;

        r0 := @this: android.telecom.ConnectionService$1;

        r4 := @parameter0: java.lang.String;

        r1 := @parameter1: android.os.ParcelFileDescriptor;

        r2 := @parameter2: android.os.ParcelFileDescriptor;

        r5 := @parameter3: android.telecom.Logging.Session$Info;

        staticinvoke <android.telecom.Log: void startSession(android.telecom.Logging.Session$Info,java.lang.String)>(r5, "CS.rTRUR");

     label1:
        r6 = staticinvoke <com.android.internal.os.SomeArgs: com.android.internal.os.SomeArgs obtain()>();

        r6.<com.android.internal.os.SomeArgs: java.lang.Object arg1> = r4;

     label2:
        if r2 == null goto label5;

        if r1 != null goto label3;

        goto label5;

     label3:
        r7 = new android.telecom.Connection$RttTextStream;

        specialinvoke r7.<android.telecom.Connection$RttTextStream: void <init>(android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor)>(r2, r1);

        r6.<com.android.internal.os.SomeArgs: java.lang.Object arg2> = r7;

     label4:
        goto label6;

     label5:
        r6.<com.android.internal.os.SomeArgs: java.lang.Object arg2> = null;

     label6:
        $r8 = staticinvoke <android.telecom.Log: android.telecom.Logging.Session createSubsession()>();

        r6.<com.android.internal.os.SomeArgs: java.lang.Object arg3> = $r8;

        $r9 = r0.<android.telecom.ConnectionService$1: android.telecom.ConnectionService this$0>;

        $r10 = staticinvoke <android.telecom.ConnectionService: android.os.Handler access$000(android.telecom.ConnectionService)>($r9);

        $r11 = virtualinvoke $r10.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(28, r6);

        virtualinvoke $r11.<android.os.Message: void sendToTarget()>();

     label7:
        staticinvoke <android.telecom.Log: void endSession()>();

        return;

     label8:
        $r3 := @caughtexception;

        staticinvoke <android.telecom.Log: void endSession()>();

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
    }

    public void sendCallEvent(java.lang.String, java.lang.String, android.os.Bundle, android.telecom.Logging.Session$Info)
    {
        android.telecom.ConnectionService$1 r0;
        java.lang.String r1, r8;
        android.os.Bundle r2;
        android.telecom.Logging.Session $r3;
        android.telecom.ConnectionService $r4;
        android.os.Handler $r5;
        android.os.Message $r6;
        java.lang.Throwable $r7;
        android.telecom.Logging.Session$Info r9;
        com.android.internal.os.SomeArgs r10;

        r0 := @this: android.telecom.ConnectionService$1;

        r8 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.os.Bundle;

        r9 := @parameter3: android.telecom.Logging.Session$Info;

        staticinvoke <android.telecom.Log: void startSession(android.telecom.Logging.Session$Info,java.lang.String)>(r9, "CS.sCE");

     label1:
        r10 = staticinvoke <com.android.internal.os.SomeArgs: com.android.internal.os.SomeArgs obtain()>();

        r10.<com.android.internal.os.SomeArgs: java.lang.Object arg1> = r8;

        r10.<com.android.internal.os.SomeArgs: java.lang.Object arg2> = r1;

        r10.<com.android.internal.os.SomeArgs: java.lang.Object arg3> = r2;

        $r3 = staticinvoke <android.telecom.Log: android.telecom.Logging.Session createSubsession()>();

        r10.<com.android.internal.os.SomeArgs: java.lang.Object arg4> = $r3;

        $r4 = r0.<android.telecom.ConnectionService$1: android.telecom.ConnectionService this$0>;

        $r5 = staticinvoke <android.telecom.ConnectionService: android.os.Handler access$000(android.telecom.ConnectionService)>($r4);

        $r6 = virtualinvoke $r5.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(23, r10);

        virtualinvoke $r6.<android.os.Message: void sendToTarget()>();

     label2:
        staticinvoke <android.telecom.Log: void endSession()>();

        return;

     label3:
        $r7 := @caughtexception;

        staticinvoke <android.telecom.Log: void endSession()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void silence(java.lang.String, android.telecom.Logging.Session$Info)
    {
        android.telecom.ConnectionService$1 r0;
        android.telecom.Logging.Session $r1;
        android.telecom.ConnectionService $r2;
        android.os.Handler $r3;
        android.os.Message $r4;
        java.lang.Throwable $r5;
        java.lang.String r6;
        android.telecom.Logging.Session$Info r7;
        com.android.internal.os.SomeArgs r8;

        r0 := @this: android.telecom.ConnectionService$1;

        r6 := @parameter0: java.lang.String;

        r7 := @parameter1: android.telecom.Logging.Session$Info;

        staticinvoke <android.telecom.Log: void startSession(android.telecom.Logging.Session$Info,java.lang.String)>(r7, "CS.s");

     label1:
        r8 = staticinvoke <com.android.internal.os.SomeArgs: com.android.internal.os.SomeArgs obtain()>();

        r8.<com.android.internal.os.SomeArgs: java.lang.Object arg1> = r6;

        $r1 = staticinvoke <android.telecom.Log: android.telecom.Logging.Session createSubsession()>();

        r8.<com.android.internal.os.SomeArgs: java.lang.Object arg2> = $r1;

        $r2 = r0.<android.telecom.ConnectionService$1: android.telecom.ConnectionService this$0>;

        $r3 = staticinvoke <android.telecom.ConnectionService: android.os.Handler access$000(android.telecom.ConnectionService)>($r2);

        $r4 = virtualinvoke $r3.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(21, r8);

        virtualinvoke $r4.<android.os.Message: void sendToTarget()>();

     label2:
        staticinvoke <android.telecom.Log: void endSession()>();

        return;

     label3:
        $r5 := @caughtexception;

        staticinvoke <android.telecom.Log: void endSession()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void splitFromConference(java.lang.String, android.telecom.Logging.Session$Info)
    {
        android.telecom.ConnectionService$1 r0;
        android.telecom.Logging.Session $r1;
        android.telecom.ConnectionService $r2;
        android.os.Handler $r3;
        android.os.Message $r4;
        java.lang.Throwable $r5;
        java.lang.String r6;
        android.telecom.Logging.Session$Info r7;
        com.android.internal.os.SomeArgs r8;

        r0 := @this: android.telecom.ConnectionService$1;

        r6 := @parameter0: java.lang.String;

        r7 := @parameter1: android.telecom.Logging.Session$Info;

        staticinvoke <android.telecom.Log: void startSession(android.telecom.Logging.Session$Info,java.lang.String)>(r7, "CS.sFC");

     label1:
        r8 = staticinvoke <com.android.internal.os.SomeArgs: com.android.internal.os.SomeArgs obtain()>();

        r8.<com.android.internal.os.SomeArgs: java.lang.Object arg1> = r6;

        $r1 = staticinvoke <android.telecom.Log: android.telecom.Logging.Session createSubsession()>();

        r8.<com.android.internal.os.SomeArgs: java.lang.Object arg2> = $r1;

        $r2 = r0.<android.telecom.ConnectionService$1: android.telecom.ConnectionService this$0>;

        $r3 = staticinvoke <android.telecom.ConnectionService: android.os.Handler access$000(android.telecom.ConnectionService)>($r2);

        $r4 = virtualinvoke $r3.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(13, r8);

        virtualinvoke $r4.<android.os.Message: void sendToTarget()>();

     label2:
        staticinvoke <android.telecom.Log: void endSession()>();

        return;

     label3:
        $r5 := @caughtexception;

        staticinvoke <android.telecom.Log: void endSession()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void startRtt(java.lang.String, android.os.ParcelFileDescriptor, android.os.ParcelFileDescriptor, android.telecom.Logging.Session$Info) throws android.os.RemoteException
    {
        android.telecom.ConnectionService$1 r0;
        android.os.ParcelFileDescriptor r1, r2;
        android.telecom.Logging.Session $r3;
        android.telecom.ConnectionService $r4;
        android.os.Handler $r5;
        android.os.Message $r6;
        java.lang.Throwable $r7;
        java.lang.String r8;
        android.telecom.Logging.Session$Info r9;
        com.android.internal.os.SomeArgs r10;
        android.telecom.Connection$RttTextStream r11;

        r0 := @this: android.telecom.ConnectionService$1;

        r8 := @parameter0: java.lang.String;

        r1 := @parameter1: android.os.ParcelFileDescriptor;

        r2 := @parameter2: android.os.ParcelFileDescriptor;

        r9 := @parameter3: android.telecom.Logging.Session$Info;

        staticinvoke <android.telecom.Log: void startSession(android.telecom.Logging.Session$Info,java.lang.String)>(r9, "CS.+RTT");

     label1:
        r10 = staticinvoke <com.android.internal.os.SomeArgs: com.android.internal.os.SomeArgs obtain()>();

        r10.<com.android.internal.os.SomeArgs: java.lang.Object arg1> = r8;

        r11 = new android.telecom.Connection$RttTextStream;

        specialinvoke r11.<android.telecom.Connection$RttTextStream: void <init>(android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor)>(r2, r1);

        r10.<com.android.internal.os.SomeArgs: java.lang.Object arg2> = r11;

        $r3 = staticinvoke <android.telecom.Log: android.telecom.Logging.Session createSubsession()>();

        r10.<com.android.internal.os.SomeArgs: java.lang.Object arg3> = $r3;

        $r4 = r0.<android.telecom.ConnectionService$1: android.telecom.ConnectionService this$0>;

        $r5 = staticinvoke <android.telecom.ConnectionService: android.os.Handler access$000(android.telecom.ConnectionService)>($r4);

        $r6 = virtualinvoke $r5.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(26, r10);

        virtualinvoke $r6.<android.os.Message: void sendToTarget()>();

     label2:
        staticinvoke <android.telecom.Log: void endSession()>();

        return;

     label3:
        $r7 := @caughtexception;

        staticinvoke <android.telecom.Log: void endSession()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void stopDtmfTone(java.lang.String, android.telecom.Logging.Session$Info)
    {
        android.telecom.ConnectionService$1 r0;
        android.telecom.Logging.Session $r1;
        android.telecom.ConnectionService $r2;
        android.os.Handler $r3;
        android.os.Message $r4;
        java.lang.Throwable $r5;
        java.lang.String r6;
        android.telecom.Logging.Session$Info r7;
        com.android.internal.os.SomeArgs r8;

        r0 := @this: android.telecom.ConnectionService$1;

        r6 := @parameter0: java.lang.String;

        r7 := @parameter1: android.telecom.Logging.Session$Info;

        staticinvoke <android.telecom.Log: void startSession(android.telecom.Logging.Session$Info,java.lang.String)>(r7, "CS.sDT");

     label1:
        r8 = staticinvoke <com.android.internal.os.SomeArgs: com.android.internal.os.SomeArgs obtain()>();

        r8.<com.android.internal.os.SomeArgs: java.lang.Object arg1> = r6;

        $r1 = staticinvoke <android.telecom.Log: android.telecom.Logging.Session createSubsession()>();

        r8.<com.android.internal.os.SomeArgs: java.lang.Object arg2> = $r1;

        $r2 = r0.<android.telecom.ConnectionService$1: android.telecom.ConnectionService this$0>;

        $r3 = staticinvoke <android.telecom.ConnectionService: android.os.Handler access$000(android.telecom.ConnectionService)>($r2);

        $r4 = virtualinvoke $r3.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(11, r8);

        virtualinvoke $r4.<android.os.Message: void sendToTarget()>();

     label2:
        staticinvoke <android.telecom.Log: void endSession()>();

        return;

     label3:
        $r5 := @caughtexception;

        staticinvoke <android.telecom.Log: void endSession()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void stopRtt(java.lang.String, android.telecom.Logging.Session$Info) throws android.os.RemoteException
    {
        android.telecom.ConnectionService$1 r0;
        android.telecom.Logging.Session $r1;
        android.telecom.ConnectionService $r2;
        android.os.Handler $r3;
        android.os.Message $r4;
        java.lang.Throwable $r5;
        java.lang.String r6;
        android.telecom.Logging.Session$Info r7;
        com.android.internal.os.SomeArgs r8;

        r0 := @this: android.telecom.ConnectionService$1;

        r6 := @parameter0: java.lang.String;

        r7 := @parameter1: android.telecom.Logging.Session$Info;

        staticinvoke <android.telecom.Log: void startSession(android.telecom.Logging.Session$Info,java.lang.String)>(r7, "CS.-RTT");

     label1:
        r8 = staticinvoke <com.android.internal.os.SomeArgs: com.android.internal.os.SomeArgs obtain()>();

        r8.<com.android.internal.os.SomeArgs: java.lang.Object arg1> = r6;

        $r1 = staticinvoke <android.telecom.Log: android.telecom.Logging.Session createSubsession()>();

        r8.<com.android.internal.os.SomeArgs: java.lang.Object arg2> = $r1;

        $r2 = r0.<android.telecom.ConnectionService$1: android.telecom.ConnectionService this$0>;

        $r3 = staticinvoke <android.telecom.ConnectionService: android.os.Handler access$000(android.telecom.ConnectionService)>($r2);

        $r4 = virtualinvoke $r3.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(27, r8);

        virtualinvoke $r4.<android.os.Message: void sendToTarget()>();

     label2:
        staticinvoke <android.telecom.Log: void endSession()>();

        return;

     label3:
        $r5 := @caughtexception;

        staticinvoke <android.telecom.Log: void endSession()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void swapConference(java.lang.String, android.telecom.Logging.Session$Info)
    {
        android.telecom.ConnectionService$1 r0;
        android.telecom.Logging.Session $r1;
        android.telecom.ConnectionService $r2;
        android.os.Handler $r3;
        android.os.Message $r4;
        java.lang.Throwable $r5;
        java.lang.String r6;
        android.telecom.Logging.Session$Info r7;
        com.android.internal.os.SomeArgs r8;

        r0 := @this: android.telecom.ConnectionService$1;

        r6 := @parameter0: java.lang.String;

        r7 := @parameter1: android.telecom.Logging.Session$Info;

        staticinvoke <android.telecom.Log: void startSession(android.telecom.Logging.Session$Info,java.lang.String)>(r7, "CS.sC");

     label1:
        r8 = staticinvoke <com.android.internal.os.SomeArgs: com.android.internal.os.SomeArgs obtain()>();

        r8.<com.android.internal.os.SomeArgs: java.lang.Object arg1> = r6;

        $r1 = staticinvoke <android.telecom.Log: android.telecom.Logging.Session createSubsession()>();

        r8.<com.android.internal.os.SomeArgs: java.lang.Object arg2> = $r1;

        $r2 = r0.<android.telecom.ConnectionService$1: android.telecom.ConnectionService this$0>;

        $r3 = staticinvoke <android.telecom.ConnectionService: android.os.Handler access$000(android.telecom.ConnectionService)>($r2);

        $r4 = virtualinvoke $r3.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(19, r8);

        virtualinvoke $r4.<android.os.Message: void sendToTarget()>();

     label2:
        staticinvoke <android.telecom.Log: void endSession()>();

        return;

     label3:
        $r5 := @caughtexception;

        staticinvoke <android.telecom.Log: void endSession()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void transfer(java.lang.String, android.net.Uri, boolean, android.telecom.Logging.Session$Info)
    {
        android.telecom.ConnectionService$1 r0;
        android.net.Uri r1;
        boolean z0;
        android.telecom.Logging.Session $r2;
        android.telecom.ConnectionService $r3;
        android.os.Handler $r4;
        android.os.Message $r5;
        java.lang.Throwable $r6;
        java.lang.String r7;
        android.telecom.Logging.Session$Info r8;
        com.android.internal.os.SomeArgs r9;
        byte b0;

        r0 := @this: android.telecom.ConnectionService$1;

        r7 := @parameter0: java.lang.String;

        r1 := @parameter1: android.net.Uri;

        z0 := @parameter2: boolean;

        r8 := @parameter3: android.telecom.Logging.Session$Info;

        staticinvoke <android.telecom.Log: void startSession(android.telecom.Logging.Session$Info,java.lang.String)>(r8, "CS.trans");

     label1:
        r9 = staticinvoke <com.android.internal.os.SomeArgs: com.android.internal.os.SomeArgs obtain()>();

        r9.<com.android.internal.os.SomeArgs: java.lang.Object arg1> = r7;

        r9.<com.android.internal.os.SomeArgs: java.lang.Object arg2> = r1;

     label2:
        if z0 == 0 goto label3;

        b0 = 1;

        goto label4;

     label3:
        b0 = 0;

     label4:
        r9.<com.android.internal.os.SomeArgs: int argi1> = b0;

        $r2 = staticinvoke <android.telecom.Log: android.telecom.Logging.Session createSubsession()>();

        r9.<com.android.internal.os.SomeArgs: java.lang.Object arg3> = $r2;

        $r3 = r0.<android.telecom.ConnectionService$1: android.telecom.ConnectionService this$0>;

        $r4 = staticinvoke <android.telecom.ConnectionService: android.os.Handler access$000(android.telecom.ConnectionService)>($r3);

        $r5 = virtualinvoke $r4.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(40, r9);

        virtualinvoke $r5.<android.os.Message: void sendToTarget()>();

     label5:
        staticinvoke <android.telecom.Log: void endSession()>();

        return;

     label6:
        $r6 := @caughtexception;

        staticinvoke <android.telecom.Log: void endSession()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
    }

    public void unhold(java.lang.String, android.telecom.Logging.Session$Info)
    {
        android.telecom.ConnectionService$1 r0;
        android.telecom.Logging.Session $r1;
        android.telecom.ConnectionService $r2;
        android.os.Handler $r3;
        android.os.Message $r4;
        java.lang.Throwable $r5;
        java.lang.String r6;
        android.telecom.Logging.Session$Info r7;
        com.android.internal.os.SomeArgs r8;

        r0 := @this: android.telecom.ConnectionService$1;

        r6 := @parameter0: java.lang.String;

        r7 := @parameter1: android.telecom.Logging.Session$Info;

        staticinvoke <android.telecom.Log: void startSession(android.telecom.Logging.Session$Info,java.lang.String)>(r7, "CS.u");

     label1:
        r8 = staticinvoke <com.android.internal.os.SomeArgs: com.android.internal.os.SomeArgs obtain()>();

        r8.<com.android.internal.os.SomeArgs: java.lang.Object arg1> = r6;

        $r1 = staticinvoke <android.telecom.Log: android.telecom.Logging.Session createSubsession()>();

        r8.<com.android.internal.os.SomeArgs: java.lang.Object arg2> = $r1;

        $r2 = r0.<android.telecom.ConnectionService$1: android.telecom.ConnectionService this$0>;

        $r3 = staticinvoke <android.telecom.ConnectionService: android.os.Handler access$000(android.telecom.ConnectionService)>($r2);

        $r4 = virtualinvoke $r3.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(8, r8);

        virtualinvoke $r4.<android.os.Message: void sendToTarget()>();

     label2:
        staticinvoke <android.telecom.Log: void endSession()>();

        return;

     label3:
        $r5 := @caughtexception;

        staticinvoke <android.telecom.Log: void endSession()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
}
