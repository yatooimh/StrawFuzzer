public final class android.telecom.Phone extends java.lang.Object
{
    public static final int SDK_VERSION_R;
    private android.telecom.CallAudioState mCallAudioState;
    private final java.util.Map mCallByTelecomCallId;
    private final java.lang.String mCallingPackage;
    private final java.util.List mCalls;
    private boolean mCanAddCall;
    private final android.telecom.InCallAdapter mInCallAdapter;
    private final java.util.List mListeners;
    private final int mTargetSdkVersion;
    private final java.util.List mUnmodifiableCalls;

    void <init>(android.telecom.InCallAdapter, java.lang.String, int)
    {
        android.telecom.Phone r0;
        android.telecom.InCallAdapter r1;
        java.lang.String r2;
        int i0;
        android.util.ArrayMap $r4;
        java.util.concurrent.CopyOnWriteArrayList $r5, $r7;
        java.util.List $r6;

        r0 := @this: android.telecom.Phone;

        r1 := @parameter0: android.telecom.InCallAdapter;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r4 = new android.util.ArrayMap;

        specialinvoke $r4.<android.util.ArrayMap: void <init>()>();

        r0.<android.telecom.Phone: java.util.Map mCallByTelecomCallId> = $r4;

        $r5 = new java.util.concurrent.CopyOnWriteArrayList;

        specialinvoke $r5.<java.util.concurrent.CopyOnWriteArrayList: void <init>()>();

        r0.<android.telecom.Phone: java.util.List mCalls> = $r5;

        $r6 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r5);

        r0.<android.telecom.Phone: java.util.List mUnmodifiableCalls> = $r6;

        $r7 = new java.util.concurrent.CopyOnWriteArrayList;

        specialinvoke $r7.<java.util.concurrent.CopyOnWriteArrayList: void <init>()>();

        r0.<android.telecom.Phone: java.util.List mListeners> = $r7;

        r0.<android.telecom.Phone: boolean mCanAddCall> = 1;

        r0.<android.telecom.Phone: android.telecom.InCallAdapter mInCallAdapter> = r1;

        r0.<android.telecom.Phone: java.lang.String mCallingPackage> = r2;

        r0.<android.telecom.Phone: int mTargetSdkVersion> = i0;

        return;
    }

    private void checkCallTree(android.telecom.ParcelableCall)
    {
        android.telecom.Phone r0;
        android.telecom.ParcelableCall r1;
        java.util.List $r2, $r3, $r5, $r9;
        int $i0, i1;
        java.util.Map $r4;
        java.lang.Object $r6, $r10;
        boolean $z0;
        java.lang.Object[] $r7;
        java.lang.String $r8;

        r0 := @this: android.telecom.Phone;

        r1 := @parameter0: android.telecom.ParcelableCall;

        $r2 = virtualinvoke r1.<android.telecom.ParcelableCall: java.util.List getChildCallIds()>();

        if $r2 == null goto label3;

        i1 = 0;

     label1:
        $r3 = virtualinvoke r1.<android.telecom.ParcelableCall: java.util.List getChildCallIds()>();

        $i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        if i1 >= $i0 goto label3;

        $r4 = r0.<android.telecom.Phone: java.util.Map mCallByTelecomCallId>;

        $r5 = virtualinvoke r1.<android.telecom.ParcelableCall: java.util.List getChildCallIds()>();

        $r6 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(i1);

        $z0 = interfaceinvoke $r4.<java.util.Map: boolean containsKey(java.lang.Object)>($r6);

        if $z0 != 0 goto label2;

        $r7 = newarray (java.lang.Object)[2];

        $r8 = virtualinvoke r1.<android.telecom.ParcelableCall: java.lang.String getId()>();

        $r7[0] = $r8;

        $r9 = virtualinvoke r1.<android.telecom.ParcelableCall: java.util.List getChildCallIds()>();

        $r10 = interfaceinvoke $r9.<java.util.List: java.lang.Object get(int)>(i1);

        $r7[1] = $r10;

        staticinvoke <android.telecom.Log: void wtf(java.lang.Object,java.lang.String,java.lang.Object[])>(r0, "ParcelableCall %s has nonexistent child %s", $r7);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return;
    }

    private void fireBringToForeground(boolean)
    {
        android.telecom.Phone r0;
        boolean z0, $z1;
        java.util.Iterator r1;
        java.util.List $r2;
        java.lang.Object $r3;
        android.telecom.Phone$Listener $r4;

        r0 := @this: android.telecom.Phone;

        z0 := @parameter0: boolean;

        $r2 = r0.<android.telecom.Phone: java.util.List mListeners>;

        r1 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label2;

        $r3 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (android.telecom.Phone$Listener) $r3;

        virtualinvoke $r4.<android.telecom.Phone$Listener: void onBringToForeground(android.telecom.Phone,boolean)>(r0, z0);

        goto label1;

     label2:
        return;
    }

    private void fireCallAdded(android.telecom.Call)
    {
        android.telecom.Phone r0;
        android.telecom.Call r1;
        java.util.Iterator r2;
        java.util.List $r3;
        boolean $z0;
        java.lang.Object $r4;
        android.telecom.Phone$Listener $r5;

        r0 := @this: android.telecom.Phone;

        r1 := @parameter0: android.telecom.Call;

        $r3 = r0.<android.telecom.Phone: java.util.List mListeners>;

        r2 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (android.telecom.Phone$Listener) $r4;

        virtualinvoke $r5.<android.telecom.Phone$Listener: void onCallAdded(android.telecom.Phone,android.telecom.Call)>(r0, r1);

        goto label1;

     label2:
        return;
    }

    private void fireCallAudioStateChanged(android.telecom.CallAudioState)
    {
        android.telecom.Phone r0;
        android.telecom.CallAudioState r1;
        java.util.Iterator r2;
        android.telecom.Phone$Listener r3;
        java.util.List $r4;
        boolean $z0;
        java.lang.Object $r5;
        android.telecom.AudioState $r6;

        r0 := @this: android.telecom.Phone;

        r1 := @parameter0: android.telecom.CallAudioState;

        $r4 = r0.<android.telecom.Phone: java.util.List mListeners>;

        r2 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.telecom.Phone$Listener) $r5;

        virtualinvoke r3.<android.telecom.Phone$Listener: void onCallAudioStateChanged(android.telecom.Phone,android.telecom.CallAudioState)>(r0, r1);

        $r6 = new android.telecom.AudioState;

        specialinvoke $r6.<android.telecom.AudioState: void <init>(android.telecom.CallAudioState)>(r1);

        virtualinvoke r3.<android.telecom.Phone$Listener: void onAudioStateChanged(android.telecom.Phone,android.telecom.AudioState)>(r0, $r6);

        goto label1;

     label2:
        return;
    }

    private void fireCallRemoved(android.telecom.Call)
    {
        android.telecom.Phone r0;
        android.telecom.Call r1;
        java.util.Iterator r2;
        java.util.List $r3;
        boolean $z0;
        java.lang.Object $r4;
        android.telecom.Phone$Listener $r5;

        r0 := @this: android.telecom.Phone;

        r1 := @parameter0: android.telecom.Call;

        $r3 = r0.<android.telecom.Phone: java.util.List mListeners>;

        r2 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (android.telecom.Phone$Listener) $r4;

        virtualinvoke $r5.<android.telecom.Phone$Listener: void onCallRemoved(android.telecom.Phone,android.telecom.Call)>(r0, r1);

        goto label1;

     label2:
        return;
    }

    private void fireCanAddCallChanged(boolean)
    {
        android.telecom.Phone r0;
        boolean z0, $z1;
        java.util.Iterator r1;
        java.util.List $r2;
        java.lang.Object $r3;
        android.telecom.Phone$Listener $r4;

        r0 := @this: android.telecom.Phone;

        z0 := @parameter0: boolean;

        $r2 = r0.<android.telecom.Phone: java.util.List mListeners>;

        r1 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label2;

        $r3 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (android.telecom.Phone$Listener) $r3;

        virtualinvoke $r4.<android.telecom.Phone$Listener: void onCanAddCallChanged(android.telecom.Phone,boolean)>(r0, z0);

        goto label1;

     label2:
        return;
    }

    private void fireSilenceRinger()
    {
        android.telecom.Phone r0;
        java.util.Iterator r1;
        java.util.List $r2;
        boolean $z0;
        java.lang.Object $r3;
        android.telecom.Phone$Listener $r4;

        r0 := @this: android.telecom.Phone;

        $r2 = r0.<android.telecom.Phone: java.util.List mListeners>;

        r1 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (android.telecom.Phone$Listener) $r3;

        virtualinvoke $r4.<android.telecom.Phone$Listener: void onSilenceRinger(android.telecom.Phone)>(r0);

        goto label1;

     label2:
        return;
    }

    public final void addListener(android.telecom.Phone$Listener)
    {
        android.telecom.Phone r0;
        android.telecom.Phone$Listener r1;
        java.util.List $r2;

        r0 := @this: android.telecom.Phone;

        r1 := @parameter0: android.telecom.Phone$Listener;

        $r2 = r0.<android.telecom.Phone: java.util.List mListeners>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        return;
    }

    public final boolean canAddCall()
    {
        android.telecom.Phone r0;
        boolean $z0;

        r0 := @this: android.telecom.Phone;

        $z0 = r0.<android.telecom.Phone: boolean mCanAddCall>;

        return $z0;
    }

    final void destroy()
    {
        android.telecom.Phone r0;
        java.util.Iterator r1;
        android.telecom.Call r2;
        android.telecom.InCallService$VideoCall r3;
        java.util.List $r4;
        boolean $z0;
        java.lang.Object $r5;
        int $i0;

        r0 := @this: android.telecom.Phone;

        $r4 = r0.<android.telecom.Phone: java.util.List mCalls>;

        r1 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r5 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (android.telecom.Call) $r5;

        r3 = virtualinvoke r2.<android.telecom.Call: android.telecom.InCallService$VideoCall getVideoCall()>();

        if r3 == null goto label2;

        virtualinvoke r3.<android.telecom.InCallService$VideoCall: void destroy()>();

     label2:
        $i0 = virtualinvoke r2.<android.telecom.Call: int getState()>();

        if $i0 == 7 goto label3;

        virtualinvoke r2.<android.telecom.Call: void internalSetDisconnected()>();

     label3:
        goto label1;

     label4:
        return;
    }

    public final android.telecom.AudioState getAudioState()
    {
        android.telecom.Phone r0;
        android.telecom.AudioState $r1;
        android.telecom.CallAudioState $r2;

        r0 := @this: android.telecom.Phone;

        $r1 = new android.telecom.AudioState;

        $r2 = r0.<android.telecom.Phone: android.telecom.CallAudioState mCallAudioState>;

        specialinvoke $r1.<android.telecom.AudioState: void <init>(android.telecom.CallAudioState)>($r2);

        return $r1;
    }

    public final android.telecom.CallAudioState getCallAudioState()
    {
        android.telecom.Phone r0;
        android.telecom.CallAudioState $r1;

        r0 := @this: android.telecom.Phone;

        $r1 = r0.<android.telecom.Phone: android.telecom.CallAudioState mCallAudioState>;

        return $r1;
    }

    public final java.util.List getCalls()
    {
        android.telecom.Phone r0;
        java.util.List $r1;

        r0 := @this: android.telecom.Phone;

        $r1 = r0.<android.telecom.Phone: java.util.List mUnmodifiableCalls>;

        return $r1;
    }

    final void internalAddCall(android.telecom.ParcelableCall)
    {
        android.telecom.Phone r0;
        android.telecom.ParcelableCall r1;
        int $i0, $i1, $i2, $i3;
        java.util.Map $r2, $r7, $r12, $r16;
        java.lang.String $r3, $r6, $r9, $r11, $r13;
        java.lang.Object $r4;
        java.lang.Object[] $r5, $r17;
        android.telecom.Call $r8, r18;
        android.telecom.InCallAdapter $r10;
        java.util.List $r15;

        r0 := @this: android.telecom.Phone;

        r1 := @parameter0: android.telecom.ParcelableCall;

        $i0 = r0.<android.telecom.Phone: int mTargetSdkVersion>;

        if $i0 >= 30 goto label1;

        $i3 = virtualinvoke r1.<android.telecom.ParcelableCall: int getState()>();

        if $i3 != 12 goto label1;

        $r17 = newarray (java.lang.Object)[0];

        staticinvoke <android.telecom.Log: void i(java.lang.Object,java.lang.String,java.lang.Object[])>(r0, "Skipping adding audio processing call for sdk compatibility", $r17);

        return;

     label1:
        $r2 = r0.<android.telecom.Phone: java.util.Map mCallByTelecomCallId>;

        $r3 = virtualinvoke r1.<android.telecom.ParcelableCall: java.lang.String getId()>();

        $r4 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3);

        r18 = (android.telecom.Call) $r4;

        if r18 != null goto label2;

        $r8 = new android.telecom.Call;

        $r9 = virtualinvoke r1.<android.telecom.ParcelableCall: java.lang.String getId()>();

        $r10 = r0.<android.telecom.Phone: android.telecom.InCallAdapter mInCallAdapter>;

        $i1 = virtualinvoke r1.<android.telecom.ParcelableCall: int getState()>();

        $r11 = r0.<android.telecom.Phone: java.lang.String mCallingPackage>;

        $i2 = r0.<android.telecom.Phone: int mTargetSdkVersion>;

        specialinvoke $r8.<android.telecom.Call: void <init>(android.telecom.Phone,java.lang.String,android.telecom.InCallAdapter,int,java.lang.String,int)>(r0, $r9, $r10, $i1, $r11, $i2);

        $r12 = r0.<android.telecom.Phone: java.util.Map mCallByTelecomCallId>;

        $r13 = virtualinvoke r1.<android.telecom.ParcelableCall: java.lang.String getId()>();

        interfaceinvoke $r12.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r13, $r8);

        $r15 = r0.<android.telecom.Phone: java.util.List mCalls>;

        interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>($r8);

        specialinvoke r0.<android.telecom.Phone: void checkCallTree(android.telecom.ParcelableCall)>(r1);

        $r16 = r0.<android.telecom.Phone: java.util.Map mCallByTelecomCallId>;

        virtualinvoke $r8.<android.telecom.Call: void internalUpdate(android.telecom.ParcelableCall,java.util.Map)>(r1, $r16);

        specialinvoke r0.<android.telecom.Phone: void fireCallAdded(android.telecom.Call)>($r8);

        goto label3;

     label2:
        $r5 = newarray (java.lang.Object)[1];

        $r6 = virtualinvoke r18.<android.telecom.Call: java.lang.String internalGetCallId()>();

        $r5[0] = $r6;

        staticinvoke <android.telecom.Log: void w(java.lang.Object,java.lang.String,java.lang.Object[])>(r0, "Call %s added, but it was already present", $r5);

        specialinvoke r0.<android.telecom.Phone: void checkCallTree(android.telecom.ParcelableCall)>(r1);

        $r7 = r0.<android.telecom.Phone: java.util.Map mCallByTelecomCallId>;

        virtualinvoke r18.<android.telecom.Call: void internalUpdate(android.telecom.ParcelableCall,java.util.Map)>(r1, $r7);

     label3:
        return;
    }

    final void internalBringToForeground(boolean)
    {
        android.telecom.Phone r0;
        boolean z0;

        r0 := @this: android.telecom.Phone;

        z0 := @parameter0: boolean;

        specialinvoke r0.<android.telecom.Phone: void fireBringToForeground(boolean)>(z0);

        return;
    }

    final void internalCallAudioStateChanged(android.telecom.CallAudioState)
    {
        android.telecom.Phone r0;
        android.telecom.CallAudioState r1, $r2;
        boolean $z0;

        r0 := @this: android.telecom.Phone;

        r1 := @parameter0: android.telecom.CallAudioState;

        $r2 = r0.<android.telecom.Phone: android.telecom.CallAudioState mCallAudioState>;

        $z0 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r2, r1);

        if $z0 != 0 goto label1;

        r0.<android.telecom.Phone: android.telecom.CallAudioState mCallAudioState> = r1;

        specialinvoke r0.<android.telecom.Phone: void fireCallAudioStateChanged(android.telecom.CallAudioState)>(r1);

     label1:
        return;
    }

    final android.telecom.Call internalGetCallByTelecomId(java.lang.String)
    {
        android.telecom.Phone r0;
        java.lang.String r1;
        java.util.Map $r2;
        java.lang.Object $r3;
        android.telecom.Call $r4;

        r0 := @this: android.telecom.Phone;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<android.telecom.Phone: java.util.Map mCallByTelecomCallId>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (android.telecom.Call) $r3;

        return $r4;
    }

    final void internalOnConnectionEvent(java.lang.String, java.lang.String, android.os.Bundle)
    {
        android.telecom.Phone r0;
        java.lang.String r1, r5;
        android.os.Bundle r2;
        java.util.Map $r3;
        java.lang.Object $r4;
        android.telecom.Call r6;

        r0 := @this: android.telecom.Phone;

        r5 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.os.Bundle;

        $r3 = r0.<android.telecom.Phone: java.util.Map mCallByTelecomCallId>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r5);

        r6 = (android.telecom.Call) $r4;

        if r6 == null goto label1;

        virtualinvoke r6.<android.telecom.Call: void internalOnConnectionEvent(java.lang.String,android.os.Bundle)>(r1, r2);

     label1:
        return;
    }

    final void internalOnHandoverComplete(java.lang.String)
    {
        android.telecom.Phone r0;
        java.util.Map $r1;
        java.lang.Object $r2;
        java.lang.String r3;
        android.telecom.Call r4;

        r0 := @this: android.telecom.Phone;

        r3 := @parameter0: java.lang.String;

        $r1 = r0.<android.telecom.Phone: java.util.Map mCallByTelecomCallId>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r3);

        r4 = (android.telecom.Call) $r2;

        if r4 == null goto label1;

        virtualinvoke r4.<android.telecom.Call: void internalOnHandoverComplete()>();

     label1:
        return;
    }

    final void internalOnHandoverFailed(java.lang.String, int)
    {
        android.telecom.Phone r0;
        int i0;
        java.util.Map $r1;
        java.lang.Object $r2;
        java.lang.String r3;
        android.telecom.Call r4;

        r0 := @this: android.telecom.Phone;

        r3 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r1 = r0.<android.telecom.Phone: java.util.Map mCallByTelecomCallId>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r3);

        r4 = (android.telecom.Call) $r2;

        if r4 == null goto label1;

        virtualinvoke r4.<android.telecom.Call: void internalOnHandoverFailed(int)>(i0);

     label1:
        return;
    }

    final void internalOnRttInitiationFailure(java.lang.String, int)
    {
        android.telecom.Phone r0;
        int i0;
        java.util.Map $r1;
        java.lang.Object $r2;
        java.lang.String r3;
        android.telecom.Call r4;

        r0 := @this: android.telecom.Phone;

        r3 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r1 = r0.<android.telecom.Phone: java.util.Map mCallByTelecomCallId>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r3);

        r4 = (android.telecom.Call) $r2;

        if r4 == null goto label1;

        virtualinvoke r4.<android.telecom.Call: void internalOnRttInitiationFailure(int)>(i0);

     label1:
        return;
    }

    final void internalOnRttUpgradeRequest(java.lang.String, int)
    {
        android.telecom.Phone r0;
        int i0;
        java.util.Map $r1;
        java.lang.Object $r2;
        java.lang.String r3;
        android.telecom.Call r4;

        r0 := @this: android.telecom.Phone;

        r3 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r1 = r0.<android.telecom.Phone: java.util.Map mCallByTelecomCallId>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r3);

        r4 = (android.telecom.Call) $r2;

        if r4 == null goto label1;

        virtualinvoke r4.<android.telecom.Call: void internalOnRttUpgradeRequest(int)>(i0);

     label1:
        return;
    }

    final void internalRemoveCall(android.telecom.Call)
    {
        android.telecom.Phone r0;
        android.telecom.Call r1;
        android.telecom.InCallService$VideoCall r2;
        java.util.Map $r3;
        java.lang.String $r4;
        java.util.List $r6;

        r0 := @this: android.telecom.Phone;

        r1 := @parameter0: android.telecom.Call;

        $r3 = r0.<android.telecom.Phone: java.util.Map mCallByTelecomCallId>;

        $r4 = virtualinvoke r1.<android.telecom.Call: java.lang.String internalGetCallId()>();

        interfaceinvoke $r3.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r4);

        $r6 = r0.<android.telecom.Phone: java.util.List mCalls>;

        interfaceinvoke $r6.<java.util.List: boolean remove(java.lang.Object)>(r1);

        r2 = virtualinvoke r1.<android.telecom.Call: android.telecom.InCallService$VideoCall getVideoCall()>();

        if r2 == null goto label1;

        virtualinvoke r2.<android.telecom.InCallService$VideoCall: void destroy()>();

     label1:
        specialinvoke r0.<android.telecom.Phone: void fireCallRemoved(android.telecom.Call)>(r1);

        return;
    }

    final void internalSetCanAddCall(boolean)
    {
        android.telecom.Phone r0;
        boolean z0, $z1;

        r0 := @this: android.telecom.Phone;

        z0 := @parameter0: boolean;

        $z1 = r0.<android.telecom.Phone: boolean mCanAddCall>;

        if $z1 == z0 goto label1;

        r0.<android.telecom.Phone: boolean mCanAddCall> = z0;

        specialinvoke r0.<android.telecom.Phone: void fireCanAddCallChanged(boolean)>(z0);

     label1:
        return;
    }

    final void internalSetPostDialWait(java.lang.String, java.lang.String)
    {
        android.telecom.Phone r0;
        java.lang.String r1, r4;
        java.util.Map $r2;
        java.lang.Object $r3;
        android.telecom.Call r5;

        r0 := @this: android.telecom.Phone;

        r4 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $r2 = r0.<android.telecom.Phone: java.util.Map mCallByTelecomCallId>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r4);

        r5 = (android.telecom.Call) $r3;

        if r5 == null goto label1;

        virtualinvoke r5.<android.telecom.Call: void internalSetPostDialWait(java.lang.String)>(r1);

     label1:
        return;
    }

    final void internalSilenceRinger()
    {
        android.telecom.Phone r0;

        r0 := @this: android.telecom.Phone;

        specialinvoke r0.<android.telecom.Phone: void fireSilenceRinger()>();

        return;
    }

    final void internalUpdateCall(android.telecom.ParcelableCall)
    {
        android.telecom.Phone r0;
        android.telecom.Call r1, r12;
        int $i0, $i1, $i2, $i3, $i4;
        java.util.Map $r2, $r6, $r8;
        java.lang.String $r3, $r9;
        java.lang.Object $r4, $r10;
        java.lang.Object[] $r5, $r7;
        android.telecom.ParcelableCall r11;

        r0 := @this: android.telecom.Phone;

        r11 := @parameter0: android.telecom.ParcelableCall;

        $i0 = r0.<android.telecom.Phone: int mTargetSdkVersion>;

        if $i0 >= 30 goto label2;

        $i4 = virtualinvoke r11.<android.telecom.ParcelableCall: int getState()>();

        if $i4 != 12 goto label2;

        $r7 = newarray (java.lang.Object)[0];

        staticinvoke <android.telecom.Log: void i(java.lang.Object,java.lang.String,java.lang.Object[])>(r0, "removing audio processing call during update for sdk compatibility", $r7);

        $r8 = r0.<android.telecom.Phone: java.util.Map mCallByTelecomCallId>;

        $r9 = virtualinvoke r11.<android.telecom.ParcelableCall: java.lang.String getId()>();

        $r10 = interfaceinvoke $r8.<java.util.Map: java.lang.Object get(java.lang.Object)>($r9);

        r12 = (android.telecom.Call) $r10;

        if r12 == null goto label1;

        virtualinvoke r0.<android.telecom.Phone: void internalRemoveCall(android.telecom.Call)>(r12);

     label1:
        return;

     label2:
        $r2 = r0.<android.telecom.Phone: java.util.Map mCallByTelecomCallId>;

        $r3 = virtualinvoke r11.<android.telecom.ParcelableCall: java.lang.String getId()>();

        $r4 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3);

        r1 = (android.telecom.Call) $r4;

        if r1 == null goto label3;

        specialinvoke r0.<android.telecom.Phone: void checkCallTree(android.telecom.ParcelableCall)>(r11);

        $r6 = r0.<android.telecom.Phone: java.util.Map mCallByTelecomCallId>;

        virtualinvoke r1.<android.telecom.Call: void internalUpdate(android.telecom.ParcelableCall,java.util.Map)>(r11, $r6);

        goto label5;

     label3:
        $i1 = r0.<android.telecom.Phone: int mTargetSdkVersion>;

        if $i1 >= 30 goto label5;

        $i2 = virtualinvoke r11.<android.telecom.ParcelableCall: int getState()>();

        if $i2 == 4 goto label4;

        $i3 = virtualinvoke r11.<android.telecom.ParcelableCall: int getState()>();

        if $i3 != 13 goto label5;

     label4:
        $r5 = newarray (java.lang.Object)[0];

        staticinvoke <android.telecom.Log: void i(java.lang.Object,java.lang.String,java.lang.Object[])>(r0, "adding call during update for sdk compatibility", $r5);

        virtualinvoke r0.<android.telecom.Phone: void internalAddCall(android.telecom.ParcelableCall)>(r11);

     label5:
        return;
    }

    public final void removeListener(android.telecom.Phone$Listener)
    {
        android.telecom.Phone r0;
        android.telecom.Phone$Listener r1;
        java.util.List $r2;

        r0 := @this: android.telecom.Phone;

        r1 := @parameter0: android.telecom.Phone$Listener;

        if r1 == null goto label1;

        $r2 = r0.<android.telecom.Phone: java.util.List mListeners>;

        interfaceinvoke $r2.<java.util.List: boolean remove(java.lang.Object)>(r1);

     label1:
        return;
    }

    public void requestBluetoothAudio(java.lang.String)
    {
        android.telecom.Phone r0;
        java.lang.String r1;
        android.telecom.InCallAdapter $r2;

        r0 := @this: android.telecom.Phone;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<android.telecom.Phone: android.telecom.InCallAdapter mInCallAdapter>;

        virtualinvoke $r2.<android.telecom.InCallAdapter: void requestBluetoothAudio(java.lang.String)>(r1);

        return;
    }

    public final void setAudioRoute(int)
    {
        android.telecom.Phone r0;
        int i0;
        android.telecom.InCallAdapter $r1;

        r0 := @this: android.telecom.Phone;

        i0 := @parameter0: int;

        $r1 = r0.<android.telecom.Phone: android.telecom.InCallAdapter mInCallAdapter>;

        virtualinvoke $r1.<android.telecom.InCallAdapter: void setAudioRoute(int)>(i0);

        return;
    }

    public final void setMuted(boolean)
    {
        android.telecom.Phone r0;
        boolean z0;
        android.telecom.InCallAdapter $r1;

        r0 := @this: android.telecom.Phone;

        z0 := @parameter0: boolean;

        $r1 = r0.<android.telecom.Phone: android.telecom.InCallAdapter mInCallAdapter>;

        virtualinvoke $r1.<android.telecom.InCallAdapter: void mute(boolean)>(z0);

        return;
    }

    public final void setProximitySensorOff(boolean)
    {
        android.telecom.Phone r0;
        boolean z0;
        android.telecom.InCallAdapter $r1;

        r0 := @this: android.telecom.Phone;

        z0 := @parameter0: boolean;

        $r1 = r0.<android.telecom.Phone: android.telecom.InCallAdapter mInCallAdapter>;

        virtualinvoke $r1.<android.telecom.InCallAdapter: void turnProximitySensorOff(boolean)>(z0);

        return;
    }

    public final void setProximitySensorOn()
    {
        android.telecom.Phone r0;
        android.telecom.InCallAdapter $r1;

        r0 := @this: android.telecom.Phone;

        $r1 = r0.<android.telecom.Phone: android.telecom.InCallAdapter mInCallAdapter>;

        virtualinvoke $r1.<android.telecom.InCallAdapter: void turnProximitySensorOn()>();

        return;
    }

    public static void <clinit>()
    {
        <android.telecom.Phone: int SDK_VERSION_R> = 30;

        return;
    }
}
