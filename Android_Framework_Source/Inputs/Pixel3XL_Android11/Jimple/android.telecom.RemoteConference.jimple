public final class android.telecom.RemoteConference extends java.lang.Object
{
    private final java.util.Set mCallbackRecords;
    private final java.util.List mChildConnections;
    private final java.util.List mConferenceableConnections;
    private int mConnectionCapabilities;
    private int mConnectionProperties;
    private final com.android.internal.telecom.IConnectionService mConnectionService;
    private android.telecom.DisconnectCause mDisconnectCause;
    private android.os.Bundle mExtras;
    private final java.lang.String mId;
    private int mState;
    private final java.util.List mUnmodifiableChildConnections;
    private final java.util.List mUnmodifiableConferenceableConnections;

    void <init>(java.lang.String, com.android.internal.telecom.IConnectionService)
    {
        android.telecom.RemoteConference r0;
        java.lang.String r1;
        com.android.internal.telecom.IConnectionService r2;
        java.util.concurrent.CopyOnWriteArraySet $r3;
        java.util.concurrent.CopyOnWriteArrayList $r4;
        java.util.List $r5, $r7;
        java.util.ArrayList $r6;

        r0 := @this: android.telecom.RemoteConference;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: com.android.internal.telecom.IConnectionService;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new java.util.concurrent.CopyOnWriteArraySet;

        specialinvoke $r3.<java.util.concurrent.CopyOnWriteArraySet: void <init>()>();

        r0.<android.telecom.RemoteConference: java.util.Set mCallbackRecords> = $r3;

        $r4 = new java.util.concurrent.CopyOnWriteArrayList;

        specialinvoke $r4.<java.util.concurrent.CopyOnWriteArrayList: void <init>()>();

        r0.<android.telecom.RemoteConference: java.util.List mChildConnections> = $r4;

        $r5 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r4);

        r0.<android.telecom.RemoteConference: java.util.List mUnmodifiableChildConnections> = $r5;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r0.<android.telecom.RemoteConference: java.util.List mConferenceableConnections> = $r6;

        $r7 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r6);

        r0.<android.telecom.RemoteConference: java.util.List mUnmodifiableConferenceableConnections> = $r7;

        r0.<android.telecom.RemoteConference: int mState> = 1;

        r0.<android.telecom.RemoteConference: java.lang.String mId> = r1;

        r0.<android.telecom.RemoteConference: com.android.internal.telecom.IConnectionService mConnectionService> = r2;

        return;
    }

    static int access$000(android.telecom.RemoteConference)
    {
        android.telecom.RemoteConference r0;
        int $i0;

        r0 := @parameter0: android.telecom.RemoteConference;

        $i0 = r0.<android.telecom.RemoteConference: int mConnectionCapabilities>;

        return $i0;
    }

    static int access$100(android.telecom.RemoteConference)
    {
        android.telecom.RemoteConference r0;
        int $i0;

        r0 := @parameter0: android.telecom.RemoteConference;

        $i0 = r0.<android.telecom.RemoteConference: int mConnectionProperties>;

        return $i0;
    }

    static java.util.List access$200(android.telecom.RemoteConference)
    {
        android.telecom.RemoteConference r0;
        java.util.List $r1;

        r0 := @parameter0: android.telecom.RemoteConference;

        $r1 = r0.<android.telecom.RemoteConference: java.util.List mUnmodifiableConferenceableConnections>;

        return $r1;
    }

    static android.os.Bundle access$300(android.telecom.RemoteConference)
    {
        android.telecom.RemoteConference r0;
        android.os.Bundle $r1;

        r0 := @parameter0: android.telecom.RemoteConference;

        $r1 = r0.<android.telecom.RemoteConference: android.os.Bundle mExtras>;

        return $r1;
    }

    private void notifyExtrasChanged()
    {
        android.telecom.RemoteConference r0;
        java.util.Iterator r1;
        android.telecom.CallbackRecord r2;
        android.telecom.RemoteConference$Callback r3;
        java.util.Set $r4;
        boolean $z0;
        java.lang.Object $r5, $r6;
        android.os.Handler $r7;
        android.telecom.RemoteConference$9 $r8;

        r0 := @this: android.telecom.RemoteConference;

        $r4 = r0.<android.telecom.RemoteConference: java.util.Set mCallbackRecords>;

        r1 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (android.telecom.CallbackRecord) $r5;

        $r6 = virtualinvoke r2.<android.telecom.CallbackRecord: java.lang.Object getCallback()>();

        r3 = (android.telecom.RemoteConference$Callback) $r6;

        $r7 = virtualinvoke r2.<android.telecom.CallbackRecord: android.os.Handler getHandler()>();

        $r8 = new android.telecom.RemoteConference$9;

        specialinvoke $r8.<android.telecom.RemoteConference$9: void <init>(android.telecom.RemoteConference,android.telecom.RemoteConference$Callback,android.telecom.RemoteConference)>(r0, r3, r0);

        virtualinvoke $r7.<android.os.Handler: boolean post(java.lang.Runnable)>($r8);

        goto label1;

     label2:
        return;
    }

    void addConnection(android.telecom.RemoteConnection)
    {
        android.telecom.RemoteConference r0;
        android.telecom.RemoteConnection r1;
        java.util.Iterator r2;
        android.telecom.CallbackRecord r3;
        android.telecom.RemoteConference$Callback r4;
        java.util.List $r5, $r6;
        boolean $z0, $z2;
        java.util.Set $r7;
        java.lang.Object $r8, $r9;
        android.os.Handler $r10;
        android.telecom.RemoteConference$3 $r11;

        r0 := @this: android.telecom.RemoteConference;

        r1 := @parameter0: android.telecom.RemoteConnection;

        $r5 = r0.<android.telecom.RemoteConference: java.util.List mChildConnections>;

        $z0 = interfaceinvoke $r5.<java.util.List: boolean contains(java.lang.Object)>(r1);

        if $z0 != 0 goto label2;

        $r6 = r0.<android.telecom.RemoteConference: java.util.List mChildConnections>;

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>(r1);

        virtualinvoke r1.<android.telecom.RemoteConnection: void setConference(android.telecom.RemoteConference)>(r0);

        $r7 = r0.<android.telecom.RemoteConference: java.util.Set mCallbackRecords>;

        r2 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z2 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label2;

        $r8 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.telecom.CallbackRecord) $r8;

        $r9 = virtualinvoke r3.<android.telecom.CallbackRecord: java.lang.Object getCallback()>();

        r4 = (android.telecom.RemoteConference$Callback) $r9;

        $r10 = virtualinvoke r3.<android.telecom.CallbackRecord: android.os.Handler getHandler()>();

        $r11 = new android.telecom.RemoteConference$3;

        specialinvoke $r11.<android.telecom.RemoteConference$3: void <init>(android.telecom.RemoteConference,android.telecom.RemoteConference$Callback,android.telecom.RemoteConference,android.telecom.RemoteConnection)>(r0, r4, r0, r1);

        virtualinvoke $r10.<android.os.Handler: boolean post(java.lang.Runnable)>($r11);

        goto label1;

     label2:
        return;
    }

    public void disconnect()
    {
        android.telecom.RemoteConference r0;
        java.lang.String $r2;
        com.android.internal.telecom.IConnectionService $r3;
        android.os.RemoteException $r4;

        r0 := @this: android.telecom.RemoteConference;

     label1:
        $r3 = r0.<android.telecom.RemoteConference: com.android.internal.telecom.IConnectionService mConnectionService>;

        $r2 = r0.<android.telecom.RemoteConference: java.lang.String mId>;

        interfaceinvoke $r3.<com.android.internal.telecom.IConnectionService: void disconnect(java.lang.String,android.telecom.Logging.Session$Info)>($r2, null);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public java.util.List getConferenceableConnections()
    {
        android.telecom.RemoteConference r0;
        java.util.List $r1;

        r0 := @this: android.telecom.RemoteConference;

        $r1 = r0.<android.telecom.RemoteConference: java.util.List mUnmodifiableConferenceableConnections>;

        return $r1;
    }

    public final int getConnectionCapabilities()
    {
        android.telecom.RemoteConference r0;
        int $i0;

        r0 := @this: android.telecom.RemoteConference;

        $i0 = r0.<android.telecom.RemoteConference: int mConnectionCapabilities>;

        return $i0;
    }

    public final int getConnectionProperties()
    {
        android.telecom.RemoteConference r0;
        int $i0;

        r0 := @this: android.telecom.RemoteConference;

        $i0 = r0.<android.telecom.RemoteConference: int mConnectionProperties>;

        return $i0;
    }

    public final java.util.List getConnections()
    {
        android.telecom.RemoteConference r0;
        java.util.List $r1;

        r0 := @this: android.telecom.RemoteConference;

        $r1 = r0.<android.telecom.RemoteConference: java.util.List mUnmodifiableChildConnections>;

        return $r1;
    }

    public android.telecom.DisconnectCause getDisconnectCause()
    {
        android.telecom.RemoteConference r0;
        android.telecom.DisconnectCause $r1;

        r0 := @this: android.telecom.RemoteConference;

        $r1 = r0.<android.telecom.RemoteConference: android.telecom.DisconnectCause mDisconnectCause>;

        return $r1;
    }

    public final android.os.Bundle getExtras()
    {
        android.telecom.RemoteConference r0;
        android.os.Bundle $r1;

        r0 := @this: android.telecom.RemoteConference;

        $r1 = r0.<android.telecom.RemoteConference: android.os.Bundle mExtras>;

        return $r1;
    }

    java.lang.String getId()
    {
        android.telecom.RemoteConference r0;
        java.lang.String $r1;

        r0 := @this: android.telecom.RemoteConference;

        $r1 = r0.<android.telecom.RemoteConference: java.lang.String mId>;

        return $r1;
    }

    public final int getState()
    {
        android.telecom.RemoteConference r0;
        int $i0;

        r0 := @this: android.telecom.RemoteConference;

        $i0 = r0.<android.telecom.RemoteConference: int mState>;

        return $i0;
    }

    public void hold()
    {
        android.telecom.RemoteConference r0;
        java.lang.String $r2;
        com.android.internal.telecom.IConnectionService $r3;
        android.os.RemoteException $r4;

        r0 := @this: android.telecom.RemoteConference;

     label1:
        $r3 = r0.<android.telecom.RemoteConference: com.android.internal.telecom.IConnectionService mConnectionService>;

        $r2 = r0.<android.telecom.RemoteConference: java.lang.String mId>;

        interfaceinvoke $r3.<com.android.internal.telecom.IConnectionService: void hold(java.lang.String,android.telecom.Logging.Session$Info)>($r2, null);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void merge()
    {
        android.telecom.RemoteConference r0;
        java.lang.String $r2;
        com.android.internal.telecom.IConnectionService $r3;
        android.os.RemoteException $r4;

        r0 := @this: android.telecom.RemoteConference;

     label1:
        $r3 = r0.<android.telecom.RemoteConference: com.android.internal.telecom.IConnectionService mConnectionService>;

        $r2 = r0.<android.telecom.RemoteConference: java.lang.String mId>;

        interfaceinvoke $r3.<com.android.internal.telecom.IConnectionService: void mergeConference(java.lang.String,android.telecom.Logging.Session$Info)>($r2, null);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void playDtmfTone(char)
    {
        android.telecom.RemoteConference r0;
        char c0;
        java.lang.String $r2;
        com.android.internal.telecom.IConnectionService $r3;
        android.os.RemoteException $r4;

        r0 := @this: android.telecom.RemoteConference;

        c0 := @parameter0: char;

     label1:
        $r3 = r0.<android.telecom.RemoteConference: com.android.internal.telecom.IConnectionService mConnectionService>;

        $r2 = r0.<android.telecom.RemoteConference: java.lang.String mId>;

        interfaceinvoke $r3.<com.android.internal.telecom.IConnectionService: void playDtmfTone(java.lang.String,char,android.telecom.Logging.Session$Info)>($r2, c0, null);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    void putExtras(android.os.Bundle)
    {
        android.telecom.RemoteConference r0;
        android.os.Bundle r1, $r2, $r3, $r4;

        r0 := @this: android.telecom.RemoteConference;

        r1 := @parameter0: android.os.Bundle;

        if r1 != null goto label1;

        return;

     label1:
        $r2 = r0.<android.telecom.RemoteConference: android.os.Bundle mExtras>;

        if $r2 != null goto label2;

        $r4 = new android.os.Bundle;

        specialinvoke $r4.<android.os.Bundle: void <init>()>();

        r0.<android.telecom.RemoteConference: android.os.Bundle mExtras> = $r4;

     label2:
        $r3 = r0.<android.telecom.RemoteConference: android.os.Bundle mExtras>;

        virtualinvoke $r3.<android.os.Bundle: void putAll(android.os.Bundle)>(r1);

        specialinvoke r0.<android.telecom.RemoteConference: void notifyExtrasChanged()>();

        return;
    }

    public final void registerCallback(android.telecom.RemoteConference$Callback)
    {
        android.telecom.RemoteConference r0;
        android.telecom.RemoteConference$Callback r1;
        android.os.Handler $r2;

        r0 := @this: android.telecom.RemoteConference;

        r1 := @parameter0: android.telecom.RemoteConference$Callback;

        $r2 = new android.os.Handler;

        specialinvoke $r2.<android.os.Handler: void <init>()>();

        virtualinvoke r0.<android.telecom.RemoteConference: void registerCallback(android.telecom.RemoteConference$Callback,android.os.Handler)>(r1, $r2);

        return;
    }

    public final void registerCallback(android.telecom.RemoteConference$Callback, android.os.Handler)
    {
        android.telecom.RemoteConference r0;
        android.telecom.RemoteConference$Callback r1;
        android.os.Handler r2;
        android.telecom.CallbackRecord $r3;
        java.util.Set $r4;

        r0 := @this: android.telecom.RemoteConference;

        r1 := @parameter0: android.telecom.RemoteConference$Callback;

        r2 := @parameter1: android.os.Handler;

        virtualinvoke r0.<android.telecom.RemoteConference: void unregisterCallback(android.telecom.RemoteConference$Callback)>(r1);

        if r1 == null goto label1;

        if r2 == null goto label1;

        $r4 = r0.<android.telecom.RemoteConference: java.util.Set mCallbackRecords>;

        $r3 = new android.telecom.CallbackRecord;

        specialinvoke $r3.<android.telecom.CallbackRecord: void <init>(java.lang.Object,android.os.Handler)>(r1, r2);

        interfaceinvoke $r4.<java.util.Set: boolean add(java.lang.Object)>($r3);

     label1:
        return;
    }

    void removeConnection(android.telecom.RemoteConnection)
    {
        android.telecom.RemoteConference r0;
        android.telecom.RemoteConnection r1;
        java.util.Iterator r2;
        android.telecom.CallbackRecord r3;
        android.telecom.RemoteConference$Callback r4;
        java.util.List $r5, $r6;
        boolean $z0, $z2;
        java.util.Set $r7;
        java.lang.Object $r8, $r9;
        android.os.Handler $r10;
        android.telecom.RemoteConference$4 $r11;

        r0 := @this: android.telecom.RemoteConference;

        r1 := @parameter0: android.telecom.RemoteConnection;

        $r5 = r0.<android.telecom.RemoteConference: java.util.List mChildConnections>;

        $z0 = interfaceinvoke $r5.<java.util.List: boolean contains(java.lang.Object)>(r1);

        if $z0 == 0 goto label2;

        $r6 = r0.<android.telecom.RemoteConference: java.util.List mChildConnections>;

        interfaceinvoke $r6.<java.util.List: boolean remove(java.lang.Object)>(r1);

        virtualinvoke r1.<android.telecom.RemoteConnection: void setConference(android.telecom.RemoteConference)>(null);

        $r7 = r0.<android.telecom.RemoteConference: java.util.Set mCallbackRecords>;

        r2 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z2 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label2;

        $r8 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.telecom.CallbackRecord) $r8;

        $r9 = virtualinvoke r3.<android.telecom.CallbackRecord: java.lang.Object getCallback()>();

        r4 = (android.telecom.RemoteConference$Callback) $r9;

        $r10 = virtualinvoke r3.<android.telecom.CallbackRecord: android.os.Handler getHandler()>();

        $r11 = new android.telecom.RemoteConference$4;

        specialinvoke $r11.<android.telecom.RemoteConference$4: void <init>(android.telecom.RemoteConference,android.telecom.RemoteConference$Callback,android.telecom.RemoteConference,android.telecom.RemoteConnection)>(r0, r4, r0, r1);

        virtualinvoke $r10.<android.os.Handler: boolean post(java.lang.Runnable)>($r11);

        goto label1;

     label2:
        return;
    }

    void removeExtras(java.util.List)
    {
        android.telecom.RemoteConference r0;
        java.util.Iterator r1;
        android.os.Bundle $r2, $r4;
        boolean $z0, $z1;
        java.lang.Object $r3;
        java.util.List r5;
        java.lang.String r6;

        r0 := @this: android.telecom.RemoteConference;

        r5 := @parameter0: java.util.List;

        $r2 = r0.<android.telecom.RemoteConference: android.os.Bundle mExtras>;

        if $r2 == null goto label4;

        if r5 == null goto label4;

        $z0 = interfaceinvoke r5.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        goto label4;

     label1:
        r1 = interfaceinvoke r5.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r3 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.lang.String) $r3;

        $r4 = r0.<android.telecom.RemoteConference: android.os.Bundle mExtras>;

        virtualinvoke $r4.<android.os.Bundle: void remove(java.lang.String)>(r6);

        goto label2;

     label3:
        specialinvoke r0.<android.telecom.RemoteConference: void notifyExtrasChanged()>();

        return;

     label4:
        return;
    }

    public void separate(android.telecom.RemoteConnection)
    {
        android.telecom.RemoteConference r0;
        java.util.List $r1;
        boolean $z0;
        com.android.internal.telecom.IConnectionService $r2;
        java.lang.String $r3;
        android.os.RemoteException $r4;
        android.telecom.RemoteConnection r5;

        r0 := @this: android.telecom.RemoteConference;

        r5 := @parameter0: android.telecom.RemoteConnection;

        $r1 = r0.<android.telecom.RemoteConference: java.util.List mChildConnections>;

        $z0 = interfaceinvoke $r1.<java.util.List: boolean contains(java.lang.Object)>(r5);

        if $z0 == 0 goto label4;

     label1:
        $r2 = r0.<android.telecom.RemoteConference: com.android.internal.telecom.IConnectionService mConnectionService>;

        $r3 = virtualinvoke r5.<android.telecom.RemoteConnection: java.lang.String getId()>();

        interfaceinvoke $r2.<com.android.internal.telecom.IConnectionService: void splitFromConference(java.lang.String,android.telecom.Logging.Session$Info)>($r3, null);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void setAudioState(android.telecom.AudioState)
    {
        android.telecom.RemoteConference r0;
        android.telecom.AudioState r1;
        android.telecom.CallAudioState $r2;

        r0 := @this: android.telecom.RemoteConference;

        r1 := @parameter0: android.telecom.AudioState;

        $r2 = new android.telecom.CallAudioState;

        specialinvoke $r2.<android.telecom.CallAudioState: void <init>(android.telecom.AudioState)>(r1);

        virtualinvoke r0.<android.telecom.RemoteConference: void setCallAudioState(android.telecom.CallAudioState)>($r2);

        return;
    }

    public void setCallAudioState(android.telecom.CallAudioState)
    {
        android.telecom.RemoteConference r0;
        java.lang.String $r1;
        com.android.internal.telecom.IConnectionService $r2;
        android.os.RemoteException $r3;
        android.telecom.CallAudioState r4;

        r0 := @this: android.telecom.RemoteConference;

        r4 := @parameter0: android.telecom.CallAudioState;

     label1:
        $r2 = r0.<android.telecom.RemoteConference: com.android.internal.telecom.IConnectionService mConnectionService>;

        $r1 = r0.<android.telecom.RemoteConference: java.lang.String mId>;

        interfaceinvoke $r2.<com.android.internal.telecom.IConnectionService: void onCallAudioStateChanged(java.lang.String,android.telecom.CallAudioState,android.telecom.Logging.Session$Info)>($r1, r4, null);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    void setConferenceableConnections(java.util.List)
    {
        android.telecom.RemoteConference r0;
        java.util.Iterator r1;
        android.telecom.CallbackRecord r2;
        java.util.List $r3, $r4, r10;
        java.util.Set $r5;
        boolean $z1;
        java.lang.Object $r6, $r7;
        android.os.Handler $r8;
        android.telecom.RemoteConference$7 $r9;
        android.telecom.RemoteConference$Callback r11;

        r0 := @this: android.telecom.RemoteConference;

        r10 := @parameter0: java.util.List;

        $r3 = r0.<android.telecom.RemoteConference: java.util.List mConferenceableConnections>;

        interfaceinvoke $r3.<java.util.List: void clear()>();

        $r4 = r0.<android.telecom.RemoteConference: java.util.List mConferenceableConnections>;

        interfaceinvoke $r4.<java.util.List: boolean addAll(java.util.Collection)>(r10);

        $r5 = r0.<android.telecom.RemoteConference: java.util.Set mCallbackRecords>;

        r1 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label2;

        $r6 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (android.telecom.CallbackRecord) $r6;

        $r7 = virtualinvoke r2.<android.telecom.CallbackRecord: java.lang.Object getCallback()>();

        r11 = (android.telecom.RemoteConference$Callback) $r7;

        $r8 = virtualinvoke r2.<android.telecom.CallbackRecord: android.os.Handler getHandler()>();

        $r9 = new android.telecom.RemoteConference$7;

        specialinvoke $r9.<android.telecom.RemoteConference$7: void <init>(android.telecom.RemoteConference,android.telecom.RemoteConference$Callback,android.telecom.RemoteConference)>(r0, r11, r0);

        virtualinvoke $r8.<android.os.Handler: boolean post(java.lang.Runnable)>($r9);

        goto label1;

     label2:
        return;
    }

    void setConnectionCapabilities(int)
    {
        android.telecom.RemoteConference r0;
        int i0, $i1;
        java.util.Iterator r1;
        android.telecom.CallbackRecord r2;
        android.telecom.RemoteConference$Callback r3;
        java.util.Set $r4;
        boolean $z0;
        java.lang.Object $r5, $r6;
        android.os.Handler $r7;
        android.telecom.RemoteConference$5 $r8;

        r0 := @this: android.telecom.RemoteConference;

        i0 := @parameter0: int;

        $i1 = r0.<android.telecom.RemoteConference: int mConnectionCapabilities>;

        if $i1 == i0 goto label2;

        r0.<android.telecom.RemoteConference: int mConnectionCapabilities> = i0;

        $r4 = r0.<android.telecom.RemoteConference: java.util.Set mCallbackRecords>;

        r1 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (android.telecom.CallbackRecord) $r5;

        $r6 = virtualinvoke r2.<android.telecom.CallbackRecord: java.lang.Object getCallback()>();

        r3 = (android.telecom.RemoteConference$Callback) $r6;

        $r7 = virtualinvoke r2.<android.telecom.CallbackRecord: android.os.Handler getHandler()>();

        $r8 = new android.telecom.RemoteConference$5;

        specialinvoke $r8.<android.telecom.RemoteConference$5: void <init>(android.telecom.RemoteConference,android.telecom.RemoteConference$Callback,android.telecom.RemoteConference)>(r0, r3, r0);

        virtualinvoke $r7.<android.os.Handler: boolean post(java.lang.Runnable)>($r8);

        goto label1;

     label2:
        return;
    }

    void setConnectionProperties(int)
    {
        android.telecom.RemoteConference r0;
        int i0, $i1;
        java.util.Iterator r1;
        android.telecom.CallbackRecord r2;
        android.telecom.RemoteConference$Callback r3;
        java.util.Set $r4;
        boolean $z0;
        java.lang.Object $r5, $r6;
        android.os.Handler $r7;
        android.telecom.RemoteConference$6 $r8;

        r0 := @this: android.telecom.RemoteConference;

        i0 := @parameter0: int;

        $i1 = r0.<android.telecom.RemoteConference: int mConnectionProperties>;

        if $i1 == i0 goto label2;

        r0.<android.telecom.RemoteConference: int mConnectionProperties> = i0;

        $r4 = r0.<android.telecom.RemoteConference: java.util.Set mCallbackRecords>;

        r1 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (android.telecom.CallbackRecord) $r5;

        $r6 = virtualinvoke r2.<android.telecom.CallbackRecord: java.lang.Object getCallback()>();

        r3 = (android.telecom.RemoteConference$Callback) $r6;

        $r7 = virtualinvoke r2.<android.telecom.CallbackRecord: android.os.Handler getHandler()>();

        $r8 = new android.telecom.RemoteConference$6;

        specialinvoke $r8.<android.telecom.RemoteConference$6: void <init>(android.telecom.RemoteConference,android.telecom.RemoteConference$Callback,android.telecom.RemoteConference)>(r0, r3, r0);

        virtualinvoke $r7.<android.os.Handler: boolean post(java.lang.Runnable)>($r8);

        goto label1;

     label2:
        return;
    }

    void setDestroyed()
    {
        android.telecom.RemoteConference r0;
        java.util.Iterator r1, r11;
        android.telecom.RemoteConference$Callback r2;
        java.util.List $r3;
        boolean $z0, $z1;
        java.util.Set $r4;
        java.lang.Object $r5, $r6, $r9;
        android.os.Handler $r7;
        android.telecom.RemoteConference$1 $r8;
        android.telecom.RemoteConnection $r10;
        android.telecom.CallbackRecord r12;

        r0 := @this: android.telecom.RemoteConference;

        $r3 = r0.<android.telecom.RemoteConference: java.util.List mChildConnections>;

        r11 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r9 = interfaceinvoke r11.<java.util.Iterator: java.lang.Object next()>();

        $r10 = (android.telecom.RemoteConnection) $r9;

        virtualinvoke $r10.<android.telecom.RemoteConnection: void setConference(android.telecom.RemoteConference)>(null);

        goto label1;

     label2:
        $r4 = r0.<android.telecom.RemoteConference: java.util.Set mCallbackRecords>;

        r1 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r5 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r12 = (android.telecom.CallbackRecord) $r5;

        $r6 = virtualinvoke r12.<android.telecom.CallbackRecord: java.lang.Object getCallback()>();

        r2 = (android.telecom.RemoteConference$Callback) $r6;

        $r7 = virtualinvoke r12.<android.telecom.CallbackRecord: android.os.Handler getHandler()>();

        $r8 = new android.telecom.RemoteConference$1;

        specialinvoke $r8.<android.telecom.RemoteConference$1: void <init>(android.telecom.RemoteConference,android.telecom.RemoteConference$Callback,android.telecom.RemoteConference)>(r0, r2, r0);

        virtualinvoke $r7.<android.os.Handler: boolean post(java.lang.Runnable)>($r8);

        goto label3;

     label4:
        return;
    }

    void setDisconnected(android.telecom.DisconnectCause)
    {
        android.telecom.RemoteConference r0;
        android.telecom.DisconnectCause r1;
        java.util.Iterator r2;
        android.telecom.CallbackRecord r3;
        android.telecom.RemoteConference$Callback r4;
        int $i0;
        java.util.Set $r5;
        boolean $z0;
        java.lang.Object $r6, $r7;
        android.os.Handler $r8;
        android.telecom.RemoteConference$8 $r9;

        r0 := @this: android.telecom.RemoteConference;

        r1 := @parameter0: android.telecom.DisconnectCause;

        $i0 = r0.<android.telecom.RemoteConference: int mState>;

        if $i0 == 6 goto label2;

        r0.<android.telecom.RemoteConference: android.telecom.DisconnectCause mDisconnectCause> = r1;

        virtualinvoke r0.<android.telecom.RemoteConference: void setState(int)>(6);

        $r5 = r0.<android.telecom.RemoteConference: java.util.Set mCallbackRecords>;

        r2 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.telecom.CallbackRecord) $r6;

        $r7 = virtualinvoke r3.<android.telecom.CallbackRecord: java.lang.Object getCallback()>();

        r4 = (android.telecom.RemoteConference$Callback) $r7;

        $r8 = virtualinvoke r3.<android.telecom.CallbackRecord: android.os.Handler getHandler()>();

        $r9 = new android.telecom.RemoteConference$8;

        specialinvoke $r9.<android.telecom.RemoteConference$8: void <init>(android.telecom.RemoteConference,android.telecom.RemoteConference$Callback,android.telecom.RemoteConference,android.telecom.DisconnectCause)>(r0, r4, r0, r1);

        virtualinvoke $r8.<android.os.Handler: boolean post(java.lang.Runnable)>($r9);

        goto label1;

     label2:
        return;
    }

    void setState(int)
    {
        android.telecom.RemoteConference r0;
        int i0, i1, $i2;
        java.util.Iterator r1;
        android.telecom.CallbackRecord r2;
        android.telecom.RemoteConference$Callback r3;
        java.util.Set $r4;
        boolean $z0;
        java.lang.Object $r5, $r6;
        android.os.Handler $r7;
        android.telecom.RemoteConference$2 $r8;
        java.lang.Object[] $r9;
        java.lang.String $r10;

        r0 := @this: android.telecom.RemoteConference;

        i0 := @parameter0: int;

        if i0 == 4 goto label1;

        if i0 == 5 goto label1;

        if i0 == 6 goto label1;

        $r9 = newarray (java.lang.Object)[1];

        $r10 = staticinvoke <android.telecom.Connection: java.lang.String stateToString(int)>(i0);

        $r9[0] = $r10;

        staticinvoke <android.telecom.Log: void w(java.lang.Object,java.lang.String,java.lang.Object[])>(r0, "Unsupported state transition for Conference call.", $r9);

        return;

     label1:
        $i2 = r0.<android.telecom.RemoteConference: int mState>;

        if $i2 == i0 goto label3;

        i1 = r0.<android.telecom.RemoteConference: int mState>;

        r0.<android.telecom.RemoteConference: int mState> = i0;

        $r4 = r0.<android.telecom.RemoteConference: java.util.Set mCallbackRecords>;

        r1 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (android.telecom.CallbackRecord) $r5;

        $r6 = virtualinvoke r2.<android.telecom.CallbackRecord: java.lang.Object getCallback()>();

        r3 = (android.telecom.RemoteConference$Callback) $r6;

        $r7 = virtualinvoke r2.<android.telecom.CallbackRecord: android.os.Handler getHandler()>();

        $r8 = new android.telecom.RemoteConference$2;

        specialinvoke $r8.<android.telecom.RemoteConference$2: void <init>(android.telecom.RemoteConference,android.telecom.RemoteConference$Callback,android.telecom.RemoteConference,int,int)>(r0, r3, r0, i1, i0);

        virtualinvoke $r7.<android.os.Handler: boolean post(java.lang.Runnable)>($r8);

        goto label2;

     label3:
        return;
    }

    public void stopDtmfTone()
    {
        android.telecom.RemoteConference r0;
        java.lang.String $r2;
        com.android.internal.telecom.IConnectionService $r3;
        android.os.RemoteException $r4;

        r0 := @this: android.telecom.RemoteConference;

     label1:
        $r3 = r0.<android.telecom.RemoteConference: com.android.internal.telecom.IConnectionService mConnectionService>;

        $r2 = r0.<android.telecom.RemoteConference: java.lang.String mId>;

        interfaceinvoke $r3.<com.android.internal.telecom.IConnectionService: void stopDtmfTone(java.lang.String,android.telecom.Logging.Session$Info)>($r2, null);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void swap()
    {
        android.telecom.RemoteConference r0;
        java.lang.String $r2;
        com.android.internal.telecom.IConnectionService $r3;
        android.os.RemoteException $r4;

        r0 := @this: android.telecom.RemoteConference;

     label1:
        $r3 = r0.<android.telecom.RemoteConference: com.android.internal.telecom.IConnectionService mConnectionService>;

        $r2 = r0.<android.telecom.RemoteConference: java.lang.String mId>;

        interfaceinvoke $r3.<com.android.internal.telecom.IConnectionService: void swapConference(java.lang.String,android.telecom.Logging.Session$Info)>($r2, null);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void unhold()
    {
        android.telecom.RemoteConference r0;
        java.lang.String $r2;
        com.android.internal.telecom.IConnectionService $r3;
        android.os.RemoteException $r4;

        r0 := @this: android.telecom.RemoteConference;

     label1:
        $r3 = r0.<android.telecom.RemoteConference: com.android.internal.telecom.IConnectionService mConnectionService>;

        $r2 = r0.<android.telecom.RemoteConference: java.lang.String mId>;

        interfaceinvoke $r3.<com.android.internal.telecom.IConnectionService: void unhold(java.lang.String,android.telecom.Logging.Session$Info)>($r2, null);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public final void unregisterCallback(android.telecom.RemoteConference$Callback)
    {
        android.telecom.RemoteConference r0;
        android.telecom.RemoteConference$Callback r1;
        java.util.Iterator r2;
        android.telecom.CallbackRecord r3;
        java.util.Set $r4, $r7;
        boolean $z0;
        java.lang.Object $r5, $r6;

        r0 := @this: android.telecom.RemoteConference;

        r1 := @parameter0: android.telecom.RemoteConference$Callback;

        if r1 == null goto label3;

        $r4 = r0.<android.telecom.RemoteConference: java.util.Set mCallbackRecords>;

        r2 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.telecom.CallbackRecord) $r5;

        $r6 = virtualinvoke r3.<android.telecom.CallbackRecord: java.lang.Object getCallback()>();

        if $r6 != r1 goto label2;

        $r7 = r0.<android.telecom.RemoteConference: java.util.Set mCallbackRecords>;

        interfaceinvoke $r7.<java.util.Set: boolean remove(java.lang.Object)>(r3);

        goto label3;

     label2:
        goto label1;

     label3:
        return;
    }
}
