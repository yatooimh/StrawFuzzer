public final class android.telecom.RemoteConnection extends java.lang.Object
{
    private android.net.Uri mAddress;
    private int mAddressPresentation;
    private final java.util.Set mCallbackRecords;
    private java.lang.String mCallerDisplayName;
    private int mCallerDisplayNamePresentation;
    private java.lang.String mCallingPackageAbbreviation;
    private android.telecom.RemoteConference mConference;
    private final java.util.List mConferenceableConnections;
    private boolean mConnected;
    private int mConnectionCapabilities;
    private final java.lang.String mConnectionId;
    private int mConnectionProperties;
    private com.android.internal.telecom.IConnectionService mConnectionService;
    private android.telecom.DisconnectCause mDisconnectCause;
    private android.os.Bundle mExtras;
    private boolean mIsVoipAudioMode;
    private boolean mRingbackRequested;
    private int mState;
    private android.telecom.StatusHints mStatusHints;
    private final java.util.List mUnmodifiableconferenceableConnections;
    private android.telecom.RemoteConnection$VideoProvider mVideoProvider;
    private int mVideoState;

    void <init>(android.telecom.DisconnectCause)
    {
        android.telecom.RemoteConnection r0;
        android.telecom.DisconnectCause r1;
        java.util.concurrent.ConcurrentHashMap $r3;
        java.util.Set $r4;
        java.util.ArrayList $r5;
        java.util.List $r6;

        r0 := @this: android.telecom.RemoteConnection;

        r1 := @parameter0: android.telecom.DisconnectCause;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new java.util.concurrent.ConcurrentHashMap;

        specialinvoke $r3.<java.util.concurrent.ConcurrentHashMap: void <init>(int,float,int)>(8, 0.9F, 1);

        $r4 = staticinvoke <java.util.Collections: java.util.Set newSetFromMap(java.util.Map)>($r3);

        r0.<android.telecom.RemoteConnection: java.util.Set mCallbackRecords> = $r4;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r0.<android.telecom.RemoteConnection: java.util.List mConferenceableConnections> = $r5;

        $r6 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r5);

        r0.<android.telecom.RemoteConnection: java.util.List mUnmodifiableconferenceableConnections> = $r6;

        r0.<android.telecom.RemoteConnection: int mState> = 1;

        r0.<android.telecom.RemoteConnection: java.lang.String mConnectionId> = "NULL";

        r0.<android.telecom.RemoteConnection: boolean mConnected> = 0;

        r0.<android.telecom.RemoteConnection: int mState> = 6;

        r0.<android.telecom.RemoteConnection: android.telecom.DisconnectCause mDisconnectCause> = r1;

        return;
    }

    void <init>(java.lang.String, com.android.internal.telecom.IConnectionService, android.telecom.ConnectionRequest)
    {
        android.telecom.RemoteConnection r0;
        java.lang.String r1, $r12, $r13;
        com.android.internal.telecom.IConnectionService r2;
        android.telecom.ConnectionRequest r3;
        java.util.concurrent.ConcurrentHashMap $r5;
        java.util.Set $r6;
        java.util.ArrayList $r7;
        java.util.List $r8;
        android.os.Bundle $r9, $r10, $r11;
        boolean $z0;

        r0 := @this: android.telecom.RemoteConnection;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: com.android.internal.telecom.IConnectionService;

        r3 := @parameter2: android.telecom.ConnectionRequest;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r5 = new java.util.concurrent.ConcurrentHashMap;

        specialinvoke $r5.<java.util.concurrent.ConcurrentHashMap: void <init>(int,float,int)>(8, 0.9F, 1);

        $r6 = staticinvoke <java.util.Collections: java.util.Set newSetFromMap(java.util.Map)>($r5);

        r0.<android.telecom.RemoteConnection: java.util.Set mCallbackRecords> = $r6;

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        r0.<android.telecom.RemoteConnection: java.util.List mConferenceableConnections> = $r7;

        $r8 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r7);

        r0.<android.telecom.RemoteConnection: java.util.List mUnmodifiableconferenceableConnections> = $r8;

        r0.<android.telecom.RemoteConnection: int mState> = 1;

        r0.<android.telecom.RemoteConnection: java.lang.String mConnectionId> = r1;

        r0.<android.telecom.RemoteConnection: com.android.internal.telecom.IConnectionService mConnectionService> = r2;

        r0.<android.telecom.RemoteConnection: boolean mConnected> = 1;

        r0.<android.telecom.RemoteConnection: int mState> = 0;

        if r3 == null goto label1;

        $r9 = virtualinvoke r3.<android.telecom.ConnectionRequest: android.os.Bundle getExtras()>();

        if $r9 == null goto label1;

        $r10 = virtualinvoke r3.<android.telecom.ConnectionRequest: android.os.Bundle getExtras()>();

        $z0 = virtualinvoke $r10.<android.os.Bundle: boolean containsKey(java.lang.String)>("android.telecom.extra.REMOTE_CONNECTION_ORIGINATING_PACKAGE_NAME");

        if $z0 == 0 goto label1;

        $r11 = virtualinvoke r3.<android.telecom.ConnectionRequest: android.os.Bundle getExtras()>();

        $r12 = virtualinvoke $r11.<android.os.Bundle: java.lang.String getString(java.lang.String)>("android.telecom.extra.REMOTE_CONNECTION_ORIGINATING_PACKAGE_NAME");

        $r13 = staticinvoke <android.telecom.Log: java.lang.String getPackageAbbreviation(java.lang.String)>($r12);

        r0.<android.telecom.RemoteConnection: java.lang.String mCallingPackageAbbreviation> = $r13;

     label1:
        return;
    }

    void <init>(java.lang.String, com.android.internal.telecom.IConnectionService, android.telecom.ParcelableConnection, java.lang.String, int)
    {
        android.telecom.RemoteConnection r0;
        java.lang.String r1, r3, $r12, $r15;
        android.telecom.ParcelableConnection r2;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6;
        java.util.concurrent.ConcurrentHashMap $r5;
        java.util.Set $r6;
        java.util.ArrayList $r7;
        java.util.List $r8;
        android.telecom.DisconnectCause $r9;
        boolean $z0, $z1;
        android.telecom.StatusHints $r10;
        android.net.Uri $r11;
        android.os.Bundle $r13, $r14;
        android.telecom.RemoteConnection$VideoProvider $r16;
        com.android.internal.telecom.IConnectionService r17;
        com.android.internal.telecom.IVideoProvider r18;

        r0 := @this: android.telecom.RemoteConnection;

        r1 := @parameter0: java.lang.String;

        r17 := @parameter1: com.android.internal.telecom.IConnectionService;

        r2 := @parameter2: android.telecom.ParcelableConnection;

        r3 := @parameter3: java.lang.String;

        i0 := @parameter4: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r5 = new java.util.concurrent.ConcurrentHashMap;

        specialinvoke $r5.<java.util.concurrent.ConcurrentHashMap: void <init>(int,float,int)>(8, 0.9F, 1);

        $r6 = staticinvoke <java.util.Collections: java.util.Set newSetFromMap(java.util.Map)>($r5);

        r0.<android.telecom.RemoteConnection: java.util.Set mCallbackRecords> = $r6;

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        r0.<android.telecom.RemoteConnection: java.util.List mConferenceableConnections> = $r7;

        $r8 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r7);

        r0.<android.telecom.RemoteConnection: java.util.List mUnmodifiableconferenceableConnections> = $r8;

        r0.<android.telecom.RemoteConnection: int mState> = 1;

        r0.<android.telecom.RemoteConnection: java.lang.String mConnectionId> = r1;

        r0.<android.telecom.RemoteConnection: com.android.internal.telecom.IConnectionService mConnectionService> = r17;

        r0.<android.telecom.RemoteConnection: boolean mConnected> = 1;

        $i1 = virtualinvoke r2.<android.telecom.ParcelableConnection: int getState()>();

        r0.<android.telecom.RemoteConnection: int mState> = $i1;

        $r9 = virtualinvoke r2.<android.telecom.ParcelableConnection: android.telecom.DisconnectCause getDisconnectCause()>();

        r0.<android.telecom.RemoteConnection: android.telecom.DisconnectCause mDisconnectCause> = $r9;

        $z0 = virtualinvoke r2.<android.telecom.ParcelableConnection: boolean isRingbackRequested()>();

        r0.<android.telecom.RemoteConnection: boolean mRingbackRequested> = $z0;

        $i2 = virtualinvoke r2.<android.telecom.ParcelableConnection: int getConnectionCapabilities()>();

        r0.<android.telecom.RemoteConnection: int mConnectionCapabilities> = $i2;

        $i3 = virtualinvoke r2.<android.telecom.ParcelableConnection: int getConnectionProperties()>();

        r0.<android.telecom.RemoteConnection: int mConnectionProperties> = $i3;

        $i4 = virtualinvoke r2.<android.telecom.ParcelableConnection: int getVideoState()>();

        r0.<android.telecom.RemoteConnection: int mVideoState> = $i4;

        r18 = virtualinvoke r2.<android.telecom.ParcelableConnection: com.android.internal.telecom.IVideoProvider getVideoProvider()>();

        if r18 == null goto label1;

        $r16 = new android.telecom.RemoteConnection$VideoProvider;

        specialinvoke $r16.<android.telecom.RemoteConnection$VideoProvider: void <init>(com.android.internal.telecom.IVideoProvider,java.lang.String,int)>(r18, r3, i0);

        r0.<android.telecom.RemoteConnection: android.telecom.RemoteConnection$VideoProvider mVideoProvider> = $r16;

        goto label2;

     label1:
        r0.<android.telecom.RemoteConnection: android.telecom.RemoteConnection$VideoProvider mVideoProvider> = null;

     label2:
        $z1 = virtualinvoke r2.<android.telecom.ParcelableConnection: boolean getIsVoipAudioMode()>();

        r0.<android.telecom.RemoteConnection: boolean mIsVoipAudioMode> = $z1;

        $r10 = virtualinvoke r2.<android.telecom.ParcelableConnection: android.telecom.StatusHints getStatusHints()>();

        r0.<android.telecom.RemoteConnection: android.telecom.StatusHints mStatusHints> = $r10;

        $r11 = virtualinvoke r2.<android.telecom.ParcelableConnection: android.net.Uri getHandle()>();

        r0.<android.telecom.RemoteConnection: android.net.Uri mAddress> = $r11;

        $i5 = virtualinvoke r2.<android.telecom.ParcelableConnection: int getHandlePresentation()>();

        r0.<android.telecom.RemoteConnection: int mAddressPresentation> = $i5;

        $r12 = virtualinvoke r2.<android.telecom.ParcelableConnection: java.lang.String getCallerDisplayName()>();

        r0.<android.telecom.RemoteConnection: java.lang.String mCallerDisplayName> = $r12;

        $i6 = virtualinvoke r2.<android.telecom.ParcelableConnection: int getCallerDisplayNamePresentation()>();

        r0.<android.telecom.RemoteConnection: int mCallerDisplayNamePresentation> = $i6;

        r0.<android.telecom.RemoteConnection: android.telecom.RemoteConference mConference> = null;

        $r13 = virtualinvoke r2.<android.telecom.ParcelableConnection: android.os.Bundle getExtras()>();

        virtualinvoke r0.<android.telecom.RemoteConnection: void putExtras(android.os.Bundle)>($r13);

        $r14 = new android.os.Bundle;

        specialinvoke $r14.<android.os.Bundle: void <init>()>();

        virtualinvoke $r14.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("android.telecom.extra.ORIGINAL_CONNECTION_ID", r1);

        virtualinvoke r0.<android.telecom.RemoteConnection: void putExtras(android.os.Bundle)>($r14);

        $r15 = staticinvoke <android.telecom.Log: java.lang.String getPackageAbbreviation(java.lang.String)>(r3);

        r0.<android.telecom.RemoteConnection: java.lang.String mCallingPackageAbbreviation> = $r15;

        return;
    }

    static java.util.List access$100(android.telecom.RemoteConnection)
    {
        android.telecom.RemoteConnection r0;
        java.util.List $r1;

        r0 := @parameter0: android.telecom.RemoteConnection;

        $r1 = r0.<android.telecom.RemoteConnection: java.util.List mUnmodifiableconferenceableConnections>;

        return $r1;
    }

    static android.os.Bundle access$200(android.telecom.RemoteConnection)
    {
        android.telecom.RemoteConnection r0;
        android.os.Bundle $r1;

        r0 := @parameter0: android.telecom.RemoteConnection;

        $r1 = r0.<android.telecom.RemoteConnection: android.os.Bundle mExtras>;

        return $r1;
    }

    public static android.telecom.RemoteConnection failure(android.telecom.DisconnectCause)
    {
        android.telecom.DisconnectCause r0;
        android.telecom.RemoteConnection $r1;

        r0 := @parameter0: android.telecom.DisconnectCause;

        $r1 = new android.telecom.RemoteConnection;

        specialinvoke $r1.<android.telecom.RemoteConnection: void <init>(android.telecom.DisconnectCause)>(r0);

        return $r1;
    }

    private java.lang.String getActiveOwnerInfo()
    {
        android.telecom.RemoteConnection r0;
        android.telecom.Logging.Session$Info r1;
        java.lang.String $r2;

        r0 := @this: android.telecom.RemoteConnection;

        r1 = staticinvoke <android.telecom.Log: android.telecom.Logging.Session$Info getExternalSession()>();

        if r1 != null goto label1;

        return null;

     label1:
        $r2 = r1.<android.telecom.Logging.Session$Info: java.lang.String ownerInfo>;

        return $r2;
    }

    static void lambda$onRemoteRttRequest$3(android.telecom.RemoteConnection$Callback, android.telecom.RemoteConnection)
    {
        android.telecom.RemoteConnection$Callback r0;
        android.telecom.RemoteConnection r1;

        r0 := @parameter0: android.telecom.RemoteConnection$Callback;

        r1 := @parameter1: android.telecom.RemoteConnection;

        virtualinvoke r0.<android.telecom.RemoteConnection$Callback: void onRemoteRttRequest(android.telecom.RemoteConnection)>(r1);

        return;
    }

    static void lambda$onRttInitiationFailure$1(android.telecom.RemoteConnection$Callback, android.telecom.RemoteConnection, int)
    {
        android.telecom.RemoteConnection$Callback r0;
        android.telecom.RemoteConnection r1;
        int i0;

        r0 := @parameter0: android.telecom.RemoteConnection$Callback;

        r1 := @parameter1: android.telecom.RemoteConnection;

        i0 := @parameter2: int;

        virtualinvoke r0.<android.telecom.RemoteConnection$Callback: void onRttInitiationFailure(android.telecom.RemoteConnection,int)>(r1, i0);

        return;
    }

    static void lambda$onRttInitiationSuccess$0(android.telecom.RemoteConnection$Callback, android.telecom.RemoteConnection)
    {
        android.telecom.RemoteConnection$Callback r0;
        android.telecom.RemoteConnection r1;

        r0 := @parameter0: android.telecom.RemoteConnection$Callback;

        r1 := @parameter1: android.telecom.RemoteConnection;

        virtualinvoke r0.<android.telecom.RemoteConnection$Callback: void onRttInitiationSuccess(android.telecom.RemoteConnection)>(r1);

        return;
    }

    static void lambda$onRttSessionRemotelyTerminated$2(android.telecom.RemoteConnection$Callback, android.telecom.RemoteConnection)
    {
        android.telecom.RemoteConnection$Callback r0;
        android.telecom.RemoteConnection r1;

        r0 := @parameter0: android.telecom.RemoteConnection$Callback;

        r1 := @parameter1: android.telecom.RemoteConnection;

        virtualinvoke r0.<android.telecom.RemoteConnection$Callback: void onRttSessionRemotelyTerminated(android.telecom.RemoteConnection)>(r1);

        return;
    }

    private void notifyExtrasChanged()
    {
        android.telecom.RemoteConnection r0;
        java.util.Iterator r1;
        android.telecom.RemoteConnection$CallbackRecord r2;
        android.telecom.RemoteConnection$Callback r3;
        java.util.Set $r4;
        boolean $z0;
        java.lang.Object $r5;
        android.os.Handler $r6;
        android.telecom.RemoteConnection$17 $r7;

        r0 := @this: android.telecom.RemoteConnection;

        $r4 = r0.<android.telecom.RemoteConnection: java.util.Set mCallbackRecords>;

        r1 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (android.telecom.RemoteConnection$CallbackRecord) $r5;

        r3 = virtualinvoke r2.<android.telecom.RemoteConnection$CallbackRecord: android.telecom.RemoteConnection$Callback getCallback()>();

        $r6 = virtualinvoke r2.<android.telecom.RemoteConnection$CallbackRecord: android.os.Handler getHandler()>();

        $r7 = new android.telecom.RemoteConnection$17;

        specialinvoke $r7.<android.telecom.RemoteConnection$17: void <init>(android.telecom.RemoteConnection,android.telecom.RemoteConnection$Callback,android.telecom.RemoteConnection)>(r0, r3, r0);

        virtualinvoke $r6.<android.os.Handler: boolean post(java.lang.Runnable)>($r7);

        goto label1;

     label2:
        return;
    }

    public void abort()
    {
        android.telecom.RemoteConnection r0;
        java.lang.String $r1, $r2, $r4;
        boolean $z0;
        com.android.internal.telecom.IConnectionService $r3;
        android.telecom.Logging.Session$Info $r5;
        java.lang.Throwable $r6;
        android.os.RemoteException $r7;

        r0 := @this: android.telecom.RemoteConnection;

        $r1 = specialinvoke r0.<android.telecom.RemoteConnection: java.lang.String getActiveOwnerInfo()>();

        staticinvoke <android.telecom.Log: void startSession(java.lang.String,java.lang.String)>("RC.a", $r1);

     label1:
        $z0 = r0.<android.telecom.RemoteConnection: boolean mConnected>;

        if $z0 == 0 goto label5;

        $r3 = r0.<android.telecom.RemoteConnection: com.android.internal.telecom.IConnectionService mConnectionService>;

        $r4 = r0.<android.telecom.RemoteConnection: java.lang.String mConnectionId>;

        $r2 = r0.<android.telecom.RemoteConnection: java.lang.String mCallingPackageAbbreviation>;

        $r5 = staticinvoke <android.telecom.Log: android.telecom.Logging.Session$Info getExternalSession(java.lang.String)>($r2);

        interfaceinvoke $r3.<com.android.internal.telecom.IConnectionService: void abort(java.lang.String,android.telecom.Logging.Session$Info)>($r4, $r5);

     label2:
        goto label5;

     label3:
        $r6 := @caughtexception;

        staticinvoke <android.telecom.Log: void endSession()>();

        throw $r6;

     label4:
        $r7 := @caughtexception;

     label5:
        staticinvoke <android.telecom.Log: void endSession()>();

        return;

        catch android.os.RemoteException from label1 to label2 with label4;
        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void answer()
    {
        android.telecom.RemoteConnection r0;
        java.lang.String $r1, $r2, $r4;
        boolean $z0;
        com.android.internal.telecom.IConnectionService $r3;
        android.telecom.Logging.Session$Info $r5;
        java.lang.Throwable $r6;
        android.os.RemoteException $r7;

        r0 := @this: android.telecom.RemoteConnection;

        $r1 = specialinvoke r0.<android.telecom.RemoteConnection: java.lang.String getActiveOwnerInfo()>();

        staticinvoke <android.telecom.Log: void startSession(java.lang.String,java.lang.String)>("RC.an", $r1);

     label1:
        $z0 = r0.<android.telecom.RemoteConnection: boolean mConnected>;

        if $z0 == 0 goto label5;

        $r3 = r0.<android.telecom.RemoteConnection: com.android.internal.telecom.IConnectionService mConnectionService>;

        $r4 = r0.<android.telecom.RemoteConnection: java.lang.String mConnectionId>;

        $r2 = r0.<android.telecom.RemoteConnection: java.lang.String mCallingPackageAbbreviation>;

        $r5 = staticinvoke <android.telecom.Log: android.telecom.Logging.Session$Info getExternalSession(java.lang.String)>($r2);

        interfaceinvoke $r3.<com.android.internal.telecom.IConnectionService: void answer(java.lang.String,android.telecom.Logging.Session$Info)>($r4, $r5);

     label2:
        goto label5;

     label3:
        $r6 := @caughtexception;

        staticinvoke <android.telecom.Log: void endSession()>();

        throw $r6;

     label4:
        $r7 := @caughtexception;

     label5:
        staticinvoke <android.telecom.Log: void endSession()>();

        return;

        catch android.os.RemoteException from label1 to label2 with label4;
        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void answer(int)
    {
        android.telecom.RemoteConnection r0;
        int i0;
        java.lang.String $r1, $r2, $r4;
        boolean $z0;
        com.android.internal.telecom.IConnectionService $r3;
        android.telecom.Logging.Session$Info $r5;
        java.lang.Throwable $r6;
        android.os.RemoteException $r7;

        r0 := @this: android.telecom.RemoteConnection;

        i0 := @parameter0: int;

        $r1 = specialinvoke r0.<android.telecom.RemoteConnection: java.lang.String getActiveOwnerInfo()>();

        staticinvoke <android.telecom.Log: void startSession(java.lang.String,java.lang.String)>("RC.an2", $r1);

     label1:
        $z0 = r0.<android.telecom.RemoteConnection: boolean mConnected>;

        if $z0 == 0 goto label5;

        $r3 = r0.<android.telecom.RemoteConnection: com.android.internal.telecom.IConnectionService mConnectionService>;

        $r4 = r0.<android.telecom.RemoteConnection: java.lang.String mConnectionId>;

        $r2 = r0.<android.telecom.RemoteConnection: java.lang.String mCallingPackageAbbreviation>;

        $r5 = staticinvoke <android.telecom.Log: android.telecom.Logging.Session$Info getExternalSession(java.lang.String)>($r2);

        interfaceinvoke $r3.<com.android.internal.telecom.IConnectionService: void answerVideo(java.lang.String,int,android.telecom.Logging.Session$Info)>($r4, i0, $r5);

     label2:
        goto label5;

     label3:
        $r6 := @caughtexception;

        staticinvoke <android.telecom.Log: void endSession()>();

        throw $r6;

     label4:
        $r7 := @caughtexception;

     label5:
        staticinvoke <android.telecom.Log: void endSession()>();

        return;

        catch android.os.RemoteException from label1 to label2 with label4;
        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void disconnect()
    {
        android.telecom.RemoteConnection r0;
        java.lang.String $r1, $r2, $r4;
        boolean $z0;
        com.android.internal.telecom.IConnectionService $r3;
        android.telecom.Logging.Session$Info $r5;
        android.os.RemoteException $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.telecom.RemoteConnection;

        $r1 = specialinvoke r0.<android.telecom.RemoteConnection: java.lang.String getActiveOwnerInfo()>();

        staticinvoke <android.telecom.Log: void startSession(java.lang.String,java.lang.String)>("RC.d", $r1);

     label1:
        $z0 = r0.<android.telecom.RemoteConnection: boolean mConnected>;

        if $z0 == 0 goto label5;

        $r3 = r0.<android.telecom.RemoteConnection: com.android.internal.telecom.IConnectionService mConnectionService>;

        $r4 = r0.<android.telecom.RemoteConnection: java.lang.String mConnectionId>;

        $r2 = r0.<android.telecom.RemoteConnection: java.lang.String mCallingPackageAbbreviation>;

        $r5 = staticinvoke <android.telecom.Log: android.telecom.Logging.Session$Info getExternalSession(java.lang.String)>($r2);

        interfaceinvoke $r3.<com.android.internal.telecom.IConnectionService: void disconnect(java.lang.String,android.telecom.Logging.Session$Info)>($r4, $r5);

     label2:
        goto label5;

     label3:
        $r7 := @caughtexception;

        staticinvoke <android.telecom.Log: void endSession()>();

        throw $r7;

     label4:
        $r6 := @caughtexception;

     label5:
        staticinvoke <android.telecom.Log: void endSession()>();

        return;

        catch android.os.RemoteException from label1 to label2 with label4;
        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public android.net.Uri getAddress()
    {
        android.telecom.RemoteConnection r0;
        android.net.Uri $r1;

        r0 := @this: android.telecom.RemoteConnection;

        $r1 = r0.<android.telecom.RemoteConnection: android.net.Uri mAddress>;

        return $r1;
    }

    public int getAddressPresentation()
    {
        android.telecom.RemoteConnection r0;
        int $i0;

        r0 := @this: android.telecom.RemoteConnection;

        $i0 = r0.<android.telecom.RemoteConnection: int mAddressPresentation>;

        return $i0;
    }

    public java.lang.CharSequence getCallerDisplayName()
    {
        android.telecom.RemoteConnection r0;
        java.lang.String $r1;

        r0 := @this: android.telecom.RemoteConnection;

        $r1 = r0.<android.telecom.RemoteConnection: java.lang.String mCallerDisplayName>;

        return $r1;
    }

    public int getCallerDisplayNamePresentation()
    {
        android.telecom.RemoteConnection r0;
        int $i0;

        r0 := @this: android.telecom.RemoteConnection;

        $i0 = r0.<android.telecom.RemoteConnection: int mCallerDisplayNamePresentation>;

        return $i0;
    }

    public android.telecom.RemoteConference getConference()
    {
        android.telecom.RemoteConnection r0;
        android.telecom.RemoteConference $r1;

        r0 := @this: android.telecom.RemoteConnection;

        $r1 = r0.<android.telecom.RemoteConnection: android.telecom.RemoteConference mConference>;

        return $r1;
    }

    public java.util.List getConferenceableConnections()
    {
        android.telecom.RemoteConnection r0;
        java.util.List $r1;

        r0 := @this: android.telecom.RemoteConnection;

        $r1 = r0.<android.telecom.RemoteConnection: java.util.List mUnmodifiableconferenceableConnections>;

        return $r1;
    }

    public int getConnectionCapabilities()
    {
        android.telecom.RemoteConnection r0;
        int $i0;

        r0 := @this: android.telecom.RemoteConnection;

        $i0 = r0.<android.telecom.RemoteConnection: int mConnectionCapabilities>;

        return $i0;
    }

    public int getConnectionProperties()
    {
        android.telecom.RemoteConnection r0;
        int $i0;

        r0 := @this: android.telecom.RemoteConnection;

        $i0 = r0.<android.telecom.RemoteConnection: int mConnectionProperties>;

        return $i0;
    }

    com.android.internal.telecom.IConnectionService getConnectionService()
    {
        android.telecom.RemoteConnection r0;
        com.android.internal.telecom.IConnectionService $r1;

        r0 := @this: android.telecom.RemoteConnection;

        $r1 = r0.<android.telecom.RemoteConnection: com.android.internal.telecom.IConnectionService mConnectionService>;

        return $r1;
    }

    public android.telecom.DisconnectCause getDisconnectCause()
    {
        android.telecom.RemoteConnection r0;
        android.telecom.DisconnectCause $r1;

        r0 := @this: android.telecom.RemoteConnection;

        $r1 = r0.<android.telecom.RemoteConnection: android.telecom.DisconnectCause mDisconnectCause>;

        return $r1;
    }

    public final android.os.Bundle getExtras()
    {
        android.telecom.RemoteConnection r0;
        android.os.Bundle $r1;

        r0 := @this: android.telecom.RemoteConnection;

        $r1 = r0.<android.telecom.RemoteConnection: android.os.Bundle mExtras>;

        return $r1;
    }

    java.lang.String getId()
    {
        android.telecom.RemoteConnection r0;
        java.lang.String $r1;

        r0 := @this: android.telecom.RemoteConnection;

        $r1 = r0.<android.telecom.RemoteConnection: java.lang.String mConnectionId>;

        return $r1;
    }

    public int getState()
    {
        android.telecom.RemoteConnection r0;
        int $i0;

        r0 := @this: android.telecom.RemoteConnection;

        $i0 = r0.<android.telecom.RemoteConnection: int mState>;

        return $i0;
    }

    public android.telecom.StatusHints getStatusHints()
    {
        android.telecom.RemoteConnection r0;
        android.telecom.StatusHints $r1;

        r0 := @this: android.telecom.RemoteConnection;

        $r1 = r0.<android.telecom.RemoteConnection: android.telecom.StatusHints mStatusHints>;

        return $r1;
    }

    public final android.telecom.RemoteConnection$VideoProvider getVideoProvider()
    {
        android.telecom.RemoteConnection r0;
        android.telecom.RemoteConnection$VideoProvider $r1;

        r0 := @this: android.telecom.RemoteConnection;

        $r1 = r0.<android.telecom.RemoteConnection: android.telecom.RemoteConnection$VideoProvider mVideoProvider>;

        return $r1;
    }

    public int getVideoState()
    {
        android.telecom.RemoteConnection r0;
        int $i0;

        r0 := @this: android.telecom.RemoteConnection;

        $i0 = r0.<android.telecom.RemoteConnection: int mVideoState>;

        return $i0;
    }

    public void hold()
    {
        android.telecom.RemoteConnection r0;
        java.lang.String $r1, $r2, $r4;
        boolean $z0;
        com.android.internal.telecom.IConnectionService $r3;
        android.telecom.Logging.Session$Info $r5;
        java.lang.Throwable $r6;
        android.os.RemoteException $r7;

        r0 := @this: android.telecom.RemoteConnection;

        $r1 = specialinvoke r0.<android.telecom.RemoteConnection: java.lang.String getActiveOwnerInfo()>();

        staticinvoke <android.telecom.Log: void startSession(java.lang.String,java.lang.String)>("RC.h", $r1);

     label1:
        $z0 = r0.<android.telecom.RemoteConnection: boolean mConnected>;

        if $z0 == 0 goto label5;

        $r3 = r0.<android.telecom.RemoteConnection: com.android.internal.telecom.IConnectionService mConnectionService>;

        $r4 = r0.<android.telecom.RemoteConnection: java.lang.String mConnectionId>;

        $r2 = r0.<android.telecom.RemoteConnection: java.lang.String mCallingPackageAbbreviation>;

        $r5 = staticinvoke <android.telecom.Log: android.telecom.Logging.Session$Info getExternalSession(java.lang.String)>($r2);

        interfaceinvoke $r3.<com.android.internal.telecom.IConnectionService: void hold(java.lang.String,android.telecom.Logging.Session$Info)>($r4, $r5);

     label2:
        goto label5;

     label3:
        $r6 := @caughtexception;

        staticinvoke <android.telecom.Log: void endSession()>();

        throw $r6;

     label4:
        $r7 := @caughtexception;

     label5:
        staticinvoke <android.telecom.Log: void endSession()>();

        return;

        catch android.os.RemoteException from label1 to label2 with label4;
        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public boolean isRingbackRequested()
    {
        android.telecom.RemoteConnection r0;
        boolean $z0;

        r0 := @this: android.telecom.RemoteConnection;

        $z0 = r0.<android.telecom.RemoteConnection: boolean mRingbackRequested>;

        return $z0;
    }

    public boolean isVoipAudioMode()
    {
        android.telecom.RemoteConnection r0;
        boolean $z0;

        r0 := @this: android.telecom.RemoteConnection;

        $z0 = r0.<android.telecom.RemoteConnection: boolean mIsVoipAudioMode>;

        return $z0;
    }

    void onConnectionEvent(java.lang.String, android.os.Bundle)
    {
        android.telecom.RemoteConnection r0;
        java.lang.String r1;
        android.os.Bundle r2;
        java.util.Iterator r3;
        android.telecom.RemoteConnection$CallbackRecord r4;
        android.telecom.RemoteConnection$Callback r5;
        java.util.Set $r6;
        boolean $z0;
        java.lang.Object $r7;
        android.os.Handler $r8;
        android.telecom.RemoteConnection$18 $r9;

        r0 := @this: android.telecom.RemoteConnection;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.Bundle;

        $r6 = r0.<android.telecom.RemoteConnection: java.util.Set mCallbackRecords>;

        r3 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r7 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (android.telecom.RemoteConnection$CallbackRecord) $r7;

        r5 = virtualinvoke r4.<android.telecom.RemoteConnection$CallbackRecord: android.telecom.RemoteConnection$Callback getCallback()>();

        $r8 = virtualinvoke r4.<android.telecom.RemoteConnection$CallbackRecord: android.os.Handler getHandler()>();

        $r9 = new android.telecom.RemoteConnection$18;

        specialinvoke $r9.<android.telecom.RemoteConnection$18: void <init>(android.telecom.RemoteConnection,android.telecom.RemoteConnection$Callback,android.telecom.RemoteConnection,java.lang.String,android.os.Bundle)>(r0, r5, r0, r1, r2);

        virtualinvoke $r8.<android.os.Handler: boolean post(java.lang.Runnable)>($r9);

        goto label1;

     label2:
        return;
    }

    void onPostDialChar(char)
    {
        android.telecom.RemoteConnection r0;
        char c0;
        java.util.Iterator r1;
        android.telecom.RemoteConnection$CallbackRecord r2;
        android.telecom.RemoteConnection$Callback r3;
        java.util.Set $r4;
        boolean $z0;
        java.lang.Object $r5;
        android.os.Handler $r6;
        android.telecom.RemoteConnection$8 $r7;

        r0 := @this: android.telecom.RemoteConnection;

        c0 := @parameter0: char;

        $r4 = r0.<android.telecom.RemoteConnection: java.util.Set mCallbackRecords>;

        r1 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (android.telecom.RemoteConnection$CallbackRecord) $r5;

        r3 = virtualinvoke r2.<android.telecom.RemoteConnection$CallbackRecord: android.telecom.RemoteConnection$Callback getCallback()>();

        $r6 = virtualinvoke r2.<android.telecom.RemoteConnection$CallbackRecord: android.os.Handler getHandler()>();

        $r7 = new android.telecom.RemoteConnection$8;

        specialinvoke $r7.<android.telecom.RemoteConnection$8: void <init>(android.telecom.RemoteConnection,android.telecom.RemoteConnection$Callback,android.telecom.RemoteConnection,char)>(r0, r3, r0, c0);

        virtualinvoke $r6.<android.os.Handler: boolean post(java.lang.Runnable)>($r7);

        goto label1;

     label2:
        return;
    }

    void onRemoteRttRequest()
    {
        android.telecom.RemoteConnection r0;
        java.util.Iterator r1;
        android.telecom.RemoteConnection$CallbackRecord r2;
        android.telecom.RemoteConnection$Callback r3;
        java.util.Set $r4;
        boolean $z0;
        java.lang.Object $r5;
        android.os.Handler $r6;
        android.telecom._$$Lambda$RemoteConnection$yp1cNJ53RzQGFz3RZRlC3urzQv4 $r7;

        r0 := @this: android.telecom.RemoteConnection;

        $r4 = r0.<android.telecom.RemoteConnection: java.util.Set mCallbackRecords>;

        r1 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (android.telecom.RemoteConnection$CallbackRecord) $r5;

        r3 = virtualinvoke r2.<android.telecom.RemoteConnection$CallbackRecord: android.telecom.RemoteConnection$Callback getCallback()>();

        $r6 = virtualinvoke r2.<android.telecom.RemoteConnection$CallbackRecord: android.os.Handler getHandler()>();

        $r7 = new android.telecom._$$Lambda$RemoteConnection$yp1cNJ53RzQGFz3RZRlC3urzQv4;

        specialinvoke $r7.<android.telecom._$$Lambda$RemoteConnection$yp1cNJ53RzQGFz3RZRlC3urzQv4: void <init>(android.telecom.RemoteConnection$Callback,android.telecom.RemoteConnection)>(r3, r0);

        virtualinvoke $r6.<android.os.Handler: boolean post(java.lang.Runnable)>($r7);

        goto label1;

     label2:
        return;
    }

    void onRttInitiationFailure(int)
    {
        android.telecom.RemoteConnection r0;
        int i0;
        java.util.Iterator r1;
        android.telecom.RemoteConnection$CallbackRecord r2;
        android.telecom.RemoteConnection$Callback r3;
        java.util.Set $r4;
        boolean $z0;
        java.lang.Object $r5;
        android.os.Handler $r6;
        android.telecom._$$Lambda$RemoteConnection$AwagQDJDcNDplrFif6DlYZldL5E $r7;

        r0 := @this: android.telecom.RemoteConnection;

        i0 := @parameter0: int;

        $r4 = r0.<android.telecom.RemoteConnection: java.util.Set mCallbackRecords>;

        r1 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (android.telecom.RemoteConnection$CallbackRecord) $r5;

        r3 = virtualinvoke r2.<android.telecom.RemoteConnection$CallbackRecord: android.telecom.RemoteConnection$Callback getCallback()>();

        $r6 = virtualinvoke r2.<android.telecom.RemoteConnection$CallbackRecord: android.os.Handler getHandler()>();

        $r7 = new android.telecom._$$Lambda$RemoteConnection$AwagQDJDcNDplrFif6DlYZldL5E;

        specialinvoke $r7.<android.telecom._$$Lambda$RemoteConnection$AwagQDJDcNDplrFif6DlYZldL5E: void <init>(android.telecom.RemoteConnection$Callback,android.telecom.RemoteConnection,int)>(r3, r0, i0);

        virtualinvoke $r6.<android.os.Handler: boolean post(java.lang.Runnable)>($r7);

        goto label1;

     label2:
        return;
    }

    void onRttInitiationSuccess()
    {
        android.telecom.RemoteConnection r0;
        java.util.Iterator r1;
        android.telecom.RemoteConnection$CallbackRecord r2;
        android.telecom.RemoteConnection$Callback r3;
        java.util.Set $r4;
        boolean $z0;
        java.lang.Object $r5;
        android.os.Handler $r6;
        android.telecom._$$Lambda$RemoteConnection$C4t0J6QK31Ef1UFsdPVwkew1VaQ $r7;

        r0 := @this: android.telecom.RemoteConnection;

        $r4 = r0.<android.telecom.RemoteConnection: java.util.Set mCallbackRecords>;

        r1 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (android.telecom.RemoteConnection$CallbackRecord) $r5;

        r3 = virtualinvoke r2.<android.telecom.RemoteConnection$CallbackRecord: android.telecom.RemoteConnection$Callback getCallback()>();

        $r6 = virtualinvoke r2.<android.telecom.RemoteConnection$CallbackRecord: android.os.Handler getHandler()>();

        $r7 = new android.telecom._$$Lambda$RemoteConnection$C4t0J6QK31Ef1UFsdPVwkew1VaQ;

        specialinvoke $r7.<android.telecom._$$Lambda$RemoteConnection$C4t0J6QK31Ef1UFsdPVwkew1VaQ: void <init>(android.telecom.RemoteConnection$Callback,android.telecom.RemoteConnection)>(r3, r0);

        virtualinvoke $r6.<android.os.Handler: boolean post(java.lang.Runnable)>($r7);

        goto label1;

     label2:
        return;
    }

    void onRttSessionRemotelyTerminated()
    {
        android.telecom.RemoteConnection r0;
        java.util.Iterator r1;
        android.telecom.RemoteConnection$CallbackRecord r2;
        android.telecom.RemoteConnection$Callback r3;
        java.util.Set $r4;
        boolean $z0;
        java.lang.Object $r5;
        android.os.Handler $r6;
        android.telecom._$$Lambda$RemoteConnection$mmHouQhUco_u9PRJ9qkMqlkKzAs $r7;

        r0 := @this: android.telecom.RemoteConnection;

        $r4 = r0.<android.telecom.RemoteConnection: java.util.Set mCallbackRecords>;

        r1 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (android.telecom.RemoteConnection$CallbackRecord) $r5;

        r3 = virtualinvoke r2.<android.telecom.RemoteConnection$CallbackRecord: android.telecom.RemoteConnection$Callback getCallback()>();

        $r6 = virtualinvoke r2.<android.telecom.RemoteConnection$CallbackRecord: android.os.Handler getHandler()>();

        $r7 = new android.telecom._$$Lambda$RemoteConnection$mmHouQhUco_u9PRJ9qkMqlkKzAs;

        specialinvoke $r7.<android.telecom._$$Lambda$RemoteConnection$mmHouQhUco_u9PRJ9qkMqlkKzAs: void <init>(android.telecom.RemoteConnection$Callback,android.telecom.RemoteConnection)>(r3, r0);

        virtualinvoke $r6.<android.os.Handler: boolean post(java.lang.Runnable)>($r7);

        goto label1;

     label2:
        return;
    }

    public void playDtmfTone(char)
    {
        android.telecom.RemoteConnection r0;
        char c0;
        java.lang.String $r1, $r2;
        boolean $z0;
        com.android.internal.telecom.IConnectionService $r3;
        java.lang.Throwable $r4;
        android.os.RemoteException $r5;

        r0 := @this: android.telecom.RemoteConnection;

        c0 := @parameter0: char;

        $r1 = specialinvoke r0.<android.telecom.RemoteConnection: java.lang.String getActiveOwnerInfo()>();

        staticinvoke <android.telecom.Log: void startSession(java.lang.String,java.lang.String)>("RC.pDT", $r1);

     label1:
        $z0 = r0.<android.telecom.RemoteConnection: boolean mConnected>;

        if $z0 == 0 goto label5;

        $r3 = r0.<android.telecom.RemoteConnection: com.android.internal.telecom.IConnectionService mConnectionService>;

        $r2 = r0.<android.telecom.RemoteConnection: java.lang.String mConnectionId>;

        interfaceinvoke $r3.<com.android.internal.telecom.IConnectionService: void playDtmfTone(java.lang.String,char,android.telecom.Logging.Session$Info)>($r2, c0, null);

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        staticinvoke <android.telecom.Log: void endSession()>();

        throw $r4;

     label4:
        $r5 := @caughtexception;

     label5:
        staticinvoke <android.telecom.Log: void endSession()>();

        return;

        catch android.os.RemoteException from label1 to label2 with label4;
        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void postDialContinue(boolean)
    {
        android.telecom.RemoteConnection r0;
        boolean z0, $z1;
        java.lang.String $r1, $r2;
        com.android.internal.telecom.IConnectionService $r3;
        java.lang.Throwable $r4;
        android.os.RemoteException $r5;

        r0 := @this: android.telecom.RemoteConnection;

        z0 := @parameter0: boolean;

        $r1 = specialinvoke r0.<android.telecom.RemoteConnection: java.lang.String getActiveOwnerInfo()>();

        staticinvoke <android.telecom.Log: void startSession(java.lang.String,java.lang.String)>("RC.pDC", $r1);

     label1:
        $z1 = r0.<android.telecom.RemoteConnection: boolean mConnected>;

        if $z1 == 0 goto label5;

        $r3 = r0.<android.telecom.RemoteConnection: com.android.internal.telecom.IConnectionService mConnectionService>;

        $r2 = r0.<android.telecom.RemoteConnection: java.lang.String mConnectionId>;

        interfaceinvoke $r3.<com.android.internal.telecom.IConnectionService: void onPostDialContinue(java.lang.String,boolean,android.telecom.Logging.Session$Info)>($r2, z0, null);

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        staticinvoke <android.telecom.Log: void endSession()>();

        throw $r4;

     label4:
        $r5 := @caughtexception;

     label5:
        staticinvoke <android.telecom.Log: void endSession()>();

        return;

        catch android.os.RemoteException from label1 to label2 with label4;
        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void pullExternalCall()
    {
        android.telecom.RemoteConnection r0;
        java.lang.String $r1, $r2;
        boolean $z0;
        com.android.internal.telecom.IConnectionService $r3;
        android.os.RemoteException $r4;
        java.lang.Throwable $r5;

        r0 := @this: android.telecom.RemoteConnection;

        $r1 = specialinvoke r0.<android.telecom.RemoteConnection: java.lang.String getActiveOwnerInfo()>();

        staticinvoke <android.telecom.Log: void startSession(java.lang.String,java.lang.String)>("RC.pEC", $r1);

     label1:
        $z0 = r0.<android.telecom.RemoteConnection: boolean mConnected>;

        if $z0 == 0 goto label5;

        $r3 = r0.<android.telecom.RemoteConnection: com.android.internal.telecom.IConnectionService mConnectionService>;

        $r2 = r0.<android.telecom.RemoteConnection: java.lang.String mConnectionId>;

        interfaceinvoke $r3.<com.android.internal.telecom.IConnectionService: void pullExternalCall(java.lang.String,android.telecom.Logging.Session$Info)>($r2, null);

     label2:
        goto label5;

     label3:
        $r5 := @caughtexception;

        staticinvoke <android.telecom.Log: void endSession()>();

        throw $r5;

     label4:
        $r4 := @caughtexception;

     label5:
        staticinvoke <android.telecom.Log: void endSession()>();

        return;

        catch android.os.RemoteException from label1 to label2 with label4;
        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void putExtras(android.os.Bundle)
    {
        android.telecom.RemoteConnection r0;
        android.os.Bundle $r2, $r3, $r4, r11;
        android.os.BadParcelableException $r5;
        java.lang.StringBuilder $r6;
        java.lang.String $r9;
        java.lang.Object[] $r10;

        r0 := @this: android.telecom.RemoteConnection;

        r11 := @parameter0: android.os.Bundle;

        if r11 != null goto label1;

        return;

     label1:
        $r2 = r0.<android.telecom.RemoteConnection: android.os.Bundle mExtras>;

        if $r2 != null goto label2;

        $r4 = new android.os.Bundle;

        specialinvoke $r4.<android.os.Bundle: void <init>()>();

        r0.<android.telecom.RemoteConnection: android.os.Bundle mExtras> = $r4;

     label2:
        $r3 = r0.<android.telecom.RemoteConnection: android.os.Bundle mExtras>;

        virtualinvoke $r3.<android.os.Bundle: void putAll(android.os.Bundle)>(r11);

     label3:
        goto label5;

     label4:
        $r5 := @caughtexception;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("putExtras: could not unmarshal extras; exception = ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r10 = newarray (java.lang.Object)[0];

        staticinvoke <android.telecom.Log: void w(java.lang.Object,java.lang.String,java.lang.Object[])>(r0, $r9, $r10);

     label5:
        specialinvoke r0.<android.telecom.RemoteConnection: void notifyExtrasChanged()>();

        return;

        catch android.os.BadParcelableException from label2 to label3 with label4;
    }

    public void registerCallback(android.telecom.RemoteConnection$Callback)
    {
        android.telecom.RemoteConnection r0;
        android.telecom.RemoteConnection$Callback r1;
        android.os.Handler $r2;

        r0 := @this: android.telecom.RemoteConnection;

        r1 := @parameter0: android.telecom.RemoteConnection$Callback;

        $r2 = new android.os.Handler;

        specialinvoke $r2.<android.os.Handler: void <init>()>();

        virtualinvoke r0.<android.telecom.RemoteConnection: void registerCallback(android.telecom.RemoteConnection$Callback,android.os.Handler)>(r1, $r2);

        return;
    }

    public void registerCallback(android.telecom.RemoteConnection$Callback, android.os.Handler)
    {
        android.telecom.RemoteConnection r0;
        android.telecom.RemoteConnection$Callback r1;
        android.os.Handler r2;
        android.telecom.RemoteConnection$CallbackRecord $r3;
        java.util.Set $r4;

        r0 := @this: android.telecom.RemoteConnection;

        r1 := @parameter0: android.telecom.RemoteConnection$Callback;

        r2 := @parameter1: android.os.Handler;

        virtualinvoke r0.<android.telecom.RemoteConnection: void unregisterCallback(android.telecom.RemoteConnection$Callback)>(r1);

        if r1 == null goto label1;

        if r2 == null goto label1;

        $r4 = r0.<android.telecom.RemoteConnection: java.util.Set mCallbackRecords>;

        $r3 = new android.telecom.RemoteConnection$CallbackRecord;

        specialinvoke $r3.<android.telecom.RemoteConnection$CallbackRecord: void <init>(android.telecom.RemoteConnection$Callback,android.os.Handler)>(r1, r2);

        interfaceinvoke $r4.<java.util.Set: boolean add(java.lang.Object)>($r3);

     label1:
        return;
    }

    public void reject()
    {
        android.telecom.RemoteConnection r0;
        java.lang.String $r1, $r2, $r4;
        boolean $z0;
        com.android.internal.telecom.IConnectionService $r3;
        android.telecom.Logging.Session$Info $r5;
        android.os.RemoteException $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.telecom.RemoteConnection;

        $r1 = specialinvoke r0.<android.telecom.RemoteConnection: java.lang.String getActiveOwnerInfo()>();

        staticinvoke <android.telecom.Log: void startSession(java.lang.String,java.lang.String)>("RC.r", $r1);

     label1:
        $z0 = r0.<android.telecom.RemoteConnection: boolean mConnected>;

        if $z0 == 0 goto label5;

        $r3 = r0.<android.telecom.RemoteConnection: com.android.internal.telecom.IConnectionService mConnectionService>;

        $r4 = r0.<android.telecom.RemoteConnection: java.lang.String mConnectionId>;

        $r2 = r0.<android.telecom.RemoteConnection: java.lang.String mCallingPackageAbbreviation>;

        $r5 = staticinvoke <android.telecom.Log: android.telecom.Logging.Session$Info getExternalSession(java.lang.String)>($r2);

        interfaceinvoke $r3.<com.android.internal.telecom.IConnectionService: void reject(java.lang.String,android.telecom.Logging.Session$Info)>($r4, $r5);

     label2:
        goto label5;

     label3:
        $r7 := @caughtexception;

        staticinvoke <android.telecom.Log: void endSession()>();

        throw $r7;

     label4:
        $r6 := @caughtexception;

     label5:
        staticinvoke <android.telecom.Log: void endSession()>();

        return;

        catch android.os.RemoteException from label1 to label2 with label4;
        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void removeExtras(java.util.List)
    {
        android.telecom.RemoteConnection r0;
        java.util.Iterator r1;
        android.os.Bundle $r2, $r4;
        boolean $z0, $z1;
        java.lang.Object $r3;
        java.util.List r5;
        java.lang.String r6;

        r0 := @this: android.telecom.RemoteConnection;

        r5 := @parameter0: java.util.List;

        $r2 = r0.<android.telecom.RemoteConnection: android.os.Bundle mExtras>;

        if $r2 == null goto label4;

        if r5 == null goto label4;

        $z0 = interfaceinvoke r5.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        goto label4;

     label1:
        r1 = interfaceinvoke r5.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r3 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.lang.String) $r3;

        $r4 = r0.<android.telecom.RemoteConnection: android.os.Bundle mExtras>;

        virtualinvoke $r4.<android.os.Bundle: void remove(java.lang.String)>(r6);

        goto label2;

     label3:
        specialinvoke r0.<android.telecom.RemoteConnection: void notifyExtrasChanged()>();

        return;

     label4:
        return;
    }

    public void sendRttUpgradeResponse(android.telecom.Connection$RttTextStream)
    {
        android.telecom.RemoteConnection r0;
        java.lang.String $r1, $r3, $r6;
        boolean $z0;
        com.android.internal.telecom.IConnectionService $r2, $r7;
        android.os.ParcelFileDescriptor $r4, $r5;
        android.os.RemoteException $r8;
        java.lang.Throwable $r9;
        android.telecom.Connection$RttTextStream r10;

        r0 := @this: android.telecom.RemoteConnection;

        r10 := @parameter0: android.telecom.Connection$RttTextStream;

        $r1 = specialinvoke r0.<android.telecom.RemoteConnection: java.lang.String getActiveOwnerInfo()>();

        staticinvoke <android.telecom.Log: void startSession(java.lang.String,java.lang.String)>("RC.sRUR", $r1);

     label1:
        $z0 = r0.<android.telecom.RemoteConnection: boolean mConnected>;

        if $z0 == 0 goto label9;

     label2:
        if r10 != null goto label5;

     label3:
        $r7 = r0.<android.telecom.RemoteConnection: com.android.internal.telecom.IConnectionService mConnectionService>;

        $r6 = r0.<android.telecom.RemoteConnection: java.lang.String mConnectionId>;

        interfaceinvoke $r7.<com.android.internal.telecom.IConnectionService: void respondToRttUpgradeRequest(java.lang.String,android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor,android.telecom.Logging.Session$Info)>($r6, null, null, null);

     label4:
        goto label9;

     label5:
        $r2 = r0.<android.telecom.RemoteConnection: com.android.internal.telecom.IConnectionService mConnectionService>;

        $r3 = r0.<android.telecom.RemoteConnection: java.lang.String mConnectionId>;

        $r4 = virtualinvoke r10.<android.telecom.Connection$RttTextStream: android.os.ParcelFileDescriptor getFdFromInCall()>();

        $r5 = virtualinvoke r10.<android.telecom.Connection$RttTextStream: android.os.ParcelFileDescriptor getFdToInCall()>();

        interfaceinvoke $r2.<com.android.internal.telecom.IConnectionService: void respondToRttUpgradeRequest(java.lang.String,android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor,android.telecom.Logging.Session$Info)>($r3, $r4, $r5, null);

     label6:
        goto label9;

     label7:
        $r9 := @caughtexception;

        staticinvoke <android.telecom.Log: void endSession()>();

        throw $r9;

     label8:
        $r8 := @caughtexception;

     label9:
        staticinvoke <android.telecom.Log: void endSession()>();

        return;

        catch android.os.RemoteException from label1 to label2 with label8;
        catch java.lang.Throwable from label1 to label2 with label7;
        catch android.os.RemoteException from label3 to label4 with label8;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch android.os.RemoteException from label5 to label6 with label8;
        catch java.lang.Throwable from label5 to label6 with label7;
    }

    void setAddress(android.net.Uri, int)
    {
        android.telecom.RemoteConnection r0;
        android.net.Uri r1;
        int i0;
        java.util.Iterator r2;
        android.telecom.RemoteConnection$CallbackRecord r3;
        android.telecom.RemoteConnection$Callback r4;
        java.util.Set $r5;
        boolean $z0;
        java.lang.Object $r6;
        android.os.Handler $r7;
        android.telecom.RemoteConnection$13 $r8;

        r0 := @this: android.telecom.RemoteConnection;

        r1 := @parameter0: android.net.Uri;

        i0 := @parameter1: int;

        r0.<android.telecom.RemoteConnection: android.net.Uri mAddress> = r1;

        r0.<android.telecom.RemoteConnection: int mAddressPresentation> = i0;

        $r5 = r0.<android.telecom.RemoteConnection: java.util.Set mCallbackRecords>;

        r2 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.telecom.RemoteConnection$CallbackRecord) $r6;

        r4 = virtualinvoke r3.<android.telecom.RemoteConnection$CallbackRecord: android.telecom.RemoteConnection$Callback getCallback()>();

        $r7 = virtualinvoke r3.<android.telecom.RemoteConnection$CallbackRecord: android.os.Handler getHandler()>();

        $r8 = new android.telecom.RemoteConnection$13;

        specialinvoke $r8.<android.telecom.RemoteConnection$13: void <init>(android.telecom.RemoteConnection,android.telecom.RemoteConnection$Callback,android.telecom.RemoteConnection,android.net.Uri,int)>(r0, r4, r0, r1, i0);

        virtualinvoke $r7.<android.os.Handler: boolean post(java.lang.Runnable)>($r8);

        goto label1;

     label2:
        return;
    }

    public void setAudioState(android.telecom.AudioState)
    {
        android.telecom.RemoteConnection r0;
        android.telecom.AudioState r1;
        android.telecom.CallAudioState $r2;

        r0 := @this: android.telecom.RemoteConnection;

        r1 := @parameter0: android.telecom.AudioState;

        $r2 = new android.telecom.CallAudioState;

        specialinvoke $r2.<android.telecom.CallAudioState: void <init>(android.telecom.AudioState)>(r1);

        virtualinvoke r0.<android.telecom.RemoteConnection: void setCallAudioState(android.telecom.CallAudioState)>($r2);

        return;
    }

    public void setCallAudioState(android.telecom.CallAudioState)
    {
        android.telecom.RemoteConnection r0;
        java.lang.String $r1, $r2;
        boolean $z0;
        com.android.internal.telecom.IConnectionService $r3;
        android.os.RemoteException $r4;
        java.lang.Throwable $r5;
        android.telecom.CallAudioState r6;

        r0 := @this: android.telecom.RemoteConnection;

        r6 := @parameter0: android.telecom.CallAudioState;

        $r1 = specialinvoke r0.<android.telecom.RemoteConnection: java.lang.String getActiveOwnerInfo()>();

        staticinvoke <android.telecom.Log: void startSession(java.lang.String,java.lang.String)>("RC.sCAS", $r1);

     label1:
        $z0 = r0.<android.telecom.RemoteConnection: boolean mConnected>;

        if $z0 == 0 goto label5;

        $r3 = r0.<android.telecom.RemoteConnection: com.android.internal.telecom.IConnectionService mConnectionService>;

        $r2 = r0.<android.telecom.RemoteConnection: java.lang.String mConnectionId>;

        interfaceinvoke $r3.<com.android.internal.telecom.IConnectionService: void onCallAudioStateChanged(java.lang.String,android.telecom.CallAudioState,android.telecom.Logging.Session$Info)>($r2, r6, null);

     label2:
        goto label5;

     label3:
        $r5 := @caughtexception;

        staticinvoke <android.telecom.Log: void endSession()>();

        throw $r5;

     label4:
        $r4 := @caughtexception;

     label5:
        staticinvoke <android.telecom.Log: void endSession()>();

        return;

        catch android.os.RemoteException from label1 to label2 with label4;
        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void setCallerDisplayName(java.lang.String, int)
    {
        android.telecom.RemoteConnection r0;
        java.lang.String r1;
        int i0;
        java.util.Iterator r2;
        android.telecom.RemoteConnection$CallbackRecord r3;
        android.telecom.RemoteConnection$Callback r4;
        java.util.Set $r5;
        boolean $z0;
        java.lang.Object $r6;
        android.os.Handler $r7;
        android.telecom.RemoteConnection$14 $r8;

        r0 := @this: android.telecom.RemoteConnection;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r0.<android.telecom.RemoteConnection: java.lang.String mCallerDisplayName> = r1;

        r0.<android.telecom.RemoteConnection: int mCallerDisplayNamePresentation> = i0;

        $r5 = r0.<android.telecom.RemoteConnection: java.util.Set mCallbackRecords>;

        r2 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.telecom.RemoteConnection$CallbackRecord) $r6;

        r4 = virtualinvoke r3.<android.telecom.RemoteConnection$CallbackRecord: android.telecom.RemoteConnection$Callback getCallback()>();

        $r7 = virtualinvoke r3.<android.telecom.RemoteConnection$CallbackRecord: android.os.Handler getHandler()>();

        $r8 = new android.telecom.RemoteConnection$14;

        specialinvoke $r8.<android.telecom.RemoteConnection$14: void <init>(android.telecom.RemoteConnection,android.telecom.RemoteConnection$Callback,android.telecom.RemoteConnection,java.lang.String,int)>(r0, r4, r0, r1, i0);

        virtualinvoke $r7.<android.os.Handler: boolean post(java.lang.Runnable)>($r8);

        goto label1;

     label2:
        return;
    }

    void setConference(android.telecom.RemoteConference)
    {
        android.telecom.RemoteConnection r0;
        android.telecom.RemoteConference r1, $r5;
        java.util.Iterator r2;
        android.telecom.RemoteConnection$CallbackRecord r3;
        android.telecom.RemoteConnection$Callback r4;
        java.util.Set $r6;
        boolean $z0;
        java.lang.Object $r7;
        android.os.Handler $r8;
        android.telecom.RemoteConnection$16 $r9;

        r0 := @this: android.telecom.RemoteConnection;

        r1 := @parameter0: android.telecom.RemoteConference;

        $r5 = r0.<android.telecom.RemoteConnection: android.telecom.RemoteConference mConference>;

        if $r5 == r1 goto label2;

        r0.<android.telecom.RemoteConnection: android.telecom.RemoteConference mConference> = r1;

        $r6 = r0.<android.telecom.RemoteConnection: java.util.Set mCallbackRecords>;

        r2 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r7 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.telecom.RemoteConnection$CallbackRecord) $r7;

        r4 = virtualinvoke r3.<android.telecom.RemoteConnection$CallbackRecord: android.telecom.RemoteConnection$Callback getCallback()>();

        $r8 = virtualinvoke r3.<android.telecom.RemoteConnection$CallbackRecord: android.os.Handler getHandler()>();

        $r9 = new android.telecom.RemoteConnection$16;

        specialinvoke $r9.<android.telecom.RemoteConnection$16: void <init>(android.telecom.RemoteConnection,android.telecom.RemoteConnection$Callback,android.telecom.RemoteConnection,android.telecom.RemoteConference)>(r0, r4, r0, r1);

        virtualinvoke $r8.<android.os.Handler: boolean post(java.lang.Runnable)>($r9);

        goto label1;

     label2:
        return;
    }

    void setConferenceableConnections(java.util.List)
    {
        android.telecom.RemoteConnection r0;
        java.util.Iterator r1;
        android.telecom.RemoteConnection$CallbackRecord r2;
        java.util.List $r3, $r4, r9;
        java.util.Set $r5;
        boolean $z1;
        java.lang.Object $r6;
        android.os.Handler $r7;
        android.telecom.RemoteConnection$15 $r8;
        android.telecom.RemoteConnection$Callback r10;

        r0 := @this: android.telecom.RemoteConnection;

        r9 := @parameter0: java.util.List;

        $r3 = r0.<android.telecom.RemoteConnection: java.util.List mConferenceableConnections>;

        interfaceinvoke $r3.<java.util.List: void clear()>();

        $r4 = r0.<android.telecom.RemoteConnection: java.util.List mConferenceableConnections>;

        interfaceinvoke $r4.<java.util.List: boolean addAll(java.util.Collection)>(r9);

        $r5 = r0.<android.telecom.RemoteConnection: java.util.Set mCallbackRecords>;

        r1 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label2;

        $r6 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (android.telecom.RemoteConnection$CallbackRecord) $r6;

        r10 = virtualinvoke r2.<android.telecom.RemoteConnection$CallbackRecord: android.telecom.RemoteConnection$Callback getCallback()>();

        $r7 = virtualinvoke r2.<android.telecom.RemoteConnection$CallbackRecord: android.os.Handler getHandler()>();

        $r8 = new android.telecom.RemoteConnection$15;

        specialinvoke $r8.<android.telecom.RemoteConnection$15: void <init>(android.telecom.RemoteConnection,android.telecom.RemoteConnection$Callback,android.telecom.RemoteConnection)>(r0, r10, r0);

        virtualinvoke $r7.<android.os.Handler: boolean post(java.lang.Runnable)>($r8);

        goto label1;

     label2:
        return;
    }

    void setConnectionCapabilities(int)
    {
        android.telecom.RemoteConnection r0;
        int i0;
        java.util.Iterator r1;
        android.telecom.RemoteConnection$CallbackRecord r2;
        android.telecom.RemoteConnection$Callback r3;
        java.util.Set $r4;
        boolean $z0;
        java.lang.Object $r5;
        android.os.Handler $r6;
        android.telecom.RemoteConnection$4 $r7;

        r0 := @this: android.telecom.RemoteConnection;

        i0 := @parameter0: int;

        r0.<android.telecom.RemoteConnection: int mConnectionCapabilities> = i0;

        $r4 = r0.<android.telecom.RemoteConnection: java.util.Set mCallbackRecords>;

        r1 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (android.telecom.RemoteConnection$CallbackRecord) $r5;

        r3 = virtualinvoke r2.<android.telecom.RemoteConnection$CallbackRecord: android.telecom.RemoteConnection$Callback getCallback()>();

        $r6 = virtualinvoke r2.<android.telecom.RemoteConnection$CallbackRecord: android.os.Handler getHandler()>();

        $r7 = new android.telecom.RemoteConnection$4;

        specialinvoke $r7.<android.telecom.RemoteConnection$4: void <init>(android.telecom.RemoteConnection,android.telecom.RemoteConnection$Callback,android.telecom.RemoteConnection,int)>(r0, r3, r0, i0);

        virtualinvoke $r6.<android.os.Handler: boolean post(java.lang.Runnable)>($r7);

        goto label1;

     label2:
        return;
    }

    void setConnectionProperties(int)
    {
        android.telecom.RemoteConnection r0;
        int i0;
        java.util.Iterator r1;
        android.telecom.RemoteConnection$CallbackRecord r2;
        android.telecom.RemoteConnection$Callback r3;
        java.util.Set $r4;
        boolean $z0;
        java.lang.Object $r5;
        android.os.Handler $r6;
        android.telecom.RemoteConnection$5 $r7;

        r0 := @this: android.telecom.RemoteConnection;

        i0 := @parameter0: int;

        r0.<android.telecom.RemoteConnection: int mConnectionProperties> = i0;

        $r4 = r0.<android.telecom.RemoteConnection: java.util.Set mCallbackRecords>;

        r1 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (android.telecom.RemoteConnection$CallbackRecord) $r5;

        r3 = virtualinvoke r2.<android.telecom.RemoteConnection$CallbackRecord: android.telecom.RemoteConnection$Callback getCallback()>();

        $r6 = virtualinvoke r2.<android.telecom.RemoteConnection$CallbackRecord: android.os.Handler getHandler()>();

        $r7 = new android.telecom.RemoteConnection$5;

        specialinvoke $r7.<android.telecom.RemoteConnection$5: void <init>(android.telecom.RemoteConnection,android.telecom.RemoteConnection$Callback,android.telecom.RemoteConnection,int)>(r0, r3, r0, i0);

        virtualinvoke $r6.<android.os.Handler: boolean post(java.lang.Runnable)>($r7);

        goto label1;

     label2:
        return;
    }

    void setDestroyed()
    {
        android.telecom.RemoteConnection r0;
        java.util.Iterator r1;
        android.telecom.RemoteConnection$CallbackRecord r2;
        android.telecom.RemoteConnection$Callback r3;
        java.util.Set $r4, $r5, $r6;
        boolean $z0, $z2;
        int $i0;
        java.lang.Object $r7;
        android.os.Handler $r8;
        android.telecom.RemoteConnection$6 $r9;
        android.telecom.DisconnectCause $r10;

        r0 := @this: android.telecom.RemoteConnection;

        $r4 = r0.<android.telecom.RemoteConnection: java.util.Set mCallbackRecords>;

        $z0 = interfaceinvoke $r4.<java.util.Set: boolean isEmpty()>();

        if $z0 != 0 goto label4;

        $i0 = r0.<android.telecom.RemoteConnection: int mState>;

        if $i0 == 6 goto label1;

        $r10 = new android.telecom.DisconnectCause;

        specialinvoke $r10.<android.telecom.DisconnectCause: void <init>(int,java.lang.String)>(1, "Connection destroyed.");

        virtualinvoke r0.<android.telecom.RemoteConnection: void setDisconnected(android.telecom.DisconnectCause)>($r10);

     label1:
        $r5 = r0.<android.telecom.RemoteConnection: java.util.Set mCallbackRecords>;

        r1 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z2 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label3;

        $r7 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (android.telecom.RemoteConnection$CallbackRecord) $r7;

        r3 = virtualinvoke r2.<android.telecom.RemoteConnection$CallbackRecord: android.telecom.RemoteConnection$Callback getCallback()>();

        $r8 = virtualinvoke r2.<android.telecom.RemoteConnection$CallbackRecord: android.os.Handler getHandler()>();

        $r9 = new android.telecom.RemoteConnection$6;

        specialinvoke $r9.<android.telecom.RemoteConnection$6: void <init>(android.telecom.RemoteConnection,android.telecom.RemoteConnection$Callback,android.telecom.RemoteConnection)>(r0, r3, r0);

        virtualinvoke $r8.<android.os.Handler: boolean post(java.lang.Runnable)>($r9);

        goto label2;

     label3:
        $r6 = r0.<android.telecom.RemoteConnection: java.util.Set mCallbackRecords>;

        interfaceinvoke $r6.<java.util.Set: void clear()>();

        r0.<android.telecom.RemoteConnection: boolean mConnected> = 0;

     label4:
        return;
    }

    void setDisconnected(android.telecom.DisconnectCause)
    {
        android.telecom.RemoteConnection r0;
        android.telecom.DisconnectCause r1;
        java.util.Iterator r2;
        android.telecom.RemoteConnection$CallbackRecord r3;
        android.telecom.RemoteConnection$Callback r4;
        int $i0;
        java.util.Set $r5;
        boolean $z0;
        java.lang.Object $r6;
        android.os.Handler $r7;
        android.telecom.RemoteConnection$2 $r8;

        r0 := @this: android.telecom.RemoteConnection;

        r1 := @parameter0: android.telecom.DisconnectCause;

        $i0 = r0.<android.telecom.RemoteConnection: int mState>;

        if $i0 == 6 goto label2;

        r0.<android.telecom.RemoteConnection: int mState> = 6;

        r0.<android.telecom.RemoteConnection: android.telecom.DisconnectCause mDisconnectCause> = r1;

        $r5 = r0.<android.telecom.RemoteConnection: java.util.Set mCallbackRecords>;

        r2 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.telecom.RemoteConnection$CallbackRecord) $r6;

        r4 = virtualinvoke r3.<android.telecom.RemoteConnection$CallbackRecord: android.telecom.RemoteConnection$Callback getCallback()>();

        $r7 = virtualinvoke r3.<android.telecom.RemoteConnection$CallbackRecord: android.os.Handler getHandler()>();

        $r8 = new android.telecom.RemoteConnection$2;

        specialinvoke $r8.<android.telecom.RemoteConnection$2: void <init>(android.telecom.RemoteConnection,android.telecom.RemoteConnection$Callback,android.telecom.RemoteConnection,android.telecom.DisconnectCause)>(r0, r4, r0, r1);

        virtualinvoke $r7.<android.os.Handler: boolean post(java.lang.Runnable)>($r8);

        goto label1;

     label2:
        return;
    }

    void setIsVoipAudioMode(boolean)
    {
        android.telecom.RemoteConnection r0;
        boolean z0, $z1;
        java.util.Iterator r1;
        android.telecom.RemoteConnection$CallbackRecord r2;
        android.telecom.RemoteConnection$Callback r3;
        java.util.Set $r4;
        java.lang.Object $r5;
        android.os.Handler $r6;
        android.telecom.RemoteConnection$11 $r7;

        r0 := @this: android.telecom.RemoteConnection;

        z0 := @parameter0: boolean;

        r0.<android.telecom.RemoteConnection: boolean mIsVoipAudioMode> = z0;

        $r4 = r0.<android.telecom.RemoteConnection: java.util.Set mCallbackRecords>;

        r1 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label2;

        $r5 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (android.telecom.RemoteConnection$CallbackRecord) $r5;

        r3 = virtualinvoke r2.<android.telecom.RemoteConnection$CallbackRecord: android.telecom.RemoteConnection$Callback getCallback()>();

        $r6 = virtualinvoke r2.<android.telecom.RemoteConnection$CallbackRecord: android.os.Handler getHandler()>();

        $r7 = new android.telecom.RemoteConnection$11;

        specialinvoke $r7.<android.telecom.RemoteConnection$11: void <init>(android.telecom.RemoteConnection,android.telecom.RemoteConnection$Callback,android.telecom.RemoteConnection,boolean)>(r0, r3, r0, z0);

        virtualinvoke $r6.<android.os.Handler: boolean post(java.lang.Runnable)>($r7);

        goto label1;

     label2:
        return;
    }

    void setPostDialWait(java.lang.String)
    {
        android.telecom.RemoteConnection r0;
        java.lang.String r1;
        java.util.Iterator r2;
        android.telecom.RemoteConnection$CallbackRecord r3;
        android.telecom.RemoteConnection$Callback r4;
        java.util.Set $r5;
        boolean $z0;
        java.lang.Object $r6;
        android.os.Handler $r7;
        android.telecom.RemoteConnection$7 $r8;

        r0 := @this: android.telecom.RemoteConnection;

        r1 := @parameter0: java.lang.String;

        $r5 = r0.<android.telecom.RemoteConnection: java.util.Set mCallbackRecords>;

        r2 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.telecom.RemoteConnection$CallbackRecord) $r6;

        r4 = virtualinvoke r3.<android.telecom.RemoteConnection$CallbackRecord: android.telecom.RemoteConnection$Callback getCallback()>();

        $r7 = virtualinvoke r3.<android.telecom.RemoteConnection$CallbackRecord: android.os.Handler getHandler()>();

        $r8 = new android.telecom.RemoteConnection$7;

        specialinvoke $r8.<android.telecom.RemoteConnection$7: void <init>(android.telecom.RemoteConnection,android.telecom.RemoteConnection$Callback,android.telecom.RemoteConnection,java.lang.String)>(r0, r4, r0, r1);

        virtualinvoke $r7.<android.os.Handler: boolean post(java.lang.Runnable)>($r8);

        goto label1;

     label2:
        return;
    }

    void setRingbackRequested(boolean)
    {
        android.telecom.RemoteConnection r0;
        boolean z0, $z1, $z2;
        java.util.Iterator r1;
        android.telecom.RemoteConnection$CallbackRecord r2;
        android.telecom.RemoteConnection$Callback r3;
        java.util.Set $r4;
        java.lang.Object $r5;
        android.os.Handler $r6;
        android.telecom.RemoteConnection$3 $r7;

        r0 := @this: android.telecom.RemoteConnection;

        z0 := @parameter0: boolean;

        $z1 = r0.<android.telecom.RemoteConnection: boolean mRingbackRequested>;

        if $z1 == z0 goto label2;

        r0.<android.telecom.RemoteConnection: boolean mRingbackRequested> = z0;

        $r4 = r0.<android.telecom.RemoteConnection: java.util.Set mCallbackRecords>;

        r1 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z2 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label2;

        $r5 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (android.telecom.RemoteConnection$CallbackRecord) $r5;

        r3 = virtualinvoke r2.<android.telecom.RemoteConnection$CallbackRecord: android.telecom.RemoteConnection$Callback getCallback()>();

        $r6 = virtualinvoke r2.<android.telecom.RemoteConnection$CallbackRecord: android.os.Handler getHandler()>();

        $r7 = new android.telecom.RemoteConnection$3;

        specialinvoke $r7.<android.telecom.RemoteConnection$3: void <init>(android.telecom.RemoteConnection,android.telecom.RemoteConnection$Callback,android.telecom.RemoteConnection,boolean)>(r0, r3, r0, z0);

        virtualinvoke $r6.<android.os.Handler: boolean post(java.lang.Runnable)>($r7);

        goto label1;

     label2:
        return;
    }

    void setState(int)
    {
        android.telecom.RemoteConnection r0;
        int i0, $i1;
        java.util.Iterator r1;
        android.telecom.RemoteConnection$CallbackRecord r2;
        android.telecom.RemoteConnection$Callback r3;
        java.util.Set $r4;
        boolean $z0;
        java.lang.Object $r5;
        android.os.Handler $r6;
        android.telecom.RemoteConnection$1 $r7;

        r0 := @this: android.telecom.RemoteConnection;

        i0 := @parameter0: int;

        $i1 = r0.<android.telecom.RemoteConnection: int mState>;

        if $i1 == i0 goto label2;

        r0.<android.telecom.RemoteConnection: int mState> = i0;

        $r4 = r0.<android.telecom.RemoteConnection: java.util.Set mCallbackRecords>;

        r1 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (android.telecom.RemoteConnection$CallbackRecord) $r5;

        r3 = virtualinvoke r2.<android.telecom.RemoteConnection$CallbackRecord: android.telecom.RemoteConnection$Callback getCallback()>();

        $r6 = virtualinvoke r2.<android.telecom.RemoteConnection$CallbackRecord: android.os.Handler getHandler()>();

        $r7 = new android.telecom.RemoteConnection$1;

        specialinvoke $r7.<android.telecom.RemoteConnection$1: void <init>(android.telecom.RemoteConnection,android.telecom.RemoteConnection$Callback,android.telecom.RemoteConnection,int)>(r0, r3, r0, i0);

        virtualinvoke $r6.<android.os.Handler: boolean post(java.lang.Runnable)>($r7);

        goto label1;

     label2:
        return;
    }

    void setStatusHints(android.telecom.StatusHints)
    {
        android.telecom.RemoteConnection r0;
        android.telecom.StatusHints r1;
        java.util.Iterator r2;
        android.telecom.RemoteConnection$CallbackRecord r3;
        android.telecom.RemoteConnection$Callback r4;
        java.util.Set $r5;
        boolean $z0;
        java.lang.Object $r6;
        android.os.Handler $r7;
        android.telecom.RemoteConnection$12 $r8;

        r0 := @this: android.telecom.RemoteConnection;

        r1 := @parameter0: android.telecom.StatusHints;

        r0.<android.telecom.RemoteConnection: android.telecom.StatusHints mStatusHints> = r1;

        $r5 = r0.<android.telecom.RemoteConnection: java.util.Set mCallbackRecords>;

        r2 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.telecom.RemoteConnection$CallbackRecord) $r6;

        r4 = virtualinvoke r3.<android.telecom.RemoteConnection$CallbackRecord: android.telecom.RemoteConnection$Callback getCallback()>();

        $r7 = virtualinvoke r3.<android.telecom.RemoteConnection$CallbackRecord: android.os.Handler getHandler()>();

        $r8 = new android.telecom.RemoteConnection$12;

        specialinvoke $r8.<android.telecom.RemoteConnection$12: void <init>(android.telecom.RemoteConnection,android.telecom.RemoteConnection$Callback,android.telecom.RemoteConnection,android.telecom.StatusHints)>(r0, r4, r0, r1);

        virtualinvoke $r7.<android.os.Handler: boolean post(java.lang.Runnable)>($r8);

        goto label1;

     label2:
        return;
    }

    void setVideoProvider(android.telecom.RemoteConnection$VideoProvider)
    {
        android.telecom.RemoteConnection r0;
        android.telecom.RemoteConnection$VideoProvider r1;
        java.util.Iterator r2;
        android.telecom.RemoteConnection$CallbackRecord r3;
        android.telecom.RemoteConnection$Callback r4;
        java.util.Set $r5;
        boolean $z0;
        java.lang.Object $r6;
        android.os.Handler $r7;
        android.telecom.RemoteConnection$10 $r8;

        r0 := @this: android.telecom.RemoteConnection;

        r1 := @parameter0: android.telecom.RemoteConnection$VideoProvider;

        r0.<android.telecom.RemoteConnection: android.telecom.RemoteConnection$VideoProvider mVideoProvider> = r1;

        $r5 = r0.<android.telecom.RemoteConnection: java.util.Set mCallbackRecords>;

        r2 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.telecom.RemoteConnection$CallbackRecord) $r6;

        r4 = virtualinvoke r3.<android.telecom.RemoteConnection$CallbackRecord: android.telecom.RemoteConnection$Callback getCallback()>();

        $r7 = virtualinvoke r3.<android.telecom.RemoteConnection$CallbackRecord: android.os.Handler getHandler()>();

        $r8 = new android.telecom.RemoteConnection$10;

        specialinvoke $r8.<android.telecom.RemoteConnection$10: void <init>(android.telecom.RemoteConnection,android.telecom.RemoteConnection$Callback,android.telecom.RemoteConnection,android.telecom.RemoteConnection$VideoProvider)>(r0, r4, r0, r1);

        virtualinvoke $r7.<android.os.Handler: boolean post(java.lang.Runnable)>($r8);

        goto label1;

     label2:
        return;
    }

    void setVideoState(int)
    {
        android.telecom.RemoteConnection r0;
        int i0;
        java.util.Iterator r1;
        android.telecom.RemoteConnection$CallbackRecord r2;
        android.telecom.RemoteConnection$Callback r3;
        java.util.Set $r4;
        boolean $z0;
        java.lang.Object $r5;
        android.os.Handler $r6;
        android.telecom.RemoteConnection$9 $r7;

        r0 := @this: android.telecom.RemoteConnection;

        i0 := @parameter0: int;

        r0.<android.telecom.RemoteConnection: int mVideoState> = i0;

        $r4 = r0.<android.telecom.RemoteConnection: java.util.Set mCallbackRecords>;

        r1 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (android.telecom.RemoteConnection$CallbackRecord) $r5;

        r3 = virtualinvoke r2.<android.telecom.RemoteConnection$CallbackRecord: android.telecom.RemoteConnection$Callback getCallback()>();

        $r6 = virtualinvoke r2.<android.telecom.RemoteConnection$CallbackRecord: android.os.Handler getHandler()>();

        $r7 = new android.telecom.RemoteConnection$9;

        specialinvoke $r7.<android.telecom.RemoteConnection$9: void <init>(android.telecom.RemoteConnection,android.telecom.RemoteConnection$Callback,android.telecom.RemoteConnection,int)>(r0, r3, r0, i0);

        virtualinvoke $r6.<android.os.Handler: boolean post(java.lang.Runnable)>($r7);

        goto label1;

     label2:
        return;
    }

    public void startRtt(android.telecom.Connection$RttTextStream)
    {
        android.telecom.RemoteConnection r0;
        java.lang.String $r1, $r3;
        boolean $z0;
        com.android.internal.telecom.IConnectionService $r2;
        android.os.ParcelFileDescriptor $r4, $r5;
        android.os.RemoteException $r6;
        java.lang.Throwable $r7;
        android.telecom.Connection$RttTextStream r8;

        r0 := @this: android.telecom.RemoteConnection;

        r8 := @parameter0: android.telecom.Connection$RttTextStream;

        $r1 = specialinvoke r0.<android.telecom.RemoteConnection: java.lang.String getActiveOwnerInfo()>();

        staticinvoke <android.telecom.Log: void startSession(java.lang.String,java.lang.String)>("RC.sR", $r1);

     label1:
        $z0 = r0.<android.telecom.RemoteConnection: boolean mConnected>;

        if $z0 == 0 goto label5;

        $r2 = r0.<android.telecom.RemoteConnection: com.android.internal.telecom.IConnectionService mConnectionService>;

        $r3 = r0.<android.telecom.RemoteConnection: java.lang.String mConnectionId>;

        $r4 = virtualinvoke r8.<android.telecom.Connection$RttTextStream: android.os.ParcelFileDescriptor getFdFromInCall()>();

        $r5 = virtualinvoke r8.<android.telecom.Connection$RttTextStream: android.os.ParcelFileDescriptor getFdToInCall()>();

        interfaceinvoke $r2.<com.android.internal.telecom.IConnectionService: void startRtt(java.lang.String,android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor,android.telecom.Logging.Session$Info)>($r3, $r4, $r5, null);

     label2:
        goto label5;

     label3:
        $r7 := @caughtexception;

        staticinvoke <android.telecom.Log: void endSession()>();

        throw $r7;

     label4:
        $r6 := @caughtexception;

     label5:
        staticinvoke <android.telecom.Log: void endSession()>();

        return;

        catch android.os.RemoteException from label1 to label2 with label4;
        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void stopDtmfTone()
    {
        android.telecom.RemoteConnection r0;
        java.lang.String $r1, $r2;
        boolean $z0;
        com.android.internal.telecom.IConnectionService $r3;
        android.os.RemoteException $r4;
        java.lang.Throwable $r5;

        r0 := @this: android.telecom.RemoteConnection;

        $r1 = specialinvoke r0.<android.telecom.RemoteConnection: java.lang.String getActiveOwnerInfo()>();

        staticinvoke <android.telecom.Log: void startSession(java.lang.String,java.lang.String)>("RC.sDT", $r1);

     label1:
        $z0 = r0.<android.telecom.RemoteConnection: boolean mConnected>;

        if $z0 == 0 goto label5;

        $r3 = r0.<android.telecom.RemoteConnection: com.android.internal.telecom.IConnectionService mConnectionService>;

        $r2 = r0.<android.telecom.RemoteConnection: java.lang.String mConnectionId>;

        interfaceinvoke $r3.<com.android.internal.telecom.IConnectionService: void stopDtmfTone(java.lang.String,android.telecom.Logging.Session$Info)>($r2, null);

     label2:
        goto label5;

     label3:
        $r5 := @caughtexception;

        staticinvoke <android.telecom.Log: void endSession()>();

        throw $r5;

     label4:
        $r4 := @caughtexception;

     label5:
        staticinvoke <android.telecom.Log: void endSession()>();

        return;

        catch android.os.RemoteException from label1 to label2 with label4;
        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void stopRtt()
    {
        android.telecom.RemoteConnection r0;
        java.lang.String $r1, $r2;
        boolean $z0;
        com.android.internal.telecom.IConnectionService $r3;
        android.os.RemoteException $r4;
        java.lang.Throwable $r5;

        r0 := @this: android.telecom.RemoteConnection;

        $r1 = specialinvoke r0.<android.telecom.RemoteConnection: java.lang.String getActiveOwnerInfo()>();

        staticinvoke <android.telecom.Log: void startSession(java.lang.String,java.lang.String)>("RC.stR", $r1);

     label1:
        $z0 = r0.<android.telecom.RemoteConnection: boolean mConnected>;

        if $z0 == 0 goto label5;

        $r3 = r0.<android.telecom.RemoteConnection: com.android.internal.telecom.IConnectionService mConnectionService>;

        $r2 = r0.<android.telecom.RemoteConnection: java.lang.String mConnectionId>;

        interfaceinvoke $r3.<com.android.internal.telecom.IConnectionService: void stopRtt(java.lang.String,android.telecom.Logging.Session$Info)>($r2, null);

     label2:
        goto label5;

     label3:
        $r5 := @caughtexception;

        staticinvoke <android.telecom.Log: void endSession()>();

        throw $r5;

     label4:
        $r4 := @caughtexception;

     label5:
        staticinvoke <android.telecom.Log: void endSession()>();

        return;

        catch android.os.RemoteException from label1 to label2 with label4;
        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void unhold()
    {
        android.telecom.RemoteConnection r0;
        java.lang.String $r1, $r2, $r4;
        boolean $z0;
        com.android.internal.telecom.IConnectionService $r3;
        android.telecom.Logging.Session$Info $r5;
        java.lang.Throwable $r6;
        android.os.RemoteException $r7;

        r0 := @this: android.telecom.RemoteConnection;

        $r1 = specialinvoke r0.<android.telecom.RemoteConnection: java.lang.String getActiveOwnerInfo()>();

        staticinvoke <android.telecom.Log: void startSession(java.lang.String,java.lang.String)>("RC.u", $r1);

     label1:
        $z0 = r0.<android.telecom.RemoteConnection: boolean mConnected>;

        if $z0 == 0 goto label5;

        $r3 = r0.<android.telecom.RemoteConnection: com.android.internal.telecom.IConnectionService mConnectionService>;

        $r4 = r0.<android.telecom.RemoteConnection: java.lang.String mConnectionId>;

        $r2 = r0.<android.telecom.RemoteConnection: java.lang.String mCallingPackageAbbreviation>;

        $r5 = staticinvoke <android.telecom.Log: android.telecom.Logging.Session$Info getExternalSession(java.lang.String)>($r2);

        interfaceinvoke $r3.<com.android.internal.telecom.IConnectionService: void unhold(java.lang.String,android.telecom.Logging.Session$Info)>($r4, $r5);

     label2:
        goto label5;

     label3:
        $r6 := @caughtexception;

        staticinvoke <android.telecom.Log: void endSession()>();

        throw $r6;

     label4:
        $r7 := @caughtexception;

     label5:
        staticinvoke <android.telecom.Log: void endSession()>();

        return;

        catch android.os.RemoteException from label1 to label2 with label4;
        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void unregisterCallback(android.telecom.RemoteConnection$Callback)
    {
        android.telecom.RemoteConnection r0;
        android.telecom.RemoteConnection$Callback r1, $r6;
        java.util.Iterator r2;
        android.telecom.RemoteConnection$CallbackRecord r3;
        java.util.Set $r4, $r7;
        boolean $z0;
        java.lang.Object $r5;

        r0 := @this: android.telecom.RemoteConnection;

        r1 := @parameter0: android.telecom.RemoteConnection$Callback;

        if r1 == null goto label3;

        $r4 = r0.<android.telecom.RemoteConnection: java.util.Set mCallbackRecords>;

        r2 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.telecom.RemoteConnection$CallbackRecord) $r5;

        $r6 = virtualinvoke r3.<android.telecom.RemoteConnection$CallbackRecord: android.telecom.RemoteConnection$Callback getCallback()>();

        if $r6 != r1 goto label2;

        $r7 = r0.<android.telecom.RemoteConnection: java.util.Set mCallbackRecords>;

        interfaceinvoke $r7.<java.util.Set: boolean remove(java.lang.Object)>(r3);

        goto label3;

     label2:
        goto label1;

     label3:
        return;
    }
}
