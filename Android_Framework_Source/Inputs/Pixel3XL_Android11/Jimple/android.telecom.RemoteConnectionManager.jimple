public class android.telecom.RemoteConnectionManager extends java.lang.Object
{
    private final android.telecom.ConnectionService mOurConnectionServiceImpl;
    private final java.util.Map mRemoteConnectionServices;

    public void <init>(android.telecom.ConnectionService)
    {
        android.telecom.RemoteConnectionManager r0;
        android.telecom.ConnectionService r1;
        java.util.HashMap $r2;

        r0 := @this: android.telecom.RemoteConnectionManager;

        r1 := @parameter0: android.telecom.ConnectionService;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<android.telecom.RemoteConnectionManager: java.util.Map mRemoteConnectionServices> = $r2;

        r0.<android.telecom.RemoteConnectionManager: android.telecom.ConnectionService mOurConnectionServiceImpl> = r1;

        return;
    }

    void addConnectionService(android.content.ComponentName, com.android.internal.telecom.IConnectionService)
    {
        android.telecom.RemoteConnectionManager r0;
        com.android.internal.telecom.IConnectionService r1;
        android.telecom.RemoteConnectionService r2;
        java.util.Map $r3, $r5;
        boolean $z0;
        android.telecom.ConnectionService $r4;
        android.os.RemoteException $r7;
        android.content.ComponentName r8;

        r0 := @this: android.telecom.RemoteConnectionManager;

        r8 := @parameter0: android.content.ComponentName;

        r1 := @parameter1: com.android.internal.telecom.IConnectionService;

        $r3 = r0.<android.telecom.RemoteConnectionManager: java.util.Map mRemoteConnectionServices>;

        $z0 = interfaceinvoke $r3.<java.util.Map: boolean containsKey(java.lang.Object)>(r8);

        if $z0 != 0 goto label4;

     label1:
        r2 = new android.telecom.RemoteConnectionService;

        $r4 = r0.<android.telecom.RemoteConnectionManager: android.telecom.ConnectionService mOurConnectionServiceImpl>;

        specialinvoke r2.<android.telecom.RemoteConnectionService: void <init>(com.android.internal.telecom.IConnectionService,android.telecom.ConnectionService)>(r1, $r4);

        $r5 = r0.<android.telecom.RemoteConnectionManager: java.util.Map mRemoteConnectionServices>;

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r8, r2);

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void conferenceRemoteConnections(android.telecom.RemoteConnection, android.telecom.RemoteConnection)
    {
        android.telecom.RemoteConnectionManager r0;
        android.telecom.RemoteConnection r1, r13;
        com.android.internal.telecom.IConnectionService $r2, $r3, $r5, $r7, $r9;
        java.lang.Object[] $r4;
        java.lang.String $r6, $r8, $r10, $r11;
        android.os.RemoteException $r12;

        r0 := @this: android.telecom.RemoteConnectionManager;

        r13 := @parameter0: android.telecom.RemoteConnection;

        r1 := @parameter1: android.telecom.RemoteConnection;

        $r2 = virtualinvoke r13.<android.telecom.RemoteConnection: com.android.internal.telecom.IConnectionService getConnectionService()>();

        $r3 = virtualinvoke r1.<android.telecom.RemoteConnection: com.android.internal.telecom.IConnectionService getConnectionService()>();

        if $r2 != $r3 goto label5;

     label1:
        $r9 = virtualinvoke r13.<android.telecom.RemoteConnection: com.android.internal.telecom.IConnectionService getConnectionService()>();

        $r10 = virtualinvoke r13.<android.telecom.RemoteConnection: java.lang.String getId()>();

        $r11 = virtualinvoke r1.<android.telecom.RemoteConnection: java.lang.String getId()>();

        interfaceinvoke $r9.<com.android.internal.telecom.IConnectionService: void conference(java.lang.String,java.lang.String,android.telecom.Logging.Session$Info)>($r10, $r11, null);

     label2:
        goto label4;

     label3:
        $r12 := @caughtexception;

     label4:
        goto label6;

     label5:
        $r4 = newarray (java.lang.Object)[4];

        $r5 = virtualinvoke r13.<android.telecom.RemoteConnection: com.android.internal.telecom.IConnectionService getConnectionService()>();

        $r4[0] = $r5;

        $r6 = virtualinvoke r13.<android.telecom.RemoteConnection: java.lang.String getId()>();

        $r4[1] = $r6;

        $r7 = virtualinvoke r1.<android.telecom.RemoteConnection: com.android.internal.telecom.IConnectionService getConnectionService()>();

        $r4[2] = $r7;

        $r8 = virtualinvoke r1.<android.telecom.RemoteConnection: java.lang.String getId()>();

        $r4[3] = $r8;

        staticinvoke <android.telecom.Log: void w(java.lang.Object,java.lang.String,java.lang.Object[])>(r0, "Request to conference incompatible remote connections (%s,%s) (%s,%s)", $r4);

     label6:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.telecom.RemoteConnection createRemoteConnection(android.telecom.PhoneAccountHandle, android.telecom.ConnectionRequest, boolean)
    {
        android.telecom.RemoteConnectionManager r0;
        android.telecom.ConnectionRequest r1;
        boolean z0, $z1;
        android.telecom.PhoneAccountHandle $r2, $r4, r14;
        java.lang.IllegalArgumentException $r3;
        java.util.Map $r5, $r11;
        java.lang.StringBuilder $r6;
        java.lang.UnsupportedOperationException $r9;
        java.lang.String $r10;
        java.lang.Object $r12;
        android.telecom.RemoteConnection $r13;
        android.content.ComponentName r15;
        android.telecom.RemoteConnectionService r16;

        r0 := @this: android.telecom.RemoteConnectionManager;

        r14 := @parameter0: android.telecom.PhoneAccountHandle;

        r1 := @parameter1: android.telecom.ConnectionRequest;

        z0 := @parameter2: boolean;

        $r2 = virtualinvoke r1.<android.telecom.ConnectionRequest: android.telecom.PhoneAccountHandle getAccountHandle()>();

        if $r2 == null goto label3;

        $r4 = virtualinvoke r1.<android.telecom.ConnectionRequest: android.telecom.PhoneAccountHandle getAccountHandle()>();

        r15 = virtualinvoke $r4.<android.telecom.PhoneAccountHandle: android.content.ComponentName getComponentName()>();

        $r5 = r0.<android.telecom.RemoteConnectionManager: java.util.Map mRemoteConnectionServices>;

        $z1 = interfaceinvoke $r5.<java.util.Map: boolean containsKey(java.lang.Object)>(r15);

        if $z1 == 0 goto label2;

        $r11 = r0.<android.telecom.RemoteConnectionManager: java.util.Map mRemoteConnectionServices>;

        $r12 = interfaceinvoke $r11.<java.util.Map: java.lang.Object get(java.lang.Object)>(r15);

        r16 = (android.telecom.RemoteConnectionService) $r12;

        if r16 == null goto label1;

        $r13 = virtualinvoke r16.<android.telecom.RemoteConnectionService: android.telecom.RemoteConnection createRemoteConnection(android.telecom.PhoneAccountHandle,android.telecom.ConnectionRequest,boolean)>(r14, r1, z0);

        return $r13;

     label1:
        return null;

     label2:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("accountHandle not supported: ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r15);

        $r9 = new java.lang.UnsupportedOperationException;

        $r10 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r10);

        throw $r9;

     label3:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("accountHandle must be specified.");

        throw $r3;
    }
}
