class android.telecom.RemoteConnectionService$1 extends java.lang.Object implements com.android.internal.telecom.IConnectionServiceAdapter
{
    final android.telecom.RemoteConnectionService this$0;

    void <init>(android.telecom.RemoteConnectionService)
    {
        android.telecom.RemoteConnectionService$1 r0;
        android.telecom.RemoteConnectionService r1;

        r0 := @this: android.telecom.RemoteConnectionService$1;

        r1 := @parameter0: android.telecom.RemoteConnectionService;

        r0.<android.telecom.RemoteConnectionService$1: android.telecom.RemoteConnectionService this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void addConferenceCall(java.lang.String, android.telecom.ParcelableConference, android.telecom.Logging.Session$Info)
    {
        android.telecom.RemoteConnectionService$1 r0;
        java.lang.String r1, r25;
        android.telecom.ParcelableConference r2;
        android.telecom.RemoteConference $r3;
        android.telecom.RemoteConnectionService $r4, $r9, $r15, $r19;
        com.android.internal.telecom.IConnectionService $r5;
        java.util.List $r6, $r7;
        boolean $z0;
        int $i0, $i1, $i2, $i3;
        android.os.Bundle $r8, $r12;
        java.util.Map $r10, $r20;
        android.telecom.PhoneAccountHandle $r13;
        android.telecom.RemoteConnectionService$1$1 $r14;
        android.telecom.ConnectionService $r16;
        java.lang.Object[] $r17;
        java.lang.Object $r18, $r21;
        android.telecom.Logging.Session$Info r22;
        java.util.Iterator r24;
        android.telecom.RemoteConnection r26;

        r0 := @this: android.telecom.RemoteConnectionService$1;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.telecom.ParcelableConference;

        r22 := @parameter2: android.telecom.Logging.Session$Info;

        $r3 = new android.telecom.RemoteConference;

        $r4 = r0.<android.telecom.RemoteConnectionService$1: android.telecom.RemoteConnectionService this$0>;

        $r5 = staticinvoke <android.telecom.RemoteConnectionService: com.android.internal.telecom.IConnectionService access$600(android.telecom.RemoteConnectionService)>($r4);

        specialinvoke $r3.<android.telecom.RemoteConference: void <init>(java.lang.String,com.android.internal.telecom.IConnectionService)>(r1, $r5);

        $r6 = virtualinvoke r2.<android.telecom.ParcelableConference: java.util.List getConnectionIds()>();

        r24 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r24.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r18 = interfaceinvoke r24.<java.util.Iterator: java.lang.Object next()>();

        r25 = (java.lang.String) $r18;

        $r19 = r0.<android.telecom.RemoteConnectionService$1: android.telecom.RemoteConnectionService this$0>;

        $r20 = staticinvoke <android.telecom.RemoteConnectionService: java.util.Map access$300(android.telecom.RemoteConnectionService)>($r19);

        $r21 = interfaceinvoke $r20.<java.util.Map: java.lang.Object get(java.lang.Object)>(r25);

        r26 = (android.telecom.RemoteConnection) $r21;

        if r26 == null goto label2;

        virtualinvoke $r3.<android.telecom.RemoteConference: void addConnection(android.telecom.RemoteConnection)>(r26);

     label2:
        goto label1;

     label3:
        $r7 = virtualinvoke $r3.<android.telecom.RemoteConference: java.util.List getConnections()>();

        $i0 = interfaceinvoke $r7.<java.util.List: int size()>();

        if $i0 != 0 goto label4;

        $r17 = newarray (java.lang.Object)[0];

        staticinvoke <android.telecom.Log: void d(java.lang.Object,java.lang.String,java.lang.Object[])>(r0, "addConferenceCall - skipping", $r17);

        return;

     label4:
        $i1 = virtualinvoke r2.<android.telecom.ParcelableConference: int getState()>();

        virtualinvoke $r3.<android.telecom.RemoteConference: void setState(int)>($i1);

        $i2 = virtualinvoke r2.<android.telecom.ParcelableConference: int getConnectionCapabilities()>();

        virtualinvoke $r3.<android.telecom.RemoteConference: void setConnectionCapabilities(int)>($i2);

        $i3 = virtualinvoke r2.<android.telecom.ParcelableConference: int getConnectionProperties()>();

        virtualinvoke $r3.<android.telecom.RemoteConference: void setConnectionProperties(int)>($i3);

        $r8 = virtualinvoke r2.<android.telecom.ParcelableConference: android.os.Bundle getExtras()>();

        virtualinvoke $r3.<android.telecom.RemoteConference: void putExtras(android.os.Bundle)>($r8);

        $r9 = r0.<android.telecom.RemoteConnectionService$1: android.telecom.RemoteConnectionService this$0>;

        $r10 = staticinvoke <android.telecom.RemoteConnectionService: java.util.Map access$700(android.telecom.RemoteConnectionService)>($r9);

        interfaceinvoke $r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r3);

        $r12 = new android.os.Bundle;

        specialinvoke $r12.<android.os.Bundle: void <init>()>();

        virtualinvoke $r12.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("android.telecom.extra.ORIGINAL_CONNECTION_ID", r1);

        $r13 = virtualinvoke r2.<android.telecom.ParcelableConference: android.telecom.PhoneAccountHandle getPhoneAccount()>();

        virtualinvoke $r12.<android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)>("android.telecom.extra.REMOTE_PHONE_ACCOUNT_HANDLE", $r13);

        virtualinvoke $r3.<android.telecom.RemoteConference: void putExtras(android.os.Bundle)>($r12);

        $r14 = new android.telecom.RemoteConnectionService$1$1;

        specialinvoke $r14.<android.telecom.RemoteConnectionService$1$1: void <init>(android.telecom.RemoteConnectionService$1,java.lang.String)>(r0, r1);

        virtualinvoke $r3.<android.telecom.RemoteConference: void registerCallback(android.telecom.RemoteConference$Callback)>($r14);

        $r15 = r0.<android.telecom.RemoteConnectionService$1: android.telecom.RemoteConnectionService this$0>;

        $r16 = staticinvoke <android.telecom.RemoteConnectionService: android.telecom.ConnectionService access$900(android.telecom.RemoteConnectionService)>($r15);

        virtualinvoke $r16.<android.telecom.ConnectionService: void addRemoteConference(android.telecom.RemoteConference)>($r3);

        return;
    }

    public void addExistingConnection(java.lang.String, android.telecom.ParcelableConnection, android.telecom.Logging.Session$Info)
    {
        android.telecom.RemoteConnectionService$1 r0;
        java.lang.String r1, r22;
        android.telecom.ParcelableConnection r2;
        int i0;
        android.telecom.RemoteConnectionService $r4, $r7, $r11, $r15, $r19;
        android.telecom.ConnectionService $r5, $r8, $r20;
        android.content.Context $r6;
        android.content.pm.ApplicationInfo $r9;
        android.telecom.RemoteConnection $r10;
        com.android.internal.telecom.IConnectionService $r12;
        android.os.Bundle $r13;
        android.telecom.PhoneAccountHandle $r14;
        java.util.Map $r16;
        android.telecom.RemoteConnectionService$1$2 $r18;
        android.telecom.Logging.Session$Info r21;

        r0 := @this: android.telecom.RemoteConnectionService$1;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.telecom.ParcelableConnection;

        r21 := @parameter2: android.telecom.Logging.Session$Info;

        $r4 = r0.<android.telecom.RemoteConnectionService$1: android.telecom.RemoteConnectionService this$0>;

        $r5 = staticinvoke <android.telecom.RemoteConnectionService: android.telecom.ConnectionService access$900(android.telecom.RemoteConnectionService)>($r4);

        $r6 = virtualinvoke $r5.<android.telecom.ConnectionService: android.content.Context getApplicationContext()>();

        r22 = virtualinvoke $r6.<android.content.Context: java.lang.String getOpPackageName()>();

        $r7 = r0.<android.telecom.RemoteConnectionService$1: android.telecom.RemoteConnectionService this$0>;

        $r8 = staticinvoke <android.telecom.RemoteConnectionService: android.telecom.ConnectionService access$900(android.telecom.RemoteConnectionService)>($r7);

        $r9 = virtualinvoke $r8.<android.telecom.ConnectionService: android.content.pm.ApplicationInfo getApplicationInfo()>();

        i0 = $r9.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

        $r10 = new android.telecom.RemoteConnection;

        $r11 = r0.<android.telecom.RemoteConnectionService$1: android.telecom.RemoteConnectionService this$0>;

        $r12 = staticinvoke <android.telecom.RemoteConnectionService: com.android.internal.telecom.IConnectionService access$600(android.telecom.RemoteConnectionService)>($r11);

        specialinvoke $r10.<android.telecom.RemoteConnection: void <init>(java.lang.String,com.android.internal.telecom.IConnectionService,android.telecom.ParcelableConnection,java.lang.String,int)>(r1, $r12, r2, r22, i0);

        $r13 = new android.os.Bundle;

        specialinvoke $r13.<android.os.Bundle: void <init>()>();

        $r14 = virtualinvoke r2.<android.telecom.ParcelableConnection: android.telecom.PhoneAccountHandle getPhoneAccount()>();

        virtualinvoke $r13.<android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)>("android.telecom.extra.REMOTE_PHONE_ACCOUNT_HANDLE", $r14);

        virtualinvoke $r10.<android.telecom.RemoteConnection: void putExtras(android.os.Bundle)>($r13);

        $r15 = r0.<android.telecom.RemoteConnectionService$1: android.telecom.RemoteConnectionService this$0>;

        $r16 = staticinvoke <android.telecom.RemoteConnectionService: java.util.Map access$300(android.telecom.RemoteConnectionService)>($r15);

        interfaceinvoke $r16.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r10);

        $r18 = new android.telecom.RemoteConnectionService$1$2;

        specialinvoke $r18.<android.telecom.RemoteConnectionService$1$2: void <init>(android.telecom.RemoteConnectionService$1,java.lang.String)>(r0, r1);

        virtualinvoke $r10.<android.telecom.RemoteConnection: void registerCallback(android.telecom.RemoteConnection$Callback)>($r18);

        $r19 = r0.<android.telecom.RemoteConnectionService$1: android.telecom.RemoteConnectionService this$0>;

        $r20 = staticinvoke <android.telecom.RemoteConnectionService: android.telecom.ConnectionService access$900(android.telecom.RemoteConnectionService)>($r19);

        virtualinvoke $r20.<android.telecom.ConnectionService: void addRemoteExistingConnection(android.telecom.RemoteConnection)>($r10);

        return;
    }

    public android.os.IBinder asBinder()
    {
        android.telecom.RemoteConnectionService$1 r0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: android.telecom.RemoteConnectionService$1;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r1;
    }

    public void handleCreateConferenceComplete(java.lang.String, android.telecom.ConnectionRequest, android.telecom.ParcelableConference, android.telecom.Logging.Session$Info)
    {
        android.telecom.RemoteConnectionService$1 r0;
        java.lang.String r1;
        android.telecom.ConnectionRequest r2;
        android.telecom.ParcelableConference r3;
        android.telecom.Logging.Session$Info r4;

        r0 := @this: android.telecom.RemoteConnectionService$1;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.telecom.ConnectionRequest;

        r3 := @parameter2: android.telecom.ParcelableConference;

        r4 := @parameter3: android.telecom.Logging.Session$Info;

        return;
    }

    public void handleCreateConnectionComplete(java.lang.String, android.telecom.ConnectionRequest, android.telecom.ParcelableConnection, android.telecom.Logging.Session$Info)
    {
        android.telecom.RemoteConnectionService$1 r0;
        android.telecom.ParcelableConnection r1;
        java.util.Iterator r2;
        android.telecom.RemoteConnectionService $r3, $r5, $r7, $r17, $r19;
        android.telecom.RemoteConnection $r4, $r22, r27;
        java.util.Set $r6, $r8;
        boolean $z0, $z2, $z3, $z4, $z6;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        android.net.Uri $r9, $r10;
        java.lang.String $r11, r24, $r28, r30;
        java.util.ArrayList $r12;
        java.util.List $r13;
        android.telecom.StatusHints $r14;
        android.os.Bundle $r15;
        java.lang.Object $r16, $r21;
        java.util.Map $r18, $r20;
        android.telecom.DisconnectCause $r23;
        android.telecom.ConnectionRequest r25;
        android.telecom.Logging.Session$Info r26;

        r0 := @this: android.telecom.RemoteConnectionService$1;

        r24 := @parameter0: java.lang.String;

        r25 := @parameter1: android.telecom.ConnectionRequest;

        r1 := @parameter2: android.telecom.ParcelableConnection;

        r26 := @parameter3: android.telecom.Logging.Session$Info;

        $r3 = r0.<android.telecom.RemoteConnectionService$1: android.telecom.RemoteConnectionService this$0>;

        r27 = staticinvoke <android.telecom.RemoteConnectionService: android.telecom.RemoteConnection access$000(android.telecom.RemoteConnectionService,java.lang.String,java.lang.String)>($r3, r24, "handleCreateConnectionSuccessful");

        $r4 = staticinvoke <android.telecom.RemoteConnectionService: android.telecom.RemoteConnection access$100()>();

        if r27 == $r4 goto label11;

        $r5 = r0.<android.telecom.RemoteConnectionService$1: android.telecom.RemoteConnectionService this$0>;

        $r6 = staticinvoke <android.telecom.RemoteConnectionService: java.util.Set access$200(android.telecom.RemoteConnectionService)>($r5);

        $z0 = interfaceinvoke $r6.<java.util.Set: boolean contains(java.lang.Object)>(r27);

        if $z0 == 0 goto label11;

        $r7 = r0.<android.telecom.RemoteConnectionService$1: android.telecom.RemoteConnectionService this$0>;

        $r8 = staticinvoke <android.telecom.RemoteConnectionService: java.util.Set access$200(android.telecom.RemoteConnectionService)>($r7);

        interfaceinvoke $r8.<java.util.Set: boolean remove(java.lang.Object)>(r27);

        $i0 = virtualinvoke r1.<android.telecom.ParcelableConnection: int getConnectionCapabilities()>();

        virtualinvoke r27.<android.telecom.RemoteConnection: void setConnectionCapabilities(int)>($i0);

        $i1 = virtualinvoke r1.<android.telecom.ParcelableConnection: int getConnectionProperties()>();

        virtualinvoke r27.<android.telecom.RemoteConnection: void setConnectionProperties(int)>($i1);

        $r9 = virtualinvoke r1.<android.telecom.ParcelableConnection: android.net.Uri getHandle()>();

        if $r9 != null goto label01;

        $i8 = virtualinvoke r1.<android.telecom.ParcelableConnection: int getState()>();

        if $i8 == 6 goto label02;

     label01:
        $r10 = virtualinvoke r1.<android.telecom.ParcelableConnection: android.net.Uri getHandle()>();

        $i2 = virtualinvoke r1.<android.telecom.ParcelableConnection: int getHandlePresentation()>();

        virtualinvoke r27.<android.telecom.RemoteConnection: void setAddress(android.net.Uri,int)>($r10, $i2);

     label02:
        $r28 = virtualinvoke r1.<android.telecom.ParcelableConnection: java.lang.String getCallerDisplayName()>();

        if $r28 != null goto label03;

        $i7 = virtualinvoke r1.<android.telecom.ParcelableConnection: int getState()>();

        if $i7 == 6 goto label04;

     label03:
        $r11 = virtualinvoke r1.<android.telecom.ParcelableConnection: java.lang.String getCallerDisplayName()>();

        $i3 = virtualinvoke r1.<android.telecom.ParcelableConnection: int getCallerDisplayNamePresentation()>();

        virtualinvoke r27.<android.telecom.RemoteConnection: void setCallerDisplayName(java.lang.String,int)>($r11, $i3);

     label04:
        $i9 = virtualinvoke r1.<android.telecom.ParcelableConnection: int getState()>();

        if $i9 != 6 goto label05;

        $r23 = virtualinvoke r1.<android.telecom.ParcelableConnection: android.telecom.DisconnectCause getDisconnectCause()>();

        virtualinvoke r27.<android.telecom.RemoteConnection: void setDisconnected(android.telecom.DisconnectCause)>($r23);

        goto label06;

     label05:
        $i4 = virtualinvoke r1.<android.telecom.ParcelableConnection: int getState()>();

        virtualinvoke r27.<android.telecom.RemoteConnection: void setState(int)>($i4);

     label06:
        $r12 = new java.util.ArrayList;

        specialinvoke $r12.<java.util.ArrayList: void <init>()>();

        $r13 = virtualinvoke r1.<android.telecom.ParcelableConnection: java.util.List getConferenceableConnectionIds()>();

        r2 = interfaceinvoke $r13.<java.util.List: java.util.Iterator iterator()>();

     label07:
        $z6 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z6 == 0 goto label09;

        $r16 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r30 = (java.lang.String) $r16;

        $r17 = r0.<android.telecom.RemoteConnectionService$1: android.telecom.RemoteConnectionService this$0>;

        $r18 = staticinvoke <android.telecom.RemoteConnectionService: java.util.Map access$300(android.telecom.RemoteConnectionService)>($r17);

        $z4 = interfaceinvoke $r18.<java.util.Map: boolean containsKey(java.lang.Object)>(r30);

        if $z4 == 0 goto label08;

        $r19 = r0.<android.telecom.RemoteConnectionService$1: android.telecom.RemoteConnectionService this$0>;

        $r20 = staticinvoke <android.telecom.RemoteConnectionService: java.util.Map access$300(android.telecom.RemoteConnectionService)>($r19);

        $r21 = interfaceinvoke $r20.<java.util.Map: java.lang.Object get(java.lang.Object)>(r30);

        $r22 = (android.telecom.RemoteConnection) $r21;

        interfaceinvoke $r12.<java.util.List: boolean add(java.lang.Object)>($r22);

     label08:
        goto label07;

     label09:
        virtualinvoke r27.<android.telecom.RemoteConnection: void setConferenceableConnections(java.util.List)>($r12);

        $i5 = virtualinvoke r1.<android.telecom.ParcelableConnection: int getVideoState()>();

        virtualinvoke r27.<android.telecom.RemoteConnection: void setVideoState(int)>($i5);

        $i6 = virtualinvoke r27.<android.telecom.RemoteConnection: int getState()>();

        if $i6 != 6 goto label10;

        virtualinvoke r27.<android.telecom.RemoteConnection: void setDestroyed()>();

     label10:
        $r14 = virtualinvoke r1.<android.telecom.ParcelableConnection: android.telecom.StatusHints getStatusHints()>();

        virtualinvoke r27.<android.telecom.RemoteConnection: void setStatusHints(android.telecom.StatusHints)>($r14);

        $z2 = virtualinvoke r1.<android.telecom.ParcelableConnection: boolean getIsVoipAudioMode()>();

        virtualinvoke r27.<android.telecom.RemoteConnection: void setIsVoipAudioMode(boolean)>($z2);

        $z3 = virtualinvoke r1.<android.telecom.ParcelableConnection: boolean isRingbackRequested()>();

        virtualinvoke r27.<android.telecom.RemoteConnection: void setRingbackRequested(boolean)>($z3);

        $r15 = virtualinvoke r1.<android.telecom.ParcelableConnection: android.os.Bundle getExtras()>();

        virtualinvoke r27.<android.telecom.RemoteConnection: void putExtras(android.os.Bundle)>($r15);

     label11:
        return;
    }

    public void onConnectionEvent(java.lang.String, java.lang.String, android.os.Bundle, android.telecom.Logging.Session$Info)
    {
        android.telecom.RemoteConnectionService$1 r0;
        java.lang.String r1, r2;
        android.os.Bundle r3;
        android.telecom.Logging.Session$Info r4;
        android.telecom.RemoteConnectionService $r5, $r7;
        java.util.Map $r6;
        boolean $z0;
        android.telecom.RemoteConnection $r8;

        r0 := @this: android.telecom.RemoteConnectionService$1;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.os.Bundle;

        r4 := @parameter3: android.telecom.Logging.Session$Info;

        $r5 = r0.<android.telecom.RemoteConnectionService$1: android.telecom.RemoteConnectionService this$0>;

        $r6 = staticinvoke <android.telecom.RemoteConnectionService: java.util.Map access$300(android.telecom.RemoteConnectionService)>($r5);

        $z0 = interfaceinvoke $r6.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        $r7 = r0.<android.telecom.RemoteConnectionService$1: android.telecom.RemoteConnectionService this$0>;

        $r8 = staticinvoke <android.telecom.RemoteConnectionService: android.telecom.RemoteConnection access$000(android.telecom.RemoteConnectionService,java.lang.String,java.lang.String)>($r7, r1, "onConnectionEvent");

        virtualinvoke $r8.<android.telecom.RemoteConnection: void onConnectionEvent(java.lang.String,android.os.Bundle)>(r2, r3);

     label1:
        return;
    }

    public void onConnectionServiceFocusReleased(android.telecom.Logging.Session$Info)
    {
        android.telecom.RemoteConnectionService$1 r0;
        android.telecom.Logging.Session$Info r1;

        r0 := @this: android.telecom.RemoteConnectionService$1;

        r1 := @parameter0: android.telecom.Logging.Session$Info;

        return;
    }

    public void onPhoneAccountChanged(java.lang.String, android.telecom.PhoneAccountHandle, android.telecom.Logging.Session$Info)
    {
        android.telecom.RemoteConnectionService$1 r0;
        java.lang.String r1;
        android.telecom.PhoneAccountHandle r2;
        android.telecom.Logging.Session$Info r3;

        r0 := @this: android.telecom.RemoteConnectionService$1;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.telecom.PhoneAccountHandle;

        r3 := @parameter2: android.telecom.Logging.Session$Info;

        return;
    }

    public void onPostDialChar(java.lang.String, char, android.telecom.Logging.Session$Info)
    {
        android.telecom.RemoteConnectionService$1 r0;
        java.lang.String r1;
        char c0;
        android.telecom.Logging.Session$Info r2;
        android.telecom.RemoteConnectionService $r3;
        android.telecom.RemoteConnection $r4;

        r0 := @this: android.telecom.RemoteConnectionService$1;

        r1 := @parameter0: java.lang.String;

        c0 := @parameter1: char;

        r2 := @parameter2: android.telecom.Logging.Session$Info;

        $r3 = r0.<android.telecom.RemoteConnectionService$1: android.telecom.RemoteConnectionService this$0>;

        $r4 = staticinvoke <android.telecom.RemoteConnectionService: android.telecom.RemoteConnection access$000(android.telecom.RemoteConnectionService,java.lang.String,java.lang.String)>($r3, r1, "onPostDialChar");

        virtualinvoke $r4.<android.telecom.RemoteConnection: void onPostDialChar(char)>(c0);

        return;
    }

    public void onPostDialWait(java.lang.String, java.lang.String, android.telecom.Logging.Session$Info)
    {
        android.telecom.RemoteConnectionService$1 r0;
        java.lang.String r1, r2;
        android.telecom.Logging.Session$Info r3;
        android.telecom.RemoteConnectionService $r4;
        android.telecom.RemoteConnection $r5;

        r0 := @this: android.telecom.RemoteConnectionService$1;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.telecom.Logging.Session$Info;

        $r4 = r0.<android.telecom.RemoteConnectionService$1: android.telecom.RemoteConnectionService this$0>;

        $r5 = staticinvoke <android.telecom.RemoteConnectionService: android.telecom.RemoteConnection access$000(android.telecom.RemoteConnectionService,java.lang.String,java.lang.String)>($r4, r1, "onPostDialWait");

        virtualinvoke $r5.<android.telecom.RemoteConnection: void setPostDialWait(java.lang.String)>(r2);

        return;
    }

    public void onRemoteRttRequest(java.lang.String, android.telecom.Logging.Session$Info) throws android.os.RemoteException
    {
        android.telecom.RemoteConnectionService$1 r0;
        java.lang.String r1;
        android.telecom.Logging.Session$Info r2;
        android.telecom.RemoteConnectionService $r3, $r5;
        boolean $z0;
        java.lang.Object[] $r4;
        android.telecom.RemoteConnection $r6;

        r0 := @this: android.telecom.RemoteConnectionService$1;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.telecom.Logging.Session$Info;

        $r3 = r0.<android.telecom.RemoteConnectionService$1: android.telecom.RemoteConnectionService this$0>;

        $z0 = staticinvoke <android.telecom.RemoteConnectionService: boolean access$1000(android.telecom.RemoteConnectionService,java.lang.String)>($r3, r1);

        if $z0 == 0 goto label1;

        $r5 = r0.<android.telecom.RemoteConnectionService$1: android.telecom.RemoteConnectionService this$0>;

        $r6 = staticinvoke <android.telecom.RemoteConnectionService: android.telecom.RemoteConnection access$000(android.telecom.RemoteConnectionService,java.lang.String,java.lang.String)>($r5, r1, "onRemoteRttRequest");

        virtualinvoke $r6.<android.telecom.RemoteConnection: void onRemoteRttRequest()>();

        goto label2;

     label1:
        $r4 = newarray (java.lang.Object)[0];

        staticinvoke <android.telecom.Log: void w(java.lang.Object,java.lang.String,java.lang.Object[])>(r0, "onRemoteRttRequest called on a remote conference", $r4);

     label2:
        return;
    }

    public void onRttInitiationFailure(java.lang.String, int, android.telecom.Logging.Session$Info) throws android.os.RemoteException
    {
        android.telecom.RemoteConnectionService$1 r0;
        java.lang.String r1;
        int i0;
        android.telecom.Logging.Session$Info r2;
        android.telecom.RemoteConnectionService $r3, $r5;
        boolean $z0;
        java.lang.Object[] $r4;
        android.telecom.RemoteConnection $r6;

        r0 := @this: android.telecom.RemoteConnectionService$1;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: android.telecom.Logging.Session$Info;

        $r3 = r0.<android.telecom.RemoteConnectionService$1: android.telecom.RemoteConnectionService this$0>;

        $z0 = staticinvoke <android.telecom.RemoteConnectionService: boolean access$1000(android.telecom.RemoteConnectionService,java.lang.String)>($r3, r1);

        if $z0 == 0 goto label1;

        $r5 = r0.<android.telecom.RemoteConnectionService$1: android.telecom.RemoteConnectionService this$0>;

        $r6 = staticinvoke <android.telecom.RemoteConnectionService: android.telecom.RemoteConnection access$000(android.telecom.RemoteConnectionService,java.lang.String,java.lang.String)>($r5, r1, "onRttInitiationFailure");

        virtualinvoke $r6.<android.telecom.RemoteConnection: void onRttInitiationFailure(int)>(i0);

        goto label2;

     label1:
        $r4 = newarray (java.lang.Object)[0];

        staticinvoke <android.telecom.Log: void w(java.lang.Object,java.lang.String,java.lang.Object[])>(r0, "onRttInitiationFailure called on a remote conference", $r4);

     label2:
        return;
    }

    public void onRttInitiationSuccess(java.lang.String, android.telecom.Logging.Session$Info) throws android.os.RemoteException
    {
        android.telecom.RemoteConnectionService$1 r0;
        java.lang.String r1;
        android.telecom.Logging.Session$Info r2;
        android.telecom.RemoteConnectionService $r3, $r5;
        boolean $z0;
        java.lang.Object[] $r4;
        android.telecom.RemoteConnection $r6;

        r0 := @this: android.telecom.RemoteConnectionService$1;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.telecom.Logging.Session$Info;

        $r3 = r0.<android.telecom.RemoteConnectionService$1: android.telecom.RemoteConnectionService this$0>;

        $z0 = staticinvoke <android.telecom.RemoteConnectionService: boolean access$1000(android.telecom.RemoteConnectionService,java.lang.String)>($r3, r1);

        if $z0 == 0 goto label1;

        $r5 = r0.<android.telecom.RemoteConnectionService$1: android.telecom.RemoteConnectionService this$0>;

        $r6 = staticinvoke <android.telecom.RemoteConnectionService: android.telecom.RemoteConnection access$000(android.telecom.RemoteConnectionService,java.lang.String,java.lang.String)>($r5, r1, "onRttInitiationSuccess");

        virtualinvoke $r6.<android.telecom.RemoteConnection: void onRttInitiationSuccess()>();

        goto label2;

     label1:
        $r4 = newarray (java.lang.Object)[0];

        staticinvoke <android.telecom.Log: void w(java.lang.Object,java.lang.String,java.lang.Object[])>(r0, "onRttInitiationSuccess called on a remote conference", $r4);

     label2:
        return;
    }

    public void onRttSessionRemotelyTerminated(java.lang.String, android.telecom.Logging.Session$Info) throws android.os.RemoteException
    {
        android.telecom.RemoteConnectionService$1 r0;
        java.lang.String r1;
        android.telecom.Logging.Session$Info r2;
        android.telecom.RemoteConnectionService $r3, $r5;
        boolean $z0;
        java.lang.Object[] $r4;
        android.telecom.RemoteConnection $r6;

        r0 := @this: android.telecom.RemoteConnectionService$1;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.telecom.Logging.Session$Info;

        $r3 = r0.<android.telecom.RemoteConnectionService$1: android.telecom.RemoteConnectionService this$0>;

        $z0 = staticinvoke <android.telecom.RemoteConnectionService: boolean access$1000(android.telecom.RemoteConnectionService,java.lang.String)>($r3, r1);

        if $z0 == 0 goto label1;

        $r5 = r0.<android.telecom.RemoteConnectionService$1: android.telecom.RemoteConnectionService this$0>;

        $r6 = staticinvoke <android.telecom.RemoteConnectionService: android.telecom.RemoteConnection access$000(android.telecom.RemoteConnectionService,java.lang.String,java.lang.String)>($r5, r1, "onRttSessionRemotelyTerminated");

        virtualinvoke $r6.<android.telecom.RemoteConnection: void onRttSessionRemotelyTerminated()>();

        goto label2;

     label1:
        $r4 = newarray (java.lang.Object)[0];

        staticinvoke <android.telecom.Log: void w(java.lang.Object,java.lang.String,java.lang.Object[])>(r0, "onRttSessionRemotelyTerminated called on a remote conference", $r4);

     label2:
        return;
    }

    public void putExtras(java.lang.String, android.os.Bundle, android.telecom.Logging.Session$Info)
    {
        android.telecom.RemoteConnectionService$1 r0;
        java.lang.String r1;
        android.os.Bundle r2;
        android.telecom.Logging.Session$Info r3;
        android.telecom.RemoteConnectionService $r4, $r5, $r7;
        boolean $z0;
        android.telecom.RemoteConference $r6;
        android.telecom.RemoteConnection $r8;

        r0 := @this: android.telecom.RemoteConnectionService$1;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.Bundle;

        r3 := @parameter2: android.telecom.Logging.Session$Info;

        $r4 = r0.<android.telecom.RemoteConnectionService$1: android.telecom.RemoteConnectionService this$0>;

        $z0 = staticinvoke <android.telecom.RemoteConnectionService: boolean access$1000(android.telecom.RemoteConnectionService,java.lang.String)>($r4, r1);

        if $z0 == 0 goto label1;

        $r7 = r0.<android.telecom.RemoteConnectionService$1: android.telecom.RemoteConnectionService this$0>;

        $r8 = staticinvoke <android.telecom.RemoteConnectionService: android.telecom.RemoteConnection access$000(android.telecom.RemoteConnectionService,java.lang.String,java.lang.String)>($r7, r1, "putExtras");

        virtualinvoke $r8.<android.telecom.RemoteConnection: void putExtras(android.os.Bundle)>(r2);

        goto label2;

     label1:
        $r5 = r0.<android.telecom.RemoteConnectionService$1: android.telecom.RemoteConnectionService this$0>;

        $r6 = staticinvoke <android.telecom.RemoteConnectionService: android.telecom.RemoteConference access$400(android.telecom.RemoteConnectionService,java.lang.String,java.lang.String)>($r5, r1, "putExtras");

        virtualinvoke $r6.<android.telecom.RemoteConference: void putExtras(android.os.Bundle)>(r2);

     label2:
        return;
    }

    public void queryRemoteConnectionServices(com.android.internal.telecom.RemoteServiceCallback, java.lang.String, android.telecom.Logging.Session$Info)
    {
        android.telecom.RemoteConnectionService$1 r0;
        com.android.internal.telecom.RemoteServiceCallback r1;
        java.lang.String r2;
        android.telecom.Logging.Session$Info r3;

        r0 := @this: android.telecom.RemoteConnectionService$1;

        r1 := @parameter0: com.android.internal.telecom.RemoteServiceCallback;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.telecom.Logging.Session$Info;

        return;
    }

    public void removeCall(java.lang.String, android.telecom.Logging.Session$Info)
    {
        android.telecom.RemoteConnectionService$1 r0;
        java.lang.String r1;
        android.telecom.Logging.Session$Info r2;
        android.telecom.RemoteConnectionService $r3, $r5, $r7;
        java.util.Map $r4;
        boolean $z0;
        android.telecom.RemoteConference $r6;
        android.telecom.RemoteConnection $r8;

        r0 := @this: android.telecom.RemoteConnectionService$1;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.telecom.Logging.Session$Info;

        $r3 = r0.<android.telecom.RemoteConnectionService$1: android.telecom.RemoteConnectionService this$0>;

        $r4 = staticinvoke <android.telecom.RemoteConnectionService: java.util.Map access$300(android.telecom.RemoteConnectionService)>($r3);

        $z0 = interfaceinvoke $r4.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        $r7 = r0.<android.telecom.RemoteConnectionService$1: android.telecom.RemoteConnectionService this$0>;

        $r8 = staticinvoke <android.telecom.RemoteConnectionService: android.telecom.RemoteConnection access$000(android.telecom.RemoteConnectionService,java.lang.String,java.lang.String)>($r7, r1, "removeCall");

        virtualinvoke $r8.<android.telecom.RemoteConnection: void setDestroyed()>();

        goto label2;

     label1:
        $r5 = r0.<android.telecom.RemoteConnectionService$1: android.telecom.RemoteConnectionService this$0>;

        $r6 = staticinvoke <android.telecom.RemoteConnectionService: android.telecom.RemoteConference access$400(android.telecom.RemoteConnectionService,java.lang.String,java.lang.String)>($r5, r1, "removeCall");

        virtualinvoke $r6.<android.telecom.RemoteConference: void setDestroyed()>();

     label2:
        return;
    }

    public void removeExtras(java.lang.String, java.util.List, android.telecom.Logging.Session$Info)
    {
        android.telecom.RemoteConnectionService$1 r0;
        java.lang.String r1;
        java.util.List r2;
        android.telecom.Logging.Session$Info r3;
        android.telecom.RemoteConnectionService $r4, $r5, $r7;
        boolean $z0;
        android.telecom.RemoteConference $r6;
        android.telecom.RemoteConnection $r8;

        r0 := @this: android.telecom.RemoteConnectionService$1;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.List;

        r3 := @parameter2: android.telecom.Logging.Session$Info;

        $r4 = r0.<android.telecom.RemoteConnectionService$1: android.telecom.RemoteConnectionService this$0>;

        $z0 = staticinvoke <android.telecom.RemoteConnectionService: boolean access$1000(android.telecom.RemoteConnectionService,java.lang.String)>($r4, r1);

        if $z0 == 0 goto label1;

        $r7 = r0.<android.telecom.RemoteConnectionService$1: android.telecom.RemoteConnectionService this$0>;

        $r8 = staticinvoke <android.telecom.RemoteConnectionService: android.telecom.RemoteConnection access$000(android.telecom.RemoteConnectionService,java.lang.String,java.lang.String)>($r7, r1, "removeExtra");

        virtualinvoke $r8.<android.telecom.RemoteConnection: void removeExtras(java.util.List)>(r2);

        goto label2;

     label1:
        $r5 = r0.<android.telecom.RemoteConnectionService$1: android.telecom.RemoteConnectionService this$0>;

        $r6 = staticinvoke <android.telecom.RemoteConnectionService: android.telecom.RemoteConference access$400(android.telecom.RemoteConnectionService,java.lang.String,java.lang.String)>($r5, r1, "removeExtra");

        virtualinvoke $r6.<android.telecom.RemoteConference: void removeExtras(java.util.List)>(r2);

     label2:
        return;
    }

    public void resetConnectionTime(java.lang.String, android.telecom.Logging.Session$Info)
    {
        android.telecom.RemoteConnectionService$1 r0;
        java.lang.String r1;
        android.telecom.Logging.Session$Info r2;

        r0 := @this: android.telecom.RemoteConnectionService$1;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.telecom.Logging.Session$Info;

        return;
    }

    public void setActive(java.lang.String, android.telecom.Logging.Session$Info)
    {
        android.telecom.RemoteConnectionService$1 r0;
        java.lang.String r1;
        android.telecom.Logging.Session$Info r2;
        android.telecom.RemoteConnectionService $r3, $r5, $r7;
        java.util.Map $r4;
        boolean $z0;
        android.telecom.RemoteConference $r6;
        android.telecom.RemoteConnection $r8;

        r0 := @this: android.telecom.RemoteConnectionService$1;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.telecom.Logging.Session$Info;

        $r3 = r0.<android.telecom.RemoteConnectionService$1: android.telecom.RemoteConnectionService this$0>;

        $r4 = staticinvoke <android.telecom.RemoteConnectionService: java.util.Map access$300(android.telecom.RemoteConnectionService)>($r3);

        $z0 = interfaceinvoke $r4.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        $r7 = r0.<android.telecom.RemoteConnectionService$1: android.telecom.RemoteConnectionService this$0>;

        $r8 = staticinvoke <android.telecom.RemoteConnectionService: android.telecom.RemoteConnection access$000(android.telecom.RemoteConnectionService,java.lang.String,java.lang.String)>($r7, r1, "setActive");

        virtualinvoke $r8.<android.telecom.RemoteConnection: void setState(int)>(4);

        goto label2;

     label1:
        $r5 = r0.<android.telecom.RemoteConnectionService$1: android.telecom.RemoteConnectionService this$0>;

        $r6 = staticinvoke <android.telecom.RemoteConnectionService: android.telecom.RemoteConference access$400(android.telecom.RemoteConnectionService,java.lang.String,java.lang.String)>($r5, r1, "setActive");

        virtualinvoke $r6.<android.telecom.RemoteConference: void setState(int)>(4);

     label2:
        return;
    }

    public void setAddress(java.lang.String, android.net.Uri, int, android.telecom.Logging.Session$Info)
    {
        android.telecom.RemoteConnectionService$1 r0;
        java.lang.String r1;
        android.net.Uri r2;
        int i0;
        android.telecom.Logging.Session$Info r3;
        android.telecom.RemoteConnectionService $r4;
        android.telecom.RemoteConnection $r5;

        r0 := @this: android.telecom.RemoteConnectionService$1;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.net.Uri;

        i0 := @parameter2: int;

        r3 := @parameter3: android.telecom.Logging.Session$Info;

        $r4 = r0.<android.telecom.RemoteConnectionService$1: android.telecom.RemoteConnectionService this$0>;

        $r5 = staticinvoke <android.telecom.RemoteConnectionService: android.telecom.RemoteConnection access$000(android.telecom.RemoteConnectionService,java.lang.String,java.lang.String)>($r4, r1, "setAddress");

        virtualinvoke $r5.<android.telecom.RemoteConnection: void setAddress(android.net.Uri,int)>(r2, i0);

        return;
    }

    public void setAudioRoute(java.lang.String, int, java.lang.String, android.telecom.Logging.Session$Info)
    {
        android.telecom.RemoteConnectionService$1 r0;
        java.lang.String r1, r2;
        int i0;
        android.telecom.Logging.Session$Info r3;
        android.telecom.RemoteConnectionService $r4;

        r0 := @this: android.telecom.RemoteConnectionService$1;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: android.telecom.Logging.Session$Info;

        $r4 = r0.<android.telecom.RemoteConnectionService$1: android.telecom.RemoteConnectionService this$0>;

        staticinvoke <android.telecom.RemoteConnectionService: boolean access$1000(android.telecom.RemoteConnectionService,java.lang.String)>($r4, r1);

        return;
    }

    public void setCallDirection(java.lang.String, int, android.telecom.Logging.Session$Info)
    {
        android.telecom.RemoteConnectionService$1 r0;
        java.lang.String r1;
        int i0;
        android.telecom.Logging.Session$Info r2;

        r0 := @this: android.telecom.RemoteConnectionService$1;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: android.telecom.Logging.Session$Info;

        return;
    }

    public void setCallerDisplayName(java.lang.String, java.lang.String, int, android.telecom.Logging.Session$Info)
    {
        android.telecom.RemoteConnectionService$1 r0;
        java.lang.String r1, r2;
        int i0;
        android.telecom.Logging.Session$Info r3;
        android.telecom.RemoteConnectionService $r4;
        android.telecom.RemoteConnection $r5;

        r0 := @this: android.telecom.RemoteConnectionService$1;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r3 := @parameter3: android.telecom.Logging.Session$Info;

        $r4 = r0.<android.telecom.RemoteConnectionService$1: android.telecom.RemoteConnectionService this$0>;

        $r5 = staticinvoke <android.telecom.RemoteConnectionService: android.telecom.RemoteConnection access$000(android.telecom.RemoteConnectionService,java.lang.String,java.lang.String)>($r4, r1, "setCallerDisplayName");

        virtualinvoke $r5.<android.telecom.RemoteConnection: void setCallerDisplayName(java.lang.String,int)>(r2, i0);

        return;
    }

    public void setConferenceMergeFailed(java.lang.String, android.telecom.Logging.Session$Info)
    {
        android.telecom.RemoteConnectionService$1 r0;
        java.lang.String r1;
        android.telecom.Logging.Session$Info r2;

        r0 := @this: android.telecom.RemoteConnectionService$1;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.telecom.Logging.Session$Info;

        return;
    }

    public void setConferenceState(java.lang.String, boolean, android.telecom.Logging.Session$Info)
    {
        android.telecom.RemoteConnectionService$1 r0;
        java.lang.String r1;
        boolean z0;
        android.telecom.Logging.Session$Info r2;

        r0 := @this: android.telecom.RemoteConnectionService$1;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        r2 := @parameter2: android.telecom.Logging.Session$Info;

        return;
    }

    public final void setConferenceableConnections(java.lang.String, java.util.List, android.telecom.Logging.Session$Info)
    {
        android.telecom.RemoteConnectionService$1 r0;
        java.lang.String r1, r19;
        java.util.Iterator r2;
        java.util.ArrayList $r3;
        boolean $z0, $z1, $z2;
        android.telecom.RemoteConnectionService $r4, $r5, $r7, $r10, $r12;
        android.telecom.RemoteConference $r6;
        android.telecom.RemoteConnection $r8, $r15;
        java.lang.Object $r9, $r14;
        java.util.Map $r11, $r13;
        java.util.List r16;
        android.telecom.Logging.Session$Info r17;

        r0 := @this: android.telecom.RemoteConnectionService$1;

        r1 := @parameter0: java.lang.String;

        r16 := @parameter1: java.util.List;

        r17 := @parameter2: android.telecom.Logging.Session$Info;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r2 = interfaceinvoke r16.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r9 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r19 = (java.lang.String) $r9;

        $r10 = r0.<android.telecom.RemoteConnectionService$1: android.telecom.RemoteConnectionService this$0>;

        $r11 = staticinvoke <android.telecom.RemoteConnectionService: java.util.Map access$300(android.telecom.RemoteConnectionService)>($r10);

        $z2 = interfaceinvoke $r11.<java.util.Map: boolean containsKey(java.lang.Object)>(r19);

        if $z2 == 0 goto label2;

        $r12 = r0.<android.telecom.RemoteConnectionService$1: android.telecom.RemoteConnectionService this$0>;

        $r13 = staticinvoke <android.telecom.RemoteConnectionService: java.util.Map access$300(android.telecom.RemoteConnectionService)>($r12);

        $r14 = interfaceinvoke $r13.<java.util.Map: java.lang.Object get(java.lang.Object)>(r19);

        $r15 = (android.telecom.RemoteConnection) $r14;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r15);

     label2:
        goto label1;

     label3:
        $r4 = r0.<android.telecom.RemoteConnectionService$1: android.telecom.RemoteConnectionService this$0>;

        $z1 = staticinvoke <android.telecom.RemoteConnectionService: boolean access$1000(android.telecom.RemoteConnectionService,java.lang.String)>($r4, r1);

        if $z1 == 0 goto label4;

        $r7 = r0.<android.telecom.RemoteConnectionService$1: android.telecom.RemoteConnectionService this$0>;

        $r8 = staticinvoke <android.telecom.RemoteConnectionService: android.telecom.RemoteConnection access$000(android.telecom.RemoteConnectionService,java.lang.String,java.lang.String)>($r7, r1, "setConferenceableConnections");

        virtualinvoke $r8.<android.telecom.RemoteConnection: void setConferenceableConnections(java.util.List)>($r3);

        goto label5;

     label4:
        $r5 = r0.<android.telecom.RemoteConnectionService$1: android.telecom.RemoteConnectionService this$0>;

        $r6 = staticinvoke <android.telecom.RemoteConnectionService: android.telecom.RemoteConference access$400(android.telecom.RemoteConnectionService,java.lang.String,java.lang.String)>($r5, r1, "setConferenceableConnections");

        virtualinvoke $r6.<android.telecom.RemoteConference: void setConferenceableConnections(java.util.List)>($r3);

     label5:
        return;
    }

    public void setConnectionCapabilities(java.lang.String, int, android.telecom.Logging.Session$Info)
    {
        android.telecom.RemoteConnectionService$1 r0;
        java.lang.String r1;
        int i0;
        android.telecom.Logging.Session$Info r2;
        android.telecom.RemoteConnectionService $r3, $r5, $r7;
        java.util.Map $r4;
        boolean $z0;
        android.telecom.RemoteConference $r6;
        android.telecom.RemoteConnection $r8;

        r0 := @this: android.telecom.RemoteConnectionService$1;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: android.telecom.Logging.Session$Info;

        $r3 = r0.<android.telecom.RemoteConnectionService$1: android.telecom.RemoteConnectionService this$0>;

        $r4 = staticinvoke <android.telecom.RemoteConnectionService: java.util.Map access$300(android.telecom.RemoteConnectionService)>($r3);

        $z0 = interfaceinvoke $r4.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        $r7 = r0.<android.telecom.RemoteConnectionService$1: android.telecom.RemoteConnectionService this$0>;

        $r8 = staticinvoke <android.telecom.RemoteConnectionService: android.telecom.RemoteConnection access$000(android.telecom.RemoteConnectionService,java.lang.String,java.lang.String)>($r7, r1, "setConnectionCapabilities");

        virtualinvoke $r8.<android.telecom.RemoteConnection: void setConnectionCapabilities(int)>(i0);

        goto label2;

     label1:
        $r5 = r0.<android.telecom.RemoteConnectionService$1: android.telecom.RemoteConnectionService this$0>;

        $r6 = staticinvoke <android.telecom.RemoteConnectionService: android.telecom.RemoteConference access$400(android.telecom.RemoteConnectionService,java.lang.String,java.lang.String)>($r5, r1, "setConnectionCapabilities");

        virtualinvoke $r6.<android.telecom.RemoteConference: void setConnectionCapabilities(int)>(i0);

     label2:
        return;
    }

    public void setConnectionProperties(java.lang.String, int, android.telecom.Logging.Session$Info)
    {
        android.telecom.RemoteConnectionService$1 r0;
        java.lang.String r1;
        int i0;
        android.telecom.Logging.Session$Info r2;
        android.telecom.RemoteConnectionService $r3, $r5, $r7;
        java.util.Map $r4;
        boolean $z0;
        android.telecom.RemoteConference $r6;
        android.telecom.RemoteConnection $r8;

        r0 := @this: android.telecom.RemoteConnectionService$1;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: android.telecom.Logging.Session$Info;

        $r3 = r0.<android.telecom.RemoteConnectionService$1: android.telecom.RemoteConnectionService this$0>;

        $r4 = staticinvoke <android.telecom.RemoteConnectionService: java.util.Map access$300(android.telecom.RemoteConnectionService)>($r3);

        $z0 = interfaceinvoke $r4.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        $r7 = r0.<android.telecom.RemoteConnectionService$1: android.telecom.RemoteConnectionService this$0>;

        $r8 = staticinvoke <android.telecom.RemoteConnectionService: android.telecom.RemoteConnection access$000(android.telecom.RemoteConnectionService,java.lang.String,java.lang.String)>($r7, r1, "setConnectionProperties");

        virtualinvoke $r8.<android.telecom.RemoteConnection: void setConnectionProperties(int)>(i0);

        goto label2;

     label1:
        $r5 = r0.<android.telecom.RemoteConnectionService$1: android.telecom.RemoteConnectionService this$0>;

        $r6 = staticinvoke <android.telecom.RemoteConnectionService: android.telecom.RemoteConference access$400(android.telecom.RemoteConnectionService,java.lang.String,java.lang.String)>($r5, r1, "setConnectionProperties");

        virtualinvoke $r6.<android.telecom.RemoteConference: void setConnectionProperties(int)>(i0);

     label2:
        return;
    }

    public void setDialing(java.lang.String, android.telecom.Logging.Session$Info)
    {
        android.telecom.RemoteConnectionService$1 r0;
        java.lang.String r1;
        android.telecom.Logging.Session$Info r2;
        android.telecom.RemoteConnectionService $r3;
        android.telecom.RemoteConnection $r4;

        r0 := @this: android.telecom.RemoteConnectionService$1;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.telecom.Logging.Session$Info;

        $r3 = r0.<android.telecom.RemoteConnectionService$1: android.telecom.RemoteConnectionService this$0>;

        $r4 = staticinvoke <android.telecom.RemoteConnectionService: android.telecom.RemoteConnection access$000(android.telecom.RemoteConnectionService,java.lang.String,java.lang.String)>($r3, r1, "setDialing");

        virtualinvoke $r4.<android.telecom.RemoteConnection: void setState(int)>(3);

        return;
    }

    public void setDisconnected(java.lang.String, android.telecom.DisconnectCause, android.telecom.Logging.Session$Info)
    {
        android.telecom.RemoteConnectionService$1 r0;
        java.lang.String r1;
        android.telecom.DisconnectCause r2;
        android.telecom.Logging.Session$Info r3;
        android.telecom.RemoteConnectionService $r4, $r6, $r8;
        java.util.Map $r5;
        boolean $z0;
        android.telecom.RemoteConference $r7;
        android.telecom.RemoteConnection $r9;

        r0 := @this: android.telecom.RemoteConnectionService$1;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.telecom.DisconnectCause;

        r3 := @parameter2: android.telecom.Logging.Session$Info;

        $r4 = r0.<android.telecom.RemoteConnectionService$1: android.telecom.RemoteConnectionService this$0>;

        $r5 = staticinvoke <android.telecom.RemoteConnectionService: java.util.Map access$300(android.telecom.RemoteConnectionService)>($r4);

        $z0 = interfaceinvoke $r5.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        $r8 = r0.<android.telecom.RemoteConnectionService$1: android.telecom.RemoteConnectionService this$0>;

        $r9 = staticinvoke <android.telecom.RemoteConnectionService: android.telecom.RemoteConnection access$000(android.telecom.RemoteConnectionService,java.lang.String,java.lang.String)>($r8, r1, "setDisconnected");

        virtualinvoke $r9.<android.telecom.RemoteConnection: void setDisconnected(android.telecom.DisconnectCause)>(r2);

        goto label2;

     label1:
        $r6 = r0.<android.telecom.RemoteConnectionService$1: android.telecom.RemoteConnectionService this$0>;

        $r7 = staticinvoke <android.telecom.RemoteConnectionService: android.telecom.RemoteConference access$400(android.telecom.RemoteConnectionService,java.lang.String,java.lang.String)>($r6, r1, "setDisconnected");

        virtualinvoke $r7.<android.telecom.RemoteConference: void setDisconnected(android.telecom.DisconnectCause)>(r2);

     label2:
        return;
    }

    public void setIsConferenced(java.lang.String, java.lang.String, android.telecom.Logging.Session$Info)
    {
        android.telecom.RemoteConnectionService$1 r0;
        android.telecom.Logging.Session$Info r1;
        android.telecom.RemoteConnectionService $r2, $r4;
        android.telecom.RemoteConnection $r3, r10;
        android.telecom.RemoteConference $r5, $r6, $r7, r11;
        java.lang.String r8, r9;

        r0 := @this: android.telecom.RemoteConnectionService$1;

        r8 := @parameter0: java.lang.String;

        r9 := @parameter1: java.lang.String;

        r1 := @parameter2: android.telecom.Logging.Session$Info;

        $r2 = r0.<android.telecom.RemoteConnectionService$1: android.telecom.RemoteConnectionService this$0>;

        r10 = staticinvoke <android.telecom.RemoteConnectionService: android.telecom.RemoteConnection access$000(android.telecom.RemoteConnectionService,java.lang.String,java.lang.String)>($r2, r8, "setIsConferenced");

        $r3 = staticinvoke <android.telecom.RemoteConnectionService: android.telecom.RemoteConnection access$100()>();

        if r10 == $r3 goto label2;

        if r9 != null goto label1;

        $r6 = virtualinvoke r10.<android.telecom.RemoteConnection: android.telecom.RemoteConference getConference()>();

        if $r6 == null goto label2;

        $r7 = virtualinvoke r10.<android.telecom.RemoteConnection: android.telecom.RemoteConference getConference()>();

        virtualinvoke $r7.<android.telecom.RemoteConference: void removeConnection(android.telecom.RemoteConnection)>(r10);

        goto label2;

     label1:
        $r4 = r0.<android.telecom.RemoteConnectionService$1: android.telecom.RemoteConnectionService this$0>;

        r11 = staticinvoke <android.telecom.RemoteConnectionService: android.telecom.RemoteConference access$400(android.telecom.RemoteConnectionService,java.lang.String,java.lang.String)>($r4, r9, "setIsConferenced");

        $r5 = staticinvoke <android.telecom.RemoteConnectionService: android.telecom.RemoteConference access$500()>();

        if r11 == $r5 goto label2;

        virtualinvoke r11.<android.telecom.RemoteConference: void addConnection(android.telecom.RemoteConnection)>(r10);

     label2:
        return;
    }

    public void setIsVoipAudioMode(java.lang.String, boolean, android.telecom.Logging.Session$Info)
    {
        android.telecom.RemoteConnectionService$1 r0;
        java.lang.String r1;
        boolean z0;
        android.telecom.Logging.Session$Info r2;
        android.telecom.RemoteConnectionService $r3;
        android.telecom.RemoteConnection $r4;

        r0 := @this: android.telecom.RemoteConnectionService$1;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        r2 := @parameter2: android.telecom.Logging.Session$Info;

        $r3 = r0.<android.telecom.RemoteConnectionService$1: android.telecom.RemoteConnectionService this$0>;

        $r4 = staticinvoke <android.telecom.RemoteConnectionService: android.telecom.RemoteConnection access$000(android.telecom.RemoteConnectionService,java.lang.String,java.lang.String)>($r3, r1, "setIsVoipAudioMode");

        virtualinvoke $r4.<android.telecom.RemoteConnection: void setIsVoipAudioMode(boolean)>(z0);

        return;
    }

    public void setOnHold(java.lang.String, android.telecom.Logging.Session$Info)
    {
        android.telecom.RemoteConnectionService$1 r0;
        java.lang.String r1;
        android.telecom.Logging.Session$Info r2;
        android.telecom.RemoteConnectionService $r3, $r5, $r7;
        java.util.Map $r4;
        boolean $z0;
        android.telecom.RemoteConference $r6;
        android.telecom.RemoteConnection $r8;

        r0 := @this: android.telecom.RemoteConnectionService$1;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.telecom.Logging.Session$Info;

        $r3 = r0.<android.telecom.RemoteConnectionService$1: android.telecom.RemoteConnectionService this$0>;

        $r4 = staticinvoke <android.telecom.RemoteConnectionService: java.util.Map access$300(android.telecom.RemoteConnectionService)>($r3);

        $z0 = interfaceinvoke $r4.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        $r7 = r0.<android.telecom.RemoteConnectionService$1: android.telecom.RemoteConnectionService this$0>;

        $r8 = staticinvoke <android.telecom.RemoteConnectionService: android.telecom.RemoteConnection access$000(android.telecom.RemoteConnectionService,java.lang.String,java.lang.String)>($r7, r1, "setOnHold");

        virtualinvoke $r8.<android.telecom.RemoteConnection: void setState(int)>(5);

        goto label2;

     label1:
        $r5 = r0.<android.telecom.RemoteConnectionService$1: android.telecom.RemoteConnectionService this$0>;

        $r6 = staticinvoke <android.telecom.RemoteConnectionService: android.telecom.RemoteConference access$400(android.telecom.RemoteConnectionService,java.lang.String,java.lang.String)>($r5, r1, "setOnHold");

        virtualinvoke $r6.<android.telecom.RemoteConference: void setState(int)>(5);

     label2:
        return;
    }

    public void setPulling(java.lang.String, android.telecom.Logging.Session$Info)
    {
        android.telecom.RemoteConnectionService$1 r0;
        java.lang.String r1;
        android.telecom.Logging.Session$Info r2;
        android.telecom.RemoteConnectionService $r3;
        android.telecom.RemoteConnection $r4;

        r0 := @this: android.telecom.RemoteConnectionService$1;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.telecom.Logging.Session$Info;

        $r3 = r0.<android.telecom.RemoteConnectionService$1: android.telecom.RemoteConnectionService this$0>;

        $r4 = staticinvoke <android.telecom.RemoteConnectionService: android.telecom.RemoteConnection access$000(android.telecom.RemoteConnectionService,java.lang.String,java.lang.String)>($r3, r1, "setPulling");

        virtualinvoke $r4.<android.telecom.RemoteConnection: void setState(int)>(7);

        return;
    }

    public void setRingbackRequested(java.lang.String, boolean, android.telecom.Logging.Session$Info)
    {
        android.telecom.RemoteConnectionService$1 r0;
        java.lang.String r1;
        boolean z0;
        android.telecom.Logging.Session$Info r2;
        android.telecom.RemoteConnectionService $r3;
        android.telecom.RemoteConnection $r4;

        r0 := @this: android.telecom.RemoteConnectionService$1;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        r2 := @parameter2: android.telecom.Logging.Session$Info;

        $r3 = r0.<android.telecom.RemoteConnectionService$1: android.telecom.RemoteConnectionService this$0>;

        $r4 = staticinvoke <android.telecom.RemoteConnectionService: android.telecom.RemoteConnection access$000(android.telecom.RemoteConnectionService,java.lang.String,java.lang.String)>($r3, r1, "setRingbackRequested");

        virtualinvoke $r4.<android.telecom.RemoteConnection: void setRingbackRequested(boolean)>(z0);

        return;
    }

    public void setRinging(java.lang.String, android.telecom.Logging.Session$Info)
    {
        android.telecom.RemoteConnectionService$1 r0;
        java.lang.String r1;
        android.telecom.Logging.Session$Info r2;
        android.telecom.RemoteConnectionService $r3;
        android.telecom.RemoteConnection $r4;

        r0 := @this: android.telecom.RemoteConnectionService$1;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.telecom.Logging.Session$Info;

        $r3 = r0.<android.telecom.RemoteConnectionService$1: android.telecom.RemoteConnectionService this$0>;

        $r4 = staticinvoke <android.telecom.RemoteConnectionService: android.telecom.RemoteConnection access$000(android.telecom.RemoteConnectionService,java.lang.String,java.lang.String)>($r3, r1, "setRinging");

        virtualinvoke $r4.<android.telecom.RemoteConnection: void setState(int)>(2);

        return;
    }

    public void setStatusHints(java.lang.String, android.telecom.StatusHints, android.telecom.Logging.Session$Info)
    {
        android.telecom.RemoteConnectionService$1 r0;
        java.lang.String r1;
        android.telecom.StatusHints r2;
        android.telecom.Logging.Session$Info r3;
        android.telecom.RemoteConnectionService $r4;
        android.telecom.RemoteConnection $r5;

        r0 := @this: android.telecom.RemoteConnectionService$1;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.telecom.StatusHints;

        r3 := @parameter2: android.telecom.Logging.Session$Info;

        $r4 = r0.<android.telecom.RemoteConnectionService$1: android.telecom.RemoteConnectionService this$0>;

        $r5 = staticinvoke <android.telecom.RemoteConnectionService: android.telecom.RemoteConnection access$000(android.telecom.RemoteConnectionService,java.lang.String,java.lang.String)>($r4, r1, "setStatusHints");

        virtualinvoke $r5.<android.telecom.RemoteConnection: void setStatusHints(android.telecom.StatusHints)>(r2);

        return;
    }

    public void setVideoProvider(java.lang.String, com.android.internal.telecom.IVideoProvider, android.telecom.Logging.Session$Info)
    {
        android.telecom.RemoteConnectionService$1 r0;
        java.lang.String r1, r3;
        com.android.internal.telecom.IVideoProvider r2;
        int i0;
        android.telecom.RemoteConnectionService $r4, $r7, $r10;
        android.telecom.ConnectionService $r5, $r8;
        android.content.Context $r6;
        android.content.pm.ApplicationInfo $r9;
        android.telecom.RemoteConnection $r11;
        android.telecom.RemoteConnection$VideoProvider $r12, r14;
        android.telecom.Logging.Session$Info r13;

        r0 := @this: android.telecom.RemoteConnectionService$1;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: com.android.internal.telecom.IVideoProvider;

        r13 := @parameter2: android.telecom.Logging.Session$Info;

        $r4 = r0.<android.telecom.RemoteConnectionService$1: android.telecom.RemoteConnectionService this$0>;

        $r5 = staticinvoke <android.telecom.RemoteConnectionService: android.telecom.ConnectionService access$900(android.telecom.RemoteConnectionService)>($r4);

        $r6 = virtualinvoke $r5.<android.telecom.ConnectionService: android.content.Context getApplicationContext()>();

        r3 = virtualinvoke $r6.<android.content.Context: java.lang.String getOpPackageName()>();

        $r7 = r0.<android.telecom.RemoteConnectionService$1: android.telecom.RemoteConnectionService this$0>;

        $r8 = staticinvoke <android.telecom.RemoteConnectionService: android.telecom.ConnectionService access$900(android.telecom.RemoteConnectionService)>($r7);

        $r9 = virtualinvoke $r8.<android.telecom.ConnectionService: android.content.pm.ApplicationInfo getApplicationInfo()>();

        i0 = $r9.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

        r14 = null;

        if r2 == null goto label1;

        $r12 = new android.telecom.RemoteConnection$VideoProvider;

        specialinvoke $r12.<android.telecom.RemoteConnection$VideoProvider: void <init>(com.android.internal.telecom.IVideoProvider,java.lang.String,int)>(r2, r3, i0);

        r14 = $r12;

     label1:
        $r10 = r0.<android.telecom.RemoteConnectionService$1: android.telecom.RemoteConnectionService this$0>;

        $r11 = staticinvoke <android.telecom.RemoteConnectionService: android.telecom.RemoteConnection access$000(android.telecom.RemoteConnectionService,java.lang.String,java.lang.String)>($r10, r1, "setVideoProvider");

        virtualinvoke $r11.<android.telecom.RemoteConnection: void setVideoProvider(android.telecom.RemoteConnection$VideoProvider)>(r14);

        return;
    }

    public void setVideoState(java.lang.String, int, android.telecom.Logging.Session$Info)
    {
        android.telecom.RemoteConnectionService$1 r0;
        java.lang.String r1;
        int i0;
        android.telecom.Logging.Session$Info r2;
        android.telecom.RemoteConnectionService $r3;
        android.telecom.RemoteConnection $r4;

        r0 := @this: android.telecom.RemoteConnectionService$1;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: android.telecom.Logging.Session$Info;

        $r3 = r0.<android.telecom.RemoteConnectionService$1: android.telecom.RemoteConnectionService this$0>;

        $r4 = staticinvoke <android.telecom.RemoteConnectionService: android.telecom.RemoteConnection access$000(android.telecom.RemoteConnectionService,java.lang.String,java.lang.String)>($r3, r1, "setVideoState");

        virtualinvoke $r4.<android.telecom.RemoteConnection: void setVideoState(int)>(i0);

        return;
    }
}
