final class android.telecom.RemoteConnectionService extends java.lang.Object
{
    private static final android.telecom.RemoteConference NULL_CONFERENCE;
    private static final android.telecom.RemoteConnection NULL_CONNECTION;
    private final java.util.Map mConferenceById;
    private final java.util.Map mConnectionById;
    private final android.os.IBinder$DeathRecipient mDeathRecipient;
    private final android.telecom.ConnectionService mOurConnectionServiceImpl;
    private final com.android.internal.telecom.IConnectionService mOutgoingConnectionServiceRpc;
    private final java.util.Set mPendingConnections;
    private final android.telecom.ConnectionServiceAdapterServant mServant;
    private final com.android.internal.telecom.IConnectionServiceAdapter mServantDelegate;

    static void <clinit>()
    {
        android.telecom.RemoteConnection $r0;
        android.telecom.ConnectionRequest $r1;
        android.telecom.RemoteConference $r2;

        $r0 = new android.telecom.RemoteConnection;

        $r1 = (android.telecom.ConnectionRequest) null;

        specialinvoke $r0.<android.telecom.RemoteConnection: void <init>(java.lang.String,com.android.internal.telecom.IConnectionService,android.telecom.ConnectionRequest)>("NULL", null, $r1);

        <android.telecom.RemoteConnectionService: android.telecom.RemoteConnection NULL_CONNECTION> = $r0;

        $r2 = new android.telecom.RemoteConference;

        specialinvoke $r2.<android.telecom.RemoteConference: void <init>(java.lang.String,com.android.internal.telecom.IConnectionService)>("NULL", null);

        <android.telecom.RemoteConnectionService: android.telecom.RemoteConference NULL_CONFERENCE> = $r2;

        return;
    }

    void <init>(com.android.internal.telecom.IConnectionService, android.telecom.ConnectionService) throws android.os.RemoteException
    {
        android.telecom.RemoteConnectionService r0;
        com.android.internal.telecom.IConnectionService r1;
        android.telecom.ConnectionService r2;
        android.telecom.RemoteConnectionService$1 $r4;
        android.telecom.ConnectionServiceAdapterServant $r5;
        android.telecom.RemoteConnectionService$2 $r6;
        java.util.HashMap $r7, $r8;
        java.util.HashSet $r9;
        android.os.IBinder $r10;
        android.os.IBinder$DeathRecipient $r11;

        r0 := @this: android.telecom.RemoteConnectionService;

        r1 := @parameter0: com.android.internal.telecom.IConnectionService;

        r2 := @parameter1: android.telecom.ConnectionService;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r4 = new android.telecom.RemoteConnectionService$1;

        specialinvoke $r4.<android.telecom.RemoteConnectionService$1: void <init>(android.telecom.RemoteConnectionService)>(r0);

        r0.<android.telecom.RemoteConnectionService: com.android.internal.telecom.IConnectionServiceAdapter mServantDelegate> = $r4;

        $r5 = new android.telecom.ConnectionServiceAdapterServant;

        specialinvoke $r5.<android.telecom.ConnectionServiceAdapterServant: void <init>(com.android.internal.telecom.IConnectionServiceAdapter)>($r4);

        r0.<android.telecom.RemoteConnectionService: android.telecom.ConnectionServiceAdapterServant mServant> = $r5;

        $r6 = new android.telecom.RemoteConnectionService$2;

        specialinvoke $r6.<android.telecom.RemoteConnectionService$2: void <init>(android.telecom.RemoteConnectionService)>(r0);

        r0.<android.telecom.RemoteConnectionService: android.os.IBinder$DeathRecipient mDeathRecipient> = $r6;

        $r7 = new java.util.HashMap;

        specialinvoke $r7.<java.util.HashMap: void <init>()>();

        r0.<android.telecom.RemoteConnectionService: java.util.Map mConnectionById> = $r7;

        $r8 = new java.util.HashMap;

        specialinvoke $r8.<java.util.HashMap: void <init>()>();

        r0.<android.telecom.RemoteConnectionService: java.util.Map mConferenceById> = $r8;

        $r9 = new java.util.HashSet;

        specialinvoke $r9.<java.util.HashSet: void <init>()>();

        r0.<android.telecom.RemoteConnectionService: java.util.Set mPendingConnections> = $r9;

        r0.<android.telecom.RemoteConnectionService: com.android.internal.telecom.IConnectionService mOutgoingConnectionServiceRpc> = r1;

        $r10 = interfaceinvoke r1.<com.android.internal.telecom.IConnectionService: android.os.IBinder asBinder()>();

        $r11 = r0.<android.telecom.RemoteConnectionService: android.os.IBinder$DeathRecipient mDeathRecipient>;

        interfaceinvoke $r10.<android.os.IBinder: void linkToDeath(android.os.IBinder$DeathRecipient,int)>($r11, 0);

        r0.<android.telecom.RemoteConnectionService: android.telecom.ConnectionService mOurConnectionServiceImpl> = r2;

        return;
    }

    static android.telecom.RemoteConnection access$000(android.telecom.RemoteConnectionService, java.lang.String, java.lang.String)
    {
        android.telecom.RemoteConnectionService r0;
        java.lang.String r1, r2;
        android.telecom.RemoteConnection $r3;

        r0 := @parameter0: android.telecom.RemoteConnectionService;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        $r3 = specialinvoke r0.<android.telecom.RemoteConnectionService: android.telecom.RemoteConnection findConnectionForAction(java.lang.String,java.lang.String)>(r1, r2);

        return $r3;
    }

    static android.telecom.RemoteConnection access$100()
    {
        android.telecom.RemoteConnection $r0;

        $r0 = <android.telecom.RemoteConnectionService: android.telecom.RemoteConnection NULL_CONNECTION>;

        return $r0;
    }

    static boolean access$1000(android.telecom.RemoteConnectionService, java.lang.String)
    {
        android.telecom.RemoteConnectionService r0;
        java.lang.String r1;
        boolean $z0;

        r0 := @parameter0: android.telecom.RemoteConnectionService;

        r1 := @parameter1: java.lang.String;

        $z0 = specialinvoke r0.<android.telecom.RemoteConnectionService: boolean hasConnection(java.lang.String)>(r1);

        return $z0;
    }

    static android.os.IBinder$DeathRecipient access$1100(android.telecom.RemoteConnectionService)
    {
        android.telecom.RemoteConnectionService r0;
        android.os.IBinder$DeathRecipient $r1;

        r0 := @parameter0: android.telecom.RemoteConnectionService;

        $r1 = r0.<android.telecom.RemoteConnectionService: android.os.IBinder$DeathRecipient mDeathRecipient>;

        return $r1;
    }

    static java.util.Set access$200(android.telecom.RemoteConnectionService)
    {
        android.telecom.RemoteConnectionService r0;
        java.util.Set $r1;

        r0 := @parameter0: android.telecom.RemoteConnectionService;

        $r1 = r0.<android.telecom.RemoteConnectionService: java.util.Set mPendingConnections>;

        return $r1;
    }

    static java.util.Map access$300(android.telecom.RemoteConnectionService)
    {
        android.telecom.RemoteConnectionService r0;
        java.util.Map $r1;

        r0 := @parameter0: android.telecom.RemoteConnectionService;

        $r1 = r0.<android.telecom.RemoteConnectionService: java.util.Map mConnectionById>;

        return $r1;
    }

    static android.telecom.RemoteConference access$400(android.telecom.RemoteConnectionService, java.lang.String, java.lang.String)
    {
        android.telecom.RemoteConnectionService r0;
        java.lang.String r1, r2;
        android.telecom.RemoteConference $r3;

        r0 := @parameter0: android.telecom.RemoteConnectionService;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        $r3 = specialinvoke r0.<android.telecom.RemoteConnectionService: android.telecom.RemoteConference findConferenceForAction(java.lang.String,java.lang.String)>(r1, r2);

        return $r3;
    }

    static android.telecom.RemoteConference access$500()
    {
        android.telecom.RemoteConference $r0;

        $r0 = <android.telecom.RemoteConnectionService: android.telecom.RemoteConference NULL_CONFERENCE>;

        return $r0;
    }

    static com.android.internal.telecom.IConnectionService access$600(android.telecom.RemoteConnectionService)
    {
        android.telecom.RemoteConnectionService r0;
        com.android.internal.telecom.IConnectionService $r1;

        r0 := @parameter0: android.telecom.RemoteConnectionService;

        $r1 = r0.<android.telecom.RemoteConnectionService: com.android.internal.telecom.IConnectionService mOutgoingConnectionServiceRpc>;

        return $r1;
    }

    static java.util.Map access$700(android.telecom.RemoteConnectionService)
    {
        android.telecom.RemoteConnectionService r0;
        java.util.Map $r1;

        r0 := @parameter0: android.telecom.RemoteConnectionService;

        $r1 = r0.<android.telecom.RemoteConnectionService: java.util.Map mConferenceById>;

        return $r1;
    }

    static void access$800(android.telecom.RemoteConnectionService)
    {
        android.telecom.RemoteConnectionService r0;

        r0 := @parameter0: android.telecom.RemoteConnectionService;

        specialinvoke r0.<android.telecom.RemoteConnectionService: void maybeDisconnectAdapter()>();

        return;
    }

    static android.telecom.ConnectionService access$900(android.telecom.RemoteConnectionService)
    {
        android.telecom.RemoteConnectionService r0;
        android.telecom.ConnectionService $r1;

        r0 := @parameter0: android.telecom.RemoteConnectionService;

        $r1 = r0.<android.telecom.RemoteConnectionService: android.telecom.ConnectionService mOurConnectionServiceImpl>;

        return $r1;
    }

    private android.telecom.RemoteConference findConferenceForAction(java.lang.String, java.lang.String)
    {
        android.telecom.RemoteConnectionService r0;
        java.lang.String r1, r2;
        java.util.Map $r3, $r6;
        boolean $z0;
        java.lang.Object[] $r4;
        android.telecom.RemoteConference $r5, $r8;
        java.lang.Object $r7;

        r0 := @this: android.telecom.RemoteConnectionService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<android.telecom.RemoteConnectionService: java.util.Map mConferenceById>;

        $z0 = interfaceinvoke $r3.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        $r6 = r0.<android.telecom.RemoteConnectionService: java.util.Map mConferenceById>;

        $r7 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r8 = (android.telecom.RemoteConference) $r7;

        return $r8;

     label1:
        $r4 = newarray (java.lang.Object)[2];

        $r4[0] = r2;

        $r4[1] = r1;

        staticinvoke <android.telecom.Log: void w(java.lang.Object,java.lang.String,java.lang.Object[])>(r0, "%s - Cannot find Conference %s", $r4);

        $r5 = <android.telecom.RemoteConnectionService: android.telecom.RemoteConference NULL_CONFERENCE>;

        return $r5;
    }

    private android.telecom.RemoteConnection findConnectionForAction(java.lang.String, java.lang.String)
    {
        android.telecom.RemoteConnectionService r0;
        java.lang.String r1, r2;
        java.util.Map $r3, $r6;
        boolean $z0;
        java.lang.Object[] $r4;
        android.telecom.RemoteConnection $r5, $r8;
        java.lang.Object $r7;

        r0 := @this: android.telecom.RemoteConnectionService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<android.telecom.RemoteConnectionService: java.util.Map mConnectionById>;

        $z0 = interfaceinvoke $r3.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        $r6 = r0.<android.telecom.RemoteConnectionService: java.util.Map mConnectionById>;

        $r7 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r8 = (android.telecom.RemoteConnection) $r7;

        return $r8;

     label1:
        $r4 = newarray (java.lang.Object)[2];

        $r4[0] = r2;

        $r4[1] = r1;

        staticinvoke <android.telecom.Log: void w(java.lang.Object,java.lang.String,java.lang.Object[])>(r0, "%s - Cannot find Connection %s", $r4);

        $r5 = <android.telecom.RemoteConnectionService: android.telecom.RemoteConnection NULL_CONNECTION>;

        return $r5;
    }

    private boolean hasConnection(java.lang.String)
    {
        android.telecom.RemoteConnectionService r0;
        java.lang.String r1;
        java.util.Map $r2;
        boolean $z0;

        r0 := @this: android.telecom.RemoteConnectionService;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<android.telecom.RemoteConnectionService: java.util.Map mConnectionById>;

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        return $z0;
    }

    private void maybeDisconnectAdapter()
    {
        android.telecom.RemoteConnectionService r0;
        java.util.Map $r2, $r3;
        boolean $z0, $z1;
        android.telecom.ConnectionServiceAdapterServant $r4;
        com.android.internal.telecom.IConnectionService $r5;
        com.android.internal.telecom.IConnectionServiceAdapter $r6;
        android.os.RemoteException $r7;

        r0 := @this: android.telecom.RemoteConnectionService;

        $r2 = r0.<android.telecom.RemoteConnectionService: java.util.Map mConnectionById>;

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean isEmpty()>();

        if $z0 == 0 goto label4;

        $r3 = r0.<android.telecom.RemoteConnectionService: java.util.Map mConferenceById>;

        $z1 = interfaceinvoke $r3.<java.util.Map: boolean isEmpty()>();

        if $z1 == 0 goto label4;

     label1:
        $r5 = r0.<android.telecom.RemoteConnectionService: com.android.internal.telecom.IConnectionService mOutgoingConnectionServiceRpc>;

        $r4 = r0.<android.telecom.RemoteConnectionService: android.telecom.ConnectionServiceAdapterServant mServant>;

        $r6 = virtualinvoke $r4.<android.telecom.ConnectionServiceAdapterServant: com.android.internal.telecom.IConnectionServiceAdapter getStub()>();

        interfaceinvoke $r5.<com.android.internal.telecom.IConnectionService: void removeConnectionServiceAdapter(com.android.internal.telecom.IConnectionServiceAdapter,android.telecom.Logging.Session$Info)>($r6, null);

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    final android.telecom.RemoteConnection createRemoteConnection(android.telecom.PhoneAccountHandle, android.telecom.ConnectionRequest, boolean)
    {
        android.telecom.RemoteConnectionService r0;
        boolean z0, $z1;
        java.lang.String r1, $r7, $r31;
        java.util.UUID $r2;
        android.os.Bundle $r3, $r4, $r28;
        android.telecom.ConnectionService $r5;
        android.content.Context $r6;
        android.telecom.ConnectionRequest$Builder $r8, $r10, $r12, $r13, $r14, $r16, $r18;
        android.telecom.PhoneAccountHandle $r9, r33;
        android.net.Uri $r11;
        int $i0;
        android.os.ParcelFileDescriptor $r15, $r17;
        java.util.Map $r19, $r22;
        com.android.internal.telecom.IConnectionService $r20, $r24, $r26;
        java.util.Set $r21;
        android.telecom.ConnectionServiceAdapterServant $r25;
        com.android.internal.telecom.IConnectionServiceAdapter $r27;
        android.os.RemoteException $r29;
        android.telecom.DisconnectCause $r30;
        android.telecom.RemoteConnection $r32, r37;
        android.telecom.ConnectionRequest r34, r36;
        android.telecom.RemoteConnectionService$3 r38;

        r0 := @this: android.telecom.RemoteConnectionService;

        r33 := @parameter0: android.telecom.PhoneAccountHandle;

        r34 := @parameter1: android.telecom.ConnectionRequest;

        z0 := @parameter2: boolean;

        $r2 = staticinvoke <java.util.UUID: java.util.UUID randomUUID()>();

        r1 = virtualinvoke $r2.<java.util.UUID: java.lang.String toString()>();

        $r3 = new android.os.Bundle;

        specialinvoke $r3.<android.os.Bundle: void <init>()>();

        $r4 = virtualinvoke r34.<android.telecom.ConnectionRequest: android.os.Bundle getExtras()>();

        if $r4 == null goto label1;

        $r28 = virtualinvoke r34.<android.telecom.ConnectionRequest: android.os.Bundle getExtras()>();

        virtualinvoke $r3.<android.os.Bundle: void putAll(android.os.Bundle)>($r28);

     label1:
        $r5 = r0.<android.telecom.RemoteConnectionService: android.telecom.ConnectionService mOurConnectionServiceImpl>;

        $r6 = virtualinvoke $r5.<android.telecom.ConnectionService: android.content.Context getApplicationContext()>();

        $r7 = virtualinvoke $r6.<android.content.Context: java.lang.String getOpPackageName()>();

        virtualinvoke $r3.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("android.telecom.extra.REMOTE_CONNECTION_ORIGINATING_PACKAGE_NAME", $r7);

        $r8 = new android.telecom.ConnectionRequest$Builder;

        specialinvoke $r8.<android.telecom.ConnectionRequest$Builder: void <init>()>();

        $r9 = virtualinvoke r34.<android.telecom.ConnectionRequest: android.telecom.PhoneAccountHandle getAccountHandle()>();

        $r10 = virtualinvoke $r8.<android.telecom.ConnectionRequest$Builder: android.telecom.ConnectionRequest$Builder setAccountHandle(android.telecom.PhoneAccountHandle)>($r9);

        $r11 = virtualinvoke r34.<android.telecom.ConnectionRequest: android.net.Uri getAddress()>();

        $r12 = virtualinvoke $r10.<android.telecom.ConnectionRequest$Builder: android.telecom.ConnectionRequest$Builder setAddress(android.net.Uri)>($r11);

        $r13 = virtualinvoke $r12.<android.telecom.ConnectionRequest$Builder: android.telecom.ConnectionRequest$Builder setExtras(android.os.Bundle)>($r3);

        $i0 = virtualinvoke r34.<android.telecom.ConnectionRequest: int getVideoState()>();

        $r14 = virtualinvoke $r13.<android.telecom.ConnectionRequest$Builder: android.telecom.ConnectionRequest$Builder setVideoState(int)>($i0);

        $r15 = virtualinvoke r34.<android.telecom.ConnectionRequest: android.os.ParcelFileDescriptor getRttPipeFromInCall()>();

        $r16 = virtualinvoke $r14.<android.telecom.ConnectionRequest$Builder: android.telecom.ConnectionRequest$Builder setRttPipeFromInCall(android.os.ParcelFileDescriptor)>($r15);

        $r17 = virtualinvoke r34.<android.telecom.ConnectionRequest: android.os.ParcelFileDescriptor getRttPipeToInCall()>();

        $r18 = virtualinvoke $r16.<android.telecom.ConnectionRequest$Builder: android.telecom.ConnectionRequest$Builder setRttPipeToInCall(android.os.ParcelFileDescriptor)>($r17);

        r36 = virtualinvoke $r18.<android.telecom.ConnectionRequest$Builder: android.telecom.ConnectionRequest build()>();

     label2:
        $r19 = r0.<android.telecom.RemoteConnectionService: java.util.Map mConnectionById>;

        $z1 = interfaceinvoke $r19.<java.util.Map: boolean isEmpty()>();

        if $z1 == 0 goto label3;

        $r26 = r0.<android.telecom.RemoteConnectionService: com.android.internal.telecom.IConnectionService mOutgoingConnectionServiceRpc>;

        $r25 = r0.<android.telecom.RemoteConnectionService: android.telecom.ConnectionServiceAdapterServant mServant>;

        $r27 = virtualinvoke $r25.<android.telecom.ConnectionServiceAdapterServant: com.android.internal.telecom.IConnectionServiceAdapter getStub()>();

        interfaceinvoke $r26.<com.android.internal.telecom.IConnectionService: void addConnectionServiceAdapter(com.android.internal.telecom.IConnectionServiceAdapter,android.telecom.Logging.Session$Info)>($r27, null);

     label3:
        r37 = new android.telecom.RemoteConnection;

        $r20 = r0.<android.telecom.RemoteConnectionService: com.android.internal.telecom.IConnectionService mOutgoingConnectionServiceRpc>;

        specialinvoke r37.<android.telecom.RemoteConnection: void <init>(java.lang.String,com.android.internal.telecom.IConnectionService,android.telecom.ConnectionRequest)>(r1, $r20, r36);

        $r21 = r0.<android.telecom.RemoteConnectionService: java.util.Set mPendingConnections>;

        interfaceinvoke $r21.<java.util.Set: boolean add(java.lang.Object)>(r37);

        $r22 = r0.<android.telecom.RemoteConnectionService: java.util.Map mConnectionById>;

        interfaceinvoke $r22.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r37);

        $r24 = r0.<android.telecom.RemoteConnectionService: com.android.internal.telecom.IConnectionService mOutgoingConnectionServiceRpc>;

        interfaceinvoke $r24.<com.android.internal.telecom.IConnectionService: void createConnection(android.telecom.PhoneAccountHandle,java.lang.String,android.telecom.ConnectionRequest,boolean,boolean,android.telecom.Logging.Session$Info)>(r33, r1, r36, z0, 0, null);

        r38 = new android.telecom.RemoteConnectionService$3;

        specialinvoke r38.<android.telecom.RemoteConnectionService$3: void <init>(android.telecom.RemoteConnectionService,java.lang.String)>(r0, r1);

        virtualinvoke r37.<android.telecom.RemoteConnection: void registerCallback(android.telecom.RemoteConnection$Callback)>(r38);

     label4:
        return r37;

     label5:
        $r29 := @caughtexception;

        $r30 = new android.telecom.DisconnectCause;

        $r31 = virtualinvoke $r29.<android.os.RemoteException: java.lang.String toString()>();

        specialinvoke $r30.<android.telecom.DisconnectCause: void <init>(int,java.lang.String)>(1, $r31);

        $r32 = staticinvoke <android.telecom.RemoteConnection: android.telecom.RemoteConnection failure(android.telecom.DisconnectCause)>($r30);

        return $r32;

        catch android.os.RemoteException from label2 to label3 with label5;
        catch android.os.RemoteException from label3 to label4 with label5;
    }

    public java.lang.String toString()
    {
        android.telecom.RemoteConnectionService r0;
        java.lang.StringBuilder $r2;
        com.android.internal.telecom.IConnectionService $r4;
        android.os.IBinder $r5;
        java.lang.String $r6, $r9;

        r0 := @this: android.telecom.RemoteConnectionService;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[RemoteCS - ");

        $r4 = r0.<android.telecom.RemoteConnectionService: com.android.internal.telecom.IConnectionService mOutgoingConnectionServiceRpc>;

        $r5 = interfaceinvoke $r4.<com.android.internal.telecom.IConnectionService: android.os.IBinder asBinder()>();

        $r6 = virtualinvoke $r5.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r9 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;
    }
}
