public final class android.telecom.TelecomAnalytics$SessionTiming extends android.telecom.TimedEvent implements android.os.Parcelable
{
    public static final android.os.Parcelable$Creator CREATOR;
    public static final int CSW_ADD_CONFERENCE_CALL;
    public static final int CSW_HANDLE_CREATE_CONNECTION_COMPLETE;
    public static final int CSW_REMOVE_CALL;
    public static final int CSW_SET_ACTIVE;
    public static final int CSW_SET_DIALING;
    public static final int CSW_SET_DISCONNECTED;
    public static final int CSW_SET_IS_CONFERENCED;
    public static final int CSW_SET_ON_HOLD;
    public static final int CSW_SET_RINGING;
    public static final int ICA_ANSWER_CALL;
    public static final int ICA_CONFERENCE;
    public static final int ICA_DISCONNECT_CALL;
    public static final int ICA_HOLD_CALL;
    public static final int ICA_MUTE;
    public static final int ICA_REJECT_CALL;
    public static final int ICA_SET_AUDIO_ROUTE;
    public static final int ICA_UNHOLD_CALL;
    private int mId;
    private long mTime;

    static void <clinit>()
    {
        android.telecom.TelecomAnalytics$SessionTiming$1 $r0;

        <android.telecom.TelecomAnalytics$SessionTiming: int ICA_UNHOLD_CALL> = 5;

        <android.telecom.TelecomAnalytics$SessionTiming: int ICA_SET_AUDIO_ROUTE> = 7;

        <android.telecom.TelecomAnalytics$SessionTiming: int ICA_REJECT_CALL> = 2;

        <android.telecom.TelecomAnalytics$SessionTiming: int ICA_MUTE> = 6;

        <android.telecom.TelecomAnalytics$SessionTiming: int ICA_HOLD_CALL> = 4;

        <android.telecom.TelecomAnalytics$SessionTiming: int ICA_DISCONNECT_CALL> = 3;

        <android.telecom.TelecomAnalytics$SessionTiming: int ICA_CONFERENCE> = 8;

        <android.telecom.TelecomAnalytics$SessionTiming: int ICA_ANSWER_CALL> = 1;

        <android.telecom.TelecomAnalytics$SessionTiming: int CSW_SET_RINGING> = 102;

        <android.telecom.TelecomAnalytics$SessionTiming: int CSW_SET_ON_HOLD> = 105;

        <android.telecom.TelecomAnalytics$SessionTiming: int CSW_SET_IS_CONFERENCED> = 107;

        <android.telecom.TelecomAnalytics$SessionTiming: int CSW_SET_DISCONNECTED> = 104;

        <android.telecom.TelecomAnalytics$SessionTiming: int CSW_SET_DIALING> = 103;

        <android.telecom.TelecomAnalytics$SessionTiming: int CSW_SET_ACTIVE> = 101;

        <android.telecom.TelecomAnalytics$SessionTiming: int CSW_REMOVE_CALL> = 106;

        <android.telecom.TelecomAnalytics$SessionTiming: int CSW_HANDLE_CREATE_CONNECTION_COMPLETE> = 100;

        <android.telecom.TelecomAnalytics$SessionTiming: int CSW_ADD_CONFERENCE_CALL> = 108;

        $r0 = new android.telecom.TelecomAnalytics$SessionTiming$1;

        specialinvoke $r0.<android.telecom.TelecomAnalytics$SessionTiming$1: void <init>()>();

        <android.telecom.TelecomAnalytics$SessionTiming: android.os.Parcelable$Creator CREATOR> = $r0;

        return;
    }

    public void <init>(int, long)
    {
        android.telecom.TelecomAnalytics$SessionTiming r0;
        int i0;
        long l1;

        r0 := @this: android.telecom.TelecomAnalytics$SessionTiming;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        specialinvoke r0.<android.telecom.TimedEvent: void <init>()>();

        r0.<android.telecom.TelecomAnalytics$SessionTiming: int mId> = i0;

        r0.<android.telecom.TelecomAnalytics$SessionTiming: long mTime> = l1;

        return;
    }

    private void <init>(android.os.Parcel)
    {
        android.telecom.TelecomAnalytics$SessionTiming r0;
        android.os.Parcel r1;
        int $i0;
        long $l1;

        r0 := @this: android.telecom.TelecomAnalytics$SessionTiming;

        r1 := @parameter0: android.os.Parcel;

        specialinvoke r0.<android.telecom.TimedEvent: void <init>()>();

        $i0 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.telecom.TelecomAnalytics$SessionTiming: int mId> = $i0;

        $l1 = virtualinvoke r1.<android.os.Parcel: long readLong()>();

        r0.<android.telecom.TelecomAnalytics$SessionTiming: long mTime> = $l1;

        return;
    }

    void <init>(android.os.Parcel, android.telecom.TelecomAnalytics$1)
    {
        android.telecom.TelecomAnalytics$SessionTiming r0;
        android.os.Parcel r1;
        android.telecom.TelecomAnalytics$1 r2;

        r0 := @this: android.telecom.TelecomAnalytics$SessionTiming;

        r1 := @parameter0: android.os.Parcel;

        r2 := @parameter1: android.telecom.TelecomAnalytics$1;

        specialinvoke r0.<android.telecom.TelecomAnalytics$SessionTiming: void <init>(android.os.Parcel)>(r1);

        return;
    }

    public int describeContents()
    {
        android.telecom.TelecomAnalytics$SessionTiming r0;

        r0 := @this: android.telecom.TelecomAnalytics$SessionTiming;

        return 0;
    }

    public java.lang.Integer getKey()
    {
        android.telecom.TelecomAnalytics$SessionTiming r0;
        int $i0;
        java.lang.Integer $r1;

        r0 := @this: android.telecom.TelecomAnalytics$SessionTiming;

        $i0 = r0.<android.telecom.TelecomAnalytics$SessionTiming: int mId>;

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        return $r1;
    }

    public volatile java.lang.Object getKey()
    {
        android.telecom.TelecomAnalytics$SessionTiming r0;
        java.lang.Integer $r1;

        r0 := @this: android.telecom.TelecomAnalytics$SessionTiming;

        $r1 = virtualinvoke r0.<android.telecom.TelecomAnalytics$SessionTiming: java.lang.Integer getKey()>();

        return $r1;
    }

    public long getTime()
    {
        android.telecom.TelecomAnalytics$SessionTiming r0;
        long $l0;

        r0 := @this: android.telecom.TelecomAnalytics$SessionTiming;

        $l0 = r0.<android.telecom.TelecomAnalytics$SessionTiming: long mTime>;

        return $l0;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.telecom.TelecomAnalytics$SessionTiming r0;
        android.os.Parcel r1;
        int i0, $i1;
        long $l2;

        r0 := @this: android.telecom.TelecomAnalytics$SessionTiming;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        $i1 = r0.<android.telecom.TelecomAnalytics$SessionTiming: int mId>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i1);

        $l2 = r0.<android.telecom.TelecomAnalytics$SessionTiming: long mTime>;

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l2);

        return;
    }
}
