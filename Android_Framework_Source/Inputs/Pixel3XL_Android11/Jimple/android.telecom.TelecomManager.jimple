public class android.telecom.TelecomManager extends java.lang.Object
{
    public static final java.lang.String ACTION_CHANGE_DEFAULT_DIALER;
    public static final java.lang.String ACTION_CHANGE_PHONE_ACCOUNTS;
    public static final java.lang.String ACTION_CONFIGURE_PHONE_ACCOUNT;
    public static final java.lang.String ACTION_CURRENT_TTY_MODE_CHANGED;
    public static final java.lang.String ACTION_DEFAULT_CALL_SCREENING_APP_CHANGED;
    public static final java.lang.String ACTION_DEFAULT_DIALER_CHANGED;
    public static final java.lang.String ACTION_INCOMING_CALL;
    public static final java.lang.String ACTION_NEW_UNKNOWN_CALL;
    public static final java.lang.String ACTION_PHONE_ACCOUNT_REGISTERED;
    public static final java.lang.String ACTION_PHONE_ACCOUNT_UNREGISTERED;
    public static final java.lang.String ACTION_POST_CALL;
    public static final java.lang.String ACTION_SHOW_CALL_ACCESSIBILITY_SETTINGS;
    public static final java.lang.String ACTION_SHOW_CALL_SETTINGS;
    public static final java.lang.String ACTION_SHOW_MISSED_CALLS_NOTIFICATION;
    public static final java.lang.String ACTION_SHOW_RESPOND_VIA_SMS_SETTINGS;
    public static final java.lang.String ACTION_TTY_PREFERRED_MODE_CHANGED;
    public static final int AUDIO_OUTPUT_DEFAULT;
    public static final int AUDIO_OUTPUT_DISABLE_SPEAKER;
    public static final int AUDIO_OUTPUT_ENABLE_SPEAKER;
    public static final int CALL_SOURCE_EMERGENCY_DIALPAD;
    public static final int CALL_SOURCE_EMERGENCY_SHORTCUT;
    public static final int CALL_SOURCE_UNSPECIFIED;
    public static final char DTMF_CHARACTER_PAUSE;
    public static final char DTMF_CHARACTER_WAIT;
    public static final int DURATION_LONG;
    public static final int DURATION_MEDIUM;
    public static final int DURATION_SHORT;
    public static final int DURATION_VERY_SHORT;
    public static final android.content.ComponentName EMERGENCY_DIALER_COMPONENT;
    public static final java.lang.String EXTRA_CALL_AUDIO_STATE;
    public static final java.lang.String EXTRA_CALL_BACK_INTENT;
    public static final java.lang.String EXTRA_CALL_BACK_NUMBER;
    public static final java.lang.String EXTRA_CALL_CREATED_EPOCH_TIME_MILLIS;
    public static final java.lang.String EXTRA_CALL_CREATED_TIME_MILLIS;
    public static final java.lang.String EXTRA_CALL_DISCONNECT_CAUSE;
    public static final java.lang.String EXTRA_CALL_DISCONNECT_MESSAGE;
    public static final java.lang.String EXTRA_CALL_DURATION;
    public static final java.lang.String EXTRA_CALL_EXTERNAL_RINGER;
    public static final java.lang.String EXTRA_CALL_NETWORK_TYPE;
    public static final java.lang.String EXTRA_CALL_SOURCE;
    public static final java.lang.String EXTRA_CALL_SUBJECT;
    public static final java.lang.String EXTRA_CALL_TECHNOLOGY_TYPE;
    public static final java.lang.String EXTRA_CALL_TELECOM_ROUTING_END_TIME_MILLIS;
    public static final java.lang.String EXTRA_CALL_TELECOM_ROUTING_START_TIME_MILLIS;
    public static final java.lang.String EXTRA_CHANGE_DEFAULT_DIALER_PACKAGE_NAME;
    public static final java.lang.String EXTRA_CLEAR_MISSED_CALLS_INTENT;
    public static final java.lang.String EXTRA_CONNECTION_SERVICE;
    public static final java.lang.String EXTRA_CURRENT_TTY_MODE;
    public static final java.lang.String EXTRA_DEFAULT_CALL_SCREENING_APP_COMPONENT_NAME;
    public static final java.lang.String EXTRA_DISCONNECT_CAUSE;
    public static final java.lang.String EXTRA_HANDLE;
    public static final java.lang.String EXTRA_HANDOVER_FROM_PHONE_ACCOUNT;
    public static final java.lang.String EXTRA_INCOMING_CALL_ADDRESS;
    public static final java.lang.String EXTRA_INCOMING_CALL_EXTRAS;
    public static final java.lang.String EXTRA_INCOMING_VIDEO_STATE;
    public static final java.lang.String EXTRA_IS_DEFAULT_CALL_SCREENING_APP;
    public static final java.lang.String EXTRA_IS_HANDOVER;
    public static final java.lang.String EXTRA_IS_HANDOVER_CONNECTION;
    public static final java.lang.String EXTRA_IS_USER_INTENT_EMERGENCY_CALL;
    public static final java.lang.String EXTRA_NEW_OUTGOING_CALL_CANCEL_TIMEOUT;
    public static final java.lang.String EXTRA_NOTIFICATION_COUNT;
    public static final java.lang.String EXTRA_NOTIFICATION_PHONE_NUMBER;
    public static final java.lang.String EXTRA_OUTGOING_CALL_EXTRAS;
    public static final java.lang.String EXTRA_PHONE_ACCOUNT_HANDLE;
    public static final java.lang.String EXTRA_START_CALL_WITH_RTT;
    public static final java.lang.String EXTRA_START_CALL_WITH_SPEAKERPHONE;
    public static final java.lang.String EXTRA_START_CALL_WITH_VIDEO_STATE;
    public static final java.lang.String EXTRA_TTY_PREFERRED_MODE;
    public static final java.lang.String EXTRA_UNKNOWN_CALL_HANDLE;
    public static final java.lang.String EXTRA_USE_ASSISTED_DIALING;
    public static final java.lang.String GATEWAY_ORIGINAL_ADDRESS;
    public static final java.lang.String GATEWAY_PROVIDER_PACKAGE;
    public static final long MEDIUM_CALL_TIME_MS;
    public static final java.lang.String METADATA_INCLUDE_EXTERNAL_CALLS;
    public static final java.lang.String METADATA_INCLUDE_SELF_MANAGED_CALLS;
    public static final java.lang.String METADATA_IN_CALL_SERVICE_CAR_MODE_UI;
    public static final java.lang.String METADATA_IN_CALL_SERVICE_RINGING;
    public static final java.lang.String METADATA_IN_CALL_SERVICE_UI;
    public static final int PRESENTATION_ALLOWED;
    public static final int PRESENTATION_PAYPHONE;
    public static final int PRESENTATION_RESTRICTED;
    public static final int PRESENTATION_UNKNOWN;
    public static final long SHORT_CALL_TIME_MS;
    private static final java.lang.String TAG;
    public static final int TTY_MODE_FULL;
    public static final int TTY_MODE_HCO;
    public static final int TTY_MODE_OFF;
    public static final int TTY_MODE_VCO;
    public static final long VERY_SHORT_CALL_TIME_MS;
    private final android.content.Context mContext;
    private final com.android.internal.telecom.ITelecomService mTelecomServiceOverride;

    static void <clinit>()
    {
        android.content.ComponentName $r0;

        <android.telecom.TelecomManager: long VERY_SHORT_CALL_TIME_MS> = 3000L;

        <android.telecom.TelecomManager: int TTY_MODE_VCO> = 3;

        <android.telecom.TelecomManager: int TTY_MODE_OFF> = 0;

        <android.telecom.TelecomManager: int TTY_MODE_HCO> = 2;

        <android.telecom.TelecomManager: int TTY_MODE_FULL> = 1;

        <android.telecom.TelecomManager: java.lang.String TAG> = "TelecomManager";

        <android.telecom.TelecomManager: long SHORT_CALL_TIME_MS> = 60000L;

        <android.telecom.TelecomManager: int PRESENTATION_UNKNOWN> = 3;

        <android.telecom.TelecomManager: int PRESENTATION_RESTRICTED> = 2;

        <android.telecom.TelecomManager: int PRESENTATION_PAYPHONE> = 4;

        <android.telecom.TelecomManager: int PRESENTATION_ALLOWED> = 1;

        <android.telecom.TelecomManager: java.lang.String METADATA_IN_CALL_SERVICE_UI> = "android.telecom.IN_CALL_SERVICE_UI";

        <android.telecom.TelecomManager: java.lang.String METADATA_IN_CALL_SERVICE_RINGING> = "android.telecom.IN_CALL_SERVICE_RINGING";

        <android.telecom.TelecomManager: java.lang.String METADATA_IN_CALL_SERVICE_CAR_MODE_UI> = "android.telecom.IN_CALL_SERVICE_CAR_MODE_UI";

        <android.telecom.TelecomManager: java.lang.String METADATA_INCLUDE_SELF_MANAGED_CALLS> = "android.telecom.INCLUDE_SELF_MANAGED_CALLS";

        <android.telecom.TelecomManager: java.lang.String METADATA_INCLUDE_EXTERNAL_CALLS> = "android.telecom.INCLUDE_EXTERNAL_CALLS";

        <android.telecom.TelecomManager: long MEDIUM_CALL_TIME_MS> = 120000L;

        <android.telecom.TelecomManager: java.lang.String GATEWAY_PROVIDER_PACKAGE> = "android.telecom.extra.GATEWAY_PROVIDER_PACKAGE";

        <android.telecom.TelecomManager: java.lang.String GATEWAY_ORIGINAL_ADDRESS> = "android.telecom.extra.GATEWAY_ORIGINAL_ADDRESS";

        <android.telecom.TelecomManager: java.lang.String EXTRA_USE_ASSISTED_DIALING> = "android.telecom.extra.USE_ASSISTED_DIALING";

        <android.telecom.TelecomManager: java.lang.String EXTRA_UNKNOWN_CALL_HANDLE> = "android.telecom.extra.UNKNOWN_CALL_HANDLE";

        <android.telecom.TelecomManager: java.lang.String EXTRA_TTY_PREFERRED_MODE> = "android.telecom.extra.TTY_PREFERRED_MODE";

        <android.telecom.TelecomManager: java.lang.String EXTRA_START_CALL_WITH_VIDEO_STATE> = "android.telecom.extra.START_CALL_WITH_VIDEO_STATE";

        <android.telecom.TelecomManager: java.lang.String EXTRA_START_CALL_WITH_SPEAKERPHONE> = "android.telecom.extra.START_CALL_WITH_SPEAKERPHONE";

        <android.telecom.TelecomManager: java.lang.String EXTRA_START_CALL_WITH_RTT> = "android.telecom.extra.START_CALL_WITH_RTT";

        <android.telecom.TelecomManager: java.lang.String EXTRA_PHONE_ACCOUNT_HANDLE> = "android.telecom.extra.PHONE_ACCOUNT_HANDLE";

        <android.telecom.TelecomManager: java.lang.String EXTRA_OUTGOING_CALL_EXTRAS> = "android.telecom.extra.OUTGOING_CALL_EXTRAS";

        <android.telecom.TelecomManager: java.lang.String EXTRA_NOTIFICATION_PHONE_NUMBER> = "android.telecom.extra.NOTIFICATION_PHONE_NUMBER";

        <android.telecom.TelecomManager: java.lang.String EXTRA_NOTIFICATION_COUNT> = "android.telecom.extra.NOTIFICATION_COUNT";

        <android.telecom.TelecomManager: java.lang.String EXTRA_NEW_OUTGOING_CALL_CANCEL_TIMEOUT> = "android.telecom.extra.NEW_OUTGOING_CALL_CANCEL_TIMEOUT";

        <android.telecom.TelecomManager: java.lang.String EXTRA_IS_USER_INTENT_EMERGENCY_CALL> = "android.telecom.extra.IS_USER_INTENT_EMERGENCY_CALL";

        <android.telecom.TelecomManager: java.lang.String EXTRA_IS_HANDOVER_CONNECTION> = "android.telecom.extra.IS_HANDOVER_CONNECTION";

        <android.telecom.TelecomManager: java.lang.String EXTRA_IS_HANDOVER> = "android.telecom.extra.IS_HANDOVER";

        <android.telecom.TelecomManager: java.lang.String EXTRA_IS_DEFAULT_CALL_SCREENING_APP> = "android.telecom.extra.IS_DEFAULT_CALL_SCREENING_APP";

        <android.telecom.TelecomManager: java.lang.String EXTRA_INCOMING_VIDEO_STATE> = "android.telecom.extra.INCOMING_VIDEO_STATE";

        <android.telecom.TelecomManager: java.lang.String EXTRA_INCOMING_CALL_EXTRAS> = "android.telecom.extra.INCOMING_CALL_EXTRAS";

        <android.telecom.TelecomManager: java.lang.String EXTRA_INCOMING_CALL_ADDRESS> = "android.telecom.extra.INCOMING_CALL_ADDRESS";

        <android.telecom.TelecomManager: java.lang.String EXTRA_HANDOVER_FROM_PHONE_ACCOUNT> = "android.telecom.extra.HANDOVER_FROM_PHONE_ACCOUNT";

        <android.telecom.TelecomManager: java.lang.String EXTRA_HANDLE> = "android.telecom.extra.HANDLE";

        <android.telecom.TelecomManager: java.lang.String EXTRA_DISCONNECT_CAUSE> = "android.telecom.extra.DISCONNECT_CAUSE";

        <android.telecom.TelecomManager: java.lang.String EXTRA_DEFAULT_CALL_SCREENING_APP_COMPONENT_NAME> = "android.telecom.extra.DEFAULT_CALL_SCREENING_APP_COMPONENT_NAME";

        <android.telecom.TelecomManager: java.lang.String EXTRA_CURRENT_TTY_MODE> = "android.telecom.extra.CURRENT_TTY_MODE";

        <android.telecom.TelecomManager: java.lang.String EXTRA_CONNECTION_SERVICE> = "android.telecom.extra.CONNECTION_SERVICE";

        <android.telecom.TelecomManager: java.lang.String EXTRA_CLEAR_MISSED_CALLS_INTENT> = "android.telecom.extra.CLEAR_MISSED_CALLS_INTENT";

        <android.telecom.TelecomManager: java.lang.String EXTRA_CHANGE_DEFAULT_DIALER_PACKAGE_NAME> = "android.telecom.extra.CHANGE_DEFAULT_DIALER_PACKAGE_NAME";

        <android.telecom.TelecomManager: java.lang.String EXTRA_CALL_TELECOM_ROUTING_START_TIME_MILLIS> = "android.telecom.extra.CALL_TELECOM_ROUTING_START_TIME_MILLIS";

        <android.telecom.TelecomManager: java.lang.String EXTRA_CALL_TELECOM_ROUTING_END_TIME_MILLIS> = "android.telecom.extra.CALL_TELECOM_ROUTING_END_TIME_MILLIS";

        <android.telecom.TelecomManager: java.lang.String EXTRA_CALL_TECHNOLOGY_TYPE> = "android.telecom.extra.CALL_TECHNOLOGY_TYPE";

        <android.telecom.TelecomManager: java.lang.String EXTRA_CALL_SUBJECT> = "android.telecom.extra.CALL_SUBJECT";

        <android.telecom.TelecomManager: java.lang.String EXTRA_CALL_SOURCE> = "android.telecom.extra.CALL_SOURCE";

        <android.telecom.TelecomManager: java.lang.String EXTRA_CALL_NETWORK_TYPE> = "android.telecom.extra.CALL_NETWORK_TYPE";

        <android.telecom.TelecomManager: java.lang.String EXTRA_CALL_EXTERNAL_RINGER> = "android.telecom.extra.CALL_EXTERNAL_RINGER";

        <android.telecom.TelecomManager: java.lang.String EXTRA_CALL_DURATION> = "android.telecom.extra.CALL_DURATION";

        <android.telecom.TelecomManager: java.lang.String EXTRA_CALL_DISCONNECT_MESSAGE> = "android.telecom.extra.CALL_DISCONNECT_MESSAGE";

        <android.telecom.TelecomManager: java.lang.String EXTRA_CALL_DISCONNECT_CAUSE> = "android.telecom.extra.CALL_DISCONNECT_CAUSE";

        <android.telecom.TelecomManager: java.lang.String EXTRA_CALL_CREATED_TIME_MILLIS> = "android.telecom.extra.CALL_CREATED_TIME_MILLIS";

        <android.telecom.TelecomManager: java.lang.String EXTRA_CALL_CREATED_EPOCH_TIME_MILLIS> = "android.telecom.extra.CALL_CREATED_EPOCH_TIME_MILLIS";

        <android.telecom.TelecomManager: java.lang.String EXTRA_CALL_BACK_NUMBER> = "android.telecom.extra.CALL_BACK_NUMBER";

        <android.telecom.TelecomManager: java.lang.String EXTRA_CALL_BACK_INTENT> = "android.telecom.extra.CALL_BACK_INTENT";

        <android.telecom.TelecomManager: java.lang.String EXTRA_CALL_AUDIO_STATE> = "android.telecom.extra.CALL_AUDIO_STATE";

        <android.telecom.TelecomManager: int DURATION_VERY_SHORT> = 0;

        <android.telecom.TelecomManager: int DURATION_SHORT> = 1;

        <android.telecom.TelecomManager: int DURATION_MEDIUM> = 2;

        <android.telecom.TelecomManager: int DURATION_LONG> = 3;

        <android.telecom.TelecomManager: char DTMF_CHARACTER_WAIT> = 59;

        <android.telecom.TelecomManager: char DTMF_CHARACTER_PAUSE> = 44;

        <android.telecom.TelecomManager: int CALL_SOURCE_UNSPECIFIED> = 0;

        <android.telecom.TelecomManager: int CALL_SOURCE_EMERGENCY_SHORTCUT> = 2;

        <android.telecom.TelecomManager: int CALL_SOURCE_EMERGENCY_DIALPAD> = 1;

        <android.telecom.TelecomManager: int AUDIO_OUTPUT_ENABLE_SPEAKER> = 0;

        <android.telecom.TelecomManager: int AUDIO_OUTPUT_DISABLE_SPEAKER> = 1;

        <android.telecom.TelecomManager: int AUDIO_OUTPUT_DEFAULT> = 0;

        <android.telecom.TelecomManager: java.lang.String ACTION_TTY_PREFERRED_MODE_CHANGED> = "android.telecom.action.TTY_PREFERRED_MODE_CHANGED";

        <android.telecom.TelecomManager: java.lang.String ACTION_SHOW_RESPOND_VIA_SMS_SETTINGS> = "android.telecom.action.SHOW_RESPOND_VIA_SMS_SETTINGS";

        <android.telecom.TelecomManager: java.lang.String ACTION_SHOW_MISSED_CALLS_NOTIFICATION> = "android.telecom.action.SHOW_MISSED_CALLS_NOTIFICATION";

        <android.telecom.TelecomManager: java.lang.String ACTION_SHOW_CALL_SETTINGS> = "android.telecom.action.SHOW_CALL_SETTINGS";

        <android.telecom.TelecomManager: java.lang.String ACTION_SHOW_CALL_ACCESSIBILITY_SETTINGS> = "android.telecom.action.SHOW_CALL_ACCESSIBILITY_SETTINGS";

        <android.telecom.TelecomManager: java.lang.String ACTION_POST_CALL> = "android.telecom.action.POST_CALL";

        <android.telecom.TelecomManager: java.lang.String ACTION_PHONE_ACCOUNT_UNREGISTERED> = "android.telecom.action.PHONE_ACCOUNT_UNREGISTERED";

        <android.telecom.TelecomManager: java.lang.String ACTION_PHONE_ACCOUNT_REGISTERED> = "android.telecom.action.PHONE_ACCOUNT_REGISTERED";

        <android.telecom.TelecomManager: java.lang.String ACTION_NEW_UNKNOWN_CALL> = "android.telecom.action.NEW_UNKNOWN_CALL";

        <android.telecom.TelecomManager: java.lang.String ACTION_INCOMING_CALL> = "android.telecom.action.INCOMING_CALL";

        <android.telecom.TelecomManager: java.lang.String ACTION_DEFAULT_DIALER_CHANGED> = "android.telecom.action.DEFAULT_DIALER_CHANGED";

        <android.telecom.TelecomManager: java.lang.String ACTION_DEFAULT_CALL_SCREENING_APP_CHANGED> = "android.telecom.action.DEFAULT_CALL_SCREENING_APP_CHANGED";

        <android.telecom.TelecomManager: java.lang.String ACTION_CURRENT_TTY_MODE_CHANGED> = "android.telecom.action.CURRENT_TTY_MODE_CHANGED";

        <android.telecom.TelecomManager: java.lang.String ACTION_CONFIGURE_PHONE_ACCOUNT> = "android.telecom.action.CONFIGURE_PHONE_ACCOUNT";

        <android.telecom.TelecomManager: java.lang.String ACTION_CHANGE_PHONE_ACCOUNTS> = "android.telecom.action.CHANGE_PHONE_ACCOUNTS";

        <android.telecom.TelecomManager: java.lang.String ACTION_CHANGE_DEFAULT_DIALER> = "android.telecom.action.CHANGE_DEFAULT_DIALER";

        $r0 = staticinvoke <android.content.ComponentName: android.content.ComponentName createRelative(java.lang.String,java.lang.String)>("com.android.phone", ".EmergencyDialer");

        <android.telecom.TelecomManager: android.content.ComponentName EMERGENCY_DIALER_COMPONENT> = $r0;

        return;
    }

    public void <init>(android.content.Context)
    {
        android.telecom.TelecomManager r0;
        android.content.Context r1;

        r0 := @this: android.telecom.TelecomManager;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.telecom.TelecomManager: void <init>(android.content.Context,com.android.internal.telecom.ITelecomService)>(r1, null);

        return;
    }

    public void <init>(android.content.Context, com.android.internal.telecom.ITelecomService)
    {
        android.telecom.TelecomManager r0;
        android.content.Context r1, r3;
        com.android.internal.telecom.ITelecomService r2;
        java.lang.String $r4, $r5;
        boolean $z0;

        r0 := @this: android.telecom.TelecomManager;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: com.android.internal.telecom.ITelecomService;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r3 = virtualinvoke r1.<android.content.Context: android.content.Context getApplicationContext()>();

        if r3 == null goto label1;

        $r4 = virtualinvoke r1.<android.content.Context: java.lang.String getAttributionTag()>();

        $r5 = virtualinvoke r3.<android.content.Context: java.lang.String getAttributionTag()>();

        $z0 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r4, $r5);

        if $z0 == 0 goto label1;

        r0.<android.telecom.TelecomManager: android.content.Context mContext> = r3;

        goto label2;

     label1:
        r0.<android.telecom.TelecomManager: android.content.Context mContext> = r1;

     label2:
        r0.<android.telecom.TelecomManager: com.android.internal.telecom.ITelecomService mTelecomServiceOverride> = r2;

        return;
    }

    public static android.telecom.TelecomManager 'from'(android.content.Context)
    {
        android.content.Context r0;
        java.lang.Object $r1;
        android.telecom.TelecomManager $r2;

        r0 := @parameter0: android.content.Context;

        $r1 = virtualinvoke r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("telecom");

        $r2 = (android.telecom.TelecomManager) $r1;

        return $r2;
    }

    private com.android.internal.telecom.ITelecomService getTelecomService()
    {
        android.telecom.TelecomManager r0;
        com.android.internal.telecom.ITelecomService r1, $r3;
        android.os.IBinder $r2;

        r0 := @this: android.telecom.TelecomManager;

        r1 = r0.<android.telecom.TelecomManager: com.android.internal.telecom.ITelecomService mTelecomServiceOverride>;

        if r1 == null goto label1;

        return r1;

     label1:
        $r2 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("telecom");

        $r3 = staticinvoke <com.android.internal.telecom.ITelecomService$Stub: com.android.internal.telecom.ITelecomService asInterface(android.os.IBinder)>($r2);

        return $r3;
    }

    private boolean isServiceConnected()
    {
        android.telecom.TelecomManager r0;
        com.android.internal.telecom.ITelecomService $r1;
        boolean z0;

        r0 := @this: android.telecom.TelecomManager;

        $r1 = specialinvoke r0.<android.telecom.TelecomManager: com.android.internal.telecom.ITelecomService getTelecomService()>();

        if $r1 == null goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        if z0 != 0 goto label3;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("TelecomManager", "Telecom Service not found.");

     label3:
        return z0;
    }

    public void acceptHandover(android.net.Uri, int, android.telecom.PhoneAccountHandle)
    {
        android.telecom.TelecomManager r0;
        int i0;
        boolean $z0;
        com.android.internal.telecom.ITelecomService $r1;
        android.os.RemoteException $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r6;
        android.net.Uri r7;
        android.telecom.PhoneAccountHandle r8;

        r0 := @this: android.telecom.TelecomManager;

        r7 := @parameter0: android.net.Uri;

        i0 := @parameter1: int;

        r8 := @parameter2: android.telecom.PhoneAccountHandle;

     label1:
        $z0 = specialinvoke r0.<android.telecom.TelecomManager: boolean isServiceConnected()>();

        if $z0 == 0 goto label2;

        $r1 = specialinvoke r0.<android.telecom.TelecomManager: com.android.internal.telecom.ITelecomService getTelecomService()>();

        interfaceinvoke $r1.<com.android.internal.telecom.ITelecomService: void acceptHandover(android.net.Uri,int,android.telecom.PhoneAccountHandle)>(r7, i0, r8);

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("RemoteException acceptHandover: ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("TelecomManager", $r6);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void acceptRingingCall()
    {
        android.telecom.TelecomManager r0;
        boolean $z0;
        com.android.internal.telecom.ITelecomService $r2;
        android.content.Context $r3;
        java.lang.String $r4;
        android.os.RemoteException $r5;

        r0 := @this: android.telecom.TelecomManager;

     label1:
        $z0 = specialinvoke r0.<android.telecom.TelecomManager: boolean isServiceConnected()>();

        if $z0 == 0 goto label2;

        $r2 = specialinvoke r0.<android.telecom.TelecomManager: com.android.internal.telecom.ITelecomService getTelecomService()>();

        $r3 = r0.<android.telecom.TelecomManager: android.content.Context mContext>;

        $r4 = virtualinvoke $r3.<android.content.Context: java.lang.String getPackageName()>();

        interfaceinvoke $r2.<com.android.internal.telecom.ITelecomService: void acceptRingingCall(java.lang.String)>($r4);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TelecomManager", "Error calling ITelecomService#acceptRingingCall", $r5);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void acceptRingingCall(int)
    {
        android.telecom.TelecomManager r0;
        int i0;
        boolean $z0;
        com.android.internal.telecom.ITelecomService $r2;
        android.content.Context $r3;
        java.lang.String $r4;
        android.os.RemoteException $r5;

        r0 := @this: android.telecom.TelecomManager;

        i0 := @parameter0: int;

     label1:
        $z0 = specialinvoke r0.<android.telecom.TelecomManager: boolean isServiceConnected()>();

        if $z0 == 0 goto label2;

        $r2 = specialinvoke r0.<android.telecom.TelecomManager: com.android.internal.telecom.ITelecomService getTelecomService()>();

        $r3 = r0.<android.telecom.TelecomManager: android.content.Context mContext>;

        $r4 = virtualinvoke $r3.<android.content.Context: java.lang.String getPackageName()>();

        interfaceinvoke $r2.<com.android.internal.telecom.ITelecomService: void acceptRingingCallWithVideoState(java.lang.String,int)>($r4, i0);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TelecomManager", "Error calling ITelecomService#acceptRingingCallWithVideoState", $r5);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void addNewIncomingCall(android.telecom.PhoneAccountHandle, android.os.Bundle)
    {
        android.telecom.TelecomManager r0;
        android.telecom.PhoneAccountHandle r1;
        boolean $z0, $z1;
        android.content.Context $r2, $r3;
        android.content.pm.ApplicationInfo $r4;
        int $i0;
        android.os.RemoteException $r5;
        java.lang.StringBuilder $r6;
        java.lang.String $r9;
        android.os.Bundle r10;
        com.android.internal.telecom.ITelecomService r11;

        r0 := @this: android.telecom.TelecomManager;

        r1 := @parameter0: android.telecom.PhoneAccountHandle;

        r10 := @parameter1: android.os.Bundle;

     label01:
        $z0 = specialinvoke r0.<android.telecom.TelecomManager: boolean isServiceConnected()>();

        if $z0 == 0 goto label10;

     label02:
        if r10 == null goto label05;

     label03:
        $z1 = virtualinvoke r10.<android.os.Bundle: boolean getBoolean(java.lang.String)>("android.telecom.extra.IS_HANDOVER");

        if $z1 == 0 goto label05;

        $r2 = r0.<android.telecom.TelecomManager: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: android.content.Context getApplicationContext()>();

        $r4 = virtualinvoke $r3.<android.content.Context: android.content.pm.ApplicationInfo getApplicationInfo()>();

        $i0 = $r4.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

        if $i0 <= 27 goto label05;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("TAG", "addNewIncomingCall failed. Use public api acceptHandover for API > O-MR1");

     label04:
        return;

     label05:
        r11 = specialinvoke r0.<android.telecom.TelecomManager: com.android.internal.telecom.ITelecomService getTelecomService()>();

     label06:
        if r10 != null goto label09;

     label07:
        r10 = new android.os.Bundle;

        specialinvoke r10.<android.os.Bundle: void <init>()>();

     label08:
        goto label09;

     label09:
        interfaceinvoke r11.<com.android.internal.telecom.ITelecomService: void addNewIncomingCall(android.telecom.PhoneAccountHandle,android.os.Bundle)>(r1, r10);

     label10:
        goto label12;

     label11:
        $r5 := @caughtexception;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("RemoteException adding a new incoming call: ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TelecomManager", $r9, $r5);

     label12:
        return;

        catch android.os.RemoteException from label01 to label02 with label11;
        catch android.os.RemoteException from label03 to label04 with label11;
        catch android.os.RemoteException from label05 to label06 with label11;
        catch android.os.RemoteException from label07 to label08 with label11;
        catch android.os.RemoteException from label09 to label10 with label11;
    }

    public void addNewIncomingConference(android.telecom.PhoneAccountHandle, android.os.Bundle)
    {
        android.telecom.TelecomManager r0;
        android.telecom.PhoneAccountHandle r1;
        boolean $z0;
        android.os.RemoteException $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r6;
        android.os.Bundle r7;
        com.android.internal.telecom.ITelecomService r8;

        r0 := @this: android.telecom.TelecomManager;

        r1 := @parameter0: android.telecom.PhoneAccountHandle;

        r7 := @parameter1: android.os.Bundle;

     label1:
        $z0 = specialinvoke r0.<android.telecom.TelecomManager: boolean isServiceConnected()>();

        if $z0 == 0 goto label6;

        r8 = specialinvoke r0.<android.telecom.TelecomManager: com.android.internal.telecom.ITelecomService getTelecomService()>();

     label2:
        if r7 != null goto label5;

     label3:
        r7 = new android.os.Bundle;

        specialinvoke r7.<android.os.Bundle: void <init>()>();

     label4:
        goto label5;

     label5:
        interfaceinvoke r8.<com.android.internal.telecom.ITelecomService: void addNewIncomingConference(android.telecom.PhoneAccountHandle,android.os.Bundle)>(r1, r7);

     label6:
        goto label8;

     label7:
        $r2 := @caughtexception;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("RemoteException adding a new incoming conference: ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TelecomManager", $r6, $r2);

     label8:
        return;

        catch android.os.RemoteException from label1 to label2 with label7;
        catch android.os.RemoteException from label3 to label4 with label7;
        catch android.os.RemoteException from label5 to label6 with label7;
    }

    public void addNewUnknownCall(android.telecom.PhoneAccountHandle, android.os.Bundle)
    {
        android.telecom.TelecomManager r0;
        android.telecom.PhoneAccountHandle r1;
        boolean $z0;
        android.os.RemoteException $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r6;
        android.os.Bundle r7;
        com.android.internal.telecom.ITelecomService r8;

        r0 := @this: android.telecom.TelecomManager;

        r1 := @parameter0: android.telecom.PhoneAccountHandle;

        r7 := @parameter1: android.os.Bundle;

     label1:
        $z0 = specialinvoke r0.<android.telecom.TelecomManager: boolean isServiceConnected()>();

        if $z0 == 0 goto label6;

        r8 = specialinvoke r0.<android.telecom.TelecomManager: com.android.internal.telecom.ITelecomService getTelecomService()>();

     label2:
        if r7 != null goto label5;

     label3:
        r7 = new android.os.Bundle;

        specialinvoke r7.<android.os.Bundle: void <init>()>();

     label4:
        goto label5;

     label5:
        interfaceinvoke r8.<com.android.internal.telecom.ITelecomService: void addNewUnknownCall(android.telecom.PhoneAccountHandle,android.os.Bundle)>(r1, r7);

     label6:
        goto label8;

     label7:
        $r2 := @caughtexception;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("RemoteException adding a new unknown call: ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TelecomManager", $r6, $r2);

     label8:
        return;

        catch android.os.RemoteException from label1 to label2 with label7;
        catch android.os.RemoteException from label3 to label4 with label7;
        catch android.os.RemoteException from label5 to label6 with label7;
    }

    public void cancelMissedCallsNotification()
    {
        android.telecom.TelecomManager r0;
        android.content.Context $r1;
        java.lang.String $r2;
        android.os.RemoteException $r3;
        com.android.internal.telecom.ITelecomService r4;

        r0 := @this: android.telecom.TelecomManager;

        r4 = specialinvoke r0.<android.telecom.TelecomManager: com.android.internal.telecom.ITelecomService getTelecomService()>();

        if r4 == null goto label4;

     label1:
        $r1 = r0.<android.telecom.TelecomManager: android.content.Context mContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: java.lang.String getOpPackageName()>();

        interfaceinvoke r4.<com.android.internal.telecom.ITelecomService: void cancelMissedCallsNotification(java.lang.String)>($r2);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TelecomManager", "Error calling ITelecomService#cancelMissedCallsNotification", $r3);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void clearAccounts()
    {
        android.telecom.TelecomManager r0;
        boolean $z0;
        com.android.internal.telecom.ITelecomService $r2;
        android.content.Context $r3;
        java.lang.String $r4;
        android.os.RemoteException $r5;

        r0 := @this: android.telecom.TelecomManager;

     label1:
        $z0 = specialinvoke r0.<android.telecom.TelecomManager: boolean isServiceConnected()>();

        if $z0 == 0 goto label2;

        $r2 = specialinvoke r0.<android.telecom.TelecomManager: com.android.internal.telecom.ITelecomService getTelecomService()>();

        $r3 = r0.<android.telecom.TelecomManager: android.content.Context mContext>;

        $r4 = virtualinvoke $r3.<android.content.Context: java.lang.String getPackageName()>();

        interfaceinvoke $r2.<com.android.internal.telecom.ITelecomService: void clearAccounts(java.lang.String)>($r4);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TelecomManager", "Error calling ITelecomService#clearAccounts", $r5);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void clearAccountsForPackage(java.lang.String)
    {
        android.telecom.TelecomManager r0;
        boolean $z0, $z1;
        com.android.internal.telecom.ITelecomService $r1;
        android.os.RemoteException $r2;
        java.lang.String r3;

        r0 := @this: android.telecom.TelecomManager;

        r3 := @parameter0: java.lang.String;

     label1:
        $z0 = specialinvoke r0.<android.telecom.TelecomManager: boolean isServiceConnected()>();

        if $z0 == 0 goto label2;

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r3);

        if $z1 != 0 goto label2;

        $r1 = specialinvoke r0.<android.telecom.TelecomManager: com.android.internal.telecom.ITelecomService getTelecomService()>();

        interfaceinvoke $r1.<com.android.internal.telecom.ITelecomService: void clearAccounts(java.lang.String)>(r3);

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TelecomManager", "Error calling ITelecomService#clearAccountsForPackage", $r2);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void clearPhoneAccounts()
    {
        android.telecom.TelecomManager r0;

        r0 := @this: android.telecom.TelecomManager;

        virtualinvoke r0.<android.telecom.TelecomManager: void clearAccounts()>();

        return;
    }

    public android.content.Intent createLaunchEmergencyDialerIntent(java.lang.String)
    {
        android.telecom.TelecomManager r0;
        java.lang.String r1;
        android.content.Intent $r2, r7;
        boolean $z0, $z1;
        android.net.Uri $r3;
        android.os.RemoteException $r5;
        com.android.internal.telecom.ITelecomService r6;

        r0 := @this: android.telecom.TelecomManager;

        r1 := @parameter0: java.lang.String;

        r6 = specialinvoke r0.<android.telecom.TelecomManager: com.android.internal.telecom.ITelecomService getTelecomService()>();

        if r6 == null goto label4;

     label1:
        r7 = interfaceinvoke r6.<com.android.internal.telecom.ITelecomService: android.content.Intent createLaunchEmergencyDialerIntent(java.lang.String)>(r1);

     label2:
        return r7;

     label3:
        $r5 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TelecomManager", "Error createLaunchEmergencyDialerIntent", $r5);

        goto label5;

     label4:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("TelecomManager", "createLaunchEmergencyDialerIntent - Telecom service not available.");

     label5:
        $r2 = new android.content.Intent;

        specialinvoke $r2.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.DIAL_EMERGENCY");

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 != 0 goto label6;

        $z1 = staticinvoke <android.text.TextUtils: boolean isDigitsOnly(java.lang.CharSequence)>(r1);

        if $z1 == 0 goto label6;

        $r3 = staticinvoke <android.net.Uri: android.net.Uri fromParts(java.lang.String,java.lang.String,java.lang.String)>("tel", r1, null);

        virtualinvoke $r2.<android.content.Intent: android.content.Intent setData(android.net.Uri)>($r3);

     label6:
        return $r2;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.content.Intent createManageBlockedNumbersIntent()
    {
        android.telecom.TelecomManager r0;
        com.android.internal.telecom.ITelecomService r1;
        android.os.RemoteException $r2;
        android.content.Intent r3;

        r0 := @this: android.telecom.TelecomManager;

        r1 = specialinvoke r0.<android.telecom.TelecomManager: com.android.internal.telecom.ITelecomService getTelecomService()>();

        r3 = null;

        if r1 == null goto label4;

     label1:
        r3 = interfaceinvoke r1.<com.android.internal.telecom.ITelecomService: android.content.Intent createManageBlockedNumbersIntent()>();

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TelecomManager", "Error calling ITelecomService#createManageBlockedNumbersIntent", $r2);

        r3 = null;

     label4:
        return r3;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.telecom.TelecomAnalytics dumpAnalytics()
    {
        android.telecom.TelecomManager r0;
        com.android.internal.telecom.ITelecomService r1;
        android.os.RemoteException $r2;
        android.telecom.TelecomAnalytics r3;

        r0 := @this: android.telecom.TelecomManager;

        r1 = specialinvoke r0.<android.telecom.TelecomManager: com.android.internal.telecom.ITelecomService getTelecomService()>();

        r3 = null;

        if r1 == null goto label4;

     label1:
        r3 = interfaceinvoke r1.<com.android.internal.telecom.ITelecomService: android.telecom.TelecomAnalytics dumpCallAnalytics()>();

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TelecomManager", "Error dumping call analytics", $r2);

        r3 = null;

     label4:
        return r3;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void enablePhoneAccount(android.telecom.PhoneAccountHandle, boolean)
    {
        android.telecom.TelecomManager r0;
        boolean z0;
        com.android.internal.telecom.ITelecomService r1;
        android.os.RemoteException $r2;
        android.telecom.PhoneAccountHandle r3;

        r0 := @this: android.telecom.TelecomManager;

        r3 := @parameter0: android.telecom.PhoneAccountHandle;

        z0 := @parameter1: boolean;

        r1 = specialinvoke r0.<android.telecom.TelecomManager: com.android.internal.telecom.ITelecomService getTelecomService()>();

        if r1 == null goto label4;

     label1:
        interfaceinvoke r1.<com.android.internal.telecom.ITelecomService: boolean enablePhoneAccount(android.telecom.PhoneAccountHandle,boolean)>(r3, z0);

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TelecomManager", "Error enablePhoneAbbount", $r2);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean endCall()
    {
        android.telecom.TelecomManager r0;
        boolean z0, $z1;
        com.android.internal.telecom.ITelecomService $r2;
        android.content.Context $r3;
        java.lang.String $r4;
        android.os.RemoteException $r5;

        r0 := @this: android.telecom.TelecomManager;

     label1:
        $z1 = specialinvoke r0.<android.telecom.TelecomManager: boolean isServiceConnected()>();

        if $z1 == 0 goto label3;

        $r2 = specialinvoke r0.<android.telecom.TelecomManager: com.android.internal.telecom.ITelecomService getTelecomService()>();

        $r3 = r0.<android.telecom.TelecomManager: android.content.Context mContext>;

        $r4 = virtualinvoke $r3.<android.content.Context: java.lang.String getPackageName()>();

        z0 = interfaceinvoke $r2.<com.android.internal.telecom.ITelecomService: boolean endCall(java.lang.String)>($r4);

     label2:
        return z0;

     label3:
        goto label5;

     label4:
        $r5 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TelecomManager", "Error calling ITelecomService#endCall", $r5);

     label5:
        return 0;

        catch android.os.RemoteException from label1 to label2 with label4;
    }

    public android.net.Uri getAdnUriForPhoneAccount(android.telecom.PhoneAccountHandle)
    {
        android.telecom.TelecomManager r0;
        com.android.internal.telecom.ITelecomService r1;
        android.content.Context $r2;
        java.lang.String $r3;
        android.os.RemoteException $r4;
        android.telecom.PhoneAccountHandle r5;
        android.net.Uri r6, $r8;

        r0 := @this: android.telecom.TelecomManager;

        r5 := @parameter0: android.telecom.PhoneAccountHandle;

        r1 = specialinvoke r0.<android.telecom.TelecomManager: com.android.internal.telecom.ITelecomService getTelecomService()>();

        if r1 == null goto label4;

        if r5 == null goto label4;

     label1:
        $r2 = r0.<android.telecom.TelecomManager: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: java.lang.String getOpPackageName()>();

        r6 = interfaceinvoke r1.<com.android.internal.telecom.ITelecomService: android.net.Uri getAdnUriForPhoneAccount(android.telecom.PhoneAccountHandle,java.lang.String)>(r5, $r3);

     label2:
        return r6;

     label3:
        $r4 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TelecomManager", "Error calling ITelecomService#getAdnUriForPhoneAccount", $r4);

     label4:
        $r8 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>("content://icc/adn");

        return $r8;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public java.util.List getAllPhoneAccountHandles()
    {
        android.telecom.TelecomManager r0;
        boolean $z0;
        java.util.List $r1, r4;
        com.android.internal.telecom.ITelecomService $r2;
        android.os.RemoteException $r3;

        r0 := @this: android.telecom.TelecomManager;

     label1:
        $z0 = specialinvoke r0.<android.telecom.TelecomManager: boolean isServiceConnected()>();

        if $z0 == 0 goto label3;

        $r2 = specialinvoke r0.<android.telecom.TelecomManager: com.android.internal.telecom.ITelecomService getTelecomService()>();

        r4 = interfaceinvoke $r2.<com.android.internal.telecom.ITelecomService: java.util.List getAllPhoneAccountHandles()>();

     label2:
        return r4;

     label3:
        goto label5;

     label4:
        $r3 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TelecomManager", "Error calling ITelecomService#getAllPhoneAccountHandles", $r3);

     label5:
        $r1 = <java.util.Collections: java.util.List EMPTY_LIST>;

        return $r1;

        catch android.os.RemoteException from label1 to label2 with label4;
    }

    public java.util.List getAllPhoneAccounts()
    {
        android.telecom.TelecomManager r0;
        boolean $z0;
        java.util.List $r1, r4;
        com.android.internal.telecom.ITelecomService $r2;
        android.os.RemoteException $r3;

        r0 := @this: android.telecom.TelecomManager;

     label1:
        $z0 = specialinvoke r0.<android.telecom.TelecomManager: boolean isServiceConnected()>();

        if $z0 == 0 goto label3;

        $r2 = specialinvoke r0.<android.telecom.TelecomManager: com.android.internal.telecom.ITelecomService getTelecomService()>();

        r4 = interfaceinvoke $r2.<com.android.internal.telecom.ITelecomService: java.util.List getAllPhoneAccounts()>();

     label2:
        return r4;

     label3:
        goto label5;

     label4:
        $r3 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TelecomManager", "Error calling ITelecomService#getAllPhoneAccounts", $r3);

     label5:
        $r1 = <java.util.Collections: java.util.List EMPTY_LIST>;

        return $r1;

        catch android.os.RemoteException from label1 to label2 with label4;
    }

    public int getAllPhoneAccountsCount()
    {
        android.telecom.TelecomManager r0;
        int i0;
        boolean $z0;
        com.android.internal.telecom.ITelecomService $r2;
        android.os.RemoteException $r3;

        r0 := @this: android.telecom.TelecomManager;

     label1:
        $z0 = specialinvoke r0.<android.telecom.TelecomManager: boolean isServiceConnected()>();

        if $z0 == 0 goto label3;

        $r2 = specialinvoke r0.<android.telecom.TelecomManager: com.android.internal.telecom.ITelecomService getTelecomService()>();

        i0 = interfaceinvoke $r2.<com.android.internal.telecom.ITelecomService: int getAllPhoneAccountsCount()>();

     label2:
        return i0;

     label3:
        goto label5;

     label4:
        $r3 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TelecomManager", "Error calling ITelecomService#getAllPhoneAccountsCount", $r3);

     label5:
        return 0;

        catch android.os.RemoteException from label1 to label2 with label4;
    }

    public java.util.List getCallCapablePhoneAccounts()
    {
        android.telecom.TelecomManager r0;
        java.util.List $r1;

        r0 := @this: android.telecom.TelecomManager;

        $r1 = virtualinvoke r0.<android.telecom.TelecomManager: java.util.List getCallCapablePhoneAccounts(boolean)>(0);

        return $r1;
    }

    public java.util.List getCallCapablePhoneAccounts(boolean)
    {
        android.telecom.TelecomManager r0;
        boolean z0, $z1;
        java.util.ArrayList $r2;
        com.android.internal.telecom.ITelecomService $r3;
        android.content.Context $r4, $r6;
        java.lang.String $r5, $r7, $r13;
        android.os.RemoteException $r8;
        java.lang.StringBuilder $r9;
        java.util.List r14;

        r0 := @this: android.telecom.TelecomManager;

        z0 := @parameter0: boolean;

     label1:
        $z1 = specialinvoke r0.<android.telecom.TelecomManager: boolean isServiceConnected()>();

        if $z1 == 0 goto label3;

        $r3 = specialinvoke r0.<android.telecom.TelecomManager: com.android.internal.telecom.ITelecomService getTelecomService()>();

        $r4 = r0.<android.telecom.TelecomManager: android.content.Context mContext>;

        $r5 = virtualinvoke $r4.<android.content.Context: java.lang.String getOpPackageName()>();

        $r6 = r0.<android.telecom.TelecomManager: android.content.Context mContext>;

        $r7 = virtualinvoke $r6.<android.content.Context: java.lang.String getAttributionTag()>();

        r14 = interfaceinvoke $r3.<com.android.internal.telecom.ITelecomService: java.util.List getCallCapablePhoneAccounts(boolean,java.lang.String,java.lang.String)>(z0, $r5, $r7);

     label2:
        return r14;

     label3:
        goto label5;

     label4:
        $r8 := @caughtexception;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error calling ITelecomService#getCallCapablePhoneAccounts(");

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r13 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TelecomManager", $r13, $r8);

     label5:
        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        return $r2;

        catch android.os.RemoteException from label1 to label2 with label4;
    }

    public int getCallState()
    {
        android.telecom.TelecomManager r0;
        int i0;
        boolean $z0;
        com.android.internal.telecom.ITelecomService $r2;
        android.os.RemoteException $r3;

        r0 := @this: android.telecom.TelecomManager;

     label1:
        $z0 = specialinvoke r0.<android.telecom.TelecomManager: boolean isServiceConnected()>();

        if $z0 == 0 goto label3;

        $r2 = specialinvoke r0.<android.telecom.TelecomManager: com.android.internal.telecom.ITelecomService getTelecomService()>();

        i0 = interfaceinvoke $r2.<com.android.internal.telecom.ITelecomService: int getCallState()>();

     label2:
        return i0;

     label3:
        goto label5;

     label4:
        $r3 := @caughtexception;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>("TelecomManager", "RemoteException calling getCallState().", $r3);

     label5:
        return 0;

        catch android.os.RemoteException from label1 to label2 with label4;
    }

    public android.telecom.PhoneAccountHandle getConnectionManager()
    {
        android.telecom.TelecomManager r0;
        android.telecom.PhoneAccountHandle $r1;

        r0 := @this: android.telecom.TelecomManager;

        $r1 = virtualinvoke r0.<android.telecom.TelecomManager: android.telecom.PhoneAccountHandle getSimCallManager()>();

        return $r1;
    }

    public int getCurrentTtyMode()
    {
        android.telecom.TelecomManager r0;
        int i0;
        boolean $z0;
        com.android.internal.telecom.ITelecomService $r2;
        android.content.Context $r3, $r5;
        java.lang.String $r4, $r6;
        android.os.RemoteException $r7;

        r0 := @this: android.telecom.TelecomManager;

     label1:
        $z0 = specialinvoke r0.<android.telecom.TelecomManager: boolean isServiceConnected()>();

        if $z0 == 0 goto label3;

        $r2 = specialinvoke r0.<android.telecom.TelecomManager: com.android.internal.telecom.ITelecomService getTelecomService()>();

        $r3 = r0.<android.telecom.TelecomManager: android.content.Context mContext>;

        $r4 = virtualinvoke $r3.<android.content.Context: java.lang.String getOpPackageName()>();

        $r5 = r0.<android.telecom.TelecomManager: android.content.Context mContext>;

        $r6 = virtualinvoke $r5.<android.content.Context: java.lang.String getAttributionTag()>();

        i0 = interfaceinvoke $r2.<com.android.internal.telecom.ITelecomService: int getCurrentTtyMode(java.lang.String,java.lang.String)>($r4, $r6);

     label2:
        return i0;

     label3:
        goto label5;

     label4:
        $r7 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TelecomManager", "RemoteException attempting to get the current TTY mode.", $r7);

     label5:
        return 0;

        catch android.os.RemoteException from label1 to label2 with label4;
    }

    public java.lang.String getDefaultDialerPackage()
    {
        android.telecom.TelecomManager r0;
        boolean $z0;
        com.android.internal.telecom.ITelecomService $r1;
        android.os.RemoteException $r2;
        java.lang.String r3;

        r0 := @this: android.telecom.TelecomManager;

     label1:
        $z0 = specialinvoke r0.<android.telecom.TelecomManager: boolean isServiceConnected()>();

        if $z0 == 0 goto label3;

        $r1 = specialinvoke r0.<android.telecom.TelecomManager: com.android.internal.telecom.ITelecomService getTelecomService()>();

        r3 = interfaceinvoke $r1.<com.android.internal.telecom.ITelecomService: java.lang.String getDefaultDialerPackage()>();

     label2:
        return r3;

     label3:
        goto label5;

     label4:
        $r2 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TelecomManager", "RemoteException attempting to get the default dialer package name.", $r2);

     label5:
        return null;

        catch android.os.RemoteException from label1 to label2 with label4;
    }

    public java.lang.String getDefaultDialerPackage(android.os.UserHandle)
    {
        android.telecom.TelecomManager r0;
        boolean $z0;
        com.android.internal.telecom.ITelecomService $r1;
        int $i0;
        android.os.RemoteException $r2;
        android.os.UserHandle r3;
        java.lang.String r4;

        r0 := @this: android.telecom.TelecomManager;

        r3 := @parameter0: android.os.UserHandle;

     label1:
        $z0 = specialinvoke r0.<android.telecom.TelecomManager: boolean isServiceConnected()>();

        if $z0 == 0 goto label3;

        $r1 = specialinvoke r0.<android.telecom.TelecomManager: com.android.internal.telecom.ITelecomService getTelecomService()>();

        $i0 = virtualinvoke r3.<android.os.UserHandle: int getIdentifier()>();

        r4 = interfaceinvoke $r1.<com.android.internal.telecom.ITelecomService: java.lang.String getDefaultDialerPackageForUser(int)>($i0);

     label2:
        return r4;

     label3:
        goto label5;

     label4:
        $r2 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TelecomManager", "RemoteException attempting to get the default dialer package name.", $r2);

     label5:
        return null;

        catch android.os.RemoteException from label1 to label2 with label4;
    }

    public android.telecom.PhoneAccountHandle getDefaultOutgoingPhoneAccount(java.lang.String)
    {
        android.telecom.TelecomManager r0;
        boolean $z0;
        com.android.internal.telecom.ITelecomService $r1;
        android.content.Context $r2, $r4;
        java.lang.String $r3, $r5, r7;
        android.os.RemoteException $r6;
        android.telecom.PhoneAccountHandle r8;

        r0 := @this: android.telecom.TelecomManager;

        r7 := @parameter0: java.lang.String;

     label1:
        $z0 = specialinvoke r0.<android.telecom.TelecomManager: boolean isServiceConnected()>();

        if $z0 == 0 goto label3;

        $r1 = specialinvoke r0.<android.telecom.TelecomManager: com.android.internal.telecom.ITelecomService getTelecomService()>();

        $r2 = r0.<android.telecom.TelecomManager: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: java.lang.String getOpPackageName()>();

        $r4 = r0.<android.telecom.TelecomManager: android.content.Context mContext>;

        $r5 = virtualinvoke $r4.<android.content.Context: java.lang.String getAttributionTag()>();

        r8 = interfaceinvoke $r1.<com.android.internal.telecom.ITelecomService: android.telecom.PhoneAccountHandle getDefaultOutgoingPhoneAccount(java.lang.String,java.lang.String,java.lang.String)>(r7, $r3, $r5);

     label2:
        return r8;

     label3:
        goto label5;

     label4:
        $r6 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TelecomManager", "Error calling ITelecomService#getDefaultOutgoingPhoneAccount", $r6);

     label5:
        return null;

        catch android.os.RemoteException from label1 to label2 with label4;
    }

    public android.content.ComponentName getDefaultPhoneApp()
    {
        android.telecom.TelecomManager r0;
        boolean $z0;
        com.android.internal.telecom.ITelecomService $r1;
        android.os.RemoteException $r2;
        android.content.ComponentName r3;

        r0 := @this: android.telecom.TelecomManager;

     label1:
        $z0 = specialinvoke r0.<android.telecom.TelecomManager: boolean isServiceConnected()>();

        if $z0 == 0 goto label3;

        $r1 = specialinvoke r0.<android.telecom.TelecomManager: com.android.internal.telecom.ITelecomService getTelecomService()>();

        r3 = interfaceinvoke $r1.<com.android.internal.telecom.ITelecomService: android.content.ComponentName getDefaultPhoneApp()>();

     label2:
        return r3;

     label3:
        goto label5;

     label4:
        $r2 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TelecomManager", "RemoteException attempting to get the default phone app.", $r2);

     label5:
        return null;

        catch android.os.RemoteException from label1 to label2 with label4;
    }

    public java.lang.String getLine1Number(android.telecom.PhoneAccountHandle)
    {
        android.telecom.TelecomManager r0;
        boolean $z0;
        com.android.internal.telecom.ITelecomService $r1;
        android.content.Context $r2, $r4;
        java.lang.String $r3, $r5, r8;
        android.os.RemoteException $r6;
        android.telecom.PhoneAccountHandle r7;

        r0 := @this: android.telecom.TelecomManager;

        r7 := @parameter0: android.telecom.PhoneAccountHandle;

     label1:
        $z0 = specialinvoke r0.<android.telecom.TelecomManager: boolean isServiceConnected()>();

        if $z0 == 0 goto label3;

        $r1 = specialinvoke r0.<android.telecom.TelecomManager: com.android.internal.telecom.ITelecomService getTelecomService()>();

        $r2 = r0.<android.telecom.TelecomManager: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: java.lang.String getOpPackageName()>();

        $r4 = r0.<android.telecom.TelecomManager: android.content.Context mContext>;

        $r5 = virtualinvoke $r4.<android.content.Context: java.lang.String getAttributionTag()>();

        r8 = interfaceinvoke $r1.<com.android.internal.telecom.ITelecomService: java.lang.String getLine1Number(android.telecom.PhoneAccountHandle,java.lang.String,java.lang.String)>(r7, $r3, $r5);

     label2:
        return r8;

     label3:
        goto label5;

     label4:
        $r6 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TelecomManager", "RemoteException calling ITelecomService#getLine1Number.", $r6);

     label5:
        return null;

        catch android.os.RemoteException from label1 to label2 with label4;
    }

    public android.telecom.PhoneAccount getPhoneAccount(android.telecom.PhoneAccountHandle)
    {
        android.telecom.TelecomManager r0;
        boolean $z0;
        com.android.internal.telecom.ITelecomService $r1;
        android.os.RemoteException $r2;
        android.telecom.PhoneAccountHandle r3;
        android.telecom.PhoneAccount r4;

        r0 := @this: android.telecom.TelecomManager;

        r3 := @parameter0: android.telecom.PhoneAccountHandle;

     label1:
        $z0 = specialinvoke r0.<android.telecom.TelecomManager: boolean isServiceConnected()>();

        if $z0 == 0 goto label3;

        $r1 = specialinvoke r0.<android.telecom.TelecomManager: com.android.internal.telecom.ITelecomService getTelecomService()>();

        r4 = interfaceinvoke $r1.<com.android.internal.telecom.ITelecomService: android.telecom.PhoneAccount getPhoneAccount(android.telecom.PhoneAccountHandle)>(r3);

     label2:
        return r4;

     label3:
        goto label5;

     label4:
        $r2 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TelecomManager", "Error calling ITelecomService#getPhoneAccount", $r2);

     label5:
        return null;

        catch android.os.RemoteException from label1 to label2 with label4;
    }

    public java.util.List getPhoneAccountsForPackage()
    {
        android.telecom.TelecomManager r0;
        boolean $z0;
        com.android.internal.telecom.ITelecomService $r1;
        android.content.Context $r2;
        java.lang.String $r3;
        android.os.RemoteException $r4;
        java.util.List r5;

        r0 := @this: android.telecom.TelecomManager;

     label1:
        $z0 = specialinvoke r0.<android.telecom.TelecomManager: boolean isServiceConnected()>();

        if $z0 == 0 goto label3;

        $r1 = specialinvoke r0.<android.telecom.TelecomManager: com.android.internal.telecom.ITelecomService getTelecomService()>();

        $r2 = r0.<android.telecom.TelecomManager: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: java.lang.String getPackageName()>();

        r5 = interfaceinvoke $r1.<com.android.internal.telecom.ITelecomService: java.util.List getPhoneAccountsForPackage(java.lang.String)>($r3);

     label2:
        return r5;

     label3:
        goto label5;

     label4:
        $r4 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TelecomManager", "Error calling ITelecomService#getPhoneAccountsForPackage", $r4);

     label5:
        return null;

        catch android.os.RemoteException from label1 to label2 with label4;
    }

    public java.util.List getPhoneAccountsSupportingScheme(java.lang.String)
    {
        android.telecom.TelecomManager r0;
        boolean $z0;
        java.util.ArrayList $r1;
        com.android.internal.telecom.ITelecomService $r2;
        android.content.Context $r3;
        java.lang.String $r4, r6;
        android.os.RemoteException $r5;
        java.util.List r7;

        r0 := @this: android.telecom.TelecomManager;

        r6 := @parameter0: java.lang.String;

     label1:
        $z0 = specialinvoke r0.<android.telecom.TelecomManager: boolean isServiceConnected()>();

        if $z0 == 0 goto label3;

        $r2 = specialinvoke r0.<android.telecom.TelecomManager: com.android.internal.telecom.ITelecomService getTelecomService()>();

        $r3 = r0.<android.telecom.TelecomManager: android.content.Context mContext>;

        $r4 = virtualinvoke $r3.<android.content.Context: java.lang.String getOpPackageName()>();

        r7 = interfaceinvoke $r2.<com.android.internal.telecom.ITelecomService: java.util.List getPhoneAccountsSupportingScheme(java.lang.String,java.lang.String)>(r6, $r4);

     label2:
        return r7;

     label3:
        goto label5;

     label4:
        $r5 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TelecomManager", "Error calling ITelecomService#getPhoneAccountsSupportingScheme", $r5);

     label5:
        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        return $r1;

        catch android.os.RemoteException from label1 to label2 with label4;
    }

    public java.util.List getSelfManagedPhoneAccounts()
    {
        android.telecom.TelecomManager r0;
        boolean $z0;
        java.util.ArrayList $r1;
        com.android.internal.telecom.ITelecomService $r2;
        android.content.Context $r3, $r5;
        java.lang.String $r4, $r6;
        android.os.RemoteException $r7;
        java.util.List r8;

        r0 := @this: android.telecom.TelecomManager;

     label1:
        $z0 = specialinvoke r0.<android.telecom.TelecomManager: boolean isServiceConnected()>();

        if $z0 == 0 goto label3;

        $r2 = specialinvoke r0.<android.telecom.TelecomManager: com.android.internal.telecom.ITelecomService getTelecomService()>();

        $r3 = r0.<android.telecom.TelecomManager: android.content.Context mContext>;

        $r4 = virtualinvoke $r3.<android.content.Context: java.lang.String getOpPackageName()>();

        $r5 = r0.<android.telecom.TelecomManager: android.content.Context mContext>;

        $r6 = virtualinvoke $r5.<android.content.Context: java.lang.String getAttributionTag()>();

        r8 = interfaceinvoke $r2.<com.android.internal.telecom.ITelecomService: java.util.List getSelfManagedPhoneAccounts(java.lang.String,java.lang.String)>($r4, $r6);

     label2:
        return r8;

     label3:
        goto label5;

     label4:
        $r7 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TelecomManager", "Error calling ITelecomService#getSelfManagedPhoneAccounts()", $r7);

     label5:
        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        return $r1;

        catch android.os.RemoteException from label1 to label2 with label4;
    }

    public android.telecom.PhoneAccountHandle getSimCallManager()
    {
        android.telecom.TelecomManager r0;
        boolean $z0;
        com.android.internal.telecom.ITelecomService $r1;
        int $i0;
        android.os.RemoteException $r2;
        android.telecom.PhoneAccountHandle r3;

        r0 := @this: android.telecom.TelecomManager;

     label1:
        $z0 = specialinvoke r0.<android.telecom.TelecomManager: boolean isServiceConnected()>();

        if $z0 == 0 goto label3;

        $r1 = specialinvoke r0.<android.telecom.TelecomManager: com.android.internal.telecom.ITelecomService getTelecomService()>();

        $i0 = staticinvoke <android.telephony.SubscriptionManager: int getDefaultSubscriptionId()>();

        r3 = interfaceinvoke $r1.<com.android.internal.telecom.ITelecomService: android.telecom.PhoneAccountHandle getSimCallManager(int)>($i0);

     label2:
        return r3;

     label3:
        goto label5;

     label4:
        $r2 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("TelecomManager", "Error calling ITelecomService#getSimCallManager");

     label5:
        return null;

        catch android.os.RemoteException from label1 to label2 with label4;
    }

    public android.telecom.PhoneAccountHandle getSimCallManager(int)
    {
        android.telecom.TelecomManager r0;
        int i0;
        boolean $z0;
        com.android.internal.telecom.ITelecomService $r1;
        android.os.RemoteException $r2;
        android.telecom.PhoneAccountHandle r3;

        r0 := @this: android.telecom.TelecomManager;

        i0 := @parameter0: int;

     label1:
        $z0 = specialinvoke r0.<android.telecom.TelecomManager: boolean isServiceConnected()>();

        if $z0 == 0 goto label3;

        $r1 = specialinvoke r0.<android.telecom.TelecomManager: com.android.internal.telecom.ITelecomService getTelecomService()>();

        r3 = interfaceinvoke $r1.<com.android.internal.telecom.ITelecomService: android.telecom.PhoneAccountHandle getSimCallManagerForUser(int)>(i0);

     label2:
        return r3;

     label3:
        goto label5;

     label4:
        $r2 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("TelecomManager", "Error calling ITelecomService#getSimCallManagerForUser");

     label5:
        return null;

        catch android.os.RemoteException from label1 to label2 with label4;
    }

    public android.telecom.PhoneAccountHandle getSimCallManagerForSubscription(int)
    {
        android.telecom.TelecomManager r0;
        int i0;
        boolean $z0;
        com.android.internal.telecom.ITelecomService $r1;
        android.os.RemoteException $r2;
        android.telecom.PhoneAccountHandle r3;

        r0 := @this: android.telecom.TelecomManager;

        i0 := @parameter0: int;

     label1:
        $z0 = specialinvoke r0.<android.telecom.TelecomManager: boolean isServiceConnected()>();

        if $z0 == 0 goto label3;

        $r1 = specialinvoke r0.<android.telecom.TelecomManager: com.android.internal.telecom.ITelecomService getTelecomService()>();

        r3 = interfaceinvoke $r1.<com.android.internal.telecom.ITelecomService: android.telecom.PhoneAccountHandle getSimCallManager(int)>(i0);

     label2:
        return r3;

     label3:
        goto label5;

     label4:
        $r2 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("TelecomManager", "Error calling ITelecomService#getSimCallManager");

     label5:
        return null;

        catch android.os.RemoteException from label1 to label2 with label4;
    }

    public java.lang.String getSystemDialerPackage()
    {
        android.telecom.TelecomManager r0;
        boolean $z0;
        com.android.internal.telecom.ITelecomService $r1;
        android.os.RemoteException $r2;
        java.lang.String r3;

        r0 := @this: android.telecom.TelecomManager;

     label1:
        $z0 = specialinvoke r0.<android.telecom.TelecomManager: boolean isServiceConnected()>();

        if $z0 == 0 goto label3;

        $r1 = specialinvoke r0.<android.telecom.TelecomManager: com.android.internal.telecom.ITelecomService getTelecomService()>();

        r3 = interfaceinvoke $r1.<com.android.internal.telecom.ITelecomService: java.lang.String getSystemDialerPackage()>();

     label2:
        return r3;

     label3:
        goto label5;

     label4:
        $r2 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TelecomManager", "RemoteException attempting to get the system dialer package name.", $r2);

     label5:
        return null;

        catch android.os.RemoteException from label1 to label2 with label4;
    }

    public android.telecom.PhoneAccountHandle getUserSelectedOutgoingPhoneAccount()
    {
        android.telecom.TelecomManager r0;
        boolean $z0;
        com.android.internal.telecom.ITelecomService $r1;
        android.content.Context $r2;
        java.lang.String $r3;
        android.os.RemoteException $r4;
        android.telecom.PhoneAccountHandle r5;

        r0 := @this: android.telecom.TelecomManager;

     label1:
        $z0 = specialinvoke r0.<android.telecom.TelecomManager: boolean isServiceConnected()>();

        if $z0 == 0 goto label3;

        $r1 = specialinvoke r0.<android.telecom.TelecomManager: com.android.internal.telecom.ITelecomService getTelecomService()>();

        $r2 = r0.<android.telecom.TelecomManager: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: java.lang.String getOpPackageName()>();

        r5 = interfaceinvoke $r1.<com.android.internal.telecom.ITelecomService: android.telecom.PhoneAccountHandle getUserSelectedOutgoingPhoneAccount(java.lang.String)>($r3);

     label2:
        return r5;

     label3:
        goto label5;

     label4:
        $r4 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TelecomManager", "Error calling ITelecomService#getUserSelectedOutgoingPhoneAccount", $r4);

     label5:
        return null;

        catch android.os.RemoteException from label1 to label2 with label4;
    }

    public java.lang.String getVoiceMailNumber(android.telecom.PhoneAccountHandle)
    {
        android.telecom.TelecomManager r0;
        boolean $z0;
        com.android.internal.telecom.ITelecomService $r1;
        android.content.Context $r2, $r4;
        java.lang.String $r3, $r5, r8;
        android.os.RemoteException $r6;
        android.telecom.PhoneAccountHandle r7;

        r0 := @this: android.telecom.TelecomManager;

        r7 := @parameter0: android.telecom.PhoneAccountHandle;

     label1:
        $z0 = specialinvoke r0.<android.telecom.TelecomManager: boolean isServiceConnected()>();

        if $z0 == 0 goto label3;

        $r1 = specialinvoke r0.<android.telecom.TelecomManager: com.android.internal.telecom.ITelecomService getTelecomService()>();

        $r2 = r0.<android.telecom.TelecomManager: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: java.lang.String getOpPackageName()>();

        $r4 = r0.<android.telecom.TelecomManager: android.content.Context mContext>;

        $r5 = virtualinvoke $r4.<android.content.Context: java.lang.String getAttributionTag()>();

        r8 = interfaceinvoke $r1.<com.android.internal.telecom.ITelecomService: java.lang.String getVoiceMailNumber(android.telecom.PhoneAccountHandle,java.lang.String,java.lang.String)>(r7, $r3, $r5);

     label2:
        return r8;

     label3:
        goto label5;

     label4:
        $r6 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TelecomManager", "RemoteException calling ITelecomService#hasVoiceMailNumber.", $r6);

     label5:
        return null;

        catch android.os.RemoteException from label1 to label2 with label4;
    }

    public void handleCallIntent(android.content.Intent, java.lang.String)
    {
        android.telecom.TelecomManager r0;
        boolean $z0;
        com.android.internal.telecom.ITelecomService $r1;
        android.os.RemoteException $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r6, r8;
        android.content.Intent r7;

        r0 := @this: android.telecom.TelecomManager;

        r7 := @parameter0: android.content.Intent;

        r8 := @parameter1: java.lang.String;

     label1:
        $z0 = specialinvoke r0.<android.telecom.TelecomManager: boolean isServiceConnected()>();

        if $z0 == 0 goto label2;

        $r1 = specialinvoke r0.<android.telecom.TelecomManager: com.android.internal.telecom.ITelecomService getTelecomService()>();

        interfaceinvoke $r1.<com.android.internal.telecom.ITelecomService: void handleCallIntent(android.content.Intent,java.lang.String)>(r7, r8);

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("RemoteException handleCallIntent: ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("TelecomManager", $r6);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean handleMmi(java.lang.String)
    {
        android.telecom.TelecomManager r0;
        com.android.internal.telecom.ITelecomService r1;
        boolean z0;
        android.content.Context $r2;
        java.lang.String $r3, r5;
        android.os.RemoteException $r4;

        r0 := @this: android.telecom.TelecomManager;

        r5 := @parameter0: java.lang.String;

        r1 = specialinvoke r0.<android.telecom.TelecomManager: com.android.internal.telecom.ITelecomService getTelecomService()>();

        if r1 == null goto label4;

     label1:
        $r2 = r0.<android.telecom.TelecomManager: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: java.lang.String getOpPackageName()>();

        z0 = interfaceinvoke r1.<com.android.internal.telecom.ITelecomService: boolean handlePinMmi(java.lang.String,java.lang.String)>(r5, $r3);

     label2:
        return z0;

     label3:
        $r4 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TelecomManager", "Error calling ITelecomService#handlePinMmi", $r4);

     label4:
        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean handleMmi(java.lang.String, android.telecom.PhoneAccountHandle)
    {
        android.telecom.TelecomManager r0;
        android.telecom.PhoneAccountHandle r1;
        com.android.internal.telecom.ITelecomService r2;
        boolean z0;
        android.content.Context $r3;
        java.lang.String $r4, r6;
        android.os.RemoteException $r5;

        r0 := @this: android.telecom.TelecomManager;

        r6 := @parameter0: java.lang.String;

        r1 := @parameter1: android.telecom.PhoneAccountHandle;

        r2 = specialinvoke r0.<android.telecom.TelecomManager: com.android.internal.telecom.ITelecomService getTelecomService()>();

        if r2 == null goto label4;

     label1:
        $r3 = r0.<android.telecom.TelecomManager: android.content.Context mContext>;

        $r4 = virtualinvoke $r3.<android.content.Context: java.lang.String getOpPackageName()>();

        z0 = interfaceinvoke r2.<com.android.internal.telecom.ITelecomService: boolean handlePinMmiForPhoneAccount(android.telecom.PhoneAccountHandle,java.lang.String,java.lang.String)>(r1, r6, $r4);

     label2:
        return z0;

     label3:
        $r5 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TelecomManager", "Error calling ITelecomService#handlePinMmi", $r5);

     label4:
        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean isInCall()
    {
        android.telecom.TelecomManager r0;
        boolean z0, $z1;
        com.android.internal.telecom.ITelecomService $r2;
        android.content.Context $r3, $r5;
        java.lang.String $r4, $r6;
        android.os.RemoteException $r7;

        r0 := @this: android.telecom.TelecomManager;

     label1:
        $z1 = specialinvoke r0.<android.telecom.TelecomManager: boolean isServiceConnected()>();

        if $z1 == 0 goto label3;

        $r2 = specialinvoke r0.<android.telecom.TelecomManager: com.android.internal.telecom.ITelecomService getTelecomService()>();

        $r3 = r0.<android.telecom.TelecomManager: android.content.Context mContext>;

        $r4 = virtualinvoke $r3.<android.content.Context: java.lang.String getOpPackageName()>();

        $r5 = r0.<android.telecom.TelecomManager: android.content.Context mContext>;

        $r6 = virtualinvoke $r5.<android.content.Context: java.lang.String getAttributionTag()>();

        z0 = interfaceinvoke $r2.<com.android.internal.telecom.ITelecomService: boolean isInCall(java.lang.String,java.lang.String)>($r4, $r6);

     label2:
        return z0;

     label3:
        goto label5;

     label4:
        $r7 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TelecomManager", "RemoteException calling isInCall().", $r7);

     label5:
        return 0;

        catch android.os.RemoteException from label1 to label2 with label4;
    }

    public boolean isInEmergencyCall()
    {
        android.telecom.TelecomManager r0;
        boolean z0, $z1;
        com.android.internal.telecom.ITelecomService $r3;
        android.os.RemoteException $r4;
        java.lang.StringBuilder $r5;
        java.lang.String $r8;

        r0 := @this: android.telecom.TelecomManager;

     label1:
        $z1 = specialinvoke r0.<android.telecom.TelecomManager: boolean isServiceConnected()>();

        if $z1 == 0 goto label3;

        $r3 = specialinvoke r0.<android.telecom.TelecomManager: com.android.internal.telecom.ITelecomService getTelecomService()>();

        z0 = interfaceinvoke $r3.<com.android.internal.telecom.ITelecomService: boolean isInEmergencyCall()>();

     label2:
        return z0;

     label3:
        return 0;

     label4:
        $r4 := @caughtexception;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("RemoteException isInEmergencyCall: ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("TelecomManager", $r8);

        return 0;

        catch android.os.RemoteException from label1 to label2 with label4;
    }

    public boolean isInManagedCall()
    {
        android.telecom.TelecomManager r0;
        boolean z0, $z1;
        com.android.internal.telecom.ITelecomService $r2;
        android.content.Context $r3, $r5;
        java.lang.String $r4, $r6;
        android.os.RemoteException $r7;

        r0 := @this: android.telecom.TelecomManager;

     label1:
        $z1 = specialinvoke r0.<android.telecom.TelecomManager: boolean isServiceConnected()>();

        if $z1 == 0 goto label3;

        $r2 = specialinvoke r0.<android.telecom.TelecomManager: com.android.internal.telecom.ITelecomService getTelecomService()>();

        $r3 = r0.<android.telecom.TelecomManager: android.content.Context mContext>;

        $r4 = virtualinvoke $r3.<android.content.Context: java.lang.String getOpPackageName()>();

        $r5 = r0.<android.telecom.TelecomManager: android.content.Context mContext>;

        $r6 = virtualinvoke $r5.<android.content.Context: java.lang.String getAttributionTag()>();

        z0 = interfaceinvoke $r2.<com.android.internal.telecom.ITelecomService: boolean isInManagedCall(java.lang.String,java.lang.String)>($r4, $r6);

     label2:
        return z0;

     label3:
        goto label5;

     label4:
        $r7 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TelecomManager", "RemoteException calling isInManagedCall().", $r7);

     label5:
        return 0;

        catch android.os.RemoteException from label1 to label2 with label4;
    }

    public boolean isIncomingCallPermitted(android.telecom.PhoneAccountHandle)
    {
        android.telecom.TelecomManager r0;
        com.android.internal.telecom.ITelecomService r1;
        boolean z0;
        android.os.RemoteException $r2;
        android.telecom.PhoneAccountHandle r3;

        r0 := @this: android.telecom.TelecomManager;

        r3 := @parameter0: android.telecom.PhoneAccountHandle;

        if r3 != null goto label1;

        return 0;

     label1:
        r1 = specialinvoke r0.<android.telecom.TelecomManager: com.android.internal.telecom.ITelecomService getTelecomService()>();

        if r1 == null goto label5;

     label2:
        z0 = interfaceinvoke r1.<com.android.internal.telecom.ITelecomService: boolean isIncomingCallPermitted(android.telecom.PhoneAccountHandle)>(r3);

     label3:
        return z0;

     label4:
        $r2 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TelecomManager", "Error isIncomingCallPermitted", $r2);

     label5:
        return 0;

        catch android.os.RemoteException from label2 to label3 with label4;
    }

    public boolean isOutgoingCallPermitted(android.telecom.PhoneAccountHandle)
    {
        android.telecom.TelecomManager r0;
        com.android.internal.telecom.ITelecomService r1;
        boolean z0;
        android.os.RemoteException $r2;
        android.telecom.PhoneAccountHandle r3;

        r0 := @this: android.telecom.TelecomManager;

        r3 := @parameter0: android.telecom.PhoneAccountHandle;

        r1 = specialinvoke r0.<android.telecom.TelecomManager: com.android.internal.telecom.ITelecomService getTelecomService()>();

        if r1 == null goto label4;

     label1:
        z0 = interfaceinvoke r1.<com.android.internal.telecom.ITelecomService: boolean isOutgoingCallPermitted(android.telecom.PhoneAccountHandle)>(r3);

     label2:
        return z0;

     label3:
        $r2 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TelecomManager", "Error isOutgoingCallPermitted", $r2);

     label4:
        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean isRinging()
    {
        android.telecom.TelecomManager r0;
        boolean z0, $z1;
        com.android.internal.telecom.ITelecomService $r2;
        android.content.Context $r3;
        java.lang.String $r4;
        android.os.RemoteException $r5;

        r0 := @this: android.telecom.TelecomManager;

     label1:
        $z1 = specialinvoke r0.<android.telecom.TelecomManager: boolean isServiceConnected()>();

        if $z1 == 0 goto label3;

        $r2 = specialinvoke r0.<android.telecom.TelecomManager: com.android.internal.telecom.ITelecomService getTelecomService()>();

        $r3 = r0.<android.telecom.TelecomManager: android.content.Context mContext>;

        $r4 = virtualinvoke $r3.<android.content.Context: java.lang.String getOpPackageName()>();

        z0 = interfaceinvoke $r2.<com.android.internal.telecom.ITelecomService: boolean isRinging(java.lang.String)>($r4);

     label2:
        return z0;

     label3:
        goto label5;

     label4:
        $r5 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TelecomManager", "RemoteException attempting to get ringing state of phone app.", $r5);

     label5:
        return 0;

        catch android.os.RemoteException from label1 to label2 with label4;
    }

    public boolean isTtySupported()
    {
        android.telecom.TelecomManager r0;
        boolean z0, $z1;
        com.android.internal.telecom.ITelecomService $r2;
        android.content.Context $r3, $r5;
        java.lang.String $r4, $r6;
        android.os.RemoteException $r7;

        r0 := @this: android.telecom.TelecomManager;

     label1:
        $z1 = specialinvoke r0.<android.telecom.TelecomManager: boolean isServiceConnected()>();

        if $z1 == 0 goto label3;

        $r2 = specialinvoke r0.<android.telecom.TelecomManager: com.android.internal.telecom.ITelecomService getTelecomService()>();

        $r3 = r0.<android.telecom.TelecomManager: android.content.Context mContext>;

        $r4 = virtualinvoke $r3.<android.content.Context: java.lang.String getOpPackageName()>();

        $r5 = r0.<android.telecom.TelecomManager: android.content.Context mContext>;

        $r6 = virtualinvoke $r5.<android.content.Context: java.lang.String getAttributionTag()>();

        z0 = interfaceinvoke $r2.<com.android.internal.telecom.ITelecomService: boolean isTtySupported(java.lang.String,java.lang.String)>($r4, $r6);

     label2:
        return z0;

     label3:
        goto label5;

     label4:
        $r7 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TelecomManager", "RemoteException attempting to get TTY supported state.", $r7);

     label5:
        return 0;

        catch android.os.RemoteException from label1 to label2 with label4;
    }

    public boolean isVoiceMailNumber(android.telecom.PhoneAccountHandle, java.lang.String)
    {
        android.telecom.TelecomManager r0;
        java.lang.String r1, $r4, $r6;
        boolean z0, $z1;
        com.android.internal.telecom.ITelecomService $r2;
        android.content.Context $r3, $r5;
        android.os.RemoteException $r7;
        android.telecom.PhoneAccountHandle r8;

        r0 := @this: android.telecom.TelecomManager;

        r8 := @parameter0: android.telecom.PhoneAccountHandle;

        r1 := @parameter1: java.lang.String;

     label1:
        $z1 = specialinvoke r0.<android.telecom.TelecomManager: boolean isServiceConnected()>();

        if $z1 == 0 goto label3;

        $r2 = specialinvoke r0.<android.telecom.TelecomManager: com.android.internal.telecom.ITelecomService getTelecomService()>();

        $r3 = r0.<android.telecom.TelecomManager: android.content.Context mContext>;

        $r4 = virtualinvoke $r3.<android.content.Context: java.lang.String getOpPackageName()>();

        $r5 = r0.<android.telecom.TelecomManager: android.content.Context mContext>;

        $r6 = virtualinvoke $r5.<android.content.Context: java.lang.String getAttributionTag()>();

        z0 = interfaceinvoke $r2.<com.android.internal.telecom.ITelecomService: boolean isVoiceMailNumber(android.telecom.PhoneAccountHandle,java.lang.String,java.lang.String,java.lang.String)>(r8, r1, $r4, $r6);

     label2:
        return z0;

     label3:
        goto label5;

     label4:
        $r7 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TelecomManager", "RemoteException calling ITelecomService#isVoiceMailNumber.", $r7);

     label5:
        return 0;

        catch android.os.RemoteException from label1 to label2 with label4;
    }

    public void placeCall(android.net.Uri, android.os.Bundle)
    {
        android.telecom.TelecomManager r0;
        com.android.internal.telecom.ITelecomService r1;
        android.content.Context $r2, $r4;
        java.lang.String $r3, $r5;
        android.os.RemoteException $r6;
        android.net.Uri r7;
        android.os.Bundle r8;

        r0 := @this: android.telecom.TelecomManager;

        r7 := @parameter0: android.net.Uri;

        r8 := @parameter1: android.os.Bundle;

        r1 = specialinvoke r0.<android.telecom.TelecomManager: com.android.internal.telecom.ITelecomService getTelecomService()>();

        if r1 == null goto label8;

        if r7 != null goto label1;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("TelecomManager", "Cannot place call to empty address.");

     label1:
        if r8 != null goto label5;

     label2:
        r8 = new android.os.Bundle;

        specialinvoke r8.<android.os.Bundle: void <init>()>();

     label3:
        goto label5;

     label4:
        $r6 := @caughtexception;

        goto label7;

     label5:
        $r2 = r0.<android.telecom.TelecomManager: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: java.lang.String getOpPackageName()>();

        $r4 = r0.<android.telecom.TelecomManager: android.content.Context mContext>;

        $r5 = virtualinvoke $r4.<android.content.Context: java.lang.String getAttributionTag()>();

        interfaceinvoke r1.<com.android.internal.telecom.ITelecomService: void placeCall(android.net.Uri,android.os.Bundle,java.lang.String,java.lang.String)>(r7, r8, $r3, $r5);

     label6:
        goto label8;

     label7:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TelecomManager", "Error calling ITelecomService#placeCall", $r6);

     label8:
        return;

        catch android.os.RemoteException from label2 to label3 with label4;
        catch android.os.RemoteException from label5 to label6 with label4;
    }

    public void registerPhoneAccount(android.telecom.PhoneAccount)
    {
        android.telecom.TelecomManager r0;
        boolean $z0;
        com.android.internal.telecom.ITelecomService $r1;
        android.os.RemoteException $r2;
        android.telecom.PhoneAccount r3;

        r0 := @this: android.telecom.TelecomManager;

        r3 := @parameter0: android.telecom.PhoneAccount;

     label1:
        $z0 = specialinvoke r0.<android.telecom.TelecomManager: boolean isServiceConnected()>();

        if $z0 == 0 goto label2;

        $r1 = specialinvoke r0.<android.telecom.TelecomManager: com.android.internal.telecom.ITelecomService getTelecomService()>();

        interfaceinvoke $r1.<com.android.internal.telecom.ITelecomService: void registerPhoneAccount(android.telecom.PhoneAccount)>(r3);

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TelecomManager", "Error calling ITelecomService#registerPhoneAccount", $r2);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean setDefaultDialer(java.lang.String)
    {
        android.telecom.TelecomManager r0;
        boolean z0, $z1;
        com.android.internal.telecom.ITelecomService $r1;
        android.os.RemoteException $r2;
        java.lang.String r3;

        r0 := @this: android.telecom.TelecomManager;

        r3 := @parameter0: java.lang.String;

     label1:
        $z1 = specialinvoke r0.<android.telecom.TelecomManager: boolean isServiceConnected()>();

        if $z1 == 0 goto label3;

        $r1 = specialinvoke r0.<android.telecom.TelecomManager: com.android.internal.telecom.ITelecomService getTelecomService()>();

        z0 = interfaceinvoke $r1.<com.android.internal.telecom.ITelecomService: boolean setDefaultDialer(java.lang.String)>(r3);

     label2:
        return z0;

     label3:
        goto label5;

     label4:
        $r2 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TelecomManager", "RemoteException attempting to set the default dialer.", $r2);

     label5:
        return 0;

        catch android.os.RemoteException from label1 to label2 with label4;
    }

    public void setUserSelectedOutgoingPhoneAccount(android.telecom.PhoneAccountHandle)
    {
        android.telecom.TelecomManager r0;
        boolean $z0;
        com.android.internal.telecom.ITelecomService $r1;
        android.os.RemoteException $r2;
        android.telecom.PhoneAccountHandle r3;

        r0 := @this: android.telecom.TelecomManager;

        r3 := @parameter0: android.telecom.PhoneAccountHandle;

     label1:
        $z0 = specialinvoke r0.<android.telecom.TelecomManager: boolean isServiceConnected()>();

        if $z0 == 0 goto label2;

        $r1 = specialinvoke r0.<android.telecom.TelecomManager: com.android.internal.telecom.ITelecomService getTelecomService()>();

        interfaceinvoke $r1.<com.android.internal.telecom.ITelecomService: void setUserSelectedOutgoingPhoneAccount(android.telecom.PhoneAccountHandle)>(r3);

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("TelecomManager", "Error calling ITelecomService#setUserSelectedOutgoingPhoneAccount");

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void showInCallScreen(boolean)
    {
        android.telecom.TelecomManager r0;
        boolean z0;
        android.content.Context $r1, $r3;
        java.lang.String $r2, $r4;
        android.os.RemoteException $r5;
        com.android.internal.telecom.ITelecomService r6;

        r0 := @this: android.telecom.TelecomManager;

        z0 := @parameter0: boolean;

        r6 = specialinvoke r0.<android.telecom.TelecomManager: com.android.internal.telecom.ITelecomService getTelecomService()>();

        if r6 == null goto label4;

     label1:
        $r1 = r0.<android.telecom.TelecomManager: android.content.Context mContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: java.lang.String getOpPackageName()>();

        $r3 = r0.<android.telecom.TelecomManager: android.content.Context mContext>;

        $r4 = virtualinvoke $r3.<android.content.Context: java.lang.String getAttributionTag()>();

        interfaceinvoke r6.<com.android.internal.telecom.ITelecomService: void showInCallScreen(boolean,java.lang.String,java.lang.String)>(z0, $r2, $r4);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TelecomManager", "Error calling ITelecomService#showCallScreen", $r5);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void silenceRinger()
    {
        android.telecom.TelecomManager r0;
        boolean $z0;
        com.android.internal.telecom.ITelecomService $r2;
        android.content.Context $r3;
        java.lang.String $r4;
        android.os.RemoteException $r5;

        r0 := @this: android.telecom.TelecomManager;

     label1:
        $z0 = specialinvoke r0.<android.telecom.TelecomManager: boolean isServiceConnected()>();

        if $z0 == 0 goto label2;

        $r2 = specialinvoke r0.<android.telecom.TelecomManager: com.android.internal.telecom.ITelecomService getTelecomService()>();

        $r3 = r0.<android.telecom.TelecomManager: android.content.Context mContext>;

        $r4 = virtualinvoke $r3.<android.content.Context: java.lang.String getOpPackageName()>();

        interfaceinvoke $r2.<com.android.internal.telecom.ITelecomService: void silenceRinger(java.lang.String)>($r4);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TelecomManager", "Error calling ITelecomService#silenceRinger", $r5);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void startConference(java.util.List, android.os.Bundle)
    {
        android.telecom.TelecomManager r0;
        android.os.Bundle r1;
        com.android.internal.telecom.ITelecomService r2;
        android.content.Context $r3;
        java.lang.String $r4;
        android.os.RemoteException $r5;
        java.util.List r6;

        r0 := @this: android.telecom.TelecomManager;

        r6 := @parameter0: java.util.List;

        r1 := @parameter1: android.os.Bundle;

        r2 = specialinvoke r0.<android.telecom.TelecomManager: com.android.internal.telecom.ITelecomService getTelecomService()>();

        if r2 == null goto label4;

     label1:
        $r3 = r0.<android.telecom.TelecomManager: android.content.Context mContext>;

        $r4 = virtualinvoke $r3.<android.content.Context: java.lang.String getOpPackageName()>();

        interfaceinvoke r2.<com.android.internal.telecom.ITelecomService: void startConference(java.util.List,android.os.Bundle,java.lang.String)>(r6, r1, $r4);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TelecomManager", "Error calling ITelecomService#placeCall", $r5);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void unregisterPhoneAccount(android.telecom.PhoneAccountHandle)
    {
        android.telecom.TelecomManager r0;
        boolean $z0;
        com.android.internal.telecom.ITelecomService $r1;
        android.os.RemoteException $r2;
        android.telecom.PhoneAccountHandle r3;

        r0 := @this: android.telecom.TelecomManager;

        r3 := @parameter0: android.telecom.PhoneAccountHandle;

     label1:
        $z0 = specialinvoke r0.<android.telecom.TelecomManager: boolean isServiceConnected()>();

        if $z0 == 0 goto label2;

        $r1 = specialinvoke r0.<android.telecom.TelecomManager: com.android.internal.telecom.ITelecomService getTelecomService()>();

        interfaceinvoke $r1.<com.android.internal.telecom.ITelecomService: void unregisterPhoneAccount(android.telecom.PhoneAccountHandle)>(r3);

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TelecomManager", "Error calling ITelecomService#unregisterPhoneAccount", $r2);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }
}
