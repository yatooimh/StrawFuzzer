public class android.telecom.VideoCallImpl extends android.telecom.InCallService$VideoCall
{
    private final android.telecom.VideoCallImpl$VideoCallListenerBinder mBinder;
    private android.telecom.InCallService$VideoCall$Callback mCallback;
    private final java.lang.String mCallingPackageName;
    private android.os.IBinder$DeathRecipient mDeathRecipient;
    private android.os.Handler mHandler;
    private int mTargetSdkVersion;
    private final com.android.internal.telecom.IVideoProvider mVideoProvider;
    private int mVideoQuality;
    private int mVideoState;

    void <init>(com.android.internal.telecom.IVideoProvider, java.lang.String, int) throws android.os.RemoteException
    {
        android.telecom.VideoCallImpl r0;
        java.lang.String r1;
        int i0;
        android.telecom.VideoCallImpl$1 $r2;
        android.os.IBinder $r3;
        android.os.IBinder$DeathRecipient $r4;
        android.telecom.VideoCallImpl$VideoCallListenerBinder $r5;
        com.android.internal.telecom.IVideoProvider $r6, r7;

        r0 := @this: android.telecom.VideoCallImpl;

        r7 := @parameter0: com.android.internal.telecom.IVideoProvider;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        specialinvoke r0.<android.telecom.InCallService$VideoCall: void <init>()>();

        r0.<android.telecom.VideoCallImpl: int mVideoQuality> = 0;

        r0.<android.telecom.VideoCallImpl: int mVideoState> = 0;

        $r2 = new android.telecom.VideoCallImpl$1;

        specialinvoke $r2.<android.telecom.VideoCallImpl$1: void <init>(android.telecom.VideoCallImpl)>(r0);

        r0.<android.telecom.VideoCallImpl: android.os.IBinder$DeathRecipient mDeathRecipient> = $r2;

        r0.<android.telecom.VideoCallImpl: com.android.internal.telecom.IVideoProvider mVideoProvider> = r7;

        $r3 = interfaceinvoke r7.<com.android.internal.telecom.IVideoProvider: android.os.IBinder asBinder()>();

        $r4 = r0.<android.telecom.VideoCallImpl: android.os.IBinder$DeathRecipient mDeathRecipient>;

        interfaceinvoke $r3.<android.os.IBinder: void linkToDeath(android.os.IBinder$DeathRecipient,int)>($r4, 0);

        $r5 = new android.telecom.VideoCallImpl$VideoCallListenerBinder;

        specialinvoke $r5.<android.telecom.VideoCallImpl$VideoCallListenerBinder: void <init>(android.telecom.VideoCallImpl,android.telecom.VideoCallImpl$1)>(r0, null);

        r0.<android.telecom.VideoCallImpl: android.telecom.VideoCallImpl$VideoCallListenerBinder mBinder> = $r5;

        $r6 = r0.<android.telecom.VideoCallImpl: com.android.internal.telecom.IVideoProvider mVideoProvider>;

        interfaceinvoke $r6.<com.android.internal.telecom.IVideoProvider: void addVideoCallback(android.os.IBinder)>($r5);

        r0.<android.telecom.VideoCallImpl: java.lang.String mCallingPackageName> = r1;

        virtualinvoke r0.<android.telecom.VideoCallImpl: void setTargetSdkVersion(int)>(i0);

        return;
    }

    static com.android.internal.telecom.IVideoProvider access$000(android.telecom.VideoCallImpl)
    {
        android.telecom.VideoCallImpl r0;
        com.android.internal.telecom.IVideoProvider $r1;

        r0 := @parameter0: android.telecom.VideoCallImpl;

        $r1 = r0.<android.telecom.VideoCallImpl: com.android.internal.telecom.IVideoProvider mVideoProvider>;

        return $r1;
    }

    static android.os.Handler access$100(android.telecom.VideoCallImpl)
    {
        android.telecom.VideoCallImpl r0;
        android.os.Handler $r1;

        r0 := @parameter0: android.telecom.VideoCallImpl;

        $r1 = r0.<android.telecom.VideoCallImpl: android.os.Handler mHandler>;

        return $r1;
    }

    static android.telecom.InCallService$VideoCall$Callback access$200(android.telecom.VideoCallImpl)
    {
        android.telecom.VideoCallImpl r0;
        android.telecom.InCallService$VideoCall$Callback $r1;

        r0 := @parameter0: android.telecom.VideoCallImpl;

        $r1 = r0.<android.telecom.VideoCallImpl: android.telecom.InCallService$VideoCall$Callback mCallback>;

        return $r1;
    }

    static int access$302(android.telecom.VideoCallImpl, int)
    {
        android.telecom.VideoCallImpl r0;
        int i0;

        r0 := @parameter0: android.telecom.VideoCallImpl;

        i0 := @parameter1: int;

        r0.<android.telecom.VideoCallImpl: int mVideoQuality> = i0;

        return i0;
    }

    public void destroy()
    {
        android.telecom.VideoCallImpl r0;
        android.telecom.InCallService$VideoCall$Callback $r2;
        com.android.internal.telecom.IVideoProvider $r3;
        android.os.IBinder $r4;
        android.os.IBinder$DeathRecipient $r5;
        java.lang.Throwable $r6;

        r0 := @this: android.telecom.VideoCallImpl;

        $r2 = r0.<android.telecom.VideoCallImpl: android.telecom.InCallService$VideoCall$Callback mCallback>;

        virtualinvoke r0.<android.telecom.VideoCallImpl: void unregisterCallback(android.telecom.InCallService$VideoCall$Callback)>($r2);

     label1:
        $r3 = r0.<android.telecom.VideoCallImpl: com.android.internal.telecom.IVideoProvider mVideoProvider>;

        $r4 = interfaceinvoke $r3.<com.android.internal.telecom.IVideoProvider: android.os.IBinder asBinder()>();

        $r5 = r0.<android.telecom.VideoCallImpl: android.os.IBinder$DeathRecipient mDeathRecipient>;

        interfaceinvoke $r4.<android.os.IBinder: boolean unlinkToDeath(android.os.IBinder$DeathRecipient,int)>($r5, 0);

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

     label4:
        return;

        catch java.util.NoSuchElementException from label1 to label2 with label3;
    }

    public com.android.internal.telecom.IVideoProvider getVideoProvider()
    {
        android.telecom.VideoCallImpl r0;
        com.android.internal.telecom.IVideoProvider $r1;

        r0 := @this: android.telecom.VideoCallImpl;

        $r1 = r0.<android.telecom.VideoCallImpl: com.android.internal.telecom.IVideoProvider mVideoProvider>;

        return $r1;
    }

    public void registerCallback(android.telecom.InCallService$VideoCall$Callback)
    {
        android.telecom.VideoCallImpl r0;
        android.telecom.InCallService$VideoCall$Callback r1;

        r0 := @this: android.telecom.VideoCallImpl;

        r1 := @parameter0: android.telecom.InCallService$VideoCall$Callback;

        virtualinvoke r0.<android.telecom.VideoCallImpl: void registerCallback(android.telecom.InCallService$VideoCall$Callback,android.os.Handler)>(r1, null);

        return;
    }

    public void registerCallback(android.telecom.InCallService$VideoCall$Callback, android.os.Handler)
    {
        android.telecom.VideoCallImpl r0;
        android.telecom.InCallService$VideoCall$Callback r1;
        android.os.Handler r2;
        android.telecom.VideoCallImpl$MessageHandler $r3, $r5;
        android.os.Looper $r4, $r6;

        r0 := @this: android.telecom.VideoCallImpl;

        r1 := @parameter0: android.telecom.InCallService$VideoCall$Callback;

        r2 := @parameter1: android.os.Handler;

        r0.<android.telecom.VideoCallImpl: android.telecom.InCallService$VideoCall$Callback mCallback> = r1;

        if r2 != null goto label1;

        $r5 = new android.telecom.VideoCallImpl$MessageHandler;

        $r6 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        specialinvoke $r5.<android.telecom.VideoCallImpl$MessageHandler: void <init>(android.telecom.VideoCallImpl,android.os.Looper)>(r0, $r6);

        r0.<android.telecom.VideoCallImpl: android.os.Handler mHandler> = $r5;

        goto label2;

     label1:
        $r3 = new android.telecom.VideoCallImpl$MessageHandler;

        $r4 = virtualinvoke r2.<android.os.Handler: android.os.Looper getLooper()>();

        specialinvoke $r3.<android.telecom.VideoCallImpl$MessageHandler: void <init>(android.telecom.VideoCallImpl,android.os.Looper)>(r0, $r4);

        r0.<android.telecom.VideoCallImpl: android.os.Handler mHandler> = $r3;

     label2:
        return;
    }

    public void requestCallDataUsage()
    {
        android.telecom.VideoCallImpl r0;
        com.android.internal.telecom.IVideoProvider $r2;
        android.os.RemoteException $r3;

        r0 := @this: android.telecom.VideoCallImpl;

     label1:
        $r2 = r0.<android.telecom.VideoCallImpl: com.android.internal.telecom.IVideoProvider mVideoProvider>;

        interfaceinvoke $r2.<com.android.internal.telecom.IVideoProvider: void requestCallDataUsage()>();

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void requestCameraCapabilities()
    {
        android.telecom.VideoCallImpl r0;
        com.android.internal.telecom.IVideoProvider $r2;
        android.os.RemoteException $r3;

        r0 := @this: android.telecom.VideoCallImpl;

     label1:
        $r2 = r0.<android.telecom.VideoCallImpl: com.android.internal.telecom.IVideoProvider mVideoProvider>;

        interfaceinvoke $r2.<com.android.internal.telecom.IVideoProvider: void requestCameraCapabilities()>();

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void sendSessionModifyRequest(android.telecom.VideoProfile)
    {
        android.telecom.VideoCallImpl r0;
        android.telecom.VideoProfile r1, r4;
        int $i0, $i1;
        com.android.internal.telecom.IVideoProvider $r2;
        android.os.RemoteException $r3;

        r0 := @this: android.telecom.VideoCallImpl;

        r4 := @parameter0: android.telecom.VideoProfile;

     label1:
        r1 = new android.telecom.VideoProfile;

        $i1 = r0.<android.telecom.VideoCallImpl: int mVideoState>;

        $i0 = r0.<android.telecom.VideoCallImpl: int mVideoQuality>;

        specialinvoke r1.<android.telecom.VideoProfile: void <init>(int,int)>($i1, $i0);

        $r2 = r0.<android.telecom.VideoCallImpl: com.android.internal.telecom.IVideoProvider mVideoProvider>;

        interfaceinvoke $r2.<com.android.internal.telecom.IVideoProvider: void sendSessionModifyRequest(android.telecom.VideoProfile,android.telecom.VideoProfile)>(r1, r4);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void sendSessionModifyResponse(android.telecom.VideoProfile)
    {
        android.telecom.VideoCallImpl r0;
        com.android.internal.telecom.IVideoProvider $r1;
        android.os.RemoteException $r2;
        android.telecom.VideoProfile r3;

        r0 := @this: android.telecom.VideoCallImpl;

        r3 := @parameter0: android.telecom.VideoProfile;

     label1:
        $r1 = r0.<android.telecom.VideoCallImpl: com.android.internal.telecom.IVideoProvider mVideoProvider>;

        interfaceinvoke $r1.<com.android.internal.telecom.IVideoProvider: void sendSessionModifyResponse(android.telecom.VideoProfile)>(r3);

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void setCamera(java.lang.String)
    {
        android.telecom.VideoCallImpl r0;
        java.lang.Object[] $r1;
        java.lang.String $r2, $r3, r6;
        int $i0;
        com.android.internal.telecom.IVideoProvider $r4;
        android.os.RemoteException $r5;

        r0 := @this: android.telecom.VideoCallImpl;

        r6 := @parameter0: java.lang.String;

     label1:
        $r1 = newarray (java.lang.Object)[2];

        $r1[0] = r6;

        $r2 = r0.<android.telecom.VideoCallImpl: java.lang.String mCallingPackageName>;

        $r1[1] = $r2;

        staticinvoke <android.telecom.Log: void w(java.lang.Object,java.lang.String,java.lang.Object[])>(r0, "setCamera: cameraId=%s, calling=%s", $r1);

        $r4 = r0.<android.telecom.VideoCallImpl: com.android.internal.telecom.IVideoProvider mVideoProvider>;

        $r3 = r0.<android.telecom.VideoCallImpl: java.lang.String mCallingPackageName>;

        $i0 = r0.<android.telecom.VideoCallImpl: int mTargetSdkVersion>;

        interfaceinvoke $r4.<com.android.internal.telecom.IVideoProvider: void setCamera(java.lang.String,java.lang.String,int)>(r6, $r3, $i0);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void setDeviceOrientation(int)
    {
        android.telecom.VideoCallImpl r0;
        int i0;
        com.android.internal.telecom.IVideoProvider $r2;
        android.os.RemoteException $r3;

        r0 := @this: android.telecom.VideoCallImpl;

        i0 := @parameter0: int;

     label1:
        $r2 = r0.<android.telecom.VideoCallImpl: com.android.internal.telecom.IVideoProvider mVideoProvider>;

        interfaceinvoke $r2.<com.android.internal.telecom.IVideoProvider: void setDeviceOrientation(int)>(i0);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void setDisplaySurface(android.view.Surface)
    {
        android.telecom.VideoCallImpl r0;
        com.android.internal.telecom.IVideoProvider $r1;
        android.os.RemoteException $r2;
        android.view.Surface r3;

        r0 := @this: android.telecom.VideoCallImpl;

        r3 := @parameter0: android.view.Surface;

     label1:
        $r1 = r0.<android.telecom.VideoCallImpl: com.android.internal.telecom.IVideoProvider mVideoProvider>;

        interfaceinvoke $r1.<com.android.internal.telecom.IVideoProvider: void setDisplaySurface(android.view.Surface)>(r3);

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void setPauseImage(android.net.Uri)
    {
        android.telecom.VideoCallImpl r0;
        com.android.internal.telecom.IVideoProvider $r1;
        android.os.RemoteException $r2;
        android.net.Uri r3;

        r0 := @this: android.telecom.VideoCallImpl;

        r3 := @parameter0: android.net.Uri;

     label1:
        $r1 = r0.<android.telecom.VideoCallImpl: com.android.internal.telecom.IVideoProvider mVideoProvider>;

        interfaceinvoke $r1.<com.android.internal.telecom.IVideoProvider: void setPauseImage(android.net.Uri)>(r3);

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void setPreviewSurface(android.view.Surface)
    {
        android.telecom.VideoCallImpl r0;
        com.android.internal.telecom.IVideoProvider $r1;
        android.os.RemoteException $r2;
        android.view.Surface r3;

        r0 := @this: android.telecom.VideoCallImpl;

        r3 := @parameter0: android.view.Surface;

     label1:
        $r1 = r0.<android.telecom.VideoCallImpl: com.android.internal.telecom.IVideoProvider mVideoProvider>;

        interfaceinvoke $r1.<com.android.internal.telecom.IVideoProvider: void setPreviewSurface(android.view.Surface)>(r3);

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void setTargetSdkVersion(int)
    {
        android.telecom.VideoCallImpl r0;
        int i0;

        r0 := @this: android.telecom.VideoCallImpl;

        i0 := @parameter0: int;

        r0.<android.telecom.VideoCallImpl: int mTargetSdkVersion> = i0;

        return;
    }

    public void setVideoState(int)
    {
        android.telecom.VideoCallImpl r0;
        int i0;

        r0 := @this: android.telecom.VideoCallImpl;

        i0 := @parameter0: int;

        r0.<android.telecom.VideoCallImpl: int mVideoState> = i0;

        return;
    }

    public void setZoom(float)
    {
        android.telecom.VideoCallImpl r0;
        float f0;
        com.android.internal.telecom.IVideoProvider $r2;
        android.os.RemoteException $r3;

        r0 := @this: android.telecom.VideoCallImpl;

        f0 := @parameter0: float;

     label1:
        $r2 = r0.<android.telecom.VideoCallImpl: com.android.internal.telecom.IVideoProvider mVideoProvider>;

        interfaceinvoke $r2.<com.android.internal.telecom.IVideoProvider: void setZoom(float)>(f0);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void unregisterCallback(android.telecom.InCallService$VideoCall$Callback)
    {
        android.telecom.VideoCallImpl r0;
        android.telecom.InCallService$VideoCall$Callback $r1, r5;
        android.telecom.VideoCallImpl$VideoCallListenerBinder $r2;
        com.android.internal.telecom.IVideoProvider $r3;
        android.os.RemoteException $r4;

        r0 := @this: android.telecom.VideoCallImpl;

        r5 := @parameter0: android.telecom.InCallService$VideoCall$Callback;

        $r1 = r0.<android.telecom.VideoCallImpl: android.telecom.InCallService$VideoCall$Callback mCallback>;

        if r5 == $r1 goto label1;

        return;

     label1:
        r0.<android.telecom.VideoCallImpl: android.telecom.InCallService$VideoCall$Callback mCallback> = null;

     label2:
        $r3 = r0.<android.telecom.VideoCallImpl: com.android.internal.telecom.IVideoProvider mVideoProvider>;

        $r2 = r0.<android.telecom.VideoCallImpl: android.telecom.VideoCallImpl$VideoCallListenerBinder mBinder>;

        interfaceinvoke $r3.<com.android.internal.telecom.IVideoProvider: void removeVideoCallback(android.os.IBinder)>($r2);

     label3:
        goto label5;

     label4:
        $r4 := @caughtexception;

     label5:
        return;

        catch android.os.RemoteException from label2 to label3 with label4;
    }
}
