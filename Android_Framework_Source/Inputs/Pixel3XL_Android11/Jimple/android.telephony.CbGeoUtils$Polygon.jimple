public class android.telephony.CbGeoUtils$Polygon extends java.lang.Object implements android.telephony.CbGeoUtils$Geometry
{
    private static final double SCALE;
    private final android.telephony.CbGeoUtils$LatLng mOrigin;
    private final java.util.List mScaledVertices;
    private final java.util.List mVertices;

    public void <init>(java.util.List)
    {
        android.telephony.CbGeoUtils$Polygon r0;
        java.util.List r1, $r9;
        int $i0, i2, i3, i4;
        java.lang.Object $r2, $r8, $r10, $r12;
        android.telephony.CbGeoUtils$LatLng $r3, $r11, $r13;
        java.util.stream.Stream $r4, $r6;
        android.telephony._$$Lambda$CbGeoUtils$Polygon$WFBMZ4F3Agw9FQd3hBGj_MGCuho $r5;
        java.util.stream.Collector $r7;
        double $d0, $d1;
        byte $b1;

        r0 := @this: android.telephony.CbGeoUtils$Polygon;

        r1 := @parameter0: java.util.List;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.telephony.CbGeoUtils$Polygon: java.util.List mVertices> = r1;

        i2 = 0;

        i3 = 1;

     label1:
        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        if i3 >= $i0 goto label3;

        i4 = i2;

        $r10 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i3);

        $r11 = (android.telephony.CbGeoUtils$LatLng) $r10;

        $d0 = $r11.<android.telephony.CbGeoUtils$LatLng: double lng>;

        $r12 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i2);

        $r13 = (android.telephony.CbGeoUtils$LatLng) $r12;

        $d1 = $r13.<android.telephony.CbGeoUtils$LatLng: double lng>;

        $b1 = $d0 cmpg $d1;

        if $b1 >= 0 goto label2;

        i4 = i3;

     label2:
        i3 = i3 + 1;

        i2 = i4;

        goto label1;

     label3:
        $r2 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i2);

        $r3 = (android.telephony.CbGeoUtils$LatLng) $r2;

        r0.<android.telephony.CbGeoUtils$Polygon: android.telephony.CbGeoUtils$LatLng mOrigin> = $r3;

        $r4 = interfaceinvoke r1.<java.util.List: java.util.stream.Stream stream()>();

        $r5 = new android.telephony._$$Lambda$CbGeoUtils$Polygon$WFBMZ4F3Agw9FQd3hBGj_MGCuho;

        specialinvoke $r5.<android.telephony._$$Lambda$CbGeoUtils$Polygon$WFBMZ4F3Agw9FQd3hBGj_MGCuho: void <init>(android.telephony.CbGeoUtils$Polygon)>(r0);

        $r6 = interfaceinvoke $r4.<java.util.stream.Stream: java.util.stream.Stream map(java.util.function.Function)>($r5);

        $r7 = staticinvoke <java.util.stream.Collectors: java.util.stream.Collector toList()>();

        $r8 = interfaceinvoke $r6.<java.util.stream.Stream: java.lang.Object collect(java.util.stream.Collector)>($r7);

        $r9 = (java.util.List) $r8;

        r0.<android.telephony.CbGeoUtils$Polygon: java.util.List mScaledVertices> = $r9;

        return;
    }

    private android.telephony.CbGeoUtils$Polygon$Point convertAndScaleLatLng(android.telephony.CbGeoUtils$LatLng)
    {
        android.telephony.CbGeoUtils$Polygon r0;
        android.telephony.CbGeoUtils$LatLng r1, $r2, $r3, $r4, $r5, $r6, $r7;
        double d0, d1, d2, d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, d18, $d19, $d20, $d21;
        int $i0, $i1, $i2, $i3, $i4;
        android.telephony.CbGeoUtils$Polygon$Point $r8;

        r0 := @this: android.telephony.CbGeoUtils$Polygon;

        r1 := @parameter0: android.telephony.CbGeoUtils$LatLng;

        d0 = r1.<android.telephony.CbGeoUtils$LatLng: double lat>;

        $r2 = r0.<android.telephony.CbGeoUtils$Polygon: android.telephony.CbGeoUtils$LatLng mOrigin>;

        d1 = $r2.<android.telephony.CbGeoUtils$LatLng: double lat>;

        $d5 = r1.<android.telephony.CbGeoUtils$LatLng: double lng>;

        $r3 = r0.<android.telephony.CbGeoUtils$Polygon: android.telephony.CbGeoUtils$LatLng mOrigin>;

        $d4 = $r3.<android.telephony.CbGeoUtils$LatLng: double lng>;

        d2 = $d5 - $d4;

        d18 = d2;

        $r4 = r0.<android.telephony.CbGeoUtils$Polygon: android.telephony.CbGeoUtils$LatLng mOrigin>;

        $d6 = $r4.<android.telephony.CbGeoUtils$LatLng: double lng>;

        $i0 = staticinvoke <android.telephony.CbGeoUtils: int sign(double)>($d6);

        if $i0 == 0 goto label1;

        d18 = d2;

        $r5 = r0.<android.telephony.CbGeoUtils$Polygon: android.telephony.CbGeoUtils$LatLng mOrigin>;

        $d7 = $r5.<android.telephony.CbGeoUtils$LatLng: double lng>;

        $i1 = staticinvoke <android.telephony.CbGeoUtils: int sign(double)>($d7);

        $d8 = r1.<android.telephony.CbGeoUtils$LatLng: double lng>;

        $i2 = staticinvoke <android.telephony.CbGeoUtils: int sign(double)>($d8);

        if $i1 == $i2 goto label1;

        $r6 = r0.<android.telephony.CbGeoUtils$Polygon: android.telephony.CbGeoUtils$LatLng mOrigin>;

        $d9 = $r6.<android.telephony.CbGeoUtils$LatLng: double lng>;

        $d10 = staticinvoke <java.lang.Math: double abs(double)>($d9);

        $d11 = r1.<android.telephony.CbGeoUtils$LatLng: double lng>;

        $d12 = staticinvoke <java.lang.Math: double abs(double)>($d11);

        d3 = $d10 + $d12;

        d18 = d2;

        $d13 = 2.0 * d3;

        $d14 = $d13 - 360.0;

        $i3 = staticinvoke <android.telephony.CbGeoUtils: int sign(double)>($d14);

        if $i3 <= 0 goto label1;

        $r7 = r0.<android.telephony.CbGeoUtils$Polygon: android.telephony.CbGeoUtils$LatLng mOrigin>;

        $d15 = $r7.<android.telephony.CbGeoUtils$LatLng: double lng>;

        $i4 = staticinvoke <android.telephony.CbGeoUtils: int sign(double)>($d15);

        $d17 = (double) $i4;

        $d16 = 360.0 - d3;

        d18 = $d17 * $d16;

     label1:
        $r8 = new android.telephony.CbGeoUtils$Polygon$Point;

        $d19 = d0 - d1;

        $d20 = $d19 * 1000.0;

        $d21 = 1000.0 * d18;

        specialinvoke $r8.<android.telephony.CbGeoUtils$Polygon$Point: void <init>(double,double)>($d20, $d21);

        return $r8;
    }

    private static double crossProduct(android.telephony.CbGeoUtils$Polygon$Point, android.telephony.CbGeoUtils$Polygon$Point)
    {
        android.telephony.CbGeoUtils$Polygon$Point r0, r1;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6;

        r0 := @parameter0: android.telephony.CbGeoUtils$Polygon$Point;

        r1 := @parameter1: android.telephony.CbGeoUtils$Polygon$Point;

        $d1 = r0.<android.telephony.CbGeoUtils$Polygon$Point: double x>;

        $d0 = r1.<android.telephony.CbGeoUtils$Polygon$Point: double y>;

        $d5 = $d1 * $d0;

        $d3 = r0.<android.telephony.CbGeoUtils$Polygon$Point: double y>;

        $d2 = r1.<android.telephony.CbGeoUtils$Polygon$Point: double x>;

        $d4 = $d3 * $d2;

        $d6 = $d5 - $d4;

        return $d6;
    }

    public boolean contains(android.telephony.CbGeoUtils$LatLng)
    {
        android.telephony.CbGeoUtils$Polygon r0;
        android.telephony.CbGeoUtils$Polygon$Point r1, r2, $r8, $r9, r11;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, i11, i12, i13;
        java.util.List $r3, $r4, $r6;
        java.lang.Object $r5, $r7;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25;
        byte $b7, $b8, $b9, $b10;
        android.telephony.CbGeoUtils$LatLng r10;
        boolean z0;

        r0 := @this: android.telephony.CbGeoUtils$Polygon;

        r10 := @parameter0: android.telephony.CbGeoUtils$LatLng;

        r1 = specialinvoke r0.<android.telephony.CbGeoUtils$Polygon: android.telephony.CbGeoUtils$Polygon$Point convertAndScaleLatLng(android.telephony.CbGeoUtils$LatLng)>(r10);

        $r3 = r0.<android.telephony.CbGeoUtils$Polygon: java.util.List mScaledVertices>;

        i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        i11 = 0;

        i12 = 0;

     label1:
        z0 = 1;

        if i12 >= i0 goto label5;

        $r4 = r0.<android.telephony.CbGeoUtils$Polygon: java.util.List mScaledVertices>;

        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i12);

        r2 = (android.telephony.CbGeoUtils$Polygon$Point) $r5;

        $r6 = r0.<android.telephony.CbGeoUtils$Polygon: java.util.List mScaledVertices>;

        $i2 = i12 + 1;

        $i3 = $i2 % i0;

        $r7 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>($i3);

        r11 = (android.telephony.CbGeoUtils$Polygon$Point) $r7;

        $r8 = virtualinvoke r11.<android.telephony.CbGeoUtils$Polygon$Point: android.telephony.CbGeoUtils$Polygon$Point subtract(android.telephony.CbGeoUtils$Polygon$Point)>(r2);

        $r9 = virtualinvoke r1.<android.telephony.CbGeoUtils$Polygon$Point: android.telephony.CbGeoUtils$Polygon$Point subtract(android.telephony.CbGeoUtils$Polygon$Point)>(r2);

        $d0 = staticinvoke <android.telephony.CbGeoUtils$Polygon: double crossProduct(android.telephony.CbGeoUtils$Polygon$Point,android.telephony.CbGeoUtils$Polygon$Point)>($r8, $r9);

        i1 = staticinvoke <android.telephony.CbGeoUtils: int sign(double)>($d0);

        if i1 != 0 goto label2;

        i13 = i11;

        $d11 = r2.<android.telephony.CbGeoUtils$Polygon$Point: double x>;

        $d10 = r11.<android.telephony.CbGeoUtils$Polygon$Point: double x>;

        $d12 = staticinvoke <java.lang.Math: double min(double,double)>($d11, $d10);

        $d13 = r1.<android.telephony.CbGeoUtils$Polygon$Point: double x>;

        $b7 = $d12 cmpg $d13;

        if $b7 > 0 goto label4;

        i13 = i11;

        $d16 = r1.<android.telephony.CbGeoUtils$Polygon$Point: double x>;

        $d15 = r2.<android.telephony.CbGeoUtils$Polygon$Point: double x>;

        $d14 = r11.<android.telephony.CbGeoUtils$Polygon$Point: double x>;

        $d17 = staticinvoke <java.lang.Math: double max(double,double)>($d15, $d14);

        $b8 = $d16 cmpg $d17;

        if $b8 > 0 goto label4;

        i13 = i11;

        $d19 = r2.<android.telephony.CbGeoUtils$Polygon$Point: double y>;

        $d18 = r11.<android.telephony.CbGeoUtils$Polygon$Point: double y>;

        $d20 = staticinvoke <java.lang.Math: double min(double,double)>($d19, $d18);

        $d21 = r1.<android.telephony.CbGeoUtils$Polygon$Point: double y>;

        $b9 = $d20 cmpg $d21;

        if $b9 > 0 goto label4;

        i13 = i11;

        $d24 = r1.<android.telephony.CbGeoUtils$Polygon$Point: double y>;

        $d23 = r2.<android.telephony.CbGeoUtils$Polygon$Point: double y>;

        $d22 = r11.<android.telephony.CbGeoUtils$Polygon$Point: double y>;

        $d25 = staticinvoke <java.lang.Math: double max(double,double)>($d23, $d22);

        $b10 = $d24 cmpg $d25;

        if $b10 > 0 goto label4;

        return 1;

     label2:
        $d2 = r2.<android.telephony.CbGeoUtils$Polygon$Point: double y>;

        $d1 = r1.<android.telephony.CbGeoUtils$Polygon$Point: double y>;

        $d3 = $d2 - $d1;

        $i4 = staticinvoke <android.telephony.CbGeoUtils: int sign(double)>($d3);

        if $i4 > 0 goto label3;

        i13 = i11;

        if i1 <= 0 goto label4;

        i13 = i11;

        $d8 = r11.<android.telephony.CbGeoUtils$Polygon$Point: double y>;

        $d7 = r1.<android.telephony.CbGeoUtils$Polygon$Point: double y>;

        $d9 = $d8 - $d7;

        $i6 = staticinvoke <android.telephony.CbGeoUtils: int sign(double)>($d9);

        if $i6 <= 0 goto label4;

        i13 = i11 + 1;

        goto label4;

     label3:
        i13 = i11;

        if i1 >= 0 goto label4;

        i13 = i11;

        $d5 = r11.<android.telephony.CbGeoUtils$Polygon$Point: double y>;

        $d4 = r1.<android.telephony.CbGeoUtils$Polygon$Point: double y>;

        $d6 = $d5 - $d4;

        $i5 = staticinvoke <android.telephony.CbGeoUtils: int sign(double)>($d6);

        if $i5 > 0 goto label4;

        i13 = i11 - 1;

     label4:
        i12 = i12 + 1;

        i11 = i13;

        goto label1;

     label5:
        if i11 == 0 goto label6;

        goto label7;

     label6:
        z0 = 0;

     label7:
        return z0;
    }

    public boolean equals(java.lang.Object)
    {
        android.telephony.CbGeoUtils$Polygon r0, r10;
        boolean $z0, $z1;
        java.util.List $r1, $r2, $r3, $r4, $r6;
        int $i0, $i1, $i2, i3;
        java.lang.Object $r5, $r8, r9;
        android.telephony.CbGeoUtils$LatLng $r7;

        r0 := @this: android.telephony.CbGeoUtils$Polygon;

        r9 := @parameter0: java.lang.Object;

        if r9 != r0 goto label1;

        return 1;

     label1:
        $z0 = r9 instanceof android.telephony.CbGeoUtils$Polygon;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        r10 = (android.telephony.CbGeoUtils$Polygon) r9;

        $r1 = r0.<android.telephony.CbGeoUtils$Polygon: java.util.List mVertices>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        $r2 = r10.<android.telephony.CbGeoUtils$Polygon: java.util.List mVertices>;

        $i1 = interfaceinvoke $r2.<java.util.List: int size()>();

        if $i0 == $i1 goto label3;

        return 0;

     label3:
        i3 = 0;

     label4:
        $r3 = r0.<android.telephony.CbGeoUtils$Polygon: java.util.List mVertices>;

        $i2 = interfaceinvoke $r3.<java.util.List: int size()>();

        if i3 >= $i2 goto label6;

        $r4 = r0.<android.telephony.CbGeoUtils$Polygon: java.util.List mVertices>;

        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i3);

        $r7 = (android.telephony.CbGeoUtils$LatLng) $r5;

        $r6 = r10.<android.telephony.CbGeoUtils$Polygon: java.util.List mVertices>;

        $r8 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(i3);

        $z1 = virtualinvoke $r7.<android.telephony.CbGeoUtils$LatLng: boolean equals(java.lang.Object)>($r8);

        if $z1 != 0 goto label5;

        return 0;

     label5:
        i3 = i3 + 1;

        goto label4;

     label6:
        return 1;
    }

    public java.util.List getVertices()
    {
        android.telephony.CbGeoUtils$Polygon r0;
        java.util.List $r1;

        r0 := @this: android.telephony.CbGeoUtils$Polygon;

        $r1 = r0.<android.telephony.CbGeoUtils$Polygon: java.util.List mVertices>;

        return $r1;
    }

    public android.telephony.CbGeoUtils$Polygon$Point lambda$new$0$CbGeoUtils$Polygon(android.telephony.CbGeoUtils$LatLng)
    {
        android.telephony.CbGeoUtils$Polygon r0;
        android.telephony.CbGeoUtils$LatLng r1;
        android.telephony.CbGeoUtils$Polygon$Point $r2;

        r0 := @this: android.telephony.CbGeoUtils$Polygon;

        r1 := @parameter0: android.telephony.CbGeoUtils$LatLng;

        $r2 = specialinvoke r0.<android.telephony.CbGeoUtils$Polygon: android.telephony.CbGeoUtils$Polygon$Point convertAndScaleLatLng(android.telephony.CbGeoUtils$LatLng)>(r1);

        return $r2;
    }

    public java.lang.String toString()
    {
        android.telephony.CbGeoUtils$Polygon r0;
        boolean $z0;
        java.lang.StringBuilder $r1;
        java.util.List $r3;
        java.lang.String r5;

        r0 := @this: android.telephony.CbGeoUtils$Polygon;

        r5 = "Polygon: ";

        $z0 = <com.android.internal.telephony.util.TelephonyUtils: boolean IS_DEBUGGABLE>;

        if $z0 == 0 goto label1;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Polygon: ");

        $r3 = r0.<android.telephony.CbGeoUtils$Polygon: java.util.List mVertices>;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

     label1:
        return r5;
    }

    public static void <clinit>()
    {
        <android.telephony.CbGeoUtils$Polygon: double SCALE> = 1000.0;

        return;
    }
}
