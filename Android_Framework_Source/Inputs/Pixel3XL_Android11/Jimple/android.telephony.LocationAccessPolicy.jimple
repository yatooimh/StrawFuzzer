public final class android.telephony.LocationAccessPolicy extends java.lang.Object
{
    private static final boolean DBG;
    public static final int MAX_SDK_FOR_ANY_ENFORCEMENT;
    private static final java.lang.String TAG;

    public void <init>()
    {
        android.telephony.LocationAccessPolicy r0;

        r0 := @this: android.telephony.LocationAccessPolicy;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static android.telephony.LocationAccessPolicy$LocationPermissionResult appOpsModeToPermissionResult(int)
    {
        int i0;
        android.telephony.LocationAccessPolicy$LocationPermissionResult $r0, $r1, $r2;

        i0 := @parameter0: int;

        if i0 == 0 goto label2;

        if i0 == 2 goto label1;

        $r2 = <android.telephony.LocationAccessPolicy$LocationPermissionResult: android.telephony.LocationAccessPolicy$LocationPermissionResult DENIED_SOFT>;

        return $r2;

     label1:
        $r1 = <android.telephony.LocationAccessPolicy$LocationPermissionResult: android.telephony.LocationAccessPolicy$LocationPermissionResult DENIED_HARD>;

        return $r1;

     label2:
        $r0 = <android.telephony.LocationAccessPolicy$LocationPermissionResult: android.telephony.LocationAccessPolicy$LocationPermissionResult ALLOWED>;

        return $r0;
    }

    private static android.telephony.LocationAccessPolicy$LocationPermissionResult checkAppLocationPermissionHelper(android.content.Context, android.telephony.LocationAccessPolicy$LocationPermissionQuery, java.lang.String)
    {
        android.telephony.LocationAccessPolicy$LocationPermissionQuery r0;
        java.lang.String $r1, $r2, $r3, $r7, $r14, $r16, $r19, $r26, $r28, $r31, $r32, $r33, $r35, $r40, r44, r45;
        boolean $z0, $z1, $z2, $z3;
        int $i0, $i1, $i2, i4, i5;
        android.telephony.LocationAccessPolicy$LocationPermissionResult $r4, $r41, $r42;
        java.lang.StringBuilder $r5, $r17, $r34;
        java.lang.Object $r29;
        android.app.AppOpsManager $r30;
        android.content.Context r43;

        r43 := @parameter0: android.content.Context;

        r0 := @parameter1: android.telephony.LocationAccessPolicy$LocationPermissionQuery;

        r44 := @parameter2: java.lang.String;

        $r1 = "android.permission.ACCESS_FINE_LOCATION";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r44);

        if $z0 == 0 goto label1;

        r45 = "fine";

        goto label2;

     label1:
        r45 = "coarse";

     label2:
        $i1 = r0.<android.telephony.LocationAccessPolicy$LocationPermissionQuery: int callingPid>;

        $i0 = r0.<android.telephony.LocationAccessPolicy$LocationPermissionQuery: int callingUid>;

        $z1 = staticinvoke <android.telephony.LocationAccessPolicy: boolean checkManifestPermission(android.content.Context,int,int,java.lang.String)>(r43, $i1, $i0, r44);

        if $z1 == 0 goto label4;

        $r29 = virtualinvoke r43.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/app/AppOpsManager;");

        $r30 = (android.app.AppOpsManager) $r29;

        $r31 = staticinvoke <android.telephony.LocationAccessPolicy: java.lang.String getAppOpsString(java.lang.String)>(r44);

        $i2 = r0.<android.telephony.LocationAccessPolicy$LocationPermissionQuery: int callingUid>;

        $r33 = r0.<android.telephony.LocationAccessPolicy$LocationPermissionQuery: java.lang.String callingPackage>;

        $r32 = r0.<android.telephony.LocationAccessPolicy$LocationPermissionQuery: java.lang.String callingFeatureId>;

        i4 = virtualinvoke $r30.<android.app.AppOpsManager: int noteOpNoThrow(java.lang.String,int,java.lang.String,java.lang.String,java.lang.String)>($r31, $i2, $r33, $r32, null);

        if i4 != 0 goto label3;

        $r42 = <android.telephony.LocationAccessPolicy$LocationPermissionResult: android.telephony.LocationAccessPolicy$LocationPermissionResult ALLOWED>;

        return $r42;

     label3:
        $r34 = new java.lang.StringBuilder;

        specialinvoke $r34.<java.lang.StringBuilder: void <init>()>();

        $r35 = r0.<android.telephony.LocationAccessPolicy$LocationPermissionQuery: java.lang.String callingPackage>;

        virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r35);

        virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is aware of ");

        virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r45);

        virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but the app-ops permission is specifically denied.");

        $r40 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("LocationAccessPolicy", $r40);

        $r41 = staticinvoke <android.telephony.LocationAccessPolicy: android.telephony.LocationAccessPolicy$LocationPermissionResult appOpsModeToPermissionResult(int)>(i4);

        return $r41;

     label4:
        $r2 = "android.permission.ACCESS_FINE_LOCATION";

        $z2 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r44);

        if $z2 == 0 goto label5;

        i5 = r0.<android.telephony.LocationAccessPolicy$LocationPermissionQuery: int minSdkVersionForFine>;

        goto label6;

     label5:
        i5 = r0.<android.telephony.LocationAccessPolicy$LocationPermissionQuery: int minSdkVersionForCoarse>;

     label6:
        if i5 <= 10000 goto label7;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Allowing ");

        $r19 = r0.<android.telephony.LocationAccessPolicy$LocationPermissionQuery: java.lang.String callingPackage>;

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r45);

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" because we\'re not enforcing API ");

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i5);

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" yet. Please fix this app because it will break in the future. Called from ");

        $r26 = r0.<android.telephony.LocationAccessPolicy$LocationPermissionQuery: java.lang.String method>;

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

        $r28 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.LocationAccessPolicy: void logError(android.content.Context,android.telephony.LocationAccessPolicy$LocationPermissionQuery,java.lang.String)>(r43, r0, $r28);

        return null;

     label7:
        $r3 = r0.<android.telephony.LocationAccessPolicy$LocationPermissionQuery: java.lang.String callingPackage>;

        $z3 = staticinvoke <android.telephony.LocationAccessPolicy: boolean isAppAtLeastSdkVersion(android.content.Context,java.lang.String,int)>(r43, $r3, i5);

        if $z3 != 0 goto label8;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Allowing ");

        $r7 = r0.<android.telephony.LocationAccessPolicy$LocationPermissionQuery: java.lang.String callingPackage>;

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r45);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" because it doesn\'t target API ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i5);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" yet. Please fix this app. Called from ");

        $r14 = r0.<android.telephony.LocationAccessPolicy$LocationPermissionQuery: java.lang.String method>;

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.LocationAccessPolicy: void logError(android.content.Context,android.telephony.LocationAccessPolicy$LocationPermissionQuery,java.lang.String)>(r43, r0, $r16);

        return null;

     label8:
        $r4 = <android.telephony.LocationAccessPolicy$LocationPermissionResult: android.telephony.LocationAccessPolicy$LocationPermissionResult DENIED_HARD>;

        return $r4;
    }

    private static boolean checkInteractAcrossUsersFull(android.content.Context, int, int)
    {
        android.content.Context r0;
        int i0, i1;
        boolean $z0;

        r0 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $z0 = staticinvoke <android.telephony.LocationAccessPolicy: boolean checkManifestPermission(android.content.Context,int,int,java.lang.String)>(r0, i0, i1, "android.permission.INTERACT_ACROSS_USERS_FULL");

        return $z0;
    }

    public static android.telephony.LocationAccessPolicy$LocationPermissionResult checkLocationPermission(android.content.Context, android.telephony.LocationAccessPolicy$LocationPermissionQuery)
    {
        android.telephony.LocationAccessPolicy$LocationPermissionQuery r0;
        android.telephony.LocationAccessPolicy$LocationPermissionResult r1, $r2, $r3, r5, $r6;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        boolean $z0;
        android.content.Context r4;

        r4 := @parameter0: android.content.Context;

        r0 := @parameter1: android.telephony.LocationAccessPolicy$LocationPermissionQuery;

        $i0 = r0.<android.telephony.LocationAccessPolicy$LocationPermissionQuery: int callingUid>;

        if $i0 == 1001 goto label5;

        $i1 = r0.<android.telephony.LocationAccessPolicy$LocationPermissionQuery: int callingUid>;

        if $i1 == 1000 goto label5;

        $i2 = r0.<android.telephony.LocationAccessPolicy$LocationPermissionQuery: int callingUid>;

        if $i2 == 1073 goto label5;

        $i3 = r0.<android.telephony.LocationAccessPolicy$LocationPermissionQuery: int callingUid>;

        if $i3 != 0 goto label1;

        goto label5;

     label1:
        $i5 = r0.<android.telephony.LocationAccessPolicy$LocationPermissionQuery: int callingUid>;

        $i4 = r0.<android.telephony.LocationAccessPolicy$LocationPermissionQuery: int callingPid>;

        $z0 = staticinvoke <android.telephony.LocationAccessPolicy: boolean checkSystemLocationAccess(android.content.Context,int,int)>(r4, $i5, $i4);

        if $z0 != 0 goto label2;

        $r3 = <android.telephony.LocationAccessPolicy$LocationPermissionResult: android.telephony.LocationAccessPolicy$LocationPermissionResult DENIED_SOFT>;

        return $r3;

     label2:
        $i6 = r0.<android.telephony.LocationAccessPolicy$LocationPermissionQuery: int minSdkVersionForFine>;

        if $i6 >= 2147483647 goto label3;

        r1 = staticinvoke <android.telephony.LocationAccessPolicy: android.telephony.LocationAccessPolicy$LocationPermissionResult checkAppLocationPermissionHelper(android.content.Context,android.telephony.LocationAccessPolicy$LocationPermissionQuery,java.lang.String)>(r4, r0, "android.permission.ACCESS_FINE_LOCATION");

        if r1 == null goto label3;

        return r1;

     label3:
        $i7 = r0.<android.telephony.LocationAccessPolicy$LocationPermissionQuery: int minSdkVersionForCoarse>;

        if $i7 >= 2147483647 goto label4;

        r5 = staticinvoke <android.telephony.LocationAccessPolicy: android.telephony.LocationAccessPolicy$LocationPermissionResult checkAppLocationPermissionHelper(android.content.Context,android.telephony.LocationAccessPolicy$LocationPermissionQuery,java.lang.String)>(r4, r0, "android.permission.ACCESS_COARSE_LOCATION");

        if r5 == null goto label4;

        return r5;

     label4:
        $r2 = <android.telephony.LocationAccessPolicy$LocationPermissionResult: android.telephony.LocationAccessPolicy$LocationPermissionResult ALLOWED>;

        return $r2;

     label5:
        $r6 = <android.telephony.LocationAccessPolicy$LocationPermissionResult: android.telephony.LocationAccessPolicy$LocationPermissionResult ALLOWED>;

        return $r6;
    }

    private static boolean checkManifestPermission(android.content.Context, int, int, java.lang.String)
    {
        android.content.Context r0;
        int i0, i1, $i2;
        java.lang.String r1;
        boolean z0;

        r0 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 := @parameter3: java.lang.String;

        $i2 = virtualinvoke r0.<android.content.Context: int checkPermission(java.lang.String,int,int)>(r1, i0, i1);

        if $i2 != 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    private static boolean checkSystemLocationAccess(android.content.Context, int, int)
    {
        android.content.Context r0;
        int i0, i1, $i2;
        boolean z0, $z1, $z2, z3;
        android.os.UserHandle $r1;

        r0 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r1 = staticinvoke <android.os.UserHandle: android.os.UserHandle getUserHandleForUid(int)>(i0);

        $i2 = virtualinvoke $r1.<android.os.UserHandle: int getIdentifier()>();

        z0 = staticinvoke <android.telephony.LocationAccessPolicy: boolean isLocationModeEnabled(android.content.Context,int)>(r0, $i2);

        z3 = 0;

        if z0 != 0 goto label1;

        return 0;

     label1:
        $z1 = staticinvoke <android.telephony.LocationAccessPolicy: boolean isCurrentProfile(android.content.Context,int)>(r0, i0);

        if $z1 != 0 goto label2;

        $z2 = staticinvoke <android.telephony.LocationAccessPolicy: boolean checkInteractAcrossUsersFull(android.content.Context,int,int)>(r0, i1, i0);

        if $z2 == 0 goto label3;

     label2:
        z3 = 1;

     label3:
        return z3;
    }

    private static java.lang.String getAppOpsString(java.lang.String)
    {
        java.lang.String r0;
        boolean $z0, $z1;
        int i0;
        byte b1;

        r0 := @parameter0: java.lang.String;

        i0 = virtualinvoke r0.<java.lang.String: int hashCode()>();

        if i0 == -1888586689 goto label3;

        if i0 == -63024214 goto label2;

     label1:
        goto label4;

     label2:
        $z1 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("android.permission.ACCESS_COARSE_LOCATION");

        if $z1 == 0 goto label1;

        b1 = 1;

        goto label5;

     label3:
        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("android.permission.ACCESS_FINE_LOCATION");

        if $z0 == 0 goto label1;

        b1 = 0;

        goto label5;

     label4:
        b1 = -1;

     label5:
        if b1 == 0 goto label7;

        if b1 == 1 goto label6;

        return null;

     label6:
        return "android:coarse_location";

     label7:
        return "android:fine_location";
    }

    private static boolean isAppAtLeastSdkVersion(android.content.Context, java.lang.String, int)
    {
        java.lang.String r0;
        int i0, i1;
        android.content.pm.PackageManager $r1;
        android.content.pm.ApplicationInfo $r2;
        android.content.pm.PackageManager$NameNotFoundException $r3;
        android.content.Context r4;

        r4 := @parameter0: android.content.Context;

        r0 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

     label1:
        $r1 = virtualinvoke r4.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r2 = virtualinvoke $r1.<android.content.pm.PackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int)>(r0, 0);

        i1 = $r2.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

     label2:
        if i1 < i0 goto label3;

        return 1;

     label3:
        goto label5;

     label4:
        $r3 := @caughtexception;

     label5:
        return 0;

        catch android.content.pm.PackageManager$NameNotFoundException from label1 to label2 with label4;
    }

    private static boolean isCurrentProfile(android.content.Context, int)
    {
        long l0;
        int i1, $i2, i3, i4;
        boolean z0;
        android.os.UserHandle $r0, $r2;
        java.lang.Object $r1;
        java.lang.Throwable $r3;
        android.content.Context r4;
        android.app.ActivityManager r5;

        r4 := @parameter0: android.content.Context;

        i3 := @parameter1: int;

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r0 = staticinvoke <android.os.UserHandle: android.os.UserHandle getUserHandleForUid(int)>(i3);

        i1 = virtualinvoke $r0.<android.os.UserHandle: int getIdentifier()>();

        i4 = staticinvoke <android.app.ActivityManager: int getCurrentUser()>();

     label2:
        if i1 != i4 goto label3;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return 1;

     label3:
        $r1 = virtualinvoke r4.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/app/ActivityManager;");

        r5 = (android.app.ActivityManager) $r1;

     label4:
        if r5 == null goto label7;

     label5:
        $i2 = staticinvoke <android.app.ActivityManager: int getCurrentUser()>();

        $r2 = staticinvoke <android.os.UserHandle: android.os.UserHandle getUserHandleForUid(int)>($i2);

        z0 = virtualinvoke r5.<android.app.ActivityManager: boolean isProfileForeground(android.os.UserHandle)>($r2);

     label6:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return z0;

     label7:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return 0;

     label8:
        $r3 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    private static boolean isLocationModeEnabled(android.content.Context, int)
    {
        int i0;
        java.lang.Object $r0;
        android.os.UserHandle $r1;
        boolean $z0;
        android.content.Context r2;
        android.location.LocationManager r3;

        r2 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        $r0 = virtualinvoke r2.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/location/LocationManager;");

        r3 = (android.location.LocationManager) $r0;

        if r3 != null goto label1;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("LocationAccessPolicy", "Couldn\'t get location manager, denying location access");

        return 0;

     label1:
        $r1 = staticinvoke <android.os.UserHandle: android.os.UserHandle of(int)>(i0);

        $z0 = virtualinvoke r3.<android.location.LocationManager: boolean isLocationEnabledForUser(android.os.UserHandle)>($r1);

        return $z0;
    }

    private static void logError(android.content.Context, android.telephony.LocationAccessPolicy$LocationPermissionQuery, java.lang.String)
    {
        android.telephony.LocationAccessPolicy$LocationPermissionQuery r0;
        java.lang.String r1;
        boolean $z0, $z1;
        android.widget.Toast $r2;
        java.lang.Throwable $r3;
        android.content.Context r4;

        r4 := @parameter0: android.content.Context;

        r0 := @parameter1: android.telephony.LocationAccessPolicy$LocationPermissionQuery;

        r1 := @parameter2: java.lang.String;

        $z0 = r0.<android.telephony.LocationAccessPolicy$LocationPermissionQuery: boolean logAsInfo>;

        if $z0 == 0 goto label1;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("LocationAccessPolicy", r1);

        return;

     label1:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("LocationAccessPolicy", r1);

     label2:
        $z1 = <com.android.internal.telephony.util.TelephonyUtils: boolean IS_DEBUGGABLE>;

        if $z1 == 0 goto label3;

        $r2 = staticinvoke <android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>(r4, r1, 0);

        virtualinvoke $r2.<android.widget.Toast: void show()>();

     label3:
        goto label5;

     label4:
        $r3 := @caughtexception;

     label5:
        return;

        catch java.lang.Throwable from label2 to label3 with label4;
    }

    public static void <clinit>()
    {
        <android.telephony.LocationAccessPolicy: java.lang.String TAG> = "LocationAccessPolicy";

        <android.telephony.LocationAccessPolicy: int MAX_SDK_FOR_ANY_ENFORCEMENT> = 10000;

        <android.telephony.LocationAccessPolicy: boolean DBG> = 0;

        return;
    }
}
