public class android.telephony.MbmsDownloadSession extends java.lang.Object implements java.lang.AutoCloseable
{
    public static final java.lang.String DEFAULT_TOP_LEVEL_TEMP_DIRECTORY;
    private static final java.lang.String DESTINATION_SANITY_CHECK_FILE_NAME;
    public static final java.lang.String EXTRA_MBMS_COMPLETED_FILE_URI;
    public static final java.lang.String EXTRA_MBMS_DOWNLOAD_REQUEST;
    public static final java.lang.String EXTRA_MBMS_DOWNLOAD_RESULT;
    public static final java.lang.String EXTRA_MBMS_FILE_INFO;
    private static final java.lang.String LOG_TAG;
    public static final java.lang.String MBMS_DOWNLOAD_SERVICE_ACTION;
    public static final java.lang.String MBMS_DOWNLOAD_SERVICE_OVERRIDE_METADATA;
    public static final int RESULT_CANCELLED;
    public static final int RESULT_DOWNLOAD_FAILURE;
    public static final int RESULT_EXPIRED;
    public static final int RESULT_FILE_ROOT_UNREACHABLE;
    public static final int RESULT_IO_ERROR;
    public static final int RESULT_OUT_OF_STORAGE;
    public static final int RESULT_SERVICE_ID_NOT_DEFINED;
    public static final int RESULT_SUCCESSFUL;
    public static final int STATUS_ACTIVELY_DOWNLOADING;
    public static final int STATUS_PENDING_DOWNLOAD;
    public static final int STATUS_PENDING_DOWNLOAD_WINDOW;
    public static final int STATUS_PENDING_REPAIR;
    public static final int STATUS_UNKNOWN;
    private static java.util.concurrent.atomic.AtomicBoolean sIsInitialized;
    private final android.content.Context mContext;
    private android.os.IBinder$DeathRecipient mDeathRecipient;
    private final android.telephony.mbms.InternalDownloadSessionCallback mInternalCallback;
    private final java.util.Map mInternalDownloadProgressListeners;
    private final java.util.Map mInternalDownloadStatusListeners;
    private java.util.concurrent.atomic.AtomicReference mService;
    private android.content.ServiceConnection mServiceConnection;
    private int mSubscriptionId;

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;
        java.util.concurrent.atomic.AtomicBoolean $r2;

        <android.telephony.MbmsDownloadSession: int STATUS_UNKNOWN> = 0;

        <android.telephony.MbmsDownloadSession: int STATUS_PENDING_REPAIR> = 3;

        <android.telephony.MbmsDownloadSession: int STATUS_PENDING_DOWNLOAD_WINDOW> = 4;

        <android.telephony.MbmsDownloadSession: int STATUS_PENDING_DOWNLOAD> = 2;

        <android.telephony.MbmsDownloadSession: int STATUS_ACTIVELY_DOWNLOADING> = 1;

        <android.telephony.MbmsDownloadSession: int RESULT_SUCCESSFUL> = 1;

        <android.telephony.MbmsDownloadSession: int RESULT_SERVICE_ID_NOT_DEFINED> = 5;

        <android.telephony.MbmsDownloadSession: int RESULT_OUT_OF_STORAGE> = 7;

        <android.telephony.MbmsDownloadSession: int RESULT_IO_ERROR> = 4;

        <android.telephony.MbmsDownloadSession: int RESULT_FILE_ROOT_UNREACHABLE> = 8;

        <android.telephony.MbmsDownloadSession: int RESULT_EXPIRED> = 3;

        <android.telephony.MbmsDownloadSession: int RESULT_DOWNLOAD_FAILURE> = 6;

        <android.telephony.MbmsDownloadSession: int RESULT_CANCELLED> = 2;

        <android.telephony.MbmsDownloadSession: java.lang.String MBMS_DOWNLOAD_SERVICE_OVERRIDE_METADATA> = "mbms-download-service-override";

        <android.telephony.MbmsDownloadSession: java.lang.String MBMS_DOWNLOAD_SERVICE_ACTION> = "android.telephony.action.EmbmsDownload";

        <android.telephony.MbmsDownloadSession: java.lang.String EXTRA_MBMS_FILE_INFO> = "android.telephony.extra.MBMS_FILE_INFO";

        <android.telephony.MbmsDownloadSession: java.lang.String EXTRA_MBMS_DOWNLOAD_RESULT> = "android.telephony.extra.MBMS_DOWNLOAD_RESULT";

        <android.telephony.MbmsDownloadSession: java.lang.String EXTRA_MBMS_DOWNLOAD_REQUEST> = "android.telephony.extra.MBMS_DOWNLOAD_REQUEST";

        <android.telephony.MbmsDownloadSession: java.lang.String EXTRA_MBMS_COMPLETED_FILE_URI> = "android.telephony.extra.MBMS_COMPLETED_FILE_URI";

        <android.telephony.MbmsDownloadSession: java.lang.String DESTINATION_SANITY_CHECK_FILE_NAME> = "destinationSanityCheckFile";

        <android.telephony.MbmsDownloadSession: java.lang.String DEFAULT_TOP_LEVEL_TEMP_DIRECTORY> = "androidMbmsTempFileRoot";

        $r0 = class "Landroid/telephony/MbmsDownloadSession;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getSimpleName()>();

        <android.telephony.MbmsDownloadSession: java.lang.String LOG_TAG> = $r1;

        $r2 = new java.util.concurrent.atomic.AtomicBoolean;

        specialinvoke $r2.<java.util.concurrent.atomic.AtomicBoolean: void <init>(boolean)>(0);

        <android.telephony.MbmsDownloadSession: java.util.concurrent.atomic.AtomicBoolean sIsInitialized> = $r2;

        return;
    }

    private void <init>(android.content.Context, java.util.concurrent.Executor, int, android.telephony.mbms.MbmsDownloadSessionCallback)
    {
        android.telephony.MbmsDownloadSession r0;
        android.content.Context r1;
        java.util.concurrent.Executor r2;
        int i0;
        android.telephony.mbms.MbmsDownloadSessionCallback r3;
        android.telephony.MbmsDownloadSession$1 $r4;
        java.util.concurrent.atomic.AtomicReference $r5;
        java.util.HashMap $r6, $r7;
        android.telephony.mbms.InternalDownloadSessionCallback $r8;

        r0 := @this: android.telephony.MbmsDownloadSession;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.util.concurrent.Executor;

        i0 := @parameter2: int;

        r3 := @parameter3: android.telephony.mbms.MbmsDownloadSessionCallback;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.telephony.MbmsDownloadSession: int mSubscriptionId> = -1;

        $r4 = new android.telephony.MbmsDownloadSession$1;

        specialinvoke $r4.<android.telephony.MbmsDownloadSession$1: void <init>(android.telephony.MbmsDownloadSession)>(r0);

        r0.<android.telephony.MbmsDownloadSession: android.os.IBinder$DeathRecipient mDeathRecipient> = $r4;

        $r5 = new java.util.concurrent.atomic.AtomicReference;

        specialinvoke $r5.<java.util.concurrent.atomic.AtomicReference: void <init>(java.lang.Object)>(null);

        r0.<android.telephony.MbmsDownloadSession: java.util.concurrent.atomic.AtomicReference mService> = $r5;

        $r6 = new java.util.HashMap;

        specialinvoke $r6.<java.util.HashMap: void <init>()>();

        r0.<android.telephony.MbmsDownloadSession: java.util.Map mInternalDownloadStatusListeners> = $r6;

        $r7 = new java.util.HashMap;

        specialinvoke $r7.<java.util.HashMap: void <init>()>();

        r0.<android.telephony.MbmsDownloadSession: java.util.Map mInternalDownloadProgressListeners> = $r7;

        r0.<android.telephony.MbmsDownloadSession: android.content.Context mContext> = r1;

        r0.<android.telephony.MbmsDownloadSession: int mSubscriptionId> = i0;

        $r8 = new android.telephony.mbms.InternalDownloadSessionCallback;

        specialinvoke $r8.<android.telephony.mbms.InternalDownloadSessionCallback: void <init>(android.telephony.mbms.MbmsDownloadSessionCallback,java.util.concurrent.Executor)>(r3, r2);

        r0.<android.telephony.MbmsDownloadSession: android.telephony.mbms.InternalDownloadSessionCallback mInternalCallback> = $r8;

        return;
    }

    static void access$000(android.telephony.MbmsDownloadSession, int, java.lang.String)
    {
        android.telephony.MbmsDownloadSession r0;
        int i0;
        java.lang.String r1;

        r0 := @parameter0: android.telephony.MbmsDownloadSession;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        specialinvoke r0.<android.telephony.MbmsDownloadSession: void sendErrorToApp(int,java.lang.String)>(i0, r1);

        return;
    }

    static int access$100(android.telephony.MbmsDownloadSession)
    {
        android.telephony.MbmsDownloadSession r0;
        int $i0;

        r0 := @parameter0: android.telephony.MbmsDownloadSession;

        $i0 = r0.<android.telephony.MbmsDownloadSession: int mSubscriptionId>;

        return $i0;
    }

    static android.telephony.mbms.InternalDownloadSessionCallback access$200(android.telephony.MbmsDownloadSession)
    {
        android.telephony.MbmsDownloadSession r0;
        android.telephony.mbms.InternalDownloadSessionCallback $r1;

        r0 := @parameter0: android.telephony.MbmsDownloadSession;

        $r1 = r0.<android.telephony.MbmsDownloadSession: android.telephony.mbms.InternalDownloadSessionCallback mInternalCallback>;

        return $r1;
    }

    static java.lang.String access$300()
    {
        java.lang.String $r0;

        $r0 = <android.telephony.MbmsDownloadSession: java.lang.String LOG_TAG>;

        return $r0;
    }

    static java.util.concurrent.atomic.AtomicBoolean access$400()
    {
        java.util.concurrent.atomic.AtomicBoolean $r0;

        $r0 = <android.telephony.MbmsDownloadSession: java.util.concurrent.atomic.AtomicBoolean sIsInitialized>;

        return $r0;
    }

    static android.os.IBinder$DeathRecipient access$500(android.telephony.MbmsDownloadSession)
    {
        android.telephony.MbmsDownloadSession r0;
        android.os.IBinder$DeathRecipient $r1;

        r0 := @parameter0: android.telephony.MbmsDownloadSession;

        $r1 = r0.<android.telephony.MbmsDownloadSession: android.os.IBinder$DeathRecipient mDeathRecipient>;

        return $r1;
    }

    static java.util.concurrent.atomic.AtomicReference access$600(android.telephony.MbmsDownloadSession)
    {
        android.telephony.MbmsDownloadSession r0;
        java.util.concurrent.atomic.AtomicReference $r1;

        r0 := @parameter0: android.telephony.MbmsDownloadSession;

        $r1 = r0.<android.telephony.MbmsDownloadSession: java.util.concurrent.atomic.AtomicReference mService>;

        return $r1;
    }

    static android.content.Context access$700(android.telephony.MbmsDownloadSession)
    {
        android.telephony.MbmsDownloadSession r0;
        android.content.Context $r1;

        r0 := @parameter0: android.telephony.MbmsDownloadSession;

        $r1 = r0.<android.telephony.MbmsDownloadSession: android.content.Context mContext>;

        return $r1;
    }

    private int bindAndInitialize()
    {
        android.telephony.MbmsDownloadSession r0;
        android.telephony.MbmsDownloadSession$3 $r2;
        android.content.Context $r3;
        int $i0;

        r0 := @this: android.telephony.MbmsDownloadSession;

        $r2 = new android.telephony.MbmsDownloadSession$3;

        specialinvoke $r2.<android.telephony.MbmsDownloadSession$3: void <init>(android.telephony.MbmsDownloadSession)>(r0);

        r0.<android.telephony.MbmsDownloadSession: android.content.ServiceConnection mServiceConnection> = $r2;

        $r3 = r0.<android.telephony.MbmsDownloadSession: android.content.Context mContext>;

        $i0 = staticinvoke <android.telephony.mbms.MbmsUtils: int startBinding(android.content.Context,java.lang.String,android.content.ServiceConnection)>($r3, "android.telephony.action.EmbmsDownload", $r2);

        return $i0;
    }

    private void checkDownloadRequestDestination(android.telephony.mbms.DownloadRequest)
    {
        android.telephony.MbmsDownloadSession r0;
        boolean z0, $z1, $z2;
        java.lang.IllegalStateException r2;
        java.io.File $r3, $r7, $r9, $r10;
        android.net.Uri $r4;
        java.lang.String $r5, $r15;
        java.lang.IllegalArgumentException $r6, r20;
        android.content.Context $r8;
        java.lang.Throwable $r11, $r12;
        android.telephony.mbms.DownloadRequest r16;
        java.lang.StringBuilder r22;

        r0 := @this: android.telephony.MbmsDownloadSession;

        r16 := @parameter0: android.telephony.mbms.DownloadRequest;

        $r3 = new java.io.File;

        $r4 = virtualinvoke r16.<android.telephony.mbms.DownloadRequest: android.net.Uri getDestinationUri()>();

        $r5 = virtualinvoke $r4.<android.net.Uri: java.lang.String getPath()>();

        specialinvoke $r3.<java.io.File: void <init>(java.lang.String)>($r5);

        $z1 = virtualinvoke $r3.<java.io.File: boolean isDirectory()>();

        if $z1 == 0 goto label9;

        $r7 = new java.io.File;

        $r8 = r0.<android.telephony.MbmsDownloadSession: android.content.Context mContext>;

        $r9 = staticinvoke <android.telephony.mbms.MbmsTempFileProvider: java.io.File getEmbmsTempFileDir(android.content.Context)>($r8);

        specialinvoke $r7.<java.io.File: void <init>(java.io.File,java.lang.String)>($r9, "destinationSanityCheckFile");

        $r10 = new java.io.File;

        specialinvoke $r10.<java.io.File: void <init>(java.io.File,java.lang.String)>($r3, "destinationSanityCheckFile");

     label1:
        $z2 = virtualinvoke $r7.<java.io.File: boolean exists()>();

        if $z2 != 0 goto label2;

        virtualinvoke $r7.<java.io.File: boolean createNewFile()>();

     label2:
        z0 = virtualinvoke $r7.<java.io.File: boolean renameTo(java.io.File)>($r10);

     label3:
        if z0 == 0 goto label4;

        virtualinvoke $r7.<java.io.File: boolean delete()>();

        virtualinvoke $r10.<java.io.File: boolean delete()>();

        return;

     label4:
        r20 = new java.lang.IllegalArgumentException;

        specialinvoke r20.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Destination provided in the download request is invalid -- files in the temp file directory cannot be directly moved there.");

        throw r20;

     label5:
        $r11 := @caughtexception;

        goto label8;

     label6:
        $r12 := @caughtexception;

     label7:
        r2 = new java.lang.IllegalStateException;

        r22 = new java.lang.StringBuilder;

        specialinvoke r22.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Got IOException while testing out the destination: ");

        virtualinvoke r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r12);

        $r15 = virtualinvoke r22.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r15);

        throw r2;

     label8:
        virtualinvoke $r7.<java.io.File: boolean delete()>();

        virtualinvoke $r10.<java.io.File: boolean delete()>();

        throw $r11;

     label9:
        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The destination path must be a directory");

        throw $r6;

        catch java.io.IOException from label1 to label2 with label6;
        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.io.IOException from label2 to label3 with label6;
        catch java.lang.Throwable from label2 to label3 with label5;
        catch java.io.IOException from label4 to label5 with label6;
        catch java.lang.Throwable from label4 to label5 with label5;
        catch java.lang.Throwable from label7 to label8 with label5;
    }

    public static android.telephony.MbmsDownloadSession create(android.content.Context, java.util.concurrent.Executor, int, android.telephony.mbms.MbmsDownloadSessionCallback)
    {
        java.util.concurrent.Executor r0;
        android.telephony.mbms.MbmsDownloadSessionCallback r1;
        java.util.concurrent.atomic.AtomicBoolean $r2, $r5;
        boolean $z0;
        java.lang.IllegalStateException $r3;
        android.telephony.MbmsDownloadSession $r4;
        android.telephony.MbmsDownloadSession$2 $r6;
        android.content.Context r7;
        int i0, i1;

        r7 := @parameter0: android.content.Context;

        r0 := @parameter1: java.util.concurrent.Executor;

        i0 := @parameter2: int;

        r1 := @parameter3: android.telephony.mbms.MbmsDownloadSessionCallback;

        $r2 = <android.telephony.MbmsDownloadSession: java.util.concurrent.atomic.AtomicBoolean sIsInitialized>;

        $z0 = virtualinvoke $r2.<java.util.concurrent.atomic.AtomicBoolean: boolean compareAndSet(boolean,boolean)>(0, 1);

        if $z0 == 0 goto label2;

        $r4 = new android.telephony.MbmsDownloadSession;

        specialinvoke $r4.<android.telephony.MbmsDownloadSession: void <init>(android.content.Context,java.util.concurrent.Executor,int,android.telephony.mbms.MbmsDownloadSessionCallback)>(r7, r0, i0, r1);

        i1 = specialinvoke $r4.<android.telephony.MbmsDownloadSession: int bindAndInitialize()>();

        if i1 == 0 goto label1;

        $r5 = <android.telephony.MbmsDownloadSession: java.util.concurrent.atomic.AtomicBoolean sIsInitialized>;

        virtualinvoke $r5.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(0);

        $r6 = new android.telephony.MbmsDownloadSession$2;

        specialinvoke $r6.<android.telephony.MbmsDownloadSession$2: void <init>(android.telephony.mbms.MbmsDownloadSessionCallback,int)>(r1, i1);

        interfaceinvoke r0.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r6);

        return null;

     label1:
        return $r4;

     label2:
        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Cannot have two active instances");

        throw $r3;
    }

    public static android.telephony.MbmsDownloadSession create(android.content.Context, java.util.concurrent.Executor, android.telephony.mbms.MbmsDownloadSessionCallback)
    {
        android.content.Context r0;
        java.util.concurrent.Executor r1;
        android.telephony.mbms.MbmsDownloadSessionCallback r2;
        int $i0;
        android.telephony.MbmsDownloadSession $r3;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.util.concurrent.Executor;

        r2 := @parameter2: android.telephony.mbms.MbmsDownloadSessionCallback;

        $i0 = staticinvoke <android.telephony.SubscriptionManager: int getDefaultSubscriptionId()>();

        $r3 = staticinvoke <android.telephony.MbmsDownloadSession: android.telephony.MbmsDownloadSession create(android.content.Context,java.util.concurrent.Executor,int,android.telephony.mbms.MbmsDownloadSessionCallback)>(r0, r1, $i0, r2);

        return $r3;
    }

    private void deleteDownloadRequestToken(android.telephony.mbms.DownloadRequest)
    {
        android.telephony.MbmsDownloadSession r0;
        boolean $z0, $z1;
        java.lang.StringBuilder $r1, $r5;
        java.lang.String $r4, $r8, r11, r13;
        android.telephony.mbms.DownloadRequest r9;
        java.io.File r10;

        r0 := @this: android.telephony.MbmsDownloadSession;

        r9 := @parameter0: android.telephony.mbms.DownloadRequest;

        r10 = specialinvoke r0.<android.telephony.MbmsDownloadSession: java.io.File getDownloadRequestTokenPath(android.telephony.mbms.DownloadRequest)>(r9);

        $z0 = virtualinvoke r10.<java.io.File: boolean isFile()>();

        if $z0 != 0 goto label1;

        r11 = <android.telephony.MbmsDownloadSession: java.lang.String LOG_TAG>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Attempting to delete non-existent download token at ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r10);

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>(r11, $r8);

        return;

     label1:
        $z1 = virtualinvoke r10.<java.io.File: boolean delete()>();

        if $z1 != 0 goto label2;

        r13 = <android.telephony.MbmsDownloadSession: java.lang.String LOG_TAG>;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Couldn\'t delete download token at ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r10);

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>(r13, $r4);

     label2:
        return;
    }

    private java.io.File getDownloadRequestTokenPath(android.telephony.mbms.DownloadRequest)
    {
        android.telephony.MbmsDownloadSession r0;
        android.telephony.mbms.DownloadRequest r1;
        java.io.File r2, $r10;
        android.content.Context $r4;
        java.lang.String $r5, $r7, $r11;
        java.lang.StringBuilder $r6;

        r0 := @this: android.telephony.MbmsDownloadSession;

        r1 := @parameter0: android.telephony.mbms.DownloadRequest;

        $r4 = r0.<android.telephony.MbmsDownloadSession: android.content.Context mContext>;

        $r5 = virtualinvoke r1.<android.telephony.mbms.DownloadRequest: java.lang.String getFileServiceId()>();

        r2 = staticinvoke <android.telephony.mbms.MbmsUtils: java.io.File getEmbmsTempFileDirForService(android.content.Context,java.lang.String)>($r4, $r5);

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke r1.<android.telephony.mbms.DownloadRequest: java.lang.String getHash()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".download_token");

        $r10 = new java.io.File;

        $r11 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.io.File: void <init>(java.io.File,java.lang.String)>(r2, $r11);

        return $r10;
    }

    private void sendErrorToApp(int, java.lang.String)
    {
        android.telephony.MbmsDownloadSession r0;
        int i0;
        java.lang.String r1;
        android.telephony.mbms.InternalDownloadSessionCallback $r2;

        r0 := @this: android.telephony.MbmsDownloadSession;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        $r2 = r0.<android.telephony.MbmsDownloadSession: android.telephony.mbms.InternalDownloadSessionCallback mInternalCallback>;

        virtualinvoke $r2.<android.telephony.mbms.InternalDownloadSessionCallback: void onError(int,java.lang.String)>(i0, r1);

        return;
    }

    private void validateTempFileRootSanity(java.io.File) throws java.io.IOException
    {
        android.telephony.MbmsDownloadSession r0;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.IllegalArgumentException $r1, $r2, $r6, $r10, $r14;
        android.content.Context $r3, $r7, $r11;
        java.io.File $r4, $r8, $r12, r15;
        java.lang.String $r5, $r9, $r13, r16;

        r0 := @this: android.telephony.MbmsDownloadSession;

        r15 := @parameter0: java.io.File;

        $z0 = virtualinvoke r15.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label5;

        $z1 = virtualinvoke r15.<java.io.File: boolean isDirectory()>();

        if $z1 == 0 goto label4;

        r16 = virtualinvoke r15.<java.io.File: java.lang.String getCanonicalPath()>();

        $r3 = r0.<android.telephony.MbmsDownloadSession: android.content.Context mContext>;

        $r4 = virtualinvoke $r3.<android.content.Context: java.io.File getDataDir()>();

        $r5 = virtualinvoke $r4.<java.io.File: java.lang.String getCanonicalPath()>();

        $z2 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r16);

        if $z2 != 0 goto label3;

        $r7 = r0.<android.telephony.MbmsDownloadSession: android.content.Context mContext>;

        $r8 = virtualinvoke $r7.<android.content.Context: java.io.File getCacheDir()>();

        $r9 = virtualinvoke $r8.<java.io.File: java.lang.String getCanonicalPath()>();

        $z3 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>(r16);

        if $z3 != 0 goto label2;

        $r11 = r0.<android.telephony.MbmsDownloadSession: android.content.Context mContext>;

        $r12 = virtualinvoke $r11.<android.content.Context: java.io.File getFilesDir()>();

        $r13 = virtualinvoke $r12.<java.io.File: java.lang.String getCanonicalPath()>();

        $z4 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>(r16);

        if $z4 != 0 goto label1;

        return;

     label1:
        $r14 = new java.lang.IllegalArgumentException;

        specialinvoke $r14.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Temp file root cannot be your files dir");

        throw $r14;

     label2:
        $r10 = new java.lang.IllegalArgumentException;

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Temp file root cannot be your cache dir");

        throw $r10;

     label3:
        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Temp file root cannot be your data dir");

        throw $r6;

     label4:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Provided File is not a directory");

        throw $r2;

     label5:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Provided directory does not exist");

        throw $r1;
    }

    private void writeDownloadRequestToken(android.telephony.mbms.DownloadRequest)
    {
        android.telephony.MbmsDownloadSession r0;
        java.io.File r1, $r2, $r15;
        boolean $z0, $z1, $z2;
        java.lang.String $r6, $r8, $r11, $r14, $r23, $r26, r28;
        java.lang.StringBuilder $r9, $r17, r31;
        java.lang.Throwable $r16;
        java.lang.RuntimeException $r25, r30;
        android.telephony.mbms.DownloadRequest r27;

        r0 := @this: android.telephony.MbmsDownloadSession;

        r27 := @parameter0: android.telephony.mbms.DownloadRequest;

        r1 = specialinvoke r0.<android.telephony.MbmsDownloadSession: java.io.File getDownloadRequestTokenPath(android.telephony.mbms.DownloadRequest)>(r27);

        $r2 = virtualinvoke r1.<java.io.File: java.io.File getParentFile()>();

        $z0 = virtualinvoke $r2.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label1;

        $r15 = virtualinvoke r1.<java.io.File: java.io.File getParentFile()>();

        virtualinvoke $r15.<java.io.File: boolean mkdirs()>();

     label1:
        $z1 = virtualinvoke r1.<java.io.File: boolean exists()>();

        if $z1 == 0 goto label2;

        r28 = <android.telephony.MbmsDownloadSession: java.lang.String LOG_TAG>;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Download token ");

        $r11 = virtualinvoke r1.<java.io.File: java.lang.String getName()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" already exists");

        $r14 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>(r28, $r14);

        return;

     label2:
        $z2 = virtualinvoke r1.<java.io.File: boolean createNewFile()>();

        if $z2 == 0 goto label4;

     label3:
        return;

     label4:
        r30 = new java.lang.RuntimeException;

        r31 = new java.lang.StringBuilder;

        specialinvoke r31.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to create download token for request ");

        virtualinvoke r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r27);

        virtualinvoke r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". Token location is ");

        $r6 = virtualinvoke r1.<java.io.File: java.lang.String getPath()>();

        virtualinvoke r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke r31.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r30.<java.lang.RuntimeException: void <init>(java.lang.String)>($r8);

        throw r30;

     label5:
        $r16 := @caughtexception;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to create download token for request ");

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r27);

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" due to IOException ");

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r16);

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". Attempted to write to ");

        $r23 = virtualinvoke r1.<java.io.File: java.lang.String getPath()>();

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        $r25 = new java.lang.RuntimeException;

        $r26 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r25.<java.lang.RuntimeException: void <init>(java.lang.String)>($r26);

        throw $r25;

        catch java.io.IOException from label2 to label3 with label5;
        catch java.io.IOException from label4 to label5 with label5;
    }

    public void addProgressListener(android.telephony.mbms.DownloadRequest, java.util.concurrent.Executor, android.telephony.mbms.DownloadProgressListener)
    {
        android.telephony.MbmsDownloadSession r0;
        android.telephony.mbms.DownloadProgressListener r1;
        android.telephony.mbms.vendor.IMbmsDownloadService r2;
        int i0;
        java.util.concurrent.atomic.AtomicReference $r3, $r10;
        java.lang.Object $r4;
        java.lang.IllegalStateException $r5, r16;
        android.telephony.mbms.InternalDownloadProgressListener $r6;
        java.util.Map $r7;
        android.os.RemoteException $r9;
        java.util.concurrent.atomic.AtomicBoolean $r11;
        android.telephony.mbms.DownloadRequest r12;
        java.util.concurrent.Executor r13;
        java.lang.IllegalArgumentException r15;

        r0 := @this: android.telephony.MbmsDownloadSession;

        r12 := @parameter0: android.telephony.mbms.DownloadRequest;

        r13 := @parameter1: java.util.concurrent.Executor;

        r1 := @parameter2: android.telephony.mbms.DownloadProgressListener;

        $r3 = r0.<android.telephony.MbmsDownloadSession: java.util.concurrent.atomic.AtomicReference mService>;

        $r4 = virtualinvoke $r3.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        r2 = (android.telephony.mbms.vendor.IMbmsDownloadService) $r4;

        if r2 == null goto label9;

        $r6 = new android.telephony.mbms.InternalDownloadProgressListener;

        specialinvoke $r6.<android.telephony.mbms.InternalDownloadProgressListener: void <init>(android.telephony.mbms.DownloadProgressListener,java.util.concurrent.Executor)>(r1, r13);

     label1:
        i0 = interfaceinvoke r2.<android.telephony.mbms.vendor.IMbmsDownloadService: int addProgressListener(android.telephony.mbms.DownloadRequest,android.telephony.mbms.IDownloadProgressListener)>(r12, $r6);

     label2:
        if i0 == -1 goto label7;

        if i0 == 0 goto label6;

        if i0 == 402 goto label5;

     label3:
        specialinvoke r0.<android.telephony.MbmsDownloadSession: void sendErrorToApp(int,java.lang.String)>(i0, null);

     label4:
        return;

     label5:
        r15 = new java.lang.IllegalArgumentException;

        specialinvoke r15.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Unknown download request.");

        throw r15;

     label6:
        $r7 = r0.<android.telephony.MbmsDownloadSession: java.util.Map mInternalDownloadProgressListeners>;

        interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r6);

        return;

     label7:
        virtualinvoke r0.<android.telephony.MbmsDownloadSession: void close()>();

        r16 = new java.lang.IllegalStateException;

        specialinvoke r16.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Middleware must not return an unknown error code");

        throw r16;

     label8:
        $r9 := @caughtexception;

        $r10 = r0.<android.telephony.MbmsDownloadSession: java.util.concurrent.atomic.AtomicReference mService>;

        virtualinvoke $r10.<java.util.concurrent.atomic.AtomicReference: void set(java.lang.Object)>(null);

        $r11 = <android.telephony.MbmsDownloadSession: java.util.concurrent.atomic.AtomicBoolean sIsInitialized>;

        virtualinvoke $r11.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(0);

        specialinvoke r0.<android.telephony.MbmsDownloadSession: void sendErrorToApp(int,java.lang.String)>(3, null);

        return;

     label9:
        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Middleware not yet bound");

        throw $r5;

        catch android.os.RemoteException from label1 to label2 with label8;
        catch android.os.RemoteException from label3 to label4 with label8;
        catch android.os.RemoteException from label5 to label6 with label8;
        catch android.os.RemoteException from label7 to label8 with label8;
    }

    public void addStatusListener(android.telephony.mbms.DownloadRequest, java.util.concurrent.Executor, android.telephony.mbms.DownloadStatusListener)
    {
        android.telephony.MbmsDownloadSession r0;
        android.telephony.mbms.DownloadStatusListener r1;
        android.telephony.mbms.vendor.IMbmsDownloadService r2;
        int i0;
        java.util.concurrent.atomic.AtomicReference $r3, $r10;
        java.lang.Object $r4;
        java.lang.IllegalStateException $r5, r16;
        android.telephony.mbms.InternalDownloadStatusListener $r6;
        java.util.Map $r7;
        android.os.RemoteException $r9;
        java.util.concurrent.atomic.AtomicBoolean $r11;
        android.telephony.mbms.DownloadRequest r12;
        java.util.concurrent.Executor r13;
        java.lang.IllegalArgumentException r15;

        r0 := @this: android.telephony.MbmsDownloadSession;

        r12 := @parameter0: android.telephony.mbms.DownloadRequest;

        r13 := @parameter1: java.util.concurrent.Executor;

        r1 := @parameter2: android.telephony.mbms.DownloadStatusListener;

        $r3 = r0.<android.telephony.MbmsDownloadSession: java.util.concurrent.atomic.AtomicReference mService>;

        $r4 = virtualinvoke $r3.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        r2 = (android.telephony.mbms.vendor.IMbmsDownloadService) $r4;

        if r2 == null goto label9;

        $r6 = new android.telephony.mbms.InternalDownloadStatusListener;

        specialinvoke $r6.<android.telephony.mbms.InternalDownloadStatusListener: void <init>(android.telephony.mbms.DownloadStatusListener,java.util.concurrent.Executor)>(r1, r13);

     label1:
        i0 = interfaceinvoke r2.<android.telephony.mbms.vendor.IMbmsDownloadService: int addStatusListener(android.telephony.mbms.DownloadRequest,android.telephony.mbms.IDownloadStatusListener)>(r12, $r6);

     label2:
        if i0 == -1 goto label7;

        if i0 == 0 goto label6;

        if i0 == 402 goto label5;

     label3:
        specialinvoke r0.<android.telephony.MbmsDownloadSession: void sendErrorToApp(int,java.lang.String)>(i0, null);

     label4:
        return;

     label5:
        r15 = new java.lang.IllegalArgumentException;

        specialinvoke r15.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Unknown download request.");

        throw r15;

     label6:
        $r7 = r0.<android.telephony.MbmsDownloadSession: java.util.Map mInternalDownloadStatusListeners>;

        interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r6);

        return;

     label7:
        virtualinvoke r0.<android.telephony.MbmsDownloadSession: void close()>();

        r16 = new java.lang.IllegalStateException;

        specialinvoke r16.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Middleware must not return an unknown error code");

        throw r16;

     label8:
        $r9 := @caughtexception;

        $r10 = r0.<android.telephony.MbmsDownloadSession: java.util.concurrent.atomic.AtomicReference mService>;

        virtualinvoke $r10.<java.util.concurrent.atomic.AtomicReference: void set(java.lang.Object)>(null);

        $r11 = <android.telephony.MbmsDownloadSession: java.util.concurrent.atomic.AtomicBoolean sIsInitialized>;

        virtualinvoke $r11.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(0);

        specialinvoke r0.<android.telephony.MbmsDownloadSession: void sendErrorToApp(int,java.lang.String)>(3, null);

        return;

     label9:
        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Middleware not yet bound");

        throw $r5;

        catch android.os.RemoteException from label1 to label2 with label8;
        catch android.os.RemoteException from label3 to label4 with label8;
        catch android.os.RemoteException from label5 to label6 with label8;
        catch android.os.RemoteException from label7 to label8 with label8;
    }

    public void cancelDownload(android.telephony.mbms.DownloadRequest)
    {
        android.telephony.MbmsDownloadSession r0;
        android.telephony.mbms.vendor.IMbmsDownloadService r1;
        int i0;
        java.util.concurrent.atomic.AtomicReference $r2, $r6;
        java.lang.Object $r3;
        java.lang.IllegalStateException $r4, r9;
        android.os.RemoteException $r5;
        java.util.concurrent.atomic.AtomicBoolean $r7;
        android.telephony.mbms.DownloadRequest r8;

        r0 := @this: android.telephony.MbmsDownloadSession;

        r8 := @parameter0: android.telephony.mbms.DownloadRequest;

        $r2 = r0.<android.telephony.MbmsDownloadSession: java.util.concurrent.atomic.AtomicReference mService>;

        $r3 = virtualinvoke $r2.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        r1 = (android.telephony.mbms.vendor.IMbmsDownloadService) $r3;

        if r1 == null goto label10;

     label01:
        i0 = interfaceinvoke r1.<android.telephony.mbms.vendor.IMbmsDownloadService: int cancelDownload(android.telephony.mbms.DownloadRequest)>(r8);

     label02:
        if i0 == -1 goto label07;

        if i0 == 0 goto label05;

     label03:
        specialinvoke r0.<android.telephony.MbmsDownloadSession: void sendErrorToApp(int,java.lang.String)>(i0, null);

     label04:
        goto label06;

     label05:
        specialinvoke r0.<android.telephony.MbmsDownloadSession: void deleteDownloadRequestToken(android.telephony.mbms.DownloadRequest)>(r8);

     label06:
        goto label09;

     label07:
        virtualinvoke r0.<android.telephony.MbmsDownloadSession: void close()>();

        r9 = new java.lang.IllegalStateException;

        specialinvoke r9.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Middleware must not return an unknown error code");

        throw r9;

     label08:
        $r5 := @caughtexception;

        $r6 = r0.<android.telephony.MbmsDownloadSession: java.util.concurrent.atomic.AtomicReference mService>;

        virtualinvoke $r6.<java.util.concurrent.atomic.AtomicReference: void set(java.lang.Object)>(null);

        $r7 = <android.telephony.MbmsDownloadSession: java.util.concurrent.atomic.AtomicBoolean sIsInitialized>;

        virtualinvoke $r7.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(0);

        specialinvoke r0.<android.telephony.MbmsDownloadSession: void sendErrorToApp(int,java.lang.String)>(3, null);

     label09:
        return;

     label10:
        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Middleware not yet bound");

        throw $r4;

        catch android.os.RemoteException from label01 to label02 with label08;
        catch android.os.RemoteException from label03 to label04 with label08;
        catch android.os.RemoteException from label05 to label06 with label08;
        catch android.os.RemoteException from label07 to label08 with label08;
    }

    public void close()
    {
        android.telephony.MbmsDownloadSession r0;
        java.util.concurrent.atomic.AtomicReference $r1, $r4, $r10, $r16;
        java.lang.Object $r2;
        java.lang.String $r3, $r14;
        java.util.concurrent.atomic.AtomicBoolean $r5, $r11, $r17;
        android.telephony.mbms.InternalDownloadSessionCallback $r6, $r12, $r18;
        android.content.ServiceConnection $r7, $r8;
        int $i1;
        android.content.Context $r9;
        android.os.RemoteException $r13;
        java.lang.Throwable $r15;
        android.telephony.mbms.vendor.IMbmsDownloadService r19;

        r0 := @this: android.telephony.MbmsDownloadSession;

     label01:
        $r1 = r0.<android.telephony.MbmsDownloadSession: java.util.concurrent.atomic.AtomicReference mService>;

        $r2 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        r19 = (android.telephony.mbms.vendor.IMbmsDownloadService) $r2;

     label02:
        if r19 == null goto label07;

     label03:
        $r7 = r0.<android.telephony.MbmsDownloadSession: android.content.ServiceConnection mServiceConnection>;

        if $r7 != null goto label05;

     label04:
        goto label07;

     label05:
        $i1 = r0.<android.telephony.MbmsDownloadSession: int mSubscriptionId>;

        interfaceinvoke r19.<android.telephony.mbms.vendor.IMbmsDownloadService: void dispose(int)>($i1);

        $r9 = r0.<android.telephony.MbmsDownloadSession: android.content.Context mContext>;

        $r8 = r0.<android.telephony.MbmsDownloadSession: android.content.ServiceConnection mServiceConnection>;

        virtualinvoke $r9.<android.content.Context: void unbindService(android.content.ServiceConnection)>($r8);

     label06:
        goto label12;

     label07:
        $r3 = <android.telephony.MbmsDownloadSession: java.lang.String LOG_TAG>;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r3, "Service already dead");

     label08:
        $r4 = r0.<android.telephony.MbmsDownloadSession: java.util.concurrent.atomic.AtomicReference mService>;

        virtualinvoke $r4.<java.util.concurrent.atomic.AtomicReference: void set(java.lang.Object)>(null);

        $r5 = <android.telephony.MbmsDownloadSession: java.util.concurrent.atomic.AtomicBoolean sIsInitialized>;

        virtualinvoke $r5.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(0);

        r0.<android.telephony.MbmsDownloadSession: android.content.ServiceConnection mServiceConnection> = null;

        $r6 = r0.<android.telephony.MbmsDownloadSession: android.telephony.mbms.InternalDownloadSessionCallback mInternalCallback>;

        virtualinvoke $r6.<android.telephony.mbms.InternalDownloadSessionCallback: void stop()>();

        return;

     label09:
        $r15 := @caughtexception;

        goto label13;

     label10:
        $r13 := @caughtexception;

     label11:
        $r14 = <android.telephony.MbmsDownloadSession: java.lang.String LOG_TAG>;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r14, "Remote exception while disposing of service");

     label12:
        $r10 = r0.<android.telephony.MbmsDownloadSession: java.util.concurrent.atomic.AtomicReference mService>;

        virtualinvoke $r10.<java.util.concurrent.atomic.AtomicReference: void set(java.lang.Object)>(null);

        $r11 = <android.telephony.MbmsDownloadSession: java.util.concurrent.atomic.AtomicBoolean sIsInitialized>;

        virtualinvoke $r11.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(0);

        r0.<android.telephony.MbmsDownloadSession: android.content.ServiceConnection mServiceConnection> = null;

        $r12 = r0.<android.telephony.MbmsDownloadSession: android.telephony.mbms.InternalDownloadSessionCallback mInternalCallback>;

        virtualinvoke $r12.<android.telephony.mbms.InternalDownloadSessionCallback: void stop()>();

        return;

     label13:
        $r16 = r0.<android.telephony.MbmsDownloadSession: java.util.concurrent.atomic.AtomicReference mService>;

        virtualinvoke $r16.<java.util.concurrent.atomic.AtomicReference: void set(java.lang.Object)>(null);

        $r17 = <android.telephony.MbmsDownloadSession: java.util.concurrent.atomic.AtomicBoolean sIsInitialized>;

        virtualinvoke $r17.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(0);

        r0.<android.telephony.MbmsDownloadSession: android.content.ServiceConnection mServiceConnection> = null;

        $r18 = r0.<android.telephony.MbmsDownloadSession: android.telephony.mbms.InternalDownloadSessionCallback mInternalCallback>;

        virtualinvoke $r18.<android.telephony.mbms.InternalDownloadSessionCallback: void stop()>();

        throw $r15;

        catch android.os.RemoteException from label01 to label02 with label10;
        catch java.lang.Throwable from label01 to label02 with label09;
        catch android.os.RemoteException from label03 to label04 with label10;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch android.os.RemoteException from label05 to label06 with label10;
        catch java.lang.Throwable from label05 to label06 with label09;
        catch android.os.RemoteException from label07 to label08 with label10;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label11 to label12 with label09;
    }

    public void download(android.telephony.mbms.DownloadRequest)
    {
        android.telephony.MbmsDownloadSession r0;
        android.telephony.mbms.vendor.IMbmsDownloadService r1;
        int i0;
        java.util.concurrent.atomic.AtomicReference $r3, $r13;
        java.lang.Object $r4;
        java.lang.IllegalStateException $r5, r16;
        android.content.Context $r6, $r10;
        android.content.SharedPreferences $r7;
        java.lang.String $r8;
        java.io.File $r9, $r11;
        android.os.RemoteException $r12;
        java.util.concurrent.atomic.AtomicBoolean $r14;
        android.telephony.mbms.DownloadRequest r15;

        r0 := @this: android.telephony.MbmsDownloadSession;

        r15 := @parameter0: android.telephony.mbms.DownloadRequest;

        $r3 = r0.<android.telephony.MbmsDownloadSession: java.util.concurrent.atomic.AtomicReference mService>;

        $r4 = virtualinvoke $r3.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        r1 = (android.telephony.mbms.vendor.IMbmsDownloadService) $r4;

        if r1 == null goto label12;

        $r6 = r0.<android.telephony.MbmsDownloadSession: android.content.Context mContext>;

        $r7 = virtualinvoke $r6.<android.content.Context: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>("MbmsTempFileRootPrefs", 0);

        $r8 = interfaceinvoke $r7.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("mbms_temp_file_root", null);

        if $r8 != null goto label01;

        $r9 = new java.io.File;

        $r10 = r0.<android.telephony.MbmsDownloadSession: android.content.Context mContext>;

        $r11 = virtualinvoke $r10.<android.content.Context: java.io.File getFilesDir()>();

        specialinvoke $r9.<java.io.File: void <init>(java.io.File,java.lang.String)>($r11, "androidMbmsTempFileRoot");

        virtualinvoke $r9.<java.io.File: boolean mkdirs()>();

        virtualinvoke r0.<android.telephony.MbmsDownloadSession: void setTempFileRootDirectory(java.io.File)>($r9);

     label01:
        specialinvoke r0.<android.telephony.MbmsDownloadSession: void checkDownloadRequestDestination(android.telephony.mbms.DownloadRequest)>(r15);

     label02:
        i0 = interfaceinvoke r1.<android.telephony.mbms.vendor.IMbmsDownloadService: int download(android.telephony.mbms.DownloadRequest)>(r15);

     label03:
        if i0 != 0 goto label06;

     label04:
        specialinvoke r0.<android.telephony.MbmsDownloadSession: void writeDownloadRequestToken(android.telephony.mbms.DownloadRequest)>(r15);

     label05:
        goto label08;

     label06:
        if i0 == -1 goto label09;

     label07:
        specialinvoke r0.<android.telephony.MbmsDownloadSession: void sendErrorToApp(int,java.lang.String)>(i0, null);

     label08:
        goto label11;

     label09:
        virtualinvoke r0.<android.telephony.MbmsDownloadSession: void close()>();

        r16 = new java.lang.IllegalStateException;

        specialinvoke r16.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Middleware must not return an unknown error code");

        throw r16;

     label10:
        $r12 := @caughtexception;

        $r13 = r0.<android.telephony.MbmsDownloadSession: java.util.concurrent.atomic.AtomicReference mService>;

        virtualinvoke $r13.<java.util.concurrent.atomic.AtomicReference: void set(java.lang.Object)>(null);

        $r14 = <android.telephony.MbmsDownloadSession: java.util.concurrent.atomic.AtomicBoolean sIsInitialized>;

        virtualinvoke $r14.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(0);

        specialinvoke r0.<android.telephony.MbmsDownloadSession: void sendErrorToApp(int,java.lang.String)>(3, null);

     label11:
        return;

     label12:
        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Middleware not yet bound");

        throw $r5;

        catch android.os.RemoteException from label02 to label03 with label10;
        catch android.os.RemoteException from label04 to label05 with label10;
        catch android.os.RemoteException from label07 to label08 with label10;
        catch android.os.RemoteException from label09 to label10 with label10;
    }

    public java.io.File getTempFileRootDirectory()
    {
        android.telephony.MbmsDownloadSession r0;
        java.lang.String r1;
        android.content.Context $r2;
        android.content.SharedPreferences $r3;
        java.io.File $r4;

        r0 := @this: android.telephony.MbmsDownloadSession;

        $r2 = r0.<android.telephony.MbmsDownloadSession: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>("MbmsTempFileRootPrefs", 0);

        r1 = interfaceinvoke $r3.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("mbms_temp_file_root", null);

        if r1 == null goto label1;

        $r4 = new java.io.File;

        specialinvoke $r4.<java.io.File: void <init>(java.lang.String)>(r1);

        return $r4;

     label1:
        return null;
    }

    public java.util.List listPendingDownloads()
    {
        android.telephony.MbmsDownloadSession r0;
        java.util.concurrent.atomic.AtomicReference $r1, $r5;
        java.lang.Object $r2;
        java.lang.IllegalStateException $r3;
        int $i0;
        android.os.RemoteException $r4;
        java.util.concurrent.atomic.AtomicBoolean $r6;
        java.util.List $r7, r9;
        android.telephony.mbms.vendor.IMbmsDownloadService r8;

        r0 := @this: android.telephony.MbmsDownloadSession;

        $r1 = r0.<android.telephony.MbmsDownloadSession: java.util.concurrent.atomic.AtomicReference mService>;

        $r2 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        r8 = (android.telephony.mbms.vendor.IMbmsDownloadService) $r2;

        if r8 == null goto label4;

     label1:
        $i0 = r0.<android.telephony.MbmsDownloadSession: int mSubscriptionId>;

        r9 = interfaceinvoke r8.<android.telephony.mbms.vendor.IMbmsDownloadService: java.util.List listPendingDownloads(int)>($i0);

     label2:
        return r9;

     label3:
        $r4 := @caughtexception;

        $r5 = r0.<android.telephony.MbmsDownloadSession: java.util.concurrent.atomic.AtomicReference mService>;

        virtualinvoke $r5.<java.util.concurrent.atomic.AtomicReference: void set(java.lang.Object)>(null);

        $r6 = <android.telephony.MbmsDownloadSession: java.util.concurrent.atomic.AtomicBoolean sIsInitialized>;

        virtualinvoke $r6.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(0);

        specialinvoke r0.<android.telephony.MbmsDownloadSession: void sendErrorToApp(int,java.lang.String)>(3, null);

        $r7 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $r7;

     label4:
        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Middleware not yet bound");

        throw $r3;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void removeProgressListener(android.telephony.mbms.DownloadRequest, android.telephony.mbms.DownloadProgressListener)
    {
        android.telephony.MbmsDownloadSession r0;
        android.telephony.mbms.vendor.IMbmsDownloadService r1;
        android.telephony.mbms.InternalDownloadProgressListener r2, r21, r23, r26, r30;
        int i0;
        java.util.concurrent.atomic.AtomicReference $r3, $r12;
        java.lang.Object $r4, $r6, $r8, $r10, $r15, $r18;
        java.util.Map $r5, $r7, $r9, $r14, $r17;
        android.os.RemoteException $r11;
        java.util.concurrent.atomic.AtomicBoolean $r13;
        java.lang.Throwable $r16;
        android.telephony.mbms.DownloadRequest r19;
        android.telephony.mbms.DownloadProgressListener r20;
        java.lang.IllegalArgumentException r22, r27;
        java.lang.IllegalStateException r24, r28;

        r0 := @this: android.telephony.MbmsDownloadSession;

        r19 := @parameter0: android.telephony.mbms.DownloadRequest;

        r20 := @parameter1: android.telephony.mbms.DownloadProgressListener;

     label01:
        $r3 = r0.<android.telephony.MbmsDownloadSession: java.util.concurrent.atomic.AtomicReference mService>;

        $r4 = virtualinvoke $r3.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        r1 = (android.telephony.mbms.vendor.IMbmsDownloadService) $r4;

     label02:
        if r1 == null goto label19;

     label03:
        $r5 = r0.<android.telephony.MbmsDownloadSession: java.util.Map mInternalDownloadProgressListeners>;

        $r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>(r20);

        r2 = (android.telephony.mbms.InternalDownloadProgressListener) $r6;

     label04:
        if r2 == null goto label18;

     label05:
        i0 = interfaceinvoke r1.<android.telephony.mbms.vendor.IMbmsDownloadService: int removeProgressListener(android.telephony.mbms.DownloadRequest,android.telephony.mbms.IDownloadProgressListener)>(r19, r2);

     label06:
        if i0 == -1 goto label13;

        if i0 == 0 goto label11;

        if i0 == 402 goto label10;

     label07:
        specialinvoke r0.<android.telephony.MbmsDownloadSession: void sendErrorToApp(int,java.lang.String)>(i0, null);

     label08:
        $r9 = r0.<android.telephony.MbmsDownloadSession: java.util.Map mInternalDownloadProgressListeners>;

        $r10 = interfaceinvoke $r9.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r20);

        r21 = (android.telephony.mbms.InternalDownloadProgressListener) $r10;

        if r21 == null goto label09;

        virtualinvoke r21.<android.telephony.mbms.InternalDownloadProgressListener: void stop()>();

     label09:
        return;

     label10:
        r22 = new java.lang.IllegalArgumentException;

        specialinvoke r22.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Unknown download request.");

        throw r22;

     label11:
        $r7 = r0.<android.telephony.MbmsDownloadSession: java.util.Map mInternalDownloadProgressListeners>;

        $r8 = interfaceinvoke $r7.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r20);

        r23 = (android.telephony.mbms.InternalDownloadProgressListener) $r8;

        if r23 == null goto label12;

        virtualinvoke r23.<android.telephony.mbms.InternalDownloadProgressListener: void stop()>();

     label12:
        return;

     label13:
        virtualinvoke r0.<android.telephony.MbmsDownloadSession: void close()>();

        r24 = new java.lang.IllegalStateException;

        specialinvoke r24.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Middleware must not return an unknown error code");

        throw r24;

     label14:
        $r11 := @caughtexception;

     label15:
        $r12 = r0.<android.telephony.MbmsDownloadSession: java.util.concurrent.atomic.AtomicReference mService>;

        virtualinvoke $r12.<java.util.concurrent.atomic.AtomicReference: void set(java.lang.Object)>(null);

        $r13 = <android.telephony.MbmsDownloadSession: java.util.concurrent.atomic.AtomicBoolean sIsInitialized>;

        virtualinvoke $r13.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(0);

        specialinvoke r0.<android.telephony.MbmsDownloadSession: void sendErrorToApp(int,java.lang.String)>(3, null);

     label16:
        $r14 = r0.<android.telephony.MbmsDownloadSession: java.util.Map mInternalDownloadProgressListeners>;

        $r15 = interfaceinvoke $r14.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r20);

        r26 = (android.telephony.mbms.InternalDownloadProgressListener) $r15;

        if r26 == null goto label17;

        virtualinvoke r26.<android.telephony.mbms.InternalDownloadProgressListener: void stop()>();

     label17:
        return;

     label18:
        r27 = new java.lang.IllegalArgumentException;

        specialinvoke r27.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Provided listener was never registered");

        throw r27;

     label19:
        r28 = new java.lang.IllegalStateException;

        specialinvoke r28.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Middleware not yet bound");

        throw r28;

     label20:
        $r16 := @caughtexception;

        $r17 = r0.<android.telephony.MbmsDownloadSession: java.util.Map mInternalDownloadProgressListeners>;

        $r18 = interfaceinvoke $r17.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r20);

        r30 = (android.telephony.mbms.InternalDownloadProgressListener) $r18;

        if r30 == null goto label21;

        virtualinvoke r30.<android.telephony.mbms.InternalDownloadProgressListener: void stop()>();

     label21:
        throw $r16;

        catch java.lang.Throwable from label01 to label02 with label20;
        catch java.lang.Throwable from label03 to label04 with label20;
        catch android.os.RemoteException from label05 to label06 with label14;
        catch java.lang.Throwable from label05 to label06 with label20;
        catch android.os.RemoteException from label07 to label08 with label14;
        catch java.lang.Throwable from label07 to label08 with label20;
        catch android.os.RemoteException from label10 to label11 with label14;
        catch java.lang.Throwable from label10 to label11 with label20;
        catch android.os.RemoteException from label13 to label14 with label14;
        catch java.lang.Throwable from label13 to label14 with label20;
        catch java.lang.Throwable from label15 to label16 with label20;
        catch java.lang.Throwable from label18 to label19 with label20;
        catch java.lang.Throwable from label19 to label20 with label20;
    }

    public void removeStatusListener(android.telephony.mbms.DownloadRequest, android.telephony.mbms.DownloadStatusListener)
    {
        android.telephony.MbmsDownloadSession r0;
        android.telephony.mbms.vendor.IMbmsDownloadService r1;
        android.telephony.mbms.InternalDownloadStatusListener r2, r21, r23, r26, r30;
        int i0;
        java.util.concurrent.atomic.AtomicReference $r3, $r15;
        java.lang.Object $r4, $r6, $r8, $r10, $r13, $r18;
        java.util.Map $r5, $r7, $r9, $r12, $r17;
        java.lang.Throwable $r11;
        android.os.RemoteException $r14;
        java.util.concurrent.atomic.AtomicBoolean $r16;
        android.telephony.mbms.DownloadRequest r19;
        android.telephony.mbms.DownloadStatusListener r20;
        java.lang.IllegalArgumentException r22, r27;
        java.lang.IllegalStateException r24, r28;

        r0 := @this: android.telephony.MbmsDownloadSession;

        r19 := @parameter0: android.telephony.mbms.DownloadRequest;

        r20 := @parameter1: android.telephony.mbms.DownloadStatusListener;

     label01:
        $r3 = r0.<android.telephony.MbmsDownloadSession: java.util.concurrent.atomic.AtomicReference mService>;

        $r4 = virtualinvoke $r3.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        r1 = (android.telephony.mbms.vendor.IMbmsDownloadService) $r4;

     label02:
        if r1 == null goto label19;

     label03:
        $r5 = r0.<android.telephony.MbmsDownloadSession: java.util.Map mInternalDownloadStatusListeners>;

        $r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>(r20);

        r2 = (android.telephony.mbms.InternalDownloadStatusListener) $r6;

     label04:
        if r2 == null goto label18;

     label05:
        i0 = interfaceinvoke r1.<android.telephony.mbms.vendor.IMbmsDownloadService: int removeStatusListener(android.telephony.mbms.DownloadRequest,android.telephony.mbms.IDownloadStatusListener)>(r19, r2);

     label06:
        if i0 == -1 goto label13;

        if i0 == 0 goto label11;

        if i0 == 402 goto label10;

     label07:
        specialinvoke r0.<android.telephony.MbmsDownloadSession: void sendErrorToApp(int,java.lang.String)>(i0, null);

     label08:
        $r9 = r0.<android.telephony.MbmsDownloadSession: java.util.Map mInternalDownloadStatusListeners>;

        $r10 = interfaceinvoke $r9.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r20);

        r21 = (android.telephony.mbms.InternalDownloadStatusListener) $r10;

        if r21 == null goto label09;

        virtualinvoke r21.<android.telephony.mbms.InternalDownloadStatusListener: void stop()>();

     label09:
        return;

     label10:
        r22 = new java.lang.IllegalArgumentException;

        specialinvoke r22.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Unknown download request.");

        throw r22;

     label11:
        $r7 = r0.<android.telephony.MbmsDownloadSession: java.util.Map mInternalDownloadStatusListeners>;

        $r8 = interfaceinvoke $r7.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r20);

        r23 = (android.telephony.mbms.InternalDownloadStatusListener) $r8;

        if r23 == null goto label12;

        virtualinvoke r23.<android.telephony.mbms.InternalDownloadStatusListener: void stop()>();

     label12:
        return;

     label13:
        virtualinvoke r0.<android.telephony.MbmsDownloadSession: void close()>();

        r24 = new java.lang.IllegalStateException;

        specialinvoke r24.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Middleware must not return an unknown error code");

        throw r24;

     label14:
        $r14 := @caughtexception;

     label15:
        $r15 = r0.<android.telephony.MbmsDownloadSession: java.util.concurrent.atomic.AtomicReference mService>;

        virtualinvoke $r15.<java.util.concurrent.atomic.AtomicReference: void set(java.lang.Object)>(null);

        $r16 = <android.telephony.MbmsDownloadSession: java.util.concurrent.atomic.AtomicBoolean sIsInitialized>;

        virtualinvoke $r16.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(0);

        specialinvoke r0.<android.telephony.MbmsDownloadSession: void sendErrorToApp(int,java.lang.String)>(3, null);

     label16:
        $r17 = r0.<android.telephony.MbmsDownloadSession: java.util.Map mInternalDownloadStatusListeners>;

        $r18 = interfaceinvoke $r17.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r20);

        r26 = (android.telephony.mbms.InternalDownloadStatusListener) $r18;

        if r26 == null goto label17;

        virtualinvoke r26.<android.telephony.mbms.InternalDownloadStatusListener: void stop()>();

     label17:
        return;

     label18:
        r27 = new java.lang.IllegalArgumentException;

        specialinvoke r27.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Provided listener was never registered");

        throw r27;

     label19:
        r28 = new java.lang.IllegalStateException;

        specialinvoke r28.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Middleware not yet bound");

        throw r28;

     label20:
        $r11 := @caughtexception;

        $r12 = r0.<android.telephony.MbmsDownloadSession: java.util.Map mInternalDownloadStatusListeners>;

        $r13 = interfaceinvoke $r12.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r20);

        r30 = (android.telephony.mbms.InternalDownloadStatusListener) $r13;

        if r30 == null goto label21;

        virtualinvoke r30.<android.telephony.mbms.InternalDownloadStatusListener: void stop()>();

     label21:
        throw $r11;

        catch java.lang.Throwable from label01 to label02 with label20;
        catch java.lang.Throwable from label03 to label04 with label20;
        catch android.os.RemoteException from label05 to label06 with label14;
        catch java.lang.Throwable from label05 to label06 with label20;
        catch android.os.RemoteException from label07 to label08 with label14;
        catch java.lang.Throwable from label07 to label08 with label20;
        catch android.os.RemoteException from label10 to label11 with label14;
        catch java.lang.Throwable from label10 to label11 with label20;
        catch android.os.RemoteException from label13 to label14 with label14;
        catch java.lang.Throwable from label13 to label14 with label20;
        catch java.lang.Throwable from label15 to label16 with label20;
        catch java.lang.Throwable from label18 to label19 with label20;
        catch java.lang.Throwable from label19 to label20 with label20;
    }

    public void requestDownloadState(android.telephony.mbms.DownloadRequest, android.telephony.mbms.FileInfo)
    {
        android.telephony.MbmsDownloadSession r0;
        android.telephony.mbms.FileInfo r1;
        android.telephony.mbms.vendor.IMbmsDownloadService r2;
        int i0;
        java.util.concurrent.atomic.AtomicReference $r3, $r7;
        java.lang.Object $r4;
        java.lang.IllegalStateException $r5, r12;
        android.os.RemoteException $r6;
        java.util.concurrent.atomic.AtomicBoolean $r8;
        android.telephony.mbms.DownloadRequest r9;
        java.lang.IllegalArgumentException r10, r11;

        r0 := @this: android.telephony.MbmsDownloadSession;

        r9 := @parameter0: android.telephony.mbms.DownloadRequest;

        r1 := @parameter1: android.telephony.mbms.FileInfo;

        $r3 = r0.<android.telephony.MbmsDownloadSession: java.util.concurrent.atomic.AtomicReference mService>;

        $r4 = virtualinvoke $r3.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        r2 = (android.telephony.mbms.vendor.IMbmsDownloadService) $r4;

        if r2 == null goto label11;

     label01:
        i0 = interfaceinvoke r2.<android.telephony.mbms.vendor.IMbmsDownloadService: int requestDownloadState(android.telephony.mbms.DownloadRequest,android.telephony.mbms.FileInfo)>(r9, r1);

     label02:
        if i0 == -1 goto label08;

        if i0 == 0 goto label07;

        if i0 == 402 goto label06;

        if i0 == 403 goto label05;

     label03:
        specialinvoke r0.<android.telephony.MbmsDownloadSession: void sendErrorToApp(int,java.lang.String)>(i0, null);

     label04:
        goto label07;

     label05:
        r10 = new java.lang.IllegalArgumentException;

        specialinvoke r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Unknown file.");

        throw r10;

     label06:
        r11 = new java.lang.IllegalArgumentException;

        specialinvoke r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Unknown download request.");

        throw r11;

     label07:
        goto label10;

     label08:
        virtualinvoke r0.<android.telephony.MbmsDownloadSession: void close()>();

        r12 = new java.lang.IllegalStateException;

        specialinvoke r12.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Middleware must not return an unknown error code");

        throw r12;

     label09:
        $r6 := @caughtexception;

        $r7 = r0.<android.telephony.MbmsDownloadSession: java.util.concurrent.atomic.AtomicReference mService>;

        virtualinvoke $r7.<java.util.concurrent.atomic.AtomicReference: void set(java.lang.Object)>(null);

        $r8 = <android.telephony.MbmsDownloadSession: java.util.concurrent.atomic.AtomicBoolean sIsInitialized>;

        virtualinvoke $r8.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(0);

        specialinvoke r0.<android.telephony.MbmsDownloadSession: void sendErrorToApp(int,java.lang.String)>(3, null);

     label10:
        return;

     label11:
        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Middleware not yet bound");

        throw $r5;

        catch android.os.RemoteException from label01 to label02 with label09;
        catch android.os.RemoteException from label03 to label04 with label09;
        catch android.os.RemoteException from label05 to label06 with label09;
        catch android.os.RemoteException from label06 to label07 with label09;
        catch android.os.RemoteException from label08 to label09 with label09;
    }

    public void requestUpdateFileServices(java.util.List)
    {
        android.telephony.MbmsDownloadSession r0;
        android.telephony.mbms.vendor.IMbmsDownloadService r1;
        int i0, $i1;
        java.util.concurrent.atomic.AtomicReference $r2, $r7;
        java.lang.Object $r3;
        java.lang.IllegalStateException $r4, r10;
        android.os.RemoteException $r5;
        java.lang.String $r6;
        java.util.concurrent.atomic.AtomicBoolean $r8;
        java.util.List r9;

        r0 := @this: android.telephony.MbmsDownloadSession;

        r9 := @parameter0: java.util.List;

        $r2 = r0.<android.telephony.MbmsDownloadSession: java.util.concurrent.atomic.AtomicReference mService>;

        $r3 = virtualinvoke $r2.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        r1 = (android.telephony.mbms.vendor.IMbmsDownloadService) $r3;

        if r1 == null goto label8;

     label1:
        $i1 = r0.<android.telephony.MbmsDownloadSession: int mSubscriptionId>;

        i0 = interfaceinvoke r1.<android.telephony.mbms.vendor.IMbmsDownloadService: int requestUpdateFileServices(int,java.util.List)>($i1, r9);

     label2:
        if i0 == -1 goto label5;

        if i0 == 0 goto label4;

     label3:
        specialinvoke r0.<android.telephony.MbmsDownloadSession: void sendErrorToApp(int,java.lang.String)>(i0, null);

     label4:
        goto label7;

     label5:
        virtualinvoke r0.<android.telephony.MbmsDownloadSession: void close()>();

        r10 = new java.lang.IllegalStateException;

        specialinvoke r10.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Middleware must not return an unknown error code");

        throw r10;

     label6:
        $r5 := @caughtexception;

        $r6 = <android.telephony.MbmsDownloadSession: java.lang.String LOG_TAG>;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r6, "Remote process died");

        $r7 = r0.<android.telephony.MbmsDownloadSession: java.util.concurrent.atomic.AtomicReference mService>;

        virtualinvoke $r7.<java.util.concurrent.atomic.AtomicReference: void set(java.lang.Object)>(null);

        $r8 = <android.telephony.MbmsDownloadSession: java.util.concurrent.atomic.AtomicBoolean sIsInitialized>;

        virtualinvoke $r8.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(0);

        specialinvoke r0.<android.telephony.MbmsDownloadSession: void sendErrorToApp(int,java.lang.String)>(3, null);

     label7:
        return;

     label8:
        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Middleware not yet bound");

        throw $r4;

        catch android.os.RemoteException from label1 to label2 with label6;
        catch android.os.RemoteException from label3 to label4 with label6;
        catch android.os.RemoteException from label5 to label6 with label6;
    }

    public void resetDownloadKnowledge(android.telephony.mbms.DownloadRequest)
    {
        android.telephony.MbmsDownloadSession r0;
        android.telephony.mbms.vendor.IMbmsDownloadService r1;
        int i0;
        java.util.concurrent.atomic.AtomicReference $r2, $r6;
        java.lang.Object $r3;
        java.lang.IllegalStateException $r4, r10;
        android.os.RemoteException $r5;
        java.util.concurrent.atomic.AtomicBoolean $r7;
        android.telephony.mbms.DownloadRequest r8;
        java.lang.IllegalArgumentException r9;

        r0 := @this: android.telephony.MbmsDownloadSession;

        r8 := @parameter0: android.telephony.mbms.DownloadRequest;

        $r2 = r0.<android.telephony.MbmsDownloadSession: java.util.concurrent.atomic.AtomicReference mService>;

        $r3 = virtualinvoke $r2.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        r1 = (android.telephony.mbms.vendor.IMbmsDownloadService) $r3;

        if r1 == null goto label10;

     label01:
        i0 = interfaceinvoke r1.<android.telephony.mbms.vendor.IMbmsDownloadService: int resetDownloadKnowledge(android.telephony.mbms.DownloadRequest)>(r8);

     label02:
        if i0 == -1 goto label07;

        if i0 == 0 goto label06;

        if i0 == 402 goto label05;

     label03:
        specialinvoke r0.<android.telephony.MbmsDownloadSession: void sendErrorToApp(int,java.lang.String)>(i0, null);

     label04:
        goto label06;

     label05:
        r9 = new java.lang.IllegalArgumentException;

        specialinvoke r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Unknown download request.");

        throw r9;

     label06:
        goto label09;

     label07:
        virtualinvoke r0.<android.telephony.MbmsDownloadSession: void close()>();

        r10 = new java.lang.IllegalStateException;

        specialinvoke r10.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Middleware must not return an unknown error code");

        throw r10;

     label08:
        $r5 := @caughtexception;

        $r6 = r0.<android.telephony.MbmsDownloadSession: java.util.concurrent.atomic.AtomicReference mService>;

        virtualinvoke $r6.<java.util.concurrent.atomic.AtomicReference: void set(java.lang.Object)>(null);

        $r7 = <android.telephony.MbmsDownloadSession: java.util.concurrent.atomic.AtomicBoolean sIsInitialized>;

        virtualinvoke $r7.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(0);

        specialinvoke r0.<android.telephony.MbmsDownloadSession: void sendErrorToApp(int,java.lang.String)>(3, null);

     label09:
        return;

     label10:
        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Middleware not yet bound");

        throw $r4;

        catch android.os.RemoteException from label01 to label02 with label08;
        catch android.os.RemoteException from label03 to label04 with label08;
        catch android.os.RemoteException from label05 to label06 with label08;
        catch android.os.RemoteException from label07 to label08 with label08;
    }

    public void setTempFileRootDirectory(java.io.File)
    {
        android.telephony.MbmsDownloadSession r0;
        int i0, $i1;
        java.util.concurrent.atomic.AtomicReference $r1, $r15;
        java.lang.Object $r2;
        java.lang.IllegalStateException $r3, $r18, r22;
        android.content.Context $r4;
        android.content.SharedPreferences $r5;
        android.content.SharedPreferences$Editor $r6, $r7;
        java.lang.Throwable $r8, $r17;
        java.lang.StringBuilder $r9;
        java.lang.IllegalArgumentException $r12;
        java.lang.String $r13, r21;
        android.os.RemoteException $r14;
        java.util.concurrent.atomic.AtomicBoolean $r16;
        java.io.File r19;
        android.telephony.mbms.vendor.IMbmsDownloadService r20;

        r0 := @this: android.telephony.MbmsDownloadSession;

        r19 := @parameter0: java.io.File;

        $r1 = r0.<android.telephony.MbmsDownloadSession: java.util.concurrent.atomic.AtomicReference mService>;

        $r2 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        r20 = (android.telephony.mbms.vendor.IMbmsDownloadService) $r2;

        if r20 == null goto label12;

     label01:
        specialinvoke r0.<android.telephony.MbmsDownloadSession: void validateTempFileRootSanity(java.io.File)>(r19);

     label02:
        r21 = virtualinvoke r19.<java.io.File: java.lang.String getCanonicalPath()>();

     label03:
        $i1 = r0.<android.telephony.MbmsDownloadSession: int mSubscriptionId>;

        i0 = interfaceinvoke r20.<android.telephony.mbms.vendor.IMbmsDownloadService: int setTempFileRootDirectory(int,java.lang.String)>($i1, r21);

     label04:
        if i0 == -1 goto label08;

        if i0 == 0 goto label07;

     label05:
        specialinvoke r0.<android.telephony.MbmsDownloadSession: void sendErrorToApp(int,java.lang.String)>(i0, null);

     label06:
        return;

     label07:
        $r4 = r0.<android.telephony.MbmsDownloadSession: android.content.Context mContext>;

        $r5 = virtualinvoke $r4.<android.content.Context: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>("MbmsTempFileRootPrefs", 0);

        $r6 = interfaceinvoke $r5.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();

        $r7 = interfaceinvoke $r6.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("mbms_temp_file_root", r21);

        interfaceinvoke $r7.<android.content.SharedPreferences$Editor: void apply()>();

        return;

     label08:
        virtualinvoke r0.<android.telephony.MbmsDownloadSession: void close()>();

        r22 = new java.lang.IllegalStateException;

        specialinvoke r22.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Middleware must not return an unknown error code");

        throw r22;

     label09:
        $r14 := @caughtexception;

        $r15 = r0.<android.telephony.MbmsDownloadSession: java.util.concurrent.atomic.AtomicReference mService>;

        virtualinvoke $r15.<java.util.concurrent.atomic.AtomicReference: void set(java.lang.Object)>(null);

        $r16 = <android.telephony.MbmsDownloadSession: java.util.concurrent.atomic.AtomicBoolean sIsInitialized>;

        virtualinvoke $r16.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(0);

        specialinvoke r0.<android.telephony.MbmsDownloadSession: void sendErrorToApp(int,java.lang.String)>(3, null);

        return;

     label10:
        $r8 := @caughtexception;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to canonicalize the provided path: ");

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r12 = new java.lang.IllegalArgumentException;

        $r13 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r13);

        throw $r12;

     label11:
        $r17 := @caughtexception;

        $r18 = new java.lang.IllegalStateException;

        specialinvoke $r18.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Got IOException checking directory sanity");

        throw $r18;

     label12:
        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Middleware not yet bound");

        throw $r3;

        catch java.io.IOException from label01 to label02 with label11;
        catch java.io.IOException from label02 to label03 with label10;
        catch android.os.RemoteException from label03 to label04 with label09;
        catch android.os.RemoteException from label05 to label06 with label09;
        catch android.os.RemoteException from label08 to label09 with label09;
    }
}
