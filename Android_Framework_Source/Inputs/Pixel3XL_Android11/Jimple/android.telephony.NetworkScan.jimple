public class android.telephony.NetworkScan extends java.lang.Object
{
    public static final int ERROR_INTERRUPTED;
    public static final int ERROR_INVALID_SCAN;
    public static final int ERROR_INVALID_SCANID;
    public static final int ERROR_MODEM_ERROR;
    public static final int ERROR_MODEM_UNAVAILABLE;
    public static final int ERROR_RADIO_INTERFACE_ERROR;
    public static final int ERROR_UNSUPPORTED;
    public static final int SUCCESS;
    private static final java.lang.String TAG;
    private final int mScanId;
    private final int mSubId;

    public void <init>(int, int)
    {
        android.telephony.NetworkScan r0;
        int i0, i1;

        r0 := @this: android.telephony.NetworkScan;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.telephony.NetworkScan: int mScanId> = i0;

        r0.<android.telephony.NetworkScan: int mSubId> = i1;

        return;
    }

    private com.android.internal.telephony.ITelephony getITelephony()
    {
        android.telephony.NetworkScan r0;
        android.os.TelephonyServiceManager $r1;
        android.os.TelephonyServiceManager$ServiceRegisterer $r2;
        android.os.IBinder $r3;
        com.android.internal.telephony.ITelephony $r4;

        r0 := @this: android.telephony.NetworkScan;

        $r1 = staticinvoke <android.telephony.TelephonyFrameworkInitializer: android.os.TelephonyServiceManager getTelephonyServiceManager()>();

        $r2 = virtualinvoke $r1.<android.os.TelephonyServiceManager: android.os.TelephonyServiceManager$ServiceRegisterer getTelephonyServiceRegisterer()>();

        $r3 = virtualinvoke $r2.<android.os.TelephonyServiceManager$ServiceRegisterer: android.os.IBinder get()>();

        $r4 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony asInterface(android.os.IBinder)>($r3);

        return $r4;
    }

    public void stop() throws android.os.RemoteException
    {
        android.telephony.NetworkScan r0;
        java.lang.RuntimeException $r1;
        java.lang.StringBuilder $r2;
        int $i0;
        android.os.RemoteException $r5;
        java.lang.String $r6;

        r0 := @this: android.telephony.NetworkScan;

     label1:
        virtualinvoke r0.<android.telephony.NetworkScan: void stopScan()>();

     label2:
        return;

     label3:
        $r1 := @caughtexception;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to stop the network scan with id ");

        $i0 = r0.<android.telephony.NetworkScan: int mScanId>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r5 = new android.os.RemoteException;

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<android.os.RemoteException: void <init>(java.lang.String)>($r6);

        throw $r5;

        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    public void stopScan()
    {
        android.telephony.NetworkScan r0;
        int $i0, $i1, $i3;
        java.lang.Throwable $r1;
        java.lang.StringBuilder $r2;
        java.lang.String $r5;
        android.os.RemoteException $r6;
        java.lang.RuntimeException $r7;
        com.android.internal.telephony.ITelephony r8;

        r0 := @this: android.telephony.NetworkScan;

        r8 = specialinvoke r0.<android.telephony.NetworkScan: com.android.internal.telephony.ITelephony getITelephony()>();

        if r8 != null goto label1;

        staticinvoke <com.android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("NetworkScan", "Failed to get the ITelephony instance.");

     label1:
        $i1 = r0.<android.telephony.NetworkScan: int mSubId>;

        $i0 = r0.<android.telephony.NetworkScan: int mScanId>;

        interfaceinvoke r8.<com.android.internal.telephony.ITelephony: void stopNetworkScan(int,int)>($i1, $i0);

     label2:
        goto label6;

     label3:
        $r7 := @caughtexception;

        staticinvoke <com.android.telephony.Rlog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("NetworkScan", "stopNetworkScan  RuntimeException", $r7);

        goto label6;

     label4:
        $r6 := @caughtexception;

        staticinvoke <com.android.telephony.Rlog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("NetworkScan", "stopNetworkScan  RemoteException", $r6);

        goto label6;

     label5:
        $r1 := @caughtexception;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("stopNetworkScan - no active scan for ScanID=");

        $i3 = r0.<android.telephony.NetworkScan: int mScanId>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("NetworkScan", $r5);

     label6:
        return;

        catch java.lang.IllegalArgumentException from label1 to label2 with label5;
        catch android.os.RemoteException from label1 to label2 with label4;
        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    public static void <clinit>()
    {
        <android.telephony.NetworkScan: java.lang.String TAG> = "NetworkScan";

        <android.telephony.NetworkScan: int SUCCESS> = 0;

        <android.telephony.NetworkScan: int ERROR_UNSUPPORTED> = 4;

        <android.telephony.NetworkScan: int ERROR_RADIO_INTERFACE_ERROR> = 10000;

        <android.telephony.NetworkScan: int ERROR_MODEM_UNAVAILABLE> = 3;

        <android.telephony.NetworkScan: int ERROR_MODEM_ERROR> = 1;

        <android.telephony.NetworkScan: int ERROR_INVALID_SCANID> = 10001;

        <android.telephony.NetworkScan: int ERROR_INVALID_SCAN> = 2;

        <android.telephony.NetworkScan: int ERROR_INTERRUPTED> = 10002;

        return;
    }
}
