public abstract class android.telephony.NetworkService extends android.app.Service
{
    private static final int NETWORK_SERVICE_CREATE_NETWORK_SERVICE_PROVIDER;
    private static final int NETWORK_SERVICE_GET_REGISTRATION_INFO;
    private static final int NETWORK_SERVICE_INDICATION_NETWORK_INFO_CHANGED;
    private static final int NETWORK_SERVICE_REGISTER_FOR_INFO_CHANGE;
    private static final int NETWORK_SERVICE_REMOVE_ALL_NETWORK_SERVICE_PROVIDERS;
    private static final int NETWORK_SERVICE_REMOVE_NETWORK_SERVICE_PROVIDER;
    private static final int NETWORK_SERVICE_UNREGISTER_FOR_INFO_CHANGE;
    public static final java.lang.String SERVICE_INTERFACE;
    private final java.lang.String TAG;
    public final android.telephony.NetworkService$INetworkServiceWrapper mBinder;
    private final android.telephony.NetworkService$NetworkServiceHandler mHandler;
    private final android.os.HandlerThread mHandlerThread;
    private final android.util.SparseArray mServiceMap;

    public void <init>()
    {
        android.telephony.NetworkService r0;
        java.lang.Class $r2;
        java.lang.String $r3, $r7;
        android.util.SparseArray $r4;
        android.telephony.NetworkService$INetworkServiceWrapper $r5;
        android.os.HandlerThread $r6, $r9;
        android.telephony.NetworkService$NetworkServiceHandler $r8;
        android.os.Looper $r10;

        r0 := @this: android.telephony.NetworkService;

        specialinvoke r0.<android.app.Service: void <init>()>();

        $r2 = class "Landroid/telephony/NetworkService;";

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getSimpleName()>();

        r0.<android.telephony.NetworkService: java.lang.String TAG> = $r3;

        $r4 = new android.util.SparseArray;

        specialinvoke $r4.<android.util.SparseArray: void <init>()>();

        r0.<android.telephony.NetworkService: android.util.SparseArray mServiceMap> = $r4;

        $r5 = new android.telephony.NetworkService$INetworkServiceWrapper;

        specialinvoke $r5.<android.telephony.NetworkService$INetworkServiceWrapper: void <init>(android.telephony.NetworkService,android.telephony.NetworkService$1)>(r0, null);

        r0.<android.telephony.NetworkService: android.telephony.NetworkService$INetworkServiceWrapper mBinder> = $r5;

        $r6 = new android.os.HandlerThread;

        $r7 = r0.<android.telephony.NetworkService: java.lang.String TAG>;

        specialinvoke $r6.<android.os.HandlerThread: void <init>(java.lang.String)>($r7);

        r0.<android.telephony.NetworkService: android.os.HandlerThread mHandlerThread> = $r6;

        virtualinvoke $r6.<android.os.HandlerThread: void start()>();

        $r8 = new android.telephony.NetworkService$NetworkServiceHandler;

        $r9 = r0.<android.telephony.NetworkService: android.os.HandlerThread mHandlerThread>;

        $r10 = virtualinvoke $r9.<android.os.HandlerThread: android.os.Looper getLooper()>();

        specialinvoke $r8.<android.telephony.NetworkService$NetworkServiceHandler: void <init>(android.telephony.NetworkService,android.os.Looper)>(r0, $r10);

        r0.<android.telephony.NetworkService: android.telephony.NetworkService$NetworkServiceHandler mHandler> = $r8;

        specialinvoke r0.<android.telephony.NetworkService: void log(java.lang.String)>("network service created");

        return;
    }

    static android.telephony.NetworkService$NetworkServiceHandler access$100(android.telephony.NetworkService)
    {
        android.telephony.NetworkService r0;
        android.telephony.NetworkService$NetworkServiceHandler $r1;

        r0 := @parameter0: android.telephony.NetworkService;

        $r1 = r0.<android.telephony.NetworkService: android.telephony.NetworkService$NetworkServiceHandler mHandler>;

        return $r1;
    }

    static android.util.SparseArray access$200(android.telephony.NetworkService)
    {
        android.telephony.NetworkService r0;
        android.util.SparseArray $r1;

        r0 := @parameter0: android.telephony.NetworkService;

        $r1 = r0.<android.telephony.NetworkService: android.util.SparseArray mServiceMap>;

        return $r1;
    }

    private final void log(java.lang.String)
    {
        android.telephony.NetworkService r0;
        java.lang.String r1, $r2;

        r0 := @this: android.telephony.NetworkService;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<android.telephony.NetworkService: java.lang.String TAG>;

        staticinvoke <com.android.telephony.Rlog: int d(java.lang.String,java.lang.String)>($r2, r1);

        return;
    }

    private final void loge(java.lang.String)
    {
        android.telephony.NetworkService r0;
        java.lang.String r1, $r2;

        r0 := @this: android.telephony.NetworkService;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<android.telephony.NetworkService: java.lang.String TAG>;

        staticinvoke <com.android.telephony.Rlog: int e(java.lang.String,java.lang.String)>($r2, r1);

        return;
    }

    public android.os.IBinder onBind(android.content.Intent)
    {
        android.telephony.NetworkService r0;
        android.content.Intent r1;
        java.lang.StringBuilder $r3;
        java.lang.String $r6, $r7, $r8;
        boolean $z0;
        android.telephony.NetworkService$INetworkServiceWrapper $r9;

        r0 := @this: android.telephony.NetworkService;

        r1 := @parameter0: android.content.Intent;

        if r1 == null goto label2;

        $r7 = "android.telephony.NetworkService";

        $r8 = virtualinvoke r1.<android.content.Intent: java.lang.String getAction()>();

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z0 != 0 goto label1;

        goto label2;

     label1:
        $r9 = r0.<android.telephony.NetworkService: android.telephony.NetworkService$INetworkServiceWrapper mBinder>;

        return $r9;

     label2:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected intent ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<android.telephony.NetworkService: void loge(java.lang.String)>($r6);

        return null;
    }

    public abstract android.telephony.NetworkService$NetworkServiceProvider onCreateNetworkServiceProvider(int);

    public void onDestroy()
    {
        android.telephony.NetworkService r0;
        android.os.HandlerThread $r1;

        r0 := @this: android.telephony.NetworkService;

        $r1 = r0.<android.telephony.NetworkService: android.os.HandlerThread mHandlerThread>;

        virtualinvoke $r1.<android.os.HandlerThread: boolean quit()>();

        specialinvoke r0.<android.app.Service: void onDestroy()>();

        return;
    }

    public boolean onUnbind(android.content.Intent)
    {
        android.telephony.NetworkService r0;
        android.content.Intent r1;
        android.telephony.NetworkService$NetworkServiceHandler $r2;
        android.os.Message $r3;

        r0 := @this: android.telephony.NetworkService;

        r1 := @parameter0: android.content.Intent;

        $r2 = r0.<android.telephony.NetworkService: android.telephony.NetworkService$NetworkServiceHandler mHandler>;

        $r3 = virtualinvoke $r2.<android.telephony.NetworkService$NetworkServiceHandler: android.os.Message obtainMessage(int,int,int,java.lang.Object)>(3, 0, 0, null);

        virtualinvoke $r3.<android.os.Message: void sendToTarget()>();

        return 0;
    }

    public static void <clinit>()
    {
        <android.telephony.NetworkService: java.lang.String SERVICE_INTERFACE> = "android.telephony.NetworkService";

        <android.telephony.NetworkService: int NETWORK_SERVICE_UNREGISTER_FOR_INFO_CHANGE> = 6;

        <android.telephony.NetworkService: int NETWORK_SERVICE_REMOVE_NETWORK_SERVICE_PROVIDER> = 2;

        <android.telephony.NetworkService: int NETWORK_SERVICE_REMOVE_ALL_NETWORK_SERVICE_PROVIDERS> = 3;

        <android.telephony.NetworkService: int NETWORK_SERVICE_REGISTER_FOR_INFO_CHANGE> = 5;

        <android.telephony.NetworkService: int NETWORK_SERVICE_INDICATION_NETWORK_INFO_CHANGED> = 7;

        <android.telephony.NetworkService: int NETWORK_SERVICE_GET_REGISTRATION_INFO> = 4;

        <android.telephony.NetworkService: int NETWORK_SERVICE_CREATE_NETWORK_SERVICE_PROVIDER> = 1;

        return;
    }
}
