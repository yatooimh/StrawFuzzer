public class android.telephony.PhoneNumberUtils extends java.lang.Object
{
    private static final java.lang.String BCD_CALLED_PARTY_EXTENDED;
    private static final java.lang.String BCD_EF_ADN_EXTENDED;
    public static final int BCD_EXTENDED_TYPE_CALLED_PARTY;
    public static final int BCD_EXTENDED_TYPE_EF_ADN;
    private static final int CCC_LENGTH;
    private static final java.lang.String CLIR_OFF;
    private static final java.lang.String CLIR_ON;
    private static final boolean[] COUNTRY_CALLING_CALL;
    private static final boolean DBG;
    public static final int FORMAT_JAPAN;
    public static final int FORMAT_NANP;
    public static final int FORMAT_UNKNOWN;
    private static final java.util.regex.Pattern GLOBAL_PHONE_NUMBER_PATTERN;
    private static final java.lang.String JAPAN_ISO_COUNTRY_CODE;
    private static final android.util.SparseIntArray KEYPAD_MAP;
    private static final java.lang.String KOREA_ISO_COUNTRY_CODE;
    static final java.lang.String LOG_TAG;
    private static final java.lang.String[] NANP_COUNTRIES;
    private static final java.lang.String NANP_IDP_STRING;
    private static final int NANP_LENGTH;
    private static final int NANP_STATE_DASH;
    private static final int NANP_STATE_DIGIT;
    private static final int NANP_STATE_ONE;
    private static final int NANP_STATE_PLUS;
    public static final char PAUSE;
    private static final char PLUS_SIGN_CHAR;
    private static final java.lang.String PLUS_SIGN_STRING;
    public static final int TOA_International;
    public static final int TOA_Unknown;
    public static final char WAIT;
    public static final char WILD;
    private static java.lang.String[] sConvertToEmergencyMap;
    private static int sMinMatch;

    static void <clinit>()
    {
        java.util.regex.Pattern $r0;
        java.lang.String[] $r1;
        android.util.SparseIntArray $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r38, $r39, $r40, $r41, $r42, $r43, $r44, $r45, $r46, $r47, $r48, $r49, $r50, $r51, $r52, $r53;
        int $i0;
        boolean[] r55;

        <android.telephony.PhoneNumberUtils: char WILD> = 78;

        <android.telephony.PhoneNumberUtils: char WAIT> = 59;

        <android.telephony.PhoneNumberUtils: int TOA_Unknown> = 129;

        <android.telephony.PhoneNumberUtils: int TOA_International> = 145;

        <android.telephony.PhoneNumberUtils: java.lang.String PLUS_SIGN_STRING> = "+";

        <android.telephony.PhoneNumberUtils: char PLUS_SIGN_CHAR> = 43;

        <android.telephony.PhoneNumberUtils: char PAUSE> = 44;

        <android.telephony.PhoneNumberUtils: int NANP_STATE_PLUS> = 2;

        <android.telephony.PhoneNumberUtils: int NANP_STATE_ONE> = 3;

        <android.telephony.PhoneNumberUtils: int NANP_STATE_DIGIT> = 1;

        <android.telephony.PhoneNumberUtils: int NANP_STATE_DASH> = 4;

        <android.telephony.PhoneNumberUtils: int NANP_LENGTH> = 10;

        <android.telephony.PhoneNumberUtils: java.lang.String NANP_IDP_STRING> = "011";

        <android.telephony.PhoneNumberUtils: java.lang.String LOG_TAG> = "PhoneNumberUtils";

        <android.telephony.PhoneNumberUtils: java.lang.String KOREA_ISO_COUNTRY_CODE> = "KR";

        <android.telephony.PhoneNumberUtils: java.lang.String JAPAN_ISO_COUNTRY_CODE> = "JP";

        <android.telephony.PhoneNumberUtils: int FORMAT_UNKNOWN> = 0;

        <android.telephony.PhoneNumberUtils: int FORMAT_NANP> = 1;

        <android.telephony.PhoneNumberUtils: int FORMAT_JAPAN> = 2;

        <android.telephony.PhoneNumberUtils: boolean DBG> = 0;

        <android.telephony.PhoneNumberUtils: java.lang.String CLIR_ON> = "*31#";

        <android.telephony.PhoneNumberUtils: java.lang.String CLIR_OFF> = "#31#";

        <android.telephony.PhoneNumberUtils: int BCD_EXTENDED_TYPE_EF_ADN> = 1;

        <android.telephony.PhoneNumberUtils: int BCD_EXTENDED_TYPE_CALLED_PARTY> = 2;

        <android.telephony.PhoneNumberUtils: java.lang.String BCD_EF_ADN_EXTENDED> = "*#,N;";

        <android.telephony.PhoneNumberUtils: java.lang.String BCD_CALLED_PARTY_EXTENDED> = "*#abc";

        $r0 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("[\\+]?[0-9.-]+");

        <android.telephony.PhoneNumberUtils: java.util.regex.Pattern GLOBAL_PHONE_NUMBER_PATTERN> = $r0;

        <android.telephony.PhoneNumberUtils: int sMinMatch> = 0;

        $r1 = newarray (java.lang.String)[24];

        $r1[0] = "US";

        $r1[1] = "CA";

        $r1[2] = "AS";

        $r1[3] = "AI";

        $r1[4] = "AG";

        $r1[5] = "BS";

        $r1[6] = "BB";

        $r1[7] = "BM";

        $r1[8] = "VG";

        $r1[9] = "KY";

        $r1[10] = "DM";

        $r1[11] = "DO";

        $r1[12] = "GD";

        $r1[13] = "GU";

        $r1[14] = "JM";

        $r1[15] = "PR";

        $r1[16] = "MS";

        $r1[17] = "MP";

        $r1[18] = "KN";

        $r1[19] = "LC";

        $r1[20] = "VC";

        $r1[21] = "TT";

        $r1[22] = "TC";

        $r1[23] = "VI";

        <android.telephony.PhoneNumberUtils: java.lang.String[] NANP_COUNTRIES> = $r1;

        $r2 = new android.util.SparseIntArray;

        specialinvoke $r2.<android.util.SparseIntArray: void <init>()>();

        <android.telephony.PhoneNumberUtils: android.util.SparseIntArray KEYPAD_MAP> = $r2;

        virtualinvoke $r2.<android.util.SparseIntArray: void put(int,int)>(97, 50);

        $r3 = <android.telephony.PhoneNumberUtils: android.util.SparseIntArray KEYPAD_MAP>;

        virtualinvoke $r3.<android.util.SparseIntArray: void put(int,int)>(98, 50);

        $r4 = <android.telephony.PhoneNumberUtils: android.util.SparseIntArray KEYPAD_MAP>;

        virtualinvoke $r4.<android.util.SparseIntArray: void put(int,int)>(99, 50);

        $r5 = <android.telephony.PhoneNumberUtils: android.util.SparseIntArray KEYPAD_MAP>;

        virtualinvoke $r5.<android.util.SparseIntArray: void put(int,int)>(65, 50);

        $r6 = <android.telephony.PhoneNumberUtils: android.util.SparseIntArray KEYPAD_MAP>;

        virtualinvoke $r6.<android.util.SparseIntArray: void put(int,int)>(66, 50);

        $r7 = <android.telephony.PhoneNumberUtils: android.util.SparseIntArray KEYPAD_MAP>;

        virtualinvoke $r7.<android.util.SparseIntArray: void put(int,int)>(67, 50);

        $r8 = <android.telephony.PhoneNumberUtils: android.util.SparseIntArray KEYPAD_MAP>;

        virtualinvoke $r8.<android.util.SparseIntArray: void put(int,int)>(100, 51);

        $r9 = <android.telephony.PhoneNumberUtils: android.util.SparseIntArray KEYPAD_MAP>;

        virtualinvoke $r9.<android.util.SparseIntArray: void put(int,int)>(101, 51);

        $r10 = <android.telephony.PhoneNumberUtils: android.util.SparseIntArray KEYPAD_MAP>;

        virtualinvoke $r10.<android.util.SparseIntArray: void put(int,int)>(102, 51);

        $r11 = <android.telephony.PhoneNumberUtils: android.util.SparseIntArray KEYPAD_MAP>;

        virtualinvoke $r11.<android.util.SparseIntArray: void put(int,int)>(68, 51);

        $r12 = <android.telephony.PhoneNumberUtils: android.util.SparseIntArray KEYPAD_MAP>;

        virtualinvoke $r12.<android.util.SparseIntArray: void put(int,int)>(69, 51);

        $r13 = <android.telephony.PhoneNumberUtils: android.util.SparseIntArray KEYPAD_MAP>;

        virtualinvoke $r13.<android.util.SparseIntArray: void put(int,int)>(70, 51);

        $r14 = <android.telephony.PhoneNumberUtils: android.util.SparseIntArray KEYPAD_MAP>;

        virtualinvoke $r14.<android.util.SparseIntArray: void put(int,int)>(103, 52);

        $r15 = <android.telephony.PhoneNumberUtils: android.util.SparseIntArray KEYPAD_MAP>;

        virtualinvoke $r15.<android.util.SparseIntArray: void put(int,int)>(104, 52);

        $r16 = <android.telephony.PhoneNumberUtils: android.util.SparseIntArray KEYPAD_MAP>;

        virtualinvoke $r16.<android.util.SparseIntArray: void put(int,int)>(105, 52);

        $r17 = <android.telephony.PhoneNumberUtils: android.util.SparseIntArray KEYPAD_MAP>;

        virtualinvoke $r17.<android.util.SparseIntArray: void put(int,int)>(71, 52);

        $r18 = <android.telephony.PhoneNumberUtils: android.util.SparseIntArray KEYPAD_MAP>;

        virtualinvoke $r18.<android.util.SparseIntArray: void put(int,int)>(72, 52);

        $r19 = <android.telephony.PhoneNumberUtils: android.util.SparseIntArray KEYPAD_MAP>;

        virtualinvoke $r19.<android.util.SparseIntArray: void put(int,int)>(73, 52);

        $r20 = <android.telephony.PhoneNumberUtils: android.util.SparseIntArray KEYPAD_MAP>;

        virtualinvoke $r20.<android.util.SparseIntArray: void put(int,int)>(106, 53);

        $r21 = <android.telephony.PhoneNumberUtils: android.util.SparseIntArray KEYPAD_MAP>;

        virtualinvoke $r21.<android.util.SparseIntArray: void put(int,int)>(107, 53);

        $r22 = <android.telephony.PhoneNumberUtils: android.util.SparseIntArray KEYPAD_MAP>;

        virtualinvoke $r22.<android.util.SparseIntArray: void put(int,int)>(108, 53);

        $r23 = <android.telephony.PhoneNumberUtils: android.util.SparseIntArray KEYPAD_MAP>;

        virtualinvoke $r23.<android.util.SparseIntArray: void put(int,int)>(74, 53);

        $r24 = <android.telephony.PhoneNumberUtils: android.util.SparseIntArray KEYPAD_MAP>;

        virtualinvoke $r24.<android.util.SparseIntArray: void put(int,int)>(75, 53);

        $r25 = <android.telephony.PhoneNumberUtils: android.util.SparseIntArray KEYPAD_MAP>;

        virtualinvoke $r25.<android.util.SparseIntArray: void put(int,int)>(76, 53);

        $r26 = <android.telephony.PhoneNumberUtils: android.util.SparseIntArray KEYPAD_MAP>;

        virtualinvoke $r26.<android.util.SparseIntArray: void put(int,int)>(109, 54);

        $r27 = <android.telephony.PhoneNumberUtils: android.util.SparseIntArray KEYPAD_MAP>;

        virtualinvoke $r27.<android.util.SparseIntArray: void put(int,int)>(110, 54);

        $r28 = <android.telephony.PhoneNumberUtils: android.util.SparseIntArray KEYPAD_MAP>;

        virtualinvoke $r28.<android.util.SparseIntArray: void put(int,int)>(111, 54);

        $r29 = <android.telephony.PhoneNumberUtils: android.util.SparseIntArray KEYPAD_MAP>;

        virtualinvoke $r29.<android.util.SparseIntArray: void put(int,int)>(77, 54);

        $r30 = <android.telephony.PhoneNumberUtils: android.util.SparseIntArray KEYPAD_MAP>;

        virtualinvoke $r30.<android.util.SparseIntArray: void put(int,int)>(78, 54);

        $r31 = <android.telephony.PhoneNumberUtils: android.util.SparseIntArray KEYPAD_MAP>;

        virtualinvoke $r31.<android.util.SparseIntArray: void put(int,int)>(79, 54);

        $r32 = <android.telephony.PhoneNumberUtils: android.util.SparseIntArray KEYPAD_MAP>;

        virtualinvoke $r32.<android.util.SparseIntArray: void put(int,int)>(112, 55);

        $r33 = <android.telephony.PhoneNumberUtils: android.util.SparseIntArray KEYPAD_MAP>;

        virtualinvoke $r33.<android.util.SparseIntArray: void put(int,int)>(113, 55);

        $r34 = <android.telephony.PhoneNumberUtils: android.util.SparseIntArray KEYPAD_MAP>;

        virtualinvoke $r34.<android.util.SparseIntArray: void put(int,int)>(114, 55);

        $r35 = <android.telephony.PhoneNumberUtils: android.util.SparseIntArray KEYPAD_MAP>;

        virtualinvoke $r35.<android.util.SparseIntArray: void put(int,int)>(115, 55);

        $r36 = <android.telephony.PhoneNumberUtils: android.util.SparseIntArray KEYPAD_MAP>;

        virtualinvoke $r36.<android.util.SparseIntArray: void put(int,int)>(80, 55);

        $r37 = <android.telephony.PhoneNumberUtils: android.util.SparseIntArray KEYPAD_MAP>;

        virtualinvoke $r37.<android.util.SparseIntArray: void put(int,int)>(81, 55);

        $r38 = <android.telephony.PhoneNumberUtils: android.util.SparseIntArray KEYPAD_MAP>;

        virtualinvoke $r38.<android.util.SparseIntArray: void put(int,int)>(82, 55);

        $r39 = <android.telephony.PhoneNumberUtils: android.util.SparseIntArray KEYPAD_MAP>;

        virtualinvoke $r39.<android.util.SparseIntArray: void put(int,int)>(83, 55);

        $r40 = <android.telephony.PhoneNumberUtils: android.util.SparseIntArray KEYPAD_MAP>;

        virtualinvoke $r40.<android.util.SparseIntArray: void put(int,int)>(116, 56);

        $r41 = <android.telephony.PhoneNumberUtils: android.util.SparseIntArray KEYPAD_MAP>;

        virtualinvoke $r41.<android.util.SparseIntArray: void put(int,int)>(117, 56);

        $r42 = <android.telephony.PhoneNumberUtils: android.util.SparseIntArray KEYPAD_MAP>;

        virtualinvoke $r42.<android.util.SparseIntArray: void put(int,int)>(118, 56);

        $r43 = <android.telephony.PhoneNumberUtils: android.util.SparseIntArray KEYPAD_MAP>;

        virtualinvoke $r43.<android.util.SparseIntArray: void put(int,int)>(84, 56);

        $r44 = <android.telephony.PhoneNumberUtils: android.util.SparseIntArray KEYPAD_MAP>;

        virtualinvoke $r44.<android.util.SparseIntArray: void put(int,int)>(85, 56);

        $r45 = <android.telephony.PhoneNumberUtils: android.util.SparseIntArray KEYPAD_MAP>;

        virtualinvoke $r45.<android.util.SparseIntArray: void put(int,int)>(86, 56);

        $r46 = <android.telephony.PhoneNumberUtils: android.util.SparseIntArray KEYPAD_MAP>;

        virtualinvoke $r46.<android.util.SparseIntArray: void put(int,int)>(119, 57);

        $r47 = <android.telephony.PhoneNumberUtils: android.util.SparseIntArray KEYPAD_MAP>;

        virtualinvoke $r47.<android.util.SparseIntArray: void put(int,int)>(120, 57);

        $r48 = <android.telephony.PhoneNumberUtils: android.util.SparseIntArray KEYPAD_MAP>;

        virtualinvoke $r48.<android.util.SparseIntArray: void put(int,int)>(121, 57);

        $r49 = <android.telephony.PhoneNumberUtils: android.util.SparseIntArray KEYPAD_MAP>;

        virtualinvoke $r49.<android.util.SparseIntArray: void put(int,int)>(122, 57);

        $r50 = <android.telephony.PhoneNumberUtils: android.util.SparseIntArray KEYPAD_MAP>;

        virtualinvoke $r50.<android.util.SparseIntArray: void put(int,int)>(87, 57);

        $r51 = <android.telephony.PhoneNumberUtils: android.util.SparseIntArray KEYPAD_MAP>;

        virtualinvoke $r51.<android.util.SparseIntArray: void put(int,int)>(88, 57);

        $r52 = <android.telephony.PhoneNumberUtils: android.util.SparseIntArray KEYPAD_MAP>;

        virtualinvoke $r52.<android.util.SparseIntArray: void put(int,int)>(89, 57);

        $r53 = <android.telephony.PhoneNumberUtils: android.util.SparseIntArray KEYPAD_MAP>;

        virtualinvoke $r53.<android.util.SparseIntArray: void put(int,int)>(90, 57);

        r55 = newarray (boolean)[100];

        r55[0] = 1;

        r55[1] = 1;

        r55[2] = 0;

        r55[3] = 0;

        r55[4] = 0;

        r55[5] = 0;

        r55[6] = 0;

        r55[7] = 1;

        r55[8] = 0;

        r55[9] = 0;

        r55[10] = 0;

        r55[11] = 0;

        r55[12] = 0;

        r55[13] = 0;

        r55[14] = 0;

        r55[15] = 0;

        r55[16] = 0;

        r55[17] = 0;

        r55[18] = 0;

        r55[19] = 0;

        r55[20] = 1;

        r55[21] = 0;

        r55[22] = 0;

        r55[23] = 0;

        r55[24] = 0;

        r55[25] = 0;

        r55[26] = 0;

        r55[27] = 1;

        r55[28] = 1;

        r55[29] = 0;

        r55[30] = 1;

        r55[31] = 1;

        r55[32] = 1;

        r55[33] = 1;

        r55[34] = 1;

        r55[35] = 0;

        r55[36] = 1;

        r55[37] = 0;

        r55[38] = 0;

        r55[39] = 1;

        r55[40] = 1;

        r55[41] = 0;

        r55[42] = 0;

        r55[43] = 1;

        r55[44] = 1;

        r55[45] = 1;

        r55[46] = 1;

        r55[47] = 1;

        r55[48] = 1;

        r55[49] = 1;

        r55[50] = 0;

        r55[51] = 1;

        r55[52] = 1;

        r55[53] = 1;

        r55[54] = 1;

        r55[55] = 1;

        r55[56] = 1;

        r55[57] = 1;

        r55[58] = 1;

        r55[59] = 0;

        r55[60] = 1;

        r55[61] = 1;

        r55[62] = 1;

        r55[63] = 1;

        r55[64] = 1;

        r55[65] = 1;

        r55[66] = 1;

        r55[67] = 0;

        r55[68] = 0;

        r55[69] = 0;

        r55[70] = 0;

        r55[71] = 0;

        r55[72] = 0;

        r55[73] = 0;

        r55[74] = 0;

        r55[75] = 0;

        r55[76] = 0;

        r55[77] = 0;

        r55[78] = 0;

        r55[79] = 0;

        r55[80] = 0;

        r55[81] = 1;

        r55[82] = 1;

        r55[83] = 1;

        r55[84] = 1;

        r55[85] = 0;

        r55[86] = 1;

        r55[87] = 0;

        r55[88] = 0;

        r55[89] = 1;

        r55[90] = 1;

        r55[91] = 1;

        r55[92] = 1;

        r55[93] = 1;

        r55[94] = 1;

        r55[95] = 1;

        r55[96] = 0;

        r55[97] = 0;

        r55[98] = 1;

        r55[99] = 0;

        <android.telephony.PhoneNumberUtils: boolean[] COUNTRY_CALLING_CALL> = r55;

        $i0 = lengthof r55;

        <android.telephony.PhoneNumberUtils: int CCC_LENGTH> = $i0;

        <android.telephony.PhoneNumberUtils: java.lang.String[] sConvertToEmergencyMap> = null;

        return;
    }

    public void <init>()
    {
        android.telephony.PhoneNumberUtils r0;

        r0 := @this: android.telephony.PhoneNumberUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void addTtsSpan(android.text.Spannable, int, int)
    {
        android.text.Spannable r0;
        int i0, i1;
        java.lang.CharSequence $r1;
        java.lang.String $r2;
        android.text.style.TtsSpan $r3;

        r0 := @parameter0: android.text.Spannable;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r1 = interfaceinvoke r0.<android.text.Spannable: java.lang.CharSequence subSequence(int,int)>(i0, i1);

        $r2 = interfaceinvoke $r1.<java.lang.CharSequence: java.lang.String toString()>();

        $r3 = staticinvoke <android.telephony.PhoneNumberUtils: android.text.style.TtsSpan createTtsSpan(java.lang.String)>($r2);

        interfaceinvoke r0.<android.text.Spannable: void setSpan(java.lang.Object,int,int,int)>($r3, i0, i1, 33);

        return;
    }

    private static java.lang.String appendPwCharBackToOrigDialStr(int, java.lang.String, java.lang.String)
    {
        int i0;
        java.lang.String r0, $r1, r4, r5;
        java.lang.StringBuilder $r2, $r3;
        char $c1;

        i0 := @parameter0: int;

        r4 := @parameter1: java.lang.String;

        r0 := @parameter2: java.lang.String;

        if i0 != 1 goto label1;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>(r4);

        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1);

        r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label2;

     label1:
        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, i0);

        r5 = virtualinvoke r4.<java.lang.String: java.lang.String concat(java.lang.String)>($r1);

     label2:
        return r5;
    }

    private static char bcdToChar(byte, int)
    {
        byte b0;
        int i1, $i2, $i3, $i4, $i6;
        char $c5, $c7;
        java.lang.String r0;

        b0 := @parameter0: byte;

        i1 := @parameter1: int;

        if b0 >= 10 goto label1;

        $i6 = b0 + 48;

        $c7 = (char) $i6;

        return $c7;

     label1:
        r0 = null;

        if 1 != i1 goto label2;

        r0 = "*#,N;";

        goto label3;

     label2:
        if 2 != i1 goto label3;

        r0 = "*#abc";

     label3:
        if r0 == null goto label5;

        $i2 = b0 - 10;

        $i3 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i2 < $i3 goto label4;

        goto label5;

     label4:
        $i4 = b0 - 10;

        $c5 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i4);

        return $c5;

     label5:
        return 0;
    }

    public static java.lang.String calledPartyBCDFragmentToString(byte[], int, int)
    {
        byte[] r0;
        int i0, i1;
        java.lang.String $r1;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r1 = staticinvoke <android.telephony.PhoneNumberUtils: java.lang.String calledPartyBCDFragmentToString(byte[],int,int,int)>(r0, i0, i1, 1);

        return $r1;
    }

    public static java.lang.String calledPartyBCDFragmentToString(byte[], int, int, int)
    {
        byte[] r0;
        int i0, i1, i2, $i3;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        $r2 = new java.lang.StringBuilder;

        $i3 = i1 * 2;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(int)>($i3);

        staticinvoke <android.telephony.PhoneNumberUtils: void internalCalledPartyBCDFragmentToString(java.lang.StringBuilder,byte[],int,int,int)>($r2, r0, i0, i1, i2);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }

    public static java.lang.String calledPartyBCDToString(byte[], int, int)
    {
        byte[] r0;
        int i0, i1;
        java.lang.String $r1;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r1 = staticinvoke <android.telephony.PhoneNumberUtils: java.lang.String calledPartyBCDToString(byte[],int,int,int)>(r0, i0, i1, 1);

        return $r1;
    }

    public static java.lang.String calledPartyBCDToString(byte[], int, int, int)
    {
        int i0, i1, i2, $i3, $i4, $i7, $i8, $i9;
        java.lang.String r0, $r8, $r10, $r12, $r15, $r17, $r18, $r20, $r22, $r24, $r27, $r29, $r32, $r34, $r36, $r38, $r46;
        java.lang.StringBuilder $r1, $r4, $r7, $r19, $r31, r43;
        byte $b5;
        short $s6;
        java.util.regex.Pattern $r2, $r3;
        boolean $z0, $z1, $z2, z3;
        byte[] r41;
        java.util.regex.Matcher r44, r45;

        r41 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        z3 = 0;

        $r1 = new java.lang.StringBuilder;

        $i3 = i1 * 2;

        $i4 = $i3 + 1;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(int)>($i4);

        if i1 >= 2 goto label1;

        return "";

     label1:
        $b5 = r41[i0];

        $s6 = $b5 & 240;

        if $s6 != 144 goto label2;

        z3 = 1;

     label2:
        $i8 = i0 + 1;

        $i7 = i1 - 1;

        staticinvoke <android.telephony.PhoneNumberUtils: void internalCalledPartyBCDFragmentToString(java.lang.StringBuilder,byte[],int,int,int)>($r1, r41, $i8, $i7, i2);

        if z3 == 0 goto label3;

        $i9 = virtualinvoke $r1.<java.lang.StringBuilder: int length()>();

        if $i9 != 0 goto label3;

        return "";

     label3:
        r43 = $r1;

        if z3 == 0 goto label7;

        r0 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        $r2 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("(^[#*])(.*)([#*])(.*)(#)$");

        r44 = virtualinvoke $r2.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r0);

        $z0 = virtualinvoke r44.<java.util.regex.Matcher: boolean matches()>();

        if $z0 == 0 goto label5;

        $r17 = "";

        $r18 = virtualinvoke r44.<java.util.regex.Matcher: java.lang.String group(int)>(2);

        $z2 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>($r18);

        if $z2 == 0 goto label4;

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        r43 = $r31;

        $r32 = virtualinvoke r44.<java.util.regex.Matcher: java.lang.String group(int)>(1);

        virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32);

        $r34 = virtualinvoke r44.<java.util.regex.Matcher: java.lang.String group(int)>(3);

        virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r34);

        $r36 = virtualinvoke r44.<java.util.regex.Matcher: java.lang.String group(int)>(4);

        virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r36);

        $r38 = virtualinvoke r44.<java.util.regex.Matcher: java.lang.String group(int)>(5);

        virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r38);

        virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("+");

        goto label7;

     label4:
        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        r43 = $r19;

        $r20 = virtualinvoke r44.<java.util.regex.Matcher: java.lang.String group(int)>(1);

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = virtualinvoke r44.<java.util.regex.Matcher: java.lang.String group(int)>(2);

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        $r24 = virtualinvoke r44.<java.util.regex.Matcher: java.lang.String group(int)>(3);

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("+");

        $r27 = virtualinvoke r44.<java.util.regex.Matcher: java.lang.String group(int)>(4);

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

        $r29 = virtualinvoke r44.<java.util.regex.Matcher: java.lang.String group(int)>(5);

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);

        goto label7;

     label5:
        $r3 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("(^[#*])(.*)([#*])(.*)");

        r45 = virtualinvoke $r3.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r0);

        $z1 = virtualinvoke r45.<java.util.regex.Matcher: boolean matches()>();

        if $z1 == 0 goto label6;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        r43 = $r7;

        $r8 = virtualinvoke r45.<java.util.regex.Matcher: java.lang.String group(int)>(1);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke r45.<java.util.regex.Matcher: java.lang.String group(int)>(2);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke r45.<java.util.regex.Matcher: java.lang.String group(int)>(3);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("+");

        $r15 = virtualinvoke r45.<java.util.regex.Matcher: java.lang.String group(int)>(4);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        goto label7;

     label6:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        r43 = $r4;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(43);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

     label7:
        $r46 = virtualinvoke r43.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r46;
    }

    public static java.lang.String cdmaCheckAndProcessPlusCode(java.lang.String)
    {
        java.lang.String r0, r1, r2, $r5;
        boolean $z0, $z1, $z2, $z3, $z4;
        char $c0;
        android.telephony.TelephonyManager $r3, $r4;
        int $i1, $i2;

        r0 := @parameter0: java.lang.String;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r0);

        if $z0 != 0 goto label1;

        $c0 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        $z1 = staticinvoke <android.telephony.PhoneNumberUtils: boolean isReallyDialable(char)>($c0);

        if $z1 == 0 goto label1;

        $z2 = staticinvoke <android.telephony.PhoneNumberUtils: boolean isNonSeparator(java.lang.String)>(r0);

        if $z2 == 0 goto label1;

        $r3 = staticinvoke <android.telephony.TelephonyManager: android.telephony.TelephonyManager getDefault()>();

        r1 = virtualinvoke $r3.<android.telephony.TelephonyManager: java.lang.String getNetworkCountryIso()>();

        $r4 = staticinvoke <android.telephony.TelephonyManager: android.telephony.TelephonyManager getDefault()>();

        r2 = virtualinvoke $r4.<android.telephony.TelephonyManager: java.lang.String getSimCountryIso()>();

        $z3 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z3 != 0 goto label1;

        $z4 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r2);

        if $z4 != 0 goto label1;

        $i1 = staticinvoke <android.telephony.PhoneNumberUtils: int getFormatTypeFromCountryCode(java.lang.String)>(r1);

        $i2 = staticinvoke <android.telephony.PhoneNumberUtils: int getFormatTypeFromCountryCode(java.lang.String)>(r2);

        $r5 = staticinvoke <android.telephony.PhoneNumberUtils: java.lang.String cdmaCheckAndProcessPlusCodeByNumberFormat(java.lang.String,int,int)>(r0, $i1, $i2);

        return $r5;

     label1:
        return r0;
    }

    public static java.lang.String cdmaCheckAndProcessPlusCodeByNumberFormat(java.lang.String, int, int)
    {
        java.lang.String r0, r1, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12;
        int i0, $i1, i4, i5;
        boolean $z0, $z1, $z2, z3, $z4;

        r0 := @parameter0: java.lang.String;

        i4 := @parameter1: int;

        i0 := @parameter2: int;

        if i4 != i0 goto label01;

        if i4 != 1 goto label01;

        z3 = 1;

        goto label02;

     label01:
        z3 = 0;

     label02:
        r3 = r0;

        if r0 == null goto label12;

        r3 = r0;

        $i1 = virtualinvoke r0.<java.lang.String: int lastIndexOf(java.lang.String)>("+");

        if $i1 == -1 goto label12;

        r4 = r0;

        r5 = null;

     label03:
        if z3 == 0 goto label04;

        r6 = staticinvoke <android.telephony.PhoneNumberUtils: java.lang.String extractNetworkPortion(java.lang.String)>(r4);

        goto label05;

     label04:
        r6 = staticinvoke <android.telephony.PhoneNumberUtils: java.lang.String extractNetworkPortionAlt(java.lang.String)>(r4);

     label05:
        r7 = staticinvoke <android.telephony.PhoneNumberUtils: java.lang.String processPlusCode(java.lang.String,boolean)>(r6, z3);

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r7);

        if $z0 != 0 goto label11;

        if r5 != null goto label06;

        r8 = r7;

        goto label07;

     label06:
        r8 = virtualinvoke r5.<java.lang.String: java.lang.String concat(java.lang.String)>(r7);

     label07:
        r1 = staticinvoke <android.telephony.PhoneNumberUtils: java.lang.String extractPostDialPortion(java.lang.String)>(r4);

        r9 = r8;

        r10 = r1;

        r11 = r4;

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z1 != 0 goto label10;

        i5 = staticinvoke <android.telephony.PhoneNumberUtils: int findDialableIndexFromPostDialStr(java.lang.String)>(r1);

        if i5 < 1 goto label08;

        r9 = staticinvoke <android.telephony.PhoneNumberUtils: java.lang.String appendPwCharBackToOrigDialStr(int,java.lang.String,java.lang.String)>(i5, r8, r1);

        r11 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>(i5);

        r10 = r1;

        goto label10;

     label08:
        r12 = r1;

        if i5 >= 0 goto label09;

        r12 = "";

     label09:
        staticinvoke <com.android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("wrong postDialStr=", r12);

        r11 = r4;

        r10 = r12;

        r9 = r8;

     label10:
        r3 = r9;

        $z4 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r10);

        if $z4 != 0 goto label12;

        r5 = r9;

        r4 = r11;

        $z2 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r11);

        if $z2 == 0 goto label03;

        r3 = r9;

        goto label12;

     label11:
        staticinvoke <com.android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("checkAndProcessPlusCode: null newDialStr", r7);

        return r0;

     label12:
        return r3;
    }

    public static java.lang.String cdmaCheckAndProcessPlusCodeForSms(java.lang.String)
    {
        java.lang.String r0, r1, $r3;
        int i0;
        boolean $z0, $z1, $z2, $z3;
        char $c1;
        android.telephony.TelephonyManager $r2;

        r0 := @parameter0: java.lang.String;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r0);

        if $z0 != 0 goto label1;

        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        $z1 = staticinvoke <android.telephony.PhoneNumberUtils: boolean isReallyDialable(char)>($c1);

        if $z1 == 0 goto label1;

        $z2 = staticinvoke <android.telephony.PhoneNumberUtils: boolean isNonSeparator(java.lang.String)>(r0);

        if $z2 == 0 goto label1;

        $r2 = staticinvoke <android.telephony.TelephonyManager: android.telephony.TelephonyManager getDefault()>();

        r1 = virtualinvoke $r2.<android.telephony.TelephonyManager: java.lang.String getSimCountryIso()>();

        $z3 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z3 != 0 goto label1;

        i0 = staticinvoke <android.telephony.PhoneNumberUtils: int getFormatTypeFromCountryCode(java.lang.String)>(r1);

        $r3 = staticinvoke <android.telephony.PhoneNumberUtils: java.lang.String cdmaCheckAndProcessPlusCodeByNumberFormat(java.lang.String,int,int)>(r0, i0, i0);

        return $r3;

     label1:
        return r0;
    }

    private static int charToBCD(char, int)
    {
        char c0;
        int i1, $i2, $i3, $i4, $i5;
        java.lang.StringBuilder $r0;
        java.lang.RuntimeException $r3;
        java.lang.String $r4, r5;

        c0 := @parameter0: char;

        i1 := @parameter1: int;

        if 48 > c0 goto label1;

        if c0 > 57 goto label1;

        $i5 = c0 - 48;

        return $i5;

     label1:
        r5 = null;

        if 1 != i1 goto label2;

        r5 = "*#,N;";

        goto label3;

     label2:
        if 2 != i1 goto label3;

        r5 = "*#abc";

     label3:
        if r5 == null goto label4;

        $i2 = virtualinvoke r5.<java.lang.String: int indexOf(int)>(c0);

        if $i2 == -1 goto label4;

        $i3 = virtualinvoke r5.<java.lang.String: int indexOf(int)>(c0);

        $i4 = $i3 + 10;

        return $i4;

     label4:
        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("invalid char for BCD ");

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c0);

        $r3 = new java.lang.RuntimeException;

        $r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>($r4);

        throw $r3;
    }

    private static boolean checkPrefixIsIgnorable(java.lang.String, int, int)
    {
        java.lang.String r0;
        int i0, $i2, i4;
        char $c1, $c3;
        boolean $z0, z1;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i4 := @parameter2: int;

        z1 = 0;

     label1:
        if i4 < i0 goto label5;

        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i4);

        $i2 = staticinvoke <android.telephony.PhoneNumberUtils: int tryGetISODigit(char)>($c1);

        if $i2 < 0 goto label3;

        if z1 == 0 goto label2;

        return 0;

     label2:
        z1 = 1;

        goto label4;

     label3:
        $c3 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i4);

        $z0 = staticinvoke <android.telephony.PhoneNumberUtils: boolean isDialable(char)>($c3);

        if $z0 == 0 goto label4;

        return 0;

     label4:
        i4 = i4 + -1;

        goto label1;

     label5:
        return 1;
    }

    public static boolean compare(android.content.Context, java.lang.String, java.lang.String)
    {
        android.content.Context r0;
        java.lang.String r1, r2;
        android.content.res.Resources $r3;
        boolean $z0, $z1;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        $r3 = virtualinvoke r0.<android.content.Context: android.content.res.Resources getResources()>();

        $z0 = virtualinvoke $r3.<android.content.res.Resources: boolean getBoolean(int)>(17891579);

        $z1 = staticinvoke <android.telephony.PhoneNumberUtils: boolean compare(java.lang.String,java.lang.String,boolean)>(r1, r2, $z0);

        return $z1;
    }

    public static boolean compare(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $z0 = staticinvoke <android.telephony.PhoneNumberUtils: boolean compare(java.lang.String,java.lang.String,boolean)>(r0, r1, 0);

        return $z0;
    }

    public static boolean compare(java.lang.String, java.lang.String, boolean)
    {
        java.lang.String r0, r1;
        boolean z0, z1;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        if z0 == 0 goto label1;

        z1 = staticinvoke <android.telephony.PhoneNumberUtils: boolean compareStrictly(java.lang.String,java.lang.String)>(r0, r1);

        goto label2;

     label1:
        z1 = staticinvoke <android.telephony.PhoneNumberUtils: boolean compareLoosely(java.lang.String,java.lang.String)>(r0, r1);

     label2:
        return z1;
    }

    public static boolean compareLoosely(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1;
        int i0, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, i14, i15, i16, i17, i18, i19, i20, i21, i22, i23, i24, i25, i26;
        char c1, c2;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, z8, z9, z10;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        i14 = 0;

        i15 = 0;

        i0 = staticinvoke <android.telephony.PhoneNumberUtils: int getMinMatch()>();

        z8 = 0;

        if r0 == null goto label17;

        if r1 != null goto label01;

        goto label17;

     label01:
        $i3 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i3 == 0 goto label16;

        $i4 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i4 != 0 goto label02;

        goto label16;

     label02:
        i16 = staticinvoke <android.telephony.PhoneNumberUtils: int indexOfLastNetworkChar(java.lang.String)>(r0);

        i17 = staticinvoke <android.telephony.PhoneNumberUtils: int indexOfLastNetworkChar(java.lang.String)>(r1);

        i18 = 0;

     label03:
        i19 = i14;

        i20 = i15;

        i21 = i16;

        i22 = i17;

        if i16 < 0 goto label08;

        i19 = i14;

        i20 = i15;

        i21 = i16;

        i22 = i17;

        if i17 < 0 goto label08;

        z9 = 0;

        c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i16);

        i19 = i14;

        i21 = i16;

        $z6 = staticinvoke <android.telephony.PhoneNumberUtils: boolean isDialable(char)>(c1);

        if $z6 != 0 goto label04;

        i21 = i16 - 1;

        z9 = 1;

        i19 = i14 + 1;

     label04:
        c2 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i17);

        i20 = i15;

        i23 = i17;

        z10 = z9;

        $z7 = staticinvoke <android.telephony.PhoneNumberUtils: boolean isDialable(char)>(c2);

        if $z7 != 0 goto label05;

        i23 = i17 - 1;

        z10 = 1;

        i20 = i15 + 1;

     label05:
        i24 = i21;

        i17 = i23;

        i25 = i18;

        if z10 != 0 goto label07;

        if c2 == c1 goto label06;

        if c1 == 78 goto label06;

        if c2 == 78 goto label06;

        i22 = i23;

        goto label08;

     label06:
        i24 = i21 - 1;

        i17 = i23 - 1;

        i25 = i18 + 1;

     label07:
        i14 = i19;

        i15 = i20;

        i16 = i24;

        i18 = i25;

        goto label03;

     label08:
        if i18 >= i0 goto label10;

        $i11 = virtualinvoke r0.<java.lang.String: int length()>();

        i26 = $i11 - i19;

        $i12 = virtualinvoke r1.<java.lang.String: int length()>();

        $i13 = $i12 - i20;

        if i26 != $i13 goto label09;

        if i26 != i18 goto label09;

        return 1;

     label09:
        return 0;

     label10:
        if i18 < i0 goto label12;

        if i21 < 0 goto label11;

        if i22 >= 0 goto label12;

     label11:
        return 1;

     label12:
        $i5 = i21 + 1;

        $z0 = staticinvoke <android.telephony.PhoneNumberUtils: boolean matchIntlPrefix(java.lang.String,int)>(r0, $i5);

        if $z0 == 0 goto label13;

        $i10 = i22 + 1;

        $z5 = staticinvoke <android.telephony.PhoneNumberUtils: boolean matchIntlPrefix(java.lang.String,int)>(r1, $i10);

        if $z5 == 0 goto label13;

        return 1;

     label13:
        $i6 = i21 + 1;

        $z1 = staticinvoke <android.telephony.PhoneNumberUtils: boolean matchTrunkPrefix(java.lang.String,int)>(r0, $i6);

        if $z1 == 0 goto label14;

        $i9 = i22 + 1;

        $z4 = staticinvoke <android.telephony.PhoneNumberUtils: boolean matchIntlPrefixAndCC(java.lang.String,int)>(r1, $i9);

        if $z4 == 0 goto label14;

        return 1;

     label14:
        $i7 = i22 + 1;

        $z2 = staticinvoke <android.telephony.PhoneNumberUtils: boolean matchTrunkPrefix(java.lang.String,int)>(r1, $i7);

        if $z2 == 0 goto label15;

        $i8 = i21 + 1;

        $z3 = staticinvoke <android.telephony.PhoneNumberUtils: boolean matchIntlPrefixAndCC(java.lang.String,int)>(r0, $i8);

        if $z3 == 0 goto label15;

        return 1;

     label15:
        return 0;

     label16:
        return 0;

     label17:
        if r0 != r1 goto label18;

        z8 = 1;

     label18:
        return z8;
    }

    public static boolean compareStrictly(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $z0 = staticinvoke <android.telephony.PhoneNumberUtils: boolean compareStrictly(java.lang.String,java.lang.String,boolean)>(r0, r1, 1);

        return $z0;
    }

    public static boolean compareStrictly(java.lang.String, java.lang.String, boolean)
    {
        java.lang.String r0, r1;
        android.telephony.PhoneNumberUtils$CountryCallingCodeAndNewIndex r2, r3;
        char c0, c16, c22, c23;
        int $i1, $i2, $i3, $i4, $i5, $i6, i7, i8, i9, i10, i11, $i12, i13, $i14, i15, i17, i18, i19, i20, i21;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, z8, z11, z12, z13, z14, z15, z16, z17, z18, z19, z20, z21, z22;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        z8 := @parameter2: boolean;

        if r0 == null goto label31;

        if r1 != null goto label01;

        goto label31;

     label01:
        $i1 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i1 != 0 goto label02;

        $i6 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i6 != 0 goto label02;

        return 0;

     label02:
        i7 = 0;

        i8 = 0;

        i9 = 0;

        r2 = staticinvoke <android.telephony.PhoneNumberUtils: android.telephony.PhoneNumberUtils$CountryCallingCodeAndNewIndex tryGetCountryCallingCodeAndNewIndex(java.lang.String,boolean)>(r0, z8);

        r3 = staticinvoke <android.telephony.PhoneNumberUtils: android.telephony.PhoneNumberUtils$CountryCallingCodeAndNewIndex tryGetCountryCallingCodeAndNewIndex(java.lang.String,boolean)>(r1, z8);

        z11 = 0;

        z12 = 0;

        z13 = 0;

        if r2 == null goto label04;

        if r3 == null goto label04;

        $i5 = r2.<android.telephony.PhoneNumberUtils$CountryCallingCodeAndNewIndex: int countryCallingCode>;

        $i4 = r3.<android.telephony.PhoneNumberUtils$CountryCallingCodeAndNewIndex: int countryCallingCode>;

        if $i5 == $i4 goto label03;

        return 0;

     label03:
        z14 = 0;

        z15 = 1;

        i7 = r2.<android.telephony.PhoneNumberUtils$CountryCallingCodeAndNewIndex: int newIndex>;

        i9 = r3.<android.telephony.PhoneNumberUtils$CountryCallingCodeAndNewIndex: int newIndex>;

        goto label09;

     label04:
        if r2 != null goto label05;

        if r3 != null goto label05;

        z14 = 0;

        z15 = 0;

        goto label09;

     label05:
        if r2 == null goto label06;

        i8 = r2.<android.telephony.PhoneNumberUtils$CountryCallingCodeAndNewIndex: int newIndex>;

        goto label07;

     label06:
        i10 = staticinvoke <android.telephony.PhoneNumberUtils: int tryGetTrunkPrefixOmittedIndex(java.lang.String,int)>(r1, 0);

        if i10 < 0 goto label07;

        i8 = i10;

        z12 = 1;

     label07:
        if r3 == null goto label08;

        i9 = r3.<android.telephony.PhoneNumberUtils$CountryCallingCodeAndNewIndex: int newIndex>;

        i7 = i8;

        z15 = 0;

        z14 = 1;

        z11 = z12;

        goto label09;

     label08:
        i11 = staticinvoke <android.telephony.PhoneNumberUtils: int tryGetTrunkPrefixOmittedIndex(java.lang.String,int)>(r1, 0);

        i7 = i8;

        z15 = 0;

        z14 = 1;

        z11 = z12;

        if i11 < 0 goto label09;

        i9 = i11;

        z13 = 1;

        z11 = z12;

        z14 = 1;

        z15 = 0;

        i7 = i8;

     label09:
        $i12 = virtualinvoke r0.<java.lang.String: int length()>();

        i13 = $i12 - 1;

        $i14 = virtualinvoke r1.<java.lang.String: int length()>();

        i15 = $i14 - 1;

     label10:
        if i13 < i7 goto label15;

        if i15 < i9 goto label15;

        z16 = 0;

        c16 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i13);

        c0 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i15);

        i17 = i13;

        $z6 = staticinvoke <android.telephony.PhoneNumberUtils: boolean isSeparator(char)>(c16);

        if $z6 == 0 goto label11;

        i17 = i13 - 1;

        z16 = 1;

     label11:
        i18 = i15;

        z17 = z16;

        $z7 = staticinvoke <android.telephony.PhoneNumberUtils: boolean isSeparator(char)>(c0);

        if $z7 == 0 goto label12;

        i18 = i15 - 1;

        z17 = 1;

     label12:
        i19 = i17;

        i15 = i18;

        if z17 != 0 goto label14;

        if c16 == c0 goto label13;

        return 0;

     label13:
        i19 = i17 - 1;

        i15 = i18 - 1;

     label14:
        i13 = i19;

        goto label10;

     label15:
        if z14 == 0 goto label23;

        if z11 == 0 goto label16;

        if i7 <= i13 goto label17;

     label16:
        $z2 = staticinvoke <android.telephony.PhoneNumberUtils: boolean checkPrefixIsIgnorable(java.lang.String,int,int)>(r0, i7, i13);

        if $z2 != 0 goto label19;

     label17:
        if z8 == 0 goto label18;

        $z5 = staticinvoke <android.telephony.PhoneNumberUtils: boolean compare(java.lang.String,java.lang.String,boolean)>(r0, r1, 0);

        return $z5;

     label18:
        return 0;

     label19:
        if z13 == 0 goto label20;

        if i9 <= i15 goto label21;

     label20:
        $z3 = staticinvoke <android.telephony.PhoneNumberUtils: boolean checkPrefixIsIgnorable(java.lang.String,int,int)>(r1, i7, i15);

        if $z3 != 0 goto label30;

     label21:
        if z8 == 0 goto label22;

        $z4 = staticinvoke <android.telephony.PhoneNumberUtils: boolean compare(java.lang.String,java.lang.String,boolean)>(r0, r1, 0);

        return $z4;

     label22:
        return 0;

     label23:
        z18 = z15 ^ 1;

        i20 = i13;

        z19 = z18;

     label24:
        z20 = z19;

        i21 = i15;

        if i20 < i7 goto label27;

        c22 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i20);

        z21 = z19;

        $z1 = staticinvoke <android.telephony.PhoneNumberUtils: boolean isDialable(char)>(c22);

        if $z1 == 0 goto label26;

        if z19 == 0 goto label25;

        $i3 = staticinvoke <android.telephony.PhoneNumberUtils: int tryGetISODigit(char)>(c22);

        if $i3 != 1 goto label25;

        z21 = 0;

        goto label26;

     label25:
        return 0;

     label26:
        i20 = i20 + -1;

        z19 = z21;

        goto label24;

     label27:
        if i21 < i9 goto label30;

        c23 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i21);

        $z0 = staticinvoke <android.telephony.PhoneNumberUtils: boolean isDialable(char)>(c23);

        if $z0 == 0 goto label29;

        if z20 == 0 goto label28;

        $i2 = staticinvoke <android.telephony.PhoneNumberUtils: int tryGetISODigit(char)>(c23);

        if $i2 != 1 goto label28;

        z20 = 0;

        goto label29;

     label28:
        return 0;

     label29:
        i21 = i21 + -1;

        goto label27;

     label30:
        return 1;

     label31:
        if r0 != r1 goto label32;

        z22 = 1;

        goto label33;

     label32:
        z22 = 0;

     label33:
        return z22;
    }

    public static java.lang.String convertAndStrip(java.lang.String)
    {
        java.lang.String r0, $r1, $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <android.telephony.PhoneNumberUtils: java.lang.String convertKeypadLettersToDigits(java.lang.String)>(r0);

        $r2 = staticinvoke <android.telephony.PhoneNumberUtils: java.lang.String stripSeparators(java.lang.String)>($r1);

        return $r2;
    }

    public static java.lang.String convertKeypadLettersToDigits(java.lang.String)
    {
        int i0, $i2, i5;
        char c1, $c3, $c4;
        java.lang.String $r0, r2;
        android.util.SparseIntArray $r1;
        char[] r3;

        r2 := @parameter0: java.lang.String;

        if r2 != null goto label1;

        return r2;

     label1:
        i0 = virtualinvoke r2.<java.lang.String: int length()>();

        if i0 != 0 goto label2;

        return r2;

     label2:
        r3 = virtualinvoke r2.<java.lang.String: char[] toCharArray()>();

        i5 = 0;

     label3:
        if i5 >= i0 goto label4;

        c1 = r3[i5];

        $r1 = <android.telephony.PhoneNumberUtils: android.util.SparseIntArray KEYPAD_MAP>;

        $i2 = virtualinvoke $r1.<android.util.SparseIntArray: int get(int,int)>(c1, c1);

        $c3 = (char) $i2;

        $c4 = (char) $c3;

        r3[i5] = $c4;

        i5 = i5 + 1;

        goto label3;

     label4:
        $r0 = new java.lang.String;

        specialinvoke $r0.<java.lang.String: void <init>(char[])>(r3);

        return $r0;
    }

    public static java.lang.String convertPreDial(java.lang.String)
    {
        java.lang.String r0, $r3;
        int i0, i2;
        char c1, c4;
        java.lang.StringBuilder $r2;
        boolean $z0, $z1;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        return null;

     label1:
        i0 = virtualinvoke r0.<java.lang.String: int length()>();

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(int)>(i0);

        i2 = 0;

     label2:
        if i2 >= i0 goto label5;

        c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i2);

        $z0 = staticinvoke <android.telephony.PhoneNumberUtils: boolean isPause(char)>(c1);

        if $z0 == 0 goto label3;

        c4 = 44;

        goto label4;

     label3:
        c4 = c1;

        $z1 = staticinvoke <android.telephony.PhoneNumberUtils: boolean isToneWait(char)>(c1);

        if $z1 == 0 goto label4;

        c4 = 59;

     label4:
        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c4);

        i2 = i2 + 1;

        goto label2;

     label5:
        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }

    public static android.net.Uri convertSipUriToTelUri(android.net.Uri)
    {
        android.net.Uri r0, $r6;
        java.lang.String[] r1;
        java.lang.String $r2, $r3, $r4, $r5;
        boolean $z0;
        int $i0;

        r0 := @parameter0: android.net.Uri;

        $r2 = "sip";

        $r3 = virtualinvoke r0.<android.net.Uri: java.lang.String getScheme()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 != 0 goto label1;

        return r0;

     label1:
        $r4 = virtualinvoke r0.<android.net.Uri: java.lang.String getSchemeSpecificPart()>();

        r1 = virtualinvoke $r4.<java.lang.String: java.lang.String[] split(java.lang.String)>("[@;:]");

        $i0 = lengthof r1;

        if $i0 != 0 goto label2;

        return r0;

     label2:
        $r5 = r1[0];

        $r6 = staticinvoke <android.net.Uri: android.net.Uri fromParts(java.lang.String,java.lang.String,java.lang.String)>("tel", $r5, null);

        return $r6;
    }

    public static java.lang.String convertToEmergencyNumber(android.content.Context, java.lang.String)
    {
        java.lang.String r0, r1, $r4, $r5, r9, r12, r13, r14;
        java.lang.String[] r2, $r3, $r7, r10, r11;
        int i0, i1, $i2, $i3, $i4, i5, i6;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        android.content.res.Resources $r6;
        android.content.Context r8;

        r8 := @parameter0: android.content.Context;

        r0 := @parameter1: java.lang.String;

        if r8 == null goto label14;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r0);

        if $z0 == 0 goto label01;

        goto label14;

     label01:
        r1 = staticinvoke <android.telephony.PhoneNumberUtils: java.lang.String normalizeNumber(java.lang.String)>(r0);

        $z1 = staticinvoke <android.telephony.PhoneNumberUtils: boolean isEmergencyNumber(java.lang.String)>(r1);

        if $z1 == 0 goto label02;

        return r0;

     label02:
        $r3 = <android.telephony.PhoneNumberUtils: java.lang.String[] sConvertToEmergencyMap>;

        if $r3 != null goto label03;

        $r6 = virtualinvoke r8.<android.content.Context: android.content.res.Resources getResources()>();

        $r7 = virtualinvoke $r6.<android.content.res.Resources: java.lang.String[] getStringArray(int)>(17236004);

        <android.telephony.PhoneNumberUtils: java.lang.String[] sConvertToEmergencyMap> = $r7;

     label03:
        r2 = <android.telephony.PhoneNumberUtils: java.lang.String[] sConvertToEmergencyMap>;

        if r2 == null goto label13;

        $i2 = lengthof r2;

        if $i2 != 0 goto label04;

        goto label13;

     label04:
        i0 = lengthof r2;

        i5 = 0;

     label05:
        if i5 >= i0 goto label12;

        r9 = r2[i5];

        r10 = null;

        $z2 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r9);

        if $z2 != 0 goto label06;

        r10 = virtualinvoke r9.<java.lang.String: java.lang.String[] split(java.lang.String)>(":");

     label06:
        r11 = null;

        r12 = null;

        if r10 == null goto label07;

        r11 = null;

        r12 = null;

        $i4 = lengthof r10;

        if $i4 != 2 goto label07;

        r13 = r10[1];

        r11 = null;

        r12 = r13;

        $r4 = r10[0];

        $z5 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r4);

        if $z5 != 0 goto label07;

        $r5 = r10[0];

        r11 = virtualinvoke $r5.<java.lang.String: java.lang.String[] split(java.lang.String)>(",");

        r12 = r13;

     label07:
        $z6 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r12);

        if $z6 != 0 goto label11;

        if r11 == null goto label11;

        $i3 = lengthof r11;

        if $i3 != 0 goto label08;

        goto label11;

     label08:
        i1 = lengthof r11;

        i6 = 0;

     label09:
        if i6 >= i1 goto label11;

        r14 = r11[i6];

        $z3 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r14);

        if $z3 != 0 goto label10;

        $z4 = virtualinvoke r14.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z4 == 0 goto label10;

        return r12;

     label10:
        i6 = i6 + 1;

        goto label09;

     label11:
        i5 = i5 + 1;

        goto label05;

     label12:
        return r0;

     label13:
        return r0;

     label14:
        return r0;
    }

    public static android.text.style.TtsSpan createTtsSpan(java.lang.String)
    {
        java.lang.String r0, $r2, $r4, $r6;
        android.text.style.TtsSpan$TelephoneBuilder $r1;
        boolean $z0;
        long $l0;
        int $i1;
        com.android.i18n.phonenumbers.NumberParseException $r8;
        com.android.i18n.phonenumbers.PhoneNumberUtil r9;
        com.android.i18n.phonenumbers.Phonenumber$PhoneNumber r10, r11;
        android.text.style.TtsSpan $r14;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        return null;

     label1:
        r9 = staticinvoke <com.android.i18n.phonenumbers.PhoneNumberUtil: com.android.i18n.phonenumbers.PhoneNumberUtil getInstance()>();

        r10 = null;

     label2:
        r11 = virtualinvoke r9.<com.android.i18n.phonenumbers.PhoneNumberUtil: com.android.i18n.phonenumbers.Phonenumber$PhoneNumber parse(java.lang.CharSequence,java.lang.String)>(r0, null);

     label3:
        r10 = r11;

        goto label5;

     label4:
        $r8 := @caughtexception;

     label5:
        $r1 = new android.text.style.TtsSpan$TelephoneBuilder;

        specialinvoke $r1.<android.text.style.TtsSpan$TelephoneBuilder: void <init>()>();

        if r10 != null goto label6;

        $r6 = staticinvoke <android.telephony.PhoneNumberUtils: java.lang.String splitAtNonNumerics(java.lang.CharSequence)>(r0);

        virtualinvoke $r1.<android.text.style.TtsSpan$TelephoneBuilder: android.text.style.TtsSpan$TelephoneBuilder setNumberParts(java.lang.String)>($r6);

        goto label8;

     label6:
        $z0 = virtualinvoke r10.<com.android.i18n.phonenumbers.Phonenumber$PhoneNumber: boolean hasCountryCode()>();

        if $z0 == 0 goto label7;

        $i1 = virtualinvoke r10.<com.android.i18n.phonenumbers.Phonenumber$PhoneNumber: int getCountryCode()>();

        $r4 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i1);

        virtualinvoke $r1.<android.text.style.TtsSpan$TelephoneBuilder: android.text.style.TtsSpan$TelephoneBuilder setCountryCode(java.lang.String)>($r4);

     label7:
        $l0 = virtualinvoke r10.<com.android.i18n.phonenumbers.Phonenumber$PhoneNumber: long getNationalNumber()>();

        $r2 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l0);

        virtualinvoke $r1.<android.text.style.TtsSpan$TelephoneBuilder: android.text.style.TtsSpan$TelephoneBuilder setNumberParts(java.lang.String)>($r2);

     label8:
        $r14 = virtualinvoke $r1.<android.text.style.TtsSpan$TelephoneBuilder: android.text.style.TtsSpan build()>();

        return $r14;

        catch com.android.i18n.phonenumbers.NumberParseException from label2 to label3 with label4;
    }

    public static java.lang.CharSequence createTtsSpannable(java.lang.CharSequence)
    {
        android.text.Spannable$Factory $r0;
        int $i0;
        java.lang.CharSequence r1;
        android.text.Spannable r2;

        r1 := @parameter0: java.lang.CharSequence;

        if r1 != null goto label1;

        return null;

     label1:
        $r0 = staticinvoke <android.text.Spannable$Factory: android.text.Spannable$Factory getInstance()>();

        r2 = virtualinvoke $r0.<android.text.Spannable$Factory: android.text.Spannable newSpannable(java.lang.CharSequence)>(r1);

        $i0 = interfaceinvoke r2.<android.text.Spannable: int length()>();

        staticinvoke <android.telephony.PhoneNumberUtils: void addTtsSpan(android.text.Spannable,int,int)>(r2, 0, $i0);

        return r2;
    }

    public static java.lang.String extractNetworkPortion(java.lang.String)
    {
        java.lang.String r0, r2, $r4;
        int i0, i2, $i3, i4;
        char c1;
        java.lang.StringBuilder $r3;
        boolean $z0, $z1, $z2, $z3;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        return null;

     label1:
        i0 = virtualinvoke r0.<java.lang.String: int length()>();

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(int)>(i0);

        i4 = 0;

     label2:
        if i4 >= i0 goto label9;

        c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i4);

        i2 = staticinvoke <java.lang.Character: int digit(char,int)>(c1, 10);

        if i2 == -1 goto label3;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        goto label8;

     label3:
        if c1 != 43 goto label6;

        r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $i3 = virtualinvoke r2.<java.lang.String: int length()>();

        if $i3 == 0 goto label4;

        $z2 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("*31#");

        if $z2 != 0 goto label4;

        $z3 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("#31#");

        if $z3 == 0 goto label5;

     label4:
        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c1);

     label5:
        goto label8;

     label6:
        $z0 = staticinvoke <android.telephony.PhoneNumberUtils: boolean isDialable(char)>(c1);

        if $z0 == 0 goto label7;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c1);

        goto label8;

     label7:
        $z1 = staticinvoke <android.telephony.PhoneNumberUtils: boolean isStartsPostDial(char)>(c1);

        if $z1 == 0 goto label8;

        goto label9;

     label8:
        i4 = i4 + 1;

        goto label2;

     label9:
        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }

    public static java.lang.String extractNetworkPortionAlt(java.lang.String)
    {
        java.lang.String r0, $r3;
        int i0, i2;
        char c1;
        java.lang.StringBuilder $r2;
        boolean $z0, $z1, z2, z3;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        return null;

     label1:
        i0 = virtualinvoke r0.<java.lang.String: int length()>();

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(int)>(i0);

        z2 = 0;

        i2 = 0;

     label2:
        if i2 >= i0 goto label7;

        c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i2);

        z3 = z2;

        if c1 != 43 goto label4;

        if z2 == 0 goto label3;

        goto label6;

     label3:
        z3 = 1;

     label4:
        $z0 = staticinvoke <android.telephony.PhoneNumberUtils: boolean isDialable(char)>(c1);

        if $z0 == 0 goto label5;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c1);

        z2 = z3;

        goto label6;

     label5:
        z2 = z3;

        $z1 = staticinvoke <android.telephony.PhoneNumberUtils: boolean isStartsPostDial(char)>(c1);

        if $z1 == 0 goto label6;

        goto label7;

     label6:
        i2 = i2 + 1;

        goto label2;

     label7:
        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }

    public static java.lang.String extractPostDialPortion(java.lang.String)
    {
        java.lang.String r0, $r3;
        int i0, $i2, i3;
        char c1;
        java.lang.StringBuilder $r2;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        return null;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $i2 = staticinvoke <android.telephony.PhoneNumberUtils: int indexOfLastNetworkChar(java.lang.String)>(r0);

        i3 = $i2 + 1;

        i0 = virtualinvoke r0.<java.lang.String: int length()>();

     label2:
        if i3 >= i0 goto label4;

        c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i3);

        $z0 = staticinvoke <android.telephony.PhoneNumberUtils: boolean isNonSeparator(char)>(c1);

        if $z0 == 0 goto label3;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c1);

     label3:
        i3 = i3 + 1;

        goto label2;

     label4:
        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }

    private static int findDialableIndexFromPostDialStr(java.lang.String)
    {
        java.lang.String r0;
        int $i0, i2;
        char $c1;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        i2 = 0;

     label1:
        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if i2 >= $i0 goto label3;

        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i2);

        $z0 = staticinvoke <android.telephony.PhoneNumberUtils: boolean isReallyDialable(char)>($c1);

        if $z0 == 0 goto label2;

        return i2;

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        return -1;
    }

    public static void formatJapaneseNumber(android.text.Editable)
    {
        android.text.Editable r0;

        r0 := @parameter0: android.text.Editable;

        staticinvoke <android.telephony.JapanesePhoneNumberFormatter: void format(android.text.Editable)>(r0);

        return;
    }

    public static void formatNanpNumber(android.text.Editable)
    {
        android.text.Editable r0;
        java.lang.CharSequence r1;
        int i0, $i1, $i2, $i4, $i5, $i6, i7, i8, i10, i11, i14, i16, i17, i18, i19;
        int[] r2;
        java.lang.String $r3;
        char $c3, c12;
        byte b9, b13;

        r0 := @parameter0: android.text.Editable;

        i7 = interfaceinvoke r0.<android.text.Editable: int length()>();

        $r3 = "+1-nnn-nnn-nnnn";

        $i1 = virtualinvoke $r3.<java.lang.String: int length()>();

        if i7 <= $i1 goto label01;

        return;

     label01:
        if i7 > 5 goto label02;

        return;

     label02:
        r1 = interfaceinvoke r0.<android.text.Editable: java.lang.CharSequence subSequence(int,int)>(0, i7);

        staticinvoke <android.telephony.PhoneNumberUtils: void removeDashes(android.text.Editable)>(r0);

        i0 = interfaceinvoke r0.<android.text.Editable: int length()>();

        r2 = newarray (int)[3];

        i8 = 0;

        b9 = 1;

        i10 = 0;

        i11 = 0;

     label03:
        if i11 >= i0 goto label16;

        c12 = interfaceinvoke r0.<android.text.Editable: char charAt(int)>(i11);

        if c12 == 43 goto label13;

        if c12 == 45 goto label12;

        tableswitch(c12)
        {
            case 48: goto label07;
            case 49: goto label05;
            case 50: goto label07;
            case 51: goto label07;
            case 52: goto label07;
            case 53: goto label07;
            case 54: goto label07;
            case 55: goto label07;
            case 56: goto label07;
            case 57: goto label07;
            default: goto label04;
        };

     label04:
        goto label15;

     label05:
        if i10 == 0 goto label06;

        if b9 != 2 goto label07;

     label06:
        b13 = 3;

        goto label14;

     label07:
        if b9 != 2 goto label08;

        interfaceinvoke r0.<android.text.Editable: android.text.Editable replace(int,int,java.lang.CharSequence)>(0, i0, r1);

        return;

     label08:
        if b9 != 3 goto label09;

        r2[i8] = i11;

        i14 = i8 + 1;

        goto label11;

     label09:
        i14 = i8;

        if b9 == 4 goto label11;

        if i10 == 3 goto label10;

        i14 = i8;

        if i10 != 6 goto label11;

     label10:
        r2[i8] = i11;

        i14 = i8 + 1;

     label11:
        i10 = i10 + 1;

        i8 = i14;

        b13 = 1;

        goto label14;

     label12:
        b13 = 4;

        goto label14;

     label13:
        if i11 != 0 goto label15;

        b13 = 2;

     label14:
        i11 = i11 + 1;

        b9 = b13;

        goto label03;

     label15:
        interfaceinvoke r0.<android.text.Editable: android.text.Editable replace(int,int,java.lang.CharSequence)>(0, i0, r1);

        return;

     label16:
        i16 = i8;

        if i10 != 7 goto label17;

        i16 = i8 - 1;

     label17:
        i17 = 0;

     label18:
        if i17 >= i16 goto label19;

        i18 = r2[i17];

        $i6 = i18 + i17;

        $i5 = i18 + i17;

        interfaceinvoke r0.<android.text.Editable: android.text.Editable replace(int,int,java.lang.CharSequence)>($i6, $i5, "-");

        i17 = i17 + 1;

        goto label18;

     label19:
        i19 = interfaceinvoke r0.<android.text.Editable: int length()>();

     label20:
        if i19 <= 0 goto label21;

        $i2 = i19 - 1;

        $c3 = interfaceinvoke r0.<android.text.Editable: char charAt(int)>($i2);

        if $c3 != 45 goto label21;

        $i4 = i19 - 1;

        interfaceinvoke r0.<android.text.Editable: android.text.Editable delete(int,int)>($i4, i19);

        i19 = i19 + -1;

        goto label20;

     label21:
        return;
    }

    public static java.lang.String formatNumber(java.lang.String)
    {
        android.text.SpannableStringBuilder $r0;
        java.util.Locale $r1;
        int $i0;
        java.lang.String $r2, r3;

        r3 := @parameter0: java.lang.String;

        $r0 = new android.text.SpannableStringBuilder;

        specialinvoke $r0.<android.text.SpannableStringBuilder: void <init>(java.lang.CharSequence)>(r3);

        $r1 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $i0 = staticinvoke <android.telephony.PhoneNumberUtils: int getFormatTypeForLocale(java.util.Locale)>($r1);

        staticinvoke <android.telephony.PhoneNumberUtils: void formatNumber(android.text.Editable,int)>($r0, $i0);

        $r2 = virtualinvoke $r0.<android.text.SpannableStringBuilder: java.lang.String toString()>();

        return $r2;
    }

    public static java.lang.String formatNumber(java.lang.String, int)
    {
        int i0;
        android.text.SpannableStringBuilder $r0;
        java.lang.String $r1, r2;

        r2 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r0 = new android.text.SpannableStringBuilder;

        specialinvoke $r0.<android.text.SpannableStringBuilder: void <init>(java.lang.CharSequence)>(r2);

        staticinvoke <android.telephony.PhoneNumberUtils: void formatNumber(android.text.Editable,int)>($r0, i0);

        $r1 = virtualinvoke $r0.<android.text.SpannableStringBuilder: java.lang.String toString()>();

        return $r1;
    }

    public static java.lang.String formatNumber(java.lang.String, java.lang.String)
    {
        java.lang.String r0, $r2, r10, r12, $r13;
        com.android.i18n.phonenumbers.PhoneNumberUtil r1;
        boolean $z0, $z1, $z2, $z3;
        int $i0, $i1, $i2, $i3;
        com.android.i18n.phonenumbers.Phonenumber$PhoneNumber$CountryCodeSource $r3, $r4, $r6, $r7;
        com.android.i18n.phonenumbers.PhoneNumberUtil$PhoneNumberFormat $r5, $r8;
        com.android.i18n.phonenumbers.NumberParseException $r9;
        com.android.i18n.phonenumbers.Phonenumber$PhoneNumber r11;

        r10 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.String;

        $z0 = virtualinvoke r10.<java.lang.String: boolean startsWith(java.lang.String)>("#");

        if $z0 != 0 goto label10;

        $z1 = virtualinvoke r10.<java.lang.String: boolean startsWith(java.lang.String)>("*");

        if $z1 == 0 goto label01;

        goto label10;

     label01:
        r1 = staticinvoke <com.android.i18n.phonenumbers.PhoneNumberUtil: com.android.i18n.phonenumbers.PhoneNumberUtil getInstance()>();

     label02:
        r11 = virtualinvoke r1.<com.android.i18n.phonenumbers.PhoneNumberUtil: com.android.i18n.phonenumbers.Phonenumber$PhoneNumber parseAndKeepRawInput(java.lang.CharSequence,java.lang.String)>(r10, r0);

        $r2 = "KR";

        $z2 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r0);

        if $z2 == 0 goto label04;

        $i2 = virtualinvoke r11.<com.android.i18n.phonenumbers.Phonenumber$PhoneNumber: int getCountryCode()>();

        $i3 = virtualinvoke r1.<com.android.i18n.phonenumbers.PhoneNumberUtil: int getCountryCodeForRegion(java.lang.String)>("KR");

        if $i2 != $i3 goto label04;

        $r6 = virtualinvoke r11.<com.android.i18n.phonenumbers.Phonenumber$PhoneNumber: com.android.i18n.phonenumbers.Phonenumber$PhoneNumber$CountryCodeSource getCountryCodeSource()>();

        $r7 = <com.android.i18n.phonenumbers.Phonenumber$PhoneNumber$CountryCodeSource: com.android.i18n.phonenumbers.Phonenumber$PhoneNumber$CountryCodeSource FROM_NUMBER_WITH_PLUS_SIGN>;

        if $r6 != $r7 goto label04;

        $r8 = <com.android.i18n.phonenumbers.PhoneNumberUtil$PhoneNumberFormat: com.android.i18n.phonenumbers.PhoneNumberUtil$PhoneNumberFormat NATIONAL>;

        r12 = virtualinvoke r1.<com.android.i18n.phonenumbers.PhoneNumberUtil: java.lang.String format(com.android.i18n.phonenumbers.Phonenumber$PhoneNumber,com.android.i18n.phonenumbers.PhoneNumberUtil$PhoneNumberFormat)>(r11, $r8);

     label03:
        goto label07;

     label04:
        $r13 = "JP";

        $z3 = virtualinvoke $r13.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r0);

        if $z3 == 0 goto label06;

        $i0 = virtualinvoke r11.<com.android.i18n.phonenumbers.Phonenumber$PhoneNumber: int getCountryCode()>();

        $i1 = virtualinvoke r1.<com.android.i18n.phonenumbers.PhoneNumberUtil: int getCountryCodeForRegion(java.lang.String)>("JP");

        if $i0 != $i1 goto label06;

        $r3 = virtualinvoke r11.<com.android.i18n.phonenumbers.Phonenumber$PhoneNumber: com.android.i18n.phonenumbers.Phonenumber$PhoneNumber$CountryCodeSource getCountryCodeSource()>();

        $r4 = <com.android.i18n.phonenumbers.Phonenumber$PhoneNumber$CountryCodeSource: com.android.i18n.phonenumbers.Phonenumber$PhoneNumber$CountryCodeSource FROM_NUMBER_WITH_PLUS_SIGN>;

        if $r3 != $r4 goto label06;

        $r5 = <com.android.i18n.phonenumbers.PhoneNumberUtil$PhoneNumberFormat: com.android.i18n.phonenumbers.PhoneNumberUtil$PhoneNumberFormat NATIONAL>;

        r12 = virtualinvoke r1.<com.android.i18n.phonenumbers.PhoneNumberUtil: java.lang.String format(com.android.i18n.phonenumbers.Phonenumber$PhoneNumber,com.android.i18n.phonenumbers.PhoneNumberUtil$PhoneNumberFormat)>(r11, $r5);

     label05:
        goto label07;

     label06:
        r12 = virtualinvoke r1.<com.android.i18n.phonenumbers.PhoneNumberUtil: java.lang.String formatInOriginalFormat(com.android.i18n.phonenumbers.Phonenumber$PhoneNumber,java.lang.String)>(r11, r0);

     label07:
        goto label09;

     label08:
        $r9 := @caughtexception;

        r12 = null;

     label09:
        return r12;

     label10:
        return r10;

        catch com.android.i18n.phonenumbers.NumberParseException from label02 to label03 with label08;
        catch com.android.i18n.phonenumbers.NumberParseException from label04 to label05 with label08;
        catch com.android.i18n.phonenumbers.NumberParseException from label06 to label07 with label08;
    }

    public static java.lang.String formatNumber(java.lang.String, java.lang.String, java.lang.String)
    {
        java.lang.String r0, $r2, $r3, r5, r6, r8, r9, r11;
        int i0, $i1, i4, i5;
        char $c2, $c3;
        com.android.i18n.phonenumbers.Phonenumber$PhoneNumber $r1;
        boolean $z0, $z1;
        com.android.i18n.phonenumbers.NumberParseException $r4;
        com.android.i18n.phonenumbers.PhoneNumberUtil r7;

        r5 := @parameter0: java.lang.String;

        r6 := @parameter1: java.lang.String;

        r0 := @parameter2: java.lang.String;

        i0 = virtualinvoke r5.<java.lang.String: int length()>();

        i4 = 0;

     label01:
        if i4 >= i0 goto label03;

        $c3 = virtualinvoke r5.<java.lang.String: char charAt(int)>(i4);

        $z1 = staticinvoke <android.telephony.PhoneNumberUtils: boolean isDialable(char)>($c3);

        if $z1 != 0 goto label02;

        return r5;

     label02:
        i4 = i4 + 1;

        goto label01;

     label03:
        r7 = staticinvoke <com.android.i18n.phonenumbers.PhoneNumberUtil: com.android.i18n.phonenumbers.PhoneNumberUtil getInstance()>();

        r8 = r0;

        if r6 == null goto label10;

        r8 = r0;

        $i1 = virtualinvoke r6.<java.lang.String: int length()>();

        if $i1 < 2 goto label10;

        r8 = r0;

        $c2 = virtualinvoke r6.<java.lang.String: char charAt(int)>(0);

        if $c2 != 43 goto label10;

     label04:
        $r1 = virtualinvoke r7.<com.android.i18n.phonenumbers.PhoneNumberUtil: com.android.i18n.phonenumbers.Phonenumber$PhoneNumber parse(java.lang.CharSequence,java.lang.String)>(r6, "ZZ");

        r9 = virtualinvoke r7.<com.android.i18n.phonenumbers.PhoneNumberUtil: java.lang.String getRegionCodeForNumber(com.android.i18n.phonenumbers.Phonenumber$PhoneNumber)>($r1);

     label05:
        r8 = r0;

     label06:
        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r9);

        if $z0 != 0 goto label08;

        $r2 = staticinvoke <android.telephony.PhoneNumberUtils: java.lang.String normalizeNumber(java.lang.String)>(r5);

        $r3 = virtualinvoke r6.<java.lang.String: java.lang.String substring(int)>(1);

        i5 = virtualinvoke $r2.<java.lang.String: int indexOf(java.lang.String)>($r3);

     label07:
        r8 = r0;

        if i5 > 0 goto label08;

        r8 = r9;

     label08:
        goto label10;

     label09:
        $r4 := @caughtexception;

        r8 = r0;

     label10:
        r11 = staticinvoke <android.telephony.PhoneNumberUtils: java.lang.String formatNumber(java.lang.String,java.lang.String)>(r5, r8);

        if r11 == null goto label11;

        r5 = r11;

        goto label11;

     label11:
        return r5;

        catch com.android.i18n.phonenumbers.NumberParseException from label04 to label05 with label09;
        catch com.android.i18n.phonenumbers.NumberParseException from label06 to label07 with label09;
    }

    public static void formatNumber(android.text.Editable, int)
    {
        android.text.Editable r0;
        int $i1, $i4, i7, i8;
        char $c2, $c3, $c5, $c6;

        r0 := @parameter0: android.text.Editable;

        i7 := @parameter1: int;

        i8 = i7;

        $i1 = interfaceinvoke r0.<android.text.Editable: int length()>();

        if $i1 <= 2 goto label3;

        i8 = i7;

        $c2 = interfaceinvoke r0.<android.text.Editable: char charAt(int)>(0);

        if $c2 != 43 goto label3;

        $c3 = interfaceinvoke r0.<android.text.Editable: char charAt(int)>(1);

        if $c3 != 49 goto label1;

        i8 = 1;

        goto label3;

     label1:
        $i4 = interfaceinvoke r0.<android.text.Editable: int length()>();

        if $i4 < 3 goto label2;

        $c5 = interfaceinvoke r0.<android.text.Editable: char charAt(int)>(1);

        if $c5 != 56 goto label2;

        $c6 = interfaceinvoke r0.<android.text.Editable: char charAt(int)>(2);

        if $c6 != 49 goto label2;

        i8 = 2;

        goto label3;

     label2:
        i8 = 0;

     label3:
        if i8 == 0 goto label6;

        if i8 == 1 goto label5;

        if i8 == 2 goto label4;

        return;

     label4:
        staticinvoke <android.telephony.PhoneNumberUtils: void formatJapaneseNumber(android.text.Editable)>(r0);

        return;

     label5:
        staticinvoke <android.telephony.PhoneNumberUtils: void formatNanpNumber(android.text.Editable)>(r0);

        return;

     label6:
        staticinvoke <android.telephony.PhoneNumberUtils: void removeDashes(android.text.Editable)>(r0);

        return;
    }

    private static java.lang.String formatNumberInternal(java.lang.String, java.lang.String, com.android.i18n.phonenumbers.PhoneNumberUtil$PhoneNumberFormat)
    {
        java.lang.String r0, r4, r6;
        com.android.i18n.phonenumbers.PhoneNumberUtil$PhoneNumberFormat r1;
        com.android.i18n.phonenumbers.PhoneNumberUtil r2;
        boolean $z0;
        com.android.i18n.phonenumbers.NumberParseException $r3;
        com.android.i18n.phonenumbers.Phonenumber$PhoneNumber r5;

        r4 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.String;

        r1 := @parameter2: com.android.i18n.phonenumbers.PhoneNumberUtil$PhoneNumberFormat;

        r2 = staticinvoke <com.android.i18n.phonenumbers.PhoneNumberUtil: com.android.i18n.phonenumbers.PhoneNumberUtil getInstance()>();

     label1:
        r5 = virtualinvoke r2.<com.android.i18n.phonenumbers.PhoneNumberUtil: com.android.i18n.phonenumbers.Phonenumber$PhoneNumber parse(java.lang.CharSequence,java.lang.String)>(r4, r0);

        $z0 = virtualinvoke r2.<com.android.i18n.phonenumbers.PhoneNumberUtil: boolean isValidNumber(com.android.i18n.phonenumbers.Phonenumber$PhoneNumber)>(r5);

        if $z0 == 0 goto label3;

        r6 = virtualinvoke r2.<com.android.i18n.phonenumbers.PhoneNumberUtil: java.lang.String format(com.android.i18n.phonenumbers.Phonenumber$PhoneNumber,com.android.i18n.phonenumbers.PhoneNumberUtil$PhoneNumberFormat)>(r5, r1);

     label2:
        return r6;

     label3:
        goto label5;

     label4:
        $r3 := @caughtexception;

     label5:
        return null;

        catch com.android.i18n.phonenumbers.NumberParseException from label1 to label2 with label4;
    }

    public static java.lang.String formatNumberToE164(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1, $r3;
        com.android.i18n.phonenumbers.PhoneNumberUtil$PhoneNumberFormat $r2;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $r2 = <com.android.i18n.phonenumbers.PhoneNumberUtil$PhoneNumberFormat: com.android.i18n.phonenumbers.PhoneNumberUtil$PhoneNumberFormat E164>;

        $r3 = staticinvoke <android.telephony.PhoneNumberUtils: java.lang.String formatNumberInternal(java.lang.String,java.lang.String,com.android.i18n.phonenumbers.PhoneNumberUtil$PhoneNumberFormat)>(r0, r1, $r2);

        return $r3;
    }

    public static java.lang.String formatNumberToRFC3966(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1, $r3;
        com.android.i18n.phonenumbers.PhoneNumberUtil$PhoneNumberFormat $r2;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $r2 = <com.android.i18n.phonenumbers.PhoneNumberUtil$PhoneNumberFormat: com.android.i18n.phonenumbers.PhoneNumberUtil$PhoneNumberFormat RFC3966>;

        $r3 = staticinvoke <android.telephony.PhoneNumberUtils: java.lang.String formatNumberInternal(java.lang.String,java.lang.String,com.android.i18n.phonenumbers.PhoneNumberUtil$PhoneNumberFormat)>(r0, r1, $r2);

        return $r3;
    }

    private static java.lang.String getCurrentIdp(boolean)
    {
        boolean z0;
        java.util.Optional $r0;
        java.lang.Object $r1;
        java.lang.String r2;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        r2 = "011";

        goto label2;

     label1:
        $r0 = staticinvoke <android.sysprop.TelephonyProperties: java.util.Optional operator_idp_string()>();

        $r1 = virtualinvoke $r0.<java.util.Optional: java.lang.Object orElse(java.lang.Object)>("+");

        r2 = (java.lang.String) $r1;

     label2:
        return r2;
    }

    private static int getDefaultVoiceSubId()
    {
        int $i0;

        $i0 = staticinvoke <android.telephony.SubscriptionManager: int getDefaultVoiceSubscriptionId()>();

        return $i0;
    }

    public static int getFormatTypeForLocale(java.util.Locale)
    {
        java.util.Locale r0;
        java.lang.String $r1;
        int $i0;

        r0 := @parameter0: java.util.Locale;

        $r1 = virtualinvoke r0.<java.util.Locale: java.lang.String getCountry()>();

        $i0 = staticinvoke <android.telephony.PhoneNumberUtils: int getFormatTypeFromCountryCode(java.lang.String)>($r1);

        return $i0;
    }

    private static int getFormatTypeFromCountryCode(java.lang.String)
    {
        java.lang.String r0, $r2, $r4;
        int i0, $i1, $i2, i3;
        java.lang.String[] $r1, $r3;

        r0 := @parameter0: java.lang.String;

        $r1 = <android.telephony.PhoneNumberUtils: java.lang.String[] NANP_COUNTRIES>;

        i0 = lengthof $r1;

        i3 = 0;

     label1:
        if i3 >= i0 goto label3;

        $r3 = <android.telephony.PhoneNumberUtils: java.lang.String[] NANP_COUNTRIES>;

        $r4 = $r3[i3];

        $i2 = virtualinvoke $r4.<java.lang.String: int compareToIgnoreCase(java.lang.String)>(r0);

        if $i2 != 0 goto label2;

        return 1;

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        $r2 = "jp";

        $i1 = virtualinvoke $r2.<java.lang.String: int compareToIgnoreCase(java.lang.String)>(r0);

        if $i1 != 0 goto label4;

        return 2;

     label4:
        return 0;
    }

    private static int getMinMatch()
    {
        int $i0, $i1, $i2;
        android.content.res.Resources $r0;

        $i0 = <android.telephony.PhoneNumberUtils: int sMinMatch>;

        if $i0 != 0 goto label1;

        $r0 = staticinvoke <android.content.res.Resources: android.content.res.Resources getSystem()>();

        $i2 = virtualinvoke $r0.<android.content.res.Resources: int getInteger(int)>(17694878);

        <android.telephony.PhoneNumberUtils: int sMinMatch> = $i2;

     label1:
        $i1 = <android.telephony.PhoneNumberUtils: int sMinMatch>;

        return $i1;
    }

    public static int getMinMatchForTest()
    {
        int $i0;

        $i0 = staticinvoke <android.telephony.PhoneNumberUtils: int getMinMatch()>();

        return $i0;
    }

    public static java.lang.String getNumberFromIntent(android.content.Intent, android.content.Context)
    {
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.String $r0, $r1, $r2, r8, r9, r10, r16, r17;
        int $i0;
        java.lang.Throwable $r3;
        java.lang.RuntimeException $r4;
        android.content.Intent r5;
        android.content.Context r6;
        android.net.Uri r7;
        android.database.Cursor r11, r12, r15;
        android.content.ContentResolver $r13;
        java.lang.String[] $r14;

        r5 := @parameter0: android.content.Intent;

        r6 := @parameter1: android.content.Context;

        r7 = virtualinvoke r5.<android.content.Intent: android.net.Uri getData()>();

        if r7 != null goto label01;

        return null;

     label01:
        r8 = virtualinvoke r7.<android.net.Uri: java.lang.String getScheme()>();

        if r8 != null goto label02;

        return null;

     label02:
        $z0 = virtualinvoke r8.<java.lang.String: boolean equals(java.lang.Object)>("tel");

        if $z0 != 0 goto label22;

        $z1 = virtualinvoke r8.<java.lang.String: boolean equals(java.lang.Object)>("sip");

        if $z1 == 0 goto label03;

        goto label22;

     label03:
        if r6 != null goto label04;

        return null;

     label04:
        virtualinvoke r5.<android.content.Intent: java.lang.String resolveType(android.content.Context)>(r6);

        r9 = virtualinvoke r7.<android.net.Uri: java.lang.String getAuthority()>();

        $r1 = "contacts";

        $z2 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r9);

        if $z2 == 0 goto label05;

        r10 = "number";

        goto label07;

     label05:
        $r2 = "com.android.contacts";

        $z3 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r9);

        if $z3 == 0 goto label06;

        r10 = "data1";

        goto label07;

     label06:
        r10 = null;

     label07:
        r11 = null;

        r12 = null;

     label08:
        $r13 = virtualinvoke r6.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r14 = newarray (java.lang.String)[1];

        $r14[0] = r10;

        r15 = virtualinvoke $r13.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>(r7, $r14, null, null, null);

     label09:
        r16 = null;

        if r15 == null goto label13;

        r16 = null;

        r12 = r15;

        r11 = r15;

     label10:
        $z4 = interfaceinvoke r15.<android.database.Cursor: boolean moveToFirst()>();

        if $z4 == 0 goto label13;

     label11:
        r12 = r15;

        r11 = r15;

     label12:
        $i0 = interfaceinvoke r15.<android.database.Cursor: int getColumnIndex(java.lang.String)>(r10);

        r16 = interfaceinvoke r15.<android.database.Cursor: java.lang.String getString(int)>($i0);

     label13:
        r17 = r16;

        if r15 == null goto label19;

        r11 = r15;

     label14:
        interfaceinvoke r11.<android.database.Cursor: void close()>();

        r17 = r16;

        goto label19;

     label15:
        $r3 := @caughtexception;

        goto label20;

     label16:
        $r4 := @caughtexception;

        r12 = r11;

     label17:
        staticinvoke <com.android.telephony.Rlog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("PhoneNumberUtils", "Error getting phone number.", $r4);

     label18:
        r17 = null;

        if r11 == null goto label19;

        r16 = null;

        goto label14;

     label19:
        return r17;

     label20:
        if r12 == null goto label21;

        interfaceinvoke r12.<android.database.Cursor: void close()>();

     label21:
        throw $r3;

     label22:
        $r0 = virtualinvoke r7.<android.net.Uri: java.lang.String getSchemeSpecificPart()>();

        return $r0;

        catch java.lang.RuntimeException from label08 to label09 with label16;
        catch java.lang.Throwable from label08 to label09 with label15;
        catch java.lang.RuntimeException from label10 to label11 with label16;
        catch java.lang.Throwable from label10 to label11 with label15;
        catch java.lang.RuntimeException from label12 to label13 with label16;
        catch java.lang.Throwable from label12 to label13 with label15;
        catch java.lang.Throwable from label17 to label18 with label15;
    }

    public static java.lang.String getStrippedReversed(java.lang.String)
    {
        int $i0;
        java.lang.String $r0, r1, r2;

        r1 := @parameter0: java.lang.String;

        r2 = staticinvoke <android.telephony.PhoneNumberUtils: java.lang.String extractNetworkPortionAlt(java.lang.String)>(r1);

        if r2 != null goto label1;

        return null;

     label1:
        $i0 = virtualinvoke r2.<java.lang.String: int length()>();

        $r0 = staticinvoke <android.telephony.PhoneNumberUtils: java.lang.String internalGetStrippedReversed(java.lang.String,int)>(r2, $i0);

        return $r0;
    }

    public static java.lang.String getUsernameFromUriNumber(java.lang.String)
    {
        java.lang.String r0, $r2, $r7;
        java.lang.StringBuilder $r3;
        int i1, i2, i3;

        r0 := @parameter0: java.lang.String;

        i1 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(64);

        i2 = i1;

        if i1 >= 0 goto label1;

        i2 = virtualinvoke r0.<java.lang.String: int indexOf(java.lang.String)>("%40");

     label1:
        i3 = i2;

        if i2 >= 0 goto label2;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getUsernameFromUriNumber: no delimiter found in SIP addr \'");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int w(java.lang.String,java.lang.String)>("PhoneNumberUtils", $r7);

        i3 = virtualinvoke r0.<java.lang.String: int length()>();

     label2:
        $r2 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, i3);

        return $r2;
    }

    private static int indexOfLastNetworkChar(java.lang.String)
    {
        java.lang.String r0;
        int i0, i1, $i2, $i3, $i4, $i5;

        r0 := @parameter0: java.lang.String;

        i0 = virtualinvoke r0.<java.lang.String: int length()>();

        $i2 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(44);

        $i3 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(59);

        i1 = staticinvoke <android.telephony.PhoneNumberUtils: int minPositive(int,int)>($i2, $i3);

        if i1 >= 0 goto label1;

        $i5 = i0 - 1;

        return $i5;

     label1:
        $i4 = i1 - 1;

        return $i4;
    }

    private static void internalCalledPartyBCDFragmentToString(java.lang.StringBuilder, byte[], int, int, int)
    {
        java.lang.StringBuilder r0;
        byte[] r1;
        int i0, i1, i2, $i4, $i11, $i12, i13;
        byte b3, $b5, $b6, $b7, $b8, $b9, $b10;
        char c14, c15;

        r0 := @parameter0: java.lang.StringBuilder;

        r1 := @parameter1: byte[];

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        i13 = i0;

     label1:
        $i4 = i1 + i0;

        if i13 >= $i4 goto label5;

        $b5 = r1[i13];

        $b6 = $b5 & 15;

        $b7 = (byte) $b6;

        c14 = staticinvoke <android.telephony.PhoneNumberUtils: char bcdToChar(byte,int)>($b7, i2);

        if c14 != 0 goto label2;

        return;

     label2:
        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c14);

        $b8 = r1[i13];

        $b9 = $b8 >> 4;

        $b10 = $b9 & 15;

        b3 = (byte) $b10;

        if b3 != 15 goto label3;

        $i12 = i13 + 1;

        $i11 = i1 + i0;

        if $i12 != $i11 goto label3;

        goto label5;

     label3:
        c15 = staticinvoke <android.telephony.PhoneNumberUtils: char bcdToChar(byte,int)>(b3, i2);

        if c15 != 0 goto label4;

        return;

     label4:
        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c15);

        i13 = i13 + 1;

        goto label1;

     label5:
        return;
    }

    private static java.lang.String internalGetStrippedReversed(java.lang.String, int)
    {
        java.lang.String r0, $r3;
        int i0, i1, $i2, i4;
        java.lang.StringBuilder $r2;
        char $c3;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        if r0 != null goto label1;

        return null;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(int)>(i0);

        i1 = virtualinvoke r0.<java.lang.String: int length()>();

        i4 = i1 - 1;

     label2:
        if i4 < 0 goto label3;

        $i2 = i1 - i4;

        if $i2 > i0 goto label3;

        $c3 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i4);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c3);

        i4 = i4 + -1;

        goto label2;

     label3:
        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }

    public static final boolean is12Key(char)
    {
        char c0;
        boolean z0;

        c0 := @parameter0: char;

        if c0 < 48 goto label1;

        if c0 <= 57 goto label3;

     label1:
        if c0 == 42 goto label3;

        if c0 != 35 goto label2;

        goto label3;

     label2:
        z0 = 0;

        goto label4;

     label3:
        z0 = 1;

     label4:
        return z0;
    }

    private static boolean isCountryCallingCode(int)
    {
        int i0, $i1;
        boolean[] $r0;
        boolean $z0, z1;

        i0 := @parameter0: int;

        if i0 <= 0 goto label1;

        $i1 = <android.telephony.PhoneNumberUtils: int CCC_LENGTH>;

        if i0 >= $i1 goto label1;

        $r0 = <android.telephony.PhoneNumberUtils: boolean[] COUNTRY_CALLING_CALL>;

        $z0 = $r0[i0];

        if $z0 == 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    public static final boolean isDialable(char)
    {
        char c0;
        boolean z0;

        c0 := @parameter0: char;

        if c0 < 48 goto label1;

        if c0 <= 57 goto label3;

     label1:
        if c0 == 42 goto label3;

        if c0 == 35 goto label3;

        if c0 == 43 goto label3;

        if c0 != 78 goto label2;

        goto label3;

     label2:
        z0 = 0;

        goto label4;

     label3:
        z0 = 1;

     label4:
        return z0;
    }

    private static boolean isDialable(java.lang.String)
    {
        java.lang.String r0;
        int i0, i2;
        char $c1;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        i2 = 0;

        i0 = virtualinvoke r0.<java.lang.String: int length()>();

     label1:
        if i2 >= i0 goto label3;

        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i2);

        $z0 = staticinvoke <android.telephony.PhoneNumberUtils: boolean isDialable(char)>($c1);

        if $z0 != 0 goto label2;

        return 0;

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        return 1;
    }

    public static boolean isEmergencyNumber(int, java.lang.String)
    {
        int i0;
        java.lang.String r0;
        boolean $z0;

        i0 := @parameter0: int;

        r0 := @parameter1: java.lang.String;

        $z0 = staticinvoke <android.telephony.PhoneNumberUtils: boolean isEmergencyNumberInternal(int,java.lang.String,boolean)>(i0, r0, 1);

        return $z0;
    }

    public static boolean isEmergencyNumber(int, java.lang.String, java.lang.String)
    {
        int i0;
        java.lang.String r0, r1;
        boolean $z0;

        i0 := @parameter0: int;

        r0 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

        $z0 = staticinvoke <android.telephony.PhoneNumberUtils: boolean isEmergencyNumberInternal(int,java.lang.String,java.lang.String,boolean)>(i0, r0, r1, 1);

        return $z0;
    }

    public static boolean isEmergencyNumber(java.lang.String)
    {
        java.lang.String r0;
        int $i0;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        $i0 = staticinvoke <android.telephony.PhoneNumberUtils: int getDefaultVoiceSubId()>();

        $z0 = staticinvoke <android.telephony.PhoneNumberUtils: boolean isEmergencyNumber(int,java.lang.String)>($i0, r0);

        return $z0;
    }

    public static boolean isEmergencyNumber(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1;
        int $i0;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $i0 = staticinvoke <android.telephony.PhoneNumberUtils: int getDefaultVoiceSubId()>();

        $z0 = staticinvoke <android.telephony.PhoneNumberUtils: boolean isEmergencyNumber(int,java.lang.String,java.lang.String)>($i0, r0, r1);

        return $z0;
    }

    private static boolean isEmergencyNumberInternal(int, java.lang.String, java.lang.String, boolean)
    {
        int i0;
        android.telephony.TelephonyManager $r0, $r1;
        boolean $z0, z1, z2;
        java.lang.RuntimeException $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r6, r7, r8;

        i0 := @parameter0: int;

        r7 := @parameter1: java.lang.String;

        r8 := @parameter2: java.lang.String;

        z1 := @parameter3: boolean;

        if z1 == 0 goto label2;

     label1:
        $r1 = staticinvoke <android.telephony.TelephonyManager: android.telephony.TelephonyManager getDefault()>();

        $z0 = virtualinvoke $r1.<android.telephony.TelephonyManager: boolean isEmergencyNumber(java.lang.String)>(r7);

        return $z0;

     label2:
        $r0 = staticinvoke <android.telephony.TelephonyManager: android.telephony.TelephonyManager getDefault()>();

        z2 = virtualinvoke $r0.<android.telephony.TelephonyManager: boolean isPotentialEmergencyNumber(java.lang.String)>(r7);

     label3:
        return z2;

     label4:
        $r2 := @caughtexception;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("isEmergencyNumberInternal: RuntimeException: ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("PhoneNumberUtils", $r6);

        return 0;

        catch java.lang.RuntimeException from label1 to label2 with label4;
        catch java.lang.RuntimeException from label2 to label3 with label4;
    }

    private static boolean isEmergencyNumberInternal(int, java.lang.String, boolean)
    {
        int i0;
        java.lang.String r0;
        boolean z0, $z1;

        i0 := @parameter0: int;

        r0 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        $z1 = staticinvoke <android.telephony.PhoneNumberUtils: boolean isEmergencyNumberInternal(int,java.lang.String,java.lang.String,boolean)>(i0, r0, null, z0);

        return $z1;
    }

    private static boolean isEmergencyNumberInternal(java.lang.String, java.lang.String, boolean)
    {
        java.lang.String r0, r1;
        boolean z0, $z1;
        int $i0;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        $i0 = staticinvoke <android.telephony.PhoneNumberUtils: int getDefaultVoiceSubId()>();

        $z1 = staticinvoke <android.telephony.PhoneNumberUtils: boolean isEmergencyNumberInternal(int,java.lang.String,java.lang.String,boolean)>($i0, r0, r1, z0);

        return $z1;
    }

    private static boolean isEmergencyNumberInternal(java.lang.String, boolean)
    {
        java.lang.String r0;
        boolean z0, $z1;
        int $i0;

        r0 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $i0 = staticinvoke <android.telephony.PhoneNumberUtils: int getDefaultVoiceSubId()>();

        $z1 = staticinvoke <android.telephony.PhoneNumberUtils: boolean isEmergencyNumberInternal(int,java.lang.String,boolean)>($i0, r0, z0);

        return $z1;
    }

    public static boolean isGlobalPhoneNumber(java.lang.String)
    {
        java.lang.String r0;
        boolean $z0, $z1;
        java.util.regex.Pattern $r1;
        java.util.regex.Matcher $r2;

        r0 := @parameter0: java.lang.String;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r0);

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $r1 = <android.telephony.PhoneNumberUtils: java.util.regex.Pattern GLOBAL_PHONE_NUMBER_PATTERN>;

        $r2 = virtualinvoke $r1.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r0);

        $z1 = virtualinvoke $r2.<java.util.regex.Matcher: boolean matches()>();

        return $z1;
    }

    public static boolean isISODigit(char)
    {
        char c0;
        boolean z0;

        c0 := @parameter0: char;

        if c0 < 48 goto label1;

        if c0 > 57 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public static boolean isInternationalNumber(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r4;
        boolean z0, $z1, $z2, z3;
        com.android.i18n.phonenumbers.PhoneNumberUtil r1;
        int i0, i1;
        com.android.i18n.phonenumbers.Phonenumber$PhoneNumber $r2;
        com.android.i18n.phonenumbers.NumberParseException $r3;

        r4 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.String;

        z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r4);

        z3 = 0;

        if z0 == 0 goto label1;

        return 0;

     label1:
        $z1 = virtualinvoke r4.<java.lang.String: boolean startsWith(java.lang.String)>("#");

        if $z1 != 0 goto label7;

        $z2 = virtualinvoke r4.<java.lang.String: boolean startsWith(java.lang.String)>("*");

        if $z2 == 0 goto label2;

        goto label7;

     label2:
        r1 = staticinvoke <com.android.i18n.phonenumbers.PhoneNumberUtil: com.android.i18n.phonenumbers.PhoneNumberUtil getInstance()>();

     label3:
        $r2 = virtualinvoke r1.<com.android.i18n.phonenumbers.PhoneNumberUtil: com.android.i18n.phonenumbers.Phonenumber$PhoneNumber parseAndKeepRawInput(java.lang.CharSequence,java.lang.String)>(r4, r0);

        i0 = virtualinvoke $r2.<com.android.i18n.phonenumbers.Phonenumber$PhoneNumber: int getCountryCode()>();

        i1 = virtualinvoke r1.<com.android.i18n.phonenumbers.PhoneNumberUtil: int getCountryCodeForRegion(java.lang.String)>(r0);

     label4:
        if i0 == i1 goto label5;

        z3 = 1;

     label5:
        return z3;

     label6:
        $r3 := @caughtexception;

        return 0;

     label7:
        return 0;

        catch com.android.i18n.phonenumbers.NumberParseException from label3 to label4 with label6;
    }

    public static boolean isLocalEmergencyNumber(android.content.Context, int, java.lang.String)
    {
        android.content.Context r0;
        int i0;
        java.lang.String r1;
        boolean $z0;

        r0 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        $z0 = staticinvoke <android.telephony.PhoneNumberUtils: boolean isLocalEmergencyNumberInternal(int,java.lang.String,android.content.Context,boolean)>(i0, r1, r0, 1);

        return $z0;
    }

    public static boolean isLocalEmergencyNumber(android.content.Context, java.lang.String)
    {
        android.content.Context r0;
        java.lang.String r1;
        int $i0;
        boolean $z0;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.String;

        $i0 = staticinvoke <android.telephony.PhoneNumberUtils: int getDefaultVoiceSubId()>();

        $z0 = staticinvoke <android.telephony.PhoneNumberUtils: boolean isLocalEmergencyNumber(android.content.Context,int,java.lang.String)>(r0, $i0, r1);

        return $z0;
    }

    private static boolean isLocalEmergencyNumberInternal(int, java.lang.String, android.content.Context, boolean)
    {
        int i0;
        java.lang.String r0;
        android.content.Context r1;
        boolean z0, $z1;

        i0 := @parameter0: int;

        r0 := @parameter1: java.lang.String;

        r1 := @parameter2: android.content.Context;

        z0 := @parameter3: boolean;

        $z1 = staticinvoke <android.telephony.PhoneNumberUtils: boolean isEmergencyNumberInternal(int,java.lang.String,java.lang.String,boolean)>(i0, r0, null, z0);

        return $z1;
    }

    private static boolean isLocalEmergencyNumberInternal(java.lang.String, android.content.Context, boolean)
    {
        java.lang.String r0;
        android.content.Context r1;
        boolean z0, $z1;
        int $i0;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: android.content.Context;

        z0 := @parameter2: boolean;

        $i0 = staticinvoke <android.telephony.PhoneNumberUtils: int getDefaultVoiceSubId()>();

        $z1 = staticinvoke <android.telephony.PhoneNumberUtils: boolean isLocalEmergencyNumberInternal(int,java.lang.String,android.content.Context,boolean)>($i0, r0, r1, z0);

        return $z1;
    }

    public static boolean isNanp(java.lang.String)
    {
        java.lang.String r0;
        int $i1, i5;
        char $c2, $c3, $c4;
        boolean $z0, $z1, $z2, z4;

        r0 := @parameter0: java.lang.String;

        if r0 == null goto label4;

        z4 = 0;

        $i1 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i1 != 10 goto label5;

        z4 = 0;

        $c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        $z0 = staticinvoke <android.telephony.PhoneNumberUtils: boolean isTwoToNine(char)>($c2);

        if $z0 == 0 goto label5;

        z4 = 0;

        $c3 = virtualinvoke r0.<java.lang.String: char charAt(int)>(3);

        $z1 = staticinvoke <android.telephony.PhoneNumberUtils: boolean isTwoToNine(char)>($c3);

        if $z1 == 0 goto label5;

        i5 = 1;

     label1:
        z4 = 1;

        if i5 >= 10 goto label3;

        $c4 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i5);

        $z2 = staticinvoke <android.telephony.PhoneNumberUtils: boolean isISODigit(char)>($c4);

        if $z2 != 0 goto label2;

        z4 = 0;

        goto label3;

     label2:
        i5 = i5 + 1;

        goto label1;

     label3:
        goto label5;

     label4:
        staticinvoke <com.android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("isNanp: null dialStr passed in", r0);

        z4 = 0;

     label5:
        return z4;
    }

    public static final boolean isNonSeparator(char)
    {
        char c0;
        boolean z0;

        c0 := @parameter0: char;

        if c0 < 48 goto label1;

        if c0 <= 57 goto label3;

     label1:
        if c0 == 42 goto label3;

        if c0 == 35 goto label3;

        if c0 == 43 goto label3;

        if c0 == 78 goto label3;

        if c0 == 59 goto label3;

        if c0 != 44 goto label2;

        goto label3;

     label2:
        z0 = 0;

        goto label4;

     label3:
        z0 = 1;

     label4:
        return z0;
    }

    private static boolean isNonSeparator(java.lang.String)
    {
        java.lang.String r0;
        int i0, i2;
        char $c1;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        i2 = 0;

        i0 = virtualinvoke r0.<java.lang.String: int length()>();

     label1:
        if i2 >= i0 goto label3;

        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i2);

        $z0 = staticinvoke <android.telephony.PhoneNumberUtils: boolean isNonSeparator(char)>($c1);

        if $z0 != 0 goto label2;

        return 0;

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        return 1;
    }

    private static boolean isOneNanp(java.lang.String)
    {
        java.lang.String r0, r1;
        char $c1;
        boolean $z1, z2;

        r0 := @parameter0: java.lang.String;

        z2 = 0;

        if r0 == null goto label2;

        r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>(1);

        z2 = 0;

        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        if $c1 != 49 goto label1;

        z2 = 0;

        $z1 = staticinvoke <android.telephony.PhoneNumberUtils: boolean isNanp(java.lang.String)>(r1);

        if $z1 == 0 goto label1;

        z2 = 1;

     label1:
        goto label3;

     label2:
        staticinvoke <com.android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("isOneNanp: null dialStr passed in", r0);

     label3:
        return z2;
    }

    private static boolean isPause(char)
    {
        char c0;
        boolean z0;

        c0 := @parameter0: char;

        if c0 == 112 goto label2;

        if c0 != 80 goto label1;

        goto label2;

     label1:
        z0 = 0;

        goto label3;

     label2:
        z0 = 1;

     label3:
        return z0;
    }

    public static boolean isPotentialEmergencyNumber(int, java.lang.String)
    {
        int i0;
        java.lang.String r0;
        boolean $z0;

        i0 := @parameter0: int;

        r0 := @parameter1: java.lang.String;

        $z0 = staticinvoke <android.telephony.PhoneNumberUtils: boolean isEmergencyNumberInternal(int,java.lang.String,boolean)>(i0, r0, 0);

        return $z0;
    }

    public static boolean isPotentialEmergencyNumber(int, java.lang.String, java.lang.String)
    {
        int i0;
        java.lang.String r0, r1;
        boolean $z0;

        i0 := @parameter0: int;

        r0 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

        $z0 = staticinvoke <android.telephony.PhoneNumberUtils: boolean isEmergencyNumberInternal(int,java.lang.String,java.lang.String,boolean)>(i0, r0, r1, 0);

        return $z0;
    }

    public static boolean isPotentialEmergencyNumber(java.lang.String)
    {
        java.lang.String r0;
        int $i0;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        $i0 = staticinvoke <android.telephony.PhoneNumberUtils: int getDefaultVoiceSubId()>();

        $z0 = staticinvoke <android.telephony.PhoneNumberUtils: boolean isPotentialEmergencyNumber(int,java.lang.String)>($i0, r0);

        return $z0;
    }

    public static boolean isPotentialEmergencyNumber(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1;
        int $i0;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $i0 = staticinvoke <android.telephony.PhoneNumberUtils: int getDefaultVoiceSubId()>();

        $z0 = staticinvoke <android.telephony.PhoneNumberUtils: boolean isPotentialEmergencyNumber(int,java.lang.String,java.lang.String)>($i0, r0, r1);

        return $z0;
    }

    public static boolean isPotentialLocalEmergencyNumber(android.content.Context, int, java.lang.String)
    {
        android.content.Context r0;
        int i0;
        java.lang.String r1;
        boolean $z0;

        r0 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        $z0 = staticinvoke <android.telephony.PhoneNumberUtils: boolean isLocalEmergencyNumberInternal(int,java.lang.String,android.content.Context,boolean)>(i0, r1, r0, 0);

        return $z0;
    }

    public static boolean isPotentialLocalEmergencyNumber(android.content.Context, java.lang.String)
    {
        android.content.Context r0;
        java.lang.String r1;
        int $i0;
        boolean $z0;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.String;

        $i0 = staticinvoke <android.telephony.PhoneNumberUtils: int getDefaultVoiceSubId()>();

        $z0 = staticinvoke <android.telephony.PhoneNumberUtils: boolean isPotentialLocalEmergencyNumber(android.content.Context,int,java.lang.String)>(r0, $i0, r1);

        return $z0;
    }

    public static final boolean isReallyDialable(char)
    {
        char c0;
        boolean z0;

        c0 := @parameter0: char;

        if c0 < 48 goto label1;

        if c0 <= 57 goto label3;

     label1:
        if c0 == 42 goto label3;

        if c0 == 35 goto label3;

        if c0 != 43 goto label2;

        goto label3;

     label2:
        z0 = 0;

        goto label4;

     label3:
        z0 = 1;

     label4:
        return z0;
    }

    private static boolean isSeparator(char)
    {
        char c0;
        boolean $z0, z1;

        c0 := @parameter0: char;

        $z0 = staticinvoke <android.telephony.PhoneNumberUtils: boolean isDialable(char)>(c0);

        if $z0 != 0 goto label3;

        if 97 > c0 goto label1;

        if c0 <= 122 goto label3;

     label1:
        if 65 > c0 goto label2;

        if c0 <= 90 goto label3;

     label2:
        z1 = 1;

        goto label4;

     label3:
        z1 = 0;

     label4:
        return z1;
    }

    public static final boolean isStartsPostDial(char)
    {
        char c0;
        boolean z0;

        c0 := @parameter0: char;

        if c0 == 44 goto label2;

        if c0 != 59 goto label1;

        goto label2;

     label1:
        z0 = 0;

        goto label3;

     label2:
        z0 = 1;

     label3:
        return z0;
    }

    private static boolean isToneWait(char)
    {
        char c0;
        boolean z0;

        c0 := @parameter0: char;

        if c0 == 119 goto label2;

        if c0 != 87 goto label1;

        goto label2;

     label1:
        z0 = 0;

        goto label3;

     label2:
        z0 = 1;

     label3:
        return z0;
    }

    private static boolean isTwoToNine(char)
    {
        char c0;

        c0 := @parameter0: char;

        if c0 < 50 goto label1;

        if c0 > 57 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static boolean isUriNumber(java.lang.String)
    {
        java.lang.String r0;
        boolean $z0, $z1, z2;

        r0 := @parameter0: java.lang.String;

        if r0 == null goto label2;

        $z0 = virtualinvoke r0.<java.lang.String: boolean contains(java.lang.CharSequence)>("@");

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r0.<java.lang.String: boolean contains(java.lang.CharSequence)>("%40");

        if $z1 == 0 goto label2;

     label1:
        z2 = 1;

        goto label3;

     label2:
        z2 = 0;

     label3:
        return z2;
    }

    public static boolean isVoiceMailNumber(int, java.lang.String)
    {
        int i0;
        java.lang.String r0;
        boolean $z0;

        i0 := @parameter0: int;

        r0 := @parameter1: java.lang.String;

        $z0 = staticinvoke <android.telephony.PhoneNumberUtils: boolean isVoiceMailNumber(android.content.Context,int,java.lang.String)>(null, i0, r0);

        return $z0;
    }

    public static boolean isVoiceMailNumber(android.content.Context, int, java.lang.String)
    {
        int i0;
        java.lang.String r0, r4, r6, r7;
        boolean $z2, $z3, $z4, $z5, z6, z7;
        java.lang.Object $r1;
        java.lang.Throwable $r2;
        android.content.Context r3;
        android.telephony.TelephonyManager r5;
        android.telephony.CarrierConfigManager r8;
        android.os.PersistableBundle r9;

        r3 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        r4 := @parameter2: java.lang.String;

        if r3 != null goto label03;

     label01:
        r5 = staticinvoke <android.telephony.TelephonyManager: android.telephony.TelephonyManager getDefault()>();

     label02:
        goto label04;

     label03:
        r5 = staticinvoke <android.telephony.TelephonyManager: android.telephony.TelephonyManager 'from'(android.content.Context)>(r3);

     label04:
        r0 = virtualinvoke r5.<android.telephony.TelephonyManager: java.lang.String getVoiceMailNumber(int)>(i0);

        r6 = virtualinvoke r5.<android.telephony.TelephonyManager: java.lang.String getLine1Number(int)>(i0);

     label05:
        r7 = staticinvoke <android.telephony.PhoneNumberUtils: java.lang.String extractNetworkPortionAlt(java.lang.String)>(r4);

        $z2 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r7);

        if $z2 == 0 goto label06;

        return 0;

     label06:
        z6 = 0;

        if r3 == null goto label07;

        $r1 = virtualinvoke r3.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("carrier_config");

        r8 = (android.telephony.CarrierConfigManager) $r1;

        z6 = 0;

        if r8 == null goto label07;

        r9 = virtualinvoke r8.<android.telephony.CarrierConfigManager: android.os.PersistableBundle getConfigForSubId(int)>(i0);

        z6 = 0;

        if r9 == null goto label07;

        z6 = virtualinvoke r9.<android.os.PersistableBundle: boolean getBoolean(java.lang.String)>("mdn_is_additional_voicemail_number_bool");

     label07:
        if z6 == 0 goto label10;

        $z4 = staticinvoke <android.telephony.PhoneNumberUtils: boolean compare(java.lang.String,java.lang.String)>(r7, r0);

        if $z4 != 0 goto label08;

        z7 = 0;

        $z5 = staticinvoke <android.telephony.PhoneNumberUtils: boolean compare(java.lang.String,java.lang.String)>(r7, r6);

        if $z5 == 0 goto label09;

     label08:
        z7 = 1;

     label09:
        return z7;

     label10:
        $z3 = staticinvoke <android.telephony.PhoneNumberUtils: boolean compare(java.lang.String,java.lang.String)>(r7, r0);

        return $z3;

     label11:
        $r2 := @caughtexception;

        return 0;

        catch java.lang.SecurityException from label01 to label02 with label11;
        catch java.lang.SecurityException from label03 to label04 with label11;
        catch java.lang.SecurityException from label04 to label05 with label11;
    }

    public static boolean isVoiceMailNumber(java.lang.String)
    {
        java.lang.String r0;
        int $i0;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        $i0 = staticinvoke <android.telephony.SubscriptionManager: int getDefaultSubscriptionId()>();

        $z0 = staticinvoke <android.telephony.PhoneNumberUtils: boolean isVoiceMailNumber(int,java.lang.String)>($i0, r0);

        return $z0;
    }

    public static boolean isWellFormedSmsAddress(java.lang.String)
    {
        boolean $z0, $z1, $z2, z3;
        java.lang.String r0, r1;

        r0 := @parameter0: java.lang.String;

        r1 = staticinvoke <android.telephony.PhoneNumberUtils: java.lang.String extractNetworkPortion(java.lang.String)>(r0);

        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("+");

        if $z0 != 0 goto label1;

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z1 != 0 goto label1;

        $z2 = staticinvoke <android.telephony.PhoneNumberUtils: boolean isDialable(java.lang.String)>(r1);

        if $z2 == 0 goto label1;

        z3 = 1;

        goto label2;

     label1:
        z3 = 0;

     label2:
        return z3;
    }

    private static void log(java.lang.String)
    {
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        staticinvoke <com.android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("PhoneNumberUtils", r0);

        return;
    }

    private static boolean matchIntlPrefix(java.lang.String, int)
    {
        java.lang.String r0;
        int i0, i3;
        char c1;
        boolean $z0, $z1, $z2, $z3, z4;
        byte b2;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        b2 = 0;

        i3 = 0;

     label01:
        z4 = 0;

        if i3 >= i0 goto label11;

        c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i3);

        if b2 == 0 goto label07;

        if b2 == 2 goto label04;

        if b2 == 4 goto label02;

        $z3 = staticinvoke <android.telephony.PhoneNumberUtils: boolean isNonSeparator(char)>(c1);

        if $z3 == 0 goto label10;

        return 0;

     label02:
        if c1 != 49 goto label03;

        b2 = 5;

        goto label10;

     label03:
        $z2 = staticinvoke <android.telephony.PhoneNumberUtils: boolean isNonSeparator(char)>(c1);

        if $z2 == 0 goto label10;

        return 0;

     label04:
        if c1 != 48 goto label05;

        b2 = 3;

        goto label10;

     label05:
        if c1 != 49 goto label06;

        b2 = 4;

        goto label10;

     label06:
        $z1 = staticinvoke <android.telephony.PhoneNumberUtils: boolean isNonSeparator(char)>(c1);

        if $z1 == 0 goto label10;

        return 0;

     label07:
        if c1 != 43 goto label08;

        b2 = 1;

        goto label10;

     label08:
        if c1 != 48 goto label09;

        b2 = 2;

        goto label10;

     label09:
        $z0 = staticinvoke <android.telephony.PhoneNumberUtils: boolean isNonSeparator(char)>(c1);

        if $z0 == 0 goto label10;

        return 0;

     label10:
        i3 = i3 + 1;

        goto label01;

     label11:
        if b2 == 1 goto label12;

        if b2 == 3 goto label12;

        if b2 != 5 goto label13;

     label12:
        z4 = 1;

     label13:
        return z4;
    }

    private static boolean matchIntlPrefixAndCC(java.lang.String, int)
    {
        java.lang.String r0;
        int i0, i2, i3;
        char c1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, z8;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i2 = 0;

        i3 = 0;

     label01:
        z8 = 0;

        if i3 >= i0 goto label16;

        c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i3);

        tableswitch(i2)
        {
            case 0: goto label12;
            case 1: goto label10;
            case 2: goto label07;
            case 3: goto label10;
            case 4: goto label05;
            case 5: goto label10;
            case 6: goto label03;
            case 7: goto label03;
            default: goto label02;
        };

     label02:
        $z7 = staticinvoke <android.telephony.PhoneNumberUtils: boolean isNonSeparator(char)>(c1);

        if $z7 == 0 goto label15;

        return 0;

     label03:
        $z0 = staticinvoke <android.telephony.PhoneNumberUtils: boolean isISODigit(char)>(c1);

        if $z0 == 0 goto label04;

        i2 = i2 + 1;

        goto label15;

     label04:
        $z1 = staticinvoke <android.telephony.PhoneNumberUtils: boolean isNonSeparator(char)>(c1);

        if $z1 == 0 goto label15;

        return 0;

     label05:
        if c1 != 49 goto label06;

        i2 = 5;

        goto label15;

     label06:
        $z2 = staticinvoke <android.telephony.PhoneNumberUtils: boolean isNonSeparator(char)>(c1);

        if $z2 == 0 goto label15;

        return 0;

     label07:
        if c1 != 48 goto label08;

        i2 = 3;

        goto label15;

     label08:
        if c1 != 49 goto label09;

        i2 = 4;

        goto label15;

     label09:
        $z3 = staticinvoke <android.telephony.PhoneNumberUtils: boolean isNonSeparator(char)>(c1);

        if $z3 == 0 goto label15;

        return 0;

     label10:
        $z4 = staticinvoke <android.telephony.PhoneNumberUtils: boolean isISODigit(char)>(c1);

        if $z4 == 0 goto label11;

        i2 = 6;

        goto label15;

     label11:
        $z5 = staticinvoke <android.telephony.PhoneNumberUtils: boolean isNonSeparator(char)>(c1);

        if $z5 == 0 goto label15;

        return 0;

     label12:
        if c1 != 43 goto label13;

        i2 = 1;

        goto label15;

     label13:
        if c1 != 48 goto label14;

        i2 = 2;

        goto label15;

     label14:
        $z6 = staticinvoke <android.telephony.PhoneNumberUtils: boolean isNonSeparator(char)>(c1);

        if $z6 == 0 goto label15;

        return 0;

     label15:
        i3 = i3 + 1;

        goto label01;

     label16:
        if i2 == 6 goto label17;

        if i2 == 7 goto label17;

        if i2 != 8 goto label18;

     label17:
        z8 = 1;

     label18:
        return z8;
    }

    private static boolean matchTrunkPrefix(java.lang.String, int)
    {
        java.lang.String r0;
        int i0, i2;
        char c1;
        boolean $z0, z1;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        z1 = 0;

        i2 = 0;

     label1:
        if i2 >= i0 goto label4;

        c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i2);

        if c1 != 48 goto label2;

        if z1 != 0 goto label2;

        z1 = 1;

        goto label3;

     label2:
        $z0 = staticinvoke <android.telephony.PhoneNumberUtils: boolean isNonSeparator(char)>(c1);

        if $z0 == 0 goto label3;

        return 0;

     label3:
        i2 = i2 + 1;

        goto label1;

     label4:
        return z1;
    }

    private static int minPositive(int, int)
    {
        int i0, i1;

        i1 := @parameter0: int;

        i0 := @parameter1: int;

        if i1 < 0 goto label3;

        if i0 < 0 goto label3;

        if i1 >= i0 goto label1;

        goto label2;

     label1:
        i1 = i0;

     label2:
        return i1;

     label3:
        if i1 < 0 goto label4;

        return i1;

     label4:
        if i0 < 0 goto label5;

        return i0;

     label5:
        return -1;
    }

    public static byte[] networkPortionToCalledPartyBCD(java.lang.String)
    {
        java.lang.String r0, $r1;
        byte[] $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <android.telephony.PhoneNumberUtils: java.lang.String extractNetworkPortion(java.lang.String)>(r0);

        $r2 = staticinvoke <android.telephony.PhoneNumberUtils: byte[] numberToCalledPartyBCDHelper(java.lang.String,boolean,int)>($r1, 0, 1);

        return $r2;
    }

    public static byte[] networkPortionToCalledPartyBCDWithLength(java.lang.String)
    {
        java.lang.String r0, $r1;
        byte[] $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <android.telephony.PhoneNumberUtils: java.lang.String extractNetworkPortion(java.lang.String)>(r0);

        $r2 = staticinvoke <android.telephony.PhoneNumberUtils: byte[] numberToCalledPartyBCDHelper(java.lang.String,boolean,int)>($r1, 1, 1);

        return $r2;
    }

    public static java.lang.String normalizeNumber(java.lang.String)
    {
        java.lang.String r0, $r3, $r4, $r5;
        int i0, i2, $i3, i4;
        char c1;
        boolean $z0;
        java.lang.StringBuilder $r2;

        r0 := @parameter0: java.lang.String;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r0);

        if $z0 == 0 goto label1;

        return "";

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        i0 = virtualinvoke r0.<java.lang.String: int length()>();

        i4 = 0;

     label2:
        if i4 >= i0 goto label8;

        c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i4);

        i2 = staticinvoke <java.lang.Character: int digit(char,int)>(c1, 10);

        if i2 == -1 goto label3;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        goto label7;

     label3:
        $i3 = virtualinvoke $r2.<java.lang.StringBuilder: int length()>();

        if $i3 != 0 goto label4;

        if c1 != 43 goto label4;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c1);

        goto label7;

     label4:
        if c1 < 97 goto label5;

        if c1 <= 122 goto label6;

     label5:
        if c1 < 65 goto label7;

        if c1 > 90 goto label7;

     label6:
        $r4 = staticinvoke <android.telephony.PhoneNumberUtils: java.lang.String convertKeypadLettersToDigits(java.lang.String)>(r0);

        $r5 = staticinvoke <android.telephony.PhoneNumberUtils: java.lang.String normalizeNumber(java.lang.String)>($r4);

        return $r5;

     label7:
        i4 = i4 + 1;

        goto label2;

     label8:
        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }

    public static byte[] numberToCalledPartyBCD(java.lang.String)
    {
        java.lang.String r0;
        byte[] $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <android.telephony.PhoneNumberUtils: byte[] numberToCalledPartyBCD(java.lang.String,int)>(r0, 1);

        return $r1;
    }

    public static byte[] numberToCalledPartyBCD(java.lang.String, int)
    {
        java.lang.String r0;
        int i0;
        byte[] $r1;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r1 = staticinvoke <android.telephony.PhoneNumberUtils: byte[] numberToCalledPartyBCDHelper(java.lang.String,boolean,int)>(r0, 0, i0);

        return $r1;
    }

    private static byte[] numberToCalledPartyBCDHelper(java.lang.String, boolean, int)
    {
        java.lang.String r0;
        boolean z0, z1;
        int i0, i1, i3, $i5, $i6, $i7, $i10, $i13, $i18, $i19, $i20, $i21, $i22, i27, i29, i30, i31, i32, i33, i35, i36;
        byte[] r1;
        char c2;
        byte b4, $b8, $b9, $b11, $b12, $b14, $b16, $b17, $b23, $b24, $b25, $b26, b34;
        short $s15, s37;

        r0 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        i27 := @parameter2: int;

        i0 = virtualinvoke r0.<java.lang.String: int length()>();

        $i5 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(43);

        if $i5 == -1 goto label01;

        z1 = 1;

        goto label02;

     label01:
        z1 = 0;

     label02:
        i29 = i0;

        if z1 == 0 goto label03;

        i29 = i0 - 1;

     label03:
        if i29 != 0 goto label04;

        return null;

     label04:
        $i6 = i29 + 1;

        i30 = $i6 / 2;

        i31 = 1;

        if z0 == 0 goto label05;

        i31 = 1 + 1;

     label05:
        i1 = i30 + i31;

        r1 = newarray (byte)[i1];

        i32 = 0;

        i33 = 0;

     label06:
        if i33 >= i0 goto label11;

        c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i33);

        if c2 != 43 goto label07;

        goto label10;

     label07:
        $i18 = i32 & 1;

        if $i18 != 1 goto label08;

        b34 = 4;

        goto label09;

     label08:
        b34 = 0;

     label09:
        $i19 = i32 >> 1;

        i3 = $i19 + i31;

        b4 = r1[i3];

        $i20 = staticinvoke <android.telephony.PhoneNumberUtils: int charToBCD(char,int)>(c2, i27);

        $i21 = $i20 & 15;

        $i22 = $i21 << b34;

        $b23 = (byte) $i22;

        $b24 = $b23 | b4;

        $b25 = (byte) $b24;

        $b26 = (byte) $b25;

        r1[i3] = $b26;

        i32 = i32 + 1;

     label10:
        i33 = i33 + 1;

        goto label06;

     label11:
        $i7 = i32 & 1;

        if $i7 != 1 goto label12;

        $i13 = i32 >> 1;

        i35 = $i13 + i31;

        $b14 = r1[i35];

        $s15 = $b14 | 240;

        $b16 = (byte) $s15;

        $b17 = (byte) $b16;

        r1[i35] = $b17;

     label12:
        i36 = 0;

        if z0 == 0 goto label13;

        $i10 = i1 - 1;

        $b11 = (byte) $i10;

        $b12 = (byte) $b11;

        r1[0] = $b12;

        i36 = 0 + 1;

     label13:
        if z1 == 0 goto label14;

        s37 = 145;

        goto label15;

     label14:
        s37 = 129;

     label15:
        $b8 = (byte) s37;

        $b9 = (byte) $b8;

        r1[i36] = $b9;

        return r1;
    }

    private static java.lang.String processPlusCode(java.lang.String, boolean)
    {
        java.lang.String r0, $r2, r3;
        boolean z0, $z1;
        char $c0;
        int $i1;

        r0 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        r3 = r0;

        if r0 == null goto label2;

        r3 = r0;

        $c0 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        if $c0 != 43 goto label2;

        r3 = r0;

        $i1 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i1 <= 1 goto label2;

        r3 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>(1);

        if z0 == 0 goto label1;

        $z1 = staticinvoke <android.telephony.PhoneNumberUtils: boolean isOneNanp(java.lang.String)>(r3);

        if $z1 == 0 goto label1;

        goto label2;

     label1:
        $r2 = staticinvoke <android.telephony.PhoneNumberUtils: java.lang.String getCurrentIdp(boolean)>(z0);

        r3 = virtualinvoke r0.<java.lang.String: java.lang.String replaceFirst(java.lang.String,java.lang.String)>("[+]", $r2);

     label2:
        return r3;
    }

    private static void removeDashes(android.text.Editable)
    {
        android.text.Editable r0;
        char $c0;
        int $i1, i2, $i3;

        r0 := @parameter0: android.text.Editable;

        i2 = 0;

     label1:
        $i3 = interfaceinvoke r0.<android.text.Editable: int length()>();

        if i2 >= $i3 goto label3;

        $c0 = interfaceinvoke r0.<android.text.Editable: char charAt(int)>(i2);

        if $c0 != 45 goto label2;

        $i1 = i2 + 1;

        interfaceinvoke r0.<android.text.Editable: android.text.Editable delete(int,int)>(i2, $i1);

        goto label1;

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        return;
    }

    public static java.lang.String replaceUnicodeDigits(java.lang.String)
    {
        int i0, i2, $i3, i4;
        char c1;
        java.lang.StringBuilder $r1;
        java.lang.String $r2, r5;
        char[] r6;

        r5 := @parameter0: java.lang.String;

        $r1 = new java.lang.StringBuilder;

        $i3 = virtualinvoke r5.<java.lang.String: int length()>();

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(int)>($i3);

        r6 = virtualinvoke r5.<java.lang.String: char[] toCharArray()>();

        i0 = lengthof r6;

        i4 = 0;

     label1:
        if i4 >= i0 goto label4;

        c1 = r6[i4];

        i2 = staticinvoke <java.lang.Character: int digit(char,int)>(c1, 10);

        if i2 == -1 goto label2;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        goto label3;

     label2:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c1);

     label3:
        i4 = i4 + 1;

        goto label1;

     label4:
        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    public static void setMinMatchForTest(int)
    {
        int i0;

        i0 := @parameter0: int;

        <android.telephony.PhoneNumberUtils: int sMinMatch> = i0;

        return;
    }

    private static java.lang.String splitAtNonNumerics(java.lang.CharSequence)
    {
        java.lang.CharSequence r0;
        int i0, $i1, i4;
        java.lang.StringBuilder $r2;
        java.lang.String $r3, $r4, $r5;
        char $c2, $c3;
        boolean $z0;
        java.io.Serializable r7;

        r0 := @parameter0: java.lang.CharSequence;

        $r2 = new java.lang.StringBuilder;

        $i1 = interfaceinvoke r0.<java.lang.CharSequence: int length()>();

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(int)>($i1);

        i4 = 0;

     label1:
        i0 = interfaceinvoke r0.<java.lang.CharSequence: int length()>();

        r7 = " ";

        if i4 >= i0 goto label3;

        $c2 = interfaceinvoke r0.<java.lang.CharSequence: char charAt(int)>(i4);

        $z0 = staticinvoke <android.telephony.PhoneNumberUtils: boolean is12Key(char)>($c2);

        if $z0 == 0 goto label2;

        $c3 = interfaceinvoke r0.<java.lang.CharSequence: char charAt(int)>(i4);

        r7 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c3);

        goto label2;

     label2:
        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r7);

        i4 = i4 + 1;

        goto label1;

     label3:
        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r4 = virtualinvoke $r3.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>(" +", " ");

        $r5 = virtualinvoke $r4.<java.lang.String: java.lang.String trim()>();

        return $r5;
    }

    public static java.lang.String stringFromStringAndTOA(java.lang.String, int)
    {
        java.lang.String r0, $r5;
        int i0, $i1;
        char $c2;
        java.lang.StringBuilder $r2;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        if r0 != null goto label1;

        return null;

     label1:
        if i0 != 145 goto label2;

        $i1 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i1 <= 0 goto label2;

        $c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        if $c2 == 43 goto label2;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("+");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;

     label2:
        return r0;
    }

    public static java.lang.String stripSeparators(java.lang.String)
    {
        java.lang.String r0, $r3;
        int i0, i2, i3;
        char c1;
        java.lang.StringBuilder $r2;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        return null;

     label1:
        i0 = virtualinvoke r0.<java.lang.String: int length()>();

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(int)>(i0);

        i3 = 0;

     label2:
        if i3 >= i0 goto label5;

        c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i3);

        i2 = staticinvoke <java.lang.Character: int digit(char,int)>(c1, 10);

        if i2 == -1 goto label3;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        goto label4;

     label3:
        $z0 = staticinvoke <android.telephony.PhoneNumberUtils: boolean isNonSeparator(char)>(c1);

        if $z0 == 0 goto label4;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c1);

     label4:
        i3 = i3 + 1;

        goto label2;

     label5:
        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }

    public static java.lang.String toCallerIDMinMatch(java.lang.String)
    {
        java.lang.String r0, $r1, $r2;
        int $i0;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <android.telephony.PhoneNumberUtils: java.lang.String extractNetworkPortionAlt(java.lang.String)>(r0);

        $i0 = staticinvoke <android.telephony.PhoneNumberUtils: int getMinMatch()>();

        $r2 = staticinvoke <android.telephony.PhoneNumberUtils: java.lang.String internalGetStrippedReversed(java.lang.String,int)>($r1, $i0);

        return $r2;
    }

    public static int toaFromString(java.lang.String)
    {
        java.lang.String r0;
        int $i0;
        char $c1;

        r0 := @parameter0: java.lang.String;

        if r0 == null goto label1;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 <= 0 goto label1;

        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        if $c1 != 43 goto label1;

        return 145;

     label1:
        return 129;
    }

    private static android.telephony.PhoneNumberUtils$CountryCallingCodeAndNewIndex tryGetCountryCallingCodeAndNewIndex(java.lang.String, boolean)
    {
        java.lang.String r0;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6;
        int i0, i2, $i3, $i4, $i5, i6, i7, i8;
        char c1;
        android.telephony.PhoneNumberUtils$CountryCallingCodeAndNewIndex $r1, $r2;

        r0 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        i6 = 0;

        i7 = 0;

        i0 = virtualinvoke r0.<java.lang.String: int length()>();

        i8 = 0;

     label01:
        if i8 >= i0 goto label25;

        c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i8);

        tableswitch(i6)
        {
            case 0: goto label19;
            case 1: goto label12;
            case 2: goto label09;
            case 3: goto label12;
            case 4: goto label07;
            case 5: goto label12;
            case 6: goto label12;
            case 7: goto label12;
            case 8: goto label05;
            case 9: goto label03;
            default: goto label02;
        };

     label02:
        return null;

     label03:
        if c1 != 54 goto label04;

        $r1 = new android.telephony.PhoneNumberUtils$CountryCallingCodeAndNewIndex;

        $i3 = i8 + 1;

        specialinvoke $r1.<android.telephony.PhoneNumberUtils$CountryCallingCodeAndNewIndex: void <init>(int,int)>(66, $i3);

        return $r1;

     label04:
        return null;

     label05:
        if c1 != 54 goto label06;

        i6 = 9;

        goto label24;

     label06:
        $z1 = staticinvoke <android.telephony.PhoneNumberUtils: boolean isDialable(char)>(c1);

        if $z1 == 0 goto label24;

        return null;

     label07:
        if c1 != 49 goto label08;

        i6 = 5;

        goto label24;

     label08:
        $z2 = staticinvoke <android.telephony.PhoneNumberUtils: boolean isDialable(char)>(c1);

        if $z2 == 0 goto label24;

        return null;

     label09:
        if c1 != 48 goto label10;

        i6 = 3;

        goto label24;

     label10:
        if c1 != 49 goto label11;

        i6 = 4;

        goto label24;

     label11:
        $z3 = staticinvoke <android.telephony.PhoneNumberUtils: boolean isDialable(char)>(c1);

        if $z3 == 0 goto label24;

        return null;

     label12:
        i2 = staticinvoke <android.telephony.PhoneNumberUtils: int tryGetISODigit(char)>(c1);

        if i2 <= 0 goto label17;

        $i4 = i7 * 10;

        i7 = $i4 + i2;

        if i7 >= 100 goto label16;

        $z5 = staticinvoke <android.telephony.PhoneNumberUtils: boolean isCountryCallingCode(int)>(i7);

        if $z5 == 0 goto label13;

        goto label16;

     label13:
        if i6 == 1 goto label15;

        if i6 == 3 goto label15;

        if i6 != 5 goto label14;

        goto label15;

     label14:
        i6 = i6 + 1;

        goto label18;

     label15:
        i6 = 6;

        goto label18;

     label16:
        $r2 = new android.telephony.PhoneNumberUtils$CountryCallingCodeAndNewIndex;

        $i5 = i8 + 1;

        specialinvoke $r2.<android.telephony.PhoneNumberUtils$CountryCallingCodeAndNewIndex: void <init>(int,int)>(i7, $i5);

        return $r2;

     label17:
        $z4 = staticinvoke <android.telephony.PhoneNumberUtils: boolean isDialable(char)>(c1);

        if $z4 == 0 goto label18;

        return null;

     label18:
        goto label24;

     label19:
        if c1 != 43 goto label20;

        i6 = 1;

        goto label24;

     label20:
        if c1 != 48 goto label21;

        i6 = 2;

        goto label24;

     label21:
        if c1 != 49 goto label23;

        if z0 == 0 goto label22;

        i6 = 8;

        goto label24;

     label22:
        return null;

     label23:
        $z6 = staticinvoke <android.telephony.PhoneNumberUtils: boolean isDialable(char)>(c1);

        if $z6 == 0 goto label24;

        return null;

     label24:
        i8 = i8 + 1;

        goto label01;

     label25:
        return null;
    }

    private static int tryGetISODigit(char)
    {
        char c0;
        int $i1;

        c0 := @parameter0: char;

        if 48 > c0 goto label1;

        if c0 > 57 goto label1;

        $i1 = c0 - 48;

        return $i1;

     label1:
        return -1;
    }

    private static int tryGetTrunkPrefixOmittedIndex(java.lang.String, int)
    {
        java.lang.String r0;
        int i0, $i2, $i3, i4;
        char c1;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        i4 := @parameter1: int;

        i0 = virtualinvoke r0.<java.lang.String: int length()>();

     label1:
        if i4 >= i0 goto label4;

        c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i4);

        $i2 = staticinvoke <android.telephony.PhoneNumberUtils: int tryGetISODigit(char)>(c1);

        if $i2 < 0 goto label2;

        $i3 = i4 + 1;

        return $i3;

     label2:
        $z0 = staticinvoke <android.telephony.PhoneNumberUtils: boolean isDialable(char)>(c1);

        if $z0 == 0 goto label3;

        return -1;

     label3:
        i4 = i4 + 1;

        goto label1;

     label4:
        return -1;
    }

    public static java.lang.CharSequence ttsSpanAsPhoneNumber(java.lang.CharSequence)
    {
        java.lang.CharSequence r0, $r1;

        r0 := @parameter0: java.lang.CharSequence;

        $r1 = staticinvoke <android.telephony.PhoneNumberUtils: java.lang.CharSequence createTtsSpannable(java.lang.CharSequence)>(r0);

        return $r1;
    }

    public static void ttsSpanAsPhoneNumber(android.text.Spannable, int, int)
    {
        android.text.Spannable r0;
        int i0, i1;

        r0 := @parameter0: android.text.Spannable;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        staticinvoke <android.telephony.PhoneNumberUtils: void addTtsSpan(android.text.Spannable,int,int)>(r0, i0, i1);

        return;
    }
}
