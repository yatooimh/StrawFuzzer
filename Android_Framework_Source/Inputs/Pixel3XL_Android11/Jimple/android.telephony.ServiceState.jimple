public class android.telephony.ServiceState extends java.lang.Object implements android.os.Parcelable
{
    public static final android.os.Parcelable$Creator CREATOR;
    static final boolean DBG;
    public static final int DUPLEX_MODE_FDD;
    public static final int DUPLEX_MODE_TDD;
    public static final int DUPLEX_MODE_UNKNOWN;
    private static final java.lang.String EXTRA_SERVICE_STATE;
    public static final int FREQUENCY_RANGE_HIGH;
    public static final int FREQUENCY_RANGE_LOW;
    public static final int FREQUENCY_RANGE_MID;
    public static final int FREQUENCY_RANGE_MMWAVE;
    private static final java.util.List FREQUENCY_RANGE_ORDER;
    public static final int FREQUENCY_RANGE_UNKNOWN;
    static final java.lang.String LOG_TAG;
    private static final int NEXT_RIL_RADIO_TECHNOLOGY;
    public static final int RIL_RADIO_CDMA_TECHNOLOGY_BITMASK;
    public static final int RIL_RADIO_TECHNOLOGY_1xRTT;
    public static final int RIL_RADIO_TECHNOLOGY_EDGE;
    public static final int RIL_RADIO_TECHNOLOGY_EHRPD;
    public static final int RIL_RADIO_TECHNOLOGY_EVDO_0;
    public static final int RIL_RADIO_TECHNOLOGY_EVDO_A;
    public static final int RIL_RADIO_TECHNOLOGY_EVDO_B;
    public static final int RIL_RADIO_TECHNOLOGY_GPRS;
    public static final int RIL_RADIO_TECHNOLOGY_GSM;
    public static final int RIL_RADIO_TECHNOLOGY_HSDPA;
    public static final int RIL_RADIO_TECHNOLOGY_HSPA;
    public static final int RIL_RADIO_TECHNOLOGY_HSPAP;
    public static final int RIL_RADIO_TECHNOLOGY_HSUPA;
    public static final int RIL_RADIO_TECHNOLOGY_IS95A;
    public static final int RIL_RADIO_TECHNOLOGY_IS95B;
    public static final int RIL_RADIO_TECHNOLOGY_IWLAN;
    public static final int RIL_RADIO_TECHNOLOGY_LTE;
    public static final int RIL_RADIO_TECHNOLOGY_LTE_CA;
    public static final int RIL_RADIO_TECHNOLOGY_NR;
    public static final int RIL_RADIO_TECHNOLOGY_TD_SCDMA;
    public static final int RIL_RADIO_TECHNOLOGY_UMTS;
    public static final int RIL_RADIO_TECHNOLOGY_UNKNOWN;
    public static final int ROAMING_TYPE_DOMESTIC;
    public static final int ROAMING_TYPE_INTERNATIONAL;
    public static final int ROAMING_TYPE_NOT_ROAMING;
    public static final int ROAMING_TYPE_UNKNOWN;
    public static final int STATE_EMERGENCY_ONLY;
    public static final int STATE_IN_SERVICE;
    public static final int STATE_OUT_OF_SERVICE;
    public static final int STATE_POWER_OFF;
    public static final int UNKNOWN_ID;
    static final boolean VDBG;
    private int mCdmaDefaultRoamingIndicator;
    private int mCdmaEriIconIndex;
    private int mCdmaEriIconMode;
    private int mCdmaRoamingIndicator;
    private int[] mCellBandwidths;
    private int mChannelNumber;
    private boolean mCssIndicator;
    private int mDataRegState;
    private boolean mIsDataRoamingFromRegistration;
    private boolean mIsEmergencyOnly;
    private boolean mIsIwlanPreferred;
    private boolean mIsManualNetworkSelection;
    private int mLteEarfcnRsrpBoost;
    private int mNetworkId;
    private final java.util.List mNetworkRegistrationInfos;
    private int mNrFrequencyRange;
    private java.lang.String mOperatorAlphaLong;
    private java.lang.String mOperatorAlphaLongRaw;
    private java.lang.String mOperatorAlphaShort;
    private java.lang.String mOperatorAlphaShortRaw;
    private java.lang.String mOperatorNumeric;
    private int mSystemId;
    private int mVoiceRegState;

    static void <clinit>()
    {
        java.lang.Integer[] $r0;
        java.lang.Integer $r1, $r2, $r3, $r4, $r5;
        java.util.List $r6;
        android.telephony.ServiceState$1 $r7;

        <android.telephony.ServiceState: boolean VDBG> = 0;

        <android.telephony.ServiceState: int UNKNOWN_ID> = -1;

        <android.telephony.ServiceState: int STATE_POWER_OFF> = 3;

        <android.telephony.ServiceState: int STATE_OUT_OF_SERVICE> = 1;

        <android.telephony.ServiceState: int STATE_IN_SERVICE> = 0;

        <android.telephony.ServiceState: int STATE_EMERGENCY_ONLY> = 2;

        <android.telephony.ServiceState: int ROAMING_TYPE_UNKNOWN> = 1;

        <android.telephony.ServiceState: int ROAMING_TYPE_NOT_ROAMING> = 0;

        <android.telephony.ServiceState: int ROAMING_TYPE_INTERNATIONAL> = 3;

        <android.telephony.ServiceState: int ROAMING_TYPE_DOMESTIC> = 2;

        <android.telephony.ServiceState: int RIL_RADIO_TECHNOLOGY_UNKNOWN> = 0;

        <android.telephony.ServiceState: int RIL_RADIO_TECHNOLOGY_UMTS> = 3;

        <android.telephony.ServiceState: int RIL_RADIO_TECHNOLOGY_TD_SCDMA> = 17;

        <android.telephony.ServiceState: int RIL_RADIO_TECHNOLOGY_NR> = 20;

        <android.telephony.ServiceState: int RIL_RADIO_TECHNOLOGY_LTE_CA> = 19;

        <android.telephony.ServiceState: int RIL_RADIO_TECHNOLOGY_LTE> = 14;

        <android.telephony.ServiceState: int RIL_RADIO_TECHNOLOGY_IWLAN> = 18;

        <android.telephony.ServiceState: int RIL_RADIO_TECHNOLOGY_IS95B> = 5;

        <android.telephony.ServiceState: int RIL_RADIO_TECHNOLOGY_IS95A> = 4;

        <android.telephony.ServiceState: int RIL_RADIO_TECHNOLOGY_HSUPA> = 10;

        <android.telephony.ServiceState: int RIL_RADIO_TECHNOLOGY_HSPAP> = 15;

        <android.telephony.ServiceState: int RIL_RADIO_TECHNOLOGY_HSPA> = 11;

        <android.telephony.ServiceState: int RIL_RADIO_TECHNOLOGY_HSDPA> = 9;

        <android.telephony.ServiceState: int RIL_RADIO_TECHNOLOGY_GSM> = 16;

        <android.telephony.ServiceState: int RIL_RADIO_TECHNOLOGY_GPRS> = 1;

        <android.telephony.ServiceState: int RIL_RADIO_TECHNOLOGY_EVDO_B> = 12;

        <android.telephony.ServiceState: int RIL_RADIO_TECHNOLOGY_EVDO_A> = 8;

        <android.telephony.ServiceState: int RIL_RADIO_TECHNOLOGY_EVDO_0> = 7;

        <android.telephony.ServiceState: int RIL_RADIO_TECHNOLOGY_EHRPD> = 13;

        <android.telephony.ServiceState: int RIL_RADIO_TECHNOLOGY_EDGE> = 2;

        <android.telephony.ServiceState: int RIL_RADIO_TECHNOLOGY_1xRTT> = 6;

        <android.telephony.ServiceState: int RIL_RADIO_CDMA_TECHNOLOGY_BITMASK> = 6392;

        <android.telephony.ServiceState: int NEXT_RIL_RADIO_TECHNOLOGY> = 21;

        <android.telephony.ServiceState: java.lang.String LOG_TAG> = "PHONE";

        <android.telephony.ServiceState: int FREQUENCY_RANGE_UNKNOWN> = 0;

        <android.telephony.ServiceState: int FREQUENCY_RANGE_MMWAVE> = 4;

        <android.telephony.ServiceState: int FREQUENCY_RANGE_MID> = 2;

        <android.telephony.ServiceState: int FREQUENCY_RANGE_LOW> = 1;

        <android.telephony.ServiceState: int FREQUENCY_RANGE_HIGH> = 3;

        <android.telephony.ServiceState: java.lang.String EXTRA_SERVICE_STATE> = "android.intent.extra.SERVICE_STATE";

        <android.telephony.ServiceState: int DUPLEX_MODE_UNKNOWN> = 0;

        <android.telephony.ServiceState: int DUPLEX_MODE_TDD> = 2;

        <android.telephony.ServiceState: int DUPLEX_MODE_FDD> = 1;

        <android.telephony.ServiceState: boolean DBG> = 0;

        $r0 = newarray (java.lang.Integer)[5];

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r0[0] = $r1;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $r0[1] = $r2;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        $r0[2] = $r3;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);

        $r0[3] = $r4;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4);

        $r0[4] = $r5;

        $r6 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r0);

        <android.telephony.ServiceState: java.util.List FREQUENCY_RANGE_ORDER> = $r6;

        $r7 = new android.telephony.ServiceState$1;

        specialinvoke $r7.<android.telephony.ServiceState$1: void <init>()>();

        <android.telephony.ServiceState: android.os.Parcelable$Creator CREATOR> = $r7;

        return;
    }

    public void <init>()
    {
        android.telephony.ServiceState r0;
        int[] $r1;
        java.util.ArrayList $r2;

        r0 := @this: android.telephony.ServiceState;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.telephony.ServiceState: int mVoiceRegState> = 1;

        r0.<android.telephony.ServiceState: int mDataRegState> = 1;

        $r1 = newarray (int)[0];

        r0.<android.telephony.ServiceState: int[] mCellBandwidths> = $r1;

        r0.<android.telephony.ServiceState: int mLteEarfcnRsrpBoost> = 0;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<android.telephony.ServiceState: java.util.List mNetworkRegistrationInfos> = $r2;

        return;
    }

    public void <init>(android.os.Parcel)
    {
        android.telephony.ServiceState r0;
        java.util.List r1, $r8;
        int[] $r2, $r10;
        java.util.ArrayList $r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13;
        java.lang.String $r4, $r5, $r6, $r11, $r12;
        java.lang.Class $r7;
        java.lang.ClassLoader $r9;
        boolean $z1, $z2, z3, z4, z5;
        java.lang.Throwable $r13;
        android.os.Parcel r14;

        r0 := @this: android.telephony.ServiceState;

        r14 := @parameter0: android.os.Parcel;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.telephony.ServiceState: int mVoiceRegState> = 1;

        r0.<android.telephony.ServiceState: int mDataRegState> = 1;

        $r2 = newarray (int)[0];

        r0.<android.telephony.ServiceState: int[] mCellBandwidths> = $r2;

        r0.<android.telephony.ServiceState: int mLteEarfcnRsrpBoost> = 0;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<android.telephony.ServiceState: java.util.List mNetworkRegistrationInfos> = $r3;

        $i0 = virtualinvoke r14.<android.os.Parcel: int readInt()>();

        r0.<android.telephony.ServiceState: int mVoiceRegState> = $i0;

        $i1 = virtualinvoke r14.<android.os.Parcel: int readInt()>();

        r0.<android.telephony.ServiceState: int mDataRegState> = $i1;

        $r4 = virtualinvoke r14.<android.os.Parcel: java.lang.String readString()>();

        r0.<android.telephony.ServiceState: java.lang.String mOperatorAlphaLong> = $r4;

        $r5 = virtualinvoke r14.<android.os.Parcel: java.lang.String readString()>();

        r0.<android.telephony.ServiceState: java.lang.String mOperatorAlphaShort> = $r5;

        $r6 = virtualinvoke r14.<android.os.Parcel: java.lang.String readString()>();

        r0.<android.telephony.ServiceState: java.lang.String mOperatorNumeric> = $r6;

        $i2 = virtualinvoke r14.<android.os.Parcel: int readInt()>();

        if $i2 == 0 goto label01;

        z3 = 1;

        goto label02;

     label01:
        z3 = 0;

     label02:
        r0.<android.telephony.ServiceState: boolean mIsManualNetworkSelection> = z3;

        $i3 = virtualinvoke r14.<android.os.Parcel: int readInt()>();

        if $i3 == 0 goto label03;

        z4 = 1;

        goto label04;

     label03:
        z4 = 0;

     label04:
        r0.<android.telephony.ServiceState: boolean mCssIndicator> = z4;

        $i4 = virtualinvoke r14.<android.os.Parcel: int readInt()>();

        r0.<android.telephony.ServiceState: int mNetworkId> = $i4;

        $i5 = virtualinvoke r14.<android.os.Parcel: int readInt()>();

        r0.<android.telephony.ServiceState: int mSystemId> = $i5;

        $i6 = virtualinvoke r14.<android.os.Parcel: int readInt()>();

        r0.<android.telephony.ServiceState: int mCdmaRoamingIndicator> = $i6;

        $i7 = virtualinvoke r14.<android.os.Parcel: int readInt()>();

        r0.<android.telephony.ServiceState: int mCdmaDefaultRoamingIndicator> = $i7;

        $i8 = virtualinvoke r14.<android.os.Parcel: int readInt()>();

        r0.<android.telephony.ServiceState: int mCdmaEriIconIndex> = $i8;

        $i9 = virtualinvoke r14.<android.os.Parcel: int readInt()>();

        r0.<android.telephony.ServiceState: int mCdmaEriIconMode> = $i9;

        $i10 = virtualinvoke r14.<android.os.Parcel: int readInt()>();

        if $i10 == 0 goto label05;

        z5 = 1;

        goto label06;

     label05:
        z5 = 0;

     label06:
        r0.<android.telephony.ServiceState: boolean mIsEmergencyOnly> = z5;

        $i11 = virtualinvoke r14.<android.os.Parcel: int readInt()>();

        r0.<android.telephony.ServiceState: int mLteEarfcnRsrpBoost> = $i11;

        r1 = r0.<android.telephony.ServiceState: java.util.List mNetworkRegistrationInfos>;

        entermonitor r1;

     label07:
        $r8 = r0.<android.telephony.ServiceState: java.util.List mNetworkRegistrationInfos>;

        $r7 = class "Landroid/telephony/NetworkRegistrationInfo;";

        $r9 = virtualinvoke $r7.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        virtualinvoke r14.<android.os.Parcel: void readList(java.util.List,java.lang.ClassLoader)>($r8, $r9);

        exitmonitor r1;

     label08:
        $i12 = virtualinvoke r14.<android.os.Parcel: int readInt()>();

        r0.<android.telephony.ServiceState: int mChannelNumber> = $i12;

        $r10 = virtualinvoke r14.<android.os.Parcel: int[] createIntArray()>();

        r0.<android.telephony.ServiceState: int[] mCellBandwidths> = $r10;

        $i13 = virtualinvoke r14.<android.os.Parcel: int readInt()>();

        r0.<android.telephony.ServiceState: int mNrFrequencyRange> = $i13;

        $r11 = virtualinvoke r14.<android.os.Parcel: java.lang.String readString()>();

        r0.<android.telephony.ServiceState: java.lang.String mOperatorAlphaLongRaw> = $r11;

        $r12 = virtualinvoke r14.<android.os.Parcel: java.lang.String readString()>();

        r0.<android.telephony.ServiceState: java.lang.String mOperatorAlphaShortRaw> = $r12;

        $z1 = virtualinvoke r14.<android.os.Parcel: boolean readBoolean()>();

        r0.<android.telephony.ServiceState: boolean mIsDataRoamingFromRegistration> = $z1;

        $z2 = virtualinvoke r14.<android.os.Parcel: boolean readBoolean()>();

        r0.<android.telephony.ServiceState: boolean mIsIwlanPreferred> = $z2;

        return;

     label09:
        $r13 := @caughtexception;

     label10:
        exitmonitor r1;

     label11:
        throw $r13;

        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    public void <init>(android.telephony.ServiceState)
    {
        android.telephony.ServiceState r0, r1;
        int[] $r2;
        java.util.ArrayList $r3;

        r0 := @this: android.telephony.ServiceState;

        r1 := @parameter0: android.telephony.ServiceState;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.telephony.ServiceState: int mVoiceRegState> = 1;

        r0.<android.telephony.ServiceState: int mDataRegState> = 1;

        $r2 = newarray (int)[0];

        r0.<android.telephony.ServiceState: int[] mCellBandwidths> = $r2;

        r0.<android.telephony.ServiceState: int mLteEarfcnRsrpBoost> = 0;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<android.telephony.ServiceState: java.util.List mNetworkRegistrationInfos> = $r3;

        virtualinvoke r0.<android.telephony.ServiceState: void copyFrom(android.telephony.ServiceState)>(r1);

        return;
    }

    public static boolean bearerBitmapHasCdma(int)
    {
        int i0, $i1, $i2;
        boolean z0;

        i0 := @parameter0: int;

        $i1 = staticinvoke <android.telephony.ServiceState: int convertNetworkTypeBitmaskToBearerBitmask(int)>(i0);

        $i2 = $i1 & 6392;

        if $i2 == 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public static boolean bitmaskHasTech(int, int)
    {
        int i0, i1, $i2, $i3, $i4;
        boolean z0;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        z0 = 1;

        if i0 != 0 goto label1;

        return 1;

     label1:
        if i1 < 1 goto label4;

        $i2 = i1 - 1;

        $i3 = 1 << $i2;

        $i4 = $i3 & i0;

        if $i4 == 0 goto label2;

        goto label3;

     label2:
        z0 = 0;

     label3:
        return z0;

     label4:
        return 0;
    }

    public static int convertBearerBitmaskToNetworkTypeBitmask(int)
    {
        int i0, $i1, $i2, i3, i4, i5;
        boolean $z0;

        i0 := @parameter0: int;

        if i0 != 0 goto label1;

        return 0;

     label1:
        i3 = 0;

        i4 = 0;

     label2:
        if i4 >= 21 goto label4;

        i5 = i3;

        $z0 = staticinvoke <android.telephony.ServiceState: boolean bitmaskHasTech(int,int)>(i0, i4);

        if $z0 == 0 goto label3;

        $i1 = staticinvoke <android.telephony.ServiceState: int rilRadioTechnologyToNetworkType(int)>(i4);

        $i2 = staticinvoke <android.telephony.ServiceState: int getBitmaskForTech(int)>($i1);

        i5 = i3 | $i2;

     label3:
        i4 = i4 + 1;

        i3 = i5;

        goto label2;

     label4:
        return i3;
    }

    public static int convertNetworkTypeBitmaskToBearerBitmask(int)
    {
        int i0, $i1, $i2, i3, i4, i5;
        boolean $z0;

        i0 := @parameter0: int;

        if i0 != 0 goto label1;

        return 0;

     label1:
        i3 = 0;

        i4 = 0;

     label2:
        if i4 >= 21 goto label4;

        i5 = i3;

        $i1 = staticinvoke <android.telephony.ServiceState: int rilRadioTechnologyToNetworkType(int)>(i4);

        $z0 = staticinvoke <android.telephony.ServiceState: boolean bitmaskHasTech(int,int)>(i0, $i1);

        if $z0 == 0 goto label3;

        $i2 = staticinvoke <android.telephony.ServiceState: int getBitmaskForTech(int)>(i4);

        i5 = i3 | $i2;

     label3:
        i4 = i4 + 1;

        i3 = i5;

        goto label2;

     label4:
        return i3;
    }

    private static boolean equalsHandlesNulls(java.lang.Object, java.lang.Object)
    {
        java.lang.Object r0, r1;
        boolean z0;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        if r0 != null goto label2;

        if r1 != null goto label1;

        z0 = 1;

        goto label3;

     label1:
        z0 = 0;

        goto label3;

     label2:
        z0 = virtualinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>(r1);

     label3:
        return z0;
    }

    public static java.lang.String frequencyRangeToString(int)
    {
        int i0;
        java.lang.String $r0;

        i0 := @parameter0: int;

        if i0 == 0 goto label5;

        if i0 == 1 goto label4;

        if i0 == 2 goto label3;

        if i0 == 3 goto label2;

        if i0 == 4 goto label1;

        $r0 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0);

        return $r0;

     label1:
        return "MMWAVE";

     label2:
        return "HIGH";

     label3:
        return "MID";

     label4:
        return "LOW";

     label5:
        return "UNKNOWN";
    }

    public static final int getBetterNRFrequencyRange(int, int)
    {
        int i0, $i1, $i2, i3;
        java.util.List $r0, $r2;
        java.lang.Integer $r1, $r3;

        i3 := @parameter0: int;

        i0 := @parameter1: int;

        $r0 = <android.telephony.ServiceState: java.util.List FREQUENCY_RANGE_ORDER>;

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i3);

        $i1 = interfaceinvoke $r0.<java.util.List: int indexOf(java.lang.Object)>($r1);

        $r2 = <android.telephony.ServiceState: java.util.List FREQUENCY_RANGE_ORDER>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $i2 = interfaceinvoke $r2.<java.util.List: int indexOf(java.lang.Object)>($r3);

        if $i1 <= $i2 goto label1;

        goto label2;

     label1:
        i3 = i0;

     label2:
        return i3;
    }

    public static int getBitmaskForTech(int)
    {
        int i0, $i1, $i2;

        i0 := @parameter0: int;

        if i0 < 1 goto label1;

        $i1 = i0 - 1;

        $i2 = 1 << $i1;

        return $i2;

     label1:
        return 0;
    }

    public static int getBitmaskFromString(java.lang.String)
    {
        java.lang.String[] r0;
        int i0, i1, $i2, i3, i4;
        java.lang.String $r1, r3, r4;
        java.lang.Throwable $r2;

        r3 := @parameter0: java.lang.String;

        r0 = virtualinvoke r3.<java.lang.String: java.lang.String[] split(java.lang.String)>("\\|");

        i3 = 0;

        i0 = lengthof r0;

        i4 = 0;

     label1:
        if i4 >= i0 goto label6;

        r4 = r0[i4];

     label2:
        $r1 = virtualinvoke r4.<java.lang.String: java.lang.String trim()>();

        i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r1);

     label3:
        if i1 != 0 goto label4;

        return 0;

     label4:
        $i2 = staticinvoke <android.telephony.ServiceState: int getBitmaskForTech(int)>(i1);

        i3 = i3 | $i2;

        i4 = i4 + 1;

        goto label1;

     label5:
        $r2 := @caughtexception;

        return 0;

     label6:
        return i3;

        catch java.lang.NumberFormatException from label2 to label3 with label5;
    }

    public static final java.lang.String getRoamingLogString(int)
    {
        int i0;

        i0 := @parameter0: int;

        if i0 == 0 goto label4;

        if i0 == 1 goto label3;

        if i0 == 2 goto label2;

        if i0 == 3 goto label1;

        return "UNKNOWN";

     label1:
        return "International Roaming";

     label2:
        return "Domestic Roaming";

     label3:
        return "roaming";

     label4:
        return "home";
    }

    private void init()
    {
        android.telephony.ServiceState r0;
        java.util.List r1, $r3;
        int[] $r2;
        android.telephony.NetworkRegistrationInfo$Builder $r4, $r5, $r6, $r8, $r9, $r10, r13, r14;
        android.telephony.NetworkRegistrationInfo $r7, $r11;
        java.lang.Throwable $r12;

        r0 := @this: android.telephony.ServiceState;

        r0.<android.telephony.ServiceState: int mVoiceRegState> = 1;

        r0.<android.telephony.ServiceState: int mDataRegState> = 1;

        r0.<android.telephony.ServiceState: int mChannelNumber> = -1;

        $r2 = newarray (int)[0];

        r0.<android.telephony.ServiceState: int[] mCellBandwidths> = $r2;

        r0.<android.telephony.ServiceState: java.lang.String mOperatorAlphaLong> = null;

        r0.<android.telephony.ServiceState: java.lang.String mOperatorAlphaShort> = null;

        r0.<android.telephony.ServiceState: java.lang.String mOperatorNumeric> = null;

        r0.<android.telephony.ServiceState: boolean mIsManualNetworkSelection> = 0;

        r0.<android.telephony.ServiceState: boolean mCssIndicator> = 0;

        r0.<android.telephony.ServiceState: int mNetworkId> = -1;

        r0.<android.telephony.ServiceState: int mSystemId> = -1;

        r0.<android.telephony.ServiceState: int mCdmaRoamingIndicator> = -1;

        r0.<android.telephony.ServiceState: int mCdmaDefaultRoamingIndicator> = -1;

        r0.<android.telephony.ServiceState: int mCdmaEriIconIndex> = -1;

        r0.<android.telephony.ServiceState: int mCdmaEriIconMode> = -1;

        r0.<android.telephony.ServiceState: boolean mIsEmergencyOnly> = 0;

        r0.<android.telephony.ServiceState: int mLteEarfcnRsrpBoost> = 0;

        r0.<android.telephony.ServiceState: int mNrFrequencyRange> = 0;

        r1 = r0.<android.telephony.ServiceState: java.util.List mNetworkRegistrationInfos>;

        entermonitor r1;

     label1:
        $r3 = r0.<android.telephony.ServiceState: java.util.List mNetworkRegistrationInfos>;

        interfaceinvoke $r3.<java.util.List: void clear()>();

        r13 = new android.telephony.NetworkRegistrationInfo$Builder;

        specialinvoke r13.<android.telephony.NetworkRegistrationInfo$Builder: void <init>()>();

        $r4 = virtualinvoke r13.<android.telephony.NetworkRegistrationInfo$Builder: android.telephony.NetworkRegistrationInfo$Builder setDomain(int)>(1);

        $r5 = virtualinvoke $r4.<android.telephony.NetworkRegistrationInfo$Builder: android.telephony.NetworkRegistrationInfo$Builder setTransportType(int)>(1);

        $r6 = virtualinvoke $r5.<android.telephony.NetworkRegistrationInfo$Builder: android.telephony.NetworkRegistrationInfo$Builder setRegistrationState(int)>(4);

        $r7 = virtualinvoke $r6.<android.telephony.NetworkRegistrationInfo$Builder: android.telephony.NetworkRegistrationInfo build()>();

        virtualinvoke r0.<android.telephony.ServiceState: void addNetworkRegistrationInfo(android.telephony.NetworkRegistrationInfo)>($r7);

        r14 = new android.telephony.NetworkRegistrationInfo$Builder;

        specialinvoke r14.<android.telephony.NetworkRegistrationInfo$Builder: void <init>()>();

        $r8 = virtualinvoke r14.<android.telephony.NetworkRegistrationInfo$Builder: android.telephony.NetworkRegistrationInfo$Builder setDomain(int)>(2);

        $r9 = virtualinvoke $r8.<android.telephony.NetworkRegistrationInfo$Builder: android.telephony.NetworkRegistrationInfo$Builder setTransportType(int)>(1);

        $r10 = virtualinvoke $r9.<android.telephony.NetworkRegistrationInfo$Builder: android.telephony.NetworkRegistrationInfo$Builder setRegistrationState(int)>(4);

        $r11 = virtualinvoke $r10.<android.telephony.NetworkRegistrationInfo$Builder: android.telephony.NetworkRegistrationInfo build()>();

        virtualinvoke r0.<android.telephony.ServiceState: void addNetworkRegistrationInfo(android.telephony.NetworkRegistrationInfo)>($r11);

        exitmonitor r1;

     label2:
        r0.<android.telephony.ServiceState: java.lang.String mOperatorAlphaLongRaw> = null;

        r0.<android.telephony.ServiceState: java.lang.String mOperatorAlphaShortRaw> = null;

        r0.<android.telephony.ServiceState: boolean mIsDataRoamingFromRegistration> = 0;

        r0.<android.telephony.ServiceState: boolean mIsIwlanPreferred> = 0;

        return;

     label3:
        $r12 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r12;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public static boolean isCdma(int)
    {
        int i0;
        boolean z0;

        i0 := @parameter0: int;

        if i0 == 4 goto label2;

        if i0 == 5 goto label2;

        if i0 == 6 goto label2;

        if i0 == 7 goto label2;

        if i0 == 8 goto label2;

        if i0 == 12 goto label2;

        if i0 != 13 goto label1;

        goto label2;

     label1:
        z0 = 0;

        goto label3;

     label2:
        z0 = 1;

     label3:
        return z0;
    }

    public static boolean isGsm(int)
    {
        int i0;
        boolean z1;

        i0 := @parameter0: int;

        z1 = 1;

        if i0 == 1 goto label2;

        z1 = 1;

        if i0 == 2 goto label2;

        z1 = 1;

        if i0 == 3 goto label2;

        z1 = 1;

        if i0 == 9 goto label2;

        z1 = 1;

        if i0 == 10 goto label2;

        z1 = 1;

        if i0 == 11 goto label2;

        z1 = 1;

        if i0 == 14 goto label2;

        z1 = 1;

        if i0 == 15 goto label2;

        z1 = 1;

        if i0 == 16 goto label2;

        z1 = 1;

        if i0 == 17 goto label2;

        z1 = 1;

        if i0 == 18 goto label2;

        z1 = 1;

        if i0 == 19 goto label2;

        if i0 != 20 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    public static boolean isPsOnlyTech(int)
    {
        int i0;
        boolean z0;

        i0 := @parameter0: int;

        if i0 == 14 goto label2;

        if i0 == 19 goto label2;

        if i0 != 20 goto label1;

        goto label2;

     label1:
        z0 = 0;

        goto label3;

     label2:
        z0 = 1;

     label3:
        return z0;
    }

    public static android.telephony.ServiceState mergeServiceStates(android.telephony.ServiceState, android.telephony.ServiceState)
    {
        android.telephony.ServiceState r0, $r1, r2;
        int $i0, $i1;

        r2 := @parameter0: android.telephony.ServiceState;

        r0 := @parameter1: android.telephony.ServiceState;

        $i0 = r0.<android.telephony.ServiceState: int mVoiceRegState>;

        if $i0 == 0 goto label1;

        return r2;

     label1:
        $r1 = new android.telephony.ServiceState;

        specialinvoke $r1.<android.telephony.ServiceState: void <init>(android.telephony.ServiceState)>(r2);

        $i1 = r0.<android.telephony.ServiceState: int mVoiceRegState>;

        $r1.<android.telephony.ServiceState: int mVoiceRegState> = $i1;

        $r1.<android.telephony.ServiceState: boolean mIsEmergencyOnly> = 0;

        return $r1;
    }

    public static int networkTypeToRilRadioTechnology(int)
    {
        int i0;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 1: goto label20;
            case 2: goto label19;
            case 3: goto label18;
            case 4: goto label17;
            case 5: goto label16;
            case 6: goto label15;
            case 7: goto label14;
            case 8: goto label13;
            case 9: goto label12;
            case 10: goto label11;
            case 11: goto label01;
            case 12: goto label10;
            case 13: goto label09;
            case 14: goto label08;
            case 15: goto label07;
            case 16: goto label06;
            case 17: goto label05;
            case 18: goto label04;
            case 19: goto label03;
            case 20: goto label02;
            default: goto label01;
        };

     label01:
        return 0;

     label02:
        return 20;

     label03:
        return 19;

     label04:
        return 18;

     label05:
        return 17;

     label06:
        return 16;

     label07:
        return 15;

     label08:
        return 13;

     label09:
        return 14;

     label10:
        return 12;

     label11:
        return 11;

     label12:
        return 10;

     label13:
        return 9;

     label14:
        return 6;

     label15:
        return 8;

     label16:
        return 7;

     label17:
        return 4;

     label18:
        return 3;

     label19:
        return 2;

     label20:
        return 1;
    }

    public static android.telephony.ServiceState newFromBundle(android.os.Bundle)
    {
        android.os.Bundle r0;
        android.telephony.ServiceState $r2;

        r0 := @parameter0: android.os.Bundle;

        $r2 = new android.telephony.ServiceState;

        specialinvoke $r2.<android.telephony.ServiceState: void <init>()>();

        specialinvoke $r2.<android.telephony.ServiceState: void setFromNotifierBundle(android.os.Bundle)>(r0);

        return $r2;
    }

    public static int rilRadioTechnologyToAccessNetworkType(int)
    {
        int i0;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 1: goto label7;
            case 2: goto label7;
            case 3: goto label6;
            case 4: goto label5;
            case 5: goto label5;
            case 6: goto label5;
            case 7: goto label5;
            case 8: goto label5;
            case 9: goto label6;
            case 10: goto label6;
            case 11: goto label6;
            case 12: goto label5;
            case 13: goto label5;
            case 14: goto label4;
            case 15: goto label6;
            case 16: goto label7;
            case 17: goto label6;
            case 18: goto label3;
            case 19: goto label4;
            case 20: goto label2;
            default: goto label1;
        };

     label1:
        return 0;

     label2:
        return 6;

     label3:
        return 5;

     label4:
        return 3;

     label5:
        return 4;

     label6:
        return 2;

     label7:
        return 1;
    }

    public static int rilRadioTechnologyToNetworkType(int)
    {
        int i0;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 1: goto label20;
            case 2: goto label19;
            case 3: goto label18;
            case 4: goto label17;
            case 5: goto label17;
            case 6: goto label16;
            case 7: goto label15;
            case 8: goto label14;
            case 9: goto label13;
            case 10: goto label12;
            case 11: goto label11;
            case 12: goto label10;
            case 13: goto label09;
            case 14: goto label08;
            case 15: goto label07;
            case 16: goto label06;
            case 17: goto label05;
            case 18: goto label04;
            case 19: goto label03;
            case 20: goto label02;
            default: goto label01;
        };

     label01:
        return 0;

     label02:
        return 20;

     label03:
        return 19;

     label04:
        return 18;

     label05:
        return 17;

     label06:
        return 16;

     label07:
        return 15;

     label08:
        return 13;

     label09:
        return 14;

     label10:
        return 12;

     label11:
        return 10;

     label12:
        return 9;

     label13:
        return 8;

     label14:
        return 6;

     label15:
        return 5;

     label16:
        return 7;

     label17:
        return 4;

     label18:
        return 3;

     label19:
        return 2;

     label20:
        return 1;
    }

    public static java.lang.String rilRadioTechnologyToString(int)
    {
        int i0;
        java.lang.StringBuilder $r1;
        java.lang.String $r4, r5;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 0: goto label22;
            case 1: goto label21;
            case 2: goto label20;
            case 3: goto label19;
            case 4: goto label18;
            case 5: goto label17;
            case 6: goto label16;
            case 7: goto label15;
            case 8: goto label14;
            case 9: goto label13;
            case 10: goto label12;
            case 11: goto label11;
            case 12: goto label10;
            case 13: goto label09;
            case 14: goto label08;
            case 15: goto label07;
            case 16: goto label06;
            case 17: goto label05;
            case 18: goto label04;
            case 19: goto label03;
            case 20: goto label02;
            default: goto label01;
        };

     label01:
        r5 = "Unexpected";

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected radioTechnology=");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int w(java.lang.String,java.lang.String)>("PHONE", $r4);

        goto label23;

     label02:
        r5 = "NR_SA";

        goto label23;

     label03:
        r5 = "LTE_CA";

        goto label23;

     label04:
        r5 = "IWLAN";

        goto label23;

     label05:
        r5 = "TD-SCDMA";

        goto label23;

     label06:
        r5 = "GSM";

        goto label23;

     label07:
        r5 = "HSPAP";

        goto label23;

     label08:
        r5 = "LTE";

        goto label23;

     label09:
        r5 = "eHRPD";

        goto label23;

     label10:
        r5 = "EvDo-rev.B";

        goto label23;

     label11:
        r5 = "HSPA";

        goto label23;

     label12:
        r5 = "HSUPA";

        goto label23;

     label13:
        r5 = "HSDPA";

        goto label23;

     label14:
        r5 = "EvDo-rev.A";

        goto label23;

     label15:
        r5 = "EvDo-rev.0";

        goto label23;

     label16:
        r5 = "1xRTT";

        goto label23;

     label17:
        r5 = "CDMA-IS95B";

        goto label23;

     label18:
        r5 = "CDMA-IS95A";

        goto label23;

     label19:
        r5 = "UMTS";

        goto label23;

     label20:
        r5 = "EDGE";

        goto label23;

     label21:
        r5 = "GPRS";

        goto label23;

     label22:
        r5 = "Unknown";

     label23:
        return r5;
    }

    public static java.lang.String rilServiceStateToString(int)
    {
        int i0;

        i0 := @parameter0: int;

        if i0 == 0 goto label4;

        if i0 == 1 goto label3;

        if i0 == 2 goto label2;

        if i0 == 3 goto label1;

        return "UNKNOWN";

     label1:
        return "POWER_OFF";

     label2:
        return "EMERGENCY_ONLY";

     label3:
        return "OUT_OF_SERVICE";

     label4:
        return "IN_SERVICE";
    }

    public static java.lang.String roamingTypeToString(int)
    {
        int i0;
        java.lang.StringBuilder $r1;
        java.lang.String $r4;

        i0 := @parameter0: int;

        if i0 == 0 goto label4;

        if i0 == 1 goto label3;

        if i0 == 2 goto label2;

        if i0 == 3 goto label1;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown roaming type ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;

     label1:
        return "INTERNATIONAL";

     label2:
        return "DOMESTIC";

     label3:
        return "UNKNOWN";

     label4:
        return "NOT_ROAMING";
    }

    private void setFromNotifierBundle(android.os.Bundle)
    {
        android.telephony.ServiceState r0, r3;
        android.os.Parcelable $r1;
        android.os.Bundle r2;

        r0 := @this: android.telephony.ServiceState;

        r2 := @parameter0: android.os.Bundle;

        $r1 = virtualinvoke r2.<android.os.Bundle: android.os.Parcelable getParcelable(java.lang.String)>("android.intent.extra.SERVICE_STATE");

        r3 = (android.telephony.ServiceState) $r1;

        if r3 == null goto label1;

        virtualinvoke r0.<android.telephony.ServiceState: void copyFrom(android.telephony.ServiceState)>(r3);

     label1:
        return;
    }

    public void addNetworkRegistrationInfo(android.telephony.NetworkRegistrationInfo)
    {
        android.telephony.ServiceState r0;
        java.util.List r1, r2, $r3, $r4, $r6;
        int $i0, $i1, $i2, $i3, $i4, i5;
        java.lang.Object $r5;
        java.lang.Throwable $r8;
        android.telephony.NetworkRegistrationInfo r9, r10, r11;

        r0 := @this: android.telephony.ServiceState;

        r9 := @parameter0: android.telephony.NetworkRegistrationInfo;

        if r9 != null goto label1;

        return;

     label1:
        r1 = r0.<android.telephony.ServiceState: java.util.List mNetworkRegistrationInfos>;

        entermonitor r1;

        i5 = 0;

     label2:
        $r3 = r0.<android.telephony.ServiceState: java.util.List mNetworkRegistrationInfos>;

        $i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        if i5 >= $i0 goto label5;

        $r4 = r0.<android.telephony.ServiceState: java.util.List mNetworkRegistrationInfos>;

        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i5);

        r10 = (android.telephony.NetworkRegistrationInfo) $r5;

        $i1 = virtualinvoke r10.<android.telephony.NetworkRegistrationInfo: int getTransportType()>();

        $i2 = virtualinvoke r9.<android.telephony.NetworkRegistrationInfo: int getTransportType()>();

        if $i1 != $i2 goto label4;

        $i3 = virtualinvoke r10.<android.telephony.NetworkRegistrationInfo: int getDomain()>();

        $i4 = virtualinvoke r9.<android.telephony.NetworkRegistrationInfo: int getDomain()>();

        if $i3 != $i4 goto label4;

        $r6 = r0.<android.telephony.ServiceState: java.util.List mNetworkRegistrationInfos>;

        interfaceinvoke $r6.<java.util.List: java.lang.Object remove(int)>(i5);

     label3:
        goto label5;

     label4:
        i5 = i5 + 1;

        goto label2;

     label5:
        r2 = r0.<android.telephony.ServiceState: java.util.List mNetworkRegistrationInfos>;

        r11 = new android.telephony.NetworkRegistrationInfo;

        specialinvoke r11.<android.telephony.NetworkRegistrationInfo: void <init>(android.telephony.NetworkRegistrationInfo)>(r9);

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r11);

        exitmonitor r1;

     label6:
        return;

     label7:
        $r8 := @caughtexception;

     label8:
        exitmonitor r1;

     label9:
        throw $r8;

        catch java.lang.Throwable from label2 to label3 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    protected void copyFrom(android.telephony.ServiceState)
    {
        android.telephony.ServiceState r0, r10;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        java.lang.String $r1, $r2, $r3, $r7, $r8;
        boolean $z0, $z1, $z2, $z4, $z5;
        java.util.List $r4, $r5, $r6, r13;
        java.lang.Throwable $r9;
        int[] r11, r12;

        r0 := @this: android.telephony.ServiceState;

        r10 := @parameter0: android.telephony.ServiceState;

        $i0 = r10.<android.telephony.ServiceState: int mVoiceRegState>;

        r0.<android.telephony.ServiceState: int mVoiceRegState> = $i0;

        $i1 = r10.<android.telephony.ServiceState: int mDataRegState>;

        r0.<android.telephony.ServiceState: int mDataRegState> = $i1;

        $r1 = r10.<android.telephony.ServiceState: java.lang.String mOperatorAlphaLong>;

        r0.<android.telephony.ServiceState: java.lang.String mOperatorAlphaLong> = $r1;

        $r2 = r10.<android.telephony.ServiceState: java.lang.String mOperatorAlphaShort>;

        r0.<android.telephony.ServiceState: java.lang.String mOperatorAlphaShort> = $r2;

        $r3 = r10.<android.telephony.ServiceState: java.lang.String mOperatorNumeric>;

        r0.<android.telephony.ServiceState: java.lang.String mOperatorNumeric> = $r3;

        $z0 = r10.<android.telephony.ServiceState: boolean mIsManualNetworkSelection>;

        r0.<android.telephony.ServiceState: boolean mIsManualNetworkSelection> = $z0;

        $z1 = r10.<android.telephony.ServiceState: boolean mCssIndicator>;

        r0.<android.telephony.ServiceState: boolean mCssIndicator> = $z1;

        $i2 = r10.<android.telephony.ServiceState: int mNetworkId>;

        r0.<android.telephony.ServiceState: int mNetworkId> = $i2;

        $i3 = r10.<android.telephony.ServiceState: int mSystemId>;

        r0.<android.telephony.ServiceState: int mSystemId> = $i3;

        $i4 = r10.<android.telephony.ServiceState: int mCdmaRoamingIndicator>;

        r0.<android.telephony.ServiceState: int mCdmaRoamingIndicator> = $i4;

        $i5 = r10.<android.telephony.ServiceState: int mCdmaDefaultRoamingIndicator>;

        r0.<android.telephony.ServiceState: int mCdmaDefaultRoamingIndicator> = $i5;

        $i6 = r10.<android.telephony.ServiceState: int mCdmaEriIconIndex>;

        r0.<android.telephony.ServiceState: int mCdmaEriIconIndex> = $i6;

        $i7 = r10.<android.telephony.ServiceState: int mCdmaEriIconMode>;

        r0.<android.telephony.ServiceState: int mCdmaEriIconMode> = $i7;

        $z2 = r10.<android.telephony.ServiceState: boolean mIsEmergencyOnly>;

        r0.<android.telephony.ServiceState: boolean mIsEmergencyOnly> = $z2;

        $i8 = r10.<android.telephony.ServiceState: int mChannelNumber>;

        r0.<android.telephony.ServiceState: int mChannelNumber> = $i8;

        r11 = r10.<android.telephony.ServiceState: int[] mCellBandwidths>;

        if r11 != null goto label1;

        r12 = null;

        goto label2;

     label1:
        $i9 = lengthof r11;

        r12 = staticinvoke <java.util.Arrays: int[] copyOf(int[],int)>(r11, $i9);

     label2:
        r0.<android.telephony.ServiceState: int[] mCellBandwidths> = r12;

        $i10 = r10.<android.telephony.ServiceState: int mLteEarfcnRsrpBoost>;

        r0.<android.telephony.ServiceState: int mLteEarfcnRsrpBoost> = $i10;

        r13 = r0.<android.telephony.ServiceState: java.util.List mNetworkRegistrationInfos>;

        entermonitor r13;

     label3:
        $r4 = r0.<android.telephony.ServiceState: java.util.List mNetworkRegistrationInfos>;

        interfaceinvoke $r4.<java.util.List: void clear()>();

        $r5 = r0.<android.telephony.ServiceState: java.util.List mNetworkRegistrationInfos>;

        $r6 = virtualinvoke r10.<android.telephony.ServiceState: java.util.List getNetworkRegistrationInfoList()>();

        interfaceinvoke $r5.<java.util.List: boolean addAll(java.util.Collection)>($r6);

        exitmonitor r13;

     label4:
        $i11 = r10.<android.telephony.ServiceState: int mNrFrequencyRange>;

        r0.<android.telephony.ServiceState: int mNrFrequencyRange> = $i11;

        $r7 = r10.<android.telephony.ServiceState: java.lang.String mOperatorAlphaLongRaw>;

        r0.<android.telephony.ServiceState: java.lang.String mOperatorAlphaLongRaw> = $r7;

        $r8 = r10.<android.telephony.ServiceState: java.lang.String mOperatorAlphaShortRaw>;

        r0.<android.telephony.ServiceState: java.lang.String mOperatorAlphaShortRaw> = $r8;

        $z4 = r10.<android.telephony.ServiceState: boolean mIsDataRoamingFromRegistration>;

        r0.<android.telephony.ServiceState: boolean mIsDataRoamingFromRegistration> = $z4;

        $z5 = r10.<android.telephony.ServiceState: boolean mIsIwlanPreferred>;

        r0.<android.telephony.ServiceState: boolean mIsIwlanPreferred> = $z5;

        return;

     label5:
        $r9 := @caughtexception;

     label6:
        exitmonitor r13;

     label7:
        throw $r9;

        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public android.telephony.ServiceState createLocationInfoSanitizedCopy(boolean)
    {
        android.telephony.ServiceState r0, r15;
        boolean z0;
        java.util.List r1, r2, $r4, $r10, $r11;
        java.util.stream.Stream $r5, $r7;
        android.telephony.'-$$Lambda$MLKtmRGKP3e0WU7x_KyS5-Vg8q4' $r6;
        java.util.stream.Collector $r8;
        java.lang.Object $r9;
        java.lang.Throwable $r12;
        java.util.function.Function r16;

        r0 := @this: android.telephony.ServiceState;

        z0 := @parameter0: boolean;

        r15 = new android.telephony.ServiceState;

        specialinvoke r15.<android.telephony.ServiceState: void <init>(android.telephony.ServiceState)>(r0);

        r1 = r15.<android.telephony.ServiceState: java.util.List mNetworkRegistrationInfos>;

        entermonitor r1;

     label1:
        $r4 = r15.<android.telephony.ServiceState: java.util.List mNetworkRegistrationInfos>;

        $r5 = interfaceinvoke $r4.<java.util.List: java.util.stream.Stream stream()>();

        $r6 = <android.telephony._$$Lambda$MLKtmRGKP3e0WU7x_KyS5_Vg8q4: android.telephony.'-$$Lambda$MLKtmRGKP3e0WU7x_KyS5-Vg8q4' INSTANCE>;

        r16 = (java.util.function.Function) $r6;

        $r7 = interfaceinvoke $r5.<java.util.stream.Stream: java.util.stream.Stream map(java.util.function.Function)>(r16);

        $r8 = staticinvoke <java.util.stream.Collectors: java.util.stream.Collector toList()>();

        $r9 = interfaceinvoke $r7.<java.util.stream.Stream: java.lang.Object collect(java.util.stream.Collector)>($r8);

        r2 = (java.util.List) $r9;

        $r10 = r15.<android.telephony.ServiceState: java.util.List mNetworkRegistrationInfos>;

        interfaceinvoke $r10.<java.util.List: void clear()>();

        $r11 = r15.<android.telephony.ServiceState: java.util.List mNetworkRegistrationInfos>;

        interfaceinvoke $r11.<java.util.List: boolean addAll(java.util.Collection)>(r2);

     label2:
        exitmonitor r1;

     label3:
        if z0 != 0 goto label4;

        return r15;

     label4:
        r15.<android.telephony.ServiceState: java.lang.String mOperatorAlphaLong> = null;

        r15.<android.telephony.ServiceState: java.lang.String mOperatorAlphaShort> = null;

        r15.<android.telephony.ServiceState: java.lang.String mOperatorNumeric> = null;

        return r15;

     label5:
        $r12 := @caughtexception;

     label6:
        exitmonitor r1;

     label7:
        throw $r12;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label2 to label3 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public int describeContents()
    {
        android.telephony.ServiceState r0;

        r0 := @this: android.telephony.ServiceState;

        return 0;
    }

    public boolean equals(java.lang.Object)
    {
        android.telephony.ServiceState r0, r29;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, z23;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17;
        int[] $r1, $r2;
        java.lang.String $r3, $r4, $r5, $r6, $r7, $r8, $r19, $r20, $r21, $r22;
        java.lang.Boolean $r9, $r10;
        java.lang.Integer $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18;
        java.util.List $r23, $r24, $r25, $r26, r30;
        java.lang.Throwable $r27;
        java.lang.Object r28;

        r0 := @this: android.telephony.ServiceState;

        r28 := @parameter0: java.lang.Object;

        z0 = r28 instanceof android.telephony.ServiceState;

        z23 = 0;

        if z0 != 0 goto label1;

        return 0;

     label1:
        r29 = (android.telephony.ServiceState) r28;

        r30 = r0.<android.telephony.ServiceState: java.util.List mNetworkRegistrationInfos>;

        entermonitor r30;

     label2:
        $i1 = r0.<android.telephony.ServiceState: int mVoiceRegState>;

        $i0 = r29.<android.telephony.ServiceState: int mVoiceRegState>;

        if $i1 != $i0 goto label4;

        $i3 = r0.<android.telephony.ServiceState: int mDataRegState>;

        $i2 = r29.<android.telephony.ServiceState: int mDataRegState>;

        if $i3 != $i2 goto label4;

        $z2 = r0.<android.telephony.ServiceState: boolean mIsManualNetworkSelection>;

        $z1 = r29.<android.telephony.ServiceState: boolean mIsManualNetworkSelection>;

        if $z2 != $z1 goto label4;

        $i5 = r0.<android.telephony.ServiceState: int mChannelNumber>;

        $i4 = r29.<android.telephony.ServiceState: int mChannelNumber>;

        if $i5 != $i4 goto label4;

        $r2 = r0.<android.telephony.ServiceState: int[] mCellBandwidths>;

        $r1 = r29.<android.telephony.ServiceState: int[] mCellBandwidths>;

        $z3 = staticinvoke <java.util.Arrays: boolean equals(int[],int[])>($r2, $r1);

        if $z3 == 0 goto label4;

        $r4 = r0.<android.telephony.ServiceState: java.lang.String mOperatorAlphaLong>;

        $r3 = r29.<android.telephony.ServiceState: java.lang.String mOperatorAlphaLong>;

        $z4 = staticinvoke <android.telephony.ServiceState: boolean equalsHandlesNulls(java.lang.Object,java.lang.Object)>($r4, $r3);

        if $z4 == 0 goto label4;

        $r6 = r0.<android.telephony.ServiceState: java.lang.String mOperatorAlphaShort>;

        $r5 = r29.<android.telephony.ServiceState: java.lang.String mOperatorAlphaShort>;

        $z5 = staticinvoke <android.telephony.ServiceState: boolean equalsHandlesNulls(java.lang.Object,java.lang.Object)>($r6, $r5);

        if $z5 == 0 goto label4;

        $r8 = r0.<android.telephony.ServiceState: java.lang.String mOperatorNumeric>;

        $r7 = r29.<android.telephony.ServiceState: java.lang.String mOperatorNumeric>;

        $z6 = staticinvoke <android.telephony.ServiceState: boolean equalsHandlesNulls(java.lang.Object,java.lang.Object)>($r8, $r7);

        if $z6 == 0 goto label4;

        $z7 = r0.<android.telephony.ServiceState: boolean mCssIndicator>;

        $r9 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z7);

        $z8 = r29.<android.telephony.ServiceState: boolean mCssIndicator>;

        $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z8);

        $z9 = staticinvoke <android.telephony.ServiceState: boolean equalsHandlesNulls(java.lang.Object,java.lang.Object)>($r9, $r10);

        if $z9 == 0 goto label4;

        $i6 = r0.<android.telephony.ServiceState: int mNetworkId>;

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i6);

        $i7 = r29.<android.telephony.ServiceState: int mNetworkId>;

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i7);

        $z10 = staticinvoke <android.telephony.ServiceState: boolean equalsHandlesNulls(java.lang.Object,java.lang.Object)>($r11, $r12);

        if $z10 == 0 goto label4;

        $i8 = r0.<android.telephony.ServiceState: int mSystemId>;

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i8);

        $i9 = r29.<android.telephony.ServiceState: int mSystemId>;

        $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i9);

        $z11 = staticinvoke <android.telephony.ServiceState: boolean equalsHandlesNulls(java.lang.Object,java.lang.Object)>($r13, $r14);

        if $z11 == 0 goto label4;

        $i10 = r0.<android.telephony.ServiceState: int mCdmaRoamingIndicator>;

        $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i10);

        $i11 = r29.<android.telephony.ServiceState: int mCdmaRoamingIndicator>;

        $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i11);

        $z12 = staticinvoke <android.telephony.ServiceState: boolean equalsHandlesNulls(java.lang.Object,java.lang.Object)>($r15, $r16);

        if $z12 == 0 goto label4;

        $i12 = r0.<android.telephony.ServiceState: int mCdmaDefaultRoamingIndicator>;

        $r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i12);

        $i13 = r29.<android.telephony.ServiceState: int mCdmaDefaultRoamingIndicator>;

        $r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i13);

        $z13 = staticinvoke <android.telephony.ServiceState: boolean equalsHandlesNulls(java.lang.Object,java.lang.Object)>($r17, $r18);

        if $z13 == 0 goto label4;

        $z15 = r0.<android.telephony.ServiceState: boolean mIsEmergencyOnly>;

        $z14 = r29.<android.telephony.ServiceState: boolean mIsEmergencyOnly>;

        if $z15 != $z14 goto label4;

        $r20 = r0.<android.telephony.ServiceState: java.lang.String mOperatorAlphaLongRaw>;

        $r19 = r29.<android.telephony.ServiceState: java.lang.String mOperatorAlphaLongRaw>;

        $z16 = staticinvoke <android.telephony.ServiceState: boolean equalsHandlesNulls(java.lang.Object,java.lang.Object)>($r20, $r19);

        if $z16 == 0 goto label4;

        $r22 = r0.<android.telephony.ServiceState: java.lang.String mOperatorAlphaShortRaw>;

        $r21 = r29.<android.telephony.ServiceState: java.lang.String mOperatorAlphaShortRaw>;

        $z17 = staticinvoke <android.telephony.ServiceState: boolean equalsHandlesNulls(java.lang.Object,java.lang.Object)>($r22, $r21);

        if $z17 == 0 goto label4;

        $r23 = r0.<android.telephony.ServiceState: java.util.List mNetworkRegistrationInfos>;

        $i14 = interfaceinvoke $r23.<java.util.List: int size()>();

        $r24 = r29.<android.telephony.ServiceState: java.util.List mNetworkRegistrationInfos>;

        $i15 = interfaceinvoke $r24.<java.util.List: int size()>();

        if $i14 != $i15 goto label4;

        $r26 = r0.<android.telephony.ServiceState: java.util.List mNetworkRegistrationInfos>;

        $r25 = r29.<android.telephony.ServiceState: java.util.List mNetworkRegistrationInfos>;

        $z18 = interfaceinvoke $r26.<java.util.List: boolean containsAll(java.util.Collection)>($r25);

        if $z18 == 0 goto label4;

        $i17 = r0.<android.telephony.ServiceState: int mNrFrequencyRange>;

        $i16 = r29.<android.telephony.ServiceState: int mNrFrequencyRange>;

        if $i17 != $i16 goto label4;

        $z20 = r0.<android.telephony.ServiceState: boolean mIsDataRoamingFromRegistration>;

        $z19 = r29.<android.telephony.ServiceState: boolean mIsDataRoamingFromRegistration>;

        if $z20 != $z19 goto label4;

        $z22 = r0.<android.telephony.ServiceState: boolean mIsIwlanPreferred>;

        $z21 = r29.<android.telephony.ServiceState: boolean mIsIwlanPreferred>;

        if $z22 != $z21 goto label4;

     label3:
        z23 = 1;

        goto label4;

     label4:
        exitmonitor r30;

     label5:
        return z23;

     label6:
        $r27 := @caughtexception;

     label7:
        exitmonitor r30;

     label8:
        throw $r27;

        catch java.lang.Throwable from label2 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public void fillInNotifierBundle(android.os.Bundle)
    {
        android.telephony.ServiceState r0;
        android.os.Bundle r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        java.lang.String $r2, $r3, $r4, $r5, $r6, $r7, $r9, $r10;
        boolean $z0, $z1, $z2, $z3, $z4;
        int[] $r8;

        r0 := @this: android.telephony.ServiceState;

        r1 := @parameter0: android.os.Bundle;

        virtualinvoke r1.<android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)>("android.intent.extra.SERVICE_STATE", r0);

        $i0 = r0.<android.telephony.ServiceState: int mVoiceRegState>;

        virtualinvoke r1.<android.os.Bundle: void putInt(java.lang.String,int)>("voiceRegState", $i0);

        $i1 = r0.<android.telephony.ServiceState: int mDataRegState>;

        virtualinvoke r1.<android.os.Bundle: void putInt(java.lang.String,int)>("dataRegState", $i1);

        $i2 = virtualinvoke r0.<android.telephony.ServiceState: int getDataRoamingType()>();

        virtualinvoke r1.<android.os.Bundle: void putInt(java.lang.String,int)>("dataRoamingType", $i2);

        $i3 = virtualinvoke r0.<android.telephony.ServiceState: int getVoiceRoamingType()>();

        virtualinvoke r1.<android.os.Bundle: void putInt(java.lang.String,int)>("voiceRoamingType", $i3);

        $r2 = r0.<android.telephony.ServiceState: java.lang.String mOperatorAlphaLong>;

        virtualinvoke r1.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("operator-alpha-long", $r2);

        $r3 = r0.<android.telephony.ServiceState: java.lang.String mOperatorAlphaShort>;

        virtualinvoke r1.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("operator-alpha-short", $r3);

        $r4 = r0.<android.telephony.ServiceState: java.lang.String mOperatorNumeric>;

        virtualinvoke r1.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("operator-numeric", $r4);

        $r5 = r0.<android.telephony.ServiceState: java.lang.String mOperatorAlphaLong>;

        virtualinvoke r1.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("data-operator-alpha-long", $r5);

        $r6 = r0.<android.telephony.ServiceState: java.lang.String mOperatorAlphaShort>;

        virtualinvoke r1.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("data-operator-alpha-short", $r6);

        $r7 = r0.<android.telephony.ServiceState: java.lang.String mOperatorNumeric>;

        virtualinvoke r1.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("data-operator-numeric", $r7);

        $z0 = r0.<android.telephony.ServiceState: boolean mIsManualNetworkSelection>;

        virtualinvoke r1.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("manual", $z0);

        $i4 = virtualinvoke r0.<android.telephony.ServiceState: int getRilVoiceRadioTechnology()>();

        virtualinvoke r1.<android.os.Bundle: void putInt(java.lang.String,int)>("radioTechnology", $i4);

        $i5 = virtualinvoke r0.<android.telephony.ServiceState: int getRadioTechnology()>();

        virtualinvoke r1.<android.os.Bundle: void putInt(java.lang.String,int)>("dataRadioTechnology", $i5);

        $z1 = r0.<android.telephony.ServiceState: boolean mCssIndicator>;

        virtualinvoke r1.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("cssIndicator", $z1);

        $i6 = r0.<android.telephony.ServiceState: int mNetworkId>;

        virtualinvoke r1.<android.os.Bundle: void putInt(java.lang.String,int)>("networkId", $i6);

        $i7 = r0.<android.telephony.ServiceState: int mSystemId>;

        virtualinvoke r1.<android.os.Bundle: void putInt(java.lang.String,int)>("systemId", $i7);

        $i8 = r0.<android.telephony.ServiceState: int mCdmaRoamingIndicator>;

        virtualinvoke r1.<android.os.Bundle: void putInt(java.lang.String,int)>("cdmaRoamingIndicator", $i8);

        $i9 = r0.<android.telephony.ServiceState: int mCdmaDefaultRoamingIndicator>;

        virtualinvoke r1.<android.os.Bundle: void putInt(java.lang.String,int)>("cdmaDefaultRoamingIndicator", $i9);

        $z2 = r0.<android.telephony.ServiceState: boolean mIsEmergencyOnly>;

        virtualinvoke r1.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("emergencyOnly", $z2);

        $z3 = virtualinvoke r0.<android.telephony.ServiceState: boolean getDataRoamingFromRegistration()>();

        virtualinvoke r1.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("isDataRoamingFromRegistration", $z3);

        $z4 = virtualinvoke r0.<android.telephony.ServiceState: boolean isUsingCarrierAggregation()>();

        virtualinvoke r1.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("isUsingCarrierAggregation", $z4);

        $i10 = r0.<android.telephony.ServiceState: int mLteEarfcnRsrpBoost>;

        virtualinvoke r1.<android.os.Bundle: void putInt(java.lang.String,int)>("LteEarfcnRsrpBoost", $i10);

        $i11 = r0.<android.telephony.ServiceState: int mChannelNumber>;

        virtualinvoke r1.<android.os.Bundle: void putInt(java.lang.String,int)>("ChannelNumber", $i11);

        $r8 = r0.<android.telephony.ServiceState: int[] mCellBandwidths>;

        virtualinvoke r1.<android.os.Bundle: void putIntArray(java.lang.String,int[])>("CellBandwidths", $r8);

        $i12 = r0.<android.telephony.ServiceState: int mNrFrequencyRange>;

        virtualinvoke r1.<android.os.Bundle: void putInt(java.lang.String,int)>("mNrFrequencyRange", $i12);

        $r9 = r0.<android.telephony.ServiceState: java.lang.String mOperatorAlphaLongRaw>;

        virtualinvoke r1.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("operator-alpha-long-raw", $r9);

        $r10 = r0.<android.telephony.ServiceState: java.lang.String mOperatorAlphaShortRaw>;

        virtualinvoke r1.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("operator-alpha-short-raw", $r10);

        return;
    }

    public int getCdmaDefaultRoamingIndicator()
    {
        android.telephony.ServiceState r0;
        int $i0;

        r0 := @this: android.telephony.ServiceState;

        $i0 = r0.<android.telephony.ServiceState: int mCdmaDefaultRoamingIndicator>;

        return $i0;
    }

    public int getCdmaEriIconIndex()
    {
        android.telephony.ServiceState r0;
        int $i0;

        r0 := @this: android.telephony.ServiceState;

        $i0 = r0.<android.telephony.ServiceState: int mCdmaEriIconIndex>;

        return $i0;
    }

    public int getCdmaEriIconMode()
    {
        android.telephony.ServiceState r0;
        int $i0;

        r0 := @this: android.telephony.ServiceState;

        $i0 = r0.<android.telephony.ServiceState: int mCdmaEriIconMode>;

        return $i0;
    }

    public int getCdmaNetworkId()
    {
        android.telephony.ServiceState r0;
        int $i0;

        r0 := @this: android.telephony.ServiceState;

        $i0 = r0.<android.telephony.ServiceState: int mNetworkId>;

        return $i0;
    }

    public int getCdmaRoamingIndicator()
    {
        android.telephony.ServiceState r0;
        int $i0;

        r0 := @this: android.telephony.ServiceState;

        $i0 = r0.<android.telephony.ServiceState: int mCdmaRoamingIndicator>;

        return $i0;
    }

    public int getCdmaSystemId()
    {
        android.telephony.ServiceState r0;
        int $i0;

        r0 := @this: android.telephony.ServiceState;

        $i0 = r0.<android.telephony.ServiceState: int mSystemId>;

        return $i0;
    }

    public int[] getCellBandwidths()
    {
        android.telephony.ServiceState r0;
        int[] r1, r2;

        r0 := @this: android.telephony.ServiceState;

        r1 = r0.<android.telephony.ServiceState: int[] mCellBandwidths>;

        r2 = r1;

        if r1 != null goto label1;

        r2 = newarray (int)[0];

     label1:
        return r2;
    }

    public int getChannelNumber()
    {
        android.telephony.ServiceState r0;
        int $i0;

        r0 := @this: android.telephony.ServiceState;

        $i0 = r0.<android.telephony.ServiceState: int mChannelNumber>;

        return $i0;
    }

    public int getCssIndicator()
    {
        android.telephony.ServiceState r0;
        boolean $z0;
        int i0;

        r0 := @this: android.telephony.ServiceState;

        $z0 = r0.<android.telephony.ServiceState: boolean mCssIndicator>;

        i0 = (int) $z0;

        return i0;
    }

    public int getDataNetworkType()
    {
        android.telephony.ServiceState r0;
        android.telephony.NetworkRegistrationInfo r1, r2;
        boolean $z0, $z1, $z2;
        int $i0, $i1, i2;

        r0 := @this: android.telephony.ServiceState;

        r1 = virtualinvoke r0.<android.telephony.ServiceState: android.telephony.NetworkRegistrationInfo getNetworkRegistrationInfo(int,int)>(2, 2);

        r2 = virtualinvoke r0.<android.telephony.ServiceState: android.telephony.NetworkRegistrationInfo getNetworkRegistrationInfo(int,int)>(2, 1);

        if r1 == null goto label4;

        $z0 = virtualinvoke r1.<android.telephony.NetworkRegistrationInfo: boolean isInService()>();

        if $z0 != 0 goto label1;

        goto label4;

     label1:
        $z1 = virtualinvoke r2.<android.telephony.NetworkRegistrationInfo: boolean isInService()>();

        if $z1 == 0 goto label3;

        $z2 = r0.<android.telephony.ServiceState: boolean mIsIwlanPreferred>;

        if $z2 == 0 goto label2;

        goto label3;

     label2:
        $i1 = virtualinvoke r2.<android.telephony.NetworkRegistrationInfo: int getAccessNetworkTechnology()>();

        return $i1;

     label3:
        $i0 = virtualinvoke r1.<android.telephony.NetworkRegistrationInfo: int getAccessNetworkTechnology()>();

        return $i0;

     label4:
        if r2 == null goto label5;

        i2 = virtualinvoke r2.<android.telephony.NetworkRegistrationInfo: int getAccessNetworkTechnology()>();

        goto label6;

     label5:
        i2 = 0;

     label6:
        return i2;
    }

    public java.lang.String getDataOperatorAlphaShort()
    {
        android.telephony.ServiceState r0;
        java.lang.String $r1;

        r0 := @this: android.telephony.ServiceState;

        $r1 = r0.<android.telephony.ServiceState: java.lang.String mOperatorAlphaShort>;

        return $r1;
    }

    public java.lang.String getDataOperatorNumeric()
    {
        android.telephony.ServiceState r0;
        java.lang.String $r1;

        r0 := @this: android.telephony.ServiceState;

        $r1 = r0.<android.telephony.ServiceState: java.lang.String mOperatorNumeric>;

        return $r1;
    }

    public int getDataRegState()
    {
        android.telephony.ServiceState r0;
        int $i0;

        r0 := @this: android.telephony.ServiceState;

        $i0 = r0.<android.telephony.ServiceState: int mDataRegState>;

        return $i0;
    }

    public int getDataRegistrationState()
    {
        android.telephony.ServiceState r0;
        int $i0;

        r0 := @this: android.telephony.ServiceState;

        $i0 = virtualinvoke r0.<android.telephony.ServiceState: int getDataRegState()>();

        return $i0;
    }

    public boolean getDataRoaming()
    {
        android.telephony.ServiceState r0;
        int $i0;
        boolean z0;

        r0 := @this: android.telephony.ServiceState;

        $i0 = virtualinvoke r0.<android.telephony.ServiceState: int getDataRoamingType()>();

        if $i0 == 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public boolean getDataRoamingFromRegistration()
    {
        android.telephony.ServiceState r0;
        boolean $z0;

        r0 := @this: android.telephony.ServiceState;

        $z0 = r0.<android.telephony.ServiceState: boolean mIsDataRoamingFromRegistration>;

        return $z0;
    }

    public int getDataRoamingType()
    {
        android.telephony.ServiceState r0;
        android.telephony.NetworkRegistrationInfo r1;
        int $i0;

        r0 := @this: android.telephony.ServiceState;

        r1 = virtualinvoke r0.<android.telephony.ServiceState: android.telephony.NetworkRegistrationInfo getNetworkRegistrationInfo(int,int)>(2, 1);

        if r1 == null goto label1;

        $i0 = virtualinvoke r1.<android.telephony.NetworkRegistrationInfo: int getRoamingType()>();

        return $i0;

     label1:
        return 0;
    }

    public int getDuplexMode()
    {
        android.telephony.ServiceState r0;
        int $i0, $i1, $i2, $i3;
        boolean $z0;

        r0 := @this: android.telephony.ServiceState;

        $i0 = virtualinvoke r0.<android.telephony.ServiceState: int getRilDataRadioTechnology()>();

        $z0 = staticinvoke <android.telephony.ServiceState: boolean isPsOnlyTech(int)>($i0);

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $i1 = r0.<android.telephony.ServiceState: int mChannelNumber>;

        $i2 = staticinvoke <android.telephony.AccessNetworkUtils: int getOperatingBandForEarfcn(int)>($i1);

        $i3 = staticinvoke <android.telephony.AccessNetworkUtils: int getDuplexModeForEutranBand(int)>($i2);

        return $i3;
    }

    public boolean getIsManualSelection()
    {
        android.telephony.ServiceState r0;
        boolean $z0;

        r0 := @this: android.telephony.ServiceState;

        $z0 = r0.<android.telephony.ServiceState: boolean mIsManualNetworkSelection>;

        return $z0;
    }

    public int getLteEarfcnRsrpBoost()
    {
        android.telephony.ServiceState r0;
        int $i0;

        r0 := @this: android.telephony.ServiceState;

        $i0 = r0.<android.telephony.ServiceState: int mLteEarfcnRsrpBoost>;

        return $i0;
    }

    public android.telephony.NetworkRegistrationInfo getNetworkRegistrationInfo(int, int)
    {
        android.telephony.ServiceState r0;
        int i0, i1, $i2, $i3, $i4;
        java.util.List r1, $r2;
        boolean $z0;
        java.lang.Object $r3;
        java.lang.Throwable $r4;
        java.util.Iterator r5;
        android.telephony.NetworkRegistrationInfo r6, r7;

        r0 := @this: android.telephony.ServiceState;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = r0.<android.telephony.ServiceState: java.util.List mNetworkRegistrationInfos>;

        entermonitor r1;

     label1:
        $r2 = r0.<android.telephony.ServiceState: java.util.List mNetworkRegistrationInfos>;

        r5 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r3 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r6 = (android.telephony.NetworkRegistrationInfo) $r3;

        $i2 = virtualinvoke r6.<android.telephony.NetworkRegistrationInfo: int getTransportType()>();

        if $i2 != i1 goto label4;

        $i3 = virtualinvoke r6.<android.telephony.NetworkRegistrationInfo: int getDomain()>();

        $i4 = $i3 & i0;

        if $i4 == 0 goto label4;

        r7 = new android.telephony.NetworkRegistrationInfo;

        specialinvoke r7.<android.telephony.NetworkRegistrationInfo: void <init>(android.telephony.NetworkRegistrationInfo)>(r6);

        exitmonitor r1;

     label3:
        return r7;

     label4:
        goto label2;

     label5:
        exitmonitor r1;

     label6:
        return null;

     label7:
        $r4 := @caughtexception;

     label8:
        exitmonitor r1;

     label9:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label2 to label3 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public java.util.List getNetworkRegistrationInfoList()
    {
        android.telephony.ServiceState r0;
        java.util.List r1, $r5;
        java.util.ArrayList r2;
        java.util.Iterator r3;
        android.telephony.NetworkRegistrationInfo r4, r8;
        boolean $z0;
        java.lang.Object $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.telephony.ServiceState;

        r1 = r0.<android.telephony.ServiceState: java.util.List mNetworkRegistrationInfos>;

        entermonitor r1;

     label1:
        r2 = new java.util.ArrayList;

        specialinvoke r2.<java.util.ArrayList: void <init>()>();

        $r5 = r0.<android.telephony.ServiceState: java.util.List mNetworkRegistrationInfos>;

        r3 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r6 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r8 = (android.telephony.NetworkRegistrationInfo) $r6;

        r4 = new android.telephony.NetworkRegistrationInfo;

        specialinvoke r4.<android.telephony.NetworkRegistrationInfo: void <init>(android.telephony.NetworkRegistrationInfo)>(r8);

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r4);

     label3:
        goto label2;

     label4:
        exitmonitor r1;

     label5:
        return r2;

     label6:
        $r7 := @caughtexception;

     label7:
        exitmonitor r1;

     label8:
        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label2 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public java.util.List getNetworkRegistrationInfoListForDomain(int)
    {
        android.telephony.ServiceState r0;
        int i0, $i1, $i2;
        java.util.List r2, $r6;
        java.util.Iterator r3;
        android.telephony.NetworkRegistrationInfo r4, r9;
        java.util.ArrayList $r5;
        boolean $z0;
        java.lang.Object $r7;
        java.lang.Throwable $r8;

        r0 := @this: android.telephony.ServiceState;

        i0 := @parameter0: int;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r2 = r0.<android.telephony.ServiceState: java.util.List mNetworkRegistrationInfos>;

        entermonitor r2;

     label1:
        $r6 = r0.<android.telephony.ServiceState: java.util.List mNetworkRegistrationInfos>;

        r3 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r7 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r9 = (android.telephony.NetworkRegistrationInfo) $r7;

        $i1 = virtualinvoke r9.<android.telephony.NetworkRegistrationInfo: int getDomain()>();

        $i2 = $i1 & i0;

        if $i2 == 0 goto label3;

        r4 = new android.telephony.NetworkRegistrationInfo;

        specialinvoke r4.<android.telephony.NetworkRegistrationInfo: void <init>(android.telephony.NetworkRegistrationInfo)>(r9);

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>(r4);

     label3:
        goto label2;

     label4:
        exitmonitor r2;

     label5:
        return $r5;

     label6:
        $r8 := @caughtexception;

     label7:
        exitmonitor r2;

     label8:
        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label2 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public java.util.List getNetworkRegistrationInfoListForTransportType(int)
    {
        android.telephony.ServiceState r0;
        int i0, $i1;
        java.util.List r2, $r6;
        android.telephony.NetworkRegistrationInfo r3, r4;
        java.util.ArrayList $r5;
        boolean $z0;
        java.lang.Object $r7;
        java.lang.Throwable $r8;
        java.util.Iterator r9;

        r0 := @this: android.telephony.ServiceState;

        i0 := @parameter0: int;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r2 = r0.<android.telephony.ServiceState: java.util.List mNetworkRegistrationInfos>;

        entermonitor r2;

     label1:
        $r6 = r0.<android.telephony.ServiceState: java.util.List mNetworkRegistrationInfos>;

        r9 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r7 = interfaceinvoke r9.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.telephony.NetworkRegistrationInfo) $r7;

        $i1 = virtualinvoke r3.<android.telephony.NetworkRegistrationInfo: int getTransportType()>();

        if $i1 != i0 goto label3;

        r4 = new android.telephony.NetworkRegistrationInfo;

        specialinvoke r4.<android.telephony.NetworkRegistrationInfo: void <init>(android.telephony.NetworkRegistrationInfo)>(r3);

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>(r4);

     label3:
        goto label2;

     label4:
        exitmonitor r2;

     label5:
        return $r5;

     label6:
        $r8 := @caughtexception;

     label7:
        exitmonitor r2;

     label8:
        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label2 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public int getNrFrequencyRange()
    {
        android.telephony.ServiceState r0;
        int $i0;

        r0 := @this: android.telephony.ServiceState;

        $i0 = r0.<android.telephony.ServiceState: int mNrFrequencyRange>;

        return $i0;
    }

    public int getNrState()
    {
        android.telephony.ServiceState r0;
        android.telephony.NetworkRegistrationInfo r1;
        int $i0;

        r0 := @this: android.telephony.ServiceState;

        r1 = virtualinvoke r0.<android.telephony.ServiceState: android.telephony.NetworkRegistrationInfo getNetworkRegistrationInfo(int,int)>(2, 1);

        if r1 != null goto label1;

        return 0;

     label1:
        $i0 = virtualinvoke r1.<android.telephony.NetworkRegistrationInfo: int getNrState()>();

        return $i0;
    }

    public java.lang.String getOperatorAlpha()
    {
        android.telephony.ServiceState r0;
        java.lang.String $r1, $r2, $r3;
        boolean $z0;

        r0 := @this: android.telephony.ServiceState;

        $r1 = r0.<android.telephony.ServiceState: java.lang.String mOperatorAlphaLong>;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

        if $z0 == 0 goto label1;

        $r3 = r0.<android.telephony.ServiceState: java.lang.String mOperatorAlphaShort>;

        return $r3;

     label1:
        $r2 = r0.<android.telephony.ServiceState: java.lang.String mOperatorAlphaLong>;

        return $r2;
    }

    public java.lang.String getOperatorAlphaLong()
    {
        android.telephony.ServiceState r0;
        java.lang.String $r1;

        r0 := @this: android.telephony.ServiceState;

        $r1 = r0.<android.telephony.ServiceState: java.lang.String mOperatorAlphaLong>;

        return $r1;
    }

    public java.lang.String getOperatorAlphaLongRaw()
    {
        android.telephony.ServiceState r0;
        java.lang.String $r1;

        r0 := @this: android.telephony.ServiceState;

        $r1 = r0.<android.telephony.ServiceState: java.lang.String mOperatorAlphaLongRaw>;

        return $r1;
    }

    public java.lang.String getOperatorAlphaShort()
    {
        android.telephony.ServiceState r0;
        java.lang.String $r1;

        r0 := @this: android.telephony.ServiceState;

        $r1 = r0.<android.telephony.ServiceState: java.lang.String mOperatorAlphaShort>;

        return $r1;
    }

    public java.lang.String getOperatorAlphaShortRaw()
    {
        android.telephony.ServiceState r0;
        java.lang.String $r1;

        r0 := @this: android.telephony.ServiceState;

        $r1 = r0.<android.telephony.ServiceState: java.lang.String mOperatorAlphaShortRaw>;

        return $r1;
    }

    public java.lang.String getOperatorNumeric()
    {
        android.telephony.ServiceState r0;
        java.lang.String $r1;

        r0 := @this: android.telephony.ServiceState;

        $r1 = r0.<android.telephony.ServiceState: java.lang.String mOperatorNumeric>;

        return $r1;
    }

    public int getRadioTechnology()
    {
        android.telephony.ServiceState r0;
        int $i1;

        r0 := @this: android.telephony.ServiceState;

        staticinvoke <com.android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("PHONE", "ServiceState.getRadioTechnology() DEPRECATED will be removed *******");

        $i1 = virtualinvoke r0.<android.telephony.ServiceState: int getRilDataRadioTechnology()>();

        return $i1;
    }

    public int getRilDataRadioTechnology()
    {
        android.telephony.ServiceState r0;
        int $i0, $i1;

        r0 := @this: android.telephony.ServiceState;

        $i0 = virtualinvoke r0.<android.telephony.ServiceState: int getDataNetworkType()>();

        $i1 = staticinvoke <android.telephony.ServiceState: int networkTypeToRilRadioTechnology(int)>($i0);

        return $i1;
    }

    public int getRilVoiceRadioTechnology()
    {
        android.telephony.ServiceState r0;
        android.telephony.NetworkRegistrationInfo r1;
        int $i0, $i1;

        r0 := @this: android.telephony.ServiceState;

        r1 = virtualinvoke r0.<android.telephony.ServiceState: android.telephony.NetworkRegistrationInfo getNetworkRegistrationInfo(int,int)>(1, 1);

        if r1 == null goto label1;

        $i0 = virtualinvoke r1.<android.telephony.NetworkRegistrationInfo: int getAccessNetworkTechnology()>();

        $i1 = staticinvoke <android.telephony.ServiceState: int networkTypeToRilRadioTechnology(int)>($i0);

        return $i1;

     label1:
        return 0;
    }

    public boolean getRoaming()
    {
        android.telephony.ServiceState r0;
        boolean $z0, $z1, z2;

        r0 := @this: android.telephony.ServiceState;

        $z0 = virtualinvoke r0.<android.telephony.ServiceState: boolean getVoiceRoaming()>();

        if $z0 != 0 goto label2;

        $z1 = virtualinvoke r0.<android.telephony.ServiceState: boolean getDataRoaming()>();

        if $z1 == 0 goto label1;

        goto label2;

     label1:
        z2 = 0;

        goto label3;

     label2:
        z2 = 1;

     label3:
        return z2;
    }

    public int getState()
    {
        android.telephony.ServiceState r0;
        int $i0;

        r0 := @this: android.telephony.ServiceState;

        $i0 = virtualinvoke r0.<android.telephony.ServiceState: int getVoiceRegState()>();

        return $i0;
    }

    public int getVoiceNetworkType()
    {
        android.telephony.ServiceState r0;
        android.telephony.NetworkRegistrationInfo r1;
        int $i0;

        r0 := @this: android.telephony.ServiceState;

        r1 = virtualinvoke r0.<android.telephony.ServiceState: android.telephony.NetworkRegistrationInfo getNetworkRegistrationInfo(int,int)>(1, 1);

        if r1 == null goto label1;

        $i0 = virtualinvoke r1.<android.telephony.NetworkRegistrationInfo: int getAccessNetworkTechnology()>();

        return $i0;

     label1:
        return 0;
    }

    public java.lang.String getVoiceOperatorAlphaLong()
    {
        android.telephony.ServiceState r0;
        java.lang.String $r1;

        r0 := @this: android.telephony.ServiceState;

        $r1 = r0.<android.telephony.ServiceState: java.lang.String mOperatorAlphaLong>;

        return $r1;
    }

    public java.lang.String getVoiceOperatorAlphaShort()
    {
        android.telephony.ServiceState r0;
        java.lang.String $r1;

        r0 := @this: android.telephony.ServiceState;

        $r1 = r0.<android.telephony.ServiceState: java.lang.String mOperatorAlphaShort>;

        return $r1;
    }

    public java.lang.String getVoiceOperatorNumeric()
    {
        android.telephony.ServiceState r0;
        java.lang.String $r1;

        r0 := @this: android.telephony.ServiceState;

        $r1 = r0.<android.telephony.ServiceState: java.lang.String mOperatorNumeric>;

        return $r1;
    }

    public int getVoiceRegState()
    {
        android.telephony.ServiceState r0;
        int $i0;

        r0 := @this: android.telephony.ServiceState;

        $i0 = r0.<android.telephony.ServiceState: int mVoiceRegState>;

        return $i0;
    }

    public boolean getVoiceRoaming()
    {
        android.telephony.ServiceState r0;
        int $i0;
        boolean z0;

        r0 := @this: android.telephony.ServiceState;

        $i0 = virtualinvoke r0.<android.telephony.ServiceState: int getVoiceRoamingType()>();

        if $i0 == 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public int getVoiceRoamingType()
    {
        android.telephony.ServiceState r0;
        android.telephony.NetworkRegistrationInfo r1;
        int $i0;

        r0 := @this: android.telephony.ServiceState;

        r1 = virtualinvoke r0.<android.telephony.ServiceState: android.telephony.NetworkRegistrationInfo getNetworkRegistrationInfo(int,int)>(1, 1);

        if r1 == null goto label1;

        $i0 = virtualinvoke r1.<android.telephony.NetworkRegistrationInfo: int getRoamingType()>();

        return $i0;

     label1:
        return 0;
    }

    public int hashCode()
    {
        android.telephony.ServiceState r0;
        java.util.List r1, $r22;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        java.lang.Object[] $r3;
        java.lang.Integer $r4, $r5, $r6, $r8, $r14, $r15, $r16, $r17, $r18, $r19, $r21, $r23;
        int[] $r7;
        java.lang.String $r9, $r10, $r11, $r24, $r25;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.Boolean $r12, $r13, $r20, $r26, $r27;
        java.lang.Throwable $r28;

        r0 := @this: android.telephony.ServiceState;

        r1 = r0.<android.telephony.ServiceState: java.util.List mNetworkRegistrationInfos>;

        entermonitor r1;

     label1:
        $r3 = newarray (java.lang.Object)[23];

        $i1 = r0.<android.telephony.ServiceState: int mVoiceRegState>;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r3[0] = $r4;

        $i2 = r0.<android.telephony.ServiceState: int mDataRegState>;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r3[1] = $r5;

        $i3 = r0.<android.telephony.ServiceState: int mChannelNumber>;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $r3[2] = $r6;

        $r7 = r0.<android.telephony.ServiceState: int[] mCellBandwidths>;

        $i4 = staticinvoke <java.util.Arrays: int hashCode(int[])>($r7);

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        $r3[3] = $r8;

        $r9 = r0.<android.telephony.ServiceState: java.lang.String mOperatorAlphaLong>;

        $r3[4] = $r9;

        $r10 = r0.<android.telephony.ServiceState: java.lang.String mOperatorAlphaShort>;

        $r3[5] = $r10;

        $r11 = r0.<android.telephony.ServiceState: java.lang.String mOperatorNumeric>;

        $r3[6] = $r11;

        $z0 = r0.<android.telephony.ServiceState: boolean mIsManualNetworkSelection>;

        $r12 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r3[7] = $r12;

        $z1 = r0.<android.telephony.ServiceState: boolean mCssIndicator>;

        $r13 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1);

        $r3[8] = $r13;

        $i5 = r0.<android.telephony.ServiceState: int mNetworkId>;

        $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5);

        $r3[9] = $r14;

        $i6 = r0.<android.telephony.ServiceState: int mSystemId>;

        $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i6);

        $r3[10] = $r15;

        $i7 = r0.<android.telephony.ServiceState: int mCdmaRoamingIndicator>;

        $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i7);

        $r3[11] = $r16;

        $i8 = r0.<android.telephony.ServiceState: int mCdmaDefaultRoamingIndicator>;

        $r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i8);

        $r3[12] = $r17;

        $i9 = r0.<android.telephony.ServiceState: int mCdmaEriIconIndex>;

        $r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i9);

        $r3[13] = $r18;

        $i10 = r0.<android.telephony.ServiceState: int mCdmaEriIconMode>;

        $r19 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i10);

        $r3[14] = $r19;

        $z2 = r0.<android.telephony.ServiceState: boolean mIsEmergencyOnly>;

        $r20 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z2);

        $r3[15] = $r20;

        $i11 = r0.<android.telephony.ServiceState: int mLteEarfcnRsrpBoost>;

        $r21 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i11);

        $r3[16] = $r21;

        $r22 = r0.<android.telephony.ServiceState: java.util.List mNetworkRegistrationInfos>;

        $r3[17] = $r22;

        $i12 = r0.<android.telephony.ServiceState: int mNrFrequencyRange>;

        $r23 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i12);

        $r3[18] = $r23;

        $r24 = r0.<android.telephony.ServiceState: java.lang.String mOperatorAlphaLongRaw>;

        $r3[19] = $r24;

        $r25 = r0.<android.telephony.ServiceState: java.lang.String mOperatorAlphaShortRaw>;

        $r3[20] = $r25;

        $z3 = r0.<android.telephony.ServiceState: boolean mIsDataRoamingFromRegistration>;

        $r26 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z3);

        $r3[21] = $r26;

        $z4 = r0.<android.telephony.ServiceState: boolean mIsIwlanPreferred>;

        $r27 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z4);

        $r3[22] = $r27;

        i0 = staticinvoke <java.util.Objects: int hash(java.lang.Object[])>($r3);

        exitmonitor r1;

     label2:
        return i0;

     label3:
        $r28 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r28;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public boolean isEmergencyOnly()
    {
        android.telephony.ServiceState r0;
        boolean $z0;

        r0 := @this: android.telephony.ServiceState;

        $z0 = r0.<android.telephony.ServiceState: boolean mIsEmergencyOnly>;

        return $z0;
    }

    public boolean isIwlanPreferred()
    {
        android.telephony.ServiceState r0;
        boolean $z0;

        r0 := @this: android.telephony.ServiceState;

        $z0 = r0.<android.telephony.ServiceState: boolean mIsIwlanPreferred>;

        return $z0;
    }

    public boolean isSearching()
    {
        android.telephony.ServiceState r0;
        int $i0, $i1;
        android.telephony.NetworkRegistrationInfo r1, r2;

        r0 := @this: android.telephony.ServiceState;

        r1 = virtualinvoke r0.<android.telephony.ServiceState: android.telephony.NetworkRegistrationInfo getNetworkRegistrationInfo(int,int)>(2, 1);

        if r1 == null goto label1;

        $i1 = virtualinvoke r1.<android.telephony.NetworkRegistrationInfo: int getRegistrationState()>();

        if $i1 != 2 goto label1;

        return 1;

     label1:
        r2 = virtualinvoke r0.<android.telephony.ServiceState: android.telephony.NetworkRegistrationInfo getNetworkRegistrationInfo(int,int)>(1, 1);

        if r2 == null goto label2;

        $i0 = virtualinvoke r2.<android.telephony.NetworkRegistrationInfo: int getRegistrationState()>();

        if $i0 != 2 goto label2;

        return 1;

     label2:
        return 0;
    }

    public boolean isUsingCarrierAggregation()
    {
        android.telephony.ServiceState r0;
        int[] $r1;
        int $i0;
        android.telephony.NetworkRegistrationInfo r2;
        boolean z2, z3;
        android.telephony.DataSpecificRegistrationInfo r3;

        r0 := @this: android.telephony.ServiceState;

        r2 = virtualinvoke r0.<android.telephony.ServiceState: android.telephony.NetworkRegistrationInfo getNetworkRegistrationInfo(int,int)>(2, 1);

        z2 = 0;

        if r2 == null goto label1;

        r3 = virtualinvoke r2.<android.telephony.NetworkRegistrationInfo: android.telephony.DataSpecificRegistrationInfo getDataSpecificInfo()>();

        z2 = 0;

        if r3 == null goto label1;

        z2 = virtualinvoke r3.<android.telephony.DataSpecificRegistrationInfo: boolean isUsingCarrierAggregation()>();

     label1:
        z3 = 1;

        if z2 != 0 goto label3;

        $r1 = virtualinvoke r0.<android.telephony.ServiceState: int[] getCellBandwidths()>();

        $i0 = lengthof $r1;

        if $i0 <= 1 goto label2;

        z3 = 1;

        goto label3;

     label2:
        z3 = 0;

     label3:
        return z3;
    }

    public void setCdmaDefaultRoamingIndicator(int)
    {
        android.telephony.ServiceState r0;
        int i0;

        r0 := @this: android.telephony.ServiceState;

        i0 := @parameter0: int;

        r0.<android.telephony.ServiceState: int mCdmaDefaultRoamingIndicator> = i0;

        return;
    }

    public void setCdmaEriIconIndex(int)
    {
        android.telephony.ServiceState r0;
        int i0;

        r0 := @this: android.telephony.ServiceState;

        i0 := @parameter0: int;

        r0.<android.telephony.ServiceState: int mCdmaEriIconIndex> = i0;

        return;
    }

    public void setCdmaEriIconMode(int)
    {
        android.telephony.ServiceState r0;
        int i0;

        r0 := @this: android.telephony.ServiceState;

        i0 := @parameter0: int;

        r0.<android.telephony.ServiceState: int mCdmaEriIconMode> = i0;

        return;
    }

    public void setCdmaRoamingIndicator(int)
    {
        android.telephony.ServiceState r0;
        int i0;

        r0 := @this: android.telephony.ServiceState;

        i0 := @parameter0: int;

        r0.<android.telephony.ServiceState: int mCdmaRoamingIndicator> = i0;

        return;
    }

    public void setCdmaSystemAndNetworkId(int, int)
    {
        android.telephony.ServiceState r0;
        int i0, i1;

        r0 := @this: android.telephony.ServiceState;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r0.<android.telephony.ServiceState: int mSystemId> = i0;

        r0.<android.telephony.ServiceState: int mNetworkId> = i1;

        return;
    }

    public void setCellBandwidths(int[])
    {
        android.telephony.ServiceState r0;
        int[] r1;

        r0 := @this: android.telephony.ServiceState;

        r1 := @parameter0: int[];

        r0.<android.telephony.ServiceState: int[] mCellBandwidths> = r1;

        return;
    }

    public void setChannelNumber(int)
    {
        android.telephony.ServiceState r0;
        int i0;

        r0 := @this: android.telephony.ServiceState;

        i0 := @parameter0: int;

        r0.<android.telephony.ServiceState: int mChannelNumber> = i0;

        return;
    }

    public void setCssIndicator(int)
    {
        android.telephony.ServiceState r0;
        int i0;
        boolean z0;

        r0 := @this: android.telephony.ServiceState;

        i0 := @parameter0: int;

        if i0 == 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        r0.<android.telephony.ServiceState: boolean mCssIndicator> = z0;

        return;
    }

    public void setDataRegState(int)
    {
        android.telephony.ServiceState r0;
        int i0;

        r0 := @this: android.telephony.ServiceState;

        i0 := @parameter0: int;

        r0.<android.telephony.ServiceState: int mDataRegState> = i0;

        return;
    }

    public void setDataRoaming(boolean)
    {
        android.telephony.ServiceState r0;
        boolean z0;
        int i0;

        r0 := @this: android.telephony.ServiceState;

        z0 := @parameter0: boolean;

        i0 = (int) z0;

        virtualinvoke r0.<android.telephony.ServiceState: void setDataRoamingType(int)>(i0);

        return;
    }

    public void setDataRoamingFromRegistration(boolean)
    {
        android.telephony.ServiceState r0;
        boolean z0;

        r0 := @this: android.telephony.ServiceState;

        z0 := @parameter0: boolean;

        r0.<android.telephony.ServiceState: boolean mIsDataRoamingFromRegistration> = z0;

        return;
    }

    public void setDataRoamingType(int)
    {
        android.telephony.ServiceState r0;
        int i0;
        android.telephony.NetworkRegistrationInfo r1, r5;
        android.telephony.NetworkRegistrationInfo$Builder $r2, $r3, $r4;

        r0 := @this: android.telephony.ServiceState;

        i0 := @parameter0: int;

        r1 = virtualinvoke r0.<android.telephony.ServiceState: android.telephony.NetworkRegistrationInfo getNetworkRegistrationInfo(int,int)>(2, 1);

        r5 = r1;

        if r1 != null goto label1;

        $r2 = new android.telephony.NetworkRegistrationInfo$Builder;

        specialinvoke $r2.<android.telephony.NetworkRegistrationInfo$Builder: void <init>()>();

        $r3 = virtualinvoke $r2.<android.telephony.NetworkRegistrationInfo$Builder: android.telephony.NetworkRegistrationInfo$Builder setDomain(int)>(2);

        $r4 = virtualinvoke $r3.<android.telephony.NetworkRegistrationInfo$Builder: android.telephony.NetworkRegistrationInfo$Builder setTransportType(int)>(1);

        r5 = virtualinvoke $r4.<android.telephony.NetworkRegistrationInfo$Builder: android.telephony.NetworkRegistrationInfo build()>();

     label1:
        virtualinvoke r5.<android.telephony.NetworkRegistrationInfo: void setRoamingType(int)>(i0);

        virtualinvoke r0.<android.telephony.ServiceState: void addNetworkRegistrationInfo(android.telephony.NetworkRegistrationInfo)>(r5);

        return;
    }

    public void setEmergencyOnly(boolean)
    {
        android.telephony.ServiceState r0;
        boolean z0;

        r0 := @this: android.telephony.ServiceState;

        z0 := @parameter0: boolean;

        r0.<android.telephony.ServiceState: boolean mIsEmergencyOnly> = z0;

        return;
    }

    public void setIsManualSelection(boolean)
    {
        android.telephony.ServiceState r0;
        boolean z0;

        r0 := @this: android.telephony.ServiceState;

        z0 := @parameter0: boolean;

        r0.<android.telephony.ServiceState: boolean mIsManualNetworkSelection> = z0;

        return;
    }

    public void setIsUsingCarrierAggregation(boolean)
    {
        android.telephony.ServiceState r0;
        boolean z0;
        android.telephony.NetworkRegistrationInfo r1;
        android.telephony.DataSpecificRegistrationInfo r2;

        r0 := @this: android.telephony.ServiceState;

        z0 := @parameter0: boolean;

        r1 = virtualinvoke r0.<android.telephony.ServiceState: android.telephony.NetworkRegistrationInfo getNetworkRegistrationInfo(int,int)>(2, 1);

        if r1 == null goto label1;

        r2 = virtualinvoke r1.<android.telephony.NetworkRegistrationInfo: android.telephony.DataSpecificRegistrationInfo getDataSpecificInfo()>();

        if r2 == null goto label1;

        virtualinvoke r2.<android.telephony.DataSpecificRegistrationInfo: void setIsUsingCarrierAggregation(boolean)>(z0);

        virtualinvoke r0.<android.telephony.ServiceState: void addNetworkRegistrationInfo(android.telephony.NetworkRegistrationInfo)>(r1);

     label1:
        return;
    }

    public void setIwlanPreferred(boolean)
    {
        android.telephony.ServiceState r0;
        boolean z0;

        r0 := @this: android.telephony.ServiceState;

        z0 := @parameter0: boolean;

        r0.<android.telephony.ServiceState: boolean mIsIwlanPreferred> = z0;

        return;
    }

    public void setLteEarfcnRsrpBoost(int)
    {
        android.telephony.ServiceState r0;
        int i0;

        r0 := @this: android.telephony.ServiceState;

        i0 := @parameter0: int;

        r0.<android.telephony.ServiceState: int mLteEarfcnRsrpBoost> = i0;

        return;
    }

    public void setNrFrequencyRange(int)
    {
        android.telephony.ServiceState r0;
        int i0;

        r0 := @this: android.telephony.ServiceState;

        i0 := @parameter0: int;

        r0.<android.telephony.ServiceState: int mNrFrequencyRange> = i0;

        return;
    }

    public void setOperatorAlphaLong(java.lang.String)
    {
        android.telephony.ServiceState r0;
        java.lang.String r1;

        r0 := @this: android.telephony.ServiceState;

        r1 := @parameter0: java.lang.String;

        r0.<android.telephony.ServiceState: java.lang.String mOperatorAlphaLong> = r1;

        return;
    }

    public void setOperatorAlphaLongRaw(java.lang.String)
    {
        android.telephony.ServiceState r0;
        java.lang.String r1;

        r0 := @this: android.telephony.ServiceState;

        r1 := @parameter0: java.lang.String;

        r0.<android.telephony.ServiceState: java.lang.String mOperatorAlphaLongRaw> = r1;

        return;
    }

    public void setOperatorAlphaShortRaw(java.lang.String)
    {
        android.telephony.ServiceState r0;
        java.lang.String r1;

        r0 := @this: android.telephony.ServiceState;

        r1 := @parameter0: java.lang.String;

        r0.<android.telephony.ServiceState: java.lang.String mOperatorAlphaShortRaw> = r1;

        return;
    }

    public void setOperatorName(java.lang.String, java.lang.String, java.lang.String)
    {
        android.telephony.ServiceState r0;
        java.lang.String r1, r2, r3;

        r0 := @this: android.telephony.ServiceState;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r0.<android.telephony.ServiceState: java.lang.String mOperatorAlphaLong> = r1;

        r0.<android.telephony.ServiceState: java.lang.String mOperatorAlphaShort> = r2;

        r0.<android.telephony.ServiceState: java.lang.String mOperatorNumeric> = r3;

        return;
    }

    public void setRilDataRadioTechnology(int)
    {
        android.telephony.ServiceState r0;
        int i0, $i2;
        android.telephony.NetworkRegistrationInfo r1, r5;
        android.telephony.NetworkRegistrationInfo$Builder $r2, $r3, $r4;

        r0 := @this: android.telephony.ServiceState;

        i0 := @parameter0: int;

        staticinvoke <com.android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("PHONE", "ServiceState.setRilDataRadioTechnology() called. It\'s encouraged to use addNetworkRegistrationInfo() instead *******");

        r1 = virtualinvoke r0.<android.telephony.ServiceState: android.telephony.NetworkRegistrationInfo getNetworkRegistrationInfo(int,int)>(2, 1);

        r5 = r1;

        if r1 != null goto label1;

        $r2 = new android.telephony.NetworkRegistrationInfo$Builder;

        specialinvoke $r2.<android.telephony.NetworkRegistrationInfo$Builder: void <init>()>();

        $r3 = virtualinvoke $r2.<android.telephony.NetworkRegistrationInfo$Builder: android.telephony.NetworkRegistrationInfo$Builder setDomain(int)>(2);

        $r4 = virtualinvoke $r3.<android.telephony.NetworkRegistrationInfo$Builder: android.telephony.NetworkRegistrationInfo$Builder setTransportType(int)>(1);

        r5 = virtualinvoke $r4.<android.telephony.NetworkRegistrationInfo$Builder: android.telephony.NetworkRegistrationInfo build()>();

     label1:
        $i2 = staticinvoke <android.telephony.ServiceState: int rilRadioTechnologyToNetworkType(int)>(i0);

        virtualinvoke r5.<android.telephony.NetworkRegistrationInfo: void setAccessNetworkTechnology(int)>($i2);

        virtualinvoke r0.<android.telephony.ServiceState: void addNetworkRegistrationInfo(android.telephony.NetworkRegistrationInfo)>(r5);

        return;
    }

    public void setRilVoiceRadioTechnology(int)
    {
        android.telephony.ServiceState r0;
        int i0, $i2;
        android.telephony.NetworkRegistrationInfo r1, r5;
        android.telephony.NetworkRegistrationInfo$Builder $r2, $r3, $r4;

        r0 := @this: android.telephony.ServiceState;

        i0 := @parameter0: int;

        staticinvoke <com.android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("PHONE", "ServiceState.setRilVoiceRadioTechnology() called. It\'s encouraged to use addNetworkRegistrationInfo() instead *******");

        r1 = virtualinvoke r0.<android.telephony.ServiceState: android.telephony.NetworkRegistrationInfo getNetworkRegistrationInfo(int,int)>(1, 1);

        r5 = r1;

        if r1 != null goto label1;

        $r2 = new android.telephony.NetworkRegistrationInfo$Builder;

        specialinvoke $r2.<android.telephony.NetworkRegistrationInfo$Builder: void <init>()>();

        $r3 = virtualinvoke $r2.<android.telephony.NetworkRegistrationInfo$Builder: android.telephony.NetworkRegistrationInfo$Builder setDomain(int)>(1);

        $r4 = virtualinvoke $r3.<android.telephony.NetworkRegistrationInfo$Builder: android.telephony.NetworkRegistrationInfo$Builder setTransportType(int)>(1);

        r5 = virtualinvoke $r4.<android.telephony.NetworkRegistrationInfo$Builder: android.telephony.NetworkRegistrationInfo build()>();

     label1:
        $i2 = staticinvoke <android.telephony.ServiceState: int rilRadioTechnologyToNetworkType(int)>(i0);

        virtualinvoke r5.<android.telephony.NetworkRegistrationInfo: void setAccessNetworkTechnology(int)>($i2);

        virtualinvoke r0.<android.telephony.ServiceState: void addNetworkRegistrationInfo(android.telephony.NetworkRegistrationInfo)>(r5);

        return;
    }

    public void setRoaming(boolean)
    {
        android.telephony.ServiceState r0;
        boolean z0;

        r0 := @this: android.telephony.ServiceState;

        z0 := @parameter0: boolean;

        virtualinvoke r0.<android.telephony.ServiceState: void setVoiceRoaming(boolean)>(z0);

        virtualinvoke r0.<android.telephony.ServiceState: void setDataRoaming(boolean)>(z0);

        return;
    }

    public void setState(int)
    {
        android.telephony.ServiceState r0;
        int i0;

        r0 := @this: android.telephony.ServiceState;

        i0 := @parameter0: int;

        virtualinvoke r0.<android.telephony.ServiceState: void setVoiceRegState(int)>(i0);

        return;
    }

    public void setStateOff()
    {
        android.telephony.ServiceState r0;

        r0 := @this: android.telephony.ServiceState;

        specialinvoke r0.<android.telephony.ServiceState: void init()>();

        r0.<android.telephony.ServiceState: int mVoiceRegState> = 3;

        r0.<android.telephony.ServiceState: int mDataRegState> = 3;

        return;
    }

    public void setStateOutOfService()
    {
        android.telephony.ServiceState r0;

        r0 := @this: android.telephony.ServiceState;

        specialinvoke r0.<android.telephony.ServiceState: void init()>();

        return;
    }

    public void setVoiceRegState(int)
    {
        android.telephony.ServiceState r0;
        int i0;

        r0 := @this: android.telephony.ServiceState;

        i0 := @parameter0: int;

        r0.<android.telephony.ServiceState: int mVoiceRegState> = i0;

        return;
    }

    public void setVoiceRoaming(boolean)
    {
        android.telephony.ServiceState r0;
        boolean z0;
        int i0;

        r0 := @this: android.telephony.ServiceState;

        z0 := @parameter0: boolean;

        i0 = (int) z0;

        virtualinvoke r0.<android.telephony.ServiceState: void setVoiceRoamingType(int)>(i0);

        return;
    }

    public void setVoiceRoamingType(int)
    {
        android.telephony.ServiceState r0;
        int i0;
        android.telephony.NetworkRegistrationInfo r1, r5;
        android.telephony.NetworkRegistrationInfo$Builder $r2, $r3, $r4;

        r0 := @this: android.telephony.ServiceState;

        i0 := @parameter0: int;

        r1 = virtualinvoke r0.<android.telephony.ServiceState: android.telephony.NetworkRegistrationInfo getNetworkRegistrationInfo(int,int)>(1, 1);

        r5 = r1;

        if r1 != null goto label1;

        $r2 = new android.telephony.NetworkRegistrationInfo$Builder;

        specialinvoke $r2.<android.telephony.NetworkRegistrationInfo$Builder: void <init>()>();

        $r3 = virtualinvoke $r2.<android.telephony.NetworkRegistrationInfo$Builder: android.telephony.NetworkRegistrationInfo$Builder setDomain(int)>(1);

        $r4 = virtualinvoke $r3.<android.telephony.NetworkRegistrationInfo$Builder: android.telephony.NetworkRegistrationInfo$Builder setTransportType(int)>(1);

        r5 = virtualinvoke $r4.<android.telephony.NetworkRegistrationInfo$Builder: android.telephony.NetworkRegistrationInfo build()>();

     label1:
        virtualinvoke r5.<android.telephony.NetworkRegistrationInfo: void setRoamingType(int)>(i0);

        virtualinvoke r0.<android.telephony.ServiceState: void addNetworkRegistrationInfo(android.telephony.NetworkRegistrationInfo)>(r5);

        return;
    }

    public java.lang.String toString()
    {
        android.telephony.ServiceState r0;
        java.util.List r1, $r69;
        java.lang.StringBuilder r2, r85, r86, r88, r89;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15;
        java.lang.String $r6, $r9, $r14, $r17, $r25, $r28, $r31, $r39, $r42, $r47, $r50, $r74, $r77, r87, r90, r91;
        int[] $r24;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.lang.Throwable $r84;

        r0 := @this: android.telephony.ServiceState;

        r1 = r0.<android.telephony.ServiceState: java.util.List mNetworkRegistrationInfos>;

        entermonitor r1;

     label01:
        r2 = new java.lang.StringBuilder;

        specialinvoke r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("{mVoiceRegState=");

        $i0 = r0.<android.telephony.ServiceState: int mVoiceRegState>;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        r85 = new java.lang.StringBuilder;

        specialinvoke r85.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r85.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        $i1 = r0.<android.telephony.ServiceState: int mVoiceRegState>;

        $r6 = staticinvoke <android.telephony.ServiceState: java.lang.String rilServiceStateToString(int)>($i1);

        virtualinvoke r85.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        virtualinvoke r85.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r9 = virtualinvoke r85.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mDataRegState=");

        $i2 = r0.<android.telephony.ServiceState: int mDataRegState>;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        r86 = new java.lang.StringBuilder;

        specialinvoke r86.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r86.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        $i3 = r0.<android.telephony.ServiceState: int mDataRegState>;

        $r14 = staticinvoke <android.telephony.ServiceState: java.lang.String rilServiceStateToString(int)>($i3);

        virtualinvoke r86.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        virtualinvoke r86.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r17 = virtualinvoke r86.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mChannelNumber=");

        $i4 = r0.<android.telephony.ServiceState: int mChannelNumber>;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", duplexMode()=");

        $i5 = virtualinvoke r0.<android.telephony.ServiceState: int getDuplexMode()>();

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mCellBandwidths=");

        $r24 = r0.<android.telephony.ServiceState: int[] mCellBandwidths>;

        $r25 = staticinvoke <java.util.Arrays: java.lang.String toString(int[])>($r24);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mOperatorAlphaLong=");

        $r28 = r0.<android.telephony.ServiceState: java.lang.String mOperatorAlphaLong>;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mOperatorAlphaShort=");

        $r31 = r0.<android.telephony.ServiceState: java.lang.String mOperatorAlphaShort>;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", isManualNetworkSelection=");

        $z0 = r0.<android.telephony.ServiceState: boolean mIsManualNetworkSelection>;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $z1 = r0.<android.telephony.ServiceState: boolean mIsManualNetworkSelection>;

        if $z1 == 0 goto label03;

     label02:
        r87 = "(manual)";

        goto label04;

     label03:
        r87 = "(automatic)";

     label04:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r87);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", getRilVoiceRadioTechnology=");

        $i6 = virtualinvoke r0.<android.telephony.ServiceState: int getRilVoiceRadioTechnology()>();

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        r88 = new java.lang.StringBuilder;

        specialinvoke r88.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        $i7 = virtualinvoke r0.<android.telephony.ServiceState: int getRilVoiceRadioTechnology()>();

        $r39 = staticinvoke <android.telephony.ServiceState: java.lang.String rilRadioTechnologyToString(int)>($i7);

        virtualinvoke r88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r39);

        virtualinvoke r88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r42 = virtualinvoke r88.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r42);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", getRilDataRadioTechnology=");

        $i8 = virtualinvoke r0.<android.telephony.ServiceState: int getRilDataRadioTechnology()>();

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8);

        r89 = new java.lang.StringBuilder;

        specialinvoke r89.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r89.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        $i9 = virtualinvoke r0.<android.telephony.ServiceState: int getRilDataRadioTechnology()>();

        $r47 = staticinvoke <android.telephony.ServiceState: java.lang.String rilRadioTechnologyToString(int)>($i9);

        virtualinvoke r89.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r47);

        virtualinvoke r89.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r50 = virtualinvoke r89.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r50);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mCssIndicator=");

        $z2 = r0.<android.telephony.ServiceState: boolean mCssIndicator>;

        if $z2 == 0 goto label06;

     label05:
        r90 = "supported";

        goto label07;

     label06:
        r90 = "unsupported";

     label07:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r90);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mNetworkId=");

        $i10 = r0.<android.telephony.ServiceState: int mNetworkId>;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i10);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mSystemId=");

        $i11 = r0.<android.telephony.ServiceState: int mSystemId>;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i11);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mCdmaRoamingIndicator=");

        $i12 = r0.<android.telephony.ServiceState: int mCdmaRoamingIndicator>;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i12);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mCdmaDefaultRoamingIndicator=");

        $i13 = r0.<android.telephony.ServiceState: int mCdmaDefaultRoamingIndicator>;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i13);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mIsEmergencyOnly=");

        $z3 = r0.<android.telephony.ServiceState: boolean mIsEmergencyOnly>;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z3);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", isUsingCarrierAggregation=");

        $z4 = virtualinvoke r0.<android.telephony.ServiceState: boolean isUsingCarrierAggregation()>();

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z4);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mLteEarfcnRsrpBoost=");

        $i14 = r0.<android.telephony.ServiceState: int mLteEarfcnRsrpBoost>;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i14);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mNetworkRegistrationInfos=");

        $r69 = r0.<android.telephony.ServiceState: java.util.List mNetworkRegistrationInfos>;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r69);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mNrFrequencyRange=");

        $i15 = r0.<android.telephony.ServiceState: int mNrFrequencyRange>;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i15);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mOperatorAlphaLongRaw=");

        $r74 = r0.<android.telephony.ServiceState: java.lang.String mOperatorAlphaLongRaw>;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r74);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mOperatorAlphaShortRaw=");

        $r77 = r0.<android.telephony.ServiceState: java.lang.String mOperatorAlphaShortRaw>;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r77);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mIsDataRoamingFromRegistration=");

        $z5 = r0.<android.telephony.ServiceState: boolean mIsDataRoamingFromRegistration>;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z5);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mIsIwlanPreferred=");

        $z6 = r0.<android.telephony.ServiceState: boolean mIsIwlanPreferred>;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z6);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        r91 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        exitmonitor r1;

     label08:
        return r91;

     label09:
        $r84 := @caughtexception;

     label10:
        exitmonitor r1;

     label11:
        throw $r84;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label04 to label05 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.telephony.ServiceState r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, i12, i13, i14;
        java.util.List r1, $r5;
        java.lang.String $r2, $r3, $r4, $r7, $r8;
        boolean $z0, $z1, $z2, $z3, $z4;
        int[] $r6;
        java.lang.Throwable $r9;
        android.os.Parcel r10;

        r0 := @this: android.telephony.ServiceState;

        r10 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        $i1 = r0.<android.telephony.ServiceState: int mVoiceRegState>;

        virtualinvoke r10.<android.os.Parcel: void writeInt(int)>($i1);

        $i2 = r0.<android.telephony.ServiceState: int mDataRegState>;

        virtualinvoke r10.<android.os.Parcel: void writeInt(int)>($i2);

        $r2 = r0.<android.telephony.ServiceState: java.lang.String mOperatorAlphaLong>;

        virtualinvoke r10.<android.os.Parcel: void writeString(java.lang.String)>($r2);

        $r3 = r0.<android.telephony.ServiceState: java.lang.String mOperatorAlphaShort>;

        virtualinvoke r10.<android.os.Parcel: void writeString(java.lang.String)>($r3);

        $r4 = r0.<android.telephony.ServiceState: java.lang.String mOperatorNumeric>;

        virtualinvoke r10.<android.os.Parcel: void writeString(java.lang.String)>($r4);

        $z0 = r0.<android.telephony.ServiceState: boolean mIsManualNetworkSelection>;

        i12 = (int) $z0;

        virtualinvoke r10.<android.os.Parcel: void writeInt(int)>(i12);

        $z1 = r0.<android.telephony.ServiceState: boolean mCssIndicator>;

        i13 = (int) $z1;

        virtualinvoke r10.<android.os.Parcel: void writeInt(int)>(i13);

        $i3 = r0.<android.telephony.ServiceState: int mNetworkId>;

        virtualinvoke r10.<android.os.Parcel: void writeInt(int)>($i3);

        $i4 = r0.<android.telephony.ServiceState: int mSystemId>;

        virtualinvoke r10.<android.os.Parcel: void writeInt(int)>($i4);

        $i5 = r0.<android.telephony.ServiceState: int mCdmaRoamingIndicator>;

        virtualinvoke r10.<android.os.Parcel: void writeInt(int)>($i5);

        $i6 = r0.<android.telephony.ServiceState: int mCdmaDefaultRoamingIndicator>;

        virtualinvoke r10.<android.os.Parcel: void writeInt(int)>($i6);

        $i7 = r0.<android.telephony.ServiceState: int mCdmaEriIconIndex>;

        virtualinvoke r10.<android.os.Parcel: void writeInt(int)>($i7);

        $i8 = r0.<android.telephony.ServiceState: int mCdmaEriIconMode>;

        virtualinvoke r10.<android.os.Parcel: void writeInt(int)>($i8);

        $z2 = r0.<android.telephony.ServiceState: boolean mIsEmergencyOnly>;

        i14 = (int) $z2;

        virtualinvoke r10.<android.os.Parcel: void writeInt(int)>(i14);

        $i9 = r0.<android.telephony.ServiceState: int mLteEarfcnRsrpBoost>;

        virtualinvoke r10.<android.os.Parcel: void writeInt(int)>($i9);

        r1 = r0.<android.telephony.ServiceState: java.util.List mNetworkRegistrationInfos>;

        entermonitor r1;

     label1:
        $r5 = r0.<android.telephony.ServiceState: java.util.List mNetworkRegistrationInfos>;

        virtualinvoke r10.<android.os.Parcel: void writeList(java.util.List)>($r5);

        exitmonitor r1;

     label2:
        $i10 = r0.<android.telephony.ServiceState: int mChannelNumber>;

        virtualinvoke r10.<android.os.Parcel: void writeInt(int)>($i10);

        $r6 = r0.<android.telephony.ServiceState: int[] mCellBandwidths>;

        virtualinvoke r10.<android.os.Parcel: void writeIntArray(int[])>($r6);

        $i11 = r0.<android.telephony.ServiceState: int mNrFrequencyRange>;

        virtualinvoke r10.<android.os.Parcel: void writeInt(int)>($i11);

        $r7 = r0.<android.telephony.ServiceState: java.lang.String mOperatorAlphaLongRaw>;

        virtualinvoke r10.<android.os.Parcel: void writeString(java.lang.String)>($r7);

        $r8 = r0.<android.telephony.ServiceState: java.lang.String mOperatorAlphaShortRaw>;

        virtualinvoke r10.<android.os.Parcel: void writeString(java.lang.String)>($r8);

        $z3 = r0.<android.telephony.ServiceState: boolean mIsDataRoamingFromRegistration>;

        virtualinvoke r10.<android.os.Parcel: void writeBoolean(boolean)>($z3);

        $z4 = r0.<android.telephony.ServiceState: boolean mIsIwlanPreferred>;

        virtualinvoke r10.<android.os.Parcel: void writeBoolean(boolean)>($z4);

        return;

     label3:
        $r9 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r9;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }
}
