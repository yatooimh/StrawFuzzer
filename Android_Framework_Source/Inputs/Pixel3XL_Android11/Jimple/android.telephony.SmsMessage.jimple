public class android.telephony.SmsMessage extends java.lang.Object
{
    public static final int ENCODING_16BIT;
    public static final int ENCODING_7BIT;
    public static final int ENCODING_8BIT;
    public static final int ENCODING_KSC5601;
    public static final int ENCODING_UNKNOWN;
    public static final java.lang.String FORMAT_3GPP;
    public static final java.lang.String FORMAT_3GPP2;
    private static final java.lang.String LOG_TAG;
    public static final int MAX_USER_DATA_BYTES;
    public static final int MAX_USER_DATA_BYTES_WITH_HEADER;
    public static final int MAX_USER_DATA_SEPTETS;
    public static final int MAX_USER_DATA_SEPTETS_WITH_HEADER;
    private static boolean mIsNoEmsSupportConfigListLoaded;
    private static android.telephony.SmsMessage$NoEmsSupportConfig[] mNoEmsSupportConfigList;
    private int mSubId;
    public com.android.internal.telephony.SmsMessageBase mWrappedSmsMessage;

    static void <clinit>()
    {
        <android.telephony.SmsMessage: int MAX_USER_DATA_SEPTETS_WITH_HEADER> = 153;

        <android.telephony.SmsMessage: int MAX_USER_DATA_SEPTETS> = 160;

        <android.telephony.SmsMessage: int MAX_USER_DATA_BYTES_WITH_HEADER> = 134;

        <android.telephony.SmsMessage: int MAX_USER_DATA_BYTES> = 140;

        <android.telephony.SmsMessage: java.lang.String LOG_TAG> = "SmsMessage";

        <android.telephony.SmsMessage: java.lang.String FORMAT_3GPP2> = "3gpp2";

        <android.telephony.SmsMessage: java.lang.String FORMAT_3GPP> = "3gpp";

        <android.telephony.SmsMessage: int ENCODING_UNKNOWN> = 0;

        <android.telephony.SmsMessage: int ENCODING_KSC5601> = 4;

        <android.telephony.SmsMessage: int ENCODING_8BIT> = 2;

        <android.telephony.SmsMessage: int ENCODING_7BIT> = 1;

        <android.telephony.SmsMessage: int ENCODING_16BIT> = 3;

        <android.telephony.SmsMessage: android.telephony.SmsMessage$NoEmsSupportConfig[] mNoEmsSupportConfigList> = null;

        <android.telephony.SmsMessage: boolean mIsNoEmsSupportConfigListLoaded> = 0;

        return;
    }

    public void <init>(com.android.internal.telephony.SmsMessageBase)
    {
        android.telephony.SmsMessage r0;
        com.android.internal.telephony.SmsMessageBase r1;

        r0 := @this: android.telephony.SmsMessage;

        r1 := @parameter0: com.android.internal.telephony.SmsMessageBase;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.telephony.SmsMessage: int mSubId> = 0;

        r0.<android.telephony.SmsMessage: com.android.internal.telephony.SmsMessageBase mWrappedSmsMessage> = r1;

        return;
    }

    public static int[] calculateLength(java.lang.CharSequence, boolean)
    {
        java.lang.CharSequence r0;
        boolean z0;
        int $i0;
        int[] $r1;

        r0 := @parameter0: java.lang.CharSequence;

        z0 := @parameter1: boolean;

        $i0 = staticinvoke <android.telephony.SmsManager: int getDefaultSmsSubscriptionId()>();

        $r1 = staticinvoke <android.telephony.SmsMessage: int[] calculateLength(java.lang.CharSequence,boolean,int)>(r0, z0, $i0);

        return $r1;
    }

    public static int[] calculateLength(java.lang.CharSequence, boolean, int)
    {
        boolean z0, $z1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6;
        int[] $r0;
        java.lang.CharSequence r1;
        com.android.internal.telephony.GsmAlphabet$TextEncodingDetails r2;

        r1 := @parameter0: java.lang.CharSequence;

        z0 := @parameter1: boolean;

        i0 := @parameter2: int;

        $z1 = staticinvoke <android.telephony.SmsMessage: boolean useCdmaFormatForMoSms(int)>(i0);

        if $z1 == 0 goto label1;

        r2 = staticinvoke <com.android.internal.telephony.cdma.SmsMessage: com.android.internal.telephony.GsmAlphabet$TextEncodingDetails calculateLength(java.lang.CharSequence,boolean,boolean)>(r1, z0, 1);

        goto label2;

     label1:
        r2 = staticinvoke <com.android.internal.telephony.gsm.SmsMessage: com.android.internal.telephony.GsmAlphabet$TextEncodingDetails calculateLength(java.lang.CharSequence,boolean)>(r1, z0);

     label2:
        $r0 = newarray (int)[6];

        $i1 = r2.<com.android.internal.telephony.GsmAlphabet$TextEncodingDetails: int msgCount>;

        $r0[0] = $i1;

        $i2 = r2.<com.android.internal.telephony.GsmAlphabet$TextEncodingDetails: int codeUnitCount>;

        $r0[1] = $i2;

        $i3 = r2.<com.android.internal.telephony.GsmAlphabet$TextEncodingDetails: int codeUnitsRemaining>;

        $r0[2] = $i3;

        $i4 = r2.<com.android.internal.telephony.GsmAlphabet$TextEncodingDetails: int codeUnitSize>;

        $r0[3] = $i4;

        $i5 = r2.<com.android.internal.telephony.GsmAlphabet$TextEncodingDetails: int languageTable>;

        $r0[4] = $i5;

        $i6 = r2.<com.android.internal.telephony.GsmAlphabet$TextEncodingDetails: int languageShiftTable>;

        $r0[5] = $i6;

        return $r0;
    }

    public static int[] calculateLength(java.lang.String, boolean)
    {
        java.lang.String r0;
        boolean z0;
        int[] $r1;

        r0 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $r1 = staticinvoke <android.telephony.SmsMessage: int[] calculateLength(java.lang.CharSequence,boolean)>(r0, z0);

        return $r1;
    }

    public static int[] calculateLength(java.lang.String, boolean, int)
    {
        java.lang.String r0;
        boolean z0;
        int i0;
        int[] $r1;

        r0 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        i0 := @parameter2: int;

        $r1 = staticinvoke <android.telephony.SmsMessage: int[] calculateLength(java.lang.CharSequence,boolean,int)>(r0, z0, i0);

        return $r1;
    }

    public static android.telephony.SmsMessage createFromEfRecord(int, byte[])
    {
        int i0, $i1;
        byte[] r0;
        android.telephony.SmsMessage $r1;

        i0 := @parameter0: int;

        r0 := @parameter1: byte[];

        $i1 = staticinvoke <android.telephony.SmsManager: int getDefaultSmsSubscriptionId()>();

        $r1 = staticinvoke <android.telephony.SmsMessage: android.telephony.SmsMessage createFromEfRecord(int,byte[],int)>(i0, r0, $i1);

        return $r1;
    }

    public static android.telephony.SmsMessage createFromEfRecord(int, byte[], int)
    {
        int i0, i1;
        boolean $z0;
        android.telephony.SmsMessage $r0, r3;
        byte[] r1;
        com.android.internal.telephony.SmsMessageBase r2;

        i0 := @parameter0: int;

        r1 := @parameter1: byte[];

        i1 := @parameter2: int;

        $z0 = staticinvoke <android.telephony.SmsMessage: boolean isCdmaVoice(int)>(i1);

        if $z0 == 0 goto label1;

        r2 = staticinvoke <com.android.internal.telephony.cdma.SmsMessage: com.android.internal.telephony.cdma.SmsMessage createFromEfRecord(int,byte[])>(i0, r1);

        goto label2;

     label1:
        r2 = staticinvoke <com.android.internal.telephony.gsm.SmsMessage: com.android.internal.telephony.gsm.SmsMessage createFromEfRecord(int,byte[])>(i0, r1);

     label2:
        if r2 == null goto label3;

        $r0 = new android.telephony.SmsMessage;

        specialinvoke $r0.<android.telephony.SmsMessage: void <init>(com.android.internal.telephony.SmsMessageBase)>(r2);

        r3 = $r0;

        goto label4;

     label3:
        r3 = null;

     label4:
        return r3;
    }

    public static android.telephony.SmsMessage createFromNativeSmsSubmitPdu(byte[], boolean)
    {
        boolean z0;
        android.telephony.SmsMessage $r0, r3;
        byte[] r1;
        com.android.internal.telephony.SmsMessageBase r2;

        r1 := @parameter0: byte[];

        z0 := @parameter1: boolean;

        if z0 == 0 goto label1;

        r2 = staticinvoke <com.android.internal.telephony.cdma.SmsMessage: com.android.internal.telephony.cdma.SmsMessage createFromEfRecord(int,byte[])>(0, r1);

        goto label2;

     label1:
        r2 = staticinvoke <com.android.internal.telephony.gsm.SmsMessage: com.android.internal.telephony.gsm.SmsMessage createFromEfRecord(int,byte[])>(0, r1);

     label2:
        if r2 == null goto label3;

        $r0 = new android.telephony.SmsMessage;

        specialinvoke $r0.<android.telephony.SmsMessage: void <init>(com.android.internal.telephony.SmsMessageBase)>(r2);

        r3 = $r0;

        goto label4;

     label3:
        r3 = null;

     label4:
        return r3;
    }

    public static android.telephony.SmsMessage createFromPdu(byte[])
    {
        byte[] r0;
        android.telephony.TelephonyManager $r1;
        int $i0;
        android.telephony.SmsMessage $r2;
        java.lang.String r3;

        r0 := @parameter0: byte[];

        $r1 = staticinvoke <android.telephony.TelephonyManager: android.telephony.TelephonyManager getDefault()>();

        $i0 = virtualinvoke $r1.<android.telephony.TelephonyManager: int getCurrentPhoneType()>();

        if 2 != $i0 goto label1;

        r3 = "3gpp2";

        goto label2;

     label1:
        r3 = "3gpp";

     label2:
        $r2 = staticinvoke <android.telephony.SmsMessage: android.telephony.SmsMessage createFromPdu(byte[],java.lang.String)>(r0, r3);

        return $r2;
    }

    public static android.telephony.SmsMessage createFromPdu(byte[], java.lang.String)
    {
        byte[] r0;
        java.lang.String r1;
        android.telephony.SmsMessage $r2;

        r0 := @parameter0: byte[];

        r1 := @parameter1: java.lang.String;

        $r2 = staticinvoke <android.telephony.SmsMessage: android.telephony.SmsMessage createFromPdu(byte[],java.lang.String,boolean)>(r0, r1, 1);

        return $r2;
    }

    private static android.telephony.SmsMessage createFromPdu(byte[], java.lang.String, boolean)
    {
        boolean z0, $z1, $z2, $z3;
        java.lang.String $r0, $r1, $r2, $r6, r10, r11;
        java.lang.StringBuilder $r3;
        android.telephony.SmsMessage $r7, $r8;
        byte[] r9;
        com.android.internal.telephony.SmsMessageBase r12;

        r9 := @parameter0: byte[];

        r10 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        if r9 != null goto label1;

        staticinvoke <com.android.telephony.Rlog: int i(java.lang.String,java.lang.String)>("SmsMessage", "createFromPdu(): pdu is null");

        return null;

     label1:
        $r0 = "3gpp2";

        $z1 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>(r10);

        if $z1 == 0 goto label2;

        r11 = "3gpp";

        goto label3;

     label2:
        r11 = "3gpp2";

     label3:
        $r1 = "3gpp2";

        $z2 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r10);

        if $z2 == 0 goto label4;

        r12 = staticinvoke <com.android.internal.telephony.cdma.SmsMessage: com.android.internal.telephony.cdma.SmsMessage createFromPdu(byte[])>(r9);

        goto label5;

     label4:
        $r2 = "3gpp";

        $z3 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r10);

        if $z3 == 0 goto label8;

        r12 = staticinvoke <com.android.internal.telephony.gsm.SmsMessage: com.android.internal.telephony.gsm.SmsMessage createFromPdu(byte[])>(r9);

     label5:
        if r12 == null goto label6;

        $r8 = new android.telephony.SmsMessage;

        specialinvoke $r8.<android.telephony.SmsMessage: void <init>(com.android.internal.telephony.SmsMessageBase)>(r12);

        return $r8;

     label6:
        if z0 == 0 goto label7;

        $r7 = staticinvoke <android.telephony.SmsMessage: android.telephony.SmsMessage createFromPdu(byte[],java.lang.String,boolean)>(r9, r11, 0);

        return $r7;

     label7:
        staticinvoke <com.android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("SmsMessage", "createFromPdu(): wrappedMessage is null");

        return null;

     label8:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("createFromPdu(): unsupported message format ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("SmsMessage", $r6);

        return null;
    }

    public static java.util.ArrayList fragmentText(java.lang.String)
    {
        java.lang.String r0;
        int $i0;
        java.util.ArrayList $r1;

        r0 := @parameter0: java.lang.String;

        $i0 = staticinvoke <android.telephony.SmsManager: int getDefaultSmsSubscriptionId()>();

        $r1 = staticinvoke <android.telephony.SmsMessage: java.util.ArrayList fragmentText(java.lang.String,int)>(r0, $i0);

        return $r1;
    }

    public static java.util.ArrayList fragmentText(java.lang.String, int)
    {
        boolean z0, $z1, $z3, $z4;
        int i0, $i1, $i2, $i3, $i4, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, i16, i18, $i19, i20, i21, i23, i24;
        java.util.ArrayList $r0;
        java.lang.StringBuilder $r1;
        java.lang.String $r11, $r12, r13, r15, r17;
        com.android.internal.telephony.GsmAlphabet$TextEncodingDetails r14;
        byte b17;
        android.content.res.Resources $r16;

        r13 := @parameter0: java.lang.String;

        i16 := @parameter1: int;

        z0 = staticinvoke <android.telephony.SmsMessage: boolean useCdmaFormatForMoSms(int)>(i16);

        if z0 == 0 goto label01;

        r14 = staticinvoke <com.android.internal.telephony.cdma.SmsMessage: com.android.internal.telephony.GsmAlphabet$TextEncodingDetails calculateLength(java.lang.CharSequence,boolean,boolean)>(r13, 0, 1);

        goto label02;

     label01:
        r14 = staticinvoke <com.android.internal.telephony.gsm.SmsMessage: com.android.internal.telephony.GsmAlphabet$TextEncodingDetails calculateLength(java.lang.CharSequence,boolean)>(r13, 0);

     label02:
        $i1 = r14.<com.android.internal.telephony.GsmAlphabet$TextEncodingDetails: int codeUnitSize>;

        if $i1 != 1 goto label09;

        $i12 = r14.<com.android.internal.telephony.GsmAlphabet$TextEncodingDetails: int languageTable>;

        if $i12 == 0 goto label03;

        $i15 = r14.<com.android.internal.telephony.GsmAlphabet$TextEncodingDetails: int languageShiftTable>;

        if $i15 == 0 goto label03;

        b17 = 7;

        goto label06;

     label03:
        $i13 = r14.<com.android.internal.telephony.GsmAlphabet$TextEncodingDetails: int languageTable>;

        if $i13 != 0 goto label05;

        $i14 = r14.<com.android.internal.telephony.GsmAlphabet$TextEncodingDetails: int languageShiftTable>;

        if $i14 == 0 goto label04;

        goto label05;

     label04:
        b17 = 0;

        goto label06;

     label05:
        b17 = 4;

     label06:
        i18 = b17;

        $i19 = r14.<com.android.internal.telephony.GsmAlphabet$TextEncodingDetails: int msgCount>;

        if $i19 <= 1 goto label07;

        i18 = b17 + 6;

     label07:
        i20 = i18;

        if i18 == 0 goto label08;

        i20 = i18 + 1;

     label08:
        i21 = 160 - i20;

        goto label11;

     label09:
        $i2 = r14.<com.android.internal.telephony.GsmAlphabet$TextEncodingDetails: int msgCount>;

        if $i2 <= 1 goto label10;

        i21 = 134;

        $z3 = staticinvoke <android.telephony.SmsMessage: boolean hasEmsSupport()>();

        if $z3 != 0 goto label11;

        i21 = 134;

        $i11 = r14.<com.android.internal.telephony.GsmAlphabet$TextEncodingDetails: int msgCount>;

        if $i11 >= 10 goto label11;

        i21 = 134 - 2;

        goto label11;

     label10:
        i21 = 140;

     label11:
        r15 = null;

        $r16 = staticinvoke <android.content.res.Resources: android.content.res.Resources getSystem()>();

        $z4 = virtualinvoke $r16.<android.content.res.Resources: boolean getBoolean(int)>(17891535);

        if $z4 == 0 goto label12;

        r15 = staticinvoke <com.android.internal.telephony.Sms7BitEncodingTranslator: java.lang.String translate(java.lang.CharSequence,boolean)>(r13, z0);

     label12:
        r17 = r15;

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r15);

        if $z1 == 0 goto label13;

        r17 = r13;

     label13:
        i23 = 0;

        i0 = virtualinvoke r17.<java.lang.String: int length()>();

        $r0 = new java.util.ArrayList;

        $i3 = r14.<com.android.internal.telephony.GsmAlphabet$TextEncodingDetails: int msgCount>;

        specialinvoke $r0.<java.util.ArrayList: void <init>(int)>($i3);

     label14:
        if i23 >= i0 goto label20;

        $i4 = r14.<com.android.internal.telephony.GsmAlphabet$TextEncodingDetails: int codeUnitSize>;

        if $i4 != 1 goto label16;

        if z0 == 0 goto label15;

        $i8 = r14.<com.android.internal.telephony.GsmAlphabet$TextEncodingDetails: int msgCount>;

        if $i8 != 1 goto label15;

        $i9 = i0 - i23;

        $i10 = staticinvoke <java.lang.Math: int min(int,int)>(i21, $i9);

        i24 = $i10 + i23;

        goto label17;

     label15:
        $i7 = r14.<com.android.internal.telephony.GsmAlphabet$TextEncodingDetails: int languageTable>;

        $i6 = r14.<com.android.internal.telephony.GsmAlphabet$TextEncodingDetails: int languageShiftTable>;

        i24 = staticinvoke <com.android.internal.telephony.GsmAlphabet: int findGsmSeptetLimitIndex(java.lang.String,int,int,int,int)>(r17, i23, i21, $i7, $i6);

        goto label17;

     label16:
        i24 = staticinvoke <com.android.internal.telephony.SmsMessageBase: int findNextUnicodePosition(int,int,java.lang.CharSequence)>(i23, i21, r17);

     label17:
        if i24 <= i23 goto label19;

        if i24 <= i0 goto label18;

        goto label19;

     label18:
        $r12 = virtualinvoke r17.<java.lang.String: java.lang.String substring(int,int)>(i23, i24);

        virtualinvoke $r0.<java.util.ArrayList: boolean add(java.lang.Object)>($r12);

        i23 = i24;

        goto label14;

     label19:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("fragmentText failed (");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i23);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" >= ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i24);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" or ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i24);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" >= ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r11 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("SmsMessage", $r11);

     label20:
        return $r0;
    }

    public static android.telephony.SmsMessage$SubmitPdu getSmsPdu(int, int, java.lang.String, java.lang.String, java.lang.String, long)
    {
        int i0, i1;
        java.lang.String r0, r2, r3;
        long l2;
        boolean z0;
        android.telephony.SmsMessage$SubmitPdu $r1, r5;
        com.android.internal.telephony.SmsMessageBase$SubmitPduBase r4;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        r0 := @parameter4: java.lang.String;

        l2 := @parameter5: long;

        z0 = staticinvoke <android.telephony.SmsMessage: boolean isCdmaVoice(int)>(i0);

        if z0 == 0 goto label3;

        if i1 == 1 goto label2;

        if i1 != 3 goto label1;

        goto label2;

     label1:
        r4 = staticinvoke <com.android.internal.telephony.cdma.SmsMessage: com.android.internal.telephony.cdma.SmsMessage$SubmitPdu getSubmitPdu(java.lang.String,java.lang.String,java.lang.String,boolean,com.android.internal.telephony.SmsHeader)>(r2, r3, r0, 0, null);

        goto label6;

     label2:
        r4 = staticinvoke <com.android.internal.telephony.cdma.SmsMessage: com.android.internal.telephony.cdma.SmsMessage$SubmitPdu getDeliverPdu(java.lang.String,java.lang.String,long)>(r3, r0, l2);

        goto label6;

     label3:
        if i1 == 1 goto label5;

        if i1 != 3 goto label4;

        goto label5;

     label4:
        r4 = staticinvoke <com.android.internal.telephony.gsm.SmsMessage: com.android.internal.telephony.gsm.SmsMessage$SubmitPdu getSubmitPdu(java.lang.String,java.lang.String,java.lang.String,boolean,byte[])>(r2, r3, r0, 0, null);

        goto label6;

     label5:
        r4 = staticinvoke <com.android.internal.telephony.gsm.SmsMessage: com.android.internal.telephony.gsm.SmsMessage$SubmitPdu getDeliverPdu(java.lang.String,java.lang.String,java.lang.String,long)>(r2, r3, r0, l2);

     label6:
        r5 = null;

        if r4 == null goto label7;

        $r1 = new android.telephony.SmsMessage$SubmitPdu;

        specialinvoke $r1.<android.telephony.SmsMessage$SubmitPdu: void <init>(com.android.internal.telephony.SmsMessageBase$SubmitPduBase)>(r4);

        r5 = $r1;

     label7:
        return r5;
    }

    public static android.telephony.SmsMessage$SubmitPdu getSubmitPdu(java.lang.String, java.lang.String, java.lang.String, boolean)
    {
        java.lang.String r0, r1, r2;
        boolean z0;
        int $i0;
        android.telephony.SmsMessage$SubmitPdu $r3;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        z0 := @parameter3: boolean;

        $i0 = staticinvoke <android.telephony.SmsManager: int getDefaultSmsSubscriptionId()>();

        $r3 = staticinvoke <android.telephony.SmsMessage: android.telephony.SmsMessage$SubmitPdu getSubmitPdu(java.lang.String,java.lang.String,java.lang.String,boolean,int)>(r0, r1, r2, z0, $i0);

        return $r3;
    }

    public static android.telephony.SmsMessage$SubmitPdu getSubmitPdu(java.lang.String, java.lang.String, java.lang.String, boolean, int)
    {
        java.lang.String r0, r2, r3;
        boolean z0, z1;
        int i0;
        android.telephony.SmsMessage$SubmitPdu $r1, r5;
        com.android.internal.telephony.SmsMessageBase$SubmitPduBase r4;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        r0 := @parameter2: java.lang.String;

        z0 := @parameter3: boolean;

        i0 := @parameter4: int;

        z1 = staticinvoke <android.telephony.SmsMessage: boolean useCdmaFormatForMoSms(int)>(i0);

        if z1 == 0 goto label1;

        r4 = staticinvoke <com.android.internal.telephony.cdma.SmsMessage: com.android.internal.telephony.cdma.SmsMessage$SubmitPdu getSubmitPdu(java.lang.String,java.lang.String,java.lang.String,boolean,com.android.internal.telephony.SmsHeader)>(r2, r3, r0, z0, null);

        goto label2;

     label1:
        r4 = staticinvoke <com.android.internal.telephony.gsm.SmsMessage: com.android.internal.telephony.gsm.SmsMessage$SubmitPdu getSubmitPdu(java.lang.String,java.lang.String,java.lang.String,boolean)>(r2, r3, r0, z0);

     label2:
        r5 = null;

        if r4 == null goto label3;

        $r1 = new android.telephony.SmsMessage$SubmitPdu;

        specialinvoke $r1.<android.telephony.SmsMessage$SubmitPdu: void <init>(com.android.internal.telephony.SmsMessageBase$SubmitPduBase)>(r4);

        r5 = $r1;

     label3:
        return r5;
    }

    public static android.telephony.SmsMessage$SubmitPdu getSubmitPdu(java.lang.String, java.lang.String, short, byte[], boolean)
    {
        java.lang.String r0, r3;
        short s0;
        byte[] r1;
        boolean z0, $z1;
        android.telephony.SmsMessage$SubmitPdu $r2, r5;
        com.android.internal.telephony.SmsMessageBase$SubmitPduBase r4;

        r3 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.String;

        s0 := @parameter2: short;

        r1 := @parameter3: byte[];

        z0 := @parameter4: boolean;

        $z1 = staticinvoke <android.telephony.SmsMessage: boolean useCdmaFormatForMoSms()>();

        if $z1 == 0 goto label1;

        r4 = staticinvoke <com.android.internal.telephony.cdma.SmsMessage: com.android.internal.telephony.cdma.SmsMessage$SubmitPdu getSubmitPdu(java.lang.String,java.lang.String,int,byte[],boolean)>(r3, r0, s0, r1, z0);

        goto label2;

     label1:
        r4 = staticinvoke <com.android.internal.telephony.gsm.SmsMessage: com.android.internal.telephony.gsm.SmsMessage$SubmitPdu getSubmitPdu(java.lang.String,java.lang.String,int,byte[],boolean)>(r3, r0, s0, r1, z0);

     label2:
        if r4 == null goto label3;

        $r2 = new android.telephony.SmsMessage$SubmitPdu;

        specialinvoke $r2.<android.telephony.SmsMessage$SubmitPdu: void <init>(com.android.internal.telephony.SmsMessageBase$SubmitPduBase)>(r4);

        r5 = $r2;

        goto label4;

     label3:
        r5 = null;

     label4:
        return r5;
    }

    public static byte[] getSubmitPduEncodedMessage(boolean, java.lang.String, java.lang.String, int, int, int, int, int, int)
    {
        boolean z0;
        java.lang.String r0, r9;
        int i0, i1, i2, i3, i4, i5;
        com.android.internal.telephony.SmsHeader$ConcatRef $r2;
        com.android.internal.telephony.SmsHeader $r3;
        com.android.internal.telephony.cdma.sms.UserData $r4;
        com.android.internal.telephony.cdma.SmsMessage$SubmitPdu $r5;
        byte[] $r6, $r7, r11;
        com.android.internal.telephony.gsm.SmsMessage$SubmitPdu $r8;

        z0 := @parameter0: boolean;

        r9 := @parameter1: java.lang.String;

        r0 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        i2 := @parameter5: int;

        i3 := @parameter6: int;

        i4 := @parameter7: int;

        i5 := @parameter8: int;

        $r2 = new com.android.internal.telephony.SmsHeader$ConcatRef;

        specialinvoke $r2.<com.android.internal.telephony.SmsHeader$ConcatRef: void <init>()>();

        $r2.<com.android.internal.telephony.SmsHeader$ConcatRef: int refNumber> = i3;

        $r2.<com.android.internal.telephony.SmsHeader$ConcatRef: int seqNumber> = i4;

        $r2.<com.android.internal.telephony.SmsHeader$ConcatRef: int msgCount> = i5;

        $r2.<com.android.internal.telephony.SmsHeader$ConcatRef: boolean isEightBits> = 1;

        $r3 = new com.android.internal.telephony.SmsHeader;

        specialinvoke $r3.<com.android.internal.telephony.SmsHeader: void <init>()>();

        $r3.<com.android.internal.telephony.SmsHeader: com.android.internal.telephony.SmsHeader$ConcatRef concatRef> = $r2;

        if i0 != 1 goto label1;

        $r3.<com.android.internal.telephony.SmsHeader: int languageTable> = i1;

        $r3.<com.android.internal.telephony.SmsHeader: int languageShiftTable> = i2;

        goto label1;

     label1:
        if z0 == 0 goto label2;

        $r7 = staticinvoke <com.android.internal.telephony.SmsHeader: byte[] toByteArray(com.android.internal.telephony.SmsHeader)>($r3);

        $r8 = staticinvoke <com.android.internal.telephony.gsm.SmsMessage: com.android.internal.telephony.gsm.SmsMessage$SubmitPdu getSubmitPdu(java.lang.String,java.lang.String,java.lang.String,boolean,byte[],int,int,int)>(null, r9, r0, 0, $r7, i0, i1, i2);

        r11 = $r8.<com.android.internal.telephony.gsm.SmsMessage$SubmitPdu: byte[] encodedMessage>;

        goto label5;

     label2:
        $r4 = new com.android.internal.telephony.cdma.sms.UserData;

        specialinvoke $r4.<com.android.internal.telephony.cdma.sms.UserData: void <init>()>();

        $r4.<com.android.internal.telephony.cdma.sms.UserData: java.lang.String payloadStr> = r0;

        $r4.<com.android.internal.telephony.cdma.sms.UserData: com.android.internal.telephony.SmsHeader userDataHeader> = $r3;

        if i0 != 1 goto label3;

        $r4.<com.android.internal.telephony.cdma.sms.UserData: int msgEncoding> = 9;

        goto label4;

     label3:
        $r4.<com.android.internal.telephony.cdma.sms.UserData: int msgEncoding> = 4;

     label4:
        $r4.<com.android.internal.telephony.cdma.sms.UserData: boolean msgEncodingSet> = 1;

        $r5 = staticinvoke <com.android.internal.telephony.cdma.SmsMessage: com.android.internal.telephony.cdma.SmsMessage$SubmitPdu getSubmitPdu(java.lang.String,com.android.internal.telephony.cdma.sms.UserData,boolean)>(r9, $r4, 0);

        r11 = $r5.<com.android.internal.telephony.cdma.SmsMessage$SubmitPdu: byte[] encodedMessage>;

     label5:
        if r11 != null goto label6;

        $r6 = newarray (byte)[0];

        return $r6;

     label6:
        return r11;
    }

    public static int getTPLayerLengthForPDU(java.lang.String)
    {
        java.lang.String r0;
        boolean $z0;
        int $i0, $i1;

        r0 := @parameter0: java.lang.String;

        $z0 = staticinvoke <android.telephony.SmsMessage: boolean isCdmaVoice()>();

        if $z0 == 0 goto label1;

        $i1 = staticinvoke <com.android.internal.telephony.cdma.SmsMessage: int getTPLayerLengthForPDU(java.lang.String)>(r0);

        return $i1;

     label1:
        $i0 = staticinvoke <com.android.internal.telephony.gsm.SmsMessage: int getTPLayerLengthForPDU(java.lang.String)>(r0);

        return $i0;
    }

    public static boolean hasEmsSupport()
    {
        long l0;
        java.lang.String r0, $r5, $r6, $r7, $r8, r10;
        android.telephony.SmsMessage$NoEmsSupportConfig[] r1;
        int i1, i2;
        android.telephony.SmsMessage$NoEmsSupportConfig r2;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        android.telephony.TelephonyManager $r3, $r4;
        java.lang.Throwable $r9;

        $z0 = staticinvoke <android.telephony.SmsMessage: boolean isNoEmsSupportConfigListExisted()>();

        if $z0 != 0 goto label1;

        return 1;

     label1:
        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label2:
        $r3 = staticinvoke <android.telephony.TelephonyManager: android.telephony.TelephonyManager getDefault()>();

        r0 = virtualinvoke $r3.<android.telephony.TelephonyManager: java.lang.String getSimOperatorNumeric()>();

        $r4 = staticinvoke <android.telephony.TelephonyManager: android.telephony.TelephonyManager getDefault()>();

        r10 = virtualinvoke $r4.<android.telephony.TelephonyManager: java.lang.String getGroupIdLevel1()>();

     label3:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r0);

        if $z1 != 0 goto label7;

        r1 = <android.telephony.SmsMessage: android.telephony.SmsMessage$NoEmsSupportConfig[] mNoEmsSupportConfigList>;

        i1 = lengthof r1;

        i2 = 0;

     label4:
        if i2 >= i1 goto label7;

        r2 = r1[i2];

        $r5 = r2.<android.telephony.SmsMessage$NoEmsSupportConfig: java.lang.String mOperatorNumber>;

        $z2 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>($r5);

        if $z2 == 0 goto label6;

        $r6 = r2.<android.telephony.SmsMessage$NoEmsSupportConfig: java.lang.String mGid1>;

        $z3 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r6);

        if $z3 != 0 goto label5;

        $r7 = r2.<android.telephony.SmsMessage$NoEmsSupportConfig: java.lang.String mGid1>;

        $z4 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r7);

        if $z4 != 0 goto label6;

        $r8 = r2.<android.telephony.SmsMessage$NoEmsSupportConfig: java.lang.String mGid1>;

        $z5 = virtualinvoke $r8.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r10);

        if $z5 == 0 goto label6;

     label5:
        return 0;

     label6:
        i2 = i2 + 1;

        goto label4;

     label7:
        return 1;

     label8:
        $r9 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r9;

        catch java.lang.Throwable from label2 to label3 with label8;
    }

    private static boolean isCdmaVoice()
    {
        int $i0;
        boolean $z0;

        $i0 = staticinvoke <android.telephony.SmsManager: int getDefaultSmsSubscriptionId()>();

        $z0 = staticinvoke <android.telephony.SmsMessage: boolean isCdmaVoice(int)>($i0);

        return $z0;
    }

    private static boolean isCdmaVoice(int)
    {
        int i0, $i1;
        android.telephony.TelephonyManager $r0;
        boolean z0;

        i0 := @parameter0: int;

        $r0 = staticinvoke <android.telephony.TelephonyManager: android.telephony.TelephonyManager getDefault()>();

        $i1 = virtualinvoke $r0.<android.telephony.TelephonyManager: int getCurrentPhoneType(int)>(i0);

        if 2 != $i1 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    private static boolean isNoEmsSupportConfigListExisted()
    {
        boolean $z0;
        int $i0, $i1, $i2, $i3, i4;
        android.telephony.SmsMessage$NoEmsSupportConfig[] $r0, $r3, r7;
        android.telephony.SmsMessage$NoEmsSupportConfig $r1;
        java.lang.String $r2;
        java.lang.String[] $r4, r6;
        android.content.res.Resources r5;

        $z0 = <android.telephony.SmsMessage: boolean mIsNoEmsSupportConfigListLoaded>;

        if $z0 != 0 goto label3;

        r5 = staticinvoke <android.content.res.Resources: android.content.res.Resources getSystem()>();

        if r5 == null goto label3;

        r6 = virtualinvoke r5.<android.content.res.Resources: java.lang.String[] getStringArray(int)>(17236111);

        if r6 == null goto label2;

        $i1 = lengthof r6;

        if $i1 <= 0 goto label2;

        $i2 = lengthof r6;

        $r0 = newarray (android.telephony.SmsMessage$NoEmsSupportConfig)[$i2];

        <android.telephony.SmsMessage: android.telephony.SmsMessage$NoEmsSupportConfig[] mNoEmsSupportConfigList> = $r0;

        i4 = 0;

     label1:
        $i3 = lengthof r6;

        if i4 >= $i3 goto label2;

        $r3 = <android.telephony.SmsMessage: android.telephony.SmsMessage$NoEmsSupportConfig[] mNoEmsSupportConfigList>;

        $r1 = new android.telephony.SmsMessage$NoEmsSupportConfig;

        $r2 = r6[i4];

        $r4 = virtualinvoke $r2.<java.lang.String: java.lang.String[] split(java.lang.String)>(";");

        specialinvoke $r1.<android.telephony.SmsMessage$NoEmsSupportConfig: void <init>(java.lang.String[])>($r4);

        $r3[i4] = $r1;

        i4 = i4 + 1;

        goto label1;

     label2:
        <android.telephony.SmsMessage: boolean mIsNoEmsSupportConfigListLoaded> = 1;

     label3:
        r7 = <android.telephony.SmsMessage: android.telephony.SmsMessage$NoEmsSupportConfig[] mNoEmsSupportConfigList>;

        if r7 == null goto label4;

        $i0 = lengthof r7;

        if $i0 == 0 goto label4;

        return 1;

     label4:
        return 0;
    }

    public static android.telephony.SmsMessage newFromCMT(byte[])
    {
        android.telephony.SmsMessage $r0;
        byte[] r1;
        com.android.internal.telephony.gsm.SmsMessage r2;

        r1 := @parameter0: byte[];

        r2 = staticinvoke <com.android.internal.telephony.gsm.SmsMessage: com.android.internal.telephony.gsm.SmsMessage newFromCMT(byte[])>(r1);

        if r2 == null goto label1;

        $r0 = new android.telephony.SmsMessage;

        specialinvoke $r0.<android.telephony.SmsMessage: void <init>(com.android.internal.telephony.SmsMessageBase)>(r2);

        return $r0;

     label1:
        staticinvoke <com.android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("SmsMessage", "newFromCMT(): wrappedMessage is null");

        return null;
    }

    public static boolean shouldAppendPageNumberAsPrefix()
    {
        long l0;
        java.lang.String r0, r1, $r5, $r6, $r7, $r8;
        int i1, i2;
        android.telephony.SmsMessage$NoEmsSupportConfig r2;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        android.telephony.TelephonyManager $r3, $r4;
        java.lang.Throwable $r9;
        android.telephony.SmsMessage$NoEmsSupportConfig[] r10;

        $z0 = staticinvoke <android.telephony.SmsMessage: boolean isNoEmsSupportConfigListExisted()>();

        if $z0 != 0 goto label1;

        return 0;

     label1:
        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label2:
        $r3 = staticinvoke <android.telephony.TelephonyManager: android.telephony.TelephonyManager getDefault()>();

        r0 = virtualinvoke $r3.<android.telephony.TelephonyManager: java.lang.String getSimOperatorNumeric()>();

        $r4 = staticinvoke <android.telephony.TelephonyManager: android.telephony.TelephonyManager getDefault()>();

        r1 = virtualinvoke $r4.<android.telephony.TelephonyManager: java.lang.String getGroupIdLevel1()>();

     label3:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        r10 = <android.telephony.SmsMessage: android.telephony.SmsMessage$NoEmsSupportConfig[] mNoEmsSupportConfigList>;

        i1 = lengthof r10;

        i2 = 0;

     label4:
        if i2 >= i1 goto label7;

        r2 = r10[i2];

        $r5 = r2.<android.telephony.SmsMessage$NoEmsSupportConfig: java.lang.String mOperatorNumber>;

        $z1 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>($r5);

        if $z1 == 0 goto label6;

        $r6 = r2.<android.telephony.SmsMessage$NoEmsSupportConfig: java.lang.String mGid1>;

        $z2 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r6);

        if $z2 != 0 goto label5;

        $r7 = r2.<android.telephony.SmsMessage$NoEmsSupportConfig: java.lang.String mGid1>;

        $z4 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r7);

        if $z4 != 0 goto label6;

        $r8 = r2.<android.telephony.SmsMessage$NoEmsSupportConfig: java.lang.String mGid1>;

        $z5 = virtualinvoke $r8.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r1);

        if $z5 == 0 goto label6;

     label5:
        $z3 = r2.<android.telephony.SmsMessage$NoEmsSupportConfig: boolean mIsPrefix>;

        return $z3;

     label6:
        i2 = i2 + 1;

        goto label4;

     label7:
        return 0;

     label8:
        $r9 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r9;

        catch java.lang.Throwable from label2 to label3 with label8;
    }

    private static boolean useCdmaFormatForMoSms()
    {
        int $i0;
        boolean $z0;

        $i0 = staticinvoke <android.telephony.SmsManager: int getDefaultSmsSubscriptionId()>();

        $z0 = staticinvoke <android.telephony.SmsMessage: boolean useCdmaFormatForMoSms(int)>($i0);

        return $z0;
    }

    private static boolean useCdmaFormatForMoSms(int)
    {
        int i0;
        android.telephony.SmsManager r0;
        boolean $z0, $z1, $z2;
        java.lang.String $r1, $r2;

        i0 := @parameter0: int;

        r0 = staticinvoke <android.telephony.SmsManager: android.telephony.SmsManager getSmsManagerForSubscriptionId(int)>(i0);

        $z0 = virtualinvoke r0.<android.telephony.SmsManager: boolean isImsSmsSupported()>();

        if $z0 != 0 goto label1;

        $z2 = staticinvoke <android.telephony.SmsMessage: boolean isCdmaVoice(int)>(i0);

        return $z2;

     label1:
        $r1 = "3gpp2";

        $r2 = virtualinvoke r0.<android.telephony.SmsManager: java.lang.String getImsSmsFormat()>();

        $z1 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        return $z1;
    }

    public java.lang.String getDisplayMessageBody()
    {
        android.telephony.SmsMessage r0;
        com.android.internal.telephony.SmsMessageBase $r1;
        java.lang.String $r2;

        r0 := @this: android.telephony.SmsMessage;

        $r1 = r0.<android.telephony.SmsMessage: com.android.internal.telephony.SmsMessageBase mWrappedSmsMessage>;

        $r2 = virtualinvoke $r1.<com.android.internal.telephony.SmsMessageBase: java.lang.String getDisplayMessageBody()>();

        return $r2;
    }

    public java.lang.String getDisplayOriginatingAddress()
    {
        android.telephony.SmsMessage r0;
        com.android.internal.telephony.SmsMessageBase $r1;
        java.lang.String $r2;

        r0 := @this: android.telephony.SmsMessage;

        $r1 = r0.<android.telephony.SmsMessage: com.android.internal.telephony.SmsMessageBase mWrappedSmsMessage>;

        $r2 = virtualinvoke $r1.<com.android.internal.telephony.SmsMessageBase: java.lang.String getDisplayOriginatingAddress()>();

        return $r2;
    }

    public java.lang.String getEmailBody()
    {
        android.telephony.SmsMessage r0;
        com.android.internal.telephony.SmsMessageBase $r1;
        java.lang.String $r2;

        r0 := @this: android.telephony.SmsMessage;

        $r1 = r0.<android.telephony.SmsMessage: com.android.internal.telephony.SmsMessageBase mWrappedSmsMessage>;

        $r2 = virtualinvoke $r1.<com.android.internal.telephony.SmsMessageBase: java.lang.String getEmailBody()>();

        return $r2;
    }

    public java.lang.String getEmailFrom()
    {
        android.telephony.SmsMessage r0;
        com.android.internal.telephony.SmsMessageBase $r1;
        java.lang.String $r2;

        r0 := @this: android.telephony.SmsMessage;

        $r1 = r0.<android.telephony.SmsMessage: com.android.internal.telephony.SmsMessageBase mWrappedSmsMessage>;

        $r2 = virtualinvoke $r1.<com.android.internal.telephony.SmsMessageBase: java.lang.String getEmailFrom()>();

        return $r2;
    }

    public int getIndexOnIcc()
    {
        android.telephony.SmsMessage r0;
        com.android.internal.telephony.SmsMessageBase $r1;
        int $i0;

        r0 := @this: android.telephony.SmsMessage;

        $r1 = r0.<android.telephony.SmsMessage: com.android.internal.telephony.SmsMessageBase mWrappedSmsMessage>;

        $i0 = virtualinvoke $r1.<com.android.internal.telephony.SmsMessageBase: int getIndexOnIcc()>();

        return $i0;
    }

    public int getIndexOnSim()
    {
        android.telephony.SmsMessage r0;
        com.android.internal.telephony.SmsMessageBase $r1;
        int $i0;

        r0 := @this: android.telephony.SmsMessage;

        $r1 = r0.<android.telephony.SmsMessage: com.android.internal.telephony.SmsMessageBase mWrappedSmsMessage>;

        $i0 = virtualinvoke $r1.<com.android.internal.telephony.SmsMessageBase: int getIndexOnIcc()>();

        return $i0;
    }

    public java.lang.String getMessageBody()
    {
        android.telephony.SmsMessage r0;
        com.android.internal.telephony.SmsMessageBase $r1;
        java.lang.String $r2;

        r0 := @this: android.telephony.SmsMessage;

        $r1 = r0.<android.telephony.SmsMessage: com.android.internal.telephony.SmsMessageBase mWrappedSmsMessage>;

        $r2 = virtualinvoke $r1.<com.android.internal.telephony.SmsMessageBase: java.lang.String getMessageBody()>();

        return $r2;
    }

    public android.telephony.SmsMessage$MessageClass getMessageClass()
    {
        android.telephony.SmsMessage r0;
        int i0, $i1;
        com.android.internal.telephony.SmsMessageBase $r1;
        int[] $r2;
        com.android.internal.telephony.SmsConstants$MessageClass $r3;
        android.telephony.SmsMessage$MessageClass $r4, $r5, $r6, $r7, $r8;

        r0 := @this: android.telephony.SmsMessage;

        $r2 = <android.telephony.SmsMessage$1: int[] $SwitchMap$com$android$internal$telephony$SmsConstants$MessageClass>;

        $r1 = r0.<android.telephony.SmsMessage: com.android.internal.telephony.SmsMessageBase mWrappedSmsMessage>;

        $r3 = virtualinvoke $r1.<com.android.internal.telephony.SmsMessageBase: com.android.internal.telephony.SmsConstants$MessageClass getMessageClass()>();

        $i1 = virtualinvoke $r3.<com.android.internal.telephony.SmsConstants$MessageClass: int ordinal()>();

        i0 = $r2[$i1];

        if i0 == 1 goto label4;

        if i0 == 2 goto label3;

        if i0 == 3 goto label2;

        if i0 == 4 goto label1;

        $r8 = <android.telephony.SmsMessage$MessageClass: android.telephony.SmsMessage$MessageClass UNKNOWN>;

        return $r8;

     label1:
        $r7 = <android.telephony.SmsMessage$MessageClass: android.telephony.SmsMessage$MessageClass CLASS_3>;

        return $r7;

     label2:
        $r6 = <android.telephony.SmsMessage$MessageClass: android.telephony.SmsMessage$MessageClass CLASS_2>;

        return $r6;

     label3:
        $r5 = <android.telephony.SmsMessage$MessageClass: android.telephony.SmsMessage$MessageClass CLASS_1>;

        return $r5;

     label4:
        $r4 = <android.telephony.SmsMessage$MessageClass: android.telephony.SmsMessage$MessageClass CLASS_0>;

        return $r4;
    }

    public java.lang.String getOriginatingAddress()
    {
        android.telephony.SmsMessage r0;
        com.android.internal.telephony.SmsMessageBase $r1;
        java.lang.String $r2;

        r0 := @this: android.telephony.SmsMessage;

        $r1 = r0.<android.telephony.SmsMessage: com.android.internal.telephony.SmsMessageBase mWrappedSmsMessage>;

        $r2 = virtualinvoke $r1.<com.android.internal.telephony.SmsMessageBase: java.lang.String getOriginatingAddress()>();

        return $r2;
    }

    public byte[] getPdu()
    {
        android.telephony.SmsMessage r0;
        com.android.internal.telephony.SmsMessageBase $r1;
        byte[] $r2;

        r0 := @this: android.telephony.SmsMessage;

        $r1 = r0.<android.telephony.SmsMessage: com.android.internal.telephony.SmsMessageBase mWrappedSmsMessage>;

        $r2 = virtualinvoke $r1.<com.android.internal.telephony.SmsMessageBase: byte[] getPdu()>();

        return $r2;
    }

    public int getProtocolIdentifier()
    {
        android.telephony.SmsMessage r0;
        com.android.internal.telephony.SmsMessageBase $r1;
        int $i0;

        r0 := @this: android.telephony.SmsMessage;

        $r1 = r0.<android.telephony.SmsMessage: com.android.internal.telephony.SmsMessageBase mWrappedSmsMessage>;

        $i0 = virtualinvoke $r1.<com.android.internal.telephony.SmsMessageBase: int getProtocolIdentifier()>();

        return $i0;
    }

    public java.lang.String getPseudoSubject()
    {
        android.telephony.SmsMessage r0;
        com.android.internal.telephony.SmsMessageBase $r1;
        java.lang.String $r2;

        r0 := @this: android.telephony.SmsMessage;

        $r1 = r0.<android.telephony.SmsMessage: com.android.internal.telephony.SmsMessageBase mWrappedSmsMessage>;

        $r2 = virtualinvoke $r1.<com.android.internal.telephony.SmsMessageBase: java.lang.String getPseudoSubject()>();

        return $r2;
    }

    public java.lang.String getRecipientAddress()
    {
        android.telephony.SmsMessage r0;
        com.android.internal.telephony.SmsMessageBase $r1;
        java.lang.String $r2;

        r0 := @this: android.telephony.SmsMessage;

        $r1 = r0.<android.telephony.SmsMessage: com.android.internal.telephony.SmsMessageBase mWrappedSmsMessage>;

        $r2 = virtualinvoke $r1.<com.android.internal.telephony.SmsMessageBase: java.lang.String getRecipientAddress()>();

        return $r2;
    }

    public java.lang.String getServiceCenterAddress()
    {
        android.telephony.SmsMessage r0;
        com.android.internal.telephony.SmsMessageBase $r1;
        java.lang.String $r2;

        r0 := @this: android.telephony.SmsMessage;

        $r1 = r0.<android.telephony.SmsMessage: com.android.internal.telephony.SmsMessageBase mWrappedSmsMessage>;

        $r2 = virtualinvoke $r1.<com.android.internal.telephony.SmsMessageBase: java.lang.String getServiceCenterAddress()>();

        return $r2;
    }

    public int getStatus()
    {
        android.telephony.SmsMessage r0;
        com.android.internal.telephony.SmsMessageBase $r1;
        int $i0;

        r0 := @this: android.telephony.SmsMessage;

        $r1 = r0.<android.telephony.SmsMessage: com.android.internal.telephony.SmsMessageBase mWrappedSmsMessage>;

        $i0 = virtualinvoke $r1.<com.android.internal.telephony.SmsMessageBase: int getStatus()>();

        return $i0;
    }

    public int getStatusOnIcc()
    {
        android.telephony.SmsMessage r0;
        com.android.internal.telephony.SmsMessageBase $r1;
        int $i0;

        r0 := @this: android.telephony.SmsMessage;

        $r1 = r0.<android.telephony.SmsMessage: com.android.internal.telephony.SmsMessageBase mWrappedSmsMessage>;

        $i0 = virtualinvoke $r1.<com.android.internal.telephony.SmsMessageBase: int getStatusOnIcc()>();

        return $i0;
    }

    public int getStatusOnSim()
    {
        android.telephony.SmsMessage r0;
        com.android.internal.telephony.SmsMessageBase $r1;
        int $i0;

        r0 := @this: android.telephony.SmsMessage;

        $r1 = r0.<android.telephony.SmsMessage: com.android.internal.telephony.SmsMessageBase mWrappedSmsMessage>;

        $i0 = virtualinvoke $r1.<com.android.internal.telephony.SmsMessageBase: int getStatusOnIcc()>();

        return $i0;
    }

    public int getSubId()
    {
        android.telephony.SmsMessage r0;
        int $i0;

        r0 := @this: android.telephony.SmsMessage;

        $i0 = r0.<android.telephony.SmsMessage: int mSubId>;

        return $i0;
    }

    public long getTimestampMillis()
    {
        android.telephony.SmsMessage r0;
        com.android.internal.telephony.SmsMessageBase $r1;
        long $l0;

        r0 := @this: android.telephony.SmsMessage;

        $r1 = r0.<android.telephony.SmsMessage: com.android.internal.telephony.SmsMessageBase mWrappedSmsMessage>;

        $l0 = virtualinvoke $r1.<com.android.internal.telephony.SmsMessageBase: long getTimestampMillis()>();

        return $l0;
    }

    public byte[] getUserData()
    {
        android.telephony.SmsMessage r0;
        com.android.internal.telephony.SmsMessageBase $r1;
        byte[] $r2;

        r0 := @this: android.telephony.SmsMessage;

        $r1 = r0.<android.telephony.SmsMessage: com.android.internal.telephony.SmsMessageBase mWrappedSmsMessage>;

        $r2 = virtualinvoke $r1.<com.android.internal.telephony.SmsMessageBase: byte[] getUserData()>();

        return $r2;
    }

    public boolean isCphsMwiMessage()
    {
        android.telephony.SmsMessage r0;
        com.android.internal.telephony.SmsMessageBase $r1;
        boolean $z0;

        r0 := @this: android.telephony.SmsMessage;

        $r1 = r0.<android.telephony.SmsMessage: com.android.internal.telephony.SmsMessageBase mWrappedSmsMessage>;

        $z0 = virtualinvoke $r1.<com.android.internal.telephony.SmsMessageBase: boolean isCphsMwiMessage()>();

        return $z0;
    }

    public boolean isEmail()
    {
        android.telephony.SmsMessage r0;
        com.android.internal.telephony.SmsMessageBase $r1;
        boolean $z0;

        r0 := @this: android.telephony.SmsMessage;

        $r1 = r0.<android.telephony.SmsMessage: com.android.internal.telephony.SmsMessageBase mWrappedSmsMessage>;

        $z0 = virtualinvoke $r1.<com.android.internal.telephony.SmsMessageBase: boolean isEmail()>();

        return $z0;
    }

    public boolean isMWIClearMessage()
    {
        android.telephony.SmsMessage r0;
        com.android.internal.telephony.SmsMessageBase $r1;
        boolean $z0;

        r0 := @this: android.telephony.SmsMessage;

        $r1 = r0.<android.telephony.SmsMessage: com.android.internal.telephony.SmsMessageBase mWrappedSmsMessage>;

        $z0 = virtualinvoke $r1.<com.android.internal.telephony.SmsMessageBase: boolean isMWIClearMessage()>();

        return $z0;
    }

    public boolean isMWISetMessage()
    {
        android.telephony.SmsMessage r0;
        com.android.internal.telephony.SmsMessageBase $r1;
        boolean $z0;

        r0 := @this: android.telephony.SmsMessage;

        $r1 = r0.<android.telephony.SmsMessage: com.android.internal.telephony.SmsMessageBase mWrappedSmsMessage>;

        $z0 = virtualinvoke $r1.<com.android.internal.telephony.SmsMessageBase: boolean isMWISetMessage()>();

        return $z0;
    }

    public boolean isMwiDontStore()
    {
        android.telephony.SmsMessage r0;
        com.android.internal.telephony.SmsMessageBase $r1;
        boolean $z0;

        r0 := @this: android.telephony.SmsMessage;

        $r1 = r0.<android.telephony.SmsMessage: com.android.internal.telephony.SmsMessageBase mWrappedSmsMessage>;

        $z0 = virtualinvoke $r1.<com.android.internal.telephony.SmsMessageBase: boolean isMwiDontStore()>();

        return $z0;
    }

    public boolean isReplace()
    {
        android.telephony.SmsMessage r0;
        com.android.internal.telephony.SmsMessageBase $r1;
        boolean $z0;

        r0 := @this: android.telephony.SmsMessage;

        $r1 = r0.<android.telephony.SmsMessage: com.android.internal.telephony.SmsMessageBase mWrappedSmsMessage>;

        $z0 = virtualinvoke $r1.<com.android.internal.telephony.SmsMessageBase: boolean isReplace()>();

        return $z0;
    }

    public boolean isReplyPathPresent()
    {
        android.telephony.SmsMessage r0;
        com.android.internal.telephony.SmsMessageBase $r1;
        boolean $z0;

        r0 := @this: android.telephony.SmsMessage;

        $r1 = r0.<android.telephony.SmsMessage: com.android.internal.telephony.SmsMessageBase mWrappedSmsMessage>;

        $z0 = virtualinvoke $r1.<com.android.internal.telephony.SmsMessageBase: boolean isReplyPathPresent()>();

        return $z0;
    }

    public boolean isStatusReportMessage()
    {
        android.telephony.SmsMessage r0;
        com.android.internal.telephony.SmsMessageBase $r1;
        boolean $z0;

        r0 := @this: android.telephony.SmsMessage;

        $r1 = r0.<android.telephony.SmsMessage: com.android.internal.telephony.SmsMessageBase mWrappedSmsMessage>;

        $z0 = virtualinvoke $r1.<com.android.internal.telephony.SmsMessageBase: boolean isStatusReportMessage()>();

        return $z0;
    }

    public void setSubId(int)
    {
        android.telephony.SmsMessage r0;
        int i0;

        r0 := @this: android.telephony.SmsMessage;

        i0 := @parameter0: int;

        r0.<android.telephony.SmsMessage: int mSubId> = i0;

        return;
    }
}
