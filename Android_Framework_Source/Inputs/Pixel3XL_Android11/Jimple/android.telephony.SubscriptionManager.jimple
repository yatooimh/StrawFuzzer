public class android.telephony.SubscriptionManager extends java.lang.Object
{
    public static final java.lang.String ACCESS_RULES;
    public static final java.lang.String ACCESS_RULES_FROM_CARRIER_CONFIGS;
    public static final java.lang.String ACTION_DEFAULT_SMS_SUBSCRIPTION_CHANGED;
    public static final java.lang.String ACTION_DEFAULT_SUBSCRIPTION_CHANGED;
    public static final java.lang.String ACTION_MANAGE_SUBSCRIPTION_PLANS;
    public static final java.lang.String ACTION_REFRESH_SUBSCRIPTION_PLANS;
    public static final java.lang.String ACTION_SUBSCRIPTION_PLANS_CHANGED;
    public static final android.net.Uri ADVANCED_CALLING_ENABLED_CONTENT_URI;
    public static final java.lang.String ALLOWED_NETWORK_TYPES;
    public static final java.lang.String CACHE_KEY_ACTIVE_DATA_SUB_ID_PROPERTY;
    public static final java.lang.String CACHE_KEY_DEFAULT_DATA_SUB_ID_PROPERTY;
    public static final java.lang.String CACHE_KEY_DEFAULT_SMS_SUB_ID_PROPERTY;
    public static final java.lang.String CACHE_KEY_DEFAULT_SUB_ID_PROPERTY;
    public static final java.lang.String CACHE_KEY_SLOT_INDEX_PROPERTY;
    public static final java.lang.String CARD_ID;
    public static final java.lang.String CARRIER_ID;
    public static final java.lang.String CARRIER_NAME;
    public static final java.lang.String CB_ALERT_REMINDER_INTERVAL;
    public static final java.lang.String CB_ALERT_SOUND_DURATION;
    public static final java.lang.String CB_ALERT_SPEECH;
    public static final java.lang.String CB_ALERT_VIBRATE;
    public static final java.lang.String CB_AMBER_ALERT;
    public static final java.lang.String CB_CHANNEL_50_ALERT;
    public static final java.lang.String CB_CMAS_TEST_ALERT;
    public static final java.lang.String CB_EMERGENCY_ALERT;
    public static final java.lang.String CB_ETWS_TEST_ALERT;
    public static final java.lang.String CB_EXTREME_THREAT_ALERT;
    public static final java.lang.String CB_OPT_OUT_DIALOG;
    public static final java.lang.String CB_SEVERE_THREAT_ALERT;
    public static final android.net.Uri CONTENT_URI;
    public static final java.lang.String DATA_ENABLED_OVERRIDE_RULES;
    public static final java.lang.String DATA_ROAMING;
    public static final int DATA_ROAMING_DISABLE;
    public static final int DATA_ROAMING_ENABLE;
    private static final boolean DBG;
    public static final int DEFAULT_NAME_RES;
    public static final int DEFAULT_PHONE_INDEX;
    public static final int DEFAULT_SIM_SLOT_INDEX;
    public static final int DEFAULT_SUBSCRIPTION_ID;
    public static final java.lang.String DISPLAY_NAME;
    public static final int DUMMY_SUBSCRIPTION_ID_BASE;
    public static final java.lang.String EHPLMNS;
    public static final java.lang.String ENHANCED_4G_MODE_ENABLED;
    public static final java.lang.String EXTRA_SLOT_INDEX;
    public static final java.lang.String EXTRA_SUBSCRIPTION_INDEX;
    public static final java.lang.String GROUP_OWNER;
    public static final java.lang.String GROUP_UUID;
    public static final java.lang.String HPLMNS;
    public static final java.lang.String HUE;
    public static final java.lang.String ICC_ID;
    public static final java.lang.String IMSI;
    public static final java.lang.String IMS_RCS_UCE_ENABLED;
    public static final int INVALID_PHONE_INDEX;
    public static final int INVALID_SIM_SLOT_INDEX;
    public static final int INVALID_SUBSCRIPTION_ID;
    public static final java.lang.String ISO_COUNTRY_CODE;
    public static final java.lang.String IS_EMBEDDED;
    public static final java.lang.String IS_OPPORTUNISTIC;
    public static final java.lang.String IS_REMOVABLE;
    private static final java.lang.String LOG_TAG;
    private static final int MAX_CACHE_SIZE;
    public static final int MAX_SUBSCRIPTION_ID_VALUE;
    public static final java.lang.String MCC;
    public static final java.lang.String MCC_STRING;
    public static final int MIN_SUBSCRIPTION_ID_VALUE;
    public static final java.lang.String MNC;
    public static final java.lang.String MNC_STRING;
    public static final java.lang.String NAME_SOURCE;
    public static final int NAME_SOURCE_CARRIER;
    public static final int NAME_SOURCE_CARRIER_ID;
    public static final int NAME_SOURCE_SIM_PNN;
    public static final int NAME_SOURCE_SIM_SPN;
    public static final int NAME_SOURCE_USER_INPUT;
    public static final java.lang.String NUMBER;
    public static final java.lang.String PROFILE_CLASS;
    public static final int PROFILE_CLASS_DEFAULT;
    public static final int PROFILE_CLASS_OPERATIONAL;
    public static final int PROFILE_CLASS_PROVISIONING;
    public static final int PROFILE_CLASS_TESTING;
    public static final int PROFILE_CLASS_UNSET;
    public static final int SIM_NOT_INSERTED;
    public static final java.lang.String SIM_SLOT_INDEX;
    public static final int SLOT_INDEX_FOR_REMOTE_SIM_SUB;
    public static final java.lang.String SUBSCRIPTION_TYPE;
    public static final int SUBSCRIPTION_TYPE_LOCAL_SIM;
    public static final int SUBSCRIPTION_TYPE_REMOTE_SIM;
    public static final java.lang.String SUB_DEFAULT_CHANGED_ACTION;
    public static final java.lang.String UICC_APPLICATIONS_ENABLED;
    public static final java.lang.String UNIQUE_KEY_SUBSCRIPTION_ID;
    private static final boolean VDBG;
    public static final android.net.Uri VT_ENABLED_CONTENT_URI;
    public static final java.lang.String VT_IMS_ENABLED;
    public static final android.net.Uri WFC_ENABLED_CONTENT_URI;
    public static final java.lang.String WFC_IMS_ENABLED;
    public static final java.lang.String WFC_IMS_MODE;
    public static final java.lang.String WFC_IMS_ROAMING_ENABLED;
    public static final java.lang.String WFC_IMS_ROAMING_MODE;
    public static final android.net.Uri WFC_MODE_CONTENT_URI;
    public static final android.net.Uri WFC_ROAMING_ENABLED_CONTENT_URI;
    public static final android.net.Uri WFC_ROAMING_MODE_CONTENT_URI;
    private static android.telephony.SubscriptionManager$VoidPropertyInvalidatedCache sActiveDataSubIdCache;
    private static android.telephony.SubscriptionManager$VoidPropertyInvalidatedCache sDefaultDataSubIdCache;
    private static android.telephony.SubscriptionManager$VoidPropertyInvalidatedCache sDefaultSmsSubIdCache;
    private static android.telephony.SubscriptionManager$VoidPropertyInvalidatedCache sDefaultSubIdCache;
    private static android.telephony.SubscriptionManager$IntegerPropertyInvalidatedCache sPhoneIdCache;
    private static final java.util.Map sResourcesCache;
    private static android.telephony.SubscriptionManager$IntegerPropertyInvalidatedCache sSlotIndexCache;
    private final android.content.Context mContext;

    static void <clinit>()
    {
        android.telephony.'-$$Lambda$VtfSvbW0tRP_qFDYPVM9jEdZHj0' r0;
        java.lang.Integer r1;
        android.net.Uri $r2, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25;
        android.telephony.'-$$Lambda$Rj1EhkciYpNb4BkVxAk-tibQjhM' $r5;
        android.telephony.'-$$Lambda$VoWbarPy40APZWYZ2AqZZxi_Jm8' $r7;
        android.telephony.'-$$Lambda$0NbX5ZB4Wdogc_DUyrSlzFoDHvU' $r9;
        android.telephony.'-$$Lambda$Vaai8Sbs2IpNs9Mr8tx6u3YoWp4' $r11;
        android.telephony.'-$$Lambda$U5dt9Oz29BpLzJ19WIl50whqAGs' $r13;
        android.telephony.SubscriptionManager$VoidPropertyInvalidatedCache r27, r28, r29, r30;
        android.telephony.SubscriptionManager$IntegerPropertyInvalidatedCache r31, r32;
        java.util.concurrent.ConcurrentHashMap r33;
        com.android.internal.util.FunctionalUtils$ThrowingFunction r34, r35, r36, r37;
        com.android.internal.util.FunctionalUtils$ThrowingBiFunction r38, r39;

        <android.telephony.SubscriptionManager: java.lang.String WFC_IMS_ROAMING_MODE> = "wfc_ims_roaming_mode";

        <android.telephony.SubscriptionManager: java.lang.String WFC_IMS_ROAMING_ENABLED> = "wfc_ims_roaming_enabled";

        <android.telephony.SubscriptionManager: java.lang.String WFC_IMS_MODE> = "wfc_ims_mode";

        <android.telephony.SubscriptionManager: java.lang.String WFC_IMS_ENABLED> = "wfc_ims_enabled";

        <android.telephony.SubscriptionManager: java.lang.String VT_IMS_ENABLED> = "vt_ims_enabled";

        <android.telephony.SubscriptionManager: boolean VDBG> = 0;

        <android.telephony.SubscriptionManager: java.lang.String UNIQUE_KEY_SUBSCRIPTION_ID> = "_id";

        <android.telephony.SubscriptionManager: java.lang.String UICC_APPLICATIONS_ENABLED> = "uicc_applications_enabled";

        <android.telephony.SubscriptionManager: java.lang.String SUB_DEFAULT_CHANGED_ACTION> = "android.intent.action.SUB_DEFAULT_CHANGED";

        <android.telephony.SubscriptionManager: int SUBSCRIPTION_TYPE_REMOTE_SIM> = 1;

        <android.telephony.SubscriptionManager: int SUBSCRIPTION_TYPE_LOCAL_SIM> = 0;

        <android.telephony.SubscriptionManager: java.lang.String SUBSCRIPTION_TYPE> = "subscription_type";

        <android.telephony.SubscriptionManager: int SLOT_INDEX_FOR_REMOTE_SIM_SUB> = -1;

        <android.telephony.SubscriptionManager: java.lang.String SIM_SLOT_INDEX> = "sim_id";

        <android.telephony.SubscriptionManager: int SIM_NOT_INSERTED> = -1;

        <android.telephony.SubscriptionManager: int PROFILE_CLASS_UNSET> = -1;

        <android.telephony.SubscriptionManager: int PROFILE_CLASS_TESTING> = 0;

        <android.telephony.SubscriptionManager: int PROFILE_CLASS_PROVISIONING> = 1;

        <android.telephony.SubscriptionManager: int PROFILE_CLASS_OPERATIONAL> = 2;

        <android.telephony.SubscriptionManager: int PROFILE_CLASS_DEFAULT> = -1;

        <android.telephony.SubscriptionManager: java.lang.String PROFILE_CLASS> = "profile_class";

        <android.telephony.SubscriptionManager: java.lang.String NUMBER> = "number";

        <android.telephony.SubscriptionManager: int NAME_SOURCE_USER_INPUT> = 2;

        <android.telephony.SubscriptionManager: int NAME_SOURCE_SIM_SPN> = 1;

        <android.telephony.SubscriptionManager: int NAME_SOURCE_SIM_PNN> = 4;

        <android.telephony.SubscriptionManager: int NAME_SOURCE_CARRIER_ID> = 0;

        <android.telephony.SubscriptionManager: int NAME_SOURCE_CARRIER> = 3;

        <android.telephony.SubscriptionManager: java.lang.String NAME_SOURCE> = "name_source";

        <android.telephony.SubscriptionManager: java.lang.String MNC_STRING> = "mnc_string";

        <android.telephony.SubscriptionManager: java.lang.String MNC> = "mnc";

        <android.telephony.SubscriptionManager: int MIN_SUBSCRIPTION_ID_VALUE> = 0;

        <android.telephony.SubscriptionManager: java.lang.String MCC_STRING> = "mcc_string";

        <android.telephony.SubscriptionManager: java.lang.String MCC> = "mcc";

        <android.telephony.SubscriptionManager: int MAX_SUBSCRIPTION_ID_VALUE> = 2147483646;

        <android.telephony.SubscriptionManager: int MAX_CACHE_SIZE> = 4;

        <android.telephony.SubscriptionManager: java.lang.String LOG_TAG> = "SubscriptionManager";

        <android.telephony.SubscriptionManager: java.lang.String IS_REMOVABLE> = "is_removable";

        <android.telephony.SubscriptionManager: java.lang.String IS_OPPORTUNISTIC> = "is_opportunistic";

        <android.telephony.SubscriptionManager: java.lang.String IS_EMBEDDED> = "is_embedded";

        <android.telephony.SubscriptionManager: java.lang.String ISO_COUNTRY_CODE> = "iso_country_code";

        <android.telephony.SubscriptionManager: int INVALID_SUBSCRIPTION_ID> = -1;

        <android.telephony.SubscriptionManager: int INVALID_SIM_SLOT_INDEX> = -1;

        <android.telephony.SubscriptionManager: int INVALID_PHONE_INDEX> = -1;

        <android.telephony.SubscriptionManager: java.lang.String IMS_RCS_UCE_ENABLED> = "ims_rcs_uce_enabled";

        <android.telephony.SubscriptionManager: java.lang.String IMSI> = "imsi";

        <android.telephony.SubscriptionManager: java.lang.String ICC_ID> = "icc_id";

        <android.telephony.SubscriptionManager: java.lang.String HUE> = "color";

        <android.telephony.SubscriptionManager: java.lang.String HPLMNS> = "hplmns";

        <android.telephony.SubscriptionManager: java.lang.String GROUP_UUID> = "group_uuid";

        <android.telephony.SubscriptionManager: java.lang.String GROUP_OWNER> = "group_owner";

        <android.telephony.SubscriptionManager: java.lang.String EXTRA_SUBSCRIPTION_INDEX> = "android.telephony.extra.SUBSCRIPTION_INDEX";

        <android.telephony.SubscriptionManager: java.lang.String EXTRA_SLOT_INDEX> = "android.telephony.extra.SLOT_INDEX";

        <android.telephony.SubscriptionManager: java.lang.String ENHANCED_4G_MODE_ENABLED> = "volte_vt_enabled";

        <android.telephony.SubscriptionManager: java.lang.String EHPLMNS> = "ehplmns";

        <android.telephony.SubscriptionManager: int DUMMY_SUBSCRIPTION_ID_BASE> = -2;

        <android.telephony.SubscriptionManager: java.lang.String DISPLAY_NAME> = "display_name";

        <android.telephony.SubscriptionManager: int DEFAULT_SUBSCRIPTION_ID> = 2147483647;

        <android.telephony.SubscriptionManager: int DEFAULT_SIM_SLOT_INDEX> = 2147483647;

        <android.telephony.SubscriptionManager: int DEFAULT_PHONE_INDEX> = 2147483647;

        <android.telephony.SubscriptionManager: int DEFAULT_NAME_RES> = 17039374;

        <android.telephony.SubscriptionManager: boolean DBG> = 0;

        <android.telephony.SubscriptionManager: int DATA_ROAMING_ENABLE> = 1;

        <android.telephony.SubscriptionManager: int DATA_ROAMING_DISABLE> = 0;

        <android.telephony.SubscriptionManager: java.lang.String DATA_ROAMING> = "data_roaming";

        <android.telephony.SubscriptionManager: java.lang.String DATA_ENABLED_OVERRIDE_RULES> = "data_enabled_override_rules";

        <android.telephony.SubscriptionManager: java.lang.String CB_SEVERE_THREAT_ALERT> = "enable_cmas_severe_threat_alerts";

        <android.telephony.SubscriptionManager: java.lang.String CB_OPT_OUT_DIALOG> = "show_cmas_opt_out_dialog";

        <android.telephony.SubscriptionManager: java.lang.String CB_EXTREME_THREAT_ALERT> = "enable_cmas_extreme_threat_alerts";

        <android.telephony.SubscriptionManager: java.lang.String CB_ETWS_TEST_ALERT> = "enable_etws_test_alerts";

        <android.telephony.SubscriptionManager: java.lang.String CB_EMERGENCY_ALERT> = "enable_emergency_alerts";

        <android.telephony.SubscriptionManager: java.lang.String CB_CMAS_TEST_ALERT> = "enable_cmas_test_alerts";

        <android.telephony.SubscriptionManager: java.lang.String CB_CHANNEL_50_ALERT> = "enable_channel_50_alerts";

        <android.telephony.SubscriptionManager: java.lang.String CB_AMBER_ALERT> = "enable_cmas_amber_alerts";

        <android.telephony.SubscriptionManager: java.lang.String CB_ALERT_VIBRATE> = "enable_alert_vibrate";

        <android.telephony.SubscriptionManager: java.lang.String CB_ALERT_SPEECH> = "enable_alert_speech";

        <android.telephony.SubscriptionManager: java.lang.String CB_ALERT_SOUND_DURATION> = "alert_sound_duration";

        <android.telephony.SubscriptionManager: java.lang.String CB_ALERT_REMINDER_INTERVAL> = "alert_reminder_interval";

        <android.telephony.SubscriptionManager: java.lang.String CARRIER_NAME> = "carrier_name";

        <android.telephony.SubscriptionManager: java.lang.String CARRIER_ID> = "carrier_id";

        <android.telephony.SubscriptionManager: java.lang.String CARD_ID> = "card_id";

        <android.telephony.SubscriptionManager: java.lang.String CACHE_KEY_SLOT_INDEX_PROPERTY> = "cache_key.telephony.get_slot_index";

        <android.telephony.SubscriptionManager: java.lang.String CACHE_KEY_DEFAULT_SUB_ID_PROPERTY> = "cache_key.telephony.get_default_sub_id";

        <android.telephony.SubscriptionManager: java.lang.String CACHE_KEY_DEFAULT_SMS_SUB_ID_PROPERTY> = "cache_key.telephony.get_default_sms_sub_id";

        <android.telephony.SubscriptionManager: java.lang.String CACHE_KEY_DEFAULT_DATA_SUB_ID_PROPERTY> = "cache_key.telephony.get_default_data_sub_id";

        <android.telephony.SubscriptionManager: java.lang.String CACHE_KEY_ACTIVE_DATA_SUB_ID_PROPERTY> = "cache_key.telephony.get_active_data_sub_id";

        <android.telephony.SubscriptionManager: java.lang.String ALLOWED_NETWORK_TYPES> = "allowed_network_types";

        <android.telephony.SubscriptionManager: java.lang.String ACTION_SUBSCRIPTION_PLANS_CHANGED> = "android.telephony.action.SUBSCRIPTION_PLANS_CHANGED";

        <android.telephony.SubscriptionManager: java.lang.String ACTION_REFRESH_SUBSCRIPTION_PLANS> = "android.telephony.action.REFRESH_SUBSCRIPTION_PLANS";

        <android.telephony.SubscriptionManager: java.lang.String ACTION_MANAGE_SUBSCRIPTION_PLANS> = "android.telephony.action.MANAGE_SUBSCRIPTION_PLANS";

        <android.telephony.SubscriptionManager: java.lang.String ACTION_DEFAULT_SUBSCRIPTION_CHANGED> = "android.telephony.action.DEFAULT_SUBSCRIPTION_CHANGED";

        <android.telephony.SubscriptionManager: java.lang.String ACTION_DEFAULT_SMS_SUBSCRIPTION_CHANGED> = "android.telephony.action.DEFAULT_SMS_SUBSCRIPTION_CHANGED";

        <android.telephony.SubscriptionManager: java.lang.String ACCESS_RULES_FROM_CARRIER_CONFIGS> = "access_rules_from_carrier_configs";

        <android.telephony.SubscriptionManager: java.lang.String ACCESS_RULES> = "access_rules";

        $r2 = <android.provider.Telephony$SimInfo: android.net.Uri CONTENT_URI>;

        <android.telephony.SubscriptionManager: android.net.Uri CONTENT_URI> = $r2;

        r0 = <android.telephony._$$Lambda$VtfSvbW0tRP_qFDYPVM9jEdZHj0: android.telephony.'-$$Lambda$VtfSvbW0tRP_qFDYPVM9jEdZHj0' INSTANCE>;

        r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-1);

        r27 = new android.telephony.SubscriptionManager$VoidPropertyInvalidatedCache;

        r34 = (com.android.internal.util.FunctionalUtils$ThrowingFunction) r0;

        specialinvoke r27.<android.telephony.SubscriptionManager$VoidPropertyInvalidatedCache: void <init>(com.android.internal.util.FunctionalUtils$ThrowingFunction,java.lang.String,java.lang.Object)>(r34, "cache_key.telephony.get_default_sub_id", r1);

        <android.telephony.SubscriptionManager: android.telephony.SubscriptionManager$VoidPropertyInvalidatedCache sDefaultSubIdCache> = r27;

        r28 = new android.telephony.SubscriptionManager$VoidPropertyInvalidatedCache;

        $r5 = <android.telephony._$$Lambda$Rj1EhkciYpNb4BkVxAk_tibQjhM: android.telephony.'-$$Lambda$Rj1EhkciYpNb4BkVxAk-tibQjhM' INSTANCE>;

        r35 = (com.android.internal.util.FunctionalUtils$ThrowingFunction) $r5;

        specialinvoke r28.<android.telephony.SubscriptionManager$VoidPropertyInvalidatedCache: void <init>(com.android.internal.util.FunctionalUtils$ThrowingFunction,java.lang.String,java.lang.Object)>(r35, "cache_key.telephony.get_default_data_sub_id", r1);

        <android.telephony.SubscriptionManager: android.telephony.SubscriptionManager$VoidPropertyInvalidatedCache sDefaultDataSubIdCache> = r28;

        r29 = new android.telephony.SubscriptionManager$VoidPropertyInvalidatedCache;

        $r7 = <android.telephony._$$Lambda$VoWbarPy40APZWYZ2AqZZxi_Jm8: android.telephony.'-$$Lambda$VoWbarPy40APZWYZ2AqZZxi_Jm8' INSTANCE>;

        r36 = (com.android.internal.util.FunctionalUtils$ThrowingFunction) $r7;

        specialinvoke r29.<android.telephony.SubscriptionManager$VoidPropertyInvalidatedCache: void <init>(com.android.internal.util.FunctionalUtils$ThrowingFunction,java.lang.String,java.lang.Object)>(r36, "cache_key.telephony.get_default_sms_sub_id", r1);

        <android.telephony.SubscriptionManager: android.telephony.SubscriptionManager$VoidPropertyInvalidatedCache sDefaultSmsSubIdCache> = r29;

        r30 = new android.telephony.SubscriptionManager$VoidPropertyInvalidatedCache;

        $r9 = <android.telephony._$$Lambda$0NbX5ZB4Wdogc_DUyrSlzFoDHvU: android.telephony.'-$$Lambda$0NbX5ZB4Wdogc_DUyrSlzFoDHvU' INSTANCE>;

        r37 = (com.android.internal.util.FunctionalUtils$ThrowingFunction) $r9;

        specialinvoke r30.<android.telephony.SubscriptionManager$VoidPropertyInvalidatedCache: void <init>(com.android.internal.util.FunctionalUtils$ThrowingFunction,java.lang.String,java.lang.Object)>(r37, "cache_key.telephony.get_active_data_sub_id", r1);

        <android.telephony.SubscriptionManager: android.telephony.SubscriptionManager$VoidPropertyInvalidatedCache sActiveDataSubIdCache> = r30;

        r31 = new android.telephony.SubscriptionManager$IntegerPropertyInvalidatedCache;

        $r11 = <android.telephony._$$Lambda$Vaai8Sbs2IpNs9Mr8tx6u3YoWp4: android.telephony.'-$$Lambda$Vaai8Sbs2IpNs9Mr8tx6u3YoWp4' INSTANCE>;

        r38 = (com.android.internal.util.FunctionalUtils$ThrowingBiFunction) $r11;

        specialinvoke r31.<android.telephony.SubscriptionManager$IntegerPropertyInvalidatedCache: void <init>(com.android.internal.util.FunctionalUtils$ThrowingBiFunction,java.lang.String,java.lang.Object)>(r38, "cache_key.telephony.get_slot_index", r1);

        <android.telephony.SubscriptionManager: android.telephony.SubscriptionManager$IntegerPropertyInvalidatedCache sSlotIndexCache> = r31;

        r32 = new android.telephony.SubscriptionManager$IntegerPropertyInvalidatedCache;

        $r13 = <android.telephony._$$Lambda$U5dt9Oz29BpLzJ19WIl50whqAGs: android.telephony.'-$$Lambda$U5dt9Oz29BpLzJ19WIl50whqAGs' INSTANCE>;

        r39 = (com.android.internal.util.FunctionalUtils$ThrowingBiFunction) $r13;

        specialinvoke r32.<android.telephony.SubscriptionManager$IntegerPropertyInvalidatedCache: void <init>(com.android.internal.util.FunctionalUtils$ThrowingBiFunction,java.lang.String,java.lang.Object)>(r39, "cache_key.telephony.get_default_sub_id", r1);

        <android.telephony.SubscriptionManager: android.telephony.SubscriptionManager$IntegerPropertyInvalidatedCache sPhoneIdCache> = r32;

        $r14 = <android.telephony.SubscriptionManager: android.net.Uri CONTENT_URI>;

        $r15 = staticinvoke <android.net.Uri: android.net.Uri withAppendedPath(android.net.Uri,java.lang.String)>($r14, "wfc");

        <android.telephony.SubscriptionManager: android.net.Uri WFC_ENABLED_CONTENT_URI> = $r15;

        $r16 = <android.telephony.SubscriptionManager: android.net.Uri CONTENT_URI>;

        $r17 = staticinvoke <android.net.Uri: android.net.Uri withAppendedPath(android.net.Uri,java.lang.String)>($r16, "advanced_calling");

        <android.telephony.SubscriptionManager: android.net.Uri ADVANCED_CALLING_ENABLED_CONTENT_URI> = $r17;

        $r18 = <android.telephony.SubscriptionManager: android.net.Uri CONTENT_URI>;

        $r19 = staticinvoke <android.net.Uri: android.net.Uri withAppendedPath(android.net.Uri,java.lang.String)>($r18, "wfc_mode");

        <android.telephony.SubscriptionManager: android.net.Uri WFC_MODE_CONTENT_URI> = $r19;

        $r20 = <android.telephony.SubscriptionManager: android.net.Uri CONTENT_URI>;

        $r21 = staticinvoke <android.net.Uri: android.net.Uri withAppendedPath(android.net.Uri,java.lang.String)>($r20, "wfc_roaming_mode");

        <android.telephony.SubscriptionManager: android.net.Uri WFC_ROAMING_MODE_CONTENT_URI> = $r21;

        $r22 = <android.telephony.SubscriptionManager: android.net.Uri CONTENT_URI>;

        $r23 = staticinvoke <android.net.Uri: android.net.Uri withAppendedPath(android.net.Uri,java.lang.String)>($r22, "vt_enabled");

        <android.telephony.SubscriptionManager: android.net.Uri VT_ENABLED_CONTENT_URI> = $r23;

        $r24 = <android.telephony.SubscriptionManager: android.net.Uri CONTENT_URI>;

        $r25 = staticinvoke <android.net.Uri: android.net.Uri withAppendedPath(android.net.Uri,java.lang.String)>($r24, "wfc_roaming_enabled");

        <android.telephony.SubscriptionManager: android.net.Uri WFC_ROAMING_ENABLED_CONTENT_URI> = $r25;

        r33 = new java.util.concurrent.ConcurrentHashMap;

        specialinvoke r33.<java.util.concurrent.ConcurrentHashMap: void <init>()>();

        <android.telephony.SubscriptionManager: java.util.Map sResourcesCache> = r33;

        return;
    }

    public void <init>(android.content.Context)
    {
        android.telephony.SubscriptionManager r0;
        android.content.Context r1;

        r0 := @this: android.telephony.SubscriptionManager;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.telephony.SubscriptionManager: android.content.Context mContext> = r1;

        return;
    }

    public static void clearCaches()
    {
        android.telephony.SubscriptionManager$VoidPropertyInvalidatedCache $r0, $r1, $r2, $r3;
        android.telephony.SubscriptionManager$IntegerPropertyInvalidatedCache $r4, $r5;

        $r0 = <android.telephony.SubscriptionManager: android.telephony.SubscriptionManager$VoidPropertyInvalidatedCache sDefaultSubIdCache>;

        virtualinvoke $r0.<android.telephony.SubscriptionManager$VoidPropertyInvalidatedCache: void clear()>();

        $r1 = <android.telephony.SubscriptionManager: android.telephony.SubscriptionManager$VoidPropertyInvalidatedCache sDefaultDataSubIdCache>;

        virtualinvoke $r1.<android.telephony.SubscriptionManager$VoidPropertyInvalidatedCache: void clear()>();

        $r2 = <android.telephony.SubscriptionManager: android.telephony.SubscriptionManager$VoidPropertyInvalidatedCache sActiveDataSubIdCache>;

        virtualinvoke $r2.<android.telephony.SubscriptionManager$VoidPropertyInvalidatedCache: void clear()>();

        $r3 = <android.telephony.SubscriptionManager: android.telephony.SubscriptionManager$VoidPropertyInvalidatedCache sDefaultSmsSubIdCache>;

        virtualinvoke $r3.<android.telephony.SubscriptionManager$VoidPropertyInvalidatedCache: void clear()>();

        $r4 = <android.telephony.SubscriptionManager: android.telephony.SubscriptionManager$IntegerPropertyInvalidatedCache sSlotIndexCache>;

        virtualinvoke $r4.<android.telephony.SubscriptionManager$IntegerPropertyInvalidatedCache: void clear()>();

        $r5 = <android.telephony.SubscriptionManager: android.telephony.SubscriptionManager$IntegerPropertyInvalidatedCache sPhoneIdCache>;

        virtualinvoke $r5.<android.telephony.SubscriptionManager$IntegerPropertyInvalidatedCache: void clear()>();

        return;
    }

    public static void disableCaching()
    {
        android.telephony.SubscriptionManager$VoidPropertyInvalidatedCache $r0, $r1, $r2, $r3;
        android.telephony.SubscriptionManager$IntegerPropertyInvalidatedCache $r4, $r5;

        $r0 = <android.telephony.SubscriptionManager: android.telephony.SubscriptionManager$VoidPropertyInvalidatedCache sDefaultSubIdCache>;

        virtualinvoke $r0.<android.telephony.SubscriptionManager$VoidPropertyInvalidatedCache: void disableLocal()>();

        $r1 = <android.telephony.SubscriptionManager: android.telephony.SubscriptionManager$VoidPropertyInvalidatedCache sDefaultDataSubIdCache>;

        virtualinvoke $r1.<android.telephony.SubscriptionManager$VoidPropertyInvalidatedCache: void disableLocal()>();

        $r2 = <android.telephony.SubscriptionManager: android.telephony.SubscriptionManager$VoidPropertyInvalidatedCache sActiveDataSubIdCache>;

        virtualinvoke $r2.<android.telephony.SubscriptionManager$VoidPropertyInvalidatedCache: void disableLocal()>();

        $r3 = <android.telephony.SubscriptionManager: android.telephony.SubscriptionManager$VoidPropertyInvalidatedCache sDefaultSmsSubIdCache>;

        virtualinvoke $r3.<android.telephony.SubscriptionManager$VoidPropertyInvalidatedCache: void disableLocal()>();

        $r4 = <android.telephony.SubscriptionManager: android.telephony.SubscriptionManager$IntegerPropertyInvalidatedCache sSlotIndexCache>;

        virtualinvoke $r4.<android.telephony.SubscriptionManager$IntegerPropertyInvalidatedCache: void disableLocal()>();

        $r5 = <android.telephony.SubscriptionManager: android.telephony.SubscriptionManager$IntegerPropertyInvalidatedCache sPhoneIdCache>;

        virtualinvoke $r5.<android.telephony.SubscriptionManager$IntegerPropertyInvalidatedCache: void disableLocal()>();

        return;
    }

    public static android.telephony.SubscriptionManager 'from'(android.content.Context)
    {
        android.content.Context r0;
        java.lang.Object $r1;
        android.telephony.SubscriptionManager $r2;

        r0 := @parameter0: android.content.Context;

        $r1 = virtualinvoke r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("telephony_subscription_service");

        $r2 = (android.telephony.SubscriptionManager) $r1;

        return $r2;
    }

    public static int getActiveDataSubscriptionId()
    {
        android.telephony.SubscriptionManager$VoidPropertyInvalidatedCache $r0;
        java.lang.Object $r1;
        java.lang.Integer $r2;
        int $i0;

        $r0 = <android.telephony.SubscriptionManager: android.telephony.SubscriptionManager$VoidPropertyInvalidatedCache sActiveDataSubIdCache>;

        $r1 = virtualinvoke $r0.<android.telephony.SubscriptionManager$VoidPropertyInvalidatedCache: java.lang.Object query(java.lang.Object)>(null);

        $r2 = (java.lang.Integer) $r1;

        $i0 = virtualinvoke $r2.<java.lang.Integer: int intValue()>();

        return $i0;
    }

    public static boolean getBooleanSubscriptionProperty(int, java.lang.String, boolean, android.content.Context)
    {
        android.content.Context r0;
        java.lang.Throwable $r1;
        int i0, i1;
        java.lang.String r2, r3;
        boolean z0, z1;

        i0 := @parameter0: int;

        r2 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        r0 := @parameter3: android.content.Context;

        r3 = staticinvoke <android.telephony.SubscriptionManager: java.lang.String getSubscriptionProperty(int,java.lang.String,android.content.Context)>(i0, r2, r0);

        if r3 == null goto label6;

     label1:
        i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r3);

     label2:
        z1 = 1;

        if i1 != 1 goto label3;

        goto label4;

     label3:
        z1 = 0;

     label4:
        return z1;

     label5:
        $r1 := @caughtexception;

        staticinvoke <android.telephony.SubscriptionManager: void logd(java.lang.String)>("getBooleanSubscriptionProperty NumberFormat exception");

     label6:
        return z0;

        catch java.lang.NumberFormatException from label1 to label2 with label5;
    }

    public static int getDefaultDataSubscriptionId()
    {
        android.telephony.SubscriptionManager$VoidPropertyInvalidatedCache $r0;
        java.lang.Object $r1;
        java.lang.Integer $r2;
        int $i0;

        $r0 = <android.telephony.SubscriptionManager: android.telephony.SubscriptionManager$VoidPropertyInvalidatedCache sDefaultDataSubIdCache>;

        $r1 = virtualinvoke $r0.<android.telephony.SubscriptionManager$VoidPropertyInvalidatedCache: java.lang.Object query(java.lang.Object)>(null);

        $r2 = (java.lang.Integer) $r1;

        $i0 = virtualinvoke $r2.<java.lang.Integer: int intValue()>();

        return $i0;
    }

    public static int getDefaultSmsSubscriptionId()
    {
        android.telephony.SubscriptionManager$VoidPropertyInvalidatedCache $r0;
        java.lang.Object $r1;
        java.lang.Integer $r2;
        int $i0;

        $r0 = <android.telephony.SubscriptionManager: android.telephony.SubscriptionManager$VoidPropertyInvalidatedCache sDefaultSmsSubIdCache>;

        $r1 = virtualinvoke $r0.<android.telephony.SubscriptionManager$VoidPropertyInvalidatedCache: java.lang.Object query(java.lang.Object)>(null);

        $r2 = (java.lang.Integer) $r1;

        $i0 = virtualinvoke $r2.<java.lang.Integer: int intValue()>();

        return $i0;
    }

    public static int getDefaultSubscriptionId()
    {
        android.telephony.SubscriptionManager$VoidPropertyInvalidatedCache $r0;
        java.lang.Object $r1;
        java.lang.Integer $r2;
        int $i0;

        $r0 = <android.telephony.SubscriptionManager: android.telephony.SubscriptionManager$VoidPropertyInvalidatedCache sDefaultSubIdCache>;

        $r1 = virtualinvoke $r0.<android.telephony.SubscriptionManager$VoidPropertyInvalidatedCache: java.lang.Object query(java.lang.Object)>(null);

        $r2 = (java.lang.Integer) $r1;

        $i0 = virtualinvoke $r2.<java.lang.Integer: int intValue()>();

        return $i0;
    }

    public static int getDefaultVoicePhoneId()
    {
        int $i0, $i1;

        $i0 = staticinvoke <android.telephony.SubscriptionManager: int getDefaultVoiceSubscriptionId()>();

        $i1 = staticinvoke <android.telephony.SubscriptionManager: int getPhoneId(int)>($i0);

        return $i1;
    }

    public static int getDefaultVoiceSubscriptionId()
    {
        android.os.RemoteException $r0;
        com.android.internal.telephony.ISub r1;
        int i1;

     label1:
        r1 = staticinvoke <android.telephony.TelephonyManager: com.android.internal.telephony.ISub getSubscriptionService()>();

     label2:
        i1 = -1;

        if r1 == null goto label4;

     label3:
        i1 = interfaceinvoke r1.<com.android.internal.telephony.ISub: int getDefaultVoiceSubId()>();

     label4:
        goto label6;

     label5:
        $r0 := @caughtexception;

        i1 = -1;

     label6:
        return i1;

        catch android.os.RemoteException from label1 to label2 with label5;
        catch android.os.RemoteException from label3 to label4 with label5;
    }

    public static int getIntegerSubscriptionProperty(int, java.lang.String, int, android.content.Context)
    {
        int i0, i1, i2;
        android.content.Context r0;
        java.lang.Throwable $r1;
        java.lang.String r2, r3;

        i1 := @parameter0: int;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r0 := @parameter3: android.content.Context;

        r3 = staticinvoke <android.telephony.SubscriptionManager: java.lang.String getSubscriptionProperty(int,java.lang.String,android.content.Context)>(i1, r2, r0);

        if r3 == null goto label4;

     label1:
        i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r3);

     label2:
        return i2;

     label3:
        $r1 := @caughtexception;

        staticinvoke <android.telephony.SubscriptionManager: void logd(java.lang.String)>("getIntegerSubscriptionProperty NumberFormat exception");

     label4:
        return i0;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    public static long getLongSubscriptionProperty(int, java.lang.String, long, android.content.Context)
    {
        int i0;
        long l1, l2;
        android.content.Context r0;
        java.lang.Throwable $r1;
        java.lang.String r2, r3;

        i0 := @parameter0: int;

        r2 := @parameter1: java.lang.String;

        l1 := @parameter2: long;

        r0 := @parameter3: android.content.Context;

        r3 = staticinvoke <android.telephony.SubscriptionManager: java.lang.String getSubscriptionProperty(int,java.lang.String,android.content.Context)>(i0, r2, r0);

        if r3 == null goto label4;

     label1:
        l2 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(r3);

     label2:
        return l2;

     label3:
        $r1 := @caughtexception;

        staticinvoke <android.telephony.SubscriptionManager: void logd(java.lang.String)>("getLongSubscriptionProperty NumberFormat exception");

     label4:
        return l1;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    private android.net.NetworkPolicyManager getNetworkPolicyManager()
    {
        android.telephony.SubscriptionManager r0;
        android.content.Context $r1;
        java.lang.Object $r2;
        android.net.NetworkPolicyManager $r3;

        r0 := @this: android.telephony.SubscriptionManager;

        $r1 = r0.<android.telephony.SubscriptionManager: android.content.Context mContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("netpolicy");

        $r3 = (android.net.NetworkPolicyManager) $r2;

        return $r3;
    }

    public static int getPhoneId(int)
    {
        int i0, $i1;
        android.telephony.SubscriptionManager$IntegerPropertyInvalidatedCache $r0;
        java.lang.Integer $r1, $r3;
        java.lang.Object $r2;

        i0 := @parameter0: int;

        $r0 = <android.telephony.SubscriptionManager: android.telephony.SubscriptionManager$IntegerPropertyInvalidatedCache sPhoneIdCache>;

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r2 = virtualinvoke $r0.<android.telephony.SubscriptionManager$IntegerPropertyInvalidatedCache: java.lang.Object query(java.lang.Object)>($r1);

        $r3 = (java.lang.Integer) $r2;

        $i1 = virtualinvoke $r3.<java.lang.Integer: int intValue()>();

        return $i1;
    }

    public static android.content.res.Resources getResourcesForSubId(android.content.Context, int)
    {
        android.content.Context r0;
        int i0;
        android.content.res.Resources $r1;

        r0 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        $r1 = staticinvoke <android.telephony.SubscriptionManager: android.content.res.Resources getResourcesForSubId(android.content.Context,int,boolean)>(r0, i0, 0);

        return $r1;
    }

    public static android.content.res.Resources getResourcesForSubId(android.content.Context, int, boolean)
    {
        int i0, $i1, $i2, $i3;
        boolean z0, $z1, $z2;
        android.telephony.SubscriptionInfo r0;
        android.content.Context $r1, r9;
        java.util.Map $r2, $r5, $r6;
        java.util.Locale $r3;
        java.lang.Integer $r4;
        java.lang.Object $r7;
        android.content.res.Resources $r8, r15;
        android.util.Pair r10, r11;
        android.telephony.SubscriptionManager $r12;
        android.content.res.Configuration $r13;

        r9 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        r10 = null;

        $z1 = staticinvoke <android.telephony.SubscriptionManager: boolean isValidSubscriptionId(int)>(i0);

        if $z1 == 0 goto label1;

        r10 = null;

        if z0 != 0 goto label1;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        r11 = staticinvoke <android.util.Pair: android.util.Pair create(java.lang.Object,java.lang.Object)>(r9, $r4);

        r10 = r11;

        $r5 = <android.telephony.SubscriptionManager: java.util.Map sResourcesCache>;

        $z2 = interfaceinvoke $r5.<java.util.Map: boolean containsKey(java.lang.Object)>(r11);

        if $z2 == 0 goto label1;

        $r6 = <android.telephony.SubscriptionManager: java.util.Map sResourcesCache>;

        $r7 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>(r11);

        $r8 = (android.content.res.Resources) $r7;

        return $r8;

     label1:
        $r12 = staticinvoke <android.telephony.SubscriptionManager: android.telephony.SubscriptionManager 'from'(android.content.Context)>(r9);

        r0 = virtualinvoke $r12.<android.telephony.SubscriptionManager: android.telephony.SubscriptionInfo getActiveSubscriptionInfo(int)>(i0);

        $r13 = new android.content.res.Configuration;

        specialinvoke $r13.<android.content.res.Configuration: void <init>()>();

        if r0 == null goto label2;

        $i1 = virtualinvoke r0.<android.telephony.SubscriptionInfo: int getMcc()>();

        $r13.<android.content.res.Configuration: int mcc> = $i1;

        $i2 = virtualinvoke r0.<android.telephony.SubscriptionInfo: int getMnc()>();

        $r13.<android.content.res.Configuration: int mnc> = $i2;

        $i3 = $r13.<android.content.res.Configuration: int mnc>;

        if $i3 != 0 goto label2;

        $r13.<android.content.res.Configuration: int mnc> = 65535;

     label2:
        if z0 == 0 goto label3;

        $r3 = <java.util.Locale: java.util.Locale ROOT>;

        virtualinvoke $r13.<android.content.res.Configuration: void setLocale(java.util.Locale)>($r3);

     label3:
        $r1 = virtualinvoke r9.<android.content.Context: android.content.Context createConfigurationContext(android.content.res.Configuration)>($r13);

        r15 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        if r10 == null goto label4;

        $r2 = <android.telephony.SubscriptionManager: java.util.Map sResourcesCache>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r10, r15);

     label4:
        return r15;
    }

    public static int getSimStateForSlotIndex(int)
    {
        int i0, i2;
        android.os.RemoteException $r0;
        com.android.internal.telephony.ISub r1;

        i0 := @parameter0: int;

        i2 = 0;

     label1:
        r1 = staticinvoke <android.telephony.TelephonyManager: com.android.internal.telephony.ISub getSubscriptionService()>();

     label2:
        if r1 == null goto label4;

     label3:
        i2 = interfaceinvoke r1.<com.android.internal.telephony.ISub: int getSimStateForSlotIndex(int)>(i0);

     label4:
        goto label6;

     label5:
        $r0 := @caughtexception;

        i2 = 0;

     label6:
        return i2;

        catch android.os.RemoteException from label1 to label2 with label5;
        catch android.os.RemoteException from label3 to label4 with label5;
    }

    public static int getSlotIndex(int)
    {
        int i0, $i1;
        android.telephony.SubscriptionManager$IntegerPropertyInvalidatedCache $r0;
        java.lang.Integer $r1, $r3;
        java.lang.Object $r2;

        i0 := @parameter0: int;

        $r0 = <android.telephony.SubscriptionManager: android.telephony.SubscriptionManager$IntegerPropertyInvalidatedCache sSlotIndexCache>;

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r2 = virtualinvoke $r0.<android.telephony.SubscriptionManager$IntegerPropertyInvalidatedCache: java.lang.Object query(java.lang.Object)>($r1);

        $r3 = (java.lang.Integer) $r2;

        $i1 = virtualinvoke $r3.<java.lang.Integer: int intValue()>();

        return $i1;
    }

    public static int[] getSubId(int)
    {
        int i0;
        com.android.internal.telephony.ISub r0;
        boolean $z0;
        android.os.RemoteException $r1;
        int[] r2;

        i0 := @parameter0: int;

        $z0 = staticinvoke <android.telephony.SubscriptionManager: boolean isValidSlotIndex(int)>(i0);

        if $z0 != 0 goto label1;

        staticinvoke <android.telephony.SubscriptionManager: void logd(java.lang.String)>("[getSubId]- fail");

        return null;

     label1:
        r2 = null;

     label2:
        r0 = staticinvoke <android.telephony.TelephonyManager: com.android.internal.telephony.ISub getSubscriptionService()>();

     label3:
        if r0 == null goto label5;

     label4:
        r2 = interfaceinvoke r0.<com.android.internal.telephony.ISub: int[] getSubId(int)>(i0);

     label5:
        goto label7;

     label6:
        $r1 := @caughtexception;

        r2 = null;

     label7:
        return r2;

        catch android.os.RemoteException from label2 to label3 with label6;
        catch android.os.RemoteException from label4 to label5 with label6;
    }

    private static java.lang.String getSubscriptionProperty(int, java.lang.String, android.content.Context)
    {
        int i0;
        android.content.Context r0;
        com.android.internal.telephony.ISub r1;
        java.lang.String $r2, $r3, r5, r6;
        android.os.RemoteException $r4;

        i0 := @parameter0: int;

        r5 := @parameter1: java.lang.String;

        r0 := @parameter2: android.content.Context;

        r6 = null;

     label1:
        r1 = staticinvoke <android.telephony.TelephonyManager: com.android.internal.telephony.ISub getSubscriptionService()>();

     label2:
        if r1 == null goto label4;

     label3:
        $r2 = virtualinvoke r0.<android.content.Context: java.lang.String getOpPackageName()>();

        $r3 = virtualinvoke r0.<android.content.Context: java.lang.String getAttributionTag()>();

        r6 = interfaceinvoke r1.<com.android.internal.telephony.ISub: java.lang.String getSubscriptionProperty(int,java.lang.String,java.lang.String,java.lang.String)>(i0, r5, $r2, $r3);

     label4:
        goto label6;

     label5:
        $r4 := @caughtexception;

        r6 = null;

     label6:
        return r6;

        catch android.os.RemoteException from label1 to label2 with label5;
        catch android.os.RemoteException from label3 to label4 with label5;
    }

    public static android.net.Uri getUriForSubscriptionId(int)
    {
        int i0;
        android.net.Uri $r0, $r2;
        java.lang.String $r1;

        i0 := @parameter0: int;

        $r0 = <android.telephony.SubscriptionManager: android.net.Uri CONTENT_URI>;

        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(i0);

        $r2 = staticinvoke <android.net.Uri: android.net.Uri withAppendedPath(android.net.Uri,java.lang.String)>($r0, $r1);

        return $r2;
    }

    public static void invalidateActiveDataSubIdCaches()
    {
        staticinvoke <android.app.PropertyInvalidatedCache: void invalidateCache(java.lang.String)>("cache_key.telephony.get_active_data_sub_id");

        return;
    }

    public static void invalidateDefaultDataSubIdCaches()
    {
        staticinvoke <android.app.PropertyInvalidatedCache: void invalidateCache(java.lang.String)>("cache_key.telephony.get_default_data_sub_id");

        return;
    }

    public static void invalidateDefaultSmsSubIdCaches()
    {
        staticinvoke <android.app.PropertyInvalidatedCache: void invalidateCache(java.lang.String)>("cache_key.telephony.get_default_sms_sub_id");

        return;
    }

    public static void invalidateDefaultSubIdCaches()
    {
        staticinvoke <android.app.PropertyInvalidatedCache: void invalidateCache(java.lang.String)>("cache_key.telephony.get_default_sub_id");

        return;
    }

    public static void invalidateSlotIndexCaches()
    {
        staticinvoke <android.app.PropertyInvalidatedCache: void invalidateCache(java.lang.String)>("cache_key.telephony.get_slot_index");

        return;
    }

    private boolean isSystemProcess()
    {
        android.telephony.SubscriptionManager r0;
        int $i0;
        boolean z0;

        r0 := @this: android.telephony.SubscriptionManager;

        $i0 = staticinvoke <android.os.Process: int myUid()>();

        if $i0 != 1000 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public static boolean isUsableSubIdValue(int)
    {
        int i0;
        boolean z0;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        if i0 > 2147483646 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public static boolean isUsableSubscriptionId(int)
    {
        int i0;
        boolean $z0;

        i0 := @parameter0: int;

        $z0 = staticinvoke <android.telephony.SubscriptionManager: boolean isUsableSubIdValue(int)>(i0);

        return $z0;
    }

    public static boolean isValidPhoneId(int)
    {
        int i0, $i1;
        android.telephony.TelephonyManager $r0;
        boolean z0;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        $r0 = staticinvoke <android.telephony.TelephonyManager: android.telephony.TelephonyManager getDefault()>();

        $i1 = virtualinvoke $r0.<android.telephony.TelephonyManager: int getActiveModemCount()>();

        if i0 >= $i1 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public static boolean isValidSlotIndex(int)
    {
        int i0, $i1;
        android.telephony.TelephonyManager $r0;
        boolean z0;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        $r0 = staticinvoke <android.telephony.TelephonyManager: android.telephony.TelephonyManager getDefault()>();

        $i1 = virtualinvoke $r0.<android.telephony.TelephonyManager: int getActiveModemCount()>();

        if i0 >= $i1 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public static boolean isValidSubscriptionId(int)
    {
        int i0;
        boolean z0;

        i0 := @parameter0: int;

        if i0 <= -1 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    static void lambda$addOnSubscriptionsChangedListener$0(android.telephony.SubscriptionManager$OnSubscriptionsChangedListener)
    {
        android.telephony.SubscriptionManager$OnSubscriptionsChangedListener r0;

        r0 := @parameter0: android.telephony.SubscriptionManager$OnSubscriptionsChangedListener;

        virtualinvoke r0.<android.telephony.SubscriptionManager$OnSubscriptionsChangedListener: void onAddListenerFailed()>();

        return;
    }

    static int lambda$addSubscriptionsIntoGroup$8(java.lang.Integer)
    {
        java.lang.Integer r0;
        int $i0;

        r0 := @parameter0: java.lang.Integer;

        $i0 = virtualinvoke r0.<java.lang.Integer: int intValue()>();

        return $i0;
    }

    static int lambda$createSubscriptionGroup$7(java.lang.Integer)
    {
        java.lang.Integer r0;
        int $i0;

        r0 := @parameter0: java.lang.Integer;

        $i0 = virtualinvoke r0.<java.lang.Integer: int intValue()>();

        return $i0;
    }

    static int lambda$removeSubscriptionsFromGroup$9(java.lang.Integer)
    {
        java.lang.Integer r0;
        int $i0;

        r0 := @parameter0: java.lang.Integer;

        $i0 = virtualinvoke r0.<java.lang.Integer: int intValue()>();

        return $i0;
    }

    static int lambda$setDataRoaming$5(int, int, com.android.internal.telephony.ISub) throws android.os.RemoteException
    {
        int i0, i1, $i2;
        com.android.internal.telephony.ISub r0;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r0 := @parameter2: com.android.internal.telephony.ISub;

        $i2 = interfaceinvoke r0.<com.android.internal.telephony.ISub: int setDataRoaming(int,int)>(i0, i1);

        return $i2;
    }

    static int lambda$setDisplayName$3(java.lang.String, int, int, com.android.internal.telephony.ISub) throws android.os.RemoteException
    {
        java.lang.String r0;
        int i0, i1, $i2;
        com.android.internal.telephony.ISub r1;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 := @parameter3: com.android.internal.telephony.ISub;

        $i2 = interfaceinvoke r1.<com.android.internal.telephony.ISub: int setDisplayNameUsingSrc(java.lang.String,int,int)>(r0, i0, i1);

        return $i2;
    }

    static int lambda$setDisplayNumber$4(java.lang.String, int, com.android.internal.telephony.ISub) throws android.os.RemoteException
    {
        java.lang.String r0;
        int i0, $i1;
        com.android.internal.telephony.ISub r1;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r1 := @parameter2: com.android.internal.telephony.ISub;

        $i1 = interfaceinvoke r1.<com.android.internal.telephony.ISub: int setDisplayNumber(java.lang.String,int)>(r0, i0);

        return $i1;
    }

    static int lambda$setIconTint$2(int, int, com.android.internal.telephony.ISub) throws android.os.RemoteException
    {
        int i0, i1, $i2;
        com.android.internal.telephony.ISub r0;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r0 := @parameter2: com.android.internal.telephony.ISub;

        $i2 = interfaceinvoke r0.<com.android.internal.telephony.ISub: int setIconTint(int,int)>(i0, i1);

        return $i2;
    }

    private static void logd(java.lang.String)
    {
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        staticinvoke <com.android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("SubscriptionManager", r0);

        return;
    }

    private static void loge(java.lang.String)
    {
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        staticinvoke <com.android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("SubscriptionManager", r0);

        return;
    }

    public static void putPhoneIdAndSubIdExtra(android.content.Intent, int)
    {
        android.content.Intent r0;
        int i0, $i1, $i2;
        int[] r1;

        r0 := @parameter0: android.content.Intent;

        i0 := @parameter1: int;

        r1 = staticinvoke <android.telephony.SubscriptionManager: int[] getSubId(int)>(i0);

        if r1 == null goto label1;

        $i1 = lengthof r1;

        if $i1 <= 0 goto label1;

        $i2 = r1[0];

        staticinvoke <android.telephony.SubscriptionManager: void putPhoneIdAndSubIdExtra(android.content.Intent,int,int)>(r0, i0, $i2);

        goto label2;

     label1:
        staticinvoke <android.telephony.SubscriptionManager: void logd(java.lang.String)>("putPhoneIdAndSubIdExtra: no valid subs");

        virtualinvoke r0.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("phone", i0);

        virtualinvoke r0.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("android.telephony.extra.SLOT_INDEX", i0);

     label2:
        return;
    }

    public static void putPhoneIdAndSubIdExtra(android.content.Intent, int, int)
    {
        android.content.Intent r0;
        int i0, i1;

        r0 := @parameter0: android.content.Intent;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        virtualinvoke r0.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("android.telephony.extra.SLOT_INDEX", i0);

        virtualinvoke r0.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("phone", i0);

        staticinvoke <android.telephony.SubscriptionManager: void putSubscriptionIdExtra(android.content.Intent,int)>(r0, i1);

        return;
    }

    public static void putSubscriptionIdExtra(android.content.Intent, int)
    {
        android.content.Intent r0;
        int i0;

        r0 := @parameter0: android.content.Intent;

        i0 := @parameter1: int;

        virtualinvoke r0.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("android.telephony.extra.SUBSCRIPTION_INDEX", i0);

        virtualinvoke r0.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("subscription", i0);

        return;
    }

    public static void setSubscriptionProperty(int, java.lang.String, java.lang.String)
    {
        int i0;
        java.lang.String r0, r3;
        com.android.internal.telephony.ISub r1;
        android.os.RemoteException $r2;

        i0 := @parameter0: int;

        r3 := @parameter1: java.lang.String;

        r0 := @parameter2: java.lang.String;

     label1:
        r1 = staticinvoke <android.telephony.TelephonyManager: com.android.internal.telephony.ISub getSubscriptionService()>();

     label2:
        if r1 == null goto label4;

     label3:
        interfaceinvoke r1.<com.android.internal.telephony.ISub: int setSubscriptionProperty(int,java.lang.String,java.lang.String)>(i0, r3, r0);

     label4:
        goto label6;

     label5:
        $r2 := @caughtexception;

     label6:
        return;

        catch android.os.RemoteException from label1 to label2 with label5;
        catch android.os.RemoteException from label3 to label4 with label5;
    }

    private int setSubscriptionPropertyHelper(int, java.lang.String, android.telephony.SubscriptionManager$CallISubMethodHelper)
    {
        android.telephony.SubscriptionManager r0;
        boolean $z0;
        java.lang.StringBuilder $r1;
        java.lang.String $r5, r7;
        android.os.RemoteException $r6;
        int i1, i2;
        android.telephony.SubscriptionManager$CallISubMethodHelper r8;
        com.android.internal.telephony.ISub r10;

        r0 := @this: android.telephony.SubscriptionManager;

        i1 := @parameter0: int;

        r7 := @parameter1: java.lang.String;

        r8 := @parameter2: android.telephony.SubscriptionManager$CallISubMethodHelper;

        $z0 = staticinvoke <android.telephony.SubscriptionManager: boolean isValidSubscriptionId(int)>(i1);

        if $z0 != 0 goto label1;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]- fail");

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.SubscriptionManager: void logd(java.lang.String)>($r5);

        return -1;

     label1:
        i2 = 0;

     label2:
        r10 = staticinvoke <android.telephony.TelephonyManager: com.android.internal.telephony.ISub getSubscriptionService()>();

     label3:
        if r10 == null goto label5;

     label4:
        i2 = interfaceinvoke r8.<android.telephony.SubscriptionManager$CallISubMethodHelper: int callMethod(com.android.internal.telephony.ISub)>(r10);

     label5:
        goto label7;

     label6:
        $r6 := @caughtexception;

        i2 = 0;

     label7:
        return i2;

        catch android.os.RemoteException from label2 to label3 with label6;
        catch android.os.RemoteException from label4 to label5 with label6;
    }

    public void addOnOpportunisticSubscriptionsChangedListener(java.util.concurrent.Executor, android.telephony.SubscriptionManager$OnOpportunisticSubscriptionsChangedListener)
    {
        android.telephony.SubscriptionManager r0;
        java.util.concurrent.Executor r1;
        android.telephony.SubscriptionManager$OnOpportunisticSubscriptionsChangedListener r2;
        android.content.Context $r3, r6;
        java.lang.Object $r4;
        android.telephony.TelephonyRegistryManager r7;

        r0 := @this: android.telephony.SubscriptionManager;

        r1 := @parameter0: java.util.concurrent.Executor;

        r2 := @parameter1: android.telephony.SubscriptionManager$OnOpportunisticSubscriptionsChangedListener;

        if r1 == null goto label4;

        if r2 != null goto label1;

        goto label4;

     label1:
        r6 = r0.<android.telephony.SubscriptionManager: android.content.Context mContext>;

        if r6 == null goto label2;

        virtualinvoke r6.<android.content.Context: java.lang.String getOpPackageName()>();

        goto label2;

     label2:
        $r3 = r0.<android.telephony.SubscriptionManager: android.content.Context mContext>;

        $r4 = virtualinvoke $r3.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("telephony_registry");

        r7 = (android.telephony.TelephonyRegistryManager) $r4;

        if r7 == null goto label3;

        virtualinvoke r7.<android.telephony.TelephonyRegistryManager: void addOnOpportunisticSubscriptionsChangedListener(android.telephony.SubscriptionManager$OnOpportunisticSubscriptionsChangedListener,java.util.concurrent.Executor)>(r2, r1);

     label3:
        return;

     label4:
        return;
    }

    public void addOnSubscriptionsChangedListener(android.telephony.SubscriptionManager$OnSubscriptionsChangedListener)
    {
        android.telephony.SubscriptionManager r0;
        android.telephony.SubscriptionManager$OnSubscriptionsChangedListener r1;
        com.android.internal.telephony.util.HandlerExecutor $r2;

        r0 := @this: android.telephony.SubscriptionManager;

        r1 := @parameter0: android.telephony.SubscriptionManager$OnSubscriptionsChangedListener;

        if r1 != null goto label1;

        return;

     label1:
        $r2 = staticinvoke <android.telephony.SubscriptionManager$OnSubscriptionsChangedListener: com.android.internal.telephony.util.HandlerExecutor access$000(android.telephony.SubscriptionManager$OnSubscriptionsChangedListener)>(r1);

        virtualinvoke r0.<android.telephony.SubscriptionManager: void addOnSubscriptionsChangedListener(java.util.concurrent.Executor,android.telephony.SubscriptionManager$OnSubscriptionsChangedListener)>($r2, r1);

        return;
    }

    public void addOnSubscriptionsChangedListener(java.util.concurrent.Executor, android.telephony.SubscriptionManager$OnSubscriptionsChangedListener)
    {
        android.telephony.SubscriptionManager r0;
        java.util.concurrent.Executor r1;
        android.telephony.SubscriptionManager$OnSubscriptionsChangedListener r2;
        android.content.Context $r3, r11;
        java.lang.Object $r4;
        java.lang.StringBuilder $r5;
        java.lang.String $r9, r12;
        android.telephony._$$Lambda$SubscriptionManager$TVQ_FjyYRlVRKpgsmPOQsZrBDJs $r10;
        android.telephony.TelephonyRegistryManager r13;

        r0 := @this: android.telephony.SubscriptionManager;

        r1 := @parameter0: java.util.concurrent.Executor;

        r2 := @parameter1: android.telephony.SubscriptionManager$OnSubscriptionsChangedListener;

        r11 = r0.<android.telephony.SubscriptionManager: android.content.Context mContext>;

        if r11 == null goto label1;

        r12 = virtualinvoke r11.<android.content.Context: java.lang.String getOpPackageName()>();

        goto label2;

     label1:
        r12 = "<unknown>";

     label2:
        $r3 = r0.<android.telephony.SubscriptionManager: android.content.Context mContext>;

        $r4 = virtualinvoke $r3.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("telephony_registry");

        r13 = (android.telephony.TelephonyRegistryManager) $r4;

        if r13 == null goto label3;

        virtualinvoke r13.<android.telephony.TelephonyRegistryManager: void addOnSubscriptionsChangedListener(android.telephony.SubscriptionManager$OnSubscriptionsChangedListener,java.util.concurrent.Executor)>(r2, r1);

        goto label4;

     label3:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("addOnSubscriptionsChangedListener: pkgname=");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r12);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" failed to be added  due to TELEPHONY_REGISTRY_SERVICE being unavailable.");

        $r9 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.SubscriptionManager: void loge(java.lang.String)>($r9);

        $r10 = new android.telephony._$$Lambda$SubscriptionManager$TVQ_FjyYRlVRKpgsmPOQsZrBDJs;

        specialinvoke $r10.<android.telephony._$$Lambda$SubscriptionManager$TVQ_FjyYRlVRKpgsmPOQsZrBDJs: void <init>(android.telephony.SubscriptionManager$OnSubscriptionsChangedListener)>(r2);

        interfaceinvoke r1.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r10);

     label4:
        return;
    }

    public android.net.Uri addSubscriptionInfoRecord(java.lang.String, int)
    {
        android.telephony.SubscriptionManager r0;
        java.lang.String r1;
        int i0;
        boolean $z0;

        r0 := @this: android.telephony.SubscriptionManager;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        if r1 != null goto label1;

        staticinvoke <android.telephony.SubscriptionManager: void logd(java.lang.String)>("[addSubscriptionInfoRecord]- null iccId");

     label1:
        $z0 = staticinvoke <android.telephony.SubscriptionManager: boolean isValidSlotIndex(int)>(i0);

        if $z0 != 0 goto label2;

        staticinvoke <android.telephony.SubscriptionManager: void logd(java.lang.String)>("[addSubscriptionInfoRecord]- invalid slotIndex");

     label2:
        virtualinvoke r0.<android.telephony.SubscriptionManager: void addSubscriptionInfoRecord(java.lang.String,java.lang.String,int,int)>(r1, null, i0, 0);

        return null;
    }

    public void addSubscriptionInfoRecord(java.lang.String, java.lang.String, int, int)
    {
        android.telephony.SubscriptionManager r0;
        java.lang.String r1, $r5, r7;
        int i0, i4, i5;
        com.android.internal.telephony.ISub r2;
        android.os.RemoteException $r6;
        java.lang.StringBuilder r8;

        r0 := @this: android.telephony.SubscriptionManager;

        r7 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        i4 := @parameter2: int;

        i0 := @parameter3: int;

        if r7 != null goto label01;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("SubscriptionManager", "[addSubscriptionInfoRecord]- uniqueId is null");

        return;

     label01:
        r2 = staticinvoke <android.telephony.TelephonyManager: com.android.internal.telephony.ISub getSubscriptionService()>();

     label02:
        if r2 != null goto label05;

     label03:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("SubscriptionManager", "[addSubscriptionInfoRecord]- ISub service is null");

     label04:
        return;

     label05:
        i5 = interfaceinvoke r2.<com.android.internal.telephony.ISub: int addSubInfo(java.lang.String,java.lang.String,int,int)>(r7, r1, i4, i0);

     label06:
        if i5 >= 0 goto label09;

     label07:
        r8 = new java.lang.StringBuilder;

        specialinvoke r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Adding of subscription didn\'t succeed: error = ");

        virtualinvoke r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i5);

        $r5 = virtualinvoke r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("SubscriptionManager", $r5);

     label08:
        goto label10;

     label09:
        staticinvoke <android.telephony.SubscriptionManager: void logd(java.lang.String)>("successfully added new subscription");

     label10:
        goto label12;

     label11:
        $r6 := @caughtexception;

     label12:
        return;

        catch android.os.RemoteException from label01 to label02 with label11;
        catch android.os.RemoteException from label03 to label04 with label11;
        catch android.os.RemoteException from label05 to label06 with label11;
        catch android.os.RemoteException from label07 to label08 with label11;
        catch android.os.RemoteException from label09 to label10 with label11;
    }

    public void addSubscriptionsIntoGroup(java.util.List, android.os.ParcelUuid)
    {
        android.telephony.SubscriptionManager r0;
        com.android.internal.telephony.ISub r1;
        java.util.stream.Stream $r4;
        android.telephony.'-$$Lambda$SubscriptionManager$1QOdrF5xwHkpZ5lglQiEDxcF7RA' $r5;
        java.util.stream.IntStream $r6;
        boolean $z0, $z1;
        android.os.RemoteException $r7;
        java.lang.String $r11, r16;
        java.util.List r13;
        android.os.ParcelUuid r14;
        android.content.Context r15;
        int[] r17;
        java.lang.IllegalStateException r21;
        java.lang.StringBuilder r22;
        java.util.function.ToIntFunction r23;

        r0 := @this: android.telephony.SubscriptionManager;

        r13 := @parameter0: java.util.List;

        r14 := @parameter1: android.os.ParcelUuid;

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r13, "subIdList can\'t be null.");

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r14, "groupUuid can\'t be null.");

        r15 = r0.<android.telephony.SubscriptionManager: android.content.Context mContext>;

        if r15 == null goto label01;

        r16 = virtualinvoke r15.<android.content.Context: java.lang.String getOpPackageName()>();

        goto label02;

     label01:
        r16 = "<unknown>";

     label02:
        $r4 = interfaceinvoke r13.<java.util.List: java.util.stream.Stream stream()>();

        $r5 = <android.telephony._$$Lambda$SubscriptionManager$1QOdrF5xwHkpZ5lglQiEDxcF7RA: android.telephony.'-$$Lambda$SubscriptionManager$1QOdrF5xwHkpZ5lglQiEDxcF7RA' INSTANCE>;

        r23 = (java.util.function.ToIntFunction) $r5;

        $r6 = interfaceinvoke $r4.<java.util.stream.Stream: java.util.stream.IntStream mapToInt(java.util.function.ToIntFunction)>(r23);

        r17 = interfaceinvoke $r6.<java.util.stream.IntStream: int[] toArray()>();

     label03:
        r1 = staticinvoke <android.telephony.TelephonyManager: com.android.internal.telephony.ISub getSubscriptionService()>();

     label04:
        if r1 == null goto label07;

     label05:
        interfaceinvoke r1.<com.android.internal.telephony.ISub: void addSubscriptionsIntoGroup(int[],android.os.ParcelUuid,java.lang.String)>(r17, r14, r16);

     label06:
        goto label08;

     label07:
        $z0 = specialinvoke r0.<android.telephony.SubscriptionManager: boolean isSystemProcess()>();

        if $z0 == 0 goto label09;

     label08:
        goto label11;

     label09:
        r21 = new java.lang.IllegalStateException;

        specialinvoke r21.<java.lang.IllegalStateException: void <init>(java.lang.String)>("telephony service is null.");

        throw r21;

     label10:
        $r7 := @caughtexception;

        r22 = new java.lang.StringBuilder;

        specialinvoke r22.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("addSubscriptionsIntoGroup RemoteException ");

        virtualinvoke r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r11 = virtualinvoke r22.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.SubscriptionManager: void loge(java.lang.String)>($r11);

        $z1 = specialinvoke r0.<android.telephony.SubscriptionManager: boolean isSystemProcess()>();

        if $z1 != 0 goto label11;

        virtualinvoke $r7.<android.os.RemoteException: java.lang.RuntimeException rethrowAsRuntimeException()>();

     label11:
        return;

        catch android.os.RemoteException from label03 to label04 with label10;
        catch android.os.RemoteException from label05 to label06 with label10;
        catch android.os.RemoteException from label07 to label08 with label10;
        catch android.os.RemoteException from label09 to label10 with label10;
    }

    public boolean allDefaultsSelected()
    {
        android.telephony.SubscriptionManager r0;
        int $i0, $i1, $i2;
        boolean $z0, $z1, $z2;

        r0 := @this: android.telephony.SubscriptionManager;

        $i0 = staticinvoke <android.telephony.SubscriptionManager: int getDefaultDataSubscriptionId()>();

        $z0 = staticinvoke <android.telephony.SubscriptionManager: boolean isValidSubscriptionId(int)>($i0);

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $i1 = staticinvoke <android.telephony.SubscriptionManager: int getDefaultSmsSubscriptionId()>();

        $z1 = staticinvoke <android.telephony.SubscriptionManager: boolean isValidSubscriptionId(int)>($i1);

        if $z1 != 0 goto label2;

        return 0;

     label2:
        $i2 = staticinvoke <android.telephony.SubscriptionManager: int getDefaultVoiceSubscriptionId()>();

        $z2 = staticinvoke <android.telephony.SubscriptionManager: boolean isValidSubscriptionId(int)>($i2);

        if $z2 != 0 goto label3;

        return 0;

     label3:
        return 1;
    }

    public boolean canDisablePhysicalSubscription()
    {
        android.telephony.SubscriptionManager r0;
        boolean z0;
        android.os.TelephonyServiceManager $r1;
        android.os.TelephonyServiceManager$ServiceRegisterer $r2;
        android.os.IBinder $r3;
        android.os.RemoteException $r4;
        com.android.internal.telephony.ISub r5;

        r0 := @this: android.telephony.SubscriptionManager;

     label1:
        $r1 = staticinvoke <android.telephony.TelephonyFrameworkInitializer: android.os.TelephonyServiceManager getTelephonyServiceManager()>();

        $r2 = virtualinvoke $r1.<android.os.TelephonyServiceManager: android.os.TelephonyServiceManager$ServiceRegisterer getSubscriptionServiceRegisterer()>();

        $r3 = virtualinvoke $r2.<android.os.TelephonyServiceManager$ServiceRegisterer: android.os.IBinder get()>();

        r5 = staticinvoke <com.android.internal.telephony.ISub$Stub: com.android.internal.telephony.ISub asInterface(android.os.IBinder)>($r3);

     label2:
        if r5 == null goto label5;

     label3:
        z0 = interfaceinvoke r5.<com.android.internal.telephony.ISub: boolean canDisablePhysicalSubscription()>();

     label4:
        return z0;

     label5:
        goto label7;

     label6:
        $r4 := @caughtexception;

     label7:
        return 0;

        catch android.os.RemoteException from label1 to label2 with label6;
        catch android.os.RemoteException from label3 to label4 with label6;
    }

    public boolean canManageSubscription(android.telephony.SubscriptionInfo)
    {
        android.telephony.SubscriptionManager r0;
        android.telephony.SubscriptionInfo r1;
        android.content.Context $r2;
        java.lang.String $r3;
        boolean $z0;

        r0 := @this: android.telephony.SubscriptionManager;

        r1 := @parameter0: android.telephony.SubscriptionInfo;

        $r2 = r0.<android.telephony.SubscriptionManager: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: java.lang.String getPackageName()>();

        $z0 = virtualinvoke r0.<android.telephony.SubscriptionManager: boolean canManageSubscription(android.telephony.SubscriptionInfo,java.lang.String)>(r1, $r3);

        return $z0;
    }

    public boolean canManageSubscription(android.telephony.SubscriptionInfo, java.lang.String)
    {
        android.telephony.SubscriptionManager r0;
        java.lang.String r1, $r11;
        java.util.List $r2, $r4;
        android.content.Context $r3;
        boolean $z0;
        java.lang.Object $r5;
        android.telephony.UiccAccessRule $r6;
        int $i0;
        android.content.pm.PackageManager$NameNotFoundException $r7;
        java.lang.StringBuilder $r8;
        android.telephony.SubscriptionInfo r12;
        android.content.pm.PackageManager r13;
        android.content.pm.PackageInfo r14;
        java.util.Iterator r15;

        r0 := @this: android.telephony.SubscriptionManager;

        r12 := @parameter0: android.telephony.SubscriptionInfo;

        r1 := @parameter1: java.lang.String;

        if r12 == null goto label8;

        $r2 = virtualinvoke r12.<android.telephony.SubscriptionInfo: java.util.List getAllAccessRules()>();

        if $r2 == null goto label8;

        if r1 != null goto label1;

        goto label8;

     label1:
        $r3 = r0.<android.telephony.SubscriptionManager: android.content.Context mContext>;

        r13 = virtualinvoke $r3.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

     label2:
        r14 = virtualinvoke r13.<android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>(r1, 134217728);

     label3:
        $r4 = virtualinvoke r12.<android.telephony.SubscriptionInfo: java.util.List getAllAccessRules()>();

        r15 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label4:
        $z0 = interfaceinvoke r15.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r5 = interfaceinvoke r15.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (android.telephony.UiccAccessRule) $r5;

        $i0 = virtualinvoke $r6.<android.telephony.UiccAccessRule: int getCarrierPrivilegeStatus(android.content.pm.PackageInfo)>(r14);

        if $i0 != 1 goto label5;

        return 1;

     label5:
        goto label4;

     label6:
        return 0;

     label7:
        $r7 := @caughtexception;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown package: ");

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.SubscriptionManager: void logd(java.lang.String)>($r11);

        return 0;

     label8:
        return 0;

        catch android.content.pm.PackageManager$NameNotFoundException from label2 to label3 with label7;
    }

    public void clearSubscriptionInfo()
    {
        android.telephony.SubscriptionManager r0;
        android.os.RemoteException $r1;
        com.android.internal.telephony.ISub r2;

        r0 := @this: android.telephony.SubscriptionManager;

     label1:
        r2 = staticinvoke <android.telephony.TelephonyManager: com.android.internal.telephony.ISub getSubscriptionService()>();

     label2:
        if r2 == null goto label4;

     label3:
        interfaceinvoke r2.<com.android.internal.telephony.ISub: int clearSubInfo()>();

     label4:
        goto label6;

     label5:
        $r1 := @caughtexception;

     label6:
        return;

        catch android.os.RemoteException from label1 to label2 with label5;
        catch android.os.RemoteException from label3 to label4 with label5;
    }

    public android.os.ParcelUuid createSubscriptionGroup(java.util.List)
    {
        android.telephony.SubscriptionManager r0;
        com.android.internal.telephony.ISub r1;
        java.util.stream.Stream $r2;
        android.telephony.'-$$Lambda$SubscriptionManager$XMBKvTqAZ-tfr6YV6zRf1verEog' $r3;
        java.util.stream.IntStream $r4;
        boolean $z0, $z1;
        android.os.RemoteException $r5;
        java.lang.String $r7, r10;
        java.util.List r8;
        android.content.Context r9;
        int[] r11;
        android.os.ParcelUuid r12;
        java.lang.IllegalStateException r16;
        java.lang.StringBuilder r17;
        java.util.function.ToIntFunction r18;

        r0 := @this: android.telephony.SubscriptionManager;

        r8 := @parameter0: java.util.List;

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r8, "can\'t create group for null subId list");

        r9 = r0.<android.telephony.SubscriptionManager: android.content.Context mContext>;

        if r9 == null goto label01;

        r10 = virtualinvoke r9.<android.content.Context: java.lang.String getOpPackageName()>();

        goto label02;

     label01:
        r10 = "<unknown>";

     label02:
        $r2 = interfaceinvoke r8.<java.util.List: java.util.stream.Stream stream()>();

        $r3 = <android.telephony._$$Lambda$SubscriptionManager$XMBKvTqAZ_tfr6YV6zRf1verEog: android.telephony.'-$$Lambda$SubscriptionManager$XMBKvTqAZ-tfr6YV6zRf1verEog' INSTANCE>;

        r18 = (java.util.function.ToIntFunction) $r3;

        $r4 = interfaceinvoke $r2.<java.util.stream.Stream: java.util.stream.IntStream mapToInt(java.util.function.ToIntFunction)>(r18);

        r11 = interfaceinvoke $r4.<java.util.stream.IntStream: int[] toArray()>();

     label03:
        r1 = staticinvoke <android.telephony.TelephonyManager: com.android.internal.telephony.ISub getSubscriptionService()>();

     label04:
        if r1 == null goto label07;

     label05:
        r12 = interfaceinvoke r1.<com.android.internal.telephony.ISub: android.os.ParcelUuid createSubscriptionGroup(int[],java.lang.String)>(r11, r10);

     label06:
        goto label09;

     label07:
        $z0 = specialinvoke r0.<android.telephony.SubscriptionManager: boolean isSystemProcess()>();

        if $z0 == 0 goto label10;

     label08:
        r12 = null;

     label09:
        goto label12;

     label10:
        r16 = new java.lang.IllegalStateException;

        specialinvoke r16.<java.lang.IllegalStateException: void <init>(java.lang.String)>("telephony service is null.");

        throw r16;

     label11:
        $r5 := @caughtexception;

        r17 = new java.lang.StringBuilder;

        specialinvoke r17.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("createSubscriptionGroup RemoteException ");

        virtualinvoke r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r7 = virtualinvoke r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.SubscriptionManager: void loge(java.lang.String)>($r7);

        r12 = null;

        $z1 = specialinvoke r0.<android.telephony.SubscriptionManager: boolean isSystemProcess()>();

        if $z1 != 0 goto label12;

        virtualinvoke $r5.<android.os.RemoteException: java.lang.RuntimeException rethrowAsRuntimeException()>();

        r12 = null;

     label12:
        return r12;

        catch android.os.RemoteException from label03 to label04 with label11;
        catch android.os.RemoteException from label05 to label06 with label11;
        catch android.os.RemoteException from label07 to label08 with label11;
        catch android.os.RemoteException from label10 to label11 with label11;
    }

    public java.util.List getAccessibleSubscriptionInfoList()
    {
        android.telephony.SubscriptionManager r0;
        com.android.internal.telephony.ISub r1;
        android.content.Context $r2;
        java.lang.String $r3;
        android.os.RemoteException $r4;
        java.util.List r5;

        r0 := @this: android.telephony.SubscriptionManager;

        r5 = null;

     label1:
        r1 = staticinvoke <android.telephony.TelephonyManager: com.android.internal.telephony.ISub getSubscriptionService()>();

     label2:
        if r1 == null goto label4;

     label3:
        $r2 = r0.<android.telephony.SubscriptionManager: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: java.lang.String getOpPackageName()>();

        r5 = interfaceinvoke r1.<com.android.internal.telephony.ISub: java.util.List getAccessibleSubscriptionInfoList(java.lang.String)>($r3);

     label4:
        goto label6;

     label5:
        $r4 := @caughtexception;

        r5 = null;

     label6:
        return r5;

        catch android.os.RemoteException from label1 to label2 with label5;
        catch android.os.RemoteException from label3 to label4 with label5;
    }

    public int[] getActiveSubscriptionIdList()
    {
        android.telephony.SubscriptionManager r0;
        int[] $r1;

        r0 := @this: android.telephony.SubscriptionManager;

        $r1 = virtualinvoke r0.<android.telephony.SubscriptionManager: int[] getActiveSubscriptionIdList(boolean)>(1);

        return $r1;
    }

    public int[] getActiveSubscriptionIdList(boolean)
    {
        android.telephony.SubscriptionManager r0;
        boolean z0;
        int[] $r1, r4;
        android.os.RemoteException $r2;
        com.android.internal.telephony.ISub r3;

        r0 := @this: android.telephony.SubscriptionManager;

        z0 := @parameter0: boolean;

     label1:
        r3 = staticinvoke <android.telephony.TelephonyManager: com.android.internal.telephony.ISub getSubscriptionService()>();

     label2:
        if r3 == null goto label5;

     label3:
        r4 = interfaceinvoke r3.<com.android.internal.telephony.ISub: int[] getActiveSubIdList(boolean)>(z0);

     label4:
        if r4 == null goto label5;

        return r4;

     label5:
        goto label7;

     label6:
        $r2 := @caughtexception;

     label7:
        $r1 = newarray (int)[0];

        return $r1;

        catch android.os.RemoteException from label1 to label2 with label6;
        catch android.os.RemoteException from label3 to label4 with label6;
    }

    public android.telephony.SubscriptionInfo getActiveSubscriptionInfo(int)
    {
        android.telephony.SubscriptionManager r0;
        int i0;
        com.android.internal.telephony.ISub r1;
        boolean $z0;
        android.content.Context $r2, $r4;
        java.lang.String $r3, $r5;
        android.os.RemoteException $r6;
        android.telephony.SubscriptionInfo r7;

        r0 := @this: android.telephony.SubscriptionManager;

        i0 := @parameter0: int;

        $z0 = staticinvoke <android.telephony.SubscriptionManager: boolean isValidSubscriptionId(int)>(i0);

        if $z0 != 0 goto label1;

        return null;

     label1:
        r7 = null;

     label2:
        r1 = staticinvoke <android.telephony.TelephonyManager: com.android.internal.telephony.ISub getSubscriptionService()>();

     label3:
        if r1 == null goto label5;

     label4:
        $r2 = r0.<android.telephony.SubscriptionManager: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: java.lang.String getOpPackageName()>();

        $r4 = r0.<android.telephony.SubscriptionManager: android.content.Context mContext>;

        $r5 = virtualinvoke $r4.<android.content.Context: java.lang.String getAttributionTag()>();

        r7 = interfaceinvoke r1.<com.android.internal.telephony.ISub: android.telephony.SubscriptionInfo getActiveSubscriptionInfo(int,java.lang.String,java.lang.String)>(i0, $r3, $r5);

     label5:
        goto label7;

     label6:
        $r6 := @caughtexception;

        r7 = null;

     label7:
        return r7;

        catch android.os.RemoteException from label2 to label3 with label6;
        catch android.os.RemoteException from label4 to label5 with label6;
    }

    public int getActiveSubscriptionInfoCount()
    {
        android.telephony.SubscriptionManager r0;
        android.content.Context $r1, $r3;
        java.lang.String $r2, $r4;
        android.os.RemoteException $r5;
        int i1;
        com.android.internal.telephony.ISub r6;

        r0 := @this: android.telephony.SubscriptionManager;

        i1 = 0;

     label1:
        r6 = staticinvoke <android.telephony.TelephonyManager: com.android.internal.telephony.ISub getSubscriptionService()>();

     label2:
        if r6 == null goto label4;

     label3:
        $r1 = r0.<android.telephony.SubscriptionManager: android.content.Context mContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: java.lang.String getOpPackageName()>();

        $r3 = r0.<android.telephony.SubscriptionManager: android.content.Context mContext>;

        $r4 = virtualinvoke $r3.<android.content.Context: java.lang.String getAttributionTag()>();

        i1 = interfaceinvoke r6.<com.android.internal.telephony.ISub: int getActiveSubInfoCount(java.lang.String,java.lang.String)>($r2, $r4);

     label4:
        goto label6;

     label5:
        $r5 := @caughtexception;

        i1 = 0;

     label6:
        return i1;

        catch android.os.RemoteException from label1 to label2 with label5;
        catch android.os.RemoteException from label3 to label4 with label5;
    }

    public int getActiveSubscriptionInfoCountMax()
    {
        android.telephony.SubscriptionManager r0;
        android.os.RemoteException $r1;
        int i1;
        com.android.internal.telephony.ISub r2;

        r0 := @this: android.telephony.SubscriptionManager;

        i1 = 0;

     label1:
        r2 = staticinvoke <android.telephony.TelephonyManager: com.android.internal.telephony.ISub getSubscriptionService()>();

     label2:
        if r2 == null goto label4;

     label3:
        i1 = interfaceinvoke r2.<com.android.internal.telephony.ISub: int getActiveSubInfoCountMax()>();

     label4:
        goto label6;

     label5:
        $r1 := @caughtexception;

        i1 = 0;

     label6:
        return i1;

        catch android.os.RemoteException from label1 to label2 with label5;
        catch android.os.RemoteException from label3 to label4 with label5;
    }

    public android.telephony.SubscriptionInfo getActiveSubscriptionInfoForIcc(java.lang.String)
    {
        android.telephony.SubscriptionManager r0;
        com.android.internal.telephony.ISub r1;
        android.content.Context $r2, $r4;
        java.lang.String $r3, $r5, r7;
        android.os.RemoteException $r6;
        android.telephony.SubscriptionInfo r8;

        r0 := @this: android.telephony.SubscriptionManager;

        r7 := @parameter0: java.lang.String;

        if r7 != null goto label1;

        staticinvoke <android.telephony.SubscriptionManager: void logd(java.lang.String)>("[getActiveSubscriptionInfoForIccIndex]- null iccid");

        return null;

     label1:
        r8 = null;

     label2:
        r1 = staticinvoke <android.telephony.TelephonyManager: com.android.internal.telephony.ISub getSubscriptionService()>();

     label3:
        if r1 == null goto label5;

     label4:
        $r2 = r0.<android.telephony.SubscriptionManager: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: java.lang.String getOpPackageName()>();

        $r4 = r0.<android.telephony.SubscriptionManager: android.content.Context mContext>;

        $r5 = virtualinvoke $r4.<android.content.Context: java.lang.String getAttributionTag()>();

        r8 = interfaceinvoke r1.<com.android.internal.telephony.ISub: android.telephony.SubscriptionInfo getActiveSubscriptionInfoForIccId(java.lang.String,java.lang.String,java.lang.String)>(r7, $r3, $r5);

     label5:
        goto label7;

     label6:
        $r6 := @caughtexception;

        r8 = null;

     label7:
        return r8;

        catch android.os.RemoteException from label2 to label3 with label6;
        catch android.os.RemoteException from label4 to label5 with label6;
    }

    public android.telephony.SubscriptionInfo getActiveSubscriptionInfoForSimSlotIndex(int)
    {
        android.telephony.SubscriptionManager r0;
        int i0;
        com.android.internal.telephony.ISub r1;
        boolean $z0;
        android.content.Context $r2, $r4;
        java.lang.String $r3, $r5;
        android.os.RemoteException $r6;
        android.telephony.SubscriptionInfo r7;

        r0 := @this: android.telephony.SubscriptionManager;

        i0 := @parameter0: int;

        $z0 = staticinvoke <android.telephony.SubscriptionManager: boolean isValidSlotIndex(int)>(i0);

        if $z0 != 0 goto label1;

        staticinvoke <android.telephony.SubscriptionManager: void logd(java.lang.String)>("[getActiveSubscriptionInfoForSimSlotIndex]- invalid slotIndex");

        return null;

     label1:
        r7 = null;

     label2:
        r1 = staticinvoke <android.telephony.TelephonyManager: com.android.internal.telephony.ISub getSubscriptionService()>();

     label3:
        if r1 == null goto label5;

     label4:
        $r2 = r0.<android.telephony.SubscriptionManager: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: java.lang.String getOpPackageName()>();

        $r4 = r0.<android.telephony.SubscriptionManager: android.content.Context mContext>;

        $r5 = virtualinvoke $r4.<android.content.Context: java.lang.String getAttributionTag()>();

        r7 = interfaceinvoke r1.<com.android.internal.telephony.ISub: android.telephony.SubscriptionInfo getActiveSubscriptionInfoForSimSlotIndex(int,java.lang.String,java.lang.String)>(i0, $r3, $r5);

     label5:
        goto label7;

     label6:
        $r6 := @caughtexception;

        r7 = null;

     label7:
        return r7;

        catch android.os.RemoteException from label2 to label3 with label6;
        catch android.os.RemoteException from label4 to label5 with label6;
    }

    public java.util.List getActiveSubscriptionInfoList()
    {
        android.telephony.SubscriptionManager r0;
        java.util.List $r1;

        r0 := @this: android.telephony.SubscriptionManager;

        $r1 = virtualinvoke r0.<android.telephony.SubscriptionManager: java.util.List getActiveSubscriptionInfoList(boolean)>(1);

        return $r1;
    }

    public java.util.List getActiveSubscriptionInfoList(boolean)
    {
        android.telephony.SubscriptionManager r0;
        boolean z0;
        com.android.internal.telephony.ISub r1;
        java.util.stream.Stream $r2, $r4;
        android.telephony._$$Lambda$SubscriptionManager$BFE6hex1480LcW4ZjtlaBEqYbEs $r3;
        java.util.stream.Collector $r5;
        java.lang.Object $r6;
        java.util.List $r7, r13;
        android.content.Context $r8, $r10;
        java.lang.String $r9, $r11;
        android.os.RemoteException $r12;

        r0 := @this: android.telephony.SubscriptionManager;

        z0 := @parameter0: boolean;

        r13 = null;

     label1:
        r1 = staticinvoke <android.telephony.TelephonyManager: com.android.internal.telephony.ISub getSubscriptionService()>();

     label2:
        if r1 == null goto label4;

     label3:
        $r8 = r0.<android.telephony.SubscriptionManager: android.content.Context mContext>;

        $r9 = virtualinvoke $r8.<android.content.Context: java.lang.String getOpPackageName()>();

        $r10 = r0.<android.telephony.SubscriptionManager: android.content.Context mContext>;

        $r11 = virtualinvoke $r10.<android.content.Context: java.lang.String getAttributionTag()>();

        r13 = interfaceinvoke r1.<com.android.internal.telephony.ISub: java.util.List getActiveSubscriptionInfoList(java.lang.String,java.lang.String)>($r9, $r11);

     label4:
        goto label6;

     label5:
        $r12 := @caughtexception;

        r13 = null;

     label6:
        if z0 == 0 goto label8;

        if r13 != null goto label7;

        goto label8;

     label7:
        $r2 = interfaceinvoke r13.<java.util.List: java.util.stream.Stream stream()>();

        $r3 = new android.telephony._$$Lambda$SubscriptionManager$BFE6hex1480LcW4ZjtlaBEqYbEs;

        specialinvoke $r3.<android.telephony._$$Lambda$SubscriptionManager$BFE6hex1480LcW4ZjtlaBEqYbEs: void <init>(android.telephony.SubscriptionManager)>(r0);

        $r4 = interfaceinvoke $r2.<java.util.stream.Stream: java.util.stream.Stream filter(java.util.function.Predicate)>($r3);

        $r5 = staticinvoke <java.util.stream.Collectors: java.util.stream.Collector toList()>();

        $r6 = interfaceinvoke $r4.<java.util.stream.Stream: java.lang.Object collect(java.util.stream.Collector)>($r5);

        $r7 = (java.util.List) $r6;

        return $r7;

     label8:
        return r13;

        catch android.os.RemoteException from label1 to label2 with label5;
        catch android.os.RemoteException from label3 to label4 with label5;
    }

    public int getAllSubscriptionInfoCount()
    {
        android.telephony.SubscriptionManager r0;
        android.content.Context $r1, $r3;
        java.lang.String $r2, $r4;
        android.os.RemoteException $r5;
        int i1;
        com.android.internal.telephony.ISub r6;

        r0 := @this: android.telephony.SubscriptionManager;

        i1 = 0;

     label1:
        r6 = staticinvoke <android.telephony.TelephonyManager: com.android.internal.telephony.ISub getSubscriptionService()>();

     label2:
        if r6 == null goto label4;

     label3:
        $r1 = r0.<android.telephony.SubscriptionManager: android.content.Context mContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: java.lang.String getOpPackageName()>();

        $r3 = r0.<android.telephony.SubscriptionManager: android.content.Context mContext>;

        $r4 = virtualinvoke $r3.<android.content.Context: java.lang.String getAttributionTag()>();

        i1 = interfaceinvoke r6.<com.android.internal.telephony.ISub: int getAllSubInfoCount(java.lang.String,java.lang.String)>($r2, $r4);

     label4:
        goto label6;

     label5:
        $r5 := @caughtexception;

        i1 = 0;

     label6:
        return i1;

        catch android.os.RemoteException from label1 to label2 with label5;
        catch android.os.RemoteException from label3 to label4 with label5;
    }

    public java.util.List getAllSubscriptionInfoList()
    {
        android.telephony.SubscriptionManager r0;
        com.android.internal.telephony.ISub r1;
        android.content.Context $r3, $r5;
        java.lang.String $r4, $r6;
        android.os.RemoteException $r7;
        java.util.List r8, r11;
        java.lang.Object r9;
        java.util.ArrayList r10;

        r0 := @this: android.telephony.SubscriptionManager;

        r8 = null;

     label1:
        r1 = staticinvoke <android.telephony.TelephonyManager: com.android.internal.telephony.ISub getSubscriptionService()>();

     label2:
        if r1 == null goto label4;

     label3:
        $r3 = r0.<android.telephony.SubscriptionManager: android.content.Context mContext>;

        $r4 = virtualinvoke $r3.<android.content.Context: java.lang.String getOpPackageName()>();

        $r5 = r0.<android.telephony.SubscriptionManager: android.content.Context mContext>;

        $r6 = virtualinvoke $r5.<android.content.Context: java.lang.String getAttributionTag()>();

        r8 = interfaceinvoke r1.<com.android.internal.telephony.ISub: java.util.List getAllSubInfoList(java.lang.String,java.lang.String)>($r4, $r6);

     label4:
        goto label6;

     label5:
        $r7 := @caughtexception;

        r8 = null;

     label6:
        r9 = r8;

        if r8 != null goto label7;

        r10 = new java.util.ArrayList;

        specialinvoke r10.<java.util.ArrayList: void <init>()>();

        r9 = r10;

     label7:
        r11 = (java.util.List) r9;

        return r11;

        catch android.os.RemoteException from label1 to label2 with label5;
        catch android.os.RemoteException from label3 to label4 with label5;
    }

    public java.util.List getAvailableSubscriptionInfoList()
    {
        android.telephony.SubscriptionManager r0;
        com.android.internal.telephony.ISub r1;
        android.content.Context $r2, $r4;
        java.lang.String $r3, $r5;
        android.os.RemoteException $r6;
        java.util.List r7;

        r0 := @this: android.telephony.SubscriptionManager;

        r7 = null;

     label1:
        r1 = staticinvoke <android.telephony.TelephonyManager: com.android.internal.telephony.ISub getSubscriptionService()>();

     label2:
        if r1 == null goto label4;

     label3:
        $r2 = r0.<android.telephony.SubscriptionManager: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: java.lang.String getOpPackageName()>();

        $r4 = r0.<android.telephony.SubscriptionManager: android.content.Context mContext>;

        $r5 = virtualinvoke $r4.<android.content.Context: java.lang.String getAttributionTag()>();

        r7 = interfaceinvoke r1.<com.android.internal.telephony.ISub: java.util.List getAvailableSubscriptionInfoList(java.lang.String,java.lang.String)>($r3, $r5);

     label4:
        goto label6;

     label5:
        $r6 := @caughtexception;

        r7 = null;

     label6:
        return r7;

        catch android.os.RemoteException from label1 to label2 with label5;
        catch android.os.RemoteException from label3 to label4 with label5;
    }

    public int[] getCompleteActiveSubscriptionIdList()
    {
        android.telephony.SubscriptionManager r0;
        int[] $r1;

        r0 := @this: android.telephony.SubscriptionManager;

        $r1 = virtualinvoke r0.<android.telephony.SubscriptionManager: int[] getActiveSubscriptionIdList(boolean)>(0);

        return $r1;
    }

    public java.util.List getCompleteActiveSubscriptionInfoList()
    {
        android.telephony.SubscriptionManager r0;
        java.util.List r1, r5;
        java.lang.Object r3;
        java.util.ArrayList r4;

        r0 := @this: android.telephony.SubscriptionManager;

        r1 = virtualinvoke r0.<android.telephony.SubscriptionManager: java.util.List getActiveSubscriptionInfoList(boolean)>(0);

        r3 = r1;

        if r1 != null goto label1;

        r4 = new java.util.ArrayList;

        specialinvoke r4.<java.util.ArrayList: void <init>()>();

        r3 = r4;

     label1:
        r5 = (java.util.List) r3;

        return r5;
    }

    public int getDefaultDataPhoneId()
    {
        android.telephony.SubscriptionManager r0;
        int $i0, $i1;

        r0 := @this: android.telephony.SubscriptionManager;

        $i0 = staticinvoke <android.telephony.SubscriptionManager: int getDefaultDataSubscriptionId()>();

        $i1 = staticinvoke <android.telephony.SubscriptionManager: int getPhoneId(int)>($i0);

        return $i1;
    }

    public android.telephony.SubscriptionInfo getDefaultDataSubscriptionInfo()
    {
        android.telephony.SubscriptionManager r0;
        int $i0;
        android.telephony.SubscriptionInfo $r1;

        r0 := @this: android.telephony.SubscriptionManager;

        $i0 = staticinvoke <android.telephony.SubscriptionManager: int getDefaultDataSubscriptionId()>();

        $r1 = virtualinvoke r0.<android.telephony.SubscriptionManager: android.telephony.SubscriptionInfo getActiveSubscriptionInfo(int)>($i0);

        return $r1;
    }

    public int getDefaultSmsPhoneId()
    {
        android.telephony.SubscriptionManager r0;
        int $i0, $i1;

        r0 := @this: android.telephony.SubscriptionManager;

        $i0 = staticinvoke <android.telephony.SubscriptionManager: int getDefaultSmsSubscriptionId()>();

        $i1 = staticinvoke <android.telephony.SubscriptionManager: int getPhoneId(int)>($i0);

        return $i1;
    }

    public android.telephony.SubscriptionInfo getDefaultSmsSubscriptionInfo()
    {
        android.telephony.SubscriptionManager r0;
        int $i0;
        android.telephony.SubscriptionInfo $r1;

        r0 := @this: android.telephony.SubscriptionManager;

        $i0 = staticinvoke <android.telephony.SubscriptionManager: int getDefaultSmsSubscriptionId()>();

        $r1 = virtualinvoke r0.<android.telephony.SubscriptionManager: android.telephony.SubscriptionInfo getActiveSubscriptionInfo(int)>($i0);

        return $r1;
    }

    public android.telephony.SubscriptionInfo getDefaultVoiceSubscriptionInfo()
    {
        android.telephony.SubscriptionManager r0;
        int $i0;
        android.telephony.SubscriptionInfo $r1;

        r0 := @this: android.telephony.SubscriptionManager;

        $i0 = staticinvoke <android.telephony.SubscriptionManager: int getDefaultVoiceSubscriptionId()>();

        $r1 = virtualinvoke r0.<android.telephony.SubscriptionManager: android.telephony.SubscriptionInfo getActiveSubscriptionInfo(int)>($i0);

        return $r1;
    }

    public int getEnabledSubscriptionId(int)
    {
        android.telephony.SubscriptionManager r0;
        int i0, i2;
        android.os.RemoteException $r1;
        com.android.internal.telephony.ISub r2;

        r0 := @this: android.telephony.SubscriptionManager;

        i0 := @parameter0: int;

     label1:
        r2 = staticinvoke <android.telephony.TelephonyManager: com.android.internal.telephony.ISub getSubscriptionService()>();

     label2:
        i2 = -1;

        if r2 == null goto label4;

     label3:
        i2 = interfaceinvoke r2.<com.android.internal.telephony.ISub: int getEnabledSubscriptionId(int)>(i0);

     label4:
        goto label6;

     label5:
        $r1 := @caughtexception;

        i2 = -1;

     label6:
        return i2;

        catch android.os.RemoteException from label1 to label2 with label5;
        catch android.os.RemoteException from label3 to label4 with label5;
    }

    public java.util.List getOpportunisticSubscriptions()
    {
        android.telephony.SubscriptionManager r0;
        com.android.internal.telephony.ISub r1;
        android.os.RemoteException $r3;
        android.content.Context r4, r6;
        java.lang.String r5, r7;
        java.util.List r8, r11;
        java.lang.Object r9;
        java.util.ArrayList r10;

        r0 := @this: android.telephony.SubscriptionManager;

        r4 = r0.<android.telephony.SubscriptionManager: android.content.Context mContext>;

        if r4 == null goto label01;

        r5 = virtualinvoke r4.<android.content.Context: java.lang.String getOpPackageName()>();

        goto label02;

     label01:
        r5 = "<unknown>";

     label02:
        r6 = r0.<android.telephony.SubscriptionManager: android.content.Context mContext>;

        if r6 == null goto label03;

        r7 = virtualinvoke r6.<android.content.Context: java.lang.String getAttributionTag()>();

        goto label04;

     label03:
        r7 = null;

     label04:
        r8 = null;

     label05:
        r1 = staticinvoke <android.telephony.TelephonyManager: com.android.internal.telephony.ISub getSubscriptionService()>();

     label06:
        if r1 == null goto label08;

     label07:
        r8 = interfaceinvoke r1.<com.android.internal.telephony.ISub: java.util.List getOpportunisticSubscriptions(java.lang.String,java.lang.String)>(r5, r7);

     label08:
        goto label10;

     label09:
        $r3 := @caughtexception;

        r8 = null;

     label10:
        r9 = r8;

        if r8 != null goto label11;

        r10 = new java.util.ArrayList;

        specialinvoke r10.<java.util.ArrayList: void <init>()>();

        r9 = r10;

     label11:
        r11 = (java.util.List) r9;

        return r11;

        catch android.os.RemoteException from label05 to label06 with label09;
        catch android.os.RemoteException from label07 to label08 with label09;
    }

    public int getPreferredDataSubscriptionId()
    {
        android.telephony.SubscriptionManager r0;
        android.os.RemoteException $r1;
        com.android.internal.telephony.ISub r2;
        int i1;

        r0 := @this: android.telephony.SubscriptionManager;

     label1:
        r2 = staticinvoke <android.telephony.TelephonyManager: com.android.internal.telephony.ISub getSubscriptionService()>();

     label2:
        i1 = 2147483647;

        if r2 == null goto label4;

     label3:
        i1 = interfaceinvoke r2.<com.android.internal.telephony.ISub: int getPreferredDataSubscriptionId()>();

     label4:
        goto label6;

     label5:
        $r1 := @caughtexception;

        i1 = 2147483647;

     label6:
        return i1;

        catch android.os.RemoteException from label1 to label2 with label5;
        catch android.os.RemoteException from label3 to label4 with label5;
    }

    public java.util.List getSelectableSubscriptionInfoList()
    {
        android.telephony.SubscriptionManager r0;
        java.util.Iterator r3;
        android.telephony.SubscriptionInfo r4, $r11;
        java.util.ArrayList $r5;
        java.util.HashMap $r6;
        java.lang.Object $r7, $r8, $r10;
        boolean $z0, $z1, $z5;
        int $i0, $i1;
        java.util.List r12;
        android.os.ParcelUuid r13;

        r0 := @this: android.telephony.SubscriptionManager;

        r12 = virtualinvoke r0.<android.telephony.SubscriptionManager: java.util.List getAvailableSubscriptionInfoList()>();

        if r12 != null goto label1;

        return null;

     label1:
        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        $r6 = new java.util.HashMap;

        specialinvoke $r6.<java.util.HashMap: void <init>()>();

        r3 = interfaceinvoke r12.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z5 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label7;

        $r7 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (android.telephony.SubscriptionInfo) $r7;

        $z0 = virtualinvoke r0.<android.telephony.SubscriptionManager: boolean isSubscriptionVisible(android.telephony.SubscriptionInfo)>(r4);

        if $z0 != 0 goto label3;

        goto label2;

     label3:
        r13 = virtualinvoke r4.<android.telephony.SubscriptionInfo: android.os.ParcelUuid getGroupUuid()>();

        if r13 != null goto label4;

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>(r4);

        goto label6;

     label4:
        $z1 = interfaceinvoke $r6.<java.util.Map: boolean containsKey(java.lang.Object)>(r13);

        if $z1 == 0 goto label5;

        $r10 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>(r13);

        $r11 = (android.telephony.SubscriptionInfo) $r10;

        $i0 = virtualinvoke $r11.<android.telephony.SubscriptionInfo: int getSimSlotIndex()>();

        if $i0 != -1 goto label6;

        $i1 = virtualinvoke r4.<android.telephony.SubscriptionInfo: int getSimSlotIndex()>();

        if $i1 == -1 goto label6;

     label5:
        $r8 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>(r13);

        interfaceinvoke $r5.<java.util.List: boolean remove(java.lang.Object)>($r8);

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>(r4);

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r13, r4);

     label6:
        goto label2;

     label7:
        return $r5;
    }

    public int[] getSubscriptionIds(int)
    {
        android.telephony.SubscriptionManager r0;
        int i0;
        int[] $r1;

        r0 := @this: android.telephony.SubscriptionManager;

        i0 := @parameter0: int;

        $r1 = staticinvoke <android.telephony.SubscriptionManager: int[] getSubId(int)>(i0);

        return $r1;
    }

    public java.util.List getSubscriptionPlans(int)
    {
        android.telephony.SubscriptionManager r0;
        int i0;
        android.net.NetworkPolicyManager $r1;
        android.content.Context $r2;
        java.lang.String $r3;
        android.telephony.SubscriptionPlan[] r4;
        java.util.List r5;

        r0 := @this: android.telephony.SubscriptionManager;

        i0 := @parameter0: int;

        $r1 = specialinvoke r0.<android.telephony.SubscriptionManager: android.net.NetworkPolicyManager getNetworkPolicyManager()>();

        $r2 = r0.<android.telephony.SubscriptionManager: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: java.lang.String getOpPackageName()>();

        r4 = virtualinvoke $r1.<android.net.NetworkPolicyManager: android.telephony.SubscriptionPlan[] getSubscriptionPlans(int,java.lang.String)>(i0, $r3);

        if r4 != null goto label1;

        r5 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        goto label2;

     label1:
        r5 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r4);

     label2:
        return r5;
    }

    public java.util.List getSubscriptionsInGroup(android.os.ParcelUuid)
    {
        android.telephony.SubscriptionManager r0;
        com.android.internal.telephony.ISub r1;
        boolean $z0, $z1;
        android.os.RemoteException $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4, r7, r9;
        android.os.ParcelUuid r5;
        android.content.Context r6, r8;
        java.util.List r10;
        java.lang.IllegalStateException r11;

        r0 := @this: android.telephony.SubscriptionManager;

        r5 := @parameter0: android.os.ParcelUuid;

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r5, "groupUuid can\'t be null");

        r6 = r0.<android.telephony.SubscriptionManager: android.content.Context mContext>;

        if r6 == null goto label01;

        r7 = virtualinvoke r6.<android.content.Context: java.lang.String getOpPackageName()>();

        goto label02;

     label01:
        r7 = "<unknown>";

     label02:
        r8 = r0.<android.telephony.SubscriptionManager: android.content.Context mContext>;

        if r8 == null goto label03;

        r9 = virtualinvoke r8.<android.content.Context: java.lang.String getAttributionTag()>();

        goto label04;

     label03:
        r9 = null;

     label04:
        r1 = staticinvoke <android.telephony.TelephonyManager: com.android.internal.telephony.ISub getSubscriptionService()>();

     label05:
        if r1 == null goto label08;

     label06:
        r10 = interfaceinvoke r1.<com.android.internal.telephony.ISub: java.util.List getSubscriptionsInGroup(android.os.ParcelUuid,java.lang.String,java.lang.String)>(r5, r7, r9);

     label07:
        goto label10;

     label08:
        $z0 = specialinvoke r0.<android.telephony.SubscriptionManager: boolean isSystemProcess()>();

        if $z0 == 0 goto label11;

     label09:
        r10 = null;

     label10:
        goto label13;

     label11:
        r11 = new java.lang.IllegalStateException;

        specialinvoke r11.<java.lang.IllegalStateException: void <init>(java.lang.String)>("telephony service is null.");

        throw r11;

     label12:
        $r2 := @caughtexception;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("removeSubscriptionsFromGroup RemoteException ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.SubscriptionManager: void loge(java.lang.String)>($r4);

        r10 = null;

        $z1 = specialinvoke r0.<android.telephony.SubscriptionManager: boolean isSystemProcess()>();

        if $z1 != 0 goto label13;

        virtualinvoke $r2.<android.os.RemoteException: java.lang.RuntimeException rethrowAsRuntimeException()>();

        r10 = null;

     label13:
        return r10;

        catch android.os.RemoteException from label04 to label05 with label12;
        catch android.os.RemoteException from label06 to label07 with label12;
        catch android.os.RemoteException from label08 to label09 with label12;
        catch android.os.RemoteException from label11 to label12 with label12;
    }

    public boolean isActiveSubId(int)
    {
        android.telephony.SubscriptionManager r0;
        int i0;
        boolean z0;
        android.content.Context $r1, $r3;
        java.lang.String $r2, $r4;
        android.os.RemoteException $r5;
        com.android.internal.telephony.ISub r6;

        r0 := @this: android.telephony.SubscriptionManager;

        i0 := @parameter0: int;

     label1:
        r6 = staticinvoke <android.telephony.TelephonyManager: com.android.internal.telephony.ISub getSubscriptionService()>();

     label2:
        if r6 == null goto label5;

     label3:
        $r1 = r0.<android.telephony.SubscriptionManager: android.content.Context mContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: java.lang.String getOpPackageName()>();

        $r3 = r0.<android.telephony.SubscriptionManager: android.content.Context mContext>;

        $r4 = virtualinvoke $r3.<android.content.Context: java.lang.String getAttributionTag()>();

        z0 = interfaceinvoke r6.<com.android.internal.telephony.ISub: boolean isActiveSubId(int,java.lang.String,java.lang.String)>(i0, $r2, $r4);

     label4:
        return z0;

     label5:
        goto label7;

     label6:
        $r5 := @caughtexception;

     label7:
        return 0;

        catch android.os.RemoteException from label1 to label2 with label6;
        catch android.os.RemoteException from label3 to label4 with label6;
    }

    public boolean isActiveSubscriptionId(int)
    {
        android.telephony.SubscriptionManager r0;
        int i0;
        boolean $z0;

        r0 := @this: android.telephony.SubscriptionManager;

        i0 := @parameter0: int;

        $z0 = virtualinvoke r0.<android.telephony.SubscriptionManager: boolean isActiveSubId(int)>(i0);

        return $z0;
    }

    public boolean isNetworkRoaming(int)
    {
        android.telephony.SubscriptionManager r0;
        int i0, $i1;
        android.telephony.TelephonyManager $r1;
        boolean $z0;

        r0 := @this: android.telephony.SubscriptionManager;

        i0 := @parameter0: int;

        $i1 = staticinvoke <android.telephony.SubscriptionManager: int getPhoneId(int)>(i0);

        if $i1 >= 0 goto label1;

        return 0;

     label1:
        $r1 = staticinvoke <android.telephony.TelephonyManager: android.telephony.TelephonyManager getDefault()>();

        $z0 = virtualinvoke $r1.<android.telephony.TelephonyManager: boolean isNetworkRoaming(int)>(i0);

        return $z0;
    }

    public boolean isSubscriptionEnabled(int)
    {
        android.telephony.SubscriptionManager r0;
        int i0;
        boolean z0;
        android.os.RemoteException $r1;
        com.android.internal.telephony.ISub r2;

        r0 := @this: android.telephony.SubscriptionManager;

        i0 := @parameter0: int;

     label1:
        r2 = staticinvoke <android.telephony.TelephonyManager: com.android.internal.telephony.ISub getSubscriptionService()>();

     label2:
        if r2 == null goto label5;

     label3:
        z0 = interfaceinvoke r2.<com.android.internal.telephony.ISub: boolean isSubscriptionEnabled(int)>(i0);

     label4:
        return z0;

     label5:
        goto label7;

     label6:
        $r1 := @caughtexception;

     label7:
        return 0;

        catch android.os.RemoteException from label1 to label2 with label6;
        catch android.os.RemoteException from label3 to label4 with label6;
    }

    public boolean isSubscriptionVisible(android.telephony.SubscriptionInfo)
    {
        android.telephony.SubscriptionManager r0;
        android.telephony.SubscriptionInfo r1;
        android.os.ParcelUuid $r2;
        boolean $z0, $z1, $z2, z3;
        android.content.Context $r3;
        android.telephony.TelephonyManager $r4;
        int $i0;

        r0 := @this: android.telephony.SubscriptionManager;

        r1 := @parameter0: android.telephony.SubscriptionInfo;

        z3 = 0;

        if r1 != null goto label1;

        return 0;

     label1:
        $r2 = virtualinvoke r1.<android.telephony.SubscriptionInfo: android.os.ParcelUuid getGroupUuid()>();

        if $r2 == null goto label5;

        $z0 = virtualinvoke r1.<android.telephony.SubscriptionInfo: boolean isOpportunistic()>();

        if $z0 != 0 goto label2;

        goto label5;

     label2:
        $r3 = r0.<android.telephony.SubscriptionManager: android.content.Context mContext>;

        $r4 = staticinvoke <android.telephony.TelephonyManager: android.telephony.TelephonyManager 'from'(android.content.Context)>($r3);

        $i0 = virtualinvoke r1.<android.telephony.SubscriptionInfo: int getSubscriptionId()>();

        $z1 = virtualinvoke $r4.<android.telephony.TelephonyManager: boolean hasCarrierPrivileges(int)>($i0);

        if $z1 != 0 goto label3;

        $z2 = virtualinvoke r0.<android.telephony.SubscriptionManager: boolean canManageSubscription(android.telephony.SubscriptionInfo)>(r1);

        if $z2 == 0 goto label4;

     label3:
        z3 = 1;

     label4:
        return z3;

     label5:
        return 1;
    }

    public boolean lambda$getActiveSubscriptionInfoList$1$SubscriptionManager(android.telephony.SubscriptionInfo)
    {
        android.telephony.SubscriptionManager r0;
        android.telephony.SubscriptionInfo r1;
        boolean $z0;

        r0 := @this: android.telephony.SubscriptionManager;

        r1 := @parameter0: android.telephony.SubscriptionInfo;

        $z0 = virtualinvoke r0.<android.telephony.SubscriptionManager: boolean isSubscriptionVisible(android.telephony.SubscriptionInfo)>(r1);

        return $z0;
    }

    public int lambda$setOpportunistic$6$SubscriptionManager(boolean, int, com.android.internal.telephony.ISub) throws android.os.RemoteException
    {
        android.telephony.SubscriptionManager r0;
        boolean z0;
        int i0, $i1;
        com.android.internal.telephony.ISub r1;
        android.content.Context $r2;
        java.lang.String $r3;

        r0 := @this: android.telephony.SubscriptionManager;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        r1 := @parameter2: com.android.internal.telephony.ISub;

        $r2 = r0.<android.telephony.SubscriptionManager: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: java.lang.String getOpPackageName()>();

        $i1 = interfaceinvoke r1.<com.android.internal.telephony.ISub: int setOpportunistic(boolean,int,java.lang.String)>(z0, i0, $r3);

        return $i1;
    }

    public void removeOnOpportunisticSubscriptionsChangedListener(android.telephony.SubscriptionManager$OnOpportunisticSubscriptionsChangedListener)
    {
        android.telephony.SubscriptionManager r0;
        android.telephony.SubscriptionManager$OnOpportunisticSubscriptionsChangedListener r1;
        android.content.Context $r3, r6;
        java.lang.Object $r4;
        android.telephony.TelephonyRegistryManager r7;

        r0 := @this: android.telephony.SubscriptionManager;

        r1 := @parameter0: android.telephony.SubscriptionManager$OnOpportunisticSubscriptionsChangedListener;

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r1, "listener cannot be null");

        r6 = r0.<android.telephony.SubscriptionManager: android.content.Context mContext>;

        if r6 == null goto label1;

        virtualinvoke r6.<android.content.Context: java.lang.String getOpPackageName()>();

        goto label1;

     label1:
        $r3 = r0.<android.telephony.SubscriptionManager: android.content.Context mContext>;

        $r4 = virtualinvoke $r3.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("telephony_registry");

        r7 = (android.telephony.TelephonyRegistryManager) $r4;

        if r7 == null goto label2;

        virtualinvoke r7.<android.telephony.TelephonyRegistryManager: void removeOnOpportunisticSubscriptionsChangedListener(android.telephony.SubscriptionManager$OnOpportunisticSubscriptionsChangedListener)>(r1);

     label2:
        return;
    }

    public void removeOnSubscriptionsChangedListener(android.telephony.SubscriptionManager$OnSubscriptionsChangedListener)
    {
        android.telephony.SubscriptionManager r0;
        android.telephony.SubscriptionManager$OnSubscriptionsChangedListener r1;
        android.content.Context $r2, r5;
        java.lang.Object $r3;
        android.telephony.TelephonyRegistryManager r6;

        r0 := @this: android.telephony.SubscriptionManager;

        r1 := @parameter0: android.telephony.SubscriptionManager$OnSubscriptionsChangedListener;

        if r1 != null goto label1;

        return;

     label1:
        r5 = r0.<android.telephony.SubscriptionManager: android.content.Context mContext>;

        if r5 == null goto label2;

        virtualinvoke r5.<android.content.Context: java.lang.String getOpPackageName()>();

        goto label2;

     label2:
        $r2 = r0.<android.telephony.SubscriptionManager: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("telephony_registry");

        r6 = (android.telephony.TelephonyRegistryManager) $r3;

        if r6 == null goto label3;

        virtualinvoke r6.<android.telephony.TelephonyRegistryManager: void removeOnSubscriptionsChangedListener(android.telephony.SubscriptionManager$OnSubscriptionsChangedListener)>(r1);

     label3:
        return;
    }

    public void removeSubscriptionInfoRecord(java.lang.String, int)
    {
        android.telephony.SubscriptionManager r0;
        com.android.internal.telephony.ISub r1;
        java.lang.String $r4, r6;
        android.os.RemoteException $r5;
        int i3, i4;
        java.lang.StringBuilder r7;

        r0 := @this: android.telephony.SubscriptionManager;

        r6 := @parameter0: java.lang.String;

        i3 := @parameter1: int;

        if r6 != null goto label01;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("SubscriptionManager", "[addSubscriptionInfoRecord]- uniqueId is null");

        return;

     label01:
        r1 = staticinvoke <android.telephony.TelephonyManager: com.android.internal.telephony.ISub getSubscriptionService()>();

     label02:
        if r1 != null goto label05;

     label03:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("SubscriptionManager", "[removeSubscriptionInfoRecord]- ISub service is null");

     label04:
        return;

     label05:
        i4 = interfaceinvoke r1.<com.android.internal.telephony.ISub: int removeSubInfo(java.lang.String,int)>(r6, i3);

     label06:
        if i4 >= 0 goto label09;

     label07:
        r7 = new java.lang.StringBuilder;

        specialinvoke r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Removal of subscription didn\'t succeed: error = ");

        virtualinvoke r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4);

        $r4 = virtualinvoke r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("SubscriptionManager", $r4);

     label08:
        goto label10;

     label09:
        staticinvoke <android.telephony.SubscriptionManager: void logd(java.lang.String)>("successfully removed subscription");

     label10:
        goto label12;

     label11:
        $r5 := @caughtexception;

     label12:
        return;

        catch android.os.RemoteException from label01 to label02 with label11;
        catch android.os.RemoteException from label03 to label04 with label11;
        catch android.os.RemoteException from label05 to label06 with label11;
        catch android.os.RemoteException from label07 to label08 with label11;
        catch android.os.RemoteException from label09 to label10 with label11;
    }

    public void removeSubscriptionsFromGroup(java.util.List, android.os.ParcelUuid)
    {
        android.telephony.SubscriptionManager r0;
        com.android.internal.telephony.ISub r1;
        java.util.stream.Stream $r4;
        android.telephony.'-$$Lambda$SubscriptionManager$wql9r4zMYyVpqqNWW9Wt35fzC-w' $r5;
        java.util.stream.IntStream $r6;
        boolean $z0, $z1;
        android.os.RemoteException $r7;
        java.lang.String $r11, r16;
        java.util.List r13;
        android.os.ParcelUuid r14;
        android.content.Context r15;
        int[] r17;
        java.lang.IllegalStateException r21;
        java.lang.StringBuilder r22;
        java.util.function.ToIntFunction r23;

        r0 := @this: android.telephony.SubscriptionManager;

        r13 := @parameter0: java.util.List;

        r14 := @parameter1: android.os.ParcelUuid;

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r13, "subIdList can\'t be null.");

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r14, "groupUuid can\'t be null.");

        r15 = r0.<android.telephony.SubscriptionManager: android.content.Context mContext>;

        if r15 == null goto label01;

        r16 = virtualinvoke r15.<android.content.Context: java.lang.String getOpPackageName()>();

        goto label02;

     label01:
        r16 = "<unknown>";

     label02:
        $r4 = interfaceinvoke r13.<java.util.List: java.util.stream.Stream stream()>();

        $r5 = <android.telephony._$$Lambda$SubscriptionManager$wql9r4zMYyVpqqNWW9Wt35fzC_w: android.telephony.'-$$Lambda$SubscriptionManager$wql9r4zMYyVpqqNWW9Wt35fzC-w' INSTANCE>;

        r23 = (java.util.function.ToIntFunction) $r5;

        $r6 = interfaceinvoke $r4.<java.util.stream.Stream: java.util.stream.IntStream mapToInt(java.util.function.ToIntFunction)>(r23);

        r17 = interfaceinvoke $r6.<java.util.stream.IntStream: int[] toArray()>();

     label03:
        r1 = staticinvoke <android.telephony.TelephonyManager: com.android.internal.telephony.ISub getSubscriptionService()>();

     label04:
        if r1 == null goto label07;

     label05:
        interfaceinvoke r1.<com.android.internal.telephony.ISub: void removeSubscriptionsFromGroup(int[],android.os.ParcelUuid,java.lang.String)>(r17, r14, r16);

     label06:
        goto label08;

     label07:
        $z0 = specialinvoke r0.<android.telephony.SubscriptionManager: boolean isSystemProcess()>();

        if $z0 == 0 goto label09;

     label08:
        goto label11;

     label09:
        r21 = new java.lang.IllegalStateException;

        specialinvoke r21.<java.lang.IllegalStateException: void <init>(java.lang.String)>("telephony service is null.");

        throw r21;

     label10:
        $r7 := @caughtexception;

        r22 = new java.lang.StringBuilder;

        specialinvoke r22.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("removeSubscriptionsFromGroup RemoteException ");

        virtualinvoke r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r11 = virtualinvoke r22.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.SubscriptionManager: void loge(java.lang.String)>($r11);

        $z1 = specialinvoke r0.<android.telephony.SubscriptionManager: boolean isSystemProcess()>();

        if $z1 != 0 goto label11;

        virtualinvoke $r7.<android.os.RemoteException: java.lang.RuntimeException rethrowAsRuntimeException()>();

     label11:
        return;

        catch android.os.RemoteException from label03 to label04 with label10;
        catch android.os.RemoteException from label05 to label06 with label10;
        catch android.os.RemoteException from label07 to label08 with label10;
        catch android.os.RemoteException from label09 to label10 with label10;
    }

    public void requestEmbeddedSubscriptionInfoListRefresh()
    {
        android.telephony.SubscriptionManager r0;
        int i0;
        android.content.Context $r1;
        android.telephony.TelephonyManager $r2;
        android.os.RemoteException $r3;
        java.lang.StringBuilder $r4;
        java.lang.String $r8;
        com.android.internal.telephony.ISub r9;

        r0 := @this: android.telephony.SubscriptionManager;

        $r1 = r0.<android.telephony.SubscriptionManager: android.content.Context mContext>;

        $r2 = staticinvoke <android.telephony.TelephonyManager: android.telephony.TelephonyManager 'from'(android.content.Context)>($r1);

        i0 = virtualinvoke $r2.<android.telephony.TelephonyManager: int getCardIdForDefaultEuicc()>();

     label1:
        r9 = staticinvoke <android.telephony.TelephonyManager: com.android.internal.telephony.ISub getSubscriptionService()>();

     label2:
        if r9 == null goto label4;

     label3:
        interfaceinvoke r9.<com.android.internal.telephony.ISub: void requestEmbeddedSubscriptionInfoListRefresh(int)>(i0);

     label4:
        goto label6;

     label5:
        $r3 := @caughtexception;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("requestEmbeddedSubscriptionInfoListFresh for card = ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" failed.");

        $r8 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.SubscriptionManager: void logd(java.lang.String)>($r8);

     label6:
        return;

        catch android.os.RemoteException from label1 to label2 with label5;
        catch android.os.RemoteException from label3 to label4 with label5;
    }

    public void requestEmbeddedSubscriptionInfoListRefresh(int)
    {
        android.telephony.SubscriptionManager r0;
        int i0;
        android.os.RemoteException $r1;
        java.lang.StringBuilder $r2;
        java.lang.String $r6;
        com.android.internal.telephony.ISub r7;

        r0 := @this: android.telephony.SubscriptionManager;

        i0 := @parameter0: int;

     label1:
        r7 = staticinvoke <android.telephony.TelephonyManager: com.android.internal.telephony.ISub getSubscriptionService()>();

     label2:
        if r7 == null goto label4;

     label3:
        interfaceinvoke r7.<com.android.internal.telephony.ISub: void requestEmbeddedSubscriptionInfoListRefresh(int)>(i0);

     label4:
        goto label6;

     label5:
        $r1 := @caughtexception;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("requestEmbeddedSubscriptionInfoListFresh for card = ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" failed.");

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.SubscriptionManager: void logd(java.lang.String)>($r6);

     label6:
        return;

        catch android.os.RemoteException from label1 to label2 with label5;
        catch android.os.RemoteException from label3 to label4 with label5;
    }

    public int setDataRoaming(int, int)
    {
        android.telephony.SubscriptionManager r0;
        int i0, i1, $i2;
        android.telephony._$$Lambda$SubscriptionManager$3xL3VvVeihgpLYlVgAuAtdlfmlo $r1;

        r0 := @this: android.telephony.SubscriptionManager;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = new android.telephony._$$Lambda$SubscriptionManager$3xL3VvVeihgpLYlVgAuAtdlfmlo;

        specialinvoke $r1.<android.telephony._$$Lambda$SubscriptionManager$3xL3VvVeihgpLYlVgAuAtdlfmlo: void <init>(int,int)>(i0, i1);

        $i2 = specialinvoke r0.<android.telephony.SubscriptionManager: int setSubscriptionPropertyHelper(int,java.lang.String,android.telephony.SubscriptionManager$CallISubMethodHelper)>(i1, "setDataRoaming", $r1);

        return $i2;
    }

    public void setDefaultDataSubId(int)
    {
        android.telephony.SubscriptionManager r0;
        int i0;
        android.os.RemoteException $r1;
        com.android.internal.telephony.ISub r2;

        r0 := @this: android.telephony.SubscriptionManager;

        i0 := @parameter0: int;

     label1:
        r2 = staticinvoke <android.telephony.TelephonyManager: com.android.internal.telephony.ISub getSubscriptionService()>();

     label2:
        if r2 == null goto label4;

     label3:
        interfaceinvoke r2.<com.android.internal.telephony.ISub: void setDefaultDataSubId(int)>(i0);

     label4:
        goto label6;

     label5:
        $r1 := @caughtexception;

     label6:
        return;

        catch android.os.RemoteException from label1 to label2 with label5;
        catch android.os.RemoteException from label3 to label4 with label5;
    }

    public void setDefaultSmsSubId(int)
    {
        android.telephony.SubscriptionManager r0;
        int i0;
        android.os.RemoteException $r1;
        com.android.internal.telephony.ISub r3;

        r0 := @this: android.telephony.SubscriptionManager;

        i0 := @parameter0: int;

     label1:
        r3 = staticinvoke <android.telephony.TelephonyManager: com.android.internal.telephony.ISub getSubscriptionService()>();

     label2:
        if r3 == null goto label4;

     label3:
        interfaceinvoke r3.<com.android.internal.telephony.ISub: void setDefaultSmsSubId(int)>(i0);

     label4:
        goto label6;

     label5:
        $r1 := @caughtexception;

        virtualinvoke $r1.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

     label6:
        return;

        catch android.os.RemoteException from label1 to label2 with label5;
        catch android.os.RemoteException from label3 to label4 with label5;
    }

    public void setDefaultVoiceSubId(int)
    {
        android.telephony.SubscriptionManager r0;
        int i0;

        r0 := @this: android.telephony.SubscriptionManager;

        i0 := @parameter0: int;

        virtualinvoke r0.<android.telephony.SubscriptionManager: void setDefaultVoiceSubscriptionId(int)>(i0);

        return;
    }

    public void setDefaultVoiceSubscriptionId(int)
    {
        android.telephony.SubscriptionManager r0;
        int i0;
        android.os.RemoteException $r1;
        com.android.internal.telephony.ISub r2;

        r0 := @this: android.telephony.SubscriptionManager;

        i0 := @parameter0: int;

     label1:
        r2 = staticinvoke <android.telephony.TelephonyManager: com.android.internal.telephony.ISub getSubscriptionService()>();

     label2:
        if r2 == null goto label4;

     label3:
        interfaceinvoke r2.<com.android.internal.telephony.ISub: void setDefaultVoiceSubId(int)>(i0);

     label4:
        goto label6;

     label5:
        $r1 := @caughtexception;

     label6:
        return;

        catch android.os.RemoteException from label1 to label2 with label5;
        catch android.os.RemoteException from label3 to label4 with label5;
    }

    public int setDisplayName(java.lang.String, int, int)
    {
        android.telephony.SubscriptionManager r0;
        java.lang.String r1;
        int i0, i1, $i2;
        android.telephony._$$Lambda$SubscriptionManager$vq2TobVWeB6FgTmZtD6jJ3grtk0 $r2;

        r0 := @this: android.telephony.SubscriptionManager;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = new android.telephony._$$Lambda$SubscriptionManager$vq2TobVWeB6FgTmZtD6jJ3grtk0;

        specialinvoke $r2.<android.telephony._$$Lambda$SubscriptionManager$vq2TobVWeB6FgTmZtD6jJ3grtk0: void <init>(java.lang.String,int,int)>(r1, i0, i1);

        $i2 = specialinvoke r0.<android.telephony.SubscriptionManager: int setSubscriptionPropertyHelper(int,java.lang.String,android.telephony.SubscriptionManager$CallISubMethodHelper)>(i0, "setDisplayName", $r2);

        return $i2;
    }

    public int setDisplayNumber(java.lang.String, int)
    {
        android.telephony.SubscriptionManager r0;
        java.lang.String r1;
        int i0, $i1;
        android.telephony._$$Lambda$SubscriptionManager$_V9Pitohq6YI8ab2G44kCDK4K4M $r2;

        r0 := @this: android.telephony.SubscriptionManager;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        if r1 != null goto label1;

        staticinvoke <android.telephony.SubscriptionManager: void logd(java.lang.String)>("[setDisplayNumber]- fail");

        return -1;

     label1:
        $r2 = new android.telephony._$$Lambda$SubscriptionManager$_V9Pitohq6YI8ab2G44kCDK4K4M;

        specialinvoke $r2.<android.telephony._$$Lambda$SubscriptionManager$_V9Pitohq6YI8ab2G44kCDK4K4M: void <init>(java.lang.String,int)>(r1, i0);

        $i1 = specialinvoke r0.<android.telephony.SubscriptionManager: int setSubscriptionPropertyHelper(int,java.lang.String,android.telephony.SubscriptionManager$CallISubMethodHelper)>(i0, "setDisplayNumber", $r2);

        return $i1;
    }

    public int setIconTint(int, int)
    {
        android.telephony.SubscriptionManager r0;
        int i0, i1, $i2;
        android.telephony._$$Lambda$SubscriptionManager$YBVyClIRQJdWREquhRoX1Ha8_yw $r1;

        r0 := @this: android.telephony.SubscriptionManager;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = new android.telephony._$$Lambda$SubscriptionManager$YBVyClIRQJdWREquhRoX1Ha8_yw;

        specialinvoke $r1.<android.telephony._$$Lambda$SubscriptionManager$YBVyClIRQJdWREquhRoX1Ha8_yw: void <init>(int,int)>(i0, i1);

        $i2 = specialinvoke r0.<android.telephony.SubscriptionManager: int setSubscriptionPropertyHelper(int,java.lang.String,android.telephony.SubscriptionManager$CallISubMethodHelper)>(i1, "setIconTint", $r1);

        return $i2;
    }

    public boolean setOpportunistic(boolean, int)
    {
        android.telephony.SubscriptionManager r0;
        android.telephony._$$Lambda$SubscriptionManager$vEkhQSELvddUPjZ7BQuik8uCACE $r1;
        boolean z0, z1;
        int i0, i1;

        r0 := @this: android.telephony.SubscriptionManager;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        $r1 = new android.telephony._$$Lambda$SubscriptionManager$vEkhQSELvddUPjZ7BQuik8uCACE;

        specialinvoke $r1.<android.telephony._$$Lambda$SubscriptionManager$vEkhQSELvddUPjZ7BQuik8uCACE: void <init>(android.telephony.SubscriptionManager,boolean,int)>(r0, z0, i0);

        i1 = specialinvoke r0.<android.telephony.SubscriptionManager: int setSubscriptionPropertyHelper(int,java.lang.String,android.telephony.SubscriptionManager$CallISubMethodHelper)>(i0, "setOpportunistic", $r1);

        z1 = 1;

        if i1 != 1 goto label1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    public void setPreferredDataSubscriptionId(int, boolean, java.util.concurrent.Executor, java.util.function.Consumer)
    {
        android.telephony.SubscriptionManager r0;
        int i0;
        boolean z0;
        java.util.function.Consumer r1;
        com.android.internal.telephony.ISub r2;
        android.telephony.SubscriptionManager$1 r3;
        android.os.RemoteException $r4;
        java.util.concurrent.Executor r5;

        r0 := @this: android.telephony.SubscriptionManager;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        r5 := @parameter2: java.util.concurrent.Executor;

        r1 := @parameter3: java.util.function.Consumer;

     label1:
        r2 = staticinvoke <android.telephony.TelephonyManager: com.android.internal.telephony.ISub getSubscriptionService()>();

     label2:
        if r2 != null goto label3;

        return;

     label3:
        r3 = new android.telephony.SubscriptionManager$1;

        specialinvoke r3.<android.telephony.SubscriptionManager$1: void <init>(android.telephony.SubscriptionManager,java.util.concurrent.Executor,java.util.function.Consumer)>(r0, r5, r1);

        interfaceinvoke r2.<com.android.internal.telephony.ISub: void setPreferredDataSubscriptionId(int,boolean,com.android.internal.telephony.ISetOpportunisticDataCallback)>(i0, z0, r3);

     label4:
        goto label6;

     label5:
        $r4 := @caughtexception;

     label6:
        return;

        catch android.os.RemoteException from label1 to label2 with label5;
        catch android.os.RemoteException from label3 to label4 with label5;
    }

    public boolean setSubscriptionEnabled(int, boolean)
    {
        android.telephony.SubscriptionManager r0;
        int i0;
        android.os.RemoteException $r1;
        boolean z0, z1;
        com.android.internal.telephony.ISub r2;

        r0 := @this: android.telephony.SubscriptionManager;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

     label1:
        r2 = staticinvoke <android.telephony.TelephonyManager: com.android.internal.telephony.ISub getSubscriptionService()>();

     label2:
        if r2 == null goto label5;

     label3:
        z1 = interfaceinvoke r2.<com.android.internal.telephony.ISub: boolean setSubscriptionEnabled(boolean,int)>(z0, i0);

     label4:
        return z1;

     label5:
        goto label7;

     label6:
        $r1 := @caughtexception;

     label7:
        return 0;

        catch android.os.RemoteException from label1 to label2 with label6;
        catch android.os.RemoteException from label3 to label4 with label6;
    }

    public void setSubscriptionOverrideCongested(int, boolean, long)
    {
        android.telephony.SubscriptionManager r0;
        int i0;
        boolean z0;
        long l1;
        android.net.NetworkPolicyManager $r1;
        android.content.Context $r2;
        java.lang.String $r3;
        byte b2;

        r0 := @this: android.telephony.SubscriptionManager;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        l1 := @parameter2: long;

        if z0 == 0 goto label1;

        b2 = 2;

        goto label2;

     label1:
        b2 = 0;

     label2:
        $r1 = specialinvoke r0.<android.telephony.SubscriptionManager: android.net.NetworkPolicyManager getNetworkPolicyManager()>();

        $r2 = r0.<android.telephony.SubscriptionManager: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: java.lang.String getOpPackageName()>();

        virtualinvoke $r1.<android.net.NetworkPolicyManager: void setSubscriptionOverride(int,int,int,long,java.lang.String)>(i0, 2, b2, l1, $r3);

        return;
    }

    public void setSubscriptionOverrideUnmetered(int, boolean, long)
    {
        android.telephony.SubscriptionManager r0;
        int i0, i2;
        boolean z0;
        long l1;
        android.net.NetworkPolicyManager $r1;
        android.content.Context $r2;
        java.lang.String $r3;

        r0 := @this: android.telephony.SubscriptionManager;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        l1 := @parameter2: long;

        $r1 = specialinvoke r0.<android.telephony.SubscriptionManager: android.net.NetworkPolicyManager getNetworkPolicyManager()>();

        $r2 = r0.<android.telephony.SubscriptionManager: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: java.lang.String getOpPackageName()>();

        i2 = (int) z0;

        virtualinvoke $r1.<android.net.NetworkPolicyManager: void setSubscriptionOverride(int,int,int,long,java.lang.String)>(i0, 1, i2, l1, $r3);

        return;
    }

    public void setSubscriptionPlans(int, java.util.List)
    {
        android.telephony.SubscriptionManager r0;
        int i0, $i1;
        java.util.List r1;
        android.net.NetworkPolicyManager $r2;
        android.telephony.SubscriptionPlan[] $r3, $r6;
        java.lang.Object[] $r4;
        android.content.Context $r5;
        java.lang.String $r7;

        r0 := @this: android.telephony.SubscriptionManager;

        i0 := @parameter0: int;

        r1 := @parameter1: java.util.List;

        $r2 = specialinvoke r0.<android.telephony.SubscriptionManager: android.net.NetworkPolicyManager getNetworkPolicyManager()>();

        $i1 = interfaceinvoke r1.<java.util.List: int size()>();

        $r3 = newarray (android.telephony.SubscriptionPlan)[$i1];

        $r4 = interfaceinvoke r1.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r3);

        $r6 = (android.telephony.SubscriptionPlan[]) $r4;

        $r5 = r0.<android.telephony.SubscriptionManager: android.content.Context mContext>;

        $r7 = virtualinvoke $r5.<android.content.Context: java.lang.String getOpPackageName()>();

        virtualinvoke $r2.<android.net.NetworkPolicyManager: void setSubscriptionPlans(int,android.telephony.SubscriptionPlan[],java.lang.String)>(i0, $r6, $r7);

        return;
    }

    public void setUiccApplicationsEnabled(int, boolean)
    {
        android.telephony.SubscriptionManager r0;
        int i0;
        boolean z0;
        android.os.TelephonyServiceManager $r1;
        android.os.TelephonyServiceManager$ServiceRegisterer $r2;
        android.os.IBinder $r3;
        android.os.RemoteException $r4;
        com.android.internal.telephony.ISub r5;

        r0 := @this: android.telephony.SubscriptionManager;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

     label1:
        $r1 = staticinvoke <android.telephony.TelephonyFrameworkInitializer: android.os.TelephonyServiceManager getTelephonyServiceManager()>();

        $r2 = virtualinvoke $r1.<android.os.TelephonyServiceManager: android.os.TelephonyServiceManager$ServiceRegisterer getSubscriptionServiceRegisterer()>();

        $r3 = virtualinvoke $r2.<android.os.TelephonyServiceManager$ServiceRegisterer: android.os.IBinder get()>();

        r5 = staticinvoke <com.android.internal.telephony.ISub$Stub: com.android.internal.telephony.ISub asInterface(android.os.IBinder)>($r3);

     label2:
        if r5 == null goto label4;

     label3:
        interfaceinvoke r5.<com.android.internal.telephony.ISub: int setUiccApplicationsEnabled(boolean,int)>(z0, i0);

     label4:
        goto label6;

     label5:
        $r4 := @caughtexception;

     label6:
        return;

        catch android.os.RemoteException from label1 to label2 with label5;
        catch android.os.RemoteException from label3 to label4 with label5;
    }

    public void switchToSubscription(int, android.app.PendingIntent)
    {
        android.telephony.SubscriptionManager r0;
        int i0;
        android.app.PendingIntent r1;
        android.telephony.euicc.EuiccManager $r3;
        android.content.Context $r4;

        r0 := @this: android.telephony.SubscriptionManager;

        i0 := @parameter0: int;

        r1 := @parameter1: android.app.PendingIntent;

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r1, "callbackIntent cannot be null");

        $r3 = new android.telephony.euicc.EuiccManager;

        $r4 = r0.<android.telephony.SubscriptionManager: android.content.Context mContext>;

        specialinvoke $r3.<android.telephony.euicc.EuiccManager: void <init>(android.content.Context)>($r4);

        virtualinvoke $r3.<android.telephony.euicc.EuiccManager: void switchToSubscription(int,android.app.PendingIntent)>(i0, r1);

        return;
    }
}
