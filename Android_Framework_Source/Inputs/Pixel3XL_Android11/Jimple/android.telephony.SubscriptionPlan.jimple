public final class android.telephony.SubscriptionPlan extends java.lang.Object implements android.os.Parcelable
{
    public static final long BYTES_UNKNOWN;
    public static final long BYTES_UNLIMITED;
    public static final android.os.Parcelable$Creator CREATOR;
    public static final int LIMIT_BEHAVIOR_BILLED;
    public static final int LIMIT_BEHAVIOR_DISABLED;
    public static final int LIMIT_BEHAVIOR_THROTTLED;
    public static final int LIMIT_BEHAVIOR_UNKNOWN;
    public static final long TIME_UNKNOWN;
    private final android.util.RecurrenceRule cycleRule;
    private int dataLimitBehavior;
    private long dataLimitBytes;
    private long dataUsageBytes;
    private long dataUsageTime;
    private int[] networkTypes;
    private java.lang.CharSequence summary;
    private java.lang.CharSequence title;

    static void <clinit>()
    {
        android.telephony.SubscriptionPlan$1 $r0;

        <android.telephony.SubscriptionPlan: long TIME_UNKNOWN> = -1L;

        <android.telephony.SubscriptionPlan: int LIMIT_BEHAVIOR_UNKNOWN> = -1;

        <android.telephony.SubscriptionPlan: int LIMIT_BEHAVIOR_THROTTLED> = 2;

        <android.telephony.SubscriptionPlan: int LIMIT_BEHAVIOR_DISABLED> = 0;

        <android.telephony.SubscriptionPlan: int LIMIT_BEHAVIOR_BILLED> = 1;

        <android.telephony.SubscriptionPlan: long BYTES_UNLIMITED> = 9223372036854775807L;

        <android.telephony.SubscriptionPlan: long BYTES_UNKNOWN> = -1L;

        $r0 = new android.telephony.SubscriptionPlan$1;

        specialinvoke $r0.<android.telephony.SubscriptionPlan$1: void <init>()>();

        <android.telephony.SubscriptionPlan: android.os.Parcelable$Creator CREATOR> = $r0;

        return;
    }

    private void <init>(android.os.Parcel)
    {
        android.telephony.SubscriptionPlan r0;
        android.os.Parcel r1;
        android.os.Parcelable $r2;
        android.util.RecurrenceRule $r3;
        java.lang.CharSequence $r4, $r5;
        long $l0, $l2, $l3;
        int $i1;
        int[] $r6;

        r0 := @this: android.telephony.SubscriptionPlan;

        r1 := @parameter0: android.os.Parcel;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.telephony.SubscriptionPlan: long dataLimitBytes> = -1L;

        r0.<android.telephony.SubscriptionPlan: int dataLimitBehavior> = -1;

        r0.<android.telephony.SubscriptionPlan: long dataUsageBytes> = -1L;

        r0.<android.telephony.SubscriptionPlan: long dataUsageTime> = -1L;

        $r2 = virtualinvoke r1.<android.os.Parcel: android.os.Parcelable readParcelable(java.lang.ClassLoader)>(null);

        $r3 = (android.util.RecurrenceRule) $r2;

        r0.<android.telephony.SubscriptionPlan: android.util.RecurrenceRule cycleRule> = $r3;

        $r4 = virtualinvoke r1.<android.os.Parcel: java.lang.CharSequence readCharSequence()>();

        r0.<android.telephony.SubscriptionPlan: java.lang.CharSequence title> = $r4;

        $r5 = virtualinvoke r1.<android.os.Parcel: java.lang.CharSequence readCharSequence()>();

        r0.<android.telephony.SubscriptionPlan: java.lang.CharSequence summary> = $r5;

        $l0 = virtualinvoke r1.<android.os.Parcel: long readLong()>();

        r0.<android.telephony.SubscriptionPlan: long dataLimitBytes> = $l0;

        $i1 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.telephony.SubscriptionPlan: int dataLimitBehavior> = $i1;

        $l2 = virtualinvoke r1.<android.os.Parcel: long readLong()>();

        r0.<android.telephony.SubscriptionPlan: long dataUsageBytes> = $l2;

        $l3 = virtualinvoke r1.<android.os.Parcel: long readLong()>();

        r0.<android.telephony.SubscriptionPlan: long dataUsageTime> = $l3;

        $r6 = virtualinvoke r1.<android.os.Parcel: int[] createIntArray()>();

        r0.<android.telephony.SubscriptionPlan: int[] networkTypes> = $r6;

        return;
    }

    void <init>(android.os.Parcel, android.telephony.SubscriptionPlan$1)
    {
        android.telephony.SubscriptionPlan r0;
        android.os.Parcel r1;
        android.telephony.SubscriptionPlan$1 r2;

        r0 := @this: android.telephony.SubscriptionPlan;

        r1 := @parameter0: android.os.Parcel;

        r2 := @parameter1: android.telephony.SubscriptionPlan$1;

        specialinvoke r0.<android.telephony.SubscriptionPlan: void <init>(android.os.Parcel)>(r1);

        return;
    }

    private void <init>(android.util.RecurrenceRule)
    {
        android.telephony.SubscriptionPlan r0;
        android.util.RecurrenceRule r1, $r3;
        java.lang.Object $r2;
        int[] $r4, $r5, $r6;
        int $i0;

        r0 := @this: android.telephony.SubscriptionPlan;

        r1 := @parameter0: android.util.RecurrenceRule;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.telephony.SubscriptionPlan: long dataLimitBytes> = -1L;

        r0.<android.telephony.SubscriptionPlan: int dataLimitBehavior> = -1;

        r0.<android.telephony.SubscriptionPlan: long dataUsageBytes> = -1L;

        r0.<android.telephony.SubscriptionPlan: long dataUsageTime> = -1L;

        $r2 = staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r3 = (android.util.RecurrenceRule) $r2;

        r0.<android.telephony.SubscriptionPlan: android.util.RecurrenceRule cycleRule> = $r3;

        $r4 = staticinvoke <android.telephony.TelephonyManager: int[] getAllNetworkTypes()>();

        $r5 = staticinvoke <android.telephony.TelephonyManager: int[] getAllNetworkTypes()>();

        $i0 = lengthof $r5;

        $r6 = staticinvoke <java.util.Arrays: int[] copyOf(int[],int)>($r4, $i0);

        r0.<android.telephony.SubscriptionPlan: int[] networkTypes> = $r6;

        return;
    }

    void <init>(android.util.RecurrenceRule, android.telephony.SubscriptionPlan$1)
    {
        android.telephony.SubscriptionPlan r0;
        android.util.RecurrenceRule r1;
        android.telephony.SubscriptionPlan$1 r2;

        r0 := @this: android.telephony.SubscriptionPlan;

        r1 := @parameter0: android.util.RecurrenceRule;

        r2 := @parameter1: android.telephony.SubscriptionPlan$1;

        specialinvoke r0.<android.telephony.SubscriptionPlan: void <init>(android.util.RecurrenceRule)>(r1);

        return;
    }

    static java.lang.CharSequence access$202(android.telephony.SubscriptionPlan, java.lang.CharSequence)
    {
        android.telephony.SubscriptionPlan r0;
        java.lang.CharSequence r1;

        r0 := @parameter0: android.telephony.SubscriptionPlan;

        r1 := @parameter1: java.lang.CharSequence;

        r0.<android.telephony.SubscriptionPlan: java.lang.CharSequence title> = r1;

        return r1;
    }

    static java.lang.CharSequence access$302(android.telephony.SubscriptionPlan, java.lang.CharSequence)
    {
        android.telephony.SubscriptionPlan r0;
        java.lang.CharSequence r1;

        r0 := @parameter0: android.telephony.SubscriptionPlan;

        r1 := @parameter1: java.lang.CharSequence;

        r0.<android.telephony.SubscriptionPlan: java.lang.CharSequence summary> = r1;

        return r1;
    }

    static long access$402(android.telephony.SubscriptionPlan, long)
    {
        android.telephony.SubscriptionPlan r0;
        long l0;

        r0 := @parameter0: android.telephony.SubscriptionPlan;

        l0 := @parameter1: long;

        r0.<android.telephony.SubscriptionPlan: long dataLimitBytes> = l0;

        return l0;
    }

    static int access$502(android.telephony.SubscriptionPlan, int)
    {
        android.telephony.SubscriptionPlan r0;
        int i0;

        r0 := @parameter0: android.telephony.SubscriptionPlan;

        i0 := @parameter1: int;

        r0.<android.telephony.SubscriptionPlan: int dataLimitBehavior> = i0;

        return i0;
    }

    static long access$602(android.telephony.SubscriptionPlan, long)
    {
        android.telephony.SubscriptionPlan r0;
        long l0;

        r0 := @parameter0: android.telephony.SubscriptionPlan;

        l0 := @parameter1: long;

        r0.<android.telephony.SubscriptionPlan: long dataUsageBytes> = l0;

        return l0;
    }

    static long access$702(android.telephony.SubscriptionPlan, long)
    {
        android.telephony.SubscriptionPlan r0;
        long l0;

        r0 := @parameter0: android.telephony.SubscriptionPlan;

        l0 := @parameter1: long;

        r0.<android.telephony.SubscriptionPlan: long dataUsageTime> = l0;

        return l0;
    }

    static int[] access$802(android.telephony.SubscriptionPlan, int[])
    {
        android.telephony.SubscriptionPlan r0;
        int[] r1;

        r0 := @parameter0: android.telephony.SubscriptionPlan;

        r1 := @parameter1: int[];

        r0.<android.telephony.SubscriptionPlan: int[] networkTypes> = r1;

        return r1;
    }

    public java.util.Iterator cycleIterator()
    {
        android.telephony.SubscriptionPlan r0;
        android.util.RecurrenceRule $r1;
        java.util.Iterator $r2;

        r0 := @this: android.telephony.SubscriptionPlan;

        $r1 = r0.<android.telephony.SubscriptionPlan: android.util.RecurrenceRule cycleRule>;

        $r2 = virtualinvoke $r1.<android.util.RecurrenceRule: java.util.Iterator cycleIterator()>();

        return $r2;
    }

    public int describeContents()
    {
        android.telephony.SubscriptionPlan r0;

        r0 := @this: android.telephony.SubscriptionPlan;

        return 0;
    }

    public boolean equals(java.lang.Object)
    {
        android.telephony.SubscriptionPlan r0, r10;
        boolean z0, $z1, $z2, $z3, $z4, z5;
        android.util.RecurrenceRule $r1, $r2;
        java.lang.CharSequence $r3, $r4, $r5, $r6;
        long $l0, $l1, $l5, $l6, $l8, $l9;
        byte $b2, $b7, $b10;
        int $i3, $i4;
        int[] $r7, $r8;
        java.lang.Object r9;

        r0 := @this: android.telephony.SubscriptionPlan;

        r9 := @parameter0: java.lang.Object;

        z0 = r9 instanceof android.telephony.SubscriptionPlan;

        z5 = 0;

        if z0 == 0 goto label2;

        r10 = (android.telephony.SubscriptionPlan) r9;

        $r2 = r0.<android.telephony.SubscriptionPlan: android.util.RecurrenceRule cycleRule>;

        $r1 = r10.<android.telephony.SubscriptionPlan: android.util.RecurrenceRule cycleRule>;

        $z1 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r2, $r1);

        if $z1 == 0 goto label1;

        $r4 = r0.<android.telephony.SubscriptionPlan: java.lang.CharSequence title>;

        $r3 = r10.<android.telephony.SubscriptionPlan: java.lang.CharSequence title>;

        $z2 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r4, $r3);

        if $z2 == 0 goto label1;

        $r6 = r0.<android.telephony.SubscriptionPlan: java.lang.CharSequence summary>;

        $r5 = r10.<android.telephony.SubscriptionPlan: java.lang.CharSequence summary>;

        $z3 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r6, $r5);

        if $z3 == 0 goto label1;

        $l1 = r0.<android.telephony.SubscriptionPlan: long dataLimitBytes>;

        $l0 = r10.<android.telephony.SubscriptionPlan: long dataLimitBytes>;

        $b2 = $l1 cmp $l0;

        if $b2 != 0 goto label1;

        $i4 = r0.<android.telephony.SubscriptionPlan: int dataLimitBehavior>;

        $i3 = r10.<android.telephony.SubscriptionPlan: int dataLimitBehavior>;

        if $i4 != $i3 goto label1;

        $l6 = r0.<android.telephony.SubscriptionPlan: long dataUsageBytes>;

        $l5 = r10.<android.telephony.SubscriptionPlan: long dataUsageBytes>;

        $b7 = $l6 cmp $l5;

        if $b7 != 0 goto label1;

        $l9 = r0.<android.telephony.SubscriptionPlan: long dataUsageTime>;

        $l8 = r10.<android.telephony.SubscriptionPlan: long dataUsageTime>;

        $b10 = $l9 cmp $l8;

        if $b10 != 0 goto label1;

        $r8 = r0.<android.telephony.SubscriptionPlan: int[] networkTypes>;

        $r7 = r10.<android.telephony.SubscriptionPlan: int[] networkTypes>;

        $z4 = staticinvoke <java.util.Arrays: boolean equals(int[],int[])>($r8, $r7);

        if $z4 == 0 goto label1;

        z5 = 1;

        goto label1;

     label1:
        return z5;

     label2:
        return 0;
    }

    public android.util.RecurrenceRule getCycleRule()
    {
        android.telephony.SubscriptionPlan r0;
        android.util.RecurrenceRule $r1;

        r0 := @this: android.telephony.SubscriptionPlan;

        $r1 = r0.<android.telephony.SubscriptionPlan: android.util.RecurrenceRule cycleRule>;

        return $r1;
    }

    public int getDataLimitBehavior()
    {
        android.telephony.SubscriptionPlan r0;
        int $i0;

        r0 := @this: android.telephony.SubscriptionPlan;

        $i0 = r0.<android.telephony.SubscriptionPlan: int dataLimitBehavior>;

        return $i0;
    }

    public long getDataLimitBytes()
    {
        android.telephony.SubscriptionPlan r0;
        long $l0;

        r0 := @this: android.telephony.SubscriptionPlan;

        $l0 = r0.<android.telephony.SubscriptionPlan: long dataLimitBytes>;

        return $l0;
    }

    public long getDataUsageBytes()
    {
        android.telephony.SubscriptionPlan r0;
        long $l0;

        r0 := @this: android.telephony.SubscriptionPlan;

        $l0 = r0.<android.telephony.SubscriptionPlan: long dataUsageBytes>;

        return $l0;
    }

    public long getDataUsageTime()
    {
        android.telephony.SubscriptionPlan r0;
        long $l0;

        r0 := @this: android.telephony.SubscriptionPlan;

        $l0 = r0.<android.telephony.SubscriptionPlan: long dataUsageTime>;

        return $l0;
    }

    public int[] getNetworkTypes()
    {
        android.telephony.SubscriptionPlan r0;
        int[] r1, $r2;
        int $i0;

        r0 := @this: android.telephony.SubscriptionPlan;

        r1 = r0.<android.telephony.SubscriptionPlan: int[] networkTypes>;

        $i0 = lengthof r1;

        $r2 = staticinvoke <java.util.Arrays: int[] copyOf(int[],int)>(r1, $i0);

        return $r2;
    }

    public java.lang.CharSequence getSummary()
    {
        android.telephony.SubscriptionPlan r0;
        java.lang.CharSequence $r1;

        r0 := @this: android.telephony.SubscriptionPlan;

        $r1 = r0.<android.telephony.SubscriptionPlan: java.lang.CharSequence summary>;

        return $r1;
    }

    public java.lang.CharSequence getTitle()
    {
        android.telephony.SubscriptionPlan r0;
        java.lang.CharSequence $r1;

        r0 := @this: android.telephony.SubscriptionPlan;

        $r1 = r0.<android.telephony.SubscriptionPlan: java.lang.CharSequence title>;

        return $r1;
    }

    public int hashCode()
    {
        android.telephony.SubscriptionPlan r0;
        java.lang.Object[] $r1;
        android.util.RecurrenceRule $r2;
        java.lang.CharSequence $r3, $r4;
        long $l0, $l2, $l3;
        java.lang.Long $r5, $r7, $r8;
        int $i1, $i4, $i5;
        java.lang.Integer $r6, $r10;
        int[] $r9;

        r0 := @this: android.telephony.SubscriptionPlan;

        $r1 = newarray (java.lang.Object)[8];

        $r2 = r0.<android.telephony.SubscriptionPlan: android.util.RecurrenceRule cycleRule>;

        $r1[0] = $r2;

        $r3 = r0.<android.telephony.SubscriptionPlan: java.lang.CharSequence title>;

        $r1[1] = $r3;

        $r4 = r0.<android.telephony.SubscriptionPlan: java.lang.CharSequence summary>;

        $r1[2] = $r4;

        $l0 = r0.<android.telephony.SubscriptionPlan: long dataLimitBytes>;

        $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r1[3] = $r5;

        $i1 = r0.<android.telephony.SubscriptionPlan: int dataLimitBehavior>;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r1[4] = $r6;

        $l2 = r0.<android.telephony.SubscriptionPlan: long dataUsageBytes>;

        $r7 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        $r1[5] = $r7;

        $l3 = r0.<android.telephony.SubscriptionPlan: long dataUsageTime>;

        $r8 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l3);

        $r1[6] = $r8;

        $r9 = r0.<android.telephony.SubscriptionPlan: int[] networkTypes>;

        $i4 = staticinvoke <java.util.Arrays: int hashCode(int[])>($r9);

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        $r1[7] = $r10;

        $i5 = staticinvoke <java.util.Objects: int hash(java.lang.Object[])>($r1);

        return $i5;
    }

    public java.lang.String toString()
    {
        android.telephony.SubscriptionPlan r0;
        java.lang.StringBuilder $r2;
        android.util.RecurrenceRule $r4;
        java.lang.CharSequence $r7, $r10;
        long $l0, $l2, $l3;
        int $i1;
        int[] $r21;
        java.lang.String $r22, $r25;

        r0 := @this: android.telephony.SubscriptionPlan;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("SubscriptionPlan{");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("cycleRule=");

        $r4 = r0.<android.telephony.SubscriptionPlan: android.util.RecurrenceRule cycleRule>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" title=");

        $r7 = r0.<android.telephony.SubscriptionPlan: java.lang.CharSequence title>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>($r7);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" summary=");

        $r10 = r0.<android.telephony.SubscriptionPlan: java.lang.CharSequence summary>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>($r10);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" dataLimitBytes=");

        $l0 = r0.<android.telephony.SubscriptionPlan: long dataLimitBytes>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" dataLimitBehavior=");

        $i1 = r0.<android.telephony.SubscriptionPlan: int dataLimitBehavior>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" dataUsageBytes=");

        $l2 = r0.<android.telephony.SubscriptionPlan: long dataUsageBytes>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l2);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" dataUsageTime=");

        $l3 = r0.<android.telephony.SubscriptionPlan: long dataUsageTime>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l3);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" networkTypes=");

        $r21 = r0.<android.telephony.SubscriptionPlan: int[] networkTypes>;

        $r22 = staticinvoke <java.util.Arrays: java.lang.String toString(int[])>($r21);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r25 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r25;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.telephony.SubscriptionPlan r0;
        android.os.Parcel r1;
        int i0, $i2;
        android.util.RecurrenceRule $r2;
        java.lang.CharSequence $r3, $r4;
        long $l1, $l3, $l4;
        int[] $r5;

        r0 := @this: android.telephony.SubscriptionPlan;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        $r2 = r0.<android.telephony.SubscriptionPlan: android.util.RecurrenceRule cycleRule>;

        virtualinvoke r1.<android.os.Parcel: void writeParcelable(android.os.Parcelable,int)>($r2, i0);

        $r3 = r0.<android.telephony.SubscriptionPlan: java.lang.CharSequence title>;

        virtualinvoke r1.<android.os.Parcel: void writeCharSequence(java.lang.CharSequence)>($r3);

        $r4 = r0.<android.telephony.SubscriptionPlan: java.lang.CharSequence summary>;

        virtualinvoke r1.<android.os.Parcel: void writeCharSequence(java.lang.CharSequence)>($r4);

        $l1 = r0.<android.telephony.SubscriptionPlan: long dataLimitBytes>;

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l1);

        $i2 = r0.<android.telephony.SubscriptionPlan: int dataLimitBehavior>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i2);

        $l3 = r0.<android.telephony.SubscriptionPlan: long dataUsageBytes>;

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l3);

        $l4 = r0.<android.telephony.SubscriptionPlan: long dataUsageTime>;

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l4);

        $r5 = r0.<android.telephony.SubscriptionPlan: int[] networkTypes>;

        virtualinvoke r1.<android.os.Parcel: void writeIntArray(int[])>($r5);

        return;
    }
}
