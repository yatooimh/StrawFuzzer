class android.telephony.TelephonyScanManager$1 extends android.os.Handler
{
    final android.telephony.TelephonyScanManager this$0;

    void <init>(android.telephony.TelephonyScanManager, android.os.Looper)
    {
        android.telephony.TelephonyScanManager$1 r0;
        android.telephony.TelephonyScanManager r1;
        android.os.Looper r2;

        r0 := @this: android.telephony.TelephonyScanManager$1;

        r1 := @parameter0: android.telephony.TelephonyScanManager;

        r2 := @parameter1: android.os.Looper;

        r0.<android.telephony.TelephonyScanManager$1: android.telephony.TelephonyScanManager this$0> = r1;

        specialinvoke r0.<android.os.Handler: void <init>(android.os.Looper)>(r2);

        return;
    }

    static void lambda$handleMessage$0(android.telephony.CellInfo[], android.telephony.TelephonyScanManager$NetworkScanCallback)
    {
        android.telephony.CellInfo[] r0;
        android.telephony.TelephonyScanManager$NetworkScanCallback r1;
        java.lang.StringBuilder $r3;
        java.lang.String $r5, $r7;
        java.util.List $r8;

        r0 := @parameter0: android.telephony.CellInfo[];

        r1 := @parameter1: android.telephony.TelephonyScanManager$NetworkScanCallback;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onResults: ");

        $r5 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("TelephonyScanManager", $r7);

        $r8 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r0);

        virtualinvoke r1.<android.telephony.TelephonyScanManager$NetworkScanCallback: void onResults(java.util.List)>($r8);

        return;
    }

    static void lambda$handleMessage$1(int, android.telephony.TelephonyScanManager$NetworkScanCallback)
    {
        int i0;
        android.telephony.TelephonyScanManager$NetworkScanCallback r0;
        java.lang.StringBuilder $r2;
        java.lang.String $r5;

        i0 := @parameter0: int;

        r0 := @parameter1: android.telephony.TelephonyScanManager$NetworkScanCallback;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onError: ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("TelephonyScanManager", $r5);

        virtualinvoke r0.<android.telephony.TelephonyScanManager$NetworkScanCallback: void onError(int)>(i0);

        return;
    }

    static void lambda$handleMessage$2(android.telephony.TelephonyScanManager$NetworkScanCallback)
    {
        android.telephony.TelephonyScanManager$NetworkScanCallback r0;

        r0 := @parameter0: android.telephony.TelephonyScanManager$NetworkScanCallback;

        staticinvoke <com.android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("TelephonyScanManager", "onComplete");

        virtualinvoke r0.<android.telephony.TelephonyScanManager$NetworkScanCallback: void onComplete()>();

        return;
    }

    public void handleMessage(android.os.Message)
    {
        android.telephony.TelephonyScanManager$1 r0;
        android.telephony.TelephonyScanManager $r2, $r3, $r24;
        android.util.SparseArray $r4, $r25, r36;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, i11, i12, i13, $i14;
        java.lang.Object $r5;
        java.lang.StringBuilder $r6, $r11, $r16, $r26;
        java.lang.RuntimeException $r9, $r14, $r19;
        java.lang.String $r10, $r15, $r20, $r28, $r30;
        android.os.Bundle $r21;
        android.os.Parcelable $r22;
        android.telephony.CellInfo $r23;
        java.lang.Throwable $r31;
        java.lang.Exception $r32, $r33, $r34;
        android.os.Message r35;
        android.telephony.TelephonyScanManager$NetworkScanInfo r37;
        android.telephony.TelephonyScanManager$NetworkScanCallback r38;
        java.util.concurrent.Executor r39;
        android.telephony._$$Lambda$TelephonyScanManager$1$tGSpVQaVhc4GKIxjcECV_jCGYw4 r41;
        android.telephony._$$Lambda$TelephonyScanManager$1$X9SMshZoHjJ6SzCbmgVMwQip2Q0 r43;
        android.os.Parcelable[] r45;
        android.telephony.CellInfo[] r46;
        android.telephony._$$Lambda$TelephonyScanManager$1$jmXulbd8FzO5Qb8_Hi_Z6s_nJWI r47;

        r0 := @this: android.telephony.TelephonyScanManager$1;

        r35 := @parameter0: android.os.Message;

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r35, "message cannot be null");

        $r2 = r0.<android.telephony.TelephonyScanManager$1: android.telephony.TelephonyScanManager this$0>;

        r36 = staticinvoke <android.telephony.TelephonyScanManager: android.util.SparseArray access$000(android.telephony.TelephonyScanManager)>($r2);

        entermonitor r36;

     label01:
        $r3 = r0.<android.telephony.TelephonyScanManager$1: android.telephony.TelephonyScanManager this$0>;

        $r4 = staticinvoke <android.telephony.TelephonyScanManager: android.util.SparseArray access$000(android.telephony.TelephonyScanManager)>($r3);

        $i0 = r35.<android.os.Message: int arg2>;

        $r5 = virtualinvoke $r4.<android.util.SparseArray: java.lang.Object get(int)>($i0);

        r37 = (android.telephony.TelephonyScanManager$NetworkScanInfo) $r5;

        exitmonitor r36;

     label02:
        if r37 == null goto label19;

        r38 = staticinvoke <android.telephony.TelephonyScanManager$NetworkScanInfo: android.telephony.TelephonyScanManager$NetworkScanCallback access$100(android.telephony.TelephonyScanManager$NetworkScanInfo)>(r37);

        r39 = staticinvoke <android.telephony.TelephonyScanManager$NetworkScanInfo: java.util.concurrent.Executor access$200(android.telephony.TelephonyScanManager$NetworkScanInfo)>(r37);

        if r38 == null goto label18;

        if r39 == null goto label17;

        i11 = r35.<android.os.Message: int what>;

        if i11 == 1 goto label09;

        if i11 == 2 goto label06;

        if i11 == 3 goto label03;

        if i11 == 4 goto label09;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unhandled message ");

        $i6 = r35.<android.os.Message: int what>;

        $r28 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i6);

        virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);

        $r30 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("TelephonyScanManager", $r30);

        goto label16;

     label03:
        r41 = new android.telephony._$$Lambda$TelephonyScanManager$1$tGSpVQaVhc4GKIxjcECV_jCGYw4;

        specialinvoke r41.<android.telephony._$$Lambda$TelephonyScanManager$1$tGSpVQaVhc4GKIxjcECV_jCGYw4: void <init>(android.telephony.TelephonyScanManager$NetworkScanCallback)>(r38);

        interfaceinvoke r39.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>(r41);

        $r24 = r0.<android.telephony.TelephonyScanManager$1: android.telephony.TelephonyScanManager this$0>;

        $r25 = staticinvoke <android.telephony.TelephonyScanManager: android.util.SparseArray access$000(android.telephony.TelephonyScanManager)>($r24);

        $i5 = r35.<android.os.Message: int arg2>;

        virtualinvoke $r25.<android.util.SparseArray: void remove(int)>($i5);

     label04:
        goto label16;

     label05:
        $r33 := @caughtexception;

        staticinvoke <com.android.telephony.Rlog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TelephonyScanManager", "Exception in networkscan callback onComplete", $r33);

        goto label16;

     label06:
        i12 = r35.<android.os.Message: int arg1>;

        r43 = new android.telephony._$$Lambda$TelephonyScanManager$1$X9SMshZoHjJ6SzCbmgVMwQip2Q0;

        specialinvoke r43.<android.telephony._$$Lambda$TelephonyScanManager$1$X9SMshZoHjJ6SzCbmgVMwQip2Q0: void <init>(int,android.telephony.TelephonyScanManager$NetworkScanCallback)>(i12, r38);

        interfaceinvoke r39.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>(r43);

     label07:
        goto label16;

     label08:
        $r32 := @caughtexception;

        staticinvoke <com.android.telephony.Rlog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TelephonyScanManager", "Exception in networkscan callback onError", $r32);

        goto label16;

     label09:
        $r21 = virtualinvoke r35.<android.os.Message: android.os.Bundle getData()>();

        r45 = virtualinvoke $r21.<android.os.Bundle: android.os.Parcelable[] getParcelableArray(java.lang.String)>("scanResult");

        $i4 = lengthof r45;

        r46 = newarray (android.telephony.CellInfo)[$i4];

     label10:
        i13 = 0;

     label11:
        $i14 = lengthof r45;

        if i13 >= $i14 goto label13;

        $r22 = r45[i13];

        $r23 = (android.telephony.CellInfo) $r22;

        r46[i13] = $r23;

     label12:
        i13 = i13 + 1;

        goto label11;

     label13:
        r47 = new android.telephony._$$Lambda$TelephonyScanManager$1$jmXulbd8FzO5Qb8_Hi_Z6s_nJWI;

        specialinvoke r47.<android.telephony._$$Lambda$TelephonyScanManager$1$jmXulbd8FzO5Qb8_Hi_Z6s_nJWI: void <init>(android.telephony.CellInfo[],android.telephony.TelephonyScanManager$NetworkScanCallback)>(r46, r38);

        interfaceinvoke r39.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>(r47);

     label14:
        goto label16;

     label15:
        $r34 := @caughtexception;

        staticinvoke <com.android.telephony.Rlog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TelephonyScanManager", "Exception in networkscan callback onResults", $r34);

     label16:
        return;

     label17:
        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to find Executor with id ");

        $i3 = r35.<android.os.Message: int arg2>;

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r19 = new java.lang.RuntimeException;

        $r20 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r19.<java.lang.RuntimeException: void <init>(java.lang.String)>($r20);

        throw $r19;

     label18:
        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to find NetworkScanCallback with id ");

        $i2 = r35.<android.os.Message: int arg2>;

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r14 = new java.lang.RuntimeException;

        $r15 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<java.lang.RuntimeException: void <init>(java.lang.String)>($r15);

        throw $r14;

     label19:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to find NetworkScanInfo with id ");

        $i1 = r35.<android.os.Message: int arg2>;

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r9 = new java.lang.RuntimeException;

        $r10 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.RuntimeException: void <init>(java.lang.String)>($r10);

        throw $r9;

     label20:
        $r31 := @caughtexception;

     label21:
        exitmonitor r36;

     label22:
        throw $r31;

        catch java.lang.Throwable from label01 to label02 with label20;
        catch java.lang.Exception from label03 to label04 with label05;
        catch java.lang.Exception from label06 to label07 with label08;
        catch java.lang.Exception from label09 to label10 with label15;
        catch java.lang.Exception from label11 to label12 with label15;
        catch java.lang.Exception from label13 to label14 with label15;
        catch java.lang.Throwable from label21 to label22 with label20;
    }
}
