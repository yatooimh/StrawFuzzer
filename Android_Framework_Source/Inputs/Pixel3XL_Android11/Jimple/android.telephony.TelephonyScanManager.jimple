public final class android.telephony.TelephonyScanManager extends java.lang.Object
{
    public static final int CALLBACK_RESTRICTED_SCAN_RESULTS;
    public static final int CALLBACK_SCAN_COMPLETE;
    public static final int CALLBACK_SCAN_ERROR;
    public static final int CALLBACK_SCAN_RESULTS;
    public static final int INVALID_SCAN_ID;
    public static final java.lang.String SCAN_RESULT_KEY;
    private static final java.lang.String TAG;
    private final android.os.Looper mLooper;
    private final android.os.Messenger mMessenger;
    private final android.util.SparseArray mScanInfo;

    public void <init>()
    {
        android.telephony.TelephonyScanManager r0;
        android.util.SparseArray $r2;
        android.os.HandlerThread $r3;
        android.os.Looper $r4, $r7;
        android.os.Messenger $r5;
        android.telephony.TelephonyScanManager$1 $r6;

        r0 := @this: android.telephony.TelephonyScanManager;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new android.util.SparseArray;

        specialinvoke $r2.<android.util.SparseArray: void <init>()>();

        r0.<android.telephony.TelephonyScanManager: android.util.SparseArray mScanInfo> = $r2;

        $r3 = new android.os.HandlerThread;

        specialinvoke $r3.<android.os.HandlerThread: void <init>(java.lang.String)>("TelephonyScanManager");

        virtualinvoke $r3.<android.os.HandlerThread: void start()>();

        $r4 = virtualinvoke $r3.<android.os.HandlerThread: android.os.Looper getLooper()>();

        r0.<android.telephony.TelephonyScanManager: android.os.Looper mLooper> = $r4;

        $r5 = new android.os.Messenger;

        $r6 = new android.telephony.TelephonyScanManager$1;

        $r7 = r0.<android.telephony.TelephonyScanManager: android.os.Looper mLooper>;

        specialinvoke $r6.<android.telephony.TelephonyScanManager$1: void <init>(android.telephony.TelephonyScanManager,android.os.Looper)>(r0, $r7);

        specialinvoke $r5.<android.os.Messenger: void <init>(android.os.Handler)>($r6);

        r0.<android.telephony.TelephonyScanManager: android.os.Messenger mMessenger> = $r5;

        return;
    }

    static android.util.SparseArray access$000(android.telephony.TelephonyScanManager)
    {
        android.telephony.TelephonyScanManager r0;
        android.util.SparseArray $r1;

        r0 := @parameter0: android.telephony.TelephonyScanManager;

        $r1 = r0.<android.telephony.TelephonyScanManager: android.util.SparseArray mScanInfo>;

        return $r1;
    }

    private com.android.internal.telephony.ITelephony getITelephony()
    {
        android.telephony.TelephonyScanManager r0;
        android.os.TelephonyServiceManager $r1;
        android.os.TelephonyServiceManager$ServiceRegisterer $r2;
        android.os.IBinder $r3;
        com.android.internal.telephony.ITelephony $r4;

        r0 := @this: android.telephony.TelephonyScanManager;

        $r1 = staticinvoke <android.telephony.TelephonyFrameworkInitializer: android.os.TelephonyServiceManager getTelephonyServiceManager()>();

        $r2 = virtualinvoke $r1.<android.os.TelephonyServiceManager: android.os.TelephonyServiceManager$ServiceRegisterer getTelephonyServiceRegisterer()>();

        $r3 = virtualinvoke $r2.<android.os.TelephonyServiceManager$ServiceRegisterer: android.os.IBinder get()>();

        $r4 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony asInterface(android.os.IBinder)>($r3);

        return $r4;
    }

    private void saveScanInfo(int, android.telephony.NetworkScanRequest, java.util.concurrent.Executor, android.telephony.TelephonyScanManager$NetworkScanCallback)
    {
        android.telephony.TelephonyScanManager r0;
        int i0;
        android.telephony.NetworkScanRequest r1;
        java.util.concurrent.Executor r2;
        android.telephony.TelephonyScanManager$NetworkScanCallback r3;
        android.telephony.TelephonyScanManager$NetworkScanInfo $r4;
        android.util.SparseArray $r5;

        r0 := @this: android.telephony.TelephonyScanManager;

        i0 := @parameter0: int;

        r1 := @parameter1: android.telephony.NetworkScanRequest;

        r2 := @parameter2: java.util.concurrent.Executor;

        r3 := @parameter3: android.telephony.TelephonyScanManager$NetworkScanCallback;

        $r5 = r0.<android.telephony.TelephonyScanManager: android.util.SparseArray mScanInfo>;

        $r4 = new android.telephony.TelephonyScanManager$NetworkScanInfo;

        specialinvoke $r4.<android.telephony.TelephonyScanManager$NetworkScanInfo: void <init>(android.telephony.NetworkScanRequest,java.util.concurrent.Executor,android.telephony.TelephonyScanManager$NetworkScanCallback)>(r1, r2, r3);

        virtualinvoke $r5.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, $r4);

        return;
    }

    public android.telephony.NetworkScan requestNetworkScan(int, android.telephony.NetworkScanRequest, java.util.concurrent.Executor, android.telephony.TelephonyScanManager$NetworkScanCallback, java.lang.String, java.lang.String)
    {
        android.telephony.TelephonyScanManager r0;
        int i0, i1;
        java.util.concurrent.Executor r1;
        android.telephony.TelephonyScanManager$NetworkScanCallback r2;
        java.lang.String r3, r4;
        com.android.internal.telephony.ITelephony r5;
        android.util.SparseArray r6;
        android.os.Messenger r7;
        android.os.Binder r8;
        java.lang.Throwable $r9, $r10, $r13, r18;
        android.os.RemoteException $r11, $r12, r20;
        java.lang.NullPointerException $r14, $r15, r19;
        android.telephony.NetworkScanRequest r16;
        android.telephony.NetworkScan r17;

        r0 := @this: android.telephony.TelephonyScanManager;

        i0 := @parameter0: int;

        r16 := @parameter1: android.telephony.NetworkScanRequest;

        r1 := @parameter2: java.util.concurrent.Executor;

        r2 := @parameter3: android.telephony.TelephonyScanManager$NetworkScanCallback;

        r3 := @parameter4: java.lang.String;

        r4 := @parameter5: java.lang.String;

     label01:
        r5 = specialinvoke r0.<android.telephony.TelephonyScanManager: com.android.internal.telephony.ITelephony getITelephony()>();

     label02:
        if r5 == null goto label18;

     label03:
        r6 = r0.<android.telephony.TelephonyScanManager: android.util.SparseArray mScanInfo>;

        entermonitor r6;

     label04:
        r7 = r0.<android.telephony.TelephonyScanManager: android.os.Messenger mMessenger>;

        r8 = new android.os.Binder;

        specialinvoke r8.<android.os.Binder: void <init>()>();

        i1 = interfaceinvoke r5.<com.android.internal.telephony.ITelephony: int requestNetworkScan(int,android.telephony.NetworkScanRequest,android.os.Messenger,android.os.IBinder,java.lang.String,java.lang.String)>(i0, r16, r7, r8, r3, r4);

     label05:
        if i1 != -1 goto label08;

     label06:
        staticinvoke <com.android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("TelephonyScanManager", "Failed to initiate network scan");

        exitmonitor r6;

     label07:
        return null;

     label08:
        specialinvoke r0.<android.telephony.TelephonyScanManager: void saveScanInfo(int,android.telephony.NetworkScanRequest,java.util.concurrent.Executor,android.telephony.TelephonyScanManager$NetworkScanCallback)>(i1, r16, r1, r2);

        r17 = new android.telephony.NetworkScan;

     label09:
        specialinvoke r17.<android.telephony.NetworkScan: void <init>(int,int)>(i1, i0);

        exitmonitor r6;

     label10:
        return r17;

     label11:
        $r10 := @caughtexception;

        r18 = $r10;

        goto label13;

     label12:
        $r13 := @caughtexception;

        r18 = $r13;

     label13:
        exitmonitor r6;

     label14:
        throw r18;

     label15:
        $r14 := @caughtexception;

        r19 = $r14;

        goto label20;

     label16:
        $r12 := @caughtexception;

        r20 = $r12;

        goto label22;

     label17:
        $r9 := @caughtexception;

        r18 = $r9;

        goto label13;

     label18:
        goto label23;

     label19:
        $r15 := @caughtexception;

        r19 = $r15;

     label20:
        staticinvoke <com.android.telephony.Rlog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TelephonyScanManager", "requestNetworkScan NPE", r19);

        goto label23;

     label21:
        $r11 := @caughtexception;

        r20 = $r11;

     label22:
        staticinvoke <com.android.telephony.Rlog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TelephonyScanManager", "requestNetworkScan RemoteException", r20);

     label23:
        return null;

        catch android.os.RemoteException from label01 to label02 with label21;
        catch java.lang.NullPointerException from label01 to label02 with label19;
        catch android.os.RemoteException from label03 to label04 with label21;
        catch java.lang.NullPointerException from label03 to label04 with label19;
        catch java.lang.Throwable from label04 to label05 with label12;
        catch java.lang.Throwable from label06 to label07 with label12;
        catch java.lang.Throwable from label08 to label09 with label11;
        catch java.lang.Throwable from label09 to label10 with label17;
        catch java.lang.Throwable from label13 to label14 with label17;
        catch android.os.RemoteException from label14 to label15 with label16;
        catch java.lang.NullPointerException from label14 to label15 with label15;
    }

    public static void <clinit>()
    {
        <android.telephony.TelephonyScanManager: java.lang.String TAG> = "TelephonyScanManager";

        <android.telephony.TelephonyScanManager: java.lang.String SCAN_RESULT_KEY> = "scanResult";

        <android.telephony.TelephonyScanManager: int INVALID_SCAN_ID> = -1;

        <android.telephony.TelephonyScanManager: int CALLBACK_SCAN_RESULTS> = 1;

        <android.telephony.TelephonyScanManager: int CALLBACK_SCAN_ERROR> = 2;

        <android.telephony.TelephonyScanManager: int CALLBACK_SCAN_COMPLETE> = 3;

        <android.telephony.TelephonyScanManager: int CALLBACK_RESTRICTED_SCAN_RESULTS> = 4;

        return;
    }
}
