public final class android.telephony.UiccAccessRule extends java.lang.Object implements android.os.Parcelable
{
    public static final android.os.Parcelable$Creator CREATOR;
    private static final int ENCODING_VERSION;
    private static final java.lang.String TAG;
    private final long mAccessType;
    private final byte[] mCertificateHash;
    private final java.lang.String mPackageName;

    static void <clinit>()
    {
        android.telephony.UiccAccessRule$1 $r0;

        <android.telephony.UiccAccessRule: java.lang.String TAG> = "UiccAccessRule";

        <android.telephony.UiccAccessRule: int ENCODING_VERSION> = 1;

        $r0 = new android.telephony.UiccAccessRule$1;

        specialinvoke $r0.<android.telephony.UiccAccessRule$1: void <init>()>();

        <android.telephony.UiccAccessRule: android.os.Parcelable$Creator CREATOR> = $r0;

        return;
    }

    void <init>(android.os.Parcel)
    {
        android.telephony.UiccAccessRule r0;
        android.os.Parcel r1;
        byte[] $r2;
        java.lang.String $r3;
        long $l0;

        r0 := @this: android.telephony.UiccAccessRule;

        r1 := @parameter0: android.os.Parcel;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = virtualinvoke r1.<android.os.Parcel: byte[] createByteArray()>();

        r0.<android.telephony.UiccAccessRule: byte[] mCertificateHash> = $r2;

        $r3 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r0.<android.telephony.UiccAccessRule: java.lang.String mPackageName> = $r3;

        $l0 = virtualinvoke r1.<android.os.Parcel: long readLong()>();

        r0.<android.telephony.UiccAccessRule: long mAccessType> = $l0;

        return;
    }

    public void <init>(byte[], java.lang.String, long)
    {
        android.telephony.UiccAccessRule r0;
        byte[] r1;
        java.lang.String r2;
        long l0;

        r0 := @this: android.telephony.UiccAccessRule;

        r1 := @parameter0: byte[];

        r2 := @parameter1: java.lang.String;

        l0 := @parameter2: long;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.telephony.UiccAccessRule: byte[] mCertificateHash> = r1;

        r0.<android.telephony.UiccAccessRule: java.lang.String mPackageName> = r2;

        r0.<android.telephony.UiccAccessRule: long mAccessType> = l0;

        return;
    }

    public static android.telephony.UiccAccessRule[] decodeRules(byte[])
    {
        int i0, $i2, i4;
        android.telephony.UiccAccessRule[] r0;
        byte[] r1, r8;
        java.io.ByteArrayInputStream $r2;
        boolean $z0;
        android.telephony.UiccAccessRule $r3;
        long $l3;
        java.lang.Throwable $r4, $r6, $r7;
        java.lang.IllegalStateException $r5;
        java.io.DataInputStream r10;
        java.lang.String r11;

        r8 := @parameter0: byte[];

        if r8 != null goto label01;

        return null;

     label01:
        $r2 = new java.io.ByteArrayInputStream;

        specialinvoke $r2.<java.io.ByteArrayInputStream: void <init>(byte[])>(r8);

     label02:
        r10 = new java.io.DataInputStream;

        specialinvoke r10.<java.io.DataInputStream: void <init>(java.io.InputStream)>($r2);

     label03:
        virtualinvoke r10.<java.io.DataInputStream: int readInt()>();

        i0 = virtualinvoke r10.<java.io.DataInputStream: int readInt()>();

        r0 = newarray (android.telephony.UiccAccessRule)[i0];

     label04:
        i4 = 0;

     label05:
        if i4 >= i0 goto label11;

     label06:
        $i2 = virtualinvoke r10.<java.io.DataInputStream: int readInt()>();

        r1 = newarray (byte)[$i2];

        virtualinvoke r10.<java.io.DataInputStream: void readFully(byte[])>(r1);

        $z0 = virtualinvoke r10.<java.io.DataInputStream: boolean readBoolean()>();

        if $z0 == 0 goto label08;

        r11 = virtualinvoke r10.<java.io.DataInputStream: java.lang.String readUTF()>();

     label07:
        goto label09;

     label08:
        r11 = null;

     label09:
        $r3 = new android.telephony.UiccAccessRule;

        $l3 = virtualinvoke r10.<java.io.DataInputStream: long readLong()>();

        specialinvoke $r3.<android.telephony.UiccAccessRule: void <init>(byte[],java.lang.String,long)>(r1, r11, $l3);

        r0[i4] = $r3;

     label10:
        i4 = i4 + 1;

        goto label05;

     label11:
        virtualinvoke r10.<java.io.DataInputStream: void close()>();

     label12:
        virtualinvoke r10.<java.io.DataInputStream: void close()>();

     label13:
        return r0;

     label14:
        $r7 := @caughtexception;

     label15:
        virtualinvoke r10.<java.io.DataInputStream: void close()>();

     label16:
        goto label19;

     label17:
        $r6 := @caughtexception;

     label18:
        virtualinvoke $r7.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r6);

     label19:
        throw $r7;

     label20:
        $r4 := @caughtexception;

        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String,java.lang.Throwable)>("ByteArrayInputStream should never lead to an IOException", $r4);

        throw $r5;

        catch java.io.IOException from label02 to label03 with label20;
        catch java.lang.Throwable from label03 to label04 with label14;
        catch java.lang.Throwable from label06 to label07 with label14;
        catch java.lang.Throwable from label09 to label10 with label14;
        catch java.lang.Throwable from label11 to label12 with label14;
        catch java.io.IOException from label12 to label13 with label20;
        catch java.lang.Throwable from label15 to label16 with label17;
        catch java.io.IOException from label18 to label19 with label20;
        catch java.io.IOException from label19 to label20 with label20;
    }

    public static byte[] encodeRules(android.telephony.UiccAccessRule[])
    {
        java.io.ByteArrayOutputStream r0;
        java.io.DataOutputStream r1;
        int i0, $i1, $i2, i4;
        android.telephony.UiccAccessRule r2;
        byte[] $r3, $r4, r10;
        java.lang.String $r5, $r6;
        long $l3;
        java.lang.Throwable $r7;
        java.lang.IllegalStateException $r8;
        android.telephony.UiccAccessRule[] r9;

        r9 := @parameter0: android.telephony.UiccAccessRule[];

        if r9 != null goto label01;

        return null;

     label01:
        r0 = new java.io.ByteArrayOutputStream;

        specialinvoke r0.<java.io.ByteArrayOutputStream: void <init>()>();

        r1 = new java.io.DataOutputStream;

        specialinvoke r1.<java.io.DataOutputStream: void <init>(java.io.OutputStream)>(r0);

        virtualinvoke r1.<java.io.DataOutputStream: void writeInt(int)>(1);

        $i1 = lengthof r9;

        virtualinvoke r1.<java.io.DataOutputStream: void writeInt(int)>($i1);

        i0 = lengthof r9;

     label02:
        i4 = 0;

     label03:
        if i4 >= i0 goto label09;

        r2 = r9[i4];

     label04:
        $r3 = r2.<android.telephony.UiccAccessRule: byte[] mCertificateHash>;

        $i2 = lengthof $r3;

        virtualinvoke r1.<java.io.DataOutputStream: void writeInt(int)>($i2);

        $r4 = r2.<android.telephony.UiccAccessRule: byte[] mCertificateHash>;

        virtualinvoke r1.<java.io.DataOutputStream: void write(byte[])>($r4);

        $r5 = r2.<android.telephony.UiccAccessRule: java.lang.String mPackageName>;

        if $r5 == null goto label06;

        virtualinvoke r1.<java.io.DataOutputStream: void writeBoolean(boolean)>(1);

        $r6 = r2.<android.telephony.UiccAccessRule: java.lang.String mPackageName>;

        virtualinvoke r1.<java.io.DataOutputStream: void writeUTF(java.lang.String)>($r6);

     label05:
        goto label07;

     label06:
        virtualinvoke r1.<java.io.DataOutputStream: void writeBoolean(boolean)>(0);

     label07:
        $l3 = r2.<android.telephony.UiccAccessRule: long mAccessType>;

        virtualinvoke r1.<java.io.DataOutputStream: void writeLong(long)>($l3);

     label08:
        i4 = i4 + 1;

        goto label03;

     label09:
        virtualinvoke r1.<java.io.DataOutputStream: void close()>();

        r10 = virtualinvoke r0.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

     label10:
        return r10;

     label11:
        $r7 := @caughtexception;

        $r8 = new java.lang.IllegalStateException;

        specialinvoke $r8.<java.lang.IllegalStateException: void <init>(java.lang.String,java.lang.Throwable)>("ByteArrayOutputStream should never lead to an IOException", $r7);

        throw $r8;

        catch java.io.IOException from label01 to label02 with label11;
        catch java.io.IOException from label04 to label05 with label11;
        catch java.io.IOException from label06 to label07 with label11;
        catch java.io.IOException from label07 to label08 with label11;
        catch java.io.IOException from label09 to label10 with label11;
    }

    public static byte[] getCertHash(android.content.pm.Signature, java.lang.String)
    {
        java.security.MessageDigest $r0;
        byte[] $r1, r9;
        java.lang.Throwable $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r6, r8;
        android.content.pm.Signature r7;

        r7 := @parameter0: android.content.pm.Signature;

        r8 := @parameter1: java.lang.String;

     label1:
        $r0 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(r8);

        $r1 = virtualinvoke r7.<android.content.pm.Signature: byte[] toByteArray()>();

        r9 = virtualinvoke $r0.<java.security.MessageDigest: byte[] digest(byte[])>($r1);

     label2:
        return r9;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("NoSuchAlgorithmException: ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("UiccAccessRule", $r6);

        return null;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label3;
    }

    public static java.util.List getSignatures(android.content.pm.PackageInfo)
    {
        android.content.pm.Signature[] r0, r3;
        android.content.pm.SigningInfo r1;
        boolean $z0;
        android.content.pm.PackageInfo r2;
        java.util.List r4;

        r2 := @parameter0: android.content.pm.PackageInfo;

        r0 = r2.<android.content.pm.PackageInfo: android.content.pm.Signature[] signatures>;

        r1 = r2.<android.content.pm.PackageInfo: android.content.pm.SigningInfo signingInfo>;

        r3 = r0;

        if r1 == null goto label1;

        r3 = virtualinvoke r1.<android.content.pm.SigningInfo: android.content.pm.Signature[] getSigningCertificateHistory()>();

        $z0 = virtualinvoke r1.<android.content.pm.SigningInfo: boolean hasMultipleSigners()>();

        if $z0 == 0 goto label1;

        r3 = virtualinvoke r1.<android.content.pm.SigningInfo: android.content.pm.Signature[] getApkContentsSigners()>();

     label1:
        if r3 != null goto label2;

        r4 = <java.util.Collections: java.util.List EMPTY_LIST>;

        goto label3;

     label2:
        r4 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r3);

     label3:
        return r4;
    }

    private boolean matches(byte[], java.lang.String)
    {
        android.telephony.UiccAccessRule r0;
        byte[] r1, $r3;
        java.lang.String r2, $r4, $r5;
        boolean $z0, $z1, $z2, z3;

        r0 := @this: android.telephony.UiccAccessRule;

        r1 := @parameter0: byte[];

        r2 := @parameter1: java.lang.String;

        if r1 == null goto label2;

        $r3 = r0.<android.telephony.UiccAccessRule: byte[] mCertificateHash>;

        $z0 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>($r3, r1);

        if $z0 == 0 goto label2;

        $r4 = r0.<android.telephony.UiccAccessRule: java.lang.String mPackageName>;

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r4);

        if $z1 != 0 goto label1;

        $r5 = r0.<android.telephony.UiccAccessRule: java.lang.String mPackageName>;

        $z2 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z2 == 0 goto label2;

     label1:
        z3 = 1;

        goto label3;

     label2:
        z3 = 0;

     label3:
        return z3;
    }

    public int describeContents()
    {
        android.telephony.UiccAccessRule r0;

        r0 := @this: android.telephony.UiccAccessRule;

        return 0;
    }

    public boolean equals(java.lang.Object)
    {
        android.telephony.UiccAccessRule r0, r8;
        java.lang.Class $r1, $r2;
        byte[] $r3, $r4;
        boolean $z0, $z1, z2;
        java.lang.String $r5, $r6;
        long $l0, $l1;
        byte $b2;
        java.lang.Object r7;

        r0 := @this: android.telephony.UiccAccessRule;

        r7 := @parameter0: java.lang.Object;

        z2 = 1;

        if r0 != r7 goto label1;

        return 1;

     label1:
        if r7 == null goto label5;

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = virtualinvoke r7.<java.lang.Object: java.lang.Class getClass()>();

        if $r1 == $r2 goto label2;

        goto label5;

     label2:
        r8 = (android.telephony.UiccAccessRule) r7;

        $r4 = r0.<android.telephony.UiccAccessRule: byte[] mCertificateHash>;

        $r3 = r8.<android.telephony.UiccAccessRule: byte[] mCertificateHash>;

        $z0 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>($r4, $r3);

        if $z0 == 0 goto label3;

        $r6 = r0.<android.telephony.UiccAccessRule: java.lang.String mPackageName>;

        $r5 = r8.<android.telephony.UiccAccessRule: java.lang.String mPackageName>;

        $z1 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r6, $r5);

        if $z1 == 0 goto label3;

        $l1 = r0.<android.telephony.UiccAccessRule: long mAccessType>;

        $l0 = r8.<android.telephony.UiccAccessRule: long mAccessType>;

        $b2 = $l1 cmp $l0;

        if $b2 != 0 goto label3;

        goto label4;

     label3:
        z2 = 0;

     label4:
        return z2;

     label5:
        return 0;
    }

    public int getCarrierPrivilegeStatus(android.content.pm.PackageInfo)
    {
        android.telephony.UiccAccessRule r0;
        android.content.pm.PackageInfo r1;
        int i0;
        boolean $z0, $z1;
        java.lang.IllegalArgumentException $r2;
        java.lang.Object $r3;
        java.lang.String $r4;
        android.content.pm.Signature $r5;
        java.util.List r6;
        java.util.Iterator r7;

        r0 := @this: android.telephony.UiccAccessRule;

        r1 := @parameter0: android.content.pm.PackageInfo;

        r6 = staticinvoke <android.telephony.UiccAccessRule: java.util.List getSignatures(android.content.pm.PackageInfo)>(r1);

        $z0 = interfaceinvoke r6.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label4;

        r7 = interfaceinvoke r6.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r3 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (android.content.pm.Signature) $r3;

        $r4 = r1.<android.content.pm.PackageInfo: java.lang.String packageName>;

        i0 = virtualinvoke r0.<android.telephony.UiccAccessRule: int getCarrierPrivilegeStatus(android.content.pm.Signature,java.lang.String)>($r5, $r4);

        if i0 == 0 goto label2;

        return i0;

     label2:
        goto label1;

     label3:
        return 0;

     label4:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Must use GET_SIGNING_CERTIFICATES when looking up package info");

        throw $r2;
    }

    public int getCarrierPrivilegeStatus(android.content.pm.Signature, java.lang.String)
    {
        android.telephony.UiccAccessRule r0;
        java.lang.String r1;
        byte[] r2, r4;
        boolean $z0, $z1;
        android.content.pm.Signature r3;

        r0 := @this: android.telephony.UiccAccessRule;

        r3 := @parameter0: android.content.pm.Signature;

        r1 := @parameter1: java.lang.String;

        r2 = staticinvoke <android.telephony.UiccAccessRule: byte[] getCertHash(android.content.pm.Signature,java.lang.String)>(r3, "SHA-1");

        r4 = staticinvoke <android.telephony.UiccAccessRule: byte[] getCertHash(android.content.pm.Signature,java.lang.String)>(r3, "SHA-256");

        $z0 = specialinvoke r0.<android.telephony.UiccAccessRule: boolean matches(byte[],java.lang.String)>(r2, r1);

        if $z0 != 0 goto label2;

        $z1 = specialinvoke r0.<android.telephony.UiccAccessRule: boolean matches(byte[],java.lang.String)>(r4, r1);

        if $z1 == 0 goto label1;

        goto label2;

     label1:
        return 0;

     label2:
        return 1;
    }

    public java.lang.String getCertificateHexString()
    {
        android.telephony.UiccAccessRule r0;
        byte[] $r1;
        java.lang.String $r2;

        r0 := @this: android.telephony.UiccAccessRule;

        $r1 = r0.<android.telephony.UiccAccessRule: byte[] mCertificateHash>;

        $r2 = staticinvoke <com.android.internal.telephony.uicc.IccUtils: java.lang.String bytesToHexString(byte[])>($r1);

        return $r2;
    }

    public java.lang.String getPackageName()
    {
        android.telephony.UiccAccessRule r0;
        java.lang.String $r1;

        r0 := @this: android.telephony.UiccAccessRule;

        $r1 = r0.<android.telephony.UiccAccessRule: java.lang.String mPackageName>;

        return $r1;
    }

    public int hashCode()
    {
        android.telephony.UiccAccessRule r0;
        byte[] $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i7, $i8, $i9;
        java.lang.String $r2;
        long $l6;
        java.lang.Long $r3;

        r0 := @this: android.telephony.UiccAccessRule;

        $i0 = 1 * 31;

        $r1 = r0.<android.telephony.UiccAccessRule: byte[] mCertificateHash>;

        $i1 = staticinvoke <java.util.Arrays: int hashCode(byte[])>($r1);

        $i2 = $i0 + $i1;

        $i3 = $i2 * 31;

        $r2 = r0.<android.telephony.UiccAccessRule: java.lang.String mPackageName>;

        $i4 = staticinvoke <java.util.Objects: int hashCode(java.lang.Object)>($r2);

        $i5 = $i3 + $i4;

        $i7 = $i5 * 31;

        $l6 = r0.<android.telephony.UiccAccessRule: long mAccessType>;

        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l6);

        $i8 = staticinvoke <java.util.Objects: int hashCode(java.lang.Object)>($r3);

        $i9 = $i7 + $i8;

        return $i9;
    }

    public java.lang.String toString()
    {
        android.telephony.UiccAccessRule r0;
        java.lang.StringBuilder $r2;
        byte[] $r4;
        java.lang.String $r5, $r8, $r12;
        long $l0;

        r0 := @this: android.telephony.UiccAccessRule;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("cert: ");

        $r4 = r0.<android.telephony.UiccAccessRule: byte[] mCertificateHash>;

        $r5 = staticinvoke <com.android.internal.telephony.uicc.IccUtils: java.lang.String bytesToHexString(byte[])>($r4);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" pkg: ");

        $r8 = r0.<android.telephony.UiccAccessRule: java.lang.String mPackageName>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" access: ");

        $l0 = r0.<android.telephony.UiccAccessRule: long mAccessType>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r12 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r12;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.telephony.UiccAccessRule r0;
        android.os.Parcel r1;
        int i0;
        byte[] $r2;
        java.lang.String $r3;
        long $l1;

        r0 := @this: android.telephony.UiccAccessRule;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        $r2 = r0.<android.telephony.UiccAccessRule: byte[] mCertificateHash>;

        virtualinvoke r1.<android.os.Parcel: void writeByteArray(byte[])>($r2);

        $r3 = r0.<android.telephony.UiccAccessRule: java.lang.String mPackageName>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r3);

        $l1 = r0.<android.telephony.UiccAccessRule: long mAccessType>;

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l1);

        return;
    }
}
