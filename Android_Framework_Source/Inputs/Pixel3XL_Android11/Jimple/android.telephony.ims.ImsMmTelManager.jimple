public class android.telephony.ims.ImsMmTelManager extends java.lang.Object implements android.telephony.ims.RegistrationManager
{
    public static final int WIFI_MODE_CELLULAR_PREFERRED;
    public static final int WIFI_MODE_WIFI_ONLY;
    public static final int WIFI_MODE_WIFI_PREFERRED;
    private final int mSubId;

    public void <init>(int)
    {
        android.telephony.ims.ImsMmTelManager r0;
        int i0;

        r0 := @this: android.telephony.ims.ImsMmTelManager;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.telephony.ims.ImsMmTelManager: int mSubId> = i0;

        return;
    }

    public static android.telephony.ims.ImsMmTelManager createForSubscriptionId(int)
    {
        int i0;
        boolean $z0;
        java.lang.IllegalArgumentException $r0;
        android.telephony.ims.ImsMmTelManager $r1;

        i0 := @parameter0: int;

        $z0 = staticinvoke <android.telephony.SubscriptionManager: boolean isValidSubscriptionId(int)>(i0);

        if $z0 == 0 goto label1;

        $r1 = new android.telephony.ims.ImsMmTelManager;

        specialinvoke $r1.<android.telephony.ims.ImsMmTelManager: void <init>(int)>(i0);

        return $r1;

     label1:
        $r0 = new java.lang.IllegalArgumentException;

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Invalid subscription ID");

        throw $r0;
    }

    private static com.android.internal.telephony.ITelephony getITelephony()
    {
        android.os.TelephonyServiceManager $r0;
        android.os.TelephonyServiceManager$ServiceRegisterer $r1;
        android.os.IBinder $r2;
        com.android.internal.telephony.ITelephony $r3;

        $r0 = staticinvoke <android.telephony.TelephonyFrameworkInitializer: android.os.TelephonyServiceManager getTelephonyServiceManager()>();

        $r1 = virtualinvoke $r0.<android.os.TelephonyServiceManager: android.os.TelephonyServiceManager$ServiceRegisterer getTelephonyServiceRegisterer()>();

        $r2 = virtualinvoke $r1.<android.os.TelephonyServiceManager$ServiceRegisterer: android.os.IBinder get()>();

        $r3 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony asInterface(android.os.IBinder)>($r2);

        return $r3;
    }

    public void getFeatureState(java.util.concurrent.Executor, java.util.function.Consumer) throws android.telephony.ims.ImsException
    {
        android.telephony.ims.ImsMmTelManager r0;
        java.util.function.Consumer r1;
        com.android.internal.telephony.ITelephony r2;
        int i0, $i1;
        android.telephony.ims.ImsMmTelManager$4 r3;
        java.lang.IllegalArgumentException $r4, $r5;
        android.telephony.ims.ImsException $r6, $r10;
        android.os.RemoteException $r7;
        android.os.ServiceSpecificException $r9;
        java.lang.String $r11;
        java.util.concurrent.Executor r12;

        r0 := @this: android.telephony.ims.ImsMmTelManager;

        r12 := @parameter0: java.util.concurrent.Executor;

        r1 := @parameter1: java.util.function.Consumer;

        if r12 == null goto label8;

        if r1 == null goto label7;

        r2 = staticinvoke <android.telephony.ims.ImsMmTelManager: com.android.internal.telephony.ITelephony getITelephony()>();

        if r2 == null goto label6;

     label1:
        i0 = r0.<android.telephony.ims.ImsMmTelManager: int mSubId>;

        r3 = new android.telephony.ims.ImsMmTelManager$4;

        specialinvoke r3.<android.telephony.ims.ImsMmTelManager$4: void <init>(android.telephony.ims.ImsMmTelManager,java.util.concurrent.Executor,java.util.function.Consumer)>(r0, r12, r1);

        interfaceinvoke r2.<com.android.internal.telephony.ITelephony: void getImsMmTelFeatureState(int,com.android.internal.telephony.IIntegerConsumer)>(i0, r3);

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

        virtualinvoke $r7.<android.os.RemoteException: java.lang.RuntimeException rethrowAsRuntimeException()>();

     label4:
        return;

     label5:
        $r9 := @caughtexception;

        $r10 = new android.telephony.ims.ImsException;

        $r11 = virtualinvoke $r9.<android.os.ServiceSpecificException: java.lang.String getMessage()>();

        $i1 = $r9.<android.os.ServiceSpecificException: int errorCode>;

        specialinvoke $r10.<android.telephony.ims.ImsException: void <init>(java.lang.String,int)>($r11, $i1);

        throw $r10;

     label6:
        $r6 = new android.telephony.ims.ImsException;

        specialinvoke $r6.<android.telephony.ims.ImsException: void <init>(java.lang.String,int)>("Could not find Telephony Service.", 1);

        throw $r6;

     label7:
        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Must include a non-null Consumer.");

        throw $r5;

     label8:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Must include a non-null Executor.");

        throw $r4;

        catch android.os.ServiceSpecificException from label1 to label2 with label5;
        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void getRegistrationState(java.util.concurrent.Executor, java.util.function.Consumer)
    {
        android.telephony.ims.ImsMmTelManager r0;
        java.util.function.Consumer r1;
        com.android.internal.telephony.ITelephony r2;
        int i0;
        android.telephony.ims.ImsMmTelManager$1 r3;
        java.lang.IllegalArgumentException $r4, $r5;
        java.lang.RuntimeException $r6, $r8;
        android.os.RemoteException $r7;
        java.util.concurrent.Executor r9;

        r0 := @this: android.telephony.ims.ImsMmTelManager;

        r9 := @parameter0: java.util.concurrent.Executor;

        r1 := @parameter1: java.util.function.Consumer;

        if r1 == null goto label6;

        if r9 == null goto label5;

        r2 = staticinvoke <android.telephony.ims.ImsMmTelManager: com.android.internal.telephony.ITelephony getITelephony()>();

        if r2 == null goto label4;

     label1:
        i0 = r0.<android.telephony.ims.ImsMmTelManager: int mSubId>;

        r3 = new android.telephony.ims.ImsMmTelManager$1;

        specialinvoke r3.<android.telephony.ims.ImsMmTelManager$1: void <init>(android.telephony.ims.ImsMmTelManager,java.util.concurrent.Executor,java.util.function.Consumer)>(r0, r9, r1);

        interfaceinvoke r2.<com.android.internal.telephony.ITelephony: void getImsMmTelRegistrationState(int,com.android.internal.telephony.IIntegerConsumer)>(i0, r3);

     label2:
        return;

     label3:
        $r7 := @caughtexception;

        $r8 = virtualinvoke $r7.<android.os.RemoteException: java.lang.RuntimeException rethrowAsRuntimeException()>();

        throw $r8;

     label4:
        $r6 = new java.lang.RuntimeException;

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String)>("Could not find Telephony Service.");

        throw $r6;

     label5:
        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Must include a non-null Executor.");

        throw $r5;

     label6:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Must include a non-null callback.");

        throw $r4;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void getRegistrationTransportType(java.util.concurrent.Executor, java.util.function.Consumer)
    {
        android.telephony.ims.ImsMmTelManager r0;
        java.util.function.Consumer r1;
        com.android.internal.telephony.ITelephony r2;
        int i0;
        android.telephony.ims.ImsMmTelManager$2 r3;
        java.lang.IllegalArgumentException $r4, $r5;
        java.lang.RuntimeException $r6, $r8;
        android.os.RemoteException $r7;
        java.util.concurrent.Executor r9;

        r0 := @this: android.telephony.ims.ImsMmTelManager;

        r9 := @parameter0: java.util.concurrent.Executor;

        r1 := @parameter1: java.util.function.Consumer;

        if r1 == null goto label6;

        if r9 == null goto label5;

        r2 = staticinvoke <android.telephony.ims.ImsMmTelManager: com.android.internal.telephony.ITelephony getITelephony()>();

        if r2 == null goto label4;

     label1:
        i0 = r0.<android.telephony.ims.ImsMmTelManager: int mSubId>;

        r3 = new android.telephony.ims.ImsMmTelManager$2;

        specialinvoke r3.<android.telephony.ims.ImsMmTelManager$2: void <init>(android.telephony.ims.ImsMmTelManager,java.util.concurrent.Executor,java.util.function.Consumer)>(r0, r9, r1);

        interfaceinvoke r2.<com.android.internal.telephony.ITelephony: void getImsMmTelRegistrationTransportType(int,com.android.internal.telephony.IIntegerConsumer)>(i0, r3);

     label2:
        return;

     label3:
        $r7 := @caughtexception;

        $r8 = virtualinvoke $r7.<android.os.RemoteException: java.lang.RuntimeException rethrowAsRuntimeException()>();

        throw $r8;

     label4:
        $r6 = new java.lang.RuntimeException;

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String)>("Could not find Telephony Service.");

        throw $r6;

     label5:
        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Must include a non-null Executor.");

        throw $r5;

     label6:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Must include a non-null callback.");

        throw $r4;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public int getVoWiFiModeSetting()
    {
        android.telephony.ims.ImsMmTelManager r0;
        int i0, $i1, $i2;
        java.lang.RuntimeException $r1, $r3, $r8;
        android.os.ServiceSpecificException $r2;
        java.lang.String $r4, $r6;
        java.lang.IllegalArgumentException $r5;
        android.os.RemoteException $r7;
        com.android.internal.telephony.ITelephony r9;

        r0 := @this: android.telephony.ims.ImsMmTelManager;

        r9 = staticinvoke <android.telephony.ims.ImsMmTelManager: com.android.internal.telephony.ITelephony getITelephony()>();

        if r9 == null goto label6;

     label1:
        $i1 = r0.<android.telephony.ims.ImsMmTelManager: int mSubId>;

        i0 = interfaceinvoke r9.<com.android.internal.telephony.ITelephony: int getVoWiFiModeSetting(int)>($i1);

     label2:
        return i0;

     label3:
        $r7 := @caughtexception;

        $r8 = virtualinvoke $r7.<android.os.RemoteException: java.lang.RuntimeException rethrowAsRuntimeException()>();

        throw $r8;

     label4:
        $r2 := @caughtexception;

        $i2 = $r2.<android.os.ServiceSpecificException: int errorCode>;

        if $i2 != 3 goto label5;

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = virtualinvoke $r2.<android.os.ServiceSpecificException: java.lang.String getMessage()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r5;

     label5:
        $r3 = new java.lang.RuntimeException;

        $r4 = virtualinvoke $r2.<android.os.ServiceSpecificException: java.lang.String getMessage()>();

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>($r4);

        throw $r3;

     label6:
        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Could not find Telephony Service.");

        throw $r1;

        catch android.os.ServiceSpecificException from label1 to label2 with label4;
        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public int getVoWiFiRoamingModeSetting()
    {
        android.telephony.ims.ImsMmTelManager r0;
        int i0, $i1, $i2;
        java.lang.RuntimeException $r1, $r3, $r8;
        android.os.ServiceSpecificException $r2;
        java.lang.String $r4, $r6;
        java.lang.IllegalArgumentException $r5;
        android.os.RemoteException $r7;
        com.android.internal.telephony.ITelephony r9;

        r0 := @this: android.telephony.ims.ImsMmTelManager;

        r9 = staticinvoke <android.telephony.ims.ImsMmTelManager: com.android.internal.telephony.ITelephony getITelephony()>();

        if r9 == null goto label6;

     label1:
        $i1 = r0.<android.telephony.ims.ImsMmTelManager: int mSubId>;

        i0 = interfaceinvoke r9.<com.android.internal.telephony.ITelephony: int getVoWiFiRoamingModeSetting(int)>($i1);

     label2:
        return i0;

     label3:
        $r7 := @caughtexception;

        $r8 = virtualinvoke $r7.<android.os.RemoteException: java.lang.RuntimeException rethrowAsRuntimeException()>();

        throw $r8;

     label4:
        $r2 := @caughtexception;

        $i2 = $r2.<android.os.ServiceSpecificException: int errorCode>;

        if $i2 != 3 goto label5;

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = virtualinvoke $r2.<android.os.ServiceSpecificException: java.lang.String getMessage()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r5;

     label5:
        $r3 = new java.lang.RuntimeException;

        $r4 = virtualinvoke $r2.<android.os.ServiceSpecificException: java.lang.String getMessage()>();

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>($r4);

        throw $r3;

     label6:
        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Could not find Telephony Service.");

        throw $r1;

        catch android.os.ServiceSpecificException from label1 to label2 with label4;
        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean isAdvancedCallingSettingEnabled()
    {
        android.telephony.ims.ImsMmTelManager r0;
        boolean z0;
        java.lang.RuntimeException $r1, $r3, $r8;
        int $i0, $i1;
        android.os.ServiceSpecificException $r2;
        java.lang.String $r4, $r6;
        java.lang.IllegalArgumentException $r5;
        android.os.RemoteException $r7;
        com.android.internal.telephony.ITelephony r9;

        r0 := @this: android.telephony.ims.ImsMmTelManager;

        r9 = staticinvoke <android.telephony.ims.ImsMmTelManager: com.android.internal.telephony.ITelephony getITelephony()>();

        if r9 == null goto label6;

     label1:
        $i0 = r0.<android.telephony.ims.ImsMmTelManager: int mSubId>;

        z0 = interfaceinvoke r9.<com.android.internal.telephony.ITelephony: boolean isAdvancedCallingSettingEnabled(int)>($i0);

     label2:
        return z0;

     label3:
        $r7 := @caughtexception;

        $r8 = virtualinvoke $r7.<android.os.RemoteException: java.lang.RuntimeException rethrowAsRuntimeException()>();

        throw $r8;

     label4:
        $r2 := @caughtexception;

        $i1 = $r2.<android.os.ServiceSpecificException: int errorCode>;

        if $i1 != 3 goto label5;

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = virtualinvoke $r2.<android.os.ServiceSpecificException: java.lang.String getMessage()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r5;

     label5:
        $r3 = new java.lang.RuntimeException;

        $r4 = virtualinvoke $r2.<android.os.ServiceSpecificException: java.lang.String getMessage()>();

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>($r4);

        throw $r3;

     label6:
        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Could not find Telephony Service.");

        throw $r1;

        catch android.os.ServiceSpecificException from label1 to label2 with label4;
        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean isAvailable(int, int)
    {
        android.telephony.ims.ImsMmTelManager r0;
        int i0, i1, $i2;
        boolean z0;
        java.lang.RuntimeException $r1, $r3;
        android.os.RemoteException $r2;
        com.android.internal.telephony.ITelephony r4;

        r0 := @this: android.telephony.ims.ImsMmTelManager;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r4 = staticinvoke <android.telephony.ims.ImsMmTelManager: com.android.internal.telephony.ITelephony getITelephony()>();

        if r4 == null goto label4;

     label1:
        $i2 = r0.<android.telephony.ims.ImsMmTelManager: int mSubId>;

        z0 = interfaceinvoke r4.<com.android.internal.telephony.ITelephony: boolean isAvailable(int,int,int)>($i2, i0, i1);

     label2:
        return z0;

     label3:
        $r2 := @caughtexception;

        $r3 = virtualinvoke $r2.<android.os.RemoteException: java.lang.RuntimeException rethrowAsRuntimeException()>();

        throw $r3;

     label4:
        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Could not find Telephony Service.");

        throw $r1;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean isCapable(int, int)
    {
        android.telephony.ims.ImsMmTelManager r0;
        int i0, i1, $i2;
        boolean z0;
        java.lang.RuntimeException $r1, $r3;
        android.os.RemoteException $r2;
        com.android.internal.telephony.ITelephony r4;

        r0 := @this: android.telephony.ims.ImsMmTelManager;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r4 = staticinvoke <android.telephony.ims.ImsMmTelManager: com.android.internal.telephony.ITelephony getITelephony()>();

        if r4 == null goto label4;

     label1:
        $i2 = r0.<android.telephony.ims.ImsMmTelManager: int mSubId>;

        z0 = interfaceinvoke r4.<com.android.internal.telephony.ITelephony: boolean isCapable(int,int,int)>($i2, i0, i1);

     label2:
        return z0;

     label3:
        $r2 := @caughtexception;

        $r3 = virtualinvoke $r2.<android.os.RemoteException: java.lang.RuntimeException rethrowAsRuntimeException()>();

        throw $r3;

     label4:
        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Could not find Telephony Service.");

        throw $r1;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void isSupported(int, int, java.util.concurrent.Executor, java.util.function.Consumer) throws android.telephony.ims.ImsException
    {
        android.telephony.ims.ImsMmTelManager r0;
        int i0, i1, i2, $i3;
        java.util.function.Consumer r1;
        com.android.internal.telephony.ITelephony r2, $r6;
        android.telephony.ims.ImsMmTelManager$3 r3;
        java.lang.IllegalArgumentException $r4, $r5;
        android.telephony.ims.ImsException $r7, $r9;
        android.os.ServiceSpecificException $r8;
        java.lang.String $r10;
        android.os.RemoteException $r11;
        java.util.concurrent.Executor r13;

        r0 := @this: android.telephony.ims.ImsMmTelManager;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r13 := @parameter2: java.util.concurrent.Executor;

        r1 := @parameter3: java.util.function.Consumer;

        if r1 == null goto label8;

        if r13 == null goto label7;

        $r6 = staticinvoke <android.telephony.ims.ImsMmTelManager: com.android.internal.telephony.ITelephony getITelephony()>();

        if $r6 == null goto label6;

     label1:
        r2 = staticinvoke <android.telephony.ims.ImsMmTelManager: com.android.internal.telephony.ITelephony getITelephony()>();

        i2 = r0.<android.telephony.ims.ImsMmTelManager: int mSubId>;

        r3 = new android.telephony.ims.ImsMmTelManager$3;

        specialinvoke r3.<android.telephony.ims.ImsMmTelManager$3: void <init>(android.telephony.ims.ImsMmTelManager,java.util.concurrent.Executor,java.util.function.Consumer)>(r0, r13, r1);

        interfaceinvoke r2.<com.android.internal.telephony.ITelephony: void isMmTelCapabilitySupported(int,com.android.internal.telephony.IIntegerConsumer,int,int)>(i2, r3, i0, i1);

     label2:
        goto label4;

     label3:
        $r11 := @caughtexception;

        virtualinvoke $r11.<android.os.RemoteException: java.lang.RuntimeException rethrowAsRuntimeException()>();

     label4:
        return;

     label5:
        $r8 := @caughtexception;

        $r9 = new android.telephony.ims.ImsException;

        $r10 = virtualinvoke $r8.<android.os.ServiceSpecificException: java.lang.String getMessage()>();

        $i3 = $r8.<android.os.ServiceSpecificException: int errorCode>;

        specialinvoke $r9.<android.telephony.ims.ImsException: void <init>(java.lang.String,int)>($r10, $i3);

        throw $r9;

     label6:
        $r7 = new android.telephony.ims.ImsException;

        specialinvoke $r7.<android.telephony.ims.ImsException: void <init>(java.lang.String,int)>("Could not find Telephony Service.", 1);

        throw $r7;

     label7:
        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Must include a non-null Executor.");

        throw $r5;

     label8:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Must include a non-null Consumer.");

        throw $r4;

        catch android.os.ServiceSpecificException from label1 to label2 with label5;
        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean isTtyOverVolteEnabled()
    {
        android.telephony.ims.ImsMmTelManager r0;
        boolean z0;
        java.lang.RuntimeException $r1, $r3, $r5;
        int $i0, $i1;
        android.os.RemoteException $r2;
        android.os.ServiceSpecificException $r4;
        java.lang.String $r6, $r8;
        java.lang.IllegalArgumentException $r7;
        com.android.internal.telephony.ITelephony r9;

        r0 := @this: android.telephony.ims.ImsMmTelManager;

        r9 = staticinvoke <android.telephony.ims.ImsMmTelManager: com.android.internal.telephony.ITelephony getITelephony()>();

        if r9 == null goto label6;

     label1:
        $i0 = r0.<android.telephony.ims.ImsMmTelManager: int mSubId>;

        z0 = interfaceinvoke r9.<com.android.internal.telephony.ITelephony: boolean isTtyOverVolteEnabled(int)>($i0);

     label2:
        return z0;

     label3:
        $r2 := @caughtexception;

        $r3 = virtualinvoke $r2.<android.os.RemoteException: java.lang.RuntimeException rethrowAsRuntimeException()>();

        throw $r3;

     label4:
        $r4 := @caughtexception;

        $i1 = $r4.<android.os.ServiceSpecificException: int errorCode>;

        if $i1 != 3 goto label5;

        $r7 = new java.lang.IllegalArgumentException;

        $r8 = virtualinvoke $r4.<android.os.ServiceSpecificException: java.lang.String getMessage()>();

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r7;

     label5:
        $r5 = new java.lang.RuntimeException;

        $r6 = virtualinvoke $r4.<android.os.ServiceSpecificException: java.lang.String getMessage()>();

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String)>($r6);

        throw $r5;

     label6:
        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Could not find Telephony Service.");

        throw $r1;

        catch android.os.ServiceSpecificException from label1 to label2 with label4;
        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean isVoWiFiRoamingSettingEnabled()
    {
        android.telephony.ims.ImsMmTelManager r0;
        boolean z0;
        java.lang.RuntimeException $r1, $r3, $r8;
        int $i0, $i1;
        android.os.ServiceSpecificException $r2;
        java.lang.String $r4, $r6;
        java.lang.IllegalArgumentException $r5;
        android.os.RemoteException $r7;
        com.android.internal.telephony.ITelephony r9;

        r0 := @this: android.telephony.ims.ImsMmTelManager;

        r9 = staticinvoke <android.telephony.ims.ImsMmTelManager: com.android.internal.telephony.ITelephony getITelephony()>();

        if r9 == null goto label6;

     label1:
        $i0 = r0.<android.telephony.ims.ImsMmTelManager: int mSubId>;

        z0 = interfaceinvoke r9.<com.android.internal.telephony.ITelephony: boolean isVoWiFiRoamingSettingEnabled(int)>($i0);

     label2:
        return z0;

     label3:
        $r7 := @caughtexception;

        $r8 = virtualinvoke $r7.<android.os.RemoteException: java.lang.RuntimeException rethrowAsRuntimeException()>();

        throw $r8;

     label4:
        $r2 := @caughtexception;

        $i1 = $r2.<android.os.ServiceSpecificException: int errorCode>;

        if $i1 != 3 goto label5;

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = virtualinvoke $r2.<android.os.ServiceSpecificException: java.lang.String getMessage()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r5;

     label5:
        $r3 = new java.lang.RuntimeException;

        $r4 = virtualinvoke $r2.<android.os.ServiceSpecificException: java.lang.String getMessage()>();

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>($r4);

        throw $r3;

     label6:
        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Could not find Telephony Service.");

        throw $r1;

        catch android.os.ServiceSpecificException from label1 to label2 with label4;
        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean isVoWiFiSettingEnabled()
    {
        android.telephony.ims.ImsMmTelManager r0;
        boolean z0;
        java.lang.RuntimeException $r1, $r3, $r5;
        int $i0, $i1;
        android.os.RemoteException $r2;
        android.os.ServiceSpecificException $r4;
        java.lang.String $r6, $r8;
        java.lang.IllegalArgumentException $r7;
        com.android.internal.telephony.ITelephony r9;

        r0 := @this: android.telephony.ims.ImsMmTelManager;

        r9 = staticinvoke <android.telephony.ims.ImsMmTelManager: com.android.internal.telephony.ITelephony getITelephony()>();

        if r9 == null goto label6;

     label1:
        $i0 = r0.<android.telephony.ims.ImsMmTelManager: int mSubId>;

        z0 = interfaceinvoke r9.<com.android.internal.telephony.ITelephony: boolean isVoWiFiSettingEnabled(int)>($i0);

     label2:
        return z0;

     label3:
        $r2 := @caughtexception;

        $r3 = virtualinvoke $r2.<android.os.RemoteException: java.lang.RuntimeException rethrowAsRuntimeException()>();

        throw $r3;

     label4:
        $r4 := @caughtexception;

        $i1 = $r4.<android.os.ServiceSpecificException: int errorCode>;

        if $i1 != 3 goto label5;

        $r7 = new java.lang.IllegalArgumentException;

        $r8 = virtualinvoke $r4.<android.os.ServiceSpecificException: java.lang.String getMessage()>();

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r7;

     label5:
        $r5 = new java.lang.RuntimeException;

        $r6 = virtualinvoke $r4.<android.os.ServiceSpecificException: java.lang.String getMessage()>();

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String)>($r6);

        throw $r5;

     label6:
        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Could not find Telephony Service.");

        throw $r1;

        catch android.os.ServiceSpecificException from label1 to label2 with label4;
        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean isVtSettingEnabled()
    {
        android.telephony.ims.ImsMmTelManager r0;
        boolean z0;
        java.lang.RuntimeException $r1, $r3, $r5;
        int $i0, $i1;
        android.os.RemoteException $r2;
        android.os.ServiceSpecificException $r4;
        java.lang.String $r6, $r8;
        java.lang.IllegalArgumentException $r7;
        com.android.internal.telephony.ITelephony r9;

        r0 := @this: android.telephony.ims.ImsMmTelManager;

        r9 = staticinvoke <android.telephony.ims.ImsMmTelManager: com.android.internal.telephony.ITelephony getITelephony()>();

        if r9 == null goto label6;

     label1:
        $i0 = r0.<android.telephony.ims.ImsMmTelManager: int mSubId>;

        z0 = interfaceinvoke r9.<com.android.internal.telephony.ITelephony: boolean isVtSettingEnabled(int)>($i0);

     label2:
        return z0;

     label3:
        $r2 := @caughtexception;

        $r3 = virtualinvoke $r2.<android.os.RemoteException: java.lang.RuntimeException rethrowAsRuntimeException()>();

        throw $r3;

     label4:
        $r4 := @caughtexception;

        $i1 = $r4.<android.os.ServiceSpecificException: int errorCode>;

        if $i1 != 3 goto label5;

        $r7 = new java.lang.IllegalArgumentException;

        $r8 = virtualinvoke $r4.<android.os.ServiceSpecificException: java.lang.String getMessage()>();

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r7;

     label5:
        $r5 = new java.lang.RuntimeException;

        $r6 = virtualinvoke $r4.<android.os.ServiceSpecificException: java.lang.String getMessage()>();

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String)>($r6);

        throw $r5;

     label6:
        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Could not find Telephony Service.");

        throw $r1;

        catch android.os.ServiceSpecificException from label1 to label2 with label4;
        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void registerImsRegistrationCallback(java.util.concurrent.Executor, android.telephony.ims.ImsMmTelManager$RegistrationCallback) throws android.telephony.ims.ImsException
    {
        android.telephony.ims.ImsMmTelManager r0;
        android.telephony.ims.ImsMmTelManager$RegistrationCallback r1;
        int $i0, $i1, $i2;
        android.telephony.ims.aidl.IImsRegistrationCallback $r5;
        android.os.ServiceSpecificException $r6;
        java.lang.String $r8, $r10, $r13;
        java.lang.Throwable $r11;
        java.util.concurrent.Executor r14;
        com.android.internal.telephony.ITelephony r15;
        android.telephony.ims.ImsException r18, r20, r21;
        java.lang.IllegalArgumentException r19, r22, r23;
        java.lang.Exception r24;

        r0 := @this: android.telephony.ims.ImsMmTelManager;

        r14 := @parameter0: java.util.concurrent.Executor;

        r1 := @parameter1: android.telephony.ims.ImsMmTelManager$RegistrationCallback;

        if r1 == null goto label8;

        if r14 == null goto label7;

        virtualinvoke r1.<android.telephony.ims.ImsMmTelManager$RegistrationCallback: void setExecutor(java.util.concurrent.Executor)>(r14);

        r15 = staticinvoke <android.telephony.ims.ImsMmTelManager: com.android.internal.telephony.ITelephony getITelephony()>();

        if r15 == null goto label6;

     label1:
        $i0 = r0.<android.telephony.ims.ImsMmTelManager: int mSubId>;

        $r5 = virtualinvoke r1.<android.telephony.ims.ImsMmTelManager$RegistrationCallback: android.telephony.ims.aidl.IImsRegistrationCallback getBinder()>();

        interfaceinvoke r15.<com.android.internal.telephony.ITelephony: void registerImsRegistrationCallback(int,android.telephony.ims.aidl.IImsRegistrationCallback)>($i0, $r5);

     label2:
        return;

     label3:
        $r11 := @caughtexception;

        r18 = new android.telephony.ims.ImsException;

        r24 = (java.lang.Exception) $r11;

        $r13 = virtualinvoke r24.<java.lang.Exception: java.lang.String getMessage()>();

        specialinvoke r18.<android.telephony.ims.ImsException: void <init>(java.lang.String,int)>($r13, 1);

        throw r18;

     label4:
        $r6 := @caughtexception;

        $i1 = $r6.<android.os.ServiceSpecificException: int errorCode>;

        if $i1 != 3 goto label5;

        r19 = new java.lang.IllegalArgumentException;

        $r10 = virtualinvoke $r6.<android.os.ServiceSpecificException: java.lang.String getMessage()>();

        specialinvoke r19.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r10);

        throw r19;

     label5:
        r20 = new android.telephony.ims.ImsException;

        $r8 = virtualinvoke $r6.<android.os.ServiceSpecificException: java.lang.String getMessage()>();

        $i2 = $r6.<android.os.ServiceSpecificException: int errorCode>;

        specialinvoke r20.<android.telephony.ims.ImsException: void <init>(java.lang.String,int)>($r8, $i2);

        throw r20;

     label6:
        r21 = new android.telephony.ims.ImsException;

        specialinvoke r21.<android.telephony.ims.ImsException: void <init>(java.lang.String,int)>("Could not find Telephony Service.", 1);

        throw r21;

     label7:
        r22 = new java.lang.IllegalArgumentException;

        specialinvoke r22.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Must include a non-null Executor.");

        throw r22;

     label8:
        r23 = new java.lang.IllegalArgumentException;

        specialinvoke r23.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Must include a non-null RegistrationCallback.");

        throw r23;

        catch android.os.ServiceSpecificException from label1 to label2 with label4;
        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.IllegalStateException from label1 to label2 with label3;
    }

    public void registerImsRegistrationCallback(java.util.concurrent.Executor, android.telephony.ims.RegistrationManager$RegistrationCallback) throws android.telephony.ims.ImsException
    {
        android.telephony.ims.ImsMmTelManager r0;
        android.telephony.ims.RegistrationManager$RegistrationCallback r1;
        int $i0, $i1;
        android.telephony.ims.aidl.IImsRegistrationCallback $r5;
        java.lang.Throwable $r6;
        java.lang.String $r8, $r11;
        android.os.ServiceSpecificException $r9;
        java.util.concurrent.Executor r12;
        com.android.internal.telephony.ITelephony r13;
        android.telephony.ims.ImsException r16, r17, r18;
        java.lang.IllegalArgumentException r19, r20;
        java.lang.Exception r21;

        r0 := @this: android.telephony.ims.ImsMmTelManager;

        r12 := @parameter0: java.util.concurrent.Executor;

        r1 := @parameter1: android.telephony.ims.RegistrationManager$RegistrationCallback;

        if r1 == null goto label7;

        if r12 == null goto label6;

        virtualinvoke r1.<android.telephony.ims.RegistrationManager$RegistrationCallback: void setExecutor(java.util.concurrent.Executor)>(r12);

        r13 = staticinvoke <android.telephony.ims.ImsMmTelManager: com.android.internal.telephony.ITelephony getITelephony()>();

        if r13 == null goto label5;

     label1:
        $i0 = r0.<android.telephony.ims.ImsMmTelManager: int mSubId>;

        $r5 = virtualinvoke r1.<android.telephony.ims.RegistrationManager$RegistrationCallback: android.telephony.ims.aidl.IImsRegistrationCallback getBinder()>();

        interfaceinvoke r13.<com.android.internal.telephony.ITelephony: void registerImsRegistrationCallback(int,android.telephony.ims.aidl.IImsRegistrationCallback)>($i0, $r5);

     label2:
        return;

     label3:
        $r6 := @caughtexception;

        r16 = new android.telephony.ims.ImsException;

        r21 = (java.lang.Exception) $r6;

        $r8 = virtualinvoke r21.<java.lang.Exception: java.lang.String getMessage()>();

        specialinvoke r16.<android.telephony.ims.ImsException: void <init>(java.lang.String,int)>($r8, 1);

        throw r16;

     label4:
        $r9 := @caughtexception;

        r17 = new android.telephony.ims.ImsException;

        $r11 = virtualinvoke $r9.<android.os.ServiceSpecificException: java.lang.String getMessage()>();

        $i1 = $r9.<android.os.ServiceSpecificException: int errorCode>;

        specialinvoke r17.<android.telephony.ims.ImsException: void <init>(java.lang.String,int)>($r11, $i1);

        throw r17;

     label5:
        r18 = new android.telephony.ims.ImsException;

        specialinvoke r18.<android.telephony.ims.ImsException: void <init>(java.lang.String,int)>("Could not find Telephony Service.", 1);

        throw r18;

     label6:
        r19 = new java.lang.IllegalArgumentException;

        specialinvoke r19.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Must include a non-null Executor.");

        throw r19;

     label7:
        r20 = new java.lang.IllegalArgumentException;

        specialinvoke r20.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Must include a non-null RegistrationCallback.");

        throw r20;

        catch android.os.ServiceSpecificException from label1 to label2 with label4;
        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.IllegalStateException from label1 to label2 with label3;
    }

    public void registerMmTelCapabilityCallback(java.util.concurrent.Executor, android.telephony.ims.ImsMmTelManager$CapabilityCallback) throws android.telephony.ims.ImsException
    {
        android.telephony.ims.ImsMmTelManager r0;
        android.telephony.ims.ImsMmTelManager$CapabilityCallback r1;
        int $i0, $i1;
        android.telephony.ims.aidl.IImsCapabilityCallback $r5;
        android.os.RemoteException $r6;
        java.lang.RuntimeException $r7;
        android.os.ServiceSpecificException $r8;
        java.lang.String $r10, $r13;
        java.lang.Throwable $r11;
        java.util.concurrent.Executor r14;
        com.android.internal.telephony.ITelephony r15;
        android.telephony.ims.ImsException r19, r20, r21;
        java.lang.IllegalArgumentException r22, r23;
        java.lang.IllegalStateException r24;

        r0 := @this: android.telephony.ims.ImsMmTelManager;

        r14 := @parameter0: java.util.concurrent.Executor;

        r1 := @parameter1: android.telephony.ims.ImsMmTelManager$CapabilityCallback;

        if r1 == null goto label8;

        if r14 == null goto label7;

        virtualinvoke r1.<android.telephony.ims.ImsMmTelManager$CapabilityCallback: void setExecutor(java.util.concurrent.Executor)>(r14);

        r15 = staticinvoke <android.telephony.ims.ImsMmTelManager: com.android.internal.telephony.ITelephony getITelephony()>();

        if r15 == null goto label6;

     label1:
        $i0 = r0.<android.telephony.ims.ImsMmTelManager: int mSubId>;

        $r5 = virtualinvoke r1.<android.telephony.ims.ImsMmTelManager$CapabilityCallback: android.telephony.ims.aidl.IImsCapabilityCallback getBinder()>();

        interfaceinvoke r15.<com.android.internal.telephony.ITelephony: void registerMmTelCapabilityCallback(int,android.telephony.ims.aidl.IImsCapabilityCallback)>($i0, $r5);

     label2:
        return;

     label3:
        $r11 := @caughtexception;

        r19 = new android.telephony.ims.ImsException;

        r24 = (java.lang.IllegalStateException) $r11;

        $r13 = virtualinvoke r24.<java.lang.IllegalStateException: java.lang.String getMessage()>();

        specialinvoke r19.<android.telephony.ims.ImsException: void <init>(java.lang.String,int)>($r13, 1);

        throw r19;

     label4:
        $r6 := @caughtexception;

        $r7 = virtualinvoke $r6.<android.os.RemoteException: java.lang.RuntimeException rethrowAsRuntimeException()>();

        throw $r7;

     label5:
        $r8 := @caughtexception;

        r20 = new android.telephony.ims.ImsException;

        $r10 = virtualinvoke $r8.<android.os.ServiceSpecificException: java.lang.String getMessage()>();

        $i1 = $r8.<android.os.ServiceSpecificException: int errorCode>;

        specialinvoke r20.<android.telephony.ims.ImsException: void <init>(java.lang.String,int)>($r10, $i1);

        throw r20;

     label6:
        r21 = new android.telephony.ims.ImsException;

        specialinvoke r21.<android.telephony.ims.ImsException: void <init>(java.lang.String,int)>("Could not find Telephony Service.", 1);

        throw r21;

     label7:
        r22 = new java.lang.IllegalArgumentException;

        specialinvoke r22.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Must include a non-null Executor.");

        throw r22;

     label8:
        r23 = new java.lang.IllegalArgumentException;

        specialinvoke r23.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Must include a non-null RegistrationCallback.");

        throw r23;

        catch android.os.ServiceSpecificException from label1 to label2 with label5;
        catch android.os.RemoteException from label1 to label2 with label4;
        catch java.lang.IllegalStateException from label1 to label2 with label3;
    }

    public void setAdvancedCallingSettingEnabled(boolean)
    {
        android.telephony.ims.ImsMmTelManager r0;
        boolean z0;
        java.lang.RuntimeException $r1, $r3, $r8;
        int $i0, $i1;
        android.os.ServiceSpecificException $r2;
        java.lang.String $r4, $r6;
        java.lang.IllegalArgumentException $r5;
        android.os.RemoteException $r7;
        com.android.internal.telephony.ITelephony r9;

        r0 := @this: android.telephony.ims.ImsMmTelManager;

        z0 := @parameter0: boolean;

        r9 = staticinvoke <android.telephony.ims.ImsMmTelManager: com.android.internal.telephony.ITelephony getITelephony()>();

        if r9 == null goto label6;

     label1:
        $i0 = r0.<android.telephony.ims.ImsMmTelManager: int mSubId>;

        interfaceinvoke r9.<com.android.internal.telephony.ITelephony: void setAdvancedCallingSettingEnabled(int,boolean)>($i0, z0);

     label2:
        return;

     label3:
        $r7 := @caughtexception;

        $r8 = virtualinvoke $r7.<android.os.RemoteException: java.lang.RuntimeException rethrowAsRuntimeException()>();

        throw $r8;

     label4:
        $r2 := @caughtexception;

        $i1 = $r2.<android.os.ServiceSpecificException: int errorCode>;

        if $i1 != 3 goto label5;

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = virtualinvoke $r2.<android.os.ServiceSpecificException: java.lang.String getMessage()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r5;

     label5:
        $r3 = new java.lang.RuntimeException;

        $r4 = virtualinvoke $r2.<android.os.ServiceSpecificException: java.lang.String getMessage()>();

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>($r4);

        throw $r3;

     label6:
        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Could not find Telephony Service.");

        throw $r1;

        catch android.os.ServiceSpecificException from label1 to label2 with label4;
        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void setRttCapabilitySetting(boolean)
    {
        android.telephony.ims.ImsMmTelManager r0;
        boolean z0;
        java.lang.RuntimeException $r1, $r3, $r5;
        int $i0, $i1;
        android.os.RemoteException $r2;
        android.os.ServiceSpecificException $r4;
        java.lang.String $r6, $r8;
        java.lang.IllegalArgumentException $r7;
        com.android.internal.telephony.ITelephony r9;

        r0 := @this: android.telephony.ims.ImsMmTelManager;

        z0 := @parameter0: boolean;

        r9 = staticinvoke <android.telephony.ims.ImsMmTelManager: com.android.internal.telephony.ITelephony getITelephony()>();

        if r9 == null goto label6;

     label1:
        $i0 = r0.<android.telephony.ims.ImsMmTelManager: int mSubId>;

        interfaceinvoke r9.<com.android.internal.telephony.ITelephony: void setRttCapabilitySetting(int,boolean)>($i0, z0);

     label2:
        return;

     label3:
        $r2 := @caughtexception;

        $r3 = virtualinvoke $r2.<android.os.RemoteException: java.lang.RuntimeException rethrowAsRuntimeException()>();

        throw $r3;

     label4:
        $r4 := @caughtexception;

        $i1 = $r4.<android.os.ServiceSpecificException: int errorCode>;

        if $i1 != 3 goto label5;

        $r7 = new java.lang.IllegalArgumentException;

        $r8 = virtualinvoke $r4.<android.os.ServiceSpecificException: java.lang.String getMessage()>();

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r7;

     label5:
        $r5 = new java.lang.RuntimeException;

        $r6 = virtualinvoke $r4.<android.os.ServiceSpecificException: java.lang.String getMessage()>();

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String)>($r6);

        throw $r5;

     label6:
        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Could not find Telephony Service.");

        throw $r1;

        catch android.os.ServiceSpecificException from label1 to label2 with label4;
        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void setVoWiFiModeSetting(int)
    {
        android.telephony.ims.ImsMmTelManager r0;
        int i0, $i1, $i2;
        java.lang.RuntimeException $r1, $r3, $r5;
        android.os.RemoteException $r2;
        android.os.ServiceSpecificException $r4;
        java.lang.String $r6, $r8;
        java.lang.IllegalArgumentException $r7;
        com.android.internal.telephony.ITelephony r9;

        r0 := @this: android.telephony.ims.ImsMmTelManager;

        i0 := @parameter0: int;

        r9 = staticinvoke <android.telephony.ims.ImsMmTelManager: com.android.internal.telephony.ITelephony getITelephony()>();

        if r9 == null goto label6;

     label1:
        $i1 = r0.<android.telephony.ims.ImsMmTelManager: int mSubId>;

        interfaceinvoke r9.<com.android.internal.telephony.ITelephony: void setVoWiFiModeSetting(int,int)>($i1, i0);

     label2:
        return;

     label3:
        $r2 := @caughtexception;

        $r3 = virtualinvoke $r2.<android.os.RemoteException: java.lang.RuntimeException rethrowAsRuntimeException()>();

        throw $r3;

     label4:
        $r4 := @caughtexception;

        $i2 = $r4.<android.os.ServiceSpecificException: int errorCode>;

        if $i2 != 3 goto label5;

        $r7 = new java.lang.IllegalArgumentException;

        $r8 = virtualinvoke $r4.<android.os.ServiceSpecificException: java.lang.String getMessage()>();

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r7;

     label5:
        $r5 = new java.lang.RuntimeException;

        $r6 = virtualinvoke $r4.<android.os.ServiceSpecificException: java.lang.String getMessage()>();

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String)>($r6);

        throw $r5;

     label6:
        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Could not find Telephony Service.");

        throw $r1;

        catch android.os.ServiceSpecificException from label1 to label2 with label4;
        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void setVoWiFiNonPersistent(boolean, int)
    {
        android.telephony.ims.ImsMmTelManager r0;
        boolean z0;
        int i0, $i1, $i2;
        java.lang.RuntimeException $r1, $r3, $r8;
        android.os.ServiceSpecificException $r2;
        java.lang.String $r4, $r6;
        java.lang.IllegalArgumentException $r5;
        android.os.RemoteException $r7;
        com.android.internal.telephony.ITelephony r9;

        r0 := @this: android.telephony.ims.ImsMmTelManager;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        r9 = staticinvoke <android.telephony.ims.ImsMmTelManager: com.android.internal.telephony.ITelephony getITelephony()>();

        if r9 == null goto label6;

     label1:
        $i1 = r0.<android.telephony.ims.ImsMmTelManager: int mSubId>;

        interfaceinvoke r9.<com.android.internal.telephony.ITelephony: void setVoWiFiNonPersistent(int,boolean,int)>($i1, z0, i0);

     label2:
        return;

     label3:
        $r7 := @caughtexception;

        $r8 = virtualinvoke $r7.<android.os.RemoteException: java.lang.RuntimeException rethrowAsRuntimeException()>();

        throw $r8;

     label4:
        $r2 := @caughtexception;

        $i2 = $r2.<android.os.ServiceSpecificException: int errorCode>;

        if $i2 != 3 goto label5;

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = virtualinvoke $r2.<android.os.ServiceSpecificException: java.lang.String getMessage()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r5;

     label5:
        $r3 = new java.lang.RuntimeException;

        $r4 = virtualinvoke $r2.<android.os.ServiceSpecificException: java.lang.String getMessage()>();

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>($r4);

        throw $r3;

     label6:
        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Could not find Telephony Service.");

        throw $r1;

        catch android.os.ServiceSpecificException from label1 to label2 with label4;
        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void setVoWiFiRoamingModeSetting(int)
    {
        android.telephony.ims.ImsMmTelManager r0;
        int i0, $i1, $i2;
        java.lang.RuntimeException $r1, $r3, $r5;
        android.os.RemoteException $r2;
        android.os.ServiceSpecificException $r4;
        java.lang.String $r6, $r8;
        java.lang.IllegalArgumentException $r7;
        com.android.internal.telephony.ITelephony r9;

        r0 := @this: android.telephony.ims.ImsMmTelManager;

        i0 := @parameter0: int;

        r9 = staticinvoke <android.telephony.ims.ImsMmTelManager: com.android.internal.telephony.ITelephony getITelephony()>();

        if r9 == null goto label6;

     label1:
        $i1 = r0.<android.telephony.ims.ImsMmTelManager: int mSubId>;

        interfaceinvoke r9.<com.android.internal.telephony.ITelephony: void setVoWiFiRoamingModeSetting(int,int)>($i1, i0);

     label2:
        return;

     label3:
        $r2 := @caughtexception;

        $r3 = virtualinvoke $r2.<android.os.RemoteException: java.lang.RuntimeException rethrowAsRuntimeException()>();

        throw $r3;

     label4:
        $r4 := @caughtexception;

        $i2 = $r4.<android.os.ServiceSpecificException: int errorCode>;

        if $i2 != 3 goto label5;

        $r7 = new java.lang.IllegalArgumentException;

        $r8 = virtualinvoke $r4.<android.os.ServiceSpecificException: java.lang.String getMessage()>();

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r7;

     label5:
        $r5 = new java.lang.RuntimeException;

        $r6 = virtualinvoke $r4.<android.os.ServiceSpecificException: java.lang.String getMessage()>();

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String)>($r6);

        throw $r5;

     label6:
        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Could not find Telephony Service.");

        throw $r1;

        catch android.os.ServiceSpecificException from label1 to label2 with label4;
        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void setVoWiFiRoamingSettingEnabled(boolean)
    {
        android.telephony.ims.ImsMmTelManager r0;
        boolean z0;
        java.lang.RuntimeException $r1, $r3, $r5;
        int $i0, $i1;
        android.os.RemoteException $r2;
        android.os.ServiceSpecificException $r4;
        java.lang.String $r6, $r8;
        java.lang.IllegalArgumentException $r7;
        com.android.internal.telephony.ITelephony r9;

        r0 := @this: android.telephony.ims.ImsMmTelManager;

        z0 := @parameter0: boolean;

        r9 = staticinvoke <android.telephony.ims.ImsMmTelManager: com.android.internal.telephony.ITelephony getITelephony()>();

        if r9 == null goto label6;

     label1:
        $i0 = r0.<android.telephony.ims.ImsMmTelManager: int mSubId>;

        interfaceinvoke r9.<com.android.internal.telephony.ITelephony: void setVoWiFiRoamingSettingEnabled(int,boolean)>($i0, z0);

     label2:
        return;

     label3:
        $r2 := @caughtexception;

        $r3 = virtualinvoke $r2.<android.os.RemoteException: java.lang.RuntimeException rethrowAsRuntimeException()>();

        throw $r3;

     label4:
        $r4 := @caughtexception;

        $i1 = $r4.<android.os.ServiceSpecificException: int errorCode>;

        if $i1 != 3 goto label5;

        $r7 = new java.lang.IllegalArgumentException;

        $r8 = virtualinvoke $r4.<android.os.ServiceSpecificException: java.lang.String getMessage()>();

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r7;

     label5:
        $r5 = new java.lang.RuntimeException;

        $r6 = virtualinvoke $r4.<android.os.ServiceSpecificException: java.lang.String getMessage()>();

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String)>($r6);

        throw $r5;

     label6:
        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Could not find Telephony Service.");

        throw $r1;

        catch android.os.ServiceSpecificException from label1 to label2 with label4;
        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void setVoWiFiSettingEnabled(boolean)
    {
        android.telephony.ims.ImsMmTelManager r0;
        boolean z0;
        java.lang.RuntimeException $r1, $r3, $r5;
        int $i0, $i1;
        android.os.RemoteException $r2;
        android.os.ServiceSpecificException $r4;
        java.lang.String $r6, $r8;
        java.lang.IllegalArgumentException $r7;
        com.android.internal.telephony.ITelephony r9;

        r0 := @this: android.telephony.ims.ImsMmTelManager;

        z0 := @parameter0: boolean;

        r9 = staticinvoke <android.telephony.ims.ImsMmTelManager: com.android.internal.telephony.ITelephony getITelephony()>();

        if r9 == null goto label6;

     label1:
        $i0 = r0.<android.telephony.ims.ImsMmTelManager: int mSubId>;

        interfaceinvoke r9.<com.android.internal.telephony.ITelephony: void setVoWiFiSettingEnabled(int,boolean)>($i0, z0);

     label2:
        return;

     label3:
        $r2 := @caughtexception;

        $r3 = virtualinvoke $r2.<android.os.RemoteException: java.lang.RuntimeException rethrowAsRuntimeException()>();

        throw $r3;

     label4:
        $r4 := @caughtexception;

        $i1 = $r4.<android.os.ServiceSpecificException: int errorCode>;

        if $i1 != 3 goto label5;

        $r7 = new java.lang.IllegalArgumentException;

        $r8 = virtualinvoke $r4.<android.os.ServiceSpecificException: java.lang.String getMessage()>();

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r7;

     label5:
        $r5 = new java.lang.RuntimeException;

        $r6 = virtualinvoke $r4.<android.os.ServiceSpecificException: java.lang.String getMessage()>();

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String)>($r6);

        throw $r5;

     label6:
        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Could not find Telephony Service.");

        throw $r1;

        catch android.os.ServiceSpecificException from label1 to label2 with label4;
        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void setVtSettingEnabled(boolean)
    {
        android.telephony.ims.ImsMmTelManager r0;
        boolean z0;
        java.lang.RuntimeException $r1, $r3, $r8;
        int $i0, $i1;
        android.os.ServiceSpecificException $r2;
        java.lang.String $r4, $r6;
        java.lang.IllegalArgumentException $r5;
        android.os.RemoteException $r7;
        com.android.internal.telephony.ITelephony r9;

        r0 := @this: android.telephony.ims.ImsMmTelManager;

        z0 := @parameter0: boolean;

        r9 = staticinvoke <android.telephony.ims.ImsMmTelManager: com.android.internal.telephony.ITelephony getITelephony()>();

        if r9 == null goto label6;

     label1:
        $i0 = r0.<android.telephony.ims.ImsMmTelManager: int mSubId>;

        interfaceinvoke r9.<com.android.internal.telephony.ITelephony: void setVtSettingEnabled(int,boolean)>($i0, z0);

     label2:
        return;

     label3:
        $r7 := @caughtexception;

        $r8 = virtualinvoke $r7.<android.os.RemoteException: java.lang.RuntimeException rethrowAsRuntimeException()>();

        throw $r8;

     label4:
        $r2 := @caughtexception;

        $i1 = $r2.<android.os.ServiceSpecificException: int errorCode>;

        if $i1 != 3 goto label5;

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = virtualinvoke $r2.<android.os.ServiceSpecificException: java.lang.String getMessage()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r5;

     label5:
        $r3 = new java.lang.RuntimeException;

        $r4 = virtualinvoke $r2.<android.os.ServiceSpecificException: java.lang.String getMessage()>();

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>($r4);

        throw $r3;

     label6:
        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Could not find Telephony Service.");

        throw $r1;

        catch android.os.ServiceSpecificException from label1 to label2 with label4;
        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void unregisterImsRegistrationCallback(android.telephony.ims.ImsMmTelManager$RegistrationCallback)
    {
        android.telephony.ims.ImsMmTelManager r0;
        com.android.internal.telephony.ITelephony r1;
        java.lang.IllegalArgumentException $r2;
        java.lang.RuntimeException $r3, $r6;
        int $i0;
        android.telephony.ims.aidl.IImsRegistrationCallback $r4;
        android.os.RemoteException $r5;
        android.telephony.ims.ImsMmTelManager$RegistrationCallback r7;

        r0 := @this: android.telephony.ims.ImsMmTelManager;

        r7 := @parameter0: android.telephony.ims.ImsMmTelManager$RegistrationCallback;

        if r7 == null goto label5;

        r1 = staticinvoke <android.telephony.ims.ImsMmTelManager: com.android.internal.telephony.ITelephony getITelephony()>();

        if r1 == null goto label4;

     label1:
        $i0 = r0.<android.telephony.ims.ImsMmTelManager: int mSubId>;

        $r4 = virtualinvoke r7.<android.telephony.ims.ImsMmTelManager$RegistrationCallback: android.telephony.ims.aidl.IImsRegistrationCallback getBinder()>();

        interfaceinvoke r1.<com.android.internal.telephony.ITelephony: void unregisterImsRegistrationCallback(int,android.telephony.ims.aidl.IImsRegistrationCallback)>($i0, $r4);

     label2:
        return;

     label3:
        $r5 := @caughtexception;

        $r6 = virtualinvoke $r5.<android.os.RemoteException: java.lang.RuntimeException rethrowAsRuntimeException()>();

        throw $r6;

     label4:
        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>("Could not find Telephony Service.");

        throw $r3;

     label5:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Must include a non-null RegistrationCallback.");

        throw $r2;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void unregisterImsRegistrationCallback(android.telephony.ims.RegistrationManager$RegistrationCallback)
    {
        android.telephony.ims.ImsMmTelManager r0;
        com.android.internal.telephony.ITelephony r1;
        java.lang.IllegalArgumentException $r2;
        java.lang.RuntimeException $r3, $r6;
        int $i0;
        android.telephony.ims.aidl.IImsRegistrationCallback $r4;
        android.os.RemoteException $r5;
        android.telephony.ims.RegistrationManager$RegistrationCallback r7;

        r0 := @this: android.telephony.ims.ImsMmTelManager;

        r7 := @parameter0: android.telephony.ims.RegistrationManager$RegistrationCallback;

        if r7 == null goto label5;

        r1 = staticinvoke <android.telephony.ims.ImsMmTelManager: com.android.internal.telephony.ITelephony getITelephony()>();

        if r1 == null goto label4;

     label1:
        $i0 = r0.<android.telephony.ims.ImsMmTelManager: int mSubId>;

        $r4 = virtualinvoke r7.<android.telephony.ims.RegistrationManager$RegistrationCallback: android.telephony.ims.aidl.IImsRegistrationCallback getBinder()>();

        interfaceinvoke r1.<com.android.internal.telephony.ITelephony: void unregisterImsRegistrationCallback(int,android.telephony.ims.aidl.IImsRegistrationCallback)>($i0, $r4);

     label2:
        return;

     label3:
        $r5 := @caughtexception;

        $r6 = virtualinvoke $r5.<android.os.RemoteException: java.lang.RuntimeException rethrowAsRuntimeException()>();

        throw $r6;

     label4:
        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>("Could not find Telephony Service.");

        throw $r3;

     label5:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Must include a non-null RegistrationCallback.");

        throw $r2;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void unregisterMmTelCapabilityCallback(android.telephony.ims.ImsMmTelManager$CapabilityCallback)
    {
        android.telephony.ims.ImsMmTelManager r0;
        com.android.internal.telephony.ITelephony r1;
        java.lang.IllegalArgumentException $r2;
        java.lang.RuntimeException $r3, $r6;
        int $i0;
        android.telephony.ims.aidl.IImsCapabilityCallback $r4;
        android.os.RemoteException $r5;
        android.telephony.ims.ImsMmTelManager$CapabilityCallback r7;

        r0 := @this: android.telephony.ims.ImsMmTelManager;

        r7 := @parameter0: android.telephony.ims.ImsMmTelManager$CapabilityCallback;

        if r7 == null goto label5;

        r1 = staticinvoke <android.telephony.ims.ImsMmTelManager: com.android.internal.telephony.ITelephony getITelephony()>();

        if r1 == null goto label4;

     label1:
        $i0 = r0.<android.telephony.ims.ImsMmTelManager: int mSubId>;

        $r4 = virtualinvoke r7.<android.telephony.ims.ImsMmTelManager$CapabilityCallback: android.telephony.ims.aidl.IImsCapabilityCallback getBinder()>();

        interfaceinvoke r1.<com.android.internal.telephony.ITelephony: void unregisterMmTelCapabilityCallback(int,android.telephony.ims.aidl.IImsCapabilityCallback)>($i0, $r4);

     label2:
        return;

     label3:
        $r5 := @caughtexception;

        $r6 = virtualinvoke $r5.<android.os.RemoteException: java.lang.RuntimeException rethrowAsRuntimeException()>();

        throw $r6;

     label4:
        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>("Could not find Telephony Service.");

        throw $r3;

     label5:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Must include a non-null RegistrationCallback.");

        throw $r2;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public static void <clinit>()
    {
        <android.telephony.ims.ImsMmTelManager: int WIFI_MODE_WIFI_PREFERRED> = 2;

        <android.telephony.ims.ImsMmTelManager: int WIFI_MODE_WIFI_ONLY> = 0;

        <android.telephony.ims.ImsMmTelManager: int WIFI_MODE_CELLULAR_PREFERRED> = 1;

        return;
    }
}
