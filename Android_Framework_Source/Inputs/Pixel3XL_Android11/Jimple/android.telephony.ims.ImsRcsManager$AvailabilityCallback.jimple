public class android.telephony.ims.ImsRcsManager$AvailabilityCallback extends java.lang.Object
{
    private final android.telephony.ims.ImsRcsManager$AvailabilityCallback$CapabilityBinder mBinder;

    public void <init>()
    {
        android.telephony.ims.ImsRcsManager$AvailabilityCallback r0;
        android.telephony.ims.ImsRcsManager$AvailabilityCallback$CapabilityBinder $r1;

        r0 := @this: android.telephony.ims.ImsRcsManager$AvailabilityCallback;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new android.telephony.ims.ImsRcsManager$AvailabilityCallback$CapabilityBinder;

        specialinvoke $r1.<android.telephony.ims.ImsRcsManager$AvailabilityCallback$CapabilityBinder: void <init>(android.telephony.ims.ImsRcsManager$AvailabilityCallback)>(r0);

        r0.<android.telephony.ims.ImsRcsManager$AvailabilityCallback: android.telephony.ims.ImsRcsManager$AvailabilityCallback$CapabilityBinder mBinder> = $r1;

        return;
    }

    static void access$100(android.telephony.ims.ImsRcsManager$AvailabilityCallback, java.util.concurrent.Executor)
    {
        android.telephony.ims.ImsRcsManager$AvailabilityCallback r0;
        java.util.concurrent.Executor r1;

        r0 := @parameter0: android.telephony.ims.ImsRcsManager$AvailabilityCallback;

        r1 := @parameter1: java.util.concurrent.Executor;

        specialinvoke r0.<android.telephony.ims.ImsRcsManager$AvailabilityCallback: void setExecutor(java.util.concurrent.Executor)>(r1);

        return;
    }

    private void setExecutor(java.util.concurrent.Executor)
    {
        android.telephony.ims.ImsRcsManager$AvailabilityCallback r0;
        java.util.concurrent.Executor r1;
        android.telephony.ims.ImsRcsManager$AvailabilityCallback$CapabilityBinder $r2;

        r0 := @this: android.telephony.ims.ImsRcsManager$AvailabilityCallback;

        r1 := @parameter0: java.util.concurrent.Executor;

        $r2 = r0.<android.telephony.ims.ImsRcsManager$AvailabilityCallback: android.telephony.ims.ImsRcsManager$AvailabilityCallback$CapabilityBinder mBinder>;

        staticinvoke <android.telephony.ims.ImsRcsManager$AvailabilityCallback$CapabilityBinder: void access$000(android.telephony.ims.ImsRcsManager$AvailabilityCallback$CapabilityBinder,java.util.concurrent.Executor)>($r2, r1);

        return;
    }

    public final android.telephony.ims.aidl.IImsCapabilityCallback getBinder()
    {
        android.telephony.ims.ImsRcsManager$AvailabilityCallback r0;
        android.telephony.ims.ImsRcsManager$AvailabilityCallback$CapabilityBinder $r1;

        r0 := @this: android.telephony.ims.ImsRcsManager$AvailabilityCallback;

        $r1 = r0.<android.telephony.ims.ImsRcsManager$AvailabilityCallback: android.telephony.ims.ImsRcsManager$AvailabilityCallback$CapabilityBinder mBinder>;

        return $r1;
    }

    public void onAvailabilityChanged(android.telephony.ims.feature.RcsFeature$RcsImsCapabilities)
    {
        android.telephony.ims.ImsRcsManager$AvailabilityCallback r0;
        android.telephony.ims.feature.RcsFeature$RcsImsCapabilities r1;

        r0 := @this: android.telephony.ims.ImsRcsManager$AvailabilityCallback;

        r1 := @parameter0: android.telephony.ims.feature.RcsFeature$RcsImsCapabilities;

        return;
    }
}
