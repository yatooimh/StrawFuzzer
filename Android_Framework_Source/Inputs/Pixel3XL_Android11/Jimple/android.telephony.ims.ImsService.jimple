public class android.telephony.ims.ImsService extends android.app.Service
{
    private static final java.lang.String LOG_TAG;
    public static final java.lang.String SERVICE_INTERFACE;
    private final android.util.SparseArray mFeaturesBySlot;
    protected final android.os.IBinder mImsServiceController;
    private android.telephony.ims.aidl.IImsServiceControllerListener mListener;

    public void <init>()
    {
        android.telephony.ims.ImsService r0;
        android.util.SparseArray $r1;
        android.telephony.ims.ImsService$1 $r2;

        r0 := @this: android.telephony.ims.ImsService;

        specialinvoke r0.<android.app.Service: void <init>()>();

        $r1 = new android.util.SparseArray;

        specialinvoke $r1.<android.util.SparseArray: void <init>()>();

        r0.<android.telephony.ims.ImsService: android.util.SparseArray mFeaturesBySlot> = $r1;

        $r2 = new android.telephony.ims.ImsService$1;

        specialinvoke $r2.<android.telephony.ims.ImsService$1: void <init>(android.telephony.ims.ImsService)>(r0);

        r0.<android.telephony.ims.ImsService: android.os.IBinder mImsServiceController> = $r2;

        return;
    }

    static android.telephony.ims.aidl.IImsServiceControllerListener access$002(android.telephony.ims.ImsService, android.telephony.ims.aidl.IImsServiceControllerListener)
    {
        android.telephony.ims.ImsService r0;
        android.telephony.ims.aidl.IImsServiceControllerListener r1;

        r0 := @parameter0: android.telephony.ims.ImsService;

        r1 := @parameter1: android.telephony.ims.aidl.IImsServiceControllerListener;

        r0.<android.telephony.ims.ImsService: android.telephony.ims.aidl.IImsServiceControllerListener mListener> = r1;

        return r1;
    }

    static android.telephony.ims.aidl.IImsMmTelFeature access$100(android.telephony.ims.ImsService, int, com.android.ims.internal.IImsFeatureStatusCallback)
    {
        android.telephony.ims.ImsService r0;
        int i0;
        com.android.ims.internal.IImsFeatureStatusCallback r1;
        android.telephony.ims.aidl.IImsMmTelFeature $r2;

        r0 := @parameter0: android.telephony.ims.ImsService;

        i0 := @parameter1: int;

        r1 := @parameter2: com.android.ims.internal.IImsFeatureStatusCallback;

        $r2 = specialinvoke r0.<android.telephony.ims.ImsService: android.telephony.ims.aidl.IImsMmTelFeature createMmTelFeatureInternal(int,com.android.ims.internal.IImsFeatureStatusCallback)>(i0, r1);

        return $r2;
    }

    static android.telephony.ims.aidl.IImsRcsFeature access$200(android.telephony.ims.ImsService, int, com.android.ims.internal.IImsFeatureStatusCallback)
    {
        android.telephony.ims.ImsService r0;
        int i0;
        com.android.ims.internal.IImsFeatureStatusCallback r1;
        android.telephony.ims.aidl.IImsRcsFeature $r2;

        r0 := @parameter0: android.telephony.ims.ImsService;

        i0 := @parameter1: int;

        r1 := @parameter2: com.android.ims.internal.IImsFeatureStatusCallback;

        $r2 = specialinvoke r0.<android.telephony.ims.ImsService: android.telephony.ims.aidl.IImsRcsFeature createRcsFeatureInternal(int,com.android.ims.internal.IImsFeatureStatusCallback)>(i0, r1);

        return $r2;
    }

    static void access$300(android.telephony.ims.ImsService, int, int, com.android.ims.internal.IImsFeatureStatusCallback)
    {
        android.telephony.ims.ImsService r0;
        int i0, i1;
        com.android.ims.internal.IImsFeatureStatusCallback r1;

        r0 := @parameter0: android.telephony.ims.ImsService;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 := @parameter3: com.android.ims.internal.IImsFeatureStatusCallback;

        specialinvoke r0.<android.telephony.ims.ImsService: void removeImsFeature(int,int,com.android.ims.internal.IImsFeatureStatusCallback)>(i0, i1, r1);

        return;
    }

    private void addImsFeature(int, int, android.telephony.ims.feature.ImsFeature)
    {
        android.telephony.ims.ImsService r0;
        int i0, i1;
        android.util.SparseArray r1, r2, $r3, $r5, r8;
        java.lang.Object $r4;
        java.lang.Throwable $r6;
        android.telephony.ims.feature.ImsFeature r7;

        r0 := @this: android.telephony.ims.ImsService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r7 := @parameter2: android.telephony.ims.feature.ImsFeature;

        r1 = r0.<android.telephony.ims.ImsService: android.util.SparseArray mFeaturesBySlot>;

        entermonitor r1;

     label1:
        $r3 = r0.<android.telephony.ims.ImsService: android.util.SparseArray mFeaturesBySlot>;

        $r4 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r2 = (android.util.SparseArray) $r4;

     label2:
        r8 = r2;

        if r2 != null goto label5;

     label3:
        r8 = new android.util.SparseArray;

        specialinvoke r8.<android.util.SparseArray: void <init>()>();

     label4:
        $r5 = r0.<android.telephony.ims.ImsService: android.util.SparseArray mFeaturesBySlot>;

        virtualinvoke $r5.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, r8);

     label5:
        virtualinvoke r8.<android.util.SparseArray: void put(int,java.lang.Object)>(i1, r7);

        exitmonitor r1;

     label6:
        return;

     label7:
        $r6 := @caughtexception;

     label8:
        exitmonitor r1;

     label9:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label4 to label5 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    private android.telephony.ims.aidl.IImsMmTelFeature createMmTelFeatureInternal(int, com.android.ims.internal.IImsFeatureStatusCallback)
    {
        android.telephony.ims.ImsService r0;
        int i0;
        com.android.ims.internal.IImsFeatureStatusCallback r1;
        android.telephony.ims.feature.MmTelFeature r2;
        android.telephony.ims.aidl.IImsMmTelFeature $r3;

        r0 := @this: android.telephony.ims.ImsService;

        i0 := @parameter0: int;

        r1 := @parameter1: com.android.ims.internal.IImsFeatureStatusCallback;

        r2 = virtualinvoke r0.<android.telephony.ims.ImsService: android.telephony.ims.feature.MmTelFeature createMmTelFeature(int)>(i0);

        if r2 == null goto label1;

        specialinvoke r0.<android.telephony.ims.ImsService: void setupFeature(android.telephony.ims.feature.ImsFeature,int,int,com.android.ims.internal.IImsFeatureStatusCallback)>(r2, i0, 1, r1);

        $r3 = virtualinvoke r2.<android.telephony.ims.feature.MmTelFeature: android.telephony.ims.aidl.IImsMmTelFeature getBinder()>();

        return $r3;

     label1:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("ImsService", "createMmTelFeatureInternal: null feature returned.");

        return null;
    }

    private android.telephony.ims.aidl.IImsRcsFeature createRcsFeatureInternal(int, com.android.ims.internal.IImsFeatureStatusCallback)
    {
        android.telephony.ims.ImsService r0;
        int i0;
        com.android.ims.internal.IImsFeatureStatusCallback r1;
        android.telephony.ims.feature.RcsFeature r2;
        android.telephony.ims.aidl.IImsRcsFeature $r3;

        r0 := @this: android.telephony.ims.ImsService;

        i0 := @parameter0: int;

        r1 := @parameter1: com.android.ims.internal.IImsFeatureStatusCallback;

        r2 = virtualinvoke r0.<android.telephony.ims.ImsService: android.telephony.ims.feature.RcsFeature createRcsFeature(int)>(i0);

        if r2 == null goto label1;

        specialinvoke r0.<android.telephony.ims.ImsService: void setupFeature(android.telephony.ims.feature.ImsFeature,int,int,com.android.ims.internal.IImsFeatureStatusCallback)>(r2, i0, 2, r1);

        $r3 = virtualinvoke r2.<android.telephony.ims.feature.RcsFeature: android.telephony.ims.aidl.IImsRcsFeature getBinder()>();

        return $r3;

     label1:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("ImsService", "createRcsFeatureInternal: null feature returned.");

        return null;
    }

    private void removeImsFeature(int, int, com.android.ims.internal.IImsFeatureStatusCallback)
    {
        android.telephony.ims.ImsService r0;
        int i0, i1;
        android.util.SparseArray r1, r2, $r4;
        android.telephony.ims.feature.ImsFeature r3;
        java.lang.Object $r5, $r6;
        java.lang.String $r11, $r14;
        java.lang.Throwable $r15;
        com.android.ims.internal.IImsFeatureStatusCallback r16;
        java.lang.StringBuilder r17, r18;

        r0 := @this: android.telephony.ims.ImsService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r16 := @parameter2: com.android.ims.internal.IImsFeatureStatusCallback;

        r1 = r0.<android.telephony.ims.ImsService: android.util.SparseArray mFeaturesBySlot>;

        entermonitor r1;

     label01:
        $r4 = r0.<android.telephony.ims.ImsService: android.util.SparseArray mFeaturesBySlot>;

        $r5 = virtualinvoke $r4.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r2 = (android.util.SparseArray) $r5;

     label02:
        if r2 != null goto label05;

     label03:
        r17 = new java.lang.StringBuilder;

        specialinvoke r17.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can not remove ImsFeature. No ImsFeatures exist on slot ");

        virtualinvoke r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r14 = virtualinvoke r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ImsService", $r14);

        exitmonitor r1;

     label04:
        return;

     label05:
        $r6 = virtualinvoke r2.<android.util.SparseArray: java.lang.Object get(int)>(i1);

        r3 = (android.telephony.ims.feature.ImsFeature) $r6;

     label06:
        if r3 != null goto label09;

     label07:
        r18 = new java.lang.StringBuilder;

        specialinvoke r18.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can not remove ImsFeature. No feature with type ");

        virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" exists on slot ");

        virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r11 = virtualinvoke r18.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ImsService", $r11);

        exitmonitor r1;

     label08:
        return;

     label09:
        virtualinvoke r3.<android.telephony.ims.feature.ImsFeature: void removeImsFeatureStatusCallback(com.android.ims.internal.IImsFeatureStatusCallback)>(r16);

        virtualinvoke r3.<android.telephony.ims.feature.ImsFeature: void onFeatureRemoved()>();

        virtualinvoke r2.<android.util.SparseArray: void remove(int)>(i1);

        exitmonitor r1;

     label10:
        return;

     label11:
        $r15 := @caughtexception;

     label12:
        exitmonitor r1;

     label13:
        throw $r15;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label03 to label04 with label11;
        catch java.lang.Throwable from label05 to label06 with label11;
        catch java.lang.Throwable from label07 to label08 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label12 to label13 with label11;
    }

    private void setupFeature(android.telephony.ims.feature.ImsFeature, int, int, com.android.ims.internal.IImsFeatureStatusCallback)
    {
        android.telephony.ims.ImsService r0;
        android.telephony.ims.feature.ImsFeature r1;
        int i0, i1;
        com.android.ims.internal.IImsFeatureStatusCallback r2;

        r0 := @this: android.telephony.ims.ImsService;

        r1 := @parameter0: android.telephony.ims.feature.ImsFeature;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: com.android.ims.internal.IImsFeatureStatusCallback;

        virtualinvoke r1.<android.telephony.ims.feature.ImsFeature: void initialize(android.content.Context,int)>(r0, i0);

        virtualinvoke r1.<android.telephony.ims.feature.ImsFeature: void addImsFeatureStatusCallback(com.android.ims.internal.IImsFeatureStatusCallback)>(r2);

        specialinvoke r0.<android.telephony.ims.ImsService: void addImsFeature(int,int,android.telephony.ims.feature.ImsFeature)>(i0, i1, r1);

        return;
    }

    public android.telephony.ims.feature.MmTelFeature createMmTelFeature(int)
    {
        android.telephony.ims.ImsService r0;
        int i0;

        r0 := @this: android.telephony.ims.ImsService;

        i0 := @parameter0: int;

        return null;
    }

    public android.telephony.ims.feature.RcsFeature createRcsFeature(int)
    {
        android.telephony.ims.ImsService r0;
        int i0;

        r0 := @this: android.telephony.ims.ImsService;

        i0 := @parameter0: int;

        return null;
    }

    public void disableIms(int)
    {
        android.telephony.ims.ImsService r0;
        int i0;

        r0 := @this: android.telephony.ims.ImsService;

        i0 := @parameter0: int;

        return;
    }

    public void enableIms(int)
    {
        android.telephony.ims.ImsService r0;
        int i0;

        r0 := @this: android.telephony.ims.ImsService;

        i0 := @parameter0: int;

        return;
    }

    public android.telephony.ims.stub.ImsConfigImplBase getConfig(int)
    {
        android.telephony.ims.ImsService r0;
        int i0;
        android.telephony.ims.stub.ImsConfigImplBase $r1;

        r0 := @this: android.telephony.ims.ImsService;

        i0 := @parameter0: int;

        $r1 = new android.telephony.ims.stub.ImsConfigImplBase;

        specialinvoke $r1.<android.telephony.ims.stub.ImsConfigImplBase: void <init>()>();

        return $r1;
    }

    public android.util.SparseArray getFeatures(int)
    {
        android.telephony.ims.ImsService r0;
        int i0;
        android.util.SparseArray $r1, $r3;
        java.lang.Object $r2;

        r0 := @this: android.telephony.ims.ImsService;

        i0 := @parameter0: int;

        $r1 = r0.<android.telephony.ims.ImsService: android.util.SparseArray mFeaturesBySlot>;

        $r2 = virtualinvoke $r1.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        $r3 = (android.util.SparseArray) $r2;

        return $r3;
    }

    public android.telephony.ims.stub.ImsRegistrationImplBase getRegistration(int)
    {
        android.telephony.ims.ImsService r0;
        int i0;
        android.telephony.ims.stub.ImsRegistrationImplBase $r1;

        r0 := @this: android.telephony.ims.ImsService;

        i0 := @parameter0: int;

        $r1 = new android.telephony.ims.stub.ImsRegistrationImplBase;

        specialinvoke $r1.<android.telephony.ims.stub.ImsRegistrationImplBase: void <init>()>();

        return $r1;
    }

    public android.os.IBinder onBind(android.content.Intent)
    {
        android.telephony.ims.ImsService r0;
        android.content.Intent r1;
        java.lang.String $r2, $r3;
        boolean $z0;
        android.os.IBinder $r4;

        r0 := @this: android.telephony.ims.ImsService;

        r1 := @parameter0: android.content.Intent;

        $r2 = "android.telephony.ims.ImsService";

        $r3 = virtualinvoke r1.<android.content.Intent: java.lang.String getAction()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label1;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("ImsService", "ImsService Bound.");

        $r4 = r0.<android.telephony.ims.ImsService: android.os.IBinder mImsServiceController>;

        return $r4;

     label1:
        return null;
    }

    public final void onUpdateSupportedImsFeatures(android.telephony.ims.stub.ImsFeatureConfiguration) throws android.os.RemoteException
    {
        android.telephony.ims.ImsService r0;
        android.telephony.ims.stub.ImsFeatureConfiguration r1;
        android.telephony.ims.aidl.IImsServiceControllerListener r2;
        java.lang.IllegalStateException $r3;

        r0 := @this: android.telephony.ims.ImsService;

        r1 := @parameter0: android.telephony.ims.stub.ImsFeatureConfiguration;

        r2 = r0.<android.telephony.ims.ImsService: android.telephony.ims.aidl.IImsServiceControllerListener mListener>;

        if r2 == null goto label1;

        interfaceinvoke r2.<android.telephony.ims.aidl.IImsServiceControllerListener: void onUpdateSupportedImsFeatures(android.telephony.ims.stub.ImsFeatureConfiguration)>(r1);

        return;

     label1:
        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Framework is not ready");

        throw $r3;
    }

    public android.telephony.ims.stub.ImsFeatureConfiguration querySupportedImsFeatures()
    {
        android.telephony.ims.ImsService r0;
        android.telephony.ims.stub.ImsFeatureConfiguration $r1;

        r0 := @this: android.telephony.ims.ImsService;

        $r1 = new android.telephony.ims.stub.ImsFeatureConfiguration;

        specialinvoke $r1.<android.telephony.ims.stub.ImsFeatureConfiguration: void <init>()>();

        return $r1;
    }

    public void readyForFeatureCreation()
    {
        android.telephony.ims.ImsService r0;

        r0 := @this: android.telephony.ims.ImsService;

        return;
    }

    public static void <clinit>()
    {
        <android.telephony.ims.ImsService: java.lang.String SERVICE_INTERFACE> = "android.telephony.ims.ImsService";

        <android.telephony.ims.ImsService: java.lang.String LOG_TAG> = "ImsService";

        return;
    }
}
