public abstract class android.telephony.ims.ImsVideoCallProvider extends java.lang.Object
{
    private static final int MSG_REQUEST_CALL_DATA_USAGE;
    private static final int MSG_REQUEST_CAMERA_CAPABILITIES;
    private static final int MSG_SEND_SESSION_MODIFY_REQUEST;
    private static final int MSG_SEND_SESSION_MODIFY_RESPONSE;
    private static final int MSG_SET_CALLBACK;
    private static final int MSG_SET_CAMERA;
    private static final int MSG_SET_DEVICE_ORIENTATION;
    private static final int MSG_SET_DISPLAY_SURFACE;
    private static final int MSG_SET_PAUSE_IMAGE;
    private static final int MSG_SET_PREVIEW_SURFACE;
    private static final int MSG_SET_ZOOM;
    private final android.telephony.ims.ImsVideoCallProvider$ImsVideoCallProviderBinder mBinder;
    private com.android.ims.internal.IImsVideoCallCallback mCallback;
    private final android.os.Handler mProviderHandler;

    public void <init>()
    {
        android.telephony.ims.ImsVideoCallProvider r0;
        android.telephony.ims.ImsVideoCallProvider$1 $r1;
        android.os.Looper $r2;
        android.telephony.ims.ImsVideoCallProvider$ImsVideoCallProviderBinder $r3;

        r0 := @this: android.telephony.ims.ImsVideoCallProvider;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new android.telephony.ims.ImsVideoCallProvider$1;

        $r2 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        specialinvoke $r1.<android.telephony.ims.ImsVideoCallProvider$1: void <init>(android.telephony.ims.ImsVideoCallProvider,android.os.Looper)>(r0, $r2);

        r0.<android.telephony.ims.ImsVideoCallProvider: android.os.Handler mProviderHandler> = $r1;

        $r3 = new android.telephony.ims.ImsVideoCallProvider$ImsVideoCallProviderBinder;

        specialinvoke $r3.<android.telephony.ims.ImsVideoCallProvider$ImsVideoCallProviderBinder: void <init>(android.telephony.ims.ImsVideoCallProvider,android.telephony.ims.ImsVideoCallProvider$1)>(r0, null);

        r0.<android.telephony.ims.ImsVideoCallProvider: android.telephony.ims.ImsVideoCallProvider$ImsVideoCallProviderBinder mBinder> = $r3;

        return;
    }

    static com.android.ims.internal.IImsVideoCallCallback access$002(android.telephony.ims.ImsVideoCallProvider, com.android.ims.internal.IImsVideoCallCallback)
    {
        android.telephony.ims.ImsVideoCallProvider r0;
        com.android.ims.internal.IImsVideoCallCallback r1;

        r0 := @parameter0: android.telephony.ims.ImsVideoCallProvider;

        r1 := @parameter1: com.android.ims.internal.IImsVideoCallCallback;

        r0.<android.telephony.ims.ImsVideoCallProvider: com.android.ims.internal.IImsVideoCallCallback mCallback> = r1;

        return r1;
    }

    static android.os.Handler access$100(android.telephony.ims.ImsVideoCallProvider)
    {
        android.telephony.ims.ImsVideoCallProvider r0;
        android.os.Handler $r1;

        r0 := @parameter0: android.telephony.ims.ImsVideoCallProvider;

        $r1 = r0.<android.telephony.ims.ImsVideoCallProvider: android.os.Handler mProviderHandler>;

        return $r1;
    }

    public void changeCallDataUsage(long)
    {
        android.telephony.ims.ImsVideoCallProvider r0;
        long l0;
        android.os.RemoteException $r1;
        com.android.ims.internal.IImsVideoCallCallback r2;

        r0 := @this: android.telephony.ims.ImsVideoCallProvider;

        l0 := @parameter0: long;

        r2 = r0.<android.telephony.ims.ImsVideoCallProvider: com.android.ims.internal.IImsVideoCallCallback mCallback>;

        if r2 == null goto label4;

     label1:
        interfaceinvoke r2.<com.android.ims.internal.IImsVideoCallCallback: void changeCallDataUsage(long)>(l0);

     label2:
        goto label4;

     label3:
        $r1 := @caughtexception;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void changeCameraCapabilities(android.telecom.VideoProfile$CameraCapabilities)
    {
        android.telephony.ims.ImsVideoCallProvider r0;
        com.android.ims.internal.IImsVideoCallCallback r1;
        android.os.RemoteException $r2;
        android.telecom.VideoProfile$CameraCapabilities r3;

        r0 := @this: android.telephony.ims.ImsVideoCallProvider;

        r3 := @parameter0: android.telecom.VideoProfile$CameraCapabilities;

        r1 = r0.<android.telephony.ims.ImsVideoCallProvider: com.android.ims.internal.IImsVideoCallCallback mCallback>;

        if r1 == null goto label4;

     label1:
        interfaceinvoke r1.<com.android.ims.internal.IImsVideoCallCallback: void changeCameraCapabilities(android.telecom.VideoProfile$CameraCapabilities)>(r3);

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void changePeerDimensions(int, int)
    {
        android.telephony.ims.ImsVideoCallProvider r0;
        int i0, i1;
        android.os.RemoteException $r1;
        com.android.ims.internal.IImsVideoCallCallback r2;

        r0 := @this: android.telephony.ims.ImsVideoCallProvider;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r2 = r0.<android.telephony.ims.ImsVideoCallProvider: com.android.ims.internal.IImsVideoCallCallback mCallback>;

        if r2 == null goto label4;

     label1:
        interfaceinvoke r2.<com.android.ims.internal.IImsVideoCallCallback: void changePeerDimensions(int,int)>(i0, i1);

     label2:
        goto label4;

     label3:
        $r1 := @caughtexception;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void changeVideoQuality(int)
    {
        android.telephony.ims.ImsVideoCallProvider r0;
        int i0;
        android.os.RemoteException $r1;
        com.android.ims.internal.IImsVideoCallCallback r2;

        r0 := @this: android.telephony.ims.ImsVideoCallProvider;

        i0 := @parameter0: int;

        r2 = r0.<android.telephony.ims.ImsVideoCallProvider: com.android.ims.internal.IImsVideoCallCallback mCallback>;

        if r2 == null goto label4;

     label1:
        interfaceinvoke r2.<com.android.ims.internal.IImsVideoCallCallback: void changeVideoQuality(int)>(i0);

     label2:
        goto label4;

     label3:
        $r1 := @caughtexception;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public final com.android.ims.internal.IImsVideoCallProvider getInterface()
    {
        android.telephony.ims.ImsVideoCallProvider r0;
        android.telephony.ims.ImsVideoCallProvider$ImsVideoCallProviderBinder $r1;

        r0 := @this: android.telephony.ims.ImsVideoCallProvider;

        $r1 = r0.<android.telephony.ims.ImsVideoCallProvider: android.telephony.ims.ImsVideoCallProvider$ImsVideoCallProviderBinder mBinder>;

        return $r1;
    }

    public void handleCallSessionEvent(int)
    {
        android.telephony.ims.ImsVideoCallProvider r0;
        int i0;
        android.os.RemoteException $r1;
        com.android.ims.internal.IImsVideoCallCallback r2;

        r0 := @this: android.telephony.ims.ImsVideoCallProvider;

        i0 := @parameter0: int;

        r2 = r0.<android.telephony.ims.ImsVideoCallProvider: com.android.ims.internal.IImsVideoCallCallback mCallback>;

        if r2 == null goto label4;

     label1:
        interfaceinvoke r2.<com.android.ims.internal.IImsVideoCallCallback: void handleCallSessionEvent(int)>(i0);

     label2:
        goto label4;

     label3:
        $r1 := @caughtexception;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public abstract void onRequestCallDataUsage();

    public abstract void onRequestCameraCapabilities();

    public abstract void onSendSessionModifyRequest(android.telecom.VideoProfile, android.telecom.VideoProfile);

    public abstract void onSendSessionModifyResponse(android.telecom.VideoProfile);

    public abstract void onSetCamera(java.lang.String);

    public void onSetCamera(java.lang.String, int)
    {
        android.telephony.ims.ImsVideoCallProvider r0;
        java.lang.String r1;
        int i0;

        r0 := @this: android.telephony.ims.ImsVideoCallProvider;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        return;
    }

    public abstract void onSetDeviceOrientation(int);

    public abstract void onSetDisplaySurface(android.view.Surface);

    public abstract void onSetPauseImage(android.net.Uri);

    public abstract void onSetPreviewSurface(android.view.Surface);

    public abstract void onSetZoom(float);

    public void receiveSessionModifyRequest(android.telecom.VideoProfile)
    {
        android.telephony.ims.ImsVideoCallProvider r0;
        com.android.ims.internal.IImsVideoCallCallback r1;
        android.os.RemoteException $r2;
        android.telecom.VideoProfile r3;

        r0 := @this: android.telephony.ims.ImsVideoCallProvider;

        r3 := @parameter0: android.telecom.VideoProfile;

        r1 = r0.<android.telephony.ims.ImsVideoCallProvider: com.android.ims.internal.IImsVideoCallCallback mCallback>;

        if r1 == null goto label4;

     label1:
        interfaceinvoke r1.<com.android.ims.internal.IImsVideoCallCallback: void receiveSessionModifyRequest(android.telecom.VideoProfile)>(r3);

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void receiveSessionModifyResponse(int, android.telecom.VideoProfile, android.telecom.VideoProfile)
    {
        android.telephony.ims.ImsVideoCallProvider r0;
        int i0;
        android.telecom.VideoProfile r1, r4;
        com.android.ims.internal.IImsVideoCallCallback r2;
        android.os.RemoteException $r3;

        r0 := @this: android.telephony.ims.ImsVideoCallProvider;

        i0 := @parameter0: int;

        r4 := @parameter1: android.telecom.VideoProfile;

        r1 := @parameter2: android.telecom.VideoProfile;

        r2 = r0.<android.telephony.ims.ImsVideoCallProvider: com.android.ims.internal.IImsVideoCallCallback mCallback>;

        if r2 == null goto label4;

     label1:
        interfaceinvoke r2.<com.android.ims.internal.IImsVideoCallCallback: void receiveSessionModifyResponse(int,android.telecom.VideoProfile,android.telecom.VideoProfile)>(i0, r4, r1);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public static void <clinit>()
    {
        <android.telephony.ims.ImsVideoCallProvider: int MSG_SET_ZOOM> = 6;

        <android.telephony.ims.ImsVideoCallProvider: int MSG_SET_PREVIEW_SURFACE> = 3;

        <android.telephony.ims.ImsVideoCallProvider: int MSG_SET_PAUSE_IMAGE> = 11;

        <android.telephony.ims.ImsVideoCallProvider: int MSG_SET_DISPLAY_SURFACE> = 4;

        <android.telephony.ims.ImsVideoCallProvider: int MSG_SET_DEVICE_ORIENTATION> = 5;

        <android.telephony.ims.ImsVideoCallProvider: int MSG_SET_CAMERA> = 2;

        <android.telephony.ims.ImsVideoCallProvider: int MSG_SET_CALLBACK> = 1;

        <android.telephony.ims.ImsVideoCallProvider: int MSG_SEND_SESSION_MODIFY_RESPONSE> = 8;

        <android.telephony.ims.ImsVideoCallProvider: int MSG_SEND_SESSION_MODIFY_REQUEST> = 7;

        <android.telephony.ims.ImsVideoCallProvider: int MSG_REQUEST_CAMERA_CAPABILITIES> = 9;

        <android.telephony.ims.ImsVideoCallProvider: int MSG_REQUEST_CALL_DATA_USAGE> = 10;

        return;
    }
}
