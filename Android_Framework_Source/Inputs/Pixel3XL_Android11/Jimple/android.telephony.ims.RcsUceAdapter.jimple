public class android.telephony.ims.RcsUceAdapter extends java.lang.Object
{
    public static final int ERROR_ALREADY_IN_QUEUE;
    public static final int ERROR_FORBIDDEN;
    public static final int ERROR_GENERIC_FAILURE;
    public static final int ERROR_INSUFFICIENT_MEMORY;
    public static final int ERROR_LOST_NETWORK;
    public static final int ERROR_NOT_AUTHORIZED;
    public static final int ERROR_NOT_AVAILABLE;
    public static final int ERROR_NOT_ENABLED;
    public static final int ERROR_NOT_FOUND;
    public static final int ERROR_NOT_REGISTERED;
    public static final int ERROR_REQUEST_TIMEOUT;
    public static final int ERROR_REQUEST_TOO_LARGE;
    public static final int PUBLISH_STATE_NOT_PUBLISHED;
    public static final int PUBLISH_STATE_OK;
    public static final int PUBLISH_STATE_OTHER_ERROR;
    public static final int PUBLISH_STATE_RCS_PROVISION_ERROR;
    public static final int PUBLISH_STATE_REQUEST_TIMEOUT;
    public static final int PUBLISH_STATE_VOLTE_PROVISION_ERROR;
    private static final java.lang.String TAG;
    private final android.content.Context mContext;
    private final int mSubId;

    void <init>(android.content.Context, int)
    {
        android.telephony.ims.RcsUceAdapter r0;
        android.content.Context r1;
        int i0;

        r0 := @this: android.telephony.ims.RcsUceAdapter;

        r1 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.telephony.ims.RcsUceAdapter: android.content.Context mContext> = r1;

        r0.<android.telephony.ims.RcsUceAdapter: int mSubId> = i0;

        return;
    }

    private android.telephony.ims.aidl.IImsRcsController getIImsRcsController()
    {
        android.telephony.ims.RcsUceAdapter r0;
        android.os.TelephonyServiceManager $r1;
        android.os.TelephonyServiceManager$ServiceRegisterer $r2;
        android.os.IBinder $r3;
        android.telephony.ims.aidl.IImsRcsController $r4;

        r0 := @this: android.telephony.ims.RcsUceAdapter;

        $r1 = staticinvoke <android.telephony.TelephonyFrameworkInitializer: android.os.TelephonyServiceManager getTelephonyServiceManager()>();

        $r2 = virtualinvoke $r1.<android.os.TelephonyServiceManager: android.os.TelephonyServiceManager$ServiceRegisterer getTelephonyImsServiceRegisterer()>();

        $r3 = virtualinvoke $r2.<android.os.TelephonyServiceManager$ServiceRegisterer: android.os.IBinder get()>();

        $r4 = staticinvoke <android.telephony.ims.aidl.IImsRcsController$Stub: android.telephony.ims.aidl.IImsRcsController asInterface(android.os.IBinder)>($r3);

        return $r4;
    }

    public int getUcePublishState() throws android.telephony.ims.ImsException
    {
        android.telephony.ims.RcsUceAdapter r0;
        int i0, $i2;
        android.telephony.ims.ImsException $r1, $r3;
        android.os.RemoteException $r2;
        android.telephony.ims.aidl.IImsRcsController r4;

        r0 := @this: android.telephony.ims.RcsUceAdapter;

        r4 = specialinvoke r0.<android.telephony.ims.RcsUceAdapter: android.telephony.ims.aidl.IImsRcsController getIImsRcsController()>();

        if r4 == null goto label4;

     label1:
        $i2 = r0.<android.telephony.ims.RcsUceAdapter: int mSubId>;

        i0 = interfaceinvoke r4.<android.telephony.ims.aidl.IImsRcsController: int getUcePublishState(int)>($i2);

     label2:
        return i0;

     label3:
        $r2 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("RcsUceAdapter", "Error calling IImsRcsController#getUcePublishState", $r2);

        $r3 = new android.telephony.ims.ImsException;

        specialinvoke $r3.<android.telephony.ims.ImsException: void <init>(java.lang.String,int)>("Remote IMS Service is not available", 1);

        throw $r3;

     label4:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("RcsUceAdapter", "getUcePublishState: IImsRcsController is null");

        $r1 = new android.telephony.ims.ImsException;

        specialinvoke $r1.<android.telephony.ims.ImsException: void <init>(java.lang.String,int)>("Can not find remote IMS service", 1);

        throw $r1;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean isUceSettingEnabled() throws android.telephony.ims.ImsException
    {
        android.telephony.ims.RcsUceAdapter r0;
        boolean z0;
        android.telephony.ims.ImsException $r1, $r7;
        android.content.Context $r2, $r4;
        int $i1;
        java.lang.String $r3, $r5;
        android.os.RemoteException $r6;
        android.telephony.ims.aidl.IImsRcsController r8;

        r0 := @this: android.telephony.ims.RcsUceAdapter;

        r8 = specialinvoke r0.<android.telephony.ims.RcsUceAdapter: android.telephony.ims.aidl.IImsRcsController getIImsRcsController()>();

        if r8 == null goto label4;

     label1:
        $i1 = r0.<android.telephony.ims.RcsUceAdapter: int mSubId>;

        $r2 = r0.<android.telephony.ims.RcsUceAdapter: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: java.lang.String getOpPackageName()>();

        $r4 = r0.<android.telephony.ims.RcsUceAdapter: android.content.Context mContext>;

        $r5 = virtualinvoke $r4.<android.content.Context: java.lang.String getAttributionTag()>();

        z0 = interfaceinvoke r8.<android.telephony.ims.aidl.IImsRcsController: boolean isUceSettingEnabled(int,java.lang.String,java.lang.String)>($i1, $r3, $r5);

     label2:
        return z0;

     label3:
        $r6 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("RcsUceAdapter", "Error calling IImsRcsController#isUceSettingEnabled", $r6);

        $r7 = new android.telephony.ims.ImsException;

        specialinvoke $r7.<android.telephony.ims.ImsException: void <init>(java.lang.String,int)>("Remote IMS Service is not available", 1);

        throw $r7;

     label4:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("RcsUceAdapter", "isUceSettingEnabled: IImsRcsController is null");

        $r1 = new android.telephony.ims.ImsException;

        specialinvoke $r1.<android.telephony.ims.ImsException: void <init>(java.lang.String,int)>("Can not find remote IMS service", 1);

        throw $r1;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void requestCapabilities(java.util.concurrent.Executor, java.util.List, android.telephony.ims.RcsUceAdapter$CapabilitiesCallback) throws android.telephony.ims.ImsException
    {
        android.telephony.ims.RcsUceAdapter r0;
        java.util.List r1;
        android.telephony.ims.RcsUceAdapter$CapabilitiesCallback r2;
        android.telephony.ims.aidl.IImsRcsController r3;
        java.lang.IllegalArgumentException $r4, $r5, $r6;
        android.telephony.ims.ImsException $r7, $r14;
        android.telephony.ims.RcsUceAdapter$1 $r8;
        android.content.Context $r9, $r11;
        int $i1;
        java.lang.String $r10, $r12;
        android.os.RemoteException $r13;
        java.util.concurrent.Executor r15;

        r0 := @this: android.telephony.ims.RcsUceAdapter;

        r15 := @parameter0: java.util.concurrent.Executor;

        r1 := @parameter1: java.util.List;

        r2 := @parameter2: android.telephony.ims.RcsUceAdapter$CapabilitiesCallback;

        if r2 == null goto label7;

        if r15 == null goto label6;

        if r1 == null goto label5;

        r3 = specialinvoke r0.<android.telephony.ims.RcsUceAdapter: android.telephony.ims.aidl.IImsRcsController getIImsRcsController()>();

        if r3 == null goto label4;

        $r8 = new android.telephony.ims.RcsUceAdapter$1;

        specialinvoke $r8.<android.telephony.ims.RcsUceAdapter$1: void <init>(android.telephony.ims.RcsUceAdapter,java.util.concurrent.Executor,android.telephony.ims.RcsUceAdapter$CapabilitiesCallback)>(r0, r15, r2);

     label1:
        $i1 = r0.<android.telephony.ims.RcsUceAdapter: int mSubId>;

        $r9 = r0.<android.telephony.ims.RcsUceAdapter: android.content.Context mContext>;

        $r10 = virtualinvoke $r9.<android.content.Context: java.lang.String getOpPackageName()>();

        $r11 = r0.<android.telephony.ims.RcsUceAdapter: android.content.Context mContext>;

        $r12 = virtualinvoke $r11.<android.content.Context: java.lang.String getAttributionTag()>();

        interfaceinvoke r3.<android.telephony.ims.aidl.IImsRcsController: void requestCapabilities(int,java.lang.String,java.lang.String,java.util.List,android.telephony.ims.aidl.IRcsUceControllerCallback)>($i1, $r10, $r12, r1, $r8);

     label2:
        return;

     label3:
        $r13 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("RcsUceAdapter", "Error calling IImsRcsController#requestCapabilities", $r13);

        $r14 = new android.telephony.ims.ImsException;

        specialinvoke $r14.<android.telephony.ims.ImsException: void <init>(java.lang.String,int)>("Remote IMS Service is not available", 1);

        throw $r14;

     label4:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("RcsUceAdapter", "requestCapabilities: IImsRcsController is null");

        $r7 = new android.telephony.ims.ImsException;

        specialinvoke $r7.<android.telephony.ims.ImsException: void <init>(java.lang.String,int)>("Can not find remote IMS service", 1);

        throw $r7;

     label5:
        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Must include non-null contact number list.");

        throw $r6;

     label6:
        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Must include a non-null Executor.");

        throw $r5;

     label7:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Must include a non-null AvailabilityCallback.");

        throw $r4;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void setUceSettingEnabled(boolean) throws android.telephony.ims.ImsException
    {
        android.telephony.ims.RcsUceAdapter r0;
        boolean z0;
        android.telephony.ims.ImsException $r1, $r3;
        int $i1;
        android.os.RemoteException $r2;
        android.telephony.ims.aidl.IImsRcsController r4;

        r0 := @this: android.telephony.ims.RcsUceAdapter;

        z0 := @parameter0: boolean;

        r4 = specialinvoke r0.<android.telephony.ims.RcsUceAdapter: android.telephony.ims.aidl.IImsRcsController getIImsRcsController()>();

        if r4 == null goto label4;

     label1:
        $i1 = r0.<android.telephony.ims.RcsUceAdapter: int mSubId>;

        interfaceinvoke r4.<android.telephony.ims.aidl.IImsRcsController: void setUceSettingEnabled(int,boolean)>($i1, z0);

     label2:
        return;

     label3:
        $r2 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("RcsUceAdapter", "Error calling IImsRcsController#setUceSettingEnabled", $r2);

        $r3 = new android.telephony.ims.ImsException;

        specialinvoke $r3.<android.telephony.ims.ImsException: void <init>(java.lang.String,int)>("Remote IMS Service is not available", 1);

        throw $r3;

     label4:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("RcsUceAdapter", "setUceSettingEnabled: IImsRcsController is null");

        $r1 = new android.telephony.ims.ImsException;

        specialinvoke $r1.<android.telephony.ims.ImsException: void <init>(java.lang.String,int)>("Can not find remote IMS service", 1);

        throw $r1;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public static void <clinit>()
    {
        <android.telephony.ims.RcsUceAdapter: java.lang.String TAG> = "RcsUceAdapter";

        <android.telephony.ims.RcsUceAdapter: int PUBLISH_STATE_VOLTE_PROVISION_ERROR> = 3;

        <android.telephony.ims.RcsUceAdapter: int PUBLISH_STATE_REQUEST_TIMEOUT> = 5;

        <android.telephony.ims.RcsUceAdapter: int PUBLISH_STATE_RCS_PROVISION_ERROR> = 4;

        <android.telephony.ims.RcsUceAdapter: int PUBLISH_STATE_OTHER_ERROR> = 6;

        <android.telephony.ims.RcsUceAdapter: int PUBLISH_STATE_OK> = 1;

        <android.telephony.ims.RcsUceAdapter: int PUBLISH_STATE_NOT_PUBLISHED> = 2;

        <android.telephony.ims.RcsUceAdapter: int ERROR_REQUEST_TOO_LARGE> = 8;

        <android.telephony.ims.RcsUceAdapter: int ERROR_REQUEST_TIMEOUT> = 10;

        <android.telephony.ims.RcsUceAdapter: int ERROR_NOT_REGISTERED> = 4;

        <android.telephony.ims.RcsUceAdapter: int ERROR_NOT_FOUND> = 7;

        <android.telephony.ims.RcsUceAdapter: int ERROR_NOT_ENABLED> = 2;

        <android.telephony.ims.RcsUceAdapter: int ERROR_NOT_AVAILABLE> = 3;

        <android.telephony.ims.RcsUceAdapter: int ERROR_NOT_AUTHORIZED> = 5;

        <android.telephony.ims.RcsUceAdapter: int ERROR_LOST_NETWORK> = 12;

        <android.telephony.ims.RcsUceAdapter: int ERROR_INSUFFICIENT_MEMORY> = 11;

        <android.telephony.ims.RcsUceAdapter: int ERROR_GENERIC_FAILURE> = 1;

        <android.telephony.ims.RcsUceAdapter: int ERROR_FORBIDDEN> = 6;

        <android.telephony.ims.RcsUceAdapter: int ERROR_ALREADY_IN_QUEUE> = 13;

        return;
    }
}
