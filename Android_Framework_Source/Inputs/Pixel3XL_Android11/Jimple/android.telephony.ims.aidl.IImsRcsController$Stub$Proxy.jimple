class android.telephony.ims.aidl.IImsRcsController$Stub$Proxy extends java.lang.Object implements android.telephony.ims.aidl.IImsRcsController
{
    public static android.telephony.ims.aidl.IImsRcsController sDefaultImpl;
    private android.os.IBinder mRemote;

    void <init>(android.os.IBinder)
    {
        android.telephony.ims.aidl.IImsRcsController$Stub$Proxy r0;
        android.os.IBinder r1;

        r0 := @this: android.telephony.ims.aidl.IImsRcsController$Stub$Proxy;

        r1 := @parameter0: android.os.IBinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.telephony.ims.aidl.IImsRcsController$Stub$Proxy: android.os.IBinder mRemote> = r1;

        return;
    }

    public android.os.IBinder asBinder()
    {
        android.telephony.ims.aidl.IImsRcsController$Stub$Proxy r0;
        android.os.IBinder $r1;

        r0 := @this: android.telephony.ims.aidl.IImsRcsController$Stub$Proxy;

        $r1 = r0.<android.telephony.ims.aidl.IImsRcsController$Stub$Proxy: android.os.IBinder mRemote>;

        return $r1;
    }

    public void getImsRcsRegistrationState(int, com.android.internal.telephony.IIntegerConsumer) throws android.os.RemoteException
    {
        android.telephony.ims.aidl.IImsRcsController$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r8;
        boolean $z0;
        android.telephony.ims.aidl.IImsRcsController $r4, $r5;
        java.lang.Throwable $r6;
        com.android.internal.telephony.IIntegerConsumer r7;

        r0 := @this: android.telephony.ims.aidl.IImsRcsController$Stub$Proxy;

        i0 := @parameter0: int;

        r7 := @parameter1: com.android.internal.telephony.IIntegerConsumer;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.telephony.ims.aidl.IImsRcsController");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

     label02:
        if r7 == null goto label05;

     label03:
        r8 = interfaceinvoke r7.<com.android.internal.telephony.IIntegerConsumer: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r8 = null;

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r8);

        $r3 = r0.<android.telephony.ims.aidl.IImsRcsController$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(3, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.telephony.ims.aidl.IImsRcsController$Stub: android.telephony.ims.aidl.IImsRcsController getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.telephony.ims.aidl.IImsRcsController$Stub: android.telephony.ims.aidl.IImsRcsController getDefaultImpl()>();

        interfaceinvoke $r5.<android.telephony.ims.aidl.IImsRcsController: void getImsRcsRegistrationState(int,com.android.internal.telephony.IIntegerConsumer)>(i0, r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void getImsRcsRegistrationTransportType(int, com.android.internal.telephony.IIntegerConsumer) throws android.os.RemoteException
    {
        android.telephony.ims.aidl.IImsRcsController$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r8;
        boolean $z0;
        android.telephony.ims.aidl.IImsRcsController $r4, $r5;
        java.lang.Throwable $r6;
        com.android.internal.telephony.IIntegerConsumer r7;

        r0 := @this: android.telephony.ims.aidl.IImsRcsController$Stub$Proxy;

        i0 := @parameter0: int;

        r7 := @parameter1: com.android.internal.telephony.IIntegerConsumer;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.telephony.ims.aidl.IImsRcsController");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

     label02:
        if r7 == null goto label05;

     label03:
        r8 = interfaceinvoke r7.<com.android.internal.telephony.IIntegerConsumer: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r8 = null;

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r8);

        $r3 = r0.<android.telephony.ims.aidl.IImsRcsController$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(4, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.telephony.ims.aidl.IImsRcsController$Stub: android.telephony.ims.aidl.IImsRcsController getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.telephony.ims.aidl.IImsRcsController$Stub: android.telephony.ims.aidl.IImsRcsController getDefaultImpl()>();

        interfaceinvoke $r5.<android.telephony.ims.aidl.IImsRcsController: void getImsRcsRegistrationTransportType(int,com.android.internal.telephony.IIntegerConsumer)>(i0, r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public java.lang.String getInterfaceDescriptor()
    {
        android.telephony.ims.aidl.IImsRcsController$Stub$Proxy r0;

        r0 := @this: android.telephony.ims.aidl.IImsRcsController$Stub$Proxy;

        return "android.telephony.ims.aidl.IImsRcsController";
    }

    public int getUcePublishState(int) throws android.os.RemoteException
    {
        android.telephony.ims.aidl.IImsRcsController$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.telephony.ims.aidl.IImsRcsController $r5, $r6;
        java.lang.Throwable $r7;
        int i0, i1, i2;

        r0 := @this: android.telephony.ims.aidl.IImsRcsController$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.telephony.ims.aidl.IImsRcsController");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<android.telephony.ims.aidl.IImsRcsController$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(10, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.telephony.ims.aidl.IImsRcsController$Stub: android.telephony.ims.aidl.IImsRcsController getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.telephony.ims.aidl.IImsRcsController$Stub: android.telephony.ims.aidl.IImsRcsController getDefaultImpl()>();

        i1 = interfaceinvoke $r6.<android.telephony.ims.aidl.IImsRcsController: int getUcePublishState(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i1;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i2 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i2;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public boolean isAvailable(int, int) throws android.os.RemoteException
    {
        android.telephony.ims.aidl.IImsRcsController$Stub$Proxy r0;
        int i0, i1, i2;
        android.os.Parcel r1, r2;
        boolean $z0, z1, z2;
        android.telephony.ims.aidl.IImsRcsController $r3, $r4;
        java.lang.Throwable $r5;
        android.os.IBinder r6;

        r0 := @this: android.telephony.ims.aidl.IImsRcsController$Stub$Proxy;

        i1 := @parameter0: int;

        i0 := @parameter1: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.telephony.ims.aidl.IImsRcsController");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        r6 = r0.<android.telephony.ims.aidl.IImsRcsController$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(8, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r3 = staticinvoke <android.telephony.ims.aidl.IImsRcsController$Stub: android.telephony.ims.aidl.IImsRcsController getDefaultImpl()>();

        if $r3 == null goto label5;

        $r4 = staticinvoke <android.telephony.ims.aidl.IImsRcsController$Stub: android.telephony.ims.aidl.IImsRcsController getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<android.telephony.ims.aidl.IImsRcsController: boolean isAvailable(int,int)>(i1, i0);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i2 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i2 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public boolean isCapable(int, int, int) throws android.os.RemoteException
    {
        android.telephony.ims.aidl.IImsRcsController$Stub$Proxy r0;
        int i0, i1, i2, i3;
        android.os.Parcel r1, r2;
        boolean $z0, z1, z2;
        android.telephony.ims.aidl.IImsRcsController $r3, $r4;
        java.lang.Throwable $r5;
        android.os.IBinder r6;

        r0 := @this: android.telephony.ims.aidl.IImsRcsController$Stub$Proxy;

        i2 := @parameter0: int;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.telephony.ims.aidl.IImsRcsController");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i2);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        r6 = r0.<android.telephony.ims.aidl.IImsRcsController$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(7, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r3 = staticinvoke <android.telephony.ims.aidl.IImsRcsController$Stub: android.telephony.ims.aidl.IImsRcsController getDefaultImpl()>();

        if $r3 == null goto label5;

        $r4 = staticinvoke <android.telephony.ims.aidl.IImsRcsController$Stub: android.telephony.ims.aidl.IImsRcsController getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<android.telephony.ims.aidl.IImsRcsController: boolean isCapable(int,int,int)>(i2, i0, i1);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i3 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i3 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public boolean isUceSettingEnabled(int, java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        android.telephony.ims.aidl.IImsRcsController$Stub$Proxy r0;
        java.lang.String r1, r8;
        android.os.Parcel r2, r3;
        android.os.IBinder r4;
        boolean $z0, z1, z2;
        android.telephony.ims.aidl.IImsRcsController $r5, $r6;
        java.lang.Throwable $r7;
        int i0, i1;

        r0 := @this: android.telephony.ims.aidl.IImsRcsController$Stub$Proxy;

        i0 := @parameter0: int;

        r8 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.telephony.ims.aidl.IImsRcsController");

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r8);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        r4 = r0.<android.telephony.ims.aidl.IImsRcsController$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(11, r2, r3, 0);

        if $z0 != 0 goto label5;

        $r5 = staticinvoke <android.telephony.ims.aidl.IImsRcsController$Stub: android.telephony.ims.aidl.IImsRcsController getDefaultImpl()>();

        if $r5 == null goto label5;

        $r6 = staticinvoke <android.telephony.ims.aidl.IImsRcsController$Stub: android.telephony.ims.aidl.IImsRcsController getDefaultImpl()>();

        z2 = interfaceinvoke $r6.<android.telephony.ims.aidl.IImsRcsController: boolean isUceSettingEnabled(int,java.lang.String,java.lang.String)>(i0, r8, r1);

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r3.<android.os.Parcel: int readInt()>();

     label6:
        if i1 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public void registerImsRegistrationCallback(int, android.telephony.ims.aidl.IImsRegistrationCallback) throws android.os.RemoteException
    {
        android.telephony.ims.aidl.IImsRcsController$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r8;
        boolean $z0;
        android.telephony.ims.aidl.IImsRcsController $r4, $r5;
        java.lang.Throwable $r6;
        android.telephony.ims.aidl.IImsRegistrationCallback r7;

        r0 := @this: android.telephony.ims.aidl.IImsRcsController$Stub$Proxy;

        i0 := @parameter0: int;

        r7 := @parameter1: android.telephony.ims.aidl.IImsRegistrationCallback;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.telephony.ims.aidl.IImsRcsController");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

     label02:
        if r7 == null goto label05;

     label03:
        r8 = interfaceinvoke r7.<android.telephony.ims.aidl.IImsRegistrationCallback: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r8 = null;

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r8);

        $r3 = r0.<android.telephony.ims.aidl.IImsRcsController$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.telephony.ims.aidl.IImsRcsController$Stub: android.telephony.ims.aidl.IImsRcsController getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.telephony.ims.aidl.IImsRcsController$Stub: android.telephony.ims.aidl.IImsRcsController getDefaultImpl()>();

        interfaceinvoke $r5.<android.telephony.ims.aidl.IImsRcsController: void registerImsRegistrationCallback(int,android.telephony.ims.aidl.IImsRegistrationCallback)>(i0, r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void registerRcsAvailabilityCallback(int, android.telephony.ims.aidl.IImsCapabilityCallback) throws android.os.RemoteException
    {
        android.telephony.ims.aidl.IImsRcsController$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r8;
        boolean $z0;
        android.telephony.ims.aidl.IImsRcsController $r4, $r5;
        java.lang.Throwable $r6;
        android.telephony.ims.aidl.IImsCapabilityCallback r7;

        r0 := @this: android.telephony.ims.aidl.IImsRcsController$Stub$Proxy;

        i0 := @parameter0: int;

        r7 := @parameter1: android.telephony.ims.aidl.IImsCapabilityCallback;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.telephony.ims.aidl.IImsRcsController");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

     label02:
        if r7 == null goto label05;

     label03:
        r8 = interfaceinvoke r7.<android.telephony.ims.aidl.IImsCapabilityCallback: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r8 = null;

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r8);

        $r3 = r0.<android.telephony.ims.aidl.IImsRcsController$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(5, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.telephony.ims.aidl.IImsRcsController$Stub: android.telephony.ims.aidl.IImsRcsController getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.telephony.ims.aidl.IImsRcsController$Stub: android.telephony.ims.aidl.IImsRcsController getDefaultImpl()>();

        interfaceinvoke $r5.<android.telephony.ims.aidl.IImsRcsController: void registerRcsAvailabilityCallback(int,android.telephony.ims.aidl.IImsCapabilityCallback)>(i0, r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void requestCapabilities(int, java.lang.String, java.lang.String, java.util.List, android.telephony.ims.aidl.IRcsUceControllerCallback) throws android.os.RemoteException
    {
        android.telephony.ims.aidl.IImsRcsController$Stub$Proxy r0;
        int i0;
        java.lang.String r1, r10;
        java.util.List r2;
        android.telephony.ims.aidl.IRcsUceControllerCallback r3;
        android.os.Parcel r4, r5;
        android.os.IBinder $r6, r11;
        boolean $z0;
        android.telephony.ims.aidl.IImsRcsController $r7, $r8;
        java.lang.Throwable $r9;

        r0 := @this: android.telephony.ims.aidl.IImsRcsController$Stub$Proxy;

        i0 := @parameter0: int;

        r10 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

        r2 := @parameter3: java.util.List;

        r3 := @parameter4: android.telephony.ims.aidl.IRcsUceControllerCallback;

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r5 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r4.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.telephony.ims.aidl.IImsRcsController");

        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r4.<android.os.Parcel: void writeString(java.lang.String)>(r10);

        virtualinvoke r4.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        virtualinvoke r4.<android.os.Parcel: void writeTypedList(java.util.List)>(r2);

     label02:
        if r3 == null goto label05;

     label03:
        r11 = interfaceinvoke r3.<android.telephony.ims.aidl.IRcsUceControllerCallback: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r11 = null;

     label06:
        virtualinvoke r4.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r11);

        $r6 = r0.<android.telephony.ims.aidl.IImsRcsController$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(9, r4, r5, 0);

        if $z0 != 0 goto label08;

        $r7 = staticinvoke <android.telephony.ims.aidl.IImsRcsController$Stub: android.telephony.ims.aidl.IImsRcsController getDefaultImpl()>();

        if $r7 == null goto label08;

        $r8 = staticinvoke <android.telephony.ims.aidl.IImsRcsController$Stub: android.telephony.ims.aidl.IImsRcsController getDefaultImpl()>();

        interfaceinvoke $r8.<android.telephony.ims.aidl.IImsRcsController: void requestCapabilities(int,java.lang.String,java.lang.String,java.util.List,android.telephony.ims.aidl.IRcsUceControllerCallback)>(i0, r10, r1, r2, r3);

     label07:
        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r5.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r9 := @caughtexception;

        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        throw $r9;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void setUceSettingEnabled(int, boolean) throws android.os.RemoteException
    {
        android.telephony.ims.aidl.IImsRcsController$Stub$Proxy r0;
        int i0;
        boolean z0, $z1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        android.telephony.ims.aidl.IImsRcsController $r5, $r6;
        java.lang.Throwable $r7;
        byte b1;

        r0 := @this: android.telephony.ims.aidl.IImsRcsController$Stub$Proxy;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.telephony.ims.aidl.IImsRcsController");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

     label2:
        if z0 == 0 goto label3;

        b1 = 1;

        goto label4;

     label3:
        b1 = 0;

     label4:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b1);

        $r4 = r0.<android.telephony.ims.aidl.IImsRcsController$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(12, r1, r2, 0);

        if $z1 != 0 goto label6;

        $r5 = staticinvoke <android.telephony.ims.aidl.IImsRcsController$Stub: android.telephony.ims.aidl.IImsRcsController getDefaultImpl()>();

        if $r5 == null goto label6;

        $r6 = staticinvoke <android.telephony.ims.aidl.IImsRcsController$Stub: android.telephony.ims.aidl.IImsRcsController getDefaultImpl()>();

        interfaceinvoke $r6.<android.telephony.ims.aidl.IImsRcsController: void setUceSettingEnabled(int,boolean)>(i0, z0);

     label5:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label6:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label8:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label4 to label5 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
    }

    public void unregisterImsRegistrationCallback(int, android.telephony.ims.aidl.IImsRegistrationCallback) throws android.os.RemoteException
    {
        android.telephony.ims.aidl.IImsRcsController$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r8;
        boolean $z0;
        android.telephony.ims.aidl.IImsRcsController $r4, $r5;
        java.lang.Throwable $r6;
        android.telephony.ims.aidl.IImsRegistrationCallback r7;

        r0 := @this: android.telephony.ims.aidl.IImsRcsController$Stub$Proxy;

        i0 := @parameter0: int;

        r7 := @parameter1: android.telephony.ims.aidl.IImsRegistrationCallback;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.telephony.ims.aidl.IImsRcsController");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

     label02:
        if r7 == null goto label05;

     label03:
        r8 = interfaceinvoke r7.<android.telephony.ims.aidl.IImsRegistrationCallback: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r8 = null;

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r8);

        $r3 = r0.<android.telephony.ims.aidl.IImsRcsController$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(2, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.telephony.ims.aidl.IImsRcsController$Stub: android.telephony.ims.aidl.IImsRcsController getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.telephony.ims.aidl.IImsRcsController$Stub: android.telephony.ims.aidl.IImsRcsController getDefaultImpl()>();

        interfaceinvoke $r5.<android.telephony.ims.aidl.IImsRcsController: void unregisterImsRegistrationCallback(int,android.telephony.ims.aidl.IImsRegistrationCallback)>(i0, r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void unregisterRcsAvailabilityCallback(int, android.telephony.ims.aidl.IImsCapabilityCallback) throws android.os.RemoteException
    {
        android.telephony.ims.aidl.IImsRcsController$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r8;
        boolean $z0;
        android.telephony.ims.aidl.IImsRcsController $r4, $r5;
        java.lang.Throwable $r6;
        android.telephony.ims.aidl.IImsCapabilityCallback r7;

        r0 := @this: android.telephony.ims.aidl.IImsRcsController$Stub$Proxy;

        i0 := @parameter0: int;

        r7 := @parameter1: android.telephony.ims.aidl.IImsCapabilityCallback;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.telephony.ims.aidl.IImsRcsController");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

     label02:
        if r7 == null goto label05;

     label03:
        r8 = interfaceinvoke r7.<android.telephony.ims.aidl.IImsCapabilityCallback: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r8 = null;

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r8);

        $r3 = r0.<android.telephony.ims.aidl.IImsRcsController$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(6, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.telephony.ims.aidl.IImsRcsController$Stub: android.telephony.ims.aidl.IImsRcsController getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.telephony.ims.aidl.IImsRcsController$Stub: android.telephony.ims.aidl.IImsRcsController getDefaultImpl()>();

        interfaceinvoke $r5.<android.telephony.ims.aidl.IImsRcsController: void unregisterRcsAvailabilityCallback(int,android.telephony.ims.aidl.IImsCapabilityCallback)>(i0, r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }
}
