class android.telephony.ims.aidl.IImsRcsFeature$Stub$Proxy extends java.lang.Object implements android.telephony.ims.aidl.IImsRcsFeature
{
    public static android.telephony.ims.aidl.IImsRcsFeature sDefaultImpl;
    private android.os.IBinder mRemote;

    void <init>(android.os.IBinder)
    {
        android.telephony.ims.aidl.IImsRcsFeature$Stub$Proxy r0;
        android.os.IBinder r1;

        r0 := @this: android.telephony.ims.aidl.IImsRcsFeature$Stub$Proxy;

        r1 := @parameter0: android.os.IBinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.telephony.ims.aidl.IImsRcsFeature$Stub$Proxy: android.os.IBinder mRemote> = r1;

        return;
    }

    public void addCapabilityCallback(android.telephony.ims.aidl.IImsCapabilityCallback) throws android.os.RemoteException
    {
        android.telephony.ims.aidl.IImsRcsFeature$Stub$Proxy r0;
        android.os.Parcel r1;
        android.os.IBinder $r2, r7;
        boolean $z0;
        android.telephony.ims.aidl.IImsRcsFeature $r3, $r4;
        java.lang.Throwable $r5;
        android.telephony.ims.aidl.IImsCapabilityCallback r6;

        r0 := @this: android.telephony.ims.aidl.IImsRcsFeature$Stub$Proxy;

        r6 := @parameter0: android.telephony.ims.aidl.IImsCapabilityCallback;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.telephony.ims.aidl.IImsRcsFeature");

     label2:
        if r6 == null goto label5;

     label3:
        r7 = interfaceinvoke r6.<android.telephony.ims.aidl.IImsCapabilityCallback: android.os.IBinder asBinder()>();

     label4:
        goto label6;

     label5:
        r7 = null;

     label6:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r7);

        $r2 = r0.<android.telephony.ims.aidl.IImsRcsFeature$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r2.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(4, r1, null, 1);

        if $z0 != 0 goto label8;

        $r3 = staticinvoke <android.telephony.ims.aidl.IImsRcsFeature$Stub: android.telephony.ims.aidl.IImsRcsFeature getDefaultImpl()>();

        if $r3 == null goto label8;

        $r4 = staticinvoke <android.telephony.ims.aidl.IImsRcsFeature$Stub: android.telephony.ims.aidl.IImsRcsFeature getDefaultImpl()>();

        interfaceinvoke $r4.<android.telephony.ims.aidl.IImsRcsFeature: void addCapabilityCallback(android.telephony.ims.aidl.IImsCapabilityCallback)>(r6);

     label7:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label8:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label9:
        $r5 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.Throwable from label3 to label4 with label9;
        catch java.lang.Throwable from label6 to label7 with label9;
    }

    public android.os.IBinder asBinder()
    {
        android.telephony.ims.aidl.IImsRcsFeature$Stub$Proxy r0;
        android.os.IBinder $r1;

        r0 := @this: android.telephony.ims.aidl.IImsRcsFeature$Stub$Proxy;

        $r1 = r0.<android.telephony.ims.aidl.IImsRcsFeature$Stub$Proxy: android.os.IBinder mRemote>;

        return $r1;
    }

    public void changeCapabilitiesConfiguration(android.telephony.ims.feature.CapabilityChangeRequest, android.telephony.ims.aidl.IImsCapabilityCallback) throws android.os.RemoteException
    {
        android.telephony.ims.aidl.IImsRcsFeature$Stub$Proxy r0;
        android.telephony.ims.aidl.IImsCapabilityCallback r1;
        android.os.Parcel r2;
        android.os.IBinder $r3, r8;
        boolean $z0;
        android.telephony.ims.aidl.IImsRcsFeature $r4, $r5;
        java.lang.Throwable $r6;
        android.telephony.ims.feature.CapabilityChangeRequest r7;

        r0 := @this: android.telephony.ims.aidl.IImsRcsFeature$Stub$Proxy;

        r7 := @parameter0: android.telephony.ims.feature.CapabilityChangeRequest;

        r1 := @parameter1: android.telephony.ims.aidl.IImsCapabilityCallback;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.telephony.ims.aidl.IImsRcsFeature");

     label02:
        if r7 == null goto label05;

     label03:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r7.<android.telephony.ims.feature.CapabilityChangeRequest: void writeToParcel(android.os.Parcel,int)>(r2, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        if r1 == null goto label09;

     label07:
        r8 = interfaceinvoke r1.<android.telephony.ims.aidl.IImsCapabilityCallback: android.os.IBinder asBinder()>();

     label08:
        goto label10;

     label09:
        r8 = null;

     label10:
        virtualinvoke r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r8);

        $r3 = r0.<android.telephony.ims.aidl.IImsRcsFeature$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(6, r2, null, 1);

        if $z0 != 0 goto label12;

        $r4 = staticinvoke <android.telephony.ims.aidl.IImsRcsFeature$Stub: android.telephony.ims.aidl.IImsRcsFeature getDefaultImpl()>();

        if $r4 == null goto label12;

        $r5 = staticinvoke <android.telephony.ims.aidl.IImsRcsFeature$Stub: android.telephony.ims.aidl.IImsRcsFeature getDefaultImpl()>();

        interfaceinvoke $r5.<android.telephony.ims.aidl.IImsRcsFeature: void changeCapabilitiesConfiguration(android.telephony.ims.feature.CapabilityChangeRequest,android.telephony.ims.aidl.IImsCapabilityCallback)>(r7, r1);

     label11:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label12:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label13:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label03 to label04 with label13;
        catch java.lang.Throwable from label05 to label06 with label13;
        catch java.lang.Throwable from label07 to label08 with label13;
        catch java.lang.Throwable from label10 to label11 with label13;
    }

    public int getFeatureState() throws android.os.RemoteException
    {
        android.telephony.ims.aidl.IImsRcsFeature$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.telephony.ims.aidl.IImsRcsFeature $r5, $r6;
        java.lang.Throwable $r7;
        int i0, i1;

        r0 := @this: android.telephony.ims.aidl.IImsRcsFeature$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.telephony.ims.aidl.IImsRcsFeature");

        $r4 = r0.<android.telephony.ims.aidl.IImsRcsFeature$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(3, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.telephony.ims.aidl.IImsRcsFeature$Stub: android.telephony.ims.aidl.IImsRcsFeature getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.telephony.ims.aidl.IImsRcsFeature$Stub: android.telephony.ims.aidl.IImsRcsFeature getDefaultImpl()>();

        i0 = interfaceinvoke $r6.<android.telephony.ims.aidl.IImsRcsFeature: int getFeatureState()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i0;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i1;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public java.lang.String getInterfaceDescriptor()
    {
        android.telephony.ims.aidl.IImsRcsFeature$Stub$Proxy r0;

        r0 := @this: android.telephony.ims.aidl.IImsRcsFeature$Stub$Proxy;

        return "android.telephony.ims.aidl.IImsRcsFeature";
    }

    public void queryCapabilityConfiguration(int, int, android.telephony.ims.aidl.IImsCapabilityCallback) throws android.os.RemoteException
    {
        android.telephony.ims.aidl.IImsRcsFeature$Stub$Proxy r0;
        int i0, i1;
        android.os.Parcel r1;
        android.os.IBinder $r2, r7;
        boolean $z0;
        android.telephony.ims.aidl.IImsRcsFeature $r3, $r4;
        java.lang.Throwable $r5;
        android.telephony.ims.aidl.IImsCapabilityCallback r6;

        r0 := @this: android.telephony.ims.aidl.IImsRcsFeature$Stub$Proxy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r6 := @parameter2: android.telephony.ims.aidl.IImsCapabilityCallback;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.telephony.ims.aidl.IImsRcsFeature");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

     label2:
        if r6 == null goto label5;

     label3:
        r7 = interfaceinvoke r6.<android.telephony.ims.aidl.IImsCapabilityCallback: android.os.IBinder asBinder()>();

     label4:
        goto label6;

     label5:
        r7 = null;

     label6:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r7);

        $r2 = r0.<android.telephony.ims.aidl.IImsRcsFeature$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r2.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(7, r1, null, 1);

        if $z0 != 0 goto label8;

        $r3 = staticinvoke <android.telephony.ims.aidl.IImsRcsFeature$Stub: android.telephony.ims.aidl.IImsRcsFeature getDefaultImpl()>();

        if $r3 == null goto label8;

        $r4 = staticinvoke <android.telephony.ims.aidl.IImsRcsFeature$Stub: android.telephony.ims.aidl.IImsRcsFeature getDefaultImpl()>();

        interfaceinvoke $r4.<android.telephony.ims.aidl.IImsRcsFeature: void queryCapabilityConfiguration(int,int,android.telephony.ims.aidl.IImsCapabilityCallback)>(i0, i1, r6);

     label7:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label8:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label9:
        $r5 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.Throwable from label3 to label4 with label9;
        catch java.lang.Throwable from label6 to label7 with label9;
    }

    public int queryCapabilityStatus() throws android.os.RemoteException
    {
        android.telephony.ims.aidl.IImsRcsFeature$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.telephony.ims.aidl.IImsRcsFeature $r5, $r6;
        java.lang.Throwable $r7;
        int i0, i1;

        r0 := @this: android.telephony.ims.aidl.IImsRcsFeature$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.telephony.ims.aidl.IImsRcsFeature");

        $r4 = r0.<android.telephony.ims.aidl.IImsRcsFeature$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(2, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.telephony.ims.aidl.IImsRcsFeature$Stub: android.telephony.ims.aidl.IImsRcsFeature getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.telephony.ims.aidl.IImsRcsFeature$Stub: android.telephony.ims.aidl.IImsRcsFeature getDefaultImpl()>();

        i0 = interfaceinvoke $r6.<android.telephony.ims.aidl.IImsRcsFeature: int queryCapabilityStatus()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i0;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i1;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void removeCapabilityCallback(android.telephony.ims.aidl.IImsCapabilityCallback) throws android.os.RemoteException
    {
        android.telephony.ims.aidl.IImsRcsFeature$Stub$Proxy r0;
        android.os.Parcel r1;
        android.os.IBinder $r2, r7;
        boolean $z0;
        android.telephony.ims.aidl.IImsRcsFeature $r3, $r4;
        java.lang.Throwable $r5;
        android.telephony.ims.aidl.IImsCapabilityCallback r6;

        r0 := @this: android.telephony.ims.aidl.IImsRcsFeature$Stub$Proxy;

        r6 := @parameter0: android.telephony.ims.aidl.IImsCapabilityCallback;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.telephony.ims.aidl.IImsRcsFeature");

     label2:
        if r6 == null goto label5;

     label3:
        r7 = interfaceinvoke r6.<android.telephony.ims.aidl.IImsCapabilityCallback: android.os.IBinder asBinder()>();

     label4:
        goto label6;

     label5:
        r7 = null;

     label6:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r7);

        $r2 = r0.<android.telephony.ims.aidl.IImsRcsFeature$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r2.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(5, r1, null, 1);

        if $z0 != 0 goto label8;

        $r3 = staticinvoke <android.telephony.ims.aidl.IImsRcsFeature$Stub: android.telephony.ims.aidl.IImsRcsFeature getDefaultImpl()>();

        if $r3 == null goto label8;

        $r4 = staticinvoke <android.telephony.ims.aidl.IImsRcsFeature$Stub: android.telephony.ims.aidl.IImsRcsFeature getDefaultImpl()>();

        interfaceinvoke $r4.<android.telephony.ims.aidl.IImsRcsFeature: void removeCapabilityCallback(android.telephony.ims.aidl.IImsCapabilityCallback)>(r6);

     label7:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label8:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label9:
        $r5 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.Throwable from label3 to label4 with label9;
        catch java.lang.Throwable from label6 to label7 with label9;
    }

    public void requestCapabilities(java.util.List, int) throws android.os.RemoteException
    {
        android.telephony.ims.aidl.IImsRcsFeature$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1;
        android.os.IBinder $r2;
        boolean $z0;
        android.telephony.ims.aidl.IImsRcsFeature $r3, $r4;
        java.lang.Throwable $r5;
        java.util.List r6;

        r0 := @this: android.telephony.ims.aidl.IImsRcsFeature$Stub$Proxy;

        r6 := @parameter0: java.util.List;

        i0 := @parameter1: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.telephony.ims.aidl.IImsRcsFeature");

        virtualinvoke r1.<android.os.Parcel: void writeTypedList(java.util.List)>(r6);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r2 = r0.<android.telephony.ims.aidl.IImsRcsFeature$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r2.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(8, r1, null, 1);

        if $z0 != 0 goto label3;

        $r3 = staticinvoke <android.telephony.ims.aidl.IImsRcsFeature$Stub: android.telephony.ims.aidl.IImsRcsFeature getDefaultImpl()>();

        if $r3 == null goto label3;

        $r4 = staticinvoke <android.telephony.ims.aidl.IImsRcsFeature$Stub: android.telephony.ims.aidl.IImsRcsFeature getDefaultImpl()>();

        interfaceinvoke $r4.<android.telephony.ims.aidl.IImsRcsFeature: void requestCapabilities(java.util.List,int)>(r6, i0);

     label2:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label4:
        $r5 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public void respondToCapabilityRequest(java.lang.String, android.telephony.ims.RcsContactUceCapability, int) throws android.os.RemoteException
    {
        android.telephony.ims.aidl.IImsRcsFeature$Stub$Proxy r0;
        android.telephony.ims.RcsContactUceCapability r1;
        int i0;
        android.os.Parcel r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.telephony.ims.aidl.IImsRcsFeature $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7;

        r0 := @this: android.telephony.ims.aidl.IImsRcsFeature$Stub$Proxy;

        r7 := @parameter0: java.lang.String;

        r1 := @parameter1: android.telephony.ims.RcsContactUceCapability;

        i0 := @parameter2: int;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.telephony.ims.aidl.IImsRcsFeature");

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r7);

     label2:
        if r1 == null goto label5;

     label3:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<android.telephony.ims.RcsContactUceCapability: void writeToParcel(android.os.Parcel,int)>(r2, 0);

     label4:
        goto label6;

     label5:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label6:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

        $r3 = r0.<android.telephony.ims.aidl.IImsRcsFeature$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(11, r2, null, 1);

        if $z0 != 0 goto label8;

        $r4 = staticinvoke <android.telephony.ims.aidl.IImsRcsFeature$Stub: android.telephony.ims.aidl.IImsRcsFeature getDefaultImpl()>();

        if $r4 == null goto label8;

        $r5 = staticinvoke <android.telephony.ims.aidl.IImsRcsFeature$Stub: android.telephony.ims.aidl.IImsRcsFeature getDefaultImpl()>();

        interfaceinvoke $r5.<android.telephony.ims.aidl.IImsRcsFeature: void respondToCapabilityRequest(java.lang.String,android.telephony.ims.RcsContactUceCapability,int)>(r7, r1, i0);

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label8:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label9:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.Throwable from label3 to label4 with label9;
        catch java.lang.Throwable from label5 to label6 with label9;
        catch java.lang.Throwable from label6 to label7 with label9;
    }

    public void respondToCapabilityRequestWithError(android.net.Uri, int, java.lang.String, int) throws android.os.RemoteException
    {
        android.telephony.ims.aidl.IImsRcsFeature$Stub$Proxy r0;
        int i0, i1;
        java.lang.String r1;
        android.os.Parcel r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.telephony.ims.aidl.IImsRcsFeature $r4, $r5;
        java.lang.Throwable $r6;
        android.net.Uri r7;

        r0 := @this: android.telephony.ims.aidl.IImsRcsFeature$Stub$Proxy;

        r7 := @parameter0: android.net.Uri;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        i1 := @parameter3: int;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.telephony.ims.aidl.IImsRcsFeature");

     label2:
        if r7 == null goto label5;

     label3:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r7.<android.net.Uri: void writeToParcel(android.os.Parcel,int)>(r2, 0);

     label4:
        goto label6;

     label5:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label6:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i1);

        $r3 = r0.<android.telephony.ims.aidl.IImsRcsFeature$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(12, r2, null, 1);

        if $z0 != 0 goto label8;

        $r4 = staticinvoke <android.telephony.ims.aidl.IImsRcsFeature$Stub: android.telephony.ims.aidl.IImsRcsFeature getDefaultImpl()>();

        if $r4 == null goto label8;

        $r5 = staticinvoke <android.telephony.ims.aidl.IImsRcsFeature$Stub: android.telephony.ims.aidl.IImsRcsFeature getDefaultImpl()>();

        interfaceinvoke $r5.<android.telephony.ims.aidl.IImsRcsFeature: void respondToCapabilityRequestWithError(android.net.Uri,int,java.lang.String,int)>(r7, i0, r1, i1);

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label8:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label9:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.Throwable from label3 to label4 with label9;
        catch java.lang.Throwable from label5 to label6 with label9;
        catch java.lang.Throwable from label6 to label7 with label9;
    }

    public void sendCapabilityRequest(android.net.Uri, android.telephony.ims.RcsContactUceCapability, int) throws android.os.RemoteException
    {
        android.telephony.ims.aidl.IImsRcsFeature$Stub$Proxy r0;
        android.telephony.ims.RcsContactUceCapability r1;
        int i0;
        android.os.Parcel r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.telephony.ims.aidl.IImsRcsFeature $r4, $r5;
        java.lang.Throwable $r6;
        android.net.Uri r7;

        r0 := @this: android.telephony.ims.aidl.IImsRcsFeature$Stub$Proxy;

        r7 := @parameter0: android.net.Uri;

        r1 := @parameter1: android.telephony.ims.RcsContactUceCapability;

        i0 := @parameter2: int;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.telephony.ims.aidl.IImsRcsFeature");

     label02:
        if r7 == null goto label05;

     label03:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r7.<android.net.Uri: void writeToParcel(android.os.Parcel,int)>(r2, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        if r1 == null goto label09;

     label07:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<android.telephony.ims.RcsContactUceCapability: void writeToParcel(android.os.Parcel,int)>(r2, 0);

     label08:
        goto label10;

     label09:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label10:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

        $r3 = r0.<android.telephony.ims.aidl.IImsRcsFeature$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(10, r2, null, 1);

        if $z0 != 0 goto label12;

        $r4 = staticinvoke <android.telephony.ims.aidl.IImsRcsFeature$Stub: android.telephony.ims.aidl.IImsRcsFeature getDefaultImpl()>();

        if $r4 == null goto label12;

        $r5 = staticinvoke <android.telephony.ims.aidl.IImsRcsFeature$Stub: android.telephony.ims.aidl.IImsRcsFeature getDefaultImpl()>();

        interfaceinvoke $r5.<android.telephony.ims.aidl.IImsRcsFeature: void sendCapabilityRequest(android.net.Uri,android.telephony.ims.RcsContactUceCapability,int)>(r7, r1, i0);

     label11:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label12:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label13:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label03 to label04 with label13;
        catch java.lang.Throwable from label05 to label06 with label13;
        catch java.lang.Throwable from label07 to label08 with label13;
        catch java.lang.Throwable from label09 to label10 with label13;
        catch java.lang.Throwable from label10 to label11 with label13;
    }

    public void setListener(android.telephony.ims.aidl.IRcsFeatureListener) throws android.os.RemoteException
    {
        android.telephony.ims.aidl.IImsRcsFeature$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r8;
        boolean $z0;
        android.telephony.ims.aidl.IImsRcsFeature $r4, $r5;
        java.lang.Throwable $r6;
        android.telephony.ims.aidl.IRcsFeatureListener r7;

        r0 := @this: android.telephony.ims.aidl.IImsRcsFeature$Stub$Proxy;

        r7 := @parameter0: android.telephony.ims.aidl.IRcsFeatureListener;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.telephony.ims.aidl.IImsRcsFeature");

     label02:
        if r7 == null goto label05;

     label03:
        r8 = interfaceinvoke r7.<android.telephony.ims.aidl.IRcsFeatureListener: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r8 = null;

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r8);

        $r3 = r0.<android.telephony.ims.aidl.IImsRcsFeature$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.telephony.ims.aidl.IImsRcsFeature$Stub: android.telephony.ims.aidl.IImsRcsFeature getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.telephony.ims.aidl.IImsRcsFeature$Stub: android.telephony.ims.aidl.IImsRcsFeature getDefaultImpl()>();

        interfaceinvoke $r5.<android.telephony.ims.aidl.IImsRcsFeature: void setListener(android.telephony.ims.aidl.IRcsFeatureListener)>(r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void updateCapabilities(android.telephony.ims.RcsContactUceCapability, int) throws android.os.RemoteException
    {
        android.telephony.ims.aidl.IImsRcsFeature$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1;
        android.os.IBinder $r2;
        boolean $z0;
        android.telephony.ims.aidl.IImsRcsFeature $r3, $r4;
        java.lang.Throwable $r5;
        android.telephony.ims.RcsContactUceCapability r6;

        r0 := @this: android.telephony.ims.aidl.IImsRcsFeature$Stub$Proxy;

        r6 := @parameter0: android.telephony.ims.RcsContactUceCapability;

        i0 := @parameter1: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.telephony.ims.aidl.IImsRcsFeature");

     label2:
        if r6 == null goto label5;

     label3:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r6.<android.telephony.ims.RcsContactUceCapability: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label4:
        goto label6;

     label5:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label6:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r2 = r0.<android.telephony.ims.aidl.IImsRcsFeature$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r2.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(9, r1, null, 1);

        if $z0 != 0 goto label8;

        $r3 = staticinvoke <android.telephony.ims.aidl.IImsRcsFeature$Stub: android.telephony.ims.aidl.IImsRcsFeature getDefaultImpl()>();

        if $r3 == null goto label8;

        $r4 = staticinvoke <android.telephony.ims.aidl.IImsRcsFeature$Stub: android.telephony.ims.aidl.IImsRcsFeature getDefaultImpl()>();

        interfaceinvoke $r4.<android.telephony.ims.aidl.IImsRcsFeature: void updateCapabilities(android.telephony.ims.RcsContactUceCapability,int)>(r6, i0);

     label7:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label8:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label9:
        $r5 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.Throwable from label3 to label4 with label9;
        catch java.lang.Throwable from label5 to label6 with label9;
        catch java.lang.Throwable from label6 to label7 with label9;
    }
}
