public class android.telephony.ims.compat.stub.ImsConfigImplBase$ImsConfigStub extends com.android.ims.internal.IImsConfig$Stub
{
    android.content.Context mContext;
    java.lang.ref.WeakReference mImsConfigImplBaseWeakReference;
    private java.util.HashMap mProvisionedIntValue;
    private java.util.HashMap mProvisionedStringValue;

    public void <init>(android.telephony.ims.compat.stub.ImsConfigImplBase, android.content.Context)
    {
        android.telephony.ims.compat.stub.ImsConfigImplBase$ImsConfigStub r0;
        android.telephony.ims.compat.stub.ImsConfigImplBase r1;
        android.content.Context r2;
        java.util.HashMap $r3, $r4;
        java.lang.ref.WeakReference $r5;

        r0 := @this: android.telephony.ims.compat.stub.ImsConfigImplBase$ImsConfigStub;

        r1 := @parameter0: android.telephony.ims.compat.stub.ImsConfigImplBase;

        r2 := @parameter1: android.content.Context;

        specialinvoke r0.<com.android.ims.internal.IImsConfig$Stub: void <init>()>();

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        r0.<android.telephony.ims.compat.stub.ImsConfigImplBase$ImsConfigStub: java.util.HashMap mProvisionedIntValue> = $r3;

        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        r0.<android.telephony.ims.compat.stub.ImsConfigImplBase$ImsConfigStub: java.util.HashMap mProvisionedStringValue> = $r4;

        r0.<android.telephony.ims.compat.stub.ImsConfigImplBase$ImsConfigStub: android.content.Context mContext> = r2;

        $r5 = new java.lang.ref.WeakReference;

        specialinvoke $r5.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>(r1);

        r0.<android.telephony.ims.compat.stub.ImsConfigImplBase$ImsConfigStub: java.lang.ref.WeakReference mImsConfigImplBaseWeakReference> = $r5;

        return;
    }

    private android.telephony.ims.compat.stub.ImsConfigImplBase getImsConfigImpl() throws android.os.RemoteException
    {
        android.telephony.ims.compat.stub.ImsConfigImplBase$ImsConfigStub r0;
        android.telephony.ims.compat.stub.ImsConfigImplBase r1;
        java.lang.ref.WeakReference $r2;
        java.lang.Object $r3;
        android.os.RemoteException $r4;

        r0 := @this: android.telephony.ims.compat.stub.ImsConfigImplBase$ImsConfigStub;

        $r2 = r0.<android.telephony.ims.compat.stub.ImsConfigImplBase$ImsConfigStub: java.lang.ref.WeakReference mImsConfigImplBaseWeakReference>;

        $r3 = virtualinvoke $r2.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r1 = (android.telephony.ims.compat.stub.ImsConfigImplBase) $r3;

        if r1 == null goto label1;

        return r1;

     label1:
        $r4 = new android.os.RemoteException;

        specialinvoke $r4.<android.os.RemoteException: void <init>(java.lang.String)>("Fail to get ImsConfigImpl");

        throw $r4;
    }

    private void sendImsConfigChangedIntent(int, int)
    {
        android.telephony.ims.compat.stub.ImsConfigImplBase$ImsConfigStub r0;
        int i0, i1;
        java.lang.String $r1;

        r0 := @this: android.telephony.ims.compat.stub.ImsConfigImplBase$ImsConfigStub;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i1);

        specialinvoke r0.<android.telephony.ims.compat.stub.ImsConfigImplBase$ImsConfigStub: void sendImsConfigChangedIntent(int,java.lang.String)>(i0, $r1);

        return;
    }

    private void sendImsConfigChangedIntent(int, java.lang.String)
    {
        android.telephony.ims.compat.stub.ImsConfigImplBase$ImsConfigStub r0;
        int i0;
        android.content.Intent $r2;
        java.lang.String r5;
        android.content.Context r6;

        r0 := @this: android.telephony.ims.compat.stub.ImsConfigImplBase$ImsConfigStub;

        i0 := @parameter0: int;

        r5 := @parameter1: java.lang.String;

        $r2 = new android.content.Intent;

        specialinvoke $r2.<android.content.Intent: void <init>(java.lang.String)>("com.android.intent.action.IMS_CONFIG_CHANGED");

        virtualinvoke $r2.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("item", i0);

        virtualinvoke $r2.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("value", r5);

        r6 = r0.<android.telephony.ims.compat.stub.ImsConfigImplBase$ImsConfigStub: android.content.Context mContext>;

        if r6 == null goto label1;

        virtualinvoke r6.<android.content.Context: void sendBroadcast(android.content.Intent)>($r2);

     label1:
        return;
    }

    public void getFeatureValue(int, int, com.android.ims.ImsConfigListener) throws android.os.RemoteException
    {
        android.telephony.ims.compat.stub.ImsConfigImplBase$ImsConfigStub r0;
        int i0, i1;
        com.android.ims.ImsConfigListener r1;
        android.telephony.ims.compat.stub.ImsConfigImplBase $r2;

        r0 := @this: android.telephony.ims.compat.stub.ImsConfigImplBase$ImsConfigStub;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: com.android.ims.ImsConfigListener;

        $r2 = specialinvoke r0.<android.telephony.ims.compat.stub.ImsConfigImplBase$ImsConfigStub: android.telephony.ims.compat.stub.ImsConfigImplBase getImsConfigImpl()>();

        virtualinvoke $r2.<android.telephony.ims.compat.stub.ImsConfigImplBase: void getFeatureValue(int,int,com.android.ims.ImsConfigListener)>(i0, i1, r1);

        return;
    }

    public java.lang.String getProvisionedStringValue(int) throws android.os.RemoteException
    {
        android.telephony.ims.compat.stub.ImsConfigImplBase$ImsConfigStub r0;
        int i0;
        java.util.HashMap $r1, $r4;
        java.lang.Integer $r2, $r5;
        boolean $z0;
        android.telephony.ims.compat.stub.ImsConfigImplBase $r3;
        java.lang.Object $r6;
        java.lang.Throwable $r7;
        java.lang.String r8, r9;

        r0 := @this: android.telephony.ims.compat.stub.ImsConfigImplBase$ImsConfigStub;

        i0 := @parameter0: int;

        entermonitor r0;

     label1:
        $r1 = r0.<android.telephony.ims.compat.stub.ImsConfigImplBase$ImsConfigStub: java.util.HashMap mProvisionedIntValue>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $z0 = virtualinvoke $r1.<java.util.HashMap: boolean containsKey(java.lang.Object)>($r2);

        if $z0 == 0 goto label3;

        $r4 = r0.<android.telephony.ims.compat.stub.ImsConfigImplBase$ImsConfigStub: java.util.HashMap mProvisionedStringValue>;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r6 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r5);

        r8 = (java.lang.String) $r6;

     label2:
        exitmonitor r0;

        return r8;

     label3:
        $r3 = specialinvoke r0.<android.telephony.ims.compat.stub.ImsConfigImplBase$ImsConfigStub: android.telephony.ims.compat.stub.ImsConfigImplBase getImsConfigImpl()>();

        r9 = virtualinvoke $r3.<android.telephony.ims.compat.stub.ImsConfigImplBase: java.lang.String getProvisionedStringValue(int)>(i0);

     label4:
        if r9 == null goto label6;

     label5:
        virtualinvoke r0.<android.telephony.ims.compat.stub.ImsConfigImplBase$ImsConfigStub: void updateCachedValue(int,java.lang.String,boolean)>(i0, r9, 0);

     label6:
        exitmonitor r0;

        return r9;

     label7:
        $r7 := @caughtexception;

        exitmonitor r0;

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
    }

    public int getProvisionedValue(int) throws android.os.RemoteException
    {
        android.telephony.ims.compat.stub.ImsConfigImplBase$ImsConfigStub r0;
        int i0, i1, i2;
        java.util.HashMap $r2, $r5;
        java.lang.Integer $r3, $r6, $r8;
        boolean $z0;
        android.telephony.ims.compat.stub.ImsConfigImplBase $r4;
        java.lang.Object $r7;
        java.lang.Throwable $r9;

        r0 := @this: android.telephony.ims.compat.stub.ImsConfigImplBase$ImsConfigStub;

        i1 := @parameter0: int;

        entermonitor r0;

     label1:
        $r2 = r0.<android.telephony.ims.compat.stub.ImsConfigImplBase$ImsConfigStub: java.util.HashMap mProvisionedIntValue>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $z0 = virtualinvoke $r2.<java.util.HashMap: boolean containsKey(java.lang.Object)>($r3);

        if $z0 == 0 goto label3;

        $r5 = r0.<android.telephony.ims.compat.stub.ImsConfigImplBase$ImsConfigStub: java.util.HashMap mProvisionedIntValue>;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r7 = virtualinvoke $r5.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r6);

        $r8 = (java.lang.Integer) $r7;

        i2 = virtualinvoke $r8.<java.lang.Integer: int intValue()>();

     label2:
        exitmonitor r0;

        return i2;

     label3:
        $r4 = specialinvoke r0.<android.telephony.ims.compat.stub.ImsConfigImplBase$ImsConfigStub: android.telephony.ims.compat.stub.ImsConfigImplBase getImsConfigImpl()>();

        i0 = virtualinvoke $r4.<android.telephony.ims.compat.stub.ImsConfigImplBase: int getProvisionedValue(int)>(i1);

     label4:
        if i0 == -1 goto label6;

     label5:
        virtualinvoke r0.<android.telephony.ims.compat.stub.ImsConfigImplBase$ImsConfigStub: void updateCachedValue(int,int,boolean)>(i1, i0, 0);

     label6:
        exitmonitor r0;

        return i0;

     label7:
        $r9 := @caughtexception;

        exitmonitor r0;

        throw $r9;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
    }

    public void getVideoQuality(com.android.ims.ImsConfigListener) throws android.os.RemoteException
    {
        android.telephony.ims.compat.stub.ImsConfigImplBase$ImsConfigStub r0;
        com.android.ims.ImsConfigListener r1;
        android.telephony.ims.compat.stub.ImsConfigImplBase $r2;

        r0 := @this: android.telephony.ims.compat.stub.ImsConfigImplBase$ImsConfigStub;

        r1 := @parameter0: com.android.ims.ImsConfigListener;

        $r2 = specialinvoke r0.<android.telephony.ims.compat.stub.ImsConfigImplBase$ImsConfigStub: android.telephony.ims.compat.stub.ImsConfigImplBase getImsConfigImpl()>();

        virtualinvoke $r2.<android.telephony.ims.compat.stub.ImsConfigImplBase: void getVideoQuality(com.android.ims.ImsConfigListener)>(r1);

        return;
    }

    public boolean getVolteProvisioned() throws android.os.RemoteException
    {
        android.telephony.ims.compat.stub.ImsConfigImplBase$ImsConfigStub r0;
        android.telephony.ims.compat.stub.ImsConfigImplBase $r1;
        boolean $z0;

        r0 := @this: android.telephony.ims.compat.stub.ImsConfigImplBase$ImsConfigStub;

        $r1 = specialinvoke r0.<android.telephony.ims.compat.stub.ImsConfigImplBase$ImsConfigStub: android.telephony.ims.compat.stub.ImsConfigImplBase getImsConfigImpl()>();

        $z0 = virtualinvoke $r1.<android.telephony.ims.compat.stub.ImsConfigImplBase: boolean getVolteProvisioned()>();

        return $z0;
    }

    public void setFeatureValue(int, int, int, com.android.ims.ImsConfigListener) throws android.os.RemoteException
    {
        android.telephony.ims.compat.stub.ImsConfigImplBase$ImsConfigStub r0;
        int i0, i1, i2;
        com.android.ims.ImsConfigListener r1;
        android.telephony.ims.compat.stub.ImsConfigImplBase $r2;

        r0 := @this: android.telephony.ims.compat.stub.ImsConfigImplBase$ImsConfigStub;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r1 := @parameter3: com.android.ims.ImsConfigListener;

        $r2 = specialinvoke r0.<android.telephony.ims.compat.stub.ImsConfigImplBase$ImsConfigStub: android.telephony.ims.compat.stub.ImsConfigImplBase getImsConfigImpl()>();

        virtualinvoke $r2.<android.telephony.ims.compat.stub.ImsConfigImplBase: void setFeatureValue(int,int,int,com.android.ims.ImsConfigListener)>(i0, i1, i2, r1);

        return;
    }

    public int setProvisionedStringValue(int, java.lang.String) throws android.os.RemoteException
    {
        android.telephony.ims.compat.stub.ImsConfigImplBase$ImsConfigStub r0;
        int i0, i1;
        java.util.HashMap $r1;
        java.lang.Integer $r2;
        android.telephony.ims.compat.stub.ImsConfigImplBase $r4;
        java.lang.Throwable $r5;
        java.lang.String r6;

        r0 := @this: android.telephony.ims.compat.stub.ImsConfigImplBase$ImsConfigStub;

        i0 := @parameter0: int;

        r6 := @parameter1: java.lang.String;

        entermonitor r0;

     label1:
        $r1 = r0.<android.telephony.ims.compat.stub.ImsConfigImplBase$ImsConfigStub: java.util.HashMap mProvisionedStringValue>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        virtualinvoke $r1.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r2);

        $r4 = specialinvoke r0.<android.telephony.ims.compat.stub.ImsConfigImplBase$ImsConfigStub: android.telephony.ims.compat.stub.ImsConfigImplBase getImsConfigImpl()>();

        i1 = virtualinvoke $r4.<android.telephony.ims.compat.stub.ImsConfigImplBase: int setProvisionedStringValue(int,java.lang.String)>(i0, r6);

     label2:
        if i1 != 0 goto label4;

     label3:
        virtualinvoke r0.<android.telephony.ims.compat.stub.ImsConfigImplBase$ImsConfigStub: void updateCachedValue(int,java.lang.String,boolean)>(i0, r6, 1);

     label4:
        exitmonitor r0;

        return i1;

     label5:
        $r5 := @caughtexception;

        exitmonitor r0;

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public int setProvisionedValue(int, int) throws android.os.RemoteException
    {
        android.telephony.ims.compat.stub.ImsConfigImplBase$ImsConfigStub r0;
        int i0, i1, i2;
        java.util.HashMap $r1;
        java.lang.Integer $r2;
        android.telephony.ims.compat.stub.ImsConfigImplBase $r4;
        java.lang.String $r11;
        java.lang.Throwable $r12;
        java.lang.StringBuilder r13;

        r0 := @this: android.telephony.ims.compat.stub.ImsConfigImplBase$ImsConfigStub;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        entermonitor r0;

     label1:
        $r1 = r0.<android.telephony.ims.compat.stub.ImsConfigImplBase$ImsConfigStub: java.util.HashMap mProvisionedIntValue>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        virtualinvoke $r1.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r2);

        $r4 = specialinvoke r0.<android.telephony.ims.compat.stub.ImsConfigImplBase$ImsConfigStub: android.telephony.ims.compat.stub.ImsConfigImplBase getImsConfigImpl()>();

        i2 = virtualinvoke $r4.<android.telephony.ims.compat.stub.ImsConfigImplBase: int setProvisionedValue(int,int)>(i0, i1);

     label2:
        if i2 != 0 goto label5;

     label3:
        virtualinvoke r0.<android.telephony.ims.compat.stub.ImsConfigImplBase$ImsConfigStub: void updateCachedValue(int,int,boolean)>(i0, i1, 1);

     label4:
        goto label6;

     label5:
        r13 = new java.lang.StringBuilder;

        specialinvoke r13.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Set provision value of ");

        virtualinvoke r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        virtualinvoke r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        virtualinvoke r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" failed with error code ");

        virtualinvoke r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r11 = virtualinvoke r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ImsConfigImplBase", $r11);

     label6:
        exitmonitor r0;

        return i2;

     label7:
        $r12 := @caughtexception;

        exitmonitor r0;

        throw $r12;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
    }

    public void setVideoQuality(int, com.android.ims.ImsConfigListener) throws android.os.RemoteException
    {
        android.telephony.ims.compat.stub.ImsConfigImplBase$ImsConfigStub r0;
        int i0;
        com.android.ims.ImsConfigListener r1;
        android.telephony.ims.compat.stub.ImsConfigImplBase $r2;

        r0 := @this: android.telephony.ims.compat.stub.ImsConfigImplBase$ImsConfigStub;

        i0 := @parameter0: int;

        r1 := @parameter1: com.android.ims.ImsConfigListener;

        $r2 = specialinvoke r0.<android.telephony.ims.compat.stub.ImsConfigImplBase$ImsConfigStub: android.telephony.ims.compat.stub.ImsConfigImplBase getImsConfigImpl()>();

        virtualinvoke $r2.<android.telephony.ims.compat.stub.ImsConfigImplBase: void setVideoQuality(int,com.android.ims.ImsConfigListener)>(i0, r1);

        return;
    }

    protected void updateCachedValue(int, int, boolean)
    {
        android.telephony.ims.compat.stub.ImsConfigImplBase$ImsConfigStub r0;
        int i0, i1;
        boolean z0;
        java.util.HashMap $r2;
        java.lang.Integer $r3, $r4;
        java.lang.Throwable $r6;

        r0 := @this: android.telephony.ims.compat.stub.ImsConfigImplBase$ImsConfigStub;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        z0 := @parameter2: boolean;

        entermonitor r0;

     label1:
        $r2 = r0.<android.telephony.ims.compat.stub.ImsConfigImplBase$ImsConfigStub: java.util.HashMap mProvisionedIntValue>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        virtualinvoke $r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r4);

     label2:
        if z0 == 0 goto label4;

     label3:
        specialinvoke r0.<android.telephony.ims.compat.stub.ImsConfigImplBase$ImsConfigStub: void sendImsConfigChangedIntent(int,int)>(i0, i1);

     label4:
        exitmonitor r0;

        return;

     label5:
        $r6 := @caughtexception;

        exitmonitor r0;

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    protected void updateCachedValue(int, java.lang.String, boolean)
    {
        android.telephony.ims.compat.stub.ImsConfigImplBase$ImsConfigStub r0;
        int i0;
        boolean z0;
        java.util.HashMap $r1;
        java.lang.Integer $r2;
        java.lang.Throwable $r4;
        java.lang.String r5;

        r0 := @this: android.telephony.ims.compat.stub.ImsConfigImplBase$ImsConfigStub;

        i0 := @parameter0: int;

        r5 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        entermonitor r0;

     label1:
        $r1 = r0.<android.telephony.ims.compat.stub.ImsConfigImplBase$ImsConfigStub: java.util.HashMap mProvisionedStringValue>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        virtualinvoke $r1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, r5);

     label2:
        if z0 == 0 goto label4;

     label3:
        specialinvoke r0.<android.telephony.ims.compat.stub.ImsConfigImplBase$ImsConfigStub: void sendImsConfigChangedIntent(int,java.lang.String)>(i0, r5);

     label4:
        exitmonitor r0;

        return;

     label5:
        $r4 := @caughtexception;

        exitmonitor r0;

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }
}
