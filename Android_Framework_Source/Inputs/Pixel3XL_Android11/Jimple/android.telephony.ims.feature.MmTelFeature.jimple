public class android.telephony.ims.feature.MmTelFeature extends android.telephony.ims.feature.ImsFeature
{
    public static final java.lang.String EXTRA_IS_UNKNOWN_CALL;
    public static final java.lang.String EXTRA_IS_USSD;
    private static final java.lang.String LOG_TAG;
    public static final int PROCESS_CALL_CSFB;
    public static final int PROCESS_CALL_IMS;
    private final android.telephony.ims.aidl.IImsMmTelFeature mImsMMTelBinder;
    private android.telephony.ims.aidl.IImsMmTelListener mListener;

    public void <init>()
    {
        android.telephony.ims.feature.MmTelFeature r0;
        android.telephony.ims.feature.MmTelFeature$1 $r1;

        r0 := @this: android.telephony.ims.feature.MmTelFeature;

        specialinvoke r0.<android.telephony.ims.feature.ImsFeature: void <init>()>();

        $r1 = new android.telephony.ims.feature.MmTelFeature$1;

        specialinvoke $r1.<android.telephony.ims.feature.MmTelFeature$1: void <init>(android.telephony.ims.feature.MmTelFeature)>(r0);

        r0.<android.telephony.ims.feature.MmTelFeature: android.telephony.ims.aidl.IImsMmTelFeature mImsMMTelBinder> = $r1;

        return;
    }

    static void access$000(android.telephony.ims.feature.MmTelFeature, android.telephony.ims.aidl.IImsMmTelListener)
    {
        android.telephony.ims.feature.MmTelFeature r0;
        android.telephony.ims.aidl.IImsMmTelListener r1;

        r0 := @parameter0: android.telephony.ims.feature.MmTelFeature;

        r1 := @parameter1: android.telephony.ims.aidl.IImsMmTelListener;

        specialinvoke r0.<android.telephony.ims.feature.MmTelFeature: void setListener(android.telephony.ims.aidl.IImsMmTelListener)>(r1);

        return;
    }

    static void access$100(android.telephony.ims.feature.MmTelFeature, android.telephony.ims.aidl.IImsSmsListener)
    {
        android.telephony.ims.feature.MmTelFeature r0;
        android.telephony.ims.aidl.IImsSmsListener r1;

        r0 := @parameter0: android.telephony.ims.feature.MmTelFeature;

        r1 := @parameter1: android.telephony.ims.aidl.IImsSmsListener;

        specialinvoke r0.<android.telephony.ims.feature.MmTelFeature: void setSmsListener(android.telephony.ims.aidl.IImsSmsListener)>(r1);

        return;
    }

    static void access$200(android.telephony.ims.feature.MmTelFeature, int, int, java.lang.String, java.lang.String, boolean, byte[])
    {
        android.telephony.ims.feature.MmTelFeature r0;
        int i0, i1;
        java.lang.String r1, r2;
        boolean z0;
        byte[] r3;

        r0 := @parameter0: android.telephony.ims.feature.MmTelFeature;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 := @parameter3: java.lang.String;

        r2 := @parameter4: java.lang.String;

        z0 := @parameter5: boolean;

        r3 := @parameter6: byte[];

        specialinvoke r0.<android.telephony.ims.feature.MmTelFeature: void sendSms(int,int,java.lang.String,java.lang.String,boolean,byte[])>(i0, i1, r1, r2, z0, r3);

        return;
    }

    static void access$300(android.telephony.ims.feature.MmTelFeature, int, int, int)
    {
        android.telephony.ims.feature.MmTelFeature r0;
        int i0, i1, i2;

        r0 := @parameter0: android.telephony.ims.feature.MmTelFeature;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        specialinvoke r0.<android.telephony.ims.feature.MmTelFeature: void acknowledgeSms(int,int,int)>(i0, i1, i2);

        return;
    }

    static void access$400(android.telephony.ims.feature.MmTelFeature, int, int, int)
    {
        android.telephony.ims.feature.MmTelFeature r0;
        int i0, i1, i2;

        r0 := @parameter0: android.telephony.ims.feature.MmTelFeature;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        specialinvoke r0.<android.telephony.ims.feature.MmTelFeature: void acknowledgeSmsReport(int,int,int)>(i0, i1, i2);

        return;
    }

    static java.lang.String access$500(android.telephony.ims.feature.MmTelFeature)
    {
        android.telephony.ims.feature.MmTelFeature r0;
        java.lang.String $r1;

        r0 := @parameter0: android.telephony.ims.feature.MmTelFeature;

        $r1 = specialinvoke r0.<android.telephony.ims.feature.MmTelFeature: java.lang.String getSmsFormat()>();

        return $r1;
    }

    static void access$600(android.telephony.ims.feature.MmTelFeature)
    {
        android.telephony.ims.feature.MmTelFeature r0;

        r0 := @parameter0: android.telephony.ims.feature.MmTelFeature;

        specialinvoke r0.<android.telephony.ims.feature.MmTelFeature: void onSmsReady()>();

        return;
    }

    private void acknowledgeSms(int, int, int)
    {
        android.telephony.ims.feature.MmTelFeature r0;
        int i0, i1, i2;
        android.telephony.ims.stub.ImsSmsImplBase $r1;

        r0 := @this: android.telephony.ims.feature.MmTelFeature;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $r1 = virtualinvoke r0.<android.telephony.ims.feature.MmTelFeature: android.telephony.ims.stub.ImsSmsImplBase getSmsImplementation()>();

        virtualinvoke $r1.<android.telephony.ims.stub.ImsSmsImplBase: void acknowledgeSms(int,int,int)>(i0, i1, i2);

        return;
    }

    private void acknowledgeSmsReport(int, int, int)
    {
        android.telephony.ims.feature.MmTelFeature r0;
        int i0, i1, i2;
        android.telephony.ims.stub.ImsSmsImplBase $r1;

        r0 := @this: android.telephony.ims.feature.MmTelFeature;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $r1 = virtualinvoke r0.<android.telephony.ims.feature.MmTelFeature: android.telephony.ims.stub.ImsSmsImplBase getSmsImplementation()>();

        virtualinvoke $r1.<android.telephony.ims.stub.ImsSmsImplBase: void acknowledgeSmsReport(int,int,int)>(i0, i1, i2);

        return;
    }

    private android.telephony.ims.aidl.IImsMmTelListener getListener()
    {
        android.telephony.ims.feature.MmTelFeature r0;
        java.lang.Object r1;
        java.lang.Throwable $r2;
        android.telephony.ims.aidl.IImsMmTelListener r3;

        r0 := @this: android.telephony.ims.feature.MmTelFeature;

        r1 = r0.<android.telephony.ims.feature.MmTelFeature: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        r3 = r0.<android.telephony.ims.feature.MmTelFeature: android.telephony.ims.aidl.IImsMmTelListener mListener>;

        exitmonitor r1;

     label2:
        return r3;

     label3:
        $r2 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    private java.lang.String getSmsFormat()
    {
        android.telephony.ims.feature.MmTelFeature r0;
        android.telephony.ims.stub.ImsSmsImplBase $r1;
        java.lang.String $r2;

        r0 := @this: android.telephony.ims.feature.MmTelFeature;

        $r1 = virtualinvoke r0.<android.telephony.ims.feature.MmTelFeature: android.telephony.ims.stub.ImsSmsImplBase getSmsImplementation()>();

        $r2 = virtualinvoke $r1.<android.telephony.ims.stub.ImsSmsImplBase: java.lang.String getSmsFormat()>();

        return $r2;
    }

    private void onSmsReady()
    {
        android.telephony.ims.feature.MmTelFeature r0;
        android.telephony.ims.stub.ImsSmsImplBase $r1;

        r0 := @this: android.telephony.ims.feature.MmTelFeature;

        $r1 = virtualinvoke r0.<android.telephony.ims.feature.MmTelFeature: android.telephony.ims.stub.ImsSmsImplBase getSmsImplementation()>();

        virtualinvoke $r1.<android.telephony.ims.stub.ImsSmsImplBase: void onReady()>();

        return;
    }

    private void sendSms(int, int, java.lang.String, java.lang.String, boolean, byte[])
    {
        android.telephony.ims.feature.MmTelFeature r0;
        int i0, i1;
        java.lang.String r1, r2;
        boolean z0;
        byte[] r3;
        android.telephony.ims.stub.ImsSmsImplBase $r4;

        r0 := @this: android.telephony.ims.feature.MmTelFeature;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        r2 := @parameter3: java.lang.String;

        z0 := @parameter4: boolean;

        r3 := @parameter5: byte[];

        $r4 = virtualinvoke r0.<android.telephony.ims.feature.MmTelFeature: android.telephony.ims.stub.ImsSmsImplBase getSmsImplementation()>();

        virtualinvoke $r4.<android.telephony.ims.stub.ImsSmsImplBase: void sendSms(int,int,java.lang.String,java.lang.String,boolean,byte[])>(i0, i1, r1, r2, z0, r3);

        return;
    }

    private void setListener(android.telephony.ims.aidl.IImsMmTelListener)
    {
        android.telephony.ims.feature.MmTelFeature r0;
        java.lang.Object r1;
        java.lang.Throwable $r2;
        android.telephony.ims.aidl.IImsMmTelListener r3;

        r0 := @this: android.telephony.ims.feature.MmTelFeature;

        r3 := @parameter0: android.telephony.ims.aidl.IImsMmTelListener;

        r1 = r0.<android.telephony.ims.feature.MmTelFeature: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        r0.<android.telephony.ims.feature.MmTelFeature: android.telephony.ims.aidl.IImsMmTelListener mListener> = r3;

     label2:
        if r3 == null goto label4;

     label3:
        virtualinvoke r0.<android.telephony.ims.feature.MmTelFeature: void onFeatureReady()>();

     label4:
        exitmonitor r1;

     label5:
        return;

     label6:
        $r2 := @caughtexception;

     label7:
        exitmonitor r1;

     label8:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    private void setSmsListener(android.telephony.ims.aidl.IImsSmsListener)
    {
        android.telephony.ims.feature.MmTelFeature r0;
        android.telephony.ims.aidl.IImsSmsListener r1;
        android.telephony.ims.stub.ImsSmsImplBase $r2;

        r0 := @this: android.telephony.ims.feature.MmTelFeature;

        r1 := @parameter0: android.telephony.ims.aidl.IImsSmsListener;

        $r2 = virtualinvoke r0.<android.telephony.ims.feature.MmTelFeature: android.telephony.ims.stub.ImsSmsImplBase getSmsImplementation()>();

        virtualinvoke $r2.<android.telephony.ims.stub.ImsSmsImplBase: void registerSmsListener(android.telephony.ims.aidl.IImsSmsListener)>(r1);

        return;
    }

    public void changeEnabledCapabilities(android.telephony.ims.feature.CapabilityChangeRequest, android.telephony.ims.feature.ImsFeature$CapabilityCallbackProxy)
    {
        android.telephony.ims.feature.MmTelFeature r0;
        android.telephony.ims.feature.CapabilityChangeRequest r1;
        android.telephony.ims.feature.ImsFeature$CapabilityCallbackProxy r2;

        r0 := @this: android.telephony.ims.feature.MmTelFeature;

        r1 := @parameter0: android.telephony.ims.feature.CapabilityChangeRequest;

        r2 := @parameter1: android.telephony.ims.feature.ImsFeature$CapabilityCallbackProxy;

        return;
    }

    public android.telephony.ims.ImsCallProfile createCallProfile(int, int)
    {
        android.telephony.ims.feature.MmTelFeature r0;
        int i0, i1;

        r0 := @this: android.telephony.ims.feature.MmTelFeature;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        return null;
    }

    public android.telephony.ims.stub.ImsCallSessionImplBase createCallSession(android.telephony.ims.ImsCallProfile)
    {
        android.telephony.ims.feature.MmTelFeature r0;
        android.telephony.ims.ImsCallProfile r1;

        r0 := @this: android.telephony.ims.feature.MmTelFeature;

        r1 := @parameter0: android.telephony.ims.ImsCallProfile;

        return null;
    }

    public com.android.ims.internal.IImsCallSession createCallSessionInterface(android.telephony.ims.ImsCallProfile) throws android.os.RemoteException
    {
        android.telephony.ims.feature.MmTelFeature r0;
        android.telephony.ims.ImsCallProfile r1;
        android.telephony.ims.stub.ImsCallSessionImplBase r2;
        com.android.ims.internal.IImsCallSession r3;

        r0 := @this: android.telephony.ims.feature.MmTelFeature;

        r1 := @parameter0: android.telephony.ims.ImsCallProfile;

        r2 = virtualinvoke r0.<android.telephony.ims.feature.MmTelFeature: android.telephony.ims.stub.ImsCallSessionImplBase createCallSession(android.telephony.ims.ImsCallProfile)>(r1);

        if r2 == null goto label1;

        r3 = virtualinvoke r2.<android.telephony.ims.stub.ImsCallSessionImplBase: com.android.ims.internal.IImsCallSession getServiceImpl()>();

        goto label2;

     label1:
        r3 = null;

     label2:
        return r3;
    }

    public volatile android.os.IInterface getBinder()
    {
        android.telephony.ims.feature.MmTelFeature r0;
        android.telephony.ims.aidl.IImsMmTelFeature $r1;

        r0 := @this: android.telephony.ims.feature.MmTelFeature;

        $r1 = virtualinvoke r0.<android.telephony.ims.feature.MmTelFeature: android.telephony.ims.aidl.IImsMmTelFeature getBinder()>();

        return $r1;
    }

    public final android.telephony.ims.aidl.IImsMmTelFeature getBinder()
    {
        android.telephony.ims.feature.MmTelFeature r0;
        android.telephony.ims.aidl.IImsMmTelFeature $r1;

        r0 := @this: android.telephony.ims.feature.MmTelFeature;

        $r1 = r0.<android.telephony.ims.feature.MmTelFeature: android.telephony.ims.aidl.IImsMmTelFeature mImsMMTelBinder>;

        return $r1;
    }

    public android.telephony.ims.stub.ImsEcbmImplBase getEcbm()
    {
        android.telephony.ims.feature.MmTelFeature r0;
        android.telephony.ims.stub.ImsEcbmImplBase $r1;

        r0 := @this: android.telephony.ims.feature.MmTelFeature;

        $r1 = new android.telephony.ims.stub.ImsEcbmImplBase;

        specialinvoke $r1.<android.telephony.ims.stub.ImsEcbmImplBase: void <init>()>();

        return $r1;
    }

    protected com.android.ims.internal.IImsEcbm getEcbmInterface() throws android.os.RemoteException
    {
        android.telephony.ims.feature.MmTelFeature r0;
        android.telephony.ims.stub.ImsEcbmImplBase r1;
        com.android.ims.internal.IImsEcbm r2;

        r0 := @this: android.telephony.ims.feature.MmTelFeature;

        r1 = virtualinvoke r0.<android.telephony.ims.feature.MmTelFeature: android.telephony.ims.stub.ImsEcbmImplBase getEcbm()>();

        if r1 == null goto label1;

        r2 = virtualinvoke r1.<android.telephony.ims.stub.ImsEcbmImplBase: com.android.ims.internal.IImsEcbm getImsEcbm()>();

        goto label2;

     label1:
        r2 = null;

     label2:
        return r2;
    }

    public android.telephony.ims.stub.ImsMultiEndpointImplBase getMultiEndpoint()
    {
        android.telephony.ims.feature.MmTelFeature r0;
        android.telephony.ims.stub.ImsMultiEndpointImplBase $r1;

        r0 := @this: android.telephony.ims.feature.MmTelFeature;

        $r1 = new android.telephony.ims.stub.ImsMultiEndpointImplBase;

        specialinvoke $r1.<android.telephony.ims.stub.ImsMultiEndpointImplBase: void <init>()>();

        return $r1;
    }

    public com.android.ims.internal.IImsMultiEndpoint getMultiEndpointInterface() throws android.os.RemoteException
    {
        android.telephony.ims.feature.MmTelFeature r0;
        android.telephony.ims.stub.ImsMultiEndpointImplBase r1;
        com.android.ims.internal.IImsMultiEndpoint r2;

        r0 := @this: android.telephony.ims.feature.MmTelFeature;

        r1 = virtualinvoke r0.<android.telephony.ims.feature.MmTelFeature: android.telephony.ims.stub.ImsMultiEndpointImplBase getMultiEndpoint()>();

        if r1 == null goto label1;

        r2 = virtualinvoke r1.<android.telephony.ims.stub.ImsMultiEndpointImplBase: com.android.ims.internal.IImsMultiEndpoint getIImsMultiEndpoint()>();

        goto label2;

     label1:
        r2 = null;

     label2:
        return r2;
    }

    public android.telephony.ims.stub.ImsSmsImplBase getSmsImplementation()
    {
        android.telephony.ims.feature.MmTelFeature r0;
        android.telephony.ims.stub.ImsSmsImplBase $r1;

        r0 := @this: android.telephony.ims.feature.MmTelFeature;

        $r1 = new android.telephony.ims.stub.ImsSmsImplBase;

        specialinvoke $r1.<android.telephony.ims.stub.ImsSmsImplBase: void <init>()>();

        return $r1;
    }

    public android.telephony.ims.stub.ImsUtImplBase getUt()
    {
        android.telephony.ims.feature.MmTelFeature r0;
        android.telephony.ims.stub.ImsUtImplBase $r1;

        r0 := @this: android.telephony.ims.feature.MmTelFeature;

        $r1 = new android.telephony.ims.stub.ImsUtImplBase;

        specialinvoke $r1.<android.telephony.ims.stub.ImsUtImplBase: void <init>()>();

        return $r1;
    }

    protected com.android.ims.internal.IImsUt getUtInterface() throws android.os.RemoteException
    {
        android.telephony.ims.feature.MmTelFeature r0;
        android.telephony.ims.stub.ImsUtImplBase r1;
        com.android.ims.internal.IImsUt r2;

        r0 := @this: android.telephony.ims.feature.MmTelFeature;

        r1 = virtualinvoke r0.<android.telephony.ims.feature.MmTelFeature: android.telephony.ims.stub.ImsUtImplBase getUt()>();

        if r1 == null goto label1;

        r2 = virtualinvoke r1.<android.telephony.ims.stub.ImsUtImplBase: com.android.ims.internal.IImsUt getInterface()>();

        goto label2;

     label1:
        r2 = null;

     label2:
        return r2;
    }

    public final void notifyCapabilitiesStatusChanged(android.telephony.ims.feature.MmTelFeature$MmTelCapabilities)
    {
        android.telephony.ims.feature.MmTelFeature r0;
        android.telephony.ims.feature.MmTelFeature$MmTelCapabilities r1;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: android.telephony.ims.feature.MmTelFeature;

        r1 := @parameter0: android.telephony.ims.feature.MmTelFeature$MmTelCapabilities;

        if r1 == null goto label1;

        specialinvoke r0.<android.telephony.ims.feature.ImsFeature: void notifyCapabilitiesStatusChanged(android.telephony.ims.feature.ImsFeature$Capabilities)>(r1);

        return;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("MmTelCapabilities must be non-null!");

        throw $r2;
    }

    public final void notifyIncomingCall(android.telephony.ims.stub.ImsCallSessionImplBase, android.os.Bundle)
    {
        android.telephony.ims.feature.MmTelFeature r0;
        android.os.Bundle r1;
        android.telephony.ims.aidl.IImsMmTelListener r2;
        java.lang.IllegalArgumentException $r3;
        java.lang.IllegalStateException $r4;
        com.android.ims.internal.IImsCallSession $r5;
        android.os.RemoteException $r6;
        java.lang.RuntimeException $r7;
        android.telephony.ims.stub.ImsCallSessionImplBase r8;

        r0 := @this: android.telephony.ims.feature.MmTelFeature;

        r8 := @parameter0: android.telephony.ims.stub.ImsCallSessionImplBase;

        r1 := @parameter1: android.os.Bundle;

        if r8 == null goto label5;

        if r1 == null goto label5;

        r2 = specialinvoke r0.<android.telephony.ims.feature.MmTelFeature: android.telephony.ims.aidl.IImsMmTelListener getListener()>();

        if r2 == null goto label4;

     label1:
        $r5 = virtualinvoke r8.<android.telephony.ims.stub.ImsCallSessionImplBase: com.android.ims.internal.IImsCallSession getServiceImpl()>();

        interfaceinvoke r2.<android.telephony.ims.aidl.IImsMmTelListener: void onIncomingCall(com.android.ims.internal.IImsCallSession,android.os.Bundle)>($r5, r1);

     label2:
        return;

     label3:
        $r6 := @caughtexception;

        $r7 = new java.lang.RuntimeException;

        specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r6);

        throw $r7;

     label4:
        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Session is not available.");

        throw $r4;

     label5:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("ImsCallSessionImplBase and Bundle can not be null.");

        throw $r3;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public final void notifyIncomingCallSession(com.android.ims.internal.IImsCallSession, android.os.Bundle)
    {
        android.telephony.ims.feature.MmTelFeature r0;
        android.os.Bundle r1;
        android.telephony.ims.aidl.IImsMmTelListener r2;
        java.lang.IllegalStateException $r3;
        android.os.RemoteException $r4;
        java.lang.RuntimeException $r5;
        com.android.ims.internal.IImsCallSession r6;

        r0 := @this: android.telephony.ims.feature.MmTelFeature;

        r6 := @parameter0: com.android.ims.internal.IImsCallSession;

        r1 := @parameter1: android.os.Bundle;

        r2 = specialinvoke r0.<android.telephony.ims.feature.MmTelFeature: android.telephony.ims.aidl.IImsMmTelListener getListener()>();

        if r2 == null goto label4;

     label1:
        interfaceinvoke r2.<android.telephony.ims.aidl.IImsMmTelListener: void onIncomingCall(com.android.ims.internal.IImsCallSession,android.os.Bundle)>(r6, r1);

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r4);

        throw $r5;

     label4:
        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Session is not available.");

        throw $r3;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public final void notifyRejectedCall(android.telephony.ims.ImsCallProfile, android.telephony.ims.ImsReasonInfo)
    {
        android.telephony.ims.feature.MmTelFeature r0;
        android.telephony.ims.ImsReasonInfo r1;
        android.telephony.ims.aidl.IImsMmTelListener r2;
        java.lang.IllegalArgumentException $r3;
        java.lang.IllegalStateException $r4;
        android.os.RemoteException $r5;
        java.lang.RuntimeException $r6;
        android.telephony.ims.ImsCallProfile r7;

        r0 := @this: android.telephony.ims.feature.MmTelFeature;

        r7 := @parameter0: android.telephony.ims.ImsCallProfile;

        r1 := @parameter1: android.telephony.ims.ImsReasonInfo;

        if r7 == null goto label5;

        if r1 == null goto label5;

        r2 = specialinvoke r0.<android.telephony.ims.feature.MmTelFeature: android.telephony.ims.aidl.IImsMmTelListener getListener()>();

        if r2 == null goto label4;

     label1:
        interfaceinvoke r2.<android.telephony.ims.aidl.IImsMmTelListener: void onRejectedCall(android.telephony.ims.ImsCallProfile,android.telephony.ims.ImsReasonInfo)>(r7, r1);

     label2:
        return;

     label3:
        $r5 := @caughtexception;

        $r6 = new java.lang.RuntimeException;

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r5);

        throw $r6;

     label4:
        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Session is not available.");

        throw $r4;

     label5:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("ImsCallProfile and ImsReasonInfo must not be null.");

        throw $r3;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public final void notifyVoiceMessageCountUpdate(int)
    {
        android.telephony.ims.feature.MmTelFeature r0;
        int i0;
        java.lang.IllegalStateException $r1;
        android.os.RemoteException $r2;
        java.lang.RuntimeException $r3;
        android.telephony.ims.aidl.IImsMmTelListener r4;

        r0 := @this: android.telephony.ims.feature.MmTelFeature;

        i0 := @parameter0: int;

        r4 = specialinvoke r0.<android.telephony.ims.feature.MmTelFeature: android.telephony.ims.aidl.IImsMmTelListener getListener()>();

        if r4 == null goto label4;

     label1:
        interfaceinvoke r4.<android.telephony.ims.aidl.IImsMmTelListener: void onVoiceMessageCountUpdate(int)>(i0);

     label2:
        return;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r2);

        throw $r3;

     label4:
        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Session is not available.");

        throw $r1;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void onFeatureReady()
    {
        android.telephony.ims.feature.MmTelFeature r0;

        r0 := @this: android.telephony.ims.feature.MmTelFeature;

        return;
    }

    public void onFeatureRemoved()
    {
        android.telephony.ims.feature.MmTelFeature r0;

        r0 := @this: android.telephony.ims.feature.MmTelFeature;

        return;
    }

    public boolean queryCapabilityConfiguration(int, int)
    {
        android.telephony.ims.feature.MmTelFeature r0;
        int i0, i1;

        r0 := @this: android.telephony.ims.feature.MmTelFeature;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        return 0;
    }

    public volatile android.telephony.ims.feature.ImsFeature$Capabilities queryCapabilityStatus()
    {
        android.telephony.ims.feature.MmTelFeature r0;
        android.telephony.ims.feature.MmTelFeature$MmTelCapabilities $r1;

        r0 := @this: android.telephony.ims.feature.MmTelFeature;

        $r1 = virtualinvoke r0.<android.telephony.ims.feature.MmTelFeature: android.telephony.ims.feature.MmTelFeature$MmTelCapabilities queryCapabilityStatus()>();

        return $r1;
    }

    public final android.telephony.ims.feature.MmTelFeature$MmTelCapabilities queryCapabilityStatus()
    {
        android.telephony.ims.feature.MmTelFeature r0;
        android.telephony.ims.feature.MmTelFeature$MmTelCapabilities $r1;
        android.telephony.ims.feature.ImsFeature$Capabilities $r2;

        r0 := @this: android.telephony.ims.feature.MmTelFeature;

        $r1 = new android.telephony.ims.feature.MmTelFeature$MmTelCapabilities;

        $r2 = specialinvoke r0.<android.telephony.ims.feature.ImsFeature: android.telephony.ims.feature.ImsFeature$Capabilities queryCapabilityStatus()>();

        specialinvoke $r1.<android.telephony.ims.feature.MmTelFeature$MmTelCapabilities: void <init>(android.telephony.ims.feature.ImsFeature$Capabilities)>($r2);

        return $r1;
    }

    public void setUiTtyMode(int, android.os.Message)
    {
        android.telephony.ims.feature.MmTelFeature r0;
        int i0;
        android.os.Message r1;

        r0 := @this: android.telephony.ims.feature.MmTelFeature;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Message;

        return;
    }

    public int shouldProcessCall(java.lang.String[])
    {
        android.telephony.ims.feature.MmTelFeature r0;
        java.lang.String[] r1;

        r0 := @this: android.telephony.ims.feature.MmTelFeature;

        r1 := @parameter0: java.lang.String[];

        return 0;
    }

    public static void <clinit>()
    {
        <android.telephony.ims.feature.MmTelFeature: int PROCESS_CALL_IMS> = 0;

        <android.telephony.ims.feature.MmTelFeature: int PROCESS_CALL_CSFB> = 1;

        <android.telephony.ims.feature.MmTelFeature: java.lang.String LOG_TAG> = "MmTelFeature";

        <android.telephony.ims.feature.MmTelFeature: java.lang.String EXTRA_IS_USSD> = "android.telephony.ims.feature.extra.IS_USSD";

        <android.telephony.ims.feature.MmTelFeature: java.lang.String EXTRA_IS_UNKNOWN_CALL> = "android.telephony.ims.feature.extra.IS_UNKNOWN_CALL";

        return;
    }
}
