public class android.telephony.ims.feature.RcsFeature extends android.telephony.ims.feature.ImsFeature
{
    private static final java.lang.String LOG_TAG;
    private final android.telephony.ims.feature.RcsFeature$RcsFeatureBinder mImsRcsBinder;
    private android.telephony.ims.aidl.IRcsFeatureListener mListenerBinder;
    private android.telephony.ims.stub.RcsPresenceExchangeImplBase mPresExchange;
    private android.telephony.ims.stub.RcsSipOptionsImplBase mSipOptions;

    public void <init>()
    {
        android.telephony.ims.feature.RcsFeature r0;
        android.telephony.ims.feature.'-$$Lambda$_14QHG018Z6p13d3hzJuGTWnNeo' $r2;
        android.telephony.ims.feature.RcsFeature$RcsFeatureBinder r3;
        java.util.concurrent.Executor r4;

        r0 := @this: android.telephony.ims.feature.RcsFeature;

        specialinvoke r0.<android.telephony.ims.feature.ImsFeature: void <init>()>();

        r3 = new android.telephony.ims.feature.RcsFeature$RcsFeatureBinder;

        $r2 = <android.telephony.ims.feature._$$Lambda$_14QHG018Z6p13d3hzJuGTWnNeo: android.telephony.ims.feature.'-$$Lambda$_14QHG018Z6p13d3hzJuGTWnNeo' INSTANCE>;

        r4 = (java.util.concurrent.Executor) $r2;

        specialinvoke r3.<android.telephony.ims.feature.RcsFeature$RcsFeatureBinder: void <init>(android.telephony.ims.feature.RcsFeature,java.util.concurrent.Executor)>(r0, r4);

        r0.<android.telephony.ims.feature.RcsFeature: android.telephony.ims.feature.RcsFeature$RcsFeatureBinder mImsRcsBinder> = r3;

        return;
    }

    public void <init>(java.util.concurrent.Executor)
    {
        android.telephony.ims.feature.RcsFeature r0;
        java.util.concurrent.Executor r1;
        java.lang.IllegalArgumentException $r2;
        android.telephony.ims.feature.RcsFeature$RcsFeatureBinder $r3;

        r0 := @this: android.telephony.ims.feature.RcsFeature;

        r1 := @parameter0: java.util.concurrent.Executor;

        specialinvoke r0.<android.telephony.ims.feature.ImsFeature: void <init>()>();

        if r1 == null goto label1;

        $r3 = new android.telephony.ims.feature.RcsFeature$RcsFeatureBinder;

        specialinvoke $r3.<android.telephony.ims.feature.RcsFeature$RcsFeatureBinder: void <init>(android.telephony.ims.feature.RcsFeature,java.util.concurrent.Executor)>(r0, r1);

        r0.<android.telephony.ims.feature.RcsFeature: android.telephony.ims.feature.RcsFeature$RcsFeatureBinder mImsRcsBinder> = $r3;

        return;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("executor can not be null.");

        throw $r2;
    }

    static void access$000(android.telephony.ims.feature.RcsFeature, android.telephony.ims.aidl.IRcsFeatureListener)
    {
        android.telephony.ims.feature.RcsFeature r0;
        android.telephony.ims.aidl.IRcsFeatureListener r1;

        r0 := @parameter0: android.telephony.ims.feature.RcsFeature;

        r1 := @parameter1: android.telephony.ims.aidl.IRcsFeatureListener;

        specialinvoke r0.<android.telephony.ims.feature.RcsFeature: void setListener(android.telephony.ims.aidl.IRcsFeatureListener)>(r1);

        return;
    }

    static android.telephony.ims.stub.RcsSipOptionsImplBase access$100(android.telephony.ims.feature.RcsFeature)
    {
        android.telephony.ims.feature.RcsFeature r0;
        android.telephony.ims.stub.RcsSipOptionsImplBase $r1;

        r0 := @parameter0: android.telephony.ims.feature.RcsFeature;

        $r1 = specialinvoke r0.<android.telephony.ims.feature.RcsFeature: android.telephony.ims.stub.RcsSipOptionsImplBase getOptionsExchangeInternal()>();

        return $r1;
    }

    static android.telephony.ims.stub.RcsPresenceExchangeImplBase access$200(android.telephony.ims.feature.RcsFeature)
    {
        android.telephony.ims.feature.RcsFeature r0;
        android.telephony.ims.stub.RcsPresenceExchangeImplBase $r1;

        r0 := @parameter0: android.telephony.ims.feature.RcsFeature;

        $r1 = specialinvoke r0.<android.telephony.ims.feature.RcsFeature: android.telephony.ims.stub.RcsPresenceExchangeImplBase getPresenceExchangeInternal()>();

        return $r1;
    }

    private android.telephony.ims.stub.RcsSipOptionsImplBase getOptionsExchangeInternal()
    {
        android.telephony.ims.feature.RcsFeature r0;
        java.lang.Object r1;
        android.telephony.ims.stub.RcsSipOptionsImplBase $r2, r4, r5;
        java.lang.Throwable $r3;

        r0 := @this: android.telephony.ims.feature.RcsFeature;

        r1 = r0.<android.telephony.ims.feature.RcsFeature: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r2 = r0.<android.telephony.ims.feature.RcsFeature: android.telephony.ims.stub.RcsSipOptionsImplBase mSipOptions>;

        if $r2 != null goto label2;

        r4 = virtualinvoke r0.<android.telephony.ims.feature.RcsFeature: android.telephony.ims.stub.RcsSipOptionsImplBase getOptionsExchangeImpl()>();

        r0.<android.telephony.ims.feature.RcsFeature: android.telephony.ims.stub.RcsSipOptionsImplBase mSipOptions> = r4;

        virtualinvoke r4.<android.telephony.ims.stub.RcsSipOptionsImplBase: void initialize(android.telephony.ims.feature.RcsFeature)>(r0);

     label2:
        r5 = r0.<android.telephony.ims.feature.RcsFeature: android.telephony.ims.stub.RcsSipOptionsImplBase mSipOptions>;

        exitmonitor r1;

     label3:
        return r5;

     label4:
        $r3 := @caughtexception;

     label5:
        exitmonitor r1;

     label6:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    private android.telephony.ims.stub.RcsPresenceExchangeImplBase getPresenceExchangeInternal()
    {
        android.telephony.ims.feature.RcsFeature r0;
        java.lang.Object r1;
        android.telephony.ims.stub.RcsPresenceExchangeImplBase $r2, r4, r5;
        java.lang.Throwable $r3;

        r0 := @this: android.telephony.ims.feature.RcsFeature;

        r1 = r0.<android.telephony.ims.feature.RcsFeature: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r2 = r0.<android.telephony.ims.feature.RcsFeature: android.telephony.ims.stub.RcsPresenceExchangeImplBase mPresExchange>;

        if $r2 != null goto label2;

        r4 = virtualinvoke r0.<android.telephony.ims.feature.RcsFeature: android.telephony.ims.stub.RcsPresenceExchangeImplBase getPresenceExchangeImpl()>();

        r0.<android.telephony.ims.feature.RcsFeature: android.telephony.ims.stub.RcsPresenceExchangeImplBase mPresExchange> = r4;

        virtualinvoke r4.<android.telephony.ims.stub.RcsPresenceExchangeImplBase: void initialize(android.telephony.ims.feature.RcsFeature)>(r0);

     label2:
        r5 = r0.<android.telephony.ims.feature.RcsFeature: android.telephony.ims.stub.RcsPresenceExchangeImplBase mPresExchange>;

        exitmonitor r1;

     label3:
        return r5;

     label4:
        $r3 := @caughtexception;

     label5:
        exitmonitor r1;

     label6:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    private void setListener(android.telephony.ims.aidl.IRcsFeatureListener)
    {
        android.telephony.ims.feature.RcsFeature r0;
        java.lang.Object r1;
        java.lang.Throwable $r2;
        android.telephony.ims.aidl.IRcsFeatureListener r3;

        r0 := @this: android.telephony.ims.feature.RcsFeature;

        r3 := @parameter0: android.telephony.ims.aidl.IRcsFeatureListener;

        r1 = r0.<android.telephony.ims.feature.RcsFeature: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        r0.<android.telephony.ims.feature.RcsFeature: android.telephony.ims.aidl.IRcsFeatureListener mListenerBinder> = r3;

     label2:
        if r3 == null goto label4;

     label3:
        virtualinvoke r0.<android.telephony.ims.feature.RcsFeature: void onFeatureReady()>();

     label4:
        exitmonitor r1;

     label5:
        return;

     label6:
        $r2 := @caughtexception;

     label7:
        exitmonitor r1;

     label8:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public void changeEnabledCapabilities(android.telephony.ims.feature.CapabilityChangeRequest, android.telephony.ims.feature.ImsFeature$CapabilityCallbackProxy)
    {
        android.telephony.ims.feature.RcsFeature r0;
        android.telephony.ims.feature.CapabilityChangeRequest r1;
        android.telephony.ims.feature.ImsFeature$CapabilityCallbackProxy r2;

        r0 := @this: android.telephony.ims.feature.RcsFeature;

        r1 := @parameter0: android.telephony.ims.feature.CapabilityChangeRequest;

        r2 := @parameter1: android.telephony.ims.feature.ImsFeature$CapabilityCallbackProxy;

        return;
    }

    public volatile android.os.IInterface getBinder()
    {
        android.telephony.ims.feature.RcsFeature r0;
        android.telephony.ims.aidl.IImsRcsFeature $r1;

        r0 := @this: android.telephony.ims.feature.RcsFeature;

        $r1 = virtualinvoke r0.<android.telephony.ims.feature.RcsFeature: android.telephony.ims.aidl.IImsRcsFeature getBinder()>();

        return $r1;
    }

    public final android.telephony.ims.aidl.IImsRcsFeature getBinder()
    {
        android.telephony.ims.feature.RcsFeature r0;
        android.telephony.ims.feature.RcsFeature$RcsFeatureBinder $r1;

        r0 := @this: android.telephony.ims.feature.RcsFeature;

        $r1 = r0.<android.telephony.ims.feature.RcsFeature: android.telephony.ims.feature.RcsFeature$RcsFeatureBinder mImsRcsBinder>;

        return $r1;
    }

    public android.telephony.ims.aidl.IRcsFeatureListener getListener()
    {
        android.telephony.ims.feature.RcsFeature r0;
        java.lang.Object r1;
        java.lang.Throwable $r2;
        android.telephony.ims.aidl.IRcsFeatureListener r3;

        r0 := @this: android.telephony.ims.feature.RcsFeature;

        r1 = r0.<android.telephony.ims.feature.RcsFeature: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        r3 = r0.<android.telephony.ims.feature.RcsFeature: android.telephony.ims.aidl.IRcsFeatureListener mListenerBinder>;

        exitmonitor r1;

     label2:
        return r3;

     label3:
        $r2 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public android.telephony.ims.stub.RcsSipOptionsImplBase getOptionsExchangeImpl()
    {
        android.telephony.ims.feature.RcsFeature r0;
        android.telephony.ims.stub.RcsSipOptionsImplBase $r1;

        r0 := @this: android.telephony.ims.feature.RcsFeature;

        $r1 = new android.telephony.ims.stub.RcsSipOptionsImplBase;

        specialinvoke $r1.<android.telephony.ims.stub.RcsSipOptionsImplBase: void <init>()>();

        return $r1;
    }

    public android.telephony.ims.stub.RcsPresenceExchangeImplBase getPresenceExchangeImpl()
    {
        android.telephony.ims.feature.RcsFeature r0;
        android.telephony.ims.stub.RcsPresenceExchangeImplBase $r1;

        r0 := @this: android.telephony.ims.feature.RcsFeature;

        $r1 = new android.telephony.ims.stub.RcsPresenceExchangeImplBase;

        specialinvoke $r1.<android.telephony.ims.stub.RcsPresenceExchangeImplBase: void <init>()>();

        return $r1;
    }

    public final void notifyCapabilitiesStatusChanged(android.telephony.ims.feature.RcsFeature$RcsImsCapabilities)
    {
        android.telephony.ims.feature.RcsFeature r0;
        android.telephony.ims.feature.RcsFeature$RcsImsCapabilities r1;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: android.telephony.ims.feature.RcsFeature;

        r1 := @parameter0: android.telephony.ims.feature.RcsFeature$RcsImsCapabilities;

        if r1 == null goto label1;

        specialinvoke r0.<android.telephony.ims.feature.ImsFeature: void notifyCapabilitiesStatusChanged(android.telephony.ims.feature.ImsFeature$Capabilities)>(r1);

        return;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("RcsImsCapabilities must be non-null!");

        throw $r2;
    }

    public void onFeatureReady()
    {
        android.telephony.ims.feature.RcsFeature r0;

        r0 := @this: android.telephony.ims.feature.RcsFeature;

        return;
    }

    public void onFeatureRemoved()
    {
        android.telephony.ims.feature.RcsFeature r0;

        r0 := @this: android.telephony.ims.feature.RcsFeature;

        return;
    }

    public boolean queryCapabilityConfiguration(int, int)
    {
        android.telephony.ims.feature.RcsFeature r0;
        int i0, i1;

        r0 := @this: android.telephony.ims.feature.RcsFeature;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        return 0;
    }

    public volatile android.telephony.ims.feature.ImsFeature$Capabilities queryCapabilityStatus()
    {
        android.telephony.ims.feature.RcsFeature r0;
        android.telephony.ims.feature.RcsFeature$RcsImsCapabilities $r1;

        r0 := @this: android.telephony.ims.feature.RcsFeature;

        $r1 = virtualinvoke r0.<android.telephony.ims.feature.RcsFeature: android.telephony.ims.feature.RcsFeature$RcsImsCapabilities queryCapabilityStatus()>();

        return $r1;
    }

    public final android.telephony.ims.feature.RcsFeature$RcsImsCapabilities queryCapabilityStatus()
    {
        android.telephony.ims.feature.RcsFeature r0;
        android.telephony.ims.feature.RcsFeature$RcsImsCapabilities $r1;
        android.telephony.ims.feature.ImsFeature$Capabilities $r2;

        r0 := @this: android.telephony.ims.feature.RcsFeature;

        $r1 = new android.telephony.ims.feature.RcsFeature$RcsImsCapabilities;

        $r2 = specialinvoke r0.<android.telephony.ims.feature.ImsFeature: android.telephony.ims.feature.ImsFeature$Capabilities queryCapabilityStatus()>();

        specialinvoke $r1.<android.telephony.ims.feature.RcsFeature$RcsImsCapabilities: void <init>(android.telephony.ims.feature.ImsFeature$Capabilities,android.telephony.ims.feature.RcsFeature$1)>($r2, null);

        return $r1;
    }

    public static void <clinit>()
    {
        <android.telephony.ims.feature.RcsFeature: java.lang.String LOG_TAG> = "RcsFeature";

        return;
    }
}
