public class android.telephony.ims.stub.ImsRegistrationImplBase extends java.lang.Object
{
    private static final java.lang.String LOG_TAG;
    private static final int REGISTRATION_STATE_UNKNOWN;
    public static final int REGISTRATION_TECH_IWLAN;
    public static final int REGISTRATION_TECH_LTE;
    public static final int REGISTRATION_TECH_NONE;
    private final android.telephony.ims.aidl.IImsRegistration mBinder;
    private final com.android.internal.telephony.util.RemoteCallbackListExt mCallbacks;
    private int mConnectionType;
    private android.telephony.ims.ImsReasonInfo mLastDisconnectCause;
    private final java.lang.Object mLock;
    private int mRegistrationState;

    public void <init>()
    {
        android.telephony.ims.stub.ImsRegistrationImplBase r0;
        android.telephony.ims.stub.ImsRegistrationImplBase$1 $r1;
        com.android.internal.telephony.util.RemoteCallbackListExt $r2;
        java.lang.Object $r3;
        android.telephony.ims.ImsReasonInfo $r4;

        r0 := @this: android.telephony.ims.stub.ImsRegistrationImplBase;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new android.telephony.ims.stub.ImsRegistrationImplBase$1;

        specialinvoke $r1.<android.telephony.ims.stub.ImsRegistrationImplBase$1: void <init>(android.telephony.ims.stub.ImsRegistrationImplBase)>(r0);

        r0.<android.telephony.ims.stub.ImsRegistrationImplBase: android.telephony.ims.aidl.IImsRegistration mBinder> = $r1;

        $r2 = new com.android.internal.telephony.util.RemoteCallbackListExt;

        specialinvoke $r2.<com.android.internal.telephony.util.RemoteCallbackListExt: void <init>()>();

        r0.<android.telephony.ims.stub.ImsRegistrationImplBase: com.android.internal.telephony.util.RemoteCallbackListExt mCallbacks> = $r2;

        $r3 = new java.lang.Object;

        specialinvoke $r3.<java.lang.Object: void <init>()>();

        r0.<android.telephony.ims.stub.ImsRegistrationImplBase: java.lang.Object mLock> = $r3;

        r0.<android.telephony.ims.stub.ImsRegistrationImplBase: int mConnectionType> = -1;

        r0.<android.telephony.ims.stub.ImsRegistrationImplBase: int mRegistrationState> = -1;

        $r4 = new android.telephony.ims.ImsReasonInfo;

        specialinvoke $r4.<android.telephony.ims.ImsReasonInfo: void <init>()>();

        r0.<android.telephony.ims.stub.ImsRegistrationImplBase: android.telephony.ims.ImsReasonInfo mLastDisconnectCause> = $r4;

        return;
    }

    static void access$000(android.telephony.ims.stub.ImsRegistrationImplBase, android.telephony.ims.aidl.IImsRegistrationCallback) throws android.os.RemoteException
    {
        android.telephony.ims.stub.ImsRegistrationImplBase r0;
        android.telephony.ims.aidl.IImsRegistrationCallback r1;

        r0 := @parameter0: android.telephony.ims.stub.ImsRegistrationImplBase;

        r1 := @parameter1: android.telephony.ims.aidl.IImsRegistrationCallback;

        specialinvoke r0.<android.telephony.ims.stub.ImsRegistrationImplBase: void addRegistrationCallback(android.telephony.ims.aidl.IImsRegistrationCallback)>(r1);

        return;
    }

    static void access$100(android.telephony.ims.stub.ImsRegistrationImplBase, android.telephony.ims.aidl.IImsRegistrationCallback)
    {
        android.telephony.ims.stub.ImsRegistrationImplBase r0;
        android.telephony.ims.aidl.IImsRegistrationCallback r1;

        r0 := @parameter0: android.telephony.ims.stub.ImsRegistrationImplBase;

        r1 := @parameter1: android.telephony.ims.aidl.IImsRegistrationCallback;

        specialinvoke r0.<android.telephony.ims.stub.ImsRegistrationImplBase: void removeRegistrationCallback(android.telephony.ims.aidl.IImsRegistrationCallback)>(r1);

        return;
    }

    private void addRegistrationCallback(android.telephony.ims.aidl.IImsRegistrationCallback) throws android.os.RemoteException
    {
        android.telephony.ims.stub.ImsRegistrationImplBase r0;
        android.telephony.ims.aidl.IImsRegistrationCallback r1;
        com.android.internal.telephony.util.RemoteCallbackListExt $r2;

        r0 := @this: android.telephony.ims.stub.ImsRegistrationImplBase;

        r1 := @parameter0: android.telephony.ims.aidl.IImsRegistrationCallback;

        $r2 = r0.<android.telephony.ims.stub.ImsRegistrationImplBase: com.android.internal.telephony.util.RemoteCallbackListExt mCallbacks>;

        virtualinvoke $r2.<com.android.internal.telephony.util.RemoteCallbackListExt: boolean register(android.os.IInterface)>(r1);

        specialinvoke r0.<android.telephony.ims.stub.ImsRegistrationImplBase: void updateNewCallbackWithState(android.telephony.ims.aidl.IImsRegistrationCallback)>(r1);

        return;
    }

    static void lambda$onDeregistered$2(android.telephony.ims.ImsReasonInfo, android.telephony.ims.aidl.IImsRegistrationCallback)
    {
        android.os.RemoteException $r0;
        java.lang.StringBuilder $r1;
        java.lang.String $r4;
        android.telephony.ims.ImsReasonInfo r5;
        android.telephony.ims.aidl.IImsRegistrationCallback r6;

        r5 := @parameter0: android.telephony.ims.ImsReasonInfo;

        r6 := @parameter1: android.telephony.ims.aidl.IImsRegistrationCallback;

     label1:
        interfaceinvoke r6.<android.telephony.ims.aidl.IImsRegistrationCallback: void onDeregistered(android.telephony.ims.ImsReasonInfo)>(r5);

     label2:
        goto label4;

     label3:
        $r0 := @caughtexception;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r0);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" onRegistrationDisconnected() - Skipping callback.");

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ImsRegistrationImplBase", $r4);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    static void lambda$onRegistered$0(int, android.telephony.ims.aidl.IImsRegistrationCallback)
    {
        int i0;
        android.os.RemoteException $r1;
        java.lang.StringBuilder $r2;
        java.lang.String $r5;
        android.telephony.ims.aidl.IImsRegistrationCallback r6;

        i0 := @parameter0: int;

        r6 := @parameter1: android.telephony.ims.aidl.IImsRegistrationCallback;

     label1:
        interfaceinvoke r6.<android.telephony.ims.aidl.IImsRegistrationCallback: void onRegistered(int)>(i0);

     label2:
        goto label4;

     label3:
        $r1 := @caughtexception;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" onRegistrationConnected() - Skipping callback.");

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ImsRegistrationImplBase", $r5);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    static void lambda$onRegistering$1(int, android.telephony.ims.aidl.IImsRegistrationCallback)
    {
        int i0;
        android.os.RemoteException $r1;
        java.lang.StringBuilder $r2;
        java.lang.String $r5;
        android.telephony.ims.aidl.IImsRegistrationCallback r6;

        i0 := @parameter0: int;

        r6 := @parameter1: android.telephony.ims.aidl.IImsRegistrationCallback;

     label1:
        interfaceinvoke r6.<android.telephony.ims.aidl.IImsRegistrationCallback: void onRegistering(int)>(i0);

     label2:
        goto label4;

     label3:
        $r1 := @caughtexception;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" onRegistrationProcessing() - Skipping callback.");

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ImsRegistrationImplBase", $r5);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    static void lambda$onSubscriberAssociatedUriChanged$4(android.net.Uri[], android.telephony.ims.aidl.IImsRegistrationCallback)
    {
        android.os.RemoteException $r0;
        java.lang.StringBuilder $r1;
        java.lang.String $r4;
        android.net.Uri[] r5;
        android.telephony.ims.aidl.IImsRegistrationCallback r6;

        r5 := @parameter0: android.net.Uri[];

        r6 := @parameter1: android.telephony.ims.aidl.IImsRegistrationCallback;

     label1:
        interfaceinvoke r6.<android.telephony.ims.aidl.IImsRegistrationCallback: void onSubscriberAssociatedUriChanged(android.net.Uri[])>(r5);

     label2:
        goto label4;

     label3:
        $r0 := @caughtexception;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r0);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" onSubscriberAssociatedUriChanged() - Skipping callback.");

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ImsRegistrationImplBase", $r4);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    static void lambda$onTechnologyChangeFailed$3(int, android.telephony.ims.ImsReasonInfo, android.telephony.ims.aidl.IImsRegistrationCallback)
    {
        int i0;
        android.os.RemoteException $r0;
        java.lang.StringBuilder $r1;
        java.lang.String $r4;
        android.telephony.ims.ImsReasonInfo r5;
        android.telephony.ims.aidl.IImsRegistrationCallback r6;

        i0 := @parameter0: int;

        r5 := @parameter1: android.telephony.ims.ImsReasonInfo;

        r6 := @parameter2: android.telephony.ims.aidl.IImsRegistrationCallback;

     label1:
        interfaceinvoke r6.<android.telephony.ims.aidl.IImsRegistrationCallback: void onTechnologyChangeFailed(int,android.telephony.ims.ImsReasonInfo)>(i0, r5);

     label2:
        goto label4;

     label3:
        $r0 := @caughtexception;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r0);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" onRegistrationChangeFailed() - Skipping callback.");

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ImsRegistrationImplBase", $r4);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    private void removeRegistrationCallback(android.telephony.ims.aidl.IImsRegistrationCallback)
    {
        android.telephony.ims.stub.ImsRegistrationImplBase r0;
        android.telephony.ims.aidl.IImsRegistrationCallback r1;
        com.android.internal.telephony.util.RemoteCallbackListExt $r2;

        r0 := @this: android.telephony.ims.stub.ImsRegistrationImplBase;

        r1 := @parameter0: android.telephony.ims.aidl.IImsRegistrationCallback;

        $r2 = r0.<android.telephony.ims.stub.ImsRegistrationImplBase: com.android.internal.telephony.util.RemoteCallbackListExt mCallbacks>;

        virtualinvoke $r2.<com.android.internal.telephony.util.RemoteCallbackListExt: boolean unregister(android.os.IInterface)>(r1);

        return;
    }

    private void updateNewCallbackWithState(android.telephony.ims.aidl.IImsRegistrationCallback) throws android.os.RemoteException
    {
        android.telephony.ims.stub.ImsRegistrationImplBase r0;
        java.lang.Object r1;
        int i0, $i1, $i2;
        android.telephony.ims.ImsReasonInfo r2;
        java.lang.Throwable $r3;
        android.telephony.ims.aidl.IImsRegistrationCallback r4;

        r0 := @this: android.telephony.ims.stub.ImsRegistrationImplBase;

        r4 := @parameter0: android.telephony.ims.aidl.IImsRegistrationCallback;

        r1 = r0.<android.telephony.ims.stub.ImsRegistrationImplBase: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        i0 = r0.<android.telephony.ims.stub.ImsRegistrationImplBase: int mRegistrationState>;

        r2 = r0.<android.telephony.ims.stub.ImsRegistrationImplBase: android.telephony.ims.ImsReasonInfo mLastDisconnectCause>;

        exitmonitor r1;

     label2:
        if i0 == 0 goto label5;

        if i0 == 1 goto label4;

        if i0 == 2 goto label3;

        goto label6;

     label3:
        $i2 = virtualinvoke r0.<android.telephony.ims.stub.ImsRegistrationImplBase: int getConnectionType()>();

        interfaceinvoke r4.<android.telephony.ims.aidl.IImsRegistrationCallback: void onRegistered(int)>($i2);

        goto label6;

     label4:
        $i1 = virtualinvoke r0.<android.telephony.ims.stub.ImsRegistrationImplBase: int getConnectionType()>();

        interfaceinvoke r4.<android.telephony.ims.aidl.IImsRegistrationCallback: void onRegistering(int)>($i1);

        goto label6;

     label5:
        interfaceinvoke r4.<android.telephony.ims.aidl.IImsRegistrationCallback: void onDeregistered(android.telephony.ims.ImsReasonInfo)>(r2);

     label6:
        return;

     label7:
        $r3 := @caughtexception;

     label8:
        exitmonitor r1;

     label9:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    private void updateToDisconnectedState(android.telephony.ims.ImsReasonInfo)
    {
        android.telephony.ims.stub.ImsRegistrationImplBase r0;
        java.lang.Object r1;
        java.lang.Throwable $r2;
        android.telephony.ims.ImsReasonInfo r3, r4;

        r0 := @this: android.telephony.ims.stub.ImsRegistrationImplBase;

        r3 := @parameter0: android.telephony.ims.ImsReasonInfo;

        r1 = r0.<android.telephony.ims.stub.ImsRegistrationImplBase: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        specialinvoke r0.<android.telephony.ims.stub.ImsRegistrationImplBase: void updateToState(int,int)>(-1, 0);

     label02:
        if r3 == null goto label05;

     label03:
        r0.<android.telephony.ims.stub.ImsRegistrationImplBase: android.telephony.ims.ImsReasonInfo mLastDisconnectCause> = r3;

     label04:
        goto label06;

     label05:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ImsRegistrationImplBase", "updateToDisconnectedState: no ImsReasonInfo provided.");

        r4 = new android.telephony.ims.ImsReasonInfo;

        specialinvoke r4.<android.telephony.ims.ImsReasonInfo: void <init>()>();

        r0.<android.telephony.ims.stub.ImsRegistrationImplBase: android.telephony.ims.ImsReasonInfo mLastDisconnectCause> = r4;

     label06:
        exitmonitor r1;

     label07:
        return;

     label08:
        $r2 := @caughtexception;

     label09:
        exitmonitor r1;

     label10:
        throw $r2;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label05 to label06 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    private void updateToState(int, int)
    {
        android.telephony.ims.stub.ImsRegistrationImplBase r0;
        int i0, i1;
        java.lang.Object r1;
        java.lang.Throwable $r3;

        r0 := @this: android.telephony.ims.stub.ImsRegistrationImplBase;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = r0.<android.telephony.ims.stub.ImsRegistrationImplBase: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        r0.<android.telephony.ims.stub.ImsRegistrationImplBase: int mConnectionType> = i0;

        r0.<android.telephony.ims.stub.ImsRegistrationImplBase: int mRegistrationState> = i1;

        r0.<android.telephony.ims.stub.ImsRegistrationImplBase: android.telephony.ims.ImsReasonInfo mLastDisconnectCause> = null;

        exitmonitor r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public final android.telephony.ims.aidl.IImsRegistration getBinder()
    {
        android.telephony.ims.stub.ImsRegistrationImplBase r0;
        android.telephony.ims.aidl.IImsRegistration $r1;

        r0 := @this: android.telephony.ims.stub.ImsRegistrationImplBase;

        $r1 = r0.<android.telephony.ims.stub.ImsRegistrationImplBase: android.telephony.ims.aidl.IImsRegistration mBinder>;

        return $r1;
    }

    public final int getConnectionType()
    {
        android.telephony.ims.stub.ImsRegistrationImplBase r0;
        java.lang.Object r1;
        int i0;
        java.lang.Throwable $r3;

        r0 := @this: android.telephony.ims.stub.ImsRegistrationImplBase;

        r1 = r0.<android.telephony.ims.stub.ImsRegistrationImplBase: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        i0 = r0.<android.telephony.ims.stub.ImsRegistrationImplBase: int mConnectionType>;

        exitmonitor r1;

     label2:
        return i0;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public final void onDeregistered(android.telephony.ims.ImsReasonInfo)
    {
        android.telephony.ims.stub.ImsRegistrationImplBase r0;
        android.telephony.ims.ImsReasonInfo $r1, r4;
        android.telephony.ims.stub._$$Lambda$ImsRegistrationImplBase$s7PspXVbCf1Q_WSzodP2glP9TjI $r2;
        com.android.internal.telephony.util.RemoteCallbackListExt $r3;

        r0 := @this: android.telephony.ims.stub.ImsRegistrationImplBase;

        r4 := @parameter0: android.telephony.ims.ImsReasonInfo;

        specialinvoke r0.<android.telephony.ims.stub.ImsRegistrationImplBase: void updateToDisconnectedState(android.telephony.ims.ImsReasonInfo)>(r4);

        if r4 == null goto label1;

        goto label2;

     label1:
        $r1 = new android.telephony.ims.ImsReasonInfo;

        specialinvoke $r1.<android.telephony.ims.ImsReasonInfo: void <init>()>();

        r4 = $r1;

     label2:
        $r3 = r0.<android.telephony.ims.stub.ImsRegistrationImplBase: com.android.internal.telephony.util.RemoteCallbackListExt mCallbacks>;

        $r2 = new android.telephony.ims.stub._$$Lambda$ImsRegistrationImplBase$s7PspXVbCf1Q_WSzodP2glP9TjI;

        specialinvoke $r2.<android.telephony.ims.stub._$$Lambda$ImsRegistrationImplBase$s7PspXVbCf1Q_WSzodP2glP9TjI: void <init>(android.telephony.ims.ImsReasonInfo)>(r4);

        virtualinvoke $r3.<com.android.internal.telephony.util.RemoteCallbackListExt: void broadcastAction(java.util.function.Consumer)>($r2);

        return;
    }

    public final void onRegistered(int)
    {
        android.telephony.ims.stub.ImsRegistrationImplBase r0;
        int i0;
        android.telephony.ims.stub._$$Lambda$ImsRegistrationImplBase$cWwTXSDsk_bWPbsDJYI__DUBMnE $r1;
        com.android.internal.telephony.util.RemoteCallbackListExt $r2;

        r0 := @this: android.telephony.ims.stub.ImsRegistrationImplBase;

        i0 := @parameter0: int;

        specialinvoke r0.<android.telephony.ims.stub.ImsRegistrationImplBase: void updateToState(int,int)>(i0, 2);

        $r2 = r0.<android.telephony.ims.stub.ImsRegistrationImplBase: com.android.internal.telephony.util.RemoteCallbackListExt mCallbacks>;

        $r1 = new android.telephony.ims.stub._$$Lambda$ImsRegistrationImplBase$cWwTXSDsk_bWPbsDJYI__DUBMnE;

        specialinvoke $r1.<android.telephony.ims.stub._$$Lambda$ImsRegistrationImplBase$cWwTXSDsk_bWPbsDJYI__DUBMnE: void <init>(int)>(i0);

        virtualinvoke $r2.<com.android.internal.telephony.util.RemoteCallbackListExt: void broadcastAction(java.util.function.Consumer)>($r1);

        return;
    }

    public final void onRegistering(int)
    {
        android.telephony.ims.stub.ImsRegistrationImplBase r0;
        int i0;
        android.telephony.ims.stub._$$Lambda$ImsRegistrationImplBase$sbjuTvW_brOSWMR74UInSZEIQB0 $r1;
        com.android.internal.telephony.util.RemoteCallbackListExt $r2;

        r0 := @this: android.telephony.ims.stub.ImsRegistrationImplBase;

        i0 := @parameter0: int;

        specialinvoke r0.<android.telephony.ims.stub.ImsRegistrationImplBase: void updateToState(int,int)>(i0, 1);

        $r2 = r0.<android.telephony.ims.stub.ImsRegistrationImplBase: com.android.internal.telephony.util.RemoteCallbackListExt mCallbacks>;

        $r1 = new android.telephony.ims.stub._$$Lambda$ImsRegistrationImplBase$sbjuTvW_brOSWMR74UInSZEIQB0;

        specialinvoke $r1.<android.telephony.ims.stub._$$Lambda$ImsRegistrationImplBase$sbjuTvW_brOSWMR74UInSZEIQB0: void <init>(int)>(i0);

        virtualinvoke $r2.<com.android.internal.telephony.util.RemoteCallbackListExt: void broadcastAction(java.util.function.Consumer)>($r1);

        return;
    }

    public final void onSubscriberAssociatedUriChanged(android.net.Uri[])
    {
        android.telephony.ims.stub.ImsRegistrationImplBase r0;
        android.net.Uri[] r1;
        android.telephony.ims.stub._$$Lambda$ImsRegistrationImplBase$wwtkoeOtGwMjG5I0_ZTfjNpGU_s $r2;
        com.android.internal.telephony.util.RemoteCallbackListExt $r3;

        r0 := @this: android.telephony.ims.stub.ImsRegistrationImplBase;

        r1 := @parameter0: android.net.Uri[];

        $r3 = r0.<android.telephony.ims.stub.ImsRegistrationImplBase: com.android.internal.telephony.util.RemoteCallbackListExt mCallbacks>;

        $r2 = new android.telephony.ims.stub._$$Lambda$ImsRegistrationImplBase$wwtkoeOtGwMjG5I0_ZTfjNpGU_s;

        specialinvoke $r2.<android.telephony.ims.stub._$$Lambda$ImsRegistrationImplBase$wwtkoeOtGwMjG5I0_ZTfjNpGU_s: void <init>(android.net.Uri[])>(r1);

        virtualinvoke $r3.<com.android.internal.telephony.util.RemoteCallbackListExt: void broadcastAction(java.util.function.Consumer)>($r2);

        return;
    }

    public final void onTechnologyChangeFailed(int, android.telephony.ims.ImsReasonInfo)
    {
        android.telephony.ims.stub.ImsRegistrationImplBase r0;
        int i0;
        android.telephony.ims.ImsReasonInfo $r1, r4;
        android.telephony.ims.stub._$$Lambda$ImsRegistrationImplBase$wDtW65cPmn_jF6dfimhBTfdg1kI $r2;
        com.android.internal.telephony.util.RemoteCallbackListExt $r3;

        r0 := @this: android.telephony.ims.stub.ImsRegistrationImplBase;

        i0 := @parameter0: int;

        r4 := @parameter1: android.telephony.ims.ImsReasonInfo;

        if r4 == null goto label1;

        goto label2;

     label1:
        $r1 = new android.telephony.ims.ImsReasonInfo;

        specialinvoke $r1.<android.telephony.ims.ImsReasonInfo: void <init>()>();

        r4 = $r1;

     label2:
        $r3 = r0.<android.telephony.ims.stub.ImsRegistrationImplBase: com.android.internal.telephony.util.RemoteCallbackListExt mCallbacks>;

        $r2 = new android.telephony.ims.stub._$$Lambda$ImsRegistrationImplBase$wDtW65cPmn_jF6dfimhBTfdg1kI;

        specialinvoke $r2.<android.telephony.ims.stub._$$Lambda$ImsRegistrationImplBase$wDtW65cPmn_jF6dfimhBTfdg1kI: void <init>(int,android.telephony.ims.ImsReasonInfo)>(i0, r4);

        virtualinvoke $r3.<com.android.internal.telephony.util.RemoteCallbackListExt: void broadcastAction(java.util.function.Consumer)>($r2);

        return;
    }

    public static void <clinit>()
    {
        <android.telephony.ims.stub.ImsRegistrationImplBase: int REGISTRATION_TECH_NONE> = -1;

        <android.telephony.ims.stub.ImsRegistrationImplBase: int REGISTRATION_TECH_LTE> = 0;

        <android.telephony.ims.stub.ImsRegistrationImplBase: int REGISTRATION_TECH_IWLAN> = 1;

        <android.telephony.ims.stub.ImsRegistrationImplBase: int REGISTRATION_STATE_UNKNOWN> = -1;

        <android.telephony.ims.stub.ImsRegistrationImplBase: java.lang.String LOG_TAG> = "ImsRegistrationImplBase";

        return;
    }
}
