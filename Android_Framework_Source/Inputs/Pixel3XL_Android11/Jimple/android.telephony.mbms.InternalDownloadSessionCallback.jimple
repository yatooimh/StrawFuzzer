public class android.telephony.mbms.InternalDownloadSessionCallback extends android.telephony.mbms.IMbmsDownloadSessionCallback$Stub
{
    private final android.telephony.mbms.MbmsDownloadSessionCallback mAppCallback;
    private final java.util.concurrent.Executor mExecutor;
    private volatile boolean mIsStopped;

    public void <init>(android.telephony.mbms.MbmsDownloadSessionCallback, java.util.concurrent.Executor)
    {
        android.telephony.mbms.InternalDownloadSessionCallback r0;
        android.telephony.mbms.MbmsDownloadSessionCallback r1;
        java.util.concurrent.Executor r2;

        r0 := @this: android.telephony.mbms.InternalDownloadSessionCallback;

        r1 := @parameter0: android.telephony.mbms.MbmsDownloadSessionCallback;

        r2 := @parameter1: java.util.concurrent.Executor;

        specialinvoke r0.<android.telephony.mbms.IMbmsDownloadSessionCallback$Stub: void <init>()>();

        r0.<android.telephony.mbms.InternalDownloadSessionCallback: boolean mIsStopped> = 0;

        r0.<android.telephony.mbms.InternalDownloadSessionCallback: android.telephony.mbms.MbmsDownloadSessionCallback mAppCallback> = r1;

        r0.<android.telephony.mbms.InternalDownloadSessionCallback: java.util.concurrent.Executor mExecutor> = r2;

        return;
    }

    static android.telephony.mbms.MbmsDownloadSessionCallback access$000(android.telephony.mbms.InternalDownloadSessionCallback)
    {
        android.telephony.mbms.InternalDownloadSessionCallback r0;
        android.telephony.mbms.MbmsDownloadSessionCallback $r1;

        r0 := @parameter0: android.telephony.mbms.InternalDownloadSessionCallback;

        $r1 = r0.<android.telephony.mbms.InternalDownloadSessionCallback: android.telephony.mbms.MbmsDownloadSessionCallback mAppCallback>;

        return $r1;
    }

    public void onError(int, java.lang.String)
    {
        android.telephony.mbms.InternalDownloadSessionCallback r0;
        int i0;
        long l1;
        java.util.concurrent.Executor r1;
        android.telephony.mbms.InternalDownloadSessionCallback$1 r2;
        boolean $z0;
        java.lang.Throwable $r3;
        java.lang.String r4;

        r0 := @this: android.telephony.mbms.InternalDownloadSessionCallback;

        i0 := @parameter0: int;

        r4 := @parameter1: java.lang.String;

        $z0 = r0.<android.telephony.mbms.InternalDownloadSessionCallback: boolean mIsStopped>;

        if $z0 == 0 goto label1;

        return;

     label1:
        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label2:
        r1 = r0.<android.telephony.mbms.InternalDownloadSessionCallback: java.util.concurrent.Executor mExecutor>;

        r2 = new android.telephony.mbms.InternalDownloadSessionCallback$1;

        specialinvoke r2.<android.telephony.mbms.InternalDownloadSessionCallback$1: void <init>(android.telephony.mbms.InternalDownloadSessionCallback,int,java.lang.String)>(r0, i0, r4);

        interfaceinvoke r1.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>(r2);

     label3:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return;

     label4:
        $r3 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw $r3;

        catch java.lang.Throwable from label2 to label3 with label4;
    }

    public void onFileServicesUpdated(java.util.List)
    {
        android.telephony.mbms.InternalDownloadSessionCallback r0;
        long l0;
        java.util.concurrent.Executor r1;
        android.telephony.mbms.InternalDownloadSessionCallback$2 r2;
        boolean $z0;
        java.lang.Throwable $r3;
        java.util.List r4;

        r0 := @this: android.telephony.mbms.InternalDownloadSessionCallback;

        r4 := @parameter0: java.util.List;

        $z0 = r0.<android.telephony.mbms.InternalDownloadSessionCallback: boolean mIsStopped>;

        if $z0 == 0 goto label1;

        return;

     label1:
        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label2:
        r1 = r0.<android.telephony.mbms.InternalDownloadSessionCallback: java.util.concurrent.Executor mExecutor>;

        r2 = new android.telephony.mbms.InternalDownloadSessionCallback$2;

        specialinvoke r2.<android.telephony.mbms.InternalDownloadSessionCallback$2: void <init>(android.telephony.mbms.InternalDownloadSessionCallback,java.util.List)>(r0, r4);

        interfaceinvoke r1.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>(r2);

     label3:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return;

     label4:
        $r3 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r3;

        catch java.lang.Throwable from label2 to label3 with label4;
    }

    public void onMiddlewareReady()
    {
        android.telephony.mbms.InternalDownloadSessionCallback r0;
        long l0;
        android.telephony.mbms.InternalDownloadSessionCallback$3 r1;
        boolean $z0;
        java.lang.Throwable $r2;
        java.util.concurrent.Executor r3;

        r0 := @this: android.telephony.mbms.InternalDownloadSessionCallback;

        $z0 = r0.<android.telephony.mbms.InternalDownloadSessionCallback: boolean mIsStopped>;

        if $z0 == 0 goto label1;

        return;

     label1:
        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label2:
        r3 = r0.<android.telephony.mbms.InternalDownloadSessionCallback: java.util.concurrent.Executor mExecutor>;

        r1 = new android.telephony.mbms.InternalDownloadSessionCallback$3;

        specialinvoke r1.<android.telephony.mbms.InternalDownloadSessionCallback$3: void <init>(android.telephony.mbms.InternalDownloadSessionCallback)>(r0);

        interfaceinvoke r3.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>(r1);

     label3:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return;

     label4:
        $r2 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r2;

        catch java.lang.Throwable from label2 to label3 with label4;
    }

    public void stop()
    {
        android.telephony.mbms.InternalDownloadSessionCallback r0;

        r0 := @this: android.telephony.mbms.InternalDownloadSessionCallback;

        r0.<android.telephony.mbms.InternalDownloadSessionCallback: boolean mIsStopped> = 1;

        return;
    }
}
