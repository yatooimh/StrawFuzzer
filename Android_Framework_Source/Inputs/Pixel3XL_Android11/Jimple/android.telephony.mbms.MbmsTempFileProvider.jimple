public class android.telephony.mbms.MbmsTempFileProvider extends android.content.ContentProvider
{
    public static final java.lang.String TEMP_FILE_ROOT_PREF_FILE_NAME;
    public static final java.lang.String TEMP_FILE_ROOT_PREF_NAME;
    private java.lang.String mAuthority;
    private android.content.Context mContext;

    public void <init>()
    {
        android.telephony.mbms.MbmsTempFileProvider r0;

        r0 := @this: android.telephony.mbms.MbmsTempFileProvider;

        specialinvoke r0.<android.content.ContentProvider: void <init>()>();

        return;
    }

    public static java.io.File getEmbmsTempFileDir(android.content.Context)
    {
        android.content.SharedPreferences $r0;
        java.io.File $r1, $r2, r11, r12, r13;
        java.lang.Throwable $r3;
        java.lang.StringBuilder $r4;
        java.lang.RuntimeException $r7;
        java.lang.String $r8, r10;
        android.content.Context r9;

        r9 := @parameter0: android.content.Context;

        $r0 = virtualinvoke r9.<android.content.Context: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>("MbmsTempFileRootPrefs", 0);

        r10 = interfaceinvoke $r0.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("mbms_temp_file_root", null);

        if r10 == null goto label2;

     label1:
        r11 = new java.io.File;

        specialinvoke r11.<java.io.File: void <init>(java.lang.String)>(r10);

        $r2 = virtualinvoke r11.<java.io.File: java.io.File getCanonicalFile()>();

        return $r2;

     label2:
        r12 = new java.io.File;

        $r1 = virtualinvoke r9.<android.content.Context: java.io.File getFilesDir()>();

        specialinvoke r12.<java.io.File: void <init>(java.io.File,java.lang.String)>($r1, "androidMbmsTempFileRoot");

        r13 = virtualinvoke r12.<java.io.File: java.io.File getCanonicalFile()>();

     label3:
        return r13;

     label4:
        $r3 := @caughtexception;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to canonicalize temp file root path ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r7 = new java.lang.RuntimeException;

        $r8 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.String)>($r8);

        throw $r7;

        catch java.io.IOException from label1 to label2 with label4;
        catch java.io.IOException from label2 to label3 with label4;
    }

    public static java.io.File getFileForUri(android.content.Context, java.lang.String, android.net.Uri) throws java.io.FileNotFoundException
    {
        java.lang.String $r0, $r1, $r3, $r8, $r11, $r12, $r14, $r15, r20, r22;
        boolean $z0, $z1, $z2;
        java.lang.IllegalArgumentException $r2, $r10;
        java.lang.StringBuilder $r4;
        java.io.File $r13, r23, r24, r25;
        java.lang.SecurityException $r16;
        java.lang.Throwable $r17;
        java.io.FileNotFoundException $r18;
        android.content.Context r19;
        android.net.Uri r21;

        r19 := @parameter0: android.content.Context;

        r20 := @parameter1: java.lang.String;

        r21 := @parameter2: android.net.Uri;

        $r0 = "content";

        $r1 = virtualinvoke r21.<android.net.Uri: java.lang.String getScheme()>();

        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label6;

        $r3 = virtualinvoke r21.<android.net.Uri: java.lang.String getAuthority()>();

        $z1 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>(r20, $r3);

        if $z1 == 0 goto label5;

        $r12 = virtualinvoke r21.<android.net.Uri: java.lang.String getEncodedPath()>();

        r22 = staticinvoke <android.net.Uri: java.lang.String decode(java.lang.String)>($r12);

     label1:
        $r13 = staticinvoke <android.telephony.mbms.MbmsTempFileProvider: java.io.File getEmbmsTempFileDir(android.content.Context)>(r19);

        r23 = virtualinvoke $r13.<java.io.File: java.io.File getCanonicalFile()>();

        r24 = new java.io.File;

        specialinvoke r24.<java.io.File: void <init>(java.io.File,java.lang.String)>(r23, r22);

        r25 = virtualinvoke r24.<java.io.File: java.io.File getCanonicalFile()>();

     label2:
        $r14 = virtualinvoke r25.<java.io.File: java.lang.String getPath()>();

        $r15 = virtualinvoke r23.<java.io.File: java.lang.String getPath()>();

        $z2 = virtualinvoke $r14.<java.lang.String: boolean startsWith(java.lang.String)>($r15);

        if $z2 == 0 goto label3;

        return r25;

     label3:
        $r16 = new java.lang.SecurityException;

        specialinvoke $r16.<java.lang.SecurityException: void <init>(java.lang.String)>("Resolved path jumped beyond configured root");

        throw $r16;

     label4:
        $r17 := @caughtexception;

        $r18 = new java.io.FileNotFoundException;

        specialinvoke $r18.<java.io.FileNotFoundException: void <init>(java.lang.String)>("Could not resolve paths");

        throw $r18;

     label5:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Uri does not have a matching authority: ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r20);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r8 = virtualinvoke r21.<android.net.Uri: java.lang.String getAuthority()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = new java.lang.IllegalArgumentException;

        $r11 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r11);

        throw $r10;

     label6:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Uri must have scheme content");

        throw $r2;

        catch java.io.IOException from label1 to label2 with label4;
    }

    public static android.net.Uri getUriForFile(android.content.Context, java.lang.String, java.io.File)
    {
        java.lang.String r0, $r7, $r18, $r24, r26, r29, r30, r31;
        boolean $z0, $z1;
        java.lang.StringBuilder $r1, $r14, $r20;
        java.lang.IllegalArgumentException $r6, $r23;
        int $i0, $i1, $i2;
        android.net.Uri$Builder $r8, $r9, $r10, $r11;
        android.net.Uri $r12;
        java.lang.Throwable $r13, $r19;
        java.lang.RuntimeException $r17;
        android.content.Context r25;
        java.io.File r27, r28;

        r25 := @parameter0: android.content.Context;

        r26 := @parameter1: java.lang.String;

        r27 := @parameter2: java.io.File;

     label1:
        r0 = virtualinvoke r27.<java.io.File: java.lang.String getCanonicalPath()>();

     label2:
        r28 = staticinvoke <android.telephony.mbms.MbmsTempFileProvider: java.io.File getEmbmsTempFileDir(android.content.Context)>(r25);

        $z0 = staticinvoke <android.telephony.mbms.MbmsUtils: boolean isContainedIn(java.io.File,java.io.File)>(r28, r27);

        if $z0 == 0 goto label8;

     label3:
        r29 = virtualinvoke r28.<java.io.File: java.lang.String getCanonicalPath()>();

     label4:
        $z1 = virtualinvoke r29.<java.lang.String: boolean endsWith(java.lang.String)>("/");

        if $z1 == 0 goto label5;

        $i2 = virtualinvoke r29.<java.lang.String: int length()>();

        r30 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i2);

        goto label6;

     label5:
        $i0 = virtualinvoke r29.<java.lang.String: int length()>();

        $i1 = $i0 + 1;

        r30 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i1);

     label6:
        r31 = staticinvoke <android.net.Uri: java.lang.String encode(java.lang.String)>(r30);

        $r8 = new android.net.Uri$Builder;

        specialinvoke $r8.<android.net.Uri$Builder: void <init>()>();

        $r9 = virtualinvoke $r8.<android.net.Uri$Builder: android.net.Uri$Builder scheme(java.lang.String)>("content");

        $r10 = virtualinvoke $r9.<android.net.Uri$Builder: android.net.Uri$Builder authority(java.lang.String)>(r26);

        $r11 = virtualinvoke $r10.<android.net.Uri$Builder: android.net.Uri$Builder encodedPath(java.lang.String)>(r31);

        $r12 = virtualinvoke $r11.<android.net.Uri$Builder: android.net.Uri build()>();

        return $r12;

     label7:
        $r13 := @caughtexception;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not get canonical path for temp file root dir ");

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r28);

        $r17 = new java.lang.RuntimeException;

        $r18 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r17.<java.lang.RuntimeException: void <init>(java.lang.String)>($r18);

        throw $r17;

     label8:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("File ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r27);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not contained in the temp file directory, which is ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r28);

        $r6 = new java.lang.IllegalArgumentException;

        $r7 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r6;

     label9:
        $r19 := @caughtexception;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not get canonical path for file ");

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r27);

        $r23 = new java.lang.IllegalArgumentException;

        $r24 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r23.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r24);

        throw $r23;

        catch java.io.IOException from label1 to label2 with label9;
        catch java.io.IOException from label3 to label4 with label7;
    }

    public void attachInfo(android.content.Context, android.content.pm.ProviderInfo)
    {
        android.telephony.mbms.MbmsTempFileProvider r0;
        android.content.Context r1;
        android.content.pm.ProviderInfo r2;
        boolean $z0, $z1;
        java.lang.SecurityException $r3, $r4;
        java.lang.String $r5;

        r0 := @this: android.telephony.mbms.MbmsTempFileProvider;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.content.pm.ProviderInfo;

        specialinvoke r0.<android.content.ContentProvider: void attachInfo(android.content.Context,android.content.pm.ProviderInfo)>(r1, r2);

        $z0 = r2.<android.content.pm.ProviderInfo: boolean exported>;

        if $z0 != 0 goto label2;

        $z1 = r2.<android.content.pm.ProviderInfo: boolean grantUriPermissions>;

        if $z1 == 0 goto label1;

        $r5 = r2.<android.content.pm.ProviderInfo: java.lang.String authority>;

        r0.<android.telephony.mbms.MbmsTempFileProvider: java.lang.String mAuthority> = $r5;

        r0.<android.telephony.mbms.MbmsTempFileProvider: android.content.Context mContext> = r1;

        return;

     label1:
        $r4 = new java.lang.SecurityException;

        specialinvoke $r4.<java.lang.SecurityException: void <init>(java.lang.String)>("Provider must grant uri permissions");

        throw $r4;

     label2:
        $r3 = new java.lang.SecurityException;

        specialinvoke $r3.<java.lang.SecurityException: void <init>(java.lang.String)>("Provider must not be exported");

        throw $r3;
    }

    public int delete(android.net.Uri, java.lang.String, java.lang.String[])
    {
        android.telephony.mbms.MbmsTempFileProvider r0;
        android.net.Uri r1;
        java.lang.String r2;
        java.lang.String[] r3;
        java.lang.UnsupportedOperationException $r4;

        r0 := @this: android.telephony.mbms.MbmsTempFileProvider;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String[];

        $r4 = new java.lang.UnsupportedOperationException;

        specialinvoke $r4.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("No deleting supported");

        throw $r4;
    }

    public java.lang.String getType(android.net.Uri)
    {
        android.telephony.mbms.MbmsTempFileProvider r0;
        android.net.Uri r1;

        r0 := @this: android.telephony.mbms.MbmsTempFileProvider;

        r1 := @parameter0: android.net.Uri;

        return "application/octet-stream";
    }

    public android.net.Uri insert(android.net.Uri, android.content.ContentValues)
    {
        android.telephony.mbms.MbmsTempFileProvider r0;
        android.net.Uri r1;
        android.content.ContentValues r2;
        java.lang.UnsupportedOperationException $r3;

        r0 := @this: android.telephony.mbms.MbmsTempFileProvider;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: android.content.ContentValues;

        $r3 = new java.lang.UnsupportedOperationException;

        specialinvoke $r3.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("No inserting supported");

        throw $r3;
    }

    public boolean onCreate()
    {
        android.telephony.mbms.MbmsTempFileProvider r0;

        r0 := @this: android.telephony.mbms.MbmsTempFileProvider;

        return 1;
    }

    public android.os.ParcelFileDescriptor openFile(android.net.Uri, java.lang.String) throws java.io.FileNotFoundException
    {
        android.telephony.mbms.MbmsTempFileProvider r0;
        android.net.Uri r1;
        java.lang.String r2, $r3;
        android.content.Context $r4;
        java.io.File $r5;
        int $i0;
        android.os.ParcelFileDescriptor $r6;

        r0 := @this: android.telephony.mbms.MbmsTempFileProvider;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: java.lang.String;

        $r4 = r0.<android.telephony.mbms.MbmsTempFileProvider: android.content.Context mContext>;

        $r3 = r0.<android.telephony.mbms.MbmsTempFileProvider: java.lang.String mAuthority>;

        $r5 = staticinvoke <android.telephony.mbms.MbmsTempFileProvider: java.io.File getFileForUri(android.content.Context,java.lang.String,android.net.Uri)>($r4, $r3, r1);

        $i0 = staticinvoke <android.os.ParcelFileDescriptor: int parseMode(java.lang.String)>(r2);

        $r6 = staticinvoke <android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor open(java.io.File,int)>($r5, $i0);

        return $r6;
    }

    public android.database.Cursor query(android.net.Uri, java.lang.String[], java.lang.String, java.lang.String[], java.lang.String)
    {
        android.telephony.mbms.MbmsTempFileProvider r0;
        android.net.Uri r1;
        java.lang.String[] r2, r4;
        java.lang.String r3, r5;
        java.lang.UnsupportedOperationException $r6;

        r0 := @this: android.telephony.mbms.MbmsTempFileProvider;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: java.lang.String[];

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String[];

        r5 := @parameter4: java.lang.String;

        $r6 = new java.lang.UnsupportedOperationException;

        specialinvoke $r6.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("No querying supported");

        throw $r6;
    }

    public int update(android.net.Uri, android.content.ContentValues, java.lang.String, java.lang.String[])
    {
        android.telephony.mbms.MbmsTempFileProvider r0;
        android.net.Uri r1;
        android.content.ContentValues r2;
        java.lang.String r3;
        java.lang.String[] r4;
        java.lang.UnsupportedOperationException $r5;

        r0 := @this: android.telephony.mbms.MbmsTempFileProvider;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: android.content.ContentValues;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String[];

        $r5 = new java.lang.UnsupportedOperationException;

        specialinvoke $r5.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("No updating supported");

        throw $r5;
    }

    public static void <clinit>()
    {
        <android.telephony.mbms.MbmsTempFileProvider: java.lang.String TEMP_FILE_ROOT_PREF_NAME> = "mbms_temp_file_root";

        <android.telephony.mbms.MbmsTempFileProvider: java.lang.String TEMP_FILE_ROOT_PREF_FILE_NAME> = "MbmsTempFileRootPrefs";

        return;
    }
}
