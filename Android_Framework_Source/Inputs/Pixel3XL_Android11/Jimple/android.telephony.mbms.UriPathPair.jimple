public final class android.telephony.mbms.UriPathPair extends java.lang.Object implements android.os.Parcelable
{
    public static final android.os.Parcelable$Creator CREATOR;
    private final android.net.Uri mContentUri;
    private final android.net.Uri mFilePathUri;

    static void <clinit>()
    {
        android.telephony.mbms.UriPathPair$1 $r0;

        $r0 = new android.telephony.mbms.UriPathPair$1;

        specialinvoke $r0.<android.telephony.mbms.UriPathPair$1: void <init>()>();

        <android.telephony.mbms.UriPathPair: android.os.Parcelable$Creator CREATOR> = $r0;

        return;
    }

    public void <init>(android.net.Uri, android.net.Uri)
    {
        android.telephony.mbms.UriPathPair r0;
        android.net.Uri r1, r2;
        java.lang.IllegalArgumentException $r3, $r6;
        java.lang.String $r4, $r5, $r7, $r8;
        boolean $z0, $z1;

        r0 := @this: android.telephony.mbms.UriPathPair;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: android.net.Uri;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 == null goto label2;

        $r4 = "file";

        $r5 = virtualinvoke r1.<android.net.Uri: java.lang.String getScheme()>();

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z0 == 0 goto label2;

        if r2 == null goto label1;

        $r7 = "content";

        $r8 = virtualinvoke r2.<android.net.Uri: java.lang.String getScheme()>();

        $z1 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z1 == 0 goto label1;

        r0.<android.telephony.mbms.UriPathPair: android.net.Uri mFilePathUri> = r1;

        r0.<android.telephony.mbms.UriPathPair: android.net.Uri mContentUri> = r2;

        return;

     label1:
        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Content URI must have content scheme");

        throw $r6;

     label2:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("File URI must have file scheme");

        throw $r3;
    }

    private void <init>(android.os.Parcel)
    {
        android.telephony.mbms.UriPathPair r0;
        android.os.Parcel r1;
        java.lang.Class $r2, $r6;
        java.lang.ClassLoader $r3, $r7;
        android.os.Parcelable $r4, $r8;
        android.net.Uri $r5, $r9;

        r0 := @this: android.telephony.mbms.UriPathPair;

        r1 := @parameter0: android.os.Parcel;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = class "Landroid/net/Uri;";

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        $r4 = virtualinvoke r1.<android.os.Parcel: android.os.Parcelable readParcelable(java.lang.ClassLoader)>($r3);

        $r5 = (android.net.Uri) $r4;

        r0.<android.telephony.mbms.UriPathPair: android.net.Uri mFilePathUri> = $r5;

        $r6 = class "Landroid/net/Uri;";

        $r7 = virtualinvoke $r6.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        $r8 = virtualinvoke r1.<android.os.Parcel: android.os.Parcelable readParcelable(java.lang.ClassLoader)>($r7);

        $r9 = (android.net.Uri) $r8;

        r0.<android.telephony.mbms.UriPathPair: android.net.Uri mContentUri> = $r9;

        return;
    }

    void <init>(android.os.Parcel, android.telephony.mbms.UriPathPair$1)
    {
        android.telephony.mbms.UriPathPair r0;
        android.os.Parcel r1;
        android.telephony.mbms.UriPathPair$1 r2;

        r0 := @this: android.telephony.mbms.UriPathPair;

        r1 := @parameter0: android.os.Parcel;

        r2 := @parameter1: android.telephony.mbms.UriPathPair$1;

        specialinvoke r0.<android.telephony.mbms.UriPathPair: void <init>(android.os.Parcel)>(r1);

        return;
    }

    public int describeContents()
    {
        android.telephony.mbms.UriPathPair r0;

        r0 := @this: android.telephony.mbms.UriPathPair;

        return 0;
    }

    public android.net.Uri getContentUri()
    {
        android.telephony.mbms.UriPathPair r0;
        android.net.Uri $r1;

        r0 := @this: android.telephony.mbms.UriPathPair;

        $r1 = r0.<android.telephony.mbms.UriPathPair: android.net.Uri mContentUri>;

        return $r1;
    }

    public android.net.Uri getFilePathUri()
    {
        android.telephony.mbms.UriPathPair r0;
        android.net.Uri $r1;

        r0 := @this: android.telephony.mbms.UriPathPair;

        $r1 = r0.<android.telephony.mbms.UriPathPair: android.net.Uri mFilePathUri>;

        return $r1;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.telephony.mbms.UriPathPair r0;
        android.os.Parcel r1;
        int i0;
        android.net.Uri $r2, $r3;

        r0 := @this: android.telephony.mbms.UriPathPair;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        $r2 = r0.<android.telephony.mbms.UriPathPair: android.net.Uri mFilePathUri>;

        virtualinvoke r1.<android.os.Parcel: void writeParcelable(android.os.Parcelable,int)>($r2, i0);

        $r3 = r0.<android.telephony.mbms.UriPathPair: android.net.Uri mContentUri>;

        virtualinvoke r1.<android.os.Parcel: void writeParcelable(android.os.Parcelable,int)>($r3, i0);

        return;
    }
}
