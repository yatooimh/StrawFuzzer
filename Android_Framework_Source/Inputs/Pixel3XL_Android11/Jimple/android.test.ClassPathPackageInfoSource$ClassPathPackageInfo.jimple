class android.test.ClassPathPackageInfoSource$ClassPathPackageInfo extends java.lang.Object
{
    private final java.lang.String packageName;
    private final java.util.Set subpackageNames;
    final android.test.ClassPathPackageInfoSource this$0;
    private final java.util.Set topLevelClasses;

    private void <init>(android.test.ClassPathPackageInfoSource, java.lang.String, java.util.Set, java.util.Set)
    {
        android.test.ClassPathPackageInfoSource$ClassPathPackageInfo r0;
        android.test.ClassPathPackageInfoSource r1;
        java.lang.String r2;
        java.util.Set r3, r4, $r5, $r6;

        r0 := @this: android.test.ClassPathPackageInfoSource$ClassPathPackageInfo;

        r1 := @parameter0: android.test.ClassPathPackageInfoSource;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.util.Set;

        r4 := @parameter3: java.util.Set;

        r0.<android.test.ClassPathPackageInfoSource$ClassPathPackageInfo: android.test.ClassPathPackageInfoSource this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.test.ClassPathPackageInfoSource$ClassPathPackageInfo: java.lang.String packageName> = r2;

        $r5 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>(r3);

        r0.<android.test.ClassPathPackageInfoSource$ClassPathPackageInfo: java.util.Set subpackageNames> = $r5;

        $r6 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>(r4);

        r0.<android.test.ClassPathPackageInfoSource$ClassPathPackageInfo: java.util.Set topLevelClasses> = $r6;

        return;
    }

    void <init>(android.test.ClassPathPackageInfoSource, java.lang.String, java.util.Set, java.util.Set, android.test.ClassPathPackageInfoSource$1)
    {
        android.test.ClassPathPackageInfoSource$ClassPathPackageInfo r0;
        android.test.ClassPathPackageInfoSource r1;
        java.lang.String r2;
        java.util.Set r3, r4;
        android.test.ClassPathPackageInfoSource$1 r5;

        r0 := @this: android.test.ClassPathPackageInfoSource$ClassPathPackageInfo;

        r1 := @parameter0: android.test.ClassPathPackageInfoSource;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.util.Set;

        r4 := @parameter3: java.util.Set;

        r5 := @parameter4: android.test.ClassPathPackageInfoSource$1;

        specialinvoke r0.<android.test.ClassPathPackageInfoSource$ClassPathPackageInfo: void <init>(android.test.ClassPathPackageInfoSource,java.lang.String,java.util.Set,java.util.Set)>(r1, r2, r3, r4);

        return;
    }

    static java.util.Set access$100(android.test.ClassPathPackageInfoSource$ClassPathPackageInfo)
    {
        android.test.ClassPathPackageInfoSource$ClassPathPackageInfo r0;
        java.util.Set $r1;

        r0 := @parameter0: android.test.ClassPathPackageInfoSource$ClassPathPackageInfo;

        $r1 = specialinvoke r0.<android.test.ClassPathPackageInfoSource$ClassPathPackageInfo: java.util.Set getTopLevelClassesRecursive()>();

        return $r1;
    }

    private void addTopLevelClassesTo(java.util.Set)
    {
        android.test.ClassPathPackageInfoSource$ClassPathPackageInfo r0, $r6;
        java.util.Set r1, $r3, $r4;
        java.util.Iterator r2;
        boolean $z1;
        java.lang.Object $r5;

        r0 := @this: android.test.ClassPathPackageInfoSource$ClassPathPackageInfo;

        r1 := @parameter0: java.util.Set;

        $r3 = r0.<android.test.ClassPathPackageInfoSource$ClassPathPackageInfo: java.util.Set topLevelClasses>;

        interfaceinvoke r1.<java.util.Set: boolean addAll(java.util.Collection)>($r3);

        $r4 = specialinvoke r0.<android.test.ClassPathPackageInfoSource$ClassPathPackageInfo: java.util.Set getSubpackages()>();

        r2 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label2;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (android.test.ClassPathPackageInfoSource$ClassPathPackageInfo) $r5;

        specialinvoke $r6.<android.test.ClassPathPackageInfoSource$ClassPathPackageInfo: void addTopLevelClassesTo(java.util.Set)>(r1);

        goto label1;

     label2:
        return;
    }

    private java.util.Set getSubpackages()
    {
        android.test.ClassPathPackageInfoSource$ClassPathPackageInfo r0, $r10;
        java.util.Iterator r2;
        java.lang.String r3;
        java.util.HashSet $r4;
        java.util.Set $r5;
        boolean $z0;
        java.lang.Object $r6, $r9;
        android.test.ClassPathPackageInfoSource $r7;
        android.test.SimpleCache $r8;

        r0 := @this: android.test.ClassPathPackageInfoSource$ClassPathPackageInfo;

        $r4 = new java.util.HashSet;

        specialinvoke $r4.<java.util.HashSet: void <init>()>();

        $r5 = r0.<android.test.ClassPathPackageInfoSource$ClassPathPackageInfo: java.util.Set subpackageNames>;

        r2 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.lang.String) $r6;

        $r7 = r0.<android.test.ClassPathPackageInfoSource$ClassPathPackageInfo: android.test.ClassPathPackageInfoSource this$0>;

        $r8 = staticinvoke <android.test.ClassPathPackageInfoSource: android.test.SimpleCache access$300(android.test.ClassPathPackageInfoSource)>($r7);

        $r9 = virtualinvoke $r8.<android.test.SimpleCache: java.lang.Object get(java.lang.Object)>(r3);

        $r10 = (android.test.ClassPathPackageInfoSource$ClassPathPackageInfo) $r9;

        interfaceinvoke $r4.<java.util.Set: boolean add(java.lang.Object)>($r10);

        goto label1;

     label2:
        return $r4;
    }

    private java.util.Set getTopLevelClassesRecursive()
    {
        android.test.ClassPathPackageInfoSource$ClassPathPackageInfo r0;
        java.util.HashSet $r2;

        r0 := @this: android.test.ClassPathPackageInfoSource$ClassPathPackageInfo;

        $r2 = new java.util.HashSet;

        specialinvoke $r2.<java.util.HashSet: void <init>()>();

        specialinvoke r0.<android.test.ClassPathPackageInfoSource$ClassPathPackageInfo: void addTopLevelClassesTo(java.util.Set)>($r2);

        return $r2;
    }

    public boolean equals(java.lang.Object)
    {
        android.test.ClassPathPackageInfoSource$ClassPathPackageInfo r0, r4;
        boolean $z0, $z1;
        java.lang.String $r1, $r2;
        java.lang.Object r3;

        r0 := @this: android.test.ClassPathPackageInfoSource$ClassPathPackageInfo;

        r3 := @parameter0: java.lang.Object;

        $z0 = r3 instanceof android.test.ClassPathPackageInfoSource$ClassPathPackageInfo;

        if $z0 == 0 goto label1;

        r4 = (android.test.ClassPathPackageInfoSource$ClassPathPackageInfo) r3;

        $r2 = r0.<android.test.ClassPathPackageInfoSource$ClassPathPackageInfo: java.lang.String packageName>;

        $r1 = r4.<android.test.ClassPathPackageInfoSource$ClassPathPackageInfo: java.lang.String packageName>;

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        return $z1;

     label1:
        return 0;
    }

    public int hashCode()
    {
        android.test.ClassPathPackageInfoSource$ClassPathPackageInfo r0;
        java.lang.String $r1;
        int $i0;

        r0 := @this: android.test.ClassPathPackageInfoSource$ClassPathPackageInfo;

        $r1 = r0.<android.test.ClassPathPackageInfoSource$ClassPathPackageInfo: java.lang.String packageName>;

        $i0 = virtualinvoke $r1.<java.lang.String: int hashCode()>();

        return $i0;
    }
}
