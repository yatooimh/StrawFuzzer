class android.test.InstrumentationTestRunner$SuiteAssignmentPrinter extends java.lang.Object implements junit.framework.TestListener
{
    private long mEndTime;
    private long mStartTime;
    private android.os.Bundle mTestResult;
    private boolean mTimingValid;
    final android.test.InstrumentationTestRunner this$0;

    public void <init>(android.test.InstrumentationTestRunner)
    {
        android.test.InstrumentationTestRunner$SuiteAssignmentPrinter r0;
        android.test.InstrumentationTestRunner r1;

        r0 := @this: android.test.InstrumentationTestRunner$SuiteAssignmentPrinter;

        r1 := @parameter0: android.test.InstrumentationTestRunner;

        r0.<android.test.InstrumentationTestRunner$SuiteAssignmentPrinter: android.test.InstrumentationTestRunner this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void addError(junit.framework.Test, java.lang.Throwable)
    {
        android.test.InstrumentationTestRunner$SuiteAssignmentPrinter r0;
        junit.framework.Test r1;
        java.lang.Throwable r2;

        r0 := @this: android.test.InstrumentationTestRunner$SuiteAssignmentPrinter;

        r1 := @parameter0: junit.framework.Test;

        r2 := @parameter1: java.lang.Throwable;

        r0.<android.test.InstrumentationTestRunner$SuiteAssignmentPrinter: boolean mTimingValid> = 0;

        return;
    }

    public void addFailure(junit.framework.Test, junit.framework.AssertionFailedError)
    {
        android.test.InstrumentationTestRunner$SuiteAssignmentPrinter r0;
        junit.framework.Test r1;
        junit.framework.AssertionFailedError r2;

        r0 := @this: android.test.InstrumentationTestRunner$SuiteAssignmentPrinter;

        r1 := @parameter0: junit.framework.Test;

        r2 := @parameter1: junit.framework.AssertionFailedError;

        r0.<android.test.InstrumentationTestRunner$SuiteAssignmentPrinter: boolean mTimingValid> = 0;

        return;
    }

    public void endTest(junit.framework.Test)
    {
        android.test.InstrumentationTestRunner$SuiteAssignmentPrinter r0;
        junit.framework.Test r1;
        long l0, $l1, $l3, $l4;
        android.os.Bundle r2, $r4, $r23, $r24, $r26;
        boolean $z0, $z1;
        byte $b2, $b5, $b6;
        java.lang.Class $r13, $r14, $r17;
        float f0;
        java.lang.String r15, $r18, $r20, $r21, $r22;
        java.lang.StringBuilder $r16;
        junit.framework.TestCase $r19;
        android.test.InstrumentationTestRunner $r25;

        r0 := @this: android.test.InstrumentationTestRunner$SuiteAssignmentPrinter;

        r1 := @parameter0: junit.framework.Test;

        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r0.<android.test.InstrumentationTestRunner$SuiteAssignmentPrinter: long mEndTime> = $l1;

        $r4 = new android.os.Bundle;

        specialinvoke $r4.<android.os.Bundle: void <init>()>();

        r0.<android.test.InstrumentationTestRunner$SuiteAssignmentPrinter: android.os.Bundle mTestResult> = $r4;

        $z0 = r0.<android.test.InstrumentationTestRunner$SuiteAssignmentPrinter: boolean mTimingValid>;

        if $z0 == 0 goto label4;

        l0 = r0.<android.test.InstrumentationTestRunner$SuiteAssignmentPrinter: long mStartTime>;

        $b2 = l0 cmp 0L;

        if $b2 >= 0 goto label1;

        goto label4;

     label1:
        $l3 = r0.<android.test.InstrumentationTestRunner$SuiteAssignmentPrinter: long mEndTime>;

        $l4 = $l3 - l0;

        f0 = (float) $l4;

        $b5 = f0 cmpg 100.0F;

        if $b5 >= 0 goto label2;

        $r13 = class "Landroid/test/InstrumentationTestCase;";

        $r14 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $z1 = virtualinvoke $r13.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r14);

        if $z1 != 0 goto label2;

        r15 = "small";

        goto label5;

     label2:
        $b6 = f0 cmpg 1000.0F;

        if $b6 >= 0 goto label3;

        r15 = "medium";

        goto label5;

     label3:
        r15 = "large";

        goto label5;

     label4:
        r15 = "NA";

        f0 = -1.0F;

     label5:
        r0.<android.test.InstrumentationTestRunner$SuiteAssignmentPrinter: long mStartTime> = -1L;

        r2 = r0.<android.test.InstrumentationTestRunner$SuiteAssignmentPrinter: android.os.Bundle mTestResult>;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r18 = virtualinvoke $r17.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("#");

        $r19 = (junit.framework.TestCase) r1;

        $r20 = virtualinvoke $r19.<junit.framework.TestCase: java.lang.String getName()>();

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\nin ");

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r15);

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" suite\nrunTime: ");

        $r21 = staticinvoke <java.lang.String: java.lang.String valueOf(float)>(f0);

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r22 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("stream", $r22);

        $r23 = r0.<android.test.InstrumentationTestRunner$SuiteAssignmentPrinter: android.os.Bundle mTestResult>;

        virtualinvoke $r23.<android.os.Bundle: void putFloat(java.lang.String,float)>("runtime", f0);

        $r24 = r0.<android.test.InstrumentationTestRunner$SuiteAssignmentPrinter: android.os.Bundle mTestResult>;

        virtualinvoke $r24.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("suiteassignment", r15);

        $r25 = r0.<android.test.InstrumentationTestRunner$SuiteAssignmentPrinter: android.test.InstrumentationTestRunner this$0>;

        $r26 = r0.<android.test.InstrumentationTestRunner$SuiteAssignmentPrinter: android.os.Bundle mTestResult>;

        virtualinvoke $r25.<android.test.InstrumentationTestRunner: void sendStatus(int,android.os.Bundle)>(0, $r26);

        return;
    }

    public void startTest(junit.framework.Test)
    {
        android.test.InstrumentationTestRunner$SuiteAssignmentPrinter r0;
        junit.framework.Test r1;
        long $l0;

        r0 := @this: android.test.InstrumentationTestRunner$SuiteAssignmentPrinter;

        r1 := @parameter0: junit.framework.Test;

        r0.<android.test.InstrumentationTestRunner$SuiteAssignmentPrinter: boolean mTimingValid> = 1;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r0.<android.test.InstrumentationTestRunner$SuiteAssignmentPrinter: long mStartTime> = $l0;

        return;
    }
}
