public class android.test.LoaderTestCase extends android.test.AndroidTestCase
{

    static void <clinit>()
    {
        android.test.LoaderTestCase$1 $r0;

        $r0 = new android.test.LoaderTestCase$1;

        specialinvoke $r0.<android.test.LoaderTestCase$1: void <init>()>();

        return;
    }

    public void <init>()
    {
        android.test.LoaderTestCase r0;

        r0 := @this: android.test.LoaderTestCase;

        specialinvoke r0.<android.test.AndroidTestCase: void <init>()>();

        return;
    }

    public java.lang.Object getLoaderResultSynchronously(android.content.Loader)
    {
        android.test.LoaderTestCase r0;
        java.util.concurrent.ArrayBlockingQueue $r3;
        android.test.LoaderTestCase$2 $r4;
        android.test.LoaderTestCase$3 $r5;
        android.os.Looper $r6;
        java.lang.Throwable $r7;
        java.lang.RuntimeException $r8;
        android.content.Loader r9;
        java.lang.Object r10;

        r0 := @this: android.test.LoaderTestCase;

        r9 := @parameter0: android.content.Loader;

        $r3 = new java.util.concurrent.ArrayBlockingQueue;

        specialinvoke $r3.<java.util.concurrent.ArrayBlockingQueue: void <init>(int)>(1);

        $r4 = new android.test.LoaderTestCase$2;

        specialinvoke $r4.<android.test.LoaderTestCase$2: void <init>(android.test.LoaderTestCase,java.util.concurrent.ArrayBlockingQueue)>(r0, $r3);

        $r5 = new android.test.LoaderTestCase$3;

        $r6 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        specialinvoke $r5.<android.test.LoaderTestCase$3: void <init>(android.test.LoaderTestCase,android.os.Looper,android.content.Loader,android.content.Loader$OnLoadCompleteListener)>(r0, $r6, r9, $r4);

        virtualinvoke $r5.<android.os.Handler: boolean sendEmptyMessage(int)>(0);

     label1:
        r10 = virtualinvoke $r3.<java.util.concurrent.ArrayBlockingQueue: java.lang.Object take()>();

     label2:
        return r10;

     label3:
        $r7 := @caughtexception;

        $r8 = new java.lang.RuntimeException;

        specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("waiting thread interrupted", $r7);

        throw $r8;

        catch java.lang.InterruptedException from label1 to label2 with label3;
    }
}
