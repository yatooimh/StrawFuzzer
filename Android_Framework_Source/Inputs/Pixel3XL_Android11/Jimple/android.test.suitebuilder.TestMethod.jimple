public class android.test.suitebuilder.TestMethod extends java.lang.Object
{
    private final java.lang.Class enclosingClass;
    private final java.lang.String enclosingClassname;
    private final java.lang.String testMethodName;

    public void <init>(java.lang.String, java.lang.Class)
    {
        android.test.suitebuilder.TestMethod r0;
        java.lang.String r1, $r3;
        java.lang.Class r2;

        r0 := @this: android.test.suitebuilder.TestMethod;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Class;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.test.suitebuilder.TestMethod: java.lang.Class enclosingClass> = r2;

        $r3 = virtualinvoke r2.<java.lang.Class: java.lang.String getName()>();

        r0.<android.test.suitebuilder.TestMethod: java.lang.String enclosingClassname> = $r3;

        r0.<android.test.suitebuilder.TestMethod: java.lang.String testMethodName> = r1;

        return;
    }

    public void <init>(java.lang.reflect.Method, java.lang.Class)
    {
        android.test.suitebuilder.TestMethod r0;
        java.lang.reflect.Method r1;
        java.lang.Class r2;
        java.lang.String $r3;

        r0 := @this: android.test.suitebuilder.TestMethod;

        r1 := @parameter0: java.lang.reflect.Method;

        r2 := @parameter1: java.lang.Class;

        $r3 = virtualinvoke r1.<java.lang.reflect.Method: java.lang.String getName()>();

        specialinvoke r0.<android.test.suitebuilder.TestMethod: void <init>(java.lang.String,java.lang.Class)>($r3, r2);

        return;
    }

    public void <init>(junit.framework.TestCase)
    {
        android.test.suitebuilder.TestMethod r0;
        junit.framework.TestCase r1;
        java.lang.String $r2;
        java.lang.Class $r3;

        r0 := @this: android.test.suitebuilder.TestMethod;

        r1 := @parameter0: junit.framework.TestCase;

        $r2 = virtualinvoke r1.<junit.framework.TestCase: java.lang.String getName()>();

        $r3 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        specialinvoke r0.<android.test.suitebuilder.TestMethod: void <init>(java.lang.String,java.lang.Class)>($r2, $r3);

        return;
    }

    private junit.framework.TestCase instantiateTest(java.lang.Class, java.lang.String) throws java.lang.reflect.InvocationTargetException, java.lang.IllegalAccessException, java.lang.InstantiationException
    {
        android.test.suitebuilder.TestMethod r0;
        java.lang.reflect.Constructor[] r1;
        int i0, $i1, i2;
        java.lang.reflect.Constructor r2;
        java.lang.Class[] r3;
        java.lang.StringBuilder $r4;
        java.lang.String $r6, $r9, r18;
        java.lang.RuntimeException $r8;
        boolean $z0, $z1;
        java.lang.Object[] $r10, $r13;
        java.lang.Object $r11, $r14;
        junit.framework.TestCase $r12, $r16, r19;
        java.lang.Class $r15, r17;

        r0 := @this: android.test.suitebuilder.TestMethod;

        r17 := @parameter0: java.lang.Class;

        r18 := @parameter1: java.lang.String;

        r1 = virtualinvoke r17.<java.lang.Class: java.lang.reflect.Constructor[] getConstructors()>();

        $i1 = lengthof r1;

        if $i1 != 0 goto label1;

        $r15 = virtualinvoke r17.<java.lang.Class: java.lang.Class getSuperclass()>();

        $r16 = specialinvoke r0.<android.test.suitebuilder.TestMethod: junit.framework.TestCase instantiateTest(java.lang.Class,java.lang.String)>($r15, r18);

        return $r16;

     label1:
        i0 = lengthof r1;

        i2 = 0;

     label2:
        if i2 >= i0 goto label5;

        r2 = r1[i2];

        r3 = virtualinvoke r2.<java.lang.reflect.Constructor: java.lang.Class[] getParameterTypes()>();

        $z0 = specialinvoke r0.<android.test.suitebuilder.TestMethod: boolean noargsConstructor(java.lang.Class[])>(r3);

        if $z0 == 0 goto label3;

        $r13 = newarray (java.lang.Object)[0];

        $r14 = virtualinvoke r2.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r13);

        r19 = (junit.framework.TestCase) $r14;

        virtualinvoke r19.<junit.framework.TestCase: void setName(java.lang.String)>(r18);

        return r19;

     label3:
        $z1 = specialinvoke r0.<android.test.suitebuilder.TestMethod: boolean singleStringConstructor(java.lang.Class[])>(r3);

        if $z1 == 0 goto label4;

        $r10 = newarray (java.lang.Object)[1];

        $r10[0] = r18;

        $r11 = virtualinvoke r2.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r10);

        $r12 = (junit.framework.TestCase) $r11;

        return $r12;

     label4:
        i2 = i2 + 1;

        goto label2;

     label5:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to locate a constructor for ");

        $r6 = virtualinvoke r17.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = new java.lang.RuntimeException;

        $r9 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.String)>($r9);

        throw $r8;
    }

    private boolean noargsConstructor(java.lang.Class[])
    {
        android.test.suitebuilder.TestMethod r0;
        java.lang.Class[] r1;
        int $i0;
        boolean z0;

        r0 := @this: android.test.suitebuilder.TestMethod;

        r1 := @parameter0: java.lang.Class[];

        $i0 = lengthof r1;

        if $i0 != 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    private boolean singleStringConstructor(java.lang.Class[])
    {
        android.test.suitebuilder.TestMethod r0;
        java.lang.Class[] r1;
        int i0;
        java.lang.Class $r2;
        boolean $z1, z2;

        r0 := @this: android.test.suitebuilder.TestMethod;

        r1 := @parameter0: java.lang.Class[];

        i0 = lengthof r1;

        z2 = 0;

        if i0 != 1 goto label1;

        z2 = 0;

        $r2 = r1[0];

        $z1 = virtualinvoke $r2.<java.lang.Object: boolean equals(java.lang.Object)>(class "Ljava/lang/String;");

        if $z1 == 0 goto label1;

        z2 = 1;

     label1:
        return z2;
    }

    public junit.framework.TestCase createTest() throws java.lang.reflect.InvocationTargetException, java.lang.IllegalAccessException, java.lang.InstantiationException
    {
        android.test.suitebuilder.TestMethod r0;
        java.lang.String $r1;
        java.lang.Class $r2;
        junit.framework.TestCase $r3;

        r0 := @this: android.test.suitebuilder.TestMethod;

        $r2 = r0.<android.test.suitebuilder.TestMethod: java.lang.Class enclosingClass>;

        $r1 = r0.<android.test.suitebuilder.TestMethod: java.lang.String testMethodName>;

        $r3 = specialinvoke r0.<android.test.suitebuilder.TestMethod: junit.framework.TestCase instantiateTest(java.lang.Class,java.lang.String)>($r2, $r1);

        return $r3;
    }

    public boolean equals(java.lang.Object)
    {
        android.test.suitebuilder.TestMethod r0, r8;
        java.lang.Class $r1, $r2;
        java.lang.String $r3, $r4, $r5, $r6, r9, r10;
        boolean $z0, $z1;
        java.lang.Object r7;

        r0 := @this: android.test.suitebuilder.TestMethod;

        r7 := @parameter0: java.lang.Object;

        if r0 != r7 goto label1;

        return 1;

     label1:
        if r7 == null goto label9;

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = virtualinvoke r7.<java.lang.Object: java.lang.Class getClass()>();

        if $r1 == $r2 goto label2;

        goto label9;

     label2:
        r8 = (android.test.suitebuilder.TestMethod) r7;

        r9 = r0.<android.test.suitebuilder.TestMethod: java.lang.String enclosingClassname>;

        if r9 == null goto label3;

        $r6 = r8.<android.test.suitebuilder.TestMethod: java.lang.String enclosingClassname>;

        $z1 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z1 != 0 goto label5;

        goto label4;

     label3:
        $r3 = r8.<android.test.suitebuilder.TestMethod: java.lang.String enclosingClassname>;

        if $r3 == null goto label5;

     label4:
        return 0;

     label5:
        r10 = r0.<android.test.suitebuilder.TestMethod: java.lang.String testMethodName>;

        if r10 == null goto label6;

        $r5 = r8.<android.test.suitebuilder.TestMethod: java.lang.String testMethodName>;

        $z0 = virtualinvoke r10.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z0 != 0 goto label8;

        goto label7;

     label6:
        $r4 = r8.<android.test.suitebuilder.TestMethod: java.lang.String testMethodName>;

        if $r4 == null goto label8;

     label7:
        return 0;

     label8:
        return 1;

     label9:
        return 0;
    }

    public java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)
    {
        android.test.suitebuilder.TestMethod r0;
        java.lang.Class $r1, r6;
        java.lang.String $r2;
        java.lang.Class[] $r3;
        java.lang.reflect.Method $r4;
        java.lang.Throwable $r5;
        java.lang.'annotation'.Annotation r7;

        r0 := @this: android.test.suitebuilder.TestMethod;

        r6 := @parameter0: java.lang.Class;

     label1:
        $r1 = virtualinvoke r0.<android.test.suitebuilder.TestMethod: java.lang.Class getEnclosingClass()>();

        $r2 = virtualinvoke r0.<android.test.suitebuilder.TestMethod: java.lang.String getName()>();

        $r3 = newarray (java.lang.Class)[0];

        $r4 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>($r2, $r3);

        r7 = virtualinvoke $r4.<java.lang.reflect.Method: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(r6);

     label2:
        return r7;

     label3:
        $r5 := @caughtexception;

        return null;

        catch java.lang.NoSuchMethodException from label1 to label2 with label3;
    }

    public java.lang.Class getEnclosingClass()
    {
        android.test.suitebuilder.TestMethod r0;
        java.lang.Class $r1;

        r0 := @this: android.test.suitebuilder.TestMethod;

        $r1 = r0.<android.test.suitebuilder.TestMethod: java.lang.Class enclosingClass>;

        return $r1;
    }

    public java.lang.String getEnclosingClassname()
    {
        android.test.suitebuilder.TestMethod r0;
        java.lang.String $r1;

        r0 := @this: android.test.suitebuilder.TestMethod;

        $r1 = r0.<android.test.suitebuilder.TestMethod: java.lang.String enclosingClassname>;

        return $r1;
    }

    public java.lang.String getName()
    {
        android.test.suitebuilder.TestMethod r0;
        java.lang.String $r1;

        r0 := @this: android.test.suitebuilder.TestMethod;

        $r1 = r0.<android.test.suitebuilder.TestMethod: java.lang.String testMethodName>;

        return $r1;
    }

    public int hashCode()
    {
        android.test.suitebuilder.TestMethod r0;
        int $i0, $i1, i2, i3;
        java.lang.String r1, r2;

        r0 := @this: android.test.suitebuilder.TestMethod;

        r1 = r0.<android.test.suitebuilder.TestMethod: java.lang.String enclosingClassname>;

        i2 = 0;

        if r1 == null goto label1;

        i3 = virtualinvoke r1.<java.lang.String: int hashCode()>();

        goto label2;

     label1:
        i3 = 0;

     label2:
        r2 = r0.<android.test.suitebuilder.TestMethod: java.lang.String testMethodName>;

        if r2 == null goto label3;

        i2 = virtualinvoke r2.<java.lang.String: int hashCode()>();

     label3:
        $i0 = i3 * 31;

        $i1 = $i0 + i2;

        return $i1;
    }

    public java.lang.String toString()
    {
        android.test.suitebuilder.TestMethod r0;
        java.lang.StringBuilder $r2;
        java.lang.String $r3, $r6, $r8;

        r0 := @this: android.test.suitebuilder.TestMethod;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = r0.<android.test.suitebuilder.TestMethod: java.lang.String enclosingClassname>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r6 = r0.<android.test.suitebuilder.TestMethod: java.lang.String testMethodName>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }
}
