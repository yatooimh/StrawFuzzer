public class android.text.DynamicLayout extends android.text.Layout
{
    private static final int BLOCK_MINIMUM_CHARACTER_LENGTH;
    private static final int COLUMNS_ELLIPSIZE;
    private static final int COLUMNS_NORMAL;
    private static final int DESCENT;
    private static final int DIR;
    private static final int DIR_SHIFT;
    private static final int ELLIPSIS_COUNT;
    private static final int ELLIPSIS_START;
    private static final int ELLIPSIS_UNDEFINED;
    private static final int EXTRA;
    private static final int HYPHEN;
    private static final int HYPHEN_MASK;
    public static final int INVALID_BLOCK_INDEX;
    private static final int MAY_PROTRUDE_FROM_TOP_OR_BOTTOM;
    private static final int MAY_PROTRUDE_FROM_TOP_OR_BOTTOM_MASK;
    private static final int PRIORITY;
    private static final int START;
    private static final int START_MASK;
    private static final int TAB;
    private static final int TAB_MASK;
    private static final int TOP;
    private static android.text.StaticLayout$Builder sBuilder;
    private static final java.lang.Object[] sLock;
    private static android.text.StaticLayout sStaticLayout;
    private java.lang.CharSequence mBase;
    private int[] mBlockEndLines;
    private int[] mBlockIndices;
    private android.util.ArraySet mBlocksAlwaysNeedToBeRedrawn;
    private int mBottomPadding;
    private int mBreakStrategy;
    private java.lang.CharSequence mDisplay;
    private boolean mEllipsize;
    private android.text.TextUtils$TruncateAt mEllipsizeAt;
    private int mEllipsizedWidth;
    private boolean mFallbackLineSpacing;
    private int mHyphenationFrequency;
    private boolean mIncludePad;
    private int mIndexFirstChangedBlock;
    private android.text.PackedIntVector mInts;
    private int mJustificationMode;
    private int mNumberOfBlocks;
    private android.text.PackedObjectVector mObjects;
    private android.graphics.Rect mTempRect;
    private int mTopPadding;
    private android.text.DynamicLayout$ChangeWatcher mWatcher;

    static void <clinit>()
    {
        java.lang.Object[] $r0;

        <android.text.DynamicLayout: int TOP> = 1;

        <android.text.DynamicLayout: int TAB_MASK> = 536870912;

        <android.text.DynamicLayout: int TAB> = 0;

        <android.text.DynamicLayout: int START_MASK> = 536870911;

        <android.text.DynamicLayout: int START> = 0;

        <android.text.DynamicLayout: int PRIORITY> = 128;

        <android.text.DynamicLayout: int MAY_PROTRUDE_FROM_TOP_OR_BOTTOM_MASK> = 256;

        <android.text.DynamicLayout: int MAY_PROTRUDE_FROM_TOP_OR_BOTTOM> = 4;

        <android.text.DynamicLayout: int INVALID_BLOCK_INDEX> = -1;

        <android.text.DynamicLayout: int HYPHEN_MASK> = 255;

        <android.text.DynamicLayout: int HYPHEN> = 4;

        <android.text.DynamicLayout: int EXTRA> = 3;

        <android.text.DynamicLayout: int ELLIPSIS_UNDEFINED> = -2147483648;

        <android.text.DynamicLayout: int ELLIPSIS_START> = 5;

        <android.text.DynamicLayout: int ELLIPSIS_COUNT> = 6;

        <android.text.DynamicLayout: int DIR_SHIFT> = 30;

        <android.text.DynamicLayout: int DIR> = 0;

        <android.text.DynamicLayout: int DESCENT> = 2;

        <android.text.DynamicLayout: int COLUMNS_NORMAL> = 5;

        <android.text.DynamicLayout: int COLUMNS_ELLIPSIZE> = 7;

        <android.text.DynamicLayout: int BLOCK_MINIMUM_CHARACTER_LENGTH> = 400;

        <android.text.DynamicLayout: android.text.StaticLayout sStaticLayout> = null;

        <android.text.DynamicLayout: android.text.StaticLayout$Builder sBuilder> = null;

        $r0 = newarray (java.lang.Object)[0];

        <android.text.DynamicLayout: java.lang.Object[] sLock> = $r0;

        return;
    }

    private void <init>(android.text.DynamicLayout$Builder)
    {
        android.text.DynamicLayout r0;
        android.text.DynamicLayout$Builder r1;
        android.text.TextUtils$TruncateAt $r2;
        java.lang.CharSequence $r3, $r4, $r9;
        android.text.TextPaint $r5;
        int $i0, $i1, $i2, $i3;
        android.text.Layout$Alignment $r6;
        android.text.TextDirectionHeuristic $r7;
        float $f0, $f1;
        android.graphics.Rect $r8;
        boolean $z0;

        r0 := @this: android.text.DynamicLayout;

        r1 := @parameter0: android.text.DynamicLayout$Builder;

        $r2 = staticinvoke <android.text.DynamicLayout$Builder: android.text.TextUtils$TruncateAt access$200(android.text.DynamicLayout$Builder)>(r1);

        $r3 = staticinvoke <android.text.DynamicLayout$Builder: java.lang.CharSequence access$300(android.text.DynamicLayout$Builder)>(r1);

        $r4 = staticinvoke <android.text.DynamicLayout: java.lang.CharSequence createEllipsizer(android.text.TextUtils$TruncateAt,java.lang.CharSequence)>($r2, $r3);

        $r5 = staticinvoke <android.text.DynamicLayout$Builder: android.text.TextPaint access$400(android.text.DynamicLayout$Builder)>(r1);

        $i0 = staticinvoke <android.text.DynamicLayout$Builder: int access$500(android.text.DynamicLayout$Builder)>(r1);

        $r6 = staticinvoke <android.text.DynamicLayout$Builder: android.text.Layout$Alignment access$600(android.text.DynamicLayout$Builder)>(r1);

        $r7 = staticinvoke <android.text.DynamicLayout$Builder: android.text.TextDirectionHeuristic access$700(android.text.DynamicLayout$Builder)>(r1);

        $f0 = staticinvoke <android.text.DynamicLayout$Builder: float access$800(android.text.DynamicLayout$Builder)>(r1);

        $f1 = staticinvoke <android.text.DynamicLayout$Builder: float access$900(android.text.DynamicLayout$Builder)>(r1);

        specialinvoke r0.<android.text.Layout: void <init>(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,android.text.TextDirectionHeuristic,float,float)>($r4, $r5, $i0, $r6, $r7, $f0, $f1);

        $r8 = new android.graphics.Rect;

        specialinvoke $r8.<android.graphics.Rect: void <init>()>();

        r0.<android.text.DynamicLayout: android.graphics.Rect mTempRect> = $r8;

        $r9 = staticinvoke <android.text.DynamicLayout$Builder: java.lang.CharSequence access$300(android.text.DynamicLayout$Builder)>(r1);

        r0.<android.text.DynamicLayout: java.lang.CharSequence mDisplay> = $r9;

        $z0 = staticinvoke <android.text.DynamicLayout$Builder: boolean access$1000(android.text.DynamicLayout$Builder)>(r1);

        r0.<android.text.DynamicLayout: boolean mIncludePad> = $z0;

        $i1 = staticinvoke <android.text.DynamicLayout$Builder: int access$1100(android.text.DynamicLayout$Builder)>(r1);

        r0.<android.text.DynamicLayout: int mBreakStrategy> = $i1;

        $i2 = staticinvoke <android.text.DynamicLayout$Builder: int access$1200(android.text.DynamicLayout$Builder)>(r1);

        r0.<android.text.DynamicLayout: int mJustificationMode> = $i2;

        $i3 = staticinvoke <android.text.DynamicLayout$Builder: int access$1300(android.text.DynamicLayout$Builder)>(r1);

        r0.<android.text.DynamicLayout: int mHyphenationFrequency> = $i3;

        specialinvoke r0.<android.text.DynamicLayout: void generate(android.text.DynamicLayout$Builder)>(r1);

        return;
    }

    void <init>(android.text.DynamicLayout$Builder, android.text.DynamicLayout$1)
    {
        android.text.DynamicLayout r0;
        android.text.DynamicLayout$Builder r1;
        android.text.DynamicLayout$1 r2;

        r0 := @this: android.text.DynamicLayout;

        r1 := @parameter0: android.text.DynamicLayout$Builder;

        r2 := @parameter1: android.text.DynamicLayout$1;

        specialinvoke r0.<android.text.DynamicLayout: void <init>(android.text.DynamicLayout$Builder)>(r1);

        return;
    }

    public void <init>(java.lang.CharSequence, android.text.TextPaint, int, android.text.Layout$Alignment, float, float, boolean)
    {
        android.text.DynamicLayout r0;
        java.lang.CharSequence r1;
        android.text.TextPaint r2;
        int i0;
        android.text.Layout$Alignment r3;
        float f0, f1;
        boolean z0;

        r0 := @this: android.text.DynamicLayout;

        r1 := @parameter0: java.lang.CharSequence;

        r2 := @parameter1: android.text.TextPaint;

        i0 := @parameter2: int;

        r3 := @parameter3: android.text.Layout$Alignment;

        f0 := @parameter4: float;

        f1 := @parameter5: float;

        z0 := @parameter6: boolean;

        specialinvoke r0.<android.text.DynamicLayout: void <init>(java.lang.CharSequence,java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,boolean)>(r1, r1, r2, i0, r3, f0, f1, z0);

        return;
    }

    public void <init>(java.lang.CharSequence, java.lang.CharSequence, android.text.TextPaint, int, android.text.Layout$Alignment, float, float, boolean)
    {
        android.text.DynamicLayout r0;
        java.lang.CharSequence r1, r2;
        android.text.TextPaint r3;
        int i0;
        android.text.Layout$Alignment r4;
        float f0, f1;
        boolean z0;

        r0 := @this: android.text.DynamicLayout;

        r1 := @parameter0: java.lang.CharSequence;

        r2 := @parameter1: java.lang.CharSequence;

        r3 := @parameter2: android.text.TextPaint;

        i0 := @parameter3: int;

        r4 := @parameter4: android.text.Layout$Alignment;

        f0 := @parameter5: float;

        f1 := @parameter6: float;

        z0 := @parameter7: boolean;

        specialinvoke r0.<android.text.DynamicLayout: void <init>(java.lang.CharSequence,java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,boolean,android.text.TextUtils$TruncateAt,int)>(r1, r2, r3, i0, r4, f0, f1, z0, null, 0);

        return;
    }

    public void <init>(java.lang.CharSequence, java.lang.CharSequence, android.text.TextPaint, int, android.text.Layout$Alignment, float, float, boolean, android.text.TextUtils$TruncateAt, int)
    {
        android.text.DynamicLayout r0;
        java.lang.CharSequence r1, r2;
        android.text.TextPaint r3;
        int i0, i1;
        android.text.Layout$Alignment r4;
        float f0, f1;
        boolean z0;
        android.text.TextUtils$TruncateAt r5;
        android.text.TextDirectionHeuristic $r6;

        r0 := @this: android.text.DynamicLayout;

        r1 := @parameter0: java.lang.CharSequence;

        r2 := @parameter1: java.lang.CharSequence;

        r3 := @parameter2: android.text.TextPaint;

        i0 := @parameter3: int;

        r4 := @parameter4: android.text.Layout$Alignment;

        f0 := @parameter5: float;

        f1 := @parameter6: float;

        z0 := @parameter7: boolean;

        r5 := @parameter8: android.text.TextUtils$TruncateAt;

        i1 := @parameter9: int;

        $r6 = <android.text.TextDirectionHeuristics: android.text.TextDirectionHeuristic FIRSTSTRONG_LTR>;

        specialinvoke r0.<android.text.DynamicLayout: void <init>(java.lang.CharSequence,java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,android.text.TextDirectionHeuristic,float,float,boolean,int,int,int,android.text.TextUtils$TruncateAt,int)>(r1, r2, r3, i0, r4, $r6, f0, f1, z0, 0, 0, 0, r5, i1);

        return;
    }

    public void <init>(java.lang.CharSequence, java.lang.CharSequence, android.text.TextPaint, int, android.text.Layout$Alignment, android.text.TextDirectionHeuristic, float, float, boolean, int, int, int, android.text.TextUtils$TruncateAt, int)
    {
        android.text.DynamicLayout r0;
        java.lang.CharSequence r1, $r6, r13;
        android.text.TextPaint r2;
        int i0, i1, i2, i3, i4;
        android.text.Layout$Alignment r3;
        android.text.TextDirectionHeuristic r4;
        float f0, f1;
        boolean z0;
        android.text.TextUtils$TruncateAt r5;
        android.graphics.Rect $r7;
        android.text.DynamicLayout$Builder $r8, $r9, $r10, $r11, $r12, r14;

        r0 := @this: android.text.DynamicLayout;

        r13 := @parameter0: java.lang.CharSequence;

        r1 := @parameter1: java.lang.CharSequence;

        r2 := @parameter2: android.text.TextPaint;

        i0 := @parameter3: int;

        r3 := @parameter4: android.text.Layout$Alignment;

        r4 := @parameter5: android.text.TextDirectionHeuristic;

        f0 := @parameter6: float;

        f1 := @parameter7: float;

        z0 := @parameter8: boolean;

        i1 := @parameter9: int;

        i2 := @parameter10: int;

        i3 := @parameter11: int;

        r5 := @parameter12: android.text.TextUtils$TruncateAt;

        i4 := @parameter13: int;

        $r6 = staticinvoke <android.text.DynamicLayout: java.lang.CharSequence createEllipsizer(android.text.TextUtils$TruncateAt,java.lang.CharSequence)>(r5, r1);

        specialinvoke r0.<android.text.Layout: void <init>(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,android.text.TextDirectionHeuristic,float,float)>($r6, r2, i0, r3, r4, f0, f1);

        $r7 = new android.graphics.Rect;

        specialinvoke $r7.<android.graphics.Rect: void <init>()>();

        r0.<android.text.DynamicLayout: android.graphics.Rect mTempRect> = $r7;

        $r8 = staticinvoke <android.text.DynamicLayout$Builder: android.text.DynamicLayout$Builder obtain(java.lang.CharSequence,android.text.TextPaint,int)>(r13, r2, i0);

        $r9 = virtualinvoke $r8.<android.text.DynamicLayout$Builder: android.text.DynamicLayout$Builder setAlignment(android.text.Layout$Alignment)>(r3);

        $r10 = virtualinvoke $r9.<android.text.DynamicLayout$Builder: android.text.DynamicLayout$Builder setTextDirection(android.text.TextDirectionHeuristic)>(r4);

        $r11 = virtualinvoke $r10.<android.text.DynamicLayout$Builder: android.text.DynamicLayout$Builder setLineSpacing(float,float)>(f1, f0);

        $r12 = virtualinvoke $r11.<android.text.DynamicLayout$Builder: android.text.DynamicLayout$Builder setEllipsizedWidth(int)>(i4);

        r14 = virtualinvoke $r12.<android.text.DynamicLayout$Builder: android.text.DynamicLayout$Builder setEllipsize(android.text.TextUtils$TruncateAt)>(r5);

        r0.<android.text.DynamicLayout: java.lang.CharSequence mDisplay> = r1;

        r0.<android.text.DynamicLayout: boolean mIncludePad> = z0;

        r0.<android.text.DynamicLayout: int mBreakStrategy> = i1;

        r0.<android.text.DynamicLayout: int mJustificationMode> = i3;

        r0.<android.text.DynamicLayout: int mHyphenationFrequency> = i2;

        specialinvoke r0.<android.text.DynamicLayout: void generate(android.text.DynamicLayout$Builder)>(r14);

        staticinvoke <android.text.DynamicLayout$Builder: void access$100(android.text.DynamicLayout$Builder)>(r14);

        return;
    }

    private void addBlockAtOffset(int)
    {
        android.text.DynamicLayout r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, i7, i8, i9, i10;
        int[] $r1, r2, r3;

        r0 := @this: android.text.DynamicLayout;

        i7 := @parameter0: int;

        i8 = virtualinvoke r0.<android.text.DynamicLayout: int getLineForOffset(int)>(i7);

        r2 = r0.<android.text.DynamicLayout: int[] mBlockEndLines>;

        if r2 != null goto label1;

        r3 = staticinvoke <com.android.internal.util.ArrayUtils: int[] newUnpaddedIntArray(int)>(1);

        r0.<android.text.DynamicLayout: int[] mBlockEndLines> = r3;

        i9 = r0.<android.text.DynamicLayout: int mNumberOfBlocks>;

        r3[i9] = i8;

        specialinvoke r0.<android.text.DynamicLayout: void updateAlwaysNeedsToBeRedrawn(int)>(i9);

        $i5 = r0.<android.text.DynamicLayout: int mNumberOfBlocks>;

        $i6 = $i5 + 1;

        r0.<android.text.DynamicLayout: int mNumberOfBlocks> = $i6;

        return;

     label1:
        i10 = r0.<android.text.DynamicLayout: int mNumberOfBlocks>;

        $i0 = i10 - 1;

        $i1 = r2[$i0];

        if i8 <= $i1 goto label2;

        $r1 = staticinvoke <com.android.internal.util.GrowingArrayUtils: int[] append(int[],int,int)>(r2, i10, i8);

        r0.<android.text.DynamicLayout: int[] mBlockEndLines> = $r1;

        $i2 = r0.<android.text.DynamicLayout: int mNumberOfBlocks>;

        specialinvoke r0.<android.text.DynamicLayout: void updateAlwaysNeedsToBeRedrawn(int)>($i2);

        $i3 = r0.<android.text.DynamicLayout: int mNumberOfBlocks>;

        $i4 = $i3 + 1;

        r0.<android.text.DynamicLayout: int mNumberOfBlocks> = $i4;

     label2:
        return;
    }

    private boolean contentMayProtrudeFromLineTopOrBottom(java.lang.CharSequence, int, int)
    {
        android.text.DynamicLayout r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6;
        android.text.TextPaint r1;
        boolean $z1, z2, z3;
        android.graphics.Rect $r2, $r3, $r4, $r5;
        android.text.PrecomputedText $r6;
        android.text.Spanned $r7;
        java.lang.Object[] $r8;
        android.text.style.ReplacementSpan[] $r9;
        java.lang.CharSequence r10;
        android.graphics.Paint$FontMetricsInt r11;

        r0 := @this: android.text.DynamicLayout;

        r10 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        z2 = r10 instanceof android.text.Spanned;

        if z2 == 0 goto label1;

        $r7 = (android.text.Spanned) r10;

        $r8 = interfaceinvoke $r7.<android.text.Spanned: java.lang.Object[] getSpans(int,int,java.lang.Class)>(i0, i1, class "Landroid/text/style/ReplacementSpan;");

        $r9 = (android.text.style.ReplacementSpan[]) $r8;

        $i6 = lengthof $r9;

        if $i6 <= 0 goto label1;

        return 1;

     label1:
        r1 = virtualinvoke r0.<android.text.DynamicLayout: android.text.TextPaint getPaint()>();

        $z1 = r10 instanceof android.text.PrecomputedText;

        if $z1 == 0 goto label2;

        $r6 = (android.text.PrecomputedText) r10;

        $r5 = r0.<android.text.DynamicLayout: android.graphics.Rect mTempRect>;

        virtualinvoke $r6.<android.text.PrecomputedText: void getBounds(int,int,android.graphics.Rect)>(i0, i1, $r5);

        goto label3;

     label2:
        $r2 = r0.<android.text.DynamicLayout: android.graphics.Rect mTempRect>;

        virtualinvoke r1.<android.graphics.Paint: void getTextBounds(java.lang.CharSequence,int,int,android.graphics.Rect)>(r10, i0, i1, $r2);

     label3:
        r11 = virtualinvoke r1.<android.graphics.Paint: android.graphics.Paint$FontMetricsInt getFontMetricsInt()>();

        z3 = 1;

        $r3 = r0.<android.text.DynamicLayout: android.graphics.Rect mTempRect>;

        $i3 = $r3.<android.graphics.Rect: int top>;

        $i2 = r11.<android.graphics.Paint$FontMetricsInt: int top>;

        if $i3 < $i2 goto label5;

        $r4 = r0.<android.text.DynamicLayout: android.graphics.Rect mTempRect>;

        $i5 = $r4.<android.graphics.Rect: int bottom>;

        $i4 = r11.<android.graphics.Paint$FontMetricsInt: int bottom>;

        if $i5 <= $i4 goto label4;

        z3 = 1;

        goto label5;

     label4:
        z3 = 0;

     label5:
        return z3;
    }

    private void createBlocks()
    {
        android.text.DynamicLayout r0;
        java.lang.CharSequence r1;
        int $i0, $i1, $i2, i3, i4, i5;
        int[] $r2, $r3, $r4, $r5;

        r0 := @this: android.text.DynamicLayout;

        i3 = 400;

        r0.<android.text.DynamicLayout: int mNumberOfBlocks> = 0;

        r1 = r0.<android.text.DynamicLayout: java.lang.CharSequence mDisplay>;

     label1:
        i4 = staticinvoke <android.text.TextUtils: int indexOf(java.lang.CharSequence,char,int)>(r1, 10, i3);

        if i4 >= 0 goto label4;

        $i0 = interfaceinvoke r1.<java.lang.CharSequence: int length()>();

        specialinvoke r0.<android.text.DynamicLayout: void addBlockAtOffset(int)>($i0);

        $r2 = r0.<android.text.DynamicLayout: int[] mBlockEndLines>;

        $i1 = lengthof $r2;

        $r3 = newarray (int)[$i1];

        r0.<android.text.DynamicLayout: int[] mBlockIndices> = $r3;

        i5 = 0;

     label2:
        $r4 = r0.<android.text.DynamicLayout: int[] mBlockEndLines>;

        $i2 = lengthof $r4;

        if i5 >= $i2 goto label3;

        $r5 = r0.<android.text.DynamicLayout: int[] mBlockIndices>;

        $r5[i5] = -1;

        i5 = i5 + 1;

        goto label2;

     label3:
        return;

     label4:
        specialinvoke r0.<android.text.DynamicLayout: void addBlockAtOffset(int)>(i4);

        i3 = i4 + 400;

        goto label1;
    }

    private static java.lang.CharSequence createEllipsizer(android.text.TextUtils$TruncateAt, java.lang.CharSequence)
    {
        android.text.TextUtils$TruncateAt r0;
        java.lang.CharSequence r1;
        boolean $z0;
        android.text.Layout$Ellipsizer $r2;
        android.text.Layout$SpannedEllipsizer $r3;

        r0 := @parameter0: android.text.TextUtils$TruncateAt;

        r1 := @parameter1: java.lang.CharSequence;

        if r0 != null goto label1;

        return r1;

     label1:
        $z0 = r1 instanceof android.text.Spanned;

        if $z0 == 0 goto label2;

        $r3 = new android.text.Layout$SpannedEllipsizer;

        specialinvoke $r3.<android.text.Layout$SpannedEllipsizer: void <init>(java.lang.CharSequence)>(r1);

        return $r3;

     label2:
        $r2 = new android.text.Layout$Ellipsizer;

        specialinvoke $r2.<android.text.Layout$Ellipsizer: void <init>(java.lang.CharSequence)>(r1);

        return $r2;
    }

    private void generate(android.text.DynamicLayout$Builder)
    {
        android.text.DynamicLayout r0;
        android.text.Layout$Directions r1;
        android.graphics.Paint$FontMetricsInt r2;
        java.lang.CharSequence $r3, $r13, $r14, $r15, $r17, $r24;
        boolean $z0, $z1;
        android.text.TextUtils$TruncateAt $r4, $r7, $r23, $r25;
        android.text.PackedIntVector $r5, $r9, $r10, $r22;
        int $i0, $i2, $i3, $i4, i5, i6, i7, i8, $i9;
        android.text.PackedObjectVector $r6, $r12;
        android.text.TextPaint $r8;
        android.text.Layout$Directions[] $r11;
        android.text.DynamicLayout$ChangeWatcher $r16, $r19, $r20, $r21;
        java.lang.Object[] $r18;
        android.text.DynamicLayout$Builder r26;
        android.text.Layout$Ellipsizer r27;
        int[] r28;
        android.text.Spannable r29;
        android.text.DynamicLayout$ChangeWatcher[] r30;

        r0 := @this: android.text.DynamicLayout;

        r26 := @parameter0: android.text.DynamicLayout$Builder;

        $r3 = staticinvoke <android.text.DynamicLayout$Builder: java.lang.CharSequence access$1400(android.text.DynamicLayout$Builder)>(r26);

        r0.<android.text.DynamicLayout: java.lang.CharSequence mBase> = $r3;

        $z0 = staticinvoke <android.text.DynamicLayout$Builder: boolean access$1500(android.text.DynamicLayout$Builder)>(r26);

        r0.<android.text.DynamicLayout: boolean mFallbackLineSpacing> = $z0;

        $r4 = staticinvoke <android.text.DynamicLayout$Builder: android.text.TextUtils$TruncateAt access$200(android.text.DynamicLayout$Builder)>(r26);

        if $r4 == null goto label1;

        $r22 = new android.text.PackedIntVector;

        specialinvoke $r22.<android.text.PackedIntVector: void <init>(int)>(7);

        r0.<android.text.DynamicLayout: android.text.PackedIntVector mInts> = $r22;

        $i3 = staticinvoke <android.text.DynamicLayout$Builder: int access$1600(android.text.DynamicLayout$Builder)>(r26);

        r0.<android.text.DynamicLayout: int mEllipsizedWidth> = $i3;

        $r23 = staticinvoke <android.text.DynamicLayout$Builder: android.text.TextUtils$TruncateAt access$200(android.text.DynamicLayout$Builder)>(r26);

        r0.<android.text.DynamicLayout: android.text.TextUtils$TruncateAt mEllipsizeAt> = $r23;

        $r24 = virtualinvoke r0.<android.text.DynamicLayout: java.lang.CharSequence getText()>();

        r27 = (android.text.Layout$Ellipsizer) $r24;

        r27.<android.text.Layout$Ellipsizer: android.text.Layout mLayout> = r0;

        $i4 = staticinvoke <android.text.DynamicLayout$Builder: int access$1600(android.text.DynamicLayout$Builder)>(r26);

        r27.<android.text.Layout$Ellipsizer: int mWidth> = $i4;

        $r25 = staticinvoke <android.text.DynamicLayout$Builder: android.text.TextUtils$TruncateAt access$200(android.text.DynamicLayout$Builder)>(r26);

        r27.<android.text.Layout$Ellipsizer: android.text.TextUtils$TruncateAt mMethod> = $r25;

        r0.<android.text.DynamicLayout: boolean mEllipsize> = 1;

        goto label2;

     label1:
        $r5 = new android.text.PackedIntVector;

        specialinvoke $r5.<android.text.PackedIntVector: void <init>(int)>(5);

        r0.<android.text.DynamicLayout: android.text.PackedIntVector mInts> = $r5;

        $i0 = staticinvoke <android.text.DynamicLayout$Builder: int access$500(android.text.DynamicLayout$Builder)>(r26);

        r0.<android.text.DynamicLayout: int mEllipsizedWidth> = $i0;

        r0.<android.text.DynamicLayout: android.text.TextUtils$TruncateAt mEllipsizeAt> = null;

     label2:
        $r6 = new android.text.PackedObjectVector;

        specialinvoke $r6.<android.text.PackedObjectVector: void <init>(int)>(1);

        r0.<android.text.DynamicLayout: android.text.PackedObjectVector mObjects> = $r6;

        $r7 = staticinvoke <android.text.DynamicLayout$Builder: android.text.TextUtils$TruncateAt access$200(android.text.DynamicLayout$Builder)>(r26);

        if $r7 == null goto label3;

        r28 = newarray (int)[7];

        r28[5] = -2147483648;

        goto label4;

     label3:
        r28 = newarray (int)[5];

     label4:
        r1 = <android.text.DynamicLayout: android.text.Layout$Directions DIRS_ALL_LEFT_TO_RIGHT>;

        r2 = staticinvoke <android.text.DynamicLayout$Builder: android.graphics.Paint$FontMetricsInt access$1700(android.text.DynamicLayout$Builder)>(r26);

        $r8 = staticinvoke <android.text.DynamicLayout$Builder: android.text.TextPaint access$400(android.text.DynamicLayout$Builder)>(r26);

        virtualinvoke $r8.<android.text.TextPaint: int getFontMetricsInt(android.graphics.Paint$FontMetricsInt)>(r2);

        i5 = r2.<android.graphics.Paint$FontMetricsInt: int ascent>;

        i6 = r2.<android.graphics.Paint$FontMetricsInt: int descent>;

        r28[0] = 1073741824;

        r28[1] = 0;

        r28[2] = i6;

        $r9 = r0.<android.text.DynamicLayout: android.text.PackedIntVector mInts>;

        virtualinvoke $r9.<android.text.PackedIntVector: void insertAt(int,int[])>(0, r28);

        $i2 = i6 - i5;

        r28[1] = $i2;

        $r10 = r0.<android.text.DynamicLayout: android.text.PackedIntVector mInts>;

        virtualinvoke $r10.<android.text.PackedIntVector: void insertAt(int,int[])>(1, r28);

        $r12 = r0.<android.text.DynamicLayout: android.text.PackedObjectVector mObjects>;

        $r11 = newarray (android.text.Layout$Directions)[1];

        $r11[0] = r1;

        virtualinvoke $r12.<android.text.PackedObjectVector: void insertAt(int,java.lang.Object[])>(0, $r11);

        $r13 = r0.<android.text.DynamicLayout: java.lang.CharSequence mBase>;

        i7 = interfaceinvoke $r13.<java.lang.CharSequence: int length()>();

        $r14 = r0.<android.text.DynamicLayout: java.lang.CharSequence mBase>;

        virtualinvoke r0.<android.text.DynamicLayout: void reflow(java.lang.CharSequence,int,int,int)>($r14, 0, 0, i7);

        $r15 = r0.<android.text.DynamicLayout: java.lang.CharSequence mBase>;

        $z1 = $r15 instanceof android.text.Spannable;

        if $z1 == 0 goto label8;

        $r16 = r0.<android.text.DynamicLayout: android.text.DynamicLayout$ChangeWatcher mWatcher>;

        if $r16 != null goto label5;

        $r21 = new android.text.DynamicLayout$ChangeWatcher;

        specialinvoke $r21.<android.text.DynamicLayout$ChangeWatcher: void <init>(android.text.DynamicLayout)>(r0);

        r0.<android.text.DynamicLayout: android.text.DynamicLayout$ChangeWatcher mWatcher> = $r21;

     label5:
        $r17 = r0.<android.text.DynamicLayout: java.lang.CharSequence mBase>;

        r29 = (android.text.Spannable) $r17;

        $r18 = interfaceinvoke r29.<android.text.Spannable: java.lang.Object[] getSpans(int,int,java.lang.Class)>(0, i7, class "Landroid/text/DynamicLayout$ChangeWatcher;");

        r30 = (android.text.DynamicLayout$ChangeWatcher[]) $r18;

        i8 = 0;

     label6:
        $i9 = lengthof r30;

        if i8 >= $i9 goto label7;

        $r20 = r30[i8];

        interfaceinvoke r29.<android.text.Spannable: void removeSpan(java.lang.Object)>($r20);

        i8 = i8 + 1;

        goto label6;

     label7:
        $r19 = r0.<android.text.DynamicLayout: android.text.DynamicLayout$ChangeWatcher mWatcher>;

        interfaceinvoke r29.<android.text.Spannable: void setSpan(java.lang.Object,int,int,int)>($r19, 0, i7, 8388626);

     label8:
        return;
    }

    private boolean getContentMayProtrudeFromTopOrBottom(int)
    {
        android.text.DynamicLayout r0;
        int i0, $i1, $i2;
        android.text.PackedIntVector $r1;
        boolean z0;

        r0 := @this: android.text.DynamicLayout;

        i0 := @parameter0: int;

        $r1 = r0.<android.text.DynamicLayout: android.text.PackedIntVector mInts>;

        $i1 = virtualinvoke $r1.<android.text.PackedIntVector: int getValue(int,int)>(i0, 4);

        $i2 = $i1 & 256;

        if $i2 == 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    private void updateAlwaysNeedsToBeRedrawn(int)
    {
        android.text.DynamicLayout r0;
        int i0, i1, $i2, $i3, i4;
        android.util.ArraySet r1, $r5, $r6, $r8;
        int[] $r2, $r3;
        java.lang.Integer $r4, $r7;
        boolean $z1;

        r0 := @this: android.text.DynamicLayout;

        i0 := @parameter0: int;

        if i0 != 0 goto label1;

        i4 = 0;

        goto label2;

     label1:
        $r2 = r0.<android.text.DynamicLayout: int[] mBlockEndLines>;

        $i2 = i0 - 1;

        $i3 = $r2[$i2];

        i4 = $i3 + 1;

     label2:
        $r3 = r0.<android.text.DynamicLayout: int[] mBlockEndLines>;

        i1 = $r3[i0];

     label3:
        if i4 > i1 goto label6;

        $z1 = specialinvoke r0.<android.text.DynamicLayout: boolean getContentMayProtrudeFromTopOrBottom(int)>(i4);

        if $z1 == 0 goto label5;

        $r5 = r0.<android.text.DynamicLayout: android.util.ArraySet mBlocksAlwaysNeedToBeRedrawn>;

        if $r5 != null goto label4;

        $r8 = new android.util.ArraySet;

        specialinvoke $r8.<android.util.ArraySet: void <init>()>();

        r0.<android.text.DynamicLayout: android.util.ArraySet mBlocksAlwaysNeedToBeRedrawn> = $r8;

     label4:
        $r6 = r0.<android.text.DynamicLayout: android.util.ArraySet mBlocksAlwaysNeedToBeRedrawn>;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        virtualinvoke $r6.<android.util.ArraySet: boolean add(java.lang.Object)>($r7);

        return;

     label5:
        i4 = i4 + 1;

        goto label3;

     label6:
        r1 = r0.<android.text.DynamicLayout: android.util.ArraySet mBlocksAlwaysNeedToBeRedrawn>;

        if r1 == null goto label7;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        virtualinvoke r1.<android.util.ArraySet: boolean remove(java.lang.Object)>($r4);

     label7:
        return;
    }

    public int[] getBlockEndLines()
    {
        android.text.DynamicLayout r0;
        int[] $r1;

        r0 := @this: android.text.DynamicLayout;

        $r1 = r0.<android.text.DynamicLayout: int[] mBlockEndLines>;

        return $r1;
    }

    public int getBlockIndex(int)
    {
        android.text.DynamicLayout r0;
        int i0, $i1;
        int[] $r1;

        r0 := @this: android.text.DynamicLayout;

        i0 := @parameter0: int;

        $r1 = r0.<android.text.DynamicLayout: int[] mBlockIndices>;

        $i1 = $r1[i0];

        return $i1;
    }

    public int[] getBlockIndices()
    {
        android.text.DynamicLayout r0;
        int[] $r1;

        r0 := @this: android.text.DynamicLayout;

        $r1 = r0.<android.text.DynamicLayout: int[] mBlockIndices>;

        return $r1;
    }

    public android.util.ArraySet getBlocksAlwaysNeedToBeRedrawn()
    {
        android.text.DynamicLayout r0;
        android.util.ArraySet $r1;

        r0 := @this: android.text.DynamicLayout;

        $r1 = r0.<android.text.DynamicLayout: android.util.ArraySet mBlocksAlwaysNeedToBeRedrawn>;

        return $r1;
    }

    public int getBottomPadding()
    {
        android.text.DynamicLayout r0;
        int $i0;

        r0 := @this: android.text.DynamicLayout;

        $i0 = r0.<android.text.DynamicLayout: int mBottomPadding>;

        return $i0;
    }

    public int getEllipsisCount(int)
    {
        android.text.DynamicLayout r0;
        int i0, $i1;
        android.text.TextUtils$TruncateAt $r1;
        android.text.PackedIntVector $r2;

        r0 := @this: android.text.DynamicLayout;

        i0 := @parameter0: int;

        $r1 = r0.<android.text.DynamicLayout: android.text.TextUtils$TruncateAt mEllipsizeAt>;

        if $r1 != null goto label1;

        return 0;

     label1:
        $r2 = r0.<android.text.DynamicLayout: android.text.PackedIntVector mInts>;

        $i1 = virtualinvoke $r2.<android.text.PackedIntVector: int getValue(int,int)>(i0, 6);

        return $i1;
    }

    public int getEllipsisStart(int)
    {
        android.text.DynamicLayout r0;
        int i0, $i1;
        android.text.TextUtils$TruncateAt $r1;
        android.text.PackedIntVector $r2;

        r0 := @this: android.text.DynamicLayout;

        i0 := @parameter0: int;

        $r1 = r0.<android.text.DynamicLayout: android.text.TextUtils$TruncateAt mEllipsizeAt>;

        if $r1 != null goto label1;

        return 0;

     label1:
        $r2 = r0.<android.text.DynamicLayout: android.text.PackedIntVector mInts>;

        $i1 = virtualinvoke $r2.<android.text.PackedIntVector: int getValue(int,int)>(i0, 5);

        return $i1;
    }

    public int getEllipsizedWidth()
    {
        android.text.DynamicLayout r0;
        int $i0;

        r0 := @this: android.text.DynamicLayout;

        $i0 = r0.<android.text.DynamicLayout: int mEllipsizedWidth>;

        return $i0;
    }

    public int getEndHyphenEdit(int)
    {
        android.text.DynamicLayout r0;
        int i0, $i1, $i2, $i3;
        android.text.PackedIntVector $r1;

        r0 := @this: android.text.DynamicLayout;

        i0 := @parameter0: int;

        $r1 = r0.<android.text.DynamicLayout: android.text.PackedIntVector mInts>;

        $i1 = virtualinvoke $r1.<android.text.PackedIntVector: int getValue(int,int)>(i0, 4);

        $i2 = $i1 & 255;

        $i3 = staticinvoke <android.text.StaticLayout: int unpackEndHyphenEdit(int)>($i2);

        return $i3;
    }

    public int getIndexFirstChangedBlock()
    {
        android.text.DynamicLayout r0;
        int $i0;

        r0 := @this: android.text.DynamicLayout;

        $i0 = r0.<android.text.DynamicLayout: int mIndexFirstChangedBlock>;

        return $i0;
    }

    public boolean getLineContainsTab(int)
    {
        android.text.DynamicLayout r0;
        int i0, $i1, $i2;
        android.text.PackedIntVector r1;
        boolean z0;

        r0 := @this: android.text.DynamicLayout;

        i0 := @parameter0: int;

        r1 = r0.<android.text.DynamicLayout: android.text.PackedIntVector mInts>;

        z0 = 0;

        $i1 = virtualinvoke r1.<android.text.PackedIntVector: int getValue(int,int)>(i0, 0);

        $i2 = $i1 & 536870912;

        if $i2 == 0 goto label1;

        z0 = 1;

     label1:
        return z0;
    }

    public int getLineCount()
    {
        android.text.DynamicLayout r0;
        android.text.PackedIntVector $r1;
        int $i0, $i1;

        r0 := @this: android.text.DynamicLayout;

        $r1 = r0.<android.text.DynamicLayout: android.text.PackedIntVector mInts>;

        $i0 = virtualinvoke $r1.<android.text.PackedIntVector: int size()>();

        $i1 = $i0 - 1;

        return $i1;
    }

    public int getLineDescent(int)
    {
        android.text.DynamicLayout r0;
        int i0, $i1;
        android.text.PackedIntVector $r1;

        r0 := @this: android.text.DynamicLayout;

        i0 := @parameter0: int;

        $r1 = r0.<android.text.DynamicLayout: android.text.PackedIntVector mInts>;

        $i1 = virtualinvoke $r1.<android.text.PackedIntVector: int getValue(int,int)>(i0, 2);

        return $i1;
    }

    public final android.text.Layout$Directions getLineDirections(int)
    {
        android.text.DynamicLayout r0;
        int i0;
        android.text.PackedObjectVector $r1;
        java.lang.Object $r2;
        android.text.Layout$Directions $r3;

        r0 := @this: android.text.DynamicLayout;

        i0 := @parameter0: int;

        $r1 = r0.<android.text.DynamicLayout: android.text.PackedObjectVector mObjects>;

        $r2 = virtualinvoke $r1.<android.text.PackedObjectVector: java.lang.Object getValue(int,int)>(i0, 0);

        $r3 = (android.text.Layout$Directions) $r2;

        return $r3;
    }

    public int getLineExtra(int)
    {
        android.text.DynamicLayout r0;
        int i0, $i1;
        android.text.PackedIntVector $r1;

        r0 := @this: android.text.DynamicLayout;

        i0 := @parameter0: int;

        $r1 = r0.<android.text.DynamicLayout: android.text.PackedIntVector mInts>;

        $i1 = virtualinvoke $r1.<android.text.PackedIntVector: int getValue(int,int)>(i0, 3);

        return $i1;
    }

    public int getLineStart(int)
    {
        android.text.DynamicLayout r0;
        int i0, $i1, $i2;
        android.text.PackedIntVector $r1;

        r0 := @this: android.text.DynamicLayout;

        i0 := @parameter0: int;

        $r1 = r0.<android.text.DynamicLayout: android.text.PackedIntVector mInts>;

        $i1 = virtualinvoke $r1.<android.text.PackedIntVector: int getValue(int,int)>(i0, 0);

        $i2 = $i1 & 536870911;

        return $i2;
    }

    public int getLineTop(int)
    {
        android.text.DynamicLayout r0;
        int i0, $i1;
        android.text.PackedIntVector $r1;

        r0 := @this: android.text.DynamicLayout;

        i0 := @parameter0: int;

        $r1 = r0.<android.text.DynamicLayout: android.text.PackedIntVector mInts>;

        $i1 = virtualinvoke $r1.<android.text.PackedIntVector: int getValue(int,int)>(i0, 1);

        return $i1;
    }

    public int getNumberOfBlocks()
    {
        android.text.DynamicLayout r0;
        int $i0;

        r0 := @this: android.text.DynamicLayout;

        $i0 = r0.<android.text.DynamicLayout: int mNumberOfBlocks>;

        return $i0;
    }

    public int getParagraphDirection(int)
    {
        android.text.DynamicLayout r0;
        int i0, $i1, $i2;
        android.text.PackedIntVector $r1;

        r0 := @this: android.text.DynamicLayout;

        i0 := @parameter0: int;

        $r1 = r0.<android.text.DynamicLayout: android.text.PackedIntVector mInts>;

        $i1 = virtualinvoke $r1.<android.text.PackedIntVector: int getValue(int,int)>(i0, 0);

        $i2 = $i1 >> 30;

        return $i2;
    }

    public int getStartHyphenEdit(int)
    {
        android.text.DynamicLayout r0;
        int i0, $i1, $i2, $i3;
        android.text.PackedIntVector $r1;

        r0 := @this: android.text.DynamicLayout;

        i0 := @parameter0: int;

        $r1 = r0.<android.text.DynamicLayout: android.text.PackedIntVector mInts>;

        $i1 = virtualinvoke $r1.<android.text.PackedIntVector: int getValue(int,int)>(i0, 4);

        $i2 = $i1 & 255;

        $i3 = staticinvoke <android.text.StaticLayout: int unpackStartHyphenEdit(int)>($i2);

        return $i3;
    }

    public int getTopPadding()
    {
        android.text.DynamicLayout r0;
        int $i0;

        r0 := @this: android.text.DynamicLayout;

        $i0 = r0.<android.text.DynamicLayout: int mTopPadding>;

        return $i0;
    }

    public void reflow(java.lang.CharSequence, int, int, int)
    {
        android.text.DynamicLayout r0;
        java.lang.CharSequence r1, $r3, r28;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, i42, i43, i44, i45, i46, i47, i48, i49, i50, i51, i52, i53, i54, i55, i56, i57, i58, i59, $i60, i61, i62, i63, i64, i65, i66, i67, i68, i69, i70, i71, i72, $i73, $i74, i75, i77, i78, i79, i80, $i81, $i82, $i83, i84, i85, i86, i87, i88, i89, i90, i91, i92, i93;
        android.text.Layout$Directions[] r2;
        boolean $z0, $z1, $z2, $z3, $z4, z5, z6, z7, $z8, $z9, $z10;
        android.text.StaticLayout$Builder $r4, $r6, $r7, $r9, $r10, $r11, $r12, $r14, $r15, $r16, r33, r34;
        android.text.TextPaint $r5, $r22;
        android.text.TextDirectionHeuristic $r8;
        float $f0, $f1;
        android.text.TextUtils$TruncateAt $r13;
        android.text.Layout$Directions $r18;
        android.text.PackedIntVector $r19, $r35, $r37, $r38;
        android.text.PackedObjectVector $r20, $r36;
        android.text.StaticLayout $r21, r32;
        java.lang.Object $r23, $r24;
        java.lang.Throwable $r25, $r26, $r27, r42;
        android.text.Spanned r29;
        java.lang.Object[] r30, r31, r40;
        int[] r39;
        short s94;

        r0 := @this: android.text.DynamicLayout;

        r28 := @parameter0: java.lang.CharSequence;

        i42 := @parameter1: int;

        i43 := @parameter2: int;

        i44 := @parameter3: int;

        $r3 = r0.<android.text.DynamicLayout: java.lang.CharSequence mBase>;

        if r28 == $r3 goto label01;

        return;

     label01:
        r1 = r0.<android.text.DynamicLayout: java.lang.CharSequence mDisplay>;

        i45 = interfaceinvoke r1.<java.lang.CharSequence: int length()>();

        $i1 = i42 - 1;

        i46 = staticinvoke <android.text.TextUtils: int lastIndexOf(java.lang.CharSequence,char,int)>(r1, 10, $i1);

        if i46 >= 0 goto label02;

        i47 = 0;

        goto label03;

     label02:
        i47 = i46 + 1;

     label03:
        i48 = i42 - i47;

        i49 = i44 + i48;

        i50 = i42 - i48;

        $i2 = i50 + i49;

        i51 = staticinvoke <android.text.TextUtils: int indexOf(java.lang.CharSequence,char,int)>(r1, 10, $i2);

        if i51 >= 0 goto label04;

        i52 = i45;

        goto label05;

     label04:
        i52 = i51 + 1;

     label05:
        $i3 = i50 + i49;

        i53 = i52 - $i3;

        $i4 = i43 + i48;

        i54 = $i4 + i53;

        i55 = i49 + i53;

        $z0 = r1 instanceof android.text.Spanned;

        if $z0 == 0 goto label12;

        r29 = (android.text.Spanned) r1;

        i56 = i50;

     label06:
        z5 = 0;

        $i39 = i56 + i55;

        r30 = interfaceinvoke r29.<android.text.Spanned: java.lang.Object[] getSpans(int,int,java.lang.Class)>(i56, $i39, class "Landroid/text/style/WrapTogetherSpan;");

        i57 = 0;

        i58 = i55;

        i59 = i54;

     label07:
        $i60 = lengthof r30;

        if i57 >= $i60 goto label10;

        $r23 = r30[i57];

        i61 = interfaceinvoke r29.<android.text.Spanned: int getSpanStart(java.lang.Object)>($r23);

        $r24 = r30[i57];

        i62 = interfaceinvoke r29.<android.text.Spanned: int getSpanEnd(java.lang.Object)>($r24);

        i63 = i56;

        i64 = i59;

        i65 = i58;

        if i61 >= i56 goto label08;

        z5 = 1;

        i66 = i56 - i61;

        i64 = i59 + i66;

        i65 = i58 + i66;

        i63 = i56 - i66;

     label08:
        i59 = i64;

        i58 = i65;

        $i40 = i63 + i65;

        if i62 <= $i40 goto label09;

        $i41 = i63 + i65;

        i67 = i62 - $i41;

        i59 = i64 + i67;

        i58 = i65 + i67;

        z5 = 1;

     label09:
        i57 = i57 + 1;

        i56 = i63;

        goto label07;

     label10:
        if z5 != 0 goto label11;

        i68 = i59;

        goto label13;

     label11:
        i54 = i59;

        i55 = i58;

        goto label06;

     label12:
        i56 = i50;

        i58 = i55;

        i68 = i54;

     label13:
        i0 = virtualinvoke r0.<android.text.DynamicLayout: int getLineForOffset(int)>(i56);

        i69 = virtualinvoke r0.<android.text.DynamicLayout: int getLineTop(int)>(i0);

        $i5 = i56 + i68;

        i70 = virtualinvoke r0.<android.text.DynamicLayout: int getLineForOffset(int)>($i5);

        $i6 = i56 + i58;

        if $i6 != i45 goto label14;

        i70 = virtualinvoke r0.<android.text.DynamicLayout: int getLineCount()>();

        goto label14;

     label14:
        i71 = virtualinvoke r0.<android.text.DynamicLayout: int getLineTop(int)>(i70);

        $i7 = virtualinvoke r0.<android.text.DynamicLayout: int getLineCount()>();

        if i70 != $i7 goto label15;

        z6 = 1;

        goto label16;

     label15:
        z6 = 0;

     label16:
        r31 = <android.text.DynamicLayout: java.lang.Object[] sLock>;

        entermonitor r31;

     label17:
        r32 = <android.text.DynamicLayout: android.text.StaticLayout sStaticLayout>;

        r33 = <android.text.DynamicLayout: android.text.StaticLayout$Builder sBuilder>;

        <android.text.DynamicLayout: android.text.StaticLayout sStaticLayout> = null;

        <android.text.DynamicLayout: android.text.StaticLayout$Builder sBuilder> = null;

        exitmonitor r31;

     label18:
        if r32 != null goto label19;

        $r21 = new android.text.StaticLayout;

        specialinvoke $r21.<android.text.StaticLayout: void <init>(java.lang.CharSequence)>(null);

        r32 = $r21;

        $i37 = i56 + i58;

        $r22 = virtualinvoke r0.<android.text.DynamicLayout: android.text.TextPaint getPaint()>();

        $i38 = virtualinvoke r0.<android.text.DynamicLayout: int getWidth()>();

        r33 = staticinvoke <android.text.StaticLayout$Builder: android.text.StaticLayout$Builder obtain(java.lang.CharSequence,int,int,android.text.TextPaint,int)>(r1, i56, $i37, $r22, $i38);

        goto label19;

     label19:
        $i8 = i56 + i58;

        $r4 = virtualinvoke r33.<android.text.StaticLayout$Builder: android.text.StaticLayout$Builder setText(java.lang.CharSequence,int,int)>(r1, i56, $i8);

        $r5 = virtualinvoke r0.<android.text.DynamicLayout: android.text.TextPaint getPaint()>();

        $r6 = virtualinvoke $r4.<android.text.StaticLayout$Builder: android.text.StaticLayout$Builder setPaint(android.text.TextPaint)>($r5);

        $i9 = virtualinvoke r0.<android.text.DynamicLayout: int getWidth()>();

        $r7 = virtualinvoke $r6.<android.text.StaticLayout$Builder: android.text.StaticLayout$Builder setWidth(int)>($i9);

        $r8 = virtualinvoke r0.<android.text.DynamicLayout: android.text.TextDirectionHeuristic getTextDirectionHeuristic()>();

        $r9 = virtualinvoke $r7.<android.text.StaticLayout$Builder: android.text.StaticLayout$Builder setTextDirection(android.text.TextDirectionHeuristic)>($r8);

        $f0 = virtualinvoke r0.<android.text.DynamicLayout: float getSpacingAdd()>();

        $f1 = virtualinvoke r0.<android.text.DynamicLayout: float getSpacingMultiplier()>();

        $r10 = virtualinvoke $r9.<android.text.StaticLayout$Builder: android.text.StaticLayout$Builder setLineSpacing(float,float)>($f0, $f1);

        $z1 = r0.<android.text.DynamicLayout: boolean mFallbackLineSpacing>;

        $r11 = virtualinvoke $r10.<android.text.StaticLayout$Builder: android.text.StaticLayout$Builder setUseLineSpacingFromFallbacks(boolean)>($z1);

        $i10 = r0.<android.text.DynamicLayout: int mEllipsizedWidth>;

        $r12 = virtualinvoke $r11.<android.text.StaticLayout$Builder: android.text.StaticLayout$Builder setEllipsizedWidth(int)>($i10);

        $r13 = r0.<android.text.DynamicLayout: android.text.TextUtils$TruncateAt mEllipsizeAt>;

        $r14 = virtualinvoke $r12.<android.text.StaticLayout$Builder: android.text.StaticLayout$Builder setEllipsize(android.text.TextUtils$TruncateAt)>($r13);

        $i11 = r0.<android.text.DynamicLayout: int mBreakStrategy>;

        $r15 = virtualinvoke $r14.<android.text.StaticLayout$Builder: android.text.StaticLayout$Builder setBreakStrategy(int)>($i11);

        $i12 = r0.<android.text.DynamicLayout: int mHyphenationFrequency>;

        $r16 = virtualinvoke $r15.<android.text.StaticLayout$Builder: android.text.StaticLayout$Builder setHyphenationFrequency(int)>($i12);

        $i13 = r0.<android.text.DynamicLayout: int mJustificationMode>;

        r34 = virtualinvoke $r16.<android.text.StaticLayout$Builder: android.text.StaticLayout$Builder setJustificationMode(int)>($i13);

        if z6 != 0 goto label20;

        z7 = 1;

        goto label21;

     label20:
        z7 = 0;

     label21:
        virtualinvoke r34.<android.text.StaticLayout$Builder: android.text.StaticLayout$Builder setAddLastLineLineSpacing(boolean)>(z7);

        virtualinvoke r32.<android.text.StaticLayout: void generate(android.text.StaticLayout$Builder,boolean,boolean)>(r33, 0, 1);

        i72 = virtualinvoke r32.<android.text.StaticLayout: int getLineCount()>();

        $i14 = i56 + i58;

        if $i14 == i45 goto label22;

        $i34 = i72 - 1;

        $i35 = virtualinvoke r32.<android.text.StaticLayout: int getLineStart(int)>($i34);

        $i36 = i56 + i58;

        if $i35 != $i36 goto label22;

        i72 = i72 + -1;

        goto label22;

     label22:
        $r35 = r0.<android.text.DynamicLayout: android.text.PackedIntVector mInts>;

        $i73 = i70 - i0;

        virtualinvoke $r35.<android.text.PackedIntVector: void deleteAt(int,int)>(i0, $i73);

        $r36 = r0.<android.text.DynamicLayout: android.text.PackedObjectVector mObjects>;

        $i74 = i70 - i0;

        virtualinvoke $r36.<android.text.PackedObjectVector: void deleteAt(int,int)>(i0, $i74);

        i75 = virtualinvoke r32.<android.text.StaticLayout: int getLineTop(int)>(i72);

        i77 = i75;

        i78 = 0;

        $z8 = r0.<android.text.DynamicLayout: boolean mIncludePad>;

        if $z8 == 0 goto label23;

        i77 = i75;

        i78 = 0;

        if i0 != 0 goto label23;

        i78 = virtualinvoke r32.<android.text.StaticLayout: int getTopPadding()>();

        r0.<android.text.DynamicLayout: int mTopPadding> = i78;

        i77 = i75 - i78;

     label23:
        $z9 = r0.<android.text.DynamicLayout: boolean mIncludePad>;

        if $z9 == 0 goto label24;

        if z6 == 0 goto label24;

        i79 = virtualinvoke r32.<android.text.StaticLayout: int getBottomPadding()>();

        r0.<android.text.DynamicLayout: int mBottomPadding> = i79;

        i80 = i79;

        i77 = i77 + i79;

        goto label25;

     label24:
        i80 = 0;

     label25:
        $r37 = r0.<android.text.DynamicLayout: android.text.PackedIntVector mInts>;

        $i81 = i58 - i68;

        virtualinvoke $r37.<android.text.PackedIntVector: void adjustValuesBelow(int,int,int)>(i0, 0, $i81);

        $r38 = r0.<android.text.DynamicLayout: android.text.PackedIntVector mInts>;

        $i82 = i69 - i71;

        $i83 = $i82 + i77;

        virtualinvoke $r38.<android.text.PackedIntVector: void adjustValuesBelow(int,int,int)>(i0, 1, $i83);

        $z10 = r0.<android.text.DynamicLayout: boolean mEllipsize>;

        if $z10 == 0 goto label26;

        r39 = newarray (int)[7];

        r39[5] = -2147483648;

        goto label27;

     label26:
        r39 = newarray (int)[5];

     label27:
        r2 = newarray (android.text.Layout$Directions)[1];

        i84 = 0;

     label28:
        if i84 >= i72 goto label38;

        i85 = virtualinvoke r32.<android.text.StaticLayout: int getLineStart(int)>(i84);

        r39[0] = i85;

        $i16 = r39[0];

        $i17 = virtualinvoke r32.<android.text.StaticLayout: int getParagraphDirection(int)>(i84);

        $i18 = $i17 << 30;

        $i19 = $i16 | $i18;

        r39[0] = $i19;

        i86 = r39[0];

        $z2 = virtualinvoke r32.<android.text.StaticLayout: boolean getLineContainsTab(int)>(i84);

        if $z2 == 0 goto label29;

        i87 = 536870912;

        goto label30;

     label29:
        i87 = 0;

     label30:
        $i20 = i86 | i87;

        r39[0] = $i20;

        $i21 = virtualinvoke r32.<android.text.StaticLayout: int getLineTop(int)>(i84);

        i88 = $i21 + i69;

        i89 = i88;

        if i84 <= 0 goto label31;

        i89 = i88 - i78;

     label31:
        r39[1] = i89;

        i90 = virtualinvoke r32.<android.text.StaticLayout: int getLineDescent(int)>(i84);

        i91 = i90;

        $i22 = i72 - 1;

        if i84 != $i22 goto label32;

        i91 = i90 + i80;

     label32:
        r39[2] = i91;

        $i23 = virtualinvoke r32.<android.text.StaticLayout: int getLineExtra(int)>(i84);

        r39[3] = $i23;

        $r18 = virtualinvoke r32.<android.text.StaticLayout: android.text.Layout$Directions getLineDirections(int)>(i84);

        r2[0] = $r18;

        $i24 = i72 - 1;

        if i84 != $i24 goto label33;

        i92 = i56 + i58;

        goto label34;

     label33:
        $i25 = i84 + 1;

        i92 = virtualinvoke r32.<android.text.StaticLayout: int getLineStart(int)>($i25);

     label34:
        $i26 = virtualinvoke r32.<android.text.StaticLayout: int getStartHyphenEdit(int)>(i84);

        $i27 = virtualinvoke r32.<android.text.StaticLayout: int getEndHyphenEdit(int)>(i84);

        $i28 = staticinvoke <android.text.StaticLayout: int packHyphenEdit(int,int)>($i26, $i27);

        r39[4] = $i28;

        i93 = r39[4];

        $z3 = specialinvoke r0.<android.text.DynamicLayout: boolean contentMayProtrudeFromLineTopOrBottom(java.lang.CharSequence,int,int)>(r1, i85, i92);

        if $z3 == 0 goto label35;

        s94 = 256;

        goto label36;

     label35:
        s94 = 0;

     label36:
        $i29 = i93 | s94;

        r39[4] = $i29;

        $z4 = r0.<android.text.DynamicLayout: boolean mEllipsize>;

        if $z4 == 0 goto label37;

        $i32 = virtualinvoke r32.<android.text.StaticLayout: int getEllipsisStart(int)>(i84);

        r39[5] = $i32;

        $i33 = virtualinvoke r32.<android.text.StaticLayout: int getEllipsisCount(int)>(i84);

        r39[6] = $i33;

        goto label37;

     label37:
        $r19 = r0.<android.text.DynamicLayout: android.text.PackedIntVector mInts>;

        $i30 = i0 + i84;

        virtualinvoke $r19.<android.text.PackedIntVector: void insertAt(int,int[])>($i30, r39);

        $r20 = r0.<android.text.DynamicLayout: android.text.PackedObjectVector mObjects>;

        $i31 = i0 + i84;

        virtualinvoke $r20.<android.text.PackedObjectVector: void insertAt(int,java.lang.Object[])>($i31, r2);

        i84 = i84 + 1;

        goto label28;

     label38:
        $i15 = i70 - 1;

        virtualinvoke r0.<android.text.DynamicLayout: void updateBlocks(int,int,int)>(i0, $i15, i72);

        virtualinvoke r33.<android.text.StaticLayout$Builder: void finish()>();

        r40 = <android.text.DynamicLayout: java.lang.Object[] sLock>;

        entermonitor r40;

     label39:
        <android.text.DynamicLayout: android.text.StaticLayout sStaticLayout> = r32;

        <android.text.DynamicLayout: android.text.StaticLayout$Builder sBuilder> = r33;

        exitmonitor r40;

     label40:
        return;

     label41:
        $r26 := @caughtexception;

     label42:
        exitmonitor r40;

     label43:
        throw $r26;

     label44:
        $r27 := @caughtexception;

        r42 = $r27;

     label45:
        exitmonitor r31;

     label46:
        throw r42;

     label47:
        $r25 := @caughtexception;

        r42 = $r25;

        goto label45;

        catch java.lang.Throwable from label17 to label18 with label44;
        catch java.lang.Throwable from label39 to label40 with label41;
        catch java.lang.Throwable from label42 to label43 with label41;
        catch java.lang.Throwable from label45 to label46 with label47;
    }

    public void setBlockIndex(int, int)
    {
        android.text.DynamicLayout r0;
        int i0, i1;
        int[] $r1;

        r0 := @this: android.text.DynamicLayout;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<android.text.DynamicLayout: int[] mBlockIndices>;

        $r1[i0] = i1;

        return;
    }

    public void setBlocksDataForTest(int[], int[], int, int)
    {
        android.text.DynamicLayout r0;
        int[] r1, r2, $r3, $r4, $r6, r7;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7;
        android.text.PackedIntVector $r5, r8;

        r0 := @this: android.text.DynamicLayout;

        r7 := @parameter0: int[];

        r1 := @parameter1: int[];

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        $i2 = lengthof r7;

        r2 = newarray (int)[$i2];

        r0.<android.text.DynamicLayout: int[] mBlockEndLines> = r2;

        $i3 = lengthof r1;

        $r3 = newarray (int)[$i3];

        r0.<android.text.DynamicLayout: int[] mBlockIndices> = $r3;

        $i4 = lengthof r7;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r7, 0, r2, 0, $i4);

        $r4 = r0.<android.text.DynamicLayout: int[] mBlockIndices>;

        $i5 = lengthof r1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, $r4, 0, $i5);

        r0.<android.text.DynamicLayout: int mNumberOfBlocks> = i0;

     label1:
        $r5 = r0.<android.text.DynamicLayout: android.text.PackedIntVector mInts>;

        $i6 = virtualinvoke $r5.<android.text.PackedIntVector: int size()>();

        if $i6 >= i1 goto label2;

        r8 = r0.<android.text.DynamicLayout: android.text.PackedIntVector mInts>;

        $i7 = virtualinvoke r8.<android.text.PackedIntVector: int size()>();

        $r6 = newarray (int)[5];

        virtualinvoke r8.<android.text.PackedIntVector: void insertAt(int,int[])>($i7, $r6);

        goto label1;

     label2:
        return;
    }

    public void setIndexFirstChangedBlock(int)
    {
        android.text.DynamicLayout r0;
        int i0;

        r0 := @this: android.text.DynamicLayout;

        i0 := @parameter0: int;

        r0.<android.text.DynamicLayout: int mIndexFirstChangedBlock> = i0;

        return;
    }

    public void updateBlocks(int, int, int)
    {
        android.text.DynamicLayout r0;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, i53, i56, i57, i58, i59, $i60, i61, i62, i63, i64, i65, $i66, i67, $i68, $i69, i70, i71, i72, i73, i74;
        int[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, r23, r24, r25, r26, r27, r30;
        android.util.ArraySet $r9, $r10, $r11, $r12;
        java.lang.Object $r13;
        java.lang.Integer $r14, r29;
        boolean z2, z3, z4;

        r0 := @this: android.text.DynamicLayout;

        i0 := @parameter0: int;

        i53 := @parameter1: int;

        i1 := @parameter2: int;

        $r1 = r0.<android.text.DynamicLayout: int[] mBlockEndLines>;

        if $r1 != null goto label01;

        specialinvoke r0.<android.text.DynamicLayout: void createBlocks()>();

        return;

     label01:
        i56 = 0;

     label02:
        i57 = -1;

        $i5 = r0.<android.text.DynamicLayout: int mNumberOfBlocks>;

        if i56 >= $i5 goto label04;

        $r22 = r0.<android.text.DynamicLayout: int[] mBlockEndLines>;

        $i52 = $r22[i56];

        if $i52 < i0 goto label03;

        i57 = i56;

        goto label04;

     label03:
        i56 = i56 + 1;

        goto label02;

     label04:
        i58 = i57;

     label05:
        i59 = -1;

        $i60 = r0.<android.text.DynamicLayout: int mNumberOfBlocks>;

        if i58 >= $i60 goto label07;

        $r21 = r0.<android.text.DynamicLayout: int[] mBlockEndLines>;

        $i51 = $r21[i58];

        if $i51 < i53 goto label06;

        i59 = i58;

        goto label07;

     label06:
        i58 = i58 + 1;

        goto label05;

     label07:
        r23 = r0.<android.text.DynamicLayout: int[] mBlockEndLines>;

        i2 = r23[i59];

        if i57 != 0 goto label08;

        i61 = 0;

        goto label09;

     label08:
        $i6 = i57 - 1;

        $i7 = r23[$i6];

        i61 = $i7 + 1;

     label09:
        if i0 <= i61 goto label10;

        z2 = 1;

        goto label11;

     label10:
        z2 = 0;

     label11:
        if i1 <= 0 goto label12;

        z3 = 1;

        goto label13;

     label12:
        z3 = 0;

     label13:
        $r2 = r0.<android.text.DynamicLayout: int[] mBlockEndLines>;

        $i8 = $r2[i59];

        if i53 >= $i8 goto label14;

        z4 = 1;

        goto label15;

     label14:
        z4 = 0;

     label15:
        i62 = 0;

        if z2 == 0 goto label16;

        i62 = 0 + 1;

     label16:
        i63 = i62;

        if z3 == 0 goto label17;

        i63 = i62 + 1;

     label17:
        i64 = i63;

        if z4 == 0 goto label18;

        i64 = i63 + 1;

     label18:
        $i9 = i59 - i57;

        i3 = $i9 + 1;

        i65 = r0.<android.text.DynamicLayout: int mNumberOfBlocks>;

        $i10 = i65 + i64;

        i4 = $i10 - i3;

        if i4 != 0 goto label19;

        $r19 = r0.<android.text.DynamicLayout: int[] mBlockEndLines>;

        $r19[0] = 0;

        $r20 = r0.<android.text.DynamicLayout: int[] mBlockIndices>;

        $r20[0] = -1;

        r0.<android.text.DynamicLayout: int mNumberOfBlocks> = 1;

        return;

     label19:
        r24 = r0.<android.text.DynamicLayout: int[] mBlockEndLines>;

        $i11 = lengthof r24;

        if i4 <= $i11 goto label20;

        $i37 = lengthof r24;

        $i38 = $i37 * 2;

        $i39 = staticinvoke <java.lang.Math: int max(int,int)>($i38, i4);

        r25 = staticinvoke <com.android.internal.util.ArrayUtils: int[] newUnpaddedIntArray(int)>($i39);

        $i40 = lengthof r25;

        r26 = newarray (int)[$i40];

        $r15 = r0.<android.text.DynamicLayout: int[] mBlockEndLines>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r15, 0, r25, 0, i57);

        $r16 = r0.<android.text.DynamicLayout: int[] mBlockIndices>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r16, 0, r26, 0, i57);

        $r17 = r0.<android.text.DynamicLayout: int[] mBlockEndLines>;

        $i45 = i59 + 1;

        $i44 = i57 + i64;

        $i41 = r0.<android.text.DynamicLayout: int mNumberOfBlocks>;

        $i42 = $i41 - i59;

        $i43 = $i42 - 1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r17, $i45, r25, $i44, $i43);

        $r18 = r0.<android.text.DynamicLayout: int[] mBlockIndices>;

        $i50 = i59 + 1;

        $i49 = i57 + i64;

        $i46 = r0.<android.text.DynamicLayout: int mNumberOfBlocks>;

        $i47 = $i46 - i59;

        $i48 = $i47 - 1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r18, $i50, r26, $i49, $i48);

        r0.<android.text.DynamicLayout: int[] mBlockEndLines> = r25;

        r0.<android.text.DynamicLayout: int[] mBlockIndices> = r26;

        goto label21;

     label20:
        $i12 = i64 + i3;

        if $i12 == 0 goto label21;

        $i31 = i59 + 1;

        $i30 = i57 + i64;

        $i28 = i65 - i59;

        $i29 = $i28 - 1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r24, $i31, r24, $i30, $i29);

        r27 = r0.<android.text.DynamicLayout: int[] mBlockIndices>;

        $i36 = i59 + 1;

        $i35 = i57 + i64;

        $i32 = r0.<android.text.DynamicLayout: int mNumberOfBlocks>;

        $i33 = $i32 - i59;

        $i34 = $i33 - 1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r27, $i36, r27, $i35, $i34);

        goto label21;

     label21:
        $i66 = i64 + i3;

        if $i66 == 0 goto label26;

        $r9 = r0.<android.text.DynamicLayout: android.util.ArraySet mBlocksAlwaysNeedToBeRedrawn>;

        if $r9 == null goto label26;

        $r10 = new android.util.ArraySet;

        specialinvoke $r10.<android.util.ArraySet: void <init>()>();

        i67 = 0;

     label22:
        $r11 = r0.<android.text.DynamicLayout: android.util.ArraySet mBlocksAlwaysNeedToBeRedrawn>;

        $i22 = virtualinvoke $r11.<android.util.ArraySet: int size()>();

        if i67 >= $i22 goto label25;

        $r12 = r0.<android.text.DynamicLayout: android.util.ArraySet mBlocksAlwaysNeedToBeRedrawn>;

        $r13 = virtualinvoke $r12.<android.util.ArraySet: java.lang.Object valueAt(int)>(i67);

        r29 = (java.lang.Integer) $r13;

        $i23 = virtualinvoke r29.<java.lang.Integer: int intValue()>();

        if $i23 >= i57 goto label23;

        virtualinvoke $r10.<android.util.ArraySet: boolean add(java.lang.Object)>(r29);

     label23:
        $i24 = virtualinvoke r29.<java.lang.Integer: int intValue()>();

        if $i24 <= i59 goto label24;

        $i25 = virtualinvoke r29.<java.lang.Integer: int intValue()>();

        $i26 = i64 - i3;

        $i27 = $i25 + $i26;

        $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i27);

        virtualinvoke $r10.<android.util.ArraySet: boolean add(java.lang.Object)>($r14);

     label24:
        i67 = i67 + 1;

        goto label22;

     label25:
        r0.<android.text.DynamicLayout: android.util.ArraySet mBlocksAlwaysNeedToBeRedrawn> = $r10;

     label26:
        r0.<android.text.DynamicLayout: int mNumberOfBlocks> = i4;

        $i68 = i53 - i0;

        $i69 = $i68 + 1;

        i70 = i1 - $i69;

        if i70 == 0 goto label29;

        i71 = i57 + i64;

        i72 = i71;

     label27:
        $i19 = r0.<android.text.DynamicLayout: int mNumberOfBlocks>;

        if i72 >= $i19 goto label28;

        r30 = r0.<android.text.DynamicLayout: int[] mBlockEndLines>;

        $i20 = r30[i72];

        $i21 = $i20 + i70;

        r30[i72] = $i21;

        i72 = i72 + 1;

        goto label27;

     label28:
        goto label30;

     label29:
        i71 = r0.<android.text.DynamicLayout: int mNumberOfBlocks>;

     label30:
        $i13 = r0.<android.text.DynamicLayout: int mIndexFirstChangedBlock>;

        $i14 = staticinvoke <java.lang.Math: int min(int,int)>($i13, i71);

        r0.<android.text.DynamicLayout: int mIndexFirstChangedBlock> = $i14;

        i73 = i57;

        if z2 == 0 goto label31;

        $r7 = r0.<android.text.DynamicLayout: int[] mBlockEndLines>;

        $i18 = i0 - 1;

        $r7[i57] = $i18;

        specialinvoke r0.<android.text.DynamicLayout: void updateAlwaysNeedsToBeRedrawn(int)>(i57);

        $r8 = r0.<android.text.DynamicLayout: int[] mBlockIndices>;

        $r8[i57] = -1;

        i73 = i57 + 1;

     label31:
        i74 = i73;

        if z3 == 0 goto label32;

        $r5 = r0.<android.text.DynamicLayout: int[] mBlockEndLines>;

        $i16 = i0 + i1;

        $i17 = $i16 - 1;

        $r5[i73] = $i17;

        specialinvoke r0.<android.text.DynamicLayout: void updateAlwaysNeedsToBeRedrawn(int)>(i73);

        $r6 = r0.<android.text.DynamicLayout: int[] mBlockIndices>;

        $r6[i73] = -1;

        i74 = i73 + 1;

     label32:
        if z4 == 0 goto label33;

        $r3 = r0.<android.text.DynamicLayout: int[] mBlockEndLines>;

        $i15 = i2 + i70;

        $r3[i74] = $i15;

        specialinvoke r0.<android.text.DynamicLayout: void updateAlwaysNeedsToBeRedrawn(int)>(i74);

        $r4 = r0.<android.text.DynamicLayout: int[] mBlockIndices>;

        $r4[i74] = -1;

     label33:
        return;
    }
}
