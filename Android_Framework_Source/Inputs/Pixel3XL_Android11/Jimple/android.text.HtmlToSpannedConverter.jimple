class android.text.HtmlToSpannedConverter extends java.lang.Object implements org.xml.sax.ContentHandler
{
    private static final float[] HEADING_SIZES;
    private static java.util.regex.Pattern sBackgroundColorPattern;
    private static final java.util.Map sColorMap;
    private static java.util.regex.Pattern sForegroundColorPattern;
    private static java.util.regex.Pattern sTextAlignPattern;
    private static java.util.regex.Pattern sTextDecorationPattern;
    private int mFlags;
    private android.text.Html$ImageGetter mImageGetter;
    private org.xml.sax.XMLReader mReader;
    private java.lang.String mSource;
    private android.text.SpannableStringBuilder mSpannableStringBuilder;
    private android.text.Html$TagHandler mTagHandler;

    static void <clinit>()
    {
        java.lang.Integer r0, r1, $r14, r18;
        float[] $r2;
        java.util.HashMap $r3;
        java.util.Map $r7, $r9, $r11, $r13, r17, r19;

        $r2 = newarray (float)[6];

        $r2[0] = 1.5F;

        $r2[1] = 1.4F;

        $r2[2] = 1.3F;

        $r2[3] = 1.2F;

        $r2[4] = 1.1F;

        $r2[5] = 1.0F;

        <android.text.HtmlToSpannedConverter: float[] HEADING_SIZES> = $r2;

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        <android.text.HtmlToSpannedConverter: java.util.Map sColorMap> = $r3;

        r0 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-5658199);

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("darkgray", r0);

        r17 = <android.text.HtmlToSpannedConverter: java.util.Map sColorMap>;

        r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-8355712);

        interfaceinvoke r17.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("gray", r18);

        r19 = <android.text.HtmlToSpannedConverter: java.util.Map sColorMap>;

        r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-2894893);

        interfaceinvoke r19.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("lightgray", r1);

        $r7 = <android.text.HtmlToSpannedConverter: java.util.Map sColorMap>;

        interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("darkgrey", r0);

        $r9 = <android.text.HtmlToSpannedConverter: java.util.Map sColorMap>;

        interfaceinvoke $r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("grey", r18);

        $r11 = <android.text.HtmlToSpannedConverter: java.util.Map sColorMap>;

        interfaceinvoke $r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("lightgrey", r1);

        $r13 = <android.text.HtmlToSpannedConverter: java.util.Map sColorMap>;

        $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-16744448);

        interfaceinvoke $r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("green", $r14);

        return;
    }

    public void <init>(java.lang.String, android.text.Html$ImageGetter, android.text.Html$TagHandler, org.ccil.cowan.tagsoup.Parser, int)
    {
        android.text.HtmlToSpannedConverter r0;
        java.lang.String r1;
        android.text.Html$ImageGetter r2;
        android.text.Html$TagHandler r3;
        org.ccil.cowan.tagsoup.Parser r4;
        int i0;
        android.text.SpannableStringBuilder $r5;

        r0 := @this: android.text.HtmlToSpannedConverter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.text.Html$ImageGetter;

        r3 := @parameter2: android.text.Html$TagHandler;

        r4 := @parameter3: org.ccil.cowan.tagsoup.Parser;

        i0 := @parameter4: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.text.HtmlToSpannedConverter: java.lang.String mSource> = r1;

        $r5 = new android.text.SpannableStringBuilder;

        specialinvoke $r5.<android.text.SpannableStringBuilder: void <init>()>();

        r0.<android.text.HtmlToSpannedConverter: android.text.SpannableStringBuilder mSpannableStringBuilder> = $r5;

        r0.<android.text.HtmlToSpannedConverter: android.text.Html$ImageGetter mImageGetter> = r2;

        r0.<android.text.HtmlToSpannedConverter: android.text.Html$TagHandler mTagHandler> = r3;

        r0.<android.text.HtmlToSpannedConverter: org.xml.sax.XMLReader mReader> = r4;

        r0.<android.text.HtmlToSpannedConverter: int mFlags> = i0;

        return;
    }

    private static void appendNewlines(android.text.Editable, int)
    {
        android.text.Editable r0;
        int i0, i2, i3, i4;
        char $c1;

        r0 := @parameter0: android.text.Editable;

        i0 := @parameter1: int;

        i2 = interfaceinvoke r0.<android.text.Editable: int length()>();

        if i2 != 0 goto label1;

        return;

     label1:
        i3 = 0;

        i4 = i2 + -1;

     label2:
        if i4 < 0 goto label3;

        $c1 = interfaceinvoke r0.<android.text.Editable: char charAt(int)>(i4);

        if $c1 != 10 goto label3;

        i3 = i3 + 1;

        i4 = i4 + -1;

        goto label2;

     label3:
        if i3 >= i0 goto label4;

        interfaceinvoke r0.<android.text.Editable: android.text.Editable append(java.lang.CharSequence)>("\n");

        i3 = i3 + 1;

        goto label3;

     label4:
        return;
    }

    private static void end(android.text.Editable, java.lang.Class, java.lang.Object)
    {
        android.text.Editable r0;
        java.lang.Object r1, r4;
        java.lang.Object[] $r2;
        java.lang.Class r3;

        r0 := @parameter0: android.text.Editable;

        r3 := @parameter1: java.lang.Class;

        r1 := @parameter2: java.lang.Object;

        interfaceinvoke r0.<android.text.Editable: int length()>();

        r4 = staticinvoke <android.text.HtmlToSpannedConverter: java.lang.Object getLast(android.text.Spanned,java.lang.Class)>(r0, r3);

        if r4 == null goto label1;

        $r2 = newarray (java.lang.Object)[1];

        $r2[0] = r1;

        staticinvoke <android.text.HtmlToSpannedConverter: void setSpanFromMark(android.text.Spannable,java.lang.Object,java.lang.Object[])>(r0, r4, $r2);

     label1:
        return;
    }

    private static void endA(android.text.Editable)
    {
        android.text.Editable r0;
        android.text.HtmlToSpannedConverter$Href r1;
        java.lang.Object $r2;
        java.lang.String $r3, $r6;
        java.lang.Object[] $r4;
        android.text.style.URLSpan $r5;

        r0 := @parameter0: android.text.Editable;

        $r2 = staticinvoke <android.text.HtmlToSpannedConverter: java.lang.Object getLast(android.text.Spanned,java.lang.Class)>(r0, class "Landroid/text/HtmlToSpannedConverter$Href;");

        r1 = (android.text.HtmlToSpannedConverter$Href) $r2;

        if r1 == null goto label1;

        $r3 = r1.<android.text.HtmlToSpannedConverter$Href: java.lang.String mHref>;

        if $r3 == null goto label1;

        $r4 = newarray (java.lang.Object)[1];

        $r5 = new android.text.style.URLSpan;

        $r6 = r1.<android.text.HtmlToSpannedConverter$Href: java.lang.String mHref>;

        specialinvoke $r5.<android.text.style.URLSpan: void <init>(java.lang.String)>($r6);

        $r4[0] = $r5;

        staticinvoke <android.text.HtmlToSpannedConverter: void setSpanFromMark(android.text.Spannable,java.lang.Object,java.lang.Object[])>(r0, r1, $r4);

     label1:
        return;
    }

    private static void endBlockElement(android.text.Editable)
    {
        android.text.Editable r0;
        java.lang.Object $r1, $r2;
        java.lang.Object[] $r3;
        android.text.style.AlignmentSpan$Standard $r4;
        android.text.Layout$Alignment $r5;
        int $i0;
        android.text.HtmlToSpannedConverter$Newline r6;
        android.text.HtmlToSpannedConverter$Alignment r7;

        r0 := @parameter0: android.text.Editable;

        $r1 = staticinvoke <android.text.HtmlToSpannedConverter: java.lang.Object getLast(android.text.Spanned,java.lang.Class)>(r0, class "Landroid/text/HtmlToSpannedConverter$Newline;");

        r6 = (android.text.HtmlToSpannedConverter$Newline) $r1;

        if r6 == null goto label1;

        $i0 = staticinvoke <android.text.HtmlToSpannedConverter$Newline: int access$900(android.text.HtmlToSpannedConverter$Newline)>(r6);

        staticinvoke <android.text.HtmlToSpannedConverter: void appendNewlines(android.text.Editable,int)>(r0, $i0);

        interfaceinvoke r0.<android.text.Editable: void removeSpan(java.lang.Object)>(r6);

     label1:
        $r2 = staticinvoke <android.text.HtmlToSpannedConverter: java.lang.Object getLast(android.text.Spanned,java.lang.Class)>(r0, class "Landroid/text/HtmlToSpannedConverter$Alignment;");

        r7 = (android.text.HtmlToSpannedConverter$Alignment) $r2;

        if r7 == null goto label2;

        $r3 = newarray (java.lang.Object)[1];

        $r4 = new android.text.style.AlignmentSpan$Standard;

        $r5 = staticinvoke <android.text.HtmlToSpannedConverter$Alignment: android.text.Layout$Alignment access$1000(android.text.HtmlToSpannedConverter$Alignment)>(r7);

        specialinvoke $r4.<android.text.style.AlignmentSpan$Standard: void <init>(android.text.Layout$Alignment)>($r5);

        $r3[0] = $r4;

        staticinvoke <android.text.HtmlToSpannedConverter: void setSpanFromMark(android.text.Spannable,java.lang.Object,java.lang.Object[])>(r0, r7, $r3);

     label2:
        return;
    }

    private static void endBlockquote(android.text.Editable)
    {
        android.text.Editable r0;
        android.text.style.QuoteSpan $r1;

        r0 := @parameter0: android.text.Editable;

        staticinvoke <android.text.HtmlToSpannedConverter: void endBlockElement(android.text.Editable)>(r0);

        $r1 = new android.text.style.QuoteSpan;

        specialinvoke $r1.<android.text.style.QuoteSpan: void <init>()>();

        staticinvoke <android.text.HtmlToSpannedConverter: void end(android.text.Editable,java.lang.Class,java.lang.Object)>(r0, class "Landroid/text/HtmlToSpannedConverter$Blockquote;", $r1);

        return;
    }

    private static void endCssStyle(android.text.Editable)
    {
        android.text.Editable r0;
        java.lang.Object $r1, $r2, $r3;
        java.lang.Object[] $r4, $r6, $r8;
        android.text.style.ForegroundColorSpan $r5;
        int $i0, $i1;
        android.text.style.BackgroundColorSpan $r7;
        android.text.style.StrikethroughSpan $r9;
        android.text.HtmlToSpannedConverter$Strikethrough r10;
        android.text.HtmlToSpannedConverter$Background r11;
        android.text.HtmlToSpannedConverter$Foreground r12;

        r0 := @parameter0: android.text.Editable;

        $r1 = staticinvoke <android.text.HtmlToSpannedConverter: java.lang.Object getLast(android.text.Spanned,java.lang.Class)>(r0, class "Landroid/text/HtmlToSpannedConverter$Strikethrough;");

        r10 = (android.text.HtmlToSpannedConverter$Strikethrough) $r1;

        if r10 == null goto label1;

        $r8 = newarray (java.lang.Object)[1];

        $r9 = new android.text.style.StrikethroughSpan;

        specialinvoke $r9.<android.text.style.StrikethroughSpan: void <init>()>();

        $r8[0] = $r9;

        staticinvoke <android.text.HtmlToSpannedConverter: void setSpanFromMark(android.text.Spannable,java.lang.Object,java.lang.Object[])>(r0, r10, $r8);

     label1:
        $r2 = staticinvoke <android.text.HtmlToSpannedConverter: java.lang.Object getLast(android.text.Spanned,java.lang.Class)>(r0, class "Landroid/text/HtmlToSpannedConverter$Background;");

        r11 = (android.text.HtmlToSpannedConverter$Background) $r2;

        if r11 == null goto label2;

        $r6 = newarray (java.lang.Object)[1];

        $r7 = new android.text.style.BackgroundColorSpan;

        $i1 = staticinvoke <android.text.HtmlToSpannedConverter$Background: int access$1400(android.text.HtmlToSpannedConverter$Background)>(r11);

        specialinvoke $r7.<android.text.style.BackgroundColorSpan: void <init>(int)>($i1);

        $r6[0] = $r7;

        staticinvoke <android.text.HtmlToSpannedConverter: void setSpanFromMark(android.text.Spannable,java.lang.Object,java.lang.Object[])>(r0, r11, $r6);

     label2:
        $r3 = staticinvoke <android.text.HtmlToSpannedConverter: java.lang.Object getLast(android.text.Spanned,java.lang.Class)>(r0, class "Landroid/text/HtmlToSpannedConverter$Foreground;");

        r12 = (android.text.HtmlToSpannedConverter$Foreground) $r3;

        if r12 == null goto label3;

        $r4 = newarray (java.lang.Object)[1];

        $r5 = new android.text.style.ForegroundColorSpan;

        $i0 = staticinvoke <android.text.HtmlToSpannedConverter$Foreground: int access$1500(android.text.HtmlToSpannedConverter$Foreground)>(r12);

        specialinvoke $r5.<android.text.style.ForegroundColorSpan: void <init>(int)>($i0);

        $r4[0] = $r5;

        staticinvoke <android.text.HtmlToSpannedConverter: void setSpanFromMark(android.text.Spannable,java.lang.Object,java.lang.Object[])>(r0, r12, $r4);

     label3:
        return;
    }

    private static void endFont(android.text.Editable)
    {
        android.text.Editable r0;
        java.lang.Object $r1, $r2;
        java.lang.Object[] $r3, $r5;
        android.text.style.ForegroundColorSpan $r4;
        int $i0;
        android.text.style.TypefaceSpan $r6;
        java.lang.String $r7;
        android.text.HtmlToSpannedConverter$Font r8;
        android.text.HtmlToSpannedConverter$Foreground r9;

        r0 := @parameter0: android.text.Editable;

        $r1 = staticinvoke <android.text.HtmlToSpannedConverter: java.lang.Object getLast(android.text.Spanned,java.lang.Class)>(r0, class "Landroid/text/HtmlToSpannedConverter$Font;");

        r8 = (android.text.HtmlToSpannedConverter$Font) $r1;

        if r8 == null goto label1;

        $r5 = newarray (java.lang.Object)[1];

        $r6 = new android.text.style.TypefaceSpan;

        $r7 = r8.<android.text.HtmlToSpannedConverter$Font: java.lang.String mFace>;

        specialinvoke $r6.<android.text.style.TypefaceSpan: void <init>(java.lang.String)>($r7);

        $r5[0] = $r6;

        staticinvoke <android.text.HtmlToSpannedConverter: void setSpanFromMark(android.text.Spannable,java.lang.Object,java.lang.Object[])>(r0, r8, $r5);

     label1:
        $r2 = staticinvoke <android.text.HtmlToSpannedConverter: java.lang.Object getLast(android.text.Spanned,java.lang.Class)>(r0, class "Landroid/text/HtmlToSpannedConverter$Foreground;");

        r9 = (android.text.HtmlToSpannedConverter$Foreground) $r2;

        if r9 == null goto label2;

        $r3 = newarray (java.lang.Object)[1];

        $r4 = new android.text.style.ForegroundColorSpan;

        $i0 = staticinvoke <android.text.HtmlToSpannedConverter$Foreground: int access$1500(android.text.HtmlToSpannedConverter$Foreground)>(r9);

        specialinvoke $r4.<android.text.style.ForegroundColorSpan: void <init>(int)>($i0);

        $r3[0] = $r4;

        staticinvoke <android.text.HtmlToSpannedConverter: void setSpanFromMark(android.text.Spannable,java.lang.Object,java.lang.Object[])>(r0, r9, $r3);

     label2:
        return;
    }

    private static void endHeading(android.text.Editable)
    {
        android.text.Editable r0;
        android.text.HtmlToSpannedConverter$Heading r1;
        java.lang.Object $r2;
        java.lang.Object[] $r3;
        android.text.style.RelativeSizeSpan $r4;
        float[] $r5;
        int $i0;
        float $f0;
        android.text.style.StyleSpan $r6;

        r0 := @parameter0: android.text.Editable;

        $r2 = staticinvoke <android.text.HtmlToSpannedConverter: java.lang.Object getLast(android.text.Spanned,java.lang.Class)>(r0, class "Landroid/text/HtmlToSpannedConverter$Heading;");

        r1 = (android.text.HtmlToSpannedConverter$Heading) $r2;

        if r1 == null goto label1;

        $r3 = newarray (java.lang.Object)[2];

        $r4 = new android.text.style.RelativeSizeSpan;

        $r5 = <android.text.HtmlToSpannedConverter: float[] HEADING_SIZES>;

        $i0 = staticinvoke <android.text.HtmlToSpannedConverter$Heading: int access$1300(android.text.HtmlToSpannedConverter$Heading)>(r1);

        $f0 = $r5[$i0];

        specialinvoke $r4.<android.text.style.RelativeSizeSpan: void <init>(float)>($f0);

        $r3[0] = $r4;

        $r6 = new android.text.style.StyleSpan;

        specialinvoke $r6.<android.text.style.StyleSpan: void <init>(int)>(1);

        $r3[1] = $r6;

        staticinvoke <android.text.HtmlToSpannedConverter: void setSpanFromMark(android.text.Spannable,java.lang.Object,java.lang.Object[])>(r0, r1, $r3);

     label1:
        staticinvoke <android.text.HtmlToSpannedConverter: void endBlockElement(android.text.Editable)>(r0);

        return;
    }

    private static void endLi(android.text.Editable)
    {
        android.text.Editable r0;
        android.text.style.BulletSpan $r1;

        r0 := @parameter0: android.text.Editable;

        staticinvoke <android.text.HtmlToSpannedConverter: void endCssStyle(android.text.Editable)>(r0);

        staticinvoke <android.text.HtmlToSpannedConverter: void endBlockElement(android.text.Editable)>(r0);

        $r1 = new android.text.style.BulletSpan;

        specialinvoke $r1.<android.text.style.BulletSpan: void <init>()>();

        staticinvoke <android.text.HtmlToSpannedConverter: void end(android.text.Editable,java.lang.Class,java.lang.Object)>(r0, class "Landroid/text/HtmlToSpannedConverter$Bullet;", $r1);

        return;
    }

    private static java.util.regex.Pattern getBackgroundColorPattern()
    {
        java.util.regex.Pattern $r0, $r1, $r2;

        $r0 = <android.text.HtmlToSpannedConverter: java.util.regex.Pattern sBackgroundColorPattern>;

        if $r0 != null goto label1;

        $r2 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("(?:\\s+|\\A)background(?:-color)?\\s*:\\s*(\\S*)\\b");

        <android.text.HtmlToSpannedConverter: java.util.regex.Pattern sBackgroundColorPattern> = $r2;

     label1:
        $r1 = <android.text.HtmlToSpannedConverter: java.util.regex.Pattern sBackgroundColorPattern>;

        return $r1;
    }

    private static java.util.regex.Pattern getForegroundColorPattern()
    {
        java.util.regex.Pattern $r0, $r1, $r2;

        $r0 = <android.text.HtmlToSpannedConverter: java.util.regex.Pattern sForegroundColorPattern>;

        if $r0 != null goto label1;

        $r2 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("(?:\\s+|\\A)color\\s*:\\s*(\\S*)\\b");

        <android.text.HtmlToSpannedConverter: java.util.regex.Pattern sForegroundColorPattern> = $r2;

     label1:
        $r1 = <android.text.HtmlToSpannedConverter: java.util.regex.Pattern sForegroundColorPattern>;

        return $r1;
    }

    private int getHtmlColor(java.lang.String)
    {
        android.text.HtmlToSpannedConverter r0;
        java.lang.String r1, $r5;
        java.lang.Integer r2;
        int $i0, $i1, $i2, $i3;
        java.util.Locale $r3;
        java.util.Map $r4;
        java.lang.Object $r6;

        r0 := @this: android.text.HtmlToSpannedConverter;

        r1 := @parameter0: java.lang.String;

        $i0 = r0.<android.text.HtmlToSpannedConverter: int mFlags>;

        $i1 = $i0 & 256;

        if $i1 != 256 goto label1;

        $r4 = <android.text.HtmlToSpannedConverter: java.util.Map sColorMap>;

        $r3 = <java.util.Locale: java.util.Locale US>;

        $r5 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r3);

        $r6 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r5);

        r2 = (java.lang.Integer) $r6;

        if r2 == null goto label1;

        $i3 = virtualinvoke r2.<java.lang.Integer: int intValue()>();

        return $i3;

     label1:
        $i2 = staticinvoke <android.graphics.Color: int getHtmlColor(java.lang.String)>(r1);

        return $i2;
    }

    private static java.lang.Object getLast(android.text.Spanned, java.lang.Class)
    {
        java.lang.Class r0;
        int $i0, $i1, $i2, $i3;
        java.lang.Object $r1;
        android.text.Spanned r2;
        java.lang.Object[] r3;

        r2 := @parameter0: android.text.Spanned;

        r0 := @parameter1: java.lang.Class;

        $i0 = interfaceinvoke r2.<android.text.Spanned: int length()>();

        r3 = interfaceinvoke r2.<android.text.Spanned: java.lang.Object[] getSpans(int,int,java.lang.Class)>(0, $i0, r0);

        $i1 = lengthof r3;

        if $i1 != 0 goto label1;

        return null;

     label1:
        $i2 = lengthof r3;

        $i3 = $i2 - 1;

        $r1 = r3[$i3];

        return $r1;
    }

    private int getMargin(int)
    {
        android.text.HtmlToSpannedConverter r0;
        int i0, $i1, $i2;

        r0 := @this: android.text.HtmlToSpannedConverter;

        i0 := @parameter0: int;

        $i1 = r0.<android.text.HtmlToSpannedConverter: int mFlags>;

        $i2 = $i1 & i0;

        if $i2 == 0 goto label1;

        return 1;

     label1:
        return 2;
    }

    private int getMarginBlockquote()
    {
        android.text.HtmlToSpannedConverter r0;
        int $i0;

        r0 := @this: android.text.HtmlToSpannedConverter;

        $i0 = specialinvoke r0.<android.text.HtmlToSpannedConverter: int getMargin(int)>(32);

        return $i0;
    }

    private int getMarginDiv()
    {
        android.text.HtmlToSpannedConverter r0;
        int $i0;

        r0 := @this: android.text.HtmlToSpannedConverter;

        $i0 = specialinvoke r0.<android.text.HtmlToSpannedConverter: int getMargin(int)>(16);

        return $i0;
    }

    private int getMarginHeading()
    {
        android.text.HtmlToSpannedConverter r0;
        int $i0;

        r0 := @this: android.text.HtmlToSpannedConverter;

        $i0 = specialinvoke r0.<android.text.HtmlToSpannedConverter: int getMargin(int)>(2);

        return $i0;
    }

    private int getMarginList()
    {
        android.text.HtmlToSpannedConverter r0;
        int $i0;

        r0 := @this: android.text.HtmlToSpannedConverter;

        $i0 = specialinvoke r0.<android.text.HtmlToSpannedConverter: int getMargin(int)>(8);

        return $i0;
    }

    private int getMarginListItem()
    {
        android.text.HtmlToSpannedConverter r0;
        int $i0;

        r0 := @this: android.text.HtmlToSpannedConverter;

        $i0 = specialinvoke r0.<android.text.HtmlToSpannedConverter: int getMargin(int)>(4);

        return $i0;
    }

    private int getMarginParagraph()
    {
        android.text.HtmlToSpannedConverter r0;
        int $i0;

        r0 := @this: android.text.HtmlToSpannedConverter;

        $i0 = specialinvoke r0.<android.text.HtmlToSpannedConverter: int getMargin(int)>(1);

        return $i0;
    }

    private static java.util.regex.Pattern getTextAlignPattern()
    {
        java.util.regex.Pattern $r0, $r1, $r2;

        $r0 = <android.text.HtmlToSpannedConverter: java.util.regex.Pattern sTextAlignPattern>;

        if $r0 != null goto label1;

        $r2 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("(?:\\s+|\\A)text-align\\s*:\\s*(\\S*)\\b");

        <android.text.HtmlToSpannedConverter: java.util.regex.Pattern sTextAlignPattern> = $r2;

     label1:
        $r1 = <android.text.HtmlToSpannedConverter: java.util.regex.Pattern sTextAlignPattern>;

        return $r1;
    }

    private static java.util.regex.Pattern getTextDecorationPattern()
    {
        java.util.regex.Pattern $r0, $r1, $r2;

        $r0 = <android.text.HtmlToSpannedConverter: java.util.regex.Pattern sTextDecorationPattern>;

        if $r0 != null goto label1;

        $r2 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("(?:\\s+|\\A)text-decoration\\s*:\\s*(\\S*)\\b");

        <android.text.HtmlToSpannedConverter: java.util.regex.Pattern sTextDecorationPattern> = $r2;

     label1:
        $r1 = <android.text.HtmlToSpannedConverter: java.util.regex.Pattern sTextDecorationPattern>;

        return $r1;
    }

    private static void handleBr(android.text.Editable)
    {
        android.text.Editable r0;

        r0 := @parameter0: android.text.Editable;

        interfaceinvoke r0.<android.text.Editable: android.text.Editable append(char)>(10);

        return;
    }

    private void handleEndTag(java.lang.String)
    {
        android.text.HtmlToSpannedConverter r0;
        java.lang.String r1;
        android.text.Html$TagHandler r2;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23;
        int $i0;
        org.xml.sax.XMLReader $r3;
        android.text.SpannableStringBuilder $r4, $r5, $r7, $r9, $r11, $r13, $r15, $r17, $r18, $r20, $r21, $r22, $r24, $r26, $r28, $r30, $r32, $r34, $r36, $r38, $r39, $r40, $r41, $r42, $r43, $r44, $r45;
        char $c1, $c2, $c3, $c4;
        android.text.style.SubscriptSpan $r6;
        android.text.style.SuperscriptSpan $r8;
        android.text.style.StrikethroughSpan $r10, $r12, $r14;
        android.text.style.UnderlineSpan $r16;
        android.text.style.TypefaceSpan $r19;
        android.text.style.RelativeSizeSpan $r23, $r25;
        android.text.style.StyleSpan $r27, $r29, $r31, $r33, $r35, $r37;

        r0 := @this: android.text.HtmlToSpannedConverter;

        r1 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("br");

        if $z0 == 0 goto label01;

        $r45 = r0.<android.text.HtmlToSpannedConverter: android.text.SpannableStringBuilder mSpannableStringBuilder>;

        staticinvoke <android.text.HtmlToSpannedConverter: void handleBr(android.text.Editable)>($r45);

        goto label26;

     label01:
        $z1 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("p");

        if $z1 == 0 goto label02;

        $r43 = r0.<android.text.HtmlToSpannedConverter: android.text.SpannableStringBuilder mSpannableStringBuilder>;

        staticinvoke <android.text.HtmlToSpannedConverter: void endCssStyle(android.text.Editable)>($r43);

        $r44 = r0.<android.text.HtmlToSpannedConverter: android.text.SpannableStringBuilder mSpannableStringBuilder>;

        staticinvoke <android.text.HtmlToSpannedConverter: void endBlockElement(android.text.Editable)>($r44);

        goto label26;

     label02:
        $z2 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("ul");

        if $z2 == 0 goto label03;

        $r42 = r0.<android.text.HtmlToSpannedConverter: android.text.SpannableStringBuilder mSpannableStringBuilder>;

        staticinvoke <android.text.HtmlToSpannedConverter: void endBlockElement(android.text.Editable)>($r42);

        goto label26;

     label03:
        $z3 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("li");

        if $z3 == 0 goto label04;

        $r41 = r0.<android.text.HtmlToSpannedConverter: android.text.SpannableStringBuilder mSpannableStringBuilder>;

        staticinvoke <android.text.HtmlToSpannedConverter: void endLi(android.text.Editable)>($r41);

        goto label26;

     label04:
        $z4 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("div");

        if $z4 == 0 goto label05;

        $r40 = r0.<android.text.HtmlToSpannedConverter: android.text.SpannableStringBuilder mSpannableStringBuilder>;

        staticinvoke <android.text.HtmlToSpannedConverter: void endBlockElement(android.text.Editable)>($r40);

        goto label26;

     label05:
        $z5 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("span");

        if $z5 == 0 goto label06;

        $r39 = r0.<android.text.HtmlToSpannedConverter: android.text.SpannableStringBuilder mSpannableStringBuilder>;

        staticinvoke <android.text.HtmlToSpannedConverter: void endCssStyle(android.text.Editable)>($r39);

        goto label26;

     label06:
        $z6 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("strong");

        if $z6 == 0 goto label07;

        $r38 = r0.<android.text.HtmlToSpannedConverter: android.text.SpannableStringBuilder mSpannableStringBuilder>;

        $r37 = new android.text.style.StyleSpan;

        specialinvoke $r37.<android.text.style.StyleSpan: void <init>(int)>(1);

        staticinvoke <android.text.HtmlToSpannedConverter: void end(android.text.Editable,java.lang.Class,java.lang.Object)>($r38, class "Landroid/text/HtmlToSpannedConverter$Bold;", $r37);

        goto label26;

     label07:
        $z7 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("b");

        if $z7 == 0 goto label08;

        $r36 = r0.<android.text.HtmlToSpannedConverter: android.text.SpannableStringBuilder mSpannableStringBuilder>;

        $r35 = new android.text.style.StyleSpan;

        specialinvoke $r35.<android.text.style.StyleSpan: void <init>(int)>(1);

        staticinvoke <android.text.HtmlToSpannedConverter: void end(android.text.Editable,java.lang.Class,java.lang.Object)>($r36, class "Landroid/text/HtmlToSpannedConverter$Bold;", $r35);

        goto label26;

     label08:
        $z8 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("em");

        if $z8 == 0 goto label09;

        $r34 = r0.<android.text.HtmlToSpannedConverter: android.text.SpannableStringBuilder mSpannableStringBuilder>;

        $r33 = new android.text.style.StyleSpan;

        specialinvoke $r33.<android.text.style.StyleSpan: void <init>(int)>(2);

        staticinvoke <android.text.HtmlToSpannedConverter: void end(android.text.Editable,java.lang.Class,java.lang.Object)>($r34, class "Landroid/text/HtmlToSpannedConverter$Italic;", $r33);

        goto label26;

     label09:
        $z9 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("cite");

        if $z9 == 0 goto label10;

        $r32 = r0.<android.text.HtmlToSpannedConverter: android.text.SpannableStringBuilder mSpannableStringBuilder>;

        $r31 = new android.text.style.StyleSpan;

        specialinvoke $r31.<android.text.style.StyleSpan: void <init>(int)>(2);

        staticinvoke <android.text.HtmlToSpannedConverter: void end(android.text.Editable,java.lang.Class,java.lang.Object)>($r32, class "Landroid/text/HtmlToSpannedConverter$Italic;", $r31);

        goto label26;

     label10:
        $z10 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("dfn");

        if $z10 == 0 goto label11;

        $r30 = r0.<android.text.HtmlToSpannedConverter: android.text.SpannableStringBuilder mSpannableStringBuilder>;

        $r29 = new android.text.style.StyleSpan;

        specialinvoke $r29.<android.text.style.StyleSpan: void <init>(int)>(2);

        staticinvoke <android.text.HtmlToSpannedConverter: void end(android.text.Editable,java.lang.Class,java.lang.Object)>($r30, class "Landroid/text/HtmlToSpannedConverter$Italic;", $r29);

        goto label26;

     label11:
        $z11 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("i");

        if $z11 == 0 goto label12;

        $r28 = r0.<android.text.HtmlToSpannedConverter: android.text.SpannableStringBuilder mSpannableStringBuilder>;

        $r27 = new android.text.style.StyleSpan;

        specialinvoke $r27.<android.text.style.StyleSpan: void <init>(int)>(2);

        staticinvoke <android.text.HtmlToSpannedConverter: void end(android.text.Editable,java.lang.Class,java.lang.Object)>($r28, class "Landroid/text/HtmlToSpannedConverter$Italic;", $r27);

        goto label26;

     label12:
        $z12 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("big");

        if $z12 == 0 goto label13;

        $r26 = r0.<android.text.HtmlToSpannedConverter: android.text.SpannableStringBuilder mSpannableStringBuilder>;

        $r25 = new android.text.style.RelativeSizeSpan;

        specialinvoke $r25.<android.text.style.RelativeSizeSpan: void <init>(float)>(1.25F);

        staticinvoke <android.text.HtmlToSpannedConverter: void end(android.text.Editable,java.lang.Class,java.lang.Object)>($r26, class "Landroid/text/HtmlToSpannedConverter$Big;", $r25);

        goto label26;

     label13:
        $z13 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("small");

        if $z13 == 0 goto label14;

        $r24 = r0.<android.text.HtmlToSpannedConverter: android.text.SpannableStringBuilder mSpannableStringBuilder>;

        $r23 = new android.text.style.RelativeSizeSpan;

        specialinvoke $r23.<android.text.style.RelativeSizeSpan: void <init>(float)>(0.8F);

        staticinvoke <android.text.HtmlToSpannedConverter: void end(android.text.Editable,java.lang.Class,java.lang.Object)>($r24, class "Landroid/text/HtmlToSpannedConverter$Small;", $r23);

        goto label26;

     label14:
        $z14 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("font");

        if $z14 == 0 goto label15;

        $r22 = r0.<android.text.HtmlToSpannedConverter: android.text.SpannableStringBuilder mSpannableStringBuilder>;

        staticinvoke <android.text.HtmlToSpannedConverter: void endFont(android.text.Editable)>($r22);

        goto label26;

     label15:
        $z15 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("blockquote");

        if $z15 == 0 goto label16;

        $r21 = r0.<android.text.HtmlToSpannedConverter: android.text.SpannableStringBuilder mSpannableStringBuilder>;

        staticinvoke <android.text.HtmlToSpannedConverter: void endBlockquote(android.text.Editable)>($r21);

        goto label26;

     label16:
        $z16 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("tt");

        if $z16 == 0 goto label17;

        $r20 = r0.<android.text.HtmlToSpannedConverter: android.text.SpannableStringBuilder mSpannableStringBuilder>;

        $r19 = new android.text.style.TypefaceSpan;

        specialinvoke $r19.<android.text.style.TypefaceSpan: void <init>(java.lang.String)>("monospace");

        staticinvoke <android.text.HtmlToSpannedConverter: void end(android.text.Editable,java.lang.Class,java.lang.Object)>($r20, class "Landroid/text/HtmlToSpannedConverter$Monospace;", $r19);

        goto label26;

     label17:
        $z17 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("a");

        if $z17 == 0 goto label18;

        $r18 = r0.<android.text.HtmlToSpannedConverter: android.text.SpannableStringBuilder mSpannableStringBuilder>;

        staticinvoke <android.text.HtmlToSpannedConverter: void endA(android.text.Editable)>($r18);

        goto label26;

     label18:
        $z18 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("u");

        if $z18 == 0 goto label19;

        $r17 = r0.<android.text.HtmlToSpannedConverter: android.text.SpannableStringBuilder mSpannableStringBuilder>;

        $r16 = new android.text.style.UnderlineSpan;

        specialinvoke $r16.<android.text.style.UnderlineSpan: void <init>()>();

        staticinvoke <android.text.HtmlToSpannedConverter: void end(android.text.Editable,java.lang.Class,java.lang.Object)>($r17, class "Landroid/text/HtmlToSpannedConverter$Underline;", $r16);

        goto label26;

     label19:
        $z19 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("del");

        if $z19 == 0 goto label20;

        $r15 = r0.<android.text.HtmlToSpannedConverter: android.text.SpannableStringBuilder mSpannableStringBuilder>;

        $r14 = new android.text.style.StrikethroughSpan;

        specialinvoke $r14.<android.text.style.StrikethroughSpan: void <init>()>();

        staticinvoke <android.text.HtmlToSpannedConverter: void end(android.text.Editable,java.lang.Class,java.lang.Object)>($r15, class "Landroid/text/HtmlToSpannedConverter$Strikethrough;", $r14);

        goto label26;

     label20:
        $z20 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("s");

        if $z20 == 0 goto label21;

        $r13 = r0.<android.text.HtmlToSpannedConverter: android.text.SpannableStringBuilder mSpannableStringBuilder>;

        $r12 = new android.text.style.StrikethroughSpan;

        specialinvoke $r12.<android.text.style.StrikethroughSpan: void <init>()>();

        staticinvoke <android.text.HtmlToSpannedConverter: void end(android.text.Editable,java.lang.Class,java.lang.Object)>($r13, class "Landroid/text/HtmlToSpannedConverter$Strikethrough;", $r12);

        goto label26;

     label21:
        $z21 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("strike");

        if $z21 == 0 goto label22;

        $r11 = r0.<android.text.HtmlToSpannedConverter: android.text.SpannableStringBuilder mSpannableStringBuilder>;

        $r10 = new android.text.style.StrikethroughSpan;

        specialinvoke $r10.<android.text.style.StrikethroughSpan: void <init>()>();

        staticinvoke <android.text.HtmlToSpannedConverter: void end(android.text.Editable,java.lang.Class,java.lang.Object)>($r11, class "Landroid/text/HtmlToSpannedConverter$Strikethrough;", $r10);

        goto label26;

     label22:
        $z22 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("sup");

        if $z22 == 0 goto label23;

        $r9 = r0.<android.text.HtmlToSpannedConverter: android.text.SpannableStringBuilder mSpannableStringBuilder>;

        $r8 = new android.text.style.SuperscriptSpan;

        specialinvoke $r8.<android.text.style.SuperscriptSpan: void <init>()>();

        staticinvoke <android.text.HtmlToSpannedConverter: void end(android.text.Editable,java.lang.Class,java.lang.Object)>($r9, class "Landroid/text/HtmlToSpannedConverter$Super;", $r8);

        goto label26;

     label23:
        $z23 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("sub");

        if $z23 == 0 goto label24;

        $r7 = r0.<android.text.HtmlToSpannedConverter: android.text.SpannableStringBuilder mSpannableStringBuilder>;

        $r6 = new android.text.style.SubscriptSpan;

        specialinvoke $r6.<android.text.style.SubscriptSpan: void <init>()>();

        staticinvoke <android.text.HtmlToSpannedConverter: void end(android.text.Editable,java.lang.Class,java.lang.Object)>($r7, class "Landroid/text/HtmlToSpannedConverter$Sub;", $r6);

        goto label26;

     label24:
        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i0 != 2 goto label25;

        $c1 = virtualinvoke r1.<java.lang.String: char charAt(int)>(0);

        $c2 = staticinvoke <java.lang.Character: char toLowerCase(char)>($c1);

        if $c2 != 104 goto label25;

        $c3 = virtualinvoke r1.<java.lang.String: char charAt(int)>(1);

        if $c3 < 49 goto label25;

        $c4 = virtualinvoke r1.<java.lang.String: char charAt(int)>(1);

        if $c4 > 54 goto label25;

        $r5 = r0.<android.text.HtmlToSpannedConverter: android.text.SpannableStringBuilder mSpannableStringBuilder>;

        staticinvoke <android.text.HtmlToSpannedConverter: void endHeading(android.text.Editable)>($r5);

        goto label26;

     label25:
        r2 = r0.<android.text.HtmlToSpannedConverter: android.text.Html$TagHandler mTagHandler>;

        if r2 == null goto label26;

        $r4 = r0.<android.text.HtmlToSpannedConverter: android.text.SpannableStringBuilder mSpannableStringBuilder>;

        $r3 = r0.<android.text.HtmlToSpannedConverter: org.xml.sax.XMLReader mReader>;

        interfaceinvoke r2.<android.text.Html$TagHandler: void handleTag(boolean,java.lang.String,android.text.Editable,org.xml.sax.XMLReader)>(0, r1, $r4, $r3);

     label26:
        return;
    }

    private void handleStartTag(java.lang.String, org.xml.sax.Attributes)
    {
        android.text.HtmlToSpannedConverter r0;
        java.lang.String r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24;
        int $i0, $i6, $i7, $i8, $i9;
        org.xml.sax.XMLReader $r2;
        android.text.SpannableStringBuilder $r3, $r5, $r6, $r8, $r10, $r12, $r14, $r16, $r18, $r19, $r21, $r22, $r23, $r25, $r27, $r29, $r31, $r33, $r35, $r37, $r39, $r40, $r41, $r42, $r43, $r44, $r45;
        android.text.Html$ImageGetter $r4;
        char $c1, $c2, $c3, $c4, $c5;
        android.text.HtmlToSpannedConverter$Sub $r7;
        android.text.HtmlToSpannedConverter$Super $r9;
        android.text.HtmlToSpannedConverter$Strikethrough $r11, $r13, $r15;
        android.text.HtmlToSpannedConverter$Underline $r17;
        android.text.HtmlToSpannedConverter$Monospace $r20;
        android.text.HtmlToSpannedConverter$Small $r24;
        android.text.HtmlToSpannedConverter$Big $r26;
        android.text.HtmlToSpannedConverter$Italic $r28, $r30, $r32, $r34;
        android.text.HtmlToSpannedConverter$Bold $r36, $r38;
        org.xml.sax.Attributes r46;
        android.text.Html$TagHandler r47;

        r0 := @this: android.text.HtmlToSpannedConverter;

        r1 := @parameter0: java.lang.String;

        r46 := @parameter1: org.xml.sax.Attributes;

        $z0 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("br");

        if $z0 == 0 goto label01;

        goto label27;

     label01:
        $z1 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("p");

        if $z1 == 0 goto label02;

        $r44 = r0.<android.text.HtmlToSpannedConverter: android.text.SpannableStringBuilder mSpannableStringBuilder>;

        $i9 = specialinvoke r0.<android.text.HtmlToSpannedConverter: int getMarginParagraph()>();

        staticinvoke <android.text.HtmlToSpannedConverter: void startBlockElement(android.text.Editable,org.xml.sax.Attributes,int)>($r44, r46, $i9);

        $r45 = r0.<android.text.HtmlToSpannedConverter: android.text.SpannableStringBuilder mSpannableStringBuilder>;

        specialinvoke r0.<android.text.HtmlToSpannedConverter: void startCssStyle(android.text.Editable,org.xml.sax.Attributes)>($r45, r46);

        goto label27;

     label02:
        $z2 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("ul");

        if $z2 == 0 goto label03;

        $r43 = r0.<android.text.HtmlToSpannedConverter: android.text.SpannableStringBuilder mSpannableStringBuilder>;

        $i8 = specialinvoke r0.<android.text.HtmlToSpannedConverter: int getMarginList()>();

        staticinvoke <android.text.HtmlToSpannedConverter: void startBlockElement(android.text.Editable,org.xml.sax.Attributes,int)>($r43, r46, $i8);

        goto label27;

     label03:
        $z3 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("li");

        if $z3 == 0 goto label04;

        $r42 = r0.<android.text.HtmlToSpannedConverter: android.text.SpannableStringBuilder mSpannableStringBuilder>;

        specialinvoke r0.<android.text.HtmlToSpannedConverter: void startLi(android.text.Editable,org.xml.sax.Attributes)>($r42, r46);

        goto label27;

     label04:
        $z4 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("div");

        if $z4 == 0 goto label05;

        $r41 = r0.<android.text.HtmlToSpannedConverter: android.text.SpannableStringBuilder mSpannableStringBuilder>;

        $i7 = specialinvoke r0.<android.text.HtmlToSpannedConverter: int getMarginDiv()>();

        staticinvoke <android.text.HtmlToSpannedConverter: void startBlockElement(android.text.Editable,org.xml.sax.Attributes,int)>($r41, r46, $i7);

        goto label27;

     label05:
        $z5 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("span");

        if $z5 == 0 goto label06;

        $r40 = r0.<android.text.HtmlToSpannedConverter: android.text.SpannableStringBuilder mSpannableStringBuilder>;

        specialinvoke r0.<android.text.HtmlToSpannedConverter: void startCssStyle(android.text.Editable,org.xml.sax.Attributes)>($r40, r46);

        goto label27;

     label06:
        $z6 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("strong");

        if $z6 == 0 goto label07;

        $r39 = r0.<android.text.HtmlToSpannedConverter: android.text.SpannableStringBuilder mSpannableStringBuilder>;

        $r38 = new android.text.HtmlToSpannedConverter$Bold;

        specialinvoke $r38.<android.text.HtmlToSpannedConverter$Bold: void <init>(android.text.HtmlToSpannedConverter$1)>(null);

        staticinvoke <android.text.HtmlToSpannedConverter: void start(android.text.Editable,java.lang.Object)>($r39, $r38);

        goto label27;

     label07:
        $z7 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("b");

        if $z7 == 0 goto label08;

        $r37 = r0.<android.text.HtmlToSpannedConverter: android.text.SpannableStringBuilder mSpannableStringBuilder>;

        $r36 = new android.text.HtmlToSpannedConverter$Bold;

        specialinvoke $r36.<android.text.HtmlToSpannedConverter$Bold: void <init>(android.text.HtmlToSpannedConverter$1)>(null);

        staticinvoke <android.text.HtmlToSpannedConverter: void start(android.text.Editable,java.lang.Object)>($r37, $r36);

        goto label27;

     label08:
        $z8 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("em");

        if $z8 == 0 goto label09;

        $r35 = r0.<android.text.HtmlToSpannedConverter: android.text.SpannableStringBuilder mSpannableStringBuilder>;

        $r34 = new android.text.HtmlToSpannedConverter$Italic;

        specialinvoke $r34.<android.text.HtmlToSpannedConverter$Italic: void <init>(android.text.HtmlToSpannedConverter$1)>(null);

        staticinvoke <android.text.HtmlToSpannedConverter: void start(android.text.Editable,java.lang.Object)>($r35, $r34);

        goto label27;

     label09:
        $z9 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("cite");

        if $z9 == 0 goto label10;

        $r33 = r0.<android.text.HtmlToSpannedConverter: android.text.SpannableStringBuilder mSpannableStringBuilder>;

        $r32 = new android.text.HtmlToSpannedConverter$Italic;

        specialinvoke $r32.<android.text.HtmlToSpannedConverter$Italic: void <init>(android.text.HtmlToSpannedConverter$1)>(null);

        staticinvoke <android.text.HtmlToSpannedConverter: void start(android.text.Editable,java.lang.Object)>($r33, $r32);

        goto label27;

     label10:
        $z10 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("dfn");

        if $z10 == 0 goto label11;

        $r31 = r0.<android.text.HtmlToSpannedConverter: android.text.SpannableStringBuilder mSpannableStringBuilder>;

        $r30 = new android.text.HtmlToSpannedConverter$Italic;

        specialinvoke $r30.<android.text.HtmlToSpannedConverter$Italic: void <init>(android.text.HtmlToSpannedConverter$1)>(null);

        staticinvoke <android.text.HtmlToSpannedConverter: void start(android.text.Editable,java.lang.Object)>($r31, $r30);

        goto label27;

     label11:
        $z11 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("i");

        if $z11 == 0 goto label12;

        $r29 = r0.<android.text.HtmlToSpannedConverter: android.text.SpannableStringBuilder mSpannableStringBuilder>;

        $r28 = new android.text.HtmlToSpannedConverter$Italic;

        specialinvoke $r28.<android.text.HtmlToSpannedConverter$Italic: void <init>(android.text.HtmlToSpannedConverter$1)>(null);

        staticinvoke <android.text.HtmlToSpannedConverter: void start(android.text.Editable,java.lang.Object)>($r29, $r28);

        goto label27;

     label12:
        $z12 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("big");

        if $z12 == 0 goto label13;

        $r27 = r0.<android.text.HtmlToSpannedConverter: android.text.SpannableStringBuilder mSpannableStringBuilder>;

        $r26 = new android.text.HtmlToSpannedConverter$Big;

        specialinvoke $r26.<android.text.HtmlToSpannedConverter$Big: void <init>(android.text.HtmlToSpannedConverter$1)>(null);

        staticinvoke <android.text.HtmlToSpannedConverter: void start(android.text.Editable,java.lang.Object)>($r27, $r26);

        goto label27;

     label13:
        $z13 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("small");

        if $z13 == 0 goto label14;

        $r25 = r0.<android.text.HtmlToSpannedConverter: android.text.SpannableStringBuilder mSpannableStringBuilder>;

        $r24 = new android.text.HtmlToSpannedConverter$Small;

        specialinvoke $r24.<android.text.HtmlToSpannedConverter$Small: void <init>(android.text.HtmlToSpannedConverter$1)>(null);

        staticinvoke <android.text.HtmlToSpannedConverter: void start(android.text.Editable,java.lang.Object)>($r25, $r24);

        goto label27;

     label14:
        $z14 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("font");

        if $z14 == 0 goto label15;

        $r23 = r0.<android.text.HtmlToSpannedConverter: android.text.SpannableStringBuilder mSpannableStringBuilder>;

        specialinvoke r0.<android.text.HtmlToSpannedConverter: void startFont(android.text.Editable,org.xml.sax.Attributes)>($r23, r46);

        goto label27;

     label15:
        $z15 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("blockquote");

        if $z15 == 0 goto label16;

        $r22 = r0.<android.text.HtmlToSpannedConverter: android.text.SpannableStringBuilder mSpannableStringBuilder>;

        specialinvoke r0.<android.text.HtmlToSpannedConverter: void startBlockquote(android.text.Editable,org.xml.sax.Attributes)>($r22, r46);

        goto label27;

     label16:
        $z16 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("tt");

        if $z16 == 0 goto label17;

        $r21 = r0.<android.text.HtmlToSpannedConverter: android.text.SpannableStringBuilder mSpannableStringBuilder>;

        $r20 = new android.text.HtmlToSpannedConverter$Monospace;

        specialinvoke $r20.<android.text.HtmlToSpannedConverter$Monospace: void <init>(android.text.HtmlToSpannedConverter$1)>(null);

        staticinvoke <android.text.HtmlToSpannedConverter: void start(android.text.Editable,java.lang.Object)>($r21, $r20);

        goto label27;

     label17:
        $z17 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("a");

        if $z17 == 0 goto label18;

        $r19 = r0.<android.text.HtmlToSpannedConverter: android.text.SpannableStringBuilder mSpannableStringBuilder>;

        staticinvoke <android.text.HtmlToSpannedConverter: void startA(android.text.Editable,org.xml.sax.Attributes)>($r19, r46);

        goto label27;

     label18:
        $z18 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("u");

        if $z18 == 0 goto label19;

        $r18 = r0.<android.text.HtmlToSpannedConverter: android.text.SpannableStringBuilder mSpannableStringBuilder>;

        $r17 = new android.text.HtmlToSpannedConverter$Underline;

        specialinvoke $r17.<android.text.HtmlToSpannedConverter$Underline: void <init>(android.text.HtmlToSpannedConverter$1)>(null);

        staticinvoke <android.text.HtmlToSpannedConverter: void start(android.text.Editable,java.lang.Object)>($r18, $r17);

        goto label27;

     label19:
        $z19 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("del");

        if $z19 == 0 goto label20;

        $r16 = r0.<android.text.HtmlToSpannedConverter: android.text.SpannableStringBuilder mSpannableStringBuilder>;

        $r15 = new android.text.HtmlToSpannedConverter$Strikethrough;

        specialinvoke $r15.<android.text.HtmlToSpannedConverter$Strikethrough: void <init>(android.text.HtmlToSpannedConverter$1)>(null);

        staticinvoke <android.text.HtmlToSpannedConverter: void start(android.text.Editable,java.lang.Object)>($r16, $r15);

        goto label27;

     label20:
        $z20 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("s");

        if $z20 == 0 goto label21;

        $r14 = r0.<android.text.HtmlToSpannedConverter: android.text.SpannableStringBuilder mSpannableStringBuilder>;

        $r13 = new android.text.HtmlToSpannedConverter$Strikethrough;

        specialinvoke $r13.<android.text.HtmlToSpannedConverter$Strikethrough: void <init>(android.text.HtmlToSpannedConverter$1)>(null);

        staticinvoke <android.text.HtmlToSpannedConverter: void start(android.text.Editable,java.lang.Object)>($r14, $r13);

        goto label27;

     label21:
        $z21 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("strike");

        if $z21 == 0 goto label22;

        $r12 = r0.<android.text.HtmlToSpannedConverter: android.text.SpannableStringBuilder mSpannableStringBuilder>;

        $r11 = new android.text.HtmlToSpannedConverter$Strikethrough;

        specialinvoke $r11.<android.text.HtmlToSpannedConverter$Strikethrough: void <init>(android.text.HtmlToSpannedConverter$1)>(null);

        staticinvoke <android.text.HtmlToSpannedConverter: void start(android.text.Editable,java.lang.Object)>($r12, $r11);

        goto label27;

     label22:
        $z22 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("sup");

        if $z22 == 0 goto label23;

        $r10 = r0.<android.text.HtmlToSpannedConverter: android.text.SpannableStringBuilder mSpannableStringBuilder>;

        $r9 = new android.text.HtmlToSpannedConverter$Super;

        specialinvoke $r9.<android.text.HtmlToSpannedConverter$Super: void <init>(android.text.HtmlToSpannedConverter$1)>(null);

        staticinvoke <android.text.HtmlToSpannedConverter: void start(android.text.Editable,java.lang.Object)>($r10, $r9);

        goto label27;

     label23:
        $z23 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("sub");

        if $z23 == 0 goto label24;

        $r8 = r0.<android.text.HtmlToSpannedConverter: android.text.SpannableStringBuilder mSpannableStringBuilder>;

        $r7 = new android.text.HtmlToSpannedConverter$Sub;

        specialinvoke $r7.<android.text.HtmlToSpannedConverter$Sub: void <init>(android.text.HtmlToSpannedConverter$1)>(null);

        staticinvoke <android.text.HtmlToSpannedConverter: void start(android.text.Editable,java.lang.Object)>($r8, $r7);

        goto label27;

     label24:
        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i0 != 2 goto label25;

        $c1 = virtualinvoke r1.<java.lang.String: char charAt(int)>(0);

        $c2 = staticinvoke <java.lang.Character: char toLowerCase(char)>($c1);

        if $c2 != 104 goto label25;

        $c3 = virtualinvoke r1.<java.lang.String: char charAt(int)>(1);

        if $c3 < 49 goto label25;

        $c4 = virtualinvoke r1.<java.lang.String: char charAt(int)>(1);

        if $c4 > 54 goto label25;

        $r6 = r0.<android.text.HtmlToSpannedConverter: android.text.SpannableStringBuilder mSpannableStringBuilder>;

        $c5 = virtualinvoke r1.<java.lang.String: char charAt(int)>(1);

        $i6 = $c5 - 49;

        specialinvoke r0.<android.text.HtmlToSpannedConverter: void startHeading(android.text.Editable,org.xml.sax.Attributes,int)>($r6, r46, $i6);

        goto label27;

     label25:
        $z24 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("img");

        if $z24 == 0 goto label26;

        $r5 = r0.<android.text.HtmlToSpannedConverter: android.text.SpannableStringBuilder mSpannableStringBuilder>;

        $r4 = r0.<android.text.HtmlToSpannedConverter: android.text.Html$ImageGetter mImageGetter>;

        staticinvoke <android.text.HtmlToSpannedConverter: void startImg(android.text.Editable,org.xml.sax.Attributes,android.text.Html$ImageGetter)>($r5, r46, $r4);

        goto label27;

     label26:
        r47 = r0.<android.text.HtmlToSpannedConverter: android.text.Html$TagHandler mTagHandler>;

        if r47 == null goto label27;

        $r3 = r0.<android.text.HtmlToSpannedConverter: android.text.SpannableStringBuilder mSpannableStringBuilder>;

        $r2 = r0.<android.text.HtmlToSpannedConverter: org.xml.sax.XMLReader mReader>;

        interfaceinvoke r47.<android.text.Html$TagHandler: void handleTag(boolean,java.lang.String,android.text.Editable,org.xml.sax.XMLReader)>(1, r1, $r3, $r2);

     label27:
        return;
    }

    private static transient void setSpanFromMark(android.text.Spannable, java.lang.Object, java.lang.Object[])
    {
        android.text.Spannable r0;
        java.lang.Object r1, $r3;
        java.lang.Object[] r2;
        int i0, i1, i2, i3;

        r0 := @parameter0: android.text.Spannable;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: java.lang.Object[];

        i0 = interfaceinvoke r0.<android.text.Spannable: int getSpanStart(java.lang.Object)>(r1);

        interfaceinvoke r0.<android.text.Spannable: void removeSpan(java.lang.Object)>(r1);

        i1 = interfaceinvoke r0.<android.text.Spannable: int length()>();

        if i0 == i1 goto label2;

        i2 = lengthof r2;

        i3 = 0;

     label1:
        if i3 >= i2 goto label2;

        $r3 = r2[i3];

        interfaceinvoke r0.<android.text.Spannable: void setSpan(java.lang.Object,int,int,int)>($r3, i0, i1, 33);

        i3 = i3 + 1;

        goto label1;

     label2:
        return;
    }

    private static void start(android.text.Editable, java.lang.Object)
    {
        android.text.Editable r0;
        java.lang.Object r1;
        int i0;

        r0 := @parameter0: android.text.Editable;

        r1 := @parameter1: java.lang.Object;

        i0 = interfaceinvoke r0.<android.text.Editable: int length()>();

        interfaceinvoke r0.<android.text.Editable: void setSpan(java.lang.Object,int,int,int)>(r1, i0, i0, 17);

        return;
    }

    private static void startA(android.text.Editable, org.xml.sax.Attributes)
    {
        android.text.Editable r0;
        org.xml.sax.Attributes r1;
        android.text.HtmlToSpannedConverter$Href $r2;
        java.lang.String $r3;

        r0 := @parameter0: android.text.Editable;

        r1 := @parameter1: org.xml.sax.Attributes;

        $r2 = new android.text.HtmlToSpannedConverter$Href;

        $r3 = interfaceinvoke r1.<org.xml.sax.Attributes: java.lang.String getValue(java.lang.String,java.lang.String)>("", "href");

        specialinvoke $r2.<android.text.HtmlToSpannedConverter$Href: void <init>(java.lang.String)>($r3);

        staticinvoke <android.text.HtmlToSpannedConverter: void start(android.text.Editable,java.lang.Object)>(r0, $r2);

        return;
    }

    private static void startBlockElement(android.text.Editable, org.xml.sax.Attributes, int)
    {
        android.text.Editable r0;
        int i0;
        java.util.regex.Pattern $r1;
        boolean $z0, $z1, $z2, $z3;
        android.text.HtmlToSpannedConverter$Alignment $r2, $r4, $r6;
        android.text.Layout$Alignment $r3, $r5, $r7;
        android.text.HtmlToSpannedConverter$Newline $r8;
        org.xml.sax.Attributes r9;
        java.lang.String r10, r12;
        java.util.regex.Matcher r11;

        r0 := @parameter0: android.text.Editable;

        r9 := @parameter1: org.xml.sax.Attributes;

        i0 := @parameter2: int;

        interfaceinvoke r0.<android.text.Editable: int length()>();

        if i0 <= 0 goto label1;

        staticinvoke <android.text.HtmlToSpannedConverter: void appendNewlines(android.text.Editable,int)>(r0, i0);

        $r8 = new android.text.HtmlToSpannedConverter$Newline;

        specialinvoke $r8.<android.text.HtmlToSpannedConverter$Newline: void <init>(int)>(i0);

        staticinvoke <android.text.HtmlToSpannedConverter: void start(android.text.Editable,java.lang.Object)>(r0, $r8);

     label1:
        r10 = interfaceinvoke r9.<org.xml.sax.Attributes: java.lang.String getValue(java.lang.String,java.lang.String)>("", "style");

        if r10 == null goto label4;

        $r1 = staticinvoke <android.text.HtmlToSpannedConverter: java.util.regex.Pattern getTextAlignPattern()>();

        r11 = virtualinvoke $r1.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r10);

        $z0 = virtualinvoke r11.<java.util.regex.Matcher: boolean find()>();

        if $z0 == 0 goto label4;

        r12 = virtualinvoke r11.<java.util.regex.Matcher: java.lang.String group(int)>(1);

        $z1 = virtualinvoke r12.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("start");

        if $z1 == 0 goto label2;

        $r6 = new android.text.HtmlToSpannedConverter$Alignment;

        $r7 = <android.text.Layout$Alignment: android.text.Layout$Alignment ALIGN_NORMAL>;

        specialinvoke $r6.<android.text.HtmlToSpannedConverter$Alignment: void <init>(android.text.Layout$Alignment)>($r7);

        staticinvoke <android.text.HtmlToSpannedConverter: void start(android.text.Editable,java.lang.Object)>(r0, $r6);

        goto label4;

     label2:
        $z2 = virtualinvoke r12.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("center");

        if $z2 == 0 goto label3;

        $r4 = new android.text.HtmlToSpannedConverter$Alignment;

        $r5 = <android.text.Layout$Alignment: android.text.Layout$Alignment ALIGN_CENTER>;

        specialinvoke $r4.<android.text.HtmlToSpannedConverter$Alignment: void <init>(android.text.Layout$Alignment)>($r5);

        staticinvoke <android.text.HtmlToSpannedConverter: void start(android.text.Editable,java.lang.Object)>(r0, $r4);

        goto label4;

     label3:
        $z3 = virtualinvoke r12.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("end");

        if $z3 == 0 goto label4;

        $r2 = new android.text.HtmlToSpannedConverter$Alignment;

        $r3 = <android.text.Layout$Alignment: android.text.Layout$Alignment ALIGN_OPPOSITE>;

        specialinvoke $r2.<android.text.HtmlToSpannedConverter$Alignment: void <init>(android.text.Layout$Alignment)>($r3);

        staticinvoke <android.text.HtmlToSpannedConverter: void start(android.text.Editable,java.lang.Object)>(r0, $r2);

     label4:
        return;
    }

    private void startBlockquote(android.text.Editable, org.xml.sax.Attributes)
    {
        android.text.HtmlToSpannedConverter r0;
        android.text.Editable r1;
        org.xml.sax.Attributes r2;
        int $i0;
        android.text.HtmlToSpannedConverter$Blockquote $r3;

        r0 := @this: android.text.HtmlToSpannedConverter;

        r1 := @parameter0: android.text.Editable;

        r2 := @parameter1: org.xml.sax.Attributes;

        $i0 = specialinvoke r0.<android.text.HtmlToSpannedConverter: int getMarginBlockquote()>();

        staticinvoke <android.text.HtmlToSpannedConverter: void startBlockElement(android.text.Editable,org.xml.sax.Attributes,int)>(r1, r2, $i0);

        $r3 = new android.text.HtmlToSpannedConverter$Blockquote;

        specialinvoke $r3.<android.text.HtmlToSpannedConverter$Blockquote: void <init>(android.text.HtmlToSpannedConverter$1)>(null);

        staticinvoke <android.text.HtmlToSpannedConverter: void start(android.text.Editable,java.lang.Object)>(r1, $r3);

        return;
    }

    private void startCssStyle(android.text.Editable, org.xml.sax.Attributes)
    {
        android.text.HtmlToSpannedConverter r0;
        android.text.Editable r1;
        java.util.regex.Pattern $r2, $r12, $r14;
        boolean $z0, $z1, $z2, $z3;
        java.lang.String $r3, $r5, $r7, r10;
        android.text.HtmlToSpannedConverter$Strikethrough $r4;
        android.text.HtmlToSpannedConverter$Background $r6;
        int $i0, $i1, i2, i3;
        android.text.HtmlToSpannedConverter$Foreground $r8;
        org.xml.sax.Attributes r9;
        java.util.regex.Matcher r11, r13, r15;

        r0 := @this: android.text.HtmlToSpannedConverter;

        r1 := @parameter0: android.text.Editable;

        r9 := @parameter1: org.xml.sax.Attributes;

        r10 = interfaceinvoke r9.<org.xml.sax.Attributes: java.lang.String getValue(java.lang.String,java.lang.String)>("", "style");

        if r10 == null goto label3;

        $r2 = staticinvoke <android.text.HtmlToSpannedConverter: java.util.regex.Pattern getForegroundColorPattern()>();

        r11 = virtualinvoke $r2.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r10);

        $z0 = virtualinvoke r11.<java.util.regex.Matcher: boolean find()>();

        if $z0 == 0 goto label1;

        $r7 = virtualinvoke r11.<java.util.regex.Matcher: java.lang.String group(int)>(1);

        i2 = specialinvoke r0.<android.text.HtmlToSpannedConverter: int getHtmlColor(java.lang.String)>($r7);

        if i2 == -1 goto label1;

        $r8 = new android.text.HtmlToSpannedConverter$Foreground;

        $i1 = i2 | -16777216;

        specialinvoke $r8.<android.text.HtmlToSpannedConverter$Foreground: void <init>(int)>($i1);

        staticinvoke <android.text.HtmlToSpannedConverter: void start(android.text.Editable,java.lang.Object)>(r1, $r8);

     label1:
        $r12 = staticinvoke <android.text.HtmlToSpannedConverter: java.util.regex.Pattern getBackgroundColorPattern()>();

        r13 = virtualinvoke $r12.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r10);

        $z2 = virtualinvoke r13.<java.util.regex.Matcher: boolean find()>();

        if $z2 == 0 goto label2;

        $r5 = virtualinvoke r13.<java.util.regex.Matcher: java.lang.String group(int)>(1);

        i3 = specialinvoke r0.<android.text.HtmlToSpannedConverter: int getHtmlColor(java.lang.String)>($r5);

        if i3 == -1 goto label2;

        $r6 = new android.text.HtmlToSpannedConverter$Background;

        $i0 = -16777216 | i3;

        specialinvoke $r6.<android.text.HtmlToSpannedConverter$Background: void <init>(int)>($i0);

        staticinvoke <android.text.HtmlToSpannedConverter: void start(android.text.Editable,java.lang.Object)>(r1, $r6);

     label2:
        $r14 = staticinvoke <android.text.HtmlToSpannedConverter: java.util.regex.Pattern getTextDecorationPattern()>();

        r15 = virtualinvoke $r14.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r10);

        $z3 = virtualinvoke r15.<java.util.regex.Matcher: boolean find()>();

        if $z3 == 0 goto label3;

        $r3 = virtualinvoke r15.<java.util.regex.Matcher: java.lang.String group(int)>(1);

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("line-through");

        if $z1 == 0 goto label3;

        $r4 = new android.text.HtmlToSpannedConverter$Strikethrough;

        specialinvoke $r4.<android.text.HtmlToSpannedConverter$Strikethrough: void <init>(android.text.HtmlToSpannedConverter$1)>(null);

        staticinvoke <android.text.HtmlToSpannedConverter: void start(android.text.Editable,java.lang.Object)>(r1, $r4);

     label3:
        return;
    }

    private void startFont(android.text.Editable, org.xml.sax.Attributes)
    {
        android.text.HtmlToSpannedConverter r0;
        android.text.Editable r1;
        java.lang.String r2, r6;
        int i0, $i1;
        boolean $z0, $z1;
        android.text.HtmlToSpannedConverter$Font $r3;
        android.text.HtmlToSpannedConverter$Foreground $r4;
        org.xml.sax.Attributes r5;

        r0 := @this: android.text.HtmlToSpannedConverter;

        r1 := @parameter0: android.text.Editable;

        r5 := @parameter1: org.xml.sax.Attributes;

        r2 = interfaceinvoke r5.<org.xml.sax.Attributes: java.lang.String getValue(java.lang.String,java.lang.String)>("", "color");

        r6 = interfaceinvoke r5.<org.xml.sax.Attributes: java.lang.String getValue(java.lang.String,java.lang.String)>("", "face");

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r2);

        if $z0 != 0 goto label1;

        i0 = specialinvoke r0.<android.text.HtmlToSpannedConverter: int getHtmlColor(java.lang.String)>(r2);

        if i0 == -1 goto label1;

        $r4 = new android.text.HtmlToSpannedConverter$Foreground;

        $i1 = -16777216 | i0;

        specialinvoke $r4.<android.text.HtmlToSpannedConverter$Foreground: void <init>(int)>($i1);

        staticinvoke <android.text.HtmlToSpannedConverter: void start(android.text.Editable,java.lang.Object)>(r1, $r4);

     label1:
        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r6);

        if $z1 != 0 goto label2;

        $r3 = new android.text.HtmlToSpannedConverter$Font;

        specialinvoke $r3.<android.text.HtmlToSpannedConverter$Font: void <init>(java.lang.String)>(r6);

        staticinvoke <android.text.HtmlToSpannedConverter: void start(android.text.Editable,java.lang.Object)>(r1, $r3);

     label2:
        return;
    }

    private void startHeading(android.text.Editable, org.xml.sax.Attributes, int)
    {
        android.text.HtmlToSpannedConverter r0;
        android.text.Editable r1;
        org.xml.sax.Attributes r2;
        int i0, $i1;
        android.text.HtmlToSpannedConverter$Heading $r3;

        r0 := @this: android.text.HtmlToSpannedConverter;

        r1 := @parameter0: android.text.Editable;

        r2 := @parameter1: org.xml.sax.Attributes;

        i0 := @parameter2: int;

        $i1 = specialinvoke r0.<android.text.HtmlToSpannedConverter: int getMarginHeading()>();

        staticinvoke <android.text.HtmlToSpannedConverter: void startBlockElement(android.text.Editable,org.xml.sax.Attributes,int)>(r1, r2, $i1);

        $r3 = new android.text.HtmlToSpannedConverter$Heading;

        specialinvoke $r3.<android.text.HtmlToSpannedConverter$Heading: void <init>(int)>(i0);

        staticinvoke <android.text.HtmlToSpannedConverter: void start(android.text.Editable,java.lang.Object)>(r1, $r3);

        return;
    }

    private static void startImg(android.text.Editable, org.xml.sax.Attributes, android.text.Html$ImageGetter)
    {
        android.text.Editable r0;
        java.lang.String r1;
        int i0, $i1, $i2, $i3;
        android.text.style.ImageSpan $r3;
        android.content.res.Resources $r4;
        org.xml.sax.Attributes r5;
        android.text.Html$ImageGetter r6;
        android.graphics.drawable.Drawable r7, r8;

        r0 := @parameter0: android.text.Editable;

        r5 := @parameter1: org.xml.sax.Attributes;

        r6 := @parameter2: android.text.Html$ImageGetter;

        r1 = interfaceinvoke r5.<org.xml.sax.Attributes: java.lang.String getValue(java.lang.String,java.lang.String)>("", "src");

        r7 = null;

        if r6 == null goto label1;

        r7 = interfaceinvoke r6.<android.text.Html$ImageGetter: android.graphics.drawable.Drawable getDrawable(java.lang.String)>(r1);

     label1:
        r8 = r7;

        if r7 != null goto label2;

        $r4 = staticinvoke <android.content.res.Resources: android.content.res.Resources getSystem()>();

        r8 = virtualinvoke $r4.<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int)>(17303788);

        $i2 = virtualinvoke r8.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        $i3 = virtualinvoke r8.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        virtualinvoke r8.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>(0, 0, $i2, $i3);

     label2:
        i0 = interfaceinvoke r0.<android.text.Editable: int length()>();

        interfaceinvoke r0.<android.text.Editable: android.text.Editable append(java.lang.CharSequence)>("\ufffc");

        $r3 = new android.text.style.ImageSpan;

        specialinvoke $r3.<android.text.style.ImageSpan: void <init>(android.graphics.drawable.Drawable,java.lang.String)>(r8, r1);

        $i1 = interfaceinvoke r0.<android.text.Editable: int length()>();

        interfaceinvoke r0.<android.text.Editable: void setSpan(java.lang.Object,int,int,int)>($r3, i0, $i1, 33);

        return;
    }

    private void startLi(android.text.Editable, org.xml.sax.Attributes)
    {
        android.text.HtmlToSpannedConverter r0;
        android.text.Editable r1;
        org.xml.sax.Attributes r2;
        int $i0;
        android.text.HtmlToSpannedConverter$Bullet $r3;

        r0 := @this: android.text.HtmlToSpannedConverter;

        r1 := @parameter0: android.text.Editable;

        r2 := @parameter1: org.xml.sax.Attributes;

        $i0 = specialinvoke r0.<android.text.HtmlToSpannedConverter: int getMarginListItem()>();

        staticinvoke <android.text.HtmlToSpannedConverter: void startBlockElement(android.text.Editable,org.xml.sax.Attributes,int)>(r1, r2, $i0);

        $r3 = new android.text.HtmlToSpannedConverter$Bullet;

        specialinvoke $r3.<android.text.HtmlToSpannedConverter$Bullet: void <init>(android.text.HtmlToSpannedConverter$1)>(null);

        staticinvoke <android.text.HtmlToSpannedConverter: void start(android.text.Editable,java.lang.Object)>(r1, $r3);

        specialinvoke r0.<android.text.HtmlToSpannedConverter: void startCssStyle(android.text.Editable,org.xml.sax.Attributes)>(r1, r2);

        return;
    }

    public void characters(char[], int, int) throws org.xml.sax.SAXException
    {
        android.text.HtmlToSpannedConverter r0;
        char[] r1;
        int i0, i1, $i3, $i4, $i5, i6, i7, i8;
        char c2, c9;
        java.lang.StringBuilder $r3;
        android.text.SpannableStringBuilder $r4, $r7, $r8;

        r0 := @this: android.text.HtmlToSpannedConverter;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        i6 = 0;

     label1:
        if i6 >= i1 goto label8;

        $i3 = i6 + i0;

        c2 = r1[$i3];

        if c2 == 32 goto label3;

        if c2 != 10 goto label2;

        goto label3;

     label2:
        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c2);

        goto label7;

     label3:
        i7 = virtualinvoke $r3.<java.lang.StringBuilder: int length()>();

        if i7 != 0 goto label5;

        $r7 = r0.<android.text.HtmlToSpannedConverter: android.text.SpannableStringBuilder mSpannableStringBuilder>;

        i8 = virtualinvoke $r7.<android.text.SpannableStringBuilder: int length()>();

        if i8 != 0 goto label4;

        c9 = 10;

        goto label6;

     label4:
        $r8 = r0.<android.text.HtmlToSpannedConverter: android.text.SpannableStringBuilder mSpannableStringBuilder>;

        $i5 = i8 - 1;

        c9 = virtualinvoke $r8.<android.text.SpannableStringBuilder: char charAt(int)>($i5);

        goto label6;

     label5:
        $i4 = i7 - 1;

        c9 = virtualinvoke $r3.<java.lang.StringBuilder: char charAt(int)>($i4);

     label6:
        if c9 == 32 goto label7;

        if c9 == 10 goto label7;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

     label7:
        i6 = i6 + 1;

        goto label1;

     label8:
        $r4 = r0.<android.text.HtmlToSpannedConverter: android.text.SpannableStringBuilder mSpannableStringBuilder>;

        virtualinvoke $r4.<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder append(java.lang.CharSequence)>($r3);

        return;
    }

    public android.text.Spanned convert()
    {
        android.text.HtmlToSpannedConverter r0;
        org.xml.sax.XMLReader r1, $r3;
        org.xml.sax.InputSource r2;
        int i0, i1, $i2, $i3, $i4, $i5, $i7, i9, i10;
        java.lang.String $r4;
        android.text.SpannableStringBuilder $r5, $r7, $r9, $r11, $r13, $r14, $r15, r21;
        java.lang.Object $r6, $r8, $r10, $r12;
        char $c6, $c8;
        java.lang.Throwable $r16, $r18;
        java.lang.RuntimeException $r17, $r19;
        java.io.StringReader r20;
        java.lang.Object[] r22;

        r0 := @this: android.text.HtmlToSpannedConverter;

        $r3 = r0.<android.text.HtmlToSpannedConverter: org.xml.sax.XMLReader mReader>;

        interfaceinvoke $r3.<org.xml.sax.XMLReader: void setContentHandler(org.xml.sax.ContentHandler)>(r0);

     label1:
        r1 = r0.<android.text.HtmlToSpannedConverter: org.xml.sax.XMLReader mReader>;

        r2 = new org.xml.sax.InputSource;

        r20 = new java.io.StringReader;

        $r4 = r0.<android.text.HtmlToSpannedConverter: java.lang.String mSource>;

        specialinvoke r20.<java.io.StringReader: void <init>(java.lang.String)>($r4);

        specialinvoke r2.<org.xml.sax.InputSource: void <init>(java.io.Reader)>(r20);

        interfaceinvoke r1.<org.xml.sax.XMLReader: void parse(org.xml.sax.InputSource)>(r2);

     label2:
        r21 = r0.<android.text.HtmlToSpannedConverter: android.text.SpannableStringBuilder mSpannableStringBuilder>;

        $i2 = virtualinvoke r21.<android.text.SpannableStringBuilder: int length()>();

        r22 = virtualinvoke r21.<android.text.SpannableStringBuilder: java.lang.Object[] getSpans(int,int,java.lang.Class)>(0, $i2, class "Landroid/text/style/ParagraphStyle;");

        i9 = 0;

     label3:
        $i3 = lengthof r22;

        if i9 >= $i3 goto label7;

        $r7 = r0.<android.text.HtmlToSpannedConverter: android.text.SpannableStringBuilder mSpannableStringBuilder>;

        $r6 = r22[i9];

        i0 = virtualinvoke $r7.<android.text.SpannableStringBuilder: int getSpanStart(java.lang.Object)>($r6);

        $r9 = r0.<android.text.HtmlToSpannedConverter: android.text.SpannableStringBuilder mSpannableStringBuilder>;

        $r8 = r22[i9];

        i1 = virtualinvoke $r9.<android.text.SpannableStringBuilder: int getSpanEnd(java.lang.Object)>($r8);

        i10 = i1;

        $i4 = i1 - 2;

        if $i4 < 0 goto label4;

        i10 = i1;

        $r14 = r0.<android.text.HtmlToSpannedConverter: android.text.SpannableStringBuilder mSpannableStringBuilder>;

        $i5 = i1 - 1;

        $c6 = virtualinvoke $r14.<android.text.SpannableStringBuilder: char charAt(int)>($i5);

        if $c6 != 10 goto label4;

        i10 = i1;

        $r15 = r0.<android.text.HtmlToSpannedConverter: android.text.SpannableStringBuilder mSpannableStringBuilder>;

        $i7 = i1 - 2;

        $c8 = virtualinvoke $r15.<android.text.SpannableStringBuilder: char charAt(int)>($i7);

        if $c8 != 10 goto label4;

        i10 = i1 - 1;

     label4:
        if i10 != i0 goto label5;

        $r13 = r0.<android.text.HtmlToSpannedConverter: android.text.SpannableStringBuilder mSpannableStringBuilder>;

        $r12 = r22[i9];

        virtualinvoke $r13.<android.text.SpannableStringBuilder: void removeSpan(java.lang.Object)>($r12);

        goto label6;

     label5:
        $r11 = r0.<android.text.HtmlToSpannedConverter: android.text.SpannableStringBuilder mSpannableStringBuilder>;

        $r10 = r22[i9];

        virtualinvoke $r11.<android.text.SpannableStringBuilder: void setSpan(java.lang.Object,int,int,int)>($r10, i0, i10, 51);

     label6:
        i9 = i9 + 1;

        goto label3;

     label7:
        $r5 = r0.<android.text.HtmlToSpannedConverter: android.text.SpannableStringBuilder mSpannableStringBuilder>;

        return $r5;

     label8:
        $r16 := @caughtexception;

        $r17 = new java.lang.RuntimeException;

        specialinvoke $r17.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r16);

        throw $r17;

     label9:
        $r18 := @caughtexception;

        $r19 = new java.lang.RuntimeException;

        specialinvoke $r19.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r18);

        throw $r19;

        catch java.io.IOException from label1 to label2 with label9;
        catch org.xml.sax.SAXException from label1 to label2 with label8;
    }

    public void endDocument() throws org.xml.sax.SAXException
    {
        android.text.HtmlToSpannedConverter r0;

        r0 := @this: android.text.HtmlToSpannedConverter;

        return;
    }

    public void endElement(java.lang.String, java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        android.text.HtmlToSpannedConverter r0;
        java.lang.String r1, r2, r3;

        r0 := @this: android.text.HtmlToSpannedConverter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        specialinvoke r0.<android.text.HtmlToSpannedConverter: void handleEndTag(java.lang.String)>(r2);

        return;
    }

    public void endPrefixMapping(java.lang.String) throws org.xml.sax.SAXException
    {
        android.text.HtmlToSpannedConverter r0;
        java.lang.String r1;

        r0 := @this: android.text.HtmlToSpannedConverter;

        r1 := @parameter0: java.lang.String;

        return;
    }

    public void ignorableWhitespace(char[], int, int) throws org.xml.sax.SAXException
    {
        android.text.HtmlToSpannedConverter r0;
        char[] r1;
        int i0, i1;

        r0 := @this: android.text.HtmlToSpannedConverter;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        return;
    }

    public void processingInstruction(java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        android.text.HtmlToSpannedConverter r0;
        java.lang.String r1, r2;

        r0 := @this: android.text.HtmlToSpannedConverter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        return;
    }

    public void setDocumentLocator(org.xml.sax.Locator)
    {
        android.text.HtmlToSpannedConverter r0;
        org.xml.sax.Locator r1;

        r0 := @this: android.text.HtmlToSpannedConverter;

        r1 := @parameter0: org.xml.sax.Locator;

        return;
    }

    public void skippedEntity(java.lang.String) throws org.xml.sax.SAXException
    {
        android.text.HtmlToSpannedConverter r0;
        java.lang.String r1;

        r0 := @this: android.text.HtmlToSpannedConverter;

        r1 := @parameter0: java.lang.String;

        return;
    }

    public void startDocument() throws org.xml.sax.SAXException
    {
        android.text.HtmlToSpannedConverter r0;

        r0 := @this: android.text.HtmlToSpannedConverter;

        return;
    }

    public void startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes) throws org.xml.sax.SAXException
    {
        android.text.HtmlToSpannedConverter r0;
        java.lang.String r1, r2, r3;
        org.xml.sax.Attributes r4;

        r0 := @this: android.text.HtmlToSpannedConverter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: org.xml.sax.Attributes;

        specialinvoke r0.<android.text.HtmlToSpannedConverter: void handleStartTag(java.lang.String,org.xml.sax.Attributes)>(r2, r4);

        return;
    }

    public void startPrefixMapping(java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        android.text.HtmlToSpannedConverter r0;
        java.lang.String r1, r2;

        r0 := @this: android.text.HtmlToSpannedConverter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        return;
    }
}
