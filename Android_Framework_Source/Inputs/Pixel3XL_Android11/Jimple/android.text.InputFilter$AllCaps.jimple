public class android.text.InputFilter$AllCaps extends java.lang.Object implements android.text.InputFilter
{
    private final java.util.Locale mLocale;

    public void <init>()
    {
        android.text.InputFilter$AllCaps r0;

        r0 := @this: android.text.InputFilter$AllCaps;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.text.InputFilter$AllCaps: java.util.Locale mLocale> = null;

        return;
    }

    public void <init>(java.util.Locale)
    {
        android.text.InputFilter$AllCaps r0;
        java.util.Locale r1;

        r0 := @this: android.text.InputFilter$AllCaps;

        r1 := @parameter0: java.util.Locale;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        r0.<android.text.InputFilter$AllCaps: java.util.Locale mLocale> = r1;

        return;
    }

    public java.lang.CharSequence filter(java.lang.CharSequence, int, int, android.text.Spanned, int, int)
    {
        android.text.InputFilter$AllCaps r0;
        int i0, i1, $i2, $i3, i4, i5, i6, i7;
        boolean z1, $z2, $z3, z4;
        java.util.Locale $r2;
        java.lang.CharSequence r4, r7, r11;
        android.text.Spanned r5;
        java.lang.Object r8;
        android.text.InputFilter$AllCaps$CharSequenceWrapper r9;
        android.text.SpannableString r10;

        r0 := @this: android.text.InputFilter$AllCaps;

        r4 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r5 := @parameter3: android.text.Spanned;

        i4 := @parameter4: int;

        i5 := @parameter5: int;

        r9 = new android.text.InputFilter$AllCaps$CharSequenceWrapper;

        specialinvoke r9.<android.text.InputFilter$AllCaps$CharSequenceWrapper: void <init>(java.lang.CharSequence,int,int)>(r4, i0, i1);

        i6 = 0;

     label1:
        z4 = 0;

        $i2 = i1 - i0;

        if i6 >= $i2 goto label4;

        i7 = staticinvoke <java.lang.Character: int codePointAt(java.lang.CharSequence,int)>(r9, i6);

        $z2 = staticinvoke <java.lang.Character: boolean isLowerCase(int)>(i7);

        if $z2 != 0 goto label3;

        $z3 = staticinvoke <java.lang.Character: boolean isTitleCase(int)>(i7);

        if $z3 == 0 goto label2;

        goto label3;

     label2:
        $i3 = staticinvoke <java.lang.Character: int charCount(int)>(i7);

        i6 = i6 + $i3;

        goto label1;

     label3:
        z4 = 1;

     label4:
        if z4 != 0 goto label5;

        return null;

     label5:
        z1 = r4 instanceof android.text.Spanned;

        $r2 = r0.<android.text.InputFilter$AllCaps: java.util.Locale mLocale>;

        r7 = staticinvoke <android.text.TextUtils: java.lang.CharSequence toUpperCase(java.util.Locale,java.lang.CharSequence,boolean)>($r2, r9, z1);

        if r7 != r9 goto label6;

        return null;

     label6:
        if z1 == 0 goto label7;

        r10 = new android.text.SpannableString;

        specialinvoke r10.<android.text.SpannableString: void <init>(java.lang.CharSequence)>(r7);

        r8 = r10;

        goto label8;

     label7:
        r8 = interfaceinvoke r7.<java.lang.CharSequence: java.lang.String toString()>();

     label8:
        r11 = (java.lang.CharSequence) r8;

        return r11;
    }
}
