class android.text.Layout$HorizontalMeasurementProvider extends java.lang.Object
{
    private float[] mHorizontals;
    private final int mLine;
    private int mLineStartOffset;
    private final boolean mPrimary;
    final android.text.Layout this$0;

    void <init>(android.text.Layout, int, boolean)
    {
        android.text.Layout$HorizontalMeasurementProvider r0;
        android.text.Layout r1;
        int i0;
        boolean z0;

        r0 := @this: android.text.Layout$HorizontalMeasurementProvider;

        r1 := @parameter0: android.text.Layout;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        r0.<android.text.Layout$HorizontalMeasurementProvider: android.text.Layout this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.text.Layout$HorizontalMeasurementProvider: int mLine> = i0;

        r0.<android.text.Layout$HorizontalMeasurementProvider: boolean mPrimary> = z0;

        specialinvoke r0.<android.text.Layout$HorizontalMeasurementProvider: void init()>();

        return;
    }

    private void init()
    {
        android.text.Layout$HorizontalMeasurementProvider r0;
        int $i0, $i1, $i2, $i3;
        android.text.Layout $r1, $r4, $r6;
        android.text.Layout$Directions $r2, $r3;
        boolean $z0;
        float[] $r5;

        r0 := @this: android.text.Layout$HorizontalMeasurementProvider;

        $r1 = r0.<android.text.Layout$HorizontalMeasurementProvider: android.text.Layout this$0>;

        $i0 = r0.<android.text.Layout$HorizontalMeasurementProvider: int mLine>;

        $r2 = virtualinvoke $r1.<android.text.Layout: android.text.Layout$Directions getLineDirections(int)>($i0);

        $r3 = <android.text.Layout: android.text.Layout$Directions DIRS_ALL_LEFT_TO_RIGHT>;

        if $r2 != $r3 goto label1;

        return;

     label1:
        $r4 = r0.<android.text.Layout$HorizontalMeasurementProvider: android.text.Layout this$0>;

        $i1 = r0.<android.text.Layout$HorizontalMeasurementProvider: int mLine>;

        $z0 = r0.<android.text.Layout$HorizontalMeasurementProvider: boolean mPrimary>;

        $r5 = staticinvoke <android.text.Layout: float[] access$000(android.text.Layout,int,boolean,boolean)>($r4, $i1, 0, $z0);

        r0.<android.text.Layout$HorizontalMeasurementProvider: float[] mHorizontals> = $r5;

        $r6 = r0.<android.text.Layout$HorizontalMeasurementProvider: android.text.Layout this$0>;

        $i2 = r0.<android.text.Layout$HorizontalMeasurementProvider: int mLine>;

        $i3 = virtualinvoke $r6.<android.text.Layout: int getLineStart(int)>($i2);

        r0.<android.text.Layout$HorizontalMeasurementProvider: int mLineStartOffset> = $i3;

        return;
    }

    float get(int)
    {
        android.text.Layout$HorizontalMeasurementProvider r0;
        int i0, i1, $i2, $i3;
        float[] r1;
        float $f0, $f1;
        android.text.Layout $r2;
        boolean $z0;

        r0 := @this: android.text.Layout$HorizontalMeasurementProvider;

        i0 := @parameter0: int;

        $i2 = r0.<android.text.Layout$HorizontalMeasurementProvider: int mLineStartOffset>;

        i1 = i0 - $i2;

        r1 = r0.<android.text.Layout$HorizontalMeasurementProvider: float[] mHorizontals>;

        if r1 == null goto label2;

        if i1 < 0 goto label2;

        $i3 = lengthof r1;

        if i1 < $i3 goto label1;

        goto label2;

     label1:
        $f0 = r1[i1];

        return $f0;

     label2:
        $r2 = r0.<android.text.Layout$HorizontalMeasurementProvider: android.text.Layout this$0>;

        $z0 = r0.<android.text.Layout$HorizontalMeasurementProvider: boolean mPrimary>;

        $f1 = staticinvoke <android.text.Layout: float access$100(android.text.Layout,int,boolean)>($r2, i0, $z0);

        return $f1;
    }
}
