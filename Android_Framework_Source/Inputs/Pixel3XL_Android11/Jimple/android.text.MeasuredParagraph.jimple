public class android.text.MeasuredParagraph extends java.lang.Object
{
    private static final char OBJECT_REPLACEMENT_CHARACTER;
    private static final android.util.Pools$SynchronizedPool sPool;
    private android.graphics.Paint$FontMetricsInt mCachedFm;
    private android.text.TextPaint mCachedPaint;
    private char[] mCopiedBuffer;
    private android.text.AutoGrowArray$IntArray mFontMetrics;
    private android.text.AutoGrowArray$ByteArray mLevels;
    private boolean mLtrWithoutBidi;
    private android.graphics.text.MeasuredText mMeasuredText;
    private int mParaDir;
    private android.text.AutoGrowArray$IntArray mSpanEndCache;
    private android.text.Spanned mSpanned;
    private int mTextLength;
    private int mTextStart;
    private float mWholeWidth;
    private android.text.AutoGrowArray$FloatArray mWidths;

    static void <clinit>()
    {
        android.util.Pools$SynchronizedPool $r0;

        <android.text.MeasuredParagraph: char OBJECT_REPLACEMENT_CHARACTER> = 65532;

        $r0 = new android.util.Pools$SynchronizedPool;

        specialinvoke $r0.<android.util.Pools$SynchronizedPool: void <init>(int)>(1);

        <android.text.MeasuredParagraph: android.util.Pools$SynchronizedPool sPool> = $r0;

        return;
    }

    private void <init>()
    {
        android.text.MeasuredParagraph r0;
        android.text.AutoGrowArray$ByteArray $r1;
        android.text.AutoGrowArray$FloatArray $r2;
        android.text.AutoGrowArray$IntArray $r3, $r4;
        android.text.TextPaint $r5;

        r0 := @this: android.text.MeasuredParagraph;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new android.text.AutoGrowArray$ByteArray;

        specialinvoke $r1.<android.text.AutoGrowArray$ByteArray: void <init>()>();

        r0.<android.text.MeasuredParagraph: android.text.AutoGrowArray$ByteArray mLevels> = $r1;

        $r2 = new android.text.AutoGrowArray$FloatArray;

        specialinvoke $r2.<android.text.AutoGrowArray$FloatArray: void <init>()>();

        r0.<android.text.MeasuredParagraph: android.text.AutoGrowArray$FloatArray mWidths> = $r2;

        $r3 = new android.text.AutoGrowArray$IntArray;

        specialinvoke $r3.<android.text.AutoGrowArray$IntArray: void <init>(int)>(4);

        r0.<android.text.MeasuredParagraph: android.text.AutoGrowArray$IntArray mSpanEndCache> = $r3;

        $r4 = new android.text.AutoGrowArray$IntArray;

        specialinvoke $r4.<android.text.AutoGrowArray$IntArray: void <init>(int)>(16);

        r0.<android.text.MeasuredParagraph: android.text.AutoGrowArray$IntArray mFontMetrics> = $r4;

        $r5 = new android.text.TextPaint;

        specialinvoke $r5.<android.text.TextPaint: void <init>()>();

        r0.<android.text.MeasuredParagraph: android.text.TextPaint mCachedPaint> = $r5;

        return;
    }

    private void applyMetricsAffectingSpan(android.text.TextPaint, android.text.style.MetricAffectingSpan[], int, int, android.graphics.text.MeasuredText$Builder)
    {
        android.text.MeasuredParagraph r0;
        android.text.style.MetricAffectingSpan[] r1;
        android.graphics.text.MeasuredText$Builder r2;
        android.text.TextPaint $r3, $r4, $r5, $r6, $r15, $r16, $r18, $r19, r22, r23;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i18, i19, i20, i21, i22, i23, i24;
        android.graphics.Paint$FontMetricsInt $r7, $r9, $r11, $r13, $r17, $r20, $r21, r27, r28, r29, r30;
        android.text.AutoGrowArray$IntArray $r8, $r10, $r12, $r14;
        boolean $z0, z1;
        android.text.style.ReplacementSpan r24, r25;
        android.text.style.MetricAffectingSpan r26;

        r0 := @this: android.text.MeasuredParagraph;

        r22 := @parameter0: android.text.TextPaint;

        r1 := @parameter1: android.text.style.MetricAffectingSpan[];

        i19 := @parameter2: int;

        i20 := @parameter3: int;

        r2 := @parameter4: android.graphics.text.MeasuredText$Builder;

        $r3 = r0.<android.text.MeasuredParagraph: android.text.TextPaint mCachedPaint>;

        virtualinvoke $r3.<android.text.TextPaint: void set(android.text.TextPaint)>(r22);

        r23 = r0.<android.text.MeasuredParagraph: android.text.TextPaint mCachedPaint>;

        z1 = 0;

        r23.<android.text.TextPaint: int baselineShift> = 0;

        if r2 == null goto label01;

        z1 = 1;

     label01:
        if z1 == 0 goto label02;

        $r20 = r0.<android.text.MeasuredParagraph: android.graphics.Paint$FontMetricsInt mCachedFm>;

        if $r20 != null goto label02;

        $r21 = new android.graphics.Paint$FontMetricsInt;

        specialinvoke $r21.<android.graphics.Paint$FontMetricsInt: void <init>()>();

        r0.<android.text.MeasuredParagraph: android.graphics.Paint$FontMetricsInt mCachedFm> = $r21;

     label02:
        r24 = null;

        r25 = null;

        if r1 == null goto label06;

        i21 = 0;

     label03:
        r24 = r25;

        $i18 = lengthof r1;

        if i21 >= $i18 goto label06;

        r26 = r1[i21];

        $z0 = r26 instanceof android.text.style.ReplacementSpan;

        if $z0 == 0 goto label04;

        r25 = (android.text.style.ReplacementSpan) r26;

        goto label05;

     label04:
        $r19 = r0.<android.text.MeasuredParagraph: android.text.TextPaint mCachedPaint>;

        virtualinvoke r26.<android.text.style.MetricAffectingSpan: void updateMeasureState(android.text.TextPaint)>($r19);

     label05:
        i21 = i21 + 1;

        goto label03;

     label06:
        i22 = r0.<android.text.MeasuredParagraph: int mTextStart>;

        i23 = i19 - i22;

        i24 = i20 - i22;

        if r2 == null goto label07;

        $r18 = r0.<android.text.MeasuredParagraph: android.text.TextPaint mCachedPaint>;

        $r17 = r0.<android.text.MeasuredParagraph: android.graphics.Paint$FontMetricsInt mCachedFm>;

        virtualinvoke $r18.<android.text.TextPaint: int getFontMetricsInt(android.graphics.Paint$FontMetricsInt)>($r17);

     label07:
        if r24 == null goto label08;

        specialinvoke r0.<android.text.MeasuredParagraph: void applyReplacementRun(android.text.style.ReplacementSpan,int,int,android.graphics.text.MeasuredText$Builder)>(r24, i23, i24, r2);

        goto label09;

     label08:
        specialinvoke r0.<android.text.MeasuredParagraph: void applyStyleRun(int,int,android.graphics.text.MeasuredText$Builder)>(i23, i24, r2);

     label09:
        if z1 == 0 goto label12;

        $r4 = r0.<android.text.MeasuredParagraph: android.text.TextPaint mCachedPaint>;

        $i0 = $r4.<android.text.TextPaint: int baselineShift>;

        if $i0 >= 0 goto label10;

        r27 = r0.<android.text.MeasuredParagraph: android.graphics.Paint$FontMetricsInt mCachedFm>;

        $i12 = r27.<android.graphics.Paint$FontMetricsInt: int ascent>;

        $r15 = r0.<android.text.MeasuredParagraph: android.text.TextPaint mCachedPaint>;

        $i11 = $r15.<android.text.TextPaint: int baselineShift>;

        $i13 = $i12 + $i11;

        r27.<android.graphics.Paint$FontMetricsInt: int ascent> = $i13;

        r28 = r0.<android.text.MeasuredParagraph: android.graphics.Paint$FontMetricsInt mCachedFm>;

        $i15 = r28.<android.graphics.Paint$FontMetricsInt: int top>;

        $r16 = r0.<android.text.MeasuredParagraph: android.text.TextPaint mCachedPaint>;

        $i14 = $r16.<android.text.TextPaint: int baselineShift>;

        $i16 = $i15 + $i14;

        r28.<android.graphics.Paint$FontMetricsInt: int top> = $i16;

        goto label11;

     label10:
        r29 = r0.<android.text.MeasuredParagraph: android.graphics.Paint$FontMetricsInt mCachedFm>;

        $i2 = r29.<android.graphics.Paint$FontMetricsInt: int descent>;

        $r5 = r0.<android.text.MeasuredParagraph: android.text.TextPaint mCachedPaint>;

        $i1 = $r5.<android.text.TextPaint: int baselineShift>;

        $i3 = $i2 + $i1;

        r29.<android.graphics.Paint$FontMetricsInt: int descent> = $i3;

        r30 = r0.<android.text.MeasuredParagraph: android.graphics.Paint$FontMetricsInt mCachedFm>;

        $i5 = r30.<android.graphics.Paint$FontMetricsInt: int bottom>;

        $r6 = r0.<android.text.MeasuredParagraph: android.text.TextPaint mCachedPaint>;

        $i4 = $r6.<android.text.TextPaint: int baselineShift>;

        $i6 = $i5 + $i4;

        r30.<android.graphics.Paint$FontMetricsInt: int bottom> = $i6;

     label11:
        $r8 = r0.<android.text.MeasuredParagraph: android.text.AutoGrowArray$IntArray mFontMetrics>;

        $r7 = r0.<android.text.MeasuredParagraph: android.graphics.Paint$FontMetricsInt mCachedFm>;

        $i7 = $r7.<android.graphics.Paint$FontMetricsInt: int top>;

        virtualinvoke $r8.<android.text.AutoGrowArray$IntArray: void append(int)>($i7);

        $r10 = r0.<android.text.MeasuredParagraph: android.text.AutoGrowArray$IntArray mFontMetrics>;

        $r9 = r0.<android.text.MeasuredParagraph: android.graphics.Paint$FontMetricsInt mCachedFm>;

        $i8 = $r9.<android.graphics.Paint$FontMetricsInt: int bottom>;

        virtualinvoke $r10.<android.text.AutoGrowArray$IntArray: void append(int)>($i8);

        $r12 = r0.<android.text.MeasuredParagraph: android.text.AutoGrowArray$IntArray mFontMetrics>;

        $r11 = r0.<android.text.MeasuredParagraph: android.graphics.Paint$FontMetricsInt mCachedFm>;

        $i9 = $r11.<android.graphics.Paint$FontMetricsInt: int ascent>;

        virtualinvoke $r12.<android.text.AutoGrowArray$IntArray: void append(int)>($i9);

        $r14 = r0.<android.text.MeasuredParagraph: android.text.AutoGrowArray$IntArray mFontMetrics>;

        $r13 = r0.<android.text.MeasuredParagraph: android.graphics.Paint$FontMetricsInt mCachedFm>;

        $i10 = $r13.<android.graphics.Paint$FontMetricsInt: int descent>;

        virtualinvoke $r14.<android.text.AutoGrowArray$IntArray: void append(int)>($i10);

     label12:
        return;
    }

    private void applyReplacementRun(android.text.style.ReplacementSpan, int, int, android.graphics.text.MeasuredText$Builder)
    {
        android.text.MeasuredParagraph r0;
        android.text.style.ReplacementSpan r1;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8;
        android.graphics.text.MeasuredText$Builder r2;
        android.text.TextPaint r3, $r6;
        android.text.Spanned r4;
        float f0, $f1, $f2;
        android.graphics.Paint$FontMetricsInt $r5;
        android.text.AutoGrowArray$FloatArray $r8, $r9;
        float[] $r10;

        r0 := @this: android.text.MeasuredParagraph;

        r1 := @parameter0: android.text.style.ReplacementSpan;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: android.graphics.text.MeasuredText$Builder;

        r3 = r0.<android.text.MeasuredParagraph: android.text.TextPaint mCachedPaint>;

        r4 = r0.<android.text.MeasuredParagraph: android.text.Spanned mSpanned>;

        i2 = r0.<android.text.MeasuredParagraph: int mTextStart>;

        $i4 = i0 + i2;

        $i3 = i1 + i2;

        $r5 = r0.<android.text.MeasuredParagraph: android.graphics.Paint$FontMetricsInt mCachedFm>;

        $i5 = virtualinvoke r1.<android.text.style.ReplacementSpan: int getSize(android.graphics.Paint,java.lang.CharSequence,int,int,android.graphics.Paint$FontMetricsInt)>(r3, r4, $i4, $i3, $r5);

        f0 = (float) $i5;

        if r2 != null goto label2;

        $r8 = r0.<android.text.MeasuredParagraph: android.text.AutoGrowArray$FloatArray mWidths>;

        virtualinvoke $r8.<android.text.AutoGrowArray$FloatArray: void set(int,float)>(i0, f0);

        $i7 = i0 + 1;

        if i1 <= $i7 goto label1;

        $r9 = r0.<android.text.MeasuredParagraph: android.text.AutoGrowArray$FloatArray mWidths>;

        $r10 = virtualinvoke $r9.<android.text.AutoGrowArray$FloatArray: float[] getRawArray()>();

        $i8 = i0 + 1;

        staticinvoke <java.util.Arrays: void fill(float[],int,int,float)>($r10, $i8, i1, 0.0F);

     label1:
        $f1 = r0.<android.text.MeasuredParagraph: float mWholeWidth>;

        $f2 = $f1 + f0;

        r0.<android.text.MeasuredParagraph: float mWholeWidth> = $f2;

        goto label3;

     label2:
        $r6 = r0.<android.text.MeasuredParagraph: android.text.TextPaint mCachedPaint>;

        $i6 = i1 - i0;

        virtualinvoke r2.<android.graphics.text.MeasuredText$Builder: android.graphics.text.MeasuredText$Builder appendReplacementRun(android.graphics.Paint,int,float)>($r6, $i6, f0);

     label3:
        return;
    }

    private void applyStyleRun(int, int, android.graphics.text.MeasuredText$Builder)
    {
        android.text.MeasuredParagraph r0;
        int i0, $i2, $i4, $i5, $i6, i7, i9, i10, i12, i13;
        android.graphics.text.MeasuredText$Builder r1;
        boolean $z0, z1;
        android.text.AutoGrowArray$ByteArray $r2, $r5, $r10;
        byte $b1, $b3, b8, b11;
        android.text.TextPaint $r3, $r7, $r11, $r14;
        android.text.AutoGrowArray$FloatArray $r6, $r13;
        float $f0, $f1, $f2, $f3, $f4, $f5;
        char[] $r8, $r15;
        float[] $r9, $r16;

        r0 := @this: android.text.MeasuredParagraph;

        i7 := @parameter0: int;

        i0 := @parameter1: int;

        r1 := @parameter2: android.graphics.text.MeasuredText$Builder;

        $z0 = r0.<android.text.MeasuredParagraph: boolean mLtrWithoutBidi>;

        if $z0 == 0 goto label02;

        if r1 != null goto label01;

        $f3 = r0.<android.text.MeasuredParagraph: float mWholeWidth>;

        $r14 = r0.<android.text.MeasuredParagraph: android.text.TextPaint mCachedPaint>;

        $r15 = r0.<android.text.MeasuredParagraph: char[] mCopiedBuffer>;

        $i5 = i0 - i7;

        $i6 = i0 - i7;

        $r13 = r0.<android.text.MeasuredParagraph: android.text.AutoGrowArray$FloatArray mWidths>;

        $r16 = virtualinvoke $r13.<android.text.AutoGrowArray$FloatArray: float[] getRawArray()>();

        $f4 = virtualinvoke $r14.<android.text.TextPaint: float getTextRunAdvances(char[],int,int,int,int,boolean,float[],int)>($r15, i7, $i5, i7, $i6, 0, $r16, i7);

        $f5 = $f3 + $f4;

        r0.<android.text.MeasuredParagraph: float mWholeWidth> = $f5;

        goto label09;

     label01:
        $r11 = r0.<android.text.MeasuredParagraph: android.text.TextPaint mCachedPaint>;

        $i4 = i0 - i7;

        virtualinvoke r1.<android.graphics.text.MeasuredText$Builder: android.graphics.text.MeasuredText$Builder appendStyleRun(android.graphics.Paint,int,boolean)>($r11, $i4, 0);

        goto label09;

     label02:
        $r2 = r0.<android.text.MeasuredParagraph: android.text.AutoGrowArray$ByteArray mLevels>;

        b8 = virtualinvoke $r2.<android.text.AutoGrowArray$ByteArray: byte get(int)>(i7);

        i9 = i7;

        i10 = i7 + 1;

     label03:
        if i10 == i0 goto label04;

        b11 = b8;

        i12 = i9;

        $r10 = r0.<android.text.MeasuredParagraph: android.text.AutoGrowArray$ByteArray mLevels>;

        $b3 = virtualinvoke $r10.<android.text.AutoGrowArray$ByteArray: byte get(int)>(i10);

        if $b3 == b8 goto label11;

     label04:
        $b1 = b8 & 1;

        if $b1 == 0 goto label05;

        z1 = 1;

        goto label06;

     label05:
        z1 = 0;

     label06:
        if r1 != null goto label07;

        i13 = i10 - i9;

        $f0 = r0.<android.text.MeasuredParagraph: float mWholeWidth>;

        $r7 = r0.<android.text.MeasuredParagraph: android.text.TextPaint mCachedPaint>;

        $r8 = r0.<android.text.MeasuredParagraph: char[] mCopiedBuffer>;

        $r6 = r0.<android.text.MeasuredParagraph: android.text.AutoGrowArray$FloatArray mWidths>;

        $r9 = virtualinvoke $r6.<android.text.AutoGrowArray$FloatArray: float[] getRawArray()>();

        $f1 = virtualinvoke $r7.<android.text.TextPaint: float getTextRunAdvances(char[],int,int,int,int,boolean,float[],int)>($r8, i9, i13, i9, i13, z1, $r9, i9);

        $f2 = $f0 + $f1;

        r0.<android.text.MeasuredParagraph: float mWholeWidth> = $f2;

        goto label08;

     label07:
        $r3 = r0.<android.text.MeasuredParagraph: android.text.TextPaint mCachedPaint>;

        $i2 = i10 - i9;

        virtualinvoke r1.<android.graphics.text.MeasuredText$Builder: android.graphics.text.MeasuredText$Builder appendStyleRun(android.graphics.Paint,int,boolean)>($r3, $i2, z1);

     label08:
        if i10 != i0 goto label10;

     label09:
        return;

     label10:
        i12 = i10;

        $r5 = r0.<android.text.MeasuredParagraph: android.text.AutoGrowArray$ByteArray mLevels>;

        b11 = virtualinvoke $r5.<android.text.AutoGrowArray$ByteArray: byte get(int)>(i10);

     label11:
        i10 = i10 + 1;

        b8 = b11;

        i9 = i12;

        goto label03;
    }

    public static android.text.MeasuredParagraph buildForBidi(java.lang.CharSequence, int, int, android.text.TextDirectionHeuristic, android.text.MeasuredParagraph)
    {
        java.lang.CharSequence r0;
        int i0, i1;
        android.text.TextDirectionHeuristic r1;
        android.text.MeasuredParagraph r2;

        r0 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 := @parameter3: android.text.TextDirectionHeuristic;

        r2 := @parameter4: android.text.MeasuredParagraph;

        if r2 != null goto label1;

        r2 = staticinvoke <android.text.MeasuredParagraph: android.text.MeasuredParagraph obtain()>();

        goto label1;

     label1:
        specialinvoke r2.<android.text.MeasuredParagraph: void resetAndAnalyzeBidi(java.lang.CharSequence,int,int,android.text.TextDirectionHeuristic)>(r0, i0, i1, r1);

        return r2;
    }

    public static android.text.MeasuredParagraph buildForMeasurement(android.text.TextPaint, java.lang.CharSequence, int, int, android.text.TextDirectionHeuristic, android.text.MeasuredParagraph)
    {
        android.text.TextPaint r0;
        java.lang.CharSequence r1;
        int i0, i1, $i2, $i3, i4;
        android.text.TextDirectionHeuristic r2;
        android.text.AutoGrowArray$FloatArray $r3;
        android.text.Spanned $r4, $r5, $r6, $r8;
        java.lang.Object[] $r7, $r10;
        android.text.style.MetricAffectingSpan[] $r9, $r11;
        android.text.MeasuredParagraph r12;

        r0 := @parameter0: android.text.TextPaint;

        r1 := @parameter1: java.lang.CharSequence;

        i4 := @parameter2: int;

        i0 := @parameter3: int;

        r2 := @parameter4: android.text.TextDirectionHeuristic;

        r12 := @parameter5: android.text.MeasuredParagraph;

        if r12 != null goto label1;

        r12 = staticinvoke <android.text.MeasuredParagraph: android.text.MeasuredParagraph obtain()>();

        goto label1;

     label1:
        specialinvoke r12.<android.text.MeasuredParagraph: void resetAndAnalyzeBidi(java.lang.CharSequence,int,int,android.text.TextDirectionHeuristic)>(r1, i4, i0, r2);

        $r3 = r12.<android.text.MeasuredParagraph: android.text.AutoGrowArray$FloatArray mWidths>;

        $i2 = r12.<android.text.MeasuredParagraph: int mTextLength>;

        virtualinvoke $r3.<android.text.AutoGrowArray$FloatArray: void resize(int)>($i2);

        $i3 = r12.<android.text.MeasuredParagraph: int mTextLength>;

        if $i3 != 0 goto label2;

        return r12;

     label2:
        $r4 = r12.<android.text.MeasuredParagraph: android.text.Spanned mSpanned>;

        if $r4 != null goto label3;

        specialinvoke r12.<android.text.MeasuredParagraph: void applyMetricsAffectingSpan(android.text.TextPaint,android.text.style.MetricAffectingSpan[],int,int,android.graphics.text.MeasuredText$Builder)>(r0, null, i4, i0, null);

        goto label4;

     label3:
        if i4 >= i0 goto label4;

        $r5 = r12.<android.text.MeasuredParagraph: android.text.Spanned mSpanned>;

        i1 = interfaceinvoke $r5.<android.text.Spanned: int nextSpanTransition(int,int,java.lang.Class)>(i4, i0, class "Landroid/text/style/MetricAffectingSpan;");

        $r6 = r12.<android.text.MeasuredParagraph: android.text.Spanned mSpanned>;

        $r7 = interfaceinvoke $r6.<android.text.Spanned: java.lang.Object[] getSpans(int,int,java.lang.Class)>(i4, i1, class "Landroid/text/style/MetricAffectingSpan;");

        $r9 = (android.text.style.MetricAffectingSpan[]) $r7;

        $r8 = r12.<android.text.MeasuredParagraph: android.text.Spanned mSpanned>;

        $r10 = staticinvoke <android.text.TextUtils: java.lang.Object[] removeEmptySpans(java.lang.Object[],android.text.Spanned,java.lang.Class)>($r9, $r8, class "Landroid/text/style/MetricAffectingSpan;");

        $r11 = (android.text.style.MetricAffectingSpan[]) $r10;

        specialinvoke r12.<android.text.MeasuredParagraph: void applyMetricsAffectingSpan(android.text.TextPaint,android.text.style.MetricAffectingSpan[],int,int,android.graphics.text.MeasuredText$Builder)>(r0, $r11, i4, i1, null);

        i4 = i1;

        goto label3;

     label4:
        return r12;
    }

    public static android.text.MeasuredParagraph buildForStaticLayout(android.text.TextPaint, java.lang.CharSequence, int, int, android.text.TextDirectionHeuristic, boolean, boolean, android.text.MeasuredParagraph, android.text.MeasuredParagraph)
    {
        android.text.TextPaint r0;
        int i0, i1, $i2, i3;
        android.text.TextDirectionHeuristic r1;
        boolean z0, z1;
        android.text.MeasuredParagraph r2, r21;
        android.graphics.text.MeasuredText$Builder $r3, $r17, $r19, r22;
        android.graphics.text.MeasuredText $r4, $r6, $r16;
        android.text.Spanned $r5, $r7, $r8, $r10;
        java.lang.Object[] $r9, $r12;
        android.text.style.MetricAffectingSpan[] $r11, $r13;
        android.text.AutoGrowArray$IntArray $r14, $r15;
        char[] $r18;
        java.lang.CharSequence r20;

        r0 := @parameter0: android.text.TextPaint;

        r20 := @parameter1: java.lang.CharSequence;

        i3 := @parameter2: int;

        i0 := @parameter3: int;

        r1 := @parameter4: android.text.TextDirectionHeuristic;

        z0 := @parameter5: boolean;

        z1 := @parameter6: boolean;

        r2 := @parameter7: android.text.MeasuredParagraph;

        r21 := @parameter8: android.text.MeasuredParagraph;

        if r21 != null goto label1;

        r21 = staticinvoke <android.text.MeasuredParagraph: android.text.MeasuredParagraph obtain()>();

        goto label1;

     label1:
        specialinvoke r21.<android.text.MeasuredParagraph: void resetAndAnalyzeBidi(java.lang.CharSequence,int,int,android.text.TextDirectionHeuristic)>(r20, i3, i0, r1);

        if r2 != null goto label2;

        $r17 = new android.graphics.text.MeasuredText$Builder;

        $r18 = r21.<android.text.MeasuredParagraph: char[] mCopiedBuffer>;

        specialinvoke $r17.<android.graphics.text.MeasuredText$Builder: void <init>(char[])>($r18);

        $r19 = virtualinvoke $r17.<android.graphics.text.MeasuredText$Builder: android.graphics.text.MeasuredText$Builder setComputeHyphenation(boolean)>(z0);

        r22 = virtualinvoke $r19.<android.graphics.text.MeasuredText$Builder: android.graphics.text.MeasuredText$Builder setComputeLayout(boolean)>(z1);

        goto label3;

     label2:
        $r3 = new android.graphics.text.MeasuredText$Builder;

        $r4 = r2.<android.text.MeasuredParagraph: android.graphics.text.MeasuredText mMeasuredText>;

        specialinvoke $r3.<android.graphics.text.MeasuredText$Builder: void <init>(android.graphics.text.MeasuredText)>($r4);

        r22 = $r3;

     label3:
        $i2 = r21.<android.text.MeasuredParagraph: int mTextLength>;

        if $i2 != 0 goto label4;

        $r16 = virtualinvoke r22.<android.graphics.text.MeasuredText$Builder: android.graphics.text.MeasuredText build()>();

        r21.<android.text.MeasuredParagraph: android.graphics.text.MeasuredText mMeasuredText> = $r16;

        goto label7;

     label4:
        $r5 = r21.<android.text.MeasuredParagraph: android.text.Spanned mSpanned>;

        if $r5 != null goto label5;

        specialinvoke r21.<android.text.MeasuredParagraph: void applyMetricsAffectingSpan(android.text.TextPaint,android.text.style.MetricAffectingSpan[],int,int,android.graphics.text.MeasuredText$Builder)>(r0, null, i3, i0, r22);

        $r15 = r21.<android.text.MeasuredParagraph: android.text.AutoGrowArray$IntArray mSpanEndCache>;

        virtualinvoke $r15.<android.text.AutoGrowArray$IntArray: void append(int)>(i0);

        goto label6;

     label5:
        if i3 >= i0 goto label6;

        $r7 = r21.<android.text.MeasuredParagraph: android.text.Spanned mSpanned>;

        i1 = interfaceinvoke $r7.<android.text.Spanned: int nextSpanTransition(int,int,java.lang.Class)>(i3, i0, class "Landroid/text/style/MetricAffectingSpan;");

        $r8 = r21.<android.text.MeasuredParagraph: android.text.Spanned mSpanned>;

        $r9 = interfaceinvoke $r8.<android.text.Spanned: java.lang.Object[] getSpans(int,int,java.lang.Class)>(i3, i1, class "Landroid/text/style/MetricAffectingSpan;");

        $r11 = (android.text.style.MetricAffectingSpan[]) $r9;

        $r10 = r21.<android.text.MeasuredParagraph: android.text.Spanned mSpanned>;

        $r12 = staticinvoke <android.text.TextUtils: java.lang.Object[] removeEmptySpans(java.lang.Object[],android.text.Spanned,java.lang.Class)>($r11, $r10, class "Landroid/text/style/MetricAffectingSpan;");

        $r13 = (android.text.style.MetricAffectingSpan[]) $r12;

        specialinvoke r21.<android.text.MeasuredParagraph: void applyMetricsAffectingSpan(android.text.TextPaint,android.text.style.MetricAffectingSpan[],int,int,android.graphics.text.MeasuredText$Builder)>(r0, $r13, i3, i1, r22);

        $r14 = r21.<android.text.MeasuredParagraph: android.text.AutoGrowArray$IntArray mSpanEndCache>;

        virtualinvoke $r14.<android.text.AutoGrowArray$IntArray: void append(int)>(i1);

        i3 = i1;

        goto label5;

     label6:
        $r6 = virtualinvoke r22.<android.graphics.text.MeasuredText$Builder: android.graphics.text.MeasuredText build()>();

        r21.<android.text.MeasuredParagraph: android.graphics.text.MeasuredText mMeasuredText> = $r6;

     label7:
        return r21;
    }

    private static android.text.MeasuredParagraph obtain()
    {
        android.util.Pools$SynchronizedPool $r0;
        java.lang.Object $r1;
        android.text.MeasuredParagraph $r2, r3;

        $r0 = <android.text.MeasuredParagraph: android.util.Pools$SynchronizedPool sPool>;

        $r1 = virtualinvoke $r0.<android.util.Pools$SynchronizedPool: java.lang.Object acquire()>();

        r3 = (android.text.MeasuredParagraph) $r1;

        if r3 == null goto label1;

        goto label2;

     label1:
        $r2 = new android.text.MeasuredParagraph;

        specialinvoke $r2.<android.text.MeasuredParagraph: void <init>()>();

        r3 = $r2;

     label2:
        return r3;
    }

    private void reset()
    {
        android.text.MeasuredParagraph r0;
        android.text.AutoGrowArray$ByteArray $r1;
        android.text.AutoGrowArray$FloatArray $r2;
        android.text.AutoGrowArray$IntArray $r3, $r4;

        r0 := @this: android.text.MeasuredParagraph;

        r0.<android.text.MeasuredParagraph: android.text.Spanned mSpanned> = null;

        r0.<android.text.MeasuredParagraph: char[] mCopiedBuffer> = null;

        r0.<android.text.MeasuredParagraph: float mWholeWidth> = 0.0F;

        $r1 = r0.<android.text.MeasuredParagraph: android.text.AutoGrowArray$ByteArray mLevels>;

        virtualinvoke $r1.<android.text.AutoGrowArray$ByteArray: void clear()>();

        $r2 = r0.<android.text.MeasuredParagraph: android.text.AutoGrowArray$FloatArray mWidths>;

        virtualinvoke $r2.<android.text.AutoGrowArray$FloatArray: void clear()>();

        $r3 = r0.<android.text.MeasuredParagraph: android.text.AutoGrowArray$IntArray mFontMetrics>;

        virtualinvoke $r3.<android.text.AutoGrowArray$IntArray: void clear()>();

        $r4 = r0.<android.text.MeasuredParagraph: android.text.AutoGrowArray$IntArray mSpanEndCache>;

        virtualinvoke $r4.<android.text.AutoGrowArray$IntArray: void clear()>();

        r0.<android.text.MeasuredParagraph: android.graphics.text.MeasuredText mMeasuredText> = null;

        return;
    }

    private void resetAndAnalyzeBidi(java.lang.CharSequence, int, int, android.text.TextDirectionHeuristic)
    {
        android.text.MeasuredParagraph r0;
        android.text.TextDirectionHeuristic r1, $r3, $r4, $r5, $r6, $r9, $r10, r23;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, i9, i10, i11, i12, i13, i14, $i16, $i17, $i18;
        boolean $z0, $z1, $z2;
        char[] $r2, $r7, $r16, r19, $r20, $r24, $r26;
        android.text.AutoGrowArray$ByteArray $r8, $r25, $r27;
        java.lang.Object[] $r11;
        android.text.style.ReplacementSpan $r12, $r14;
        android.text.Spanned $r13, $r15, r18, r21;
        java.lang.CharSequence r17;
        android.text.style.ReplacementSpan[] r22;
        byte b15;
        byte[] $r28;

        r0 := @this: android.text.MeasuredParagraph;

        r17 := @parameter0: java.lang.CharSequence;

        i8 := @parameter1: int;

        i9 := @parameter2: int;

        r1 := @parameter3: android.text.TextDirectionHeuristic;

        specialinvoke r0.<android.text.MeasuredParagraph: void reset()>();

        $z0 = r17 instanceof android.text.Spanned;

        if $z0 == 0 goto label01;

        r18 = (android.text.Spanned) r17;

        goto label02;

     label01:
        r18 = null;

     label02:
        r0.<android.text.MeasuredParagraph: android.text.Spanned mSpanned> = r18;

        r0.<android.text.MeasuredParagraph: int mTextStart> = i8;

        i10 = i9 - i8;

        r0.<android.text.MeasuredParagraph: int mTextLength> = i10;

        r19 = r0.<android.text.MeasuredParagraph: char[] mCopiedBuffer>;

        if r19 == null goto label03;

        $i7 = lengthof r19;

        if $i7 == i10 goto label04;

     label03:
        $i1 = r0.<android.text.MeasuredParagraph: int mTextLength>;

        $r2 = newarray (char)[$i1];

        r0.<android.text.MeasuredParagraph: char[] mCopiedBuffer> = $r2;

     label04:
        $r20 = r0.<android.text.MeasuredParagraph: char[] mCopiedBuffer>;

        staticinvoke <android.text.TextUtils: void getChars(java.lang.CharSequence,int,int,char[],int)>(r17, i8, i9, $r20, 0);

        r21 = r0.<android.text.MeasuredParagraph: android.text.Spanned mSpanned>;

        if r21 == null goto label08;

        $r11 = interfaceinvoke r21.<android.text.Spanned: java.lang.Object[] getSpans(int,int,java.lang.Class)>(i8, i9, class "Landroid/text/style/ReplacementSpan;");

        r22 = (android.text.style.ReplacementSpan[]) $r11;

        i11 = 0;

     label05:
        $i3 = lengthof r22;

        if i11 >= $i3 goto label08;

        $r13 = r0.<android.text.MeasuredParagraph: android.text.Spanned mSpanned>;

        $r12 = r22[i11];

        $i4 = interfaceinvoke $r13.<android.text.Spanned: int getSpanStart(java.lang.Object)>($r12);

        i12 = $i4 - i8;

        $r15 = r0.<android.text.MeasuredParagraph: android.text.Spanned mSpanned>;

        $r14 = r22[i11];

        $i5 = interfaceinvoke $r15.<android.text.Spanned: int getSpanEnd(java.lang.Object)>($r14);

        i0 = $i5 - i8;

        i13 = i12;

        if i12 >= 0 goto label06;

        i13 = 0;

     label06:
        i14 = i0;

        $i6 = r0.<android.text.MeasuredParagraph: int mTextLength>;

        if i0 <= $i6 goto label07;

        i14 = r0.<android.text.MeasuredParagraph: int mTextLength>;

     label07:
        $r16 = r0.<android.text.MeasuredParagraph: char[] mCopiedBuffer>;

        staticinvoke <java.util.Arrays: void fill(char[],int,int,char)>($r16, i13, i14, 65532);

        i11 = i11 + 1;

        goto label05;

     label08:
        r23 = <android.text.TextDirectionHeuristics: android.text.TextDirectionHeuristic LTR>;

        b15 = 1;

        if r1 == r23 goto label09;

        $r9 = <android.text.TextDirectionHeuristics: android.text.TextDirectionHeuristic FIRSTSTRONG_LTR>;

        if r1 == $r9 goto label09;

        $r10 = <android.text.TextDirectionHeuristics: android.text.TextDirectionHeuristic ANYRTL_LTR>;

        if r1 != $r10 goto label10;

     label09:
        $r24 = r0.<android.text.MeasuredParagraph: char[] mCopiedBuffer>;

        $i16 = r0.<android.text.MeasuredParagraph: int mTextLength>;

        $z2 = staticinvoke <android.text.TextUtils: boolean doesNotNeedBidi(char[],int,int)>($r24, 0, $i16);

        if $z2 == 0 goto label10;

        $r8 = r0.<android.text.MeasuredParagraph: android.text.AutoGrowArray$ByteArray mLevels>;

        virtualinvoke $r8.<android.text.AutoGrowArray$ByteArray: void clear()>();

        r0.<android.text.MeasuredParagraph: int mParaDir> = 1;

        r0.<android.text.MeasuredParagraph: boolean mLtrWithoutBidi> = 1;

        goto label16;

     label10:
        $r3 = <android.text.TextDirectionHeuristics: android.text.TextDirectionHeuristic LTR>;

        if r1 != $r3 goto label11;

        b15 = 1;

        goto label15;

     label11:
        $r4 = <android.text.TextDirectionHeuristics: android.text.TextDirectionHeuristic RTL>;

        if r1 != $r4 goto label12;

        b15 = -1;

        goto label15;

     label12:
        $r5 = <android.text.TextDirectionHeuristics: android.text.TextDirectionHeuristic FIRSTSTRONG_LTR>;

        if r1 != $r5 goto label13;

        b15 = 2;

        goto label15;

     label13:
        $r6 = <android.text.TextDirectionHeuristics: android.text.TextDirectionHeuristic FIRSTSTRONG_RTL>;

        if r1 != $r6 goto label14;

        b15 = -2;

        goto label15;

     label14:
        $r7 = r0.<android.text.MeasuredParagraph: char[] mCopiedBuffer>;

        $i2 = r0.<android.text.MeasuredParagraph: int mTextLength>;

        $z1 = interfaceinvoke r1.<android.text.TextDirectionHeuristic: boolean isRtl(char[],int,int)>($r7, 0, $i2);

        if $z1 == 0 goto label15;

        b15 = -1;

     label15:
        $r25 = r0.<android.text.MeasuredParagraph: android.text.AutoGrowArray$ByteArray mLevels>;

        $i17 = r0.<android.text.MeasuredParagraph: int mTextLength>;

        virtualinvoke $r25.<android.text.AutoGrowArray$ByteArray: void resize(int)>($i17);

        $r26 = r0.<android.text.MeasuredParagraph: char[] mCopiedBuffer>;

        $r27 = r0.<android.text.MeasuredParagraph: android.text.AutoGrowArray$ByteArray mLevels>;

        $r28 = virtualinvoke $r27.<android.text.AutoGrowArray$ByteArray: byte[] getRawArray()>();

        $i18 = staticinvoke <android.text.AndroidBidi: int bidi(int,char[],byte[])>(b15, $r26, $r28);

        r0.<android.text.MeasuredParagraph: int mParaDir> = $i18;

        r0.<android.text.MeasuredParagraph: boolean mLtrWithoutBidi> = 0;

     label16:
        return;
    }

    int breakText(int, boolean, float)
    {
        android.text.MeasuredParagraph r0;
        int i0, $i1, $i2, $i3, $i5, $i8, i11, i12, i13, i14, $i15;
        boolean z0;
        float[] r1;
        android.text.AutoGrowArray$FloatArray $r2;
        char[] $r3, $r4;
        char $c4, $c9;
        float $f0, $f1, $f2, f3;
        byte $b6, $b7, $b10;

        r0 := @this: android.text.MeasuredParagraph;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        f3 := @parameter2: float;

        $r2 = r0.<android.text.MeasuredParagraph: android.text.AutoGrowArray$FloatArray mWidths>;

        r1 = virtualinvoke $r2.<android.text.AutoGrowArray$FloatArray: float[] getRawArray()>();

        if z0 == 0 goto label05;

        i11 = 0;

     label01:
        i12 = i11;

        if i11 >= i0 goto label03;

        $f2 = r1[i11];

        f3 = f3 - $f2;

        $b10 = f3 cmpg 0.0F;

        if $b10 >= 0 goto label02;

        i12 = i11;

        goto label03;

     label02:
        i11 = i11 + 1;

        goto label01;

     label03:
        if i12 <= 0 goto label04;

        $r4 = r0.<android.text.MeasuredParagraph: char[] mCopiedBuffer>;

        $i8 = i12 - 1;

        $c9 = $r4[$i8];

        if $c9 != 32 goto label04;

        i12 = i12 + -1;

        goto label03;

     label04:
        return i12;

     label05:
        i13 = i0 - 1;

     label06:
        i14 = i13;

        if i13 < 0 goto label08;

        $f1 = r1[i13];

        f3 = f3 - $f1;

        $b7 = f3 cmpg 0.0F;

        if $b7 >= 0 goto label07;

        i14 = i13;

        goto label08;

     label07:
        i13 = i13 + -1;

        goto label06;

     label08:
        $i15 = i0 - 1;

        if i14 >= $i15 goto label10;

        $r3 = r0.<android.text.MeasuredParagraph: char[] mCopiedBuffer>;

        $i3 = i14 + 1;

        $c4 = $r3[$i3];

        if $c4 == 32 goto label09;

        $i5 = i14 + 1;

        $f0 = r1[$i5];

        $b6 = $f0 cmpl 0.0F;

        if $b6 != 0 goto label10;

     label09:
        i14 = i14 + 1;

        goto label08;

     label10:
        $i1 = i0 - i14;

        $i2 = $i1 - 1;

        return $i2;
    }

    public void getBounds(int, int, android.graphics.Rect)
    {
        android.text.MeasuredParagraph r0;
        int i0, i1;
        android.graphics.Rect r1;
        android.graphics.text.MeasuredText $r2;

        r0 := @this: android.text.MeasuredParagraph;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: android.graphics.Rect;

        $r2 = r0.<android.text.MeasuredParagraph: android.graphics.text.MeasuredText mMeasuredText>;

        virtualinvoke $r2.<android.graphics.text.MeasuredText: void getBounds(int,int,android.graphics.Rect)>(i0, i1, r1);

        return;
    }

    public float getCharWidthAt(int)
    {
        android.text.MeasuredParagraph r0;
        int i0;
        android.graphics.text.MeasuredText $r1;
        float $f0;

        r0 := @this: android.text.MeasuredParagraph;

        i0 := @parameter0: int;

        $r1 = r0.<android.text.MeasuredParagraph: android.graphics.text.MeasuredText mMeasuredText>;

        $f0 = virtualinvoke $r1.<android.graphics.text.MeasuredText: float getCharWidthAt(int)>(i0);

        return $f0;
    }

    public char[] getChars()
    {
        android.text.MeasuredParagraph r0;
        char[] $r1;

        r0 := @this: android.text.MeasuredParagraph;

        $r1 = r0.<android.text.MeasuredParagraph: char[] mCopiedBuffer>;

        return $r1;
    }

    public android.text.Layout$Directions getDirections(int, int)
    {
        android.text.MeasuredParagraph r0;
        int i0, i1, $i2, $i3;
        boolean $z0;
        android.text.AutoGrowArray$ByteArray $r1;
        byte[] $r2;
        char[] $r3;
        android.text.Layout$Directions $r4, $r5;

        r0 := @this: android.text.MeasuredParagraph;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $z0 = r0.<android.text.MeasuredParagraph: boolean mLtrWithoutBidi>;

        if $z0 == 0 goto label1;

        $r5 = <android.text.Layout: android.text.Layout$Directions DIRS_ALL_LEFT_TO_RIGHT>;

        return $r5;

     label1:
        $i2 = r0.<android.text.MeasuredParagraph: int mParaDir>;

        $r1 = r0.<android.text.MeasuredParagraph: android.text.AutoGrowArray$ByteArray mLevels>;

        $r2 = virtualinvoke $r1.<android.text.AutoGrowArray$ByteArray: byte[] getRawArray()>();

        $r3 = r0.<android.text.MeasuredParagraph: char[] mCopiedBuffer>;

        $i3 = i1 - i0;

        $r4 = staticinvoke <android.text.AndroidBidi: android.text.Layout$Directions directions(int,byte[],int,char[],int,int)>($i2, $r2, i0, $r3, i0, $i3);

        return $r4;
    }

    public android.text.AutoGrowArray$IntArray getFontMetrics()
    {
        android.text.MeasuredParagraph r0;
        android.text.AutoGrowArray$IntArray $r1;

        r0 := @this: android.text.MeasuredParagraph;

        $r1 = r0.<android.text.MeasuredParagraph: android.text.AutoGrowArray$IntArray mFontMetrics>;

        return $r1;
    }

    public android.graphics.text.MeasuredText getMeasuredText()
    {
        android.text.MeasuredParagraph r0;
        android.graphics.text.MeasuredText $r1;

        r0 := @this: android.text.MeasuredParagraph;

        $r1 = r0.<android.text.MeasuredParagraph: android.graphics.text.MeasuredText mMeasuredText>;

        return $r1;
    }

    public int getMemoryUsage()
    {
        android.text.MeasuredParagraph r0;
        android.graphics.text.MeasuredText $r1;
        int $i0;

        r0 := @this: android.text.MeasuredParagraph;

        $r1 = r0.<android.text.MeasuredParagraph: android.graphics.text.MeasuredText mMeasuredText>;

        $i0 = virtualinvoke $r1.<android.graphics.text.MeasuredText: int getMemoryUsage()>();

        return $i0;
    }

    public int getParagraphDir()
    {
        android.text.MeasuredParagraph r0;
        int $i0;

        r0 := @this: android.text.MeasuredParagraph;

        $i0 = r0.<android.text.MeasuredParagraph: int mParaDir>;

        return $i0;
    }

    public android.text.AutoGrowArray$IntArray getSpanEndCache()
    {
        android.text.MeasuredParagraph r0;
        android.text.AutoGrowArray$IntArray $r1;

        r0 := @this: android.text.MeasuredParagraph;

        $r1 = r0.<android.text.MeasuredParagraph: android.text.AutoGrowArray$IntArray mSpanEndCache>;

        return $r1;
    }

    public int getTextLength()
    {
        android.text.MeasuredParagraph r0;
        int $i0;

        r0 := @this: android.text.MeasuredParagraph;

        $i0 = r0.<android.text.MeasuredParagraph: int mTextLength>;

        return $i0;
    }

    public float getWholeWidth()
    {
        android.text.MeasuredParagraph r0;
        float $f0;

        r0 := @this: android.text.MeasuredParagraph;

        $f0 = r0.<android.text.MeasuredParagraph: float mWholeWidth>;

        return $f0;
    }

    public float getWidth(int, int)
    {
        android.text.MeasuredParagraph r0;
        int i0, i1;
        float $f0, $f1, f2;
        android.text.AutoGrowArray$FloatArray $r1;
        android.graphics.text.MeasuredText r2;
        float[] r3;

        r0 := @this: android.text.MeasuredParagraph;

        i1 := @parameter0: int;

        i0 := @parameter1: int;

        r2 = r0.<android.text.MeasuredParagraph: android.graphics.text.MeasuredText mMeasuredText>;

        if r2 != null goto label3;

        $r1 = r0.<android.text.MeasuredParagraph: android.text.AutoGrowArray$FloatArray mWidths>;

        r3 = virtualinvoke $r1.<android.text.AutoGrowArray$FloatArray: float[] getRawArray()>();

        f2 = 0.0F;

     label1:
        if i1 >= i0 goto label2;

        $f1 = r3[i1];

        f2 = f2 + $f1;

        i1 = i1 + 1;

        goto label1;

     label2:
        return f2;

     label3:
        $f0 = virtualinvoke r2.<android.graphics.text.MeasuredText: float getWidth(int,int)>(i1, i0);

        return $f0;
    }

    public android.text.AutoGrowArray$FloatArray getWidths()
    {
        android.text.MeasuredParagraph r0;
        android.text.AutoGrowArray$FloatArray $r1;

        r0 := @this: android.text.MeasuredParagraph;

        $r1 = r0.<android.text.MeasuredParagraph: android.text.AutoGrowArray$FloatArray mWidths>;

        return $r1;
    }

    float measure(int, int)
    {
        android.text.MeasuredParagraph r0;
        int i0, i1;
        float[] r1;
        android.text.AutoGrowArray$FloatArray $r2;
        float $f0, f1;

        r0 := @this: android.text.MeasuredParagraph;

        i1 := @parameter0: int;

        i0 := @parameter1: int;

        f1 = 0.0F;

        $r2 = r0.<android.text.MeasuredParagraph: android.text.AutoGrowArray$FloatArray mWidths>;

        r1 = virtualinvoke $r2.<android.text.AutoGrowArray$FloatArray: float[] getRawArray()>();

     label1:
        if i1 >= i0 goto label2;

        $f0 = r1[i1];

        f1 = f1 + $f0;

        i1 = i1 + 1;

        goto label1;

     label2:
        return f1;
    }

    public void recycle()
    {
        android.text.MeasuredParagraph r0;
        android.util.Pools$SynchronizedPool $r1;

        r0 := @this: android.text.MeasuredParagraph;

        virtualinvoke r0.<android.text.MeasuredParagraph: void release()>();

        $r1 = <android.text.MeasuredParagraph: android.util.Pools$SynchronizedPool sPool>;

        virtualinvoke $r1.<android.util.Pools$SynchronizedPool: boolean release(java.lang.Object)>(r0);

        return;
    }

    public void release()
    {
        android.text.MeasuredParagraph r0;
        android.text.AutoGrowArray$ByteArray $r1;
        android.text.AutoGrowArray$FloatArray $r2;
        android.text.AutoGrowArray$IntArray $r3, $r4;

        r0 := @this: android.text.MeasuredParagraph;

        specialinvoke r0.<android.text.MeasuredParagraph: void reset()>();

        $r1 = r0.<android.text.MeasuredParagraph: android.text.AutoGrowArray$ByteArray mLevels>;

        virtualinvoke $r1.<android.text.AutoGrowArray$ByteArray: void clearWithReleasingLargeArray()>();

        $r2 = r0.<android.text.MeasuredParagraph: android.text.AutoGrowArray$FloatArray mWidths>;

        virtualinvoke $r2.<android.text.AutoGrowArray$FloatArray: void clearWithReleasingLargeArray()>();

        $r3 = r0.<android.text.MeasuredParagraph: android.text.AutoGrowArray$IntArray mFontMetrics>;

        virtualinvoke $r3.<android.text.AutoGrowArray$IntArray: void clearWithReleasingLargeArray()>();

        $r4 = r0.<android.text.MeasuredParagraph: android.text.AutoGrowArray$IntArray mSpanEndCache>;

        virtualinvoke $r4.<android.text.AutoGrowArray$IntArray: void clearWithReleasingLargeArray()>();

        return;
    }
}
