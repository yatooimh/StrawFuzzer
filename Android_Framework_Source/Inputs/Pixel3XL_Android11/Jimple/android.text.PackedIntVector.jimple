public class android.text.PackedIntVector extends java.lang.Object
{
    private final int mColumns;
    private int mRowGapLength;
    private int mRowGapStart;
    private int mRows;
    private int[] mValueGap;
    private int[] mValues;

    public void <init>(int)
    {
        android.text.PackedIntVector r0;
        int i0, $i1;
        int[] $r1;

        r0 := @this: android.text.PackedIntVector;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.text.PackedIntVector: int mColumns> = i0;

        r0.<android.text.PackedIntVector: int mRows> = 0;

        r0.<android.text.PackedIntVector: int mRowGapStart> = 0;

        r0.<android.text.PackedIntVector: int mRowGapLength> = 0;

        r0.<android.text.PackedIntVector: int[] mValues> = null;

        $i1 = i0 * 2;

        $r1 = newarray (int)[$i1];

        r0.<android.text.PackedIntVector: int[] mValueGap> = $r1;

        return;
    }

    private final void growBuffer()
    {
        android.text.PackedIntVector r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, i27, i28;
        int[] r1, r2, r3, $r4;

        r0 := @this: android.text.PackedIntVector;

        i0 = r0.<android.text.PackedIntVector: int mColumns>;

        $i3 = virtualinvoke r0.<android.text.PackedIntVector: int size()>();

        $i4 = staticinvoke <com.android.internal.util.GrowingArrayUtils: int growSize(int)>($i3);

        $i5 = $i4 * i0;

        r1 = staticinvoke <com.android.internal.util.ArrayUtils: int[] newUnpaddedIntArray(int)>($i5);

        $i6 = lengthof r1;

        i1 = $i6 / i0;

        r2 = r0.<android.text.PackedIntVector: int[] mValueGap>;

        i2 = r0.<android.text.PackedIntVector: int mRowGapStart>;

        $i9 = r0.<android.text.PackedIntVector: int mRows>;

        $i7 = r0.<android.text.PackedIntVector: int mRowGapLength>;

        $i8 = $i7 + i2;

        i27 = $i9 - $i8;

        r3 = r0.<android.text.PackedIntVector: int[] mValues>;

        if r3 == null goto label1;

        $i20 = i0 * i2;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r3, 0, r1, 0, $i20);

        $r4 = r0.<android.text.PackedIntVector: int[] mValues>;

        $i21 = r0.<android.text.PackedIntVector: int mRows>;

        $i22 = $i21 - i27;

        $i26 = $i22 * i0;

        $i23 = i1 - i27;

        $i25 = $i23 * i0;

        $i24 = i27 * i0;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, $i26, r1, $i25, $i24);

     label1:
        i28 = 0;

     label2:
        if i28 >= i0 goto label4;

        $i14 = r2[i28];

        if $i14 < i2 goto label3;

        $i17 = r2[i28];

        $i15 = r0.<android.text.PackedIntVector: int mRows>;

        $i16 = i1 - $i15;

        $i18 = $i17 + $i16;

        r2[i28] = $i18;

        $i19 = r2[i28];

        if $i19 >= i2 goto label3;

        r2[i28] = i2;

     label3:
        i28 = i28 + 1;

        goto label2;

     label4:
        $i12 = r0.<android.text.PackedIntVector: int mRowGapLength>;

        $i10 = r0.<android.text.PackedIntVector: int mRows>;

        $i11 = i1 - $i10;

        $i13 = $i12 + $i11;

        r0.<android.text.PackedIntVector: int mRowGapLength> = $i13;

        r0.<android.text.PackedIntVector: int mRows> = i1;

        r0.<android.text.PackedIntVector: int[] mValues> = r1;

        return;
    }

    private final void moveRowGapTo(int)
    {
        android.text.PackedIntVector r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, i32, i33, i34, i35, i36, i37, i38, i39, i40, i41, i42, i43, i44, i45, i46, i47, i48, i49;
        int[] r1, r2, r3, r4;

        r0 := @this: android.text.PackedIntVector;

        i0 := @parameter0: int;

        i1 = r0.<android.text.PackedIntVector: int mRowGapStart>;

        if i0 != i1 goto label01;

        return;

     label01:
        if i0 <= i1 goto label08;

        i32 = r0.<android.text.PackedIntVector: int mRowGapLength>;

        i33 = r0.<android.text.PackedIntVector: int mColumns>;

        r1 = r0.<android.text.PackedIntVector: int[] mValueGap>;

        r2 = r0.<android.text.PackedIntVector: int[] mValues>;

        i34 = i1 + i32;

        i35 = i34;

     label02:
        $i17 = i0 + i32;

        $i16 = i1 + i32;

        $i18 = $i17 - $i16;

        $i19 = i34 + $i18;

        if i35 >= $i19 goto label07;

        $i21 = i35 - i34;

        $i20 = r0.<android.text.PackedIntVector: int mRowGapStart>;

        i36 = $i21 + $i20;

        i37 = 0;

     label03:
        if i37 >= i33 goto label06;

        $i22 = i35 * i33;

        $i23 = $i22 + i37;

        i38 = r2[$i23];

        i39 = i38;

        $i24 = r1[i37];

        if i35 < $i24 goto label04;

        $i30 = i37 + i33;

        $i31 = r1[$i30];

        i39 = i38 + $i31;

     label04:
        i40 = i39;

        $i25 = r1[i37];

        if i36 < $i25 goto label05;

        $i28 = i37 + i33;

        $i29 = r1[$i28];

        i40 = i39 - $i29;

     label05:
        $i26 = i36 * i33;

        $i27 = $i26 + i37;

        r2[$i27] = i40;

        i37 = i37 + 1;

        goto label03;

     label06:
        i35 = i35 + 1;

        goto label02;

     label07:
        goto label14;

     label08:
        i41 = i1 - i0;

        i42 = r0.<android.text.PackedIntVector: int mColumns>;

        r3 = r0.<android.text.PackedIntVector: int[] mValueGap>;

        r4 = r0.<android.text.PackedIntVector: int[] mValues>;

        i43 = r0.<android.text.PackedIntVector: int mRowGapLength>;

        $i2 = i0 + i41;

        i44 = $i2 - 1;

     label09:
        if i44 < i0 goto label14;

        $i4 = i44 - i0;

        $i3 = i1 + i43;

        $i5 = $i4 + $i3;

        i45 = $i5 - i41;

        i46 = 0;

     label10:
        if i46 >= i42 goto label13;

        $i6 = i44 * i42;

        $i7 = $i6 + i46;

        i47 = r4[$i7];

        i48 = i47;

        $i8 = r3[i46];

        if i44 < $i8 goto label11;

        $i14 = i46 + i42;

        $i15 = r3[$i14];

        i48 = i47 + $i15;

     label11:
        i49 = i48;

        $i9 = r3[i46];

        if i45 < $i9 goto label12;

        $i12 = i46 + i42;

        $i13 = r3[$i12];

        i49 = i48 - $i13;

     label12:
        $i10 = i45 * i42;

        $i11 = $i10 + i46;

        r4[$i11] = i49;

        i46 = i46 + 1;

        goto label10;

     label13:
        i44 = i44 + -1;

        goto label09;

     label14:
        r0.<android.text.PackedIntVector: int mRowGapStart> = i0;

        return;
    }

    private final void moveValueGapTo(int, int)
    {
        android.text.PackedIntVector r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, i16, i17, i18, i19;
        int[] r1, r2;

        r0 := @this: android.text.PackedIntVector;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = r0.<android.text.PackedIntVector: int[] mValueGap>;

        r2 = r0.<android.text.PackedIntVector: int[] mValues>;

        i2 = r0.<android.text.PackedIntVector: int mColumns>;

        $i3 = r1[i0];

        if i1 != $i3 goto label1;

        return;

     label1:
        $i4 = r1[i0];

        if i1 <= $i4 goto label4;

        i16 = r1[i0];

     label2:
        if i16 >= i1 goto label3;

        $i11 = i16 * i2;

        i17 = $i11 + i0;

        $i14 = r2[i17];

        $i12 = i0 + i2;

        $i13 = r1[$i12];

        $i15 = $i14 + $i13;

        r2[i17] = $i15;

        i16 = i16 + 1;

        goto label2;

     label3:
        goto label6;

     label4:
        i18 = i1;

     label5:
        $i5 = r1[i0];

        if i18 >= $i5 goto label6;

        $i6 = i18 * i2;

        i19 = $i6 + i0;

        $i9 = r2[i19];

        $i7 = i0 + i2;

        $i8 = r1[$i7];

        $i10 = $i9 - $i8;

        r2[i19] = $i10;

        i18 = i18 + 1;

        goto label5;

     label6:
        r1[i0] = i1;

        return;
    }

    private void setValueInternal(int, int, int)
    {
        android.text.PackedIntVector r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i11, i12, i13;
        int[] r1, $r2;

        r0 := @this: android.text.PackedIntVector;

        i11 := @parameter0: int;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i12 = i11;

        $i2 = r0.<android.text.PackedIntVector: int mRowGapStart>;

        if i11 < $i2 goto label1;

        $i10 = r0.<android.text.PackedIntVector: int mRowGapLength>;

        i12 = i11 + $i10;

     label1:
        r1 = r0.<android.text.PackedIntVector: int[] mValueGap>;

        i13 = i1;

        $i3 = r1[i0];

        if i12 < $i3 goto label2;

        $i7 = r0.<android.text.PackedIntVector: int mColumns>;

        $i8 = $i7 + i0;

        $i9 = r1[$i8];

        i13 = i1 - $i9;

     label2:
        $r2 = r0.<android.text.PackedIntVector: int[] mValues>;

        $i4 = r0.<android.text.PackedIntVector: int mColumns>;

        $i5 = $i4 * i12;

        $i6 = $i5 + i0;

        $r2[$i6] = i13;

        return;
    }

    public void adjustValuesBelow(int, int, int)
    {
        android.text.PackedIntVector r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10, i11, i12;
        int[] r4;
        java.lang.StringBuilder $r5;
        java.lang.IndexOutOfBoundsException $r7;
        java.lang.String $r8;

        r0 := @this: android.text.PackedIntVector;

        i10 := @parameter0: int;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $i2 = i10 | i0;

        if $i2 < 0 goto label2;

        $i3 = virtualinvoke r0.<android.text.PackedIntVector: int size()>();

        if i10 > $i3 goto label2;

        $i4 = virtualinvoke r0.<android.text.PackedIntVector: int width()>();

        if i0 >= $i4 goto label2;

        i11 = i10;

        $i5 = r0.<android.text.PackedIntVector: int mRowGapStart>;

        if i10 < $i5 goto label1;

        $i9 = r0.<android.text.PackedIntVector: int mRowGapLength>;

        i11 = i10 + $i9;

     label1:
        specialinvoke r0.<android.text.PackedIntVector: void moveValueGapTo(int,int)>(i0, i11);

        r4 = r0.<android.text.PackedIntVector: int[] mValueGap>;

        $i6 = r0.<android.text.PackedIntVector: int mColumns>;

        i12 = $i6 + i0;

        $i7 = r4[i12];

        $i8 = $i7 + i1;

        r4[i12] = $i8;

        return;

     label2:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i10);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r7 = new java.lang.IndexOutOfBoundsException;

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r8);

        throw $r7;
    }

    public void deleteAt(int, int)
    {
        android.text.PackedIntVector r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        java.lang.StringBuilder $r2;
        java.lang.IndexOutOfBoundsException $r6;
        java.lang.String $r7;

        r0 := @this: android.text.PackedIntVector;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = i0 | i1;

        if $i2 < 0 goto label1;

        $i3 = i0 + i1;

        $i4 = virtualinvoke r0.<android.text.PackedIntVector: int size()>();

        if $i3 > $i4 goto label1;

        $i5 = i0 + i1;

        specialinvoke r0.<android.text.PackedIntVector: void moveRowGapTo(int)>($i5);

        $i6 = r0.<android.text.PackedIntVector: int mRowGapStart>;

        $i7 = $i6 - i1;

        r0.<android.text.PackedIntVector: int mRowGapStart> = $i7;

        $i8 = r0.<android.text.PackedIntVector: int mRowGapLength>;

        $i9 = $i8 + i1;

        r0.<android.text.PackedIntVector: int mRowGapLength> = $i9;

        return;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r6 = new java.lang.IndexOutOfBoundsException;

        $r7 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r7);

        throw $r6;
    }

    public int getValue(int, int)
    {
        android.text.PackedIntVector r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, i12, i13, i14;
        int[] $r4, r5;
        java.lang.StringBuilder $r6;
        java.lang.IndexOutOfBoundsException $r8;
        java.lang.String $r9;

        r0 := @this: android.text.PackedIntVector;

        i12 := @parameter0: int;

        i0 := @parameter1: int;

        i1 = r0.<android.text.PackedIntVector: int mColumns>;

        $i3 = i12 | i0;

        if $i3 < 0 goto label3;

        $i4 = virtualinvoke r0.<android.text.PackedIntVector: int size()>();

        if i12 >= $i4 goto label3;

        if i0 >= i1 goto label3;

        i13 = i12;

        $i5 = r0.<android.text.PackedIntVector: int mRowGapStart>;

        if i12 < $i5 goto label1;

        $i11 = r0.<android.text.PackedIntVector: int mRowGapLength>;

        i13 = i12 + $i11;

     label1:
        $r4 = r0.<android.text.PackedIntVector: int[] mValues>;

        $i6 = i13 * i1;

        $i7 = $i6 + i0;

        i2 = $r4[$i7];

        r5 = r0.<android.text.PackedIntVector: int[] mValueGap>;

        i14 = i2;

        $i8 = r5[i0];

        if i13 < $i8 goto label2;

        $i9 = i0 + i1;

        $i10 = r5[$i9];

        i14 = i2 + $i10;

     label2:
        return i14;

     label3:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i12);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r8 = new java.lang.IndexOutOfBoundsException;

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r9);

        throw $r8;
    }

    public void insertAt(int, int[])
    {
        android.text.PackedIntVector r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, i13, i14;
        java.lang.StringBuilder $r2, $r7;
        java.lang.IndexOutOfBoundsException $r5, $r10;
        java.lang.String $r6, $r11;
        int[] r12;

        r0 := @this: android.text.PackedIntVector;

        i0 := @parameter0: int;

        r12 := @parameter1: int[];

        if i0 < 0 goto label9;

        $i1 = virtualinvoke r0.<android.text.PackedIntVector: int size()>();

        if i0 > $i1 goto label9;

        if r12 == null goto label2;

        $i10 = lengthof r12;

        $i11 = virtualinvoke r0.<android.text.PackedIntVector: int width()>();

        if $i10 < $i11 goto label1;

        goto label2;

     label1:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("value count ");

        $i12 = lengthof r12;

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i12);

        $r10 = new java.lang.IndexOutOfBoundsException;

        $r11 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r11);

        throw $r10;

     label2:
        specialinvoke r0.<android.text.PackedIntVector: void moveRowGapTo(int)>(i0);

        $i2 = r0.<android.text.PackedIntVector: int mRowGapLength>;

        if $i2 != 0 goto label3;

        specialinvoke r0.<android.text.PackedIntVector: void growBuffer()>();

     label3:
        $i3 = r0.<android.text.PackedIntVector: int mRowGapStart>;

        $i4 = $i3 + 1;

        r0.<android.text.PackedIntVector: int mRowGapStart> = $i4;

        $i5 = r0.<android.text.PackedIntVector: int mRowGapLength>;

        $i6 = $i5 - 1;

        r0.<android.text.PackedIntVector: int mRowGapLength> = $i6;

        if r12 != null goto label6;

        $i9 = r0.<android.text.PackedIntVector: int mColumns>;

        i13 = $i9 - 1;

     label4:
        if i13 < 0 goto label5;

        specialinvoke r0.<android.text.PackedIntVector: void setValueInternal(int,int,int)>(i0, i13, 0);

        i13 = i13 + -1;

        goto label4;

     label5:
        goto label8;

     label6:
        $i7 = r0.<android.text.PackedIntVector: int mColumns>;

        i14 = $i7 - 1;

     label7:
        if i14 < 0 goto label8;

        $i8 = r12[i14];

        specialinvoke r0.<android.text.PackedIntVector: void setValueInternal(int,int,int)>(i0, i14, $i8);

        i14 = i14 + -1;

        goto label7;

     label8:
        return;

     label9:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("row ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = new java.lang.IndexOutOfBoundsException;

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r6);

        throw $r5;
    }

    public void setValue(int, int, int)
    {
        android.text.PackedIntVector r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, i14, i15, i16;
        int[] $r4, r5;
        java.lang.StringBuilder $r6;
        java.lang.IndexOutOfBoundsException $r8;
        java.lang.String $r9;

        r0 := @this: android.text.PackedIntVector;

        i14 := @parameter0: int;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $i2 = i14 | i0;

        if $i2 < 0 goto label3;

        $i3 = virtualinvoke r0.<android.text.PackedIntVector: int size()>();

        if i14 >= $i3 goto label3;

        $i4 = r0.<android.text.PackedIntVector: int mColumns>;

        if i0 >= $i4 goto label3;

        i15 = i14;

        $i5 = r0.<android.text.PackedIntVector: int mRowGapStart>;

        if i14 < $i5 goto label1;

        $i13 = r0.<android.text.PackedIntVector: int mRowGapLength>;

        i15 = i14 + $i13;

     label1:
        r5 = r0.<android.text.PackedIntVector: int[] mValueGap>;

        i16 = i1;

        $i6 = r5[i0];

        if i15 < $i6 goto label2;

        $i10 = r0.<android.text.PackedIntVector: int mColumns>;

        $i11 = $i10 + i0;

        $i12 = r5[$i11];

        i16 = i1 - $i12;

     label2:
        $r4 = r0.<android.text.PackedIntVector: int[] mValues>;

        $i7 = r0.<android.text.PackedIntVector: int mColumns>;

        $i8 = $i7 * i15;

        $i9 = $i8 + i0;

        $r4[$i9] = i16;

        return;

     label3:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i14);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r8 = new java.lang.IndexOutOfBoundsException;

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r9);

        throw $r8;
    }

    public int size()
    {
        android.text.PackedIntVector r0;
        int $i0, $i1, $i2;

        r0 := @this: android.text.PackedIntVector;

        $i1 = r0.<android.text.PackedIntVector: int mRows>;

        $i0 = r0.<android.text.PackedIntVector: int mRowGapLength>;

        $i2 = $i1 - $i0;

        return $i2;
    }

    public int width()
    {
        android.text.PackedIntVector r0;
        int $i0;

        r0 := @this: android.text.PackedIntVector;

        $i0 = r0.<android.text.PackedIntVector: int mColumns>;

        return $i0;
    }
}
