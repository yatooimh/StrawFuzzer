public final class android.text.PrecomputedText$Params extends java.lang.Object
{
    public static final int NEED_RECOMPUTE;
    public static final int UNUSABLE;
    public static final int USABLE;
    private final int mBreakStrategy;
    private final int mHyphenationFrequency;
    private final android.text.TextPaint mPaint;
    private final android.text.TextDirectionHeuristic mTextDir;

    public void <init>(android.text.TextPaint, android.text.TextDirectionHeuristic, int, int)
    {
        android.text.PrecomputedText$Params r0;
        android.text.TextPaint r1;
        android.text.TextDirectionHeuristic r2;
        int i0, i1;

        r0 := @this: android.text.PrecomputedText$Params;

        r1 := @parameter0: android.text.TextPaint;

        r2 := @parameter1: android.text.TextDirectionHeuristic;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.text.PrecomputedText$Params: android.text.TextPaint mPaint> = r1;

        r0.<android.text.PrecomputedText$Params: android.text.TextDirectionHeuristic mTextDir> = r2;

        r0.<android.text.PrecomputedText$Params: int mBreakStrategy> = i0;

        r0.<android.text.PrecomputedText$Params: int mHyphenationFrequency> = i1;

        return;
    }

    static android.text.TextPaint access$000(android.text.PrecomputedText$Params)
    {
        android.text.PrecomputedText$Params r0;
        android.text.TextPaint $r1;

        r0 := @parameter0: android.text.PrecomputedText$Params;

        $r1 = r0.<android.text.PrecomputedText$Params: android.text.TextPaint mPaint>;

        return $r1;
    }

    static android.text.TextDirectionHeuristic access$100(android.text.PrecomputedText$Params)
    {
        android.text.PrecomputedText$Params r0;
        android.text.TextDirectionHeuristic $r1;

        r0 := @parameter0: android.text.PrecomputedText$Params;

        $r1 = r0.<android.text.PrecomputedText$Params: android.text.TextDirectionHeuristic mTextDir>;

        return $r1;
    }

    static int access$200(android.text.PrecomputedText$Params)
    {
        android.text.PrecomputedText$Params r0;
        int $i0;

        r0 := @parameter0: android.text.PrecomputedText$Params;

        $i0 = r0.<android.text.PrecomputedText$Params: int mBreakStrategy>;

        return $i0;
    }

    static int access$300(android.text.PrecomputedText$Params)
    {
        android.text.PrecomputedText$Params r0;
        int $i0;

        r0 := @parameter0: android.text.PrecomputedText$Params;

        $i0 = r0.<android.text.PrecomputedText$Params: int mHyphenationFrequency>;

        return $i0;
    }

    public int checkResultUsable(android.text.TextPaint, android.text.TextDirectionHeuristic, int, int)
    {
        android.text.PrecomputedText$Params r0;
        android.text.TextPaint r1, $r3;
        android.text.TextDirectionHeuristic r2, $r4;
        int i0, $i1, $i2, i3;
        boolean $z0;
        byte b4;

        r0 := @this: android.text.PrecomputedText$Params;

        r1 := @parameter0: android.text.TextPaint;

        r2 := @parameter1: android.text.TextDirectionHeuristic;

        i3 := @parameter2: int;

        i0 := @parameter3: int;

        $i1 = r0.<android.text.PrecomputedText$Params: int mBreakStrategy>;

        if $i1 != i3 goto label3;

        $i2 = r0.<android.text.PrecomputedText$Params: int mHyphenationFrequency>;

        if $i2 != i0 goto label3;

        $r3 = r0.<android.text.PrecomputedText$Params: android.text.TextPaint mPaint>;

        $z0 = virtualinvoke $r3.<android.text.TextPaint: boolean equalsForTextMeasurement(android.graphics.Paint)>(r1);

        if $z0 == 0 goto label3;

        $r4 = r0.<android.text.PrecomputedText$Params: android.text.TextDirectionHeuristic mTextDir>;

        if $r4 != r2 goto label1;

        b4 = 2;

        goto label2;

     label1:
        b4 = 1;

     label2:
        return b4;

     label3:
        return 0;
    }

    public boolean equals(java.lang.Object)
    {
        android.text.PrecomputedText$Params r0, r4;
        boolean $z0, z1;
        int $i0, $i1, $i2;
        android.text.TextDirectionHeuristic $r1;
        android.text.TextPaint $r2;
        java.lang.Object r3;

        r0 := @this: android.text.PrecomputedText$Params;

        r3 := @parameter0: java.lang.Object;

        z1 = 1;

        if r3 != r0 goto label1;

        return 1;

     label1:
        if r3 == null goto label5;

        $z0 = r3 instanceof android.text.PrecomputedText$Params;

        if $z0 != 0 goto label2;

        goto label5;

     label2:
        r4 = (android.text.PrecomputedText$Params) r3;

        $r2 = r4.<android.text.PrecomputedText$Params: android.text.TextPaint mPaint>;

        $r1 = r4.<android.text.PrecomputedText$Params: android.text.TextDirectionHeuristic mTextDir>;

        $i1 = r4.<android.text.PrecomputedText$Params: int mBreakStrategy>;

        $i0 = r4.<android.text.PrecomputedText$Params: int mHyphenationFrequency>;

        $i2 = virtualinvoke r0.<android.text.PrecomputedText$Params: int checkResultUsable(android.text.TextPaint,android.text.TextDirectionHeuristic,int,int)>($r2, $r1, $i1, $i0);

        if $i2 != 2 goto label3;

        goto label4;

     label3:
        z1 = 0;

     label4:
        return z1;

     label5:
        return 0;
    }

    public int getBreakStrategy()
    {
        android.text.PrecomputedText$Params r0;
        int $i0;

        r0 := @this: android.text.PrecomputedText$Params;

        $i0 = r0.<android.text.PrecomputedText$Params: int mBreakStrategy>;

        return $i0;
    }

    public int getHyphenationFrequency()
    {
        android.text.PrecomputedText$Params r0;
        int $i0;

        r0 := @this: android.text.PrecomputedText$Params;

        $i0 = r0.<android.text.PrecomputedText$Params: int mHyphenationFrequency>;

        return $i0;
    }

    public android.text.TextDirectionHeuristic getTextDirection()
    {
        android.text.PrecomputedText$Params r0;
        android.text.TextDirectionHeuristic $r1;

        r0 := @this: android.text.PrecomputedText$Params;

        $r1 = r0.<android.text.PrecomputedText$Params: android.text.TextDirectionHeuristic mTextDir>;

        return $r1;
    }

    public android.text.TextPaint getTextPaint()
    {
        android.text.PrecomputedText$Params r0;
        android.text.TextPaint $r1;

        r0 := @this: android.text.PrecomputedText$Params;

        $r1 = r0.<android.text.PrecomputedText$Params: android.text.TextPaint mPaint>;

        return $r1;
    }

    public int hashCode()
    {
        android.text.PrecomputedText$Params r0;
        java.lang.Object[] $r1;
        android.text.TextPaint $r2, $r4, $r6, $r8, $r10, $r12, $r14, $r16, $r18, $r20;
        float $f0, $f1, $f2, $f3, $f4;
        java.lang.Float $r3, $r5, $r7, $r9, $r11;
        int $i0, $i1, $i2, $i3;
        java.lang.Integer $r13, $r23, $r24;
        android.os.LocaleList $r15;
        android.graphics.Typeface $r17;
        java.lang.String $r19;
        boolean $z0;
        java.lang.Boolean $r21;
        android.text.TextDirectionHeuristic $r22;

        r0 := @this: android.text.PrecomputedText$Params;

        $r1 = newarray (java.lang.Object)[13];

        $r2 = r0.<android.text.PrecomputedText$Params: android.text.TextPaint mPaint>;

        $f0 = virtualinvoke $r2.<android.text.TextPaint: float getTextSize()>();

        $r3 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r1[0] = $r3;

        $r4 = r0.<android.text.PrecomputedText$Params: android.text.TextPaint mPaint>;

        $f1 = virtualinvoke $r4.<android.text.TextPaint: float getTextScaleX()>();

        $r5 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f1);

        $r1[1] = $r5;

        $r6 = r0.<android.text.PrecomputedText$Params: android.text.TextPaint mPaint>;

        $f2 = virtualinvoke $r6.<android.text.TextPaint: float getTextSkewX()>();

        $r7 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f2);

        $r1[2] = $r7;

        $r8 = r0.<android.text.PrecomputedText$Params: android.text.TextPaint mPaint>;

        $f3 = virtualinvoke $r8.<android.text.TextPaint: float getLetterSpacing()>();

        $r9 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f3);

        $r1[3] = $r9;

        $r10 = r0.<android.text.PrecomputedText$Params: android.text.TextPaint mPaint>;

        $f4 = virtualinvoke $r10.<android.text.TextPaint: float getWordSpacing()>();

        $r11 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f4);

        $r1[4] = $r11;

        $r12 = r0.<android.text.PrecomputedText$Params: android.text.TextPaint mPaint>;

        $i0 = virtualinvoke $r12.<android.text.TextPaint: int getFlags()>();

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r1[5] = $r13;

        $r14 = r0.<android.text.PrecomputedText$Params: android.text.TextPaint mPaint>;

        $r15 = virtualinvoke $r14.<android.text.TextPaint: android.os.LocaleList getTextLocales()>();

        $r1[6] = $r15;

        $r16 = r0.<android.text.PrecomputedText$Params: android.text.TextPaint mPaint>;

        $r17 = virtualinvoke $r16.<android.text.TextPaint: android.graphics.Typeface getTypeface()>();

        $r1[7] = $r17;

        $r18 = r0.<android.text.PrecomputedText$Params: android.text.TextPaint mPaint>;

        $r19 = virtualinvoke $r18.<android.text.TextPaint: java.lang.String getFontVariationSettings()>();

        $r1[8] = $r19;

        $r20 = r0.<android.text.PrecomputedText$Params: android.text.TextPaint mPaint>;

        $z0 = virtualinvoke $r20.<android.text.TextPaint: boolean isElegantTextHeight()>();

        $r21 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r1[9] = $r21;

        $r22 = r0.<android.text.PrecomputedText$Params: android.text.TextDirectionHeuristic mTextDir>;

        $r1[10] = $r22;

        $i1 = r0.<android.text.PrecomputedText$Params: int mBreakStrategy>;

        $r23 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r1[11] = $r23;

        $i2 = r0.<android.text.PrecomputedText$Params: int mHyphenationFrequency>;

        $r24 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r1[12] = $r24;

        $i3 = staticinvoke <java.util.Objects: int hash(java.lang.Object[])>($r1);

        return $i3;
    }

    public java.lang.String toString()
    {
        android.text.PrecomputedText$Params r0;
        java.lang.StringBuilder $r2;
        android.text.TextPaint $r4, $r7, $r10, $r13, $r16, $r20, $r24, $r28;
        float $f0, $f1, $f2, $f3;
        android.os.LocaleList $r17;
        android.graphics.Typeface $r21;
        java.lang.String $r25, $r38;
        boolean $z0;
        android.text.TextDirectionHeuristic $r31;
        int $i0, $i1;

        r0 := @this: android.text.PrecomputedText$Params;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("{textSize=");

        $r4 = r0.<android.text.PrecomputedText$Params: android.text.TextPaint mPaint>;

        $f0 = virtualinvoke $r4.<android.text.TextPaint: float getTextSize()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", textScaleX=");

        $r7 = r0.<android.text.PrecomputedText$Params: android.text.TextPaint mPaint>;

        $f1 = virtualinvoke $r7.<android.text.TextPaint: float getTextScaleX()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f1);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", textSkewX=");

        $r10 = r0.<android.text.PrecomputedText$Params: android.text.TextPaint mPaint>;

        $f2 = virtualinvoke $r10.<android.text.TextPaint: float getTextSkewX()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f2);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", letterSpacing=");

        $r13 = r0.<android.text.PrecomputedText$Params: android.text.TextPaint mPaint>;

        $f3 = virtualinvoke $r13.<android.text.TextPaint: float getLetterSpacing()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f3);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", textLocale=");

        $r16 = r0.<android.text.PrecomputedText$Params: android.text.TextPaint mPaint>;

        $r17 = virtualinvoke $r16.<android.text.TextPaint: android.os.LocaleList getTextLocales()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r17);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", typeface=");

        $r20 = r0.<android.text.PrecomputedText$Params: android.text.TextPaint mPaint>;

        $r21 = virtualinvoke $r20.<android.text.TextPaint: android.graphics.Typeface getTypeface()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r21);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", variationSettings=");

        $r24 = r0.<android.text.PrecomputedText$Params: android.text.TextPaint mPaint>;

        $r25 = virtualinvoke $r24.<android.text.TextPaint: java.lang.String getFontVariationSettings()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", elegantTextHeight=");

        $r28 = r0.<android.text.PrecomputedText$Params: android.text.TextPaint mPaint>;

        $z0 = virtualinvoke $r28.<android.text.TextPaint: boolean isElegantTextHeight()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", textDir=");

        $r31 = r0.<android.text.PrecomputedText$Params: android.text.TextDirectionHeuristic mTextDir>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r31);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", breakStrategy=");

        $i0 = r0.<android.text.PrecomputedText$Params: int mBreakStrategy>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", hyphenationFrequency=");

        $i1 = r0.<android.text.PrecomputedText$Params: int mHyphenationFrequency>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r38 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r38;
    }

    public static void <clinit>()
    {
        <android.text.PrecomputedText$Params: int USABLE> = 2;

        <android.text.PrecomputedText$Params: int UNUSABLE> = 0;

        <android.text.PrecomputedText$Params: int NEED_RECOMPUTE> = 1;

        return;
    }
}
