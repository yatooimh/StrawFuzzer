public class android.text.SpanSet extends java.lang.Object
{
    private final java.lang.Class classType;
    int numberOfSpans;
    int[] spanEnds;
    int[] spanFlags;
    int[] spanStarts;
    java.lang.Object[] spans;

    void <init>(java.lang.Class)
    {
        android.text.SpanSet r0;
        java.lang.Class r1;

        r0 := @this: android.text.SpanSet;

        r1 := @parameter0: java.lang.Class;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.text.SpanSet: java.lang.Class classType> = r1;

        r0.<android.text.SpanSet: int numberOfSpans> = 0;

        return;
    }

    int getNextTransition(int, int)
    {
        android.text.SpanSet r0;
        int i0, i1, i2, $i3, i4, i5, i6;
        int[] $r1, $r2;

        r0 := @this: android.text.SpanSet;

        i0 := @parameter0: int;

        i4 := @parameter1: int;

        i5 = 0;

     label1:
        $i3 = r0.<android.text.SpanSet: int numberOfSpans>;

        if i5 >= $i3 goto label4;

        $r1 = r0.<android.text.SpanSet: int[] spanStarts>;

        i1 = $r1[i5];

        $r2 = r0.<android.text.SpanSet: int[] spanEnds>;

        i2 = $r2[i5];

        i6 = i4;

        if i1 <= i0 goto label2;

        i6 = i4;

        if i1 >= i4 goto label2;

        i6 = i1;

     label2:
        i4 = i6;

        if i2 <= i0 goto label3;

        i4 = i6;

        if i2 >= i6 goto label3;

        i4 = i2;

     label3:
        i5 = i5 + 1;

        goto label1;

     label4:
        return i4;
    }

    public boolean hasSpansIntersecting(int, int)
    {
        android.text.SpanSet r0;
        int i0, i1, $i2, $i3, $i4, i5;
        int[] $r1, $r2;

        r0 := @this: android.text.SpanSet;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i5 = 0;

     label1:
        $i2 = r0.<android.text.SpanSet: int numberOfSpans>;

        if i5 >= $i2 goto label4;

        $r1 = r0.<android.text.SpanSet: int[] spanStarts>;

        $i3 = $r1[i5];

        if $i3 >= i1 goto label3;

        $r2 = r0.<android.text.SpanSet: int[] spanEnds>;

        $i4 = $r2[i5];

        if $i4 > i0 goto label2;

        goto label3;

     label2:
        return 1;

     label3:
        i5 = i5 + 1;

        goto label1;

     label4:
        return 0;
    }

    public void init(android.text.Spanned, int, int)
    {
        android.text.SpanSet r0;
        android.text.Spanned r1;
        java.lang.Object[] r2, $r5, $r11, r15, r16;
        int i0, i1, i2, i3, i4, $i5, $i6, i7, i8, i9, i10, i11;
        java.lang.Object r3, $r10;
        java.lang.Class $r4, $r9;
        int[] $r6, $r7, $r8, $r12, $r13, $r14;

        r0 := @this: android.text.SpanSet;

        r1 := @parameter0: android.text.Spanned;

        i7 := @parameter1: int;

        i8 := @parameter2: int;

        $r4 = r0.<android.text.SpanSet: java.lang.Class classType>;

        r2 = interfaceinvoke r1.<android.text.Spanned: java.lang.Object[] getSpans(int,int,java.lang.Class)>(i7, i8, $r4);

        i0 = lengthof r2;

        if i0 <= 0 goto label2;

        r15 = r0.<android.text.SpanSet: java.lang.Object[] spans>;

        if r15 == null goto label1;

        $i6 = lengthof r15;

        if $i6 >= i0 goto label2;

     label1:
        $r9 = r0.<android.text.SpanSet: java.lang.Class classType>;

        $r10 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>($r9, i0);

        $r11 = (java.lang.Object[]) $r10;

        r0.<android.text.SpanSet: java.lang.Object[] spans> = $r11;

        $r12 = newarray (int)[i0];

        r0.<android.text.SpanSet: int[] spanStarts> = $r12;

        $r13 = newarray (int)[i0];

        r0.<android.text.SpanSet: int[] spanEnds> = $r13;

        $r14 = newarray (int)[i0];

        r0.<android.text.SpanSet: int[] spanFlags> = $r14;

     label2:
        i9 = r0.<android.text.SpanSet: int numberOfSpans>;

        r0.<android.text.SpanSet: int numberOfSpans> = 0;

        i10 = 0;

     label3:
        if i10 >= i0 goto label6;

        r3 = r2[i10];

        i1 = interfaceinvoke r1.<android.text.Spanned: int getSpanStart(java.lang.Object)>(r3);

        i2 = interfaceinvoke r1.<android.text.Spanned: int getSpanEnd(java.lang.Object)>(r3);

        if i1 != i2 goto label4;

        goto label5;

     label4:
        i3 = interfaceinvoke r1.<android.text.Spanned: int getSpanFlags(java.lang.Object)>(r3);

        r16 = r0.<android.text.SpanSet: java.lang.Object[] spans>;

        i4 = r0.<android.text.SpanSet: int numberOfSpans>;

        r16[i4] = r3;

        $r6 = r0.<android.text.SpanSet: int[] spanStarts>;

        $r6[i4] = i1;

        $r7 = r0.<android.text.SpanSet: int[] spanEnds>;

        $r7[i4] = i2;

        $r8 = r0.<android.text.SpanSet: int[] spanFlags>;

        $r8[i4] = i3;

        $i5 = i4 + 1;

        r0.<android.text.SpanSet: int numberOfSpans> = $i5;

     label5:
        i10 = i10 + 1;

        goto label3;

     label6:
        i11 = r0.<android.text.SpanSet: int numberOfSpans>;

        if i11 >= i9 goto label7;

        $r5 = r0.<android.text.SpanSet: java.lang.Object[] spans>;

        staticinvoke <java.util.Arrays: void fill(java.lang.Object[],int,int,java.lang.Object)>($r5, i11, i9, null);

     label7:
        return;
    }

    public void recycle()
    {
        android.text.SpanSet r0;
        java.lang.Object[] r1;
        int $i0;

        r0 := @this: android.text.SpanSet;

        r1 = r0.<android.text.SpanSet: java.lang.Object[] spans>;

        if r1 == null goto label1;

        $i0 = r0.<android.text.SpanSet: int numberOfSpans>;

        staticinvoke <java.util.Arrays: void fill(java.lang.Object[],int,int,java.lang.Object)>(r1, 0, $i0, null);

     label1:
        return;
    }
}
