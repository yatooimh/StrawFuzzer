abstract class android.text.SpannableStringInternal extends java.lang.Object
{
    private static final int COLUMNS;
    static final java.lang.Object[] EMPTY;
    private static final int END;
    private static final int FLAGS;
    private static final int START;
    private int mSpanCount;
    private int[] mSpanData;
    private java.lang.Object[] mSpans;
    private java.lang.String mText;

    static void <clinit>()
    {
        java.lang.Object[] $r0;

        <android.text.SpannableStringInternal: int START> = 0;

        <android.text.SpannableStringInternal: int FLAGS> = 2;

        <android.text.SpannableStringInternal: int END> = 1;

        <android.text.SpannableStringInternal: int COLUMNS> = 3;

        $r0 = newarray (java.lang.Object)[0];

        <android.text.SpannableStringInternal: java.lang.Object[] EMPTY> = $r0;

        return;
    }

    void <init>(java.lang.CharSequence, int, int)
    {
        android.text.SpannableStringInternal r0;
        java.lang.CharSequence r1;
        int i0, i1;

        r0 := @this: android.text.SpannableStringInternal;

        r1 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<android.text.SpannableStringInternal: void <init>(java.lang.CharSequence,int,int,boolean)>(r1, i0, i1, 0);

        return;
    }

    void <init>(java.lang.CharSequence, int, int, boolean)
    {
        android.text.SpannableStringInternal r0, $r5;
        java.lang.CharSequence r1;
        int i0, i1, $i2;
        boolean z0, $z1, $z2;
        java.lang.String $r2, $r3, $r6;
        android.text.Spanned $r4;
        java.lang.Object[] $r7;
        int[] $r8;

        r0 := @this: android.text.SpannableStringInternal;

        r1 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        z0 := @parameter3: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if i0 != 0 goto label1;

        $i2 = interfaceinvoke r1.<java.lang.CharSequence: int length()>();

        if i1 != $i2 goto label1;

        $r6 = interfaceinvoke r1.<java.lang.CharSequence: java.lang.String toString()>();

        r0.<android.text.SpannableStringInternal: java.lang.String mText> = $r6;

        goto label2;

     label1:
        $r2 = interfaceinvoke r1.<java.lang.CharSequence: java.lang.String toString()>();

        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int,int)>(i0, i1);

        r0.<android.text.SpannableStringInternal: java.lang.String mText> = $r3;

     label2:
        $r7 = <libcore.util.EmptyArray: java.lang.Object[] OBJECT>;

        r0.<android.text.SpannableStringInternal: java.lang.Object[] mSpans> = $r7;

        $r8 = <libcore.util.EmptyArray: int[] INT>;

        r0.<android.text.SpannableStringInternal: int[] mSpanData> = $r8;

        $z2 = r1 instanceof android.text.Spanned;

        if $z2 == 0 goto label4;

        $z1 = r1 instanceof android.text.SpannableStringInternal;

        if $z1 == 0 goto label3;

        $r5 = (android.text.SpannableStringInternal) r1;

        specialinvoke r0.<android.text.SpannableStringInternal: void copySpansFromInternal(android.text.SpannableStringInternal,int,int,boolean)>($r5, i0, i1, z0);

        goto label4;

     label3:
        $r4 = (android.text.Spanned) r1;

        specialinvoke r0.<android.text.SpannableStringInternal: void copySpansFromSpanned(android.text.Spanned,int,int,boolean)>($r4, i0, i1, z0);

     label4:
        return;
    }

    private void checkRange(java.lang.String, int, int)
    {
        android.text.SpannableStringInternal r0;
        java.lang.String r1, $r5, $r9, $r13, $r18, $r22, $r26;
        int i0, i1, i2;
        java.lang.StringBuilder $r2, $r10, $r19;
        java.lang.IndexOutOfBoundsException $r8, $r17, $r25;

        r0 := @this: android.text.SpannableStringInternal;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        if i1 < i0 goto label3;

        i2 = virtualinvoke r0.<android.text.SpannableStringInternal: int length()>();

        if i0 > i2 goto label2;

        if i1 > i2 goto label2;

        if i0 < 0 goto label1;

        if i1 < 0 goto label1;

        return;

     label1:
        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r22 = staticinvoke <android.text.SpannableStringInternal: java.lang.String region(int,int)>(i0, i1);

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" starts before 0");

        $r25 = new java.lang.IndexOutOfBoundsException;

        $r26 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r25.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r26);

        throw $r25;

     label2:
        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r13 = staticinvoke <android.text.SpannableStringInternal: java.lang.String region(int,int)>(i0, i1);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ends beyond length ");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r17 = new java.lang.IndexOutOfBoundsException;

        $r18 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r17.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r18);

        throw $r17;

     label3:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r5 = staticinvoke <android.text.SpannableStringInternal: java.lang.String region(int,int)>(i0, i1);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has end before start");

        $r8 = new java.lang.IndexOutOfBoundsException;

        $r9 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r9);

        throw $r8;
    }

    private void copySpans(android.text.SpannableStringInternal, int, int)
    {
        android.text.SpannableStringInternal r0, r1;
        int i0, i1;

        r0 := @this: android.text.SpannableStringInternal;

        r1 := @parameter0: android.text.SpannableStringInternal;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<android.text.SpannableStringInternal: void copySpansFromInternal(android.text.SpannableStringInternal,int,int,boolean)>(r1, i0, i1, 0);

        return;
    }

    private void copySpans(android.text.Spanned, int, int)
    {
        android.text.SpannableStringInternal r0;
        android.text.Spanned r1;
        int i0, i1;

        r0 := @this: android.text.SpannableStringInternal;

        r1 := @parameter0: android.text.Spanned;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<android.text.SpannableStringInternal: void copySpansFromSpanned(android.text.Spanned,int,int,boolean)>(r1, i0, i1, 0);

        return;
    }

    private void copySpansFromInternal(android.text.SpannableStringInternal, int, int, boolean)
    {
        android.text.SpannableStringInternal r0, r8;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, i31, i32, $i33, $i34, i35, i36, i37, i38, i39, i40;
        boolean z0, $z1, $z2, $z3, $z4, z5;
        java.lang.Object $r1, $r3, $r7;
        java.lang.Object[] $r2, $r4, r10, r11, r12, r15;
        int[] $r5, $r6, r9, r13, r14, $r16, r17;

        r0 := @this: android.text.SpannableStringInternal;

        r8 := @parameter0: android.text.SpannableStringInternal;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        z0 := @parameter3: boolean;

        i31 = 0;

        r9 = r8.<android.text.SpannableStringInternal: int[] mSpanData>;

        r10 = r8.<android.text.SpannableStringInternal: java.lang.Object[] mSpans>;

        i2 = r8.<android.text.SpannableStringInternal: int mSpanCount>;

        z5 = 0;

        i32 = 0;

     label01:
        if i32 >= i2 goto label05;

        $i25 = i32 * 3;

        $i26 = $i25 + 0;

        $i30 = r9[$i26];

        $i27 = i32 * 3;

        $i28 = $i27 + 1;

        $i29 = r9[$i28];

        $z3 = specialinvoke r0.<android.text.SpannableStringInternal: boolean isOutOfCopyRange(int,int,int,int)>(i0, i1, $i30, $i29);

        if $z3 == 0 goto label02;

        goto label04;

     label02:
        $r7 = r10[i32];

        $z4 = $r7 instanceof android.text.NoCopySpan;

        if $z4 == 0 goto label03;

        z5 = 1;

        if z0 == 0 goto label03;

        z5 = 1;

        goto label04;

     label03:
        i31 = i31 + 1;

     label04:
        i32 = i32 + 1;

        goto label01;

     label05:
        if i31 != 0 goto label06;

        return;

     label06:
        if z5 != 0 goto label07;

        if i0 != 0 goto label07;

        $i19 = virtualinvoke r8.<android.text.SpannableStringInternal: int length()>();

        if i1 != $i19 goto label07;

        $r4 = r8.<android.text.SpannableStringInternal: java.lang.Object[] mSpans>;

        $i20 = lengthof $r4;

        r11 = staticinvoke <com.android.internal.util.ArrayUtils: java.lang.Object[] newUnpaddedObjectArray(int)>($i20);

        r0.<android.text.SpannableStringInternal: java.lang.Object[] mSpans> = r11;

        $r5 = r8.<android.text.SpannableStringInternal: int[] mSpanData>;

        $i21 = lengthof $r5;

        $r6 = newarray (int)[$i21];

        r0.<android.text.SpannableStringInternal: int[] mSpanData> = $r6;

        $i22 = r8.<android.text.SpannableStringInternal: int mSpanCount>;

        r0.<android.text.SpannableStringInternal: int mSpanCount> = $i22;

        r12 = r8.<android.text.SpannableStringInternal: java.lang.Object[] mSpans>;

        $i23 = lengthof r12;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r12, 0, r11, 0, $i23);

        r13 = r8.<android.text.SpannableStringInternal: int[] mSpanData>;

        r14 = r0.<android.text.SpannableStringInternal: int[] mSpanData>;

        $i24 = lengthof r14;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r13, 0, r14, 0, $i24);

        goto label13;

     label07:
        r0.<android.text.SpannableStringInternal: int mSpanCount> = i31;

        r15 = staticinvoke <com.android.internal.util.ArrayUtils: java.lang.Object[] newUnpaddedObjectArray(int)>(i31);

        r0.<android.text.SpannableStringInternal: java.lang.Object[] mSpans> = r15;

        $i33 = lengthof r15;

        $i34 = $i33 * 3;

        $r16 = newarray (int)[$i34];

        r0.<android.text.SpannableStringInternal: int[] mSpanData> = $r16;

        i35 = 0;

        i36 = 0;

     label08:
        if i35 >= i2 goto label13;

        $i4 = i35 * 3;

        $i5 = $i4 + 0;

        i37 = r9[$i5];

        $i6 = i35 * 3;

        $i7 = $i6 + 1;

        i3 = r9[$i7];

        i38 = i36;

        $z1 = specialinvoke r0.<android.text.SpannableStringInternal: boolean isOutOfCopyRange(int,int,int,int)>(i0, i1, i37, i3);

        if $z1 != 0 goto label12;

        if z0 == 0 goto label09;

        $r3 = r10[i35];

        $z2 = $r3 instanceof android.text.NoCopySpan;

        if $z2 == 0 goto label09;

        i38 = i36;

        goto label12;

     label09:
        i39 = i37;

        if i37 >= i0 goto label10;

        i39 = i0;

     label10:
        i40 = i3;

        if i3 <= i1 goto label11;

        i40 = i1;

     label11:
        $r2 = r0.<android.text.SpannableStringInternal: java.lang.Object[] mSpans>;

        $r1 = r10[i35];

        $r2[i36] = $r1;

        r17 = r0.<android.text.SpannableStringInternal: int[] mSpanData>;

        $i8 = i36 * 3;

        $i10 = $i8 + 0;

        $i9 = i39 - i0;

        r17[$i10] = $i9;

        $i11 = i36 * 3;

        $i13 = $i11 + 1;

        $i12 = i40 - i0;

        r17[$i13] = $i12;

        $i14 = i36 * 3;

        $i18 = $i14 + 2;

        $i15 = i35 * 3;

        $i16 = $i15 + 2;

        $i17 = r9[$i16];

        r17[$i18] = $i17;

        i38 = i36 + 1;

     label12:
        i35 = i35 + 1;

        i36 = i38;

        goto label08;

     label13:
        return;
    }

    private void copySpansFromSpanned(android.text.Spanned, int, int, boolean)
    {
        android.text.SpannableStringInternal r0;
        android.text.Spanned r1;
        int i0, i1, i2, i3, $i4, $i5, $i6, i7, i8, i9, i10;
        boolean z0, $z1;
        java.lang.Object[] r2;
        java.lang.Object $r3, $r4, $r5, $r6, $r7;

        r0 := @this: android.text.SpannableStringInternal;

        r1 := @parameter0: android.text.Spanned;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        z0 := @parameter3: boolean;

        r2 = interfaceinvoke r1.<android.text.Spanned: java.lang.Object[] getSpans(int,int,java.lang.Class)>(i0, i1, class "Ljava/lang/Object;");

        i7 = 0;

     label1:
        $i4 = lengthof r2;

        if i7 >= $i4 goto label6;

        if z0 == 0 goto label2;

        $r7 = r2[i7];

        $z1 = $r7 instanceof android.text.NoCopySpan;

        if $z1 == 0 goto label2;

        goto label5;

     label2:
        $r3 = r2[i7];

        i8 = interfaceinvoke r1.<android.text.Spanned: int getSpanStart(java.lang.Object)>($r3);

        $r4 = r2[i7];

        i2 = interfaceinvoke r1.<android.text.Spanned: int getSpanEnd(java.lang.Object)>($r4);

        $r5 = r2[i7];

        i3 = interfaceinvoke r1.<android.text.Spanned: int getSpanFlags(java.lang.Object)>($r5);

        i9 = i8;

        if i8 >= i0 goto label3;

        i9 = i0;

     label3:
        i10 = i2;

        if i2 <= i1 goto label4;

        i10 = i1;

     label4:
        $r6 = r2[i7];

        $i6 = i9 - i0;

        $i5 = i10 - i0;

        specialinvoke r0.<android.text.SpannableStringInternal: void setSpan(java.lang.Object,int,int,int,boolean)>($r6, $i6, $i5, i3, 0);

     label5:
        i7 = i7 + 1;

        goto label1;

     label6:
        return;
    }

    private boolean isIndexFollowsNextLine(int)
    {
        android.text.SpannableStringInternal r0;
        int i0, $i1, $i2;
        char $c3;
        boolean z0;

        r0 := @this: android.text.SpannableStringInternal;

        i0 := @parameter0: int;

        if i0 == 0 goto label1;

        $i1 = virtualinvoke r0.<android.text.SpannableStringInternal: int length()>();

        if i0 == $i1 goto label1;

        $i2 = i0 - 1;

        $c3 = virtualinvoke r0.<android.text.SpannableStringInternal: char charAt(int)>($i2);

        if $c3 == 10 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    private final boolean isOutOfCopyRange(int, int, int, int)
    {
        android.text.SpannableStringInternal r0;
        int i0, i1, i2, i3;

        r0 := @this: android.text.SpannableStringInternal;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        if i2 > i1 goto label4;

        if i3 >= i0 goto label1;

        goto label4;

     label1:
        if i2 == i3 goto label3;

        if i0 == i1 goto label3;

        if i2 == i1 goto label2;

        if i3 != i0 goto label3;

     label2:
        return 1;

     label3:
        return 0;

     label4:
        return 1;
    }

    private static java.lang.String region(int, int)
    {
        int i0, i1;
        java.lang.StringBuilder $r1;
        java.lang.String $r7;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ... ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r7 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }

    private void sendSpanAdded(java.lang.Object, int, int)
    {
        android.text.SpannableStringInternal r0;
        java.lang.Object r1;
        int i0, i1, i2, i3;
        android.text.SpanWatcher[] r2;
        java.lang.Object[] $r3;
        android.text.Spannable $r4;
        android.text.SpanWatcher $r5;

        r0 := @this: android.text.SpannableStringInternal;

        r1 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r3 = virtualinvoke r0.<android.text.SpannableStringInternal: java.lang.Object[] getSpans(int,int,java.lang.Class)>(i0, i1, class "Landroid/text/SpanWatcher;");

        r2 = (android.text.SpanWatcher[]) $r3;

        i2 = lengthof r2;

        i3 = 0;

     label1:
        if i3 >= i2 goto label2;

        $r5 = r2[i3];

        $r4 = (android.text.Spannable) r0;

        interfaceinvoke $r5.<android.text.SpanWatcher: void onSpanAdded(android.text.Spannable,java.lang.Object,int,int)>($r4, r1, i0, i1);

        i3 = i3 + 1;

        goto label1;

     label2:
        return;
    }

    private void sendSpanChanged(java.lang.Object, int, int, int, int)
    {
        android.text.SpannableStringInternal r0;
        java.lang.Object r1;
        int i0, i1, i2, i3, i4, $i5, $i6, i7;
        android.text.SpanWatcher[] r2;
        java.lang.Object[] $r3;
        android.text.Spannable $r4;
        android.text.SpanWatcher $r5;

        r0 := @this: android.text.SpannableStringInternal;

        r1 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        $i5 = staticinvoke <java.lang.Math: int min(int,int)>(i0, i2);

        $i6 = staticinvoke <java.lang.Math: int max(int,int)>(i1, i3);

        $r3 = virtualinvoke r0.<android.text.SpannableStringInternal: java.lang.Object[] getSpans(int,int,java.lang.Class)>($i5, $i6, class "Landroid/text/SpanWatcher;");

        r2 = (android.text.SpanWatcher[]) $r3;

        i4 = lengthof r2;

        i7 = 0;

     label1:
        if i7 >= i4 goto label2;

        $r5 = r2[i7];

        $r4 = (android.text.Spannable) r0;

        interfaceinvoke $r5.<android.text.SpanWatcher: void onSpanChanged(android.text.Spannable,java.lang.Object,int,int,int,int)>($r4, r1, i0, i1, i2, i3);

        i7 = i7 + 1;

        goto label1;

     label2:
        return;
    }

    private void sendSpanRemoved(java.lang.Object, int, int)
    {
        android.text.SpannableStringInternal r0;
        java.lang.Object r1;
        int i0, i1, i2, i3;
        android.text.SpanWatcher[] r2;
        java.lang.Object[] $r3;
        android.text.Spannable $r4;
        android.text.SpanWatcher $r5;

        r0 := @this: android.text.SpannableStringInternal;

        r1 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r3 = virtualinvoke r0.<android.text.SpannableStringInternal: java.lang.Object[] getSpans(int,int,java.lang.Class)>(i0, i1, class "Landroid/text/SpanWatcher;");

        r2 = (android.text.SpanWatcher[]) $r3;

        i2 = lengthof r2;

        i3 = 0;

     label1:
        if i3 >= i2 goto label2;

        $r5 = r2[i3];

        $r4 = (android.text.Spannable) r0;

        interfaceinvoke $r5.<android.text.SpanWatcher: void onSpanRemoved(android.text.Spannable,java.lang.Object,int,int)>($r4, r1, i0, i1);

        i3 = i3 + 1;

        goto label1;

     label2:
        return;
    }

    private void setSpan(java.lang.Object, int, int, int, boolean)
    {
        android.text.SpannableStringInternal r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i32, i34, i35, i36, i37, i38;
        boolean z0, $z1, $z2, $z3;
        java.lang.Object[] $r1, $r2, r24, r26, r28;
        int[] $r3, r25, r27, r29;
        java.lang.Object $r4, r21;
        java.lang.StringBuilder $r5, $r13;
        char $c31, $c33;
        java.lang.RuntimeException $r11, $r19;
        java.lang.String $r12, $r20;

        r0 := @this: android.text.SpannableStringInternal;

        r21 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        z0 := @parameter4: boolean;

        specialinvoke r0.<android.text.SpannableStringInternal: void checkRange(java.lang.String,int,int)>("setSpan", i0, i1);

        $i4 = i2 & 51;

        if $i4 != 51 goto label4;

        $z2 = specialinvoke r0.<android.text.SpannableStringInternal: boolean isIndexFollowsNextLine(int)>(i0);

        if $z2 == 0 goto label2;

        if z0 != 0 goto label1;

        return;

     label1:
        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("PARAGRAPH span must start at paragraph boundary (");

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" follows ");

        $i32 = i0 - 1;

        $c33 = virtualinvoke r0.<android.text.SpannableStringInternal: char charAt(int)>($i32);

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c33);

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r19 = new java.lang.RuntimeException;

        $r20 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r19.<java.lang.RuntimeException: void <init>(java.lang.String)>($r20);

        throw $r19;

     label2:
        $z3 = specialinvoke r0.<android.text.SpannableStringInternal: boolean isIndexFollowsNextLine(int)>(i1);

        if $z3 == 0 goto label4;

        if z0 != 0 goto label3;

        return;

     label3:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("PARAGRAPH span must end at paragraph boundary (");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" follows ");

        $i30 = i1 - 1;

        $c31 = virtualinvoke r0.<android.text.SpannableStringInternal: char charAt(int)>($i30);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c31);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r11 = new java.lang.RuntimeException;

        $r12 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.RuntimeException: void <init>(java.lang.String)>($r12);

        throw $r11;

     label4:
        i34 = r0.<android.text.SpannableStringInternal: int mSpanCount>;

        r24 = r0.<android.text.SpannableStringInternal: java.lang.Object[] mSpans>;

        r25 = r0.<android.text.SpannableStringInternal: int[] mSpanData>;

        i35 = 0;

     label5:
        if i35 >= i34 goto label7;

        $r4 = r24[i35];

        if $r4 != r21 goto label6;

        $i20 = i35 * 3;

        $i21 = $i20 + 0;

        i3 = r25[$i21];

        $i22 = i35 * 3;

        $i23 = $i22 + 1;

        i36 = r25[$i23];

        $i24 = i35 * 3;

        $i25 = $i24 + 0;

        r25[$i25] = i0;

        $i26 = i35 * 3;

        $i27 = $i26 + 1;

        r25[$i27] = i1;

        $i28 = i35 * 3;

        $i29 = $i28 + 2;

        r25[$i29] = i2;

        specialinvoke r0.<android.text.SpannableStringInternal: void sendSpanChanged(java.lang.Object,int,int,int,int)>(r21, i3, i36, i0, i1);

        return;

     label6:
        i35 = i35 + 1;

        goto label5;

     label7:
        i37 = r0.<android.text.SpannableStringInternal: int mSpanCount>;

        $i6 = i37 + 1;

        $r1 = r0.<android.text.SpannableStringInternal: java.lang.Object[] mSpans>;

        $i5 = lengthof $r1;

        if $i6 < $i5 goto label8;

        $i14 = staticinvoke <com.android.internal.util.GrowingArrayUtils: int growSize(int)>(i37);

        r26 = staticinvoke <com.android.internal.util.ArrayUtils: java.lang.Object[] newUnpaddedObjectArray(int)>($i14);

        $i15 = lengthof r26;

        $i16 = $i15 * 3;

        r27 = newarray (int)[$i16];

        $r2 = r0.<android.text.SpannableStringInternal: java.lang.Object[] mSpans>;

        $i17 = r0.<android.text.SpannableStringInternal: int mSpanCount>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, r26, 0, $i17);

        $r3 = r0.<android.text.SpannableStringInternal: int[] mSpanData>;

        $i18 = r0.<android.text.SpannableStringInternal: int mSpanCount>;

        $i19 = $i18 * 3;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, 0, r27, 0, $i19);

        r0.<android.text.SpannableStringInternal: java.lang.Object[] mSpans> = r26;

        r0.<android.text.SpannableStringInternal: int[] mSpanData> = r27;

     label8:
        r28 = r0.<android.text.SpannableStringInternal: java.lang.Object[] mSpans>;

        i38 = r0.<android.text.SpannableStringInternal: int mSpanCount>;

        r28[i38] = r21;

        r29 = r0.<android.text.SpannableStringInternal: int[] mSpanData>;

        $i7 = i38 * 3;

        $i8 = $i7 + 0;

        r29[$i8] = i0;

        $i9 = i38 * 3;

        $i10 = $i9 + 1;

        r29[$i10] = i1;

        $i11 = i38 * 3;

        $i12 = $i11 + 2;

        r29[$i12] = i2;

        $i13 = i38 + 1;

        r0.<android.text.SpannableStringInternal: int mSpanCount> = $i13;

        $z1 = r0 instanceof android.text.Spannable;

        if $z1 == 0 goto label9;

        specialinvoke r0.<android.text.SpannableStringInternal: void sendSpanAdded(java.lang.Object,int,int)>(r21, i0, i1);

     label9:
        return;
    }

    public final char charAt(int)
    {
        android.text.SpannableStringInternal r0;
        int i0;
        java.lang.String $r1;
        char $c1;

        r0 := @this: android.text.SpannableStringInternal;

        i0 := @parameter0: int;

        $r1 = r0.<android.text.SpannableStringInternal: java.lang.String mText>;

        $c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>(i0);

        return $c1;
    }

    public boolean equals(java.lang.Object)
    {
        android.text.SpannableStringInternal r0;
        android.text.Spanned r1;
        java.lang.Object[] r2, r3;
        java.lang.Object r4, r7, r8;
        boolean $z0, $z1, $z2;
        java.lang.String $r5, $r6;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, i17;

        r0 := @this: android.text.SpannableStringInternal;

        r7 := @parameter0: java.lang.Object;

        $z0 = r7 instanceof android.text.Spanned;

        if $z0 == 0 goto label7;

        $r5 = virtualinvoke r0.<android.text.SpannableStringInternal: java.lang.String toString()>();

        $r6 = virtualinvoke r7.<java.lang.Object: java.lang.String toString()>();

        $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z1 == 0 goto label7;

        r1 = (android.text.Spanned) r7;

        $i0 = interfaceinvoke r1.<android.text.Spanned: int length()>();

        r2 = interfaceinvoke r1.<android.text.Spanned: java.lang.Object[] getSpans(int,int,java.lang.Class)>(0, $i0, class "Ljava/lang/Object;");

        $i1 = virtualinvoke r0.<android.text.SpannableStringInternal: int length()>();

        r3 = virtualinvoke r0.<android.text.SpannableStringInternal: java.lang.Object[] getSpans(int,int,java.lang.Class)>(0, $i1, class "Ljava/lang/Object;");

        $i3 = r0.<android.text.SpannableStringInternal: int mSpanCount>;

        $i2 = lengthof r2;

        if $i3 != $i2 goto label7;

        i17 = 0;

     label1:
        $i4 = r0.<android.text.SpannableStringInternal: int mSpanCount>;

        if i17 >= $i4 goto label6;

        r4 = r3[i17];

        r8 = r2[i17];

        if r4 != r0 goto label3;

        if r1 != r8 goto label2;

        $i11 = virtualinvoke r0.<android.text.SpannableStringInternal: int getSpanStart(java.lang.Object)>(r4);

        $i12 = interfaceinvoke r1.<android.text.Spanned: int getSpanStart(java.lang.Object)>(r8);

        if $i11 != $i12 goto label2;

        $i13 = virtualinvoke r0.<android.text.SpannableStringInternal: int getSpanEnd(java.lang.Object)>(r4);

        $i14 = interfaceinvoke r1.<android.text.Spanned: int getSpanEnd(java.lang.Object)>(r8);

        if $i13 != $i14 goto label2;

        $i15 = virtualinvoke r0.<android.text.SpannableStringInternal: int getSpanFlags(java.lang.Object)>(r4);

        $i16 = interfaceinvoke r1.<android.text.Spanned: int getSpanFlags(java.lang.Object)>(r8);

        if $i15 == $i16 goto label4;

     label2:
        return 0;

     label3:
        $z2 = virtualinvoke r4.<java.lang.Object: boolean equals(java.lang.Object)>(r8);

        if $z2 == 0 goto label5;

        $i5 = virtualinvoke r0.<android.text.SpannableStringInternal: int getSpanStart(java.lang.Object)>(r4);

        $i6 = interfaceinvoke r1.<android.text.Spanned: int getSpanStart(java.lang.Object)>(r8);

        if $i5 != $i6 goto label5;

        $i7 = virtualinvoke r0.<android.text.SpannableStringInternal: int getSpanEnd(java.lang.Object)>(r4);

        $i8 = interfaceinvoke r1.<android.text.Spanned: int getSpanEnd(java.lang.Object)>(r8);

        if $i7 != $i8 goto label5;

        $i9 = virtualinvoke r0.<android.text.SpannableStringInternal: int getSpanFlags(java.lang.Object)>(r4);

        $i10 = interfaceinvoke r1.<android.text.Spanned: int getSpanFlags(java.lang.Object)>(r8);

        if $i9 == $i10 goto label4;

        goto label5;

     label4:
        i17 = i17 + 1;

        goto label1;

     label5:
        return 0;

     label6:
        return 1;

     label7:
        return 0;
    }

    public final void getChars(int, int, char[], int)
    {
        android.text.SpannableStringInternal r0;
        int i0, i1, i2;
        char[] r1;
        java.lang.String $r2;

        r0 := @this: android.text.SpannableStringInternal;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: char[];

        i2 := @parameter3: int;

        $r2 = r0.<android.text.SpannableStringInternal: java.lang.String mText>;

        virtualinvoke $r2.<java.lang.String: void getChars(int,int,char[],int)>(i0, i1, r1, i2);

        return;
    }

    public int getSpanEnd(java.lang.Object)
    {
        android.text.SpannableStringInternal r0;
        java.lang.Object r1, $r4;
        java.lang.Object[] r2;
        int[] r3;
        int $i0, $i1, $i2, i3, i4;

        r0 := @this: android.text.SpannableStringInternal;

        r1 := @parameter0: java.lang.Object;

        i3 = r0.<android.text.SpannableStringInternal: int mSpanCount>;

        r2 = r0.<android.text.SpannableStringInternal: java.lang.Object[] mSpans>;

        r3 = r0.<android.text.SpannableStringInternal: int[] mSpanData>;

        i4 = i3 + -1;

     label1:
        if i4 < 0 goto label3;

        $r4 = r2[i4];

        if $r4 != r1 goto label2;

        $i0 = i4 * 3;

        $i1 = $i0 + 1;

        $i2 = r3[$i1];

        return $i2;

     label2:
        i4 = i4 + -1;

        goto label1;

     label3:
        return -1;
    }

    public int getSpanFlags(java.lang.Object)
    {
        android.text.SpannableStringInternal r0;
        java.lang.Object r1, $r4;
        java.lang.Object[] r2;
        int[] r3;
        int $i0, $i1, $i2, i3, i4;

        r0 := @this: android.text.SpannableStringInternal;

        r1 := @parameter0: java.lang.Object;

        i3 = r0.<android.text.SpannableStringInternal: int mSpanCount>;

        r2 = r0.<android.text.SpannableStringInternal: java.lang.Object[] mSpans>;

        r3 = r0.<android.text.SpannableStringInternal: int[] mSpanData>;

        i4 = i3 + -1;

     label1:
        if i4 < 0 goto label3;

        $r4 = r2[i4];

        if $r4 != r1 goto label2;

        $i0 = i4 * 3;

        $i1 = $i0 + 2;

        $i2 = r3[$i1];

        return $i2;

     label2:
        i4 = i4 + -1;

        goto label1;

     label3:
        return 0;
    }

    public int getSpanStart(java.lang.Object)
    {
        android.text.SpannableStringInternal r0;
        java.lang.Object r1, $r4;
        java.lang.Object[] r2;
        int[] r3;
        int $i0, $i1, $i2, i3, i4;

        r0 := @this: android.text.SpannableStringInternal;

        r1 := @parameter0: java.lang.Object;

        i3 = r0.<android.text.SpannableStringInternal: int mSpanCount>;

        r2 = r0.<android.text.SpannableStringInternal: java.lang.Object[] mSpans>;

        r3 = r0.<android.text.SpannableStringInternal: int[] mSpanData>;

        i4 = i3 + -1;

     label1:
        if i4 < 0 goto label3;

        $r4 = r2[i4];

        if $r4 != r1 goto label2;

        $i0 = i4 * 3;

        $i1 = $i0 + 0;

        $i2 = r3[$i1];

        return $i2;

     label2:
        i4 = i4 + -1;

        goto label1;

     label3:
        return -1;
    }

    public java.lang.Object[] getSpans(int, int, java.lang.Class)
    {
        android.text.SpannableStringInternal r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, i18, i19, i21, i22, i23;
        java.lang.Object[] r1, $r5, r12, r14, r15;
        int[] r2;
        java.lang.Object $r3, $r4, $r6, $r7, $r8, $r9, $r10, r13;
        boolean $z0;
        java.lang.Class r11;

        r0 := @this: android.text.SpannableStringInternal;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r11 := @parameter2: java.lang.Class;

        i18 = 0;

        i2 = r0.<android.text.SpannableStringInternal: int mSpanCount>;

        r1 = r0.<android.text.SpannableStringInternal: java.lang.Object[] mSpans>;

        r2 = r0.<android.text.SpannableStringInternal: int[] mSpanData>;

        r12 = null;

        r13 = null;

        i19 = 0;

     label01:
        if i19 >= i2 goto label14;

        $i5 = i19 * 3;

        $i6 = $i5 + 0;

        i21 = r2[$i6];

        $i7 = i19 * 3;

        $i8 = $i7 + 1;

        i3 = r2[$i8];

        if i21 <= i1 goto label02;

        goto label13;

     label02:
        if i3 >= i0 goto label03;

        goto label13;

     label03:
        if i21 == i3 goto label05;

        if i0 == i1 goto label05;

        if i21 != i1 goto label04;

        goto label13;

     label04:
        if i3 != i0 goto label05;

        goto label13;

     label05:
        if r11 == null goto label06;

        if r11 == class "Ljava/lang/Object;" goto label06;

        $r10 = r1[i19];

        $z0 = virtualinvoke r11.<java.lang.Class: boolean isInstance(java.lang.Object)>($r10);

        if $z0 != 0 goto label06;

        goto label13;

     label06:
        if i18 != 0 goto label07;

        r13 = r1[i19];

        i18 = i18 + 1;

        goto label13;

     label07:
        if i18 != 1 goto label08;

        $i16 = i2 - i19;

        $i17 = $i16 + 1;

        $r9 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>(r11, $i17);

        r12 = (java.lang.Object[]) $r9;

        r12[0] = r13;

     label08:
        $i9 = i19 * 3;

        $i10 = $i9 + 2;

        $i11 = r2[$i10];

        i22 = $i11 & 16711680;

        if i22 == 0 goto label12;

        i23 = 0;

     label09:
        if i23 >= i18 goto label11;

        $r8 = r12[i23];

        $i14 = virtualinvoke r0.<android.text.SpannableStringInternal: int getSpanFlags(java.lang.Object)>($r8);

        $i15 = $i14 & 16711680;

        if i22 <= $i15 goto label10;

        goto label11;

     label10:
        i23 = i23 + 1;

        goto label09;

     label11:
        $i13 = i23 + 1;

        $i12 = i18 - i23;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r12, i23, r12, $i13, $i12);

        $r7 = r1[i19];

        r12[i23] = $r7;

        i18 = i18 + 1;

        goto label13;

     label12:
        $r6 = r1[i19];

        r12[i18] = $r6;

        i18 = i18 + 1;

     label13:
        i19 = i19 + 1;

        goto label01;

     label14:
        if i18 != 0 goto label15;

        $r5 = staticinvoke <com.android.internal.util.ArrayUtils: java.lang.Object[] emptyArray(java.lang.Class)>(r11);

        return $r5;

     label15:
        if i18 != 1 goto label16;

        $r4 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>(r11, 1);

        r14 = (java.lang.Object[]) $r4;

        r14[0] = r13;

        return r14;

     label16:
        $i4 = lengthof r12;

        if i18 != $i4 goto label17;

        return r12;

     label17:
        $r3 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>(r11, i18);

        r15 = (java.lang.Object[]) $r3;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r12, 0, r15, 0, i18);

        return r15;
    }

    public int hashCode()
    {
        android.text.SpannableStringInternal r0;
        java.lang.Object r1;
        java.lang.String $r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, i14, i15, i16;
        java.lang.Object[] $r3;

        r0 := @this: android.text.SpannableStringInternal;

        $r2 = virtualinvoke r0.<android.text.SpannableStringInternal: java.lang.String toString()>();

        $i0 = virtualinvoke $r2.<java.lang.String: int hashCode()>();

        $i2 = $i0 * 31;

        $i1 = r0.<android.text.SpannableStringInternal: int mSpanCount>;

        i14 = $i2 + $i1;

        i15 = 0;

     label1:
        $i3 = r0.<android.text.SpannableStringInternal: int mSpanCount>;

        if i15 >= $i3 goto label3;

        $r3 = r0.<android.text.SpannableStringInternal: java.lang.Object[] mSpans>;

        r1 = $r3[i15];

        i16 = i14;

        if r1 == r0 goto label2;

        $i12 = i14 * 31;

        $i13 = virtualinvoke r1.<java.lang.Object: int hashCode()>();

        i16 = $i12 + $i13;

     label2:
        $i4 = i16 * 31;

        $i5 = virtualinvoke r0.<android.text.SpannableStringInternal: int getSpanStart(java.lang.Object)>(r1);

        $i6 = $i4 + $i5;

        $i7 = $i6 * 31;

        $i8 = virtualinvoke r0.<android.text.SpannableStringInternal: int getSpanEnd(java.lang.Object)>(r1);

        $i9 = $i7 + $i8;

        $i10 = $i9 * 31;

        $i11 = virtualinvoke r0.<android.text.SpannableStringInternal: int getSpanFlags(java.lang.Object)>(r1);

        i14 = $i10 + $i11;

        i15 = i15 + 1;

        goto label1;

     label3:
        return i14;
    }

    public final int length()
    {
        android.text.SpannableStringInternal r0;
        java.lang.String $r1;
        int $i0;

        r0 := @this: android.text.SpannableStringInternal;

        $r1 = r0.<android.text.SpannableStringInternal: java.lang.String mText>;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        return $i0;
    }

    public int nextSpanTransition(int, int, java.lang.Class)
    {
        android.text.SpannableStringInternal r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, i8, i9, i10;
        java.lang.Class r1, r6;
        java.lang.Object[] r2;
        int[] r3;
        java.lang.Object $r4, $r5;
        boolean $z0, $z1;

        r0 := @this: android.text.SpannableStringInternal;

        i0 := @parameter0: int;

        i8 := @parameter1: int;

        r1 := @parameter2: java.lang.Class;

        i1 = r0.<android.text.SpannableStringInternal: int mSpanCount>;

        r2 = r0.<android.text.SpannableStringInternal: java.lang.Object[] mSpans>;

        r3 = r0.<android.text.SpannableStringInternal: int[] mSpanData>;

        r6 = r1;

        if r1 != null goto label1;

        r6 = class "Ljava/lang/Object;";

     label1:
        i9 = 0;

     label2:
        if i9 >= i1 goto label5;

        $i4 = i9 * 3;

        $i5 = $i4 + 0;

        i2 = r3[$i5];

        $i6 = i9 * 3;

        $i7 = $i6 + 1;

        i3 = r3[$i7];

        i10 = i8;

        if i2 <= i0 goto label3;

        i10 = i8;

        if i2 >= i8 goto label3;

        i10 = i8;

        $r5 = r2[i9];

        $z1 = virtualinvoke r6.<java.lang.Class: boolean isInstance(java.lang.Object)>($r5);

        if $z1 == 0 goto label3;

        i10 = i2;

     label3:
        i8 = i10;

        if i3 <= i0 goto label4;

        i8 = i10;

        if i3 >= i10 goto label4;

        i8 = i10;

        $r4 = r2[i9];

        $z0 = virtualinvoke r6.<java.lang.Class: boolean isInstance(java.lang.Object)>($r4);

        if $z0 == 0 goto label4;

        i8 = i3;

     label4:
        i9 = i9 + 1;

        goto label2;

     label5:
        return i8;
    }

    void removeSpan(java.lang.Object)
    {
        android.text.SpannableStringInternal r0;
        java.lang.Object r1;

        r0 := @this: android.text.SpannableStringInternal;

        r1 := @parameter0: java.lang.Object;

        virtualinvoke r0.<android.text.SpannableStringInternal: void removeSpan(java.lang.Object,int)>(r1, 0);

        return;
    }

    public void removeSpan(java.lang.Object, int)
    {
        android.text.SpannableStringInternal r0;
        java.lang.Object r1, $r4;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, i16, i17, i18;
        java.lang.Object[] r2;
        int[] r3;

        r0 := @this: android.text.SpannableStringInternal;

        r1 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        i16 = r0.<android.text.SpannableStringInternal: int mSpanCount>;

        r2 = r0.<android.text.SpannableStringInternal: java.lang.Object[] mSpans>;

        r3 = r0.<android.text.SpannableStringInternal: int[] mSpanData>;

        i17 = i16 - 1;

     label1:
        if i17 < 0 goto label4;

        $r4 = r2[i17];

        if $r4 != r1 goto label3;

        $i3 = i17 * 3;

        $i4 = $i3 + 0;

        i1 = r3[$i4];

        $i5 = i17 * 3;

        $i6 = $i5 + 1;

        i2 = r3[$i6];

        $i7 = i17 + 1;

        i18 = i16 - $i7;

        $i8 = i17 + 1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, $i8, r2, i17, i18);

        $i9 = i17 + 1;

        $i12 = $i9 * 3;

        $i11 = i17 * 3;

        $i10 = i18 * 3;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r3, $i12, r3, $i11, $i10);

        $i13 = r0.<android.text.SpannableStringInternal: int mSpanCount>;

        $i14 = $i13 - 1;

        r0.<android.text.SpannableStringInternal: int mSpanCount> = $i14;

        $i15 = i0 & 512;

        if $i15 != 0 goto label2;

        specialinvoke r0.<android.text.SpannableStringInternal: void sendSpanRemoved(java.lang.Object,int,int)>(r1, i1, i2);

     label2:
        return;

     label3:
        i17 = i17 + -1;

        goto label1;

     label4:
        return;
    }

    void setSpan(java.lang.Object, int, int, int)
    {
        android.text.SpannableStringInternal r0;
        java.lang.Object r1;
        int i0, i1, i2;

        r0 := @this: android.text.SpannableStringInternal;

        r1 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        specialinvoke r0.<android.text.SpannableStringInternal: void setSpan(java.lang.Object,int,int,int,boolean)>(r1, i0, i1, i2, 1);

        return;
    }

    public final java.lang.String toString()
    {
        android.text.SpannableStringInternal r0;
        java.lang.String $r1;

        r0 := @this: android.text.SpannableStringInternal;

        $r1 = r0.<android.text.SpannableStringInternal: java.lang.String mText>;

        return $r1;
    }
}
