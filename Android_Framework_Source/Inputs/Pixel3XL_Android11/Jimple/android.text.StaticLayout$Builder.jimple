public final class android.text.StaticLayout$Builder extends java.lang.Object
{
    private static final android.util.Pools$SynchronizedPool sPool;
    private boolean mAddLastLineLineSpacing;
    private android.text.Layout$Alignment mAlignment;
    private int mBreakStrategy;
    private android.text.TextUtils$TruncateAt mEllipsize;
    private int mEllipsizedWidth;
    private int mEnd;
    private boolean mFallbackLineSpacing;
    private final android.graphics.Paint$FontMetricsInt mFontMetricsInt;
    private int mHyphenationFrequency;
    private boolean mIncludePad;
    private int mJustificationMode;
    private int[] mLeftIndents;
    private int mMaxLines;
    private android.text.TextPaint mPaint;
    private int[] mRightIndents;
    private float mSpacingAdd;
    private float mSpacingMult;
    private int mStart;
    private java.lang.CharSequence mText;
    private android.text.TextDirectionHeuristic mTextDir;
    private int mWidth;

    static void <clinit>()
    {
        android.util.Pools$SynchronizedPool $r0;

        $r0 = new android.util.Pools$SynchronizedPool;

        specialinvoke $r0.<android.util.Pools$SynchronizedPool: void <init>(int)>(3);

        <android.text.StaticLayout$Builder: android.util.Pools$SynchronizedPool sPool> = $r0;

        return;
    }

    private void <init>()
    {
        android.text.StaticLayout$Builder r0;
        android.graphics.Paint$FontMetricsInt $r1;

        r0 := @this: android.text.StaticLayout$Builder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new android.graphics.Paint$FontMetricsInt;

        specialinvoke $r1.<android.graphics.Paint$FontMetricsInt: void <init>()>();

        r0.<android.text.StaticLayout$Builder: android.graphics.Paint$FontMetricsInt mFontMetricsInt> = $r1;

        return;
    }

    static boolean access$100(android.text.StaticLayout$Builder)
    {
        android.text.StaticLayout$Builder r0;
        boolean $z0;

        r0 := @parameter0: android.text.StaticLayout$Builder;

        $z0 = r0.<android.text.StaticLayout$Builder: boolean mIncludePad>;

        return $z0;
    }

    static float access$1000(android.text.StaticLayout$Builder)
    {
        android.text.StaticLayout$Builder r0;
        float $f0;

        r0 := @parameter0: android.text.StaticLayout$Builder;

        $f0 = r0.<android.text.StaticLayout$Builder: float mSpacingAdd>;

        return $f0;
    }

    static int access$1100(android.text.StaticLayout$Builder)
    {
        android.text.StaticLayout$Builder r0;
        int $i0;

        r0 := @parameter0: android.text.StaticLayout$Builder;

        $i0 = r0.<android.text.StaticLayout$Builder: int mEllipsizedWidth>;

        return $i0;
    }

    static int access$1200(android.text.StaticLayout$Builder)
    {
        android.text.StaticLayout$Builder r0;
        int $i0;

        r0 := @parameter0: android.text.StaticLayout$Builder;

        $i0 = r0.<android.text.StaticLayout$Builder: int mMaxLines>;

        return $i0;
    }

    static int[] access$1300(android.text.StaticLayout$Builder)
    {
        android.text.StaticLayout$Builder r0;
        int[] $r1;

        r0 := @parameter0: android.text.StaticLayout$Builder;

        $r1 = r0.<android.text.StaticLayout$Builder: int[] mLeftIndents>;

        return $r1;
    }

    static int[] access$1400(android.text.StaticLayout$Builder)
    {
        android.text.StaticLayout$Builder r0;
        int[] $r1;

        r0 := @parameter0: android.text.StaticLayout$Builder;

        $r1 = r0.<android.text.StaticLayout$Builder: int[] mRightIndents>;

        return $r1;
    }

    static int access$1500(android.text.StaticLayout$Builder)
    {
        android.text.StaticLayout$Builder r0;
        int $i0;

        r0 := @parameter0: android.text.StaticLayout$Builder;

        $i0 = r0.<android.text.StaticLayout$Builder: int mJustificationMode>;

        return $i0;
    }

    static int access$1600(android.text.StaticLayout$Builder)
    {
        android.text.StaticLayout$Builder r0;
        int $i0;

        r0 := @parameter0: android.text.StaticLayout$Builder;

        $i0 = r0.<android.text.StaticLayout$Builder: int mStart>;

        return $i0;
    }

    static int access$1700(android.text.StaticLayout$Builder)
    {
        android.text.StaticLayout$Builder r0;
        int $i0;

        r0 := @parameter0: android.text.StaticLayout$Builder;

        $i0 = r0.<android.text.StaticLayout$Builder: int mEnd>;

        return $i0;
    }

    static boolean access$1800(android.text.StaticLayout$Builder)
    {
        android.text.StaticLayout$Builder r0;
        boolean $z0;

        r0 := @parameter0: android.text.StaticLayout$Builder;

        $z0 = r0.<android.text.StaticLayout$Builder: boolean mFallbackLineSpacing>;

        return $z0;
    }

    static boolean access$1900(android.text.StaticLayout$Builder)
    {
        android.text.StaticLayout$Builder r0;
        boolean $z0;

        r0 := @parameter0: android.text.StaticLayout$Builder;

        $z0 = r0.<android.text.StaticLayout$Builder: boolean mAddLastLineLineSpacing>;

        return $z0;
    }

    static void access$200(android.text.StaticLayout$Builder)
    {
        android.text.StaticLayout$Builder r0;

        r0 := @parameter0: android.text.StaticLayout$Builder;

        staticinvoke <android.text.StaticLayout$Builder: void recycle(android.text.StaticLayout$Builder)>(r0);

        return;
    }

    static android.graphics.Paint$FontMetricsInt access$2000(android.text.StaticLayout$Builder)
    {
        android.text.StaticLayout$Builder r0;
        android.graphics.Paint$FontMetricsInt $r1;

        r0 := @parameter0: android.text.StaticLayout$Builder;

        $r1 = r0.<android.text.StaticLayout$Builder: android.graphics.Paint$FontMetricsInt mFontMetricsInt>;

        return $r1;
    }

    static int access$2100(android.text.StaticLayout$Builder)
    {
        android.text.StaticLayout$Builder r0;
        int $i0;

        r0 := @parameter0: android.text.StaticLayout$Builder;

        $i0 = r0.<android.text.StaticLayout$Builder: int mHyphenationFrequency>;

        return $i0;
    }

    static int access$2200(android.text.StaticLayout$Builder)
    {
        android.text.StaticLayout$Builder r0;
        int $i0;

        r0 := @parameter0: android.text.StaticLayout$Builder;

        $i0 = r0.<android.text.StaticLayout$Builder: int mBreakStrategy>;

        return $i0;
    }

    static android.text.TextUtils$TruncateAt access$300(android.text.StaticLayout$Builder)
    {
        android.text.StaticLayout$Builder r0;
        android.text.TextUtils$TruncateAt $r1;

        r0 := @parameter0: android.text.StaticLayout$Builder;

        $r1 = r0.<android.text.StaticLayout$Builder: android.text.TextUtils$TruncateAt mEllipsize>;

        return $r1;
    }

    static java.lang.CharSequence access$400(android.text.StaticLayout$Builder)
    {
        android.text.StaticLayout$Builder r0;
        java.lang.CharSequence $r1;

        r0 := @parameter0: android.text.StaticLayout$Builder;

        $r1 = r0.<android.text.StaticLayout$Builder: java.lang.CharSequence mText>;

        return $r1;
    }

    static android.text.TextPaint access$500(android.text.StaticLayout$Builder)
    {
        android.text.StaticLayout$Builder r0;
        android.text.TextPaint $r1;

        r0 := @parameter0: android.text.StaticLayout$Builder;

        $r1 = r0.<android.text.StaticLayout$Builder: android.text.TextPaint mPaint>;

        return $r1;
    }

    static int access$600(android.text.StaticLayout$Builder)
    {
        android.text.StaticLayout$Builder r0;
        int $i0;

        r0 := @parameter0: android.text.StaticLayout$Builder;

        $i0 = r0.<android.text.StaticLayout$Builder: int mWidth>;

        return $i0;
    }

    static android.text.Layout$Alignment access$700(android.text.StaticLayout$Builder)
    {
        android.text.StaticLayout$Builder r0;
        android.text.Layout$Alignment $r1;

        r0 := @parameter0: android.text.StaticLayout$Builder;

        $r1 = r0.<android.text.StaticLayout$Builder: android.text.Layout$Alignment mAlignment>;

        return $r1;
    }

    static android.text.TextDirectionHeuristic access$800(android.text.StaticLayout$Builder)
    {
        android.text.StaticLayout$Builder r0;
        android.text.TextDirectionHeuristic $r1;

        r0 := @parameter0: android.text.StaticLayout$Builder;

        $r1 = r0.<android.text.StaticLayout$Builder: android.text.TextDirectionHeuristic mTextDir>;

        return $r1;
    }

    static float access$900(android.text.StaticLayout$Builder)
    {
        android.text.StaticLayout$Builder r0;
        float $f0;

        r0 := @parameter0: android.text.StaticLayout$Builder;

        $f0 = r0.<android.text.StaticLayout$Builder: float mSpacingMult>;

        return $f0;
    }

    public static android.text.StaticLayout$Builder obtain(java.lang.CharSequence, int, int, android.text.TextPaint, int)
    {
        java.lang.CharSequence r0;
        int i0, i1, i2;
        android.text.TextPaint r1;
        android.text.StaticLayout$Builder r2, $r7, r8;
        android.util.Pools$SynchronizedPool $r3;
        java.lang.Object $r4;
        android.text.Layout$Alignment $r5;
        android.text.TextDirectionHeuristic $r6;

        r0 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 := @parameter3: android.text.TextPaint;

        i2 := @parameter4: int;

        $r3 = <android.text.StaticLayout$Builder: android.util.Pools$SynchronizedPool sPool>;

        $r4 = virtualinvoke $r3.<android.util.Pools$SynchronizedPool: java.lang.Object acquire()>();

        r2 = (android.text.StaticLayout$Builder) $r4;

        r8 = r2;

        if r2 != null goto label1;

        $r7 = new android.text.StaticLayout$Builder;

        specialinvoke $r7.<android.text.StaticLayout$Builder: void <init>()>();

        r8 = $r7;

     label1:
        r8.<android.text.StaticLayout$Builder: java.lang.CharSequence mText> = r0;

        r8.<android.text.StaticLayout$Builder: int mStart> = i0;

        r8.<android.text.StaticLayout$Builder: int mEnd> = i1;

        r8.<android.text.StaticLayout$Builder: android.text.TextPaint mPaint> = r1;

        r8.<android.text.StaticLayout$Builder: int mWidth> = i2;

        $r5 = <android.text.Layout$Alignment: android.text.Layout$Alignment ALIGN_NORMAL>;

        r8.<android.text.StaticLayout$Builder: android.text.Layout$Alignment mAlignment> = $r5;

        $r6 = <android.text.TextDirectionHeuristics: android.text.TextDirectionHeuristic FIRSTSTRONG_LTR>;

        r8.<android.text.StaticLayout$Builder: android.text.TextDirectionHeuristic mTextDir> = $r6;

        r8.<android.text.StaticLayout$Builder: float mSpacingMult> = 1.0F;

        r8.<android.text.StaticLayout$Builder: float mSpacingAdd> = 0.0F;

        r8.<android.text.StaticLayout$Builder: boolean mIncludePad> = 1;

        r8.<android.text.StaticLayout$Builder: boolean mFallbackLineSpacing> = 0;

        r8.<android.text.StaticLayout$Builder: int mEllipsizedWidth> = i2;

        r8.<android.text.StaticLayout$Builder: android.text.TextUtils$TruncateAt mEllipsize> = null;

        r8.<android.text.StaticLayout$Builder: int mMaxLines> = 2147483647;

        r8.<android.text.StaticLayout$Builder: int mBreakStrategy> = 0;

        r8.<android.text.StaticLayout$Builder: int mHyphenationFrequency> = 0;

        r8.<android.text.StaticLayout$Builder: int mJustificationMode> = 0;

        return r8;
    }

    private static void recycle(android.text.StaticLayout$Builder)
    {
        android.text.StaticLayout$Builder r0;
        android.util.Pools$SynchronizedPool $r1;

        r0 := @parameter0: android.text.StaticLayout$Builder;

        r0.<android.text.StaticLayout$Builder: android.text.TextPaint mPaint> = null;

        r0.<android.text.StaticLayout$Builder: java.lang.CharSequence mText> = null;

        r0.<android.text.StaticLayout$Builder: int[] mLeftIndents> = null;

        r0.<android.text.StaticLayout$Builder: int[] mRightIndents> = null;

        $r1 = <android.text.StaticLayout$Builder: android.util.Pools$SynchronizedPool sPool>;

        virtualinvoke $r1.<android.util.Pools$SynchronizedPool: boolean release(java.lang.Object)>(r0);

        return;
    }

    public android.text.StaticLayout build()
    {
        android.text.StaticLayout$Builder r0;
        android.text.StaticLayout $r2;

        r0 := @this: android.text.StaticLayout$Builder;

        $r2 = new android.text.StaticLayout;

        specialinvoke $r2.<android.text.StaticLayout: void <init>(android.text.StaticLayout$Builder,android.text.StaticLayout$1)>(r0, null);

        staticinvoke <android.text.StaticLayout$Builder: void recycle(android.text.StaticLayout$Builder)>(r0);

        return $r2;
    }

    void finish()
    {
        android.text.StaticLayout$Builder r0;

        r0 := @this: android.text.StaticLayout$Builder;

        r0.<android.text.StaticLayout$Builder: java.lang.CharSequence mText> = null;

        r0.<android.text.StaticLayout$Builder: android.text.TextPaint mPaint> = null;

        r0.<android.text.StaticLayout$Builder: int[] mLeftIndents> = null;

        r0.<android.text.StaticLayout$Builder: int[] mRightIndents> = null;

        return;
    }

    android.text.StaticLayout$Builder setAddLastLineLineSpacing(boolean)
    {
        android.text.StaticLayout$Builder r0;
        boolean z0;

        r0 := @this: android.text.StaticLayout$Builder;

        z0 := @parameter0: boolean;

        r0.<android.text.StaticLayout$Builder: boolean mAddLastLineLineSpacing> = z0;

        return r0;
    }

    public android.text.StaticLayout$Builder setAlignment(android.text.Layout$Alignment)
    {
        android.text.StaticLayout$Builder r0;
        android.text.Layout$Alignment r1;

        r0 := @this: android.text.StaticLayout$Builder;

        r1 := @parameter0: android.text.Layout$Alignment;

        r0.<android.text.StaticLayout$Builder: android.text.Layout$Alignment mAlignment> = r1;

        return r0;
    }

    public android.text.StaticLayout$Builder setBreakStrategy(int)
    {
        android.text.StaticLayout$Builder r0;
        int i0;

        r0 := @this: android.text.StaticLayout$Builder;

        i0 := @parameter0: int;

        r0.<android.text.StaticLayout$Builder: int mBreakStrategy> = i0;

        return r0;
    }

    public android.text.StaticLayout$Builder setEllipsize(android.text.TextUtils$TruncateAt)
    {
        android.text.StaticLayout$Builder r0;
        android.text.TextUtils$TruncateAt r1;

        r0 := @this: android.text.StaticLayout$Builder;

        r1 := @parameter0: android.text.TextUtils$TruncateAt;

        r0.<android.text.StaticLayout$Builder: android.text.TextUtils$TruncateAt mEllipsize> = r1;

        return r0;
    }

    public android.text.StaticLayout$Builder setEllipsizedWidth(int)
    {
        android.text.StaticLayout$Builder r0;
        int i0;

        r0 := @this: android.text.StaticLayout$Builder;

        i0 := @parameter0: int;

        r0.<android.text.StaticLayout$Builder: int mEllipsizedWidth> = i0;

        return r0;
    }

    public android.text.StaticLayout$Builder setHyphenationFrequency(int)
    {
        android.text.StaticLayout$Builder r0;
        int i0;

        r0 := @this: android.text.StaticLayout$Builder;

        i0 := @parameter0: int;

        r0.<android.text.StaticLayout$Builder: int mHyphenationFrequency> = i0;

        return r0;
    }

    public android.text.StaticLayout$Builder setIncludePad(boolean)
    {
        android.text.StaticLayout$Builder r0;
        boolean z0;

        r0 := @this: android.text.StaticLayout$Builder;

        z0 := @parameter0: boolean;

        r0.<android.text.StaticLayout$Builder: boolean mIncludePad> = z0;

        return r0;
    }

    public android.text.StaticLayout$Builder setIndents(int[], int[])
    {
        android.text.StaticLayout$Builder r0;
        int[] r1, r2;

        r0 := @this: android.text.StaticLayout$Builder;

        r1 := @parameter0: int[];

        r2 := @parameter1: int[];

        r0.<android.text.StaticLayout$Builder: int[] mLeftIndents> = r1;

        r0.<android.text.StaticLayout$Builder: int[] mRightIndents> = r2;

        return r0;
    }

    public android.text.StaticLayout$Builder setJustificationMode(int)
    {
        android.text.StaticLayout$Builder r0;
        int i0;

        r0 := @this: android.text.StaticLayout$Builder;

        i0 := @parameter0: int;

        r0.<android.text.StaticLayout$Builder: int mJustificationMode> = i0;

        return r0;
    }

    public android.text.StaticLayout$Builder setLineSpacing(float, float)
    {
        android.text.StaticLayout$Builder r0;
        float f0, f1;

        r0 := @this: android.text.StaticLayout$Builder;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        r0.<android.text.StaticLayout$Builder: float mSpacingAdd> = f0;

        r0.<android.text.StaticLayout$Builder: float mSpacingMult> = f1;

        return r0;
    }

    public android.text.StaticLayout$Builder setMaxLines(int)
    {
        android.text.StaticLayout$Builder r0;
        int i0;

        r0 := @this: android.text.StaticLayout$Builder;

        i0 := @parameter0: int;

        r0.<android.text.StaticLayout$Builder: int mMaxLines> = i0;

        return r0;
    }

    public android.text.StaticLayout$Builder setPaint(android.text.TextPaint)
    {
        android.text.StaticLayout$Builder r0;
        android.text.TextPaint r1;

        r0 := @this: android.text.StaticLayout$Builder;

        r1 := @parameter0: android.text.TextPaint;

        r0.<android.text.StaticLayout$Builder: android.text.TextPaint mPaint> = r1;

        return r0;
    }

    public android.text.StaticLayout$Builder setText(java.lang.CharSequence)
    {
        android.text.StaticLayout$Builder r0, $r2;
        java.lang.CharSequence r1;
        int $i0;

        r0 := @this: android.text.StaticLayout$Builder;

        r1 := @parameter0: java.lang.CharSequence;

        $i0 = interfaceinvoke r1.<java.lang.CharSequence: int length()>();

        $r2 = virtualinvoke r0.<android.text.StaticLayout$Builder: android.text.StaticLayout$Builder setText(java.lang.CharSequence,int,int)>(r1, 0, $i0);

        return $r2;
    }

    public android.text.StaticLayout$Builder setText(java.lang.CharSequence, int, int)
    {
        android.text.StaticLayout$Builder r0;
        java.lang.CharSequence r1;
        int i0, i1;

        r0 := @this: android.text.StaticLayout$Builder;

        r1 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r0.<android.text.StaticLayout$Builder: java.lang.CharSequence mText> = r1;

        r0.<android.text.StaticLayout$Builder: int mStart> = i0;

        r0.<android.text.StaticLayout$Builder: int mEnd> = i1;

        return r0;
    }

    public android.text.StaticLayout$Builder setTextDirection(android.text.TextDirectionHeuristic)
    {
        android.text.StaticLayout$Builder r0;
        android.text.TextDirectionHeuristic r1;

        r0 := @this: android.text.StaticLayout$Builder;

        r1 := @parameter0: android.text.TextDirectionHeuristic;

        r0.<android.text.StaticLayout$Builder: android.text.TextDirectionHeuristic mTextDir> = r1;

        return r0;
    }

    public android.text.StaticLayout$Builder setUseLineSpacingFromFallbacks(boolean)
    {
        android.text.StaticLayout$Builder r0;
        boolean z0;

        r0 := @this: android.text.StaticLayout$Builder;

        z0 := @parameter0: boolean;

        r0.<android.text.StaticLayout$Builder: boolean mFallbackLineSpacing> = z0;

        return r0;
    }

    public android.text.StaticLayout$Builder setWidth(int)
    {
        android.text.StaticLayout$Builder r0;
        int i0;
        android.text.TextUtils$TruncateAt $r1;

        r0 := @this: android.text.StaticLayout$Builder;

        i0 := @parameter0: int;

        r0.<android.text.StaticLayout$Builder: int mWidth> = i0;

        $r1 = r0.<android.text.StaticLayout$Builder: android.text.TextUtils$TruncateAt mEllipsize>;

        if $r1 != null goto label1;

        r0.<android.text.StaticLayout$Builder: int mEllipsizedWidth> = i0;

     label1:
        return r0;
    }
}
