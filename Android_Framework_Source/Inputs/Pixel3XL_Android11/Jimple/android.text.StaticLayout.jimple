public class android.text.StaticLayout extends android.text.Layout
{
    private static final char CHAR_NEW_LINE;
    private static final int COLUMNS_ELLIPSIZE;
    private static final int COLUMNS_NORMAL;
    private static final int DEFAULT_MAX_LINE_HEIGHT;
    private static final int DESCENT;
    private static final int DIR;
    private static final int DIR_SHIFT;
    private static final int ELLIPSIS_COUNT;
    private static final int ELLIPSIS_START;
    private static final int END_HYPHEN_MASK;
    private static final int EXTRA;
    private static final double EXTRA_ROUNDING;
    private static final int HYPHEN;
    private static final int HYPHEN_MASK;
    private static final int START;
    private static final int START_HYPHEN_BITS_SHIFT;
    private static final int START_HYPHEN_MASK;
    private static final int START_MASK;
    private static final int TAB;
    private static final float TAB_INCREMENT;
    private static final int TAB_MASK;
    static final java.lang.String TAG;
    private static final int TOP;
    private int mBottomPadding;
    private int mColumns;
    private boolean mEllipsized;
    private int mEllipsizedWidth;
    private int[] mLeftIndents;
    private int mLineCount;
    private android.text.Layout$Directions[] mLineDirections;
    private int[] mLines;
    private int mMaxLineHeight;
    private int mMaximumVisibleLineCount;
    private int[] mRightIndents;
    private int mTopPadding;

    private void <init>(android.text.StaticLayout$Builder)
    {
        android.text.StaticLayout r0;
        android.text.StaticLayout$Builder r1;
        android.text.TextUtils$TruncateAt $r2, $r12, $r19;
        java.lang.CharSequence $r3, $r5, $r11, $r14, r23;
        boolean $z0, $z1, $z2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        java.lang.Object[] $r6;
        android.text.Layout$Directions[] $r7;
        int[] $r8, $r9, $r10;
        java.lang.Object r15;
        android.text.TextPaint $r16;
        android.text.Layout$Alignment $r17;
        android.text.TextDirectionHeuristic $r18;
        float $f0, $f1;
        android.text.Layout$Ellipsizer r20, r22;
        android.text.Layout$SpannedEllipsizer r21;

        r0 := @this: android.text.StaticLayout;

        r1 := @parameter0: android.text.StaticLayout$Builder;

        $r2 = staticinvoke <android.text.StaticLayout$Builder: android.text.TextUtils$TruncateAt access$300(android.text.StaticLayout$Builder)>(r1);

        if $r2 != null goto label1;

        r15 = staticinvoke <android.text.StaticLayout$Builder: java.lang.CharSequence access$400(android.text.StaticLayout$Builder)>(r1);

        goto label3;

     label1:
        $r3 = staticinvoke <android.text.StaticLayout$Builder: java.lang.CharSequence access$400(android.text.StaticLayout$Builder)>(r1);

        $z0 = $r3 instanceof android.text.Spanned;

        if $z0 == 0 goto label2;

        r21 = new android.text.Layout$SpannedEllipsizer;

        $r14 = staticinvoke <android.text.StaticLayout$Builder: java.lang.CharSequence access$400(android.text.StaticLayout$Builder)>(r1);

        specialinvoke r21.<android.text.Layout$SpannedEllipsizer: void <init>(java.lang.CharSequence)>($r14);

        r15 = r21;

        goto label3;

     label2:
        r22 = new android.text.Layout$Ellipsizer;

        $r5 = staticinvoke <android.text.StaticLayout$Builder: java.lang.CharSequence access$400(android.text.StaticLayout$Builder)>(r1);

        specialinvoke r22.<android.text.Layout$Ellipsizer: void <init>(java.lang.CharSequence)>($r5);

        r15 = r22;

     label3:
        $r16 = staticinvoke <android.text.StaticLayout$Builder: android.text.TextPaint access$500(android.text.StaticLayout$Builder)>(r1);

        $i7 = staticinvoke <android.text.StaticLayout$Builder: int access$600(android.text.StaticLayout$Builder)>(r1);

        $r17 = staticinvoke <android.text.StaticLayout$Builder: android.text.Layout$Alignment access$700(android.text.StaticLayout$Builder)>(r1);

        $r18 = staticinvoke <android.text.StaticLayout$Builder: android.text.TextDirectionHeuristic access$800(android.text.StaticLayout$Builder)>(r1);

        $f0 = staticinvoke <android.text.StaticLayout$Builder: float access$900(android.text.StaticLayout$Builder)>(r1);

        $f1 = staticinvoke <android.text.StaticLayout$Builder: float access$1000(android.text.StaticLayout$Builder)>(r1);

        r23 = (java.lang.CharSequence) r15;

        specialinvoke r0.<android.text.Layout: void <init>(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,android.text.TextDirectionHeuristic,float,float)>(r23, $r16, $i7, $r17, $r18, $f0, $f1);

        r0.<android.text.StaticLayout: int mMaxLineHeight> = -1;

        r0.<android.text.StaticLayout: int mMaximumVisibleLineCount> = 2147483647;

        $r19 = staticinvoke <android.text.StaticLayout$Builder: android.text.TextUtils$TruncateAt access$300(android.text.StaticLayout$Builder)>(r1);

        if $r19 == null goto label4;

        $r11 = virtualinvoke r0.<android.text.StaticLayout: java.lang.CharSequence getText()>();

        r20 = (android.text.Layout$Ellipsizer) $r11;

        r20.<android.text.Layout$Ellipsizer: android.text.Layout mLayout> = r0;

        $i5 = staticinvoke <android.text.StaticLayout$Builder: int access$1100(android.text.StaticLayout$Builder)>(r1);

        r20.<android.text.Layout$Ellipsizer: int mWidth> = $i5;

        $r12 = staticinvoke <android.text.StaticLayout$Builder: android.text.TextUtils$TruncateAt access$300(android.text.StaticLayout$Builder)>(r1);

        r20.<android.text.Layout$Ellipsizer: android.text.TextUtils$TruncateAt mMethod> = $r12;

        $i6 = staticinvoke <android.text.StaticLayout$Builder: int access$1100(android.text.StaticLayout$Builder)>(r1);

        r0.<android.text.StaticLayout: int mEllipsizedWidth> = $i6;

        r0.<android.text.StaticLayout: int mColumns> = 7;

        goto label5;

     label4:
        r0.<android.text.StaticLayout: int mColumns> = 5;

        $i0 = staticinvoke <android.text.StaticLayout$Builder: int access$600(android.text.StaticLayout$Builder)>(r1);

        r0.<android.text.StaticLayout: int mEllipsizedWidth> = $i0;

     label5:
        $r6 = staticinvoke <com.android.internal.util.ArrayUtils: java.lang.Object[] newUnpaddedArray(java.lang.Class,int)>(class "Landroid/text/Layout$Directions;", 2);

        $r7 = (android.text.Layout$Directions[]) $r6;

        r0.<android.text.StaticLayout: android.text.Layout$Directions[] mLineDirections> = $r7;

        $i1 = r0.<android.text.StaticLayout: int mColumns>;

        $i2 = $i1 * 2;

        $r8 = staticinvoke <com.android.internal.util.ArrayUtils: int[] newUnpaddedIntArray(int)>($i2);

        r0.<android.text.StaticLayout: int[] mLines> = $r8;

        $i3 = staticinvoke <android.text.StaticLayout$Builder: int access$1200(android.text.StaticLayout$Builder)>(r1);

        r0.<android.text.StaticLayout: int mMaximumVisibleLineCount> = $i3;

        $r9 = staticinvoke <android.text.StaticLayout$Builder: int[] access$1300(android.text.StaticLayout$Builder)>(r1);

        r0.<android.text.StaticLayout: int[] mLeftIndents> = $r9;

        $r10 = staticinvoke <android.text.StaticLayout$Builder: int[] access$1400(android.text.StaticLayout$Builder)>(r1);

        r0.<android.text.StaticLayout: int[] mRightIndents> = $r10;

        $i4 = staticinvoke <android.text.StaticLayout$Builder: int access$1500(android.text.StaticLayout$Builder)>(r1);

        virtualinvoke r0.<android.text.StaticLayout: void setJustificationMode(int)>($i4);

        $z1 = staticinvoke <android.text.StaticLayout$Builder: boolean access$100(android.text.StaticLayout$Builder)>(r1);

        $z2 = staticinvoke <android.text.StaticLayout$Builder: boolean access$100(android.text.StaticLayout$Builder)>(r1);

        virtualinvoke r0.<android.text.StaticLayout: void generate(android.text.StaticLayout$Builder,boolean,boolean)>(r1, $z1, $z2);

        return;
    }

    void <init>(android.text.StaticLayout$Builder, android.text.StaticLayout$1)
    {
        android.text.StaticLayout r0;
        android.text.StaticLayout$Builder r1;
        android.text.StaticLayout$1 r2;

        r0 := @this: android.text.StaticLayout;

        r1 := @parameter0: android.text.StaticLayout$Builder;

        r2 := @parameter1: android.text.StaticLayout$1;

        specialinvoke r0.<android.text.StaticLayout: void <init>(android.text.StaticLayout$Builder)>(r1);

        return;
    }

    void <init>(java.lang.CharSequence)
    {
        android.text.StaticLayout r0;
        java.lang.CharSequence r1;
        java.lang.Object[] $r2;
        android.text.Layout$Directions[] $r3;
        int $i0, $i1;
        int[] $r4;

        r0 := @this: android.text.StaticLayout;

        r1 := @parameter0: java.lang.CharSequence;

        specialinvoke r0.<android.text.Layout: void <init>(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float)>(r1, null, 0, null, 0.0F, 0.0F);

        r0.<android.text.StaticLayout: int mMaxLineHeight> = -1;

        r0.<android.text.StaticLayout: int mMaximumVisibleLineCount> = 2147483647;

        r0.<android.text.StaticLayout: int mColumns> = 7;

        $r2 = staticinvoke <com.android.internal.util.ArrayUtils: java.lang.Object[] newUnpaddedArray(java.lang.Class,int)>(class "Landroid/text/Layout$Directions;", 2);

        $r3 = (android.text.Layout$Directions[]) $r2;

        r0.<android.text.StaticLayout: android.text.Layout$Directions[] mLineDirections> = $r3;

        $i0 = r0.<android.text.StaticLayout: int mColumns>;

        $i1 = $i0 * 2;

        $r4 = staticinvoke <com.android.internal.util.ArrayUtils: int[] newUnpaddedIntArray(int)>($i1);

        r0.<android.text.StaticLayout: int[] mLines> = $r4;

        return;
    }

    public void <init>(java.lang.CharSequence, int, int, android.text.TextPaint, int, android.text.Layout$Alignment, float, float, boolean)
    {
        android.text.StaticLayout r0;
        java.lang.CharSequence r1;
        int i0, i1, i2;
        android.text.TextPaint r2;
        android.text.Layout$Alignment r3;
        float f0, f1;
        boolean z0;

        r0 := @this: android.text.StaticLayout;

        r1 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: android.text.TextPaint;

        i2 := @parameter4: int;

        r3 := @parameter5: android.text.Layout$Alignment;

        f0 := @parameter6: float;

        f1 := @parameter7: float;

        z0 := @parameter8: boolean;

        specialinvoke r0.<android.text.StaticLayout: void <init>(java.lang.CharSequence,int,int,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,boolean,android.text.TextUtils$TruncateAt,int)>(r1, i0, i1, r2, i2, r3, f0, f1, z0, null, 0);

        return;
    }

    public void <init>(java.lang.CharSequence, int, int, android.text.TextPaint, int, android.text.Layout$Alignment, float, float, boolean, android.text.TextUtils$TruncateAt, int)
    {
        android.text.StaticLayout r0;
        java.lang.CharSequence r1;
        int i0, i1, i2, i3;
        android.text.TextPaint r2;
        android.text.Layout$Alignment r3;
        float f0, f1;
        boolean z0;
        android.text.TextUtils$TruncateAt r4;
        android.text.TextDirectionHeuristic $r5;

        r0 := @this: android.text.StaticLayout;

        r1 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: android.text.TextPaint;

        i2 := @parameter4: int;

        r3 := @parameter5: android.text.Layout$Alignment;

        f0 := @parameter6: float;

        f1 := @parameter7: float;

        z0 := @parameter8: boolean;

        r4 := @parameter9: android.text.TextUtils$TruncateAt;

        i3 := @parameter10: int;

        $r5 = <android.text.TextDirectionHeuristics: android.text.TextDirectionHeuristic FIRSTSTRONG_LTR>;

        specialinvoke r0.<android.text.StaticLayout: void <init>(java.lang.CharSequence,int,int,android.text.TextPaint,int,android.text.Layout$Alignment,android.text.TextDirectionHeuristic,float,float,boolean,android.text.TextUtils$TruncateAt,int,int)>(r1, i0, i1, r2, i2, r3, $r5, f0, f1, z0, r4, i3, 2147483647);

        return;
    }

    public void <init>(java.lang.CharSequence, int, int, android.text.TextPaint, int, android.text.Layout$Alignment, android.text.TextDirectionHeuristic, float, float, boolean, android.text.TextUtils$TruncateAt, int, int)
    {
        android.text.StaticLayout r0;
        int i0, i1, i2, i3, i4, $i5, $i6;
        android.text.Layout$Alignment r1;
        android.text.TextDirectionHeuristic r2;
        float f0, f1;
        boolean z0, $z1, $z2, $z3;
        android.text.TextUtils$TruncateAt r3;
        java.lang.Object[] $r5;
        android.text.Layout$Directions[] $r6;
        int[] $r7;
        java.lang.CharSequence $r8, r10, r24;
        android.text.TextPaint r11;
        java.lang.Object r12;
        android.text.StaticLayout$Builder $r13, $r14, $r15, $r16, $r17, $r18, $r19, r20;
        android.text.Layout$Ellipsizer r21, r23;
        android.text.Layout$SpannedEllipsizer r22;

        r0 := @this: android.text.StaticLayout;

        r10 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r11 := @parameter3: android.text.TextPaint;

        i2 := @parameter4: int;

        r1 := @parameter5: android.text.Layout$Alignment;

        r2 := @parameter6: android.text.TextDirectionHeuristic;

        f0 := @parameter7: float;

        f1 := @parameter8: float;

        z0 := @parameter9: boolean;

        r3 := @parameter10: android.text.TextUtils$TruncateAt;

        i3 := @parameter11: int;

        i4 := @parameter12: int;

        if r3 != null goto label1;

        r12 = r10;

        goto label3;

     label1:
        $z1 = r10 instanceof android.text.Spanned;

        if $z1 == 0 goto label2;

        r22 = new android.text.Layout$SpannedEllipsizer;

        specialinvoke r22.<android.text.Layout$SpannedEllipsizer: void <init>(java.lang.CharSequence)>(r10);

        r12 = r22;

        goto label3;

     label2:
        r23 = new android.text.Layout$Ellipsizer;

        specialinvoke r23.<android.text.Layout$Ellipsizer: void <init>(java.lang.CharSequence)>(r10);

        r12 = r23;

     label3:
        r24 = (java.lang.CharSequence) r12;

        specialinvoke r0.<android.text.Layout: void <init>(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,android.text.TextDirectionHeuristic,float,float)>(r24, r11, i2, r1, r2, f0, f1);

        r0.<android.text.StaticLayout: int mMaxLineHeight> = -1;

        r0.<android.text.StaticLayout: int mMaximumVisibleLineCount> = 2147483647;

        $r13 = staticinvoke <android.text.StaticLayout$Builder: android.text.StaticLayout$Builder obtain(java.lang.CharSequence,int,int,android.text.TextPaint,int)>(r10, i0, i1, r11, i2);

        $r14 = virtualinvoke $r13.<android.text.StaticLayout$Builder: android.text.StaticLayout$Builder setAlignment(android.text.Layout$Alignment)>(r1);

        $r15 = virtualinvoke $r14.<android.text.StaticLayout$Builder: android.text.StaticLayout$Builder setTextDirection(android.text.TextDirectionHeuristic)>(r2);

        $r16 = virtualinvoke $r15.<android.text.StaticLayout$Builder: android.text.StaticLayout$Builder setLineSpacing(float,float)>(f1, f0);

        $r17 = virtualinvoke $r16.<android.text.StaticLayout$Builder: android.text.StaticLayout$Builder setIncludePad(boolean)>(z0);

        $r18 = virtualinvoke $r17.<android.text.StaticLayout$Builder: android.text.StaticLayout$Builder setEllipsizedWidth(int)>(i3);

        $r19 = virtualinvoke $r18.<android.text.StaticLayout$Builder: android.text.StaticLayout$Builder setEllipsize(android.text.TextUtils$TruncateAt)>(r3);

        r20 = virtualinvoke $r19.<android.text.StaticLayout$Builder: android.text.StaticLayout$Builder setMaxLines(int)>(i4);

        if r3 == null goto label4;

        $r8 = virtualinvoke r0.<android.text.StaticLayout: java.lang.CharSequence getText()>();

        r21 = (android.text.Layout$Ellipsizer) $r8;

        r21.<android.text.Layout$Ellipsizer: android.text.Layout mLayout> = r0;

        r21.<android.text.Layout$Ellipsizer: int mWidth> = i3;

        r21.<android.text.Layout$Ellipsizer: android.text.TextUtils$TruncateAt mMethod> = r3;

        r0.<android.text.StaticLayout: int mEllipsizedWidth> = i3;

        r0.<android.text.StaticLayout: int mColumns> = 7;

        goto label5;

     label4:
        r0.<android.text.StaticLayout: int mColumns> = 5;

        r0.<android.text.StaticLayout: int mEllipsizedWidth> = i2;

     label5:
        $r5 = staticinvoke <com.android.internal.util.ArrayUtils: java.lang.Object[] newUnpaddedArray(java.lang.Class,int)>(class "Landroid/text/Layout$Directions;", 2);

        $r6 = (android.text.Layout$Directions[]) $r5;

        r0.<android.text.StaticLayout: android.text.Layout$Directions[] mLineDirections> = $r6;

        $i5 = r0.<android.text.StaticLayout: int mColumns>;

        $i6 = $i5 * 2;

        $r7 = staticinvoke <com.android.internal.util.ArrayUtils: int[] newUnpaddedIntArray(int)>($i6);

        r0.<android.text.StaticLayout: int[] mLines> = $r7;

        r0.<android.text.StaticLayout: int mMaximumVisibleLineCount> = i4;

        $z2 = staticinvoke <android.text.StaticLayout$Builder: boolean access$100(android.text.StaticLayout$Builder)>(r20);

        $z3 = staticinvoke <android.text.StaticLayout$Builder: boolean access$100(android.text.StaticLayout$Builder)>(r20);

        virtualinvoke r0.<android.text.StaticLayout: void generate(android.text.StaticLayout$Builder,boolean,boolean)>(r20, $z2, $z3);

        staticinvoke <android.text.StaticLayout$Builder: void access$200(android.text.StaticLayout$Builder)>(r20);

        return;
    }

    public void <init>(java.lang.CharSequence, android.text.TextPaint, int, android.text.Layout$Alignment, float, float, boolean)
    {
        android.text.StaticLayout r0;
        java.lang.CharSequence r1;
        android.text.TextPaint r2;
        int i0, $i1;
        android.text.Layout$Alignment r3;
        float f0, f1;
        boolean z0;

        r0 := @this: android.text.StaticLayout;

        r1 := @parameter0: java.lang.CharSequence;

        r2 := @parameter1: android.text.TextPaint;

        i0 := @parameter2: int;

        r3 := @parameter3: android.text.Layout$Alignment;

        f0 := @parameter4: float;

        f1 := @parameter5: float;

        z0 := @parameter6: boolean;

        $i1 = interfaceinvoke r1.<java.lang.CharSequence: int length()>();

        specialinvoke r0.<android.text.StaticLayout: void <init>(java.lang.CharSequence,int,int,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,boolean)>(r1, 0, $i1, r2, i0, r3, f0, f1, z0);

        return;
    }

    private void calculateEllipsis(int, int, android.text.MeasuredParagraph, int, float, android.text.TextUtils$TruncateAt, int, float, android.text.TextPaint, boolean)
    {
        android.text.StaticLayout r0;
        android.text.TextUtils$TruncateAt r1, $r4, $r5, $r6, $r7;
        int i0, i2, $i4, $i5, $i7, $i9, $i10, $i12, $i13, $i14, $i16, $i17, $i19, $i21, $i22, $i23, $i25, $i26, $i28, $i29, $i30, $i31, i32, i33, i34, i35, i37, i38, i39, i40, i41, i42, i43, i44, i46, i47, $i48, $i49, $i50, $i51;
        android.text.TextPaint r2;
        boolean z0, $z1, $z2;
        float f0, f1, f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24;
        byte $b3, $b6, $b11, $b15, $b18, $b24, $b27;
        java.lang.String $r3;
        android.text.MeasuredParagraph r8;
        int[] r9, r10;

        r0 := @this: android.text.StaticLayout;

        i32 := @parameter0: int;

        i33 := @parameter1: int;

        r8 := @parameter2: android.text.MeasuredParagraph;

        i34 := @parameter3: int;

        f15 := @parameter4: float;

        r1 := @parameter5: android.text.TextUtils$TruncateAt;

        i0 := @parameter6: int;

        f16 := @parameter7: float;

        r2 := @parameter8: android.text.TextPaint;

        z0 := @parameter9: boolean;

        $f3 = specialinvoke r0.<android.text.StaticLayout: float getTotalInsets(int)>(i0);

        f0 = f15 - $f3;

        $b3 = f16 cmpg f0;

        if $b3 > 0 goto label01;

        if z0 != 0 goto label01;

        r9 = r0.<android.text.StaticLayout: int[] mLines>;

        i35 = r0.<android.text.StaticLayout: int mColumns>;

        $i28 = i35 * i0;

        $i29 = $i28 + 5;

        r9[$i29] = 0;

        $i30 = i35 * i0;

        $i31 = $i30 + 6;

        r9[$i31] = 0;

        return;

     label01:
        $r3 = staticinvoke <android.text.TextUtils: java.lang.String getEllipsisString(android.text.TextUtils$TruncateAt)>(r1);

        f1 = virtualinvoke r2.<android.text.TextPaint: float measureText(java.lang.String)>($r3);

        i2 = i33 - i32;

        $r4 = <android.text.TextUtils$TruncateAt: android.text.TextUtils$TruncateAt START>;

        if r1 != $r4 goto label07;

        $i19 = r0.<android.text.StaticLayout: int mMaximumVisibleLineCount>;

        if $i19 != 1 goto label06;

        f17 = 0.0F;

        i37 = i2;

     label02:
        i38 = i37;

        if i37 <= 0 goto label05;

        $i21 = i37 - 1;

        $i22 = $i21 + i32;

        $i23 = $i22 - i34;

        f18 = virtualinvoke r8.<android.text.MeasuredParagraph: float getCharWidthAt(int)>($i23);

        $f12 = f18 + f17;

        $f13 = $f12 + f1;

        $b24 = $f13 cmpl f0;

        if $b24 <= 0 goto label04;

     label03:
        i38 = i37;

        if i37 >= i2 goto label05;

        i38 = i37;

        $i25 = i37 + i32;

        $i26 = $i25 - i34;

        $f14 = virtualinvoke r8.<android.text.MeasuredParagraph: float getCharWidthAt(int)>($i26);

        $b27 = $f14 cmpl 0.0F;

        if $b27 != 0 goto label05;

        i37 = i37 + 1;

        goto label03;

     label04:
        f17 = f17 + f18;

        i37 = i37 + -1;

        goto label02;

     label05:
        i39 = 0;

        i40 = i38;

        goto label21;

     label06:
        i39 = 0;

        i40 = 0;

        $z2 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("StaticLayout", 5);

        if $z2 == 0 goto label21;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("StaticLayout", "Start Ellipsis only supported with one line");

        i39 = 0;

        i40 = 0;

        goto label21;

     label07:
        $r5 = <android.text.TextUtils$TruncateAt: android.text.TextUtils$TruncateAt END>;

        if r1 == $r5 goto label17;

        $r6 = <android.text.TextUtils$TruncateAt: android.text.TextUtils$TruncateAt MARQUEE>;

        if r1 == $r6 goto label17;

        $r7 = <android.text.TextUtils$TruncateAt: android.text.TextUtils$TruncateAt END_SMALL>;

        if r1 != $r7 goto label08;

        goto label17;

     label08:
        $i7 = r0.<android.text.StaticLayout: int mMaximumVisibleLineCount>;

        if $i7 != 1 goto label16;

        f19 = 0.0F;

        f20 = 0.0F;

        i41 = i2;

        $f6 = f0 - f1;

        f21 = $f6 / 2.0F;

     label09:
        i42 = i41;

        if i41 <= 0 goto label12;

        $i12 = i41 - 1;

        $i13 = $i12 + i32;

        $i14 = $i13 - i34;

        f2 = virtualinvoke r8.<android.text.MeasuredParagraph: float getCharWidthAt(int)>($i14);

        $f10 = f2 + f20;

        $b15 = $f10 cmpl f21;

        if $b15 <= 0 goto label11;

     label10:
        i42 = i41;

        if i41 >= i2 goto label12;

        i42 = i41;

        $i16 = i41 + i32;

        $i17 = $i16 - i34;

        $f11 = virtualinvoke r8.<android.text.MeasuredParagraph: float getCharWidthAt(int)>($i17);

        $b18 = $f11 cmpl 0.0F;

        if $b18 != 0 goto label12;

        i41 = i41 + 1;

        goto label10;

     label11:
        f20 = f20 + f2;

        i41 = i41 + -1;

        goto label09;

     label12:
        i43 = 0;

     label13:
        if i43 >= i42 goto label15;

        $i9 = i43 + i32;

        $i10 = $i9 - i34;

        f22 = virtualinvoke r8.<android.text.MeasuredParagraph: float getCharWidthAt(int)>($i10);

        $f9 = f22 + f19;

        $f7 = f0 - f1;

        $f8 = $f7 - f20;

        $b11 = $f9 cmpl $f8;

        if $b11 <= 0 goto label14;

        goto label15;

     label14:
        f19 = f19 + f22;

        i43 = i43 + 1;

        goto label13;

     label15:
        i39 = i43;

        i40 = i42 - i43;

        goto label21;

     label16:
        i39 = 0;

        i40 = 0;

        $z1 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("StaticLayout", 5);

        if $z1 == 0 goto label21;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("StaticLayout", "Middle Ellipsis only supported with one line");

        i39 = 0;

        i40 = 0;

        goto label21;

     label17:
        f23 = 0.0F;

        i44 = 0;

     label18:
        if i44 >= i2 goto label20;

        $i4 = i44 + i32;

        $i5 = $i4 - i34;

        f24 = virtualinvoke r8.<android.text.MeasuredParagraph: float getCharWidthAt(int)>($i5);

        $f4 = f24 + f23;

        $f5 = $f4 + f1;

        $b6 = $f5 cmpl f0;

        if $b6 <= 0 goto label19;

        goto label20;

     label19:
        f23 = f23 + f24;

        i44 = i44 + 1;

        goto label18;

     label20:
        i46 = i2 - i44;

        i39 = i44;

        i40 = i46;

        if z0 == 0 goto label21;

        i39 = i44;

        i40 = i46;

        if i46 != 0 goto label21;

        i39 = i44;

        i40 = i46;

        if i2 <= 0 goto label21;

        i39 = i2 - 1;

        i40 = 1;

     label21:
        r0.<android.text.StaticLayout: boolean mEllipsized> = 1;

        r10 = r0.<android.text.StaticLayout: int[] mLines>;

        i47 = r0.<android.text.StaticLayout: int mColumns>;

        $i48 = i47 * i0;

        $i49 = $i48 + 5;

        r10[$i49] = i39;

        $i50 = i47 * i0;

        $i51 = $i50 + 6;

        r10[$i51] = i40;

        return;
    }

    private float getTotalInsets(int)
    {
        android.text.StaticLayout r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, i9;
        float $f0;
        int[] r1, r2;

        r0 := @this: android.text.StaticLayout;

        i0 := @parameter0: int;

        i8 = 0;

        r1 = r0.<android.text.StaticLayout: int[] mLeftIndents>;

        if r1 == null goto label1;

        $i5 = lengthof r1;

        $i6 = $i5 - 1;

        $i7 = staticinvoke <java.lang.Math: int min(int,int)>(i0, $i6);

        i8 = r1[$i7];

     label1:
        r2 = r0.<android.text.StaticLayout: int[] mRightIndents>;

        i9 = i8;

        if r2 == null goto label2;

        $i1 = lengthof r2;

        $i2 = $i1 - 1;

        $i3 = staticinvoke <java.lang.Math: int min(int,int)>(i0, $i2);

        $i4 = r2[$i3];

        i9 = i8 + $i4;

     label2:
        $f0 = (float) i9;

        return $f0;
    }

    private int out(java.lang.CharSequence, int, int, int, int, int, int, int, float, float, android.text.style.LineHeightSpan[], int[], android.graphics.Paint$FontMetricsInt, boolean, int, boolean, android.text.MeasuredParagraph, int, boolean, boolean, boolean, char[], int, android.text.TextUtils$TruncateAt, float, float, android.text.TextPaint, boolean)
    {
        android.text.StaticLayout r0;
        java.lang.CharSequence r1;
        int i0, i1, i2, i3, i4, i5, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i25, $i26, $i27, $i28, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, i40, i41, i42, i43, i44, i45, i46, i47, i48, i49, i50, i52, i53, i54, i55, $i57, i59, i60, i61, $i62, $i63, $i64, $i65, $i66, $i67, $i68, i69, i70, $i71, $i72, $i73, $i74, i75, i76, i77, i78, i79, i80;
        float f0, f1, f2, f3, $f4, $f5, $f6, $f7;
        android.text.style.LineHeightSpan[] r2;
        int[] r3, r20, r21;
        android.graphics.Paint$FontMetricsInt r4;
        boolean z0, z1, z2, z3, z4, z5, $z6, z10, z12, z13, z14, $z15, z16, z17, $z18;
        android.text.MeasuredParagraph r5;
        android.text.TextUtils$TruncateAt r6, $r12, $r13;
        android.text.TextPaint r7;
        android.text.Layout$Directions[] r8, $r9, $r10, r22;
        double d0, $d1, $d2, $d3;
        android.text.Layout$Directions $r11;
        byte $b24;
        char $c29;
        android.text.style.LineHeightSpan $r14, $r15, $r16;
        android.text.style.LineHeightSpan$WithDensity $r17;
        java.lang.Object[] $r18;
        char[] r19;

        r0 := @this: android.text.StaticLayout;

        r1 := @parameter0: java.lang.CharSequence;

        i40 := @parameter1: int;

        i0 := @parameter2: int;

        i41 := @parameter3: int;

        i42 := @parameter4: int;

        i43 := @parameter5: int;

        i44 := @parameter6: int;

        i1 := @parameter7: int;

        f0 := @parameter8: float;

        f1 := @parameter9: float;

        r2 := @parameter10: android.text.style.LineHeightSpan[];

        r3 := @parameter11: int[];

        r4 := @parameter12: android.graphics.Paint$FontMetricsInt;

        z0 := @parameter13: boolean;

        i2 := @parameter14: int;

        z1 := @parameter15: boolean;

        r5 := @parameter16: android.text.MeasuredParagraph;

        i45 := @parameter17: int;

        z2 := @parameter18: boolean;

        z3 := @parameter19: boolean;

        z4 := @parameter20: boolean;

        r19 := @parameter21: char[];

        i3 := @parameter22: int;

        r6 := @parameter23: android.text.TextUtils$TruncateAt;

        f2 := @parameter24: float;

        f3 := @parameter25: float;

        r7 := @parameter26: android.text.TextPaint;

        z5 := @parameter27: boolean;

        i46 = r0.<android.text.StaticLayout: int mLineCount>;

        i47 = r0.<android.text.StaticLayout: int mColumns>;

        i4 = i46 * i47;

        $i7 = i4 + i47;

        i48 = $i7 + 1;

        r20 = r0.<android.text.StaticLayout: int[] mLines>;

        i5 = virtualinvoke r5.<android.text.MeasuredParagraph: int getParagraphDir()>();

        $i8 = lengthof r20;

        if i48 < $i8 goto label01;

        $i38 = staticinvoke <com.android.internal.util.GrowingArrayUtils: int growSize(int)>(i48);

        r21 = staticinvoke <com.android.internal.util.ArrayUtils: int[] newUnpaddedIntArray(int)>($i38);

        $i39 = lengthof r20;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r20, 0, r21, 0, $i39);

        r0.<android.text.StaticLayout: int[] mLines> = r21;

        r20 = r21;

        goto label01;

     label01:
        $r9 = r0.<android.text.StaticLayout: android.text.Layout$Directions[] mLineDirections>;

        $i9 = lengthof $r9;

        if i46 < $i9 goto label02;

        $i36 = staticinvoke <com.android.internal.util.GrowingArrayUtils: int growSize(int)>(i46);

        $r18 = staticinvoke <com.android.internal.util.ArrayUtils: java.lang.Object[] newUnpaddedArray(java.lang.Class,int)>(class "Landroid/text/Layout$Directions;", $i36);

        r22 = (android.text.Layout$Directions[]) $r18;

        r8 = r0.<android.text.StaticLayout: android.text.Layout$Directions[] mLineDirections>;

        $i37 = lengthof r8;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r8, 0, r22, 0, $i37);

        r0.<android.text.StaticLayout: android.text.Layout$Directions[] mLineDirections> = r22;

     label02:
        if r2 == null goto label07;

        r4.<android.graphics.Paint$FontMetricsInt: int ascent> = i41;

        r4.<android.graphics.Paint$FontMetricsInt: int descent> = i42;

        r4.<android.graphics.Paint$FontMetricsInt: int top> = i43;

        r4.<android.graphics.Paint$FontMetricsInt: int bottom> = i44;

        i49 = 0;

        i50 = i46;

     label03:
        $i33 = lengthof r2;

        if i49 >= $i33 goto label06;

        $r14 = r2[i49];

        $z6 = $r14 instanceof android.text.style.LineHeightSpan$WithDensity;

        if $z6 == 0 goto label04;

        $r16 = r2[i49];

        $r17 = (android.text.style.LineHeightSpan$WithDensity) $r16;

        $i35 = r3[i49];

        interfaceinvoke $r17.<android.text.style.LineHeightSpan$WithDensity: void chooseHeight(java.lang.CharSequence,int,int,int,int,android.graphics.Paint$FontMetricsInt,android.text.TextPaint)>(r1, i40, i0, $i35, i1, r4, r7);

        goto label05;

     label04:
        $r15 = r2[i49];

        $i34 = r3[i49];

        interfaceinvoke $r15.<android.text.style.LineHeightSpan: void chooseHeight(java.lang.CharSequence,int,int,int,int,android.graphics.Paint$FontMetricsInt)>(r1, i40, i0, $i34, i1, r4);

     label05:
        i49 = i49 + 1;

        goto label03;

     label06:
        i46 = i50;

        i52 = r4.<android.graphics.Paint$FontMetricsInt: int ascent>;

        i53 = r4.<android.graphics.Paint$FontMetricsInt: int descent>;

        i54 = r4.<android.graphics.Paint$FontMetricsInt: int top>;

        i55 = r4.<android.graphics.Paint$FontMetricsInt: int bottom>;

        z10 = 1;

        goto label08;

     label07:
        i55 = i44;

        i54 = i43;

        i53 = i42;

        i52 = i41;

        z10 = 1;

     label08:
        if i46 != 0 goto label09;

        z12 = 1;

        goto label10;

     label09:
        z12 = 0;

     label10:
        $i11 = i46 + 1;

        $i10 = r0.<android.text.StaticLayout: int mMaximumVisibleLineCount>;

        if $i11 != $i10 goto label11;

        z13 = 1;

        goto label12;

     label11:
        z13 = 0;

     label12:
        if r6 == null goto label23;

        if z5 == 0 goto label13;

        $i30 = r0.<android.text.StaticLayout: int mLineCount>;

        i79 = (int) 1;

        $i32 = $i30 + i79;

        $i31 = r0.<android.text.StaticLayout: int mMaximumVisibleLineCount>;

        if $i32 != $i31 goto label13;

        z14 = 1;

        goto label14;

     label13:
        z14 = 0;

     label14:
        $i57 = r0.<android.text.StaticLayout: int mMaximumVisibleLineCount>;

        i80 = (int) 1;

        if $i57 != i80 goto label15;

        if z5 != 0 goto label16;

     label15:
        if z12 == 0 goto label17;

        if z5 != 0 goto label17;

     label16:
        $r13 = <android.text.TextUtils$TruncateAt: android.text.TextUtils$TruncateAt MARQUEE>;

        if r6 != $r13 goto label19;

     label17:
        if z12 != 0 goto label20;

        if z13 != 0 goto label18;

        if z5 != 0 goto label20;

     label18:
        $r12 = <android.text.TextUtils$TruncateAt: android.text.TextUtils$TruncateAt END>;

        if r6 != $r12 goto label20;

     label19:
        goto label21;

     label20:
        z10 = 0;

     label21:
        if z10 == 0 goto label22;

        specialinvoke r0.<android.text.StaticLayout: void calculateEllipsis(int,int,android.text.MeasuredParagraph,int,float,android.text.TextUtils$TruncateAt,int,float,android.text.TextPaint,boolean)>(i40, i0, r5, i3, f2, r6, i46, f3, r7, z14);

        goto label23;

     label22:
        goto label23;

     label23:
        $z15 = r0.<android.text.StaticLayout: boolean mEllipsized>;

        if $z15 == 0 goto label24;

        z16 = 1;

        goto label29;

     label24:
        if i3 == i45 goto label25;

        if i45 <= 0 goto label25;

        $i28 = i45 - 1;

        $c29 = interfaceinvoke r1.<java.lang.CharSequence: char charAt(int)>($i28);

        if $c29 != 10 goto label25;

        z17 = 1;

        goto label26;

     label25:
        z17 = 0;

     label26:
        if i0 != i45 goto label27;

        if z17 != 0 goto label27;

        z16 = 1;

        goto label29;

     label27:
        if i40 != i45 goto label28;

        if z17 == 0 goto label28;

        z16 = 1;

        goto label29;

     label28:
        z16 = 0;

     label29:
        i59 = i52;

        if z12 == 0 goto label31;

        if z3 == 0 goto label30;

        $i27 = i54 - i52;

        r0.<android.text.StaticLayout: int mTopPadding> = $i27;

     label30:
        i59 = i52;

        if z2 == 0 goto label31;

        i59 = i54;

     label31:
        i60 = i53;

        if z16 == 0 goto label33;

        if z3 == 0 goto label32;

        $i26 = i55 - i53;

        r0.<android.text.StaticLayout: int mBottomPadding> = $i26;

     label32:
        i60 = i53;

        if z2 == 0 goto label33;

        i60 = i55;

     label33:
        if z1 == 0 goto label37;

        if z4 != 0 goto label34;

        if z16 != 0 goto label37;

     label34:
        $i23 = i60 - i59;

        $f5 = (float) $i23;

        $f4 = f0 - 1.0F;

        $f6 = $f5 * $f4;

        $f7 = $f6 + f1;

        d0 = (double) $f7;

        $b24 = d0 cmpl 0.0;

        if $b24 < 0 goto label35;

        $d3 = 0.5 + d0;

        i61 = (int) $d3;

        goto label36;

     label35:
        $d1 = neg d0;

        $d2 = $d1 + 0.5;

        $i25 = (int) $d2;

        i61 = neg $i25;

     label36:
        goto label38;

     label37:
        i61 = 0;

     label38:
        $i62 = i4 + 0;

        r20[$i62] = i40;

        $i63 = i4 + 1;

        r20[$i63] = i1;

        $i64 = i4 + 2;

        $i65 = i60 + i61;

        r20[$i64] = $i65;

        $i66 = i4 + 3;

        r20[$i66] = i61;

        $z18 = r0.<android.text.StaticLayout: boolean mEllipsized>;

        if $z18 != 0 goto label41;

        if z13 == 0 goto label41;

        if z2 == 0 goto label39;

        goto label40;

     label39:
        i55 = i60;

     label40:
        $i21 = i55 - i59;

        $i22 = i1 + $i21;

        r0.<android.text.StaticLayout: int mMaxLineHeight> = $i22;

     label41:
        $i67 = i60 - i59;

        $i68 = $i67 + i61;

        i69 = i1 + $i68;

        i70 = r0.<android.text.StaticLayout: int mColumns>;

        $i71 = i4 + i70;

        $i72 = $i71 + 0;

        r20[$i72] = i0;

        $i73 = i4 + i70;

        $i74 = $i73 + 1;

        r20[$i74] = i69;

        i75 = i4 + 0;

        i76 = r20[i75];

        i77 = 0;

        if z0 == 0 goto label42;

        i77 = 536870912;

     label42:
        $i12 = i76 | i77;

        r20[i75] = $i12;

        $i13 = i4 + 4;

        r20[$i13] = i2;

        i78 = i4 + 0;

        $i15 = r20[i78];

        $i14 = i5 << 30;

        $i16 = $i15 | $i14;

        r20[i78] = $i16;

        $r10 = r0.<android.text.StaticLayout: android.text.Layout$Directions[] mLineDirections>;

        $i18 = i40 - i3;

        $i17 = i0 - i3;

        $r11 = virtualinvoke r5.<android.text.MeasuredParagraph: android.text.Layout$Directions getDirections(int,int)>($i18, $i17);

        $r10[i46] = $r11;

        $i19 = r0.<android.text.StaticLayout: int mLineCount>;

        $i20 = $i19 + 1;

        r0.<android.text.StaticLayout: int mLineCount> = $i20;

        return i69;
    }

    static int packHyphenEdit(int, int)
    {
        int i0, i1, $i2, $i3;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = i0 << 3;

        $i3 = $i2 | i1;

        return $i3;
    }

    static int unpackEndHyphenEdit(int)
    {
        int i0, $i1;

        i0 := @parameter0: int;

        $i1 = i0 & 7;

        return $i1;
    }

    static int unpackStartHyphenEdit(int)
    {
        int i0, $i1, $i2;

        i0 := @parameter0: int;

        $i1 = i0 & 24;

        $i2 = $i1 >> 3;

        return $i2;
    }

    void generate(android.text.StaticLayout$Builder, boolean, boolean)
    {
        android.text.StaticLayout r0, r95;
        boolean z0, z1, z2, z3, $z5, $z6, $z7, $z8, $z9, $z10, z11, z12, z14, z15, z19;
        int i0, i2, $i5, $i6, $i8, $i9, $i10, $i11, $i12, $i13, $i15, $i16, $i17, $i18, $i20, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65, $i66, $i67, $i68, $i69, $i70, $i71, $i72, $i73, $i74, $i75, $i76, $i77, $i78, $i79, $i80, $i81, $i82, $i83, $i84, $i85, $i86, i88, i89, i90, i92, i93, i94, i95, i96, i97, i98, i99, i100, $i101, i102, i103, i105, i106, i107, i108, i109, i110, i111, i113, i114, i115, i116, $i117, i118, i121, i122, i123, i124, i125, i126, i127, $i128, i129, i133, i134, i135, i136, i138, i139, i140, i141, i144, i145, i146, i147, i148, i150, i151, i152, i153, i154, i155, i157, i158, i159, i161, i162, i165, i167, i168, i170, i171, i179, i180, i181, i182, i183;
        android.text.TextDirectionHeuristic r1;
        float f0, f1, f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, f12, $f13, f14, f15;
        android.text.TextUtils$TruncateAt r2, $r15, $r16;
        android.text.MeasuredParagraph r3, r99;
        char[] r4;
        int[] r5, r6, $r31, $r32, $r33, r38, r43, $r45, r46, r47, r48, r49, r56, r67;
        byte $b7, $b87, b91;
        android.graphics.text.LineBreaker$Builder $r7, $r8, $r9, $r10, $r11;
        android.graphics.text.LineBreaker$ParagraphConstraints $r12, r51, r73, r85, r90;
        char $c21;
        android.text.PrecomputedText$ParagraphInfo $r13, $r14, $r70;
        java.lang.Object[] $r17, $r19, $r20;
        android.text.style.TabStopSpan $r18;
        android.text.style.LineHeightSpan $r21;
        android.text.style.LeadingMarginSpan $r22, $r23, r63;
        android.text.PrecomputedText$Params $r24, $r29;
        android.text.PrecomputedText$Params$Builder $r25, $r26, $r27, $r28;
        android.text.PrecomputedText $r30, r54;
        android.text.StaticLayout$Builder r34;
        java.lang.CharSequence r36, r58, r65, r83;
        android.text.TextPaint r37, r59, r62, r84;
        float[] r39, r40, r41, r69;
        boolean[] r42;
        android.graphics.Paint$FontMetricsInt r44, r81, r88;
        android.graphics.text.LineBreaker r50, r75;
        android.text.PrecomputedText$ParagraphInfo[] r52, r55, r82;
        android.text.Spanned r53, r57, r79;
        android.text.style.LeadingMarginSpan[] r61;
        android.text.style.LeadingMarginSpan$LeadingMarginSpan2 r64;
        android.text.style.LineHeightSpan[] r66;
        android.text.style.TabStopSpan[] r68;
        android.text.AutoGrowArray$IntArray $r71, $r72;
        android.graphics.text.MeasuredText r74;
        android.graphics.text.LineBreaker$Result r76;

        r0 := @this: android.text.StaticLayout;

        r34 := @parameter0: android.text.StaticLayout$Builder;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        r36 = staticinvoke <android.text.StaticLayout$Builder: java.lang.CharSequence access$400(android.text.StaticLayout$Builder)>(r34);

        i88 = staticinvoke <android.text.StaticLayout$Builder: int access$1600(android.text.StaticLayout$Builder)>(r34);

        i89 = staticinvoke <android.text.StaticLayout$Builder: int access$1700(android.text.StaticLayout$Builder)>(r34);

        r37 = staticinvoke <android.text.StaticLayout$Builder: android.text.TextPaint access$500(android.text.StaticLayout$Builder)>(r34);

        i0 = staticinvoke <android.text.StaticLayout$Builder: int access$600(android.text.StaticLayout$Builder)>(r34);

        r1 = staticinvoke <android.text.StaticLayout$Builder: android.text.TextDirectionHeuristic access$800(android.text.StaticLayout$Builder)>(r34);

        z2 = staticinvoke <android.text.StaticLayout$Builder: boolean access$1800(android.text.StaticLayout$Builder)>(r34);

        f0 = staticinvoke <android.text.StaticLayout$Builder: float access$900(android.text.StaticLayout$Builder)>(r34);

        f1 = staticinvoke <android.text.StaticLayout$Builder: float access$1000(android.text.StaticLayout$Builder)>(r34);

        $i5 = staticinvoke <android.text.StaticLayout$Builder: int access$1100(android.text.StaticLayout$Builder)>(r34);

        f2 = (float) $i5;

        r2 = staticinvoke <android.text.StaticLayout$Builder: android.text.TextUtils$TruncateAt access$300(android.text.StaticLayout$Builder)>(r34);

        z3 = staticinvoke <android.text.StaticLayout$Builder: boolean access$1900(android.text.StaticLayout$Builder)>(r34);

        i90 = 0;

        r38 = null;

        r39 = null;

        r40 = null;

        r41 = null;

        r42 = null;

        r43 = null;

        r0.<android.text.StaticLayout: int mLineCount> = 0;

        r0.<android.text.StaticLayout: boolean mEllipsized> = 0;

        $i6 = r0.<android.text.StaticLayout: int mMaximumVisibleLineCount>;

        if $i6 >= 1 goto label01;

        b91 = 0;

        goto label02;

     label01:
        b91 = -1;

     label02:
        r0.<android.text.StaticLayout: int mMaxLineHeight> = b91;

        i92 = 0;

        $b7 = f0 cmpl 1.0F;

        if $b7 != 0 goto label04;

        $b87 = f1 cmpl 0.0F;

        if $b87 == 0 goto label03;

        goto label04;

     label03:
        z11 = 0;

        goto label05;

     label04:
        z11 = 1;

     label05:
        r44 = staticinvoke <android.text.StaticLayout$Builder: android.graphics.Paint$FontMetricsInt access$2000(android.text.StaticLayout$Builder)>(r34);

        $r45 = r0.<android.text.StaticLayout: int[] mLeftIndents>;

        if $r45 != null goto label07;

        $r33 = r0.<android.text.StaticLayout: int[] mRightIndents>;

        if $r33 == null goto label06;

        goto label07;

     label06:
        r46 = null;

        goto label16;

     label07:
        r47 = r0.<android.text.StaticLayout: int[] mLeftIndents>;

        if r47 != null goto label08;

        i93 = 0;

        goto label09;

     label08:
        i93 = lengthof r47;

     label09:
        r48 = r0.<android.text.StaticLayout: int[] mRightIndents>;

        if r48 != null goto label10;

        i94 = 0;

        goto label11;

     label10:
        i94 = lengthof r48;

     label11:
        $i8 = staticinvoke <java.lang.Math: int max(int,int)>(i93, i94);

        r49 = newarray (int)[$i8];

        i95 = 0;

     label12:
        if i95 >= i93 goto label13;

        $r32 = r0.<android.text.StaticLayout: int[] mLeftIndents>;

        $i86 = $r32[i95];

        r49[i95] = $i86;

        i95 = i95 + 1;

        goto label12;

     label13:
        i96 = 0;

     label14:
        if i96 >= i94 goto label15;

        $i84 = r49[i96];

        $r31 = r0.<android.text.StaticLayout: int[] mRightIndents>;

        $i83 = $r31[i96];

        $i85 = $i84 + $i83;

        r49[i96] = $i85;

        i96 = i96 + 1;

        goto label14;

     label15:
        r46 = r49;

     label16:
        $r7 = new android.graphics.text.LineBreaker$Builder;

        specialinvoke $r7.<android.graphics.text.LineBreaker$Builder: void <init>()>();

        $i9 = staticinvoke <android.text.StaticLayout$Builder: int access$2200(android.text.StaticLayout$Builder)>(r34);

        $r8 = virtualinvoke $r7.<android.graphics.text.LineBreaker$Builder: android.graphics.text.LineBreaker$Builder setBreakStrategy(int)>($i9);

        $i10 = staticinvoke <android.text.StaticLayout$Builder: int access$2100(android.text.StaticLayout$Builder)>(r34);

        $r9 = virtualinvoke $r8.<android.graphics.text.LineBreaker$Builder: android.graphics.text.LineBreaker$Builder setHyphenationFrequency(int)>($i10);

        $i11 = staticinvoke <android.text.StaticLayout$Builder: int access$1500(android.text.StaticLayout$Builder)>(r34);

        $r10 = virtualinvoke $r9.<android.graphics.text.LineBreaker$Builder: android.graphics.text.LineBreaker$Builder setJustificationMode(int)>($i11);

        $r11 = virtualinvoke $r10.<android.graphics.text.LineBreaker$Builder: android.graphics.text.LineBreaker$Builder setIndents(int[])>(r46);

        r50 = virtualinvoke $r11.<android.graphics.text.LineBreaker$Builder: android.graphics.text.LineBreaker build()>();

        $r12 = new android.graphics.text.LineBreaker$ParagraphConstraints;

        specialinvoke $r12.<android.graphics.text.LineBreaker$ParagraphConstraints: void <init>()>();

        r51 = $r12;

        r52 = null;

        $z5 = r36 instanceof android.text.Spanned;

        if $z5 == 0 goto label17;

        r53 = (android.text.Spanned) r36;

        goto label18;

     label17:
        r53 = null;

     label18:
        z12 = r36 instanceof android.text.PrecomputedText;

        if z12 == 0 goto label21;

        r54 = (android.text.PrecomputedText) r36;

        $i79 = staticinvoke <android.text.StaticLayout$Builder: int access$2200(android.text.StaticLayout$Builder)>(r34);

        $i80 = staticinvoke <android.text.StaticLayout$Builder: int access$2100(android.text.StaticLayout$Builder)>(r34);

        i97 = virtualinvoke r54.<android.text.PrecomputedText: int checkResultUsable(int,int,android.text.TextDirectionHeuristic,android.text.TextPaint,int,int)>(i88, i89, r1, r37, $i79, $i80);

        if i97 == 1 goto label20;

        if i97 == 2 goto label19;

        goto label21;

     label19:
        r52 = virtualinvoke r54.<android.text.PrecomputedText: android.text.PrecomputedText$ParagraphInfo[] getParagraphInfo()>();

        goto label21;

     label20:
        $r25 = new android.text.PrecomputedText$Params$Builder;

        specialinvoke $r25.<android.text.PrecomputedText$Params$Builder: void <init>(android.text.TextPaint)>(r37);

        $i81 = staticinvoke <android.text.StaticLayout$Builder: int access$2200(android.text.StaticLayout$Builder)>(r34);

        $r26 = virtualinvoke $r25.<android.text.PrecomputedText$Params$Builder: android.text.PrecomputedText$Params$Builder setBreakStrategy(int)>($i81);

        $i82 = staticinvoke <android.text.StaticLayout$Builder: int access$2100(android.text.StaticLayout$Builder)>(r34);

        $r27 = virtualinvoke $r26.<android.text.PrecomputedText$Params$Builder: android.text.PrecomputedText$Params$Builder setHyphenationFrequency(int)>($i82);

        $r28 = virtualinvoke $r27.<android.text.PrecomputedText$Params$Builder: android.text.PrecomputedText$Params$Builder setTextDirection(android.text.TextDirectionHeuristic)>(r1);

        $r29 = virtualinvoke $r28.<android.text.PrecomputedText$Params$Builder: android.text.PrecomputedText$Params build()>();

        $r30 = staticinvoke <android.text.PrecomputedText: android.text.PrecomputedText create(java.lang.CharSequence,android.text.PrecomputedText$Params)>(r54, $r29);

        r52 = virtualinvoke $r30.<android.text.PrecomputedText: android.text.PrecomputedText$ParagraphInfo[] getParagraphInfo()>();

        goto label21;

     label21:
        if r52 != null goto label22;

        $r24 = new android.text.PrecomputedText$Params;

        $i77 = staticinvoke <android.text.StaticLayout$Builder: int access$2200(android.text.StaticLayout$Builder)>(r34);

        $i78 = staticinvoke <android.text.StaticLayout$Builder: int access$2100(android.text.StaticLayout$Builder)>(r34);

        specialinvoke $r24.<android.text.PrecomputedText$Params: void <init>(android.text.TextPaint,android.text.TextDirectionHeuristic,int,int)>(r37, r1, $i77, $i78);

        r55 = staticinvoke <android.text.PrecomputedText: android.text.PrecomputedText$ParagraphInfo[] createMeasuredParagraphs(java.lang.CharSequence,android.text.PrecomputedText$Params,int,int,boolean)>(r36, $r24, i88, i89, 0);

        goto label23;

     label22:
        r55 = r52;

     label23:
        i98 = 0;

        r56 = null;

        r57 = r53;

        r58 = r36;

        i99 = i88;

        i100 = i89;

        r59 = r37;

     label24:
        $i101 = lengthof r55;

        if i98 >= $i101 goto label76;

        if i98 != 0 goto label25;

        i102 = i99;

        goto label26;

     label25:
        $i22 = i98 - 1;

        $r13 = r55[$i22];

        i102 = $r13.<android.text.PrecomputedText$ParagraphInfo: int paragraphEnd>;

     label26:
        $r14 = r55[i98];

        i103 = $r14.<android.text.PrecomputedText$ParagraphInfo: int paragraphEnd>;

        i105 = i0;

        i106 = i0;

        if r57 == null goto label37;

        $r19 = staticinvoke <android.text.StaticLayout: java.lang.Object[] getParagraphSpans(android.text.Spanned,int,int,java.lang.Class)>(r57, i102, i103, class "Landroid/text/style/LeadingMarginSpan;");

        r61 = (android.text.style.LeadingMarginSpan[]) $r19;

        i107 = 0;

        i108 = i99;

        i109 = 1;

     label27:
        r62 = r59;

        $i67 = lengthof r61;

        if i107 >= $i67 goto label29;

        r63 = r61[i107];

        $r22 = r61[i107];

        $i74 = interfaceinvoke $r22.<android.text.style.LeadingMarginSpan: int getLeadingMargin(boolean)>(1);

        i105 = i105 - $i74;

        $r23 = r61[i107];

        $i75 = interfaceinvoke $r23.<android.text.style.LeadingMarginSpan: int getLeadingMargin(boolean)>(0);

        i110 = i106 - $i75;

        i111 = i109;

        $z10 = r63 instanceof android.text.style.LeadingMarginSpan$LeadingMarginSpan2;

        if $z10 == 0 goto label28;

        r64 = (android.text.style.LeadingMarginSpan$LeadingMarginSpan2) r63;

        $i76 = interfaceinvoke r64.<android.text.style.LeadingMarginSpan$LeadingMarginSpan2: int getLeadingMarginLineCount()>();

        i111 = staticinvoke <java.lang.Math: int max(int,int)>(i109, $i76);

     label28:
        i107 = i107 + 1;

        r59 = r62;

        i109 = i111;

        i106 = i110;

        goto label27;

     label29:
        r65 = r58;

        $r20 = staticinvoke <android.text.StaticLayout: java.lang.Object[] getParagraphSpans(android.text.Spanned,int,int,java.lang.Class)>(r57, i102, i103, class "Landroid/text/style/LineHeightSpan;");

        r66 = (android.text.style.LineHeightSpan[]) $r20;

        $i68 = lengthof r66;

        if $i68 != 0 goto label30;

        i113 = i105;

        r66 = null;

        i114 = i106;

        i115 = i108;

        r67 = r56;

        goto label38;

     label30:
        if r56 == null goto label31;

        r67 = r56;

        $i73 = lengthof r56;

        $i72 = lengthof r66;

        if $i73 >= $i72 goto label32;

     label31:
        $i69 = lengthof r66;

        r67 = staticinvoke <com.android.internal.util.ArrayUtils: int[] newUnpaddedIntArray(int)>($i69);

     label32:
        i116 = 0;

     label33:
        $i117 = lengthof r66;

        if i116 >= $i117 goto label36;

        $r21 = r66[i116];

        i118 = interfaceinvoke r57.<android.text.Spanned: int getSpanStart(java.lang.Object)>($r21);

        if i118 >= i102 goto label34;

        $i70 = virtualinvoke r0.<android.text.StaticLayout: int getLineForOffset(int)>(i118);

        $i71 = virtualinvoke r0.<android.text.StaticLayout: int getLineTop(int)>($i70);

        r67[i116] = $i71;

        goto label35;

     label34:
        r67[i116] = i92;

     label35:
        i116 = i116 + 1;

        goto label33;

     label36:
        i113 = i105;

        i114 = i106;

        i115 = i108;

        goto label38;

     label37:
        r65 = r58;

        r66 = null;

        r67 = r56;

        i115 = i99;

        r62 = r59;

        i109 = 1;

        i113 = i0;

        i114 = i0;

     label38:
        if r57 == null goto label42;

        $r17 = staticinvoke <android.text.StaticLayout: java.lang.Object[] getParagraphSpans(android.text.Spanned,int,int,java.lang.Class)>(r57, i102, i103, class "Landroid/text/style/TabStopSpan;");

        r68 = (android.text.style.TabStopSpan[]) $r17;

        $i62 = lengthof r68;

        if $i62 <= 0 goto label41;

        $i63 = lengthof r68;

        r69 = newarray (float)[$i63];

        i121 = 0;

     label39:
        $i64 = lengthof r68;

        if i121 >= $i64 goto label40;

        $r18 = r68[i121];

        $i66 = interfaceinvoke $r18.<android.text.style.TabStopSpan: int getTabStop()>();

        $f11 = (float) $i66;

        r69[i121] = $f11;

        i121 = i121 + 1;

        goto label39;

     label40:
        $i65 = lengthof r69;

        staticinvoke <java.util.Arrays: void sort(float[],int,int)>(r69, 0, $i65);

        goto label43;

     label41:
        goto label42;

     label42:
        r69 = null;

     label43:
        $r70 = r55[i98];

        r3 = $r70.<android.text.PrecomputedText$ParagraphInfo: android.text.MeasuredParagraph measured>;

        r4 = virtualinvoke r3.<android.text.MeasuredParagraph: char[] getChars()>();

        $r71 = virtualinvoke r3.<android.text.MeasuredParagraph: android.text.AutoGrowArray$IntArray getSpanEndCache()>();

        r5 = virtualinvoke $r71.<android.text.AutoGrowArray$IntArray: int[] getRawArray()>();

        $r72 = virtualinvoke r3.<android.text.MeasuredParagraph: android.text.AutoGrowArray$IntArray getFontMetrics()>();

        r6 = virtualinvoke $r72.<android.text.AutoGrowArray$IntArray: int[] getRawArray()>();

        f12 = (float) i114;

        r73 = r51;

        virtualinvoke r51.<android.graphics.text.LineBreaker$ParagraphConstraints: void setWidth(float)>(f12);

        $f13 = (float) i113;

        virtualinvoke r51.<android.graphics.text.LineBreaker$ParagraphConstraints: void setIndent(float,int)>($f13, i109);

        virtualinvoke r51.<android.graphics.text.LineBreaker$ParagraphConstraints: void setTabStops(float[],float)>(r69, 20.0F);

        r74 = virtualinvoke r3.<android.text.MeasuredParagraph: android.graphics.text.MeasuredText getMeasuredText()>();

        i122 = r0.<android.text.StaticLayout: int mLineCount>;

        r75 = r50;

        r76 = virtualinvoke r50.<android.graphics.text.LineBreaker: android.graphics.text.LineBreaker$Result computeLineBreaks(android.graphics.text.MeasuredText,android.graphics.text.LineBreaker$ParagraphConstraints,int)>(r74, r51, i122);

        i123 = virtualinvoke r76.<android.graphics.text.LineBreaker$Result: int getLineCount()>();

        if i90 >= i123 goto label44;

        r38 = newarray (int)[i123];

        r39 = newarray (float)[i123];

        r40 = newarray (float)[i123];

        r41 = newarray (float)[i123];

        r42 = newarray (boolean)[i123];

        r43 = newarray (int)[i123];

        i90 = i123;

        goto label44;

     label44:
        i124 = 0;

     label45:
        if i124 >= i123 goto label46;

        $i58 = virtualinvoke r76.<android.graphics.text.LineBreaker$Result: int getLineBreakOffset(int)>(i124);

        r38[i124] = $i58;

        $f8 = virtualinvoke r76.<android.graphics.text.LineBreaker$Result: float getLineWidth(int)>(i124);

        r39[i124] = $f8;

        $f9 = virtualinvoke r76.<android.graphics.text.LineBreaker$Result: float getLineAscent(int)>(i124);

        r40[i124] = $f9;

        $f10 = virtualinvoke r76.<android.graphics.text.LineBreaker$Result: float getLineDescent(int)>(i124);

        r41[i124] = $f10;

        $z9 = virtualinvoke r76.<android.graphics.text.LineBreaker$Result: boolean hasLineTab(int)>(i124);

        r42[i124] = $z9;

        $i59 = virtualinvoke r76.<android.graphics.text.LineBreaker$Result: int getStartLineHyphenEdit(int)>(i124);

        $i60 = virtualinvoke r76.<android.graphics.text.LineBreaker$Result: int getEndLineHyphenEdit(int)>(i124);

        $i61 = staticinvoke <android.text.StaticLayout: int packHyphenEdit(int,int)>($i59, $i60);

        r43[i124] = $i61;

        i124 = i124 + 1;

        goto label45;

     label46:
        $i24 = r0.<android.text.StaticLayout: int mMaximumVisibleLineCount>;

        $i23 = r0.<android.text.StaticLayout: int mLineCount>;

        i125 = $i24 - $i23;

        if r2 == null goto label48;

        $r15 = <android.text.TextUtils$TruncateAt: android.text.TextUtils$TruncateAt END>;

        if r2 == $r15 goto label47;

        $i57 = r0.<android.text.StaticLayout: int mMaximumVisibleLineCount>;

        if $i57 != 1 goto label48;

        $r16 = <android.text.TextUtils$TruncateAt: android.text.TextUtils$TruncateAt MARQUEE>;

        if r2 == $r16 goto label48;

     label47:
        z14 = 1;

        goto label49;

     label48:
        z14 = 0;

     label49:
        if i125 <= 0 goto label56;

        if i125 >= i123 goto label56;

        if z14 == 0 goto label56;

        f14 = 0.0F;

        z15 = 0;

        i126 = i125 - 1;

     label50:
        if i126 >= i123 goto label55;

        $i55 = i123 - 1;

        if i126 != $i55 goto label51;

        $f7 = r39[i126];

        f14 = f14 + $f7;

        goto label54;

     label51:
        if i126 != 0 goto label52;

        i127 = 0;

        f15 = f14;

        goto label53;

     label52:
        $i56 = i126 - 1;

        i127 = r38[$i56];

        f15 = f14;

     label53:
        f14 = f15;

        $i128 = r38[i126];

        if i127 >= $i128 goto label54;

        $f6 = virtualinvoke r3.<android.text.MeasuredParagraph: float getCharWidthAt(int)>(i127);

        f15 = f15 + $f6;

        i127 = i127 + 1;

        goto label53;

     label54:
        $z8 = r42[i126];

        z15 = z15 | $z8;

        i126 = i126 + 1;

        goto label50;

     label55:
        $i52 = i125 - 1;

        $i50 = i123 - 1;

        $i51 = r38[$i50];

        r38[$i52] = $i51;

        $i53 = i125 - 1;

        r39[$i53] = f14;

        $i54 = i125 - 1;

        r42[$i54] = z15;

        i129 = i125;

        r79 = r57;

        goto label57;

     label56:
        r79 = r57;

        i129 = i123;

     label57:
        i133 = 0;

        i134 = 0;

        i135 = 0;

        i136 = 0;

        i138 = i102;

        r81 = r44;

        r82 = r55;

        r83 = r65;

        i99 = i115;

        r84 = r62;

        r85 = r73;

        i139 = i98;

        i140 = i92;

        i141 = 0;

        i144 = i103;

        i145 = 0;

        i146 = 0;

        i147 = i102;

     label58:
        if i138 >= i144 goto label74;

        i2 = r5[i136];

        $i25 = i135 * 4;

        $i26 = $i25 + 0;

        i148 = r6[$i26];

        r88 = r81;

        r81.<android.graphics.Paint$FontMetricsInt: int top> = i148;

        $i27 = i135 * 4;

        $i28 = $i27 + 1;

        $i29 = r6[$i28];

        r81.<android.graphics.Paint$FontMetricsInt: int bottom> = $i29;

        $i30 = i135 * 4;

        $i31 = $i30 + 2;

        $i32 = r6[$i31];

        r81.<android.graphics.Paint$FontMetricsInt: int ascent> = $i32;

        $i33 = i135 * 4;

        $i34 = $i33 + 3;

        $i35 = r6[$i34];

        r81.<android.graphics.Paint$FontMetricsInt: int descent> = $i35;

        i150 = i146;

        $i36 = r81.<android.graphics.Paint$FontMetricsInt: int top>;

        if $i36 >= i146 goto label59;

        i150 = r81.<android.graphics.Paint$FontMetricsInt: int top>;

     label59:
        i151 = i133;

        $i37 = r88.<android.graphics.Paint$FontMetricsInt: int ascent>;

        if $i37 >= i133 goto label60;

        i151 = r88.<android.graphics.Paint$FontMetricsInt: int ascent>;

     label60:
        i152 = i134;

        $i38 = r88.<android.graphics.Paint$FontMetricsInt: int descent>;

        if $i38 <= i134 goto label61;

        i152 = r88.<android.graphics.Paint$FontMetricsInt: int descent>;

     label61:
        $i39 = r88.<android.graphics.Paint$FontMetricsInt: int bottom>;

        if $i39 <= i145 goto label62;

        i153 = r88.<android.graphics.Paint$FontMetricsInt: int bottom>;

        i154 = i141;

        i155 = i153;

        goto label63;

     label62:
        i155 = i145;

        i154 = i141;

     label63:
        if i154 >= i129 goto label64;

        $i48 = r38[i154];

        $i49 = i102 + $i48;

        if $i49 >= i138 goto label64;

        i154 = i154 + 1;

        goto label63;

     label64:
        i157 = i150;

        i158 = i140;

        i159 = i155;

        i161 = i147;

        i162 = i99;

        r90 = r85;

        i165 = i100;

        i167 = i151;

        i168 = i144;

        i170 = i152;

     label65:
        if i154 >= i129 goto label73;

        $i40 = r38[i154];

        $i41 = $i40 + i102;

        if $i41 > i2 goto label73;

        $i42 = r38[i154];

        i171 = i102 + $i42;

        if i171 >= i165 goto label66;

        z19 = 1;

        goto label67;

     label66:
        z19 = 0;

     label67:
        if z2 == 0 goto label68;

        $f5 = r40[i154];

        $i47 = staticinvoke <java.lang.Math: int round(float)>($f5);

        i167 = staticinvoke <java.lang.Math: int min(int,int)>(i167, $i47);

        goto label68;

     label68:
        if z2 == 0 goto label69;

        $f4 = r41[i154];

        $i46 = staticinvoke <java.lang.Math: int round(float)>($f4);

        i170 = staticinvoke <java.lang.Math: int max(int,int)>(i170, $i46);

        goto label69;

     label69:
        $z6 = r42[i154];

        $i43 = r43[i154];

        $f3 = r39[i154];

        i158 = specialinvoke r0.<android.text.StaticLayout: int out(java.lang.CharSequence,int,int,int,int,int,int,int,float,float,android.text.style.LineHeightSpan[],int[],android.graphics.Paint$FontMetricsInt,boolean,int,boolean,android.text.MeasuredParagraph,int,boolean,boolean,boolean,char[],int,android.text.TextUtils$TruncateAt,float,float,android.text.TextPaint,boolean)>(r83, i161, i171, i167, i170, i157, i159, i158, f0, f1, r66, r67, r88, $z6, $i43, z11, r3, i165, z0, z1, z3, r4, i102, r2, f2, $f3, r84, z19);

        if i171 >= i2 goto label70;

        i157 = r88.<android.graphics.Paint$FontMetricsInt: int top>;

        i159 = r88.<android.graphics.Paint$FontMetricsInt: int bottom>;

        i167 = r88.<android.graphics.Paint$FontMetricsInt: int ascent>;

        i170 = r88.<android.graphics.Paint$FontMetricsInt: int descent>;

        goto label71;

     label70:
        i180 = (int) 0;

        i170 = i180;

        i181 = (int) 0;

        i167 = i181;

        i182 = (int) 0;

        i159 = i182;

        i183 = (int) 0;

        i157 = i183;

     label71:
        i161 = i171;

        $i45 = r0.<android.text.StaticLayout: int mLineCount>;

        $i44 = r0.<android.text.StaticLayout: int mMaximumVisibleLineCount>;

        if $i45 < $i44 goto label72;

        $z7 = r0.<android.text.StaticLayout: boolean mEllipsized>;

        if $z7 == 0 goto label72;

        return;

     label72:
        i154 = i154 + 1;

        goto label65;

     label73:
        i135 = i135 + 1;

        i136 = i136 + 1;

        i146 = i157;

        i100 = i165;

        i147 = i161;

        i145 = i159;

        i144 = i168;

        i133 = i167;

        i138 = i2;

        i134 = i170;

        i141 = i154;

        i140 = i158;

        r85 = r90;

        i99 = i162;

        r81 = r88;

        goto label58;

     label74:
        r95 = r0;

        if i144 != i100 goto label75;

        i179 = i140;

        goto label77;

     label75:
        i98 = i139 + 1;

        r57 = r79;

        r51 = r85;

        r56 = r67;

        r55 = r82;

        r59 = r84;

        r58 = r83;

        i92 = i140;

        r44 = r81;

        r50 = r75;

        goto label24;

     label76:
        r81 = r44;

        i179 = i92;

        r83 = r58;

        r84 = r59;

        r95 = r0;

     label77:
        if i100 == i99 goto label79;

        $i20 = i100 - 1;

        $c21 = interfaceinvoke r83.<java.lang.CharSequence: char charAt(int)>($i20);

        if $c21 != 10 goto label78;

        goto label79;

     label78:
        goto label80;

     label79:
        $i13 = r95.<android.text.StaticLayout: int mLineCount>;

        $i12 = r95.<android.text.StaticLayout: int mMaximumVisibleLineCount>;

        if $i13 >= $i12 goto label80;

        r99 = staticinvoke <android.text.MeasuredParagraph: android.text.MeasuredParagraph buildForBidi(java.lang.CharSequence,int,int,android.text.TextDirectionHeuristic,android.text.MeasuredParagraph)>(r83, i100, i100, r1, null);

        virtualinvoke r84.<android.text.TextPaint: int getFontMetricsInt(android.graphics.Paint$FontMetricsInt)>(r81);

        $i18 = r81.<android.graphics.Paint$FontMetricsInt: int ascent>;

        $i17 = r81.<android.graphics.Paint$FontMetricsInt: int descent>;

        $i16 = r81.<android.graphics.Paint$FontMetricsInt: int top>;

        $i15 = r81.<android.graphics.Paint$FontMetricsInt: int bottom>;

        specialinvoke r0.<android.text.StaticLayout: int out(java.lang.CharSequence,int,int,int,int,int,int,int,float,float,android.text.style.LineHeightSpan[],int[],android.graphics.Paint$FontMetricsInt,boolean,int,boolean,android.text.MeasuredParagraph,int,boolean,boolean,boolean,char[],int,android.text.TextUtils$TruncateAt,float,float,android.text.TextPaint,boolean)>(r83, i100, i100, $i18, $i17, $i16, $i15, i179, f0, f1, null, null, r81, 0, 0, z11, r99, i100, z0, z1, z3, null, i99, r2, f2, 0.0F, r84, 0);

        goto label80;

     label80:
        return;
    }

    public int getBottomPadding()
    {
        android.text.StaticLayout r0;
        int $i0;

        r0 := @this: android.text.StaticLayout;

        $i0 = r0.<android.text.StaticLayout: int mBottomPadding>;

        return $i0;
    }

    public int getEllipsisCount(int)
    {
        android.text.StaticLayout r0;
        int i0, i1, $i2, $i3, $i4;
        int[] $r1;

        r0 := @this: android.text.StaticLayout;

        i0 := @parameter0: int;

        i1 = r0.<android.text.StaticLayout: int mColumns>;

        if i1 >= 7 goto label1;

        return 0;

     label1:
        $r1 = r0.<android.text.StaticLayout: int[] mLines>;

        $i2 = i1 * i0;

        $i3 = $i2 + 6;

        $i4 = $r1[$i3];

        return $i4;
    }

    public int getEllipsisStart(int)
    {
        android.text.StaticLayout r0;
        int i0, i1, $i2, $i3, $i4;
        int[] $r1;

        r0 := @this: android.text.StaticLayout;

        i0 := @parameter0: int;

        i1 = r0.<android.text.StaticLayout: int mColumns>;

        if i1 >= 7 goto label1;

        return 0;

     label1:
        $r1 = r0.<android.text.StaticLayout: int[] mLines>;

        $i2 = i1 * i0;

        $i3 = $i2 + 5;

        $i4 = $r1[$i3];

        return $i4;
    }

    public int getEllipsizedWidth()
    {
        android.text.StaticLayout r0;
        int $i0;

        r0 := @this: android.text.StaticLayout;

        $i0 = r0.<android.text.StaticLayout: int mEllipsizedWidth>;

        return $i0;
    }

    public int getEndHyphenEdit(int)
    {
        android.text.StaticLayout r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6;
        int[] $r1;

        r0 := @this: android.text.StaticLayout;

        i0 := @parameter0: int;

        $r1 = r0.<android.text.StaticLayout: int[] mLines>;

        $i1 = r0.<android.text.StaticLayout: int mColumns>;

        $i2 = $i1 * i0;

        $i3 = $i2 + 4;

        $i4 = $r1[$i3];

        $i5 = $i4 & 255;

        $i6 = staticinvoke <android.text.StaticLayout: int unpackEndHyphenEdit(int)>($i5);

        return $i6;
    }

    public int getHeight(boolean)
    {
        android.text.StaticLayout r0;
        boolean z0, $z1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, i8;
        java.lang.StringBuilder $r2;
        java.lang.String $r7;

        r0 := @this: android.text.StaticLayout;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        $i3 = r0.<android.text.StaticLayout: int mLineCount>;

        $i2 = r0.<android.text.StaticLayout: int mMaximumVisibleLineCount>;

        if $i3 <= $i2 goto label1;

        $i4 = r0.<android.text.StaticLayout: int mMaxLineHeight>;

        if $i4 != -1 goto label1;

        $z1 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("StaticLayout", 5);

        if $z1 == 0 goto label1;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("maxLineHeight should not be -1.  maxLines:");

        $i5 = r0.<android.text.StaticLayout: int mMaximumVisibleLineCount>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" lineCount:");

        $i6 = r0.<android.text.StaticLayout: int mLineCount>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        $r7 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("StaticLayout", $r7);

     label1:
        if z0 == 0 goto label2;

        $i1 = r0.<android.text.StaticLayout: int mLineCount>;

        $i0 = r0.<android.text.StaticLayout: int mMaximumVisibleLineCount>;

        if $i1 <= $i0 goto label2;

        i8 = r0.<android.text.StaticLayout: int mMaxLineHeight>;

        if i8 == -1 goto label2;

        goto label3;

     label2:
        i8 = specialinvoke r0.<android.text.Layout: int getHeight()>();

     label3:
        return i8;
    }

    public int getIndentAdjust(int, android.text.Layout$Alignment)
    {
        android.text.StaticLayout r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, i18, i19;
        android.text.Layout$Alignment $r2, $r3, $r4, r10;
        java.lang.StringBuilder $r5;
        java.lang.AssertionError $r8;
        java.lang.String $r9;
        int[] r11, r12, r13, r14;

        r0 := @this: android.text.StaticLayout;

        i0 := @parameter0: int;

        r10 := @parameter1: android.text.Layout$Alignment;

        $r2 = <android.text.Layout$Alignment: android.text.Layout$Alignment ALIGN_LEFT>;

        if r10 != $r2 goto label2;

        r11 = r0.<android.text.StaticLayout: int[] mLeftIndents>;

        if r11 != null goto label1;

        return 0;

     label1:
        $i14 = lengthof r11;

        $i15 = $i14 - 1;

        $i16 = staticinvoke <java.lang.Math: int min(int,int)>(i0, $i15);

        $i17 = r11[$i16];

        return $i17;

     label2:
        $r3 = <android.text.Layout$Alignment: android.text.Layout$Alignment ALIGN_RIGHT>;

        if r10 != $r3 goto label4;

        r12 = r0.<android.text.StaticLayout: int[] mRightIndents>;

        if r12 != null goto label3;

        return 0;

     label3:
        $i9 = lengthof r12;

        $i10 = $i9 - 1;

        $i11 = staticinvoke <java.lang.Math: int min(int,int)>(i0, $i10);

        $i12 = r12[$i11];

        $i13 = neg $i12;

        return $i13;

     label4:
        $r4 = <android.text.Layout$Alignment: android.text.Layout$Alignment ALIGN_CENTER>;

        if r10 != $r4 goto label7;

        i18 = 0;

        r13 = r0.<android.text.StaticLayout: int[] mLeftIndents>;

        if r13 == null goto label5;

        $i6 = lengthof r13;

        $i7 = $i6 - 1;

        $i8 = staticinvoke <java.lang.Math: int min(int,int)>(i0, $i7);

        i18 = r13[$i8];

     label5:
        i19 = 0;

        r14 = r0.<android.text.StaticLayout: int[] mRightIndents>;

        if r14 == null goto label6;

        $i3 = lengthof r14;

        $i4 = $i3 - 1;

        $i5 = staticinvoke <java.lang.Math: int min(int,int)>(i0, $i4);

        i19 = r14[$i5];

     label6:
        $i1 = i18 - i19;

        $i2 = $i1 >> 1;

        return $i2;

     label7:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unhandled alignment ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r10);

        $r8 = new java.lang.AssertionError;

        $r9 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.AssertionError: void <init>(java.lang.Object)>($r9);

        throw $r8;
    }

    public boolean getLineContainsTab(int)
    {
        android.text.StaticLayout r0;
        int i0, i1, $i2, $i3, $i4, $i5;
        int[] r1;
        boolean z0;

        r0 := @this: android.text.StaticLayout;

        i0 := @parameter0: int;

        r1 = r0.<android.text.StaticLayout: int[] mLines>;

        i1 = r0.<android.text.StaticLayout: int mColumns>;

        z0 = 0;

        $i2 = i1 * i0;

        $i3 = $i2 + 0;

        $i4 = r1[$i3];

        $i5 = $i4 & 536870912;

        if $i5 == 0 goto label1;

        z0 = 1;

     label1:
        return z0;
    }

    public int getLineCount()
    {
        android.text.StaticLayout r0;
        int $i0;

        r0 := @this: android.text.StaticLayout;

        $i0 = r0.<android.text.StaticLayout: int mLineCount>;

        return $i0;
    }

    public int getLineDescent(int)
    {
        android.text.StaticLayout r0;
        int i0, $i1, $i2, $i3, $i4;
        int[] $r1;

        r0 := @this: android.text.StaticLayout;

        i0 := @parameter0: int;

        $r1 = r0.<android.text.StaticLayout: int[] mLines>;

        $i1 = r0.<android.text.StaticLayout: int mColumns>;

        $i2 = $i1 * i0;

        $i3 = $i2 + 2;

        $i4 = $r1[$i3];

        return $i4;
    }

    public final android.text.Layout$Directions getLineDirections(int)
    {
        android.text.StaticLayout r0;
        int i0, $i1;
        java.lang.ArrayIndexOutOfBoundsException $r1;
        android.text.Layout$Directions[] $r2;
        android.text.Layout$Directions $r3;

        r0 := @this: android.text.StaticLayout;

        i0 := @parameter0: int;

        $i1 = virtualinvoke r0.<android.text.StaticLayout: int getLineCount()>();

        if i0 > $i1 goto label1;

        $r2 = r0.<android.text.StaticLayout: android.text.Layout$Directions[] mLineDirections>;

        $r3 = $r2[i0];

        return $r3;

     label1:
        $r1 = new java.lang.ArrayIndexOutOfBoundsException;

        specialinvoke $r1.<java.lang.ArrayIndexOutOfBoundsException: void <init>()>();

        throw $r1;
    }

    public int getLineExtra(int)
    {
        android.text.StaticLayout r0;
        int i0, $i1, $i2, $i3, $i4;
        int[] $r1;

        r0 := @this: android.text.StaticLayout;

        i0 := @parameter0: int;

        $r1 = r0.<android.text.StaticLayout: int[] mLines>;

        $i1 = r0.<android.text.StaticLayout: int mColumns>;

        $i2 = $i1 * i0;

        $i3 = $i2 + 3;

        $i4 = $r1[$i3];

        return $i4;
    }

    public int getLineForVertical(int)
    {
        android.text.StaticLayout r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, i7, i8, $i9;
        int[] r1;

        r0 := @this: android.text.StaticLayout;

        i0 := @parameter0: int;

        i7 = r0.<android.text.StaticLayout: int mLineCount>;

        i8 = -1;

        r1 = r0.<android.text.StaticLayout: int[] mLines>;

     label1:
        $i9 = i7 - i8;

        if $i9 <= 1 goto label3;

        $i2 = i7 + i8;

        i1 = $i2 >> 1;

        $i3 = r0.<android.text.StaticLayout: int mColumns>;

        $i4 = $i3 * i1;

        $i5 = $i4 + 1;

        $i6 = r1[$i5];

        if $i6 <= i0 goto label2;

        i7 = i1;

        goto label1;

     label2:
        i8 = i1;

        goto label1;

     label3:
        if i8 >= 0 goto label4;

        return 0;

     label4:
        return i8;
    }

    public int getLineStart(int)
    {
        android.text.StaticLayout r0;
        int i0, $i1, $i2, $i3, $i4, $i5;
        int[] $r1;

        r0 := @this: android.text.StaticLayout;

        i0 := @parameter0: int;

        $r1 = r0.<android.text.StaticLayout: int[] mLines>;

        $i1 = r0.<android.text.StaticLayout: int mColumns>;

        $i2 = $i1 * i0;

        $i3 = $i2 + 0;

        $i4 = $r1[$i3];

        $i5 = $i4 & 536870911;

        return $i5;
    }

    public int getLineTop(int)
    {
        android.text.StaticLayout r0;
        int i0, $i1, $i2, $i3, $i4;
        int[] $r1;

        r0 := @this: android.text.StaticLayout;

        i0 := @parameter0: int;

        $r1 = r0.<android.text.StaticLayout: int[] mLines>;

        $i1 = r0.<android.text.StaticLayout: int mColumns>;

        $i2 = $i1 * i0;

        $i3 = $i2 + 1;

        $i4 = $r1[$i3];

        return $i4;
    }

    public int getParagraphDirection(int)
    {
        android.text.StaticLayout r0;
        int i0, $i1, $i2, $i3, $i4, $i5;
        int[] $r1;

        r0 := @this: android.text.StaticLayout;

        i0 := @parameter0: int;

        $r1 = r0.<android.text.StaticLayout: int[] mLines>;

        $i1 = r0.<android.text.StaticLayout: int mColumns>;

        $i2 = $i1 * i0;

        $i3 = $i2 + 0;

        $i4 = $r1[$i3];

        $i5 = $i4 >> 30;

        return $i5;
    }

    public int getStartHyphenEdit(int)
    {
        android.text.StaticLayout r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6;
        int[] $r1;

        r0 := @this: android.text.StaticLayout;

        i0 := @parameter0: int;

        $r1 = r0.<android.text.StaticLayout: int[] mLines>;

        $i1 = r0.<android.text.StaticLayout: int mColumns>;

        $i2 = $i1 * i0;

        $i3 = $i2 + 4;

        $i4 = $r1[$i3];

        $i5 = $i4 & 255;

        $i6 = staticinvoke <android.text.StaticLayout: int unpackStartHyphenEdit(int)>($i5);

        return $i6;
    }

    public int getTopPadding()
    {
        android.text.StaticLayout r0;
        int $i0;

        r0 := @this: android.text.StaticLayout;

        $i0 = r0.<android.text.StaticLayout: int mTopPadding>;

        return $i0;
    }

    public static void <clinit>()
    {
        <android.text.StaticLayout: int TOP> = 1;

        <android.text.StaticLayout: java.lang.String TAG> = "StaticLayout";

        <android.text.StaticLayout: int TAB_MASK> = 536870912;

        <android.text.StaticLayout: float TAB_INCREMENT> = 20.0F;

        <android.text.StaticLayout: int TAB> = 0;

        <android.text.StaticLayout: int START_MASK> = 536870911;

        <android.text.StaticLayout: int START_HYPHEN_MASK> = 24;

        <android.text.StaticLayout: int START_HYPHEN_BITS_SHIFT> = 3;

        <android.text.StaticLayout: int START> = 0;

        <android.text.StaticLayout: int HYPHEN_MASK> = 255;

        <android.text.StaticLayout: int HYPHEN> = 4;

        <android.text.StaticLayout: double EXTRA_ROUNDING> = 0.5;

        <android.text.StaticLayout: int EXTRA> = 3;

        <android.text.StaticLayout: int END_HYPHEN_MASK> = 7;

        <android.text.StaticLayout: int ELLIPSIS_START> = 5;

        <android.text.StaticLayout: int ELLIPSIS_COUNT> = 6;

        <android.text.StaticLayout: int DIR_SHIFT> = 30;

        <android.text.StaticLayout: int DIR> = 0;

        <android.text.StaticLayout: int DESCENT> = 2;

        <android.text.StaticLayout: int DEFAULT_MAX_LINE_HEIGHT> = -1;

        <android.text.StaticLayout: int COLUMNS_NORMAL> = 5;

        <android.text.StaticLayout: int COLUMNS_ELLIPSIZE> = 7;

        <android.text.StaticLayout: char CHAR_NEW_LINE> = 10;

        return;
    }
}
