final class android.text.TextLine$DecorationInfo extends java.lang.Object
{
    public int end;
    public boolean isStrikeThruText;
    public boolean isUnderlineText;
    public int start;
    public int underlineColor;
    public float underlineThickness;

    private void <init>()
    {
        android.text.TextLine$DecorationInfo r0;

        r0 := @this: android.text.TextLine$DecorationInfo;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.text.TextLine$DecorationInfo: int start> = -1;

        r0.<android.text.TextLine$DecorationInfo: int end> = -1;

        return;
    }

    void <init>(android.text.TextLine$1)
    {
        android.text.TextLine$DecorationInfo r0;
        android.text.TextLine$1 r1;

        r0 := @this: android.text.TextLine$DecorationInfo;

        r1 := @parameter0: android.text.TextLine$1;

        specialinvoke r0.<android.text.TextLine$DecorationInfo: void <init>()>();

        return;
    }

    public android.text.TextLine$DecorationInfo copyInfo()
    {
        android.text.TextLine$DecorationInfo r0, $r2;
        boolean $z0, $z1;
        int $i0;
        float $f0;

        r0 := @this: android.text.TextLine$DecorationInfo;

        $r2 = new android.text.TextLine$DecorationInfo;

        specialinvoke $r2.<android.text.TextLine$DecorationInfo: void <init>()>();

        $z0 = r0.<android.text.TextLine$DecorationInfo: boolean isStrikeThruText>;

        $r2.<android.text.TextLine$DecorationInfo: boolean isStrikeThruText> = $z0;

        $z1 = r0.<android.text.TextLine$DecorationInfo: boolean isUnderlineText>;

        $r2.<android.text.TextLine$DecorationInfo: boolean isUnderlineText> = $z1;

        $i0 = r0.<android.text.TextLine$DecorationInfo: int underlineColor>;

        $r2.<android.text.TextLine$DecorationInfo: int underlineColor> = $i0;

        $f0 = r0.<android.text.TextLine$DecorationInfo: float underlineThickness>;

        $r2.<android.text.TextLine$DecorationInfo: float underlineThickness> = $f0;

        return $r2;
    }

    public boolean hasDecoration()
    {
        android.text.TextLine$DecorationInfo r0;
        boolean $z0, $z1, z2;
        int $i0;

        r0 := @this: android.text.TextLine$DecorationInfo;

        $z0 = r0.<android.text.TextLine$DecorationInfo: boolean isStrikeThruText>;

        if $z0 != 0 goto label2;

        $z1 = r0.<android.text.TextLine$DecorationInfo: boolean isUnderlineText>;

        if $z1 != 0 goto label2;

        $i0 = r0.<android.text.TextLine$DecorationInfo: int underlineColor>;

        if $i0 == 0 goto label1;

        goto label2;

     label1:
        z2 = 0;

        goto label3;

     label2:
        z2 = 1;

     label3:
        return z2;
    }
}
