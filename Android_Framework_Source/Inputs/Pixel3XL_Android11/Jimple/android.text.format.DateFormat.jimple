public class android.text.format.DateFormat extends java.lang.Object
{
    public static final char AM_PM;
    public static final char CAPITAL_AM_PM;
    public static final char DATE;
    public static final char DAY;
    public static final char HOUR;
    public static final char HOUR_OF_DAY;
    public static final char MINUTE;
    public static final char MONTH;
    public static final char QUOTE;
    public static final char SECONDS;
    public static final char STANDALONE_MONTH;
    public static final char TIME_ZONE;
    public static final char YEAR;
    private static boolean sIs24Hour;
    private static java.util.Locale sIs24HourLocale;
    private static final java.lang.Object sLocaleLock;

    static void <clinit>()
    {
        java.lang.Object $r0;

        <android.text.format.DateFormat: char YEAR> = 121;

        <android.text.format.DateFormat: char TIME_ZONE> = 122;

        <android.text.format.DateFormat: char STANDALONE_MONTH> = 76;

        <android.text.format.DateFormat: char SECONDS> = 115;

        <android.text.format.DateFormat: char QUOTE> = 39;

        <android.text.format.DateFormat: char MONTH> = 77;

        <android.text.format.DateFormat: char MINUTE> = 109;

        <android.text.format.DateFormat: char HOUR_OF_DAY> = 107;

        <android.text.format.DateFormat: char HOUR> = 104;

        <android.text.format.DateFormat: char DAY> = 69;

        <android.text.format.DateFormat: char DATE> = 100;

        <android.text.format.DateFormat: char CAPITAL_AM_PM> = 65;

        <android.text.format.DateFormat: char AM_PM> = 97;

        $r0 = new java.lang.Object;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        <android.text.format.DateFormat: java.lang.Object sLocaleLock> = $r0;

        return;
    }

    public void <init>()
    {
        android.text.format.DateFormat r0;

        r0 := @this: android.text.format.DateFormat;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static int appendQuotedText(android.text.SpannableStringBuilder, int)
    {
        android.text.SpannableStringBuilder r0;
        int $i0, $i1, $i3, $i4, $i5, $i7, $i8, $i10, i11, i12, i13, i14;
        char $c2, $c6, $c9;

        r0 := @parameter0: android.text.SpannableStringBuilder;

        i11 := @parameter1: int;

        i12 = virtualinvoke r0.<android.text.SpannableStringBuilder: int length()>();

        $i0 = i11 + 1;

        if $i0 >= i12 goto label1;

        $i8 = i11 + 1;

        $c9 = virtualinvoke r0.<android.text.SpannableStringBuilder: char charAt(int)>($i8);

        if $c9 != 39 goto label1;

        $i10 = i11 + 1;

        virtualinvoke r0.<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder delete(int,int)>(i11, $i10);

        return 1;

     label1:
        i13 = 0;

        $i1 = i11 + 1;

        virtualinvoke r0.<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder delete(int,int)>(i11, $i1);

        i14 = i12 + -1;

     label2:
        if i11 >= i14 goto label6;

        $c2 = virtualinvoke r0.<android.text.SpannableStringBuilder: char charAt(int)>(i11);

        if $c2 != 39 goto label4;

        $i3 = i11 + 1;

        if $i3 >= i14 goto label3;

        $i5 = i11 + 1;

        $c6 = virtualinvoke r0.<android.text.SpannableStringBuilder: char charAt(int)>($i5);

        if $c6 != 39 goto label3;

        $i7 = i11 + 1;

        virtualinvoke r0.<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder delete(int,int)>(i11, $i7);

        i14 = i14 + -1;

        i13 = i13 + 1;

        i11 = i11 + 1;

        goto label5;

     label3:
        $i4 = i11 + 1;

        virtualinvoke r0.<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder delete(int,int)>(i11, $i4);

        goto label6;

     label4:
        i11 = i11 + 1;

        i13 = i13 + 1;

     label5:
        goto label2;

     label6:
        return i13;
    }

    public static java.lang.CharSequence format(java.lang.CharSequence, long)
    {
        java.lang.CharSequence r0, $r2;
        long l0;
        java.util.Date $r1;

        r0 := @parameter0: java.lang.CharSequence;

        l0 := @parameter1: long;

        $r1 = new java.util.Date;

        specialinvoke $r1.<java.util.Date: void <init>(long)>(l0);

        $r2 = staticinvoke <android.text.format.DateFormat: java.lang.CharSequence format(java.lang.CharSequence,java.util.Date)>(r0, $r1);

        return $r2;
    }

    public static java.lang.CharSequence format(java.lang.CharSequence, java.util.Calendar)
    {
        java.lang.CharSequence r0;
        java.util.Calendar r1;
        libcore.icu.LocaleData r3;
        char c0, $c14;
        int i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, i15, i16, i17, i18, i19;
        android.text.SpannableStringBuilder $r4;
        java.util.Locale $r5;
        boolean $z0;
        java.lang.String $r6, r10;
        android.text.SpannedString $r7;
        java.lang.String[] $r8;

        r0 := @parameter0: java.lang.CharSequence;

        r1 := @parameter1: java.util.Calendar;

        $r4 = new android.text.SpannableStringBuilder;

        specialinvoke $r4.<android.text.SpannableStringBuilder: void <init>(java.lang.CharSequence)>(r0);

        $r5 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        r3 = staticinvoke <libcore.icu.LocaleData: libcore.icu.LocaleData get(java.util.Locale)>($r5);

        i15 = interfaceinvoke r0.<java.lang.CharSequence: int length()>();

        i16 = 0;

     label01:
        if i16 >= i15 goto label18;

        i17 = 1;

        c0 = virtualinvoke $r4.<android.text.SpannableStringBuilder: char charAt(int)>(i16);

        if c0 != 39 goto label02;

        i18 = staticinvoke <android.text.format.DateFormat: int appendQuotedText(android.text.SpannableStringBuilder,int)>($r4, i16);

        i15 = virtualinvoke $r4.<android.text.SpannableStringBuilder: int length()>();

        goto label17;

     label02:
        $i2 = i16 + i17;

        if $i2 >= i15 goto label03;

        $i13 = i16 + i17;

        $c14 = virtualinvoke $r4.<android.text.SpannableStringBuilder: char charAt(int)>($i13);

        if $c14 != c0 goto label03;

        i17 = i17 + 1;

        goto label02;

     label03:
        if c0 == 65 goto label15;

        if c0 == 69 goto label14;

        if c0 == 72 goto label13;

        if c0 == 97 goto label15;

        if c0 == 104 goto label11;

        if c0 == 107 goto label13;

        if c0 == 109 goto label10;

        if c0 == 115 goto label09;

        if c0 == 99 goto label14;

        if c0 == 100 goto label08;

        if c0 == 121 goto label07;

        if c0 == 122 goto label06;

        tableswitch(c0)
        {
            case 75: goto label11;
            case 76: goto label05;
            case 77: goto label05;
            default: goto label04;
        };

     label04:
        r10 = null;

        goto label16;

     label05:
        $i12 = virtualinvoke r1.<java.util.Calendar: int get(int)>(2);

        r10 = staticinvoke <android.text.format.DateFormat: java.lang.String getMonthString(libcore.icu.LocaleData,int,int,int)>(r3, $i12, i17, c0);

        goto label16;

     label06:
        r10 = staticinvoke <android.text.format.DateFormat: java.lang.String getTimeZoneString(java.util.Calendar,int)>(r1, i17);

        goto label16;

     label07:
        $i11 = virtualinvoke r1.<java.util.Calendar: int get(int)>(1);

        r10 = staticinvoke <android.text.format.DateFormat: java.lang.String getYearString(int,int)>($i11, i17);

        goto label16;

     label08:
        $i10 = virtualinvoke r1.<java.util.Calendar: int get(int)>(5);

        r10 = staticinvoke <android.text.format.DateFormat: java.lang.String zeroPad(int,int)>($i10, i17);

        goto label16;

     label09:
        $i9 = virtualinvoke r1.<java.util.Calendar: int get(int)>(13);

        r10 = staticinvoke <android.text.format.DateFormat: java.lang.String zeroPad(int,int)>($i9, i17);

        goto label16;

     label10:
        $i8 = virtualinvoke r1.<java.util.Calendar: int get(int)>(12);

        r10 = staticinvoke <android.text.format.DateFormat: java.lang.String zeroPad(int,int)>($i8, i17);

        goto label16;

     label11:
        i1 = virtualinvoke r1.<java.util.Calendar: int get(int)>(10);

        i19 = i1;

        if c0 != 104 goto label12;

        i19 = i1;

        if i1 != 0 goto label12;

        i19 = 12;

     label12:
        r10 = staticinvoke <android.text.format.DateFormat: java.lang.String zeroPad(int,int)>(i19, i17);

        goto label16;

     label13:
        $i7 = virtualinvoke r1.<java.util.Calendar: int get(int)>(11);

        r10 = staticinvoke <android.text.format.DateFormat: java.lang.String zeroPad(int,int)>($i7, i17);

        goto label16;

     label14:
        $i6 = virtualinvoke r1.<java.util.Calendar: int get(int)>(7);

        r10 = staticinvoke <android.text.format.DateFormat: java.lang.String getDayOfWeekString(libcore.icu.LocaleData,int,int,int)>(r3, $i6, i17, c0);

        goto label16;

     label15:
        $r8 = r3.<libcore.icu.LocaleData: java.lang.String[] amPm>;

        $i3 = virtualinvoke r1.<java.util.Calendar: int get(int)>(9);

        $i4 = $i3 + 0;

        r10 = $r8[$i4];

     label16:
        i18 = i17;

        if r10 == null goto label17;

        $i5 = i16 + i17;

        virtualinvoke $r4.<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder replace(int,int,java.lang.CharSequence)>(i16, $i5, r10);

        i18 = virtualinvoke r10.<java.lang.String: int length()>();

        i15 = virtualinvoke $r4.<android.text.SpannableStringBuilder: int length()>();

     label17:
        i16 = i16 + i18;

        goto label01;

     label18:
        $z0 = r0 instanceof android.text.Spanned;

        if $z0 == 0 goto label19;

        $r7 = new android.text.SpannedString;

        specialinvoke $r7.<android.text.SpannedString: void <init>(java.lang.CharSequence)>($r4);

        return $r7;

     label19:
        $r6 = virtualinvoke $r4.<android.text.SpannableStringBuilder: java.lang.String toString()>();

        return $r6;
    }

    public static java.lang.CharSequence format(java.lang.CharSequence, java.util.Date)
    {
        java.lang.CharSequence r0, $r4;
        java.util.Date r1;
        java.util.GregorianCalendar $r3;

        r0 := @parameter0: java.lang.CharSequence;

        r1 := @parameter1: java.util.Date;

        $r3 = new java.util.GregorianCalendar;

        specialinvoke $r3.<java.util.GregorianCalendar: void <init>()>();

        virtualinvoke $r3.<java.util.Calendar: void setTime(java.util.Date)>(r1);

        $r4 = staticinvoke <android.text.format.DateFormat: java.lang.CharSequence format(java.lang.CharSequence,java.util.Calendar)>(r0, $r3);

        return $r4;
    }

    private static java.lang.String formatZoneOffset(int, int)
    {
        java.lang.StringBuilder $r1;
        int $i0, i1, i2, i3, i4, i5;
        java.lang.String $r3, $r5, $r7;

        i1 := @parameter0: int;

        i2 := @parameter1: int;

        i3 = i1 / 1000;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        if i3 >= 0 goto label1;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder insert(int,java.lang.String)>(0, "-");

        i3 = neg i3;

        goto label2;

     label1:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder insert(int,java.lang.String)>(0, "+");

     label2:
        i4 = i3 / 3600;

        $i0 = i3 % 3600;

        i5 = $i0 / 60;

        $r3 = staticinvoke <android.text.format.DateFormat: java.lang.String zeroPad(int,int)>(i4, 2);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = staticinvoke <android.text.format.DateFormat: java.lang.String zeroPad(int,int)>(i5, 2);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }

    public static java.lang.String getBestDateTimePattern(java.util.Locale, java.lang.String)
    {
        java.util.Locale r0;
        java.lang.String r1, $r2;

        r0 := @parameter0: java.util.Locale;

        r1 := @parameter1: java.lang.String;

        $r2 = staticinvoke <libcore.icu.ICU: java.lang.String getBestDateTimePattern(java.lang.String,java.util.Locale)>(r1, r0);

        return $r2;
    }

    public static java.text.DateFormat getDateFormat(android.content.Context)
    {
        android.content.Context r0;
        android.content.res.Resources $r1;
        android.content.res.Configuration $r2;
        java.util.Locale $r3;
        java.text.DateFormat $r4;

        r0 := @parameter0: android.content.Context;

        $r1 = virtualinvoke r0.<android.content.Context: android.content.res.Resources getResources()>();

        $r2 = virtualinvoke $r1.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        $r3 = $r2.<android.content.res.Configuration: java.util.Locale locale>;

        $r4 = staticinvoke <java.text.DateFormat: java.text.DateFormat getDateInstance(int,java.util.Locale)>(3, $r3);

        return $r4;
    }

    public static char[] getDateFormatOrder(android.content.Context)
    {
        android.content.Context r0;
        java.lang.String $r1;
        char[] $r2;

        r0 := @parameter0: android.content.Context;

        $r1 = staticinvoke <android.text.format.DateFormat: java.lang.String getDateFormatString(android.content.Context)>(r0);

        $r2 = staticinvoke <libcore.icu.ICU: char[] getDateFormatOrder(java.lang.String)>($r1);

        return $r2;
    }

    private static java.lang.String getDateFormatString(android.content.Context)
    {
        android.content.res.Resources $r0;
        android.content.res.Configuration $r1;
        java.util.Locale $r2;
        boolean $z0;
        java.lang.AssertionError $r3;
        java.text.SimpleDateFormat $r4;
        java.lang.String $r5;
        android.content.Context r6;
        java.text.DateFormat r7;

        r6 := @parameter0: android.content.Context;

        $r0 = virtualinvoke r6.<android.content.Context: android.content.res.Resources getResources()>();

        $r1 = virtualinvoke $r0.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        $r2 = $r1.<android.content.res.Configuration: java.util.Locale locale>;

        r7 = staticinvoke <java.text.DateFormat: java.text.DateFormat getDateInstance(int,java.util.Locale)>(3, $r2);

        $z0 = r7 instanceof java.text.SimpleDateFormat;

        if $z0 == 0 goto label1;

        $r4 = (java.text.SimpleDateFormat) r7;

        $r5 = virtualinvoke $r4.<java.text.SimpleDateFormat: java.lang.String toPattern()>();

        return $r5;

     label1:
        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>(java.lang.Object)>("!(df instanceof SimpleDateFormat)");

        throw $r3;
    }

    private static java.lang.String getDayOfWeekString(libcore.icu.LocaleData, int, int, int)
    {
        int i0, i1, i2;
        java.lang.String[] $r0, $r1, $r2, $r3, $r4, $r5;
        libcore.icu.LocaleData r6;
        boolean z0;
        java.lang.String r7, r8, r9;

        r6 := @parameter0: libcore.icu.LocaleData;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        if i2 != 99 goto label01;

        z0 = 1;

        goto label02;

     label01:
        z0 = 0;

     label02:
        if i1 != 5 goto label05;

        if z0 == 0 goto label03;

        $r5 = r6.<libcore.icu.LocaleData: java.lang.String[] tinyStandAloneWeekdayNames>;

        r7 = $r5[i0];

        goto label04;

     label03:
        $r4 = r6.<libcore.icu.LocaleData: java.lang.String[] tinyWeekdayNames>;

        r7 = $r4[i0];

     label04:
        return r7;

     label05:
        if i1 != 4 goto label08;

        if z0 == 0 goto label06;

        $r3 = r6.<libcore.icu.LocaleData: java.lang.String[] longStandAloneWeekdayNames>;

        r8 = $r3[i0];

        goto label07;

     label06:
        $r2 = r6.<libcore.icu.LocaleData: java.lang.String[] longWeekdayNames>;

        r8 = $r2[i0];

     label07:
        return r8;

     label08:
        if z0 == 0 goto label09;

        $r1 = r6.<libcore.icu.LocaleData: java.lang.String[] shortStandAloneWeekdayNames>;

        r9 = $r1[i0];

        goto label10;

     label09:
        $r0 = r6.<libcore.icu.LocaleData: java.lang.String[] shortWeekdayNames>;

        r9 = $r0[i0];

     label10:
        return r9;
    }

    public static java.text.DateFormat getLongDateFormat(android.content.Context)
    {
        android.content.Context r0;
        android.content.res.Resources $r1;
        android.content.res.Configuration $r2;
        java.util.Locale $r3;
        java.text.DateFormat $r4;

        r0 := @parameter0: android.content.Context;

        $r1 = virtualinvoke r0.<android.content.Context: android.content.res.Resources getResources()>();

        $r2 = virtualinvoke $r1.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        $r3 = $r2.<android.content.res.Configuration: java.util.Locale locale>;

        $r4 = staticinvoke <java.text.DateFormat: java.text.DateFormat getDateInstance(int,java.util.Locale)>(1, $r3);

        return $r4;
    }

    public static java.text.DateFormat getMediumDateFormat(android.content.Context)
    {
        android.content.Context r0;
        android.content.res.Resources $r1;
        android.content.res.Configuration $r2;
        java.util.Locale $r3;
        java.text.DateFormat $r4;

        r0 := @parameter0: android.content.Context;

        $r1 = virtualinvoke r0.<android.content.Context: android.content.res.Resources getResources()>();

        $r2 = virtualinvoke $r1.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        $r3 = $r2.<android.content.res.Configuration: java.util.Locale locale>;

        $r4 = staticinvoke <java.text.DateFormat: java.text.DateFormat getDateInstance(int,java.util.Locale)>(2, $r3);

        return $r4;
    }

    private static java.lang.String getMonthString(libcore.icu.LocaleData, int, int, int)
    {
        int i0, i1, $i2, i3;
        java.lang.String $r0, r8, r9, r10;
        java.lang.String[] $r1, $r2, $r3, $r4, $r5, $r6;
        libcore.icu.LocaleData r7;
        boolean z0;

        r7 := @parameter0: libcore.icu.LocaleData;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i3 := @parameter3: int;

        if i3 != 76 goto label01;

        z0 = 1;

        goto label02;

     label01:
        z0 = 0;

     label02:
        if i1 != 5 goto label05;

        if z0 == 0 goto label03;

        $r6 = r7.<libcore.icu.LocaleData: java.lang.String[] tinyStandAloneMonthNames>;

        r8 = $r6[i0];

        goto label04;

     label03:
        $r5 = r7.<libcore.icu.LocaleData: java.lang.String[] tinyMonthNames>;

        r8 = $r5[i0];

     label04:
        return r8;

     label05:
        if i1 != 4 goto label08;

        if z0 == 0 goto label06;

        $r4 = r7.<libcore.icu.LocaleData: java.lang.String[] longStandAloneMonthNames>;

        r9 = $r4[i0];

        goto label07;

     label06:
        $r3 = r7.<libcore.icu.LocaleData: java.lang.String[] longMonthNames>;

        r9 = $r3[i0];

     label07:
        return r9;

     label08:
        if i1 != 3 goto label11;

        if z0 == 0 goto label09;

        $r2 = r7.<libcore.icu.LocaleData: java.lang.String[] shortStandAloneMonthNames>;

        r10 = $r2[i0];

        goto label10;

     label09:
        $r1 = r7.<libcore.icu.LocaleData: java.lang.String[] shortMonthNames>;

        r10 = $r1[i0];

     label10:
        return r10;

     label11:
        $i2 = i0 + 1;

        $r0 = staticinvoke <android.text.format.DateFormat: java.lang.String zeroPad(int,int)>($i2, i1);

        return $r0;
    }

    public static java.text.DateFormat getTimeFormat(android.content.Context)
    {
        android.content.Context r0;
        java.util.Locale r1;
        android.content.res.Resources $r2;
        android.content.res.Configuration $r3;
        java.text.SimpleDateFormat $r4;
        java.lang.String $r5;

        r0 := @parameter0: android.content.Context;

        $r2 = virtualinvoke r0.<android.content.Context: android.content.res.Resources getResources()>();

        $r3 = virtualinvoke $r2.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        r1 = $r3.<android.content.res.Configuration: java.util.Locale locale>;

        $r4 = new java.text.SimpleDateFormat;

        $r5 = staticinvoke <android.text.format.DateFormat: java.lang.String getTimeFormatString(android.content.Context)>(r0);

        specialinvoke $r4.<java.text.SimpleDateFormat: void <init>(java.lang.String,java.util.Locale)>($r5, r1);

        return $r4;
    }

    public static java.lang.String getTimeFormatString(android.content.Context)
    {
        android.content.Context r0;
        int $i0;
        java.lang.String $r1;

        r0 := @parameter0: android.content.Context;

        $i0 = virtualinvoke r0.<android.content.Context: int getUserId()>();

        $r1 = staticinvoke <android.text.format.DateFormat: java.lang.String getTimeFormatString(android.content.Context,int)>(r0, $i0);

        return $r1;
    }

    public static java.lang.String getTimeFormatString(android.content.Context, int)
    {
        int i0;
        libcore.icu.LocaleData r0;
        android.content.res.Resources $r1;
        android.content.res.Configuration $r2;
        java.util.Locale $r3;
        boolean $z0;
        android.content.Context r4;
        java.lang.String r5;

        r4 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        $r1 = virtualinvoke r4.<android.content.Context: android.content.res.Resources getResources()>();

        $r2 = virtualinvoke $r1.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        $r3 = $r2.<android.content.res.Configuration: java.util.Locale locale>;

        r0 = staticinvoke <libcore.icu.LocaleData: libcore.icu.LocaleData get(java.util.Locale)>($r3);

        $z0 = staticinvoke <android.text.format.DateFormat: boolean is24HourFormat(android.content.Context,int)>(r4, i0);

        if $z0 == 0 goto label1;

        r5 = r0.<libcore.icu.LocaleData: java.lang.String timeFormat_Hm>;

        goto label2;

     label1:
        r5 = r0.<libcore.icu.LocaleData: java.lang.String timeFormat_hm>;

     label2:
        return r5;
    }

    private static java.lang.String getTimeZoneString(java.util.Calendar, int)
    {
        java.util.Calendar r0;
        int i0, $i1, $i2, $i3, $i4;
        java.util.TimeZone r1;
        java.lang.String $r2, $r3;
        boolean z0;

        r0 := @parameter0: java.util.Calendar;

        i0 := @parameter1: int;

        r1 = virtualinvoke r0.<java.util.Calendar: java.util.TimeZone getTimeZone()>();

        if i0 >= 2 goto label1;

        $i2 = virtualinvoke r0.<java.util.Calendar: int get(int)>(16);

        $i3 = virtualinvoke r0.<java.util.Calendar: int get(int)>(15);

        $i4 = $i2 + $i3;

        $r3 = staticinvoke <android.text.format.DateFormat: java.lang.String formatZoneOffset(int,int)>($i4, i0);

        return $r3;

     label1:
        $i1 = virtualinvoke r0.<java.util.Calendar: int get(int)>(16);

        if $i1 == 0 goto label2;

        z0 = 1;

        goto label3;

     label2:
        z0 = 0;

     label3:
        $r2 = virtualinvoke r1.<java.util.TimeZone: java.lang.String getDisplayName(boolean,int)>(z0, 0);

        return $r2;
    }

    private static java.lang.String getYearString(int, int)
    {
        int i0, i1, $i2;
        java.util.Locale $r0;
        java.lang.Object[] $r1;
        java.lang.Integer $r2;
        java.lang.String r3;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i1 > 2 goto label1;

        $i2 = i0 % 100;

        r3 = staticinvoke <android.text.format.DateFormat: java.lang.String zeroPad(int,int)>($i2, 2);

        goto label2;

     label1:
        $r0 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $r1 = newarray (java.lang.Object)[1];

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r1[0] = $r2;

        r3 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r0, "%d", $r1);

     label2:
        return r3;
    }

    public static boolean hasDesignator(java.lang.CharSequence, char)
    {
        java.lang.CharSequence r0;
        char c0, c2;
        int i1, i3;
        boolean z0, z2, z3;

        r0 := @parameter0: java.lang.CharSequence;

        c0 := @parameter1: char;

        if r0 != null goto label1;

        return 0;

     label1:
        i1 = interfaceinvoke r0.<java.lang.CharSequence: int length()>();

        z0 = 0;

        i3 = 0;

     label2:
        if i3 >= i1 goto label7;

        c2 = interfaceinvoke r0.<java.lang.CharSequence: char charAt(int)>(i3);

        if c2 != 39 goto label5;

        if z0 != 0 goto label3;

        z2 = 1;

        goto label4;

     label3:
        z2 = 0;

     label4:
        z3 = z2;

        goto label6;

     label5:
        z3 = z0;

        if z0 != 0 goto label6;

        z3 = z0;

        if c2 != c0 goto label6;

        return 1;

     label6:
        i3 = i3 + 1;

        z0 = z3;

        goto label2;

     label7:
        return 0;
    }

    public static boolean hasSeconds(java.lang.CharSequence)
    {
        java.lang.CharSequence r0;
        boolean $z0;

        r0 := @parameter0: java.lang.CharSequence;

        $z0 = staticinvoke <android.text.format.DateFormat: boolean hasDesignator(java.lang.CharSequence,char)>(r0, 115);

        return $z0;
    }

    public static boolean is24HourFormat(android.content.Context)
    {
        android.content.Context r0;
        int $i0;
        boolean $z0;

        r0 := @parameter0: android.content.Context;

        $i0 = virtualinvoke r0.<android.content.Context: int getUserId()>();

        $z0 = staticinvoke <android.text.format.DateFormat: boolean is24HourFormat(android.content.Context,int)>(r0, $i0);

        return $z0;
    }

    public static boolean is24HourFormat(android.content.Context, int)
    {
        android.content.Context r0;
        int i0;
        java.lang.String r1;
        android.content.ContentResolver $r2;
        android.content.res.Resources $r3;
        android.content.res.Configuration $r4;
        java.util.Locale $r5;
        boolean $z0, $z1;

        r0 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        $r2 = virtualinvoke r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        r1 = staticinvoke <android.provider.Settings$System: java.lang.String getStringForUser(android.content.ContentResolver,java.lang.String,int)>($r2, "time_12_24", i0);

        if r1 == null goto label1;

        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("24");

        return $z1;

     label1:
        $r3 = virtualinvoke r0.<android.content.Context: android.content.res.Resources getResources()>();

        $r4 = virtualinvoke $r3.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        $r5 = $r4.<android.content.res.Configuration: java.util.Locale locale>;

        $z0 = staticinvoke <android.text.format.DateFormat: boolean is24HourLocale(java.util.Locale)>($r5);

        return $z0;
    }

    public static boolean is24HourLocale(java.util.Locale)
    {
        java.util.Locale $r0, $r3, r6;
        boolean $z0, $z1, z2, z3;
        java.text.SimpleDateFormat $r1;
        java.lang.String $r2;
        java.lang.Throwable $r4, $r5;
        java.lang.Object r7, r9;
        java.text.DateFormat r8;

        r6 := @parameter0: java.util.Locale;

        r7 = <android.text.format.DateFormat: java.lang.Object sLocaleLock>;

        entermonitor r7;

     label01:
        $r0 = <android.text.format.DateFormat: java.util.Locale sIs24HourLocale>;

        if $r0 == null goto label03;

        $r3 = <android.text.format.DateFormat: java.util.Locale sIs24HourLocale>;

        $z1 = virtualinvoke $r3.<java.util.Locale: boolean equals(java.lang.Object)>(r6);

        if $z1 == 0 goto label03;

        z2 = <android.text.format.DateFormat: boolean sIs24Hour>;

        exitmonitor r7;

     label02:
        return z2;

     label03:
        exitmonitor r7;

     label04:
        r8 = staticinvoke <java.text.DateFormat: java.text.DateFormat getTimeInstance(int,java.util.Locale)>(1, r6);

        $z0 = r8 instanceof java.text.SimpleDateFormat;

        if $z0 == 0 goto label05;

        $r1 = (java.text.SimpleDateFormat) r8;

        $r2 = virtualinvoke $r1.<java.text.SimpleDateFormat: java.lang.String toPattern()>();

        z3 = staticinvoke <android.text.format.DateFormat: boolean hasDesignator(java.lang.CharSequence,char)>($r2, 72);

        goto label06;

     label05:
        z3 = 0;

     label06:
        r9 = <android.text.format.DateFormat: java.lang.Object sLocaleLock>;

        entermonitor r9;

     label07:
        <android.text.format.DateFormat: java.util.Locale sIs24HourLocale> = r6;

        <android.text.format.DateFormat: boolean sIs24Hour> = z3;

        exitmonitor r9;

     label08:
        return z3;

     label09:
        $r4 := @caughtexception;

     label10:
        exitmonitor r9;

     label11:
        throw $r4;

     label12:
        $r5 := @caughtexception;

     label13:
        exitmonitor r7;

     label14:
        throw $r5;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
        catch java.lang.Throwable from label13 to label14 with label12;
    }

    private static java.lang.String zeroPad(int, int)
    {
        int i0, i1;
        java.util.Locale r0;
        java.lang.StringBuilder $r2;
        java.lang.String $r6, $r9;
        java.lang.Object[] $r7;
        java.lang.Integer $r8;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r0 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("%0");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("d");

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = newarray (java.lang.Object)[1];

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r7[0] = $r8;

        $r9 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>(r0, $r6, $r7);

        return $r9;
    }
}
