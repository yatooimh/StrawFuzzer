public class android.text.format.DateUtils extends java.lang.Object
{
    public static final java.lang.String ABBREV_MONTH_FORMAT;
    public static final java.lang.String ABBREV_WEEKDAY_FORMAT;
    public static final long DAY_IN_MILLIS;
    public static final int FORMAT_12HOUR;
    public static final int FORMAT_24HOUR;
    public static final int FORMAT_ABBREV_ALL;
    public static final int FORMAT_ABBREV_MONTH;
    public static final int FORMAT_ABBREV_RELATIVE;
    public static final int FORMAT_ABBREV_TIME;
    public static final int FORMAT_ABBREV_WEEKDAY;
    public static final int FORMAT_CAP_AMPM;
    public static final int FORMAT_CAP_MIDNIGHT;
    public static final int FORMAT_CAP_NOON;
    public static final int FORMAT_CAP_NOON_MIDNIGHT;
    public static final int FORMAT_NO_MIDNIGHT;
    public static final int FORMAT_NO_MONTH_DAY;
    public static final int FORMAT_NO_NOON;
    public static final int FORMAT_NO_NOON_MIDNIGHT;
    public static final int FORMAT_NO_YEAR;
    public static final int FORMAT_NUMERIC_DATE;
    public static final int FORMAT_SHOW_DATE;
    public static final int FORMAT_SHOW_TIME;
    public static final int FORMAT_SHOW_WEEKDAY;
    public static final int FORMAT_SHOW_YEAR;
    public static final int FORMAT_UTC;
    public static final long HOUR_IN_MILLIS;
    public static final java.lang.String HOUR_MINUTE_24;
    public static final int LENGTH_LONG;
    public static final int LENGTH_MEDIUM;
    public static final int LENGTH_SHORT;
    public static final int LENGTH_SHORTER;
    public static final int LENGTH_SHORTEST;
    public static final long MINUTE_IN_MILLIS;
    public static final java.lang.String MONTH_DAY_FORMAT;
    public static final java.lang.String MONTH_FORMAT;
    public static final java.lang.String NUMERIC_MONTH_FORMAT;
    public static final long SECOND_IN_MILLIS;
    public static final java.lang.String WEEKDAY_FORMAT;
    public static final long WEEK_IN_MILLIS;
    public static final java.lang.String YEAR_FORMAT;
    public static final java.lang.String YEAR_FORMAT_TWO_DIGITS;
    public static final long YEAR_IN_MILLIS;
    private static java.lang.String sElapsedFormatHMMSS;
    private static java.lang.String sElapsedFormatMMSS;
    private static android.content.res.Configuration sLastConfig;
    private static final java.lang.Object sLock;
    private static android.text.format.Time sNowTime;
    private static android.text.format.Time sThenTime;
    public static final int[] sameMonthTable;
    public static final int[] sameYearTable;

    static void <clinit>()
    {
        java.lang.Object $r0;

        <android.text.format.DateUtils: long YEAR_IN_MILLIS> = 31449600000L;

        <android.text.format.DateUtils: java.lang.String YEAR_FORMAT_TWO_DIGITS> = "%g";

        <android.text.format.DateUtils: java.lang.String YEAR_FORMAT> = "%Y";

        <android.text.format.DateUtils: long WEEK_IN_MILLIS> = 604800000L;

        <android.text.format.DateUtils: java.lang.String WEEKDAY_FORMAT> = "%A";

        <android.text.format.DateUtils: long SECOND_IN_MILLIS> = 1000L;

        <android.text.format.DateUtils: java.lang.String NUMERIC_MONTH_FORMAT> = "%m";

        <android.text.format.DateUtils: java.lang.String MONTH_FORMAT> = "%B";

        <android.text.format.DateUtils: java.lang.String MONTH_DAY_FORMAT> = "%-d";

        <android.text.format.DateUtils: long MINUTE_IN_MILLIS> = 60000L;

        <android.text.format.DateUtils: int LENGTH_SHORTEST> = 50;

        <android.text.format.DateUtils: int LENGTH_SHORTER> = 40;

        <android.text.format.DateUtils: int LENGTH_SHORT> = 30;

        <android.text.format.DateUtils: int LENGTH_MEDIUM> = 20;

        <android.text.format.DateUtils: int LENGTH_LONG> = 10;

        <android.text.format.DateUtils: java.lang.String HOUR_MINUTE_24> = "%H:%M";

        <android.text.format.DateUtils: long HOUR_IN_MILLIS> = 3600000L;

        <android.text.format.DateUtils: int FORMAT_UTC> = 8192;

        <android.text.format.DateUtils: int FORMAT_SHOW_YEAR> = 4;

        <android.text.format.DateUtils: int FORMAT_SHOW_WEEKDAY> = 2;

        <android.text.format.DateUtils: int FORMAT_SHOW_TIME> = 1;

        <android.text.format.DateUtils: int FORMAT_SHOW_DATE> = 16;

        <android.text.format.DateUtils: int FORMAT_NUMERIC_DATE> = 131072;

        <android.text.format.DateUtils: int FORMAT_NO_YEAR> = 8;

        <android.text.format.DateUtils: int FORMAT_NO_NOON_MIDNIGHT> = 2560;

        <android.text.format.DateUtils: int FORMAT_NO_NOON> = 512;

        <android.text.format.DateUtils: int FORMAT_NO_MONTH_DAY> = 32;

        <android.text.format.DateUtils: int FORMAT_NO_MIDNIGHT> = 2048;

        <android.text.format.DateUtils: int FORMAT_CAP_NOON_MIDNIGHT> = 5120;

        <android.text.format.DateUtils: int FORMAT_CAP_NOON> = 1024;

        <android.text.format.DateUtils: int FORMAT_CAP_MIDNIGHT> = 4096;

        <android.text.format.DateUtils: int FORMAT_CAP_AMPM> = 256;

        <android.text.format.DateUtils: int FORMAT_ABBREV_WEEKDAY> = 32768;

        <android.text.format.DateUtils: int FORMAT_ABBREV_TIME> = 16384;

        <android.text.format.DateUtils: int FORMAT_ABBREV_RELATIVE> = 262144;

        <android.text.format.DateUtils: int FORMAT_ABBREV_MONTH> = 65536;

        <android.text.format.DateUtils: int FORMAT_ABBREV_ALL> = 524288;

        <android.text.format.DateUtils: int FORMAT_24HOUR> = 128;

        <android.text.format.DateUtils: int FORMAT_12HOUR> = 64;

        <android.text.format.DateUtils: long DAY_IN_MILLIS> = 86400000L;

        <android.text.format.DateUtils: java.lang.String ABBREV_WEEKDAY_FORMAT> = "%a";

        <android.text.format.DateUtils: java.lang.String ABBREV_MONTH_FORMAT> = "%b";

        $r0 = new java.lang.Object;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        <android.text.format.DateUtils: java.lang.Object sLock> = $r0;

        <android.text.format.DateUtils: int[] sameYearTable> = null;

        <android.text.format.DateUtils: int[] sameMonthTable> = null;

        return;
    }

    public void <init>()
    {
        android.text.format.DateUtils r0;

        r0 := @this: android.text.format.DateUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String formatDateRange(android.content.Context, long, long, int)
    {
        android.content.Context r0;
        long l0, l1;
        int i2;
        java.util.Formatter $r1, $r4;
        java.lang.StringBuilder $r2;
        java.util.Locale $r3;
        java.lang.String $r5;

        r0 := @parameter0: android.content.Context;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        i2 := @parameter3: int;

        $r1 = new java.util.Formatter;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(int)>(50);

        $r3 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        specialinvoke $r1.<java.util.Formatter: void <init>(java.lang.Appendable,java.util.Locale)>($r2, $r3);

        $r4 = staticinvoke <android.text.format.DateUtils: java.util.Formatter formatDateRange(android.content.Context,java.util.Formatter,long,long,int)>(r0, $r1, l0, l1, i2);

        $r5 = virtualinvoke $r4.<java.util.Formatter: java.lang.String toString()>();

        return $r5;
    }

    public static java.util.Formatter formatDateRange(android.content.Context, java.util.Formatter, long, long, int)
    {
        android.content.Context r0;
        java.util.Formatter r1, $r2;
        long l0, l1;
        int i2;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.util.Formatter;

        l0 := @parameter2: long;

        l1 := @parameter3: long;

        i2 := @parameter4: int;

        $r2 = staticinvoke <android.text.format.DateUtils: java.util.Formatter formatDateRange(android.content.Context,java.util.Formatter,long,long,int,java.lang.String)>(r0, r1, l0, l1, i2, null);

        return $r2;
    }

    public static java.util.Formatter formatDateRange(android.content.Context, java.util.Formatter, long, long, int, java.lang.String)
    {
        java.util.Formatter r0;
        long l0, l1;
        int i2, $i3, i4;
        java.lang.String r1, r6;
        boolean $z0;
        java.lang.Throwable $r3;
        java.lang.AssertionError $r4;
        android.content.Context r5;
        short s5;
        java.lang.Appendable $r7;

        r5 := @parameter0: android.content.Context;

        r0 := @parameter1: java.util.Formatter;

        l0 := @parameter2: long;

        l1 := @parameter3: long;

        i2 := @parameter4: int;

        r1 := @parameter5: java.lang.String;

        i4 = i2;

        $i3 = i2 & 193;

        if $i3 != 1 goto label3;

        $z0 = staticinvoke <android.text.format.DateFormat: boolean is24HourFormat(android.content.Context)>(r5);

        if $z0 == 0 goto label1;

        s5 = 128;

        goto label2;

     label1:
        s5 = 64;

     label2:
        i4 = i2 | s5;

     label3:
        r6 = staticinvoke <libcore.icu.DateIntervalFormat: java.lang.String formatDateRange(long,long,int,java.lang.String)>(l0, l1, i4, r1);

     label4:
        $r7 = virtualinvoke r0.<java.util.Formatter: java.lang.Appendable out()>();

        interfaceinvoke $r7.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>(r6);

     label5:
        return r0;

     label6:
        $r3 := @caughtexception;

        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>(java.lang.Object)>($r3);

        throw $r4;

        catch java.io.IOException from label4 to label5 with label6;
    }

    public static java.lang.String formatDateTime(android.content.Context, long, int)
    {
        android.content.Context r0;
        long l0;
        int i1;
        java.lang.String $r1;

        r0 := @parameter0: android.content.Context;

        l0 := @parameter1: long;

        i1 := @parameter2: int;

        $r1 = staticinvoke <android.text.format.DateUtils: java.lang.String formatDateRange(android.content.Context,long,long,int)>(r0, l0, l0, i1);

        return $r1;
    }

    public static java.lang.CharSequence formatDuration(long)
    {
        long l0;
        java.lang.CharSequence $r0;

        l0 := @parameter0: long;

        $r0 = staticinvoke <android.text.format.DateUtils: java.lang.CharSequence formatDuration(long,int)>(l0, 10);

        return $r0;
    }

    public static java.lang.CharSequence formatDuration(long, int)
    {
        long l0, $l3, $l4, $l6, $l7, $l9, $l10;
        int i1, $i5, $i8, $i11;
        byte $b2, $b12;
        java.lang.Integer $r1, $r5, $r9;
        android.icu.util.TimeUnit $r2, $r6, $r10;
        java.lang.String $r3, $r7, $r11;
        android.icu.text.MeasureFormat$FormatWidth r12;
        java.util.Locale $r13;
        android.icu.text.MeasureFormat r14;
        android.icu.util.Measure r15, r16, r17;
        android.icu.util.MeasureUnit r18, r19, r20;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        if i1 == 10 goto label3;

        if i1 == 20 goto label2;

        if i1 == 30 goto label2;

        if i1 == 40 goto label2;

        if i1 == 50 goto label1;

        r12 = <android.icu.text.MeasureFormat$FormatWidth: android.icu.text.MeasureFormat$FormatWidth WIDE>;

        goto label4;

     label1:
        r12 = <android.icu.text.MeasureFormat$FormatWidth: android.icu.text.MeasureFormat$FormatWidth NARROW>;

        goto label4;

     label2:
        r12 = <android.icu.text.MeasureFormat$FormatWidth: android.icu.text.MeasureFormat$FormatWidth SHORT>;

        goto label4;

     label3:
        r12 = <android.icu.text.MeasureFormat$FormatWidth: android.icu.text.MeasureFormat$FormatWidth WIDE>;

     label4:
        $r13 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        r14 = staticinvoke <android.icu.text.MeasureFormat: android.icu.text.MeasureFormat getInstance(java.util.Locale,android.icu.text.MeasureFormat$FormatWidth)>($r13, r12);

        $b12 = l0 cmp 3600000L;

        if $b12 < 0 goto label5;

        r15 = new android.icu.util.Measure;

        $l9 = 1800000L + l0;

        $l10 = $l9 / 3600000L;

        $i11 = (int) $l10;

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i11);

        $r10 = <android.icu.util.MeasureUnit: android.icu.util.TimeUnit HOUR>;

        r18 = (android.icu.util.MeasureUnit) $r10;

        specialinvoke r15.<android.icu.util.Measure: void <init>(java.lang.Number,android.icu.util.MeasureUnit)>($r9, r18);

        $r11 = virtualinvoke r14.<android.icu.text.MeasureFormat: java.lang.String format(java.lang.Object)>(r15);

        return $r11;

     label5:
        $b2 = l0 cmp 60000L;

        if $b2 < 0 goto label6;

        r16 = new android.icu.util.Measure;

        $l6 = 30000L + l0;

        $l7 = $l6 / 60000L;

        $i8 = (int) $l7;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i8);

        $r6 = <android.icu.util.MeasureUnit: android.icu.util.TimeUnit MINUTE>;

        r19 = (android.icu.util.MeasureUnit) $r6;

        specialinvoke r16.<android.icu.util.Measure: void <init>(java.lang.Number,android.icu.util.MeasureUnit)>($r5, r19);

        $r7 = virtualinvoke r14.<android.icu.text.MeasureFormat: java.lang.String format(java.lang.Object)>(r16);

        return $r7;

     label6:
        r17 = new android.icu.util.Measure;

        $l3 = 500L + l0;

        $l4 = $l3 / 1000L;

        $i5 = (int) $l4;

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5);

        $r2 = <android.icu.util.MeasureUnit: android.icu.util.TimeUnit SECOND>;

        r20 = (android.icu.util.MeasureUnit) $r2;

        specialinvoke r17.<android.icu.util.Measure: void <init>(java.lang.Number,android.icu.util.MeasureUnit)>($r1, r20);

        $r3 = virtualinvoke r14.<android.icu.text.MeasureFormat: java.lang.String format(java.lang.Object)>(r17);

        return $r3;
    }

    public static java.lang.String formatElapsedTime(long)
    {
        long l0;
        java.lang.String $r0;

        l0 := @parameter0: long;

        $r0 = staticinvoke <android.text.format.DateUtils: java.lang.String formatElapsedTime(java.lang.StringBuilder,long)>(null, l0);

        return $r0;
    }

    public static java.lang.String formatElapsedTime(java.lang.StringBuilder, long)
    {
        byte $b0, $b1, $b2;
        java.util.Formatter $r0, $r6, $r13;
        java.util.Locale $r1;
        java.lang.Object[] $r2, $r8;
        java.lang.String $r3, $r7, $r9, $r14;
        java.lang.Long $r4, $r5, $r10, $r11, $r12;
        java.lang.StringBuilder $r15, r16;
        long $l3, $l4, l5, l6, l7, l8;

        r16 := @parameter0: java.lang.StringBuilder;

        l5 := @parameter1: long;

        l6 = 0L;

        l7 = 0L;

        $b0 = l5 cmp 3600L;

        if $b0 < 0 goto label1;

        l6 = l5 / 3600L;

        $l4 = 3600L * l6;

        l5 = l5 - $l4;

        goto label1;

     label1:
        l8 = l5;

        $b1 = l5 cmp 60L;

        if $b1 < 0 goto label2;

        l7 = l5 / 60L;

        $l3 = 60L * l7;

        l8 = l5 - $l3;

     label2:
        if r16 != null goto label3;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>(int)>(8);

        r16 = $r15;

        goto label4;

     label3:
        virtualinvoke r16.<java.lang.StringBuilder: void setLength(int)>(0);

     label4:
        $r0 = new java.util.Formatter;

        $r1 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        specialinvoke $r0.<java.util.Formatter: void <init>(java.lang.Appendable,java.util.Locale)>(r16, $r1);

        staticinvoke <android.text.format.DateUtils: void initFormatStrings()>();

        $b2 = l6 cmp 0L;

        if $b2 <= 0 goto label5;

        $r9 = <android.text.format.DateUtils: java.lang.String sElapsedFormatHMMSS>;

        $r8 = newarray (java.lang.Object)[3];

        $r10 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l6);

        $r8[0] = $r10;

        $r11 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l7);

        $r8[1] = $r11;

        $r12 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l8);

        $r8[2] = $r12;

        $r13 = virtualinvoke $r0.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>($r9, $r8);

        $r14 = virtualinvoke $r13.<java.util.Formatter: java.lang.String toString()>();

        return $r14;

     label5:
        $r3 = <android.text.format.DateUtils: java.lang.String sElapsedFormatMMSS>;

        $r2 = newarray (java.lang.Object)[2];

        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l7);

        $r2[0] = $r4;

        $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l8);

        $r2[1] = $r5;

        $r6 = virtualinvoke $r0.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>($r3, $r2);

        $r7 = virtualinvoke $r6.<java.util.Formatter: java.lang.String toString()>();

        return $r7;
    }

    public static final java.lang.CharSequence formatSameDayTime(long, long, int, int)
    {
        long l0, l1;
        int i2, i3, $i4, $i5, $i6, $i7, $i8, $i9;
        java.util.Date r0;
        java.util.GregorianCalendar $r2, $r3;
        java.text.DateFormat r5;
        java.lang.String $r6;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        $r2 = new java.util.GregorianCalendar;

        specialinvoke $r2.<java.util.GregorianCalendar: void <init>()>();

        virtualinvoke $r2.<java.util.Calendar: void setTimeInMillis(long)>(l0);

        r0 = virtualinvoke $r2.<java.util.Calendar: java.util.Date getTime()>();

        $r3 = new java.util.GregorianCalendar;

        specialinvoke $r3.<java.util.GregorianCalendar: void <init>()>();

        virtualinvoke $r3.<java.util.Calendar: void setTimeInMillis(long)>(l1);

        $i4 = virtualinvoke $r2.<java.util.Calendar: int get(int)>(1);

        $i5 = virtualinvoke $r3.<java.util.Calendar: int get(int)>(1);

        if $i4 != $i5 goto label1;

        $i6 = virtualinvoke $r2.<java.util.Calendar: int get(int)>(2);

        $i7 = virtualinvoke $r3.<java.util.Calendar: int get(int)>(2);

        if $i6 != $i7 goto label1;

        $i8 = virtualinvoke $r2.<java.util.Calendar: int get(int)>(5);

        $i9 = virtualinvoke $r3.<java.util.Calendar: int get(int)>(5);

        if $i8 != $i9 goto label1;

        r5 = staticinvoke <java.text.DateFormat: java.text.DateFormat getTimeInstance(int)>(i3);

        goto label2;

     label1:
        r5 = staticinvoke <java.text.DateFormat: java.text.DateFormat getDateInstance(int)>(i2);

     label2:
        $r6 = virtualinvoke r5.<java.text.DateFormat: java.lang.String format(java.util.Date)>(r0);

        return $r6;
    }

    public static java.lang.String getAMPMString(int)
    {
        int i0, $i1;
        java.util.Locale $r0;
        libcore.icu.LocaleData $r1;
        java.lang.String[] $r2;
        java.lang.String $r3;

        i0 := @parameter0: int;

        $r0 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $r1 = staticinvoke <libcore.icu.LocaleData: libcore.icu.LocaleData get(java.util.Locale)>($r0);

        $r2 = $r1.<libcore.icu.LocaleData: java.lang.String[] amPm>;

        $i1 = i0 + 0;

        $r3 = $r2[$i1];

        return $r3;
    }

    public static java.lang.String getDayOfWeekString(int, int)
    {
        int i0, i1;
        java.util.Locale $r0;
        libcore.icu.LocaleData r1;
        java.lang.String[] r2;
        java.lang.String $r3;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r0 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        r1 = staticinvoke <libcore.icu.LocaleData: libcore.icu.LocaleData get(java.util.Locale)>($r0);

        if i1 == 10 goto label5;

        if i1 == 20 goto label4;

        if i1 == 30 goto label3;

        if i1 == 40 goto label2;

        if i1 == 50 goto label1;

        r2 = r1.<libcore.icu.LocaleData: java.lang.String[] shortWeekdayNames>;

        goto label6;

     label1:
        r2 = r1.<libcore.icu.LocaleData: java.lang.String[] tinyWeekdayNames>;

        goto label6;

     label2:
        r2 = r1.<libcore.icu.LocaleData: java.lang.String[] shortWeekdayNames>;

        goto label6;

     label3:
        r2 = r1.<libcore.icu.LocaleData: java.lang.String[] shortWeekdayNames>;

        goto label6;

     label4:
        r2 = r1.<libcore.icu.LocaleData: java.lang.String[] shortWeekdayNames>;

        goto label6;

     label5:
        r2 = r1.<libcore.icu.LocaleData: java.lang.String[] longWeekdayNames>;

     label6:
        $r3 = r2[i0];

        return $r3;
    }

    public static java.lang.String getMonthString(int, int)
    {
        int i0, i1;
        java.util.Locale $r0;
        libcore.icu.LocaleData r1;
        java.lang.String[] r2;
        java.lang.String $r3;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r0 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        r1 = staticinvoke <libcore.icu.LocaleData: libcore.icu.LocaleData get(java.util.Locale)>($r0);

        if i1 == 10 goto label5;

        if i1 == 20 goto label4;

        if i1 == 30 goto label3;

        if i1 == 40 goto label2;

        if i1 == 50 goto label1;

        r2 = r1.<libcore.icu.LocaleData: java.lang.String[] shortMonthNames>;

        goto label6;

     label1:
        r2 = r1.<libcore.icu.LocaleData: java.lang.String[] tinyMonthNames>;

        goto label6;

     label2:
        r2 = r1.<libcore.icu.LocaleData: java.lang.String[] shortMonthNames>;

        goto label6;

     label3:
        r2 = r1.<libcore.icu.LocaleData: java.lang.String[] shortMonthNames>;

        goto label6;

     label4:
        r2 = r1.<libcore.icu.LocaleData: java.lang.String[] shortMonthNames>;

        goto label6;

     label5:
        r2 = r1.<libcore.icu.LocaleData: java.lang.String[] longMonthNames>;

     label6:
        $r3 = r2[i0];

        return $r3;
    }

    public static java.lang.CharSequence getRelativeDateTimeString(android.content.Context, long, long, long, int)
    {
        android.content.Context r0;
        long l0, l1, l2, $l7;
        int i3, $i4, i5;
        boolean $z0;
        short s6;
        java.util.Locale $r1;
        java.util.TimeZone $r2;
        java.lang.String $r3;

        r0 := @parameter0: android.content.Context;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        l2 := @parameter3: long;

        i3 := @parameter4: int;

        i5 = i3;

        $i4 = i3 & 193;

        if $i4 != 1 goto label3;

        $z0 = staticinvoke <android.text.format.DateFormat: boolean is24HourFormat(android.content.Context)>(r0);

        if $z0 == 0 goto label1;

        s6 = 128;

        goto label2;

     label1:
        s6 = 64;

     label2:
        i5 = i3 | s6;

     label3:
        $r1 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $r2 = staticinvoke <java.util.TimeZone: java.util.TimeZone getDefault()>();

        $l7 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r3 = staticinvoke <libcore.icu.RelativeDateTimeFormatter: java.lang.String getRelativeDateTimeString(java.util.Locale,java.util.TimeZone,long,long,long,long,int)>($r1, $r2, l0, $l7, l1, l2, i5);

        return $r3;
    }

    public static java.lang.CharSequence getRelativeTimeSpanString(long)
    {
        long l0, $l1;
        java.lang.CharSequence $r0;

        l0 := @parameter0: long;

        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r0 = staticinvoke <android.text.format.DateUtils: java.lang.CharSequence getRelativeTimeSpanString(long,long,long)>(l0, $l1, 60000L);

        return $r0;
    }

    public static java.lang.CharSequence getRelativeTimeSpanString(long, long, long)
    {
        long l0, l1, l2;
        java.lang.CharSequence $r0;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        l2 := @parameter2: long;

        $r0 = staticinvoke <android.text.format.DateUtils: java.lang.CharSequence getRelativeTimeSpanString(long,long,long,int)>(l0, l1, l2, 65556);

        return $r0;
    }

    public static java.lang.CharSequence getRelativeTimeSpanString(long, long, long, int)
    {
        long l0, l1, l2;
        int i3;
        java.util.Locale $r0;
        java.util.TimeZone $r1;
        java.lang.String $r2;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        l2 := @parameter2: long;

        i3 := @parameter3: int;

        $r0 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $r1 = staticinvoke <java.util.TimeZone: java.util.TimeZone getDefault()>();

        $r2 = staticinvoke <libcore.icu.RelativeDateTimeFormatter: java.lang.String getRelativeTimeSpanString(java.util.Locale,java.util.TimeZone,long,long,long,int)>($r0, $r1, l0, l1, l2, i3);

        return $r2;
    }

    public static java.lang.CharSequence getRelativeTimeSpanString(android.content.Context, long)
    {
        android.content.Context r0;
        long l0;
        java.lang.CharSequence $r1;

        r0 := @parameter0: android.content.Context;

        l0 := @parameter1: long;

        $r1 = staticinvoke <android.text.format.DateUtils: java.lang.CharSequence getRelativeTimeSpanString(android.content.Context,long,boolean)>(r0, l0, 0);

        return $r1;
    }

    public static java.lang.CharSequence getRelativeTimeSpanString(android.content.Context, long, boolean)
    {
        long l0, l1, l2, $l3;
        boolean z0;
        android.text.format.Time $r0, $r1, $r2, $r3, $r4, $r5, $r8, $r9, r12, r13;
        byte $b4;
        int $i5, $i6, $i7, $i8, i9;
        android.content.res.Resources $r6;
        java.lang.Object[] $r7;
        java.lang.Throwable $r10;
        android.content.Context r11;
        java.lang.String r14, r15;

        r11 := @parameter0: android.content.Context;

        l0 := @parameter1: long;

        z0 := @parameter2: boolean;

        l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l3 = l1 - l0;

        l2 = staticinvoke <java.lang.Math: long abs(long)>($l3);

        entermonitor class "Landroid/text/format/DateUtils;";

     label01:
        $r0 = <android.text.format.DateUtils: android.text.format.Time sNowTime>;

        if $r0 != null goto label02;

        r12 = new android.text.format.Time;

        specialinvoke r12.<android.text.format.Time: void <init>()>();

        <android.text.format.DateUtils: android.text.format.Time sNowTime> = r12;

     label02:
        $r1 = <android.text.format.DateUtils: android.text.format.Time sThenTime>;

        if $r1 != null goto label03;

        r13 = new android.text.format.Time;

        specialinvoke r13.<android.text.format.Time: void <init>()>();

        <android.text.format.DateUtils: android.text.format.Time sThenTime> = r13;

     label03:
        $r2 = <android.text.format.DateUtils: android.text.format.Time sNowTime>;

        virtualinvoke $r2.<android.text.format.Time: void set(long)>(l1);

        $r3 = <android.text.format.DateUtils: android.text.format.Time sThenTime>;

        virtualinvoke $r3.<android.text.format.Time: void set(long)>(l0);

     label04:
        $b4 = l2 cmp 86400000L;

        if $b4 >= 0 goto label07;

     label05:
        $r8 = <android.text.format.DateUtils: android.text.format.Time sNowTime>;

        $i8 = $r8.<android.text.format.Time: int weekDay>;

        $r9 = <android.text.format.DateUtils: android.text.format.Time sThenTime>;

        $i7 = $r9.<android.text.format.Time: int weekDay>;

        if $i8 != $i7 goto label07;

        r14 = staticinvoke <android.text.format.DateUtils: java.lang.String formatDateRange(android.content.Context,long,long,int)>(r11, l0, l0, 1);

     label06:
        i9 = 17041083;

        goto label11;

     label07:
        $r4 = <android.text.format.DateUtils: android.text.format.Time sNowTime>;

        $i6 = $r4.<android.text.format.Time: int year>;

        $r5 = <android.text.format.DateUtils: android.text.format.Time sThenTime>;

        $i5 = $r5.<android.text.format.Time: int year>;

        if $i6 == $i5 goto label09;

        r14 = staticinvoke <android.text.format.DateUtils: java.lang.String formatDateRange(android.content.Context,long,long,int)>(r11, l0, l0, 131092);

     label08:
        i9 = 17041082;

        goto label11;

     label09:
        r14 = staticinvoke <android.text.format.DateUtils: java.lang.String formatDateRange(android.content.Context,long,long,int)>(r11, l0, l0, 65552);

     label10:
        i9 = 17041082;

     label11:
        r15 = r14;

        if z0 == 0 goto label13;

     label12:
        $r6 = virtualinvoke r11.<android.content.Context: android.content.res.Resources getResources()>();

        $r7 = newarray (java.lang.Object)[1];

        $r7[0] = r14;

        r15 = virtualinvoke $r6.<android.content.res.Resources: java.lang.String getString(int,java.lang.Object[])>(i9, $r7);

     label13:
        exitmonitor class "Landroid/text/format/DateUtils;";

     label14:
        return r15;

     label15:
        $r10 := @caughtexception;

     label16:
        exitmonitor class "Landroid/text/format/DateUtils;";

     label17:
        throw $r10;

        catch java.lang.Throwable from label01 to label02 with label15;
        catch java.lang.Throwable from label02 to label03 with label15;
        catch java.lang.Throwable from label03 to label04 with label15;
        catch java.lang.Throwable from label05 to label06 with label15;
        catch java.lang.Throwable from label07 to label08 with label15;
        catch java.lang.Throwable from label09 to label10 with label15;
        catch java.lang.Throwable from label12 to label13 with label15;
        catch java.lang.Throwable from label13 to label14 with label15;
        catch java.lang.Throwable from label16 to label17 with label15;
    }

    private static void initFormatStrings()
    {
        java.lang.Object r0;
        java.lang.Throwable $r2;

        r0 = <android.text.format.DateUtils: java.lang.Object sLock>;

        entermonitor r0;

     label1:
        staticinvoke <android.text.format.DateUtils: void initFormatStringsLocked()>();

        exitmonitor r0;

     label2:
        return;

     label3:
        $r2 := @caughtexception;

     label4:
        exitmonitor r0;

     label5:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    private static void initFormatStringsLocked()
    {
        android.content.res.Resources r0;
        android.content.res.Configuration r1, r2;
        java.lang.String $r3, $r4;
        boolean $z0;

        r0 = staticinvoke <android.content.res.Resources: android.content.res.Resources getSystem()>();

        r1 = virtualinvoke r0.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        r2 = <android.text.format.DateUtils: android.content.res.Configuration sLastConfig>;

        if r2 == null goto label1;

        $z0 = virtualinvoke r2.<android.content.res.Configuration: boolean equals(android.content.res.Configuration)>(r1);

        if $z0 != 0 goto label2;

     label1:
        <android.text.format.DateUtils: android.content.res.Configuration sLastConfig> = r1;

        $r3 = virtualinvoke r0.<android.content.res.Resources: java.lang.String getString(int)>(17040076);

        <android.text.format.DateUtils: java.lang.String sElapsedFormatMMSS> = $r3;

        $r4 = virtualinvoke r0.<android.content.res.Resources: java.lang.String getString(int)>(17040075);

        <android.text.format.DateUtils: java.lang.String sElapsedFormatHMMSS> = $r4;

     label2:
        return;
    }

    private static boolean isSameDate(long, long)
    {
        long l0, l1;
        java.time.LocalDateTime r0, r4;
        java.time.Instant $r1, $r2;
        int $i2, $i3, $i4, $i5, $i6, $i7;
        java.time.ZoneId r3;
        boolean z0;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        r3 = staticinvoke <java.time.ZoneId: java.time.ZoneId systemDefault()>();

        $r1 = staticinvoke <java.time.Instant: java.time.Instant ofEpochMilli(long)>(l0);

        r0 = staticinvoke <java.time.LocalDateTime: java.time.LocalDateTime ofInstant(java.time.Instant,java.time.ZoneId)>($r1, r3);

        $r2 = staticinvoke <java.time.Instant: java.time.Instant ofEpochMilli(long)>(l1);

        r4 = staticinvoke <java.time.LocalDateTime: java.time.LocalDateTime ofInstant(java.time.Instant,java.time.ZoneId)>($r2, r3);

        $i2 = virtualinvoke r0.<java.time.LocalDateTime: int getYear()>();

        $i3 = virtualinvoke r4.<java.time.LocalDateTime: int getYear()>();

        if $i2 != $i3 goto label1;

        $i4 = virtualinvoke r0.<java.time.LocalDateTime: int getMonthValue()>();

        $i5 = virtualinvoke r4.<java.time.LocalDateTime: int getMonthValue()>();

        if $i4 != $i5 goto label1;

        $i6 = virtualinvoke r0.<java.time.LocalDateTime: int getDayOfMonth()>();

        $i7 = virtualinvoke r4.<java.time.LocalDateTime: int getDayOfMonth()>();

        if $i6 != $i7 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public static boolean isToday(long)
    {
        long l0, $l1;
        boolean $z0;

        l0 := @parameter0: long;

        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $z0 = staticinvoke <android.text.format.DateUtils: boolean isSameDate(long,long)>(l0, $l1);

        return $z0;
    }
}
