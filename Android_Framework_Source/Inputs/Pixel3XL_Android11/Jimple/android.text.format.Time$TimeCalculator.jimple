class android.text.format.Time$TimeCalculator extends java.lang.Object
{
    public java.lang.String timezone;
    public final libcore.util.ZoneInfo$WallTime wallTime;
    private libcore.util.ZoneInfo zoneInfo;

    public void <init>(java.lang.String)
    {
        android.text.format.Time$TimeCalculator r0;
        java.lang.String r1;
        libcore.util.ZoneInfo $r2;
        libcore.util.ZoneInfo$WallTime $r3;

        r0 := @this: android.text.format.Time$TimeCalculator;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = staticinvoke <android.text.format.Time$TimeCalculator: libcore.util.ZoneInfo lookupZoneInfo(java.lang.String)>(r1);

        r0.<android.text.format.Time$TimeCalculator: libcore.util.ZoneInfo zoneInfo> = $r2;

        $r3 = new libcore.util.ZoneInfo$WallTime;

        specialinvoke $r3.<libcore.util.ZoneInfo$WallTime: void <init>()>();

        r0.<android.text.format.Time$TimeCalculator: libcore.util.ZoneInfo$WallTime wallTime> = $r3;

        return;
    }

    public static int compare(android.text.format.Time$TimeCalculator, android.text.format.Time$TimeCalculator)
    {
        android.text.format.Time$TimeCalculator r0, r1;
        boolean z0;
        long l0, $l1, $l2;
        java.lang.String $r2, $r3;
        byte $b3, $b4, b17;
        libcore.util.ZoneInfo$WallTime $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15;
        int $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, i18, i19, i20, i21, i22, i23;

        r0 := @parameter0: android.text.format.Time$TimeCalculator;

        r1 := @parameter1: android.text.format.Time$TimeCalculator;

        $r3 = r0.<android.text.format.Time$TimeCalculator: java.lang.String timezone>;

        $r2 = r1.<android.text.format.Time$TimeCalculator: java.lang.String timezone>;

        z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        b17 = 0;

        if z0 == 0 goto label7;

        $r4 = r0.<android.text.format.Time$TimeCalculator: libcore.util.ZoneInfo$WallTime wallTime>;

        $i5 = virtualinvoke $r4.<libcore.util.ZoneInfo$WallTime: int getYear()>();

        $r5 = r1.<android.text.format.Time$TimeCalculator: libcore.util.ZoneInfo$WallTime wallTime>;

        $i6 = virtualinvoke $r5.<libcore.util.ZoneInfo$WallTime: int getYear()>();

        i18 = $i5 - $i6;

        if i18 == 0 goto label1;

        return i18;

     label1:
        $r6 = r0.<android.text.format.Time$TimeCalculator: libcore.util.ZoneInfo$WallTime wallTime>;

        $i7 = virtualinvoke $r6.<libcore.util.ZoneInfo$WallTime: int getMonth()>();

        $r7 = r1.<android.text.format.Time$TimeCalculator: libcore.util.ZoneInfo$WallTime wallTime>;

        $i8 = virtualinvoke $r7.<libcore.util.ZoneInfo$WallTime: int getMonth()>();

        i19 = $i7 - $i8;

        if i19 == 0 goto label2;

        return i19;

     label2:
        $r8 = r0.<android.text.format.Time$TimeCalculator: libcore.util.ZoneInfo$WallTime wallTime>;

        $i9 = virtualinvoke $r8.<libcore.util.ZoneInfo$WallTime: int getMonthDay()>();

        $r9 = r1.<android.text.format.Time$TimeCalculator: libcore.util.ZoneInfo$WallTime wallTime>;

        $i10 = virtualinvoke $r9.<libcore.util.ZoneInfo$WallTime: int getMonthDay()>();

        i20 = $i9 - $i10;

        if i20 == 0 goto label3;

        return i20;

     label3:
        $r10 = r0.<android.text.format.Time$TimeCalculator: libcore.util.ZoneInfo$WallTime wallTime>;

        $i11 = virtualinvoke $r10.<libcore.util.ZoneInfo$WallTime: int getHour()>();

        $r11 = r1.<android.text.format.Time$TimeCalculator: libcore.util.ZoneInfo$WallTime wallTime>;

        $i12 = virtualinvoke $r11.<libcore.util.ZoneInfo$WallTime: int getHour()>();

        i21 = $i11 - $i12;

        if i21 == 0 goto label4;

        return i21;

     label4:
        $r12 = r0.<android.text.format.Time$TimeCalculator: libcore.util.ZoneInfo$WallTime wallTime>;

        $i13 = virtualinvoke $r12.<libcore.util.ZoneInfo$WallTime: int getMinute()>();

        $r13 = r1.<android.text.format.Time$TimeCalculator: libcore.util.ZoneInfo$WallTime wallTime>;

        $i14 = virtualinvoke $r13.<libcore.util.ZoneInfo$WallTime: int getMinute()>();

        i22 = $i13 - $i14;

        if i22 == 0 goto label5;

        return i22;

     label5:
        $r14 = r0.<android.text.format.Time$TimeCalculator: libcore.util.ZoneInfo$WallTime wallTime>;

        $i15 = virtualinvoke $r14.<libcore.util.ZoneInfo$WallTime: int getSecond()>();

        $r15 = r1.<android.text.format.Time$TimeCalculator: libcore.util.ZoneInfo$WallTime wallTime>;

        $i16 = virtualinvoke $r15.<libcore.util.ZoneInfo$WallTime: int getSecond()>();

        i23 = $i15 - $i16;

        if i23 == 0 goto label6;

        return i23;

     label6:
        return 0;

     label7:
        $l1 = virtualinvoke r0.<android.text.format.Time$TimeCalculator: long toMillis(boolean)>(0);

        $l2 = virtualinvoke r1.<android.text.format.Time$TimeCalculator: long toMillis(boolean)>(0);

        l0 = $l1 - $l2;

        $b3 = l0 cmp 0L;

        if $b3 >= 0 goto label8;

        b17 = -1;

        goto label9;

     label8:
        $b4 = l0 cmp 0L;

        if $b4 <= 0 goto label9;

        b17 = 1;

     label9:
        return b17;
    }

    private static libcore.util.ZoneInfo lookupZoneInfo(java.lang.String)
    {
        java.lang.String r0, $r5, $r13;
        libcore.timezone.ZoneInfoDb $r1, $r6;
        java.lang.Throwable $r7;
        java.lang.StringBuilder $r8, r17;
        java.lang.AssertionError $r12, r16;
        libcore.util.ZoneInfo r14, r15;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <libcore.timezone.ZoneInfoDb: libcore.timezone.ZoneInfoDb getInstance()>();

        r14 = virtualinvoke $r1.<libcore.timezone.ZoneInfoDb: libcore.util.ZoneInfo makeTimeZone(java.lang.String)>(r0);

     label2:
        r15 = r14;

        if r14 != null goto label4;

     label3:
        $r6 = staticinvoke <libcore.timezone.ZoneInfoDb: libcore.timezone.ZoneInfoDb getInstance()>();

        r15 = virtualinvoke $r6.<libcore.timezone.ZoneInfoDb: libcore.util.ZoneInfo makeTimeZone(java.lang.String)>("GMT");

     label4:
        if r15 == null goto label5;

        return r15;

     label5:
        r16 = new java.lang.AssertionError;

        r17 = new java.lang.StringBuilder;

        specialinvoke r17.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("GMT not found: \"");

        virtualinvoke r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        virtualinvoke r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r5 = virtualinvoke r17.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r16.<java.lang.AssertionError: void <init>(java.lang.Object)>($r5);

        throw r16;

     label6:
        $r7 := @caughtexception;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error loading timezone: \"");

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r12 = new java.lang.AssertionError;

        $r13 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<java.lang.AssertionError: void <init>(java.lang.String,java.lang.Throwable)>($r13, $r7);

        throw $r12;

        catch java.io.IOException from label1 to label2 with label6;
        catch java.io.IOException from label3 to label4 with label6;
        catch java.io.IOException from label5 to label6 with label6;
    }

    private char toChar(int)
    {
        android.text.format.Time$TimeCalculator r0;
        int $i0, i1;
        char c2, c3;

        r0 := @this: android.text.format.Time$TimeCalculator;

        i1 := @parameter0: int;

        if i1 < 0 goto label1;

        if i1 > 9 goto label1;

        $i0 = i1 + 48;

        c2 = (char) $i0;

        c3 = c2;

        goto label2;

     label1:
        c3 = 32;

     label2:
        return c3;
    }

    private void updateZoneInfoFromTimeZone()
    {
        android.text.format.Time$TimeCalculator r0;
        libcore.util.ZoneInfo $r1, $r5;
        java.lang.String $r2, $r3, $r4;
        boolean $z0;

        r0 := @this: android.text.format.Time$TimeCalculator;

        $r1 = r0.<android.text.format.Time$TimeCalculator: libcore.util.ZoneInfo zoneInfo>;

        $r2 = virtualinvoke $r1.<libcore.util.ZoneInfo: java.lang.String getID()>();

        $r3 = r0.<android.text.format.Time$TimeCalculator: java.lang.String timezone>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 != 0 goto label1;

        $r4 = r0.<android.text.format.Time$TimeCalculator: java.lang.String timezone>;

        $r5 = staticinvoke <android.text.format.Time$TimeCalculator: libcore.util.ZoneInfo lookupZoneInfo(java.lang.String)>($r4);

        r0.<android.text.format.Time$TimeCalculator: libcore.util.ZoneInfo zoneInfo> = $r5;

     label1:
        return;
    }

    public void copyFieldsFromTime(android.text.format.Time)
    {
        android.text.format.Time$TimeCalculator r0;
        android.text.format.Time r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i10, $i11, $i12, $i13;
        libcore.util.ZoneInfo$WallTime $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11;
        long $l9;
        boolean $z0;
        java.lang.String $r12;
        java.lang.IllegalArgumentException $r13;

        r0 := @this: android.text.format.Time$TimeCalculator;

        r1 := @parameter0: android.text.format.Time;

        $r2 = r0.<android.text.format.Time$TimeCalculator: libcore.util.ZoneInfo$WallTime wallTime>;

        $i0 = r1.<android.text.format.Time: int second>;

        virtualinvoke $r2.<libcore.util.ZoneInfo$WallTime: void setSecond(int)>($i0);

        $r3 = r0.<android.text.format.Time$TimeCalculator: libcore.util.ZoneInfo$WallTime wallTime>;

        $i1 = r1.<android.text.format.Time: int minute>;

        virtualinvoke $r3.<libcore.util.ZoneInfo$WallTime: void setMinute(int)>($i1);

        $r4 = r0.<android.text.format.Time$TimeCalculator: libcore.util.ZoneInfo$WallTime wallTime>;

        $i2 = r1.<android.text.format.Time: int hour>;

        virtualinvoke $r4.<libcore.util.ZoneInfo$WallTime: void setHour(int)>($i2);

        $r5 = r0.<android.text.format.Time$TimeCalculator: libcore.util.ZoneInfo$WallTime wallTime>;

        $i3 = r1.<android.text.format.Time: int monthDay>;

        virtualinvoke $r5.<libcore.util.ZoneInfo$WallTime: void setMonthDay(int)>($i3);

        $r6 = r0.<android.text.format.Time$TimeCalculator: libcore.util.ZoneInfo$WallTime wallTime>;

        $i4 = r1.<android.text.format.Time: int month>;

        virtualinvoke $r6.<libcore.util.ZoneInfo$WallTime: void setMonth(int)>($i4);

        $r7 = r0.<android.text.format.Time$TimeCalculator: libcore.util.ZoneInfo$WallTime wallTime>;

        $i5 = r1.<android.text.format.Time: int year>;

        virtualinvoke $r7.<libcore.util.ZoneInfo$WallTime: void setYear(int)>($i5);

        $r8 = r0.<android.text.format.Time$TimeCalculator: libcore.util.ZoneInfo$WallTime wallTime>;

        $i6 = r1.<android.text.format.Time: int weekDay>;

        virtualinvoke $r8.<libcore.util.ZoneInfo$WallTime: void setWeekDay(int)>($i6);

        $r9 = r0.<android.text.format.Time$TimeCalculator: libcore.util.ZoneInfo$WallTime wallTime>;

        $i7 = r1.<android.text.format.Time: int yearDay>;

        virtualinvoke $r9.<libcore.util.ZoneInfo$WallTime: void setYearDay(int)>($i7);

        $r10 = r0.<android.text.format.Time$TimeCalculator: libcore.util.ZoneInfo$WallTime wallTime>;

        $i8 = r1.<android.text.format.Time: int isDst>;

        virtualinvoke $r10.<libcore.util.ZoneInfo$WallTime: void setIsDst(int)>($i8);

        $r11 = r0.<android.text.format.Time$TimeCalculator: libcore.util.ZoneInfo$WallTime wallTime>;

        $l9 = r1.<android.text.format.Time: long gmtoff>;

        $i10 = (int) $l9;

        virtualinvoke $r11.<libcore.util.ZoneInfo$WallTime: void setGmtOffset(int)>($i10);

        $z0 = r1.<android.text.format.Time: boolean allDay>;

        if $z0 == 0 goto label2;

        $i11 = r1.<android.text.format.Time: int second>;

        if $i11 != 0 goto label1;

        $i12 = r1.<android.text.format.Time: int minute>;

        if $i12 != 0 goto label1;

        $i13 = r1.<android.text.format.Time: int hour>;

        if $i13 != 0 goto label1;

        goto label2;

     label1:
        $r13 = new java.lang.IllegalArgumentException;

        specialinvoke $r13.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("allDay is true but sec, min, hour are not 0.");

        throw $r13;

     label2:
        $r12 = r1.<android.text.format.Time: java.lang.String timezone>;

        r0.<android.text.format.Time$TimeCalculator: java.lang.String timezone> = $r12;

        specialinvoke r0.<android.text.format.Time$TimeCalculator: void updateZoneInfoFromTimeZone()>();

        return;
    }

    public void copyFieldsToTime(android.text.format.Time)
    {
        android.text.format.Time$TimeCalculator r0;
        android.text.format.Time r1;
        libcore.util.ZoneInfo$WallTime $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        long $l10;

        r0 := @this: android.text.format.Time$TimeCalculator;

        r1 := @parameter0: android.text.format.Time;

        $r2 = r0.<android.text.format.Time$TimeCalculator: libcore.util.ZoneInfo$WallTime wallTime>;

        $i0 = virtualinvoke $r2.<libcore.util.ZoneInfo$WallTime: int getSecond()>();

        r1.<android.text.format.Time: int second> = $i0;

        $r3 = r0.<android.text.format.Time$TimeCalculator: libcore.util.ZoneInfo$WallTime wallTime>;

        $i1 = virtualinvoke $r3.<libcore.util.ZoneInfo$WallTime: int getMinute()>();

        r1.<android.text.format.Time: int minute> = $i1;

        $r4 = r0.<android.text.format.Time$TimeCalculator: libcore.util.ZoneInfo$WallTime wallTime>;

        $i2 = virtualinvoke $r4.<libcore.util.ZoneInfo$WallTime: int getHour()>();

        r1.<android.text.format.Time: int hour> = $i2;

        $r5 = r0.<android.text.format.Time$TimeCalculator: libcore.util.ZoneInfo$WallTime wallTime>;

        $i3 = virtualinvoke $r5.<libcore.util.ZoneInfo$WallTime: int getMonthDay()>();

        r1.<android.text.format.Time: int monthDay> = $i3;

        $r6 = r0.<android.text.format.Time$TimeCalculator: libcore.util.ZoneInfo$WallTime wallTime>;

        $i4 = virtualinvoke $r6.<libcore.util.ZoneInfo$WallTime: int getMonth()>();

        r1.<android.text.format.Time: int month> = $i4;

        $r7 = r0.<android.text.format.Time$TimeCalculator: libcore.util.ZoneInfo$WallTime wallTime>;

        $i5 = virtualinvoke $r7.<libcore.util.ZoneInfo$WallTime: int getYear()>();

        r1.<android.text.format.Time: int year> = $i5;

        $r8 = r0.<android.text.format.Time$TimeCalculator: libcore.util.ZoneInfo$WallTime wallTime>;

        $i6 = virtualinvoke $r8.<libcore.util.ZoneInfo$WallTime: int getWeekDay()>();

        r1.<android.text.format.Time: int weekDay> = $i6;

        $r9 = r0.<android.text.format.Time$TimeCalculator: libcore.util.ZoneInfo$WallTime wallTime>;

        $i7 = virtualinvoke $r9.<libcore.util.ZoneInfo$WallTime: int getYearDay()>();

        r1.<android.text.format.Time: int yearDay> = $i7;

        $r10 = r0.<android.text.format.Time$TimeCalculator: libcore.util.ZoneInfo$WallTime wallTime>;

        $i8 = virtualinvoke $r10.<libcore.util.ZoneInfo$WallTime: int getIsDst()>();

        r1.<android.text.format.Time: int isDst> = $i8;

        $r11 = r0.<android.text.format.Time$TimeCalculator: libcore.util.ZoneInfo$WallTime wallTime>;

        $i9 = virtualinvoke $r11.<libcore.util.ZoneInfo$WallTime: int getGmtOffset()>();

        $l10 = (long) $i9;

        r1.<android.text.format.Time: long gmtoff> = $l10;

        return;
    }

    public java.lang.String format(java.lang.String)
    {
        android.text.format.Time$TimeCalculator r0;
        java.lang.String r1, $r5, r6;
        android.text.format.TimeFormatter $r2;
        libcore.util.ZoneInfo $r3;
        libcore.util.ZoneInfo$WallTime $r4;

        r0 := @this: android.text.format.Time$TimeCalculator;

        r1 := @parameter0: java.lang.String;

        r6 = r1;

        if r1 != null goto label1;

        r6 = "%c";

     label1:
        $r2 = new android.text.format.TimeFormatter;

        specialinvoke $r2.<android.text.format.TimeFormatter: void <init>()>();

        $r4 = r0.<android.text.format.Time$TimeCalculator: libcore.util.ZoneInfo$WallTime wallTime>;

        $r3 = r0.<android.text.format.Time$TimeCalculator: libcore.util.ZoneInfo zoneInfo>;

        $r5 = virtualinvoke $r2.<android.text.format.TimeFormatter: java.lang.String format(java.lang.String,libcore.util.ZoneInfo$WallTime,libcore.util.ZoneInfo)>(r6, $r4, $r3);

        return $r5;
    }

    public java.lang.String format2445(boolean)
    {
        android.text.format.Time$TimeCalculator r0;
        boolean z0, $z1;
        char[] r1;
        libcore.util.ZoneInfo$WallTime $r2, $r3, $r4, $r5, $r6, $r7;
        int $i0, $i2, $i4, $i6, $i8, $i9, $i11, $i13, $i15, $i18, $i20, $i22, $i24, $i26, $i28, i32, i33, i34, i35, i36, i37, i38, i39;
        char $c1, $c3, $c5, $c7, $c10, $c12, $c14, $c16, $c17, $c19, $c21, $c23, $c25, $c27, $c29, $c30;
        java.lang.String $r8, $r9, $r10, $r11, $r12;
        byte b31;

        r0 := @this: android.text.format.Time$TimeCalculator;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        b31 = 16;

        goto label2;

     label1:
        b31 = 8;

     label2:
        r1 = newarray (char)[b31];

        $r2 = r0.<android.text.format.Time$TimeCalculator: libcore.util.ZoneInfo$WallTime wallTime>;

        i32 = virtualinvoke $r2.<libcore.util.ZoneInfo$WallTime: int getYear()>();

        $i0 = i32 / 1000;

        $c1 = specialinvoke r0.<android.text.format.Time$TimeCalculator: char toChar(int)>($i0);

        r1[0] = $c1;

        i33 = i32 % 1000;

        $i2 = i33 / 100;

        $c3 = specialinvoke r0.<android.text.format.Time$TimeCalculator: char toChar(int)>($i2);

        r1[1] = $c3;

        i34 = i33 % 100;

        $i4 = i34 / 10;

        $c5 = specialinvoke r0.<android.text.format.Time$TimeCalculator: char toChar(int)>($i4);

        r1[2] = $c5;

        $i6 = i34 % 10;

        $c7 = specialinvoke r0.<android.text.format.Time$TimeCalculator: char toChar(int)>($i6);

        r1[3] = $c7;

        $r3 = r0.<android.text.format.Time$TimeCalculator: libcore.util.ZoneInfo$WallTime wallTime>;

        $i8 = virtualinvoke $r3.<libcore.util.ZoneInfo$WallTime: int getMonth()>();

        i35 = $i8 + 1;

        $i9 = i35 / 10;

        $c10 = specialinvoke r0.<android.text.format.Time$TimeCalculator: char toChar(int)>($i9);

        r1[4] = $c10;

        $i11 = i35 % 10;

        $c12 = specialinvoke r0.<android.text.format.Time$TimeCalculator: char toChar(int)>($i11);

        r1[5] = $c12;

        $r4 = r0.<android.text.format.Time$TimeCalculator: libcore.util.ZoneInfo$WallTime wallTime>;

        i36 = virtualinvoke $r4.<libcore.util.ZoneInfo$WallTime: int getMonthDay()>();

        $i13 = i36 / 10;

        $c14 = specialinvoke r0.<android.text.format.Time$TimeCalculator: char toChar(int)>($i13);

        r1[6] = $c14;

        $i15 = i36 % 10;

        $c16 = specialinvoke r0.<android.text.format.Time$TimeCalculator: char toChar(int)>($i15);

        r1[7] = $c16;

        if z0 != 0 goto label3;

        $r12 = new java.lang.String;

        specialinvoke $r12.<java.lang.String: void <init>(char[],int,int)>(r1, 0, 8);

        return $r12;

     label3:
        $c17 = (char) 84;

        r1[8] = $c17;

        $r5 = r0.<android.text.format.Time$TimeCalculator: libcore.util.ZoneInfo$WallTime wallTime>;

        i37 = virtualinvoke $r5.<libcore.util.ZoneInfo$WallTime: int getHour()>();

        $i18 = i37 / 10;

        $c19 = specialinvoke r0.<android.text.format.Time$TimeCalculator: char toChar(int)>($i18);

        r1[9] = $c19;

        $i20 = i37 % 10;

        $c21 = specialinvoke r0.<android.text.format.Time$TimeCalculator: char toChar(int)>($i20);

        r1[10] = $c21;

        $r6 = r0.<android.text.format.Time$TimeCalculator: libcore.util.ZoneInfo$WallTime wallTime>;

        i38 = virtualinvoke $r6.<libcore.util.ZoneInfo$WallTime: int getMinute()>();

        $i22 = i38 / 10;

        $c23 = specialinvoke r0.<android.text.format.Time$TimeCalculator: char toChar(int)>($i22);

        r1[11] = $c23;

        $i24 = i38 % 10;

        $c25 = specialinvoke r0.<android.text.format.Time$TimeCalculator: char toChar(int)>($i24);

        r1[12] = $c25;

        $r7 = r0.<android.text.format.Time$TimeCalculator: libcore.util.ZoneInfo$WallTime wallTime>;

        i39 = virtualinvoke $r7.<libcore.util.ZoneInfo$WallTime: int getSecond()>();

        $i26 = i39 / 10;

        $c27 = specialinvoke r0.<android.text.format.Time$TimeCalculator: char toChar(int)>($i26);

        r1[13] = $c27;

        $i28 = i39 % 10;

        $c29 = specialinvoke r0.<android.text.format.Time$TimeCalculator: char toChar(int)>($i28);

        r1[14] = $c29;

        $r9 = "UTC";

        $r8 = r0.<android.text.format.Time$TimeCalculator: java.lang.String timezone>;

        $z1 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z1 == 0 goto label4;

        $c30 = (char) 90;

        r1[15] = $c30;

        $r11 = new java.lang.String;

        specialinvoke $r11.<java.lang.String: void <init>(char[],int,int)>(r1, 0, 16);

        return $r11;

     label4:
        $r10 = new java.lang.String;

        specialinvoke $r10.<java.lang.String: void <init>(char[],int,int)>(r1, 0, 15);

        return $r10;
    }

    public void setTimeInMillis(long)
    {
        android.text.format.Time$TimeCalculator r0;
        long l0, $l2;
        int i1;
        libcore.util.ZoneInfo $r1;
        libcore.util.ZoneInfo$WallTime $r2;

        r0 := @this: android.text.format.Time$TimeCalculator;

        l0 := @parameter0: long;

        $l2 = l0 / 1000L;

        i1 = (int) $l2;

        specialinvoke r0.<android.text.format.Time$TimeCalculator: void updateZoneInfoFromTimeZone()>();

        $r2 = r0.<android.text.format.Time$TimeCalculator: libcore.util.ZoneInfo$WallTime wallTime>;

        $r1 = r0.<android.text.format.Time$TimeCalculator: libcore.util.ZoneInfo zoneInfo>;

        virtualinvoke $r2.<libcore.util.ZoneInfo$WallTime: void localtime(int,libcore.util.ZoneInfo)>(i1, $r1);

        return;
    }

    public void switchTimeZone(java.lang.String)
    {
        android.text.format.Time$TimeCalculator r0;
        java.lang.String r1;
        int i0;
        libcore.util.ZoneInfo $r2, $r4;
        libcore.util.ZoneInfo$WallTime $r3, $r5;

        r0 := @this: android.text.format.Time$TimeCalculator;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<android.text.format.Time$TimeCalculator: libcore.util.ZoneInfo$WallTime wallTime>;

        $r2 = r0.<android.text.format.Time$TimeCalculator: libcore.util.ZoneInfo zoneInfo>;

        i0 = virtualinvoke $r3.<libcore.util.ZoneInfo$WallTime: int mktime(libcore.util.ZoneInfo)>($r2);

        r0.<android.text.format.Time$TimeCalculator: java.lang.String timezone> = r1;

        specialinvoke r0.<android.text.format.Time$TimeCalculator: void updateZoneInfoFromTimeZone()>();

        $r5 = r0.<android.text.format.Time$TimeCalculator: libcore.util.ZoneInfo$WallTime wallTime>;

        $r4 = r0.<android.text.format.Time$TimeCalculator: libcore.util.ZoneInfo zoneInfo>;

        virtualinvoke $r5.<libcore.util.ZoneInfo$WallTime: void localtime(int,libcore.util.ZoneInfo)>(i0, $r4);

        return;
    }

    public long toMillis(boolean)
    {
        android.text.format.Time$TimeCalculator r0;
        boolean z0;
        int i0;
        libcore.util.ZoneInfo $r1;
        libcore.util.ZoneInfo$WallTime $r2, $r3;
        long $l1, $l2;

        r0 := @this: android.text.format.Time$TimeCalculator;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        $r3 = r0.<android.text.format.Time$TimeCalculator: libcore.util.ZoneInfo$WallTime wallTime>;

        virtualinvoke $r3.<libcore.util.ZoneInfo$WallTime: void setIsDst(int)>(-1);

     label1:
        $r2 = r0.<android.text.format.Time$TimeCalculator: libcore.util.ZoneInfo$WallTime wallTime>;

        $r1 = r0.<android.text.format.Time$TimeCalculator: libcore.util.ZoneInfo zoneInfo>;

        i0 = virtualinvoke $r2.<libcore.util.ZoneInfo$WallTime: int mktime(libcore.util.ZoneInfo)>($r1);

        if i0 != -1 goto label2;

        return -1L;

     label2:
        $l1 = (long) i0;

        $l2 = $l1 * 1000L;

        return $l2;
    }

    public java.lang.String toStringInternal()
    {
        android.text.format.Time$TimeCalculator r0;
        java.lang.Object[] $r1;
        libcore.util.ZoneInfo$WallTime $r2, $r4, $r6, $r8, $r10, $r12, $r15, $r17, $r19, $r21;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        java.lang.Integer $r3, $r5, $r7, $r9, $r11, $r13, $r16, $r18, $r20, $r22;
        java.lang.String $r14, $r24;
        long $l11, $l12;
        java.lang.Long $r23;

        r0 := @this: android.text.format.Time$TimeCalculator;

        $r1 = newarray (java.lang.Object)[12];

        $r2 = r0.<android.text.format.Time$TimeCalculator: libcore.util.ZoneInfo$WallTime wallTime>;

        $i0 = virtualinvoke $r2.<libcore.util.ZoneInfo$WallTime: int getYear()>();

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r1[0] = $r3;

        $r4 = r0.<android.text.format.Time$TimeCalculator: libcore.util.ZoneInfo$WallTime wallTime>;

        $i1 = virtualinvoke $r4.<libcore.util.ZoneInfo$WallTime: int getMonth()>();

        $i2 = $i1 + 1;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r1[1] = $r5;

        $r6 = r0.<android.text.format.Time$TimeCalculator: libcore.util.ZoneInfo$WallTime wallTime>;

        $i3 = virtualinvoke $r6.<libcore.util.ZoneInfo$WallTime: int getMonthDay()>();

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $r1[2] = $r7;

        $r8 = r0.<android.text.format.Time$TimeCalculator: libcore.util.ZoneInfo$WallTime wallTime>;

        $i4 = virtualinvoke $r8.<libcore.util.ZoneInfo$WallTime: int getHour()>();

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        $r1[3] = $r9;

        $r10 = r0.<android.text.format.Time$TimeCalculator: libcore.util.ZoneInfo$WallTime wallTime>;

        $i5 = virtualinvoke $r10.<libcore.util.ZoneInfo$WallTime: int getMinute()>();

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5);

        $r1[4] = $r11;

        $r12 = r0.<android.text.format.Time$TimeCalculator: libcore.util.ZoneInfo$WallTime wallTime>;

        $i6 = virtualinvoke $r12.<libcore.util.ZoneInfo$WallTime: int getSecond()>();

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i6);

        $r1[5] = $r13;

        $r14 = r0.<android.text.format.Time$TimeCalculator: java.lang.String timezone>;

        $r1[6] = $r14;

        $r15 = r0.<android.text.format.Time$TimeCalculator: libcore.util.ZoneInfo$WallTime wallTime>;

        $i7 = virtualinvoke $r15.<libcore.util.ZoneInfo$WallTime: int getWeekDay()>();

        $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i7);

        $r1[7] = $r16;

        $r17 = r0.<android.text.format.Time$TimeCalculator: libcore.util.ZoneInfo$WallTime wallTime>;

        $i8 = virtualinvoke $r17.<libcore.util.ZoneInfo$WallTime: int getYearDay()>();

        $r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i8);

        $r1[8] = $r18;

        $r19 = r0.<android.text.format.Time$TimeCalculator: libcore.util.ZoneInfo$WallTime wallTime>;

        $i9 = virtualinvoke $r19.<libcore.util.ZoneInfo$WallTime: int getGmtOffset()>();

        $r20 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i9);

        $r1[9] = $r20;

        $r21 = r0.<android.text.format.Time$TimeCalculator: libcore.util.ZoneInfo$WallTime wallTime>;

        $i10 = virtualinvoke $r21.<libcore.util.ZoneInfo$WallTime: int getIsDst()>();

        $r22 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i10);

        $r1[10] = $r22;

        $l11 = virtualinvoke r0.<android.text.format.Time$TimeCalculator: long toMillis(boolean)>(0);

        $l12 = $l11 / 1000L;

        $r23 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l12);

        $r1[11] = $r23;

        $r24 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%04d%02d%02dT%02d%02d%02d%s(%d,%d,%d,%d,%d)", $r1);

        return $r24;
    }
}
