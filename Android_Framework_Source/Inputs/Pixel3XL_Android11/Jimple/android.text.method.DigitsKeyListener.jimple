public class android.text.method.DigitsKeyListener extends android.text.method.NumberKeyListener
{
    private static final char[][] COMPATIBILITY_CHARACTERS;
    private static final int DECIMAL;
    private static final java.lang.String DEFAULT_DECIMAL_POINT_CHARS;
    private static final java.lang.String DEFAULT_SIGN_CHARS;
    private static final char EN_DASH;
    private static final char HYPHEN_MINUS;
    private static final char MINUS_SIGN;
    private static final int SIGN;
    private static final java.lang.Object sLocaleCacheLock;
    private static final java.util.HashMap sLocaleInstanceCache;
    private static final java.lang.Object sStringCacheLock;
    private static final java.util.HashMap sStringInstanceCache;
    private char[] mAccepted;
    private final boolean mDecimal;
    private java.lang.String mDecimalPointChars;
    private final java.util.Locale mLocale;
    private boolean mNeedsAdvancedInput;
    private final boolean mSign;
    private java.lang.String mSignChars;
    private final boolean mStringMode;

    static void <clinit>()
    {
        char[] $r2, $r3, $r5, $r6;
        char[][] $r4;
        java.lang.Object $r7, $r9;
        java.util.HashMap $r8, $r10;

        <android.text.method.DigitsKeyListener: int SIGN> = 1;

        <android.text.method.DigitsKeyListener: char MINUS_SIGN> = 8722;

        <android.text.method.DigitsKeyListener: char HYPHEN_MINUS> = 45;

        <android.text.method.DigitsKeyListener: char EN_DASH> = 8211;

        <android.text.method.DigitsKeyListener: java.lang.String DEFAULT_SIGN_CHARS> = "-+";

        <android.text.method.DigitsKeyListener: java.lang.String DEFAULT_DECIMAL_POINT_CHARS> = ".";

        <android.text.method.DigitsKeyListener: int DECIMAL> = 2;

        $r2 = newarray (char)[10];

        $r2[0] = 48;

        $r2[1] = 49;

        $r2[2] = 50;

        $r2[3] = 51;

        $r2[4] = 52;

        $r2[5] = 53;

        $r2[6] = 54;

        $r2[7] = 55;

        $r2[8] = 56;

        $r2[9] = 57;

        $r3 = newarray (char)[13];

        $r3[0] = 48;

        $r3[1] = 49;

        $r3[2] = 50;

        $r3[3] = 51;

        $r3[4] = 52;

        $r3[5] = 53;

        $r3[6] = 54;

        $r3[7] = 55;

        $r3[8] = 56;

        $r3[9] = 57;

        $r3[10] = 45;

        $r3[11] = 43;

        $r3[12] = 46;

        $r4 = newarray (char[])[4];

        $r4[0] = $r2;

        $r5 = newarray (char)[12];

        $r5[0] = 48;

        $r5[1] = 49;

        $r5[2] = 50;

        $r5[3] = 51;

        $r5[4] = 52;

        $r5[5] = 53;

        $r5[6] = 54;

        $r5[7] = 55;

        $r5[8] = 56;

        $r5[9] = 57;

        $r5[10] = 45;

        $r5[11] = 43;

        $r4[1] = $r5;

        $r6 = newarray (char)[11];

        $r6[0] = 48;

        $r6[1] = 49;

        $r6[2] = 50;

        $r6[3] = 51;

        $r6[4] = 52;

        $r6[5] = 53;

        $r6[6] = 54;

        $r6[7] = 55;

        $r6[8] = 56;

        $r6[9] = 57;

        $r6[10] = 46;

        $r4[2] = $r6;

        $r4[3] = $r3;

        <android.text.method.DigitsKeyListener: char[][] COMPATIBILITY_CHARACTERS> = $r4;

        $r7 = new java.lang.Object;

        specialinvoke $r7.<java.lang.Object: void <init>()>();

        <android.text.method.DigitsKeyListener: java.lang.Object sLocaleCacheLock> = $r7;

        $r8 = new java.util.HashMap;

        specialinvoke $r8.<java.util.HashMap: void <init>()>();

        <android.text.method.DigitsKeyListener: java.util.HashMap sLocaleInstanceCache> = $r8;

        $r9 = new java.lang.Object;

        specialinvoke $r9.<java.lang.Object: void <init>()>();

        <android.text.method.DigitsKeyListener: java.lang.Object sStringCacheLock> = $r9;

        $r10 = new java.util.HashMap;

        specialinvoke $r10.<java.util.HashMap: void <init>()>();

        <android.text.method.DigitsKeyListener: java.util.HashMap sStringInstanceCache> = $r10;

        return;
    }

    public void <init>()
    {
        android.text.method.DigitsKeyListener r0;

        r0 := @this: android.text.method.DigitsKeyListener;

        specialinvoke r0.<android.text.method.DigitsKeyListener: void <init>(java.util.Locale,boolean,boolean)>(null, 0, 0);

        return;
    }

    private void <init>(java.lang.String)
    {
        android.text.method.DigitsKeyListener r0;
        java.lang.String r1;
        int $i0, $i1;
        char[] $r2, $r3;

        r0 := @this: android.text.method.DigitsKeyListener;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<android.text.method.NumberKeyListener: void <init>()>();

        r0.<android.text.method.DigitsKeyListener: java.lang.String mDecimalPointChars> = ".";

        r0.<android.text.method.DigitsKeyListener: java.lang.String mSignChars> = "-+";

        r0.<android.text.method.DigitsKeyListener: boolean mSign> = 0;

        r0.<android.text.method.DigitsKeyListener: boolean mDecimal> = 0;

        r0.<android.text.method.DigitsKeyListener: boolean mStringMode> = 1;

        r0.<android.text.method.DigitsKeyListener: java.util.Locale mLocale> = null;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        $r2 = newarray (char)[$i0];

        r0.<android.text.method.DigitsKeyListener: char[] mAccepted> = $r2;

        $i1 = virtualinvoke r1.<java.lang.String: int length()>();

        $r3 = r0.<android.text.method.DigitsKeyListener: char[] mAccepted>;

        virtualinvoke r1.<java.lang.String: void getChars(int,int,char[],int)>(0, $i1, $r3, 0);

        r0.<android.text.method.DigitsKeyListener: boolean mNeedsAdvancedInput> = 0;

        return;
    }

    public void <init>(java.util.Locale)
    {
        android.text.method.DigitsKeyListener r0;
        java.util.Locale r1;

        r0 := @this: android.text.method.DigitsKeyListener;

        r1 := @parameter0: java.util.Locale;

        specialinvoke r0.<android.text.method.DigitsKeyListener: void <init>(java.util.Locale,boolean,boolean)>(r1, 0, 0);

        return;
    }

    public void <init>(java.util.Locale, boolean, boolean)
    {
        android.text.method.DigitsKeyListener r0;
        boolean z0, z1, $z2;
        java.lang.String r2, $r4, $r5, $r6, $r13, $r16, $r19, r22, r25;
        char c0, c1, $c3;
        java.util.LinkedHashSet $r3;
        int $i2, $i4, $i5;
        java.lang.Character $r7, $r8, $r14, r26;
        java.lang.StringBuilder $r9, $r15;
        java.util.Locale r20;
        android.icu.text.DecimalFormatSymbols r21;
        char[] $r27;

        r0 := @this: android.text.method.DigitsKeyListener;

        r20 := @parameter0: java.util.Locale;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        specialinvoke r0.<android.text.method.NumberKeyListener: void <init>()>();

        r0.<android.text.method.DigitsKeyListener: java.lang.String mDecimalPointChars> = ".";

        r0.<android.text.method.DigitsKeyListener: java.lang.String mSignChars> = "-+";

        r0.<android.text.method.DigitsKeyListener: boolean mSign> = z0;

        r0.<android.text.method.DigitsKeyListener: boolean mDecimal> = z1;

        r0.<android.text.method.DigitsKeyListener: boolean mStringMode> = 0;

        r0.<android.text.method.DigitsKeyListener: java.util.Locale mLocale> = r20;

        if r20 != null goto label1;

        specialinvoke r0.<android.text.method.DigitsKeyListener: void setToCompat()>();

        return;

     label1:
        $r3 = new java.util.LinkedHashSet;

        specialinvoke $r3.<java.util.LinkedHashSet: void <init>()>();

        $z2 = staticinvoke <android.text.method.NumberKeyListener: boolean addDigits(java.util.Collection,java.util.Locale)>($r3, r20);

        if $z2 != 0 goto label2;

        specialinvoke r0.<android.text.method.DigitsKeyListener: void setToCompat()>();

        return;

     label2:
        if z0 != 0 goto label3;

        if z1 == 0 goto label9;

     label3:
        r21 = staticinvoke <android.icu.text.DecimalFormatSymbols: android.icu.text.DecimalFormatSymbols getInstance(java.util.Locale)>(r20);

        if z0 == 0 goto label7;

        $r5 = virtualinvoke r21.<android.icu.text.DecimalFormatSymbols: java.lang.String getMinusSignString()>();

        r22 = staticinvoke <android.text.method.DigitsKeyListener: java.lang.String stripBidiControls(java.lang.String)>($r5);

        $r6 = virtualinvoke r21.<android.icu.text.DecimalFormatSymbols: java.lang.String getPlusSignString()>();

        r2 = staticinvoke <android.text.method.DigitsKeyListener: java.lang.String stripBidiControls(java.lang.String)>($r6);

        $i4 = virtualinvoke r22.<java.lang.String: int length()>();

        if $i4 > 1 goto label6;

        $i5 = virtualinvoke r2.<java.lang.String: int length()>();

        if $i5 <= 1 goto label4;

        goto label6;

     label4:
        c0 = virtualinvoke r22.<java.lang.String: char charAt(int)>(0);

        c1 = virtualinvoke r2.<java.lang.String: char charAt(int)>(0);

        $r7 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(c0);

        virtualinvoke $r3.<java.util.LinkedHashSet: boolean add(java.lang.Object)>($r7);

        $r8 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(c1);

        virtualinvoke $r3.<java.util.LinkedHashSet: boolean add(java.lang.Object)>($r8);

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c0);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c1);

        $r13 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<android.text.method.DigitsKeyListener: java.lang.String mSignChars> = $r13;

        if c0 == 8722 goto label5;

        if c0 != 8211 goto label7;

     label5:
        $r14 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(45);

        virtualinvoke $r3.<java.util.LinkedHashSet: boolean add(java.lang.Object)>($r14);

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r16 = r0.<android.text.method.DigitsKeyListener: java.lang.String mSignChars>;

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(45);

        $r19 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<android.text.method.DigitsKeyListener: java.lang.String mSignChars> = $r19;

        goto label7;

     label6:
        specialinvoke r0.<android.text.method.DigitsKeyListener: void setToCompat()>();

        return;

     label7:
        if z1 == 0 goto label9;

        r25 = virtualinvoke r21.<android.icu.text.DecimalFormatSymbols: java.lang.String getDecimalSeparatorString()>();

        $i2 = virtualinvoke r25.<java.lang.String: int length()>();

        if $i2 <= 1 goto label8;

        specialinvoke r0.<android.text.method.DigitsKeyListener: void setToCompat()>();

        return;

     label8:
        $c3 = virtualinvoke r25.<java.lang.String: char charAt(int)>(0);

        r26 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c3);

        virtualinvoke $r3.<java.util.LinkedHashSet: boolean add(java.lang.Object)>(r26);

        $r4 = virtualinvoke r26.<java.lang.Character: java.lang.String toString()>();

        r0.<android.text.method.DigitsKeyListener: java.lang.String mDecimalPointChars> = $r4;

     label9:
        $r27 = staticinvoke <android.text.method.NumberKeyListener: char[] collectionToArray(java.util.Collection)>($r3);

        r0.<android.text.method.DigitsKeyListener: char[] mAccepted> = $r27;

        specialinvoke r0.<android.text.method.DigitsKeyListener: void calculateNeedForAdvancedInput()>();

        return;
    }

    public void <init>(boolean, boolean)
    {
        android.text.method.DigitsKeyListener r0;
        boolean z0, z1;

        r0 := @this: android.text.method.DigitsKeyListener;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        specialinvoke r0.<android.text.method.DigitsKeyListener: void <init>(java.util.Locale,boolean,boolean)>(null, z0, z1);

        return;
    }

    private void calculateNeedForAdvancedInput()
    {
        android.text.method.DigitsKeyListener r0;
        boolean z0, $z1, $z2, $z3;
        int $i0, i1, i2;
        char[][] $r1;
        char[] $r2, $r3;

        r0 := @this: android.text.method.DigitsKeyListener;

        z0 = r0.<android.text.method.DigitsKeyListener: boolean mSign>;

        $z1 = r0.<android.text.method.DigitsKeyListener: boolean mDecimal>;

        if $z1 == 0 goto label1;

        i1 = 2;

        goto label2;

     label1:
        i1 = 0;

     label2:
        $r1 = <android.text.method.DigitsKeyListener: char[][] COMPATIBILITY_CHARACTERS>;

        i2 = (int) z0;

        $i0 = i2 | i1;

        $r3 = $r1[$i0];

        $r2 = r0.<android.text.method.DigitsKeyListener: char[] mAccepted>;

        $z2 = staticinvoke <com.android.internal.util.ArrayUtils: boolean containsAll(char[],char[])>($r3, $r2);

        $z3 = $z2 ^ 1;

        r0.<android.text.method.DigitsKeyListener: boolean mNeedsAdvancedInput> = $z3;

        return;
    }

    public static android.text.method.DigitsKeyListener getInstance()
    {
        android.text.method.DigitsKeyListener $r0;

        $r0 = staticinvoke <android.text.method.DigitsKeyListener: android.text.method.DigitsKeyListener getInstance(boolean,boolean)>(0, 0);

        return $r0;
    }

    public static android.text.method.DigitsKeyListener getInstance(java.lang.String)
    {
        java.lang.Object r0, $r3;
        android.text.method.DigitsKeyListener r1, r8;
        java.util.HashMap $r2, $r4;
        java.lang.Throwable $r6;
        java.lang.String r7;

        r7 := @parameter0: java.lang.String;

        r0 = <android.text.method.DigitsKeyListener: java.lang.Object sStringCacheLock>;

        entermonitor r0;

     label1:
        $r2 = <android.text.method.DigitsKeyListener: java.util.HashMap sStringInstanceCache>;

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r7);

        r1 = (android.text.method.DigitsKeyListener) $r3;

     label2:
        r8 = r1;

        if r1 != null goto label5;

     label3:
        r8 = new android.text.method.DigitsKeyListener;

        specialinvoke r8.<android.text.method.DigitsKeyListener: void <init>(java.lang.String)>(r7);

     label4:
        $r4 = <android.text.method.DigitsKeyListener: java.util.HashMap sStringInstanceCache>;

        virtualinvoke $r4.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r7, r8);

     label5:
        exitmonitor r0;

     label6:
        return r8;

     label7:
        $r6 := @caughtexception;

     label8:
        exitmonitor r0;

     label9:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label4 to label5 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public static android.text.method.DigitsKeyListener getInstance(java.util.Locale)
    {
        java.util.Locale r0;
        android.text.method.DigitsKeyListener $r1;

        r0 := @parameter0: java.util.Locale;

        $r1 = staticinvoke <android.text.method.DigitsKeyListener: android.text.method.DigitsKeyListener getInstance(java.util.Locale,boolean,boolean)>(r0, 0, 0);

        return $r1;
    }

    public static android.text.method.DigitsKeyListener getInstance(java.util.Locale, android.text.method.DigitsKeyListener)
    {
        java.util.Locale r0;
        android.text.method.DigitsKeyListener r1, $r2;
        boolean $z0, $z1, $z2;

        r0 := @parameter0: java.util.Locale;

        r1 := @parameter1: android.text.method.DigitsKeyListener;

        $z0 = r1.<android.text.method.DigitsKeyListener: boolean mStringMode>;

        if $z0 == 0 goto label1;

        return r1;

     label1:
        $z2 = r1.<android.text.method.DigitsKeyListener: boolean mSign>;

        $z1 = r1.<android.text.method.DigitsKeyListener: boolean mDecimal>;

        $r2 = staticinvoke <android.text.method.DigitsKeyListener: android.text.method.DigitsKeyListener getInstance(java.util.Locale,boolean,boolean)>(r0, $z2, $z1);

        return $r2;
    }

    public static android.text.method.DigitsKeyListener getInstance(java.util.Locale, boolean, boolean)
    {
        boolean z0, z1;
        java.lang.Object r0, $r2;
        java.util.HashMap $r1, $r3;
        android.text.method.DigitsKeyListener $r5, r9, r11;
        java.lang.Throwable $r6;
        java.util.Locale r7;
        int i0, i1, i2;
        android.text.method.DigitsKeyListener[] r8, r10;

        r7 := @parameter0: java.util.Locale;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        if z1 == 0 goto label01;

        i0 = 2;

        goto label02;

     label01:
        i0 = 0;

     label02:
        i2 = (int) z0;

        i1 = i0 | i2;

        r0 = <android.text.method.DigitsKeyListener: java.lang.Object sLocaleCacheLock>;

        entermonitor r0;

     label03:
        $r1 = <android.text.method.DigitsKeyListener: java.util.HashMap sLocaleInstanceCache>;

        $r2 = virtualinvoke $r1.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r7);

        r8 = (android.text.method.DigitsKeyListener[]) $r2;

     label04:
        if r8 == null goto label07;

        $r5 = r8[i1];

        if $r5 == null goto label07;

        r9 = r8[i1];

     label05:
        exitmonitor r0;

     label06:
        return r9;

     label07:
        r10 = r8;

        if r8 != null goto label09;

     label08:
        r10 = newarray (android.text.method.DigitsKeyListener)[4];

        $r3 = <android.text.method.DigitsKeyListener: java.util.HashMap sLocaleInstanceCache>;

        virtualinvoke $r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r7, r10);

     label09:
        r11 = new android.text.method.DigitsKeyListener;

        specialinvoke r11.<android.text.method.DigitsKeyListener: void <init>(java.util.Locale,boolean,boolean)>(r7, z0, z1);

     label10:
        r10[i1] = r11;

     label11:
        exitmonitor r0;

     label12:
        return r11;

     label13:
        $r6 := @caughtexception;

     label14:
        exitmonitor r0;

     label15:
        throw $r6;

        catch java.lang.Throwable from label03 to label04 with label13;
        catch java.lang.Throwable from label05 to label06 with label13;
        catch java.lang.Throwable from label08 to label09 with label13;
        catch java.lang.Throwable from label09 to label10 with label13;
        catch java.lang.Throwable from label11 to label12 with label13;
        catch java.lang.Throwable from label14 to label15 with label13;
    }

    public static android.text.method.DigitsKeyListener getInstance(boolean, boolean)
    {
        boolean z0, z1;
        android.text.method.DigitsKeyListener $r0;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        $r0 = staticinvoke <android.text.method.DigitsKeyListener: android.text.method.DigitsKeyListener getInstance(java.util.Locale,boolean,boolean)>(null, z0, z1);

        return $r0;
    }

    private boolean isDecimalPointChar(char)
    {
        android.text.method.DigitsKeyListener r0;
        char c0;
        java.lang.String $r1;
        int $i1;
        boolean z0;

        r0 := @this: android.text.method.DigitsKeyListener;

        c0 := @parameter0: char;

        $r1 = r0.<android.text.method.DigitsKeyListener: java.lang.String mDecimalPointChars>;

        $i1 = virtualinvoke $r1.<java.lang.String: int indexOf(int)>(c0);

        if $i1 == -1 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    private boolean isSignChar(char)
    {
        android.text.method.DigitsKeyListener r0;
        char c0;
        java.lang.String $r1;
        int $i1;
        boolean z0;

        r0 := @this: android.text.method.DigitsKeyListener;

        c0 := @parameter0: char;

        $r1 = r0.<android.text.method.DigitsKeyListener: java.lang.String mSignChars>;

        $i1 = virtualinvoke $r1.<java.lang.String: int indexOf(int)>(c0);

        if $i1 == -1 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    private void setToCompat()
    {
        android.text.method.DigitsKeyListener r0;
        boolean z0, $z1;
        int $i0, i1, i2;
        char[][] $r1;
        char[] $r2;

        r0 := @this: android.text.method.DigitsKeyListener;

        r0.<android.text.method.DigitsKeyListener: java.lang.String mDecimalPointChars> = ".";

        r0.<android.text.method.DigitsKeyListener: java.lang.String mSignChars> = "-+";

        z0 = r0.<android.text.method.DigitsKeyListener: boolean mSign>;

        $z1 = r0.<android.text.method.DigitsKeyListener: boolean mDecimal>;

        if $z1 == 0 goto label1;

        i1 = 2;

        goto label2;

     label1:
        i1 = 0;

     label2:
        $r1 = <android.text.method.DigitsKeyListener: char[][] COMPATIBILITY_CHARACTERS>;

        i2 = (int) z0;

        $i0 = i2 | i1;

        $r2 = $r1[$i0];

        r0.<android.text.method.DigitsKeyListener: char[] mAccepted> = $r2;

        r0.<android.text.method.DigitsKeyListener: boolean mNeedsAdvancedInput> = 0;

        return;
    }

    private static java.lang.String stripBidiControls(java.lang.String)
    {
        java.lang.String r0, r4, r5;
        char c0;
        int $i1, i2;
        boolean $z0, $z1;
        java.lang.StringBuilder $r1;

        r0 := @parameter0: java.lang.String;

        r4 = "";

        i2 = 0;

     label1:
        $i1 = virtualinvoke r0.<java.lang.String: int length()>();

        if i2 >= $i1 goto label4;

        c0 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i2);

        r5 = r4;

        $z0 = staticinvoke <android.icu.lang.UCharacter: boolean hasBinaryProperty(int,int)>(c0, 2);

        if $z0 != 0 goto label3;

        $z1 = virtualinvoke r4.<java.lang.String: boolean isEmpty()>();

        if $z1 == 0 goto label2;

        r5 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>(c0);

        goto label3;

     label2:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c0);

        r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

     label3:
        i2 = i2 + 1;

        r4 = r5;

        goto label1;

     label4:
        return r4;
    }

    public java.lang.CharSequence filter(java.lang.CharSequence, int, int, android.text.Spanned, int, int)
    {
        android.text.method.DigitsKeyListener r0;
        int i0, $i1, $i2, $i3, $i4, i5, i6, i7, i8, i9, i10, i11, i12, i13, i15, i16, i18, i19, i21, i22;
        java.lang.CharSequence r2, r5, r7;
        boolean $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, z9;
        android.text.SpannableStringBuilder $r4, r8, r10;
        android.text.Spanned r6;
        char c14, c17, c20;

        r0 := @this: android.text.method.DigitsKeyListener;

        r5 := @parameter0: java.lang.CharSequence;

        i5 := @parameter1: int;

        i6 := @parameter2: int;

        r6 := @parameter3: android.text.Spanned;

        i0 := @parameter4: int;

        i7 := @parameter5: int;

        r2 = specialinvoke r0.<android.text.method.NumberKeyListener: java.lang.CharSequence filter(java.lang.CharSequence,int,int,android.text.Spanned,int,int)>(r5, i5, i6, r6, i0, i7);

        $z1 = r0.<android.text.method.DigitsKeyListener: boolean mSign>;

        if $z1 != 0 goto label01;

        $z8 = r0.<android.text.method.DigitsKeyListener: boolean mDecimal>;

        if $z8 != 0 goto label01;

        return r2;

     label01:
        if r2 == null goto label02;

        r7 = r2;

        i8 = 0;

        i9 = interfaceinvoke r2.<java.lang.CharSequence: int length()>();

        goto label03;

     label02:
        i9 = i6;

        i8 = i5;

        r7 = r5;

     label03:
        i10 = -1;

        i11 = -1;

        i12 = interfaceinvoke r6.<android.text.Spanned: int length()>();

        i13 = 0;

     label04:
        if i13 >= i0 goto label07;

        c14 = interfaceinvoke r6.<android.text.Spanned: char charAt(int)>(i13);

        $z6 = specialinvoke r0.<android.text.method.DigitsKeyListener: boolean isSignChar(char)>(c14);

        if $z6 == 0 goto label05;

        i15 = i13;

        goto label06;

     label05:
        i15 = i10;

        $z7 = specialinvoke r0.<android.text.method.DigitsKeyListener: boolean isDecimalPointChar(char)>(c14);

        if $z7 == 0 goto label06;

        i11 = i13;

        i15 = i10;

     label06:
        i13 = i13 + 1;

        i10 = i15;

        goto label04;

     label07:
        i16 = i7;

     label08:
        if i16 >= i12 goto label11;

        c17 = interfaceinvoke r6.<android.text.Spanned: char charAt(int)>(i16);

        $z4 = specialinvoke r0.<android.text.method.DigitsKeyListener: boolean isSignChar(char)>(c17);

        if $z4 == 0 goto label09;

        return "";

     label09:
        $z5 = specialinvoke r0.<android.text.method.DigitsKeyListener: boolean isDecimalPointChar(char)>(c17);

        if $z5 == 0 goto label10;

        i11 = i16;

     label10:
        i16 = i16 + 1;

        goto label08;

     label11:
        r8 = null;

        i18 = i9 - 1;

        i19 = i10;

     label12:
        if i18 < i8 goto label22;

        c20 = interfaceinvoke r7.<java.lang.CharSequence: char charAt(int)>(i18);

        $z2 = specialinvoke r0.<android.text.method.DigitsKeyListener: boolean isSignChar(char)>(c20);

        if $z2 == 0 goto label16;

        if i18 != i8 goto label15;

        if i0 == 0 goto label13;

        goto label15;

     label13:
        if i19 < 0 goto label14;

        z9 = 1;

        i21 = i19;

        i22 = i11;

        goto label18;

     label14:
        i21 = i18;

        i22 = i11;

        z9 = 0;

        goto label18;

     label15:
        z9 = 1;

        i21 = i19;

        i22 = i11;

        goto label18;

     label16:
        i21 = i19;

        i22 = i11;

        z9 = 0;

        $z3 = specialinvoke r0.<android.text.method.DigitsKeyListener: boolean isDecimalPointChar(char)>(c20);

        if $z3 == 0 goto label18;

        if i11 < 0 goto label17;

        z9 = 1;

        i21 = i19;

        i22 = i11;

        goto label18;

     label17:
        i22 = i18;

        z9 = 0;

        i21 = i19;

     label18:
        r10 = r8;

        if z9 == 0 goto label21;

        $i1 = i8 + 1;

        if i9 != $i1 goto label19;

        return "";

     label19:
        r10 = r8;

        if r8 != null goto label20;

        $r4 = new android.text.SpannableStringBuilder;

        specialinvoke $r4.<android.text.SpannableStringBuilder: void <init>(java.lang.CharSequence,int,int)>(r7, i8, i9);

        r10 = $r4;

     label20:
        $i4 = i18 - i8;

        $i2 = i18 + 1;

        $i3 = $i2 - i8;

        virtualinvoke r10.<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder delete(int,int)>($i4, $i3);

     label21:
        i18 = i18 + -1;

        i19 = i21;

        i11 = i22;

        r8 = r10;

        goto label12;

     label22:
        if r8 == null goto label23;

        return r8;

     label23:
        if r2 == null goto label24;

        return r2;

     label24:
        return null;
    }

    protected char[] getAcceptedChars()
    {
        android.text.method.DigitsKeyListener r0;
        char[] $r1;

        r0 := @this: android.text.method.DigitsKeyListener;

        $r1 = r0.<android.text.method.DigitsKeyListener: char[] mAccepted>;

        return $r1;
    }

    public int getInputType()
    {
        android.text.method.DigitsKeyListener r0;
        boolean $z0, $z1, $z2;
        short s0, s1;

        r0 := @this: android.text.method.DigitsKeyListener;

        $z0 = r0.<android.text.method.DigitsKeyListener: boolean mNeedsAdvancedInput>;

        if $z0 == 0 goto label1;

        s0 = 1;

        goto label3;

     label1:
        s1 = 2;

        $z1 = r0.<android.text.method.DigitsKeyListener: boolean mSign>;

        if $z1 == 0 goto label2;

        s1 = 2 | 4096;

     label2:
        s0 = s1;

        $z2 = r0.<android.text.method.DigitsKeyListener: boolean mDecimal>;

        if $z2 == 0 goto label3;

        s0 = s1 | 8192;

     label3:
        return s0;
    }
}
