public class android.text.method.LinkMovementMethod extends android.text.method.ScrollingMovementMethod
{
    private static final int CLICK;
    private static final int DOWN;
    private static java.lang.Object FROM_BELOW;
    private static final int HIDE_FLOATING_TOOLBAR_DELAY_MS;
    private static final int UP;
    private static android.text.method.LinkMovementMethod sInstance;

    static void <clinit>()
    {
        android.text.NoCopySpan$Concrete $r0;

        <android.text.method.LinkMovementMethod: int UP> = 2;

        <android.text.method.LinkMovementMethod: int HIDE_FLOATING_TOOLBAR_DELAY_MS> = 200;

        <android.text.method.LinkMovementMethod: int DOWN> = 3;

        <android.text.method.LinkMovementMethod: int CLICK> = 1;

        $r0 = new android.text.NoCopySpan$Concrete;

        specialinvoke $r0.<android.text.NoCopySpan$Concrete: void <init>()>();

        <android.text.method.LinkMovementMethod: java.lang.Object FROM_BELOW> = $r0;

        return;
    }

    public void <init>()
    {
        android.text.method.LinkMovementMethod r0;

        r0 := @this: android.text.method.LinkMovementMethod;

        specialinvoke r0.<android.text.method.ScrollingMovementMethod: void <init>()>();

        return;
    }

    private boolean action(int, android.widget.TextView, android.text.Spannable)
    {
        android.text.method.LinkMovementMethod r0;
        android.widget.TextView r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, i9, i10, i11, i12, i13, i14, i15, i16, i17, i18, i19, i20, i21, i22, i24, i25, i27, i28, i29, i31, i32, i34, i35;
        java.lang.Object[] $r2, $r3;
        boolean $z0;
        android.view.textclassifier.TextLinks$TextLinkSpan $r4;
        android.text.style.ClickableSpan $r5, $r6, $r7, $r8, r14;
        java.lang.Object $r9;
        android.text.Spannable r10;
        android.text.Layout r11;
        android.text.style.ClickableSpan[] r12, r13;

        r0 := @this: android.text.method.LinkMovementMethod;

        i8 := @parameter0: int;

        r1 := @parameter1: android.widget.TextView;

        r10 := @parameter2: android.text.Spannable;

        r11 = virtualinvoke r1.<android.widget.TextView: android.text.Layout getLayout()>();

        i9 = virtualinvoke r1.<android.widget.TextView: int getTotalPaddingTop()>();

        i10 = virtualinvoke r1.<android.widget.TextView: int getTotalPaddingBottom()>();

        i11 = virtualinvoke r1.<android.widget.TextView: int getScrollY()>();

        $i1 = virtualinvoke r1.<android.widget.TextView: int getHeight()>();

        $i3 = $i1 + i11;

        $i2 = i9 + i10;

        i12 = $i3 - $i2;

        i13 = virtualinvoke r11.<android.text.Layout: int getLineForVertical(int)>(i11);

        i14 = virtualinvoke r11.<android.text.Layout: int getLineForVertical(int)>(i12);

        i15 = virtualinvoke r11.<android.text.Layout: int getLineStart(int)>(i13);

        i16 = virtualinvoke r11.<android.text.Layout: int getLineEnd(int)>(i14);

        $r2 = interfaceinvoke r10.<android.text.Spannable: java.lang.Object[] getSpans(int,int,java.lang.Class)>(i15, i16, class "Landroid/text/style/ClickableSpan;");

        r12 = (android.text.style.ClickableSpan[]) $r2;

        i17 = staticinvoke <android.text.Selection: int getSelectionStart(java.lang.CharSequence)>(r10);

        i18 = staticinvoke <android.text.Selection: int getSelectionEnd(java.lang.CharSequence)>(r10);

        i19 = staticinvoke <java.lang.Math: int min(int,int)>(i17, i18);

        i20 = staticinvoke <java.lang.Math: int max(int,int)>(i17, i18);

        if i19 >= 0 goto label01;

        $r9 = <android.text.method.LinkMovementMethod: java.lang.Object FROM_BELOW>;

        $i7 = interfaceinvoke r10.<android.text.Spannable: int getSpanStart(java.lang.Object)>($r9);

        if $i7 < 0 goto label01;

        i19 = interfaceinvoke r10.<android.text.Spannable: int length()>();

        i20 = i19;

        goto label01;

     label01:
        i21 = i19;

        if i19 <= i16 goto label02;

        i20 = 2147483647;

        i21 = 2147483647;

     label02:
        i22 = i20;

        if i20 >= i15 goto label03;

        i22 = -1;

        i21 = -1;

     label03:
        if i8 == 1 goto label16;

        if i8 == 2 goto label10;

        if i8 == 3 goto label04;

        goto label20;

     label04:
        i24 = 2147483647;

        i25 = 0;

        i27 = 2147483647;

     label05:
        $i6 = lengthof r12;

        if i25 >= $i6 goto label08;

        $r7 = r12[i25];

        i0 = interfaceinvoke r10.<android.text.Spannable: int getSpanStart(java.lang.Object)>($r7);

        if i0 > i21 goto label06;

        i28 = i24;

        i29 = i27;

        if i21 != i22 goto label07;

     label06:
        i28 = i24;

        i29 = i27;

        if i0 >= i27 goto label07;

        $r8 = r12[i25];

        i28 = interfaceinvoke r10.<android.text.Spannable: int getSpanEnd(java.lang.Object)>($r8);

        i29 = i0;

     label07:
        i25 = i25 + 1;

        i24 = i28;

        i27 = i29;

        goto label05;

     label08:
        if i24 >= 2147483647 goto label09;

        staticinvoke <android.text.Selection: void setSelection(android.text.Spannable,int,int)>(r10, i27, i24);

        return 1;

     label09:
        goto label20;

     label10:
        i31 = -1;

        i32 = 0;

        i34 = -1;

     label11:
        $i5 = lengthof r12;

        if i32 >= $i5 goto label15;

        $r5 = r12[i32];

        i35 = interfaceinvoke r10.<android.text.Spannable: int getSpanEnd(java.lang.Object)>($r5);

        if i35 < i22 goto label13;

        if i21 != i22 goto label12;

        goto label13;

     label12:
        goto label14;

     label13:
        if i35 <= i31 goto label14;

        $r6 = r12[i32];

        i34 = interfaceinvoke r10.<android.text.Spannable: int getSpanStart(java.lang.Object)>($r6);

        i31 = i35;

        goto label14;

     label14:
        i32 = i32 + 1;

        goto label11;

     label15:
        if i34 < 0 goto label20;

        staticinvoke <android.text.Selection: void setSelection(android.text.Spannable,int,int)>(r10, i31, i34);

        return 1;

     label16:
        if i21 != i22 goto label17;

        return 0;

     label17:
        $r3 = interfaceinvoke r10.<android.text.Spannable: java.lang.Object[] getSpans(int,int,java.lang.Class)>(i21, i22, class "Landroid/text/style/ClickableSpan;");

        r13 = (android.text.style.ClickableSpan[]) $r3;

        $i4 = lengthof r13;

        if $i4 == 1 goto label18;

        return 0;

     label18:
        r14 = r13[0];

        $z0 = r14 instanceof android.view.textclassifier.TextLinks$TextLinkSpan;

        if $z0 == 0 goto label19;

        $r4 = (android.view.textclassifier.TextLinks$TextLinkSpan) r14;

        virtualinvoke $r4.<android.view.textclassifier.TextLinks$TextLinkSpan: void onClick(android.view.View,int)>(r1, 1);

        goto label20;

     label19:
        virtualinvoke r14.<android.text.style.ClickableSpan: void onClick(android.view.View)>(r1);

     label20:
        return 0;
    }

    public static android.text.method.MovementMethod getInstance()
    {
        android.text.method.LinkMovementMethod $r0, $r1, $r2;

        $r0 = <android.text.method.LinkMovementMethod: android.text.method.LinkMovementMethod sInstance>;

        if $r0 != null goto label1;

        $r2 = new android.text.method.LinkMovementMethod;

        specialinvoke $r2.<android.text.method.LinkMovementMethod: void <init>()>();

        <android.text.method.LinkMovementMethod: android.text.method.LinkMovementMethod sInstance> = $r2;

     label1:
        $r1 = <android.text.method.LinkMovementMethod: android.text.method.LinkMovementMethod sInstance>;

        return $r1;
    }

    public boolean canSelectArbitrarily()
    {
        android.text.method.LinkMovementMethod r0;

        r0 := @this: android.text.method.LinkMovementMethod;

        return 1;
    }

    protected boolean down(android.widget.TextView, android.text.Spannable)
    {
        android.text.method.LinkMovementMethod r0;
        android.widget.TextView r1;
        android.text.Spannable r2;
        boolean $z0, $z1;

        r0 := @this: android.text.method.LinkMovementMethod;

        r1 := @parameter0: android.widget.TextView;

        r2 := @parameter1: android.text.Spannable;

        $z0 = specialinvoke r0.<android.text.method.LinkMovementMethod: boolean action(int,android.widget.TextView,android.text.Spannable)>(3, r1, r2);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $z1 = specialinvoke r0.<android.text.method.ScrollingMovementMethod: boolean down(android.widget.TextView,android.text.Spannable)>(r1, r2);

        return $z1;
    }

    protected boolean handleMovementKey(android.widget.TextView, android.text.Spannable, int, int, android.view.KeyEvent)
    {
        android.text.method.LinkMovementMethod r0;
        android.widget.TextView r1;
        android.text.Spannable r2;
        int i0, i1, $i2, $i3;
        android.view.KeyEvent r3;
        boolean $z0, $z1, $z2;

        r0 := @this: android.text.method.LinkMovementMethod;

        r1 := @parameter0: android.widget.TextView;

        r2 := @parameter1: android.text.Spannable;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        r3 := @parameter4: android.view.KeyEvent;

        if i0 == 23 goto label1;

        if i0 == 66 goto label1;

        goto label2;

     label1:
        $z0 = staticinvoke <android.view.KeyEvent: boolean metaStateHasNoModifiers(int)>(i1);

        if $z0 == 0 goto label2;

        $i2 = virtualinvoke r3.<android.view.KeyEvent: int getAction()>();

        if $i2 != 0 goto label2;

        $i3 = virtualinvoke r3.<android.view.KeyEvent: int getRepeatCount()>();

        if $i3 != 0 goto label2;

        $z1 = specialinvoke r0.<android.text.method.LinkMovementMethod: boolean action(int,android.widget.TextView,android.text.Spannable)>(1, r1, r2);

        if $z1 == 0 goto label2;

        return 1;

     label2:
        $z2 = specialinvoke r0.<android.text.method.ScrollingMovementMethod: boolean handleMovementKey(android.widget.TextView,android.text.Spannable,int,int,android.view.KeyEvent)>(r1, r2, i0, i1, r3);

        return $z2;
    }

    public void initialize(android.widget.TextView, android.text.Spannable)
    {
        android.text.method.LinkMovementMethod r0;
        android.widget.TextView r1;
        android.text.Spannable r2;
        java.lang.Object $r3;

        r0 := @this: android.text.method.LinkMovementMethod;

        r1 := @parameter0: android.widget.TextView;

        r2 := @parameter1: android.text.Spannable;

        staticinvoke <android.text.Selection: void removeSelection(android.text.Spannable)>(r2);

        $r3 = <android.text.method.LinkMovementMethod: java.lang.Object FROM_BELOW>;

        interfaceinvoke r2.<android.text.Spannable: void removeSpan(java.lang.Object)>($r3);

        return;
    }

    protected boolean left(android.widget.TextView, android.text.Spannable)
    {
        android.text.method.LinkMovementMethod r0;
        android.widget.TextView r1;
        android.text.Spannable r2;
        boolean $z0, $z1;

        r0 := @this: android.text.method.LinkMovementMethod;

        r1 := @parameter0: android.widget.TextView;

        r2 := @parameter1: android.text.Spannable;

        $z0 = specialinvoke r0.<android.text.method.LinkMovementMethod: boolean action(int,android.widget.TextView,android.text.Spannable)>(2, r1, r2);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $z1 = specialinvoke r0.<android.text.method.ScrollingMovementMethod: boolean left(android.widget.TextView,android.text.Spannable)>(r1, r2);

        return $z1;
    }

    public void onTakeFocus(android.widget.TextView, android.text.Spannable, int)
    {
        android.text.method.LinkMovementMethod r0;
        android.widget.TextView r1;
        android.text.Spannable r2;
        int i0, $i1;
        java.lang.Object $r3, $r4;

        r0 := @this: android.text.method.LinkMovementMethod;

        r1 := @parameter0: android.widget.TextView;

        r2 := @parameter1: android.text.Spannable;

        i0 := @parameter2: int;

        staticinvoke <android.text.Selection: void removeSelection(android.text.Spannable)>(r2);

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        $r4 = <android.text.method.LinkMovementMethod: java.lang.Object FROM_BELOW>;

        interfaceinvoke r2.<android.text.Spannable: void setSpan(java.lang.Object,int,int,int)>($r4, 0, 0, 34);

        goto label2;

     label1:
        $r3 = <android.text.method.LinkMovementMethod: java.lang.Object FROM_BELOW>;

        interfaceinvoke r2.<android.text.Spannable: void removeSpan(java.lang.Object)>($r3);

     label2:
        return;
    }

    public boolean onTouchEvent(android.widget.TextView, android.text.Spannable, android.view.MotionEvent)
    {
        android.text.method.LinkMovementMethod r0;
        android.widget.TextView r1;
        android.text.Spannable r2;
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, i15, i16;
        float $f0, $f1, $f2;
        java.lang.Object[] $r3;
        boolean $z0, $z1;
        android.content.Context $r4;
        android.content.pm.ApplicationInfo $r5;
        android.view.textclassifier.TextLinks$TextLinkSpan $r6;
        android.view.MotionEvent r7;
        android.text.Layout r8;
        android.text.style.ClickableSpan[] r9;
        android.text.style.ClickableSpan r10;

        r0 := @this: android.text.method.LinkMovementMethod;

        r1 := @parameter0: android.widget.TextView;

        r2 := @parameter1: android.text.Spannable;

        r7 := @parameter2: android.view.MotionEvent;

        i0 = virtualinvoke r7.<android.view.MotionEvent: int getAction()>();

        if i0 == 1 goto label1;

        if i0 != 0 goto label7;

     label1:
        $f0 = virtualinvoke r7.<android.view.MotionEvent: float getX()>();

        i1 = (int) $f0;

        $f1 = virtualinvoke r7.<android.view.MotionEvent: float getY()>();

        i15 = (int) $f1;

        i2 = virtualinvoke r1.<android.widget.TextView: int getTotalPaddingLeft()>();

        i3 = virtualinvoke r1.<android.widget.TextView: int getTotalPaddingTop()>();

        i4 = virtualinvoke r1.<android.widget.TextView: int getScrollX()>();

        i5 = virtualinvoke r1.<android.widget.TextView: int getScrollY()>();

        r8 = virtualinvoke r1.<android.widget.TextView: android.text.Layout getLayout()>();

        $i6 = i15 - i3;

        $i7 = $i6 + i5;

        $i8 = virtualinvoke r8.<android.text.Layout: int getLineForVertical(int)>($i7);

        $i9 = i1 - i2;

        $i10 = $i9 + i4;

        $f2 = (float) $i10;

        i16 = virtualinvoke r8.<android.text.Layout: int getOffsetForHorizontal(int,float)>($i8, $f2);

        $r3 = interfaceinvoke r2.<android.text.Spannable: java.lang.Object[] getSpans(int,int,java.lang.Class)>(i16, i16, class "Landroid/text/style/ClickableSpan;");

        r9 = (android.text.style.ClickableSpan[]) $r3;

        $i11 = lengthof r9;

        if $i11 == 0 goto label6;

        r10 = r9[0];

        if i0 != 1 goto label3;

        $z1 = r10 instanceof android.view.textclassifier.TextLinks$TextLinkSpan;

        if $z1 == 0 goto label2;

        $r6 = (android.view.textclassifier.TextLinks$TextLinkSpan) r10;

        virtualinvoke $r6.<android.view.textclassifier.TextLinks$TextLinkSpan: void onClick(android.view.View,int)>(r1, 0);

        goto label5;

     label2:
        virtualinvoke r10.<android.text.style.ClickableSpan: void onClick(android.view.View)>(r1);

        goto label5;

     label3:
        if i0 != 0 goto label5;

        $r4 = virtualinvoke r1.<android.widget.TextView: android.content.Context getContext()>();

        $r5 = virtualinvoke $r4.<android.content.Context: android.content.pm.ApplicationInfo getApplicationInfo()>();

        $i12 = $r5.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

        if $i12 < 28 goto label4;

        virtualinvoke r1.<android.widget.TextView: void hideFloatingToolbar(int)>(200);

     label4:
        $i13 = interfaceinvoke r2.<android.text.Spannable: int getSpanStart(java.lang.Object)>(r10);

        $i14 = interfaceinvoke r2.<android.text.Spannable: int getSpanEnd(java.lang.Object)>(r10);

        staticinvoke <android.text.Selection: void setSelection(android.text.Spannable,int,int)>(r2, $i13, $i14);

     label5:
        return 1;

     label6:
        staticinvoke <android.text.Selection: void removeSelection(android.text.Spannable)>(r2);

     label7:
        $z0 = specialinvoke r0.<android.text.method.ScrollingMovementMethod: boolean onTouchEvent(android.widget.TextView,android.text.Spannable,android.view.MotionEvent)>(r1, r2, r7);

        return $z0;
    }

    protected boolean right(android.widget.TextView, android.text.Spannable)
    {
        android.text.method.LinkMovementMethod r0;
        android.widget.TextView r1;
        android.text.Spannable r2;
        boolean $z0, $z1;

        r0 := @this: android.text.method.LinkMovementMethod;

        r1 := @parameter0: android.widget.TextView;

        r2 := @parameter1: android.text.Spannable;

        $z0 = specialinvoke r0.<android.text.method.LinkMovementMethod: boolean action(int,android.widget.TextView,android.text.Spannable)>(3, r1, r2);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $z1 = specialinvoke r0.<android.text.method.ScrollingMovementMethod: boolean right(android.widget.TextView,android.text.Spannable)>(r1, r2);

        return $z1;
    }

    protected boolean up(android.widget.TextView, android.text.Spannable)
    {
        android.text.method.LinkMovementMethod r0;
        android.widget.TextView r1;
        android.text.Spannable r2;
        boolean $z0, $z1;

        r0 := @this: android.text.method.LinkMovementMethod;

        r1 := @parameter0: android.widget.TextView;

        r2 := @parameter1: android.text.Spannable;

        $z0 = specialinvoke r0.<android.text.method.LinkMovementMethod: boolean action(int,android.widget.TextView,android.text.Spannable)>(2, r1, r2);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $z1 = specialinvoke r0.<android.text.method.ScrollingMovementMethod: boolean up(android.widget.TextView,android.text.Spannable)>(r1, r2);

        return $z1;
    }
}
