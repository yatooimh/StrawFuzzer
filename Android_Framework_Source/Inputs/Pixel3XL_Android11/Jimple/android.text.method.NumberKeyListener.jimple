public abstract class android.text.method.NumberKeyListener extends android.text.method.BaseKeyListener implements android.text.InputFilter
{
    private static final java.lang.String DATE_TIME_FORMAT_SYMBOLS;
    private static final char SINGLE_QUOTE;

    public void <init>()
    {
        android.text.method.NumberKeyListener r0;

        r0 := @this: android.text.method.NumberKeyListener;

        specialinvoke r0.<android.text.method.BaseKeyListener: void <init>()>();

        return;
    }

    static boolean addAmPmChars(java.util.Collection, java.util.Locale)
    {
        java.util.Collection r0;
        char c0;
        libcore.icu.LocaleData $r1;
        int $i1, $i2, i3, i4;
        java.lang.String $r2, $r3;
        boolean $z0;
        java.lang.Character $r4;
        java.util.Locale r5;
        java.lang.String[] r6;

        r0 := @parameter0: java.util.Collection;

        r5 := @parameter1: java.util.Locale;

        if r5 != null goto label1;

        return 0;

     label1:
        $r1 = staticinvoke <libcore.icu.LocaleData: libcore.icu.LocaleData get(java.util.Locale)>(r5);

        r6 = $r1.<libcore.icu.LocaleData: java.lang.String[] amPm>;

        i3 = 0;

     label2:
        $i1 = lengthof r6;

        if i3 >= $i1 goto label6;

        i4 = 0;

     label3:
        $r2 = r6[i3];

        $i2 = virtualinvoke $r2.<java.lang.String: int length()>();

        if i4 >= $i2 goto label5;

        $r3 = r6[i3];

        c0 = virtualinvoke $r3.<java.lang.String: char charAt(int)>(i4);

        $z0 = staticinvoke <java.lang.Character: boolean isBmpCodePoint(int)>(c0);

        if $z0 == 0 goto label4;

        $r4 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(c0);

        interfaceinvoke r0.<java.util.Collection: boolean add(java.lang.Object)>($r4);

        i4 = i4 + 1;

        goto label3;

     label4:
        return 0;

     label5:
        i3 = i3 + 1;

        goto label2;

     label6:
        return 1;
    }

    static boolean addDigits(java.util.Collection, java.util.Locale)
    {
        java.util.Collection r0;
        android.icu.text.DecimalFormatSymbols $r1;
        java.lang.String $r2, $r3;
        int $i0, i2;
        char $c1;
        java.lang.Character $r4;
        java.util.Locale r5;
        java.lang.String[] r6;

        r0 := @parameter0: java.util.Collection;

        r5 := @parameter1: java.util.Locale;

        if r5 != null goto label1;

        return 0;

     label1:
        $r1 = staticinvoke <android.icu.text.DecimalFormatSymbols: android.icu.text.DecimalFormatSymbols getInstance(java.util.Locale)>(r5);

        r6 = virtualinvoke $r1.<android.icu.text.DecimalFormatSymbols: java.lang.String[] getDigitStrings()>();

        i2 = 0;

     label2:
        if i2 >= 10 goto label4;

        $r2 = r6[i2];

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i0 <= 1 goto label3;

        return 0;

     label3:
        $r3 = r6[i2];

        $c1 = virtualinvoke $r3.<java.lang.String: char charAt(int)>(0);

        $r4 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c1);

        interfaceinvoke r0.<java.util.Collection: boolean add(java.lang.Object)>($r4);

        i2 = i2 + 1;

        goto label2;

     label4:
        return 1;
    }

    static boolean addFormatCharsFromSkeleton(java.util.Collection, java.util.Locale, java.lang.String, java.lang.String)
    {
        java.util.Collection r0;
        java.lang.String r1, r2, $r4, r6;
        char c0, $c4;
        boolean $z1, z3, z4, z5;
        java.lang.Character $r3;
        int $i1, $i2, $i3, i5, i6;
        java.util.Locale r5;

        r0 := @parameter0: java.util.Collection;

        r5 := @parameter1: java.util.Locale;

        r1 := @parameter2: java.lang.String;

        r2 := @parameter3: java.lang.String;

        if r5 != null goto label01;

        return 0;

     label01:
        r6 = staticinvoke <android.text.format.DateFormat: java.lang.String getBestDateTimePattern(java.util.Locale,java.lang.String)>(r5, r1);

        z3 = 1;

        i5 = 0;

     label02:
        i6 = virtualinvoke r6.<java.lang.String: int length()>();

        if i5 >= i6 goto label10;

        c0 = virtualinvoke r6.<java.lang.String: char charAt(int)>(i5);

        $z1 = staticinvoke <java.lang.Character: boolean isSurrogate(char)>(c0);

        if $z1 == 0 goto label03;

        return 0;

     label03:
        z4 = z3;

        if c0 != 39 goto label06;

        if z3 != 0 goto label04;

        z5 = 1;

        goto label05;

     label04:
        z5 = 0;

     label05:
        z4 = z5;

        if i5 == 0 goto label09;

        z4 = z5;

        $i3 = i5 - 1;

        $c4 = virtualinvoke r6.<java.lang.String: char charAt(int)>($i3);

        if $c4 == 39 goto label06;

        z4 = z5;

        goto label09;

     label06:
        if z4 == 0 goto label08;

        $i1 = virtualinvoke r2.<java.lang.String: int indexOf(int)>(c0);

        if $i1 == -1 goto label07;

        goto label09;

     label07:
        $r4 = "GyYuUrQqMLlwWdDFgEecabBhHKkjJCmsSAzZOvVXx";

        $i2 = virtualinvoke $r4.<java.lang.String: int indexOf(int)>(c0);

        if $i2 == -1 goto label08;

        return 0;

     label08:
        $r3 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(c0);

        interfaceinvoke r0.<java.util.Collection: boolean add(java.lang.Object)>($r3);

     label09:
        i5 = i5 + 1;

        z3 = z4;

        goto label02;

     label10:
        return 1;
    }

    static boolean addFormatCharsFromSkeletons(java.util.Collection, java.util.Locale, java.lang.String[], java.lang.String)
    {
        java.util.Collection r0;
        java.util.Locale r1;
        java.lang.String[] r2;
        java.lang.String r3, $r4;
        int $i0, i1;
        boolean $z0;

        r0 := @parameter0: java.util.Collection;

        r1 := @parameter1: java.util.Locale;

        r2 := @parameter2: java.lang.String[];

        r3 := @parameter3: java.lang.String;

        i1 = 0;

     label1:
        $i0 = lengthof r2;

        if i1 >= $i0 goto label3;

        $r4 = r2[i1];

        $z0 = staticinvoke <android.text.method.NumberKeyListener: boolean addFormatCharsFromSkeleton(java.util.Collection,java.util.Locale,java.lang.String,java.lang.String)>(r0, r1, $r4, r3);

        if $z0 != 0 goto label2;

        return 0;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return 1;
    }

    static char[] collectionToArray(java.util.Collection)
    {
        char[] r0;
        int $i0, i2;
        boolean $z0;
        java.lang.Object $r1;
        java.lang.Character $r2;
        char $c1;
        java.util.Collection r3;
        java.util.Iterator r4;

        r3 := @parameter0: java.util.Collection;

        $i0 = interfaceinvoke r3.<java.util.Collection: int size()>();

        r0 = newarray (char)[$i0];

        i2 = 0;

        r4 = interfaceinvoke r3.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r1 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        $r2 = (java.lang.Character) $r1;

        $c1 = virtualinvoke $r2.<java.lang.Character: char charValue()>();

        r0[i2] = $c1;

        i2 = i2 + 1;

        goto label1;

     label2:
        return r0;
    }

    protected static boolean ok(char[], char)
    {
        char[] r0;
        char c0, $c2;
        int $i1, i3;

        r0 := @parameter0: char[];

        c0 := @parameter1: char;

        $i1 = lengthof r0;

        i3 = $i1 - 1;

     label1:
        if i3 < 0 goto label3;

        $c2 = r0[i3];

        if $c2 != c0 goto label2;

        return 1;

     label2:
        i3 = i3 + -1;

        goto label1;

     label3:
        return 0;
    }

    public java.lang.CharSequence filter(java.lang.CharSequence, int, int, android.text.Spanned, int, int)
    {
        android.text.method.NumberKeyListener r0;
        java.lang.CharSequence r1;
        int i0, i1, $i2, $i3, $i5, i7, i8, i9, i10, i11;
        char[] r2;
        android.text.SpannableStringBuilder $r3;
        char $c4, $c6;
        boolean $z0, $z1;
        android.text.Spanned r5;

        r0 := @this: android.text.method.NumberKeyListener;

        r1 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        i7 := @parameter2: int;

        r5 := @parameter3: android.text.Spanned;

        i8 := @parameter4: int;

        i1 := @parameter5: int;

        r2 = virtualinvoke r0.<android.text.method.NumberKeyListener: char[] getAcceptedChars()>();

        i9 = i0;

     label1:
        if i9 >= i7 goto label3;

        $c6 = interfaceinvoke r1.<java.lang.CharSequence: char charAt(int)>(i9);

        $z1 = staticinvoke <android.text.method.NumberKeyListener: boolean ok(char[],char)>(r2, $c6);

        if $z1 != 0 goto label2;

        goto label3;

     label2:
        i9 = i9 + 1;

        goto label1;

     label3:
        if i9 != i7 goto label4;

        return null;

     label4:
        $i2 = i7 - i0;

        if $i2 != 1 goto label5;

        return "";

     label5:
        $r3 = new android.text.SpannableStringBuilder;

        specialinvoke $r3.<android.text.SpannableStringBuilder: void <init>(java.lang.CharSequence,int,int)>(r1, i0, i7);

        i10 = i7 - i0;

        i11 = i10 + -1;

     label6:
        $i3 = i9 - i0;

        if i11 < $i3 goto label8;

        $c4 = interfaceinvoke r1.<java.lang.CharSequence: char charAt(int)>(i11);

        $z0 = staticinvoke <android.text.method.NumberKeyListener: boolean ok(char[],char)>(r2, $c4);

        if $z0 != 0 goto label7;

        $i5 = i11 + 1;

        virtualinvoke $r3.<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder delete(int,int)>(i11, $i5);

     label7:
        i11 = i11 + -1;

        goto label6;

     label8:
        return $r3;
    }

    protected abstract char[] getAcceptedChars();

    protected int lookup(android.view.KeyEvent, android.text.Spannable)
    {
        android.text.method.NumberKeyListener r0;
        android.view.KeyEvent r1;
        android.text.Spannable r2;
        char[] $r3;
        int $i0;
        char $c1;

        r0 := @this: android.text.method.NumberKeyListener;

        r1 := @parameter0: android.view.KeyEvent;

        r2 := @parameter1: android.text.Spannable;

        $r3 = virtualinvoke r0.<android.text.method.NumberKeyListener: char[] getAcceptedChars()>();

        $i0 = staticinvoke <android.text.method.NumberKeyListener: int getMetaState(java.lang.CharSequence,android.view.KeyEvent)>(r2, r1);

        $c1 = virtualinvoke r1.<android.view.KeyEvent: char getMatch(char[],int)>($r3, $i0);

        return $c1;
    }

    public boolean onKeyDown(android.view.View, android.text.Editable, int, android.view.KeyEvent)
    {
        android.text.method.NumberKeyListener r0;
        android.view.View r1;
        android.text.Editable r2;
        int i0, $i1, $i3, i5, i6, i7, i8, i9, i10, i11;
        android.view.KeyEvent r3;
        char $c2, $c4;
        java.lang.String $r4, $r6;
        boolean $z0;

        r0 := @this: android.text.method.NumberKeyListener;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.text.Editable;

        i0 := @parameter2: int;

        r3 := @parameter3: android.view.KeyEvent;

        i5 = staticinvoke <android.text.Selection: int getSelectionStart(java.lang.CharSequence)>(r2);

        i6 = staticinvoke <android.text.Selection: int getSelectionEnd(java.lang.CharSequence)>(r2);

        i7 = staticinvoke <java.lang.Math: int min(int,int)>(i5, i6);

        i8 = staticinvoke <java.lang.Math: int max(int,int)>(i5, i6);

        i9 = 0;

        if i7 < 0 goto label1;

        i10 = i8;

        if i8 >= 0 goto label2;

     label1:
        i10 = 0;

        i7 = 0;

        staticinvoke <android.text.Selection: void setSelection(android.text.Spannable,int)>(r2, 0);

     label2:
        if r3 == null goto label3;

        i11 = virtualinvoke r0.<android.text.method.NumberKeyListener: int lookup(android.view.KeyEvent,android.text.Spannable)>(r3, r2);

        goto label4;

     label3:
        i11 = 0;

     label4:
        if r3 == null goto label5;

        i9 = virtualinvoke r3.<android.view.KeyEvent: int getRepeatCount()>();

     label5:
        if i9 != 0 goto label7;

        if i11 == 0 goto label8;

        if i7 == i10 goto label6;

        staticinvoke <android.text.Selection: void setSelection(android.text.Spannable,int)>(r2, i10);

     label6:
        $c4 = (char) i11;

        $r6 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>($c4);

        interfaceinvoke r2.<android.text.Editable: android.text.Editable replace(int,int,java.lang.CharSequence)>(i7, i10, $r6);

        staticinvoke <android.text.method.NumberKeyListener: void adjustMetaAfterKeypress(android.text.Spannable)>(r2);

        return 1;

     label7:
        if i11 != 48 goto label8;

        if i9 != 1 goto label8;

        if i7 != i10 goto label8;

        if i10 <= 0 goto label8;

        $i1 = i7 - 1;

        $c2 = interfaceinvoke r2.<android.text.Editable: char charAt(int)>($i1);

        if $c2 != 48 goto label8;

        $i3 = i7 - 1;

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>(43);

        interfaceinvoke r2.<android.text.Editable: android.text.Editable replace(int,int,java.lang.CharSequence)>($i3, i10, $r4);

        staticinvoke <android.text.method.NumberKeyListener: void adjustMetaAfterKeypress(android.text.Spannable)>(r2);

        return 1;

     label8:
        staticinvoke <android.text.method.NumberKeyListener: void adjustMetaAfterKeypress(android.text.Spannable)>(r2);

        $z0 = specialinvoke r0.<android.text.method.BaseKeyListener: boolean onKeyDown(android.view.View,android.text.Editable,int,android.view.KeyEvent)>(r1, r2, i0, r3);

        return $z0;
    }

    public static void <clinit>()
    {
        <android.text.method.NumberKeyListener: char SINGLE_QUOTE> = 39;

        <android.text.method.NumberKeyListener: java.lang.String DATE_TIME_FORMAT_SYMBOLS> = "GyYuUrQqMLlwWdDFgEecabBhHKkjJCmsSAzZOvVXx";

        return;
    }
}
