class android.text.method.PasswordTransformationMethod$PasswordCharSequence extends java.lang.Object implements java.lang.CharSequence, android.text.GetChars
{
    private java.lang.CharSequence mSource;

    public void <init>(java.lang.CharSequence)
    {
        android.text.method.PasswordTransformationMethod$PasswordCharSequence r0;
        java.lang.CharSequence r1;

        r0 := @this: android.text.method.PasswordTransformationMethod$PasswordCharSequence;

        r1 := @parameter0: java.lang.CharSequence;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.text.method.PasswordTransformationMethod$PasswordCharSequence: java.lang.CharSequence mSource> = r1;

        return;
    }

    public char charAt(int)
    {
        android.text.method.PasswordTransformationMethod$PasswordCharSequence r0;
        int i0, i1, $i3, $i4, i7, i8, i9, $i10, i11;
        android.text.Spanned r1;
        boolean $z0;
        char $c2, $c5, $c6;
        java.lang.Object $r2, $r3;
        java.lang.Object[] $r4;
        android.text.method.PasswordTransformationMethod$Visible $r5, $r7, $r8;
        android.text.method.PasswordTransformationMethod $r6;
        java.lang.CharSequence $r9, $r10, r11;
        android.text.method.PasswordTransformationMethod$Visible[] r12;

        r0 := @this: android.text.method.PasswordTransformationMethod$PasswordCharSequence;

        i0 := @parameter0: int;

        r11 = r0.<android.text.method.PasswordTransformationMethod$PasswordCharSequence: java.lang.CharSequence mSource>;

        $z0 = r11 instanceof android.text.Spanned;

        if $z0 == 0 goto label4;

        r1 = (android.text.Spanned) r11;

        $r2 = <android.text.method.TextKeyListener: java.lang.Object ACTIVE>;

        i7 = interfaceinvoke r1.<android.text.Spanned: int getSpanStart(java.lang.Object)>($r2);

        $r3 = <android.text.method.TextKeyListener: java.lang.Object ACTIVE>;

        i8 = interfaceinvoke r1.<android.text.Spanned: int getSpanEnd(java.lang.Object)>($r3);

        if i0 < i7 goto label1;

        if i0 >= i8 goto label1;

        $r10 = r0.<android.text.method.PasswordTransformationMethod$PasswordCharSequence: java.lang.CharSequence mSource>;

        $c6 = interfaceinvoke $r10.<java.lang.CharSequence: char charAt(int)>(i0);

        return $c6;

     label1:
        $i3 = interfaceinvoke r1.<android.text.Spanned: int length()>();

        $r4 = interfaceinvoke r1.<android.text.Spanned: java.lang.Object[] getSpans(int,int,java.lang.Class)>(0, $i3, class "Landroid/text/method/PasswordTransformationMethod$Visible;");

        r12 = (android.text.method.PasswordTransformationMethod$Visible[]) $r4;

        i9 = 0;

     label2:
        $i10 = lengthof r12;

        if i9 >= $i10 goto label4;

        $r5 = r12[i9];

        $r6 = staticinvoke <android.text.method.PasswordTransformationMethod$Visible: android.text.method.PasswordTransformationMethod access$000(android.text.method.PasswordTransformationMethod$Visible)>($r5);

        $i4 = interfaceinvoke r1.<android.text.Spanned: int getSpanStart(java.lang.Object)>($r6);

        if $i4 < 0 goto label3;

        $r7 = r12[i9];

        i1 = interfaceinvoke r1.<android.text.Spanned: int getSpanStart(java.lang.Object)>($r7);

        $r8 = r12[i9];

        i11 = interfaceinvoke r1.<android.text.Spanned: int getSpanEnd(java.lang.Object)>($r8);

        if i0 < i1 goto label3;

        if i0 >= i11 goto label3;

        $r9 = r0.<android.text.method.PasswordTransformationMethod$PasswordCharSequence: java.lang.CharSequence mSource>;

        $c5 = interfaceinvoke $r9.<java.lang.CharSequence: char charAt(int)>(i0);

        return $c5;

     label3:
        i9 = i9 + 1;

        goto label2;

     label4:
        $c2 = staticinvoke <android.text.method.PasswordTransformationMethod: char access$100()>();

        return $c2;
    }

    public void getChars(int, int, char[], int)
    {
        android.text.method.PasswordTransformationMethod$PasswordCharSequence r0;
        int i0, i1, i2, $i3, $i4, $i6, $i7, $i8, $i9, $i10, $i11, i12, i13, i14, i15, i16, i17, i18, i19, i20;
        char[] r1;
        android.text.Spanned r2;
        android.text.method.PasswordTransformationMethod$Visible[] r3;
        int[] r4, r13, r14, r16;
        java.lang.CharSequence $r5, r15;
        boolean $z0, z2;
        char $c5;
        java.lang.Object $r6, $r7;
        java.lang.Object[] $r8;
        android.text.method.PasswordTransformationMethod$Visible $r9, $r11, $r12;
        android.text.method.PasswordTransformationMethod $r10;

        r0 := @this: android.text.method.PasswordTransformationMethod$PasswordCharSequence;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: char[];

        i2 := @parameter3: int;

        $r5 = r0.<android.text.method.PasswordTransformationMethod$PasswordCharSequence: java.lang.CharSequence mSource>;

        staticinvoke <android.text.TextUtils: void getChars(java.lang.CharSequence,int,int,char[],int)>($r5, i0, i1, r1, i2);

        i12 = -1;

        i13 = -1;

        i14 = 0;

        r13 = null;

        r14 = null;

        r15 = r0.<android.text.method.PasswordTransformationMethod$PasswordCharSequence: java.lang.CharSequence mSource>;

        $z0 = r15 instanceof android.text.Spanned;

        if $z0 == 0 goto label03;

        r2 = (android.text.Spanned) r15;

        $r6 = <android.text.method.TextKeyListener: java.lang.Object ACTIVE>;

        i15 = interfaceinvoke r2.<android.text.Spanned: int getSpanStart(java.lang.Object)>($r6);

        $r7 = <android.text.method.TextKeyListener: java.lang.Object ACTIVE>;

        i16 = interfaceinvoke r2.<android.text.Spanned: int getSpanEnd(java.lang.Object)>($r7);

        $i8 = interfaceinvoke r2.<android.text.Spanned: int length()>();

        $r8 = interfaceinvoke r2.<android.text.Spanned: java.lang.Object[] getSpans(int,int,java.lang.Class)>(0, $i8, class "Landroid/text/method/PasswordTransformationMethod$Visible;");

        r3 = (android.text.method.PasswordTransformationMethod$Visible[]) $r8;

        i17 = lengthof r3;

        r4 = newarray (int)[i17];

        r16 = newarray (int)[i17];

        i18 = 0;

     label01:
        i12 = i15;

        i13 = i16;

        i14 = i17;

        r13 = r4;

        r14 = r16;

        if i18 >= i17 goto label03;

        $r9 = r3[i18];

        $r10 = staticinvoke <android.text.method.PasswordTransformationMethod$Visible: android.text.method.PasswordTransformationMethod access$000(android.text.method.PasswordTransformationMethod$Visible)>($r9);

        $i9 = interfaceinvoke r2.<android.text.Spanned: int getSpanStart(java.lang.Object)>($r10);

        if $i9 < 0 goto label02;

        $r11 = r3[i18];

        $i10 = interfaceinvoke r2.<android.text.Spanned: int getSpanStart(java.lang.Object)>($r11);

        r4[i18] = $i10;

        $r12 = r3[i18];

        $i11 = interfaceinvoke r2.<android.text.Spanned: int getSpanEnd(java.lang.Object)>($r12);

        r16[i18] = $i11;

     label02:
        i18 = i18 + 1;

        goto label01;

     label03:
        i19 = i0;

     label04:
        if i19 >= i1 goto label10;

        if i19 < i12 goto label05;

        if i19 < i13 goto label09;

     label05:
        i20 = 0;

     label06:
        z2 = 0;

        if i20 >= i14 goto label08;

        $i6 = r13[i20];

        if i19 < $i6 goto label07;

        $i7 = r14[i20];

        if i19 >= $i7 goto label07;

        z2 = 1;

        goto label08;

     label07:
        i20 = i20 + 1;

        goto label06;

     label08:
        if z2 != 0 goto label09;

        $i3 = i19 - i0;

        $i4 = $i3 + i2;

        $c5 = staticinvoke <android.text.method.PasswordTransformationMethod: char access$100()>();

        r1[$i4] = $c5;

     label09:
        i19 = i19 + 1;

        goto label04;

     label10:
        return;
    }

    public int length()
    {
        android.text.method.PasswordTransformationMethod$PasswordCharSequence r0;
        java.lang.CharSequence $r1;
        int $i0;

        r0 := @this: android.text.method.PasswordTransformationMethod$PasswordCharSequence;

        $r1 = r0.<android.text.method.PasswordTransformationMethod$PasswordCharSequence: java.lang.CharSequence mSource>;

        $i0 = interfaceinvoke $r1.<java.lang.CharSequence: int length()>();

        return $i0;
    }

    public java.lang.CharSequence subSequence(int, int)
    {
        android.text.method.PasswordTransformationMethod$PasswordCharSequence r0;
        int i0, i1, $i2;
        char[] r1;
        java.lang.String $r2;

        r0 := @this: android.text.method.PasswordTransformationMethod$PasswordCharSequence;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = i1 - i0;

        r1 = newarray (char)[$i2];

        virtualinvoke r0.<android.text.method.PasswordTransformationMethod$PasswordCharSequence: void getChars(int,int,char[],int)>(i0, i1, r1, 0);

        $r2 = new java.lang.String;

        specialinvoke $r2.<java.lang.String: void <init>(char[])>(r1);

        return $r2;
    }

    public java.lang.String toString()
    {
        android.text.method.PasswordTransformationMethod$PasswordCharSequence r0;
        int $i0;
        java.lang.CharSequence $r1;
        java.lang.String $r2;

        r0 := @this: android.text.method.PasswordTransformationMethod$PasswordCharSequence;

        $i0 = virtualinvoke r0.<android.text.method.PasswordTransformationMethod$PasswordCharSequence: int length()>();

        $r1 = virtualinvoke r0.<android.text.method.PasswordTransformationMethod$PasswordCharSequence: java.lang.CharSequence subSequence(int,int)>(0, $i0);

        $r2 = interfaceinvoke $r1.<java.lang.CharSequence: java.lang.String toString()>();

        return $r2;
    }
}
