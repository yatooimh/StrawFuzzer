public class android.text.method.PasswordTransformationMethod extends java.lang.Object implements android.text.method.TransformationMethod, android.text.TextWatcher
{
    private static char DOT;
    private static android.text.method.PasswordTransformationMethod sInstance;

    static void <clinit>()
    {
        char $c0;

        $c0 = (char) 8226;

        <android.text.method.PasswordTransformationMethod: char DOT> = $c0;

        return;
    }

    public void <init>()
    {
        android.text.method.PasswordTransformationMethod r0;

        r0 := @this: android.text.method.PasswordTransformationMethod;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static char access$100()
    {
        char $c0;

        $c0 = <android.text.method.PasswordTransformationMethod: char DOT>;

        return $c0;
    }

    public static android.text.method.PasswordTransformationMethod getInstance()
    {
        android.text.method.PasswordTransformationMethod $r0, r1;

        r1 = <android.text.method.PasswordTransformationMethod: android.text.method.PasswordTransformationMethod sInstance>;

        if r1 == null goto label1;

        return r1;

     label1:
        $r0 = new android.text.method.PasswordTransformationMethod;

        specialinvoke $r0.<android.text.method.PasswordTransformationMethod: void <init>()>();

        <android.text.method.PasswordTransformationMethod: android.text.method.PasswordTransformationMethod sInstance> = $r0;

        return $r0;
    }

    private static void removeVisibleSpans(android.text.Spannable)
    {
        android.text.Spannable r0;
        android.text.method.PasswordTransformationMethod$Visible[] r1;
        int $i0, $i1, i2;
        java.lang.Object[] $r2;
        android.text.method.PasswordTransformationMethod$Visible $r3;

        r0 := @parameter0: android.text.Spannable;

        $i0 = interfaceinvoke r0.<android.text.Spannable: int length()>();

        $r2 = interfaceinvoke r0.<android.text.Spannable: java.lang.Object[] getSpans(int,int,java.lang.Class)>(0, $i0, class "Landroid/text/method/PasswordTransformationMethod$Visible;");

        r1 = (android.text.method.PasswordTransformationMethod$Visible[]) $r2;

        i2 = 0;

     label1:
        $i1 = lengthof r1;

        if i2 >= $i1 goto label2;

        $r3 = r1[i2];

        interfaceinvoke r0.<android.text.Spannable: void removeSpan(java.lang.Object)>($r3);

        i2 = i2 + 1;

        goto label1;

     label2:
        return;
    }

    public void afterTextChanged(android.text.Editable)
    {
        android.text.method.PasswordTransformationMethod r0;
        android.text.Editable r1;

        r0 := @this: android.text.method.PasswordTransformationMethod;

        r1 := @parameter0: android.text.Editable;

        return;
    }

    public void beforeTextChanged(java.lang.CharSequence, int, int, int)
    {
        android.text.method.PasswordTransformationMethod r0;
        java.lang.CharSequence r1;
        int i0, i1, i2;

        r0 := @this: android.text.method.PasswordTransformationMethod;

        r1 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        return;
    }

    public java.lang.CharSequence getTransformation(java.lang.CharSequence, android.view.View)
    {
        android.text.method.PasswordTransformationMethod r0;
        java.lang.CharSequence r1;
        android.view.View r2;
        android.text.Spannable r3;
        android.text.method.PasswordTransformationMethod$ViewReference[] r4;
        boolean $z0;
        android.text.method.PasswordTransformationMethod$PasswordCharSequence $r5;
        int $i0, $i1, i2;
        java.lang.Object[] $r6;
        android.text.method.PasswordTransformationMethod$ViewReference $r7, $r8;

        r0 := @this: android.text.method.PasswordTransformationMethod;

        r1 := @parameter0: java.lang.CharSequence;

        r2 := @parameter1: android.view.View;

        $z0 = r1 instanceof android.text.Spannable;

        if $z0 == 0 goto label3;

        r3 = (android.text.Spannable) r1;

        $i0 = interfaceinvoke r3.<android.text.Spannable: int length()>();

        $r6 = interfaceinvoke r3.<android.text.Spannable: java.lang.Object[] getSpans(int,int,java.lang.Class)>(0, $i0, class "Landroid/text/method/PasswordTransformationMethod$ViewReference;");

        r4 = (android.text.method.PasswordTransformationMethod$ViewReference[]) $r6;

        i2 = 0;

     label1:
        $i1 = lengthof r4;

        if i2 >= $i1 goto label2;

        $r8 = r4[i2];

        interfaceinvoke r3.<android.text.Spannable: void removeSpan(java.lang.Object)>($r8);

        i2 = i2 + 1;

        goto label1;

     label2:
        staticinvoke <android.text.method.PasswordTransformationMethod: void removeVisibleSpans(android.text.Spannable)>(r3);

        $r7 = new android.text.method.PasswordTransformationMethod$ViewReference;

        specialinvoke $r7.<android.text.method.PasswordTransformationMethod$ViewReference: void <init>(android.view.View)>(r2);

        interfaceinvoke r3.<android.text.Spannable: void setSpan(java.lang.Object,int,int,int)>($r7, 0, 0, 34);

     label3:
        $r5 = new android.text.method.PasswordTransformationMethod$PasswordCharSequence;

        specialinvoke $r5.<android.text.method.PasswordTransformationMethod$PasswordCharSequence: void <init>(java.lang.CharSequence)>(r1);

        return $r5;
    }

    public void onFocusChanged(android.view.View, java.lang.CharSequence, boolean, int, android.graphics.Rect)
    {
        android.text.method.PasswordTransformationMethod r0;
        android.view.View r1;
        java.lang.CharSequence r2;
        boolean z0, $z1;
        int i0;
        android.graphics.Rect r3;
        android.text.Spannable $r4;

        r0 := @this: android.text.method.PasswordTransformationMethod;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: java.lang.CharSequence;

        z0 := @parameter2: boolean;

        i0 := @parameter3: int;

        r3 := @parameter4: android.graphics.Rect;

        if z0 != 0 goto label1;

        $z1 = r2 instanceof android.text.Spannable;

        if $z1 == 0 goto label1;

        $r4 = (android.text.Spannable) r2;

        staticinvoke <android.text.method.PasswordTransformationMethod: void removeVisibleSpans(android.text.Spannable)>($r4);

     label1:
        return;
    }

    public void onTextChanged(java.lang.CharSequence, int, int, int)
    {
        android.text.method.PasswordTransformationMethod r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, i9;
        android.text.Spannable r1;
        android.text.method.PasswordTransformationMethod$ViewReference[] r2;
        boolean $z0;
        java.lang.Object[] $r3;
        android.text.method.TextKeyListener $r4;
        android.content.Context $r5;
        android.text.method.PasswordTransformationMethod$Visible $r6;
        android.text.method.PasswordTransformationMethod$ViewReference $r7;
        java.lang.Object $r8;
        java.lang.CharSequence r9;
        android.view.View r10;

        r0 := @this: android.text.method.PasswordTransformationMethod;

        r9 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        i8 := @parameter2: int;

        i1 := @parameter3: int;

        $z0 = r9 instanceof android.text.Spannable;

        if $z0 == 0 goto label5;

        r1 = (android.text.Spannable) r9;

        $i2 = interfaceinvoke r9.<java.lang.CharSequence: int length()>();

        $r3 = interfaceinvoke r1.<android.text.Spannable: java.lang.Object[] getSpans(int,int,java.lang.Class)>(0, $i2, class "Landroid/text/method/PasswordTransformationMethod$ViewReference;");

        r2 = (android.text.method.PasswordTransformationMethod$ViewReference[]) $r3;

        $i3 = lengthof r2;

        if $i3 != 0 goto label1;

        return;

     label1:
        r10 = null;

        i9 = 0;

     label2:
        if r10 != null goto label3;

        $i7 = lengthof r2;

        if i9 >= $i7 goto label3;

        $r7 = r2[i9];

        $r8 = virtualinvoke $r7.<android.text.method.PasswordTransformationMethod$ViewReference: java.lang.Object get()>();

        r10 = (android.view.View) $r8;

        i9 = i9 + 1;

        goto label2;

     label3:
        if r10 != null goto label4;

        return;

     label4:
        $r4 = staticinvoke <android.text.method.TextKeyListener: android.text.method.TextKeyListener getInstance()>();

        $r5 = virtualinvoke r10.<android.view.View: android.content.Context getContext()>();

        $i4 = virtualinvoke $r4.<android.text.method.TextKeyListener: int getPrefs(android.content.Context)>($r5);

        $i5 = $i4 & 8;

        if $i5 == 0 goto label5;

        if i1 <= 0 goto label5;

        staticinvoke <android.text.method.PasswordTransformationMethod: void removeVisibleSpans(android.text.Spannable)>(r1);

        if i1 != 1 goto label5;

        $r6 = new android.text.method.PasswordTransformationMethod$Visible;

        specialinvoke $r6.<android.text.method.PasswordTransformationMethod$Visible: void <init>(android.text.Spannable,android.text.method.PasswordTransformationMethod)>(r1, r0);

        $i6 = i0 + i1;

        interfaceinvoke r1.<android.text.Spannable: void setSpan(java.lang.Object,int,int,int)>($r6, i0, $i6, 33);

     label5:
        return;
    }
}
