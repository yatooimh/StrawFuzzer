public class android.text.style.IconMarginSpan extends java.lang.Object implements android.text.style.LeadingMarginSpan, android.text.style.LineHeightSpan
{
    private final android.graphics.Bitmap mBitmap;
    private final int mPad;

    public void <init>(android.graphics.Bitmap)
    {
        android.text.style.IconMarginSpan r0;
        android.graphics.Bitmap r1;

        r0 := @this: android.text.style.IconMarginSpan;

        r1 := @parameter0: android.graphics.Bitmap;

        specialinvoke r0.<android.text.style.IconMarginSpan: void <init>(android.graphics.Bitmap,int)>(r1, 0);

        return;
    }

    public void <init>(android.graphics.Bitmap, int)
    {
        android.text.style.IconMarginSpan r0;
        android.graphics.Bitmap r1;
        int i0;

        r0 := @this: android.text.style.IconMarginSpan;

        r1 := @parameter0: android.graphics.Bitmap;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.text.style.IconMarginSpan: android.graphics.Bitmap mBitmap> = r1;

        r0.<android.text.style.IconMarginSpan: int mPad> = i0;

        return;
    }

    public void chooseHeight(java.lang.CharSequence, int, int, int, int, android.graphics.Paint$FontMetricsInt)
    {
        android.text.style.IconMarginSpan r0;
        java.lang.CharSequence r1;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, i17, i18, i19, i20, i21;
        android.graphics.Paint$FontMetricsInt r2;
        android.text.Spanned $r3;
        android.graphics.Bitmap $r4;

        r0 := @this: android.text.style.IconMarginSpan;

        r1 := @parameter0: java.lang.CharSequence;

        i17 := @parameter1: int;

        i18 := @parameter2: int;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        r2 := @parameter5: android.graphics.Paint$FontMetricsInt;

        $r3 = (android.text.Spanned) r1;

        $i2 = interfaceinvoke $r3.<android.text.Spanned: int getSpanEnd(java.lang.Object)>(r0);

        if i18 != $i2 goto label2;

        $r4 = r0.<android.text.style.IconMarginSpan: android.graphics.Bitmap mBitmap>;

        i19 = virtualinvoke $r4.<android.graphics.Bitmap: int getHeight()>();

        $i3 = r2.<android.graphics.Paint$FontMetricsInt: int descent>;

        $i5 = $i3 + i1;

        $i4 = r2.<android.graphics.Paint$FontMetricsInt: int ascent>;

        $i6 = $i5 - $i4;

        $i7 = $i6 - i0;

        i20 = i19 - $i7;

        if i20 <= 0 goto label1;

        $i15 = r2.<android.graphics.Paint$FontMetricsInt: int descent>;

        $i16 = $i15 + i20;

        r2.<android.graphics.Paint$FontMetricsInt: int descent> = $i16;

     label1:
        $i8 = r2.<android.graphics.Paint$FontMetricsInt: int bottom>;

        $i10 = $i8 + i1;

        $i9 = r2.<android.graphics.Paint$FontMetricsInt: int top>;

        $i11 = $i10 - $i9;

        $i12 = $i11 - i0;

        i21 = i19 - $i12;

        if i21 <= 0 goto label2;

        $i13 = r2.<android.graphics.Paint$FontMetricsInt: int bottom>;

        $i14 = $i13 + i21;

        r2.<android.graphics.Paint$FontMetricsInt: int bottom> = $i14;

     label2:
        return;
    }

    public void drawLeadingMargin(android.graphics.Canvas, android.graphics.Paint, int, int, int, int, int, java.lang.CharSequence, int, int, boolean, android.text.Layout)
    {
        android.text.style.IconMarginSpan r0;
        android.graphics.Canvas r1;
        android.graphics.Paint r2;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, i8, i9, i10;
        java.lang.CharSequence r3;
        boolean z0;
        android.text.Layout r4;
        android.text.Spanned $r5;
        float $f0, $f1;
        android.graphics.Bitmap $r6, $r7;

        r0 := @this: android.text.style.IconMarginSpan;

        r1 := @parameter0: android.graphics.Canvas;

        r2 := @parameter1: android.graphics.Paint;

        i8 := @parameter2: int;

        i0 := @parameter3: int;

        i9 := @parameter4: int;

        i1 := @parameter5: int;

        i2 := @parameter6: int;

        r3 := @parameter7: java.lang.CharSequence;

        i3 := @parameter8: int;

        i4 := @parameter9: int;

        z0 := @parameter10: boolean;

        r4 := @parameter11: android.text.Layout;

        $r5 = (android.text.Spanned) r3;

        $i5 = interfaceinvoke $r5.<android.text.Spanned: int getSpanStart(java.lang.Object)>(r0);

        $i6 = virtualinvoke r4.<android.text.Layout: int getLineForOffset(int)>($i5);

        i10 = virtualinvoke r4.<android.text.Layout: int getLineTop(int)>($i6);

        if i0 >= 0 goto label1;

        $r7 = r0.<android.text.style.IconMarginSpan: android.graphics.Bitmap mBitmap>;

        $i7 = virtualinvoke $r7.<android.graphics.Bitmap: int getWidth()>();

        i8 = i8 - $i7;

        goto label1;

     label1:
        $r6 = r0.<android.text.style.IconMarginSpan: android.graphics.Bitmap mBitmap>;

        $f1 = (float) i8;

        $f0 = (float) i10;

        virtualinvoke r1.<android.graphics.Canvas: void drawBitmap(android.graphics.Bitmap,float,float,android.graphics.Paint)>($r6, $f1, $f0, r2);

        return;
    }

    public int getLeadingMargin(boolean)
    {
        android.text.style.IconMarginSpan r0;
        boolean z0;
        android.graphics.Bitmap $r1;
        int $i0, $i1, $i2;

        r0 := @this: android.text.style.IconMarginSpan;

        z0 := @parameter0: boolean;

        $r1 = r0.<android.text.style.IconMarginSpan: android.graphics.Bitmap mBitmap>;

        $i0 = virtualinvoke $r1.<android.graphics.Bitmap: int getWidth()>();

        $i1 = r0.<android.text.style.IconMarginSpan: int mPad>;

        $i2 = $i0 + $i1;

        return $i2;
    }
}
