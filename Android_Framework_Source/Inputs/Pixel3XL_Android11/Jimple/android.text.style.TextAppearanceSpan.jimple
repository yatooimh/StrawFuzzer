public class android.text.style.TextAppearanceSpan extends android.text.style.MetricAffectingSpan implements android.text.ParcelableSpan
{
    private final boolean mElegantTextHeight;
    private final java.lang.String mFamilyName;
    private final java.lang.String mFontFeatureSettings;
    private final java.lang.String mFontVariationSettings;
    private final boolean mHasElegantTextHeight;
    private final boolean mHasLetterSpacing;
    private final float mLetterSpacing;
    private final int mShadowColor;
    private final float mShadowDx;
    private final float mShadowDy;
    private final float mShadowRadius;
    private final int mStyle;
    private final android.content.res.ColorStateList mTextColor;
    private final android.content.res.ColorStateList mTextColorLink;
    private final int mTextFontWeight;
    private final android.os.LocaleList mTextLocales;
    private final int mTextSize;
    private final android.graphics.Typeface mTypeface;

    public void <init>(android.content.Context, int)
    {
        android.text.style.TextAppearanceSpan r0;
        android.content.Context r1;
        int i0;

        r0 := @this: android.text.style.TextAppearanceSpan;

        r1 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        specialinvoke r0.<android.text.style.TextAppearanceSpan: void <init>(android.content.Context,int,int)>(r1, i0, -1);

        return;
    }

    public void <init>(android.content.Context, int, int)
    {
        android.text.style.TextAppearanceSpan r0;
        int i0, $i1, $i2, $i3, i4, i5, $i6;
        android.content.res.TypedArray r1, r14;
        int[] $r2, $r6;
        android.content.res.ColorStateList $r3, r9;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        float $f0, $f1, $f2, $f3;
        java.lang.String $r4, $r5, r11, r12;
        android.graphics.Typeface $r7, $r10;
        android.content.Context r8;
        android.os.LocaleList r13;

        r0 := @this: android.text.style.TextAppearanceSpan;

        r8 := @parameter0: android.content.Context;

        i4 := @parameter1: int;

        i0 := @parameter2: int;

        specialinvoke r0.<android.text.style.MetricAffectingSpan: void <init>()>();

        $r2 = <com.android.internal.R$styleable: int[] TextAppearance>;

        r1 = virtualinvoke r8.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(int,int[])>(i4, $r2);

        r9 = virtualinvoke r1.<android.content.res.TypedArray: android.content.res.ColorStateList getColorStateList(int)>(3);

        $r3 = virtualinvoke r1.<android.content.res.TypedArray: android.content.res.ColorStateList getColorStateList(int)>(6);

        r0.<android.text.style.TextAppearanceSpan: android.content.res.ColorStateList mTextColorLink> = $r3;

        $i1 = virtualinvoke r1.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(0, -1);

        r0.<android.text.style.TextAppearanceSpan: int mTextSize> = $i1;

        $i2 = virtualinvoke r1.<android.content.res.TypedArray: int getInt(int,int)>(2, 0);

        r0.<android.text.style.TextAppearanceSpan: int mStyle> = $i2;

        $z0 = virtualinvoke r8.<android.content.Context: boolean isRestricted()>();

        if $z0 != 0 goto label01;

        $z5 = virtualinvoke r8.<android.content.Context: boolean canLoadUnsafeResources()>();

        if $z5 == 0 goto label01;

        $r7 = virtualinvoke r1.<android.content.res.TypedArray: android.graphics.Typeface getFont(int)>(12);

        r0.<android.text.style.TextAppearanceSpan: android.graphics.Typeface mTypeface> = $r7;

        goto label02;

     label01:
        r0.<android.text.style.TextAppearanceSpan: android.graphics.Typeface mTypeface> = null;

     label02:
        $r10 = r0.<android.text.style.TextAppearanceSpan: android.graphics.Typeface mTypeface>;

        if $r10 == null goto label03;

        r0.<android.text.style.TextAppearanceSpan: java.lang.String mFamilyName> = null;

        goto label08;

     label03:
        r11 = virtualinvoke r1.<android.content.res.TypedArray: java.lang.String getString(int)>(12);

        if r11 == null goto label04;

        r0.<android.text.style.TextAppearanceSpan: java.lang.String mFamilyName> = r11;

        goto label08;

     label04:
        i5 = virtualinvoke r1.<android.content.res.TypedArray: int getInt(int,int)>(1, 0);

        if i5 == 1 goto label07;

        if i5 == 2 goto label06;

        if i5 == 3 goto label05;

        r0.<android.text.style.TextAppearanceSpan: java.lang.String mFamilyName> = null;

        goto label08;

     label05:
        r0.<android.text.style.TextAppearanceSpan: java.lang.String mFamilyName> = "monospace";

        goto label08;

     label06:
        r0.<android.text.style.TextAppearanceSpan: java.lang.String mFamilyName> = "serif";

        goto label08;

     label07:
        r0.<android.text.style.TextAppearanceSpan: java.lang.String mFamilyName> = "sans";

     label08:
        $i6 = virtualinvoke r1.<android.content.res.TypedArray: int getInt(int,int)>(18, -1);

        r0.<android.text.style.TextAppearanceSpan: int mTextFontWeight> = $i6;

        r12 = virtualinvoke r1.<android.content.res.TypedArray: java.lang.String getString(int)>(19);

        if r12 == null goto label11;

        r13 = staticinvoke <android.os.LocaleList: android.os.LocaleList forLanguageTags(java.lang.String)>(r12);

        $z4 = virtualinvoke r13.<android.os.LocaleList: boolean isEmpty()>();

        if $z4 != 0 goto label09;

        r0.<android.text.style.TextAppearanceSpan: android.os.LocaleList mTextLocales> = r13;

        goto label10;

     label09:
        r0.<android.text.style.TextAppearanceSpan: android.os.LocaleList mTextLocales> = null;

     label10:
        goto label12;

     label11:
        r0.<android.text.style.TextAppearanceSpan: android.os.LocaleList mTextLocales> = null;

     label12:
        $f0 = virtualinvoke r1.<android.content.res.TypedArray: float getFloat(int,float)>(10, 0.0F);

        r0.<android.text.style.TextAppearanceSpan: float mShadowRadius> = $f0;

        $f1 = virtualinvoke r1.<android.content.res.TypedArray: float getFloat(int,float)>(8, 0.0F);

        r0.<android.text.style.TextAppearanceSpan: float mShadowDx> = $f1;

        $f2 = virtualinvoke r1.<android.content.res.TypedArray: float getFloat(int,float)>(9, 0.0F);

        r0.<android.text.style.TextAppearanceSpan: float mShadowDy> = $f2;

        $i3 = virtualinvoke r1.<android.content.res.TypedArray: int getInt(int,int)>(7, 0);

        r0.<android.text.style.TextAppearanceSpan: int mShadowColor> = $i3;

        $z1 = virtualinvoke r1.<android.content.res.TypedArray: boolean hasValue(int)>(13);

        r0.<android.text.style.TextAppearanceSpan: boolean mHasElegantTextHeight> = $z1;

        $z2 = virtualinvoke r1.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(13, 0);

        r0.<android.text.style.TextAppearanceSpan: boolean mElegantTextHeight> = $z2;

        $z3 = virtualinvoke r1.<android.content.res.TypedArray: boolean hasValue(int)>(14);

        r0.<android.text.style.TextAppearanceSpan: boolean mHasLetterSpacing> = $z3;

        $f3 = virtualinvoke r1.<android.content.res.TypedArray: float getFloat(int,float)>(14, 0.0F);

        r0.<android.text.style.TextAppearanceSpan: float mLetterSpacing> = $f3;

        $r4 = virtualinvoke r1.<android.content.res.TypedArray: java.lang.String getString(int)>(15);

        r0.<android.text.style.TextAppearanceSpan: java.lang.String mFontFeatureSettings> = $r4;

        $r5 = virtualinvoke r1.<android.content.res.TypedArray: java.lang.String getString(int)>(16);

        r0.<android.text.style.TextAppearanceSpan: java.lang.String mFontVariationSettings> = $r5;

        virtualinvoke r1.<android.content.res.TypedArray: void recycle()>();

        if i0 < 0 goto label13;

        $r6 = <com.android.internal.R$styleable: int[] Theme>;

        r14 = virtualinvoke r8.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(int,int[])>(16973829, $r6);

        r9 = virtualinvoke r14.<android.content.res.TypedArray: android.content.res.ColorStateList getColorStateList(int)>(i0);

        virtualinvoke r14.<android.content.res.TypedArray: void recycle()>();

     label13:
        r0.<android.text.style.TextAppearanceSpan: android.content.res.ColorStateList mTextColor> = r9;

        return;
    }

    public void <init>(android.os.Parcel)
    {
        android.text.style.TextAppearanceSpan r0;
        android.os.Parcel r1;
        java.lang.String $r2, $r8, $r9;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        android.graphics.Typeface $r3;
        java.lang.Class $r4;
        java.lang.ClassLoader $r5;
        android.os.Parcelable $r6;
        android.os.LocaleList $r7;
        float $f0, $f1, $f2, $f3;
        boolean $z0, $z1, $z2;
        android.os.Parcelable$Creator $r10, $r13;
        java.lang.Object $r11, $r14;
        android.content.res.ColorStateList $r12, $r15;

        r0 := @this: android.text.style.TextAppearanceSpan;

        r1 := @parameter0: android.os.Parcel;

        specialinvoke r0.<android.text.style.MetricAffectingSpan: void <init>()>();

        $r2 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r0.<android.text.style.TextAppearanceSpan: java.lang.String mFamilyName> = $r2;

        $i0 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.text.style.TextAppearanceSpan: int mStyle> = $i0;

        $i1 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.text.style.TextAppearanceSpan: int mTextSize> = $i1;

        $i2 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i2 == 0 goto label1;

        $r13 = <android.content.res.ColorStateList: android.os.Parcelable$Creator CREATOR>;

        $r14 = interfaceinvoke $r13.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r1);

        $r15 = (android.content.res.ColorStateList) $r14;

        r0.<android.text.style.TextAppearanceSpan: android.content.res.ColorStateList mTextColor> = $r15;

        goto label2;

     label1:
        r0.<android.text.style.TextAppearanceSpan: android.content.res.ColorStateList mTextColor> = null;

     label2:
        $i3 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i3 == 0 goto label3;

        $r10 = <android.content.res.ColorStateList: android.os.Parcelable$Creator CREATOR>;

        $r11 = interfaceinvoke $r10.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r1);

        $r12 = (android.content.res.ColorStateList) $r11;

        r0.<android.text.style.TextAppearanceSpan: android.content.res.ColorStateList mTextColorLink> = $r12;

        goto label4;

     label3:
        r0.<android.text.style.TextAppearanceSpan: android.content.res.ColorStateList mTextColorLink> = null;

     label4:
        $r3 = staticinvoke <android.graphics.LeakyTypefaceStorage: android.graphics.Typeface readTypefaceFromParcel(android.os.Parcel)>(r1);

        r0.<android.text.style.TextAppearanceSpan: android.graphics.Typeface mTypeface> = $r3;

        $i4 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.text.style.TextAppearanceSpan: int mTextFontWeight> = $i4;

        $r4 = class "Landroid/os/LocaleList;";

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        $r6 = virtualinvoke r1.<android.os.Parcel: android.os.Parcelable readParcelable(java.lang.ClassLoader)>($r5);

        $r7 = (android.os.LocaleList) $r6;

        r0.<android.text.style.TextAppearanceSpan: android.os.LocaleList mTextLocales> = $r7;

        $f0 = virtualinvoke r1.<android.os.Parcel: float readFloat()>();

        r0.<android.text.style.TextAppearanceSpan: float mShadowRadius> = $f0;

        $f1 = virtualinvoke r1.<android.os.Parcel: float readFloat()>();

        r0.<android.text.style.TextAppearanceSpan: float mShadowDx> = $f1;

        $f2 = virtualinvoke r1.<android.os.Parcel: float readFloat()>();

        r0.<android.text.style.TextAppearanceSpan: float mShadowDy> = $f2;

        $i5 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.text.style.TextAppearanceSpan: int mShadowColor> = $i5;

        $z0 = virtualinvoke r1.<android.os.Parcel: boolean readBoolean()>();

        r0.<android.text.style.TextAppearanceSpan: boolean mHasElegantTextHeight> = $z0;

        $z1 = virtualinvoke r1.<android.os.Parcel: boolean readBoolean()>();

        r0.<android.text.style.TextAppearanceSpan: boolean mElegantTextHeight> = $z1;

        $z2 = virtualinvoke r1.<android.os.Parcel: boolean readBoolean()>();

        r0.<android.text.style.TextAppearanceSpan: boolean mHasLetterSpacing> = $z2;

        $f3 = virtualinvoke r1.<android.os.Parcel: float readFloat()>();

        r0.<android.text.style.TextAppearanceSpan: float mLetterSpacing> = $f3;

        $r8 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r0.<android.text.style.TextAppearanceSpan: java.lang.String mFontFeatureSettings> = $r8;

        $r9 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r0.<android.text.style.TextAppearanceSpan: java.lang.String mFontVariationSettings> = $r9;

        return;
    }

    public void <init>(java.lang.String, int, int, android.content.res.ColorStateList, android.content.res.ColorStateList)
    {
        android.text.style.TextAppearanceSpan r0;
        java.lang.String r1;
        int i0, i1;
        android.content.res.ColorStateList r2, r3;

        r0 := @this: android.text.style.TextAppearanceSpan;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: android.content.res.ColorStateList;

        r3 := @parameter4: android.content.res.ColorStateList;

        specialinvoke r0.<android.text.style.MetricAffectingSpan: void <init>()>();

        r0.<android.text.style.TextAppearanceSpan: java.lang.String mFamilyName> = r1;

        r0.<android.text.style.TextAppearanceSpan: int mStyle> = i0;

        r0.<android.text.style.TextAppearanceSpan: int mTextSize> = i1;

        r0.<android.text.style.TextAppearanceSpan: android.content.res.ColorStateList mTextColor> = r2;

        r0.<android.text.style.TextAppearanceSpan: android.content.res.ColorStateList mTextColorLink> = r3;

        r0.<android.text.style.TextAppearanceSpan: android.graphics.Typeface mTypeface> = null;

        r0.<android.text.style.TextAppearanceSpan: int mTextFontWeight> = -1;

        r0.<android.text.style.TextAppearanceSpan: android.os.LocaleList mTextLocales> = null;

        r0.<android.text.style.TextAppearanceSpan: float mShadowRadius> = 0.0F;

        r0.<android.text.style.TextAppearanceSpan: float mShadowDx> = 0.0F;

        r0.<android.text.style.TextAppearanceSpan: float mShadowDy> = 0.0F;

        r0.<android.text.style.TextAppearanceSpan: int mShadowColor> = 0;

        r0.<android.text.style.TextAppearanceSpan: boolean mHasElegantTextHeight> = 0;

        r0.<android.text.style.TextAppearanceSpan: boolean mElegantTextHeight> = 0;

        r0.<android.text.style.TextAppearanceSpan: boolean mHasLetterSpacing> = 0;

        r0.<android.text.style.TextAppearanceSpan: float mLetterSpacing> = 0.0F;

        r0.<android.text.style.TextAppearanceSpan: java.lang.String mFontFeatureSettings> = null;

        r0.<android.text.style.TextAppearanceSpan: java.lang.String mFontVariationSettings> = null;

        return;
    }

    public int describeContents()
    {
        android.text.style.TextAppearanceSpan r0;

        r0 := @this: android.text.style.TextAppearanceSpan;

        return 0;
    }

    public java.lang.String getFamily()
    {
        android.text.style.TextAppearanceSpan r0;
        java.lang.String $r1;

        r0 := @this: android.text.style.TextAppearanceSpan;

        $r1 = r0.<android.text.style.TextAppearanceSpan: java.lang.String mFamilyName>;

        return $r1;
    }

    public java.lang.String getFontFeatureSettings()
    {
        android.text.style.TextAppearanceSpan r0;
        java.lang.String $r1;

        r0 := @this: android.text.style.TextAppearanceSpan;

        $r1 = r0.<android.text.style.TextAppearanceSpan: java.lang.String mFontFeatureSettings>;

        return $r1;
    }

    public java.lang.String getFontVariationSettings()
    {
        android.text.style.TextAppearanceSpan r0;
        java.lang.String $r1;

        r0 := @this: android.text.style.TextAppearanceSpan;

        $r1 = r0.<android.text.style.TextAppearanceSpan: java.lang.String mFontVariationSettings>;

        return $r1;
    }

    public android.content.res.ColorStateList getLinkTextColor()
    {
        android.text.style.TextAppearanceSpan r0;
        android.content.res.ColorStateList $r1;

        r0 := @this: android.text.style.TextAppearanceSpan;

        $r1 = r0.<android.text.style.TextAppearanceSpan: android.content.res.ColorStateList mTextColorLink>;

        return $r1;
    }

    public int getShadowColor()
    {
        android.text.style.TextAppearanceSpan r0;
        int $i0;

        r0 := @this: android.text.style.TextAppearanceSpan;

        $i0 = r0.<android.text.style.TextAppearanceSpan: int mShadowColor>;

        return $i0;
    }

    public float getShadowDx()
    {
        android.text.style.TextAppearanceSpan r0;
        float $f0;

        r0 := @this: android.text.style.TextAppearanceSpan;

        $f0 = r0.<android.text.style.TextAppearanceSpan: float mShadowDx>;

        return $f0;
    }

    public float getShadowDy()
    {
        android.text.style.TextAppearanceSpan r0;
        float $f0;

        r0 := @this: android.text.style.TextAppearanceSpan;

        $f0 = r0.<android.text.style.TextAppearanceSpan: float mShadowDy>;

        return $f0;
    }

    public float getShadowRadius()
    {
        android.text.style.TextAppearanceSpan r0;
        float $f0;

        r0 := @this: android.text.style.TextAppearanceSpan;

        $f0 = r0.<android.text.style.TextAppearanceSpan: float mShadowRadius>;

        return $f0;
    }

    public int getSpanTypeId()
    {
        android.text.style.TextAppearanceSpan r0;
        int $i0;

        r0 := @this: android.text.style.TextAppearanceSpan;

        $i0 = virtualinvoke r0.<android.text.style.TextAppearanceSpan: int getSpanTypeIdInternal()>();

        return $i0;
    }

    public int getSpanTypeIdInternal()
    {
        android.text.style.TextAppearanceSpan r0;

        r0 := @this: android.text.style.TextAppearanceSpan;

        return 17;
    }

    public android.content.res.ColorStateList getTextColor()
    {
        android.text.style.TextAppearanceSpan r0;
        android.content.res.ColorStateList $r1;

        r0 := @this: android.text.style.TextAppearanceSpan;

        $r1 = r0.<android.text.style.TextAppearanceSpan: android.content.res.ColorStateList mTextColor>;

        return $r1;
    }

    public int getTextFontWeight()
    {
        android.text.style.TextAppearanceSpan r0;
        int $i0;

        r0 := @this: android.text.style.TextAppearanceSpan;

        $i0 = r0.<android.text.style.TextAppearanceSpan: int mTextFontWeight>;

        return $i0;
    }

    public android.os.LocaleList getTextLocales()
    {
        android.text.style.TextAppearanceSpan r0;
        android.os.LocaleList $r1;

        r0 := @this: android.text.style.TextAppearanceSpan;

        $r1 = r0.<android.text.style.TextAppearanceSpan: android.os.LocaleList mTextLocales>;

        return $r1;
    }

    public int getTextSize()
    {
        android.text.style.TextAppearanceSpan r0;
        int $i0;

        r0 := @this: android.text.style.TextAppearanceSpan;

        $i0 = r0.<android.text.style.TextAppearanceSpan: int mTextSize>;

        return $i0;
    }

    public int getTextStyle()
    {
        android.text.style.TextAppearanceSpan r0;
        int $i0;

        r0 := @this: android.text.style.TextAppearanceSpan;

        $i0 = r0.<android.text.style.TextAppearanceSpan: int mStyle>;

        return $i0;
    }

    public android.graphics.Typeface getTypeface()
    {
        android.text.style.TextAppearanceSpan r0;
        android.graphics.Typeface $r1;

        r0 := @this: android.text.style.TextAppearanceSpan;

        $r1 = r0.<android.text.style.TextAppearanceSpan: android.graphics.Typeface mTypeface>;

        return $r1;
    }

    public boolean isElegantTextHeight()
    {
        android.text.style.TextAppearanceSpan r0;
        boolean $z0;

        r0 := @this: android.text.style.TextAppearanceSpan;

        $z0 = r0.<android.text.style.TextAppearanceSpan: boolean mElegantTextHeight>;

        return $z0;
    }

    public void updateDrawState(android.text.TextPaint)
    {
        android.text.style.TextAppearanceSpan r0;
        android.text.TextPaint r1;
        int i0, $i1, $i2;
        float $f0, $f1, $f2;
        int[] $r2, $r3;
        android.content.res.ColorStateList r4, r5;

        r0 := @this: android.text.style.TextAppearanceSpan;

        r1 := @parameter0: android.text.TextPaint;

        virtualinvoke r0.<android.text.style.TextAppearanceSpan: void updateMeasureState(android.text.TextPaint)>(r1);

        r4 = r0.<android.text.style.TextAppearanceSpan: android.content.res.ColorStateList mTextColor>;

        if r4 == null goto label1;

        $r3 = r1.<android.text.TextPaint: int[] drawableState>;

        $i2 = virtualinvoke r4.<android.content.res.ColorStateList: int getColorForState(int[],int)>($r3, 0);

        virtualinvoke r1.<android.text.TextPaint: void setColor(int)>($i2);

     label1:
        r5 = r0.<android.text.style.TextAppearanceSpan: android.content.res.ColorStateList mTextColorLink>;

        if r5 == null goto label2;

        $r2 = r1.<android.text.TextPaint: int[] drawableState>;

        $i1 = virtualinvoke r5.<android.content.res.ColorStateList: int getColorForState(int[],int)>($r2, 0);

        r1.<android.text.TextPaint: int linkColor> = $i1;

     label2:
        i0 = r0.<android.text.style.TextAppearanceSpan: int mShadowColor>;

        if i0 == 0 goto label3;

        $f2 = r0.<android.text.style.TextAppearanceSpan: float mShadowRadius>;

        $f1 = r0.<android.text.style.TextAppearanceSpan: float mShadowDx>;

        $f0 = r0.<android.text.style.TextAppearanceSpan: float mShadowDy>;

        virtualinvoke r1.<android.text.TextPaint: void setShadowLayer(float,float,float,int)>($f2, $f1, $f0, i0);

     label3:
        return;
    }

    public void updateMeasureState(android.text.TextPaint)
    {
        android.text.style.TextAppearanceSpan r0;
        android.text.TextPaint r1;
        java.lang.String r2, $r3, r10, r11;
        int $i0, $i1, $i2, $i3, $i4, $i5, i7, i8, i9, i10, i11, i12;
        boolean $z0, $z1, $z3, z4;
        float $f0, $f1;
        android.graphics.Typeface $r5, r6, r7, r8;
        android.os.LocaleList r9;

        r0 := @this: android.text.style.TextAppearanceSpan;

        r1 := @parameter0: android.text.TextPaint;

        i7 = 0;

        r6 = r0.<android.text.style.TextAppearanceSpan: android.graphics.Typeface mTypeface>;

        if r6 == null goto label01;

        i8 = r0.<android.text.style.TextAppearanceSpan: int mStyle>;

        r7 = staticinvoke <android.graphics.Typeface: android.graphics.Typeface create(android.graphics.Typeface,int)>(r6, i8);

        goto label07;

     label01:
        $r3 = r0.<android.text.style.TextAppearanceSpan: java.lang.String mFamilyName>;

        if $r3 != null goto label03;

        $i5 = r0.<android.text.style.TextAppearanceSpan: int mStyle>;

        if $i5 == 0 goto label02;

        goto label03;

     label02:
        r7 = null;

        i8 = 0;

        goto label07;

     label03:
        r8 = virtualinvoke r1.<android.text.TextPaint: android.graphics.Typeface getTypeface()>();

        if r8 == null goto label04;

        i7 = virtualinvoke r8.<android.graphics.Typeface: int getStyle()>();

     label04:
        $i0 = r0.<android.text.style.TextAppearanceSpan: int mStyle>;

        i8 = i7 | $i0;

        r2 = r0.<android.text.style.TextAppearanceSpan: java.lang.String mFamilyName>;

        if r2 == null goto label05;

        r7 = staticinvoke <android.graphics.Typeface: android.graphics.Typeface create(java.lang.String,int)>(r2, i8);

        goto label07;

     label05:
        if r8 != null goto label06;

        r7 = staticinvoke <android.graphics.Typeface: android.graphics.Typeface defaultFromStyle(int)>(i8);

        goto label07;

     label06:
        r7 = staticinvoke <android.graphics.Typeface: android.graphics.Typeface create(android.graphics.Typeface,int)>(r8, i8);

     label07:
        if r7 == null goto label13;

        i9 = r0.<android.text.style.TextAppearanceSpan: int mTextFontWeight>;

        if i9 < 0 goto label10;

        i10 = staticinvoke <java.lang.Math: int min(int,int)>(1000, i9);

        $i4 = i8 & 2;

        if $i4 == 0 goto label08;

        z4 = 1;

        goto label09;

     label08:
        z4 = 0;

     label09:
        $r5 = staticinvoke <android.graphics.Typeface: android.graphics.Typeface create(android.graphics.Typeface,int,boolean)>(r7, i10, z4);

        r7 = virtualinvoke r1.<android.text.TextPaint: android.graphics.Typeface setTypeface(android.graphics.Typeface)>($r5);

        goto label10;

     label10:
        $i1 = virtualinvoke r7.<android.graphics.Typeface: int getStyle()>();

        i11 = $i1 & i8;

        $i2 = i11 & 1;

        if $i2 == 0 goto label11;

        virtualinvoke r1.<android.text.TextPaint: void setFakeBoldText(boolean)>(1);

     label11:
        $i3 = i11 & 2;

        if $i3 == 0 goto label12;

        virtualinvoke r1.<android.text.TextPaint: void setTextSkewX(float)>(-0.25F);

     label12:
        virtualinvoke r1.<android.text.TextPaint: android.graphics.Typeface setTypeface(android.graphics.Typeface)>(r7);

     label13:
        i12 = r0.<android.text.style.TextAppearanceSpan: int mTextSize>;

        if i12 <= 0 goto label14;

        $f1 = (float) i12;

        virtualinvoke r1.<android.text.TextPaint: void setTextSize(float)>($f1);

     label14:
        r9 = r0.<android.text.style.TextAppearanceSpan: android.os.LocaleList mTextLocales>;

        if r9 == null goto label15;

        virtualinvoke r1.<android.text.TextPaint: void setTextLocales(android.os.LocaleList)>(r9);

     label15:
        $z0 = r0.<android.text.style.TextAppearanceSpan: boolean mHasElegantTextHeight>;

        if $z0 == 0 goto label16;

        $z3 = r0.<android.text.style.TextAppearanceSpan: boolean mElegantTextHeight>;

        virtualinvoke r1.<android.text.TextPaint: void setElegantTextHeight(boolean)>($z3);

     label16:
        $z1 = r0.<android.text.style.TextAppearanceSpan: boolean mHasLetterSpacing>;

        if $z1 == 0 goto label17;

        $f0 = r0.<android.text.style.TextAppearanceSpan: float mLetterSpacing>;

        virtualinvoke r1.<android.text.TextPaint: void setLetterSpacing(float)>($f0);

     label17:
        r10 = r0.<android.text.style.TextAppearanceSpan: java.lang.String mFontFeatureSettings>;

        if r10 == null goto label18;

        virtualinvoke r1.<android.text.TextPaint: void setFontFeatureSettings(java.lang.String)>(r10);

     label18:
        r11 = r0.<android.text.style.TextAppearanceSpan: java.lang.String mFontVariationSettings>;

        if r11 == null goto label19;

        virtualinvoke r1.<android.text.TextPaint: boolean setFontVariationSettings(java.lang.String)>(r11);

     label19:
        return;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.text.style.TextAppearanceSpan r0;
        android.os.Parcel r1;
        int i0;

        r0 := @this: android.text.style.TextAppearanceSpan;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        virtualinvoke r0.<android.text.style.TextAppearanceSpan: void writeToParcelInternal(android.os.Parcel,int)>(r1, i0);

        return;
    }

    public void writeToParcelInternal(android.os.Parcel, int)
    {
        android.text.style.TextAppearanceSpan r0;
        android.os.Parcel r1;
        int i0, $i1, $i2, $i3, $i4;
        java.lang.String $r2, $r7, $r8;
        android.content.res.ColorStateList $r3, $r4, $r9, $r10;
        android.graphics.Typeface $r5;
        android.os.LocaleList $r6;
        float $f0, $f1, $f2, $f3;
        boolean $z0, $z1, $z2;

        r0 := @this: android.text.style.TextAppearanceSpan;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        $r2 = r0.<android.text.style.TextAppearanceSpan: java.lang.String mFamilyName>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r2);

        $i1 = r0.<android.text.style.TextAppearanceSpan: int mStyle>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i1);

        $i2 = r0.<android.text.style.TextAppearanceSpan: int mTextSize>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i2);

        $r3 = r0.<android.text.style.TextAppearanceSpan: android.content.res.ColorStateList mTextColor>;

        if $r3 == null goto label1;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        $r10 = r0.<android.text.style.TextAppearanceSpan: android.content.res.ColorStateList mTextColor>;

        virtualinvoke $r10.<android.content.res.ColorStateList: void writeToParcel(android.os.Parcel,int)>(r1, i0);

        goto label2;

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label2:
        $r4 = r0.<android.text.style.TextAppearanceSpan: android.content.res.ColorStateList mTextColorLink>;

        if $r4 == null goto label3;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        $r9 = r0.<android.text.style.TextAppearanceSpan: android.content.res.ColorStateList mTextColorLink>;

        virtualinvoke $r9.<android.content.res.ColorStateList: void writeToParcel(android.os.Parcel,int)>(r1, i0);

        goto label4;

     label3:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label4:
        $r5 = r0.<android.text.style.TextAppearanceSpan: android.graphics.Typeface mTypeface>;

        staticinvoke <android.graphics.LeakyTypefaceStorage: void writeTypefaceToParcel(android.graphics.Typeface,android.os.Parcel)>($r5, r1);

        $i3 = r0.<android.text.style.TextAppearanceSpan: int mTextFontWeight>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i3);

        $r6 = r0.<android.text.style.TextAppearanceSpan: android.os.LocaleList mTextLocales>;

        virtualinvoke r1.<android.os.Parcel: void writeParcelable(android.os.Parcelable,int)>($r6, i0);

        $f0 = r0.<android.text.style.TextAppearanceSpan: float mShadowRadius>;

        virtualinvoke r1.<android.os.Parcel: void writeFloat(float)>($f0);

        $f1 = r0.<android.text.style.TextAppearanceSpan: float mShadowDx>;

        virtualinvoke r1.<android.os.Parcel: void writeFloat(float)>($f1);

        $f2 = r0.<android.text.style.TextAppearanceSpan: float mShadowDy>;

        virtualinvoke r1.<android.os.Parcel: void writeFloat(float)>($f2);

        $i4 = r0.<android.text.style.TextAppearanceSpan: int mShadowColor>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i4);

        $z0 = r0.<android.text.style.TextAppearanceSpan: boolean mHasElegantTextHeight>;

        virtualinvoke r1.<android.os.Parcel: void writeBoolean(boolean)>($z0);

        $z1 = r0.<android.text.style.TextAppearanceSpan: boolean mElegantTextHeight>;

        virtualinvoke r1.<android.os.Parcel: void writeBoolean(boolean)>($z1);

        $z2 = r0.<android.text.style.TextAppearanceSpan: boolean mHasLetterSpacing>;

        virtualinvoke r1.<android.os.Parcel: void writeBoolean(boolean)>($z2);

        $f3 = r0.<android.text.style.TextAppearanceSpan: float mLetterSpacing>;

        virtualinvoke r1.<android.os.Parcel: void writeFloat(float)>($f3);

        $r7 = r0.<android.text.style.TextAppearanceSpan: java.lang.String mFontFeatureSettings>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r7);

        $r8 = r0.<android.text.style.TextAppearanceSpan: java.lang.String mFontVariationSettings>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r8);

        return;
    }
}
