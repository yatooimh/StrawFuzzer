public class android.text.style.TypefaceSpan extends android.text.style.MetricAffectingSpan implements android.text.ParcelableSpan
{
    private final java.lang.String mFamily;
    private final android.graphics.Typeface mTypeface;

    public void <init>(android.graphics.Typeface)
    {
        android.text.style.TypefaceSpan r0;
        android.graphics.Typeface r1;

        r0 := @this: android.text.style.TypefaceSpan;

        r1 := @parameter0: android.graphics.Typeface;

        specialinvoke r0.<android.text.style.TypefaceSpan: void <init>(java.lang.String,android.graphics.Typeface)>(null, r1);

        return;
    }

    public void <init>(android.os.Parcel)
    {
        android.text.style.TypefaceSpan r0;
        android.os.Parcel r1;
        java.lang.String $r2;
        android.graphics.Typeface $r3;

        r0 := @this: android.text.style.TypefaceSpan;

        r1 := @parameter0: android.os.Parcel;

        specialinvoke r0.<android.text.style.MetricAffectingSpan: void <init>()>();

        $r2 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r0.<android.text.style.TypefaceSpan: java.lang.String mFamily> = $r2;

        $r3 = staticinvoke <android.graphics.LeakyTypefaceStorage: android.graphics.Typeface readTypefaceFromParcel(android.os.Parcel)>(r1);

        r0.<android.text.style.TypefaceSpan: android.graphics.Typeface mTypeface> = $r3;

        return;
    }

    public void <init>(java.lang.String)
    {
        android.text.style.TypefaceSpan r0;
        java.lang.String r1;

        r0 := @this: android.text.style.TypefaceSpan;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<android.text.style.TypefaceSpan: void <init>(java.lang.String,android.graphics.Typeface)>(r1, null);

        return;
    }

    private void <init>(java.lang.String, android.graphics.Typeface)
    {
        android.text.style.TypefaceSpan r0;
        java.lang.String r1;
        android.graphics.Typeface r2;

        r0 := @this: android.text.style.TypefaceSpan;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.graphics.Typeface;

        specialinvoke r0.<android.text.style.MetricAffectingSpan: void <init>()>();

        r0.<android.text.style.TypefaceSpan: java.lang.String mFamily> = r1;

        r0.<android.text.style.TypefaceSpan: android.graphics.Typeface mTypeface> = r2;

        return;
    }

    private void applyFontFamily(android.graphics.Paint, java.lang.String)
    {
        android.text.style.TypefaceSpan r0;
        android.graphics.Paint r1;
        android.graphics.Typeface r2, r5;
        int $i0, $i1, $i2, i3, i4;
        java.lang.String r4;

        r0 := @this: android.text.style.TypefaceSpan;

        r1 := @parameter0: android.graphics.Paint;

        r4 := @parameter1: java.lang.String;

        r2 = virtualinvoke r1.<android.graphics.Paint: android.graphics.Typeface getTypeface()>();

        if r2 != null goto label1;

        i3 = 0;

        goto label2;

     label1:
        i3 = virtualinvoke r2.<android.graphics.Typeface: int getStyle()>();

     label2:
        r5 = staticinvoke <android.graphics.Typeface: android.graphics.Typeface create(java.lang.String,int)>(r4, i3);

        $i0 = virtualinvoke r5.<android.graphics.Typeface: int getStyle()>();

        i4 = $i0 & i3;

        $i1 = i4 & 1;

        if $i1 == 0 goto label3;

        virtualinvoke r1.<android.graphics.Paint: void setFakeBoldText(boolean)>(1);

     label3:
        $i2 = i4 & 2;

        if $i2 == 0 goto label4;

        virtualinvoke r1.<android.graphics.Paint: void setTextSkewX(float)>(-0.25F);

     label4:
        virtualinvoke r1.<android.graphics.Paint: android.graphics.Typeface setTypeface(android.graphics.Typeface)>(r5);

        return;
    }

    private void updateTypeface(android.graphics.Paint)
    {
        android.text.style.TypefaceSpan r0;
        android.graphics.Paint r1;
        android.graphics.Typeface r3;
        java.lang.String r4;

        r0 := @this: android.text.style.TypefaceSpan;

        r1 := @parameter0: android.graphics.Paint;

        r3 = r0.<android.text.style.TypefaceSpan: android.graphics.Typeface mTypeface>;

        if r3 == null goto label1;

        virtualinvoke r1.<android.graphics.Paint: android.graphics.Typeface setTypeface(android.graphics.Typeface)>(r3);

        goto label2;

     label1:
        r4 = r0.<android.text.style.TypefaceSpan: java.lang.String mFamily>;

        if r4 == null goto label2;

        specialinvoke r0.<android.text.style.TypefaceSpan: void applyFontFamily(android.graphics.Paint,java.lang.String)>(r1, r4);

     label2:
        return;
    }

    public int describeContents()
    {
        android.text.style.TypefaceSpan r0;

        r0 := @this: android.text.style.TypefaceSpan;

        return 0;
    }

    public java.lang.String getFamily()
    {
        android.text.style.TypefaceSpan r0;
        java.lang.String $r1;

        r0 := @this: android.text.style.TypefaceSpan;

        $r1 = r0.<android.text.style.TypefaceSpan: java.lang.String mFamily>;

        return $r1;
    }

    public int getSpanTypeId()
    {
        android.text.style.TypefaceSpan r0;
        int $i0;

        r0 := @this: android.text.style.TypefaceSpan;

        $i0 = virtualinvoke r0.<android.text.style.TypefaceSpan: int getSpanTypeIdInternal()>();

        return $i0;
    }

    public int getSpanTypeIdInternal()
    {
        android.text.style.TypefaceSpan r0;

        r0 := @this: android.text.style.TypefaceSpan;

        return 13;
    }

    public android.graphics.Typeface getTypeface()
    {
        android.text.style.TypefaceSpan r0;
        android.graphics.Typeface $r1;

        r0 := @this: android.text.style.TypefaceSpan;

        $r1 = r0.<android.text.style.TypefaceSpan: android.graphics.Typeface mTypeface>;

        return $r1;
    }

    public void updateDrawState(android.text.TextPaint)
    {
        android.text.style.TypefaceSpan r0;
        android.text.TextPaint r1;

        r0 := @this: android.text.style.TypefaceSpan;

        r1 := @parameter0: android.text.TextPaint;

        specialinvoke r0.<android.text.style.TypefaceSpan: void updateTypeface(android.graphics.Paint)>(r1);

        return;
    }

    public void updateMeasureState(android.text.TextPaint)
    {
        android.text.style.TypefaceSpan r0;
        android.text.TextPaint r1;

        r0 := @this: android.text.style.TypefaceSpan;

        r1 := @parameter0: android.text.TextPaint;

        specialinvoke r0.<android.text.style.TypefaceSpan: void updateTypeface(android.graphics.Paint)>(r1);

        return;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.text.style.TypefaceSpan r0;
        android.os.Parcel r1;
        int i0;

        r0 := @this: android.text.style.TypefaceSpan;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        virtualinvoke r0.<android.text.style.TypefaceSpan: void writeToParcelInternal(android.os.Parcel,int)>(r1, i0);

        return;
    }

    public void writeToParcelInternal(android.os.Parcel, int)
    {
        android.text.style.TypefaceSpan r0;
        android.os.Parcel r1;
        int i0;
        java.lang.String $r2;
        android.graphics.Typeface $r3;

        r0 := @this: android.text.style.TypefaceSpan;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        $r2 = r0.<android.text.style.TypefaceSpan: java.lang.String mFamily>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r2);

        $r3 = r0.<android.text.style.TypefaceSpan: android.graphics.Typeface mTypeface>;

        staticinvoke <android.graphics.LeakyTypefaceStorage: void writeTypefaceToParcel(android.graphics.Typeface,android.os.Parcel)>($r3, r1);

        return;
    }
}
