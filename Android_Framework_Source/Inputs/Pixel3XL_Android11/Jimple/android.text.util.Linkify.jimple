public class android.text.util.Linkify extends java.lang.Object
{
    public static final int ALL;
    private static final java.util.function.Function DEFAULT_SPAN_FACTORY;
    public static final int EMAIL_ADDRESSES;
    private static final java.lang.String LOG_TAG;
    public static final int MAP_ADDRESSES;
    public static final int PHONE_NUMBERS;
    private static final int PHONE_NUMBER_MINIMUM_DIGITS;
    public static final int WEB_URLS;
    public static final android.text.util.Linkify$MatchFilter sPhoneNumberMatchFilter;
    public static final android.text.util.Linkify$TransformFilter sPhoneNumberTransformFilter;
    public static final android.text.util.Linkify$MatchFilter sUrlMatchFilter;

    static void <clinit>()
    {
        android.text.util.'-$$Lambda$Linkify$7J_-cMhIF2bcttjkxA2jDFP8sKw' $r3;
        android.text.util.Linkify$1 r4;
        android.text.util.Linkify$2 r5;
        android.text.util.Linkify$3 r6;
        java.util.function.Function r7;

        <android.text.util.Linkify: int WEB_URLS> = 1;

        <android.text.util.Linkify: int PHONE_NUMBER_MINIMUM_DIGITS> = 5;

        <android.text.util.Linkify: int PHONE_NUMBERS> = 4;

        <android.text.util.Linkify: int MAP_ADDRESSES> = 8;

        <android.text.util.Linkify: java.lang.String LOG_TAG> = "Linkify";

        <android.text.util.Linkify: int EMAIL_ADDRESSES> = 2;

        <android.text.util.Linkify: int ALL> = 15;

        r4 = new android.text.util.Linkify$1;

        specialinvoke r4.<android.text.util.Linkify$1: void <init>()>();

        <android.text.util.Linkify: android.text.util.Linkify$MatchFilter sUrlMatchFilter> = r4;

        r5 = new android.text.util.Linkify$2;

        specialinvoke r5.<android.text.util.Linkify$2: void <init>()>();

        <android.text.util.Linkify: android.text.util.Linkify$MatchFilter sPhoneNumberMatchFilter> = r5;

        r6 = new android.text.util.Linkify$3;

        specialinvoke r6.<android.text.util.Linkify$3: void <init>()>();

        <android.text.util.Linkify: android.text.util.Linkify$TransformFilter sPhoneNumberTransformFilter> = r6;

        $r3 = <android.text.util._$$Lambda$Linkify$7J__cMhIF2bcttjkxA2jDFP8sKw: android.text.util.'-$$Lambda$Linkify$7J_-cMhIF2bcttjkxA2jDFP8sKw' INSTANCE>;

        r7 = (java.util.function.Function) $r3;

        <android.text.util.Linkify: java.util.function.Function DEFAULT_SPAN_FACTORY> = r7;

        return;
    }

    public void <init>()
    {
        android.text.util.Linkify r0;

        r0 := @this: android.text.util.Linkify;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static final void addLinkMovementMethod(android.widget.TextView)
    {
        android.widget.TextView r0;
        android.text.method.MovementMethod r1, $r2;
        boolean $z0, $z1;

        r0 := @parameter0: android.widget.TextView;

        r1 = virtualinvoke r0.<android.widget.TextView: android.text.method.MovementMethod getMovementMethod()>();

        if r1 == null goto label1;

        $z1 = r1 instanceof android.text.method.LinkMovementMethod;

        if $z1 != 0 goto label2;

     label1:
        $z0 = virtualinvoke r0.<android.widget.TextView: boolean getLinksClickable()>();

        if $z0 == 0 goto label2;

        $r2 = staticinvoke <android.text.method.LinkMovementMethod: android.text.method.MovementMethod getInstance()>();

        virtualinvoke r0.<android.widget.TextView: void setMovementMethod(android.text.method.MovementMethod)>($r2);

     label2:
        return;
    }

    public static final void addLinks(android.widget.TextView, java.util.regex.Pattern, java.lang.String)
    {
        android.widget.TextView r0;
        java.util.regex.Pattern r1;
        java.lang.String r2;

        r0 := @parameter0: android.widget.TextView;

        r1 := @parameter1: java.util.regex.Pattern;

        r2 := @parameter2: java.lang.String;

        staticinvoke <android.text.util.Linkify: void addLinks(android.widget.TextView,java.util.regex.Pattern,java.lang.String,java.lang.String[],android.text.util.Linkify$MatchFilter,android.text.util.Linkify$TransformFilter)>(r0, r1, r2, null, null, null);

        return;
    }

    public static final void addLinks(android.widget.TextView, java.util.regex.Pattern, java.lang.String, android.text.util.Linkify$MatchFilter, android.text.util.Linkify$TransformFilter)
    {
        android.widget.TextView r0;
        java.util.regex.Pattern r1;
        java.lang.String r2;
        android.text.util.Linkify$MatchFilter r3;
        android.text.util.Linkify$TransformFilter r4;

        r0 := @parameter0: android.widget.TextView;

        r1 := @parameter1: java.util.regex.Pattern;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: android.text.util.Linkify$MatchFilter;

        r4 := @parameter4: android.text.util.Linkify$TransformFilter;

        staticinvoke <android.text.util.Linkify: void addLinks(android.widget.TextView,java.util.regex.Pattern,java.lang.String,java.lang.String[],android.text.util.Linkify$MatchFilter,android.text.util.Linkify$TransformFilter)>(r0, r1, r2, null, r3, r4);

        return;
    }

    public static final void addLinks(android.widget.TextView, java.util.regex.Pattern, java.lang.String, java.lang.String[], android.text.util.Linkify$MatchFilter, android.text.util.Linkify$TransformFilter)
    {
        android.widget.TextView r0;
        java.util.regex.Pattern r1;
        java.lang.String r2;
        java.lang.String[] r3;
        android.text.util.Linkify$MatchFilter r4;
        android.text.util.Linkify$TransformFilter r5;
        android.text.SpannableString r6;
        java.lang.CharSequence $r7;
        boolean $z0;

        r0 := @parameter0: android.widget.TextView;

        r1 := @parameter1: java.util.regex.Pattern;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String[];

        r4 := @parameter4: android.text.util.Linkify$MatchFilter;

        r5 := @parameter5: android.text.util.Linkify$TransformFilter;

        $r7 = virtualinvoke r0.<android.widget.TextView: java.lang.CharSequence getText()>();

        r6 = staticinvoke <android.text.SpannableString: android.text.SpannableString valueOf(java.lang.CharSequence)>($r7);

        $z0 = staticinvoke <android.text.util.Linkify: boolean addLinks(android.text.Spannable,java.util.regex.Pattern,java.lang.String,java.lang.String[],android.text.util.Linkify$MatchFilter,android.text.util.Linkify$TransformFilter)>(r6, r1, r2, r3, r4, r5);

        if $z0 == 0 goto label1;

        virtualinvoke r0.<android.widget.TextView: void setText(java.lang.CharSequence)>(r6);

        staticinvoke <android.text.util.Linkify: void addLinkMovementMethod(android.widget.TextView)>(r0);

     label1:
        return;
    }

    public static final boolean addLinks(android.text.Spannable, int)
    {
        android.text.Spannable r0;
        int i0;
        boolean $z0;

        r0 := @parameter0: android.text.Spannable;

        i0 := @parameter1: int;

        $z0 = staticinvoke <android.text.util.Linkify: boolean addLinks(android.text.Spannable,int,android.content.Context,java.util.function.Function)>(r0, i0, null, null);

        return $z0;
    }

    private static boolean addLinks(android.text.Spannable, int, android.content.Context, java.util.function.Function)
    {
        android.text.Spannable r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i11;
        java.util.function.Function r1;
        java.util.regex.Pattern r3, $r9;
        java.lang.Object[] $r4, $r13;
        java.util.ArrayList $r5;
        boolean $z0, $z1;
        java.lang.Object $r6;
        java.lang.String $r7, $r12;
        java.lang.String[] $r8, $r10;
        android.text.style.URLSpan $r11;
        java.lang.Integer $r14;
        android.content.Context r15;
        android.text.style.URLSpan[] r16;
        android.text.util.Linkify$MatchFilter r17;
        java.util.Iterator r18;
        android.text.util.LinkSpec r19;

        r0 := @parameter0: android.text.Spannable;

        i0 := @parameter1: int;

        r15 := @parameter2: android.content.Context;

        r1 := @parameter3: java.util.function.Function;

        if r0 == null goto label01;

        $r12 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();

        $z1 = staticinvoke <android.text.util.Linkify: boolean containsUnsupportedCharacters(java.lang.String)>($r12);

        if $z1 == 0 goto label01;

        $r13 = newarray (java.lang.Object)[3];

        $r13[0] = "116321860";

        $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-1);

        $r13[1] = $r14;

        $r13[2] = "";

        staticinvoke <android.util.EventLog: int writeEvent(int,java.lang.Object[])>(1397638484, $r13);

        return 0;

     label01:
        if i0 != 0 goto label02;

        return 0;

     label02:
        $i1 = interfaceinvoke r0.<android.text.Spannable: int length()>();

        $r4 = interfaceinvoke r0.<android.text.Spannable: java.lang.Object[] getSpans(int,int,java.lang.Class)>(0, $i1, class "Landroid/text/style/URLSpan;");

        r16 = (android.text.style.URLSpan[]) $r4;

        $i2 = lengthof r16;

        i11 = $i2 - 1;

     label03:
        if i11 < 0 goto label04;

        $r11 = r16[i11];

        interfaceinvoke r0.<android.text.Spannable: void removeSpan(java.lang.Object)>($r11);

        i11 = i11 + -1;

        goto label03;

     label04:
        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        $i3 = i0 & 1;

        if $i3 == 0 goto label05;

        r3 = <android.util.Patterns: java.util.regex.Pattern AUTOLINK_WEB_URL>;

        r17 = <android.text.util.Linkify: android.text.util.Linkify$MatchFilter sUrlMatchFilter>;

        $r10 = newarray (java.lang.String)[3];

        $r10[0] = "http://";

        $r10[1] = "https://";

        $r10[2] = "rtsp://";

        staticinvoke <android.text.util.Linkify: void gatherLinks(java.util.ArrayList,android.text.Spannable,java.util.regex.Pattern,java.lang.String[],android.text.util.Linkify$MatchFilter,android.text.util.Linkify$TransformFilter)>($r5, r0, r3, $r10, r17, null);

     label05:
        $i4 = i0 & 2;

        if $i4 == 0 goto label06;

        $r9 = <android.util.Patterns: java.util.regex.Pattern AUTOLINK_EMAIL_ADDRESS>;

        $r8 = newarray (java.lang.String)[1];

        $r8[0] = "mailto:";

        staticinvoke <android.text.util.Linkify: void gatherLinks(java.util.ArrayList,android.text.Spannable,java.util.regex.Pattern,java.lang.String[],android.text.util.Linkify$MatchFilter,android.text.util.Linkify$TransformFilter)>($r5, r0, $r9, $r8, null, null);

     label06:
        $i5 = i0 & 4;

        if $i5 == 0 goto label07;

        staticinvoke <android.text.util.Linkify: void gatherTelLinks(java.util.ArrayList,android.text.Spannable,android.content.Context)>($r5, r0, r15);

     label07:
        $i6 = i0 & 8;

        if $i6 == 0 goto label08;

        staticinvoke <android.text.util.Linkify: void gatherMapLinks(java.util.ArrayList,android.text.Spannable)>($r5, r0);

     label08:
        staticinvoke <android.text.util.Linkify: void pruneOverlaps(java.util.ArrayList)>($r5);

        $i7 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

        if $i7 != 0 goto label09;

        return 0;

     label09:
        r18 = virtualinvoke $r5.<java.util.ArrayList: java.util.Iterator iterator()>();

     label10:
        $z0 = interfaceinvoke r18.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label11;

        $r6 = interfaceinvoke r18.<java.util.Iterator: java.lang.Object next()>();

        r19 = (android.text.util.LinkSpec) $r6;

        $r7 = r19.<android.text.util.LinkSpec: java.lang.String url>;

        $i9 = r19.<android.text.util.LinkSpec: int start>;

        $i8 = r19.<android.text.util.LinkSpec: int end>;

        staticinvoke <android.text.util.Linkify: void applyLink(java.lang.String,int,int,android.text.Spannable,java.util.function.Function)>($r7, $i9, $i8, r0, r1);

        goto label10;

     label11:
        return 1;
    }

    public static final boolean addLinks(android.text.Spannable, int, java.util.function.Function)
    {
        android.text.Spannable r0;
        int i0;
        java.util.function.Function r1;
        boolean $z0;

        r0 := @parameter0: android.text.Spannable;

        i0 := @parameter1: int;

        r1 := @parameter2: java.util.function.Function;

        $z0 = staticinvoke <android.text.util.Linkify: boolean addLinks(android.text.Spannable,int,android.content.Context,java.util.function.Function)>(r0, i0, null, r1);

        return $z0;
    }

    public static final boolean addLinks(android.text.Spannable, java.util.regex.Pattern, java.lang.String)
    {
        android.text.Spannable r0;
        java.util.regex.Pattern r1;
        java.lang.String r2;
        boolean $z0;

        r0 := @parameter0: android.text.Spannable;

        r1 := @parameter1: java.util.regex.Pattern;

        r2 := @parameter2: java.lang.String;

        $z0 = staticinvoke <android.text.util.Linkify: boolean addLinks(android.text.Spannable,java.util.regex.Pattern,java.lang.String,java.lang.String[],android.text.util.Linkify$MatchFilter,android.text.util.Linkify$TransformFilter)>(r0, r1, r2, null, null, null);

        return $z0;
    }

    public static final boolean addLinks(android.text.Spannable, java.util.regex.Pattern, java.lang.String, android.text.util.Linkify$MatchFilter, android.text.util.Linkify$TransformFilter)
    {
        android.text.Spannable r0;
        java.util.regex.Pattern r1;
        java.lang.String r2;
        android.text.util.Linkify$MatchFilter r3;
        android.text.util.Linkify$TransformFilter r4;
        boolean $z0;

        r0 := @parameter0: android.text.Spannable;

        r1 := @parameter1: java.util.regex.Pattern;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: android.text.util.Linkify$MatchFilter;

        r4 := @parameter4: android.text.util.Linkify$TransformFilter;

        $z0 = staticinvoke <android.text.util.Linkify: boolean addLinks(android.text.Spannable,java.util.regex.Pattern,java.lang.String,java.lang.String[],android.text.util.Linkify$MatchFilter,android.text.util.Linkify$TransformFilter)>(r0, r1, r2, null, r3, r4);

        return $z0;
    }

    public static final boolean addLinks(android.text.Spannable, java.util.regex.Pattern, java.lang.String, java.lang.String[], android.text.util.Linkify$MatchFilter, android.text.util.Linkify$TransformFilter)
    {
        android.text.Spannable r0;
        java.util.regex.Pattern r1;
        java.lang.String r2;
        java.lang.String[] r3;
        android.text.util.Linkify$MatchFilter r4;
        android.text.util.Linkify$TransformFilter r5;
        boolean $z0;

        r0 := @parameter0: android.text.Spannable;

        r1 := @parameter1: java.util.regex.Pattern;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String[];

        r4 := @parameter4: android.text.util.Linkify$MatchFilter;

        r5 := @parameter5: android.text.util.Linkify$TransformFilter;

        $z0 = staticinvoke <android.text.util.Linkify: boolean addLinks(android.text.Spannable,java.util.regex.Pattern,java.lang.String,java.lang.String[],android.text.util.Linkify$MatchFilter,android.text.util.Linkify$TransformFilter,java.util.function.Function)>(r0, r1, r2, r3, r4, r5, null);

        return $z0;
    }

    public static final boolean addLinks(android.text.Spannable, java.util.regex.Pattern, java.lang.String, java.lang.String[], android.text.util.Linkify$MatchFilter, android.text.util.Linkify$TransformFilter, java.util.function.Function)
    {
        android.text.Spannable r0;
        android.text.util.Linkify$MatchFilter r1;
        android.text.util.Linkify$TransformFilter r2;
        java.util.function.Function r3;
        java.lang.String[] r4, r13, r15;
        int i0, $i1, $i2, $i4, $i5, i6, $i7, i8;
        boolean $z0, $z1, z2, z3;
        java.lang.String $r5, $r6, $r8, r12, r14, $r17, r18, r19;
        java.util.Locale $r7, $r16;
        java.lang.Object[] $r9;
        java.lang.Integer $r10;
        java.util.regex.Pattern r11;
        java.util.regex.Matcher r20;

        r0 := @parameter0: android.text.Spannable;

        r11 := @parameter1: java.util.regex.Pattern;

        r12 := @parameter2: java.lang.String;

        r13 := @parameter3: java.lang.String[];

        r1 := @parameter4: android.text.util.Linkify$MatchFilter;

        r2 := @parameter5: android.text.util.Linkify$TransformFilter;

        r3 := @parameter6: java.util.function.Function;

        if r0 == null goto label01;

        $r8 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();

        $z1 = staticinvoke <android.text.util.Linkify: boolean containsUnsupportedCharacters(java.lang.String)>($r8);

        if $z1 == 0 goto label01;

        $r9 = newarray (java.lang.Object)[3];

        $r9[0] = "116321860";

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-1);

        $r9[1] = $r10;

        $r9[2] = "";

        staticinvoke <android.util.EventLog: int writeEvent(int,java.lang.Object[])>(1397638484, $r9);

        return 0;

     label01:
        r14 = r12;

        if r12 != null goto label02;

        r14 = "";

     label02:
        if r13 == null goto label03;

        r15 = r13;

        $i2 = lengthof r13;

        if $i2 >= 1 goto label04;

     label03:
        r15 = <libcore.util.EmptyArray: java.lang.String[] STRING>;

     label04:
        $i4 = lengthof r15;

        $i5 = $i4 + 1;

        r4 = newarray (java.lang.String)[$i5];

        $r16 = <java.util.Locale: java.util.Locale ROOT>;

        $r17 = virtualinvoke r14.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r16);

        r4[0] = $r17;

        i6 = 0;

     label05:
        $i7 = lengthof r15;

        if i6 >= $i7 goto label08;

        r18 = r15[i6];

        if r18 != null goto label06;

        r19 = "";

        goto label07;

     label06:
        $r7 = <java.util.Locale: java.util.Locale ROOT>;

        r19 = virtualinvoke r18.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r7);

     label07:
        $i1 = i6 + 1;

        r4[$i1] = r19;

        i6 = i6 + 1;

        goto label05;

     label08:
        z2 = 0;

        r20 = virtualinvoke r11.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r0);

     label09:
        $z0 = virtualinvoke r20.<java.util.regex.Matcher: boolean find()>();

        if $z0 == 0 goto label12;

        i0 = virtualinvoke r20.<java.util.regex.Matcher: int start()>();

        i8 = virtualinvoke r20.<java.util.regex.Matcher: int end()>();

        z3 = 1;

        if r1 == null goto label10;

        z3 = interfaceinvoke r1.<android.text.util.Linkify$MatchFilter: boolean acceptMatch(java.lang.CharSequence,int,int)>(r0, i0, i8);

     label10:
        if z3 == 0 goto label11;

        $r5 = virtualinvoke r20.<java.util.regex.Matcher: java.lang.String group(int)>(0);

        $r6 = staticinvoke <android.text.util.Linkify: java.lang.String makeUrl(java.lang.String,java.lang.String[],java.util.regex.Matcher,android.text.util.Linkify$TransformFilter)>($r5, r4, r20, r2);

        staticinvoke <android.text.util.Linkify: void applyLink(java.lang.String,int,int,android.text.Spannable,java.util.function.Function)>($r6, i0, i8, r0, r3);

        z2 = 1;

     label11:
        goto label09;

     label12:
        return z2;
    }

    public static final boolean addLinks(android.widget.TextView, int)
    {
        android.widget.TextView r0;
        int i0;
        android.content.Context r1;
        boolean $z0, $z1, $z2;
        android.text.Spannable $r2;
        java.lang.CharSequence r3;
        android.text.SpannableString r4;

        r0 := @parameter0: android.widget.TextView;

        i0 := @parameter1: int;

        if i0 != 0 goto label1;

        return 0;

     label1:
        r1 = virtualinvoke r0.<android.widget.TextView: android.content.Context getContext()>();

        r3 = virtualinvoke r0.<android.widget.TextView: java.lang.CharSequence getText()>();

        $z0 = r3 instanceof android.text.Spannable;

        if $z0 == 0 goto label3;

        $r2 = (android.text.Spannable) r3;

        $z2 = staticinvoke <android.text.util.Linkify: boolean addLinks(android.text.Spannable,int,android.content.Context,java.util.function.Function)>($r2, i0, r1, null);

        if $z2 == 0 goto label2;

        staticinvoke <android.text.util.Linkify: void addLinkMovementMethod(android.widget.TextView)>(r0);

        return 1;

     label2:
        return 0;

     label3:
        r4 = staticinvoke <android.text.SpannableString: android.text.SpannableString valueOf(java.lang.CharSequence)>(r3);

        $z1 = staticinvoke <android.text.util.Linkify: boolean addLinks(android.text.Spannable,int,android.content.Context,java.util.function.Function)>(r4, i0, r1, null);

        if $z1 == 0 goto label4;

        staticinvoke <android.text.util.Linkify: void addLinkMovementMethod(android.widget.TextView)>(r0);

        virtualinvoke r0.<android.widget.TextView: void setText(java.lang.CharSequence)>(r4);

        return 1;

     label4:
        return 0;
    }

    private static void applyLink(java.lang.String, int, int, android.text.Spannable, java.util.function.Function)
    {
        java.lang.String r0;
        int i0, i1;
        android.text.Spannable r1;
        java.util.function.Function r2, r5;
        java.lang.Object $r3;
        android.text.style.URLSpan $r4;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 := @parameter3: android.text.Spannable;

        r2 := @parameter4: java.util.function.Function;

        r5 = r2;

        if r2 != null goto label1;

        r5 = <android.text.util.Linkify: java.util.function.Function DEFAULT_SPAN_FACTORY>;

     label1:
        $r3 = interfaceinvoke r5.<java.util.function.Function: java.lang.Object apply(java.lang.Object)>(r0);

        $r4 = (android.text.style.URLSpan) $r3;

        interfaceinvoke r1.<android.text.Spannable: void setSpan(java.lang.Object,int,int,int)>($r4, i0, i1, 33);

        return;
    }

    public static boolean containsUnsupportedCharacters(java.lang.String)
    {
        java.lang.String r0;
        boolean $z0, $z1, $z2;

        r0 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<java.lang.String: boolean contains(java.lang.CharSequence)>("\u202c");

        if $z0 == 0 goto label1;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("Linkify", "Unsupported character for applying links: u202C");

        return 1;

     label1:
        $z1 = virtualinvoke r0.<java.lang.String: boolean contains(java.lang.CharSequence)>("\u202d");

        if $z1 == 0 goto label2;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("Linkify", "Unsupported character for applying links: u202D");

        return 1;

     label2:
        $z2 = virtualinvoke r0.<java.lang.String: boolean contains(java.lang.CharSequence)>("\u202e");

        if $z2 == 0 goto label3;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("Linkify", "Unsupported character for applying links: u202E");

        return 1;

     label3:
        return 0;
    }

    private static final void gatherLinks(java.util.ArrayList, android.text.Spannable, java.util.regex.Pattern, java.lang.String[], android.text.util.Linkify$MatchFilter, android.text.util.Linkify$TransformFilter)
    {
        java.util.ArrayList r0;
        android.text.Spannable r1;
        java.lang.String[] r2;
        android.text.util.Linkify$MatchFilter r3;
        android.text.util.Linkify$TransformFilter r4;
        int i0, i1;
        boolean $z0, $z2;
        android.text.util.LinkSpec $r6;
        java.lang.String $r7, $r8;
        java.util.regex.Pattern r9;
        java.util.regex.Matcher r10;

        r0 := @parameter0: java.util.ArrayList;

        r1 := @parameter1: android.text.Spannable;

        r9 := @parameter2: java.util.regex.Pattern;

        r2 := @parameter3: java.lang.String[];

        r3 := @parameter4: android.text.util.Linkify$MatchFilter;

        r4 := @parameter5: android.text.util.Linkify$TransformFilter;

        r10 = virtualinvoke r9.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r1);

     label1:
        $z0 = virtualinvoke r10.<java.util.regex.Matcher: boolean find()>();

        if $z0 == 0 goto label4;

        i0 = virtualinvoke r10.<java.util.regex.Matcher: int start()>();

        i1 = virtualinvoke r10.<java.util.regex.Matcher: int end()>();

        if r3 == null goto label2;

        $z2 = interfaceinvoke r3.<android.text.util.Linkify$MatchFilter: boolean acceptMatch(java.lang.CharSequence,int,int)>(r1, i0, i1);

        if $z2 == 0 goto label3;

     label2:
        $r6 = new android.text.util.LinkSpec;

        specialinvoke $r6.<android.text.util.LinkSpec: void <init>()>();

        $r7 = virtualinvoke r10.<java.util.regex.Matcher: java.lang.String group(int)>(0);

        $r8 = staticinvoke <android.text.util.Linkify: java.lang.String makeUrl(java.lang.String,java.lang.String[],java.util.regex.Matcher,android.text.util.Linkify$TransformFilter)>($r7, r2, r10, r4);

        $r6.<android.text.util.LinkSpec: java.lang.String url> = $r8;

        $r6.<android.text.util.LinkSpec: int start> = i0;

        $r6.<android.text.util.LinkSpec: int end> = i1;

        virtualinvoke r0.<java.util.ArrayList: boolean add(java.lang.Object)>($r6);

     label3:
        goto label1;

     label4:
        return;
    }

    private static final void gatherMapLinks(java.util.ArrayList, android.text.Spannable)
    {
        int i0, i1, $i2, $i3, $i4, i5;
        java.lang.StringBuilder r0;
        java.lang.String $r3, r8, r9, r11;
        java.lang.Throwable $r4, $r5;
        java.util.ArrayList r6;
        android.text.Spannable r7;
        android.text.util.LinkSpec r10;

        r6 := @parameter0: java.util.ArrayList;

        r7 := @parameter1: android.text.Spannable;

        r8 = virtualinvoke r7.<java.lang.Object: java.lang.String toString()>();

        i5 = 0;

     label01:
        r9 = staticinvoke <android.webkit.WebView: java.lang.String findAddress(java.lang.String)>(r8);

     label02:
        if r9 == null goto label11;

     label03:
        i0 = virtualinvoke r8.<java.lang.String: int indexOf(java.lang.String)>(r9);

     label04:
        if i0 >= 0 goto label05;

        goto label11;

     label05:
        r10 = new android.text.util.LinkSpec;

        specialinvoke r10.<android.text.util.LinkSpec: void <init>()>();

        $i2 = virtualinvoke r9.<java.lang.String: int length()>();

        i1 = i0 + $i2;

        $i3 = i5 + i0;

        r10.<android.text.util.LinkSpec: int start> = $i3;

        $i4 = i5 + i1;

        r10.<android.text.util.LinkSpec: int end> = $i4;

        r8 = virtualinvoke r8.<java.lang.String: java.lang.String substring(int)>(i1);

     label06:
        i5 = i5 + i1;

     label07:
        r11 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>(r9, "UTF-8");

     label08:
        r0 = new java.lang.StringBuilder;

        specialinvoke r0.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("geo:0,0?q=");

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r11);

        $r3 = virtualinvoke r0.<java.lang.StringBuilder: java.lang.String toString()>();

        r10.<android.text.util.LinkSpec: java.lang.String url> = $r3;

        virtualinvoke r6.<java.util.ArrayList: boolean add(java.lang.Object)>(r10);

     label09:
        goto label01;

     label10:
        $r4 := @caughtexception;

        goto label01;

     label11:
        return;

     label12:
        $r5 := @caughtexception;

        return;

        catch java.lang.UnsupportedOperationException from label01 to label02 with label12;
        catch java.lang.UnsupportedOperationException from label03 to label04 with label12;
        catch java.lang.UnsupportedOperationException from label05 to label06 with label12;
        catch java.io.UnsupportedEncodingException from label07 to label08 with label10;
        catch java.lang.UnsupportedOperationException from label07 to label08 with label12;
        catch java.lang.UnsupportedOperationException from label08 to label09 with label12;
    }

    private static void gatherTelLinks(java.util.ArrayList, android.text.Spannable, android.content.Context)
    {
        java.util.ArrayList r0;
        java.util.Locale $r2, $r17;
        java.lang.String $r3, $r10, $r11, $r13, $r16, r21;
        com.android.i18n.phonenumbers.PhoneNumberUtil$Leniency $r4;
        java.lang.Iterable $r5;
        java.lang.Object $r6, $r14;
        android.text.util.LinkSpec $r7;
        java.lang.StringBuilder $r8;
        int $i0, $i1;
        android.telephony.TelephonyManager $r15;
        android.text.Spannable r18;
        android.content.Context r19;
        com.android.i18n.phonenumbers.PhoneNumberUtil r20;
        java.util.Iterator r22;
        boolean $z1;
        com.android.i18n.phonenumbers.PhoneNumberMatch r23;

        r0 := @parameter0: java.util.ArrayList;

        r18 := @parameter1: android.text.Spannable;

        r19 := @parameter2: android.content.Context;

        r20 = staticinvoke <com.android.i18n.phonenumbers.PhoneNumberUtil: com.android.i18n.phonenumbers.PhoneNumberUtil getInstance()>();

        if r19 == null goto label1;

        goto label2;

     label1:
        r19 = staticinvoke <android.app.ActivityThread: android.app.Application currentApplication()>();

     label2:
        if r19 == null goto label3;

        $r14 = virtualinvoke r19.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/telephony/TelephonyManager;");

        $r15 = (android.telephony.TelephonyManager) $r14;

        $r16 = virtualinvoke $r15.<android.telephony.TelephonyManager: java.lang.String getSimCountryIso()>();

        $r17 = <java.util.Locale: java.util.Locale US>;

        r21 = virtualinvoke $r16.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>($r17);

        goto label4;

     label3:
        $r2 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        r21 = virtualinvoke $r2.<java.util.Locale: java.lang.String getCountry()>();

     label4:
        $r3 = virtualinvoke r18.<java.lang.Object: java.lang.String toString()>();

        $r4 = <com.android.i18n.phonenumbers.PhoneNumberUtil$Leniency: com.android.i18n.phonenumbers.PhoneNumberUtil$Leniency POSSIBLE>;

        $r5 = virtualinvoke r20.<com.android.i18n.phonenumbers.PhoneNumberUtil: java.lang.Iterable findNumbers(java.lang.CharSequence,java.lang.String,com.android.i18n.phonenumbers.PhoneNumberUtil$Leniency,long)>($r3, r21, $r4, 9223372036854775807L);

        r22 = interfaceinvoke $r5.<java.lang.Iterable: java.util.Iterator iterator()>();

     label5:
        $z1 = interfaceinvoke r22.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label6;

        $r6 = interfaceinvoke r22.<java.util.Iterator: java.lang.Object next()>();

        r23 = (com.android.i18n.phonenumbers.PhoneNumberMatch) $r6;

        $r7 = new android.text.util.LinkSpec;

        specialinvoke $r7.<android.text.util.LinkSpec: void <init>()>();

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("tel:");

        $r10 = virtualinvoke r23.<com.android.i18n.phonenumbers.PhoneNumberMatch: java.lang.String rawString()>();

        $r11 = staticinvoke <android.telephony.PhoneNumberUtils: java.lang.String normalizeNumber(java.lang.String)>($r10);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7.<android.text.util.LinkSpec: java.lang.String url> = $r13;

        $i0 = virtualinvoke r23.<com.android.i18n.phonenumbers.PhoneNumberMatch: int start()>();

        $r7.<android.text.util.LinkSpec: int start> = $i0;

        $i1 = virtualinvoke r23.<com.android.i18n.phonenumbers.PhoneNumberMatch: int end()>();

        $r7.<android.text.util.LinkSpec: int end> = $i1;

        virtualinvoke r0.<java.util.ArrayList: boolean add(java.lang.Object)>($r7);

        goto label5;

     label6:
        return;
    }

    static android.text.style.URLSpan lambda$static$0(java.lang.String)
    {
        java.lang.String r0;
        android.text.style.URLSpan $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = new android.text.style.URLSpan;

        specialinvoke $r1.<android.text.style.URLSpan: void <init>(java.lang.String)>(r0);

        return $r1;
    }

    private static final java.lang.String makeUrl(java.lang.String, java.lang.String[], java.util.regex.Matcher, android.text.util.Linkify$TransformFilter)
    {
        java.lang.String[] r0;
        android.text.util.Linkify$TransformFilter r1;
        int $i0, $i1, $i2, $i3, i4, $i5;
        java.lang.StringBuilder $r2, $r10;
        java.lang.String $r3, $r6, $r7, $r8, $r9, $r11, $r13, $r14, r16, r18, r19, r21;
        boolean $z0, $z1, z3;
        java.util.regex.Matcher r17;

        r16 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.String[];

        r17 := @parameter2: java.util.regex.Matcher;

        r1 := @parameter3: android.text.util.Linkify$TransformFilter;

        r18 = r16;

        if r1 == null goto label1;

        r18 = interfaceinvoke r1.<android.text.util.Linkify$TransformFilter: java.lang.String transformUrl(java.util.regex.Matcher,java.lang.String)>(r17, r16);

     label1:
        i4 = 0;

     label2:
        z3 = 0;

        r19 = r18;

        $i5 = lengthof r0;

        if i4 >= $i5 goto label4;

        $r7 = r0[i4];

        $r6 = r0[i4];

        $i1 = virtualinvoke $r6.<java.lang.String: int length()>();

        $z0 = virtualinvoke r18.<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>(1, 0, $r7, 0, $i1);

        if $z0 == 0 goto label3;

        z3 = 1;

        r19 = r18;

        $r9 = r0[i4];

        $r8 = r0[i4];

        $i2 = virtualinvoke $r8.<java.lang.String: int length()>();

        $z1 = virtualinvoke r18.<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>(0, 0, $r9, 0, $i2);

        if $z1 != 0 goto label4;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = r0[i4];

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = r0[i4];

        $i3 = virtualinvoke $r13.<java.lang.String: int length()>();

        $r14 = virtualinvoke r18.<java.lang.String: java.lang.String substring(int)>($i3);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        r19 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        z3 = 1;

        goto label4;

     label3:
        i4 = i4 + 1;

        goto label2;

     label4:
        r21 = r19;

        if z3 != 0 goto label5;

        r21 = r19;

        $i0 = lengthof r0;

        if $i0 <= 0 goto label5;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = r0[0];

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r19);

        r21 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

     label5:
        return r21;
    }

    private static final void pruneOverlaps(java.util.ArrayList)
    {
        java.util.ArrayList r0;
        android.text.util.LinkSpec r1, r2;
        android.text.util.Linkify$4 $r3;
        java.lang.Object $r4, $r5;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, i19, i20, $i21, i22;

        r0 := @parameter0: java.util.ArrayList;

        $r3 = new android.text.util.Linkify$4;

        specialinvoke $r3.<android.text.util.Linkify$4: void <init>()>();

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>(r0, $r3);

        i19 = virtualinvoke r0.<java.util.ArrayList: int size()>();

        i20 = 0;

     label1:
        $i21 = i19 - 1;

        if i20 >= $i21 goto label6;

        $r4 = virtualinvoke r0.<java.util.ArrayList: java.lang.Object get(int)>(i20);

        r1 = (android.text.util.LinkSpec) $r4;

        $i0 = i20 + 1;

        $r5 = virtualinvoke r0.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        r2 = (android.text.util.LinkSpec) $r5;

        i22 = -1;

        $i2 = r1.<android.text.util.LinkSpec: int start>;

        $i1 = r2.<android.text.util.LinkSpec: int start>;

        if $i2 > $i1 goto label5;

        $i4 = r1.<android.text.util.LinkSpec: int end>;

        $i3 = r2.<android.text.util.LinkSpec: int start>;

        if $i4 <= $i3 goto label5;

        $i6 = r2.<android.text.util.LinkSpec: int end>;

        $i5 = r1.<android.text.util.LinkSpec: int end>;

        if $i6 > $i5 goto label2;

        i22 = i20 + 1;

        goto label4;

     label2:
        $i8 = r1.<android.text.util.LinkSpec: int end>;

        $i7 = r1.<android.text.util.LinkSpec: int start>;

        $i12 = $i8 - $i7;

        $i10 = r2.<android.text.util.LinkSpec: int end>;

        $i9 = r2.<android.text.util.LinkSpec: int start>;

        $i11 = $i10 - $i9;

        if $i12 <= $i11 goto label3;

        i22 = i20 + 1;

        goto label4;

     label3:
        $i14 = r1.<android.text.util.LinkSpec: int end>;

        $i13 = r1.<android.text.util.LinkSpec: int start>;

        $i18 = $i14 - $i13;

        $i16 = r2.<android.text.util.LinkSpec: int end>;

        $i15 = r2.<android.text.util.LinkSpec: int start>;

        $i17 = $i16 - $i15;

        if $i18 >= $i17 goto label4;

        i22 = i20;

     label4:
        if i22 == -1 goto label5;

        virtualinvoke r0.<java.util.ArrayList: java.lang.Object remove(int)>(i22);

        i19 = i19 + -1;

        goto label1;

     label5:
        i20 = i20 + 1;

        goto label1;

     label6:
        return;
    }
}
