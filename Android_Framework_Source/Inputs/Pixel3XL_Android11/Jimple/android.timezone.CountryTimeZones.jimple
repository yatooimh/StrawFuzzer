public final class android.timezone.CountryTimeZones extends java.lang.Object
{
    private final libcore.timezone.CountryTimeZones mDelegate;

    void <init>(libcore.timezone.CountryTimeZones)
    {
        android.timezone.CountryTimeZones r0;
        libcore.timezone.CountryTimeZones r1;

        r0 := @this: android.timezone.CountryTimeZones;

        r1 := @parameter0: libcore.timezone.CountryTimeZones;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.timezone.CountryTimeZones: libcore.timezone.CountryTimeZones mDelegate> = r1;

        return;
    }

    public boolean equals(java.lang.Object)
    {
        android.timezone.CountryTimeZones r0, r6;
        java.lang.Class $r1, $r2;
        libcore.timezone.CountryTimeZones $r3, $r4;
        boolean $z0;
        java.lang.Object r5;

        r0 := @this: android.timezone.CountryTimeZones;

        r5 := @parameter0: java.lang.Object;

        if r0 != r5 goto label1;

        return 1;

     label1:
        if r5 == null goto label3;

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = virtualinvoke r5.<java.lang.Object: java.lang.Class getClass()>();

        if $r1 == $r2 goto label2;

        goto label3;

     label2:
        r6 = (android.timezone.CountryTimeZones) r5;

        $r4 = r0.<android.timezone.CountryTimeZones: libcore.timezone.CountryTimeZones mDelegate>;

        $r3 = r6.<android.timezone.CountryTimeZones: libcore.timezone.CountryTimeZones mDelegate>;

        $z0 = virtualinvoke $r4.<libcore.timezone.CountryTimeZones: boolean equals(java.lang.Object)>($r3);

        return $z0;

     label3:
        return 0;
    }

    public android.icu.util.TimeZone getDefaultTimeZone()
    {
        android.timezone.CountryTimeZones r0;
        libcore.timezone.CountryTimeZones $r1;
        android.icu.util.TimeZone $r2;

        r0 := @this: android.timezone.CountryTimeZones;

        $r1 = r0.<android.timezone.CountryTimeZones: libcore.timezone.CountryTimeZones mDelegate>;

        $r2 = virtualinvoke $r1.<libcore.timezone.CountryTimeZones: android.icu.util.TimeZone getDefaultTimeZone()>();

        return $r2;
    }

    public java.lang.String getDefaultTimeZoneId()
    {
        android.timezone.CountryTimeZones r0;
        libcore.timezone.CountryTimeZones $r1;
        java.lang.String $r2;

        r0 := @this: android.timezone.CountryTimeZones;

        $r1 = r0.<android.timezone.CountryTimeZones: libcore.timezone.CountryTimeZones mDelegate>;

        $r2 = virtualinvoke $r1.<libcore.timezone.CountryTimeZones: java.lang.String getDefaultTimeZoneId()>();

        return $r2;
    }

    public java.util.List getEffectiveTimeZoneMappingsAt(long)
    {
        android.timezone.CountryTimeZones r0;
        long l0;
        libcore.timezone.CountryTimeZones $r2;
        java.util.ArrayList $r3;
        int $i1;
        boolean $z0;
        java.util.List $r4, r8;
        android.timezone.CountryTimeZones$TimeZoneMapping $r5;
        java.lang.Object $r6;
        libcore.timezone.CountryTimeZones$TimeZoneMapping $r7;
        java.util.Iterator r9;

        r0 := @this: android.timezone.CountryTimeZones;

        l0 := @parameter0: long;

        $r2 = r0.<android.timezone.CountryTimeZones: libcore.timezone.CountryTimeZones mDelegate>;

        r8 = virtualinvoke $r2.<libcore.timezone.CountryTimeZones: java.util.List getEffectiveTimeZoneMappingsAt(long)>(l0);

        $r3 = new java.util.ArrayList;

        $i1 = interfaceinvoke r8.<java.util.List: int size()>();

        specialinvoke $r3.<java.util.ArrayList: void <init>(int)>($i1);

        r9 = interfaceinvoke r8.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = new android.timezone.CountryTimeZones$TimeZoneMapping;

        $r6 = interfaceinvoke r9.<java.util.Iterator: java.lang.Object next()>();

        $r7 = (libcore.timezone.CountryTimeZones$TimeZoneMapping) $r6;

        specialinvoke $r5.<android.timezone.CountryTimeZones$TimeZoneMapping: void <init>(libcore.timezone.CountryTimeZones$TimeZoneMapping)>($r7);

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r5);

        goto label1;

     label2:
        $r4 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r3);

        return $r4;
    }

    public boolean hasUtcZone(long)
    {
        android.timezone.CountryTimeZones r0;
        long l0;
        libcore.timezone.CountryTimeZones $r1;
        boolean $z0;

        r0 := @this: android.timezone.CountryTimeZones;

        l0 := @parameter0: long;

        $r1 = r0.<android.timezone.CountryTimeZones: libcore.timezone.CountryTimeZones mDelegate>;

        $z0 = virtualinvoke $r1.<libcore.timezone.CountryTimeZones: boolean hasUtcZone(long)>(l0);

        return $z0;
    }

    public int hashCode()
    {
        android.timezone.CountryTimeZones r0;
        java.lang.Object[] $r1;
        libcore.timezone.CountryTimeZones $r2;
        int $i0;

        r0 := @this: android.timezone.CountryTimeZones;

        $r1 = newarray (java.lang.Object)[1];

        $r2 = r0.<android.timezone.CountryTimeZones: libcore.timezone.CountryTimeZones mDelegate>;

        $r1[0] = $r2;

        $i0 = staticinvoke <java.util.Objects: int hash(java.lang.Object[])>($r1);

        return $i0;
    }

    public boolean isDefaultTimeZoneBoosted()
    {
        android.timezone.CountryTimeZones r0;
        libcore.timezone.CountryTimeZones $r1;
        boolean $z0;

        r0 := @this: android.timezone.CountryTimeZones;

        $r1 = r0.<android.timezone.CountryTimeZones: libcore.timezone.CountryTimeZones mDelegate>;

        $z0 = virtualinvoke $r1.<libcore.timezone.CountryTimeZones: boolean isDefaultTimeZoneBoosted()>();

        return $z0;
    }

    public android.timezone.CountryTimeZones$OffsetResult lookupByOffsetWithBias(long, android.icu.util.TimeZone, int)
    {
        android.timezone.CountryTimeZones r0;
        long l0;
        int i1;
        libcore.timezone.CountryTimeZones $r1;
        android.timezone.CountryTimeZones$OffsetResult $r2, r6;
        android.icu.util.TimeZone $r3, r4;
        boolean $z0;
        libcore.timezone.CountryTimeZones$OffsetResult r5;

        r0 := @this: android.timezone.CountryTimeZones;

        l0 := @parameter0: long;

        r4 := @parameter1: android.icu.util.TimeZone;

        i1 := @parameter2: int;

        $r1 = r0.<android.timezone.CountryTimeZones: libcore.timezone.CountryTimeZones mDelegate>;

        r5 = virtualinvoke $r1.<libcore.timezone.CountryTimeZones: libcore.timezone.CountryTimeZones$OffsetResult lookupByOffsetWithBias(long,android.icu.util.TimeZone,int)>(l0, r4, i1);

        if r5 != null goto label1;

        r6 = null;

        goto label2;

     label1:
        $r2 = new android.timezone.CountryTimeZones$OffsetResult;

        $r3 = virtualinvoke r5.<libcore.timezone.CountryTimeZones$OffsetResult: android.icu.util.TimeZone getTimeZone()>();

        $z0 = virtualinvoke r5.<libcore.timezone.CountryTimeZones$OffsetResult: boolean isOnlyMatch()>();

        specialinvoke $r2.<android.timezone.CountryTimeZones$OffsetResult: void <init>(android.icu.util.TimeZone,boolean)>($r3, $z0);

        r6 = $r2;

     label2:
        return r6;
    }

    public android.timezone.CountryTimeZones$OffsetResult lookupByOffsetWithBias(long, android.icu.util.TimeZone, int, boolean)
    {
        android.timezone.CountryTimeZones r0;
        long l0;
        int i1;
        boolean z0, $z1;
        libcore.timezone.CountryTimeZones $r1;
        android.timezone.CountryTimeZones$OffsetResult $r2, r6;
        android.icu.util.TimeZone $r3, r4;
        libcore.timezone.CountryTimeZones$OffsetResult r5;

        r0 := @this: android.timezone.CountryTimeZones;

        l0 := @parameter0: long;

        r4 := @parameter1: android.icu.util.TimeZone;

        i1 := @parameter2: int;

        z0 := @parameter3: boolean;

        $r1 = r0.<android.timezone.CountryTimeZones: libcore.timezone.CountryTimeZones mDelegate>;

        r5 = virtualinvoke $r1.<libcore.timezone.CountryTimeZones: libcore.timezone.CountryTimeZones$OffsetResult lookupByOffsetWithBias(long,android.icu.util.TimeZone,int,boolean)>(l0, r4, i1, z0);

        if r5 != null goto label1;

        r6 = null;

        goto label2;

     label1:
        $r2 = new android.timezone.CountryTimeZones$OffsetResult;

        $r3 = virtualinvoke r5.<libcore.timezone.CountryTimeZones$OffsetResult: android.icu.util.TimeZone getTimeZone()>();

        $z1 = virtualinvoke r5.<libcore.timezone.CountryTimeZones$OffsetResult: boolean isOnlyMatch()>();

        specialinvoke $r2.<android.timezone.CountryTimeZones$OffsetResult: void <init>(android.icu.util.TimeZone,boolean)>($r3, $z1);

        r6 = $r2;

     label2:
        return r6;
    }

    public boolean matchesCountryCode(java.lang.String)
    {
        android.timezone.CountryTimeZones r0;
        java.lang.String r1;
        libcore.timezone.CountryTimeZones $r2;
        boolean $z0;

        r0 := @this: android.timezone.CountryTimeZones;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<android.timezone.CountryTimeZones: libcore.timezone.CountryTimeZones mDelegate>;

        $z0 = virtualinvoke $r2.<libcore.timezone.CountryTimeZones: boolean isForCountryCode(java.lang.String)>(r1);

        return $z0;
    }

    public java.lang.String toString()
    {
        android.timezone.CountryTimeZones r0;
        libcore.timezone.CountryTimeZones $r1;
        java.lang.String $r2;

        r0 := @this: android.timezone.CountryTimeZones;

        $r1 = r0.<android.timezone.CountryTimeZones: libcore.timezone.CountryTimeZones mDelegate>;

        $r2 = virtualinvoke $r1.<libcore.timezone.CountryTimeZones: java.lang.String toString()>();

        return $r2;
    }
}
