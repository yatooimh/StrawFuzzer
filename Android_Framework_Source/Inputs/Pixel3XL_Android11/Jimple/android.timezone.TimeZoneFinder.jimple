public final class android.timezone.TimeZoneFinder extends java.lang.Object
{
    private static android.timezone.TimeZoneFinder sInstance;
    private static final java.lang.Object sLock;
    private final libcore.timezone.TimeZoneFinder mDelegate;

    static void <clinit>()
    {
        java.lang.Object $r0;

        $r0 = new java.lang.Object;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        <android.timezone.TimeZoneFinder: java.lang.Object sLock> = $r0;

        return;
    }

    private void <init>(libcore.timezone.TimeZoneFinder)
    {
        android.timezone.TimeZoneFinder r0;
        libcore.timezone.TimeZoneFinder r1, $r3;

        r0 := @this: android.timezone.TimeZoneFinder;

        r1 := @parameter0: libcore.timezone.TimeZoneFinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r1);

        $r3 = (libcore.timezone.TimeZoneFinder) r1;

        r0.<android.timezone.TimeZoneFinder: libcore.timezone.TimeZoneFinder mDelegate> = $r3;

        return;
    }

    public static android.timezone.TimeZoneFinder getInstance()
    {
        java.lang.Object r0;
        android.timezone.TimeZoneFinder $r1, $r2, r5;
        libcore.timezone.TimeZoneFinder $r3;
        java.lang.Throwable $r4;

        r0 = <android.timezone.TimeZoneFinder: java.lang.Object sLock>;

        entermonitor r0;

     label1:
        $r1 = <android.timezone.TimeZoneFinder: android.timezone.TimeZoneFinder sInstance>;

        if $r1 != null goto label2;

        r5 = new android.timezone.TimeZoneFinder;

        $r3 = staticinvoke <libcore.timezone.TimeZoneFinder: libcore.timezone.TimeZoneFinder getInstance()>();

        specialinvoke r5.<android.timezone.TimeZoneFinder: void <init>(libcore.timezone.TimeZoneFinder)>($r3);

        <android.timezone.TimeZoneFinder: android.timezone.TimeZoneFinder sInstance> = r5;

     label2:
        exitmonitor r0;

     label3:
        $r2 = <android.timezone.TimeZoneFinder: android.timezone.TimeZoneFinder sInstance>;

        return $r2;

     label4:
        $r4 := @caughtexception;

     label5:
        exitmonitor r0;

     label6:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public java.lang.String getIanaVersion()
    {
        android.timezone.TimeZoneFinder r0;
        libcore.timezone.TimeZoneFinder $r1;
        java.lang.String $r2;

        r0 := @this: android.timezone.TimeZoneFinder;

        $r1 = r0.<android.timezone.TimeZoneFinder: libcore.timezone.TimeZoneFinder mDelegate>;

        $r2 = virtualinvoke $r1.<libcore.timezone.TimeZoneFinder: java.lang.String getIanaVersion()>();

        return $r2;
    }

    public android.timezone.CountryTimeZones lookupCountryTimeZones(java.lang.String)
    {
        android.timezone.TimeZoneFinder r0;
        libcore.timezone.TimeZoneFinder $r1;
        android.timezone.CountryTimeZones $r2, r5;
        java.lang.String r3;
        libcore.timezone.CountryTimeZones r4;

        r0 := @this: android.timezone.TimeZoneFinder;

        r3 := @parameter0: java.lang.String;

        $r1 = r0.<android.timezone.TimeZoneFinder: libcore.timezone.TimeZoneFinder mDelegate>;

        r4 = virtualinvoke $r1.<libcore.timezone.TimeZoneFinder: libcore.timezone.CountryTimeZones lookupCountryTimeZones(java.lang.String)>(r3);

        if r4 != null goto label1;

        r5 = null;

        goto label2;

     label1:
        $r2 = new android.timezone.CountryTimeZones;

        specialinvoke $r2.<android.timezone.CountryTimeZones: void <init>(libcore.timezone.CountryTimeZones)>(r4);

        r5 = $r2;

     label2:
        return r5;
    }
}
