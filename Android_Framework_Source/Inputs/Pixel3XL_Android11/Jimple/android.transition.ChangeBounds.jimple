public class android.transition.ChangeBounds extends android.transition.Transition
{
    private static final android.util.Property BOTTOM_RIGHT_ONLY_PROPERTY;
    private static final android.util.Property BOTTOM_RIGHT_PROPERTY;
    private static final android.util.Property DRAWABLE_ORIGIN_PROPERTY;
    private static final java.lang.String LOG_TAG;
    private static final android.util.Property POSITION_PROPERTY;
    private static final java.lang.String PROPNAME_BOUNDS;
    private static final java.lang.String PROPNAME_CLIP;
    private static final java.lang.String PROPNAME_PARENT;
    private static final java.lang.String PROPNAME_WINDOW_X;
    private static final java.lang.String PROPNAME_WINDOW_Y;
    private static final android.util.Property TOP_LEFT_ONLY_PROPERTY;
    private static final android.util.Property TOP_LEFT_PROPERTY;
    private static android.animation.RectEvaluator sRectEvaluator;
    private static final java.lang.String[] sTransitionProperties;
    boolean mReparent;
    boolean mResizeClip;
    int[] tempLocation;

    static void <clinit>()
    {
        java.lang.String[] $r0;
        android.transition.ChangeBounds$1 $r1;
        android.transition.ChangeBounds$2 $r2;
        android.transition.ChangeBounds$3 $r3;
        android.transition.ChangeBounds$4 $r4;
        android.transition.ChangeBounds$5 $r5;
        android.transition.ChangeBounds$6 $r6;
        android.animation.RectEvaluator $r7;

        <android.transition.ChangeBounds: java.lang.String PROPNAME_WINDOW_Y> = "android:changeBounds:windowY";

        <android.transition.ChangeBounds: java.lang.String PROPNAME_WINDOW_X> = "android:changeBounds:windowX";

        <android.transition.ChangeBounds: java.lang.String PROPNAME_PARENT> = "android:changeBounds:parent";

        <android.transition.ChangeBounds: java.lang.String PROPNAME_CLIP> = "android:changeBounds:clip";

        <android.transition.ChangeBounds: java.lang.String PROPNAME_BOUNDS> = "android:changeBounds:bounds";

        <android.transition.ChangeBounds: java.lang.String LOG_TAG> = "ChangeBounds";

        $r0 = newarray (java.lang.String)[5];

        $r0[0] = "android:changeBounds:bounds";

        $r0[1] = "android:changeBounds:clip";

        $r0[2] = "android:changeBounds:parent";

        $r0[3] = "android:changeBounds:windowX";

        $r0[4] = "android:changeBounds:windowY";

        <android.transition.ChangeBounds: java.lang.String[] sTransitionProperties> = $r0;

        $r1 = new android.transition.ChangeBounds$1;

        specialinvoke $r1.<android.transition.ChangeBounds$1: void <init>(java.lang.Class,java.lang.String)>(class "Landroid/graphics/PointF;", "boundsOrigin");

        <android.transition.ChangeBounds: android.util.Property DRAWABLE_ORIGIN_PROPERTY> = $r1;

        $r2 = new android.transition.ChangeBounds$2;

        specialinvoke $r2.<android.transition.ChangeBounds$2: void <init>(java.lang.Class,java.lang.String)>(class "Landroid/graphics/PointF;", "topLeft");

        <android.transition.ChangeBounds: android.util.Property TOP_LEFT_PROPERTY> = $r2;

        $r3 = new android.transition.ChangeBounds$3;

        specialinvoke $r3.<android.transition.ChangeBounds$3: void <init>(java.lang.Class,java.lang.String)>(class "Landroid/graphics/PointF;", "bottomRight");

        <android.transition.ChangeBounds: android.util.Property BOTTOM_RIGHT_PROPERTY> = $r3;

        $r4 = new android.transition.ChangeBounds$4;

        specialinvoke $r4.<android.transition.ChangeBounds$4: void <init>(java.lang.Class,java.lang.String)>(class "Landroid/graphics/PointF;", "bottomRight");

        <android.transition.ChangeBounds: android.util.Property BOTTOM_RIGHT_ONLY_PROPERTY> = $r4;

        $r5 = new android.transition.ChangeBounds$5;

        specialinvoke $r5.<android.transition.ChangeBounds$5: void <init>(java.lang.Class,java.lang.String)>(class "Landroid/graphics/PointF;", "topLeft");

        <android.transition.ChangeBounds: android.util.Property TOP_LEFT_ONLY_PROPERTY> = $r5;

        $r6 = new android.transition.ChangeBounds$6;

        specialinvoke $r6.<android.transition.ChangeBounds$6: void <init>(java.lang.Class,java.lang.String)>(class "Landroid/graphics/PointF;", "position");

        <android.transition.ChangeBounds: android.util.Property POSITION_PROPERTY> = $r6;

        $r7 = new android.animation.RectEvaluator;

        specialinvoke $r7.<android.animation.RectEvaluator: void <init>()>();

        <android.transition.ChangeBounds: android.animation.RectEvaluator sRectEvaluator> = $r7;

        return;
    }

    public void <init>()
    {
        android.transition.ChangeBounds r0;
        int[] $r1;

        r0 := @this: android.transition.ChangeBounds;

        specialinvoke r0.<android.transition.Transition: void <init>()>();

        $r1 = newarray (int)[2];

        r0.<android.transition.ChangeBounds: int[] tempLocation> = $r1;

        r0.<android.transition.ChangeBounds: boolean mResizeClip> = 0;

        r0.<android.transition.ChangeBounds: boolean mReparent> = 0;

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.transition.ChangeBounds r0;
        android.util.AttributeSet r1;
        boolean z0;
        int[] $r2, $r3;
        android.content.Context r4;
        android.content.res.TypedArray r5;

        r0 := @this: android.transition.ChangeBounds;

        r4 := @parameter0: android.content.Context;

        r1 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.transition.Transition: void <init>(android.content.Context,android.util.AttributeSet)>(r4, r1);

        $r2 = newarray (int)[2];

        r0.<android.transition.ChangeBounds: int[] tempLocation> = $r2;

        r0.<android.transition.ChangeBounds: boolean mResizeClip> = 0;

        r0.<android.transition.ChangeBounds: boolean mReparent> = 0;

        $r3 = <com.android.internal.R$styleable: int[] ChangeBounds>;

        r5 = virtualinvoke r4.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[])>(r1, $r3);

        z0 = virtualinvoke r5.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(0, 0);

        virtualinvoke r5.<android.content.res.TypedArray: void recycle()>();

        virtualinvoke r0.<android.transition.ChangeBounds: void setResizeClip(boolean)>(z0);

        return;
    }

    private void captureValues(android.transition.TransitionValues)
    {
        android.transition.ChangeBounds r0;
        android.transition.TransitionValues r1;
        android.view.View r2, $r9, $r21;
        boolean $z0, $z1, $z2;
        java.util.Map $r5, $r11, $r15, $r18, $r20;
        android.graphics.Rect $r6, $r19;
        int[] $r8, $r10, $r14;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        java.lang.Integer $r12, $r16;
        android.view.ViewParent $r22;

        r0 := @this: android.transition.ChangeBounds;

        r1 := @parameter0: android.transition.TransitionValues;

        r2 = r1.<android.transition.TransitionValues: android.view.View view>;

        $z0 = virtualinvoke r2.<android.view.View: boolean isLaidOut()>();

        if $z0 != 0 goto label1;

        $i2 = virtualinvoke r2.<android.view.View: int getWidth()>();

        if $i2 != 0 goto label1;

        $i3 = virtualinvoke r2.<android.view.View: int getHeight()>();

        if $i3 == 0 goto label3;

     label1:
        $r18 = r1.<android.transition.TransitionValues: java.util.Map values>;

        $r19 = new android.graphics.Rect;

        $i4 = virtualinvoke r2.<android.view.View: int getLeft()>();

        $i5 = virtualinvoke r2.<android.view.View: int getTop()>();

        $i6 = virtualinvoke r2.<android.view.View: int getRight()>();

        $i7 = virtualinvoke r2.<android.view.View: int getBottom()>();

        specialinvoke $r19.<android.graphics.Rect: void <init>(int,int,int,int)>($i4, $i5, $i6, $i7);

        interfaceinvoke $r18.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("android:changeBounds:bounds", $r19);

        $r20 = r1.<android.transition.TransitionValues: java.util.Map values>;

        $r21 = r1.<android.transition.TransitionValues: android.view.View view>;

        $r22 = virtualinvoke $r21.<android.view.View: android.view.ViewParent getParent()>();

        interfaceinvoke $r20.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("android:changeBounds:parent", $r22);

        $z2 = r0.<android.transition.ChangeBounds: boolean mReparent>;

        if $z2 == 0 goto label2;

        $r9 = r1.<android.transition.TransitionValues: android.view.View view>;

        $r8 = r0.<android.transition.ChangeBounds: int[] tempLocation>;

        virtualinvoke $r9.<android.view.View: void getLocationInWindow(int[])>($r8);

        $r11 = r1.<android.transition.TransitionValues: java.util.Map values>;

        $r10 = r0.<android.transition.ChangeBounds: int[] tempLocation>;

        $i0 = $r10[0];

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        interfaceinvoke $r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("android:changeBounds:windowX", $r12);

        $r15 = r1.<android.transition.TransitionValues: java.util.Map values>;

        $r14 = r0.<android.transition.ChangeBounds: int[] tempLocation>;

        $i1 = $r14[1];

        $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        interfaceinvoke $r15.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("android:changeBounds:windowY", $r16);

     label2:
        $z1 = r0.<android.transition.ChangeBounds: boolean mResizeClip>;

        if $z1 == 0 goto label3;

        $r5 = r1.<android.transition.TransitionValues: java.util.Map values>;

        $r6 = virtualinvoke r2.<android.view.View: android.graphics.Rect getClipBounds()>();

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("android:changeBounds:clip", $r6);

     label3:
        return;
    }

    private boolean parentMatches(android.view.View, android.view.View)
    {
        android.transition.ChangeBounds r0;
        android.view.View r1, r2, $r4;
        android.transition.TransitionValues r3;
        boolean $z1, z2;

        r0 := @this: android.transition.ChangeBounds;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.view.View;

        z2 = 1;

        $z1 = r0.<android.transition.ChangeBounds: boolean mReparent>;

        if $z1 == 0 goto label5;

        z2 = 1;

        r3 = virtualinvoke r0.<android.transition.ChangeBounds: android.transition.TransitionValues getMatchedTransitionValues(android.view.View,boolean)>(r1, 1);

        if r3 != null goto label3;

        if r1 != r2 goto label1;

        goto label2;

     label1:
        z2 = 0;

     label2:
        goto label5;

     label3:
        $r4 = r3.<android.transition.TransitionValues: android.view.View view>;

        if r2 != $r4 goto label4;

        z2 = 1;

        goto label5;

     label4:
        z2 = 0;

     label5:
        return z2;
    }

    public void captureEndValues(android.transition.TransitionValues)
    {
        android.transition.ChangeBounds r0;
        android.transition.TransitionValues r1;

        r0 := @this: android.transition.ChangeBounds;

        r1 := @parameter0: android.transition.TransitionValues;

        specialinvoke r0.<android.transition.ChangeBounds: void captureValues(android.transition.TransitionValues)>(r1);

        return;
    }

    public void captureStartValues(android.transition.TransitionValues)
    {
        android.transition.ChangeBounds r0;
        android.transition.TransitionValues r1;

        r0 := @this: android.transition.ChangeBounds;

        r1 := @parameter0: android.transition.TransitionValues;

        specialinvoke r0.<android.transition.ChangeBounds: void captureValues(android.transition.TransitionValues)>(r1);

        return;
    }

    public android.animation.Animator createAnimator(android.view.ViewGroup, android.transition.TransitionValues, android.transition.TransitionValues)
    {
        android.transition.ChangeBounds r0;
        android.view.View r1;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, i22, i23, i24, i25, i26, i27, i28, i29, i30, i31, i32, i33, i34;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25, $f26, $f27, $f28;
        java.lang.Object $r2, $r3, $r6, $r10, $r14, $r18, $r31, $r33, $r35, $r37;
        boolean $z0, $z1, $z2, $z3, $z4;
        int[] $r4, $r8, $r12, $r16, $r20;
        java.util.Map $r5, $r9, $r13, $r17, $r30, $r32, $r34, $r36, r65, r66;
        java.lang.Integer $r7, $r11, $r15, $r19;
        android.graphics.Bitmap$Config $r21;
        android.view.ViewGroupOverlay $r24;
        android.transition.PathMotion $r25, $r39, $r46, $r48, $r51, $r53, $r58;
        android.animation.PropertyValuesHolder[] $r26;
        android.util.Property $r27, $r40, $r47, $r49, $r52, $r54, $r59;
        android.animation.PropertyValuesHolder $r28;
        android.view.ViewParent $r38, $r60;
        java.lang.Object[] $r41;
        android.animation.RectEvaluator $r42;
        android.animation.Animator[] $r56;
        android.view.ViewGroup r62, r67, r68, r73;
        android.transition.TransitionValues r63, r64;
        android.graphics.Rect r69, r70, r71, r72, r76, r89, r100, r101;
        android.graphics.Path r78, r81, r83, r85, r86, r88, r94;
        android.animation.Animator r79;
        android.animation.ObjectAnimator r82, r84, r87, r90, r91, r95;
        android.graphics.Bitmap r92;
        android.transition.ChangeBounds$7 r96;
        android.transition.ChangeBounds$ViewBounds r97;
        android.animation.AnimatorSet r98, r106, r107;
        android.transition.ChangeBounds$8 r99;
        android.transition.ChangeBounds$9 r102;
        android.graphics.Canvas r103;
        android.graphics.drawable.BitmapDrawable r104;
        android.transition.ChangeBounds$10 r105;

        r0 := @this: android.transition.ChangeBounds;

        r62 := @parameter0: android.view.ViewGroup;

        r63 := @parameter1: android.transition.TransitionValues;

        r64 := @parameter2: android.transition.TransitionValues;

        if r63 == null goto label32;

        if r64 != null goto label01;

        goto label32;

     label01:
        r65 = r63.<android.transition.TransitionValues: java.util.Map values>;

        r66 = r64.<android.transition.TransitionValues: java.util.Map values>;

        $r2 = interfaceinvoke r65.<java.util.Map: java.lang.Object get(java.lang.Object)>("android:changeBounds:parent");

        r67 = (android.view.ViewGroup) $r2;

        $r3 = interfaceinvoke r66.<java.util.Map: java.lang.Object get(java.lang.Object)>("android:changeBounds:parent");

        r68 = (android.view.ViewGroup) $r3;

        if r67 == null goto label31;

        if r68 != null goto label02;

        goto label31;

     label02:
        r1 = r64.<android.transition.TransitionValues: android.view.View view>;

        $z0 = specialinvoke r0.<android.transition.ChangeBounds: boolean parentMatches(android.view.View,android.view.View)>(r67, r68);

        if $z0 == 0 goto label28;

        $r30 = r63.<android.transition.TransitionValues: java.util.Map values>;

        $r31 = interfaceinvoke $r30.<java.util.Map: java.lang.Object get(java.lang.Object)>("android:changeBounds:bounds");

        r69 = (android.graphics.Rect) $r31;

        $r32 = r64.<android.transition.TransitionValues: java.util.Map values>;

        $r33 = interfaceinvoke $r32.<java.util.Map: java.lang.Object get(java.lang.Object)>("android:changeBounds:bounds");

        r70 = (android.graphics.Rect) $r33;

        i0 = r69.<android.graphics.Rect: int left>;

        i1 = r70.<android.graphics.Rect: int left>;

        i2 = r69.<android.graphics.Rect: int top>;

        i22 = r70.<android.graphics.Rect: int top>;

        i3 = r69.<android.graphics.Rect: int right>;

        i4 = r70.<android.graphics.Rect: int right>;

        i5 = r69.<android.graphics.Rect: int bottom>;

        i23 = r70.<android.graphics.Rect: int bottom>;

        i6 = i3 - i0;

        i7 = i5 - i2;

        i24 = i4 - i1;

        i8 = i23 - i22;

        $r34 = r63.<android.transition.TransitionValues: java.util.Map values>;

        $r35 = interfaceinvoke $r34.<java.util.Map: java.lang.Object get(java.lang.Object)>("android:changeBounds:clip");

        r71 = (android.graphics.Rect) $r35;

        $r36 = r64.<android.transition.TransitionValues: java.util.Map values>;

        $r37 = interfaceinvoke $r36.<java.util.Map: java.lang.Object get(java.lang.Object)>("android:changeBounds:clip");

        r72 = (android.graphics.Rect) $r37;

        i25 = 0;

        if i6 == 0 goto label03;

        if i7 != 0 goto label04;

     label03:
        i26 = 0;

        if i24 == 0 goto label08;

        i26 = 0;

        if i8 == 0 goto label08;

     label04:
        if i0 != i1 goto label05;

        if i2 == i22 goto label06;

     label05:
        i25 = 1;

     label06:
        if i3 != i4 goto label07;

        i26 = i25;

        if i5 == i23 goto label08;

     label07:
        i26 = i25 + 1;

     label08:
        if r71 == null goto label09;

        $z4 = virtualinvoke r71.<android.graphics.Rect: boolean equals(java.lang.Object)>(r72);

        if $z4 == 0 goto label10;

     label09:
        i27 = i26;

        if r71 != null goto label11;

        i27 = i26;

        if r72 == null goto label11;

     label10:
        i27 = i26 + 1;

     label11:
        if i27 <= 0 goto label27;

        $r38 = virtualinvoke r1.<android.view.View: android.view.ViewParent getParent()>();

        $z1 = $r38 instanceof android.view.ViewGroup;

        if $z1 == 0 goto label12;

        $r60 = virtualinvoke r1.<android.view.View: android.view.ViewParent getParent()>();

        r73 = (android.view.ViewGroup) $r60;

        virtualinvoke r73.<android.view.ViewGroup: void suppressLayout(boolean)>(1);

        r96 = new android.transition.ChangeBounds$7;

        specialinvoke r96.<android.transition.ChangeBounds$7: void <init>(android.transition.ChangeBounds,android.view.ViewGroup)>(r0, r73);

        virtualinvoke r0.<android.transition.ChangeBounds: android.transition.Transition addListener(android.transition.Transition$TransitionListener)>(r96);

        goto label12;

     label12:
        r76 = r71;

        $z2 = r0.<android.transition.ChangeBounds: boolean mResizeClip>;

        if $z2 != 0 goto label17;

        virtualinvoke r1.<android.view.View: void setLeftTopRightBottom(int,int,int,int)>(i0, i2, i3, i5);

        if i27 != 2 goto label14;

        if i6 != i24 goto label13;

        if i7 != i8 goto label13;

        $r58 = virtualinvoke r0.<android.transition.ChangeBounds: android.transition.PathMotion getPathMotion()>();

        $f28 = (float) i0;

        $f27 = (float) i2;

        $f26 = (float) i1;

        $f25 = (float) i22;

        r78 = virtualinvoke $r58.<android.transition.PathMotion: android.graphics.Path getPath(float,float,float,float)>($f28, $f27, $f26, $f25);

        $r59 = <android.transition.ChangeBounds: android.util.Property POSITION_PROPERTY>;

        r79 = staticinvoke <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofObject(java.lang.Object,android.util.Property,android.animation.TypeConverter,android.graphics.Path)>(r1, $r59, null, r78);

        goto label26;

     label13:
        r97 = new android.transition.ChangeBounds$ViewBounds;

        specialinvoke r97.<android.transition.ChangeBounds$ViewBounds: void <init>(android.view.View)>(r1);

        $r51 = virtualinvoke r0.<android.transition.ChangeBounds: android.transition.PathMotion getPathMotion()>();

        $f20 = (float) i0;

        $f19 = (float) i2;

        $f18 = (float) i1;

        $f17 = (float) i22;

        r81 = virtualinvoke $r51.<android.transition.PathMotion: android.graphics.Path getPath(float,float,float,float)>($f20, $f19, $f18, $f17);

        $r52 = <android.transition.ChangeBounds: android.util.Property TOP_LEFT_PROPERTY>;

        r82 = staticinvoke <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofObject(java.lang.Object,android.util.Property,android.animation.TypeConverter,android.graphics.Path)>(r97, $r52, null, r81);

        $r53 = virtualinvoke r0.<android.transition.ChangeBounds: android.transition.PathMotion getPathMotion()>();

        $f24 = (float) i3;

        $f23 = (float) i5;

        $f22 = (float) i4;

        $f21 = (float) i23;

        r83 = virtualinvoke $r53.<android.transition.PathMotion: android.graphics.Path getPath(float,float,float,float)>($f24, $f23, $f22, $f21);

        $r54 = <android.transition.ChangeBounds: android.util.Property BOTTOM_RIGHT_PROPERTY>;

        r84 = staticinvoke <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofObject(java.lang.Object,android.util.Property,android.animation.TypeConverter,android.graphics.Path)>(r97, $r54, null, r83);

        r98 = new android.animation.AnimatorSet;

        specialinvoke r98.<android.animation.AnimatorSet: void <init>()>();

        r79 = r98;

        $r56 = newarray (android.animation.Animator)[2];

        $r56[0] = r82;

        $r56[1] = r84;

        r106 = (android.animation.AnimatorSet) r98;

        virtualinvoke r106.<android.animation.AnimatorSet: void playTogether(android.animation.Animator[])>($r56);

        r99 = new android.transition.ChangeBounds$8;

        specialinvoke r99.<android.transition.ChangeBounds$8: void <init>(android.transition.ChangeBounds,android.transition.ChangeBounds$ViewBounds)>(r0, r97);

        r107 = (android.animation.AnimatorSet) r98;

        virtualinvoke r107.<android.animation.AnimatorSet: void addListener(android.animation.Animator$AnimatorListener)>(r99);

        goto label26;

     label14:
        if i0 != i1 goto label16;

        if i2 == i22 goto label15;

        goto label16;

     label15:
        $r48 = virtualinvoke r0.<android.transition.ChangeBounds: android.transition.PathMotion getPathMotion()>();

        $f16 = (float) i3;

        $f15 = (float) i5;

        $f14 = (float) i4;

        $f13 = (float) i23;

        r85 = virtualinvoke $r48.<android.transition.PathMotion: android.graphics.Path getPath(float,float,float,float)>($f16, $f15, $f14, $f13);

        $r49 = <android.transition.ChangeBounds: android.util.Property BOTTOM_RIGHT_ONLY_PROPERTY>;

        r79 = staticinvoke <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofObject(java.lang.Object,android.util.Property,android.animation.TypeConverter,android.graphics.Path)>(r1, $r49, null, r85);

        goto label26;

     label16:
        $r46 = virtualinvoke r0.<android.transition.ChangeBounds: android.transition.PathMotion getPathMotion()>();

        $f12 = (float) i0;

        $f11 = (float) i2;

        $f10 = (float) i1;

        $f9 = (float) i22;

        r86 = virtualinvoke $r46.<android.transition.PathMotion: android.graphics.Path getPath(float,float,float,float)>($f12, $f11, $f10, $f9);

        $r47 = <android.transition.ChangeBounds: android.util.Property TOP_LEFT_ONLY_PROPERTY>;

        r79 = staticinvoke <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofObject(java.lang.Object,android.util.Property,android.animation.TypeConverter,android.graphics.Path)>(r1, $r47, null, r86);

        goto label26;

     label17:
        i28 = staticinvoke <java.lang.Math: int max(int,int)>(i6, i24);

        $i19 = i0 + i28;

        $i20 = staticinvoke <java.lang.Math: int max(int,int)>(i7, i8);

        $i21 = i2 + $i20;

        virtualinvoke r1.<android.view.View: void setLeftTopRightBottom(int,int,int,int)>(i0, i2, $i19, $i21);

        if i0 != i1 goto label19;

        if i2 == i22 goto label18;

        goto label19;

     label18:
        r87 = null;

        goto label20;

     label19:
        $r39 = virtualinvoke r0.<android.transition.ChangeBounds: android.transition.PathMotion getPathMotion()>();

        $f8 = (float) i0;

        $f7 = (float) i2;

        $f6 = (float) i1;

        $f5 = (float) i22;

        r88 = virtualinvoke $r39.<android.transition.PathMotion: android.graphics.Path getPath(float,float,float,float)>($f8, $f7, $f6, $f5);

        $r40 = <android.transition.ChangeBounds: android.util.Property POSITION_PROPERTY>;

        r87 = staticinvoke <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofObject(java.lang.Object,android.util.Property,android.animation.TypeConverter,android.graphics.Path)>(r1, $r40, null, r88);

     label20:
        if r71 != null goto label21;

        r100 = new android.graphics.Rect;

        specialinvoke r100.<android.graphics.Rect: void <init>(int,int,int,int)>(0, 0, i6, i7);

        r76 = r100;

        goto label21;

     label21:
        if r72 != null goto label22;

        r101 = new android.graphics.Rect;

        specialinvoke r101.<android.graphics.Rect: void <init>(int,int,int,int)>(0, 0, i24, i8);

        r89 = r101;

        goto label23;

     label22:
        r89 = r72;

     label23:
        $z3 = virtualinvoke r76.<android.graphics.Rect: boolean equals(java.lang.Object)>(r89);

        if $z3 != 0 goto label24;

        virtualinvoke r1.<android.view.View: void setClipBounds(android.graphics.Rect)>(r76);

        $r42 = <android.transition.ChangeBounds: android.animation.RectEvaluator sRectEvaluator>;

        $r41 = newarray (java.lang.Object)[2];

        $r41[0] = r76;

        $r41[1] = r89;

        r90 = staticinvoke <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofObject(java.lang.Object,java.lang.String,android.animation.TypeEvaluator,java.lang.Object[])>(r1, "clipBounds", $r42, $r41);

        r102 = new android.transition.ChangeBounds$9;

        specialinvoke r102.<android.transition.ChangeBounds$9: void <init>(android.transition.ChangeBounds,android.view.View,android.graphics.Rect,int,int,int,int)>(r0, r1, r72, i1, i22, i4, i23);

        virtualinvoke r90.<android.animation.ObjectAnimator: void addListener(android.animation.Animator$AnimatorListener)>(r102);

        r91 = r90;

        goto label25;

     label24:
        r91 = null;

     label25:
        r79 = staticinvoke <android.transition.TransitionUtils: android.animation.Animator mergeAnimators(android.animation.Animator,android.animation.Animator)>(r87, r91);

     label26:
        return r79;

     label27:
        goto label29;

     label28:
        $r4 = r0.<android.transition.ChangeBounds: int[] tempLocation>;

        virtualinvoke r62.<android.view.ViewGroup: void getLocationInWindow(int[])>($r4);

        $r5 = r63.<android.transition.TransitionValues: java.util.Map values>;

        $r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>("android:changeBounds:windowX");

        $r7 = (java.lang.Integer) $r6;

        $i9 = virtualinvoke $r7.<java.lang.Integer: int intValue()>();

        $r8 = r0.<android.transition.ChangeBounds: int[] tempLocation>;

        $i10 = $r8[0];

        i29 = $i9 - $i10;

        $r9 = r63.<android.transition.TransitionValues: java.util.Map values>;

        $r10 = interfaceinvoke $r9.<java.util.Map: java.lang.Object get(java.lang.Object)>("android:changeBounds:windowY");

        $r11 = (java.lang.Integer) $r10;

        $i11 = virtualinvoke $r11.<java.lang.Integer: int intValue()>();

        $r12 = r0.<android.transition.ChangeBounds: int[] tempLocation>;

        $i12 = $r12[1];

        i30 = $i11 - $i12;

        $r13 = r64.<android.transition.TransitionValues: java.util.Map values>;

        $r14 = interfaceinvoke $r13.<java.util.Map: java.lang.Object get(java.lang.Object)>("android:changeBounds:windowX");

        $r15 = (java.lang.Integer) $r14;

        $i13 = virtualinvoke $r15.<java.lang.Integer: int intValue()>();

        $r16 = r0.<android.transition.ChangeBounds: int[] tempLocation>;

        $i14 = $r16[0];

        i31 = $i13 - $i14;

        $r17 = r64.<android.transition.TransitionValues: java.util.Map values>;

        $r18 = interfaceinvoke $r17.<java.util.Map: java.lang.Object get(java.lang.Object)>("android:changeBounds:windowY");

        $r19 = (java.lang.Integer) $r18;

        $i15 = virtualinvoke $r19.<java.lang.Integer: int intValue()>();

        $r20 = r0.<android.transition.ChangeBounds: int[] tempLocation>;

        $i16 = $r20[1];

        i32 = $i15 - $i16;

        if i29 != i31 goto label30;

        if i30 == i32 goto label29;

        goto label30;

     label29:
        return null;

     label30:
        i33 = virtualinvoke r1.<android.view.View: int getWidth()>();

        i34 = virtualinvoke r1.<android.view.View: int getHeight()>();

        $r21 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config ARGB_8888>;

        r92 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>(i33, i34, $r21);

        r103 = new android.graphics.Canvas;

        specialinvoke r103.<android.graphics.Canvas: void <init>(android.graphics.Bitmap)>(r92);

        virtualinvoke r1.<android.view.View: void draw(android.graphics.Canvas)>(r103);

        r104 = new android.graphics.drawable.BitmapDrawable;

        specialinvoke r104.<android.graphics.drawable.BitmapDrawable: void <init>(android.graphics.Bitmap)>(r92);

        $i18 = i29 + i33;

        $i17 = i30 + i34;

        virtualinvoke r104.<android.graphics.drawable.BitmapDrawable: void setBounds(int,int,int,int)>(i29, i30, $i18, $i17);

        f0 = virtualinvoke r1.<android.view.View: float getTransitionAlpha()>();

        virtualinvoke r1.<android.view.View: void setTransitionAlpha(float)>(0.0F);

        $r24 = virtualinvoke r62.<android.view.ViewGroup: android.view.ViewGroupOverlay getOverlay()>();

        virtualinvoke $r24.<android.view.ViewGroupOverlay: void add(android.graphics.drawable.Drawable)>(r104);

        $r25 = virtualinvoke r0.<android.transition.ChangeBounds: android.transition.PathMotion getPathMotion()>();

        $f4 = (float) i29;

        $f3 = (float) i30;

        $f2 = (float) i31;

        $f1 = (float) i32;

        r94 = virtualinvoke $r25.<android.transition.PathMotion: android.graphics.Path getPath(float,float,float,float)>($f4, $f3, $f2, $f1);

        $r26 = newarray (android.animation.PropertyValuesHolder)[1];

        $r27 = <android.transition.ChangeBounds: android.util.Property DRAWABLE_ORIGIN_PROPERTY>;

        $r28 = staticinvoke <android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofObject(android.util.Property,android.animation.TypeConverter,android.graphics.Path)>($r27, null, r94);

        $r26[0] = $r28;

        r95 = staticinvoke <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofPropertyValuesHolder(java.lang.Object,android.animation.PropertyValuesHolder[])>(r104, $r26);

        r105 = new android.transition.ChangeBounds$10;

        specialinvoke r105.<android.transition.ChangeBounds$10: void <init>(android.transition.ChangeBounds,android.view.ViewGroup,android.graphics.drawable.BitmapDrawable,android.view.View,float)>(r0, r62, r104, r1, f0);

        virtualinvoke r95.<android.animation.ObjectAnimator: void addListener(android.animation.Animator$AnimatorListener)>(r105);

        return r95;

     label31:
        return null;

     label32:
        return null;
    }

    public boolean getResizeClip()
    {
        android.transition.ChangeBounds r0;
        boolean $z0;

        r0 := @this: android.transition.ChangeBounds;

        $z0 = r0.<android.transition.ChangeBounds: boolean mResizeClip>;

        return $z0;
    }

    public java.lang.String[] getTransitionProperties()
    {
        android.transition.ChangeBounds r0;
        java.lang.String[] $r1;

        r0 := @this: android.transition.ChangeBounds;

        $r1 = <android.transition.ChangeBounds: java.lang.String[] sTransitionProperties>;

        return $r1;
    }

    public void setReparent(boolean)
    {
        android.transition.ChangeBounds r0;
        boolean z0;

        r0 := @this: android.transition.ChangeBounds;

        z0 := @parameter0: boolean;

        r0.<android.transition.ChangeBounds: boolean mReparent> = z0;

        return;
    }

    public void setResizeClip(boolean)
    {
        android.transition.ChangeBounds r0;
        boolean z0;

        r0 := @this: android.transition.ChangeBounds;

        z0 := @parameter0: boolean;

        r0.<android.transition.ChangeBounds: boolean mResizeClip> = z0;

        return;
    }
}
