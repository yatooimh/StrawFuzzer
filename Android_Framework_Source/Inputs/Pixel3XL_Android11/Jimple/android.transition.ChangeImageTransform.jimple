public class android.transition.ChangeImageTransform extends android.transition.Transition
{
    private static android.util.Property ANIMATED_TRANSFORM_PROPERTY;
    private static android.animation.TypeEvaluator NULL_MATRIX_EVALUATOR;
    private static final java.lang.String PROPNAME_BOUNDS;
    private static final java.lang.String PROPNAME_MATRIX;
    private static final java.lang.String TAG;
    private static final java.lang.String[] sTransitionProperties;

    static void <clinit>()
    {
        java.lang.String[] $r0;
        android.transition.ChangeImageTransform$1 $r1;
        android.transition.ChangeImageTransform$2 $r2;

        <android.transition.ChangeImageTransform: java.lang.String TAG> = "ChangeImageTransform";

        <android.transition.ChangeImageTransform: java.lang.String PROPNAME_MATRIX> = "android:changeImageTransform:matrix";

        <android.transition.ChangeImageTransform: java.lang.String PROPNAME_BOUNDS> = "android:changeImageTransform:bounds";

        $r0 = newarray (java.lang.String)[2];

        $r0[0] = "android:changeImageTransform:matrix";

        $r0[1] = "android:changeImageTransform:bounds";

        <android.transition.ChangeImageTransform: java.lang.String[] sTransitionProperties> = $r0;

        $r1 = new android.transition.ChangeImageTransform$1;

        specialinvoke $r1.<android.transition.ChangeImageTransform$1: void <init>()>();

        <android.transition.ChangeImageTransform: android.animation.TypeEvaluator NULL_MATRIX_EVALUATOR> = $r1;

        $r2 = new android.transition.ChangeImageTransform$2;

        specialinvoke $r2.<android.transition.ChangeImageTransform$2: void <init>(java.lang.Class,java.lang.String)>(class "Landroid/graphics/Matrix;", "animatedTransform");

        <android.transition.ChangeImageTransform: android.util.Property ANIMATED_TRANSFORM_PROPERTY> = $r2;

        return;
    }

    public void <init>()
    {
        android.transition.ChangeImageTransform r0;

        r0 := @this: android.transition.ChangeImageTransform;

        specialinvoke r0.<android.transition.Transition: void <init>()>();

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.transition.ChangeImageTransform r0;
        android.content.Context r1;
        android.util.AttributeSet r2;

        r0 := @this: android.transition.ChangeImageTransform;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.transition.Transition: void <init>(android.content.Context,android.util.AttributeSet)>(r1, r2);

        return;
    }

    private void captureValues(android.transition.TransitionValues)
    {
        android.transition.ChangeImageTransform r0;
        android.widget.ImageView r1;
        android.graphics.drawable.Drawable r2;
        java.util.Map r3;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        float f0, f1, $f2, $f3, $f4, $f5;
        boolean $z0;
        android.graphics.Rect $r4;
        android.widget.ImageView$ScaleType $r6, r12;
        android.graphics.Matrix $r8, r13, $r14, $r15;
        android.transition.TransitionValues r9;
        android.view.View r10;

        r0 := @this: android.transition.ChangeImageTransform;

        r9 := @parameter0: android.transition.TransitionValues;

        r10 = r9.<android.transition.TransitionValues: android.view.View view>;

        $z0 = r10 instanceof android.widget.ImageView;

        if $z0 == 0 goto label5;

        $i2 = virtualinvoke r10.<android.view.View: int getVisibility()>();

        if $i2 == 0 goto label1;

        goto label5;

     label1:
        r1 = (android.widget.ImageView) r10;

        r2 = virtualinvoke r1.<android.widget.ImageView: android.graphics.drawable.Drawable getDrawable()>();

        if r2 != null goto label2;

        return;

     label2:
        r3 = r9.<android.transition.TransitionValues: java.util.Map values>;

        $r4 = new android.graphics.Rect;

        $i3 = virtualinvoke r10.<android.view.View: int getLeft()>();

        $i4 = virtualinvoke r10.<android.view.View: int getTop()>();

        $i5 = virtualinvoke r10.<android.view.View: int getRight()>();

        $i6 = virtualinvoke r10.<android.view.View: int getBottom()>();

        specialinvoke $r4.<android.graphics.Rect: void <init>(int,int,int,int)>($i3, $i4, $i5, $i6);

        interfaceinvoke r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("android:changeImageTransform:bounds", $r4);

        r12 = virtualinvoke r1.<android.widget.ImageView: android.widget.ImageView$ScaleType getScaleType()>();

        i0 = virtualinvoke r2.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        i1 = virtualinvoke r2.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        $r6 = <android.widget.ImageView$ScaleType: android.widget.ImageView$ScaleType FIT_XY>;

        if r12 != $r6 goto label3;

        if i0 <= 0 goto label3;

        if i1 <= 0 goto label3;

        $i7 = virtualinvoke $r4.<android.graphics.Rect: int width()>();

        $f3 = (float) $i7;

        $f2 = (float) i0;

        f0 = $f3 / $f2;

        $i8 = virtualinvoke $r4.<android.graphics.Rect: int height()>();

        $f5 = (float) $i8;

        $f4 = (float) i1;

        f1 = $f5 / $f4;

        $r8 = new android.graphics.Matrix;

        specialinvoke $r8.<android.graphics.Matrix: void <init>()>();

        r13 = $r8;

        virtualinvoke $r8.<android.graphics.Matrix: void setScale(float,float)>(f0, f1);

        goto label4;

     label3:
        $r14 = new android.graphics.Matrix;

        $r15 = virtualinvoke r1.<android.widget.ImageView: android.graphics.Matrix getImageMatrix()>();

        specialinvoke $r14.<android.graphics.Matrix: void <init>(android.graphics.Matrix)>($r15);

        r13 = $r14;

     label4:
        interfaceinvoke r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("android:changeImageTransform:matrix", r13);

        return;

     label5:
        return;
    }

    private android.animation.ObjectAnimator createMatrixAnimator(android.widget.ImageView, android.graphics.Matrix, android.graphics.Matrix)
    {
        android.transition.ChangeImageTransform r0;
        android.widget.ImageView r1;
        android.graphics.Matrix r2, r3;
        android.transition.TransitionUtils$MatrixEvaluator $r4;
        android.util.Property $r5;
        android.graphics.Matrix[] $r6;
        android.animation.ObjectAnimator $r7;

        r0 := @this: android.transition.ChangeImageTransform;

        r1 := @parameter0: android.widget.ImageView;

        r2 := @parameter1: android.graphics.Matrix;

        r3 := @parameter2: android.graphics.Matrix;

        $r5 = <android.transition.ChangeImageTransform: android.util.Property ANIMATED_TRANSFORM_PROPERTY>;

        $r4 = new android.transition.TransitionUtils$MatrixEvaluator;

        specialinvoke $r4.<android.transition.TransitionUtils$MatrixEvaluator: void <init>()>();

        $r6 = newarray (android.graphics.Matrix)[2];

        $r6[0] = r2;

        $r6[1] = r3;

        $r7 = staticinvoke <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofObject(java.lang.Object,android.util.Property,android.animation.TypeEvaluator,java.lang.Object[])>(r1, $r5, $r4, $r6);

        return $r7;
    }

    private android.animation.ObjectAnimator createNullAnimator(android.widget.ImageView)
    {
        android.transition.ChangeImageTransform r0;
        android.widget.ImageView r1;
        android.graphics.Matrix[] $r2;
        android.graphics.Matrix $r3, $r4;
        android.animation.TypeEvaluator $r5;
        android.util.Property $r6;
        android.animation.ObjectAnimator $r7;

        r0 := @this: android.transition.ChangeImageTransform;

        r1 := @parameter0: android.widget.ImageView;

        $r6 = <android.transition.ChangeImageTransform: android.util.Property ANIMATED_TRANSFORM_PROPERTY>;

        $r5 = <android.transition.ChangeImageTransform: android.animation.TypeEvaluator NULL_MATRIX_EVALUATOR>;

        $r2 = newarray (android.graphics.Matrix)[2];

        $r3 = <android.graphics.Matrix: android.graphics.Matrix IDENTITY_MATRIX>;

        $r2[0] = $r3;

        $r4 = <android.graphics.Matrix: android.graphics.Matrix IDENTITY_MATRIX>;

        $r2[1] = $r4;

        $r7 = staticinvoke <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofObject(java.lang.Object,android.util.Property,android.animation.TypeEvaluator,java.lang.Object[])>(r1, $r6, $r5, $r2);

        return $r7;
    }

    public void captureEndValues(android.transition.TransitionValues)
    {
        android.transition.ChangeImageTransform r0;
        android.transition.TransitionValues r1;

        r0 := @this: android.transition.ChangeImageTransform;

        r1 := @parameter0: android.transition.TransitionValues;

        specialinvoke r0.<android.transition.ChangeImageTransform: void captureValues(android.transition.TransitionValues)>(r1);

        return;
    }

    public void captureStartValues(android.transition.TransitionValues)
    {
        android.transition.ChangeImageTransform r0;
        android.transition.TransitionValues r1;

        r0 := @this: android.transition.ChangeImageTransform;

        r1 := @parameter0: android.transition.TransitionValues;

        specialinvoke r0.<android.transition.ChangeImageTransform: void captureValues(android.transition.TransitionValues)>(r1);

        return;
    }

    public android.animation.Animator createAnimator(android.view.ViewGroup, android.transition.TransitionValues, android.transition.TransitionValues)
    {
        android.transition.ChangeImageTransform r0;
        android.graphics.Rect r1, r15;
        int i0, i1;
        java.util.Map $r2, $r4, $r6, $r8;
        java.lang.Object $r3, $r5, $r7, $r9;
        boolean $z0, $z1;
        android.view.View $r10;
        android.util.Property $r11;
        android.view.ViewGroup r12;
        android.transition.TransitionValues r13, r14;
        android.graphics.Matrix r16, r17;
        android.widget.ImageView r18;
        android.graphics.drawable.Drawable r19;
        android.animation.ObjectAnimator r20;

        r0 := @this: android.transition.ChangeImageTransform;

        r12 := @parameter0: android.view.ViewGroup;

        r13 := @parameter1: android.transition.TransitionValues;

        r14 := @parameter2: android.transition.TransitionValues;

        if r13 == null goto label8;

        if r14 != null goto label1;

        goto label8;

     label1:
        $r2 = r13.<android.transition.TransitionValues: java.util.Map values>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>("android:changeImageTransform:bounds");

        r15 = (android.graphics.Rect) $r3;

        $r4 = r14.<android.transition.TransitionValues: java.util.Map values>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>("android:changeImageTransform:bounds");

        r1 = (android.graphics.Rect) $r5;

        $r6 = r13.<android.transition.TransitionValues: java.util.Map values>;

        $r7 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>("android:changeImageTransform:matrix");

        r16 = (android.graphics.Matrix) $r7;

        $r8 = r14.<android.transition.TransitionValues: java.util.Map values>;

        $r9 = interfaceinvoke $r8.<java.util.Map: java.lang.Object get(java.lang.Object)>("android:changeImageTransform:matrix");

        r17 = (android.graphics.Matrix) $r9;

        if r15 == null goto label7;

        if r1 == null goto label7;

        if r16 == null goto label7;

        if r17 != null goto label2;

        goto label7;

     label2:
        $z0 = virtualinvoke r15.<android.graphics.Rect: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label3;

        $z1 = virtualinvoke r16.<android.graphics.Matrix: boolean equals(java.lang.Object)>(r17);

        if $z1 == 0 goto label3;

        return null;

     label3:
        $r10 = r14.<android.transition.TransitionValues: android.view.View view>;

        r18 = (android.widget.ImageView) $r10;

        r19 = virtualinvoke r18.<android.widget.ImageView: android.graphics.drawable.Drawable getDrawable()>();

        i0 = virtualinvoke r19.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        i1 = virtualinvoke r19.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        if i0 <= 0 goto label5;

        if i1 > 0 goto label4;

        goto label5;

     label4:
        $r11 = <android.transition.ChangeImageTransform: android.util.Property ANIMATED_TRANSFORM_PROPERTY>;

        virtualinvoke $r11.<android.util.Property: void set(java.lang.Object,java.lang.Object)>(r18, r16);

        r20 = specialinvoke r0.<android.transition.ChangeImageTransform: android.animation.ObjectAnimator createMatrixAnimator(android.widget.ImageView,android.graphics.Matrix,android.graphics.Matrix)>(r18, r16, r17);

        goto label6;

     label5:
        r20 = specialinvoke r0.<android.transition.ChangeImageTransform: android.animation.ObjectAnimator createNullAnimator(android.widget.ImageView)>(r18);

     label6:
        return r20;

     label7:
        return null;

     label8:
        return null;
    }

    public java.lang.String[] getTransitionProperties()
    {
        android.transition.ChangeImageTransform r0;
        java.lang.String[] $r1;

        r0 := @this: android.transition.ChangeImageTransform;

        $r1 = <android.transition.ChangeImageTransform: java.lang.String[] sTransitionProperties>;

        return $r1;
    }
}
