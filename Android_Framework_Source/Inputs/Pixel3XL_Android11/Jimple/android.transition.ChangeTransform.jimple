public class android.transition.ChangeTransform extends android.transition.Transition
{
    private static final android.util.Property NON_TRANSLATIONS_PROPERTY;
    private static final java.lang.String PROPNAME_INTERMEDIATE_MATRIX;
    private static final java.lang.String PROPNAME_INTERMEDIATE_PARENT_MATRIX;
    private static final java.lang.String PROPNAME_MATRIX;
    private static final java.lang.String PROPNAME_PARENT;
    private static final java.lang.String PROPNAME_PARENT_MATRIX;
    private static final java.lang.String PROPNAME_TRANSFORMS;
    private static final java.lang.String TAG;
    private static final android.util.Property TRANSLATIONS_PROPERTY;
    private static final java.lang.String[] sTransitionProperties;
    private boolean mReparent;
    private android.graphics.Matrix mTempMatrix;
    private boolean mUseOverlay;

    static void <clinit>()
    {
        java.lang.String[] $r0;
        android.transition.ChangeTransform$1 $r1;
        android.transition.ChangeTransform$2 $r2;

        <android.transition.ChangeTransform: java.lang.String TAG> = "ChangeTransform";

        <android.transition.ChangeTransform: java.lang.String PROPNAME_TRANSFORMS> = "android:changeTransform:transforms";

        <android.transition.ChangeTransform: java.lang.String PROPNAME_PARENT_MATRIX> = "android:changeTransform:parentMatrix";

        <android.transition.ChangeTransform: java.lang.String PROPNAME_PARENT> = "android:changeTransform:parent";

        <android.transition.ChangeTransform: java.lang.String PROPNAME_MATRIX> = "android:changeTransform:matrix";

        <android.transition.ChangeTransform: java.lang.String PROPNAME_INTERMEDIATE_PARENT_MATRIX> = "android:changeTransform:intermediateParentMatrix";

        <android.transition.ChangeTransform: java.lang.String PROPNAME_INTERMEDIATE_MATRIX> = "android:changeTransform:intermediateMatrix";

        $r0 = newarray (java.lang.String)[3];

        $r0[0] = "android:changeTransform:matrix";

        $r0[1] = "android:changeTransform:transforms";

        $r0[2] = "android:changeTransform:parentMatrix";

        <android.transition.ChangeTransform: java.lang.String[] sTransitionProperties> = $r0;

        $r1 = new android.transition.ChangeTransform$1;

        specialinvoke $r1.<android.transition.ChangeTransform$1: void <init>(java.lang.Class,java.lang.String)>(class "[F", "nonTranslations");

        <android.transition.ChangeTransform: android.util.Property NON_TRANSLATIONS_PROPERTY> = $r1;

        $r2 = new android.transition.ChangeTransform$2;

        specialinvoke $r2.<android.transition.ChangeTransform$2: void <init>(java.lang.Class,java.lang.String)>(class "Landroid/graphics/PointF;", "translations");

        <android.transition.ChangeTransform: android.util.Property TRANSLATIONS_PROPERTY> = $r2;

        return;
    }

    public void <init>()
    {
        android.transition.ChangeTransform r0;
        android.graphics.Matrix $r1;

        r0 := @this: android.transition.ChangeTransform;

        specialinvoke r0.<android.transition.Transition: void <init>()>();

        r0.<android.transition.ChangeTransform: boolean mUseOverlay> = 1;

        r0.<android.transition.ChangeTransform: boolean mReparent> = 1;

        $r1 = new android.graphics.Matrix;

        specialinvoke $r1.<android.graphics.Matrix: void <init>()>();

        r0.<android.transition.ChangeTransform: android.graphics.Matrix mTempMatrix> = $r1;

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.transition.ChangeTransform r0;
        android.util.AttributeSet r1;
        android.graphics.Matrix $r2;
        int[] $r3;
        boolean $z0, $z1;
        android.content.Context r4;
        android.content.res.TypedArray r5;

        r0 := @this: android.transition.ChangeTransform;

        r4 := @parameter0: android.content.Context;

        r1 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.transition.Transition: void <init>(android.content.Context,android.util.AttributeSet)>(r4, r1);

        r0.<android.transition.ChangeTransform: boolean mUseOverlay> = 1;

        r0.<android.transition.ChangeTransform: boolean mReparent> = 1;

        $r2 = new android.graphics.Matrix;

        specialinvoke $r2.<android.graphics.Matrix: void <init>()>();

        r0.<android.transition.ChangeTransform: android.graphics.Matrix mTempMatrix> = $r2;

        $r3 = <com.android.internal.R$styleable: int[] ChangeTransform>;

        r5 = virtualinvoke r4.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[])>(r1, $r3);

        $z0 = virtualinvoke r5.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(1, 1);

        r0.<android.transition.ChangeTransform: boolean mUseOverlay> = $z0;

        $z1 = virtualinvoke r5.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(0, 1);

        r0.<android.transition.ChangeTransform: boolean mReparent> = $z1;

        virtualinvoke r5.<android.content.res.TypedArray: void recycle()>();

        return;
    }

    static boolean access$000(android.transition.ChangeTransform)
    {
        android.transition.ChangeTransform r0;
        boolean $z0;

        r0 := @parameter0: android.transition.ChangeTransform;

        $z0 = r0.<android.transition.ChangeTransform: boolean mUseOverlay>;

        return $z0;
    }

    static void access$100(android.view.View)
    {
        android.view.View r0;

        r0 := @parameter0: android.view.View;

        staticinvoke <android.transition.ChangeTransform: void setIdentityTransforms(android.view.View)>(r0);

        return;
    }

    static void access$200(android.view.View, float, float, float, float, float, float, float, float)
    {
        android.view.View r0;
        float f0, f1, f2, f3, f4, f5, f6, f7;

        r0 := @parameter0: android.view.View;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        f2 := @parameter3: float;

        f3 := @parameter4: float;

        f4 := @parameter5: float;

        f5 := @parameter6: float;

        f6 := @parameter7: float;

        f7 := @parameter8: float;

        staticinvoke <android.transition.ChangeTransform: void setTransforms(android.view.View,float,float,float,float,float,float,float,float)>(r0, f0, f1, f2, f3, f4, f5, f6, f7);

        return;
    }

    private void captureValues(android.transition.TransitionValues)
    {
        android.transition.ChangeTransform r0;
        android.transition.TransitionValues r1;
        android.view.View r2;
        int $i0, $i1, $i2, $i3, $i4;
        java.util.Map $r4, $r8, $r13, $r15, $r18, $r25;
        android.view.ViewParent $r5, $r12;
        android.transition.ChangeTransform$Transforms $r7;
        android.graphics.Matrix $r11, $r21, r23, r24;
        float $f0, $f1;
        java.lang.Object $r16, $r19;
        boolean $z1, $z2;
        android.view.ViewGroup r26;

        r0 := @this: android.transition.ChangeTransform;

        r1 := @parameter0: android.transition.TransitionValues;

        r2 = r1.<android.transition.TransitionValues: android.view.View view>;

        $i0 = virtualinvoke r2.<android.view.View: int getVisibility()>();

        if $i0 != 8 goto label1;

        return;

     label1:
        $r4 = r1.<android.transition.TransitionValues: java.util.Map values>;

        $r5 = virtualinvoke r2.<android.view.View: android.view.ViewParent getParent()>();

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("android:changeTransform:parent", $r5);

        $r7 = new android.transition.ChangeTransform$Transforms;

        specialinvoke $r7.<android.transition.ChangeTransform$Transforms: void <init>(android.view.View)>(r2);

        $r8 = r1.<android.transition.TransitionValues: java.util.Map values>;

        interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("android:changeTransform:transforms", $r7);

        r23 = virtualinvoke r2.<android.view.View: android.graphics.Matrix getMatrix()>();

        if r23 == null goto label3;

        $z1 = virtualinvoke r23.<android.graphics.Matrix: boolean isIdentity()>();

        if $z1 == 0 goto label2;

        goto label3;

     label2:
        $r21 = new android.graphics.Matrix;

        specialinvoke $r21.<android.graphics.Matrix: void <init>(android.graphics.Matrix)>(r23);

        r24 = $r21;

        goto label4;

     label3:
        r24 = null;

     label4:
        $r25 = r1.<android.transition.TransitionValues: java.util.Map values>;

        interfaceinvoke $r25.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("android:changeTransform:matrix", r24);

        $z2 = r0.<android.transition.ChangeTransform: boolean mReparent>;

        if $z2 == 0 goto label5;

        $r11 = new android.graphics.Matrix;

        specialinvoke $r11.<android.graphics.Matrix: void <init>()>();

        $r12 = virtualinvoke r2.<android.view.View: android.view.ViewParent getParent()>();

        r26 = (android.view.ViewGroup) $r12;

        virtualinvoke r26.<android.view.ViewGroup: void transformMatrixToGlobal(android.graphics.Matrix)>($r11);

        $i1 = virtualinvoke r26.<android.view.ViewGroup: int getScrollX()>();

        $i2 = neg $i1;

        $f0 = (float) $i2;

        $i3 = virtualinvoke r26.<android.view.ViewGroup: int getScrollY()>();

        $i4 = neg $i3;

        $f1 = (float) $i4;

        virtualinvoke $r11.<android.graphics.Matrix: boolean preTranslate(float,float)>($f0, $f1);

        $r13 = r1.<android.transition.TransitionValues: java.util.Map values>;

        interfaceinvoke $r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("android:changeTransform:parentMatrix", $r11);

        $r15 = r1.<android.transition.TransitionValues: java.util.Map values>;

        $r16 = virtualinvoke r2.<android.view.View: java.lang.Object getTag(int)>(16909563);

        interfaceinvoke $r15.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("android:changeTransform:intermediateMatrix", $r16);

        $r18 = r1.<android.transition.TransitionValues: java.util.Map values>;

        $r19 = virtualinvoke r2.<android.view.View: java.lang.Object getTag(int)>(16909275);

        interfaceinvoke $r18.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("android:changeTransform:intermediateParentMatrix", $r19);

     label5:
        return;
    }

    private void createGhostView(android.view.ViewGroup, android.transition.TransitionValues, android.transition.TransitionValues)
    {
        android.transition.ChangeTransform r0;
        android.transition.TransitionValues r1, r2;
        android.view.View r3, $r10, $r12, $r13, $r14;
        android.graphics.Matrix $r4, $r7;
        java.util.Map $r5;
        java.lang.Object $r6;
        android.transition.TransitionSet $r8;
        android.transition.ChangeTransform$GhostListener $r9;
        android.view.ViewGroup r15;
        android.view.GhostView r17;
        android.transition.Transition r18;

        r0 := @this: android.transition.ChangeTransform;

        r15 := @parameter0: android.view.ViewGroup;

        r1 := @parameter1: android.transition.TransitionValues;

        r2 := @parameter2: android.transition.TransitionValues;

        r3 = r2.<android.transition.TransitionValues: android.view.View view>;

        $r4 = new android.graphics.Matrix;

        $r5 = r2.<android.transition.TransitionValues: java.util.Map values>;

        $r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>("android:changeTransform:parentMatrix");

        $r7 = (android.graphics.Matrix) $r6;

        specialinvoke $r4.<android.graphics.Matrix: void <init>(android.graphics.Matrix)>($r7);

        virtualinvoke r15.<android.view.ViewGroup: void transformMatrixToLocal(android.graphics.Matrix)>($r4);

        r17 = staticinvoke <android.view.GhostView: android.view.GhostView addGhost(android.view.View,android.view.ViewGroup,android.graphics.Matrix)>(r3, r15, $r4);

        r18 = r0;

     label1:
        $r8 = r18.<android.transition.Transition: android.transition.TransitionSet mParent>;

        if $r8 == null goto label2;

        r18 = r18.<android.transition.Transition: android.transition.TransitionSet mParent>;

        goto label1;

     label2:
        $r9 = new android.transition.ChangeTransform$GhostListener;

        $r10 = r1.<android.transition.TransitionValues: android.view.View view>;

        specialinvoke $r9.<android.transition.ChangeTransform$GhostListener: void <init>(android.view.View,android.view.View,android.view.GhostView)>(r3, $r10, r17);

        virtualinvoke r18.<android.transition.Transition: android.transition.Transition addListener(android.transition.Transition$TransitionListener)>($r9);

        $r13 = r1.<android.transition.TransitionValues: android.view.View view>;

        $r12 = r2.<android.transition.TransitionValues: android.view.View view>;

        if $r13 == $r12 goto label3;

        $r14 = r1.<android.transition.TransitionValues: android.view.View view>;

        virtualinvoke $r14.<android.view.View: void setTransitionAlpha(float)>(0.0F);

     label3:
        virtualinvoke r3.<android.view.View: void setTransitionAlpha(float)>(1.0F);

        return;
    }

    private android.animation.ObjectAnimator createTransformAnimator(android.transition.TransitionValues, android.transition.TransitionValues, boolean)
    {
        android.transition.ChangeTransform r0;
        boolean z0, $z1;
        float[] r1, $r10, r26;
        java.util.Map $r2, $r4, $r6;
        java.lang.Object $r3, $r5, $r7;
        android.transition.ChangeTransform$PathAnimatorMatrix $r8;
        android.animation.FloatArrayEvaluator $r9;
        android.util.Property $r11, $r15;
        float[][] $r12;
        android.transition.PathMotion $r13;
        float $f0, $f1, $f2, $f3;
        android.animation.PropertyValuesHolder[] $r14;
        android.animation.PropertyValuesHolder $r16, r28;
        android.transition.ChangeTransform$3 $r17;
        android.transition.TransitionValues r18, r19;
        android.graphics.Matrix r20, r21, r22, r23;
        android.transition.ChangeTransform$Transforms r24;
        android.view.View r25;
        android.graphics.Path r29;
        android.animation.ObjectAnimator r30;

        r0 := @this: android.transition.ChangeTransform;

        r18 := @parameter0: android.transition.TransitionValues;

        r19 := @parameter1: android.transition.TransitionValues;

        z0 := @parameter2: boolean;

        $r2 = r18.<android.transition.TransitionValues: java.util.Map values>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>("android:changeTransform:matrix");

        r20 = (android.graphics.Matrix) $r3;

        $r4 = r19.<android.transition.TransitionValues: java.util.Map values>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>("android:changeTransform:matrix");

        r21 = (android.graphics.Matrix) $r5;

        r22 = r20;

        if r20 != null goto label1;

        r22 = <android.graphics.Matrix: android.graphics.Matrix IDENTITY_MATRIX>;

     label1:
        r23 = r21;

        if r21 != null goto label2;

        r23 = <android.graphics.Matrix: android.graphics.Matrix IDENTITY_MATRIX>;

     label2:
        $z1 = virtualinvoke r22.<android.graphics.Matrix: boolean equals(java.lang.Object)>(r23);

        if $z1 == 0 goto label3;

        return null;

     label3:
        $r6 = r19.<android.transition.TransitionValues: java.util.Map values>;

        $r7 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>("android:changeTransform:transforms");

        r24 = (android.transition.ChangeTransform$Transforms) $r7;

        r25 = r19.<android.transition.TransitionValues: android.view.View view>;

        staticinvoke <android.transition.ChangeTransform: void setIdentityTransforms(android.view.View)>(r25);

        r26 = newarray (float)[9];

        virtualinvoke r22.<android.graphics.Matrix: void getValues(float[])>(r26);

        r1 = newarray (float)[9];

        virtualinvoke r23.<android.graphics.Matrix: void getValues(float[])>(r1);

        $r8 = new android.transition.ChangeTransform$PathAnimatorMatrix;

        specialinvoke $r8.<android.transition.ChangeTransform$PathAnimatorMatrix: void <init>(android.view.View,float[])>(r25, r26);

        $r11 = <android.transition.ChangeTransform: android.util.Property NON_TRANSLATIONS_PROPERTY>;

        $r9 = new android.animation.FloatArrayEvaluator;

        $r10 = newarray (float)[9];

        specialinvoke $r9.<android.animation.FloatArrayEvaluator: void <init>(float[])>($r10);

        $r12 = newarray (float[])[2];

        $r12[0] = r26;

        $r12[1] = r1;

        r28 = staticinvoke <android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofObject(android.util.Property,android.animation.TypeEvaluator,java.lang.Object[])>($r11, $r9, $r12);

        $r13 = virtualinvoke r0.<android.transition.ChangeTransform: android.transition.PathMotion getPathMotion()>();

        $f3 = r26[2];

        $f2 = r26[5];

        $f1 = r1[2];

        $f0 = r1[5];

        r29 = virtualinvoke $r13.<android.transition.PathMotion: android.graphics.Path getPath(float,float,float,float)>($f3, $f2, $f1, $f0);

        $r14 = newarray (android.animation.PropertyValuesHolder)[2];

        $r14[0] = r28;

        $r15 = <android.transition.ChangeTransform: android.util.Property TRANSLATIONS_PROPERTY>;

        $r16 = staticinvoke <android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofObject(android.util.Property,android.animation.TypeConverter,android.graphics.Path)>($r15, null, r29);

        $r14[1] = $r16;

        r30 = staticinvoke <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofPropertyValuesHolder(java.lang.Object,android.animation.PropertyValuesHolder[])>($r8, $r14);

        $r17 = new android.transition.ChangeTransform$3;

        specialinvoke $r17.<android.transition.ChangeTransform$3: void <init>(android.transition.ChangeTransform,boolean,android.graphics.Matrix,android.view.View,android.transition.ChangeTransform$Transforms,android.transition.ChangeTransform$PathAnimatorMatrix)>(r0, z0, r23, r25, r24, $r8);

        virtualinvoke r30.<android.animation.ObjectAnimator: void addListener(android.animation.Animator$AnimatorListener)>($r17);

        virtualinvoke r30.<android.animation.ObjectAnimator: void addPauseListener(android.animation.Animator$AnimatorPauseListener)>($r17);

        return r30;
    }

    private boolean parentsMatch(android.view.ViewGroup, android.view.ViewGroup)
    {
        android.transition.ChangeTransform r0;
        android.view.ViewGroup r1, r3;
        boolean z0, $z3, z4;
        android.view.View $r2;
        android.transition.TransitionValues r4;

        r0 := @this: android.transition.ChangeTransform;

        r3 := @parameter0: android.view.ViewGroup;

        r1 := @parameter1: android.view.ViewGroup;

        z4 = 0;

        z0 = virtualinvoke r0.<android.transition.ChangeTransform: boolean isValidTarget(android.view.View)>(r3);

        if z0 == 0 goto label3;

        $z3 = virtualinvoke r0.<android.transition.ChangeTransform: boolean isValidTarget(android.view.View)>(r1);

        if $z3 != 0 goto label1;

        goto label3;

     label1:
        r4 = virtualinvoke r0.<android.transition.ChangeTransform: android.transition.TransitionValues getMatchedTransitionValues(android.view.View,boolean)>(r3, 1);

        if r4 == null goto label4;

        z4 = 0;

        $r2 = r4.<android.transition.TransitionValues: android.view.View view>;

        if r1 != $r2 goto label2;

        z4 = 1;

     label2:
        goto label4;

     label3:
        z4 = 0;

        if r3 != r1 goto label4;

        z4 = 1;

     label4:
        return z4;
    }

    private static void setIdentityTransforms(android.view.View)
    {
        android.view.View r0;

        r0 := @parameter0: android.view.View;

        staticinvoke <android.transition.ChangeTransform: void setTransforms(android.view.View,float,float,float,float,float,float,float,float)>(r0, 0.0F, 0.0F, 0.0F, 1.0F, 1.0F, 0.0F, 0.0F, 0.0F);

        return;
    }

    private void setMatricesForParent(android.transition.TransitionValues, android.transition.TransitionValues)
    {
        android.transition.ChangeTransform r0;
        android.transition.TransitionValues r1, r14;
        android.graphics.Matrix r2, $r10, $r11, r15, r16, r17;
        java.util.Map $r3, $r6, $r8, $r12;
        java.lang.Object $r4, $r7, $r9;
        android.view.View $r5;

        r0 := @this: android.transition.ChangeTransform;

        r1 := @parameter0: android.transition.TransitionValues;

        r14 := @parameter1: android.transition.TransitionValues;

        $r3 = r14.<android.transition.TransitionValues: java.util.Map values>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>("android:changeTransform:parentMatrix");

        r15 = (android.graphics.Matrix) $r4;

        $r5 = r14.<android.transition.TransitionValues: android.view.View view>;

        virtualinvoke $r5.<android.view.View: void setTagInternal(int,java.lang.Object)>(16909275, r15);

        r2 = r0.<android.transition.ChangeTransform: android.graphics.Matrix mTempMatrix>;

        virtualinvoke r2.<android.graphics.Matrix: void reset()>();

        virtualinvoke r15.<android.graphics.Matrix: boolean invert(android.graphics.Matrix)>(r2);

        $r6 = r1.<android.transition.TransitionValues: java.util.Map values>;

        $r7 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>("android:changeTransform:matrix");

        r16 = (android.graphics.Matrix) $r7;

        r17 = r16;

        if r16 != null goto label1;

        $r11 = new android.graphics.Matrix;

        specialinvoke $r11.<android.graphics.Matrix: void <init>()>();

        r17 = $r11;

        $r12 = r1.<android.transition.TransitionValues: java.util.Map values>;

        interfaceinvoke $r12.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("android:changeTransform:matrix", $r11);

     label1:
        $r8 = r1.<android.transition.TransitionValues: java.util.Map values>;

        $r9 = interfaceinvoke $r8.<java.util.Map: java.lang.Object get(java.lang.Object)>("android:changeTransform:parentMatrix");

        $r10 = (android.graphics.Matrix) $r9;

        virtualinvoke r17.<android.graphics.Matrix: boolean postConcat(android.graphics.Matrix)>($r10);

        virtualinvoke r17.<android.graphics.Matrix: boolean postConcat(android.graphics.Matrix)>(r2);

        return;
    }

    private static void setTransforms(android.view.View, float, float, float, float, float, float, float, float)
    {
        android.view.View r0;
        float f0, f1, f2, f3, f4, f5, f6, f7;

        r0 := @parameter0: android.view.View;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        f2 := @parameter3: float;

        f3 := @parameter4: float;

        f4 := @parameter5: float;

        f5 := @parameter6: float;

        f6 := @parameter7: float;

        f7 := @parameter8: float;

        virtualinvoke r0.<android.view.View: void setTranslationX(float)>(f0);

        virtualinvoke r0.<android.view.View: void setTranslationY(float)>(f1);

        virtualinvoke r0.<android.view.View: void setTranslationZ(float)>(f2);

        virtualinvoke r0.<android.view.View: void setScaleX(float)>(f3);

        virtualinvoke r0.<android.view.View: void setScaleY(float)>(f4);

        virtualinvoke r0.<android.view.View: void setRotationX(float)>(f5);

        virtualinvoke r0.<android.view.View: void setRotationY(float)>(f6);

        virtualinvoke r0.<android.view.View: void setRotation(float)>(f7);

        return;
    }

    public void captureEndValues(android.transition.TransitionValues)
    {
        android.transition.ChangeTransform r0;
        android.transition.TransitionValues r1;

        r0 := @this: android.transition.ChangeTransform;

        r1 := @parameter0: android.transition.TransitionValues;

        specialinvoke r0.<android.transition.ChangeTransform: void captureValues(android.transition.TransitionValues)>(r1);

        return;
    }

    public void captureStartValues(android.transition.TransitionValues)
    {
        android.transition.ChangeTransform r0;
        android.transition.TransitionValues r1;

        r0 := @this: android.transition.ChangeTransform;

        r1 := @parameter0: android.transition.TransitionValues;

        specialinvoke r0.<android.transition.ChangeTransform: void captureValues(android.transition.TransitionValues)>(r1);

        return;
    }

    public android.animation.Animator createAnimator(android.view.ViewGroup, android.transition.TransitionValues, android.transition.TransitionValues)
    {
        android.transition.ChangeTransform r0;
        android.view.ViewGroup r1, r4, r17;
        android.transition.TransitionValues r2, r3;
        java.util.Map $r5, $r6, $r7, $r9, $r11, $r13, $r15, $r18;
        boolean $z0, $z1, $z2, $z3, $z4, z5;
        java.lang.Object $r8, $r10, $r12, $r19;
        android.graphics.Matrix r20, r21;
        android.animation.ObjectAnimator r22;

        r0 := @this: android.transition.ChangeTransform;

        r1 := @parameter0: android.view.ViewGroup;

        r2 := @parameter1: android.transition.TransitionValues;

        r3 := @parameter2: android.transition.TransitionValues;

        if r2 == null goto label8;

        if r3 == null goto label8;

        $r5 = r2.<android.transition.TransitionValues: java.util.Map values>;

        $z0 = interfaceinvoke $r5.<java.util.Map: boolean containsKey(java.lang.Object)>("android:changeTransform:parent");

        if $z0 == 0 goto label8;

        $r6 = r3.<android.transition.TransitionValues: java.util.Map values>;

        $z1 = interfaceinvoke $r6.<java.util.Map: boolean containsKey(java.lang.Object)>("android:changeTransform:parent");

        if $z1 != 0 goto label1;

        goto label8;

     label1:
        $r7 = r2.<android.transition.TransitionValues: java.util.Map values>;

        $r8 = interfaceinvoke $r7.<java.util.Map: java.lang.Object get(java.lang.Object)>("android:changeTransform:parent");

        r4 = (android.view.ViewGroup) $r8;

        $r9 = r3.<android.transition.TransitionValues: java.util.Map values>;

        $r10 = interfaceinvoke $r9.<java.util.Map: java.lang.Object get(java.lang.Object)>("android:changeTransform:parent");

        r17 = (android.view.ViewGroup) $r10;

        $z2 = r0.<android.transition.ChangeTransform: boolean mReparent>;

        if $z2 == 0 goto label2;

        $z4 = specialinvoke r0.<android.transition.ChangeTransform: boolean parentsMatch(android.view.ViewGroup,android.view.ViewGroup)>(r4, r17);

        if $z4 != 0 goto label2;

        z5 = 1;

        goto label3;

     label2:
        z5 = 0;

     label3:
        $r18 = r2.<android.transition.TransitionValues: java.util.Map values>;

        $r19 = interfaceinvoke $r18.<java.util.Map: java.lang.Object get(java.lang.Object)>("android:changeTransform:intermediateMatrix");

        r20 = (android.graphics.Matrix) $r19;

        if r20 == null goto label4;

        $r15 = r2.<android.transition.TransitionValues: java.util.Map values>;

        interfaceinvoke $r15.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("android:changeTransform:matrix", r20);

     label4:
        $r11 = r2.<android.transition.TransitionValues: java.util.Map values>;

        $r12 = interfaceinvoke $r11.<java.util.Map: java.lang.Object get(java.lang.Object)>("android:changeTransform:intermediateParentMatrix");

        r21 = (android.graphics.Matrix) $r12;

        if r21 == null goto label5;

        $r13 = r2.<android.transition.TransitionValues: java.util.Map values>;

        interfaceinvoke $r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("android:changeTransform:parentMatrix", r21);

     label5:
        if z5 == 0 goto label6;

        specialinvoke r0.<android.transition.ChangeTransform: void setMatricesForParent(android.transition.TransitionValues,android.transition.TransitionValues)>(r2, r3);

     label6:
        r22 = specialinvoke r0.<android.transition.ChangeTransform: android.animation.ObjectAnimator createTransformAnimator(android.transition.TransitionValues,android.transition.TransitionValues,boolean)>(r2, r3, z5);

        if z5 == 0 goto label7;

        if r22 == null goto label7;

        $z3 = r0.<android.transition.ChangeTransform: boolean mUseOverlay>;

        if $z3 == 0 goto label7;

        specialinvoke r0.<android.transition.ChangeTransform: void createGhostView(android.view.ViewGroup,android.transition.TransitionValues,android.transition.TransitionValues)>(r1, r2, r3);

     label7:
        return r22;

     label8:
        return null;
    }

    public boolean getReparent()
    {
        android.transition.ChangeTransform r0;
        boolean $z0;

        r0 := @this: android.transition.ChangeTransform;

        $z0 = r0.<android.transition.ChangeTransform: boolean mReparent>;

        return $z0;
    }

    public boolean getReparentWithOverlay()
    {
        android.transition.ChangeTransform r0;
        boolean $z0;

        r0 := @this: android.transition.ChangeTransform;

        $z0 = r0.<android.transition.ChangeTransform: boolean mUseOverlay>;

        return $z0;
    }

    public java.lang.String[] getTransitionProperties()
    {
        android.transition.ChangeTransform r0;
        java.lang.String[] $r1;

        r0 := @this: android.transition.ChangeTransform;

        $r1 = <android.transition.ChangeTransform: java.lang.String[] sTransitionProperties>;

        return $r1;
    }

    public void setReparent(boolean)
    {
        android.transition.ChangeTransform r0;
        boolean z0;

        r0 := @this: android.transition.ChangeTransform;

        z0 := @parameter0: boolean;

        r0.<android.transition.ChangeTransform: boolean mReparent> = z0;

        return;
    }

    public void setReparentWithOverlay(boolean)
    {
        android.transition.ChangeTransform r0;
        boolean z0;

        r0 := @this: android.transition.ChangeTransform;

        z0 := @parameter0: boolean;

        r0.<android.transition.ChangeTransform: boolean mUseOverlay> = z0;

        return;
    }
}
