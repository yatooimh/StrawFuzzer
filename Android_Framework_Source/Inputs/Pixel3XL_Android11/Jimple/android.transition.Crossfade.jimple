public class android.transition.Crossfade extends android.transition.Transition
{
    public static final int FADE_BEHAVIOR_CROSSFADE;
    public static final int FADE_BEHAVIOR_OUT_IN;
    public static final int FADE_BEHAVIOR_REVEAL;
    private static final java.lang.String LOG_TAG;
    private static final java.lang.String PROPNAME_BITMAP;
    private static final java.lang.String PROPNAME_BOUNDS;
    private static final java.lang.String PROPNAME_DRAWABLE;
    public static final int RESIZE_BEHAVIOR_NONE;
    public static final int RESIZE_BEHAVIOR_SCALE;
    private static android.animation.RectEvaluator sRectEvaluator;
    private int mFadeBehavior;
    private int mResizeBehavior;

    static void <clinit>()
    {
        android.animation.RectEvaluator $r0;

        <android.transition.Crossfade: int RESIZE_BEHAVIOR_SCALE> = 1;

        <android.transition.Crossfade: int RESIZE_BEHAVIOR_NONE> = 0;

        <android.transition.Crossfade: java.lang.String PROPNAME_DRAWABLE> = "android:crossfade:drawable";

        <android.transition.Crossfade: java.lang.String PROPNAME_BOUNDS> = "android:crossfade:bounds";

        <android.transition.Crossfade: java.lang.String PROPNAME_BITMAP> = "android:crossfade:bitmap";

        <android.transition.Crossfade: java.lang.String LOG_TAG> = "Crossfade";

        <android.transition.Crossfade: int FADE_BEHAVIOR_REVEAL> = 1;

        <android.transition.Crossfade: int FADE_BEHAVIOR_OUT_IN> = 2;

        <android.transition.Crossfade: int FADE_BEHAVIOR_CROSSFADE> = 0;

        $r0 = new android.animation.RectEvaluator;

        specialinvoke $r0.<android.animation.RectEvaluator: void <init>()>();

        <android.transition.Crossfade: android.animation.RectEvaluator sRectEvaluator> = $r0;

        return;
    }

    public void <init>()
    {
        android.transition.Crossfade r0;

        r0 := @this: android.transition.Crossfade;

        specialinvoke r0.<android.transition.Transition: void <init>()>();

        r0.<android.transition.Crossfade: int mFadeBehavior> = 1;

        r0.<android.transition.Crossfade: int mResizeBehavior> = 1;

        return;
    }

    static int access$000(android.transition.Crossfade)
    {
        android.transition.Crossfade r0;
        int $i0;

        r0 := @parameter0: android.transition.Crossfade;

        $i0 = r0.<android.transition.Crossfade: int mFadeBehavior>;

        return $i0;
    }

    private void captureValues(android.transition.TransitionValues)
    {
        android.transition.Crossfade r0;
        android.transition.TransitionValues r1;
        android.view.View r2;
        android.graphics.Rect $r4;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        java.util.Map $r5, $r9, $r12;
        android.graphics.Bitmap$Config $r7;
        boolean $z0;
        android.graphics.Canvas $r8;
        android.graphics.drawable.BitmapDrawable $r11;
        android.view.TextureView $r14;
        android.graphics.Bitmap r15;

        r0 := @this: android.transition.Crossfade;

        r1 := @parameter0: android.transition.TransitionValues;

        r2 = r1.<android.transition.TransitionValues: android.view.View view>;

        $r4 = new android.graphics.Rect;

        $i0 = virtualinvoke r2.<android.view.View: int getWidth()>();

        $i1 = virtualinvoke r2.<android.view.View: int getHeight()>();

        specialinvoke $r4.<android.graphics.Rect: void <init>(int,int,int,int)>(0, 0, $i0, $i1);

        $i2 = r0.<android.transition.Crossfade: int mFadeBehavior>;

        if $i2 == 1 goto label1;

        $i5 = virtualinvoke r2.<android.view.View: int getLeft()>();

        $i6 = virtualinvoke r2.<android.view.View: int getTop()>();

        virtualinvoke $r4.<android.graphics.Rect: void offset(int,int)>($i5, $i6);

     label1:
        $r5 = r1.<android.transition.TransitionValues: java.util.Map values>;

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("android:crossfade:bounds", $r4);

        $i3 = virtualinvoke r2.<android.view.View: int getWidth()>();

        $i4 = virtualinvoke r2.<android.view.View: int getHeight()>();

        $r7 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config ARGB_8888>;

        r15 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>($i3, $i4, $r7);

        $z0 = r2 instanceof android.view.TextureView;

        if $z0 == 0 goto label2;

        $r14 = (android.view.TextureView) r2;

        r15 = virtualinvoke $r14.<android.view.TextureView: android.graphics.Bitmap getBitmap()>();

        goto label3;

     label2:
        $r8 = new android.graphics.Canvas;

        specialinvoke $r8.<android.graphics.Canvas: void <init>(android.graphics.Bitmap)>(r15);

        virtualinvoke r2.<android.view.View: void draw(android.graphics.Canvas)>($r8);

     label3:
        $r9 = r1.<android.transition.TransitionValues: java.util.Map values>;

        interfaceinvoke $r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("android:crossfade:bitmap", r15);

        $r11 = new android.graphics.drawable.BitmapDrawable;

        specialinvoke $r11.<android.graphics.drawable.BitmapDrawable: void <init>(android.graphics.Bitmap)>(r15);

        virtualinvoke $r11.<android.graphics.drawable.BitmapDrawable: void setBounds(android.graphics.Rect)>($r4);

        $r12 = r1.<android.transition.TransitionValues: java.util.Map values>;

        interfaceinvoke $r12.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("android:crossfade:drawable", $r11);

        return;
    }

    public void captureEndValues(android.transition.TransitionValues)
    {
        android.transition.Crossfade r0;
        android.transition.TransitionValues r1;

        r0 := @this: android.transition.Crossfade;

        r1 := @parameter0: android.transition.TransitionValues;

        specialinvoke r0.<android.transition.Crossfade: void captureValues(android.transition.TransitionValues)>(r1);

        return;
    }

    public void captureStartValues(android.transition.TransitionValues)
    {
        android.transition.Crossfade r0;
        android.transition.TransitionValues r1;

        r0 := @this: android.transition.Crossfade;

        r1 := @parameter0: android.transition.TransitionValues;

        specialinvoke r0.<android.transition.Crossfade: void captureValues(android.transition.TransitionValues)>(r1);

        return;
    }

    public android.animation.Animator createAnimator(android.view.ViewGroup, android.transition.TransitionValues, android.transition.TransitionValues)
    {
        android.transition.Crossfade r0;
        android.graphics.Rect r1, r2;
        int i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.Object $r3, $r4, $r5, $r6, $r7, $r8;
        boolean $z0, $z1, z2;
        int[] $r9, $r24;
        android.transition.Crossfade$1 $r10;
        android.animation.Animator[] $r11, $r15, $r19, $r43;
        java.lang.Object[] $r12, $r16;
        android.animation.RectEvaluator $r13, $r17;
        android.animation.ObjectAnimator $r14, $r18, r38, r39;
        float[] $r20, $r22;
        android.util.Property $r21, $r23;
        android.view.ViewParent $r25;
        android.view.ViewGroup $r26, r27;
        android.transition.TransitionValues r28, r29;
        android.view.View r30;
        java.util.Map r31, r32;
        android.graphics.Bitmap r33, r34;
        android.graphics.drawable.BitmapDrawable r35, r36;
        android.view.ViewOverlay r37;
        android.transition.Crossfade$2 $r40;
        android.animation.AnimatorSet $r41;

        r0 := @this: android.transition.Crossfade;

        r27 := @parameter0: android.view.ViewGroup;

        r28 := @parameter1: android.transition.TransitionValues;

        r29 := @parameter2: android.transition.TransitionValues;

        if r28 == null goto label15;

        if r29 != null goto label01;

        goto label15;

     label01:
        $i1 = r0.<android.transition.Crossfade: int mFadeBehavior>;

        if $i1 == 1 goto label02;

        z2 = 1;

        goto label03;

     label02:
        z2 = 0;

     label03:
        r30 = r29.<android.transition.TransitionValues: android.view.View view>;

        r31 = r28.<android.transition.TransitionValues: java.util.Map values>;

        r32 = r29.<android.transition.TransitionValues: java.util.Map values>;

        $r3 = interfaceinvoke r31.<java.util.Map: java.lang.Object get(java.lang.Object)>("android:crossfade:bounds");

        r1 = (android.graphics.Rect) $r3;

        $r4 = interfaceinvoke r32.<java.util.Map: java.lang.Object get(java.lang.Object)>("android:crossfade:bounds");

        r2 = (android.graphics.Rect) $r4;

        $r5 = interfaceinvoke r31.<java.util.Map: java.lang.Object get(java.lang.Object)>("android:crossfade:bitmap");

        r33 = (android.graphics.Bitmap) $r5;

        $r6 = interfaceinvoke r32.<java.util.Map: java.lang.Object get(java.lang.Object)>("android:crossfade:bitmap");

        r34 = (android.graphics.Bitmap) $r6;

        $r7 = interfaceinvoke r31.<java.util.Map: java.lang.Object get(java.lang.Object)>("android:crossfade:drawable");

        r35 = (android.graphics.drawable.BitmapDrawable) $r7;

        $r8 = interfaceinvoke r32.<java.util.Map: java.lang.Object get(java.lang.Object)>("android:crossfade:drawable");

        r36 = (android.graphics.drawable.BitmapDrawable) $r8;

        if r35 == null goto label14;

        if r36 == null goto label14;

        $z0 = virtualinvoke r33.<android.graphics.Bitmap: boolean sameAs(android.graphics.Bitmap)>(r34);

        if $z0 != 0 goto label14;

        if z2 == 0 goto label04;

        $r25 = virtualinvoke r30.<android.view.View: android.view.ViewParent getParent()>();

        $r26 = (android.view.ViewGroup) $r25;

        r37 = virtualinvoke $r26.<android.view.ViewGroup: android.view.ViewGroupOverlay getOverlay()>();

        goto label05;

     label04:
        r37 = virtualinvoke r30.<android.view.View: android.view.ViewOverlay getOverlay()>();

     label05:
        $i2 = r0.<android.transition.Crossfade: int mFadeBehavior>;

        if $i2 != 1 goto label06;

        virtualinvoke r37.<android.view.ViewOverlay: void add(android.graphics.drawable.Drawable)>(r36);

     label06:
        virtualinvoke r37.<android.view.ViewOverlay: void add(android.graphics.drawable.Drawable)>(r35);

        $i3 = r0.<android.transition.Crossfade: int mFadeBehavior>;

        if $i3 != 2 goto label07;

        $r24 = newarray (int)[3];

        $r24[0] = 255;

        $r24[1] = 0;

        $r24[2] = 0;

        r38 = staticinvoke <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofInt(java.lang.Object,java.lang.String,int[])>(r35, "alpha", $r24);

        goto label08;

     label07:
        $r9 = newarray (int)[1];

        $r9[0] = 0;

        r38 = staticinvoke <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofInt(java.lang.Object,java.lang.String,int[])>(r35, "alpha", $r9);

     label08:
        $r10 = new android.transition.Crossfade$1;

        specialinvoke $r10.<android.transition.Crossfade$1: void <init>(android.transition.Crossfade,android.view.View,android.graphics.drawable.BitmapDrawable)>(r0, r30, r35);

        virtualinvoke r38.<android.animation.ObjectAnimator: void addUpdateListener(android.animation.ValueAnimator$AnimatorUpdateListener)>($r10);

        r39 = null;

        i0 = r0.<android.transition.Crossfade: int mFadeBehavior>;

        if i0 != 2 goto label09;

        $r23 = <android.view.View: android.util.Property ALPHA>;

        $r22 = newarray (float)[3];

        $r22[0] = 0.0F;

        $r22[1] = 0.0F;

        $r22[2] = 1.0F;

        r39 = staticinvoke <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofFloat(java.lang.Object,android.util.Property,float[])>(r30, $r23, $r22);

        goto label10;

     label09:
        if i0 != 0 goto label10;

        $r21 = <android.view.View: android.util.Property ALPHA>;

        $r20 = newarray (float)[2];

        $r20[0] = 0.0F;

        $r20[1] = 1.0F;

        r39 = staticinvoke <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofFloat(java.lang.Object,android.util.Property,float[])>(r30, $r21, $r20);

        goto label10;

     label10:
        $r40 = new android.transition.Crossfade$2;

        specialinvoke $r40.<android.transition.Crossfade$2: void <init>(android.transition.Crossfade,boolean,android.view.View,android.graphics.drawable.BitmapDrawable,android.graphics.drawable.BitmapDrawable)>(r0, z2, r30, r35, r36);

        virtualinvoke r38.<android.animation.ObjectAnimator: void addListener(android.animation.Animator$AnimatorListener)>($r40);

        $r41 = new android.animation.AnimatorSet;

        specialinvoke $r41.<android.animation.AnimatorSet: void <init>()>();

        $r43 = newarray (android.animation.Animator)[1];

        $r43[0] = r38;

        virtualinvoke $r41.<android.animation.AnimatorSet: void playTogether(android.animation.Animator[])>($r43);

        if r39 == null goto label11;

        $r19 = newarray (android.animation.Animator)[1];

        $r19[0] = r39;

        virtualinvoke $r41.<android.animation.AnimatorSet: void playTogether(android.animation.Animator[])>($r19);

     label11:
        $i4 = r0.<android.transition.Crossfade: int mResizeBehavior>;

        if $i4 != 1 goto label13;

        $z1 = virtualinvoke r1.<android.graphics.Rect: boolean equals(java.lang.Object)>(r2);

        if $z1 != 0 goto label13;

        $r11 = newarray (android.animation.Animator)[1];

        $r13 = <android.transition.Crossfade: android.animation.RectEvaluator sRectEvaluator>;

        $r12 = newarray (java.lang.Object)[2];

        $r12[0] = r1;

        $r12[1] = r2;

        $r14 = staticinvoke <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofObject(java.lang.Object,java.lang.String,android.animation.TypeEvaluator,java.lang.Object[])>(r35, "bounds", $r13, $r12);

        $r11[0] = $r14;

        virtualinvoke $r41.<android.animation.AnimatorSet: void playTogether(android.animation.Animator[])>($r11);

        $i5 = r0.<android.transition.Crossfade: int mResizeBehavior>;

        if $i5 != 1 goto label12;

        $r15 = newarray (android.animation.Animator)[1];

        $r17 = <android.transition.Crossfade: android.animation.RectEvaluator sRectEvaluator>;

        $r16 = newarray (java.lang.Object)[2];

        $r16[0] = r1;

        $r16[1] = r2;

        $r18 = staticinvoke <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofObject(java.lang.Object,java.lang.String,android.animation.TypeEvaluator,java.lang.Object[])>(r36, "bounds", $r17, $r16);

        $r15[0] = $r18;

        virtualinvoke $r41.<android.animation.AnimatorSet: void playTogether(android.animation.Animator[])>($r15);

        goto label13;

     label12:
        goto label13;

     label13:
        return $r41;

     label14:
        return null;

     label15:
        return null;
    }

    public int getFadeBehavior()
    {
        android.transition.Crossfade r0;
        int $i0;

        r0 := @this: android.transition.Crossfade;

        $i0 = r0.<android.transition.Crossfade: int mFadeBehavior>;

        return $i0;
    }

    public int getResizeBehavior()
    {
        android.transition.Crossfade r0;
        int $i0;

        r0 := @this: android.transition.Crossfade;

        $i0 = r0.<android.transition.Crossfade: int mResizeBehavior>;

        return $i0;
    }

    public android.transition.Crossfade setFadeBehavior(int)
    {
        android.transition.Crossfade r0;
        int i0;

        r0 := @this: android.transition.Crossfade;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        if i0 > 2 goto label1;

        r0.<android.transition.Crossfade: int mFadeBehavior> = i0;

     label1:
        return r0;
    }

    public android.transition.Crossfade setResizeBehavior(int)
    {
        android.transition.Crossfade r0;
        int i0;

        r0 := @this: android.transition.Crossfade;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        if i0 > 1 goto label1;

        r0.<android.transition.Crossfade: int mResizeBehavior> = i0;

     label1:
        return r0;
    }
}
