public class android.transition.Explode extends android.transition.Visibility
{
    private static final java.lang.String PROPNAME_SCREEN_BOUNDS;
    private static final java.lang.String TAG;
    private static final android.animation.TimeInterpolator sAccelerate;
    private static final android.animation.TimeInterpolator sDecelerate;
    private int[] mTempLoc;

    static void <clinit>()
    {
        android.view.animation.DecelerateInterpolator $r0;
        android.view.animation.AccelerateInterpolator $r1;

        <android.transition.Explode: java.lang.String TAG> = "Explode";

        <android.transition.Explode: java.lang.String PROPNAME_SCREEN_BOUNDS> = "android:explode:screenBounds";

        $r0 = new android.view.animation.DecelerateInterpolator;

        specialinvoke $r0.<android.view.animation.DecelerateInterpolator: void <init>()>();

        <android.transition.Explode: android.animation.TimeInterpolator sDecelerate> = $r0;

        $r1 = new android.view.animation.AccelerateInterpolator;

        specialinvoke $r1.<android.view.animation.AccelerateInterpolator: void <init>()>();

        <android.transition.Explode: android.animation.TimeInterpolator sAccelerate> = $r1;

        return;
    }

    public void <init>()
    {
        android.transition.Explode r0;
        int[] $r1;
        android.transition.CircularPropagation $r2;

        r0 := @this: android.transition.Explode;

        specialinvoke r0.<android.transition.Visibility: void <init>()>();

        $r1 = newarray (int)[2];

        r0.<android.transition.Explode: int[] mTempLoc> = $r1;

        $r2 = new android.transition.CircularPropagation;

        specialinvoke $r2.<android.transition.CircularPropagation: void <init>()>();

        virtualinvoke r0.<android.transition.Explode: void setPropagation(android.transition.TransitionPropagation)>($r2);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.transition.Explode r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        int[] $r3;
        android.transition.CircularPropagation $r4;

        r0 := @this: android.transition.Explode;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.transition.Visibility: void <init>(android.content.Context,android.util.AttributeSet)>(r1, r2);

        $r3 = newarray (int)[2];

        r0.<android.transition.Explode: int[] mTempLoc> = $r3;

        $r4 = new android.transition.CircularPropagation;

        specialinvoke $r4.<android.transition.CircularPropagation: void <init>()>();

        virtualinvoke r0.<android.transition.Explode: void setPropagation(android.transition.TransitionPropagation)>($r4);

        return;
    }

    private static double calculateMaxDistance(android.view.View, int, int)
    {
        android.view.View r0;
        int $i0, $i1, $i2, $i3, i4, i5, i6, i7;
        double $d0, $d1, $d2;

        r0 := @parameter0: android.view.View;

        i4 := @parameter1: int;

        i5 := @parameter2: int;

        $i0 = virtualinvoke r0.<android.view.View: int getWidth()>();

        $i1 = $i0 - i4;

        i6 = staticinvoke <java.lang.Math: int max(int,int)>(i4, $i1);

        $i2 = virtualinvoke r0.<android.view.View: int getHeight()>();

        $i3 = $i2 - i5;

        i7 = staticinvoke <java.lang.Math: int max(int,int)>(i5, $i3);

        $d1 = (double) i6;

        $d0 = (double) i7;

        $d2 = staticinvoke <java.lang.Math: double hypot(double,double)>($d1, $d0);

        return $d2;
    }

    private void calculateOut(android.view.View, android.graphics.Rect, int[])
    {
        android.transition.Explode r0;
        android.view.View r1;
        android.graphics.Rect r2, r6;
        int[] r3, $r4, r5;
        int i0, i1, i2, i3, $i4, $i5, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, i16, i17, $i18, $i19, $i21, $i23;
        double d0, $d1, $d2, $d3, $d4, d5, d6, d7, d8, d9, d10, d11, $d12, $d13;
        byte $b6, $b7;
        float $f0, $f1;
        long $l20, $l22;

        r0 := @this: android.transition.Explode;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.graphics.Rect;

        r3 := @parameter2: int[];

        $r4 = r0.<android.transition.Explode: int[] mTempLoc>;

        virtualinvoke r1.<android.view.View: void getLocationOnScreen(int[])>($r4);

        r5 = r0.<android.transition.Explode: int[] mTempLoc>;

        i0 = r5[0];

        i1 = r5[1];

        r6 = virtualinvoke r0.<android.transition.Explode: android.graphics.Rect getEpicenter()>();

        if r6 != null goto label1;

        $i8 = virtualinvoke r1.<android.view.View: int getWidth()>();

        $i9 = $i8 / 2;

        $i10 = $i9 + i0;

        $f0 = virtualinvoke r1.<android.view.View: float getTranslationX()>();

        $i11 = staticinvoke <java.lang.Math: int round(float)>($f0);

        i16 = $i10 + $i11;

        $i12 = virtualinvoke r1.<android.view.View: int getHeight()>();

        $i13 = $i12 / 2;

        $i14 = $i13 + i1;

        $f1 = virtualinvoke r1.<android.view.View: float getTranslationY()>();

        $i15 = staticinvoke <java.lang.Math: int round(float)>($f1);

        i17 = $i14 + $i15;

        goto label2;

     label1:
        i16 = virtualinvoke r6.<android.graphics.Rect: int centerX()>();

        i17 = virtualinvoke r6.<android.graphics.Rect: int centerY()>();

     label2:
        i2 = virtualinvoke r2.<android.graphics.Rect: int centerX()>();

        i3 = virtualinvoke r2.<android.graphics.Rect: int centerY()>();

        $i4 = i2 - i16;

        d5 = (double) $i4;

        $i5 = i3 - i17;

        d0 = (double) $i5;

        d6 = d5;

        d7 = d0;

        $b6 = d5 cmpl 0.0;

        if $b6 != 0 goto label3;

        d6 = d5;

        d7 = d0;

        $b7 = d0 cmpl 0.0;

        if $b7 != 0 goto label3;

        $d1 = staticinvoke <java.lang.Math: double random()>();

        $d2 = $d1 * 2.0;

        d6 = $d2 - 1.0;

        $d3 = staticinvoke <java.lang.Math: double random()>();

        $d4 = $d3 * 2.0;

        d7 = $d4 - 1.0;

     label3:
        d8 = staticinvoke <java.lang.Math: double hypot(double,double)>(d6, d7);

        d9 = d6 / d8;

        d10 = d7 / d8;

        $i18 = i16 - i0;

        $i19 = i17 - i1;

        d11 = staticinvoke <android.transition.Explode: double calculateMaxDistance(android.view.View,int,int)>(r1, $i18, $i19);

        $d12 = d11 * d9;

        $l20 = staticinvoke <java.lang.Math: long round(double)>($d12);

        $i21 = (int) $l20;

        r3[0] = $i21;

        $d13 = d11 * d10;

        $l22 = staticinvoke <java.lang.Math: long round(double)>($d13);

        $i23 = (int) $l22;

        r3[1] = $i23;

        return;
    }

    private void captureValues(android.transition.TransitionValues)
    {
        android.transition.Explode r0;
        android.transition.TransitionValues r1;
        android.view.View r2;
        int[] r3, $r4;
        int i0, i1, i2, i3, $i4, $i5;
        android.graphics.Rect $r5;
        java.util.Map $r6;

        r0 := @this: android.transition.Explode;

        r1 := @parameter0: android.transition.TransitionValues;

        r2 = r1.<android.transition.TransitionValues: android.view.View view>;

        $r4 = r0.<android.transition.Explode: int[] mTempLoc>;

        virtualinvoke r2.<android.view.View: void getLocationOnScreen(int[])>($r4);

        r3 = r0.<android.transition.Explode: int[] mTempLoc>;

        i0 = r3[0];

        i1 = r3[1];

        i2 = virtualinvoke r2.<android.view.View: int getWidth()>();

        i3 = virtualinvoke r2.<android.view.View: int getHeight()>();

        $r6 = r1.<android.transition.TransitionValues: java.util.Map values>;

        $r5 = new android.graphics.Rect;

        $i5 = i2 + i0;

        $i4 = i3 + i1;

        specialinvoke $r5.<android.graphics.Rect: void <init>(int,int,int,int)>(i0, i1, $i5, $i4);

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("android:explode:screenBounds", $r5);

        return;
    }

    public void captureEndValues(android.transition.TransitionValues)
    {
        android.transition.Explode r0;
        android.transition.TransitionValues r1;

        r0 := @this: android.transition.Explode;

        r1 := @parameter0: android.transition.TransitionValues;

        specialinvoke r0.<android.transition.Visibility: void captureEndValues(android.transition.TransitionValues)>(r1);

        specialinvoke r0.<android.transition.Explode: void captureValues(android.transition.TransitionValues)>(r1);

        return;
    }

    public void captureStartValues(android.transition.TransitionValues)
    {
        android.transition.Explode r0;
        android.transition.TransitionValues r1;

        r0 := @this: android.transition.Explode;

        r1 := @parameter0: android.transition.TransitionValues;

        specialinvoke r0.<android.transition.Visibility: void captureStartValues(android.transition.TransitionValues)>(r1);

        specialinvoke r0.<android.transition.Explode: void captureValues(android.transition.TransitionValues)>(r1);

        return;
    }

    public android.animation.Animator onAppear(android.view.ViewGroup, android.view.View, android.transition.TransitionValues, android.transition.TransitionValues)
    {
        android.transition.Explode r0;
        android.view.View r1;
        android.transition.TransitionValues r2, r9;
        float f0, f1, f2, f3, $f4, $f5;
        java.util.Map $r3;
        java.lang.Object $r4;
        int[] $r5, r11;
        int $i0, $i1, $i2, $i3;
        android.animation.TimeInterpolator $r6;
        android.animation.Animator $r7;
        android.view.ViewGroup r8;
        android.graphics.Rect r10;

        r0 := @this: android.transition.Explode;

        r8 := @parameter0: android.view.ViewGroup;

        r1 := @parameter1: android.view.View;

        r9 := @parameter2: android.transition.TransitionValues;

        r2 := @parameter3: android.transition.TransitionValues;

        if r2 != null goto label1;

        return null;

     label1:
        $r3 = r2.<android.transition.TransitionValues: java.util.Map values>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>("android:explode:screenBounds");

        r10 = (android.graphics.Rect) $r4;

        f0 = virtualinvoke r1.<android.view.View: float getTranslationX()>();

        f1 = virtualinvoke r1.<android.view.View: float getTranslationY()>();

        $r5 = r0.<android.transition.Explode: int[] mTempLoc>;

        specialinvoke r0.<android.transition.Explode: void calculateOut(android.view.View,android.graphics.Rect,int[])>(r8, r10, $r5);

        r11 = r0.<android.transition.Explode: int[] mTempLoc>;

        $i0 = r11[0];

        f2 = (float) $i0;

        $i1 = r11[1];

        f3 = (float) $i1;

        $i3 = r10.<android.graphics.Rect: int left>;

        $i2 = r10.<android.graphics.Rect: int top>;

        $f5 = f0 + f2;

        $f4 = f1 + f3;

        $r6 = <android.transition.Explode: android.animation.TimeInterpolator sDecelerate>;

        $r7 = staticinvoke <android.transition.TranslationAnimationCreator: android.animation.Animator createAnimation(android.view.View,android.transition.TransitionValues,int,int,float,float,float,float,android.animation.TimeInterpolator,android.transition.Transition)>(r1, r2, $i3, $i2, $f5, $f4, f0, f1, $r6, r0);

        return $r7;
    }

    public android.animation.Animator onDisappear(android.view.ViewGroup, android.view.View, android.transition.TransitionValues, android.transition.TransitionValues)
    {
        android.transition.Explode r0;
        android.view.View r1, $r6;
        android.transition.TransitionValues r2, r12;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        float f0, f1, $f4, $f5, $f6, $f7, $f8, $f9, f10, f11;
        int[] r3, $r8, r14;
        java.util.Map $r4;
        java.lang.Object $r5, $r7;
        android.animation.TimeInterpolator $r9;
        android.animation.Animator $r10;
        android.view.ViewGroup r11;
        android.graphics.Rect r13;

        r0 := @this: android.transition.Explode;

        r11 := @parameter0: android.view.ViewGroup;

        r1 := @parameter1: android.view.View;

        r2 := @parameter2: android.transition.TransitionValues;

        r12 := @parameter3: android.transition.TransitionValues;

        if r2 != null goto label1;

        return null;

     label1:
        $r4 = r2.<android.transition.TransitionValues: java.util.Map values>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>("android:explode:screenBounds");

        r13 = (android.graphics.Rect) $r5;

        i0 = r13.<android.graphics.Rect: int left>;

        i1 = r13.<android.graphics.Rect: int top>;

        f0 = virtualinvoke r1.<android.view.View: float getTranslationX()>();

        f1 = virtualinvoke r1.<android.view.View: float getTranslationY()>();

        $r6 = r2.<android.transition.TransitionValues: android.view.View view>;

        $r7 = virtualinvoke $r6.<android.view.View: java.lang.Object getTag(int)>(16909562);

        r3 = (int[]) $r7;

        f10 = f0;

        f11 = f1;

        if r3 == null goto label2;

        $i5 = r3[0];

        $i4 = r13.<android.graphics.Rect: int left>;

        $i6 = $i5 - $i4;

        $f8 = (float) $i6;

        f10 = f0 + $f8;

        $i8 = r3[1];

        $i7 = r13.<android.graphics.Rect: int top>;

        $i9 = $i8 - $i7;

        $f9 = (float) $i9;

        f11 = f1 + $f9;

        $i11 = r3[0];

        $i10 = r3[1];

        virtualinvoke r13.<android.graphics.Rect: void offsetTo(int,int)>($i11, $i10);

     label2:
        $r8 = r0.<android.transition.Explode: int[] mTempLoc>;

        specialinvoke r0.<android.transition.Explode: void calculateOut(android.view.View,android.graphics.Rect,int[])>(r11, r13, $r8);

        r14 = r0.<android.transition.Explode: int[] mTempLoc>;

        $i2 = r14[0];

        $f4 = (float) $i2;

        $f7 = f10 + $f4;

        $i3 = r14[1];

        $f5 = (float) $i3;

        $f6 = f11 + $f5;

        $r9 = <android.transition.Explode: android.animation.TimeInterpolator sAccelerate>;

        $r10 = staticinvoke <android.transition.TranslationAnimationCreator: android.animation.Animator createAnimation(android.view.View,android.transition.TransitionValues,int,int,float,float,float,float,android.animation.TimeInterpolator,android.transition.Transition)>(r1, r2, i0, i1, f0, f1, $f7, $f6, $r9, r0);

        return $r10;
    }
}
