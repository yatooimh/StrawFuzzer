public class android.transition.Slide extends android.transition.Visibility
{
    private static final java.lang.String PROPNAME_SCREEN_POSITION;
    private static final java.lang.String TAG;
    private static final android.animation.TimeInterpolator sAccelerate;
    private static final android.transition.Slide$CalculateSlide sCalculateBottom;
    private static final android.transition.Slide$CalculateSlide sCalculateEnd;
    private static final android.transition.Slide$CalculateSlide sCalculateLeft;
    private static final android.transition.Slide$CalculateSlide sCalculateRight;
    private static final android.transition.Slide$CalculateSlide sCalculateStart;
    private static final android.transition.Slide$CalculateSlide sCalculateTop;
    private static final android.animation.TimeInterpolator sDecelerate;
    private android.transition.Slide$CalculateSlide mSlideCalculator;
    private int mSlideEdge;
    private float mSlideFraction;

    static void <clinit>()
    {
        android.view.animation.DecelerateInterpolator $r0;
        android.view.animation.AccelerateInterpolator $r1;
        android.transition.Slide$1 $r2;
        android.transition.Slide$2 $r3;
        android.transition.Slide$3 $r4;
        android.transition.Slide$4 $r5;
        android.transition.Slide$5 $r6;
        android.transition.Slide$6 $r7;

        <android.transition.Slide: java.lang.String TAG> = "Slide";

        <android.transition.Slide: java.lang.String PROPNAME_SCREEN_POSITION> = "android:slide:screenPosition";

        $r0 = new android.view.animation.DecelerateInterpolator;

        specialinvoke $r0.<android.view.animation.DecelerateInterpolator: void <init>()>();

        <android.transition.Slide: android.animation.TimeInterpolator sDecelerate> = $r0;

        $r1 = new android.view.animation.AccelerateInterpolator;

        specialinvoke $r1.<android.view.animation.AccelerateInterpolator: void <init>()>();

        <android.transition.Slide: android.animation.TimeInterpolator sAccelerate> = $r1;

        $r2 = new android.transition.Slide$1;

        specialinvoke $r2.<android.transition.Slide$1: void <init>()>();

        <android.transition.Slide: android.transition.Slide$CalculateSlide sCalculateLeft> = $r2;

        $r3 = new android.transition.Slide$2;

        specialinvoke $r3.<android.transition.Slide$2: void <init>()>();

        <android.transition.Slide: android.transition.Slide$CalculateSlide sCalculateStart> = $r3;

        $r4 = new android.transition.Slide$3;

        specialinvoke $r4.<android.transition.Slide$3: void <init>()>();

        <android.transition.Slide: android.transition.Slide$CalculateSlide sCalculateTop> = $r4;

        $r5 = new android.transition.Slide$4;

        specialinvoke $r5.<android.transition.Slide$4: void <init>()>();

        <android.transition.Slide: android.transition.Slide$CalculateSlide sCalculateRight> = $r5;

        $r6 = new android.transition.Slide$5;

        specialinvoke $r6.<android.transition.Slide$5: void <init>()>();

        <android.transition.Slide: android.transition.Slide$CalculateSlide sCalculateEnd> = $r6;

        $r7 = new android.transition.Slide$6;

        specialinvoke $r7.<android.transition.Slide$6: void <init>()>();

        <android.transition.Slide: android.transition.Slide$CalculateSlide sCalculateBottom> = $r7;

        return;
    }

    public void <init>()
    {
        android.transition.Slide r0;
        android.transition.Slide$CalculateSlide $r1;

        r0 := @this: android.transition.Slide;

        specialinvoke r0.<android.transition.Visibility: void <init>()>();

        $r1 = <android.transition.Slide: android.transition.Slide$CalculateSlide sCalculateBottom>;

        r0.<android.transition.Slide: android.transition.Slide$CalculateSlide mSlideCalculator> = $r1;

        r0.<android.transition.Slide: int mSlideEdge> = 80;

        r0.<android.transition.Slide: float mSlideFraction> = 1.0F;

        virtualinvoke r0.<android.transition.Slide: void setSlideEdge(int)>(80);

        return;
    }

    public void <init>(int)
    {
        android.transition.Slide r0;
        int i0;
        android.transition.Slide$CalculateSlide $r1;

        r0 := @this: android.transition.Slide;

        i0 := @parameter0: int;

        specialinvoke r0.<android.transition.Visibility: void <init>()>();

        $r1 = <android.transition.Slide: android.transition.Slide$CalculateSlide sCalculateBottom>;

        r0.<android.transition.Slide: android.transition.Slide$CalculateSlide mSlideCalculator> = $r1;

        r0.<android.transition.Slide: int mSlideEdge> = 80;

        r0.<android.transition.Slide: float mSlideFraction> = 1.0F;

        virtualinvoke r0.<android.transition.Slide: void setSlideEdge(int)>(i0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.transition.Slide r0;
        android.util.AttributeSet r1;
        int i0;
        android.transition.Slide$CalculateSlide $r2;
        int[] $r3;
        android.content.Context r4;
        android.content.res.TypedArray r5;

        r0 := @this: android.transition.Slide;

        r4 := @parameter0: android.content.Context;

        r1 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.transition.Visibility: void <init>(android.content.Context,android.util.AttributeSet)>(r4, r1);

        $r2 = <android.transition.Slide: android.transition.Slide$CalculateSlide sCalculateBottom>;

        r0.<android.transition.Slide: android.transition.Slide$CalculateSlide mSlideCalculator> = $r2;

        r0.<android.transition.Slide: int mSlideEdge> = 80;

        r0.<android.transition.Slide: float mSlideFraction> = 1.0F;

        $r3 = <com.android.internal.R$styleable: int[] Slide>;

        r5 = virtualinvoke r4.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[])>(r1, $r3);

        i0 = virtualinvoke r5.<android.content.res.TypedArray: int getInt(int,int)>(0, 80);

        virtualinvoke r5.<android.content.res.TypedArray: void recycle()>();

        virtualinvoke r0.<android.transition.Slide: void setSlideEdge(int)>(i0);

        return;
    }

    private void captureValues(android.transition.TransitionValues)
    {
        android.transition.Slide r0;
        android.transition.TransitionValues r1;
        android.view.View r2;
        int[] r3;
        java.util.Map $r4;

        r0 := @this: android.transition.Slide;

        r1 := @parameter0: android.transition.TransitionValues;

        r2 = r1.<android.transition.TransitionValues: android.view.View view>;

        r3 = newarray (int)[2];

        virtualinvoke r2.<android.view.View: void getLocationOnScreen(int[])>(r3);

        $r4 = r1.<android.transition.TransitionValues: java.util.Map values>;

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("android:slide:screenPosition", r3);

        return;
    }

    public void captureEndValues(android.transition.TransitionValues)
    {
        android.transition.Slide r0;
        android.transition.TransitionValues r1;

        r0 := @this: android.transition.Slide;

        r1 := @parameter0: android.transition.TransitionValues;

        specialinvoke r0.<android.transition.Visibility: void captureEndValues(android.transition.TransitionValues)>(r1);

        specialinvoke r0.<android.transition.Slide: void captureValues(android.transition.TransitionValues)>(r1);

        return;
    }

    public void captureStartValues(android.transition.TransitionValues)
    {
        android.transition.Slide r0;
        android.transition.TransitionValues r1;

        r0 := @this: android.transition.Slide;

        r1 := @parameter0: android.transition.TransitionValues;

        specialinvoke r0.<android.transition.Visibility: void captureStartValues(android.transition.TransitionValues)>(r1);

        specialinvoke r0.<android.transition.Slide: void captureValues(android.transition.TransitionValues)>(r1);

        return;
    }

    public int getSlideEdge()
    {
        android.transition.Slide r0;
        int $i0;

        r0 := @this: android.transition.Slide;

        $i0 = r0.<android.transition.Slide: int mSlideEdge>;

        return $i0;
    }

    public android.animation.Animator onAppear(android.view.ViewGroup, android.view.View, android.transition.TransitionValues, android.transition.TransitionValues)
    {
        android.transition.Slide r0;
        android.view.ViewGroup r1;
        android.view.View r2;
        android.transition.TransitionValues r3, r10;
        float f0, f1, f2, f3, $f4, $f5;
        java.util.Map $r4;
        java.lang.Object $r5;
        android.transition.Slide$CalculateSlide $r6, $r7;
        android.animation.TimeInterpolator $r8;
        int $i0, $i1;
        android.animation.Animator $r9;
        int[] r11;

        r0 := @this: android.transition.Slide;

        r1 := @parameter0: android.view.ViewGroup;

        r2 := @parameter1: android.view.View;

        r10 := @parameter2: android.transition.TransitionValues;

        r3 := @parameter3: android.transition.TransitionValues;

        if r3 != null goto label1;

        return null;

     label1:
        $r4 = r3.<android.transition.TransitionValues: java.util.Map values>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>("android:slide:screenPosition");

        r11 = (int[]) $r5;

        f0 = virtualinvoke r2.<android.view.View: float getTranslationX()>();

        f1 = virtualinvoke r2.<android.view.View: float getTranslationY()>();

        $r6 = r0.<android.transition.Slide: android.transition.Slide$CalculateSlide mSlideCalculator>;

        $f4 = r0.<android.transition.Slide: float mSlideFraction>;

        f2 = interfaceinvoke $r6.<android.transition.Slide$CalculateSlide: float getGoneX(android.view.ViewGroup,android.view.View,float)>(r1, r2, $f4);

        $r7 = r0.<android.transition.Slide: android.transition.Slide$CalculateSlide mSlideCalculator>;

        $f5 = r0.<android.transition.Slide: float mSlideFraction>;

        f3 = interfaceinvoke $r7.<android.transition.Slide$CalculateSlide: float getGoneY(android.view.ViewGroup,android.view.View,float)>(r1, r2, $f5);

        $i1 = r11[0];

        $i0 = r11[1];

        $r8 = <android.transition.Slide: android.animation.TimeInterpolator sDecelerate>;

        $r9 = staticinvoke <android.transition.TranslationAnimationCreator: android.animation.Animator createAnimation(android.view.View,android.transition.TransitionValues,int,int,float,float,float,float,android.animation.TimeInterpolator,android.transition.Transition)>(r2, r3, $i1, $i0, f2, f3, f0, f1, $r8, r0);

        return $r9;
    }

    public android.animation.Animator onDisappear(android.view.ViewGroup, android.view.View, android.transition.TransitionValues, android.transition.TransitionValues)
    {
        android.transition.Slide r0;
        android.view.ViewGroup r1;
        android.view.View r2;
        android.transition.TransitionValues r3, r10;
        float f0, f1, f2, f3, $f4, $f5;
        java.util.Map $r4;
        java.lang.Object $r5;
        android.transition.Slide$CalculateSlide $r6, $r7;
        android.animation.TimeInterpolator $r8;
        int $i0, $i1;
        android.animation.Animator $r9;
        int[] r11;

        r0 := @this: android.transition.Slide;

        r1 := @parameter0: android.view.ViewGroup;

        r2 := @parameter1: android.view.View;

        r3 := @parameter2: android.transition.TransitionValues;

        r10 := @parameter3: android.transition.TransitionValues;

        if r3 != null goto label1;

        return null;

     label1:
        $r4 = r3.<android.transition.TransitionValues: java.util.Map values>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>("android:slide:screenPosition");

        r11 = (int[]) $r5;

        f0 = virtualinvoke r2.<android.view.View: float getTranslationX()>();

        f1 = virtualinvoke r2.<android.view.View: float getTranslationY()>();

        $r6 = r0.<android.transition.Slide: android.transition.Slide$CalculateSlide mSlideCalculator>;

        $f4 = r0.<android.transition.Slide: float mSlideFraction>;

        f2 = interfaceinvoke $r6.<android.transition.Slide$CalculateSlide: float getGoneX(android.view.ViewGroup,android.view.View,float)>(r1, r2, $f4);

        $r7 = r0.<android.transition.Slide: android.transition.Slide$CalculateSlide mSlideCalculator>;

        $f5 = r0.<android.transition.Slide: float mSlideFraction>;

        f3 = interfaceinvoke $r7.<android.transition.Slide$CalculateSlide: float getGoneY(android.view.ViewGroup,android.view.View,float)>(r1, r2, $f5);

        $i1 = r11[0];

        $i0 = r11[1];

        $r8 = <android.transition.Slide: android.animation.TimeInterpolator sAccelerate>;

        $r9 = staticinvoke <android.transition.TranslationAnimationCreator: android.animation.Animator createAnimation(android.view.View,android.transition.TransitionValues,int,int,float,float,float,float,android.animation.TimeInterpolator,android.transition.Transition)>(r2, r3, $i1, $i0, f0, f1, f2, f3, $r8, r0);

        return $r9;
    }

    public void setSlideEdge(int)
    {
        android.transition.Slide r0;
        int i0;
        android.transition.Slide$CalculateSlide $r2, $r3, $r4, $r5, $r6, $r8;
        java.lang.IllegalArgumentException $r7;
        android.transition.SidePropagation $r9;

        r0 := @this: android.transition.Slide;

        i0 := @parameter0: int;

        if i0 == 3 goto label6;

        if i0 == 5 goto label5;

        if i0 == 48 goto label4;

        if i0 == 80 goto label3;

        if i0 == 8388611 goto label2;

        if i0 != 8388613 goto label1;

        $r8 = <android.transition.Slide: android.transition.Slide$CalculateSlide sCalculateEnd>;

        r0.<android.transition.Slide: android.transition.Slide$CalculateSlide mSlideCalculator> = $r8;

        goto label7;

     label1:
        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Invalid slide direction");

        throw $r7;

     label2:
        $r6 = <android.transition.Slide: android.transition.Slide$CalculateSlide sCalculateStart>;

        r0.<android.transition.Slide: android.transition.Slide$CalculateSlide mSlideCalculator> = $r6;

        goto label7;

     label3:
        $r5 = <android.transition.Slide: android.transition.Slide$CalculateSlide sCalculateBottom>;

        r0.<android.transition.Slide: android.transition.Slide$CalculateSlide mSlideCalculator> = $r5;

        goto label7;

     label4:
        $r4 = <android.transition.Slide: android.transition.Slide$CalculateSlide sCalculateTop>;

        r0.<android.transition.Slide: android.transition.Slide$CalculateSlide mSlideCalculator> = $r4;

        goto label7;

     label5:
        $r3 = <android.transition.Slide: android.transition.Slide$CalculateSlide sCalculateRight>;

        r0.<android.transition.Slide: android.transition.Slide$CalculateSlide mSlideCalculator> = $r3;

        goto label7;

     label6:
        $r2 = <android.transition.Slide: android.transition.Slide$CalculateSlide sCalculateLeft>;

        r0.<android.transition.Slide: android.transition.Slide$CalculateSlide mSlideCalculator> = $r2;

     label7:
        r0.<android.transition.Slide: int mSlideEdge> = i0;

        $r9 = new android.transition.SidePropagation;

        specialinvoke $r9.<android.transition.SidePropagation: void <init>()>();

        virtualinvoke $r9.<android.transition.SidePropagation: void setSide(int)>(i0);

        virtualinvoke r0.<android.transition.Slide: void setPropagation(android.transition.TransitionPropagation)>($r9);

        return;
    }

    public void setSlideFraction(float)
    {
        android.transition.Slide r0;
        float f0;

        r0 := @this: android.transition.Slide;

        f0 := @parameter0: float;

        r0.<android.transition.Slide: float mSlideFraction> = f0;

        return;
    }
}
