public final class android.util.ArrayMap extends java.lang.Object implements java.util.Map
{
    private static final int BASE_SIZE;
    private static final int CACHE_SIZE;
    private static final boolean CONCURRENT_MODIFICATION_EXCEPTIONS;
    private static final boolean DEBUG;
    public static final android.util.ArrayMap EMPTY;
    static final int[] EMPTY_IMMUTABLE_INTS;
    private static final java.lang.String TAG;
    static java.lang.Object[] mBaseCache;
    static int mBaseCacheSize;
    static java.lang.Object[] mTwiceBaseCache;
    static int mTwiceBaseCacheSize;
    private static final java.lang.Object sBaseCacheLock;
    private static final java.lang.Object sTwiceBaseCacheLock;
    java.lang.Object[] mArray;
    private android.util.MapCollections mCollections;
    int[] mHashes;
    private final boolean mIdentityHashCode;
    int mSize;

    static void <clinit>()
    {
        int[] $r0;
        android.util.ArrayMap $r1;
        java.lang.Object $r2, $r3;

        <android.util.ArrayMap: java.lang.String TAG> = "ArrayMap";

        <android.util.ArrayMap: boolean DEBUG> = 0;

        <android.util.ArrayMap: boolean CONCURRENT_MODIFICATION_EXCEPTIONS> = 1;

        <android.util.ArrayMap: int CACHE_SIZE> = 10;

        <android.util.ArrayMap: int BASE_SIZE> = 4;

        $r0 = newarray (int)[0];

        <android.util.ArrayMap: int[] EMPTY_IMMUTABLE_INTS> = $r0;

        $r1 = new android.util.ArrayMap;

        specialinvoke $r1.<android.util.ArrayMap: void <init>(int)>(-1);

        <android.util.ArrayMap: android.util.ArrayMap EMPTY> = $r1;

        $r2 = new java.lang.Object;

        specialinvoke $r2.<java.lang.Object: void <init>()>();

        <android.util.ArrayMap: java.lang.Object sBaseCacheLock> = $r2;

        $r3 = new java.lang.Object;

        specialinvoke $r3.<java.lang.Object: void <init>()>();

        <android.util.ArrayMap: java.lang.Object sTwiceBaseCacheLock> = $r3;

        return;
    }

    public void <init>()
    {
        android.util.ArrayMap r0;

        r0 := @this: android.util.ArrayMap;

        specialinvoke r0.<android.util.ArrayMap: void <init>(int,boolean)>(0, 0);

        return;
    }

    public void <init>(int)
    {
        android.util.ArrayMap r0;
        int i0;

        r0 := @this: android.util.ArrayMap;

        i0 := @parameter0: int;

        specialinvoke r0.<android.util.ArrayMap: void <init>(int,boolean)>(i0, 0);

        return;
    }

    public void <init>(int, boolean)
    {
        android.util.ArrayMap r0;
        int i0;
        boolean z0;
        int[] $r1, $r3;
        java.lang.Object[] $r2, $r4;

        r0 := @this: android.util.ArrayMap;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.util.ArrayMap: boolean mIdentityHashCode> = z0;

        if i0 >= 0 goto label1;

        $r3 = <android.util.ArrayMap: int[] EMPTY_IMMUTABLE_INTS>;

        r0.<android.util.ArrayMap: int[] mHashes> = $r3;

        $r4 = <libcore.util.EmptyArray: java.lang.Object[] OBJECT>;

        r0.<android.util.ArrayMap: java.lang.Object[] mArray> = $r4;

        goto label3;

     label1:
        if i0 != 0 goto label2;

        $r1 = <libcore.util.EmptyArray: int[] INT>;

        r0.<android.util.ArrayMap: int[] mHashes> = $r1;

        $r2 = <libcore.util.EmptyArray: java.lang.Object[] OBJECT>;

        r0.<android.util.ArrayMap: java.lang.Object[] mArray> = $r2;

        goto label3;

     label2:
        specialinvoke r0.<android.util.ArrayMap: void allocArrays(int)>(i0);

     label3:
        r0.<android.util.ArrayMap: int mSize> = 0;

        return;
    }

    public void <init>(android.util.ArrayMap)
    {
        android.util.ArrayMap r0, r1;

        r0 := @this: android.util.ArrayMap;

        r1 := @parameter0: android.util.ArrayMap;

        specialinvoke r0.<android.util.ArrayMap: void <init>()>();

        if r1 == null goto label1;

        virtualinvoke r0.<android.util.ArrayMap: void putAll(android.util.ArrayMap)>(r1);

     label1:
        return;
    }

    private void allocArrays(int)
    {
        android.util.ArrayMap r0;
        int i0, $i2, $i3, $i5, $i6, $i7;
        int[] $r1, $r2, r32, r38, $r42;
        java.lang.UnsupportedOperationException $r3;
        java.lang.Object[] $r4, $r6, $r15, $r17, r31, r37, $r43;
        java.lang.Object $r5, $r7, $r9, $r12, $r16, $r18, $r20, $r23, r30, r36;
        java.lang.String $r14, $r25;
        java.lang.Throwable $r26, $r29;
        java.lang.ClassCastException $r27, $r28;
        java.lang.StringBuilder r34, r40;

        r0 := @this: android.util.ArrayMap;

        i0 := @parameter0: int;

        $r2 = r0.<android.util.ArrayMap: int[] mHashes>;

        $r1 = <android.util.ArrayMap: int[] EMPTY_IMMUTABLE_INTS>;

        if $r2 == $r1 goto label31;

        if i0 != 8 goto label15;

        r30 = <android.util.ArrayMap: java.lang.Object sTwiceBaseCacheLock>;

        entermonitor r30;

     label01:
        $r15 = <android.util.ArrayMap: java.lang.Object[] mTwiceBaseCache>;

        if $r15 == null goto label10;

        r31 = <android.util.ArrayMap: java.lang.Object[] mTwiceBaseCache>;

        r0.<android.util.ArrayMap: java.lang.Object[] mArray> = r31;

     label02:
        $r16 = r31[0];

        $r17 = (java.lang.Object[]) $r16;

        <android.util.ArrayMap: java.lang.Object[] mTwiceBaseCache> = $r17;

        $r18 = r31[1];

        r32 = (int[]) $r18;

        r0.<android.util.ArrayMap: int[] mHashes> = r32;

     label03:
        if r32 == null goto label07;

        r31[1] = null;

        r31[0] = null;

     label04:
        $i5 = <android.util.ArrayMap: int mTwiceBaseCacheSize>;

        $i6 = $i5 - 1;

        <android.util.ArrayMap: int mTwiceBaseCacheSize> = $i6;

     label05:
        exitmonitor r30;

     label06:
        return;

     label07:
        goto label09;

     label08:
        $r28 := @caughtexception;

     label09:
        r34 = new java.lang.StringBuilder;

        specialinvoke r34.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Found corrupt ArrayMap cache: [0]=");

        $r20 = r31[0];

        virtualinvoke r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r20);

        virtualinvoke r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" [1]=");

        $r23 = r31[1];

        virtualinvoke r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r23);

        $r25 = virtualinvoke r34.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>("ArrayMap", $r25);

        <android.util.ArrayMap: java.lang.Object[] mTwiceBaseCache> = null;

        <android.util.ArrayMap: int mTwiceBaseCacheSize> = 0;

     label10:
        exitmonitor r30;

     label11:
        goto label30;

     label12:
        $r29 := @caughtexception;

     label13:
        exitmonitor r30;

     label14:
        throw $r29;

     label15:
        if i0 != 4 goto label30;

        r36 = <android.util.ArrayMap: java.lang.Object sBaseCacheLock>;

        entermonitor r36;

     label16:
        $r4 = <android.util.ArrayMap: java.lang.Object[] mBaseCache>;

        if $r4 == null goto label25;

        r37 = <android.util.ArrayMap: java.lang.Object[] mBaseCache>;

        r0.<android.util.ArrayMap: java.lang.Object[] mArray> = r37;

     label17:
        $r5 = r37[0];

        $r6 = (java.lang.Object[]) $r5;

        <android.util.ArrayMap: java.lang.Object[] mBaseCache> = $r6;

        $r7 = r37[1];

        r38 = (int[]) $r7;

        r0.<android.util.ArrayMap: int[] mHashes> = r38;

     label18:
        if r38 == null goto label22;

        r37[1] = null;

        r37[0] = null;

     label19:
        $i2 = <android.util.ArrayMap: int mBaseCacheSize>;

        $i3 = $i2 - 1;

        <android.util.ArrayMap: int mBaseCacheSize> = $i3;

     label20:
        exitmonitor r36;

     label21:
        return;

     label22:
        goto label24;

     label23:
        $r27 := @caughtexception;

     label24:
        r40 = new java.lang.StringBuilder;

        specialinvoke r40.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Found corrupt ArrayMap cache: [0]=");

        $r9 = r37[0];

        virtualinvoke r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        virtualinvoke r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" [1]=");

        $r12 = r37[1];

        virtualinvoke r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r12);

        $r14 = virtualinvoke r40.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>("ArrayMap", $r14);

        <android.util.ArrayMap: java.lang.Object[] mBaseCache> = null;

        <android.util.ArrayMap: int mBaseCacheSize> = 0;

     label25:
        exitmonitor r36;

     label26:
        goto label30;

     label27:
        $r26 := @caughtexception;

     label28:
        exitmonitor r36;

     label29:
        throw $r26;

     label30:
        $r42 = newarray (int)[i0];

        r0.<android.util.ArrayMap: int[] mHashes> = $r42;

        $i7 = i0 << 1;

        $r43 = newarray (java.lang.Object)[$i7];

        r0.<android.util.ArrayMap: java.lang.Object[] mArray> = $r43;

        return;

     label31:
        $r3 = new java.lang.UnsupportedOperationException;

        specialinvoke $r3.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("ArrayMap is immutable");

        throw $r3;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.ClassCastException from label02 to label03 with label08;
        catch java.lang.Throwable from label02 to label03 with label12;
        catch java.lang.ClassCastException from label04 to label05 with label08;
        catch java.lang.Throwable from label04 to label05 with label12;
        catch java.lang.Throwable from label05 to label06 with label12;
        catch java.lang.Throwable from label09 to label10 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
        catch java.lang.Throwable from label16 to label17 with label27;
        catch java.lang.ClassCastException from label17 to label18 with label23;
        catch java.lang.Throwable from label17 to label18 with label27;
        catch java.lang.ClassCastException from label19 to label20 with label23;
        catch java.lang.Throwable from label19 to label20 with label27;
        catch java.lang.Throwable from label20 to label21 with label27;
        catch java.lang.Throwable from label24 to label25 with label27;
        catch java.lang.Throwable from label25 to label26 with label27;
        catch java.lang.Throwable from label28 to label29 with label27;
    }

    private static int binarySearchHashes(int[], int, int)
    {
        int i0, i1, i2;
        java.lang.ArrayIndexOutOfBoundsException $r0;
        java.util.ConcurrentModificationException $r1;
        int[] r2;

        r2 := @parameter0: int[];

        i1 := @parameter1: int;

        i0 := @parameter2: int;

     label1:
        i2 = staticinvoke <android.util.ContainerHelpers: int binarySearch(int[],int,int)>(r2, i1, i0);

     label2:
        return i2;

     label3:
        $r0 := @caughtexception;

        $r1 = new java.util.ConcurrentModificationException;

        specialinvoke $r1.<java.util.ConcurrentModificationException: void <init>()>();

        throw $r1;

        catch java.lang.ArrayIndexOutOfBoundsException from label1 to label2 with label3;
    }

    private static void freeArrays(int[], java.lang.Object[], int)
    {
        java.lang.Object[] r0, $r1, $r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10, i11, i12;
        java.lang.Throwable $r3, $r4;
        int[] r5;
        java.lang.Object r6, r8;

        r5 := @parameter0: int[];

        r0 := @parameter1: java.lang.Object[];

        i10 := @parameter2: int;

        $i0 = lengthof r5;

        if $i0 != 8 goto label10;

        r6 = <android.util.ArrayMap: java.lang.Object sTwiceBaseCacheLock>;

        entermonitor r6;

     label01:
        $i6 = <android.util.ArrayMap: int mTwiceBaseCacheSize>;

        if $i6 >= 10 goto label05;

        $r2 = <android.util.ArrayMap: java.lang.Object[] mTwiceBaseCache>;

        r0[0] = $r2;

     label02:
        r0[1] = r5;

        $i7 = i10 << 1;

        i11 = $i7 - 1;

     label03:
        if i11 < 2 goto label04;

        r0[i11] = null;

        i11 = i11 + -1;

        goto label03;

     label04:
        <android.util.ArrayMap: java.lang.Object[] mTwiceBaseCache> = r0;

        $i8 = <android.util.ArrayMap: int mTwiceBaseCacheSize>;

        $i9 = $i8 + 1;

        <android.util.ArrayMap: int mTwiceBaseCacheSize> = $i9;

     label05:
        exitmonitor r6;

     label06:
        goto label20;

     label07:
        $r4 := @caughtexception;

     label08:
        exitmonitor r6;

     label09:
        throw $r4;

     label10:
        $i1 = lengthof r5;

        if $i1 != 4 goto label20;

        r8 = <android.util.ArrayMap: java.lang.Object sBaseCacheLock>;

        entermonitor r8;

     label11:
        $i2 = <android.util.ArrayMap: int mBaseCacheSize>;

        if $i2 >= 10 goto label15;

        $r1 = <android.util.ArrayMap: java.lang.Object[] mBaseCache>;

        r0[0] = $r1;

     label12:
        r0[1] = r5;

        $i3 = i10 << 1;

        i12 = $i3 - 1;

     label13:
        if i12 < 2 goto label14;

        r0[i12] = null;

        i12 = i12 + -1;

        goto label13;

     label14:
        <android.util.ArrayMap: java.lang.Object[] mBaseCache> = r0;

        $i4 = <android.util.ArrayMap: int mBaseCacheSize>;

        $i5 = $i4 + 1;

        <android.util.ArrayMap: int mBaseCacheSize> = $i5;

     label15:
        exitmonitor r8;

     label16:
        goto label20;

     label17:
        $r3 := @caughtexception;

     label18:
        exitmonitor r8;

     label19:
        throw $r3;

     label20:
        return;

        catch java.lang.Throwable from label01 to label02 with label07;
        catch java.lang.Throwable from label04 to label05 with label07;
        catch java.lang.Throwable from label05 to label06 with label07;
        catch java.lang.Throwable from label08 to label09 with label07;
        catch java.lang.Throwable from label11 to label12 with label17;
        catch java.lang.Throwable from label14 to label15 with label17;
        catch java.lang.Throwable from label15 to label16 with label17;
        catch java.lang.Throwable from label18 to label19 with label17;
    }

    private android.util.MapCollections getCollection()
    {
        android.util.ArrayMap r0;
        android.util.MapCollections $r1, $r2;
        android.util.ArrayMap$1 $r3;

        r0 := @this: android.util.ArrayMap;

        $r1 = r0.<android.util.ArrayMap: android.util.MapCollections mCollections>;

        if $r1 != null goto label1;

        $r3 = new android.util.ArrayMap$1;

        specialinvoke $r3.<android.util.ArrayMap$1: void <init>(android.util.ArrayMap)>(r0);

        r0.<android.util.ArrayMap: android.util.MapCollections mCollections> = $r3;

     label1:
        $r2 = r0.<android.util.ArrayMap: android.util.MapCollections mCollections>;

        return $r2;
    }

    public void append(java.lang.Object, java.lang.Object)
    {
        android.util.ArrayMap r0;
        java.lang.Object r1, r2;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, i8, $i9, i10;
        boolean $z0;
        java.lang.IllegalStateException $r4;
        int[] $r5, $r12, r20;
        java.lang.RuntimeException $r6;
        java.lang.StringBuilder $r8;
        java.lang.String $r18;
        java.lang.Object[] r22;

        r0 := @this: android.util.ArrayMap;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        i0 = r0.<android.util.ArrayMap: int mSize>;

        if r1 != null goto label1;

        i8 = 0;

        goto label3;

     label1:
        $z0 = r0.<android.util.ArrayMap: boolean mIdentityHashCode>;

        if $z0 == 0 goto label2;

        i8 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r1);

        goto label3;

     label2:
        i8 = virtualinvoke r1.<java.lang.Object: int hashCode()>();

     label3:
        r20 = r0.<android.util.ArrayMap: int[] mHashes>;

        $i9 = lengthof r20;

        if i0 >= $i9 goto label5;

        if i0 <= 0 goto label4;

        $i3 = i0 - 1;

        $i4 = r20[$i3];

        if $i4 <= i8 goto label4;

        $r6 = new java.lang.RuntimeException;

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String)>("here");

        virtualinvoke $r6.<java.lang.RuntimeException: java.lang.Throwable fillInStackTrace()>();

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("New hash ");

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i8);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is before end of array hash ");

        $r12 = r0.<android.util.ArrayMap: int[] mHashes>;

        $i5 = i0 - 1;

        $i6 = $r12[$i5];

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at index ");

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" key ");

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r18 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ArrayMap", $r18, $r6);

        virtualinvoke r0.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return;

     label4:
        $i1 = i0 + 1;

        r0.<android.util.ArrayMap: int mSize> = $i1;

        $r5 = r0.<android.util.ArrayMap: int[] mHashes>;

        $r5[i0] = i8;

        i10 = i0 << 1;

        r22 = r0.<android.util.ArrayMap: java.lang.Object[] mArray>;

        r22[i10] = r1;

        $i2 = i10 + 1;

        r22[$i2] = r2;

        return;

     label5:
        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Array is full");

        throw $r4;
    }

    public void clear()
    {
        android.util.ArrayMap r0;
        int[] r1, $r4;
        java.lang.Object[] r2, $r5;
        int i0, $i1, $i2;
        java.util.ConcurrentModificationException $r3;

        r0 := @this: android.util.ArrayMap;

        $i1 = r0.<android.util.ArrayMap: int mSize>;

        if $i1 <= 0 goto label1;

        r1 = r0.<android.util.ArrayMap: int[] mHashes>;

        r2 = r0.<android.util.ArrayMap: java.lang.Object[] mArray>;

        i0 = r0.<android.util.ArrayMap: int mSize>;

        $r4 = <libcore.util.EmptyArray: int[] INT>;

        r0.<android.util.ArrayMap: int[] mHashes> = $r4;

        $r5 = <libcore.util.EmptyArray: java.lang.Object[] OBJECT>;

        r0.<android.util.ArrayMap: java.lang.Object[] mArray> = $r5;

        r0.<android.util.ArrayMap: int mSize> = 0;

        staticinvoke <android.util.ArrayMap: void freeArrays(int[],java.lang.Object[],int)>(r1, r2, i0);

     label1:
        $i2 = r0.<android.util.ArrayMap: int mSize>;

        if $i2 > 0 goto label2;

        return;

     label2:
        $r3 = new java.util.ConcurrentModificationException;

        specialinvoke $r3.<java.util.ConcurrentModificationException: void <init>()>();

        throw $r3;
    }

    public boolean containsAll(java.util.Collection)
    {
        android.util.ArrayMap r0;
        java.util.Collection r1;
        boolean $z0;

        r0 := @this: android.util.ArrayMap;

        r1 := @parameter0: java.util.Collection;

        $z0 = staticinvoke <android.util.MapCollections: boolean containsAllHelper(java.util.Map,java.util.Collection)>(r0, r1);

        return $z0;
    }

    public boolean containsKey(java.lang.Object)
    {
        android.util.ArrayMap r0;
        java.lang.Object r1;
        int $i0;
        boolean z0;

        r0 := @this: android.util.ArrayMap;

        r1 := @parameter0: java.lang.Object;

        $i0 = virtualinvoke r0.<android.util.ArrayMap: int indexOfKey(java.lang.Object)>(r1);

        if $i0 < 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public boolean containsValue(java.lang.Object)
    {
        android.util.ArrayMap r0;
        java.lang.Object r1;
        int $i0;
        boolean z0;

        r0 := @this: android.util.ArrayMap;

        r1 := @parameter0: java.lang.Object;

        $i0 = virtualinvoke r0.<android.util.ArrayMap: int indexOfValue(java.lang.Object)>(r1);

        if $i0 < 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public void ensureCapacity(int)
    {
        android.util.ArrayMap r0;
        int i0, i1, $i2, $i3, $i4, $i5;
        int[] r1, $r3, $r5;
        java.lang.Object[] r2, $r6;
        java.util.ConcurrentModificationException $r4;

        r0 := @this: android.util.ArrayMap;

        i0 := @parameter0: int;

        i1 = r0.<android.util.ArrayMap: int mSize>;

        $r3 = r0.<android.util.ArrayMap: int[] mHashes>;

        $i2 = lengthof $r3;

        if $i2 >= i0 goto label2;

        r1 = r0.<android.util.ArrayMap: int[] mHashes>;

        r2 = r0.<android.util.ArrayMap: java.lang.Object[] mArray>;

        specialinvoke r0.<android.util.ArrayMap: void allocArrays(int)>(i0);

        $i3 = r0.<android.util.ArrayMap: int mSize>;

        if $i3 <= 0 goto label1;

        $r5 = r0.<android.util.ArrayMap: int[] mHashes>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, $r5, 0, i1);

        $r6 = r0.<android.util.ArrayMap: java.lang.Object[] mArray>;

        $i4 = i1 << 1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, 0, $r6, 0, $i4);

     label1:
        staticinvoke <android.util.ArrayMap: void freeArrays(int[],java.lang.Object[],int)>(r1, r2, i1);

     label2:
        $i5 = r0.<android.util.ArrayMap: int mSize>;

        if $i5 != i1 goto label3;

        return;

     label3:
        $r4 = new java.util.ConcurrentModificationException;

        specialinvoke $r4.<java.util.ConcurrentModificationException: void <init>()>();

        throw $r4;
    }

    public java.util.Set entrySet()
    {
        android.util.ArrayMap r0;
        android.util.MapCollections $r1;
        java.util.Set $r2;

        r0 := @this: android.util.ArrayMap;

        $r1 = specialinvoke r0.<android.util.ArrayMap: android.util.MapCollections getCollection()>();

        $r2 = virtualinvoke $r1.<android.util.MapCollections: java.util.Set getEntrySet()>();

        return $r2;
    }

    public boolean equals(java.lang.Object)
    {
        android.util.ArrayMap r0;
        java.util.Map r1;
        java.lang.Object r2, r3, r6, r7;
        boolean z0, $z1, $z2;
        int $i0, $i1, $i2, i3;
        java.lang.NullPointerException $r4;
        java.lang.ClassCastException $r5;

        r0 := @this: android.util.ArrayMap;

        r6 := @parameter0: java.lang.Object;

        if r0 != r6 goto label01;

        return 1;

     label01:
        $z1 = r6 instanceof java.util.Map;

        if $z1 == 0 goto label13;

        r1 = (java.util.Map) r6;

        $i0 = virtualinvoke r0.<android.util.ArrayMap: int size()>();

        $i1 = interfaceinvoke r1.<java.util.Map: int size()>();

        if $i0 == $i1 goto label02;

        return 0;

     label02:
        i3 = 0;

     label03:
        $i2 = r0.<android.util.ArrayMap: int mSize>;

        if i3 >= $i2 goto label10;

        r2 = virtualinvoke r0.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i3);

        r7 = virtualinvoke r0.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i3);

        r3 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2);

     label04:
        if r7 != null goto label07;

        if r3 != null goto label06;

     label05:
        $z2 = interfaceinvoke r1.<java.util.Map: boolean containsKey(java.lang.Object)>(r2);

        if $z2 != 0 goto label09;

     label06:
        return 0;

     label07:
        z0 = virtualinvoke r7.<java.lang.Object: boolean equals(java.lang.Object)>(r3);

     label08:
        if z0 != 0 goto label09;

        return 0;

     label09:
        i3 = i3 + 1;

        goto label03;

     label10:
        return 1;

     label11:
        $r5 := @caughtexception;

        return 0;

     label12:
        $r4 := @caughtexception;

        return 0;

     label13:
        return 0;

        catch java.lang.NullPointerException from label03 to label04 with label12;
        catch java.lang.ClassCastException from label03 to label04 with label11;
        catch java.lang.NullPointerException from label05 to label06 with label12;
        catch java.lang.ClassCastException from label05 to label06 with label11;
        catch java.lang.NullPointerException from label07 to label08 with label12;
        catch java.lang.ClassCastException from label07 to label08 with label11;
    }

    public void erase()
    {
        android.util.ArrayMap r0;
        int i0, $i1, i2;
        java.lang.Object[] r1;

        r0 := @this: android.util.ArrayMap;

        i0 = r0.<android.util.ArrayMap: int mSize>;

        if i0 <= 0 goto label3;

        r1 = r0.<android.util.ArrayMap: java.lang.Object[] mArray>;

        i2 = 0;

     label1:
        $i1 = i0 << 1;

        if i2 >= $i1 goto label2;

        r1[i2] = null;

        i2 = i2 + 1;

        goto label1;

     label2:
        r0.<android.util.ArrayMap: int mSize> = 0;

     label3:
        return;
    }

    public java.lang.Object get(java.lang.Object)
    {
        android.util.ArrayMap r0;
        int i0, $i1, $i2;
        java.lang.Object[] $r1;
        java.lang.Object r2, r3;

        r0 := @this: android.util.ArrayMap;

        r2 := @parameter0: java.lang.Object;

        i0 = virtualinvoke r0.<android.util.ArrayMap: int indexOfKey(java.lang.Object)>(r2);

        if i0 < 0 goto label1;

        $r1 = r0.<android.util.ArrayMap: java.lang.Object[] mArray>;

        $i1 = i0 << 1;

        $i2 = $i1 + 1;

        r3 = $r1[$i2];

        goto label2;

     label1:
        r3 = null;

     label2:
        return r3;
    }

    public int hashCode()
    {
        android.util.ArrayMap r0;
        int[] r1;
        java.lang.Object[] r2;
        int i0, i1, $i2, i3, i4, i5, i6;
        java.lang.Object r3;

        r0 := @this: android.util.ArrayMap;

        r1 = r0.<android.util.ArrayMap: int[] mHashes>;

        r2 = r0.<android.util.ArrayMap: java.lang.Object[] mArray>;

        i3 = 0;

        i4 = 0;

        i5 = 1;

        i0 = r0.<android.util.ArrayMap: int mSize>;

     label1:
        if i4 >= i0 goto label4;

        r3 = r2[i5];

        i1 = r1[i4];

        if r3 != null goto label2;

        i6 = 0;

        goto label3;

     label2:
        i6 = virtualinvoke r3.<java.lang.Object: int hashCode()>();

     label3:
        $i2 = i1 ^ i6;

        i3 = i3 + $i2;

        i4 = i4 + 1;

        i5 = i5 + 2;

        goto label1;

     label4:
        return i3;
    }

    int indexOf(java.lang.Object, int)
    {
        android.util.ArrayMap r0;
        java.lang.Object r1, $r4, $r7, $r10;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, i7, i8, i9;
        int[] $r2, $r5, $r8;
        java.lang.Object[] $r3, $r6, $r9;
        boolean $z0, $z1, $z2;

        r0 := @this: android.util.ArrayMap;

        r1 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        i1 = r0.<android.util.ArrayMap: int mSize>;

        if i1 != 0 goto label1;

        return -1;

     label1:
        $r2 = r0.<android.util.ArrayMap: int[] mHashes>;

        i7 = staticinvoke <android.util.ArrayMap: int binarySearchHashes(int[],int,int)>($r2, i1, i0);

        if i7 >= 0 goto label2;

        return i7;

     label2:
        $r3 = r0.<android.util.ArrayMap: java.lang.Object[] mArray>;

        $i2 = i7 << 1;

        $r4 = $r3[$i2];

        $z0 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label3;

        return i7;

     label3:
        i8 = i7 + 1;

     label4:
        if i8 >= i1 goto label6;

        $r8 = r0.<android.util.ArrayMap: int[] mHashes>;

        $i5 = $r8[i8];

        if $i5 != i0 goto label6;

        $r9 = r0.<android.util.ArrayMap: java.lang.Object[] mArray>;

        $i6 = i8 << 1;

        $r10 = $r9[$i6];

        $z2 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>($r10);

        if $z2 == 0 goto label5;

        return i8;

     label5:
        i8 = i8 + 1;

        goto label4;

     label6:
        i9 = i7 + -1;

     label7:
        if i9 < 0 goto label9;

        $r5 = r0.<android.util.ArrayMap: int[] mHashes>;

        $i3 = $r5[i9];

        if $i3 != i0 goto label9;

        $r6 = r0.<android.util.ArrayMap: java.lang.Object[] mArray>;

        $i4 = i9 << 1;

        $r7 = $r6[$i4];

        $z1 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>($r7);

        if $z1 == 0 goto label8;

        return i9;

     label8:
        i9 = i9 + -1;

        goto label7;

     label9:
        return i8;
    }

    public int indexOfKey(java.lang.Object)
    {
        android.util.ArrayMap r0;
        java.lang.Object r1;
        boolean $z0;
        int i0, i1;

        r0 := @this: android.util.ArrayMap;

        r1 := @parameter0: java.lang.Object;

        if r1 != null goto label1;

        i0 = virtualinvoke r0.<android.util.ArrayMap: int indexOfNull()>();

        goto label4;

     label1:
        $z0 = r0.<android.util.ArrayMap: boolean mIdentityHashCode>;

        if $z0 == 0 goto label2;

        i1 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r1);

        goto label3;

     label2:
        i1 = virtualinvoke r1.<java.lang.Object: int hashCode()>();

     label3:
        i0 = virtualinvoke r0.<android.util.ArrayMap: int indexOf(java.lang.Object,int)>(r1, i1);

     label4:
        return i0;
    }

    int indexOfNull()
    {
        android.util.ArrayMap r0;
        int i0, $i1, $i2, $i3, $i4, $i5, i6, i7, i8;
        int[] $r1, $r4, $r7;
        java.lang.Object[] $r2, $r5, $r8;
        java.lang.Object $r3, $r6, $r9;

        r0 := @this: android.util.ArrayMap;

        i6 = r0.<android.util.ArrayMap: int mSize>;

        if i6 != 0 goto label1;

        return -1;

     label1:
        $r1 = r0.<android.util.ArrayMap: int[] mHashes>;

        i0 = staticinvoke <android.util.ArrayMap: int binarySearchHashes(int[],int,int)>($r1, i6, 0);

        if i0 >= 0 goto label2;

        return i0;

     label2:
        $r2 = r0.<android.util.ArrayMap: java.lang.Object[] mArray>;

        $i1 = i0 << 1;

        $r3 = $r2[$i1];

        if $r3 != null goto label3;

        return i0;

     label3:
        i7 = i0 + 1;

     label4:
        if i7 >= i6 goto label6;

        $r7 = r0.<android.util.ArrayMap: int[] mHashes>;

        $i4 = $r7[i7];

        if $i4 != 0 goto label6;

        $r8 = r0.<android.util.ArrayMap: java.lang.Object[] mArray>;

        $i5 = i7 << 1;

        $r9 = $r8[$i5];

        if $r9 != null goto label5;

        return i7;

     label5:
        i7 = i7 + 1;

        goto label4;

     label6:
        i8 = i0 - 1;

     label7:
        if i8 < 0 goto label9;

        $r4 = r0.<android.util.ArrayMap: int[] mHashes>;

        $i2 = $r4[i8];

        if $i2 != 0 goto label9;

        $r5 = r0.<android.util.ArrayMap: java.lang.Object[] mArray>;

        $i3 = i8 << 1;

        $r6 = $r5[$i3];

        if $r6 != null goto label8;

        return i8;

     label8:
        i8 = i8 + -1;

        goto label7;

     label9:
        return i7;
    }

    public int indexOfValue(java.lang.Object)
    {
        android.util.ArrayMap r0;
        java.lang.Object r1, $r3, $r4;
        int i0, $i1, $i2, $i3, i4, i5;
        java.lang.Object[] r2;
        boolean $z0;

        r0 := @this: android.util.ArrayMap;

        r1 := @parameter0: java.lang.Object;

        $i1 = r0.<android.util.ArrayMap: int mSize>;

        i0 = $i1 * 2;

        r2 = r0.<android.util.ArrayMap: java.lang.Object[] mArray>;

        if r1 != null goto label4;

        i4 = 1;

     label1:
        if i4 >= i0 goto label3;

        $r4 = r2[i4];

        if $r4 != null goto label2;

        $i3 = i4 >> 1;

        return $i3;

     label2:
        i4 = i4 + 2;

        goto label1;

     label3:
        goto label7;

     label4:
        i5 = 1;

     label5:
        if i5 >= i0 goto label7;

        $r3 = r2[i5];

        $z0 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label6;

        $i2 = i5 >> 1;

        return $i2;

     label6:
        i5 = i5 + 2;

        goto label5;

     label7:
        return -1;
    }

    public boolean isEmpty()
    {
        android.util.ArrayMap r0;
        int $i0;
        boolean z0;

        r0 := @this: android.util.ArrayMap;

        $i0 = r0.<android.util.ArrayMap: int mSize>;

        if $i0 > 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public java.lang.Object keyAt(int)
    {
        android.util.ArrayMap r0;
        int i0, $i1, $i2;
        java.lang.Object[] $r1;
        java.lang.Object $r2;
        boolean $z0;
        java.lang.ArrayIndexOutOfBoundsException $r3;

        r0 := @this: android.util.ArrayMap;

        i0 := @parameter0: int;

        $i1 = r0.<android.util.ArrayMap: int mSize>;

        if i0 < $i1 goto label2;

        $z0 = <android.util.UtilConfig: boolean sThrowExceptionForUpperArrayOutOfBounds>;

        if $z0 != 0 goto label1;

        goto label2;

     label1:
        $r3 = new java.lang.ArrayIndexOutOfBoundsException;

        specialinvoke $r3.<java.lang.ArrayIndexOutOfBoundsException: void <init>(int)>(i0);

        throw $r3;

     label2:
        $r1 = r0.<android.util.ArrayMap: java.lang.Object[] mArray>;

        $i2 = i0 << 1;

        $r2 = $r1[$i2];

        return $r2;
    }

    public java.util.Set keySet()
    {
        android.util.ArrayMap r0;
        android.util.MapCollections $r1;
        java.util.Set $r2;

        r0 := @this: android.util.ArrayMap;

        $r1 = specialinvoke r0.<android.util.ArrayMap: android.util.MapCollections getCollection()>();

        $r2 = virtualinvoke $r1.<android.util.MapCollections: java.util.Set getKeySet()>();

        return $r2;
    }

    public java.lang.Object put(java.lang.Object, java.lang.Object)
    {
        android.util.ArrayMap r0;
        java.lang.Object r1, r8, r10;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, i20, i21, i22, i23, i24, i25, $i26, i27;
        int[] r2, r3, $r4, r12, r14;
        boolean $z0;
        java.util.ConcurrentModificationException $r5, $r6;
        java.lang.Object[] $r7, r9, r11, r13, r15;

        r0 := @this: android.util.ArrayMap;

        r8 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        i0 = r0.<android.util.ArrayMap: int mSize>;

        if r8 != null goto label01;

        i20 = 0;

        i21 = virtualinvoke r0.<android.util.ArrayMap: int indexOfNull()>();

        goto label04;

     label01:
        $z0 = r0.<android.util.ArrayMap: boolean mIdentityHashCode>;

        if $z0 == 0 goto label02;

        i22 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r8);

        goto label03;

     label02:
        i22 = virtualinvoke r8.<java.lang.Object: int hashCode()>();

     label03:
        i21 = virtualinvoke r0.<android.util.ArrayMap: int indexOf(java.lang.Object,int)>(r8, i22);

        i20 = i22;

     label04:
        if i21 < 0 goto label05;

        $i19 = i21 << 1;

        i23 = $i19 + 1;

        r9 = r0.<android.util.ArrayMap: java.lang.Object[] mArray>;

        r10 = r9[i23];

        r9[i23] = r1;

        return r10;

     label05:
        i24 = i21;

        $r4 = r0.<android.util.ArrayMap: int[] mHashes>;

        $i1 = lengthof $r4;

        if i0 < $i1 goto label10;

        i25 = 4;

        if i0 < 8 goto label06;

        $i18 = i0 >> 1;

        i25 = $i18 + i0;

        goto label07;

     label06:
        if i0 < 4 goto label07;

        i25 = 8;

     label07:
        r2 = r0.<android.util.ArrayMap: int[] mHashes>;

        r11 = r0.<android.util.ArrayMap: java.lang.Object[] mArray>;

        specialinvoke r0.<android.util.ArrayMap: void allocArrays(int)>(i25);

        $i26 = r0.<android.util.ArrayMap: int mSize>;

        if i0 != $i26 goto label09;

        r3 = r0.<android.util.ArrayMap: int[] mHashes>;

        $i15 = lengthof r3;

        if $i15 <= 0 goto label08;

        $i16 = lengthof r2;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, 0, r3, 0, $i16);

        $r7 = r0.<android.util.ArrayMap: java.lang.Object[] mArray>;

        $i17 = lengthof r11;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r11, 0, $r7, 0, $i17);

     label08:
        staticinvoke <android.util.ArrayMap: void freeArrays(int[],java.lang.Object[],int)>(r2, r11, i0);

        goto label10;

     label09:
        $r6 = new java.util.ConcurrentModificationException;

        specialinvoke $r6.<java.util.ConcurrentModificationException: void <init>()>();

        throw $r6;

     label10:
        if i24 >= i0 goto label11;

        r12 = r0.<android.util.ArrayMap: int[] mHashes>;

        $i8 = i24 + 1;

        $i7 = i0 - i24;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r12, i24, r12, $i8, $i7);

        r13 = r0.<android.util.ArrayMap: java.lang.Object[] mArray>;

        $i14 = i24 << 1;

        $i9 = i24 + 1;

        $i13 = $i9 << 1;

        $i10 = r0.<android.util.ArrayMap: int mSize>;

        $i11 = $i10 - i24;

        $i12 = $i11 << 1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r13, $i14, r13, $i13, $i12);

     label11:
        i27 = r0.<android.util.ArrayMap: int mSize>;

        if i0 != i27 goto label12;

        r14 = r0.<android.util.ArrayMap: int[] mHashes>;

        $i2 = lengthof r14;

        if i24 >= $i2 goto label12;

        r14[i24] = i20;

        r15 = r0.<android.util.ArrayMap: java.lang.Object[] mArray>;

        $i3 = i24 << 1;

        r15[$i3] = r8;

        $i4 = i24 << 1;

        $i5 = $i4 + 1;

        r15[$i5] = r1;

        $i6 = i27 + 1;

        r0.<android.util.ArrayMap: int mSize> = $i6;

        return null;

     label12:
        $r5 = new java.util.ConcurrentModificationException;

        specialinvoke $r5.<java.util.ConcurrentModificationException: void <init>()>();

        throw $r5;
    }

    public void putAll(android.util.ArrayMap)
    {
        android.util.ArrayMap r0, r1;
        int i0, $i1, $i2, $i3, $i4, i5;
        java.lang.Object $r2, $r3;
        int[] $r5, $r6;
        java.lang.Object[] $r7, $r8;

        r0 := @this: android.util.ArrayMap;

        r1 := @parameter0: android.util.ArrayMap;

        i0 = r1.<android.util.ArrayMap: int mSize>;

        $i1 = r0.<android.util.ArrayMap: int mSize>;

        $i2 = $i1 + i0;

        virtualinvoke r0.<android.util.ArrayMap: void ensureCapacity(int)>($i2);

        $i3 = r0.<android.util.ArrayMap: int mSize>;

        if $i3 != 0 goto label1;

        if i0 <= 0 goto label3;

        $r6 = r1.<android.util.ArrayMap: int[] mHashes>;

        $r5 = r0.<android.util.ArrayMap: int[] mHashes>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r6, 0, $r5, 0, i0);

        $r8 = r1.<android.util.ArrayMap: java.lang.Object[] mArray>;

        $r7 = r0.<android.util.ArrayMap: java.lang.Object[] mArray>;

        $i4 = i0 << 1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r8, 0, $r7, 0, $i4);

        r0.<android.util.ArrayMap: int mSize> = i0;

        goto label3;

     label1:
        i5 = 0;

     label2:
        if i5 >= i0 goto label3;

        $r2 = virtualinvoke r1.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i5);

        $r3 = virtualinvoke r1.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i5);

        virtualinvoke r0.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, $r3);

        i5 = i5 + 1;

        goto label2;

     label3:
        return;
    }

    public void putAll(java.util.Map)
    {
        android.util.ArrayMap r0;
        java.util.Map$Entry r1;
        int $i0, $i1, $i2;
        java.util.Set $r2;
        boolean $z0;
        java.lang.Object $r3, $r4, $r5;
        java.util.Map r7;
        java.util.Iterator r8;

        r0 := @this: android.util.ArrayMap;

        r7 := @parameter0: java.util.Map;

        $i0 = r0.<android.util.ArrayMap: int mSize>;

        $i1 = interfaceinvoke r7.<java.util.Map: int size()>();

        $i2 = $i0 + $i1;

        virtualinvoke r0.<android.util.ArrayMap: void ensureCapacity(int)>($i2);

        $r2 = interfaceinvoke r7.<java.util.Map: java.util.Set entrySet()>();

        r8 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>();

        r1 = (java.util.Map$Entry) $r3;

        $r4 = interfaceinvoke r1.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r5 = interfaceinvoke r1.<java.util.Map$Entry: java.lang.Object getValue()>();

        virtualinvoke r0.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r5);

        goto label1;

     label2:
        return;
    }

    public java.lang.Object remove(java.lang.Object)
    {
        android.util.ArrayMap r0;
        java.lang.Object r1, $r2;
        int i0;

        r0 := @this: android.util.ArrayMap;

        r1 := @parameter0: java.lang.Object;

        i0 = virtualinvoke r0.<android.util.ArrayMap: int indexOfKey(java.lang.Object)>(r1);

        if i0 < 0 goto label1;

        $r2 = virtualinvoke r0.<android.util.ArrayMap: java.lang.Object removeAt(int)>(i0);

        return $r2;

     label1:
        return null;
    }

    public boolean removeAll(java.util.Collection)
    {
        android.util.ArrayMap r0;
        java.util.Collection r1;
        boolean $z0;

        r0 := @this: android.util.ArrayMap;

        r1 := @parameter0: java.util.Collection;

        $z0 = staticinvoke <android.util.MapCollections: boolean removeAllHelper(java.util.Map,java.util.Collection)>(r0, r1);

        return $z0;
    }

    public java.lang.Object removeAt(int)
    {
        android.util.ArrayMap r0;
        java.lang.Object r1;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, i29, i30, i31, $i32;
        java.lang.Object[] $r2, $r6, $r8, $r10, r13, r16, r18, r19;
        java.util.ConcurrentModificationException $r3, $r4;
        int[] $r5, $r7, $r9, r12, r14, r15, r17;
        boolean $z0;
        java.lang.ArrayIndexOutOfBoundsException $r11;

        r0 := @this: android.util.ArrayMap;

        i29 := @parameter0: int;

        $i3 = r0.<android.util.ArrayMap: int mSize>;

        if i29 < $i3 goto label02;

        $z0 = <android.util.UtilConfig: boolean sThrowExceptionForUpperArrayOutOfBounds>;

        if $z0 != 0 goto label01;

        goto label02;

     label01:
        $r11 = new java.lang.ArrayIndexOutOfBoundsException;

        specialinvoke $r11.<java.lang.ArrayIndexOutOfBoundsException: void <init>(int)>(i29);

        throw $r11;

     label02:
        $r2 = r0.<android.util.ArrayMap: java.lang.Object[] mArray>;

        $i4 = i29 << 1;

        $i5 = $i4 + 1;

        r1 = $r2[$i5];

        i0 = r0.<android.util.ArrayMap: int mSize>;

        if i0 > 1 goto label03;

        r12 = r0.<android.util.ArrayMap: int[] mHashes>;

        r13 = r0.<android.util.ArrayMap: java.lang.Object[] mArray>;

        $r9 = <libcore.util.EmptyArray: int[] INT>;

        r0.<android.util.ArrayMap: int[] mHashes> = $r9;

        $r10 = <libcore.util.EmptyArray: java.lang.Object[] OBJECT>;

        r0.<android.util.ArrayMap: java.lang.Object[] mArray> = $r10;

        staticinvoke <android.util.ArrayMap: void freeArrays(int[],java.lang.Object[],int)>(r12, r13, i0);

        i30 = 0;

        goto label11;

     label03:
        i1 = i0 - 1;

        r14 = r0.<android.util.ArrayMap: int[] mHashes>;

        i2 = lengthof r14;

        i31 = 8;

        if i2 <= 8 goto label08;

        $i18 = r0.<android.util.ArrayMap: int mSize>;

        $i16 = lengthof r14;

        $i17 = $i16 / 3;

        if $i18 >= $i17 goto label08;

        if i0 <= 8 goto label04;

        $i28 = i0 >> 1;

        i31 = i0 + $i28;

     label04:
        r15 = r0.<android.util.ArrayMap: int[] mHashes>;

        r16 = r0.<android.util.ArrayMap: java.lang.Object[] mArray>;

        specialinvoke r0.<android.util.ArrayMap: void allocArrays(int)>(i31);

        $i19 = r0.<android.util.ArrayMap: int mSize>;

        if i0 != $i19 goto label07;

        if i29 <= 0 goto label05;

        $r7 = r0.<android.util.ArrayMap: int[] mHashes>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r15, 0, $r7, 0, i29);

        $r8 = r0.<android.util.ArrayMap: java.lang.Object[] mArray>;

        $i27 = i29 << 1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r16, 0, $r8, 0, $i27);

     label05:
        if i29 >= i1 goto label06;

        $i21 = i29 + 1;

        $r5 = r0.<android.util.ArrayMap: int[] mHashes>;

        $i20 = i1 - i29;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r15, $i21, $r5, i29, $i20);

        $i22 = i29 + 1;

        $i26 = $i22 << 1;

        $r6 = r0.<android.util.ArrayMap: java.lang.Object[] mArray>;

        $i25 = i29 << 1;

        $i23 = i1 - i29;

        $i24 = $i23 << 1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r16, $i26, $r6, $i25, $i24);

     label06:
        goto label10;

     label07:
        $r4 = new java.util.ConcurrentModificationException;

        specialinvoke $r4.<java.util.ConcurrentModificationException: void <init>()>();

        throw $r4;

     label08:
        if i29 >= i1 goto label09;

        r17 = r0.<android.util.ArrayMap: int[] mHashes>;

        $i10 = i29 + 1;

        $i9 = i1 - i29;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r17, $i10, r17, i29, $i9);

        r18 = r0.<android.util.ArrayMap: java.lang.Object[] mArray>;

        $i11 = i29 + 1;

        $i15 = $i11 << 1;

        $i14 = i29 << 1;

        $i12 = i1 - i29;

        $i13 = $i12 << 1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r18, $i15, r18, $i14, $i13);

     label09:
        r19 = r0.<android.util.ArrayMap: java.lang.Object[] mArray>;

        $i6 = i1 << 1;

        r19[$i6] = null;

        $i7 = i1 << 1;

        $i8 = $i7 + 1;

        r19[$i8] = null;

     label10:
        i30 = i1;

     label11:
        $i32 = r0.<android.util.ArrayMap: int mSize>;

        if i0 != $i32 goto label12;

        r0.<android.util.ArrayMap: int mSize> = i30;

        return r1;

     label12:
        $r3 = new java.util.ConcurrentModificationException;

        specialinvoke $r3.<java.util.ConcurrentModificationException: void <init>()>();

        throw $r3;
    }

    public boolean retainAll(java.util.Collection)
    {
        android.util.ArrayMap r0;
        java.util.Collection r1;
        boolean $z0;

        r0 := @this: android.util.ArrayMap;

        r1 := @parameter0: java.util.Collection;

        $z0 = staticinvoke <android.util.MapCollections: boolean retainAllHelper(java.util.Map,java.util.Collection)>(r0, r1);

        return $z0;
    }

    public java.lang.Object setValueAt(int, java.lang.Object)
    {
        android.util.ArrayMap r0;
        java.lang.Object r1, r3;
        java.lang.Object[] r2;
        int $i0, $i1, i2, i3;
        boolean $z0;
        java.lang.ArrayIndexOutOfBoundsException $r4;

        r0 := @this: android.util.ArrayMap;

        i2 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        $i0 = r0.<android.util.ArrayMap: int mSize>;

        if i2 < $i0 goto label2;

        $z0 = <android.util.UtilConfig: boolean sThrowExceptionForUpperArrayOutOfBounds>;

        if $z0 != 0 goto label1;

        goto label2;

     label1:
        $r4 = new java.lang.ArrayIndexOutOfBoundsException;

        specialinvoke $r4.<java.lang.ArrayIndexOutOfBoundsException: void <init>(int)>(i2);

        throw $r4;

     label2:
        $i1 = i2 << 1;

        i3 = $i1 + 1;

        r2 = r0.<android.util.ArrayMap: java.lang.Object[] mArray>;

        r3 = r2[i3];

        r2[i3] = r1;

        return r3;
    }

    public int size()
    {
        android.util.ArrayMap r0;
        int $i0;

        r0 := @this: android.util.ArrayMap;

        $i0 = r0.<android.util.ArrayMap: int mSize>;

        return $i0;
    }

    public java.lang.String toString()
    {
        android.util.ArrayMap r0;
        boolean $z0;
        java.lang.StringBuilder $r2;
        int $i0, $i1, $i2, i3;
        java.lang.String $r5, $r9;
        java.lang.Object r13, r14;

        r0 := @this: android.util.ArrayMap;

        $z0 = virtualinvoke r0.<android.util.ArrayMap: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return "{}";

     label1:
        $r2 = new java.lang.StringBuilder;

        $i0 = r0.<android.util.ArrayMap: int mSize>;

        $i1 = $i0 * 28;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(int)>($i1);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(123);

        i3 = 0;

     label2:
        $i2 = r0.<android.util.ArrayMap: int mSize>;

        if i3 >= $i2 goto label8;

        if i3 <= 0 goto label3;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

     label3:
        r13 = virtualinvoke r0.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i3);

        if r13 == r0 goto label4;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r13);

        goto label5;

     label4:
        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(this Map)");

     label5:
        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(61);

        r14 = virtualinvoke r0.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i3);

        if r14 == r0 goto label6;

        $r9 = staticinvoke <com.android.internal.util.ArrayUtils: java.lang.String deepToString(java.lang.Object)>(r14);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        goto label7;

     label6:
        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(this Map)");

     label7:
        i3 = i3 + 1;

        goto label2;

     label8:
        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(125);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    public void validate()
    {
        android.util.ArrayMap r0;
        int i0, $i1, $i2, i3, i4, i5, i6, i7, i8;
        java.lang.Object r1, r16;
        int[] $r2, $r3;
        java.lang.Object[] $r4, $r5;
        java.lang.StringBuilder $r6, $r11;
        java.lang.IllegalArgumentException $r9, $r14;
        java.lang.String $r10, $r15;
        boolean $z0;

        r0 := @this: android.util.ArrayMap;

        i0 = r0.<android.util.ArrayMap: int mSize>;

        if i0 > 1 goto label1;

        return;

     label1:
        $r2 = r0.<android.util.ArrayMap: int[] mHashes>;

        i3 = $r2[0];

        i4 = 0;

        i5 = 1;

     label2:
        if i5 >= i0 goto label9;

        $r3 = r0.<android.util.ArrayMap: int[] mHashes>;

        i6 = $r3[i5];

        if i6 == i3 goto label3;

        i7 = i5;

        goto label8;

     label3:
        $r4 = r0.<android.util.ArrayMap: java.lang.Object[] mArray>;

        $i1 = i5 << 1;

        r1 = $r4[$i1];

        i8 = i5 - 1;

     label4:
        i6 = i3;

        i7 = i4;

        if i8 < i4 goto label8;

        $r5 = r0.<android.util.ArrayMap: java.lang.Object[] mArray>;

        $i2 = i8 << 1;

        r16 = $r5[$i2];

        if r1 == r16 goto label7;

        if r1 == null goto label6;

        if r16 == null goto label6;

        $z0 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>(r16);

        if $z0 != 0 goto label5;

        goto label6;

     label5:
        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Duplicate key in ArrayMap: ");

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r14 = new java.lang.IllegalArgumentException;

        $r15 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r15);

        throw $r14;

     label6:
        i8 = i8 + -1;

        goto label4;

     label7:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Duplicate key in ArrayMap: ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r9 = new java.lang.IllegalArgumentException;

        $r10 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r10);

        throw $r9;

     label8:
        i5 = i5 + 1;

        i3 = i6;

        i4 = i7;

        goto label2;

     label9:
        return;
    }

    public java.lang.Object valueAt(int)
    {
        android.util.ArrayMap r0;
        int i0, $i1, $i2, $i3;
        java.lang.Object[] $r1;
        java.lang.Object $r2;
        boolean $z0;
        java.lang.ArrayIndexOutOfBoundsException $r3;

        r0 := @this: android.util.ArrayMap;

        i0 := @parameter0: int;

        $i1 = r0.<android.util.ArrayMap: int mSize>;

        if i0 < $i1 goto label2;

        $z0 = <android.util.UtilConfig: boolean sThrowExceptionForUpperArrayOutOfBounds>;

        if $z0 != 0 goto label1;

        goto label2;

     label1:
        $r3 = new java.lang.ArrayIndexOutOfBoundsException;

        specialinvoke $r3.<java.lang.ArrayIndexOutOfBoundsException: void <init>(int)>(i0);

        throw $r3;

     label2:
        $r1 = r0.<android.util.ArrayMap: java.lang.Object[] mArray>;

        $i2 = i0 << 1;

        $i3 = $i2 + 1;

        $r2 = $r1[$i3];

        return $r2;
    }

    public java.util.Collection values()
    {
        android.util.ArrayMap r0;
        android.util.MapCollections $r1;
        java.util.Collection $r2;

        r0 := @this: android.util.ArrayMap;

        $r1 = specialinvoke r0.<android.util.ArrayMap: android.util.MapCollections getCollection()>();

        $r2 = virtualinvoke $r1.<android.util.MapCollections: java.util.Collection getValues()>();

        return $r2;
    }
}
