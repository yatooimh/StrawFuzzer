public final class android.util.ArraySet extends java.lang.Object implements java.util.Collection, java.util.Set
{
    private static final int BASE_SIZE;
    private static final int CACHE_SIZE;
    private static final boolean DEBUG;
    private static final java.lang.String TAG;
    static java.lang.Object[] sBaseCache;
    private static final java.lang.Object sBaseCacheLock;
    static int sBaseCacheSize;
    static java.lang.Object[] sTwiceBaseCache;
    private static final java.lang.Object sTwiceBaseCacheLock;
    static int sTwiceBaseCacheSize;
    java.lang.Object[] mArray;
    private android.util.MapCollections mCollections;
    int[] mHashes;
    private final boolean mIdentityHashCode;
    int mSize;

    static void <clinit>()
    {
        java.lang.Object $r0, $r1;

        <android.util.ArraySet: java.lang.String TAG> = "ArraySet";

        <android.util.ArraySet: boolean DEBUG> = 0;

        <android.util.ArraySet: int CACHE_SIZE> = 10;

        <android.util.ArraySet: int BASE_SIZE> = 4;

        $r0 = new java.lang.Object;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        <android.util.ArraySet: java.lang.Object sBaseCacheLock> = $r0;

        $r1 = new java.lang.Object;

        specialinvoke $r1.<java.lang.Object: void <init>()>();

        <android.util.ArraySet: java.lang.Object sTwiceBaseCacheLock> = $r1;

        return;
    }

    public void <init>()
    {
        android.util.ArraySet r0;

        r0 := @this: android.util.ArraySet;

        specialinvoke r0.<android.util.ArraySet: void <init>(int,boolean)>(0, 0);

        return;
    }

    public void <init>(int)
    {
        android.util.ArraySet r0;
        int i0;

        r0 := @this: android.util.ArraySet;

        i0 := @parameter0: int;

        specialinvoke r0.<android.util.ArraySet: void <init>(int,boolean)>(i0, 0);

        return;
    }

    public void <init>(int, boolean)
    {
        android.util.ArraySet r0;
        int i0;
        boolean z0;
        int[] $r1;
        java.lang.Object[] $r2;

        r0 := @this: android.util.ArraySet;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.util.ArraySet: boolean mIdentityHashCode> = z0;

        if i0 != 0 goto label1;

        $r1 = <libcore.util.EmptyArray: int[] INT>;

        r0.<android.util.ArraySet: int[] mHashes> = $r1;

        $r2 = <libcore.util.EmptyArray: java.lang.Object[] OBJECT>;

        r0.<android.util.ArraySet: java.lang.Object[] mArray> = $r2;

        goto label2;

     label1:
        specialinvoke r0.<android.util.ArraySet: void allocArrays(int)>(i0);

     label2:
        r0.<android.util.ArraySet: int mSize> = 0;

        return;
    }

    public void <init>(android.util.ArraySet)
    {
        android.util.ArraySet r0, r1;

        r0 := @this: android.util.ArraySet;

        r1 := @parameter0: android.util.ArraySet;

        specialinvoke r0.<android.util.ArraySet: void <init>()>();

        if r1 == null goto label1;

        virtualinvoke r0.<android.util.ArraySet: void addAll(android.util.ArraySet)>(r1);

     label1:
        return;
    }

    public void <init>(java.util.Collection)
    {
        android.util.ArraySet r0;
        java.util.Collection r1;

        r0 := @this: android.util.ArraySet;

        r1 := @parameter0: java.util.Collection;

        specialinvoke r0.<android.util.ArraySet: void <init>()>();

        if r1 == null goto label1;

        virtualinvoke r0.<android.util.ArraySet: boolean addAll(java.util.Collection)>(r1);

     label1:
        return;
    }

    public void <init>(java.lang.Object[])
    {
        android.util.ArraySet r0;
        java.lang.Object[] r1;
        int i0, i1;
        java.lang.Object $r2;

        r0 := @this: android.util.ArraySet;

        r1 := @parameter0: java.lang.Object[];

        specialinvoke r0.<android.util.ArraySet: void <init>()>();

        if r1 == null goto label2;

        i0 = lengthof r1;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r2 = r1[i1];

        virtualinvoke r0.<android.util.ArraySet: boolean add(java.lang.Object)>($r2);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    private void allocArrays(int)
    {
        android.util.ArraySet r0;
        int i0, $i2, $i3, $i5, $i6;
        java.lang.Object[] $r1, $r3, $r12, $r14, r28, r34, $r40;
        java.lang.Object $r2, $r4, $r6, $r9, $r13, $r15, $r17, $r20, r27, r33;
        java.lang.String $r11, $r22;
        java.lang.Throwable $r23, $r25;
        java.lang.ClassCastException $r24, $r26;
        int[] r29, r35, $r39;
        java.lang.StringBuilder r31, r37;

        r0 := @this: android.util.ArraySet;

        i0 := @parameter0: int;

        if i0 != 8 goto label15;

        r27 = <android.util.ArraySet: java.lang.Object sTwiceBaseCacheLock>;

        entermonitor r27;

     label01:
        $r12 = <android.util.ArraySet: java.lang.Object[] sTwiceBaseCache>;

        if $r12 == null goto label10;

        r28 = <android.util.ArraySet: java.lang.Object[] sTwiceBaseCache>;

     label02:
        r0.<android.util.ArraySet: java.lang.Object[] mArray> = r28;

        $r13 = r28[0];

        $r14 = (java.lang.Object[]) $r13;

        <android.util.ArraySet: java.lang.Object[] sTwiceBaseCache> = $r14;

        $r15 = r28[1];

        r29 = (int[]) $r15;

        r0.<android.util.ArraySet: int[] mHashes> = r29;

     label03:
        if r29 == null goto label07;

        r28[1] = null;

        r28[0] = null;

     label04:
        $i5 = <android.util.ArraySet: int sTwiceBaseCacheSize>;

        $i6 = $i5 - 1;

        <android.util.ArraySet: int sTwiceBaseCacheSize> = $i6;

     label05:
        exitmonitor r27;

     label06:
        return;

     label07:
        goto label09;

     label08:
        $r26 := @caughtexception;

     label09:
        r31 = new java.lang.StringBuilder;

        specialinvoke r31.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Found corrupt ArraySet cache: [0]=");

        $r17 = r28[0];

        virtualinvoke r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r17);

        virtualinvoke r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" [1]=");

        $r20 = r28[1];

        virtualinvoke r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r20);

        $r22 = virtualinvoke r31.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>("ArraySet", $r22);

        <android.util.ArraySet: java.lang.Object[] sTwiceBaseCache> = null;

        <android.util.ArraySet: int sTwiceBaseCacheSize> = 0;

     label10:
        exitmonitor r27;

     label11:
        goto label30;

     label12:
        $r23 := @caughtexception;

     label13:
        exitmonitor r27;

     label14:
        throw $r23;

     label15:
        if i0 != 4 goto label30;

        r33 = <android.util.ArraySet: java.lang.Object sBaseCacheLock>;

        entermonitor r33;

     label16:
        $r1 = <android.util.ArraySet: java.lang.Object[] sBaseCache>;

        if $r1 == null goto label25;

        r34 = <android.util.ArraySet: java.lang.Object[] sBaseCache>;

     label17:
        r0.<android.util.ArraySet: java.lang.Object[] mArray> = r34;

        $r2 = r34[0];

        $r3 = (java.lang.Object[]) $r2;

        <android.util.ArraySet: java.lang.Object[] sBaseCache> = $r3;

        $r4 = r34[1];

        r35 = (int[]) $r4;

        r0.<android.util.ArraySet: int[] mHashes> = r35;

     label18:
        if r35 == null goto label22;

        r34[1] = null;

        r34[0] = null;

     label19:
        $i2 = <android.util.ArraySet: int sBaseCacheSize>;

        $i3 = $i2 - 1;

        <android.util.ArraySet: int sBaseCacheSize> = $i3;

     label20:
        exitmonitor r33;

     label21:
        return;

     label22:
        goto label24;

     label23:
        $r24 := @caughtexception;

     label24:
        r37 = new java.lang.StringBuilder;

        specialinvoke r37.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Found corrupt ArraySet cache: [0]=");

        $r6 = r34[0];

        virtualinvoke r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        virtualinvoke r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" [1]=");

        $r9 = r34[1];

        virtualinvoke r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r11 = virtualinvoke r37.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>("ArraySet", $r11);

        <android.util.ArraySet: java.lang.Object[] sBaseCache> = null;

        <android.util.ArraySet: int sBaseCacheSize> = 0;

     label25:
        exitmonitor r33;

     label26:
        goto label30;

     label27:
        $r25 := @caughtexception;

     label28:
        exitmonitor r33;

     label29:
        throw $r25;

     label30:
        $r39 = newarray (int)[i0];

        r0.<android.util.ArraySet: int[] mHashes> = $r39;

        $r40 = newarray (java.lang.Object)[i0];

        r0.<android.util.ArraySet: java.lang.Object[] mArray> = $r40;

        return;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.ClassCastException from label02 to label03 with label08;
        catch java.lang.Throwable from label02 to label03 with label12;
        catch java.lang.ClassCastException from label04 to label05 with label08;
        catch java.lang.Throwable from label04 to label05 with label12;
        catch java.lang.Throwable from label05 to label06 with label12;
        catch java.lang.Throwable from label09 to label10 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
        catch java.lang.Throwable from label16 to label17 with label27;
        catch java.lang.ClassCastException from label17 to label18 with label23;
        catch java.lang.Throwable from label17 to label18 with label27;
        catch java.lang.ClassCastException from label19 to label20 with label23;
        catch java.lang.Throwable from label19 to label20 with label27;
        catch java.lang.Throwable from label20 to label21 with label27;
        catch java.lang.Throwable from label24 to label25 with label27;
        catch java.lang.Throwable from label25 to label26 with label27;
        catch java.lang.Throwable from label28 to label29 with label27;
    }

    private int binarySearch(int[], int)
    {
        android.util.ArraySet r0;
        int $i0, i1, i2;
        java.lang.ArrayIndexOutOfBoundsException $r1;
        java.util.ConcurrentModificationException $r2;
        int[] r3;

        r0 := @this: android.util.ArraySet;

        r3 := @parameter0: int[];

        i1 := @parameter1: int;

     label1:
        $i0 = r0.<android.util.ArraySet: int mSize>;

        i2 = staticinvoke <android.util.ContainerHelpers: int binarySearch(int[],int,int)>(r3, $i0, i1);

     label2:
        return i2;

     label3:
        $r1 := @caughtexception;

        $r2 = new java.util.ConcurrentModificationException;

        specialinvoke $r2.<java.util.ConcurrentModificationException: void <init>()>();

        throw $r2;

        catch java.lang.ArrayIndexOutOfBoundsException from label1 to label2 with label3;
    }

    private static void freeArrays(int[], java.lang.Object[], int)
    {
        java.lang.Object[] r0, $r1, $r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, i9, i10;
        java.lang.Throwable $r3, $r4;
        int[] r5;
        java.lang.Object r6, r8;

        r5 := @parameter0: int[];

        r0 := @parameter1: java.lang.Object[];

        i8 := @parameter2: int;

        $i0 = lengthof r5;

        if $i0 != 8 goto label10;

        r6 = <android.util.ArraySet: java.lang.Object sTwiceBaseCacheLock>;

        entermonitor r6;

     label01:
        $i5 = <android.util.ArraySet: int sTwiceBaseCacheSize>;

        if $i5 >= 10 goto label05;

        $r2 = <android.util.ArraySet: java.lang.Object[] sTwiceBaseCache>;

        r0[0] = $r2;

     label02:
        r0[1] = r5;

        i9 = i8 + -1;

     label03:
        if i9 < 2 goto label04;

        r0[i9] = null;

        i9 = i9 + -1;

        goto label03;

     label04:
        <android.util.ArraySet: java.lang.Object[] sTwiceBaseCache> = r0;

        $i6 = <android.util.ArraySet: int sTwiceBaseCacheSize>;

        $i7 = $i6 + 1;

        <android.util.ArraySet: int sTwiceBaseCacheSize> = $i7;

     label05:
        exitmonitor r6;

     label06:
        goto label20;

     label07:
        $r3 := @caughtexception;

     label08:
        exitmonitor r6;

     label09:
        throw $r3;

     label10:
        $i1 = lengthof r5;

        if $i1 != 4 goto label20;

        r8 = <android.util.ArraySet: java.lang.Object sBaseCacheLock>;

        entermonitor r8;

     label11:
        $i2 = <android.util.ArraySet: int sBaseCacheSize>;

        if $i2 >= 10 goto label15;

        $r1 = <android.util.ArraySet: java.lang.Object[] sBaseCache>;

        r0[0] = $r1;

     label12:
        r0[1] = r5;

        i10 = i8 + -1;

     label13:
        if i10 < 2 goto label14;

        r0[i10] = null;

        i10 = i10 + -1;

        goto label13;

     label14:
        <android.util.ArraySet: java.lang.Object[] sBaseCache> = r0;

        $i3 = <android.util.ArraySet: int sBaseCacheSize>;

        $i4 = $i3 + 1;

        <android.util.ArraySet: int sBaseCacheSize> = $i4;

     label15:
        exitmonitor r8;

     label16:
        goto label20;

     label17:
        $r4 := @caughtexception;

     label18:
        exitmonitor r8;

     label19:
        throw $r4;

     label20:
        return;

        catch java.lang.Throwable from label01 to label02 with label07;
        catch java.lang.Throwable from label04 to label05 with label07;
        catch java.lang.Throwable from label05 to label06 with label07;
        catch java.lang.Throwable from label08 to label09 with label07;
        catch java.lang.Throwable from label11 to label12 with label17;
        catch java.lang.Throwable from label14 to label15 with label17;
        catch java.lang.Throwable from label15 to label16 with label17;
        catch java.lang.Throwable from label18 to label19 with label17;
    }

    private android.util.MapCollections getCollection()
    {
        android.util.ArraySet r0;
        android.util.MapCollections $r1, $r2;
        android.util.ArraySet$1 $r3;

        r0 := @this: android.util.ArraySet;

        $r1 = r0.<android.util.ArraySet: android.util.MapCollections mCollections>;

        if $r1 != null goto label1;

        $r3 = new android.util.ArraySet$1;

        specialinvoke $r3.<android.util.ArraySet$1: void <init>(android.util.ArraySet)>(r0);

        r0.<android.util.ArraySet: android.util.MapCollections mCollections> = $r3;

     label1:
        $r2 = r0.<android.util.ArraySet: android.util.MapCollections mCollections>;

        return $r2;
    }

    private int getNewShrunkenSize()
    {
        android.util.ArraySet r0;
        int i0, $i1, i2;

        r0 := @this: android.util.ArraySet;

        i0 = r0.<android.util.ArraySet: int mSize>;

        i2 = 8;

        if i0 <= 8 goto label1;

        $i1 = i0 >> 1;

        i2 = $i1 + i0;

     label1:
        return i2;
    }

    private int indexOf(java.lang.Object, int)
    {
        android.util.ArraySet r0;
        java.lang.Object r1, $r4, $r7, $r10;
        int i0, i1, $i2, $i3, i4, i5, i6;
        int[] $r2, $r5, $r8;
        java.lang.Object[] $r3, $r6, $r9;
        boolean $z0, $z1, $z2;

        r0 := @this: android.util.ArraySet;

        r1 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        i1 = r0.<android.util.ArraySet: int mSize>;

        if i1 != 0 goto label1;

        return -1;

     label1:
        $r2 = r0.<android.util.ArraySet: int[] mHashes>;

        i4 = specialinvoke r0.<android.util.ArraySet: int binarySearch(int[],int)>($r2, i0);

        if i4 >= 0 goto label2;

        return i4;

     label2:
        $r3 = r0.<android.util.ArraySet: java.lang.Object[] mArray>;

        $r4 = $r3[i4];

        $z0 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label3;

        return i4;

     label3:
        i5 = i4 + 1;

     label4:
        if i5 >= i1 goto label6;

        $r8 = r0.<android.util.ArraySet: int[] mHashes>;

        $i3 = $r8[i5];

        if $i3 != i0 goto label6;

        $r9 = r0.<android.util.ArraySet: java.lang.Object[] mArray>;

        $r10 = $r9[i5];

        $z2 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>($r10);

        if $z2 == 0 goto label5;

        return i5;

     label5:
        i5 = i5 + 1;

        goto label4;

     label6:
        i6 = i4 + -1;

     label7:
        if i6 < 0 goto label9;

        $r5 = r0.<android.util.ArraySet: int[] mHashes>;

        $i2 = $r5[i6];

        if $i2 != i0 goto label9;

        $r6 = r0.<android.util.ArraySet: java.lang.Object[] mArray>;

        $r7 = $r6[i6];

        $z1 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>($r7);

        if $z1 == 0 goto label8;

        return i6;

     label8:
        i6 = i6 + -1;

        goto label7;

     label9:
        return i5;
    }

    private int indexOfNull()
    {
        android.util.ArraySet r0;
        int i0, $i1, $i2, i3, i4, i5;
        int[] $r1, $r4, $r7;
        java.lang.Object[] $r2, $r5, $r8;
        java.lang.Object $r3, $r6, $r9;

        r0 := @this: android.util.ArraySet;

        i0 = r0.<android.util.ArraySet: int mSize>;

        if i0 != 0 goto label1;

        return -1;

     label1:
        $r1 = r0.<android.util.ArraySet: int[] mHashes>;

        i3 = specialinvoke r0.<android.util.ArraySet: int binarySearch(int[],int)>($r1, 0);

        if i3 >= 0 goto label2;

        return i3;

     label2:
        $r2 = r0.<android.util.ArraySet: java.lang.Object[] mArray>;

        $r3 = $r2[i3];

        if $r3 != null goto label3;

        return i3;

     label3:
        i4 = i3 + 1;

     label4:
        if i4 >= i0 goto label6;

        $r7 = r0.<android.util.ArraySet: int[] mHashes>;

        $i2 = $r7[i4];

        if $i2 != 0 goto label6;

        $r8 = r0.<android.util.ArraySet: java.lang.Object[] mArray>;

        $r9 = $r8[i4];

        if $r9 != null goto label5;

        return i4;

     label5:
        i4 = i4 + 1;

        goto label4;

     label6:
        i5 = i3 + -1;

     label7:
        if i5 < 0 goto label9;

        $r4 = r0.<android.util.ArraySet: int[] mHashes>;

        $i1 = $r4[i5];

        if $i1 != 0 goto label9;

        $r5 = r0.<android.util.ArraySet: java.lang.Object[] mArray>;

        $r6 = $r5[i5];

        if $r6 != null goto label8;

        return i5;

     label8:
        i5 = i5 + -1;

        goto label7;

     label9:
        return i4;
    }

    private boolean shouldShrink()
    {
        android.util.ArraySet r0;
        int[] r1;
        int $i0, $i1, $i2, $i3;
        boolean z0;

        r0 := @this: android.util.ArraySet;

        r1 = r0.<android.util.ArraySet: int[] mHashes>;

        $i0 = lengthof r1;

        if $i0 <= 8 goto label1;

        $i3 = r0.<android.util.ArraySet: int mSize>;

        $i1 = lengthof r1;

        $i2 = $i1 / 3;

        if $i3 >= $i2 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public boolean add(java.lang.Object)
    {
        android.util.ArraySet r0;
        java.lang.Object r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, i12, i13, i14, i15, i16, $i17, i18;
        int[] r2, r3, $r4, r10, r12;
        boolean $z0;
        java.util.ConcurrentModificationException $r5, $r7;
        java.lang.Object[] $r6, $r8, r9, r11;

        r0 := @this: android.util.ArraySet;

        r1 := @parameter0: java.lang.Object;

        i0 = r0.<android.util.ArraySet: int mSize>;

        if r1 != null goto label01;

        i12 = 0;

        i13 = specialinvoke r0.<android.util.ArraySet: int indexOfNull()>();

        goto label04;

     label01:
        $z0 = r0.<android.util.ArraySet: boolean mIdentityHashCode>;

        if $z0 == 0 goto label02;

        i14 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r1);

        goto label03;

     label02:
        i14 = virtualinvoke r1.<java.lang.Object: int hashCode()>();

     label03:
        i13 = specialinvoke r0.<android.util.ArraySet: int indexOf(java.lang.Object,int)>(r1, i14);

        i12 = i14;

     label04:
        if i13 < 0 goto label05;

        return 0;

     label05:
        i15 = i13;

        $r4 = r0.<android.util.ArraySet: int[] mHashes>;

        $i1 = lengthof $r4;

        if i0 < $i1 goto label10;

        i16 = 4;

        if i0 < 8 goto label06;

        $i11 = i0 >> 1;

        i16 = $i11 + i0;

        goto label07;

     label06:
        if i0 < 4 goto label07;

        i16 = 8;

     label07:
        r2 = r0.<android.util.ArraySet: int[] mHashes>;

        r9 = r0.<android.util.ArraySet: java.lang.Object[] mArray>;

        specialinvoke r0.<android.util.ArraySet: void allocArrays(int)>(i16);

        $i17 = r0.<android.util.ArraySet: int mSize>;

        if i0 != $i17 goto label09;

        r3 = r0.<android.util.ArraySet: int[] mHashes>;

        $i8 = lengthof r3;

        if $i8 <= 0 goto label08;

        $i9 = lengthof r2;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, 0, r3, 0, $i9);

        $r8 = r0.<android.util.ArraySet: java.lang.Object[] mArray>;

        $i10 = lengthof r9;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r9, 0, $r8, 0, $i10);

     label08:
        staticinvoke <android.util.ArraySet: void freeArrays(int[],java.lang.Object[],int)>(r2, r9, i0);

        goto label10;

     label09:
        $r7 = new java.util.ConcurrentModificationException;

        specialinvoke $r7.<java.util.ConcurrentModificationException: void <init>()>();

        throw $r7;

     label10:
        if i15 >= i0 goto label11;

        r10 = r0.<android.util.ArraySet: int[] mHashes>;

        $i5 = i15 + 1;

        $i4 = i0 - i15;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r10, i15, r10, $i5, $i4);

        r11 = r0.<android.util.ArraySet: java.lang.Object[] mArray>;

        $i7 = i15 + 1;

        $i6 = i0 - i15;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r11, i15, r11, $i7, $i6);

     label11:
        i18 = r0.<android.util.ArraySet: int mSize>;

        if i0 != i18 goto label12;

        r12 = r0.<android.util.ArraySet: int[] mHashes>;

        $i2 = lengthof r12;

        if i15 >= $i2 goto label12;

        r12[i15] = i12;

        $r6 = r0.<android.util.ArraySet: java.lang.Object[] mArray>;

        $r6[i15] = r1;

        $i3 = i18 + 1;

        r0.<android.util.ArraySet: int mSize> = $i3;

        return 1;

     label12:
        $r5 = new java.util.ConcurrentModificationException;

        specialinvoke $r5.<java.util.ConcurrentModificationException: void <init>()>();

        throw $r5;
    }

    public void addAll(android.util.ArraySet)
    {
        android.util.ArraySet r0, r1;
        int i0, $i1, $i2, $i3, $i4, i5;
        java.lang.Object $r2;
        int[] $r3, $r4;
        java.lang.Object[] $r5, $r6;
        java.util.ConcurrentModificationException $r7;

        r0 := @this: android.util.ArraySet;

        r1 := @parameter0: android.util.ArraySet;

        i0 = r1.<android.util.ArraySet: int mSize>;

        $i1 = r0.<android.util.ArraySet: int mSize>;

        $i2 = $i1 + i0;

        virtualinvoke r0.<android.util.ArraySet: void ensureCapacity(int)>($i2);

        $i3 = r0.<android.util.ArraySet: int mSize>;

        if $i3 != 0 goto label2;

        if i0 <= 0 goto label4;

        $r4 = r1.<android.util.ArraySet: int[] mHashes>;

        $r3 = r0.<android.util.ArraySet: int[] mHashes>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, 0, $r3, 0, i0);

        $r6 = r1.<android.util.ArraySet: java.lang.Object[] mArray>;

        $r5 = r0.<android.util.ArraySet: java.lang.Object[] mArray>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r6, 0, $r5, 0, i0);

        $i4 = r0.<android.util.ArraySet: int mSize>;

        if $i4 != 0 goto label1;

        r0.<android.util.ArraySet: int mSize> = i0;

        goto label4;

     label1:
        $r7 = new java.util.ConcurrentModificationException;

        specialinvoke $r7.<java.util.ConcurrentModificationException: void <init>()>();

        throw $r7;

     label2:
        i5 = 0;

     label3:
        if i5 >= i0 goto label4;

        $r2 = virtualinvoke r1.<android.util.ArraySet: java.lang.Object valueAt(int)>(i5);

        virtualinvoke r0.<android.util.ArraySet: boolean add(java.lang.Object)>($r2);

        i5 = i5 + 1;

        goto label3;

     label4:
        return;
    }

    public boolean addAll(java.util.Collection)
    {
        android.util.ArraySet r0;
        int $i0, $i1, $i2;
        boolean $z0, $z1, z2;
        java.lang.Object $r1;
        java.util.Collection r2;
        java.util.Iterator r3;

        r0 := @this: android.util.ArraySet;

        r2 := @parameter0: java.util.Collection;

        $i0 = r0.<android.util.ArraySet: int mSize>;

        $i1 = interfaceinvoke r2.<java.util.Collection: int size()>();

        $i2 = $i0 + $i1;

        virtualinvoke r0.<android.util.ArraySet: void ensureCapacity(int)>($i2);

        z2 = 0;

        r3 = interfaceinvoke r2.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r1 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        $z1 = virtualinvoke r0.<android.util.ArraySet: boolean add(java.lang.Object)>($r1);

        z2 = z2 | $z1;

        goto label1;

     label2:
        return z2;
    }

    public void append(java.lang.Object)
    {
        android.util.ArraySet r0;
        java.lang.Object r1;
        int i0, i1, $i2, $i3, $i4, $i5, i6, $i7;
        int[] r2, $r5;
        boolean $z0;
        java.lang.IllegalStateException $r3;
        java.util.ConcurrentModificationException $r4;
        java.lang.Object[] $r6;

        r0 := @this: android.util.ArraySet;

        r1 := @parameter0: java.lang.Object;

        i0 = r0.<android.util.ArraySet: int mSize>;

        i1 = r0.<android.util.ArraySet: int mSize>;

        if r1 != null goto label1;

        i6 = 0;

        goto label3;

     label1:
        $z0 = r0.<android.util.ArraySet: boolean mIdentityHashCode>;

        if $z0 == 0 goto label2;

        i6 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r1);

        goto label3;

     label2:
        i6 = virtualinvoke r1.<java.lang.Object: int hashCode()>();

     label3:
        r2 = r0.<android.util.ArraySet: int[] mHashes>;

        $i7 = lengthof r2;

        if i1 >= $i7 goto label6;

        if i1 <= 0 goto label4;

        $i4 = i1 - 1;

        $i5 = r2[$i4];

        if $i5 <= i6 goto label4;

        virtualinvoke r0.<android.util.ArraySet: boolean add(java.lang.Object)>(r1);

        return;

     label4:
        $i2 = r0.<android.util.ArraySet: int mSize>;

        if i0 != $i2 goto label5;

        $i3 = i1 + 1;

        r0.<android.util.ArraySet: int mSize> = $i3;

        $r5 = r0.<android.util.ArraySet: int[] mHashes>;

        $r5[i1] = i6;

        $r6 = r0.<android.util.ArraySet: java.lang.Object[] mArray>;

        $r6[i1] = r1;

        return;

     label5:
        $r4 = new java.util.ConcurrentModificationException;

        specialinvoke $r4.<java.util.ConcurrentModificationException: void <init>()>();

        throw $r4;

     label6:
        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Array is full");

        throw $r3;
    }

    public void clear()
    {
        android.util.ArraySet r0;
        int[] r1, $r4;
        java.lang.Object[] r2, $r5;
        int i0, $i1, $i2;
        java.util.ConcurrentModificationException $r3;

        r0 := @this: android.util.ArraySet;

        $i1 = r0.<android.util.ArraySet: int mSize>;

        if $i1 == 0 goto label1;

        r1 = r0.<android.util.ArraySet: int[] mHashes>;

        r2 = r0.<android.util.ArraySet: java.lang.Object[] mArray>;

        i0 = r0.<android.util.ArraySet: int mSize>;

        $r4 = <libcore.util.EmptyArray: int[] INT>;

        r0.<android.util.ArraySet: int[] mHashes> = $r4;

        $r5 = <libcore.util.EmptyArray: java.lang.Object[] OBJECT>;

        r0.<android.util.ArraySet: java.lang.Object[] mArray> = $r5;

        r0.<android.util.ArraySet: int mSize> = 0;

        staticinvoke <android.util.ArraySet: void freeArrays(int[],java.lang.Object[],int)>(r1, r2, i0);

     label1:
        $i2 = r0.<android.util.ArraySet: int mSize>;

        if $i2 != 0 goto label2;

        return;

     label2:
        $r3 = new java.util.ConcurrentModificationException;

        specialinvoke $r3.<java.util.ConcurrentModificationException: void <init>()>();

        throw $r3;
    }

    public boolean contains(java.lang.Object)
    {
        android.util.ArraySet r0;
        java.lang.Object r1;
        int $i0;
        boolean z0;

        r0 := @this: android.util.ArraySet;

        r1 := @parameter0: java.lang.Object;

        $i0 = virtualinvoke r0.<android.util.ArraySet: int indexOf(java.lang.Object)>(r1);

        if $i0 < 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public boolean containsAll(java.util.Collection)
    {
        android.util.ArraySet r0;
        boolean $z0, $z1;
        java.lang.Object $r1;
        java.util.Collection r2;
        java.util.Iterator r3;

        r0 := @this: android.util.ArraySet;

        r2 := @parameter0: java.util.Collection;

        r3 = interfaceinvoke r2.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r1 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        $z1 = virtualinvoke r0.<android.util.ArraySet: boolean contains(java.lang.Object)>($r1);

        if $z1 != 0 goto label1;

        return 0;

     label2:
        return 1;
    }

    public void ensureCapacity(int)
    {
        android.util.ArraySet r0;
        int i0, $i1, $i2, $i3, i4, i5, $i6;
        int[] r1, $r3, $r5;
        java.lang.Object[] r2, $r6;
        java.util.ConcurrentModificationException $r4;

        r0 := @this: android.util.ArraySet;

        i4 := @parameter0: int;

        i0 = r0.<android.util.ArraySet: int mSize>;

        $r3 = r0.<android.util.ArraySet: int[] mHashes>;

        $i1 = lengthof $r3;

        if $i1 >= i4 goto label2;

        r1 = r0.<android.util.ArraySet: int[] mHashes>;

        r2 = r0.<android.util.ArraySet: java.lang.Object[] mArray>;

        specialinvoke r0.<android.util.ArraySet: void allocArrays(int)>(i4);

        i5 = r0.<android.util.ArraySet: int mSize>;

        if i5 <= 0 goto label1;

        $r5 = r0.<android.util.ArraySet: int[] mHashes>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, $r5, 0, i5);

        $r6 = r0.<android.util.ArraySet: java.lang.Object[] mArray>;

        $i3 = r0.<android.util.ArraySet: int mSize>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, 0, $r6, 0, $i3);

     label1:
        $i2 = r0.<android.util.ArraySet: int mSize>;

        staticinvoke <android.util.ArraySet: void freeArrays(int[],java.lang.Object[],int)>(r1, r2, $i2);

     label2:
        $i6 = r0.<android.util.ArraySet: int mSize>;

        if $i6 != i0 goto label3;

        return;

     label3:
        $r4 = new java.util.ConcurrentModificationException;

        specialinvoke $r4.<java.util.ConcurrentModificationException: void <init>()>();

        throw $r4;
    }

    public boolean equals(java.lang.Object)
    {
        android.util.ArraySet r0;
        boolean z0, $z1;
        int $i0, $i1, $i2, i3;
        java.lang.Object $r1, r4;
        java.lang.ClassCastException $r2;
        java.lang.NullPointerException $r3;
        java.util.Set r5;

        r0 := @this: android.util.ArraySet;

        r4 := @parameter0: java.lang.Object;

        if r0 != r4 goto label1;

        return 1;

     label1:
        $z1 = r4 instanceof java.util.Set;

        if $z1 == 0 goto label9;

        r5 = (java.util.Set) r4;

        $i0 = virtualinvoke r0.<android.util.ArraySet: int size()>();

        $i1 = interfaceinvoke r5.<java.util.Set: int size()>();

        if $i0 == $i1 goto label2;

        return 0;

     label2:
        i3 = 0;

     label3:
        $i2 = r0.<android.util.ArraySet: int mSize>;

        if i3 >= $i2 goto label6;

        $r1 = virtualinvoke r0.<android.util.ArraySet: java.lang.Object valueAt(int)>(i3);

        z0 = interfaceinvoke r5.<java.util.Set: boolean contains(java.lang.Object)>($r1);

     label4:
        if z0 != 0 goto label5;

        return 0;

     label5:
        i3 = i3 + 1;

        goto label3;

     label6:
        return 1;

     label7:
        $r2 := @caughtexception;

        return 0;

     label8:
        $r3 := @caughtexception;

        return 0;

     label9:
        return 0;

        catch java.lang.NullPointerException from label3 to label4 with label8;
        catch java.lang.ClassCastException from label3 to label4 with label7;
    }

    public int hashCode()
    {
        android.util.ArraySet r0;
        int[] r1;
        int i0, $i1, i2, i3;

        r0 := @this: android.util.ArraySet;

        r1 = r0.<android.util.ArraySet: int[] mHashes>;

        i2 = 0;

        i3 = 0;

        i0 = r0.<android.util.ArraySet: int mSize>;

     label1:
        if i3 >= i0 goto label2;

        $i1 = r1[i3];

        i2 = i2 + $i1;

        i3 = i3 + 1;

        goto label1;

     label2:
        return i2;
    }

    public int indexOf(java.lang.Object)
    {
        android.util.ArraySet r0;
        java.lang.Object r1;
        boolean $z0;
        int i0, i1;

        r0 := @this: android.util.ArraySet;

        r1 := @parameter0: java.lang.Object;

        if r1 != null goto label1;

        i0 = specialinvoke r0.<android.util.ArraySet: int indexOfNull()>();

        goto label4;

     label1:
        $z0 = r0.<android.util.ArraySet: boolean mIdentityHashCode>;

        if $z0 == 0 goto label2;

        i1 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r1);

        goto label3;

     label2:
        i1 = virtualinvoke r1.<java.lang.Object: int hashCode()>();

     label3:
        i0 = specialinvoke r0.<android.util.ArraySet: int indexOf(java.lang.Object,int)>(r1, i1);

     label4:
        return i0;
    }

    public boolean isEmpty()
    {
        android.util.ArraySet r0;
        int $i0;
        boolean z0;

        r0 := @this: android.util.ArraySet;

        $i0 = r0.<android.util.ArraySet: int mSize>;

        if $i0 > 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public java.util.Iterator iterator()
    {
        android.util.ArraySet r0;
        android.util.MapCollections $r1;
        java.util.Set $r2;
        java.util.Iterator $r3;

        r0 := @this: android.util.ArraySet;

        $r1 = specialinvoke r0.<android.util.ArraySet: android.util.MapCollections getCollection()>();

        $r2 = virtualinvoke $r1.<android.util.MapCollections: java.util.Set getKeySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

        return $r3;
    }

    public boolean remove(java.lang.Object)
    {
        android.util.ArraySet r0;
        java.lang.Object r1;
        int i0;

        r0 := @this: android.util.ArraySet;

        r1 := @parameter0: java.lang.Object;

        i0 = virtualinvoke r0.<android.util.ArraySet: int indexOf(java.lang.Object)>(r1);

        if i0 < 0 goto label1;

        virtualinvoke r0.<android.util.ArraySet: java.lang.Object removeAt(int)>(i0);

        return 1;

     label1:
        return 0;
    }

    public boolean removeAll(android.util.ArraySet)
    {
        android.util.ArraySet r0, r1;
        int i0, i1, $i2, i3;
        java.lang.Object $r2;
        boolean z1;

        r0 := @this: android.util.ArraySet;

        r1 := @parameter0: android.util.ArraySet;

        i0 = r1.<android.util.ArraySet: int mSize>;

        i1 = r0.<android.util.ArraySet: int mSize>;

        i3 = 0;

     label1:
        if i3 >= i0 goto label2;

        $r2 = virtualinvoke r1.<android.util.ArraySet: java.lang.Object valueAt(int)>(i3);

        virtualinvoke r0.<android.util.ArraySet: boolean remove(java.lang.Object)>($r2);

        i3 = i3 + 1;

        goto label1;

     label2:
        $i2 = r0.<android.util.ArraySet: int mSize>;

        if i1 == $i2 goto label3;

        z1 = 1;

        goto label4;

     label3:
        z1 = 0;

     label4:
        return z1;
    }

    public boolean removeAll(java.util.Collection)
    {
        android.util.ArraySet r0;
        boolean $z0, $z1, z2;
        java.lang.Object $r1;
        java.util.Collection r2;
        java.util.Iterator r3;

        r0 := @this: android.util.ArraySet;

        r2 := @parameter0: java.util.Collection;

        z2 = 0;

        r3 = interfaceinvoke r2.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r1 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        $z1 = virtualinvoke r0.<android.util.ArraySet: boolean remove(java.lang.Object)>($r1);

        z2 = z2 | $z1;

        goto label1;

     label2:
        return z2;
    }

    public java.lang.Object removeAt(int)
    {
        android.util.ArraySet r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13;
        java.lang.Object r1;
        int[] r2, $r6, $r8, r12;
        java.lang.Object[] $r3, $r4, $r7, $r9, r11, r13;
        boolean $z0, $z1;
        java.util.ConcurrentModificationException $r5;
        java.lang.ArrayIndexOutOfBoundsException $r10;

        r0 := @this: android.util.ArraySet;

        i0 := @parameter0: int;

        $i4 = r0.<android.util.ArraySet: int mSize>;

        if i0 < $i4 goto label02;

        $z1 = <android.util.UtilConfig: boolean sThrowExceptionForUpperArrayOutOfBounds>;

        if $z1 != 0 goto label01;

        goto label02;

     label01:
        $r10 = new java.lang.ArrayIndexOutOfBoundsException;

        specialinvoke $r10.<java.lang.ArrayIndexOutOfBoundsException: void <init>(int)>(i0);

        throw $r10;

     label02:
        i1 = r0.<android.util.ArraySet: int mSize>;

        $r3 = r0.<android.util.ArraySet: java.lang.Object[] mArray>;

        r1 = $r3[i0];

        if i1 > 1 goto label03;

        virtualinvoke r0.<android.util.ArraySet: void clear()>();

        goto label09;

     label03:
        i2 = i1 - 1;

        $z0 = specialinvoke r0.<android.util.ArraySet: boolean shouldShrink()>();

        if $z0 == 0 goto label06;

        i3 = specialinvoke r0.<android.util.ArraySet: int getNewShrunkenSize()>();

        r2 = r0.<android.util.ArraySet: int[] mHashes>;

        r11 = r0.<android.util.ArraySet: java.lang.Object[] mArray>;

        specialinvoke r0.<android.util.ArraySet: void allocArrays(int)>(i3);

        if i0 <= 0 goto label04;

        $r8 = r0.<android.util.ArraySet: int[] mHashes>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, 0, $r8, 0, i0);

        $r9 = r0.<android.util.ArraySet: java.lang.Object[] mArray>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r11, 0, $r9, 0, i0);

     label04:
        if i0 >= i2 goto label05;

        $i10 = i0 + 1;

        $r6 = r0.<android.util.ArraySet: int[] mHashes>;

        $i9 = i2 - i0;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, $i10, $r6, i0, $i9);

        $i12 = i0 + 1;

        $r7 = r0.<android.util.ArraySet: java.lang.Object[] mArray>;

        $i11 = i2 - i0;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r11, $i12, $r7, i0, $i11);

     label05:
        goto label08;

     label06:
        if i0 >= i2 goto label07;

        r12 = r0.<android.util.ArraySet: int[] mHashes>;

        $i6 = i0 + 1;

        $i5 = i2 - i0;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r12, $i6, r12, i0, $i5);

        r13 = r0.<android.util.ArraySet: java.lang.Object[] mArray>;

        $i8 = i0 + 1;

        $i7 = i2 - i0;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r13, $i8, r13, i0, $i7);

     label07:
        $r4 = r0.<android.util.ArraySet: java.lang.Object[] mArray>;

        $r4[i2] = null;

     label08:
        $i13 = r0.<android.util.ArraySet: int mSize>;

        if i1 != $i13 goto label10;

        r0.<android.util.ArraySet: int mSize> = i2;

     label09:
        return r1;

     label10:
        $r5 = new java.util.ConcurrentModificationException;

        specialinvoke $r5.<java.util.ConcurrentModificationException: void <init>()>();

        throw $r5;
    }

    public boolean removeIf(java.util.function.Predicate)
    {
        android.util.ArraySet r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, i7, i8, i9, i10, i11;
        boolean $z0, $z1;
        int[] $r1, r8, r9;
        java.lang.Object[] $r2, $r3, r7, r10, r11;
        java.lang.Object $r4, $r5;
        java.util.function.Predicate r6;

        r0 := @this: android.util.ArraySet;

        r6 := @parameter0: java.util.function.Predicate;

        $i1 = r0.<android.util.ArraySet: int mSize>;

        if $i1 != 0 goto label01;

        return 0;

     label01:
        i7 = 0;

        i8 = 0;

        i9 = 0;

     label02:
        i0 = r0.<android.util.ArraySet: int mSize>;

        if i9 >= i0 goto label06;

        $r3 = r0.<android.util.ArraySet: java.lang.Object[] mArray>;

        $r4 = $r3[i9];

        $z1 = interfaceinvoke r6.<java.util.function.Predicate: boolean test(java.lang.Object)>($r4);

        if $z1 == 0 goto label03;

        i8 = i8 + 1;

        goto label05;

     label03:
        if i7 == i9 goto label04;

        r7 = r0.<android.util.ArraySet: java.lang.Object[] mArray>;

        $r5 = r7[i9];

        r7[i7] = $r5;

        r8 = r0.<android.util.ArraySet: int[] mHashes>;

        $i6 = r8[i9];

        r8[i7] = $i6;

     label04:
        i7 = i7 + 1;

     label05:
        i9 = i9 + 1;

        goto label02;

     label06:
        if i8 != 0 goto label07;

        return 0;

     label07:
        if i8 != i0 goto label08;

        virtualinvoke r0.<android.util.ArraySet: void clear()>();

        return 1;

     label08:
        $i2 = i0 - i8;

        r0.<android.util.ArraySet: int mSize> = $i2;

        $z0 = specialinvoke r0.<android.util.ArraySet: boolean shouldShrink()>();

        if $z0 == 0 goto label09;

        i10 = specialinvoke r0.<android.util.ArraySet: int getNewShrunkenSize()>();

        r9 = r0.<android.util.ArraySet: int[] mHashes>;

        r10 = r0.<android.util.ArraySet: java.lang.Object[] mArray>;

        specialinvoke r0.<android.util.ArraySet: void allocArrays(int)>(i10);

        $r1 = r0.<android.util.ArraySet: int[] mHashes>;

        $i4 = r0.<android.util.ArraySet: int mSize>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r9, 0, $r1, 0, $i4);

        $r2 = r0.<android.util.ArraySet: java.lang.Object[] mArray>;

        $i5 = r0.<android.util.ArraySet: int mSize>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r10, 0, $r2, 0, $i5);

        goto label11;

     label09:
        i11 = r0.<android.util.ArraySet: int mSize>;

     label10:
        r11 = r0.<android.util.ArraySet: java.lang.Object[] mArray>;

        $i3 = lengthof r11;

        if i11 >= $i3 goto label11;

        r11[i11] = null;

        i11 = i11 + 1;

        goto label10;

     label11:
        return 1;
    }

    public boolean retainAll(java.util.Collection)
    {
        android.util.ArraySet r0;
        java.util.Collection r1;
        int $i0, i1;
        java.lang.Object[] $r2;
        java.lang.Object $r3;
        boolean $z0, z1;

        r0 := @this: android.util.ArraySet;

        r1 := @parameter0: java.util.Collection;

        z1 = 0;

        $i0 = r0.<android.util.ArraySet: int mSize>;

        i1 = $i0 - 1;

     label1:
        if i1 < 0 goto label3;

        $r2 = r0.<android.util.ArraySet: java.lang.Object[] mArray>;

        $r3 = $r2[i1];

        $z0 = interfaceinvoke r1.<java.util.Collection: boolean contains(java.lang.Object)>($r3);

        if $z0 != 0 goto label2;

        virtualinvoke r0.<android.util.ArraySet: java.lang.Object removeAt(int)>(i1);

        z1 = 1;

     label2:
        i1 = i1 + -1;

        goto label1;

     label3:
        return z1;
    }

    public int size()
    {
        android.util.ArraySet r0;
        int $i0;

        r0 := @this: android.util.ArraySet;

        $i0 = r0.<android.util.ArraySet: int mSize>;

        return $i0;
    }

    public java.lang.Object[] toArray()
    {
        android.util.ArraySet r0;
        int i0;
        java.lang.Object[] r1, $r2;

        r0 := @this: android.util.ArraySet;

        i0 = r0.<android.util.ArraySet: int mSize>;

        r1 = newarray (java.lang.Object)[i0];

        $r2 = r0.<android.util.ArraySet: java.lang.Object[] mArray>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, r1, 0, i0);

        return r1;
    }

    public java.lang.Object[] toArray(java.lang.Object[])
    {
        android.util.ArraySet r0;
        java.lang.Object[] r1, $r2, r6;
        int i0, i1, $i2, $i3, $i4, $i5;
        java.lang.Class $r3, $r4;
        java.lang.Object $r5;

        r0 := @this: android.util.ArraySet;

        r1 := @parameter0: java.lang.Object[];

        r6 = r1;

        $i3 = lengthof r1;

        $i2 = r0.<android.util.ArraySet: int mSize>;

        if $i3 >= $i2 goto label1;

        $r3 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Class getComponentType()>();

        $i5 = r0.<android.util.ArraySet: int mSize>;

        $r5 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>($r4, $i5);

        r6 = (java.lang.Object[]) $r5;

     label1:
        $r2 = r0.<android.util.ArraySet: java.lang.Object[] mArray>;

        $i4 = r0.<android.util.ArraySet: int mSize>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, r6, 0, $i4);

        i0 = lengthof r6;

        i1 = r0.<android.util.ArraySet: int mSize>;

        if i0 <= i1 goto label2;

        r6[i1] = null;

     label2:
        return r6;
    }

    public java.lang.String toString()
    {
        android.util.ArraySet r0;
        java.lang.Object r2;
        boolean $z0;
        java.lang.StringBuilder $r3;
        int $i0, $i1, $i2, i3;
        java.lang.String $r6;

        r0 := @this: android.util.ArraySet;

        $z0 = virtualinvoke r0.<android.util.ArraySet: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return "{}";

     label1:
        $r3 = new java.lang.StringBuilder;

        $i0 = r0.<android.util.ArraySet: int mSize>;

        $i1 = $i0 * 14;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(int)>($i1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(123);

        i3 = 0;

     label2:
        $i2 = r0.<android.util.ArraySet: int mSize>;

        if i3 >= $i2 goto label6;

        if i3 <= 0 goto label3;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

     label3:
        r2 = virtualinvoke r0.<android.util.ArraySet: java.lang.Object valueAt(int)>(i3);

        if r2 == r0 goto label4;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        goto label5;

     label4:
        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(this Set)");

     label5:
        i3 = i3 + 1;

        goto label2;

     label6:
        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(125);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    public java.lang.Object valueAt(int)
    {
        android.util.ArraySet r0;
        int i0, $i1;
        java.lang.Object $r1;
        boolean $z0;
        java.lang.ArrayIndexOutOfBoundsException $r2;

        r0 := @this: android.util.ArraySet;

        i0 := @parameter0: int;

        $i1 = r0.<android.util.ArraySet: int mSize>;

        if i0 < $i1 goto label2;

        $z0 = <android.util.UtilConfig: boolean sThrowExceptionForUpperArrayOutOfBounds>;

        if $z0 != 0 goto label1;

        goto label2;

     label1:
        $r2 = new java.lang.ArrayIndexOutOfBoundsException;

        specialinvoke $r2.<java.lang.ArrayIndexOutOfBoundsException: void <init>(int)>(i0);

        throw $r2;

     label2:
        $r1 = virtualinvoke r0.<android.util.ArraySet: java.lang.Object valueAtUnchecked(int)>(i0);

        return $r1;
    }

    public java.lang.Object valueAtUnchecked(int)
    {
        android.util.ArraySet r0;
        int i0;
        java.lang.Object[] $r1;
        java.lang.Object $r2;

        r0 := @this: android.util.ArraySet;

        i0 := @parameter0: int;

        $r1 = r0.<android.util.ArraySet: java.lang.Object[] mArray>;

        $r2 = $r1[i0];

        return $r2;
    }
}
