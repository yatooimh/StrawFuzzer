public class android.util.AtomicFile extends java.lang.Object
{
    private static final java.lang.String LOG_TAG;
    private final java.io.File mBaseName;
    private final java.lang.String mCommitTag;
    private final java.io.File mLegacyBackupName;
    private final java.io.File mNewName;
    private long mStartTime;

    public void <init>(java.io.File)
    {
        android.util.AtomicFile r0;
        java.io.File r1;

        r0 := @this: android.util.AtomicFile;

        r1 := @parameter0: java.io.File;

        specialinvoke r0.<android.util.AtomicFile: void <init>(java.io.File,java.lang.String)>(r1, null);

        return;
    }

    public void <init>(java.io.File, java.lang.String)
    {
        android.util.AtomicFile r0;
        java.io.File r1, $r7, $r13;
        java.lang.String r2, $r4, $r8, $r10, $r14;
        java.lang.StringBuilder $r3, $r9;

        r0 := @this: android.util.AtomicFile;

        r1 := @parameter0: java.io.File;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.util.AtomicFile: java.io.File mBaseName> = r1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r1.<java.io.File: java.lang.String getPath()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".new");

        $r7 = new java.io.File;

        $r8 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.io.File: void <init>(java.lang.String)>($r8);

        r0.<android.util.AtomicFile: java.io.File mNewName> = $r7;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke r1.<java.io.File: java.lang.String getPath()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".bak");

        $r13 = new java.io.File;

        $r14 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<java.io.File: void <init>(java.lang.String)>($r14);

        r0.<android.util.AtomicFile: java.io.File mLegacyBackupName> = $r13;

        r0.<android.util.AtomicFile: java.lang.String mCommitTag> = r2;

        return;
    }

    private static void rename(java.io.File, java.io.File)
    {
        java.io.File r0, r1;
        boolean $z0, $z1, $z2;
        java.lang.StringBuilder $r2, $r8;
        java.lang.String $r7, $r11;

        r0 := @parameter0: java.io.File;

        r1 := @parameter1: java.io.File;

        $z0 = virtualinvoke r1.<java.io.File: boolean isDirectory()>();

        if $z0 == 0 goto label1;

        $z1 = virtualinvoke r1.<java.io.File: boolean delete()>();

        if $z1 != 0 goto label1;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to delete file which is a directory ");

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("AtomicFile", $r11);

     label1:
        $z2 = virtualinvoke r0.<java.io.File: boolean renameTo(java.io.File)>(r1);

        if $z2 != 0 goto label2;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to rename ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r7 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("AtomicFile", $r7);

     label2:
        return;
    }

    public void delete()
    {
        android.util.AtomicFile r0;
        java.io.File $r1, $r2, $r3;

        r0 := @this: android.util.AtomicFile;

        $r1 = r0.<android.util.AtomicFile: java.io.File mBaseName>;

        virtualinvoke $r1.<java.io.File: boolean delete()>();

        $r2 = r0.<android.util.AtomicFile: java.io.File mNewName>;

        virtualinvoke $r2.<java.io.File: boolean delete()>();

        $r3 = r0.<android.util.AtomicFile: java.io.File mLegacyBackupName>;

        virtualinvoke $r3.<java.io.File: boolean delete()>();

        return;
    }

    public boolean exists()
    {
        android.util.AtomicFile r0;
        java.io.File $r1, $r2;
        boolean $z0, $z1, z2;

        r0 := @this: android.util.AtomicFile;

        $r1 = r0.<android.util.AtomicFile: java.io.File mBaseName>;

        $z0 = virtualinvoke $r1.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label2;

        $r2 = r0.<android.util.AtomicFile: java.io.File mLegacyBackupName>;

        $z1 = virtualinvoke $r2.<java.io.File: boolean exists()>();

        if $z1 == 0 goto label1;

        goto label2;

     label1:
        z2 = 0;

        goto label3;

     label2:
        z2 = 1;

     label3:
        return z2;
    }

    public void failWrite(java.io.FileOutputStream)
    {
        android.util.AtomicFile r0;
        boolean $z0, $z1;
        java.io.File $r1, $r4;
        java.lang.StringBuilder $r2;
        java.lang.String $r6;
        java.lang.Throwable $r7;
        java.io.FileOutputStream r8;

        r0 := @this: android.util.AtomicFile;

        r8 := @parameter0: java.io.FileOutputStream;

        if r8 != null goto label1;

        return;

     label1:
        $z0 = staticinvoke <android.os.FileUtils: boolean sync(java.io.FileOutputStream)>(r8);

        if $z0 != 0 goto label2;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("AtomicFile", "Failed to sync file output stream");

     label2:
        virtualinvoke r8.<java.io.FileOutputStream: void close()>();

     label3:
        goto label5;

     label4:
        $r7 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("AtomicFile", "Failed to close file output stream", $r7);

     label5:
        $r1 = r0.<android.util.AtomicFile: java.io.File mNewName>;

        $z1 = virtualinvoke $r1.<java.io.File: boolean delete()>();

        if $z1 != 0 goto label6;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to delete new file ");

        $r4 = r0.<android.util.AtomicFile: java.io.File mNewName>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("AtomicFile", $r6);

     label6:
        return;

        catch java.io.IOException from label2 to label3 with label4;
    }

    public void finishWrite(java.io.FileOutputStream)
    {
        android.util.AtomicFile r0;
        boolean $z0;
        java.io.File $r1, $r2;
        long $l0, $l1, $l2;
        java.lang.Throwable $r3;
        java.io.FileOutputStream r4;
        java.lang.String r6;

        r0 := @this: android.util.AtomicFile;

        r4 := @parameter0: java.io.FileOutputStream;

        if r4 != null goto label1;

        return;

     label1:
        $z0 = staticinvoke <android.os.FileUtils: boolean sync(java.io.FileOutputStream)>(r4);

        if $z0 != 0 goto label2;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("AtomicFile", "Failed to sync file output stream");

     label2:
        virtualinvoke r4.<java.io.FileOutputStream: void close()>();

     label3:
        goto label5;

     label4:
        $r3 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("AtomicFile", "Failed to close file output stream", $r3);

     label5:
        $r2 = r0.<android.util.AtomicFile: java.io.File mNewName>;

        $r1 = r0.<android.util.AtomicFile: java.io.File mBaseName>;

        staticinvoke <android.util.AtomicFile: void rename(java.io.File,java.io.File)>($r2, $r1);

        r6 = r0.<android.util.AtomicFile: java.lang.String mCommitTag>;

        if r6 == null goto label6;

        $l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l1 = r0.<android.util.AtomicFile: long mStartTime>;

        $l2 = $l0 - $l1;

        staticinvoke <com.android.internal.logging.EventLogTags: void writeCommitSysConfigFile(java.lang.String,long)>(r6, $l2);

     label6:
        return;

        catch java.io.IOException from label2 to label3 with label4;
    }

    public java.io.File getBaseFile()
    {
        android.util.AtomicFile r0;
        java.io.File $r1;

        r0 := @this: android.util.AtomicFile;

        $r1 = r0.<android.util.AtomicFile: java.io.File mBaseName>;

        return $r1;
    }

    public long getLastModifiedTime()
    {
        android.util.AtomicFile r0;
        java.io.File $r1, $r2, $r3;
        boolean $z0;
        long $l0, $l1;

        r0 := @this: android.util.AtomicFile;

        $r1 = r0.<android.util.AtomicFile: java.io.File mLegacyBackupName>;

        $z0 = virtualinvoke $r1.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label1;

        $r3 = r0.<android.util.AtomicFile: java.io.File mLegacyBackupName>;

        $l1 = virtualinvoke $r3.<java.io.File: long lastModified()>();

        return $l1;

     label1:
        $r2 = r0.<android.util.AtomicFile: java.io.File mBaseName>;

        $l0 = virtualinvoke $r2.<java.io.File: long lastModified()>();

        return $l0;
    }

    public java.io.FileOutputStream openAppend() throws java.io.IOException
    {
        android.util.AtomicFile r0;
        java.io.FileOutputStream $r1;
        java.io.File $r2, $r6;
        java.lang.Throwable $r3;
        java.lang.StringBuilder $r4;
        java.io.IOException $r8;
        java.lang.String $r9;

        r0 := @this: android.util.AtomicFile;

     label1:
        $r1 = new java.io.FileOutputStream;

        $r2 = r0.<android.util.AtomicFile: java.io.File mBaseName>;

        specialinvoke $r1.<java.io.FileOutputStream: void <init>(java.io.File,boolean)>($r2, 1);

     label2:
        return $r1;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Couldn\'t append ");

        $r6 = r0.<android.util.AtomicFile: java.io.File mBaseName>;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r8 = new java.io.IOException;

        $r9 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.io.IOException: void <init>(java.lang.String)>($r9);

        throw $r8;

        catch java.io.FileNotFoundException from label1 to label2 with label3;
    }

    public java.io.FileInputStream openRead() throws java.io.FileNotFoundException
    {
        android.util.AtomicFile r0;
        java.io.File $r2, $r3, $r4, $r5, $r8, $r11, $r12, $r14;
        boolean $z0, $z1, $z2, $z3;
        java.lang.StringBuilder $r6;
        java.lang.String $r10;
        java.io.FileInputStream $r13;

        r0 := @this: android.util.AtomicFile;

        $r2 = r0.<android.util.AtomicFile: java.io.File mLegacyBackupName>;

        $z0 = virtualinvoke $r2.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label1;

        $r12 = r0.<android.util.AtomicFile: java.io.File mLegacyBackupName>;

        $r11 = r0.<android.util.AtomicFile: java.io.File mBaseName>;

        staticinvoke <android.util.AtomicFile: void rename(java.io.File,java.io.File)>($r12, $r11);

     label1:
        $r3 = r0.<android.util.AtomicFile: java.io.File mNewName>;

        $z1 = virtualinvoke $r3.<java.io.File: boolean exists()>();

        if $z1 == 0 goto label2;

        $r4 = r0.<android.util.AtomicFile: java.io.File mBaseName>;

        $z2 = virtualinvoke $r4.<java.io.File: boolean exists()>();

        if $z2 == 0 goto label2;

        $r5 = r0.<android.util.AtomicFile: java.io.File mNewName>;

        $z3 = virtualinvoke $r5.<java.io.File: boolean delete()>();

        if $z3 != 0 goto label2;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to delete outdated new file ");

        $r8 = r0.<android.util.AtomicFile: java.io.File mNewName>;

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r10 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("AtomicFile", $r10);

     label2:
        $r13 = new java.io.FileInputStream;

        $r14 = r0.<android.util.AtomicFile: java.io.File mBaseName>;

        specialinvoke $r13.<java.io.FileInputStream: void <init>(java.io.File)>($r14);

        return $r13;
    }

    public byte[] readFully() throws java.io.IOException
    {
        android.util.AtomicFile r0;
        java.io.FileInputStream r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, i7, i8;
        java.lang.Throwable $r2;
        byte[] r3, r4;

        r0 := @this: android.util.AtomicFile;

        r1 = virtualinvoke r0.<android.util.AtomicFile: java.io.FileInputStream openRead()>();

        i6 = 0;

     label1:
        $i0 = virtualinvoke r1.<java.io.FileInputStream: int available()>();

        r3 = newarray (byte)[$i0];

     label2:
        $i1 = lengthof r3;

        $i2 = $i1 - i6;

        i7 = virtualinvoke r1.<java.io.FileInputStream: int read(byte[],int,int)>(r3, i6, $i2);

     label3:
        if i7 > 0 goto label4;

        virtualinvoke r1.<java.io.FileInputStream: void close()>();

        return r3;

     label4:
        i6 = i6 + i7;

     label5:
        i8 = virtualinvoke r1.<java.io.FileInputStream: int available()>();

     label6:
        r4 = r3;

     label7:
        $i3 = lengthof r3;

        $i4 = $i3 - i6;

        if i8 <= $i4 goto label8;

        $i5 = i6 + i8;

        r4 = newarray (byte)[$i5];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r3, 0, r4, 0, i6);

     label8:
        r3 = r4;

        goto label2;

     label9:
        $r2 := @caughtexception;

        virtualinvoke r1.<java.io.FileInputStream: void close()>();

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.Throwable from label2 to label3 with label9;
        catch java.lang.Throwable from label5 to label6 with label9;
        catch java.lang.Throwable from label7 to label8 with label9;
    }

    public java.io.FileOutputStream startWrite() throws java.io.IOException
    {
        android.util.AtomicFile r0;
        java.lang.String $r1;
        java.io.FileOutputStream $r2;
        long l0;

        r0 := @this: android.util.AtomicFile;

        $r1 = r0.<android.util.AtomicFile: java.lang.String mCommitTag>;

        if $r1 == null goto label1;

        l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        goto label2;

     label1:
        l0 = 0L;

     label2:
        $r2 = virtualinvoke r0.<android.util.AtomicFile: java.io.FileOutputStream startWrite(long)>(l0);

        return $r2;
    }

    public java.io.FileOutputStream startWrite(long) throws java.io.IOException
    {
        android.util.AtomicFile r0;
        long l0;
        java.io.File $r2, $r4, $r5, $r6, $r10, $r15, $r18, $r24, r27;
        boolean $z0, $z1;
        java.io.FileOutputStream $r3, $r23;
        java.lang.Throwable $r7, $r14;
        java.lang.StringBuilder $r8, $r16;
        java.io.IOException $r12, $r20;
        java.lang.String $r13, $r21, $r22;

        r0 := @this: android.util.AtomicFile;

        l0 := @parameter0: long;

        r0.<android.util.AtomicFile: long mStartTime> = l0;

        $r2 = r0.<android.util.AtomicFile: java.io.File mLegacyBackupName>;

        $z0 = virtualinvoke $r2.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label1;

        $r6 = r0.<android.util.AtomicFile: java.io.File mLegacyBackupName>;

        $r5 = r0.<android.util.AtomicFile: java.io.File mBaseName>;

        staticinvoke <android.util.AtomicFile: void rename(java.io.File,java.io.File)>($r6, $r5);

     label1:
        $r3 = new java.io.FileOutputStream;

        $r4 = r0.<android.util.AtomicFile: java.io.File mNewName>;

        specialinvoke $r3.<java.io.FileOutputStream: void <init>(java.io.File)>($r4);

     label2:
        return $r3;

     label3:
        $r14 := @caughtexception;

        $r15 = r0.<android.util.AtomicFile: java.io.File mNewName>;

        r27 = virtualinvoke $r15.<java.io.File: java.io.File getParentFile()>();

        $z1 = virtualinvoke r27.<java.io.File: boolean mkdirs()>();

        if $z1 == 0 goto label7;

        $r22 = virtualinvoke r27.<java.io.File: java.lang.String getPath()>();

        staticinvoke <android.os.FileUtils: int setPermissions(java.lang.String,int,int,int)>($r22, 505, -1, -1);

     label4:
        $r23 = new java.io.FileOutputStream;

        $r24 = r0.<android.util.AtomicFile: java.io.File mNewName>;

        specialinvoke $r23.<java.io.FileOutputStream: void <init>(java.io.File)>($r24);

     label5:
        return $r23;

     label6:
        $r7 := @caughtexception;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to create new file ");

        $r10 = r0.<android.util.AtomicFile: java.io.File mNewName>;

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10);

        $r12 = new java.io.IOException;

        $r13 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<java.io.IOException: void <init>(java.lang.String,java.lang.Throwable)>($r13, $r7);

        throw $r12;

     label7:
        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to create directory for ");

        $r18 = r0.<android.util.AtomicFile: java.io.File mNewName>;

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r18);

        $r20 = new java.io.IOException;

        $r21 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r20.<java.io.IOException: void <init>(java.lang.String)>($r21);

        throw $r20;

        catch java.io.FileNotFoundException from label1 to label2 with label3;
        catch java.io.FileNotFoundException from label4 to label5 with label6;
    }

    public void truncate() throws java.io.IOException
    {
        android.util.AtomicFile r0;
        java.io.File $r1, $r6;
        java.lang.Throwable $r2, $r3;
        java.lang.StringBuilder $r4;
        java.io.IOException $r8;
        java.lang.String $r9;
        java.io.FileOutputStream r10;

        r0 := @this: android.util.AtomicFile;

     label1:
        r10 = new java.io.FileOutputStream;

        $r1 = r0.<android.util.AtomicFile: java.io.File mBaseName>;

        specialinvoke r10.<java.io.FileOutputStream: void <init>(java.io.File)>($r1);

        staticinvoke <android.os.FileUtils: boolean sync(java.io.FileOutputStream)>(r10);

        virtualinvoke r10.<java.io.FileOutputStream: void close()>();

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

     label4:
        return;

     label5:
        $r3 := @caughtexception;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Couldn\'t append ");

        $r6 = r0.<android.util.AtomicFile: java.io.File mBaseName>;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r8 = new java.io.IOException;

        $r9 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.io.IOException: void <init>(java.lang.String)>($r9);

        throw $r8;

        catch java.io.FileNotFoundException from label1 to label2 with label5;
        catch java.io.IOException from label1 to label2 with label3;
    }

    public void write(java.util.function.Consumer)
    {
        android.util.AtomicFile r0;
        java.io.FileOutputStream r1, r6;
        java.lang.Throwable $r2, $r4;
        java.lang.RuntimeException $r3;
        java.util.function.Consumer r5;

        r0 := @this: android.util.AtomicFile;

        r5 := @parameter0: java.util.function.Consumer;

        r6 = null;

     label1:
        r1 = virtualinvoke r0.<android.util.AtomicFile: java.io.FileOutputStream startWrite()>();

     label2:
        r6 = r1;

     label3:
        interfaceinvoke r5.<java.util.function.Consumer: void accept(java.lang.Object)>(r1);

     label4:
        r6 = r1;

     label5:
        virtualinvoke r0.<android.util.AtomicFile: void finishWrite(java.io.FileOutputStream)>(r1);

     label6:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r1);

        return;

     label7:
        $r2 := @caughtexception;

     label8:
        virtualinvoke r0.<android.util.AtomicFile: void failWrite(java.io.FileOutputStream)>(r6);

        $r3 = staticinvoke <android.util.ExceptionUtils: java.lang.RuntimeException propagate(java.lang.Throwable)>($r2);

        throw $r3;

     label9:
        $r4 := @caughtexception;

        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r6);

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label9;
    }

    public static void <clinit>()
    {
        <android.util.AtomicFile: java.lang.String LOG_TAG> = "AtomicFile";

        return;
    }
}
