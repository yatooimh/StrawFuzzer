public class android.util.DebugUtils extends java.lang.Object
{

    public void <init>()
    {
        android.util.DebugUtils r0;

        r0 := @this: android.util.DebugUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void buildShortClassTag(java.lang.Object, java.lang.StringBuilder)
    {
        java.lang.Object r0;
        java.lang.StringBuilder r1;
        int i0, $i1, $i2;
        java.lang.Class $r2, $r3;
        boolean $z0;
        java.lang.String r8, r9, r10, $r11;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.StringBuilder;

        if r0 != null goto label1;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("null");

        goto label4;

     label1:
        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        r8 = virtualinvoke $r2.<java.lang.Class: java.lang.String getSimpleName()>();

        if r8 == null goto label2;

        r9 = r8;

        $z0 = virtualinvoke r8.<java.lang.String: boolean isEmpty()>();

        if $z0 == 0 goto label3;

     label2:
        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        r10 = virtualinvoke $r3.<java.lang.Class: java.lang.String getName()>();

        i0 = virtualinvoke r10.<java.lang.String: int lastIndexOf(int)>(46);

        r9 = r10;

        if i0 <= 0 goto label3;

        $i1 = i0 + 1;

        r9 = virtualinvoke r10.<java.lang.String: java.lang.String substring(int)>($i1);

     label3:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(123);

        $i2 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r0);

        $r11 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i2);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

     label4:
        return;
    }

    public static java.util.List callersWithin(java.lang.Class, int)
    {
        int i0, $i1;
        java.lang.Thread $r0;
        java.lang.StackTraceElement[] $r1;
        java.util.stream.Stream $r2, $r3, $r5, $r7;
        long $l2;
        android.util.'-$$Lambda$PNcWARaUCnqxo5KZVrKltn9O64M' $r6;
        java.util.stream.Collector $r8;
        java.lang.Object $r9;
        java.lang.Class r10;
        java.util.List r11;
        android.util._$$Lambda$DebugUtils$s1zXuvdixY14YVtRkbZKqVfnthU r12;
        java.util.function.Function r13;

        r10 := @parameter0: java.lang.Class;

        i0 := @parameter1: int;

        $r0 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r1 = virtualinvoke $r0.<java.lang.Thread: java.lang.StackTraceElement[] getStackTrace()>();

        $r2 = staticinvoke <java.util.Arrays: java.util.stream.Stream stream(java.lang.Object[])>($r1);

        $i1 = i0 + 3;

        $l2 = (long) $i1;

        $r3 = interfaceinvoke $r2.<java.util.stream.Stream: java.util.stream.Stream skip(long)>($l2);

        r12 = new android.util._$$Lambda$DebugUtils$s1zXuvdixY14YVtRkbZKqVfnthU;

        specialinvoke r12.<android.util._$$Lambda$DebugUtils$s1zXuvdixY14YVtRkbZKqVfnthU: void <init>(java.lang.Class)>(r10);

        $r5 = interfaceinvoke $r3.<java.util.stream.Stream: java.util.stream.Stream filter(java.util.function.Predicate)>(r12);

        $r6 = <android.util._$$Lambda$PNcWARaUCnqxo5KZVrKltn9O64M: android.util.'-$$Lambda$PNcWARaUCnqxo5KZVrKltn9O64M' INSTANCE>;

        r13 = (java.util.function.Function) $r6;

        $r7 = interfaceinvoke $r5.<java.util.stream.Stream: java.util.stream.Stream map(java.util.function.Function)>(r13);

        $r8 = staticinvoke <java.util.stream.Collectors: java.util.stream.Collector toList()>();

        $r9 = interfaceinvoke $r7.<java.util.stream.Stream: java.lang.Object collect(java.util.stream.Collector)>($r8);

        r11 = (java.util.List) $r9;

        staticinvoke <java.util.Collections: void reverse(java.util.List)>(r11);

        return r11;
    }

    private static java.lang.String constNameWithoutPrefix(java.lang.String, java.lang.reflect.Field)
    {
        java.lang.String r0, $r2, $r3;
        java.lang.reflect.Field r1;
        int $i0;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.reflect.Field;

        $r2 = virtualinvoke r1.<java.lang.reflect.Field: java.lang.String getName()>();

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int)>($i0);

        return $r3;
    }

    public static java.lang.String flagsToString(java.lang.Class, java.lang.String, int)
    {
        java.lang.String r0, $r3, $r8, $r9, $r12, $r18;
        int i0, $i1, $i2, $i3, $i4, i5, i6, i7, i8, i9, i10;
        java.lang.StringBuilder $r2;
        boolean $z0, $z1, $z2, $z3, z4;
        java.lang.Class $r6, $r7, r14;
        java.lang.Throwable $r13;
        java.lang.reflect.Field[] r15;
        java.lang.reflect.Field r16;

        r14 := @parameter0: java.lang.Class;

        r0 := @parameter1: java.lang.String;

        i5 := @parameter2: int;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        i6 = 0;

        if i5 != 0 goto label01;

        z4 = 1;

        goto label02;

     label01:
        z4 = 0;

     label02:
        r15 = virtualinvoke r14.<java.lang.Class: java.lang.reflect.Field[] getDeclaredFields()>();

        i0 = lengthof r15;

     label03:
        if i6 >= i0 goto label15;

        r16 = r15[i6];

        i7 = virtualinvoke r16.<java.lang.reflect.Field: int getModifiers()>();

        i8 = i5;

        $z0 = staticinvoke <java.lang.reflect.Modifier: boolean isStatic(int)>(i7);

        if $z0 == 0 goto label14;

        i8 = i5;

        $z1 = staticinvoke <java.lang.reflect.Modifier: boolean isFinal(int)>(i7);

        if $z1 == 0 goto label14;

        i8 = i5;

        $r6 = virtualinvoke r16.<java.lang.reflect.Field: java.lang.Class getType()>();

        $r7 = <java.lang.Integer: java.lang.Class TYPE>;

        $z2 = virtualinvoke $r6.<java.lang.Object: boolean equals(java.lang.Object)>($r7);

        if $z2 == 0 goto label14;

        i8 = i5;

        $r8 = virtualinvoke r16.<java.lang.reflect.Field: java.lang.String getName()>();

        $z3 = virtualinvoke $r8.<java.lang.String: boolean startsWith(java.lang.String)>(r0);

        if $z3 == 0 goto label14;

        i8 = i5;

     label04:
        i9 = virtualinvoke r16.<java.lang.reflect.Field: int getInt(java.lang.Object)>(null);

     label05:
        if i9 != 0 goto label07;

        if z4 == 0 goto label07;

        i8 = i5;

     label06:
        $r12 = staticinvoke <android.util.DebugUtils: java.lang.String constNameWithoutPrefix(java.lang.String,java.lang.reflect.Field)>(r0, r16);

        return $r12;

     label07:
        i8 = i5;

        if i9 == 0 goto label12;

        i8 = i5;

        $i4 = i5 & i9;

        if $i4 != i9 goto label12;

        i10 = i5 & i9;

        i8 = i10;

     label08:
        $r9 = staticinvoke <android.util.DebugUtils: java.lang.String constNameWithoutPrefix(java.lang.String,java.lang.reflect.Field)>(r0, r16);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

     label09:
        i8 = i10;

     label10:
        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(124);

     label11:
        i8 = i10;

     label12:
        goto label14;

     label13:
        $r13 := @caughtexception;

     label14:
        i6 = i6 + 1;

        i5 = i8;

        goto label03;

     label15:
        if i5 != 0 goto label17;

        $i1 = virtualinvoke $r2.<java.lang.StringBuilder: int length()>();

        if $i1 != 0 goto label16;

        goto label17;

     label16:
        $i2 = virtualinvoke $r2.<java.lang.StringBuilder: int length()>();

        $i3 = $i2 - 1;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder deleteCharAt(int)>($i3);

        goto label18;

     label17:
        $r3 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i5);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

     label18:
        $r18 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r18;

        catch java.lang.IllegalAccessException from label04 to label05 with label13;
        catch java.lang.IllegalAccessException from label06 to label07 with label13;
        catch java.lang.IllegalAccessException from label08 to label09 with label13;
        catch java.lang.IllegalAccessException from label10 to label11 with label13;
    }

    public static boolean isObjectSelected(java.lang.Object)
    {
        java.lang.Object r0, r29;
        java.lang.String[] r1, r2;
        java.lang.Class r3, $r5, r26, r28;
        java.lang.reflect.Method r4;
        int $i0, $i1, i2;
        java.lang.String $r6, $r7, $r8, $r10, $r11, $r13, $r15, $r16, $r18, $r21, r25, r30;
        boolean $z1, z2, z3, z4, z5;
        java.util.Locale $r12;
        java.lang.Class[] $r19;
        java.lang.Object[] $r20;
        java.lang.Throwable $r22, $r23, $r24;
        java.lang.StringBuilder r34;
        java.lang.reflect.InvocationTargetException r35;
        java.lang.IllegalAccessException r36;
        java.lang.NoSuchMethodException r37;

        r0 := @parameter0: java.lang.Object;

        z2 = 0;

        r25 = staticinvoke <java.lang.System: java.lang.String getenv(java.lang.String)>("ANDROID_OBJECT_FILTER");

        z3 = 0;

        if r25 == null goto label17;

        z3 = 0;

        $i0 = virtualinvoke r25.<java.lang.String: int length()>();

        if $i0 <= 0 goto label17;

        r1 = virtualinvoke r25.<java.lang.String: java.lang.String[] split(java.lang.String)>("@");

        z3 = 0;

        $r5 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String getSimpleName()>();

        $r7 = r1[0];

        $z1 = virtualinvoke $r6.<java.lang.String: boolean matches(java.lang.String)>($r7);

        if $z1 == 0 goto label17;

        i2 = 1;

     label01:
        z3 = z2;

        $i1 = lengthof r1;

        if i2 >= $i1 goto label17;

        $r8 = r1[i2];

        r2 = virtualinvoke $r8.<java.lang.String: java.lang.String[] split(java.lang.String)>("=");

        r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        r26 = r3;

     label02:
        r34 = new java.lang.StringBuilder;

        specialinvoke r34.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("get");

        $r10 = r2[0];

        $r11 = virtualinvoke $r10.<java.lang.String: java.lang.String substring(int,int)>(0, 1);

        $r12 = <java.util.Locale: java.util.Locale ROOT>;

        $r13 = virtualinvoke $r11.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>($r12);

        virtualinvoke r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = r2[0];

        $r16 = virtualinvoke $r15.<java.lang.String: java.lang.String substring(int)>(1);

        virtualinvoke r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke r34.<java.lang.StringBuilder: java.lang.String toString()>();

        $r19 = (java.lang.Class[]) null;

        r4 = virtualinvoke r26.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>($r18, $r19);

        r28 = virtualinvoke r3.<java.lang.Class: java.lang.Class getSuperclass()>();

     label03:
        r26 = r28;

        if r28 == null goto label04;

        if r4 == null goto label02;

     label04:
        z4 = z2;

        if r4 == null goto label12;

     label05:
        $r20 = (java.lang.Object[]) null;

        r29 = virtualinvoke r4.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r0, $r20);

     label06:
        if r29 == null goto label09;

     label07:
        r30 = virtualinvoke r29.<java.lang.Object: java.lang.String toString()>();

     label08:
        goto label10;

     label09:
        r30 = "null";

     label10:
        $r21 = r2[1];

        z5 = virtualinvoke r30.<java.lang.String: boolean matches(java.lang.String)>($r21);

     label11:
        z4 = z2 | z5;

     label12:
        z2 = z4;

        goto label16;

     label13:
        $r22 := @caughtexception;

        r35 = (java.lang.reflect.InvocationTargetException) $r22;

        virtualinvoke r35.<java.lang.reflect.InvocationTargetException: void printStackTrace()>();

        goto label16;

     label14:
        $r23 := @caughtexception;

        r36 = (java.lang.IllegalAccessException) $r23;

        virtualinvoke r36.<java.lang.IllegalAccessException: void printStackTrace()>();

        z4 = z2;

        goto label12;

     label15:
        $r24 := @caughtexception;

        r37 = (java.lang.NoSuchMethodException) $r24;

        virtualinvoke r37.<java.lang.NoSuchMethodException: void printStackTrace()>();

        z4 = z2;

        goto label12;

     label16:
        i2 = i2 + 1;

        goto label01;

     label17:
        return z3;

        catch java.lang.NoSuchMethodException from label02 to label03 with label15;
        catch java.lang.IllegalAccessException from label02 to label03 with label14;
        catch java.lang.reflect.InvocationTargetException from label02 to label03 with label13;
        catch java.lang.NoSuchMethodException from label05 to label06 with label15;
        catch java.lang.IllegalAccessException from label05 to label06 with label14;
        catch java.lang.reflect.InvocationTargetException from label05 to label06 with label13;
        catch java.lang.NoSuchMethodException from label07 to label08 with label15;
        catch java.lang.IllegalAccessException from label07 to label08 with label14;
        catch java.lang.reflect.InvocationTargetException from label07 to label08 with label13;
        catch java.lang.NoSuchMethodException from label10 to label11 with label15;
        catch java.lang.IllegalAccessException from label10 to label11 with label14;
        catch java.lang.reflect.InvocationTargetException from label10 to label11 with label13;
    }

    static boolean lambda$callersWithin$0(java.lang.Class, java.lang.StackTraceElement)
    {
        java.lang.Class r0;
        java.lang.StackTraceElement r1;
        java.lang.String $r2, $r3;
        boolean $z0;

        r0 := @parameter0: java.lang.Class;

        r1 := @parameter1: java.lang.StackTraceElement;

        $r2 = virtualinvoke r1.<java.lang.StackTraceElement: java.lang.String getClassName()>();

        $r3 = virtualinvoke r0.<java.lang.Class: java.lang.String getName()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>($r3);

        return $z0;
    }

    public static void printSizeValue(java.io.PrintWriter, long)
    {
        java.io.PrintWriter r0;
        long l0;
        byte $b1, $b2, $b3, $b4, $b5, $b6, $b7, $b8;
        java.lang.Object[] $r1, $r3, $r5, $r7;
        java.lang.Float $r2, $r4, $r6, $r8;
        float f0, f1, f2, f3, f4, f5;
        java.lang.String r9, r10, r11;

        r0 := @parameter0: java.io.PrintWriter;

        l0 := @parameter1: long;

        f0 = (float) l0;

        r9 = "";

        f1 = f0;

        $b1 = f0 cmpl 900.0F;

        if $b1 <= 0 goto label1;

        r9 = "KB";

        f1 = f0 / 1024.0F;

     label1:
        f2 = f1;

        $b2 = f1 cmpl 900.0F;

        if $b2 <= 0 goto label2;

        r9 = "MB";

        f2 = f1 / 1024.0F;

     label2:
        f3 = f2;

        $b3 = f2 cmpl 900.0F;

        if $b3 <= 0 goto label3;

        r9 = "GB";

        f3 = f2 / 1024.0F;

     label3:
        f4 = f3;

        $b4 = f3 cmpl 900.0F;

        if $b4 <= 0 goto label4;

        r9 = "TB";

        f4 = f3 / 1024.0F;

     label4:
        f5 = f4;

        r10 = r9;

        $b5 = f4 cmpl 900.0F;

        if $b5 <= 0 goto label5;

        r10 = "PB";

        f5 = f4 / 1024.0F;

     label5:
        $b6 = f5 cmpg 1.0F;

        if $b6 >= 0 goto label6;

        $r7 = newarray (java.lang.Object)[1];

        $r8 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(f5);

        $r7[0] = $r8;

        r11 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%.2f", $r7);

        goto label9;

     label6:
        $b7 = f5 cmpg 10.0F;

        if $b7 >= 0 goto label7;

        $r5 = newarray (java.lang.Object)[1];

        $r6 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(f5);

        $r5[0] = $r6;

        r11 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%.1f", $r5);

        goto label9;

     label7:
        $b8 = f5 cmpg 100.0F;

        if $b8 >= 0 goto label8;

        $r3 = newarray (java.lang.Object)[1];

        $r4 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(f5);

        $r3[0] = $r4;

        r11 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%.0f", $r3);

        goto label9;

     label8:
        $r1 = newarray (java.lang.Object)[1];

        $r2 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(f5);

        $r1[0] = $r2;

        r11 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%.0f", $r1);

     label9:
        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(r11);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(r10);

        return;
    }

    public static java.lang.String sizeValueToString(long, java.lang.StringBuilder)
    {
        long l0;
        byte $b1, $b2, $b3, $b4, $b5, $b6, $b7, $b8;
        java.lang.Object[] $r0, $r4, $r6, $r8;
        java.lang.Float $r1, $r5, $r7, $r9;
        java.lang.StringBuilder $r10, r11, r12;
        float f0, f1, f2, f3, f4, f5;
        java.lang.String r13, r14, r15, $r16;

        l0 := @parameter0: long;

        r11 := @parameter1: java.lang.StringBuilder;

        r12 = r11;

        if r11 != null goto label01;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>(int)>(32);

        r12 = $r10;

     label01:
        f0 = (float) l0;

        r13 = "";

        f1 = f0;

        $b1 = f0 cmpl 900.0F;

        if $b1 <= 0 goto label02;

        r13 = "KB";

        f1 = f0 / 1024.0F;

     label02:
        f2 = f1;

        $b2 = f1 cmpl 900.0F;

        if $b2 <= 0 goto label03;

        r13 = "MB";

        f2 = f1 / 1024.0F;

     label03:
        f3 = f2;

        $b3 = f2 cmpl 900.0F;

        if $b3 <= 0 goto label04;

        r13 = "GB";

        f3 = f2 / 1024.0F;

     label04:
        f4 = f3;

        $b4 = f3 cmpl 900.0F;

        if $b4 <= 0 goto label05;

        r13 = "TB";

        f4 = f3 / 1024.0F;

     label05:
        f5 = f4;

        r14 = r13;

        $b5 = f4 cmpl 900.0F;

        if $b5 <= 0 goto label06;

        r14 = "PB";

        f5 = f4 / 1024.0F;

     label06:
        $b6 = f5 cmpg 1.0F;

        if $b6 >= 0 goto label07;

        $r8 = newarray (java.lang.Object)[1];

        $r9 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(f5);

        $r8[0] = $r9;

        r15 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%.2f", $r8);

        goto label10;

     label07:
        $b7 = f5 cmpg 10.0F;

        if $b7 >= 0 goto label08;

        $r6 = newarray (java.lang.Object)[1];

        $r7 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(f5);

        $r6[0] = $r7;

        r15 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%.1f", $r6);

        goto label10;

     label08:
        $b8 = f5 cmpg 100.0F;

        if $b8 >= 0 goto label09;

        $r4 = newarray (java.lang.Object)[1];

        $r5 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(f5);

        $r4[0] = $r5;

        r15 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%.0f", $r4);

        goto label10;

     label09:
        $r0 = newarray (java.lang.Object)[1];

        $r1 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(f5);

        $r0[0] = $r1;

        r15 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%.0f", $r0);

     label10:
        virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r15);

        virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r14);

        $r16 = virtualinvoke r12.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r16;
    }

    public static java.lang.String valueToString(java.lang.Class, java.lang.String, int)
    {
        java.lang.String r0, $r1, $r4, r9;
        int i0, i1, i2, $i3, i4;
        boolean $z0, $z1, $z2, $z3;
        java.lang.Class $r2, $r3, r6;
        java.lang.Throwable $r5;
        java.lang.reflect.Field[] r7;
        java.lang.reflect.Field r8;

        r6 := @parameter0: java.lang.Class;

        r0 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r7 = virtualinvoke r6.<java.lang.Class: java.lang.reflect.Field[] getDeclaredFields()>();

        i1 = lengthof r7;

        i4 = 0;

     label1:
        if i4 >= i1 goto label7;

        r8 = r7[i4];

        i2 = virtualinvoke r8.<java.lang.reflect.Field: int getModifiers()>();

        $z0 = staticinvoke <java.lang.reflect.Modifier: boolean isStatic(int)>(i2);

        if $z0 == 0 goto label6;

        $z1 = staticinvoke <java.lang.reflect.Modifier: boolean isFinal(int)>(i2);

        if $z1 == 0 goto label6;

        $r2 = virtualinvoke r8.<java.lang.reflect.Field: java.lang.Class getType()>();

        $r3 = <java.lang.Integer: java.lang.Class TYPE>;

        $z2 = virtualinvoke $r2.<java.lang.Object: boolean equals(java.lang.Object)>($r3);

        if $z2 == 0 goto label6;

        $r4 = virtualinvoke r8.<java.lang.reflect.Field: java.lang.String getName()>();

        $z3 = virtualinvoke $r4.<java.lang.String: boolean startsWith(java.lang.String)>(r0);

        if $z3 == 0 goto label6;

     label2:
        $i3 = virtualinvoke r8.<java.lang.reflect.Field: int getInt(java.lang.Object)>(null);

        if i0 != $i3 goto label4;

        r9 = staticinvoke <android.util.DebugUtils: java.lang.String constNameWithoutPrefix(java.lang.String,java.lang.reflect.Field)>(r0, r8);

     label3:
        return r9;

     label4:
        goto label6;

     label5:
        $r5 := @caughtexception;

     label6:
        i4 = i4 + 1;

        goto label1;

     label7:
        $r1 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0);

        return $r1;

        catch java.lang.IllegalAccessException from label2 to label3 with label5;
    }
}
