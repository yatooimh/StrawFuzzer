public final class android.util.EventLog$Event extends java.lang.Object
{
    private static final byte FLOAT_TYPE;
    private static final int HEADER_SIZE_OFFSET;
    private static final byte INT_TYPE;
    private static final int LENGTH_OFFSET;
    private static final byte LIST_TYPE;
    private static final byte LONG_TYPE;
    private static final int NANOSECONDS_OFFSET;
    private static final int PROCESS_OFFSET;
    private static final int SECONDS_OFFSET;
    private static final byte STRING_TYPE;
    private static final int TAG_LENGTH;
    private static final int THREAD_OFFSET;
    private static final int UID_OFFSET;
    private static final int V1_PAYLOAD_START;
    private final java.nio.ByteBuffer mBuffer;
    private java.lang.Exception mLastWtf;

    void <init>(byte[])
    {
        android.util.EventLog$Event r0;
        java.nio.ByteOrder $r1;
        byte[] r3;
        java.nio.ByteBuffer r4;

        r0 := @this: android.util.EventLog$Event;

        r3 := @parameter0: byte[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r4 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>(r3);

        r0.<android.util.EventLog$Event: java.nio.ByteBuffer mBuffer> = r4;

        $r1 = staticinvoke <java.nio.ByteOrder: java.nio.ByteOrder nativeOrder()>();

        virtualinvoke r4.<java.nio.ByteBuffer: java.nio.ByteBuffer order(java.nio.ByteOrder)>($r1);

        return;
    }

    private java.lang.Object decodeObject()
    {
        android.util.EventLog$Event r0;
        java.nio.ByteBuffer $r1, $r2, $r4, $r6, $r7, $r8, $r11, $r13, $r20;
        int $i0, $i2, i6, i7, i8, i9;
        java.lang.Integer $r3;
        long $l1;
        java.lang.Long $r5;
        byte[] $r12;
        java.lang.Object $r14;
        java.lang.String $r19, r29;
        float $f0;
        java.lang.Float $r21;
        java.lang.Throwable $r22;
        byte b4, b5;
        java.lang.Object[] r24;
        java.lang.StringBuilder r27;
        java.lang.IllegalArgumentException r28;
        java.lang.Exception r30;

        r0 := @this: android.util.EventLog$Event;

        $r1 = r0.<android.util.EventLog$Event: java.nio.ByteBuffer mBuffer>;

        b4 = virtualinvoke $r1.<java.nio.ByteBuffer: byte get()>();

        if b4 == 0 goto label10;

        if b4 == 1 goto label09;

        if b4 == 2 goto label06;

        if b4 == 3 goto label02;

        if b4 != 4 goto label01;

        $r20 = r0.<android.util.EventLog$Event: java.nio.ByteBuffer mBuffer>;

        $f0 = virtualinvoke $r20.<java.nio.ByteBuffer: float getFloat()>();

        $r21 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        return $r21;

     label01:
        r27 = new java.lang.StringBuilder;

        specialinvoke r27.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown entry type: ");

        virtualinvoke r27.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(b4);

        r28 = new java.lang.IllegalArgumentException;

        $r19 = virtualinvoke r27.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r28.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r19);

        throw r28;

     label02:
        $r13 = r0.<android.util.EventLog$Event: java.nio.ByteBuffer mBuffer>;

        b5 = virtualinvoke $r13.<java.nio.ByteBuffer: byte get()>();

        i6 = b5;

        if b5 >= 0 goto label03;

        i6 = b5 + 256;

     label03:
        r24 = newarray (java.lang.Object)[i6];

        i7 = 0;

     label04:
        if i7 >= i6 goto label05;

        $r14 = specialinvoke r0.<android.util.EventLog$Event: java.lang.Object decodeObject()>();

        r24[i7] = $r14;

        i7 = i7 + 1;

        goto label04;

     label05:
        return r24;

     label06:
        $r6 = r0.<android.util.EventLog$Event: java.nio.ByteBuffer mBuffer>;

        i8 = virtualinvoke $r6.<java.nio.ByteBuffer: int getInt()>();

        $r7 = r0.<android.util.EventLog$Event: java.nio.ByteBuffer mBuffer>;

        i9 = virtualinvoke $r7.<java.nio.ByteBuffer: int position()>();

        $r8 = r0.<android.util.EventLog$Event: java.nio.ByteBuffer mBuffer>;

        $i2 = i9 + i8;

        virtualinvoke $r8.<java.nio.ByteBuffer: java.nio.Buffer position(int)>($i2);

        r29 = new java.lang.String;

        $r11 = r0.<android.util.EventLog$Event: java.nio.ByteBuffer mBuffer>;

        $r12 = virtualinvoke $r11.<java.nio.ByteBuffer: byte[] array()>();

        specialinvoke r29.<java.lang.String: void <init>(byte[],int,int,java.lang.String)>($r12, i9, i8, "UTF-8");

     label07:
        return r29;

     label08:
        $r22 := @caughtexception;

        staticinvoke <android.util.Log: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("EventLog", "UTF-8 is not supported", $r22);

        r30 = (java.lang.Exception) $r22;

        r0.<android.util.EventLog$Event: java.lang.Exception mLastWtf> = r30;

        return null;

     label09:
        $r4 = r0.<android.util.EventLog$Event: java.nio.ByteBuffer mBuffer>;

        $l1 = virtualinvoke $r4.<java.nio.ByteBuffer: long getLong()>();

        $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        return $r5;

     label10:
        $r2 = r0.<android.util.EventLog$Event: java.nio.ByteBuffer mBuffer>;

        $i0 = virtualinvoke $r2.<java.nio.ByteBuffer: int getInt()>();

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        return $r3;

        catch java.io.UnsupportedEncodingException from label06 to label07 with label08;
    }

    private static byte[] encodeObject(java.lang.Object)
    {
        byte[][] r0;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.StringBuilder $r1;
        java.lang.IllegalArgumentException $r4, $r6;
        java.lang.String $r5, r48;
        int $i0, $i1, $i2, $i3, $i4, $i6, $i7, $i8, $i9, $i10, $i12, i13, i14, i15;
        java.nio.ByteBuffer $r7, $r9, $r10, $r17, $r19, $r20, $r21, $r22, $r24, $r26, $r27, $r29, $r31, $r33, $r34, $r36, $r38, $r40, $r41, $r43, r52;
        java.nio.ByteOrder $r8, $r18, $r25, $r32, $r39;
        byte $b5;
        byte[] $r11, $r12, $r15, $r16, $r23, $r30, $r37, $r44, $r45, r49;
        java.lang.Object $r14, r47;
        java.lang.Float $r28;
        float $f0;
        java.lang.Long $r35;
        long $l11;
        java.lang.Integer $r42;
        java.lang.Throwable $r46;
        java.lang.Object[] r51;

        r47 := @parameter0: java.lang.Object;

        if r47 != null goto label01;

        $r45 = newarray (byte)[0];

        return $r45;

     label01:
        $z0 = r47 instanceof java.lang.Integer;

        if $z0 == 0 goto label02;

        $r38 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>(5);

        $r39 = staticinvoke <java.nio.ByteOrder: java.nio.ByteOrder nativeOrder()>();

        $r40 = virtualinvoke $r38.<java.nio.ByteBuffer: java.nio.ByteBuffer order(java.nio.ByteOrder)>($r39);

        $r41 = virtualinvoke $r40.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>(0);

        $r42 = (java.lang.Integer) r47;

        $i12 = virtualinvoke $r42.<java.lang.Integer: int intValue()>();

        $r43 = virtualinvoke $r41.<java.nio.ByteBuffer: java.nio.ByteBuffer putInt(int)>($i12);

        $r44 = virtualinvoke $r43.<java.nio.ByteBuffer: byte[] array()>();

        return $r44;

     label02:
        $z1 = r47 instanceof java.lang.Long;

        if $z1 == 0 goto label03;

        $r31 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>(9);

        $r32 = staticinvoke <java.nio.ByteOrder: java.nio.ByteOrder nativeOrder()>();

        $r33 = virtualinvoke $r31.<java.nio.ByteBuffer: java.nio.ByteBuffer order(java.nio.ByteOrder)>($r32);

        $r34 = virtualinvoke $r33.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>(1);

        $r35 = (java.lang.Long) r47;

        $l11 = virtualinvoke $r35.<java.lang.Long: long longValue()>();

        $r36 = virtualinvoke $r34.<java.nio.ByteBuffer: java.nio.ByteBuffer putLong(long)>($l11);

        $r37 = virtualinvoke $r36.<java.nio.ByteBuffer: byte[] array()>();

        return $r37;

     label03:
        $z2 = r47 instanceof java.lang.Float;

        if $z2 == 0 goto label04;

        $r24 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>(5);

        $r25 = staticinvoke <java.nio.ByteOrder: java.nio.ByteOrder nativeOrder()>();

        $r26 = virtualinvoke $r24.<java.nio.ByteBuffer: java.nio.ByteBuffer order(java.nio.ByteOrder)>($r25);

        $r27 = virtualinvoke $r26.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>(4);

        $r28 = (java.lang.Float) r47;

        $f0 = virtualinvoke $r28.<java.lang.Float: float floatValue()>();

        $r29 = virtualinvoke $r27.<java.nio.ByteBuffer: java.nio.ByteBuffer putFloat(float)>($f0);

        $r30 = virtualinvoke $r29.<java.nio.ByteBuffer: byte[] array()>();

        return $r30;

     label04:
        $z3 = r47 instanceof java.lang.String;

        if $z3 == 0 goto label09;

        r48 = (java.lang.String) r47;

     label05:
        r49 = virtualinvoke r48.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8");

     label06:
        goto label08;

     label07:
        $r46 := @caughtexception;

        r49 = newarray (byte)[0];

     label08:
        $i8 = lengthof r49;

        $i9 = $i8 + 5;

        $r17 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>($i9);

        $r18 = staticinvoke <java.nio.ByteOrder: java.nio.ByteOrder nativeOrder()>();

        $r19 = virtualinvoke $r17.<java.nio.ByteBuffer: java.nio.ByteBuffer order(java.nio.ByteOrder)>($r18);

        $r20 = virtualinvoke $r19.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>(2);

        $i10 = lengthof r49;

        $r21 = virtualinvoke $r20.<java.nio.ByteBuffer: java.nio.ByteBuffer putInt(int)>($i10);

        $r22 = virtualinvoke $r21.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[])>(r49);

        $r23 = virtualinvoke $r22.<java.nio.ByteBuffer: byte[] array()>();

        return $r23;

     label09:
        $z4 = r47 instanceof java.lang.Object[];

        if $z4 == 0 goto label15;

        r51 = (java.lang.Object[]) r47;

        $i0 = lengthof r51;

        if $i0 > 255 goto label14;

        $i1 = lengthof r51;

        r0 = newarray (byte[])[$i1];

        i13 = 0;

        i14 = 0;

     label10:
        $i2 = lengthof r51;

        if i14 >= $i2 goto label11;

        $r14 = r51[i14];

        $r15 = staticinvoke <android.util.EventLog$Event: byte[] encodeObject(java.lang.Object)>($r14);

        r0[i14] = $r15;

        $r16 = r0[i14];

        $i7 = lengthof $r16;

        i13 = i13 + $i7;

        i14 = i14 + 1;

        goto label10;

     label11:
        $i3 = i13 + 2;

        $r7 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>($i3);

        $r8 = staticinvoke <java.nio.ByteOrder: java.nio.ByteOrder nativeOrder()>();

        $r9 = virtualinvoke $r7.<java.nio.ByteBuffer: java.nio.ByteBuffer order(java.nio.ByteOrder)>($r8);

        $r10 = virtualinvoke $r9.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>(3);

        $i4 = lengthof r51;

        $b5 = (byte) $i4;

        r52 = virtualinvoke $r10.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>($b5);

        i15 = 0;

     label12:
        $i6 = lengthof r51;

        if i15 >= $i6 goto label13;

        $r12 = r0[i15];

        virtualinvoke r52.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[])>($r12);

        i15 = i15 + 1;

        goto label12;

     label13:
        $r11 = virtualinvoke r52.<java.nio.ByteBuffer: byte[] array()>();

        return $r11;

     label14:
        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Object array too long");

        throw $r6;

     label15:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown object type ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r47);

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r4;

        catch java.io.UnsupportedEncodingException from label05 to label06 with label07;
    }

    public static android.util.EventLog$Event fromBytes(byte[])
    {
        byte[] r0;
        android.util.EventLog$Event $r1;

        r0 := @parameter0: byte[];

        $r1 = new android.util.EventLog$Event;

        specialinvoke $r1.<android.util.EventLog$Event: void <init>(byte[])>(r0);

        return $r1;
    }

    private int getHeaderSize()
    {
        android.util.EventLog$Event r0;
        short s0;
        java.nio.ByteBuffer $r1;

        r0 := @this: android.util.EventLog$Event;

        $r1 = r0.<android.util.EventLog$Event: java.nio.ByteBuffer mBuffer>;

        s0 = virtualinvoke $r1.<java.nio.ByteBuffer: short getShort(int)>(2);

        if s0 == 0 goto label1;

        return s0;

     label1:
        return 20;
    }

    public void clearError()
    {
        android.util.EventLog$Event r0;

        r0 := @this: android.util.EventLog$Event;

        r0.<android.util.EventLog$Event: java.lang.Exception mLastWtf> = null;

        return;
    }

    public boolean equals(java.lang.Object)
    {
        android.util.EventLog$Event r0, r8;
        java.lang.Class $r1, $r2;
        java.nio.ByteBuffer $r3, $r5;
        byte[] $r4, $r6;
        boolean $z0;
        java.lang.Object r7;

        r0 := @this: android.util.EventLog$Event;

        r7 := @parameter0: java.lang.Object;

        if r0 != r7 goto label1;

        return 1;

     label1:
        if r7 == null goto label3;

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = virtualinvoke r7.<java.lang.Object: java.lang.Class getClass()>();

        if $r1 == $r2 goto label2;

        goto label3;

     label2:
        r8 = (android.util.EventLog$Event) r7;

        $r3 = r0.<android.util.EventLog$Event: java.nio.ByteBuffer mBuffer>;

        $r4 = virtualinvoke $r3.<java.nio.ByteBuffer: byte[] array()>();

        $r5 = r8.<android.util.EventLog$Event: java.nio.ByteBuffer mBuffer>;

        $r6 = virtualinvoke $r5.<java.nio.ByteBuffer: byte[] array()>();

        $z0 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>($r4, $r6);

        return $z0;

     label3:
        return 0;
    }

    public byte[] getBytes()
    {
        android.util.EventLog$Event r0;
        byte[] r1, $r3;
        java.nio.ByteBuffer $r2;
        int $i0;

        r0 := @this: android.util.EventLog$Event;

        $r2 = r0.<android.util.EventLog$Event: java.nio.ByteBuffer mBuffer>;

        r1 = virtualinvoke $r2.<java.nio.ByteBuffer: byte[] array()>();

        $i0 = lengthof r1;

        $r3 = staticinvoke <java.util.Arrays: byte[] copyOf(byte[],int)>(r1, $i0);

        return $r3;
    }

    public java.lang.Object getData()
    {
        android.util.EventLog$Event r0;
        int i0, i1, $i3, $i4, $i5, $i6, $i8;
        java.nio.ByteBuffer $r1, $r2, $r4, $r5;
        short $s2;
        java.lang.Throwable $r7, $r8, $r12;
        java.lang.String $r11, $r15;
        java.lang.Object r16;
        java.lang.StringBuilder r22, r23;
        java.lang.Exception r24, r25;

        r0 := @this: android.util.EventLog$Event;

        entermonitor r0;

     label01:
        i0 = specialinvoke r0.<android.util.EventLog$Event: int getHeaderSize()>();

        $r2 = r0.<android.util.EventLog$Event: java.nio.ByteBuffer mBuffer>;

        $r1 = r0.<android.util.EventLog$Event: java.nio.ByteBuffer mBuffer>;

        $s2 = virtualinvoke $r1.<java.nio.ByteBuffer: short getShort(int)>(0);

        $i3 = $s2 + i0;

        virtualinvoke $r2.<java.nio.ByteBuffer: java.nio.Buffer limit(int)>($i3);

        $r4 = r0.<android.util.EventLog$Event: java.nio.ByteBuffer mBuffer>;

        i1 = virtualinvoke $r4.<java.nio.ByteBuffer: int limit()>();

     label02:
        $i4 = i0 + 4;

        if $i4 < i1 goto label03;

        exitmonitor r0;

        return null;

     label03:
        $r5 = r0.<android.util.EventLog$Event: java.nio.ByteBuffer mBuffer>;

        $i5 = i0 + 4;

        virtualinvoke $r5.<java.nio.ByteBuffer: java.nio.Buffer position(int)>($i5);

        r16 = specialinvoke r0.<android.util.EventLog$Event: java.lang.Object decodeObject()>();

     label04:
        exitmonitor r0;

        return r16;

     label05:
        $r7 := @caughtexception;

        goto label12;

     label06:
        $r8 := @caughtexception;

     label07:
        r22 = new java.lang.StringBuilder;

        specialinvoke r22.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Truncated entry payload: tag=");

        $i6 = virtualinvoke r0.<android.util.EventLog$Event: int getTag()>();

        virtualinvoke r22.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        $r11 = virtualinvoke r22.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("EventLog", $r11, $r8);

        r24 = (java.lang.Exception) $r8;

        r0.<android.util.EventLog$Event: java.lang.Exception mLastWtf> = r24;

     label08:
        exitmonitor r0;

        return null;

     label09:
        $r12 := @caughtexception;

     label10:
        r23 = new java.lang.StringBuilder;

        specialinvoke r23.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Illegal entry payload: tag=");

        $i8 = virtualinvoke r0.<android.util.EventLog$Event: int getTag()>();

        virtualinvoke r23.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8);

        $r15 = virtualinvoke r23.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("EventLog", $r15, $r12);

        r25 = (java.lang.Exception) $r12;

        r0.<android.util.EventLog$Event: java.lang.Exception mLastWtf> = r25;

     label11:
        exitmonitor r0;

        return null;

     label12:
        exitmonitor r0;

        throw $r7;

        catch java.lang.IllegalArgumentException from label01 to label02 with label09;
        catch java.nio.BufferUnderflowException from label01 to label02 with label06;
        catch java.lang.Throwable from label01 to label02 with label05;
        catch java.lang.IllegalArgumentException from label03 to label04 with label09;
        catch java.nio.BufferUnderflowException from label03 to label04 with label06;
        catch java.lang.Throwable from label03 to label04 with label05;
        catch java.lang.Throwable from label07 to label08 with label05;
        catch java.lang.Throwable from label10 to label11 with label05;
    }

    public java.lang.Exception getLastError()
    {
        android.util.EventLog$Event r0;
        java.lang.Exception $r1;

        r0 := @this: android.util.EventLog$Event;

        $r1 = r0.<android.util.EventLog$Event: java.lang.Exception mLastWtf>;

        return $r1;
    }

    public int getProcessId()
    {
        android.util.EventLog$Event r0;
        java.nio.ByteBuffer $r1;
        int $i0;

        r0 := @this: android.util.EventLog$Event;

        $r1 = r0.<android.util.EventLog$Event: java.nio.ByteBuffer mBuffer>;

        $i0 = virtualinvoke $r1.<java.nio.ByteBuffer: int getInt(int)>(4);

        return $i0;
    }

    public int getTag()
    {
        android.util.EventLog$Event r0;
        java.nio.ByteBuffer $r1;
        int $i0, $i1;

        r0 := @this: android.util.EventLog$Event;

        $r1 = r0.<android.util.EventLog$Event: java.nio.ByteBuffer mBuffer>;

        $i0 = specialinvoke r0.<android.util.EventLog$Event: int getHeaderSize()>();

        $i1 = virtualinvoke $r1.<java.nio.ByteBuffer: int getInt(int)>($i0);

        return $i1;
    }

    public int getThreadId()
    {
        android.util.EventLog$Event r0;
        java.nio.ByteBuffer $r1;
        int $i0;

        r0 := @this: android.util.EventLog$Event;

        $r1 = r0.<android.util.EventLog$Event: java.nio.ByteBuffer mBuffer>;

        $i0 = virtualinvoke $r1.<java.nio.ByteBuffer: int getInt(int)>(8);

        return $i0;
    }

    public long getTimeNanos()
    {
        android.util.EventLog$Event r0;
        java.nio.ByteBuffer $r1, $r2;
        int $i0, $i3;
        long $l1, $l2, $l4, $l5;

        r0 := @this: android.util.EventLog$Event;

        $r1 = r0.<android.util.EventLog$Event: java.nio.ByteBuffer mBuffer>;

        $i0 = virtualinvoke $r1.<java.nio.ByteBuffer: int getInt(int)>(12);

        $l1 = (long) $i0;

        $l2 = $l1 * 1000000000L;

        $r2 = r0.<android.util.EventLog$Event: java.nio.ByteBuffer mBuffer>;

        $i3 = virtualinvoke $r2.<java.nio.ByteBuffer: int getInt(int)>(16);

        $l4 = (long) $i3;

        $l5 = $l2 + $l4;

        return $l5;
    }

    public int getUid()
    {
        android.util.EventLog$Event r0;
        int i0;
        java.nio.ByteBuffer $r2;
        java.lang.IndexOutOfBoundsException $r3;

        r0 := @this: android.util.EventLog$Event;

     label1:
        $r2 = r0.<android.util.EventLog$Event: java.nio.ByteBuffer mBuffer>;

        i0 = virtualinvoke $r2.<java.nio.ByteBuffer: int getInt(int)>(24);

     label2:
        return i0;

     label3:
        $r3 := @caughtexception;

        return -1;

        catch java.lang.IndexOutOfBoundsException from label1 to label2 with label3;
    }

    public int hashCode()
    {
        android.util.EventLog$Event r0;
        java.nio.ByteBuffer $r1;
        byte[] $r2;
        int $i0;

        r0 := @this: android.util.EventLog$Event;

        $r1 = r0.<android.util.EventLog$Event: java.nio.ByteBuffer mBuffer>;

        $r2 = virtualinvoke $r1.<java.nio.ByteBuffer: byte[] array()>();

        $i0 = staticinvoke <java.util.Arrays: int hashCode(byte[])>($r2);

        return $i0;
    }

    public android.util.EventLog$Event withNewData(java.lang.Object)
    {
        android.util.EventLog$Event r0, $r4;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        java.lang.IllegalArgumentException $r1;
        java.nio.ByteBuffer $r2, $r5;
        byte[] $r3, r8, r9;
        short $s10;
        java.lang.Object r7;

        r0 := @this: android.util.EventLog$Event;

        r7 := @parameter0: java.lang.Object;

        r8 = staticinvoke <android.util.EventLog$Event: byte[] encodeObject(java.lang.Object)>(r7);

        $i1 = lengthof r8;

        if $i1 > 65531 goto label1;

        i0 = specialinvoke r0.<android.util.EventLog$Event: int getHeaderSize()>();

        $i3 = i0 + 4;

        $i2 = lengthof r8;

        $i4 = $i3 + $i2;

        r9 = newarray (byte)[$i4];

        $r2 = r0.<android.util.EventLog$Event: java.nio.ByteBuffer mBuffer>;

        $r3 = virtualinvoke $r2.<java.nio.ByteBuffer: byte[] array()>();

        $i5 = i0 + 4;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, 0, r9, 0, $i5);

        $i7 = i0 + 4;

        $i6 = lengthof r8;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r8, 0, r9, $i7, $i6);

        $r4 = new android.util.EventLog$Event;

        specialinvoke $r4.<android.util.EventLog$Event: void <init>(byte[])>(r9);

        $r5 = $r4.<android.util.EventLog$Event: java.nio.ByteBuffer mBuffer>;

        $i8 = lengthof r8;

        $i9 = $i8 + 4;

        $s10 = (short) $i9;

        virtualinvoke $r5.<java.nio.ByteBuffer: java.nio.ByteBuffer putShort(int,short)>(0, $s10);

        return $r4;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Payload too long");

        throw $r1;
    }

    public static void <clinit>()
    {
        <android.util.EventLog$Event: int V1_PAYLOAD_START> = 20;

        <android.util.EventLog$Event: int UID_OFFSET> = 24;

        <android.util.EventLog$Event: int THREAD_OFFSET> = 8;

        <android.util.EventLog$Event: int TAG_LENGTH> = 4;

        <android.util.EventLog$Event: byte STRING_TYPE> = 2;

        <android.util.EventLog$Event: int SECONDS_OFFSET> = 12;

        <android.util.EventLog$Event: int PROCESS_OFFSET> = 4;

        <android.util.EventLog$Event: int NANOSECONDS_OFFSET> = 16;

        <android.util.EventLog$Event: byte LONG_TYPE> = 1;

        <android.util.EventLog$Event: byte LIST_TYPE> = 3;

        <android.util.EventLog$Event: int LENGTH_OFFSET> = 0;

        <android.util.EventLog$Event: byte INT_TYPE> = 0;

        <android.util.EventLog$Event: int HEADER_SIZE_OFFSET> = 2;

        <android.util.EventLog$Event: byte FLOAT_TYPE> = 4;

        return;
    }
}
