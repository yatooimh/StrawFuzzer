public class android.util.FeatureFlagUtils extends java.lang.Object
{
    private static final java.util.Map DEFAULT_FLAGS;
    public static final java.lang.String DYNAMIC_SYSTEM;
    public static final java.lang.String FFLAG_OVERRIDE_PREFIX;
    public static final java.lang.String FFLAG_PREFIX;
    public static final java.lang.String HEARING_AID_SETTINGS;
    public static final java.lang.String PERSIST_PREFIX;
    public static final java.lang.String SCREENRECORD_LONG_PRESS;
    public static final java.lang.String SEAMLESS_TRANSFER;
    public static final java.lang.String SETTINGS_DO_NOT_RESTORE_PRESERVED;
    public static final java.lang.String SETTINGS_FUSE_FLAG;
    public static final java.lang.String SETTINGS_WIFITRACKER2;

    static void <clinit>()
    {
        java.util.HashMap $r1;
        java.util.Map $r3, $r5, $r7, $r9, $r11, $r13, $r15, $r17, $r19, $r21, $r23, $r25, $r27;

        <android.util.FeatureFlagUtils: java.lang.String SETTINGS_WIFITRACKER2> = "settings_wifitracker2";

        <android.util.FeatureFlagUtils: java.lang.String SETTINGS_FUSE_FLAG> = "settings_fuse";

        <android.util.FeatureFlagUtils: java.lang.String SETTINGS_DO_NOT_RESTORE_PRESERVED> = "settings_do_not_restore_preserved";

        <android.util.FeatureFlagUtils: java.lang.String SEAMLESS_TRANSFER> = "settings_seamless_transfer";

        <android.util.FeatureFlagUtils: java.lang.String SCREENRECORD_LONG_PRESS> = "settings_screenrecord_long_press";

        <android.util.FeatureFlagUtils: java.lang.String PERSIST_PREFIX> = "persist.sys.fflag.override.";

        <android.util.FeatureFlagUtils: java.lang.String HEARING_AID_SETTINGS> = "settings_bluetooth_hearing_aid";

        <android.util.FeatureFlagUtils: java.lang.String FFLAG_PREFIX> = "sys.fflag.";

        <android.util.FeatureFlagUtils: java.lang.String FFLAG_OVERRIDE_PREFIX> = "sys.fflag.override.";

        <android.util.FeatureFlagUtils: java.lang.String DYNAMIC_SYSTEM> = "settings_dynamic_system";

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        <android.util.FeatureFlagUtils: java.util.Map DEFAULT_FLAGS> = $r1;

        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("settings_audio_switcher", "true");

        $r3 = <android.util.FeatureFlagUtils: java.util.Map DEFAULT_FLAGS>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("settings_systemui_theme", "true");

        $r5 = <android.util.FeatureFlagUtils: java.util.Map DEFAULT_FLAGS>;

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("settings_fuse", "true");

        $r7 = <android.util.FeatureFlagUtils: java.util.Map DEFAULT_FLAGS>;

        interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("settings_dynamic_system", "false");

        $r9 = <android.util.FeatureFlagUtils: java.util.Map DEFAULT_FLAGS>;

        interfaceinvoke $r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("settings_seamless_transfer", "false");

        $r11 = <android.util.FeatureFlagUtils: java.util.Map DEFAULT_FLAGS>;

        interfaceinvoke $r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("settings_bluetooth_hearing_aid", "false");

        $r13 = <android.util.FeatureFlagUtils: java.util.Map DEFAULT_FLAGS>;

        interfaceinvoke $r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("settings_screenrecord_long_press", "false");

        $r15 = <android.util.FeatureFlagUtils: java.util.Map DEFAULT_FLAGS>;

        interfaceinvoke $r15.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("settings_wifi_details_datausage_header", "false");

        $r17 = <android.util.FeatureFlagUtils: java.util.Map DEFAULT_FLAGS>;

        interfaceinvoke $r17.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("settings_skip_direction_mutable", "true");

        $r19 = <android.util.FeatureFlagUtils: java.util.Map DEFAULT_FLAGS>;

        interfaceinvoke $r19.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("settings_wifitracker2", "true");

        $r21 = <android.util.FeatureFlagUtils: java.util.Map DEFAULT_FLAGS>;

        interfaceinvoke $r21.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("settings_controller_loading_enhancement", "true");

        $r23 = <android.util.FeatureFlagUtils: java.util.Map DEFAULT_FLAGS>;

        interfaceinvoke $r23.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("settings_conditionals", "false");

        $r25 = <android.util.FeatureFlagUtils: java.util.Map DEFAULT_FLAGS>;

        interfaceinvoke $r25.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("settings_do_not_restore_preserved", "true");

        $r27 = <android.util.FeatureFlagUtils: java.util.Map DEFAULT_FLAGS>;

        interfaceinvoke $r27.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("settings_tether_all_in_one", "false");

        return;
    }

    public void <init>()
    {
        android.util.FeatureFlagUtils r0;

        r0 := @this: android.util.FeatureFlagUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.util.Map getAllFeatureFlags()
    {
        java.util.Map $r0;

        $r0 = <android.util.FeatureFlagUtils: java.util.Map DEFAULT_FLAGS>;

        return $r0;
    }

    public static boolean isEnabled(android.content.Context, java.lang.String)
    {
        java.lang.String r0, $r4, $r7, r10, r12;
        java.lang.StringBuilder $r1;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.util.Map $r5;
        java.lang.Object $r6;
        android.content.ContentResolver $r8;
        android.content.Context r9;

        r9 := @parameter0: android.content.Context;

        r0 := @parameter1: java.lang.String;

        if r9 == null goto label1;

        $r8 = virtualinvoke r9.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        r10 = staticinvoke <android.provider.Settings$Global: java.lang.String getString(android.content.ContentResolver,java.lang.String)>($r8, r0);

        $z3 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r10);

        if $z3 != 0 goto label1;

        $z4 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>(r10);

        return $z4;

     label1:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("sys.fflag.override.");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        r12 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String)>($r4);

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r12);

        if $z0 != 0 goto label2;

        $z2 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>(r12);

        return $z2;

     label2:
        $r5 = staticinvoke <android.util.FeatureFlagUtils: java.util.Map getAllFeatureFlags()>();

        $r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        $r7 = (java.lang.String) $r6;

        $z1 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r7);

        return $z1;
    }

    public static void setEnabled(android.content.Context, java.lang.String, boolean)
    {
        boolean z0;
        java.lang.StringBuilder $r0;
        android.content.Context r3;
        java.lang.String r4, r6, r7;

        r3 := @parameter0: android.content.Context;

        r4 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("sys.fflag.override.");

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        r6 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        if z0 == 0 goto label1;

        r7 = "true";

        goto label2;

     label1:
        r7 = "false";

     label2:
        staticinvoke <android.os.SystemProperties: void set(java.lang.String,java.lang.String)>(r6, r7);

        return;
    }
}
