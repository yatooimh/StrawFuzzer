public class android.util.FloatMath extends java.lang.Object
{

    private void <init>()
    {
        android.util.FloatMath r0;

        r0 := @this: android.util.FloatMath;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static float ceil(float)
    {
        float f0, $f1;
        double $d0, $d1;

        f0 := @parameter0: float;

        $d0 = (double) f0;

        $d1 = staticinvoke <java.lang.Math: double ceil(double)>($d0);

        $f1 = (float) $d1;

        return $f1;
    }

    public static float cos(float)
    {
        float f0, $f1;
        double $d0, $d1;

        f0 := @parameter0: float;

        $d0 = (double) f0;

        $d1 = staticinvoke <java.lang.Math: double cos(double)>($d0);

        $f1 = (float) $d1;

        return $f1;
    }

    public static float exp(float)
    {
        float f0, $f1;
        double $d0, $d1;

        f0 := @parameter0: float;

        $d0 = (double) f0;

        $d1 = staticinvoke <java.lang.Math: double exp(double)>($d0);

        $f1 = (float) $d1;

        return $f1;
    }

    public static float floor(float)
    {
        float f0, $f1;
        double $d0, $d1;

        f0 := @parameter0: float;

        $d0 = (double) f0;

        $d1 = staticinvoke <java.lang.Math: double floor(double)>($d0);

        $f1 = (float) $d1;

        return $f1;
    }

    public static float hypot(float, float)
    {
        float f0, f1, $f2;
        double $d0, $d1, $d2;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $d1 = (double) f0;

        $d0 = (double) f1;

        $d2 = staticinvoke <java.lang.Math: double hypot(double,double)>($d1, $d0);

        $f2 = (float) $d2;

        return $f2;
    }

    public static float pow(float, float)
    {
        float f0, f1, $f2;
        double $d0, $d1, $d2;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $d1 = (double) f0;

        $d0 = (double) f1;

        $d2 = staticinvoke <java.lang.Math: double pow(double,double)>($d1, $d0);

        $f2 = (float) $d2;

        return $f2;
    }

    public static float sin(float)
    {
        float f0, $f1;
        double $d0, $d1;

        f0 := @parameter0: float;

        $d0 = (double) f0;

        $d1 = staticinvoke <java.lang.Math: double sin(double)>($d0);

        $f1 = (float) $d1;

        return $f1;
    }

    public static float sqrt(float)
    {
        float f0, $f1;
        double $d0, $d1;

        f0 := @parameter0: float;

        $d0 = (double) f0;

        $d1 = staticinvoke <java.lang.Math: double sqrt(double)>($d0);

        $f1 = (float) $d1;

        return $f1;
    }
}
