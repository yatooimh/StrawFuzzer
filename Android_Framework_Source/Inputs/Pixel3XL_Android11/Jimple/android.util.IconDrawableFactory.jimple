public class android.util.IconDrawableFactory extends java.lang.Object
{
    protected final android.content.Context mContext;
    protected final boolean mEmbedShadow;
    protected final android.util.LauncherIcons mLauncherIcons;
    protected final android.content.pm.PackageManager mPm;
    protected final android.os.UserManager mUm;

    private void <init>(android.content.Context, boolean)
    {
        android.util.IconDrawableFactory r0;
        android.content.Context r1;
        boolean z0;
        android.content.pm.PackageManager $r2;
        java.lang.Object $r3;
        android.os.UserManager $r4;
        android.util.LauncherIcons $r5;

        r0 := @this: android.util.IconDrawableFactory;

        r1 := @parameter0: android.content.Context;

        z0 := @parameter1: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.util.IconDrawableFactory: android.content.Context mContext> = r1;

        $r2 = virtualinvoke r1.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        r0.<android.util.IconDrawableFactory: android.content.pm.PackageManager mPm> = $r2;

        $r3 = virtualinvoke r1.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/os/UserManager;");

        $r4 = (android.os.UserManager) $r3;

        r0.<android.util.IconDrawableFactory: android.os.UserManager mUm> = $r4;

        $r5 = new android.util.LauncherIcons;

        specialinvoke $r5.<android.util.LauncherIcons: void <init>(android.content.Context)>(r1);

        r0.<android.util.IconDrawableFactory: android.util.LauncherIcons mLauncherIcons> = $r5;

        r0.<android.util.IconDrawableFactory: boolean mEmbedShadow> = z0;

        return;
    }

    public static android.util.IconDrawableFactory newInstance(android.content.Context)
    {
        android.content.Context r0;
        android.util.IconDrawableFactory $r1;

        r0 := @parameter0: android.content.Context;

        $r1 = new android.util.IconDrawableFactory;

        specialinvoke $r1.<android.util.IconDrawableFactory: void <init>(android.content.Context,boolean)>(r0, 1);

        return $r1;
    }

    public static android.util.IconDrawableFactory newInstance(android.content.Context, boolean)
    {
        android.content.Context r0;
        boolean z0;
        android.util.IconDrawableFactory $r1;

        r0 := @parameter0: android.content.Context;

        z0 := @parameter1: boolean;

        $r1 = new android.util.IconDrawableFactory;

        specialinvoke $r1.<android.util.IconDrawableFactory: void <init>(android.content.Context,boolean)>(r0, z0);

        return $r1;
    }

    public android.graphics.drawable.Drawable getBadgedIcon(android.content.pm.ApplicationInfo)
    {
        android.util.IconDrawableFactory r0;
        android.content.pm.ApplicationInfo r1;
        int $i0, $i1;
        android.graphics.drawable.Drawable $r2;

        r0 := @this: android.util.IconDrawableFactory;

        r1 := @parameter0: android.content.pm.ApplicationInfo;

        $i0 = r1.<android.content.pm.ApplicationInfo: int uid>;

        $i1 = staticinvoke <android.os.UserHandle: int getUserId(int)>($i0);

        $r2 = virtualinvoke r0.<android.util.IconDrawableFactory: android.graphics.drawable.Drawable getBadgedIcon(android.content.pm.ApplicationInfo,int)>(r1, $i1);

        return $r2;
    }

    public android.graphics.drawable.Drawable getBadgedIcon(android.content.pm.ApplicationInfo, int)
    {
        android.util.IconDrawableFactory r0;
        android.content.pm.ApplicationInfo r1;
        int i0;
        android.graphics.drawable.Drawable $r2;

        r0 := @this: android.util.IconDrawableFactory;

        r1 := @parameter0: android.content.pm.ApplicationInfo;

        i0 := @parameter1: int;

        $r2 = virtualinvoke r0.<android.util.IconDrawableFactory: android.graphics.drawable.Drawable getBadgedIcon(android.content.pm.PackageItemInfo,android.content.pm.ApplicationInfo,int)>(r1, r1, i0);

        return $r2;
    }

    public android.graphics.drawable.Drawable getBadgedIcon(android.content.pm.PackageItemInfo, android.content.pm.ApplicationInfo, int)
    {
        android.util.IconDrawableFactory r0;
        int i0, i1, $i2, $i3;
        android.graphics.drawable.Drawable r1, r11, r12, r13;
        android.content.pm.PackageManager $r2;
        boolean $z0, $z1, $z2, $z3;
        android.os.UserManager $r3, $r4, $r6;
        android.util.LauncherIcons $r5, $r8;
        android.content.res.Resources $r7;
        android.content.pm.PackageItemInfo r9;
        android.content.pm.ApplicationInfo r10;

        r0 := @this: android.util.IconDrawableFactory;

        r9 := @parameter0: android.content.pm.PackageItemInfo;

        r10 := @parameter1: android.content.pm.ApplicationInfo;

        i0 := @parameter2: int;

        $r2 = r0.<android.util.IconDrawableFactory: android.content.pm.PackageManager mPm>;

        r11 = virtualinvoke $r2.<android.content.pm.PackageManager: android.graphics.drawable.Drawable loadUnbadgedItemIcon(android.content.pm.PackageItemInfo,android.content.pm.ApplicationInfo)>(r9, r10);

        $z0 = r0.<android.util.IconDrawableFactory: boolean mEmbedShadow>;

        if $z0 != 0 goto label1;

        $z3 = virtualinvoke r0.<android.util.IconDrawableFactory: boolean needsBadging(android.content.pm.ApplicationInfo,int)>(r10, i0);

        if $z3 != 0 goto label1;

        return r11;

     label1:
        r1 = virtualinvoke r0.<android.util.IconDrawableFactory: android.graphics.drawable.Drawable getShadowedIcon(android.graphics.drawable.Drawable)>(r11);

        r12 = r1;

        $z1 = virtualinvoke r10.<android.content.pm.ApplicationInfo: boolean isInstantApp()>();

        if $z1 == 0 goto label2;

        $r7 = staticinvoke <android.content.res.Resources: android.content.res.Resources getSystem()>();

        i1 = virtualinvoke $r7.<android.content.res.Resources: int getColor(int,android.content.res.Resources$Theme)>(17170810, null);

        $r8 = r0.<android.util.IconDrawableFactory: android.util.LauncherIcons mLauncherIcons>;

        r12 = virtualinvoke $r8.<android.util.LauncherIcons: android.graphics.drawable.Drawable getBadgedDrawable(android.graphics.drawable.Drawable,int,int)>(r1, 17302456, i1);

     label2:
        r13 = r12;

        $r3 = r0.<android.util.IconDrawableFactory: android.os.UserManager mUm>;

        $z2 = virtualinvoke $r3.<android.os.UserManager: boolean hasBadge(int)>(i0);

        if $z2 == 0 goto label3;

        $r5 = r0.<android.util.IconDrawableFactory: android.util.LauncherIcons mLauncherIcons>;

        $r4 = r0.<android.util.IconDrawableFactory: android.os.UserManager mUm>;

        $i2 = virtualinvoke $r4.<android.os.UserManager: int getUserIconBadgeResId(int)>(i0);

        $r6 = r0.<android.util.IconDrawableFactory: android.os.UserManager mUm>;

        $i3 = virtualinvoke $r6.<android.os.UserManager: int getUserBadgeColor(int)>(i0);

        r13 = virtualinvoke $r5.<android.util.LauncherIcons: android.graphics.drawable.Drawable getBadgedDrawable(android.graphics.drawable.Drawable,int,int)>(r12, $i2, $i3);

     label3:
        return r13;
    }

    public android.graphics.drawable.Drawable getShadowedIcon(android.graphics.drawable.Drawable)
    {
        android.util.IconDrawableFactory r0;
        android.graphics.drawable.Drawable r1, $r3;
        android.util.LauncherIcons $r2;

        r0 := @this: android.util.IconDrawableFactory;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        $r2 = r0.<android.util.IconDrawableFactory: android.util.LauncherIcons mLauncherIcons>;

        $r3 = virtualinvoke $r2.<android.util.LauncherIcons: android.graphics.drawable.Drawable wrapIconDrawableWithShadow(android.graphics.drawable.Drawable)>(r1);

        return $r3;
    }

    protected boolean needsBadging(android.content.pm.ApplicationInfo, int)
    {
        android.util.IconDrawableFactory r0;
        android.content.pm.ApplicationInfo r1;
        int i0;
        boolean $z0, $z1, z2;
        android.os.UserManager $r2;

        r0 := @this: android.util.IconDrawableFactory;

        r1 := @parameter0: android.content.pm.ApplicationInfo;

        i0 := @parameter1: int;

        $z0 = virtualinvoke r1.<android.content.pm.ApplicationInfo: boolean isInstantApp()>();

        if $z0 != 0 goto label2;

        $r2 = r0.<android.util.IconDrawableFactory: android.os.UserManager mUm>;

        $z1 = virtualinvoke $r2.<android.os.UserManager: boolean isManagedProfile(int)>(i0);

        if $z1 == 0 goto label1;

        goto label2;

     label1:
        z2 = 0;

        goto label3;

     label2:
        z2 = 1;

     label3:
        return z2;
    }
}
