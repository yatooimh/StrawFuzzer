public final class android.util.JsonReader extends java.lang.Object implements java.io.Closeable
{
    private static final java.lang.String FALSE;
    private static final java.lang.String TRUE;
    private final char[] buffer;
    private int bufferStartColumn;
    private int bufferStartLine;
    private final java.io.Reader in;
    private boolean lenient;
    private int limit;
    private java.lang.String name;
    private int pos;
    private boolean skipping;
    private final java.util.List stack;
    private final libcore.internal.StringPool stringPool;
    private android.util.JsonToken token;
    private java.lang.String value;
    private int valueLength;
    private int valuePos;

    public void <init>(java.io.Reader)
    {
        android.util.JsonReader r0;
        java.io.Reader r1;
        libcore.internal.StringPool $r2;
        char[] $r3;
        java.util.ArrayList $r4;
        android.util.JsonScope $r5;
        java.lang.NullPointerException $r6;

        r0 := @this: android.util.JsonReader;

        r1 := @parameter0: java.io.Reader;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new libcore.internal.StringPool;

        specialinvoke $r2.<libcore.internal.StringPool: void <init>()>();

        r0.<android.util.JsonReader: libcore.internal.StringPool stringPool> = $r2;

        r0.<android.util.JsonReader: boolean lenient> = 0;

        $r3 = newarray (char)[1024];

        r0.<android.util.JsonReader: char[] buffer> = $r3;

        r0.<android.util.JsonReader: int pos> = 0;

        r0.<android.util.JsonReader: int limit> = 0;

        r0.<android.util.JsonReader: int bufferStartLine> = 1;

        r0.<android.util.JsonReader: int bufferStartColumn> = 1;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<android.util.JsonReader: java.util.List stack> = $r4;

        $r5 = <android.util.JsonScope: android.util.JsonScope EMPTY_DOCUMENT>;

        specialinvoke r0.<android.util.JsonReader: void push(android.util.JsonScope)>($r5);

        r0.<android.util.JsonReader: boolean skipping> = 0;

        if r1 == null goto label1;

        r0.<android.util.JsonReader: java.io.Reader in> = r1;

        return;

     label1:
        $r6 = new java.lang.NullPointerException;

        specialinvoke $r6.<java.lang.NullPointerException: void <init>(java.lang.String)>("in == null");

        throw $r6;
    }

    private android.util.JsonToken advance() throws java.io.IOException
    {
        android.util.JsonReader r0;
        android.util.JsonToken r1;

        r0 := @this: android.util.JsonReader;

        virtualinvoke r0.<android.util.JsonReader: android.util.JsonToken peek()>();

        r1 = r0.<android.util.JsonReader: android.util.JsonToken token>;

        r0.<android.util.JsonReader: android.util.JsonToken token> = null;

        r0.<android.util.JsonReader: java.lang.String value> = null;

        r0.<android.util.JsonReader: java.lang.String name> = null;

        return r1;
    }

    private void checkLenient() throws java.io.IOException
    {
        android.util.JsonReader r0;
        boolean $z0;
        java.io.IOException $r1;

        r0 := @this: android.util.JsonReader;

        $z0 = r0.<android.util.JsonReader: boolean lenient>;

        if $z0 == 0 goto label1;

        return;

     label1:
        $r1 = specialinvoke r0.<android.util.JsonReader: java.io.IOException syntaxError(java.lang.String)>("Use JsonReader.setLenient(true) to accept malformed JSON");

        throw $r1;
    }

    private android.util.JsonToken decodeLiteral() throws java.io.IOException
    {
        android.util.JsonReader r0;
        int $i0, $i2, $i4, $i6, $i8, $i10, $i12, $i14, $i16, $i20, $i22, $i24, $i26, $i28, $i30, $i34, $i36, $i38, $i40, $i42, $i44, i47, i48, i49, i50, $i51, i52, i53, i54, i55, $i56, i57, i58, i59, i60, i61, $i62, $i63, $i64, $i65;
        char $c1, $c3, $c5, $c7, $c9, $c11, $c13, $c15, $c17, $c18, $c19, $c21, $c23, $c25, $c27, $c29, $c31, $c32, $c33, $c35, $c37, $c39, $c41, $c43, $c45, $c46;
        android.util.JsonToken $r1, $r2, $r3, $r4, $r22;
        char[] r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, $r19, $r21;
        libcore.internal.StringPool $r18;
        java.lang.String $r20;

        r0 := @this: android.util.JsonReader;

        i47 = r0.<android.util.JsonReader: int valuePos>;

        if i47 != -1 goto label01;

        $r4 = <android.util.JsonToken: android.util.JsonToken STRING>;

        return $r4;

     label01:
        $i0 = r0.<android.util.JsonReader: int valueLength>;

        if $i0 != 4 goto label06;

        r5 = r0.<android.util.JsonReader: char[] buffer>;

        $c33 = r5[i47];

        if 110 == $c33 goto label02;

        $c46 = r5[i47];

        if 78 != $c46 goto label06;

     label02:
        r6 = r0.<android.util.JsonReader: char[] buffer>;

        i48 = r0.<android.util.JsonReader: int valuePos>;

        $i34 = i48 + 1;

        $c35 = r6[$i34];

        if 117 == $c35 goto label03;

        $i44 = i48 + 1;

        $c45 = r6[$i44];

        if 85 != $c45 goto label06;

     label03:
        r7 = r0.<android.util.JsonReader: char[] buffer>;

        i49 = r0.<android.util.JsonReader: int valuePos>;

        $i36 = i49 + 2;

        $c37 = r7[$i36];

        if 108 == $c37 goto label04;

        $i42 = i49 + 2;

        $c43 = r7[$i42];

        if 76 != $c43 goto label06;

     label04:
        r8 = r0.<android.util.JsonReader: char[] buffer>;

        i50 = r0.<android.util.JsonReader: int valuePos>;

        $i38 = i50 + 3;

        $c39 = r8[$i38];

        if 108 == $c39 goto label05;

        $i40 = i50 + 3;

        $c41 = r8[$i40];

        if 76 != $c41 goto label06;

     label05:
        r0.<android.util.JsonReader: java.lang.String value> = "null";

        $r3 = <android.util.JsonToken: android.util.JsonToken NULL>;

        return $r3;

     label06:
        $i51 = r0.<android.util.JsonReader: int valueLength>;

        if $i51 != 4 goto label11;

        r9 = r0.<android.util.JsonReader: char[] buffer>;

        i52 = r0.<android.util.JsonReader: int valuePos>;

        $c19 = r9[i52];

        if 116 == $c19 goto label07;

        $c32 = r9[i52];

        if 84 != $c32 goto label11;

     label07:
        r10 = r0.<android.util.JsonReader: char[] buffer>;

        i53 = r0.<android.util.JsonReader: int valuePos>;

        $i20 = i53 + 1;

        $c21 = r10[$i20];

        if 114 == $c21 goto label08;

        $i30 = i53 + 1;

        $c31 = r10[$i30];

        if 82 != $c31 goto label11;

     label08:
        r11 = r0.<android.util.JsonReader: char[] buffer>;

        i54 = r0.<android.util.JsonReader: int valuePos>;

        $i22 = i54 + 2;

        $c23 = r11[$i22];

        if 117 == $c23 goto label09;

        $i28 = i54 + 2;

        $c29 = r11[$i28];

        if 85 != $c29 goto label11;

     label09:
        r12 = r0.<android.util.JsonReader: char[] buffer>;

        i55 = r0.<android.util.JsonReader: int valuePos>;

        $i24 = i55 + 3;

        $c25 = r12[$i24];

        if 101 == $c25 goto label10;

        $i26 = i55 + 3;

        $c27 = r12[$i26];

        if 69 != $c27 goto label11;

     label10:
        r0.<android.util.JsonReader: java.lang.String value> = "true";

        $r2 = <android.util.JsonToken: android.util.JsonToken BOOLEAN>;

        return $r2;

     label11:
        $i56 = r0.<android.util.JsonReader: int valueLength>;

        if $i56 != 5 goto label17;

        r13 = r0.<android.util.JsonReader: char[] buffer>;

        i57 = r0.<android.util.JsonReader: int valuePos>;

        $c1 = r13[i57];

        if 102 == $c1 goto label12;

        $c18 = r13[i57];

        if 70 != $c18 goto label17;

     label12:
        r14 = r0.<android.util.JsonReader: char[] buffer>;

        i58 = r0.<android.util.JsonReader: int valuePos>;

        $i2 = i58 + 1;

        $c3 = r14[$i2];

        if 97 == $c3 goto label13;

        $i16 = i58 + 1;

        $c17 = r14[$i16];

        if 65 != $c17 goto label17;

     label13:
        r15 = r0.<android.util.JsonReader: char[] buffer>;

        i59 = r0.<android.util.JsonReader: int valuePos>;

        $i4 = i59 + 2;

        $c5 = r15[$i4];

        if 108 == $c5 goto label14;

        $i14 = i59 + 2;

        $c15 = r15[$i14];

        if 76 != $c15 goto label17;

     label14:
        r16 = r0.<android.util.JsonReader: char[] buffer>;

        i60 = r0.<android.util.JsonReader: int valuePos>;

        $i6 = i60 + 3;

        $c7 = r16[$i6];

        if 115 == $c7 goto label15;

        $i12 = i60 + 3;

        $c13 = r16[$i12];

        if 83 != $c13 goto label17;

     label15:
        r17 = r0.<android.util.JsonReader: char[] buffer>;

        i61 = r0.<android.util.JsonReader: int valuePos>;

        $i8 = i61 + 4;

        $c9 = r17[$i8];

        if 101 == $c9 goto label16;

        $i10 = i61 + 4;

        $c11 = r17[$i10];

        if 69 != $c11 goto label17;

     label16:
        r0.<android.util.JsonReader: java.lang.String value> = "false";

        $r1 = <android.util.JsonToken: android.util.JsonToken BOOLEAN>;

        return $r1;

     label17:
        $r18 = r0.<android.util.JsonReader: libcore.internal.StringPool stringPool>;

        $r19 = r0.<android.util.JsonReader: char[] buffer>;

        $i62 = r0.<android.util.JsonReader: int valuePos>;

        $i63 = r0.<android.util.JsonReader: int valueLength>;

        $r20 = virtualinvoke $r18.<libcore.internal.StringPool: java.lang.String get(char[],int,int)>($r19, $i62, $i63);

        r0.<android.util.JsonReader: java.lang.String value> = $r20;

        $r21 = r0.<android.util.JsonReader: char[] buffer>;

        $i64 = r0.<android.util.JsonReader: int valuePos>;

        $i65 = r0.<android.util.JsonReader: int valueLength>;

        $r22 = specialinvoke r0.<android.util.JsonReader: android.util.JsonToken decodeNumber(char[],int,int)>($r21, $i64, $i65);

        return $r22;
    }

    private android.util.JsonToken decodeNumber(char[], int, int)
    {
        android.util.JsonReader r0;
        char[] r1;
        int i0, i1, i4, i6, i8, i10, i12, i14, i15, i17, i19, $i21;
        android.util.JsonToken $r2, $r3, $r4, $r5;
        char c3, c5, c7, c9, c11, c13, c16, c18, c20;

        r0 := @this: android.util.JsonReader;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        c3 = r1[i0];

        i4 = i0;

        c5 = c3;

        if c3 != 45 goto label01;

        i4 = i0 + 1;

        c5 = r1[i4];

     label01:
        if c5 != 48 goto label02;

        i6 = i4 + 1;

        c7 = r1[i6];

        goto label04;

     label02:
        if c5 < 49 goto label14;

        if c5 > 57 goto label14;

        i8 = i4 + 1;

        c9 = r1[i8];

     label03:
        i6 = i8;

        c7 = c9;

        if c9 < 48 goto label04;

        i6 = i8;

        c7 = c9;

        if c9 > 57 goto label04;

        i8 = i8 + 1;

        c9 = r1[i8];

        goto label03;

     label04:
        i10 = i6;

        c11 = c7;

        if c7 != 46 goto label06;

        i12 = i6 + 1;

        c13 = r1[i12];

     label05:
        i10 = i12;

        c11 = c13;

        if c13 < 48 goto label06;

        i10 = i12;

        c11 = c13;

        if c13 > 57 goto label06;

        i12 = i12 + 1;

        c13 = r1[i12];

        goto label05;

     label06:
        if c11 == 101 goto label07;

        i14 = i10;

        if c11 != 69 goto label11;

     label07:
        i15 = i10 + 1;

        c16 = r1[i15];

        if c16 == 43 goto label08;

        i17 = i15;

        c18 = c16;

        if c16 != 45 goto label09;

     label08:
        i17 = i15 + 1;

        c18 = r1[i17];

     label09:
        if c18 < 48 goto label13;

        if c18 > 57 goto label13;

        i19 = i17 + 1;

        c20 = r1[i19];

     label10:
        i14 = i19;

        if c20 < 48 goto label11;

        i14 = i19;

        if c20 > 57 goto label11;

        i19 = i19 + 1;

        c20 = r1[i19];

        goto label10;

     label11:
        $i21 = i0 + i1;

        if i14 != $i21 goto label12;

        $r5 = <android.util.JsonToken: android.util.JsonToken NUMBER>;

        return $r5;

     label12:
        $r4 = <android.util.JsonToken: android.util.JsonToken STRING>;

        return $r4;

     label13:
        $r3 = <android.util.JsonToken: android.util.JsonToken STRING>;

        return $r3;

     label14:
        $r2 = <android.util.JsonToken: android.util.JsonToken STRING>;

        return $r2;
    }

    private void expect(android.util.JsonToken) throws java.io.IOException
    {
        android.util.JsonReader r0;
        android.util.JsonToken r1, $r4, $r9;
        java.lang.StringBuilder $r5;
        java.lang.IllegalStateException $r11;
        java.lang.String $r12;

        r0 := @this: android.util.JsonReader;

        r1 := @parameter0: android.util.JsonToken;

        virtualinvoke r0.<android.util.JsonReader: android.util.JsonToken peek()>();

        $r4 = r0.<android.util.JsonReader: android.util.JsonToken token>;

        if $r4 != r1 goto label1;

        specialinvoke r0.<android.util.JsonReader: android.util.JsonToken advance()>();

        return;

     label1:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but was ");

        $r9 = virtualinvoke r0.<android.util.JsonReader: android.util.JsonToken peek()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r11 = new java.lang.IllegalStateException;

        $r12 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r12);

        throw $r11;
    }

    private boolean fillBuffer(int) throws java.io.IOException
    {
        android.util.JsonReader r0;
        int i0, $i1, $i2, $i4, $i5, $i6, $i8, $i9, $i10, $i11, i12, i13, i14, i15, i16, $i17, $i18, i19, i20, i21, $i22;
        java.io.Reader r1;
        char[] $r2, $r3, r4, r5;
        char $c3, $c7;

        r0 := @this: android.util.JsonReader;

        i0 := @parameter0: int;

        i12 = 0;

     label1:
        i13 = r0.<android.util.JsonReader: int pos>;

        if i12 >= i13 goto label4;

        $r3 = r0.<android.util.JsonReader: char[] buffer>;

        $c7 = $r3[i12];

        if $c7 != 10 goto label2;

        $i10 = r0.<android.util.JsonReader: int bufferStartLine>;

        $i11 = $i10 + 1;

        r0.<android.util.JsonReader: int bufferStartLine> = $i11;

        r0.<android.util.JsonReader: int bufferStartColumn> = 1;

        goto label3;

     label2:
        $i8 = r0.<android.util.JsonReader: int bufferStartColumn>;

        $i9 = $i8 + 1;

        r0.<android.util.JsonReader: int bufferStartColumn> = $i9;

     label3:
        i12 = i12 + 1;

        goto label1;

     label4:
        i14 = r0.<android.util.JsonReader: int limit>;

        if i14 == i13 goto label5;

        i15 = i14 - i13;

        r0.<android.util.JsonReader: int limit> = i15;

        r4 = r0.<android.util.JsonReader: char[] buffer>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r4, i13, r4, 0, i15);

        goto label6;

     label5:
        r0.<android.util.JsonReader: int limit> = 0;

     label6:
        r0.<android.util.JsonReader: int pos> = 0;

     label7:
        r1 = r0.<android.util.JsonReader: java.io.Reader in>;

        r5 = r0.<android.util.JsonReader: char[] buffer>;

        i16 = r0.<android.util.JsonReader: int limit>;

        $i17 = lengthof r5;

        $i18 = $i17 - i16;

        i19 = virtualinvoke r1.<java.io.Reader: int read(char[],int,int)>(r5, i16, $i18);

        if i19 == -1 goto label9;

        $i1 = r0.<android.util.JsonReader: int limit>;

        i20 = $i1 + i19;

        r0.<android.util.JsonReader: int limit> = i20;

        $i2 = r0.<android.util.JsonReader: int bufferStartLine>;

        if $i2 != 1 goto label8;

        i21 = r0.<android.util.JsonReader: int bufferStartColumn>;

        if i21 != 1 goto label8;

        if i20 <= 0 goto label8;

        $r2 = r0.<android.util.JsonReader: char[] buffer>;

        $c3 = $r2[0];

        if $c3 != 65279 goto label8;

        $i4 = r0.<android.util.JsonReader: int pos>;

        $i5 = $i4 + 1;

        r0.<android.util.JsonReader: int pos> = $i5;

        $i6 = i21 - 1;

        r0.<android.util.JsonReader: int bufferStartColumn> = $i6;

     label8:
        $i22 = r0.<android.util.JsonReader: int limit>;

        if $i22 < i0 goto label7;

        return 1;

     label9:
        return 0;
    }

    private int getColumnNumber()
    {
        android.util.JsonReader r0;
        int $i0, i2, i3;
        char[] $r1;
        char $c1;

        r0 := @this: android.util.JsonReader;

        i2 = r0.<android.util.JsonReader: int bufferStartColumn>;

        i3 = 0;

     label1:
        $i0 = r0.<android.util.JsonReader: int pos>;

        if i3 >= $i0 goto label4;

        $r1 = r0.<android.util.JsonReader: char[] buffer>;

        $c1 = $r1[i3];

        if $c1 != 10 goto label2;

        i2 = 1;

        goto label3;

     label2:
        i2 = i2 + 1;

     label3:
        i3 = i3 + 1;

        goto label1;

     label4:
        return i2;
    }

    private int getLineNumber()
    {
        android.util.JsonReader r0;
        int $i0, i2, i3, i4;
        char[] $r1;
        char $c1;

        r0 := @this: android.util.JsonReader;

        i2 = r0.<android.util.JsonReader: int bufferStartLine>;

        i3 = 0;

     label1:
        $i0 = r0.<android.util.JsonReader: int pos>;

        if i3 >= $i0 goto label3;

        i4 = i2;

        $r1 = r0.<android.util.JsonReader: char[] buffer>;

        $c1 = $r1[i3];

        if $c1 != 10 goto label2;

        i4 = i2 + 1;

     label2:
        i3 = i3 + 1;

        i2 = i4;

        goto label1;

     label3:
        return i2;
    }

    private java.lang.CharSequence getSnippet()
    {
        android.util.JsonReader r0;
        java.lang.StringBuilder $r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, i7, i8;
        char[] $r3, $r5;

        r0 := @this: android.util.JsonReader;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $i0 = r0.<android.util.JsonReader: int pos>;

        i7 = staticinvoke <java.lang.Math: int min(int,int)>($i0, 20);

        $r3 = r0.<android.util.JsonReader: char[] buffer>;

        $i1 = r0.<android.util.JsonReader: int pos>;

        $i2 = $i1 - i7;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char[],int,int)>($r3, $i2, i7);

        $i4 = r0.<android.util.JsonReader: int limit>;

        $i3 = r0.<android.util.JsonReader: int pos>;

        $i5 = $i4 - $i3;

        i8 = staticinvoke <java.lang.Math: int min(int,int)>($i5, 20);

        $r5 = r0.<android.util.JsonReader: char[] buffer>;

        $i6 = r0.<android.util.JsonReader: int pos>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char[],int,int)>($r5, $i6, i8);

        return $r2;
    }

    private android.util.JsonToken nextInArray(boolean) throws java.io.IOException
    {
        android.util.JsonReader r0;
        boolean z0;
        int $i0, $i1, i2, i3, $i4, $i5;
        android.util.JsonToken $r2, r6, r7, r8;
        java.io.IOException $r3;
        android.util.JsonScope $r5;

        r0 := @this: android.util.JsonReader;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        $r5 = <android.util.JsonScope: android.util.JsonScope NONEMPTY_ARRAY>;

        specialinvoke r0.<android.util.JsonReader: void replaceTop(android.util.JsonScope)>($r5);

        goto label4;

     label1:
        i2 = specialinvoke r0.<android.util.JsonReader: int nextNonWhitespace()>();

        if i2 == 44 goto label4;

        if i2 == 59 goto label3;

        if i2 != 93 goto label2;

        specialinvoke r0.<android.util.JsonReader: android.util.JsonScope pop()>();

        r6 = <android.util.JsonToken: android.util.JsonToken END_ARRAY>;

        r0.<android.util.JsonReader: android.util.JsonToken token> = r6;

        return r6;

     label2:
        $r3 = specialinvoke r0.<android.util.JsonReader: java.io.IOException syntaxError(java.lang.String)>("Unterminated array");

        throw $r3;

     label3:
        specialinvoke r0.<android.util.JsonReader: void checkLenient()>();

     label4:
        i3 = specialinvoke r0.<android.util.JsonReader: int nextNonWhitespace()>();

        if i3 == 44 goto label6;

        if i3 == 59 goto label6;

        if i3 == 93 goto label5;

        $i0 = r0.<android.util.JsonReader: int pos>;

        $i1 = $i0 - 1;

        r0.<android.util.JsonReader: int pos> = $i1;

        $r2 = specialinvoke r0.<android.util.JsonReader: android.util.JsonToken nextValue()>();

        return $r2;

     label5:
        if z0 == 0 goto label6;

        specialinvoke r0.<android.util.JsonReader: android.util.JsonScope pop()>();

        r7 = <android.util.JsonToken: android.util.JsonToken END_ARRAY>;

        r0.<android.util.JsonReader: android.util.JsonToken token> = r7;

        return r7;

     label6:
        specialinvoke r0.<android.util.JsonReader: void checkLenient()>();

        $i4 = r0.<android.util.JsonReader: int pos>;

        $i5 = $i4 - 1;

        r0.<android.util.JsonReader: int pos> = $i5;

        r0.<android.util.JsonReader: java.lang.String value> = "null";

        r8 = <android.util.JsonToken: android.util.JsonToken NULL>;

        r0.<android.util.JsonReader: android.util.JsonToken token> = r8;

        return r8;
    }

    private android.util.JsonToken nextInObject(boolean) throws java.io.IOException
    {
        android.util.JsonReader r0;
        boolean z0, $z1;
        char $c0;
        java.lang.String $r1, r8;
        int $i1, $i2, $i3, $i4, $i5, i6, i7;
        java.io.IOException $r2, $r3;
        android.util.JsonToken r6, r7, r10;
        android.util.JsonScope $r9;

        r0 := @this: android.util.JsonReader;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label2;

        $i3 = specialinvoke r0.<android.util.JsonReader: int nextNonWhitespace()>();

        if $i3 == 125 goto label1;

        $i4 = r0.<android.util.JsonReader: int pos>;

        $i5 = $i4 - 1;

        r0.<android.util.JsonReader: int pos> = $i5;

        goto label4;

     label1:
        specialinvoke r0.<android.util.JsonReader: android.util.JsonScope pop()>();

        r6 = <android.util.JsonToken: android.util.JsonToken END_OBJECT>;

        r0.<android.util.JsonReader: android.util.JsonToken token> = r6;

        return r6;

     label2:
        i6 = specialinvoke r0.<android.util.JsonReader: int nextNonWhitespace()>();

        if i6 == 44 goto label4;

        if i6 == 59 goto label4;

        if i6 != 125 goto label3;

        specialinvoke r0.<android.util.JsonReader: android.util.JsonScope pop()>();

        r7 = <android.util.JsonToken: android.util.JsonToken END_OBJECT>;

        r0.<android.util.JsonReader: android.util.JsonToken token> = r7;

        return r7;

     label3:
        $r3 = specialinvoke r0.<android.util.JsonReader: java.io.IOException syntaxError(java.lang.String)>("Unterminated object");

        throw $r3;

     label4:
        i7 = specialinvoke r0.<android.util.JsonReader: int nextNonWhitespace()>();

        if i7 == 34 goto label7;

        if i7 == 39 goto label6;

        specialinvoke r0.<android.util.JsonReader: void checkLenient()>();

        $i1 = r0.<android.util.JsonReader: int pos>;

        $i2 = $i1 - 1;

        r0.<android.util.JsonReader: int pos> = $i2;

        r8 = specialinvoke r0.<android.util.JsonReader: java.lang.String nextLiteral(boolean)>(0);

        r0.<android.util.JsonReader: java.lang.String name> = r8;

        $z1 = virtualinvoke r8.<java.lang.String: boolean isEmpty()>();

        if $z1 != 0 goto label5;

        goto label8;

     label5:
        $r2 = specialinvoke r0.<android.util.JsonReader: java.io.IOException syntaxError(java.lang.String)>("Expected name");

        throw $r2;

     label6:
        specialinvoke r0.<android.util.JsonReader: void checkLenient()>();

     label7:
        $c0 = (char) i7;

        $r1 = specialinvoke r0.<android.util.JsonReader: java.lang.String nextString(char)>($c0);

        r0.<android.util.JsonReader: java.lang.String name> = $r1;

     label8:
        $r9 = <android.util.JsonScope: android.util.JsonScope DANGLING_NAME>;

        specialinvoke r0.<android.util.JsonReader: void replaceTop(android.util.JsonScope)>($r9);

        r10 = <android.util.JsonToken: android.util.JsonToken NAME>;

        r0.<android.util.JsonReader: android.util.JsonToken token> = r10;

        return r10;
    }

    private java.lang.String nextLiteral(boolean) throws java.io.IOException
    {
        android.util.JsonReader r0;
        boolean z0, $z1, $z2, $z3;
        char[] $r1, $r2, $r4, $r6, $r9, $r10;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i11, $i12, i13, i14, $i15, $i16, $i19, $i20, $i21, $i22;
        libcore.internal.StringPool $r7;
        java.lang.StringBuilder $r8, r11, r12;
        char $c10, c17;
        java.lang.String r13;

        r0 := @this: android.util.JsonReader;

        z0 := @parameter0: boolean;

        r11 = null;

        r0.<android.util.JsonReader: int valuePos> = -1;

        r0.<android.util.JsonReader: int valueLength> = 0;

        i13 = 0;

     label01:
        i14 = r0.<android.util.JsonReader: int pos>;

        $i15 = i14 + i13;

        $i16 = r0.<android.util.JsonReader: int limit>;

        if $i15 >= $i16 goto label05;

        $r10 = r0.<android.util.JsonReader: char[] buffer>;

        $i12 = i14 + i13;

        c17 = $r10[$i12];

        if c17 == 9 goto label04;

        if c17 == 10 goto label04;

        if c17 == 12 goto label04;

        if c17 == 13 goto label04;

        if c17 == 32 goto label04;

        if c17 == 35 goto label03;

        if c17 == 44 goto label04;

        if c17 == 47 goto label03;

        if c17 == 61 goto label03;

        if c17 == 123 goto label04;

        if c17 == 125 goto label04;

        if c17 == 58 goto label04;

        if c17 == 59 goto label03;

        tableswitch(c17)
        {
            case 91: goto label04;
            case 92: goto label03;
            case 93: goto label04;
            default: goto label02;
        };

     label02:
        i13 = i13 + 1;

        goto label01;

     label03:
        specialinvoke r0.<android.util.JsonReader: void checkLenient()>();

     label04:
        r12 = r11;

        goto label09;

     label05:
        $r1 = r0.<android.util.JsonReader: char[] buffer>;

        $i0 = lengthof $r1;

        if i13 >= $i0 goto label07;

        $i9 = i13 + 1;

        $z3 = specialinvoke r0.<android.util.JsonReader: boolean fillBuffer(int)>($i9);

        if $z3 == 0 goto label06;

        goto label01;

     label06:
        $r9 = r0.<android.util.JsonReader: char[] buffer>;

        $i11 = r0.<android.util.JsonReader: int limit>;

        $c10 = (char) 0;

        $r9[$i11] = $c10;

        r12 = r11;

        goto label09;

     label07:
        r12 = r11;

        if r11 != null goto label08;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        r12 = $r8;

     label08:
        $r2 = r0.<android.util.JsonReader: char[] buffer>;

        $i1 = r0.<android.util.JsonReader: int pos>;

        virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(char[],int,int)>($r2, $i1, i13);

        $i2 = r0.<android.util.JsonReader: int valueLength>;

        $i3 = $i2 + i13;

        r0.<android.util.JsonReader: int valueLength> = $i3;

        $i4 = r0.<android.util.JsonReader: int pos>;

        $i5 = $i4 + i13;

        r0.<android.util.JsonReader: int pos> = $i5;

        i13 = 0;

        $z1 = specialinvoke r0.<android.util.JsonReader: boolean fillBuffer(int)>(1);

        if $z1 != 0 goto label14;

        i13 = 0;

     label09:
        if z0 == 0 goto label10;

        if r12 != null goto label10;

        $i8 = r0.<android.util.JsonReader: int pos>;

        r0.<android.util.JsonReader: int valuePos> = $i8;

        r13 = null;

        goto label13;

     label10:
        $z2 = r0.<android.util.JsonReader: boolean skipping>;

        if $z2 == 0 goto label11;

        r13 = "skipped!";

        goto label13;

     label11:
        if r12 != null goto label12;

        $r7 = r0.<android.util.JsonReader: libcore.internal.StringPool stringPool>;

        $r6 = r0.<android.util.JsonReader: char[] buffer>;

        $i7 = r0.<android.util.JsonReader: int pos>;

        r13 = virtualinvoke $r7.<libcore.internal.StringPool: java.lang.String get(char[],int,int)>($r6, $i7, i13);

        goto label13;

     label12:
        $r4 = r0.<android.util.JsonReader: char[] buffer>;

        $i6 = r0.<android.util.JsonReader: int pos>;

        virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(char[],int,int)>($r4, $i6, i13);

        r13 = virtualinvoke r12.<java.lang.StringBuilder: java.lang.String toString()>();

     label13:
        $i19 = r0.<android.util.JsonReader: int valueLength>;

        $i20 = $i19 + i13;

        r0.<android.util.JsonReader: int valueLength> = $i20;

        $i21 = r0.<android.util.JsonReader: int pos>;

        $i22 = $i21 + i13;

        r0.<android.util.JsonReader: int pos> = $i22;

        return r13;

     label14:
        r11 = r12;

        goto label01;
    }

    private int nextNonWhitespace() throws java.io.IOException
    {
        android.util.JsonReader r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, i9;
        boolean $z0, $z1, $z2;
        java.io.IOException $r1;
        java.io.EOFException $r2;
        char[] r3, r4;
        char c10, c11;

        r0 := @this: android.util.JsonReader;

     label01:
        $i6 = r0.<android.util.JsonReader: int pos>;

        $i7 = r0.<android.util.JsonReader: int limit>;

        if $i6 < $i7 goto label03;

        $z2 = specialinvoke r0.<android.util.JsonReader: boolean fillBuffer(int)>(1);

        if $z2 == 0 goto label02;

        goto label03;

     label02:
        $r2 = new java.io.EOFException;

        specialinvoke $r2.<java.io.EOFException: void <init>(java.lang.String)>("End of input");

        throw $r2;

     label03:
        r3 = r0.<android.util.JsonReader: char[] buffer>;

        i8 = r0.<android.util.JsonReader: int pos>;

        i9 = i8 + 1;

        r0.<android.util.JsonReader: int pos> = i9;

        c10 = r3[i8];

        if c10 == 9 goto label10;

        if c10 == 10 goto label10;

        if c10 == 13 goto label10;

        if c10 == 32 goto label10;

        if c10 == 35 goto label09;

        if c10 == 47 goto label04;

        return c10;

     label04:
        $i1 = r0.<android.util.JsonReader: int limit>;

        if i9 != $i1 goto label05;

        $z1 = specialinvoke r0.<android.util.JsonReader: boolean fillBuffer(int)>(1);

        if $z1 != 0 goto label05;

        return c10;

     label05:
        specialinvoke r0.<android.util.JsonReader: void checkLenient()>();

        r4 = r0.<android.util.JsonReader: char[] buffer>;

        i0 = r0.<android.util.JsonReader: int pos>;

        c11 = r4[i0];

        if c11 == 42 goto label07;

        if c11 == 47 goto label06;

        return c10;

     label06:
        $i5 = i0 + 1;

        r0.<android.util.JsonReader: int pos> = $i5;

        specialinvoke r0.<android.util.JsonReader: void skipToEndOfLine()>();

        goto label01;

     label07:
        $i2 = i0 + 1;

        r0.<android.util.JsonReader: int pos> = $i2;

        $z0 = specialinvoke r0.<android.util.JsonReader: boolean skipTo(java.lang.String)>("*/");

        if $z0 == 0 goto label08;

        $i3 = r0.<android.util.JsonReader: int pos>;

        $i4 = $i3 + 2;

        r0.<android.util.JsonReader: int pos> = $i4;

        goto label01;

     label08:
        $r1 = specialinvoke r0.<android.util.JsonReader: java.io.IOException syntaxError(java.lang.String)>("Unterminated comment");

        throw $r1;

     label09:
        specialinvoke r0.<android.util.JsonReader: void checkLenient()>();

        specialinvoke r0.<android.util.JsonReader: void skipToEndOfLine()>();

        goto label01;

     label10:
        goto label01;
    }

    private java.lang.String nextString(char) throws java.io.IOException
    {
        android.util.JsonReader r0;
        char c0, $c6, c15;
        int $i1, $i2, $i3, $i4, $i5, $i7, $i8, $i9, $i10, i11, i12, $i13, i14, i16;
        char[] $r1, $r5, r14;
        boolean $z0, $z1;
        java.io.IOException $r3;
        java.lang.StringBuilder $r4, $r8, r13, r15, r16;
        java.lang.String $r10, $r12;
        libcore.internal.StringPool $r11;

        r0 := @this: android.util.JsonReader;

        c0 := @parameter0: char;

        r13 = null;

     label01:
        i11 = r0.<android.util.JsonReader: int pos>;

     label02:
        i12 = r0.<android.util.JsonReader: int pos>;

        $i13 = r0.<android.util.JsonReader: int limit>;

        if i12 >= $i13 goto label08;

        r14 = r0.<android.util.JsonReader: char[] buffer>;

        i14 = i12 + 1;

        r0.<android.util.JsonReader: int pos> = i14;

        c15 = r14[i12];

        if c15 != c0 goto label05;

        $z1 = r0.<android.util.JsonReader: boolean skipping>;

        if $z1 == 0 goto label03;

        return "skipped!";

     label03:
        if r13 != null goto label04;

        $r11 = r0.<android.util.JsonReader: libcore.internal.StringPool stringPool>;

        $i9 = i14 - i11;

        $i10 = $i9 - 1;

        $r12 = virtualinvoke $r11.<libcore.internal.StringPool: java.lang.String get(char[],int,int)>(r14, i11, $i10);

        return $r12;

     label04:
        $i7 = i14 - i11;

        $i8 = $i7 - 1;

        virtualinvoke r13.<java.lang.StringBuilder: java.lang.StringBuilder append(char[],int,int)>(r14, i11, $i8);

        $r10 = virtualinvoke r13.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r10;

     label05:
        r15 = r13;

        i16 = i11;

        if c15 != 92 goto label07;

        r15 = r13;

        if r13 != null goto label06;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        r15 = $r8;

     label06:
        $r5 = r0.<android.util.JsonReader: char[] buffer>;

        $i3 = r0.<android.util.JsonReader: int pos>;

        $i4 = $i3 - i11;

        $i5 = $i4 - 1;

        virtualinvoke r15.<java.lang.StringBuilder: java.lang.StringBuilder append(char[],int,int)>($r5, i11, $i5);

        $c6 = specialinvoke r0.<android.util.JsonReader: char readEscapeCharacter()>();

        virtualinvoke r15.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c6);

        i16 = r0.<android.util.JsonReader: int pos>;

     label07:
        r13 = r15;

        i11 = i16;

        goto label02;

     label08:
        r16 = r13;

        if r13 != null goto label09;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        r16 = $r4;

     label09:
        $r1 = r0.<android.util.JsonReader: char[] buffer>;

        $i1 = r0.<android.util.JsonReader: int pos>;

        $i2 = $i1 - i11;

        virtualinvoke r16.<java.lang.StringBuilder: java.lang.StringBuilder append(char[],int,int)>($r1, i11, $i2);

        $z0 = specialinvoke r0.<android.util.JsonReader: boolean fillBuffer(int)>(1);

        if $z0 == 0 goto label10;

        r13 = r16;

        goto label01;

     label10:
        $r3 = specialinvoke r0.<android.util.JsonReader: java.io.IOException syntaxError(java.lang.String)>("Unterminated string");

        throw $r3;
    }

    private android.util.JsonToken nextValue() throws java.io.IOException
    {
        android.util.JsonReader r0;
        int i0, $i2, $i3;
        char $c1;
        java.lang.String $r1;
        android.util.JsonScope $r2, $r3;
        android.util.JsonToken $r4, r5, r6, r7;

        r0 := @this: android.util.JsonReader;

        i0 = specialinvoke r0.<android.util.JsonReader: int nextNonWhitespace()>();

        if i0 == 34 goto label4;

        if i0 == 39 goto label3;

        if i0 == 91 goto label2;

        if i0 == 123 goto label1;

        $i2 = r0.<android.util.JsonReader: int pos>;

        $i3 = $i2 - 1;

        r0.<android.util.JsonReader: int pos> = $i3;

        $r4 = specialinvoke r0.<android.util.JsonReader: android.util.JsonToken readLiteral()>();

        return $r4;

     label1:
        $r3 = <android.util.JsonScope: android.util.JsonScope EMPTY_OBJECT>;

        specialinvoke r0.<android.util.JsonReader: void push(android.util.JsonScope)>($r3);

        r5 = <android.util.JsonToken: android.util.JsonToken BEGIN_OBJECT>;

        r0.<android.util.JsonReader: android.util.JsonToken token> = r5;

        return r5;

     label2:
        $r2 = <android.util.JsonScope: android.util.JsonScope EMPTY_ARRAY>;

        specialinvoke r0.<android.util.JsonReader: void push(android.util.JsonScope)>($r2);

        r6 = <android.util.JsonToken: android.util.JsonToken BEGIN_ARRAY>;

        r0.<android.util.JsonReader: android.util.JsonToken token> = r6;

        return r6;

     label3:
        specialinvoke r0.<android.util.JsonReader: void checkLenient()>();

     label4:
        $c1 = (char) i0;

        $r1 = specialinvoke r0.<android.util.JsonReader: java.lang.String nextString(char)>($c1);

        r0.<android.util.JsonReader: java.lang.String value> = $r1;

        r7 = <android.util.JsonToken: android.util.JsonToken STRING>;

        r0.<android.util.JsonReader: android.util.JsonToken token> = r7;

        return r7;
    }

    private android.util.JsonToken objectValue() throws java.io.IOException
    {
        android.util.JsonReader r0;
        char[] r1;
        java.io.IOException $r2;
        int $i0, $i1, $i3, i4, i5;
        char $c2;
        boolean $z0;
        android.util.JsonScope $r3;
        android.util.JsonToken $r4;

        r0 := @this: android.util.JsonReader;

        i4 = specialinvoke r0.<android.util.JsonReader: int nextNonWhitespace()>();

        if i4 == 58 goto label3;

        if i4 != 61 goto label2;

        specialinvoke r0.<android.util.JsonReader: void checkLenient()>();

        $i1 = r0.<android.util.JsonReader: int pos>;

        $i0 = r0.<android.util.JsonReader: int limit>;

        if $i1 < $i0 goto label1;

        $z0 = specialinvoke r0.<android.util.JsonReader: boolean fillBuffer(int)>(1);

        if $z0 == 0 goto label3;

     label1:
        r1 = r0.<android.util.JsonReader: char[] buffer>;

        i5 = r0.<android.util.JsonReader: int pos>;

        $c2 = r1[i5];

        if $c2 != 62 goto label3;

        $i3 = i5 + 1;

        r0.<android.util.JsonReader: int pos> = $i3;

        goto label3;

     label2:
        $r2 = specialinvoke r0.<android.util.JsonReader: java.io.IOException syntaxError(java.lang.String)>("Expected \':\'");

        throw $r2;

     label3:
        $r3 = <android.util.JsonScope: android.util.JsonScope NONEMPTY_OBJECT>;

        specialinvoke r0.<android.util.JsonReader: void replaceTop(android.util.JsonScope)>($r3);

        $r4 = specialinvoke r0.<android.util.JsonReader: android.util.JsonToken nextValue()>();

        return $r4;
    }

    private android.util.JsonScope peekStack()
    {
        android.util.JsonReader r0;
        java.util.List r1;
        int $i0, $i1;
        java.lang.Object $r2;
        android.util.JsonScope $r3;

        r0 := @this: android.util.JsonReader;

        r1 = r0.<android.util.JsonReader: java.util.List stack>;

        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        $i1 = $i0 - 1;

        $r2 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>($i1);

        $r3 = (android.util.JsonScope) $r2;

        return $r3;
    }

    private android.util.JsonScope pop()
    {
        android.util.JsonReader r0;
        java.util.List r1;
        int $i0, $i1;
        java.lang.Object $r2;
        android.util.JsonScope $r3;

        r0 := @this: android.util.JsonReader;

        r1 = r0.<android.util.JsonReader: java.util.List stack>;

        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        $i1 = $i0 - 1;

        $r2 = interfaceinvoke r1.<java.util.List: java.lang.Object remove(int)>($i1);

        $r3 = (android.util.JsonScope) $r2;

        return $r3;
    }

    private void push(android.util.JsonScope)
    {
        android.util.JsonReader r0;
        android.util.JsonScope r1;
        java.util.List $r2;

        r0 := @this: android.util.JsonReader;

        r1 := @parameter0: android.util.JsonScope;

        $r2 = r0.<android.util.JsonReader: java.util.List stack>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        return;
    }

    private char readEscapeCharacter() throws java.io.IOException
    {
        android.util.JsonReader r0;
        int i0, i1, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        char c2, $c11;
        char[] $r1, r5;
        libcore.internal.StringPool $r2;
        boolean $z0, $z1;
        java.io.IOException $r3, $r4;
        java.lang.String r6;

        r0 := @this: android.util.JsonReader;

        $i4 = r0.<android.util.JsonReader: int pos>;

        $i3 = r0.<android.util.JsonReader: int limit>;

        if $i4 != $i3 goto label02;

        $z1 = specialinvoke r0.<android.util.JsonReader: boolean fillBuffer(int)>(1);

        if $z1 == 0 goto label01;

        goto label02;

     label01:
        $r4 = specialinvoke r0.<android.util.JsonReader: java.io.IOException syntaxError(java.lang.String)>("Unterminated escape sequence");

        throw $r4;

     label02:
        r5 = r0.<android.util.JsonReader: char[] buffer>;

        i0 = r0.<android.util.JsonReader: int pos>;

        i1 = i0 + 1;

        r0.<android.util.JsonReader: int pos> = i1;

        c2 = r5[i0];

        if c2 == 98 goto label10;

        if c2 == 102 goto label09;

        if c2 == 110 goto label08;

        if c2 == 114 goto label07;

        if c2 == 116 goto label06;

        if c2 == 117 goto label03;

        return c2;

     label03:
        $i6 = i1 + 4;

        $i5 = r0.<android.util.JsonReader: int limit>;

        if $i6 <= $i5 goto label05;

        $z0 = specialinvoke r0.<android.util.JsonReader: boolean fillBuffer(int)>(4);

        if $z0 == 0 goto label04;

        goto label05;

     label04:
        $r3 = specialinvoke r0.<android.util.JsonReader: java.io.IOException syntaxError(java.lang.String)>("Unterminated escape sequence");

        throw $r3;

     label05:
        $r2 = r0.<android.util.JsonReader: libcore.internal.StringPool stringPool>;

        $r1 = r0.<android.util.JsonReader: char[] buffer>;

        $i7 = r0.<android.util.JsonReader: int pos>;

        r6 = virtualinvoke $r2.<libcore.internal.StringPool: java.lang.String get(char[],int,int)>($r1, $i7, 4);

        $i8 = r0.<android.util.JsonReader: int pos>;

        $i9 = $i8 + 4;

        r0.<android.util.JsonReader: int pos> = $i9;

        $i10 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(r6, 16);

        $c11 = (char) $i10;

        return $c11;

     label06:
        return 9;

     label07:
        return 13;

     label08:
        return 10;

     label09:
        return 12;

     label10:
        return 8;
    }

    private android.util.JsonToken readLiteral() throws java.io.IOException
    {
        android.util.JsonReader r0;
        android.util.JsonToken r1, $r4, $r5;
        java.lang.String $r2;
        int $i0;
        java.io.IOException $r3;

        r0 := @this: android.util.JsonReader;

        $r2 = specialinvoke r0.<android.util.JsonReader: java.lang.String nextLiteral(boolean)>(1);

        r0.<android.util.JsonReader: java.lang.String value> = $r2;

        $i0 = r0.<android.util.JsonReader: int valueLength>;

        if $i0 == 0 goto label2;

        r1 = specialinvoke r0.<android.util.JsonReader: android.util.JsonToken decodeLiteral()>();

        r0.<android.util.JsonReader: android.util.JsonToken token> = r1;

        $r4 = <android.util.JsonToken: android.util.JsonToken STRING>;

        if r1 != $r4 goto label1;

        specialinvoke r0.<android.util.JsonReader: void checkLenient()>();

     label1:
        $r5 = r0.<android.util.JsonReader: android.util.JsonToken token>;

        return $r5;

     label2:
        $r3 = specialinvoke r0.<android.util.JsonReader: java.io.IOException syntaxError(java.lang.String)>("Expected literal value");

        throw $r3;
    }

    private void replaceTop(android.util.JsonScope)
    {
        android.util.JsonReader r0;
        android.util.JsonScope r1;
        java.util.List r2;
        int $i0, $i1;

        r0 := @this: android.util.JsonReader;

        r1 := @parameter0: android.util.JsonScope;

        r2 = r0.<android.util.JsonReader: java.util.List stack>;

        $i0 = interfaceinvoke r2.<java.util.List: int size()>();

        $i1 = $i0 - 1;

        interfaceinvoke r2.<java.util.List: java.lang.Object set(int,java.lang.Object)>($i1, r1);

        return;
    }

    private boolean skipTo(java.lang.String) throws java.io.IOException
    {
        android.util.JsonReader r0;
        java.lang.String r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i8, $i9, $i10, i11, $i12;
        char[] $r2;
        char $c6, $c7;
        boolean $z0;

        r0 := @this: android.util.JsonReader;

        r1 := @parameter0: java.lang.String;

     label1:
        $i0 = r0.<android.util.JsonReader: int pos>;

        $i1 = virtualinvoke r1.<java.lang.String: int length()>();

        $i3 = $i0 + $i1;

        $i2 = r0.<android.util.JsonReader: int limit>;

        if $i3 <= $i2 goto label3;

        $i10 = virtualinvoke r1.<java.lang.String: int length()>();

        $z0 = specialinvoke r0.<android.util.JsonReader: boolean fillBuffer(int)>($i10);

        if $z0 == 0 goto label2;

        goto label3;

     label2:
        return 0;

     label3:
        i11 = 0;

     label4:
        $i12 = virtualinvoke r1.<java.lang.String: int length()>();

        if i11 >= $i12 goto label6;

        $r2 = r0.<android.util.JsonReader: char[] buffer>;

        $i4 = r0.<android.util.JsonReader: int pos>;

        $i5 = $i4 + i11;

        $c6 = $r2[$i5];

        $c7 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i11);

        if $c6 == $c7 goto label5;

        $i8 = r0.<android.util.JsonReader: int pos>;

        $i9 = $i8 + 1;

        r0.<android.util.JsonReader: int pos> = $i9;

        goto label1;

     label5:
        i11 = i11 + 1;

        goto label4;

     label6:
        return 1;
    }

    private void skipToEndOfLine() throws java.io.IOException
    {
        android.util.JsonReader r0;
        char[] r1;
        int $i0, $i1, $i2, i3;
        boolean $z0;
        char c4;

        r0 := @this: android.util.JsonReader;

     label1:
        $i1 = r0.<android.util.JsonReader: int pos>;

        $i0 = r0.<android.util.JsonReader: int limit>;

        if $i1 < $i0 goto label2;

        $z0 = specialinvoke r0.<android.util.JsonReader: boolean fillBuffer(int)>(1);

        if $z0 == 0 goto label4;

     label2:
        r1 = r0.<android.util.JsonReader: char[] buffer>;

        i3 = r0.<android.util.JsonReader: int pos>;

        $i2 = i3 + 1;

        r0.<android.util.JsonReader: int pos> = $i2;

        c4 = r1[i3];

        if c4 == 13 goto label4;

        if c4 != 10 goto label3;

        goto label4;

     label3:
        goto label1;

     label4:
        return;
    }

    private java.io.IOException syntaxError(java.lang.String) throws java.io.IOException
    {
        android.util.JsonReader r0;
        java.lang.String r1, $r10;
        java.lang.StringBuilder $r3;
        int $i0, $i1;
        android.util.MalformedJsonException $r9;

        r0 := @this: android.util.JsonReader;

        r1 := @parameter0: java.lang.String;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at line ");

        $i0 = specialinvoke r0.<android.util.JsonReader: int getLineNumber()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" column ");

        $i1 = specialinvoke r0.<android.util.JsonReader: int getColumnNumber()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r9 = new android.util.MalformedJsonException;

        $r10 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<android.util.MalformedJsonException: void <init>(java.lang.String)>($r10);

        throw $r9;
    }

    public void beginArray() throws java.io.IOException
    {
        android.util.JsonReader r0;
        android.util.JsonToken $r1;

        r0 := @this: android.util.JsonReader;

        $r1 = <android.util.JsonToken: android.util.JsonToken BEGIN_ARRAY>;

        specialinvoke r0.<android.util.JsonReader: void expect(android.util.JsonToken)>($r1);

        return;
    }

    public void beginObject() throws java.io.IOException
    {
        android.util.JsonReader r0;
        android.util.JsonToken $r1;

        r0 := @this: android.util.JsonReader;

        $r1 = <android.util.JsonToken: android.util.JsonToken BEGIN_OBJECT>;

        specialinvoke r0.<android.util.JsonReader: void expect(android.util.JsonToken)>($r1);

        return;
    }

    public void close() throws java.io.IOException
    {
        android.util.JsonReader r0;
        java.util.List $r1, $r3;
        android.util.JsonScope $r2;
        java.io.Reader $r4;

        r0 := @this: android.util.JsonReader;

        r0.<android.util.JsonReader: java.lang.String value> = null;

        r0.<android.util.JsonReader: android.util.JsonToken token> = null;

        $r1 = r0.<android.util.JsonReader: java.util.List stack>;

        interfaceinvoke $r1.<java.util.List: void clear()>();

        $r3 = r0.<android.util.JsonReader: java.util.List stack>;

        $r2 = <android.util.JsonScope: android.util.JsonScope CLOSED>;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r2);

        $r4 = r0.<android.util.JsonReader: java.io.Reader in>;

        virtualinvoke $r4.<java.io.Reader: void close()>();

        return;
    }

    public void endArray() throws java.io.IOException
    {
        android.util.JsonReader r0;
        android.util.JsonToken $r1;

        r0 := @this: android.util.JsonReader;

        $r1 = <android.util.JsonToken: android.util.JsonToken END_ARRAY>;

        specialinvoke r0.<android.util.JsonReader: void expect(android.util.JsonToken)>($r1);

        return;
    }

    public void endObject() throws java.io.IOException
    {
        android.util.JsonReader r0;
        android.util.JsonToken $r1;

        r0 := @this: android.util.JsonReader;

        $r1 = <android.util.JsonToken: android.util.JsonToken END_OBJECT>;

        specialinvoke r0.<android.util.JsonReader: void expect(android.util.JsonToken)>($r1);

        return;
    }

    public boolean hasNext() throws java.io.IOException
    {
        android.util.JsonReader r0;
        android.util.JsonToken $r2, $r3, $r4, $r5;
        boolean z0;

        r0 := @this: android.util.JsonReader;

        virtualinvoke r0.<android.util.JsonReader: android.util.JsonToken peek()>();

        $r3 = r0.<android.util.JsonReader: android.util.JsonToken token>;

        $r2 = <android.util.JsonToken: android.util.JsonToken END_OBJECT>;

        if $r3 == $r2 goto label1;

        $r5 = r0.<android.util.JsonReader: android.util.JsonToken token>;

        $r4 = <android.util.JsonToken: android.util.JsonToken END_ARRAY>;

        if $r5 == $r4 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public boolean isLenient()
    {
        android.util.JsonReader r0;
        boolean $z0;

        r0 := @this: android.util.JsonReader;

        $z0 = r0.<android.util.JsonReader: boolean lenient>;

        return $z0;
    }

    public boolean nextBoolean() throws java.io.IOException
    {
        android.util.JsonReader r0;
        android.util.JsonToken $r3, $r4, $r7;
        java.lang.StringBuilder $r5;
        java.lang.IllegalStateException $r9;
        java.lang.String $r10, $r11;
        boolean z0;

        r0 := @this: android.util.JsonReader;

        virtualinvoke r0.<android.util.JsonReader: android.util.JsonToken peek()>();

        $r4 = r0.<android.util.JsonReader: android.util.JsonToken token>;

        $r3 = <android.util.JsonToken: android.util.JsonToken BOOLEAN>;

        if $r4 != $r3 goto label3;

        $r11 = r0.<android.util.JsonReader: java.lang.String value>;

        if $r11 != "true" goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        specialinvoke r0.<android.util.JsonReader: android.util.JsonToken advance()>();

        return z0;

     label3:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected a boolean but was ");

        $r7 = r0.<android.util.JsonReader: android.util.JsonToken token>;

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r9 = new java.lang.IllegalStateException;

        $r10 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r10);

        throw $r9;
    }

    public double nextDouble() throws java.io.IOException
    {
        android.util.JsonReader r0;
        double d0;
        android.util.JsonToken $r3, $r4, $r7, $r8, $r11;
        java.lang.String $r5, $r14;
        java.lang.StringBuilder $r9;
        java.lang.IllegalStateException $r13;

        r0 := @this: android.util.JsonReader;

        virtualinvoke r0.<android.util.JsonReader: android.util.JsonToken peek()>();

        $r4 = r0.<android.util.JsonReader: android.util.JsonToken token>;

        $r3 = <android.util.JsonToken: android.util.JsonToken STRING>;

        if $r4 == $r3 goto label2;

        $r8 = r0.<android.util.JsonReader: android.util.JsonToken token>;

        $r7 = <android.util.JsonToken: android.util.JsonToken NUMBER>;

        if $r8 != $r7 goto label1;

        goto label2;

     label1:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected a double but was ");

        $r11 = r0.<android.util.JsonReader: android.util.JsonToken token>;

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11);

        $r13 = new java.lang.IllegalStateException;

        $r14 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r14);

        throw $r13;

     label2:
        $r5 = r0.<android.util.JsonReader: java.lang.String value>;

        d0 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r5);

        specialinvoke r0.<android.util.JsonReader: android.util.JsonToken advance()>();

        return d0;
    }

    public int nextInt() throws java.io.IOException
    {
        android.util.JsonReader r0;
        double d0, $d1;
        android.util.JsonToken $r2, $r3, $r6, $r7, $r10;
        java.lang.String $r4, $r13, $r15, $r17;
        java.lang.StringBuilder $r8;
        java.lang.IllegalStateException $r12;
        java.lang.Throwable $r14;
        byte $b0;
        java.lang.NumberFormatException $r16;
        int i1;

        r0 := @this: android.util.JsonReader;

        virtualinvoke r0.<android.util.JsonReader: android.util.JsonToken peek()>();

        $r3 = r0.<android.util.JsonReader: android.util.JsonToken token>;

        $r2 = <android.util.JsonToken: android.util.JsonToken STRING>;

        if $r3 == $r2 goto label2;

        $r7 = r0.<android.util.JsonReader: android.util.JsonToken token>;

        $r6 = <android.util.JsonToken: android.util.JsonToken NUMBER>;

        if $r7 != $r6 goto label1;

        goto label2;

     label1:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected an int but was ");

        $r10 = r0.<android.util.JsonReader: android.util.JsonToken token>;

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10);

        $r12 = new java.lang.IllegalStateException;

        $r13 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r13);

        throw $r12;

     label2:
        $r4 = r0.<android.util.JsonReader: java.lang.String value>;

        i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r4);

     label3:
        goto label5;

     label4:
        $r14 := @caughtexception;

        $r15 = r0.<android.util.JsonReader: java.lang.String value>;

        d0 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r15);

        i1 = (int) d0;

        $d1 = (double) i1;

        $b0 = $d1 cmpl d0;

        if $b0 != 0 goto label6;

     label5:
        specialinvoke r0.<android.util.JsonReader: android.util.JsonToken advance()>();

        return i1;

     label6:
        $r16 = new java.lang.NumberFormatException;

        $r17 = r0.<android.util.JsonReader: java.lang.String value>;

        specialinvoke $r16.<java.lang.NumberFormatException: void <init>(java.lang.String)>($r17);

        throw $r16;

        catch java.lang.NumberFormatException from label2 to label3 with label4;
    }

    public long nextLong() throws java.io.IOException
    {
        android.util.JsonReader r0;
        double d0, $d1;
        android.util.JsonToken $r2, $r3, $r6, $r7, $r10;
        java.lang.String $r4, $r13, $r15, $r17;
        java.lang.StringBuilder $r8;
        java.lang.IllegalStateException $r12;
        java.lang.Throwable $r14;
        byte $b0;
        java.lang.NumberFormatException $r16;
        long l1;

        r0 := @this: android.util.JsonReader;

        virtualinvoke r0.<android.util.JsonReader: android.util.JsonToken peek()>();

        $r3 = r0.<android.util.JsonReader: android.util.JsonToken token>;

        $r2 = <android.util.JsonToken: android.util.JsonToken STRING>;

        if $r3 == $r2 goto label2;

        $r7 = r0.<android.util.JsonReader: android.util.JsonToken token>;

        $r6 = <android.util.JsonToken: android.util.JsonToken NUMBER>;

        if $r7 != $r6 goto label1;

        goto label2;

     label1:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected a long but was ");

        $r10 = r0.<android.util.JsonReader: android.util.JsonToken token>;

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10);

        $r12 = new java.lang.IllegalStateException;

        $r13 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r13);

        throw $r12;

     label2:
        $r4 = r0.<android.util.JsonReader: java.lang.String value>;

        l1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r4);

     label3:
        goto label5;

     label4:
        $r14 := @caughtexception;

        $r15 = r0.<android.util.JsonReader: java.lang.String value>;

        d0 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r15);

        l1 = (long) d0;

        $d1 = (double) l1;

        $b0 = $d1 cmpl d0;

        if $b0 != 0 goto label6;

     label5:
        specialinvoke r0.<android.util.JsonReader: android.util.JsonToken advance()>();

        return l1;

     label6:
        $r16 = new java.lang.NumberFormatException;

        $r17 = r0.<android.util.JsonReader: java.lang.String value>;

        specialinvoke $r16.<java.lang.NumberFormatException: void <init>(java.lang.String)>($r17);

        throw $r16;

        catch java.lang.NumberFormatException from label2 to label3 with label4;
    }

    public java.lang.String nextName() throws java.io.IOException
    {
        android.util.JsonReader r0;
        android.util.JsonToken $r2, $r3, $r6;
        java.lang.StringBuilder $r4;
        java.lang.IllegalStateException $r8;
        java.lang.String $r9, r11;

        r0 := @this: android.util.JsonReader;

        virtualinvoke r0.<android.util.JsonReader: android.util.JsonToken peek()>();

        $r3 = r0.<android.util.JsonReader: android.util.JsonToken token>;

        $r2 = <android.util.JsonToken: android.util.JsonToken NAME>;

        if $r3 != $r2 goto label1;

        r11 = r0.<android.util.JsonReader: java.lang.String name>;

        specialinvoke r0.<android.util.JsonReader: android.util.JsonToken advance()>();

        return r11;

     label1:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected a name but was ");

        $r6 = virtualinvoke r0.<android.util.JsonReader: android.util.JsonToken peek()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r8 = new java.lang.IllegalStateException;

        $r9 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r9);

        throw $r8;
    }

    public void nextNull() throws java.io.IOException
    {
        android.util.JsonReader r0;
        android.util.JsonToken $r3, $r4, $r7;
        java.lang.StringBuilder $r5;
        java.lang.IllegalStateException $r9;
        java.lang.String $r10;

        r0 := @this: android.util.JsonReader;

        virtualinvoke r0.<android.util.JsonReader: android.util.JsonToken peek()>();

        $r4 = r0.<android.util.JsonReader: android.util.JsonToken token>;

        $r3 = <android.util.JsonToken: android.util.JsonToken NULL>;

        if $r4 != $r3 goto label1;

        specialinvoke r0.<android.util.JsonReader: android.util.JsonToken advance()>();

        return;

     label1:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected null but was ");

        $r7 = r0.<android.util.JsonReader: android.util.JsonToken token>;

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r9 = new java.lang.IllegalStateException;

        $r10 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r10);

        throw $r9;
    }

    public java.lang.String nextString() throws java.io.IOException
    {
        android.util.JsonReader r0;
        android.util.JsonToken $r2, $r3, $r5, $r6, $r9;
        java.lang.StringBuilder $r7;
        java.lang.IllegalStateException $r11;
        java.lang.String $r12, r14;

        r0 := @this: android.util.JsonReader;

        virtualinvoke r0.<android.util.JsonReader: android.util.JsonToken peek()>();

        $r3 = r0.<android.util.JsonReader: android.util.JsonToken token>;

        $r2 = <android.util.JsonToken: android.util.JsonToken STRING>;

        if $r3 == $r2 goto label2;

        $r6 = r0.<android.util.JsonReader: android.util.JsonToken token>;

        $r5 = <android.util.JsonToken: android.util.JsonToken NUMBER>;

        if $r6 != $r5 goto label1;

        goto label2;

     label1:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected a string but was ");

        $r9 = virtualinvoke r0.<android.util.JsonReader: android.util.JsonToken peek()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r11 = new java.lang.IllegalStateException;

        $r12 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r12);

        throw $r11;

     label2:
        r14 = r0.<android.util.JsonReader: java.lang.String value>;

        specialinvoke r0.<android.util.JsonReader: android.util.JsonToken advance()>();

        return r14;
    }

    public android.util.JsonToken peek() throws java.io.IOException
    {
        android.util.JsonReader r0;
        int[] $r1;
        android.util.JsonScope $r2, $r10;
        int $i0, $i1;
        java.lang.IllegalStateException $r3;
        boolean $z0, $z1;
        java.io.IOException $r4, $r19;
        android.util.JsonToken $r5, $r6, $r7, $r8, $r9, $r11, $r12, $r13, $r14, $r17, r23, r24, r26, r27;
        java.lang.StringBuilder $r15;
        java.lang.String $r20;
        java.lang.AssertionError $r21;
        java.lang.Throwable $r22;

        r0 := @this: android.util.JsonReader;

        r23 = r0.<android.util.JsonReader: android.util.JsonToken token>;

        if r23 == null goto label01;

        return r23;

     label01:
        $r1 = <android.util.JsonReader$1: int[] $SwitchMap$android$util$JsonScope>;

        $r2 = specialinvoke r0.<android.util.JsonReader: android.util.JsonScope peekStack()>();

        $i0 = virtualinvoke $r2.<android.util.JsonScope: int ordinal()>();

        $i1 = $r1[$i0];

        tableswitch($i1)
        {
            case 1: goto label13;
            case 2: goto label12;
            case 3: goto label11;
            case 4: goto label10;
            case 5: goto label09;
            case 6: goto label08;
            case 7: goto label04;
            case 8: goto label03;
            default: goto label02;
        };

     label02:
        $r21 = new java.lang.AssertionError;

        specialinvoke $r21.<java.lang.AssertionError: void <init>()>();

        throw $r21;

     label03:
        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("JsonReader is closed");

        throw $r3;

     label04:
        r24 = specialinvoke r0.<android.util.JsonReader: android.util.JsonToken nextValue()>();

        $z0 = r0.<android.util.JsonReader: boolean lenient>;

        if $z0 == 0 goto label06;

     label05:
        return r24;

     label06:
        $r4 = specialinvoke r0.<android.util.JsonReader: java.io.IOException syntaxError(java.lang.String)>("Expected EOF");

        throw $r4;

     label07:
        $r22 := @caughtexception;

        r26 = <android.util.JsonToken: android.util.JsonToken END_DOCUMENT>;

        r0.<android.util.JsonReader: android.util.JsonToken token> = r26;

        return r26;

     label08:
        $r5 = specialinvoke r0.<android.util.JsonReader: android.util.JsonToken nextInObject(boolean)>(0);

        return $r5;

     label09:
        $r6 = specialinvoke r0.<android.util.JsonReader: android.util.JsonToken objectValue()>();

        return $r6;

     label10:
        $r7 = specialinvoke r0.<android.util.JsonReader: android.util.JsonToken nextInObject(boolean)>(1);

        return $r7;

     label11:
        $r8 = specialinvoke r0.<android.util.JsonReader: android.util.JsonToken nextInArray(boolean)>(0);

        return $r8;

     label12:
        $r9 = specialinvoke r0.<android.util.JsonReader: android.util.JsonToken nextInArray(boolean)>(1);

        return $r9;

     label13:
        $r10 = <android.util.JsonScope: android.util.JsonScope NONEMPTY_DOCUMENT>;

        specialinvoke r0.<android.util.JsonReader: void replaceTop(android.util.JsonScope)>($r10);

        r27 = specialinvoke r0.<android.util.JsonReader: android.util.JsonToken nextValue()>();

        $z1 = r0.<android.util.JsonReader: boolean lenient>;

        if $z1 != 0 goto label15;

        $r12 = r0.<android.util.JsonReader: android.util.JsonToken token>;

        $r11 = <android.util.JsonToken: android.util.JsonToken BEGIN_ARRAY>;

        if $r12 == $r11 goto label15;

        $r14 = r0.<android.util.JsonReader: android.util.JsonToken token>;

        $r13 = <android.util.JsonToken: android.util.JsonToken BEGIN_OBJECT>;

        if $r14 != $r13 goto label14;

        goto label15;

     label14:
        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected JSON document to start with \'[\' or \'{\' but was ");

        $r17 = r0.<android.util.JsonReader: android.util.JsonToken token>;

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r17);

        $r19 = new java.io.IOException;

        $r20 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r19.<java.io.IOException: void <init>(java.lang.String)>($r20);

        throw $r19;

     label15:
        return r27;

        catch java.io.EOFException from label04 to label05 with label07;
        catch java.io.EOFException from label06 to label07 with label07;
    }

    public void setLenient(boolean)
    {
        android.util.JsonReader r0;
        boolean z0;

        r0 := @this: android.util.JsonReader;

        z0 := @parameter0: boolean;

        r0.<android.util.JsonReader: boolean lenient> = z0;

        return;
    }

    public void skipValue() throws java.io.IOException
    {
        android.util.JsonReader r0;
        android.util.JsonToken r1, $r2, $r3, $r4, $r5, $r6, r8;
        boolean $z0;
        java.lang.Throwable $r7;
        int i0, i1;
        java.lang.IllegalStateException r9;

        r0 := @this: android.util.JsonReader;

        r0.<android.util.JsonReader: boolean skipping> = 1;

     label01:
        $z0 = virtualinvoke r0.<android.util.JsonReader: boolean hasNext()>();

        if $z0 == 0 goto label10;

        $r2 = virtualinvoke r0.<android.util.JsonReader: android.util.JsonToken peek()>();

        $r3 = <android.util.JsonToken: android.util.JsonToken END_DOCUMENT>;

        if $r2 == $r3 goto label10;

     label02:
        i0 = 0;

     label03:
        r8 = specialinvoke r0.<android.util.JsonReader: android.util.JsonToken advance()>();

        $r4 = <android.util.JsonToken: android.util.JsonToken BEGIN_ARRAY>;

        if r8 == $r4 goto label08;

        $r5 = <android.util.JsonToken: android.util.JsonToken BEGIN_OBJECT>;

        if r8 != $r5 goto label05;

     label04:
        goto label08;

     label05:
        $r6 = <android.util.JsonToken: android.util.JsonToken END_ARRAY>;

        if r8 == $r6 goto label07;

        r1 = <android.util.JsonToken: android.util.JsonToken END_OBJECT>;

     label06:
        i1 = i0;

        if r8 != r1 goto label09;

     label07:
        i1 = i0 - 1;

        goto label09;

     label08:
        i1 = i0 + 1;

     label09:
        i0 = i1;

        if i1 != 0 goto label03;

        r0.<android.util.JsonReader: boolean skipping> = 0;

        return;

     label10:
        r9 = new java.lang.IllegalStateException;

        specialinvoke r9.<java.lang.IllegalStateException: void <init>(java.lang.String)>("No element left to skip");

        throw r9;

     label11:
        $r7 := @caughtexception;

        r0.<android.util.JsonReader: boolean skipping> = 0;

        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label03 to label04 with label11;
        catch java.lang.Throwable from label05 to label06 with label11;
        catch java.lang.Throwable from label10 to label11 with label11;
    }

    public java.lang.String toString()
    {
        android.util.JsonReader r0;
        java.lang.StringBuilder $r2;
        java.lang.Class $r3;
        java.lang.String $r4, $r9;
        java.lang.CharSequence $r7;

        r0 := @this: android.util.JsonReader;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getSimpleName()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" near ");

        $r7 = specialinvoke r0.<android.util.JsonReader: java.lang.CharSequence getSnippet()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r9 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;
    }

    public static void <clinit>()
    {
        <android.util.JsonReader: java.lang.String TRUE> = "true";

        <android.util.JsonReader: java.lang.String FALSE> = "false";

        return;
    }
}
