public final class android.util.LauncherIcons extends java.lang.Object
{
    private static final int AMBIENT_SHADOW_ALPHA;
    private static final float ICON_SIZE_BLUR_FACTOR;
    private static final float ICON_SIZE_KEY_SHADOW_DELTA_FACTOR;
    private static final int KEY_SHADOW_ALPHA;
    private final int mIconSize;
    private final android.content.res.Resources mRes;
    private final android.util.SparseArray mShadowCache;

    public void <init>(android.content.Context)
    {
        android.util.LauncherIcons r0;
        android.util.SparseArray $r1;
        int $i0;
        android.content.Context r2;
        android.content.res.Resources r3;

        r0 := @this: android.util.LauncherIcons;

        r2 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new android.util.SparseArray;

        specialinvoke $r1.<android.util.SparseArray: void <init>()>();

        r0.<android.util.LauncherIcons: android.util.SparseArray mShadowCache> = $r1;

        r3 = virtualinvoke r2.<android.content.Context: android.content.res.Resources getResources()>();

        r0.<android.util.LauncherIcons: android.content.res.Resources mRes> = r3;

        $i0 = virtualinvoke r3.<android.content.res.Resources: int getDimensionPixelSize(int)>(17104896);

        r0.<android.util.LauncherIcons: int mIconSize> = $i0;

        return;
    }

    private android.graphics.Bitmap getShadowBitmap(android.graphics.drawable.AdaptiveIconDrawable)
    {
        android.util.LauncherIcons r0;
        int i0, i1, $i2, $i3;
        float f0, f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9;
        android.util.SparseArray $r2, $r9, r13, r17;
        java.lang.Object $r3;
        android.graphics.Bitmap$Config $r4;
        android.graphics.Canvas $r5;
        android.graphics.Paint $r6;
        android.graphics.Path $r7, $r8;
        java.lang.Throwable $r10, $r11;
        android.graphics.drawable.AdaptiveIconDrawable r12;
        android.graphics.Bitmap r14, r15;

        r0 := @this: android.util.LauncherIcons;

        r12 := @parameter0: android.graphics.drawable.AdaptiveIconDrawable;

        $i2 = r0.<android.util.LauncherIcons: int mIconSize>;

        $i3 = virtualinvoke r12.<android.graphics.drawable.AdaptiveIconDrawable: int getIntrinsicHeight()>();

        i0 = staticinvoke <java.lang.Math: int max(int,int)>($i2, $i3);

        r13 = r0.<android.util.LauncherIcons: android.util.SparseArray mShadowCache>;

        entermonitor r13;

     label01:
        $r2 = r0.<android.util.LauncherIcons: android.util.SparseArray mShadowCache>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r14 = (android.graphics.Bitmap) $r3;

     label02:
        if r14 == null goto label05;

     label03:
        exitmonitor r13;

     label04:
        return r14;

     label05:
        exitmonitor r13;

     label06:
        virtualinvoke r12.<android.graphics.drawable.AdaptiveIconDrawable: void setBounds(int,int,int,int)>(0, 0, i0, i0);

        $f2 = (float) i0;

        f0 = $f2 * 0.010416667F;

        $f3 = (float) i0;

        f1 = $f3 * 0.020833334F;

        $f5 = (float) i0;

        $f4 = f0 * 2.0F;

        $f6 = $f5 + $f4;

        $f7 = $f6 + f1;

        i1 = (int) $f7;

        $r4 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config ARGB_8888>;

        r15 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>(i1, i1, $r4);

        $r5 = new android.graphics.Canvas;

        specialinvoke $r5.<android.graphics.Canvas: void <init>(android.graphics.Bitmap)>(r15);

        $f8 = f1 / 2.0F;

        $f9 = $f8 + f0;

        virtualinvoke $r5.<android.graphics.Canvas: void translate(float,float)>($f9, f0);

        $r6 = new android.graphics.Paint;

        specialinvoke $r6.<android.graphics.Paint: void <init>(int)>(1);

        virtualinvoke $r6.<android.graphics.Paint: void setColor(int)>(0);

        virtualinvoke $r6.<android.graphics.Paint: void setShadowLayer(float,float,float,int)>(f0, 0.0F, 0.0F, 503316480);

        $r7 = virtualinvoke r12.<android.graphics.drawable.AdaptiveIconDrawable: android.graphics.Path getIconMask()>();

        virtualinvoke $r5.<android.graphics.Canvas: void drawPath(android.graphics.Path,android.graphics.Paint)>($r7, $r6);

        virtualinvoke $r5.<android.graphics.Canvas: void translate(float,float)>(0.0F, f1);

        virtualinvoke $r6.<android.graphics.Paint: void setShadowLayer(float,float,float,int)>(f0, 0.0F, 0.0F, 1023410176);

        $r8 = virtualinvoke r12.<android.graphics.drawable.AdaptiveIconDrawable: android.graphics.Path getIconMask()>();

        virtualinvoke $r5.<android.graphics.Canvas: void drawPath(android.graphics.Path,android.graphics.Paint)>($r8, $r6);

        virtualinvoke $r5.<android.graphics.Canvas: void setBitmap(android.graphics.Bitmap)>(null);

        r17 = r0.<android.util.LauncherIcons: android.util.SparseArray mShadowCache>;

        entermonitor r17;

     label07:
        $r9 = r0.<android.util.LauncherIcons: android.util.SparseArray mShadowCache>;

        virtualinvoke $r9.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, r15);

        exitmonitor r17;

     label08:
        return r15;

     label09:
        $r11 := @caughtexception;

     label10:
        exitmonitor r17;

     label11:
        throw $r11;

     label12:
        $r10 := @caughtexception;

     label13:
        exitmonitor r13;

     label14:
        throw $r10;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch java.lang.Throwable from label05 to label06 with label12;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
        catch java.lang.Throwable from label13 to label14 with label12;
    }

    public android.graphics.drawable.Drawable getBadgeDrawable(int, int)
    {
        android.util.LauncherIcons r0;
        int i0, i1;
        android.graphics.drawable.Drawable $r1;

        r0 := @this: android.util.LauncherIcons;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = virtualinvoke r0.<android.util.LauncherIcons: android.graphics.drawable.Drawable getBadgedDrawable(android.graphics.drawable.Drawable,int,int)>(null, i0, i1);

        return $r1;
    }

    public android.graphics.drawable.Drawable getBadgedDrawable(android.graphics.drawable.Drawable, int, int)
    {
        android.util.LauncherIcons r0;
        int i0, i1;
        android.graphics.drawable.Drawable r1, r2, $r5, $r7, r10, r12;
        android.app.ActivityThread $r3;
        android.app.Application $r4;
        android.graphics.drawable.Drawable$ConstantState $r6;
        android.graphics.drawable.Drawable[] $r8, r13;
        android.graphics.drawable.LayerDrawable $r9;
        android.content.res.Resources r11;

        r0 := @this: android.util.LauncherIcons;

        r10 := @parameter0: android.graphics.drawable.Drawable;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r3 = staticinvoke <android.app.ActivityThread: android.app.ActivityThread currentActivityThread()>();

        $r4 = virtualinvoke $r3.<android.app.ActivityThread: android.app.Application getApplication()>();

        r11 = virtualinvoke $r4.<android.app.Application: android.content.res.Resources getResources()>();

        r1 = virtualinvoke r11.<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int)>(17302389);

        $r5 = virtualinvoke r11.<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int)>(17302388);

        $r6 = virtualinvoke $r5.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable$ConstantState getConstantState()>();

        $r7 = virtualinvoke $r6.<android.graphics.drawable.Drawable$ConstantState: android.graphics.drawable.Drawable newDrawable()>();

        r2 = virtualinvoke $r7.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>();

        r12 = virtualinvoke r11.<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int)>(i0);

        virtualinvoke r12.<android.graphics.drawable.Drawable: void setTint(int)>(i1);

        if r10 != null goto label1;

        r13 = newarray (android.graphics.drawable.Drawable)[3];

        r13[0] = r1;

        r13[1] = r2;

        r13[2] = r12;

        goto label2;

     label1:
        $r8 = newarray (android.graphics.drawable.Drawable)[4];

        $r8[0] = r10;

        $r8[1] = r1;

        $r8[2] = r2;

        $r8[3] = r12;

        r13 = $r8;

     label2:
        $r9 = new android.graphics.drawable.LayerDrawable;

        specialinvoke $r9.<android.graphics.drawable.LayerDrawable: void <init>(android.graphics.drawable.Drawable[])>(r13);

        return $r9;
    }

    public android.graphics.drawable.Drawable wrapIconDrawableWithShadow(android.graphics.drawable.Drawable)
    {
        android.util.LauncherIcons r0;
        android.graphics.drawable.Drawable r1;
        boolean $z0;
        android.util.LauncherIcons$ShadowDrawable $r2;
        android.graphics.drawable.AdaptiveIconDrawable $r3;
        android.graphics.Bitmap $r4;

        r0 := @this: android.util.LauncherIcons;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        $z0 = r1 instanceof android.graphics.drawable.AdaptiveIconDrawable;

        if $z0 != 0 goto label1;

        return r1;

     label1:
        $r2 = new android.util.LauncherIcons$ShadowDrawable;

        $r3 = (android.graphics.drawable.AdaptiveIconDrawable) r1;

        $r4 = specialinvoke r0.<android.util.LauncherIcons: android.graphics.Bitmap getShadowBitmap(android.graphics.drawable.AdaptiveIconDrawable)>($r3);

        specialinvoke $r2.<android.util.LauncherIcons$ShadowDrawable: void <init>(android.graphics.Bitmap,android.graphics.drawable.Drawable)>($r4, r1);

        return $r2;
    }

    public static void <clinit>()
    {
        <android.util.LauncherIcons: int KEY_SHADOW_ALPHA> = 61;

        <android.util.LauncherIcons: float ICON_SIZE_KEY_SHADOW_DELTA_FACTOR> = 0.020833334F;

        <android.util.LauncherIcons: float ICON_SIZE_BLUR_FACTOR> = 0.010416667F;

        <android.util.LauncherIcons: int AMBIENT_SHADOW_ALPHA> = 30;

        return;
    }
}
