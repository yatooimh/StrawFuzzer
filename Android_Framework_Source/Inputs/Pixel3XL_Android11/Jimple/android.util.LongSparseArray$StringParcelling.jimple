public class android.util.LongSparseArray$StringParcelling extends java.lang.Object implements com.android.internal.util.Parcelling
{

    public void <init>()
    {
        android.util.LongSparseArray$StringParcelling r0;

        r0 := @this: android.util.LongSparseArray$StringParcelling;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void parcel(android.util.LongSparseArray, android.os.Parcel, int)
    {
        android.util.LongSparseArray$StringParcelling r0;
        android.util.LongSparseArray r1;
        android.os.Parcel r2;
        long[] $r3;
        java.lang.Object[] $r4, $r5;
        java.lang.String[] $r6;
        int i0, i1;

        r0 := @this: android.util.LongSparseArray$StringParcelling;

        r1 := @parameter0: android.util.LongSparseArray;

        r2 := @parameter1: android.os.Parcel;

        i0 := @parameter2: int;

        if r1 != null goto label1;

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(-1);

        return;

     label1:
        i1 = staticinvoke <android.util.LongSparseArray: int access$000(android.util.LongSparseArray)>(r1);

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i1);

        $r3 = staticinvoke <android.util.LongSparseArray: long[] access$100(android.util.LongSparseArray)>(r1);

        virtualinvoke r2.<android.os.Parcel: void writeLongArray(long[])>($r3);

        $r4 = staticinvoke <android.util.LongSparseArray: java.lang.Object[] access$200(android.util.LongSparseArray)>(r1);

        $r5 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOfRange(java.lang.Object[],int,int,java.lang.Class)>($r4, 0, i1, class "[Ljava/lang/String;");

        $r6 = (java.lang.String[]) $r5;

        virtualinvoke r2.<android.os.Parcel: void writeStringArray(java.lang.String[])>($r6);

        return;
    }

    public volatile void parcel(java.lang.Object, android.os.Parcel, int)
    {
        android.util.LongSparseArray$StringParcelling r0;
        java.lang.Object r1;
        android.os.Parcel r2;
        int i0;
        android.util.LongSparseArray $r3;

        r0 := @this: android.util.LongSparseArray$StringParcelling;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: android.os.Parcel;

        i0 := @parameter2: int;

        $r3 = (android.util.LongSparseArray) r1;

        virtualinvoke r0.<android.util.LongSparseArray$StringParcelling: void parcel(android.util.LongSparseArray,android.os.Parcel,int)>($r3, r2, i0);

        return;
    }

    public android.util.LongSparseArray unparcel(android.os.Parcel)
    {
        android.util.LongSparseArray$StringParcelling r0;
        android.os.Parcel r1;
        int i0, $i3, $i4, i7;
        long l1, $l5;
        android.util.LongSparseArray $r3;
        long[] $r4, $r8, $r10, $r11;
        java.lang.String[] $r6;
        java.lang.Object[] $r9;
        byte $b6;
        boolean z0, z1, z2;

        r0 := @this: android.util.LongSparseArray$StringParcelling;

        r1 := @parameter0: android.os.Parcel;

        i0 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if i0 != -1 goto label1;

        return null;

     label1:
        $r3 = new android.util.LongSparseArray;

        specialinvoke $r3.<android.util.LongSparseArray: void <init>(int)>(0);

        staticinvoke <android.util.LongSparseArray: int access$002(android.util.LongSparseArray,int)>($r3, i0);

        $r4 = virtualinvoke r1.<android.os.Parcel: long[] createLongArray()>();

        staticinvoke <android.util.LongSparseArray: long[] access$102(android.util.LongSparseArray,long[])>($r3, $r4);

        $r6 = virtualinvoke r1.<android.os.Parcel: java.lang.String[] createStringArray()>();

        staticinvoke <android.util.LongSparseArray: java.lang.Object[] access$202(android.util.LongSparseArray,java.lang.Object[])>($r3, $r6);

        $r8 = staticinvoke <android.util.LongSparseArray: long[] access$100(android.util.LongSparseArray)>($r3);

        $i3 = lengthof $r8;

        if $i3 < i0 goto label2;

        z0 = 1;

        goto label3;

     label2:
        z0 = 0;

     label3:
        staticinvoke <com.android.internal.util.Preconditions: void checkArgument(boolean)>(z0);

        $r9 = staticinvoke <android.util.LongSparseArray: java.lang.Object[] access$200(android.util.LongSparseArray)>($r3);

        $i4 = lengthof $r9;

        if $i4 < i0 goto label4;

        z1 = 1;

        goto label5;

     label4:
        z1 = 0;

     label5:
        staticinvoke <com.android.internal.util.Preconditions: void checkArgument(boolean)>(z1);

        if i0 <= 0 goto label9;

        $r10 = staticinvoke <android.util.LongSparseArray: long[] access$100(android.util.LongSparseArray)>($r3);

        l1 = $r10[0];

        i7 = 1;

     label6:
        if i7 >= i0 goto label9;

        $r11 = staticinvoke <android.util.LongSparseArray: long[] access$100(android.util.LongSparseArray)>($r3);

        $l5 = $r11[i7];

        $b6 = l1 cmp $l5;

        if $b6 >= 0 goto label7;

        z2 = 1;

        goto label8;

     label7:
        z2 = 0;

     label8:
        staticinvoke <com.android.internal.util.Preconditions: void checkArgument(boolean)>(z2);

        i7 = i7 + 1;

        goto label6;

     label9:
        return $r3;
    }

    public volatile java.lang.Object unparcel(android.os.Parcel)
    {
        android.util.LongSparseArray$StringParcelling r0;
        android.os.Parcel r1;
        android.util.LongSparseArray $r2;

        r0 := @this: android.util.LongSparseArray$StringParcelling;

        r1 := @parameter0: android.os.Parcel;

        $r2 = virtualinvoke r0.<android.util.LongSparseArray$StringParcelling: android.util.LongSparseArray unparcel(android.os.Parcel)>(r1);

        return $r2;
    }
}
