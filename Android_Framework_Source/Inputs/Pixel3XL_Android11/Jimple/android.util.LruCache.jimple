public class android.util.LruCache extends java.lang.Object
{
    private int createCount;
    private int evictionCount;
    private int hitCount;
    private final java.util.LinkedHashMap map;
    private int maxSize;
    private int missCount;
    private int putCount;
    private int size;

    public void <init>(int)
    {
        android.util.LruCache r0;
        int i0;
        java.lang.IllegalArgumentException $r1;
        java.util.LinkedHashMap $r2;

        r0 := @this: android.util.LruCache;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if i0 <= 0 goto label1;

        r0.<android.util.LruCache: int maxSize> = i0;

        $r2 = new java.util.LinkedHashMap;

        specialinvoke $r2.<java.util.LinkedHashMap: void <init>(int,float,boolean)>(0, 0.75F, 1);

        r0.<android.util.LruCache: java.util.LinkedHashMap map> = $r2;

        return;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("maxSize <= 0");

        throw $r1;
    }

    private int safeSizeOf(java.lang.Object, java.lang.Object)
    {
        android.util.LruCache r0;
        java.lang.Object r1, r2;
        int i0;
        java.lang.StringBuilder $r4;
        java.lang.IllegalStateException $r9;
        java.lang.String $r10;

        r0 := @this: android.util.LruCache;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        i0 = virtualinvoke r0.<android.util.LruCache: int sizeOf(java.lang.Object,java.lang.Object)>(r1, r2);

        if i0 < 0 goto label1;

        return i0;

     label1:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Negative size: ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r9 = new java.lang.IllegalStateException;

        $r10 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r10);

        throw $r9;
    }

    protected java.lang.Object create(java.lang.Object)
    {
        android.util.LruCache r0;
        java.lang.Object r1;

        r0 := @this: android.util.LruCache;

        r1 := @parameter0: java.lang.Object;

        return null;
    }

    public final int createCount()
    {
        android.util.LruCache r0;
        int i0;
        java.lang.Throwable $r2;

        r0 := @this: android.util.LruCache;

        entermonitor r0;

     label1:
        i0 = r0.<android.util.LruCache: int createCount>;

     label2:
        exitmonitor r0;

        return i0;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    protected void entryRemoved(boolean, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        android.util.LruCache r0;
        boolean z0;
        java.lang.Object r1, r2, r3;

        r0 := @this: android.util.LruCache;

        z0 := @parameter0: boolean;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: java.lang.Object;

        r3 := @parameter3: java.lang.Object;

        return;
    }

    public final void evictAll()
    {
        android.util.LruCache r0;

        r0 := @this: android.util.LruCache;

        virtualinvoke r0.<android.util.LruCache: void trimToSize(int)>(-1);

        return;
    }

    public final int evictionCount()
    {
        android.util.LruCache r0;
        int i0;
        java.lang.Throwable $r2;

        r0 := @this: android.util.LruCache;

        entermonitor r0;

     label1:
        i0 = r0.<android.util.LruCache: int evictionCount>;

     label2:
        exitmonitor r0;

        return i0;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public final java.lang.Object get(java.lang.Object)
    {
        android.util.LruCache r0;
        java.lang.Object r1, r9, r10, r11;
        java.lang.NullPointerException $r2;
        java.util.LinkedHashMap $r3, $r4, $r5;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        java.lang.Throwable $r7, $r8;

        r0 := @this: android.util.LruCache;

        r9 := @parameter0: java.lang.Object;

        if r9 == null goto label22;

        entermonitor r0;

     label01:
        $r3 = r0.<android.util.LruCache: java.util.LinkedHashMap map>;

        r10 = virtualinvoke $r3.<java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>(r9);

     label02:
        if r10 == null goto label05;

     label03:
        $i8 = r0.<android.util.LruCache: int hitCount>;

        $i9 = $i8 + 1;

        r0.<android.util.LruCache: int hitCount> = $i9;

        exitmonitor r0;

     label04:
        return r10;

     label05:
        $i0 = r0.<android.util.LruCache: int missCount>;

        $i1 = $i0 + 1;

        r0.<android.util.LruCache: int missCount> = $i1;

        exitmonitor r0;

     label06:
        r11 = virtualinvoke r0.<android.util.LruCache: java.lang.Object create(java.lang.Object)>(r9);

        if r11 != null goto label07;

        return null;

     label07:
        entermonitor r0;

     label08:
        $i2 = r0.<android.util.LruCache: int createCount>;

        $i3 = $i2 + 1;

        r0.<android.util.LruCache: int createCount> = $i3;

        $r4 = r0.<android.util.LruCache: java.util.LinkedHashMap map>;

        r1 = virtualinvoke $r4.<java.util.LinkedHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r9, r11);

     label09:
        if r1 == null goto label12;

     label10:
        $r5 = r0.<android.util.LruCache: java.util.LinkedHashMap map>;

        virtualinvoke $r5.<java.util.LinkedHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r9, r1);

     label11:
        goto label13;

     label12:
        $i4 = r0.<android.util.LruCache: int size>;

        $i5 = specialinvoke r0.<android.util.LruCache: int safeSizeOf(java.lang.Object,java.lang.Object)>(r9, r11);

        $i6 = $i4 + $i5;

        r0.<android.util.LruCache: int size> = $i6;

     label13:
        exitmonitor r0;

     label14:
        if r1 == null goto label15;

        virtualinvoke r0.<android.util.LruCache: void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object)>(0, r9, r11, r1);

        return r1;

     label15:
        $i7 = r0.<android.util.LruCache: int maxSize>;

        virtualinvoke r0.<android.util.LruCache: void trimToSize(int)>($i7);

        return r11;

     label16:
        $r7 := @caughtexception;

     label17:
        exitmonitor r0;

     label18:
        throw $r7;

     label19:
        $r8 := @caughtexception;

     label20:
        exitmonitor r0;

     label21:
        throw $r8;

     label22:
        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("key == null");

        throw $r2;

        catch java.lang.Throwable from label01 to label02 with label19;
        catch java.lang.Throwable from label03 to label04 with label19;
        catch java.lang.Throwable from label05 to label06 with label19;
        catch java.lang.Throwable from label08 to label09 with label16;
        catch java.lang.Throwable from label10 to label11 with label16;
        catch java.lang.Throwable from label12 to label13 with label16;
        catch java.lang.Throwable from label13 to label14 with label16;
        catch java.lang.Throwable from label17 to label18 with label16;
        catch java.lang.Throwable from label20 to label21 with label19;
    }

    public final int hitCount()
    {
        android.util.LruCache r0;
        int i0;
        java.lang.Throwable $r2;

        r0 := @this: android.util.LruCache;

        entermonitor r0;

     label1:
        i0 = r0.<android.util.LruCache: int hitCount>;

     label2:
        exitmonitor r0;

        return i0;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public final int maxSize()
    {
        android.util.LruCache r0;
        int i0;
        java.lang.Throwable $r2;

        r0 := @this: android.util.LruCache;

        entermonitor r0;

     label1:
        i0 = r0.<android.util.LruCache: int maxSize>;

     label2:
        exitmonitor r0;

        return i0;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public final int missCount()
    {
        android.util.LruCache r0;
        int i0;
        java.lang.Throwable $r2;

        r0 := @this: android.util.LruCache;

        entermonitor r0;

     label1:
        i0 = r0.<android.util.LruCache: int missCount>;

     label2:
        exitmonitor r0;

        return i0;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public final java.lang.Object put(java.lang.Object, java.lang.Object)
    {
        android.util.LruCache r0;
        java.lang.Object r1, r2, r6;
        java.lang.NullPointerException $r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        java.util.LinkedHashMap $r4;
        java.lang.Throwable $r5;

        r0 := @this: android.util.LruCache;

        r6 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        if r6 == null goto label10;

        if r1 == null goto label10;

        entermonitor r0;

     label01:
        $i0 = r0.<android.util.LruCache: int putCount>;

        $i1 = $i0 + 1;

        r0.<android.util.LruCache: int putCount> = $i1;

        $i2 = r0.<android.util.LruCache: int size>;

        $i3 = specialinvoke r0.<android.util.LruCache: int safeSizeOf(java.lang.Object,java.lang.Object)>(r6, r1);

        $i4 = $i2 + $i3;

        r0.<android.util.LruCache: int size> = $i4;

        $r4 = r0.<android.util.LruCache: java.util.LinkedHashMap map>;

        r2 = virtualinvoke $r4.<java.util.LinkedHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r6, r1);

     label02:
        if r2 == null goto label04;

     label03:
        $i6 = r0.<android.util.LruCache: int size>;

        $i7 = specialinvoke r0.<android.util.LruCache: int safeSizeOf(java.lang.Object,java.lang.Object)>(r6, r2);

        $i8 = $i6 - $i7;

        r0.<android.util.LruCache: int size> = $i8;

     label04:
        exitmonitor r0;

     label05:
        if r2 == null goto label06;

        virtualinvoke r0.<android.util.LruCache: void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object)>(0, r6, r2, r1);

     label06:
        $i5 = r0.<android.util.LruCache: int maxSize>;

        virtualinvoke r0.<android.util.LruCache: void trimToSize(int)>($i5);

        return r2;

     label07:
        $r5 := @caughtexception;

     label08:
        exitmonitor r0;

     label09:
        throw $r5;

     label10:
        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>("key == null || value == null");

        throw $r3;

        catch java.lang.Throwable from label01 to label02 with label07;
        catch java.lang.Throwable from label03 to label04 with label07;
        catch java.lang.Throwable from label04 to label05 with label07;
        catch java.lang.Throwable from label08 to label09 with label07;
    }

    public final int putCount()
    {
        android.util.LruCache r0;
        int i0;
        java.lang.Throwable $r2;

        r0 := @this: android.util.LruCache;

        entermonitor r0;

     label1:
        i0 = r0.<android.util.LruCache: int putCount>;

     label2:
        exitmonitor r0;

        return i0;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public final java.lang.Object remove(java.lang.Object)
    {
        android.util.LruCache r0;
        java.lang.Object r1, r5;
        java.lang.NullPointerException $r2;
        java.util.LinkedHashMap $r3;
        int $i0, $i1, $i2;
        java.lang.Throwable $r4;

        r0 := @this: android.util.LruCache;

        r5 := @parameter0: java.lang.Object;

        if r5 == null goto label10;

        entermonitor r0;

     label01:
        $r3 = r0.<android.util.LruCache: java.util.LinkedHashMap map>;

        r1 = virtualinvoke $r3.<java.util.LinkedHashMap: java.lang.Object remove(java.lang.Object)>(r5);

     label02:
        if r1 == null goto label04;

     label03:
        $i0 = r0.<android.util.LruCache: int size>;

        $i1 = specialinvoke r0.<android.util.LruCache: int safeSizeOf(java.lang.Object,java.lang.Object)>(r5, r1);

        $i2 = $i0 - $i1;

        r0.<android.util.LruCache: int size> = $i2;

     label04:
        exitmonitor r0;

     label05:
        if r1 == null goto label06;

        virtualinvoke r0.<android.util.LruCache: void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object)>(0, r5, r1, null);

     label06:
        return r1;

     label07:
        $r4 := @caughtexception;

     label08:
        exitmonitor r0;

     label09:
        throw $r4;

     label10:
        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("key == null");

        throw $r2;

        catch java.lang.Throwable from label01 to label02 with label07;
        catch java.lang.Throwable from label03 to label04 with label07;
        catch java.lang.Throwable from label04 to label05 with label07;
        catch java.lang.Throwable from label08 to label09 with label07;
    }

    public void resize(int)
    {
        android.util.LruCache r0;
        int i0;
        java.lang.IllegalArgumentException $r2;
        java.lang.Throwable $r3;

        r0 := @this: android.util.LruCache;

        i0 := @parameter0: int;

        if i0 <= 0 goto label6;

        entermonitor r0;

     label1:
        r0.<android.util.LruCache: int maxSize> = i0;

        exitmonitor r0;

     label2:
        virtualinvoke r0.<android.util.LruCache: void trimToSize(int)>(i0);

        return;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r0;

     label5:
        throw $r3;

     label6:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("maxSize <= 0");

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public final int size()
    {
        android.util.LruCache r0;
        int i0;
        java.lang.Throwable $r2;

        r0 := @this: android.util.LruCache;

        entermonitor r0;

     label1:
        i0 = r0.<android.util.LruCache: int size>;

     label2:
        exitmonitor r0;

        return i0;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    protected int sizeOf(java.lang.Object, java.lang.Object)
    {
        android.util.LruCache r0;
        java.lang.Object r1, r2;

        r0 := @this: android.util.LruCache;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        return 1;
    }

    public final java.util.Map snapshot()
    {
        android.util.LruCache r0;
        java.util.LinkedHashMap $r1, $r2;
        java.lang.Throwable $r3;

        r0 := @this: android.util.LruCache;

        entermonitor r0;

     label1:
        $r1 = new java.util.LinkedHashMap;

        $r2 = r0.<android.util.LruCache: java.util.LinkedHashMap map>;

        specialinvoke $r1.<java.util.LinkedHashMap: void <init>(java.util.Map)>($r2);

     label2:
        exitmonitor r0;

        return $r1;

     label3:
        $r3 := @caughtexception;

        exitmonitor r0;

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public final java.lang.String toString()
    {
        android.util.LruCache r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, i7, i8;
        java.lang.Object[] $r1;
        java.lang.Integer $r2, $r3, $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7;

        r0 := @this: android.util.LruCache;

        entermonitor r0;

     label1:
        $i1 = r0.<android.util.LruCache: int hitCount>;

        $i0 = r0.<android.util.LruCache: int missCount>;

        i7 = $i1 + $i0;

     label2:
        if i7 == 0 goto label5;

     label3:
        $i5 = r0.<android.util.LruCache: int hitCount>;

        $i6 = $i5 * 100;

        i8 = $i6 / i7;

     label4:
        goto label6;

     label5:
        i8 = 0;

     label6:
        $r1 = newarray (java.lang.Object)[4];

        $i2 = r0.<android.util.LruCache: int maxSize>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r1[0] = $r2;

        $i3 = r0.<android.util.LruCache: int hitCount>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $r1[1] = $r3;

        $i4 = r0.<android.util.LruCache: int missCount>;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        $r1[2] = $r4;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i8);

        $r1[3] = $r5;

        r7 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("LruCache[maxSize=%d,hits=%d,misses=%d,hitRate=%d%%]", $r1);

     label7:
        exitmonitor r0;

        return r7;

     label8:
        $r6 := @caughtexception;

        exitmonitor r0;

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
    }

    public void trimToSize(int)
    {
        android.util.LruCache r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        java.lang.Class $r1;
        java.lang.String $r2, $r5;
        java.util.LinkedHashMap $r6, $r7, $r8;
        boolean $z0;
        java.lang.Throwable $r10;
        java.util.Map$Entry r11;
        java.lang.Object r12, r13;
        java.lang.IllegalStateException r14;
        java.lang.StringBuilder r15;

        r0 := @this: android.util.LruCache;

        i0 := @parameter0: int;

     label01:
        entermonitor r0;

     label02:
        $i1 = r0.<android.util.LruCache: int size>;

        if $i1 < 0 goto label11;

        $r6 = r0.<android.util.LruCache: java.util.LinkedHashMap map>;

        $z0 = virtualinvoke $r6.<java.util.LinkedHashMap: boolean isEmpty()>();

        if $z0 == 0 goto label03;

        $i8 = r0.<android.util.LruCache: int size>;

        if $i8 != 0 goto label11;

     label03:
        $i2 = r0.<android.util.LruCache: int size>;

        if $i2 > i0 goto label05;

        exitmonitor r0;

     label04:
        goto label08;

     label05:
        $r7 = r0.<android.util.LruCache: java.util.LinkedHashMap map>;

        r11 = virtualinvoke $r7.<java.util.LinkedHashMap: java.util.Map$Entry eldest()>();

     label06:
        if r11 != null goto label09;

     label07:
        exitmonitor r0;

     label08:
        return;

     label09:
        r12 = interfaceinvoke r11.<java.util.Map$Entry: java.lang.Object getKey()>();

        r13 = interfaceinvoke r11.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r8 = r0.<android.util.LruCache: java.util.LinkedHashMap map>;

        virtualinvoke $r8.<java.util.LinkedHashMap: java.lang.Object remove(java.lang.Object)>(r12);

        $i3 = r0.<android.util.LruCache: int size>;

        $i4 = specialinvoke r0.<android.util.LruCache: int safeSizeOf(java.lang.Object,java.lang.Object)>(r12, r13);

        $i5 = $i3 - $i4;

        r0.<android.util.LruCache: int size> = $i5;

        $i6 = r0.<android.util.LruCache: int evictionCount>;

        $i7 = $i6 + 1;

        r0.<android.util.LruCache: int evictionCount> = $i7;

        exitmonitor r0;

     label10:
        virtualinvoke r0.<android.util.LruCache: void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object)>(1, r12, r13, null);

        goto label01;

     label11:
        r14 = new java.lang.IllegalStateException;

        r15 = new java.lang.StringBuilder;

        specialinvoke r15.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        virtualinvoke r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".sizeOf() is reporting inconsistent results!");

        $r5 = virtualinvoke r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r14.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r5);

        throw r14;

     label12:
        $r10 := @caughtexception;

     label13:
        exitmonitor r0;

     label14:
        throw $r10;

        catch java.lang.Throwable from label02 to label03 with label12;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch java.lang.Throwable from label05 to label06 with label12;
        catch java.lang.Throwable from label07 to label08 with label12;
        catch java.lang.Throwable from label09 to label10 with label12;
        catch java.lang.Throwable from label11 to label12 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
    }
}
