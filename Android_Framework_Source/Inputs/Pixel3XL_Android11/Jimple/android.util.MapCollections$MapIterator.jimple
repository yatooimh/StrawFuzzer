final class android.util.MapCollections$MapIterator extends java.lang.Object implements java.util.Iterator, java.util.Map$Entry
{
    int mEnd;
    boolean mEntryValid;
    int mIndex;
    final android.util.MapCollections this$0;

    void <init>(android.util.MapCollections)
    {
        android.util.MapCollections$MapIterator r0;
        android.util.MapCollections r1;
        int $i0, $i1;

        r0 := @this: android.util.MapCollections$MapIterator;

        r1 := @parameter0: android.util.MapCollections;

        r0.<android.util.MapCollections$MapIterator: android.util.MapCollections this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.util.MapCollections$MapIterator: boolean mEntryValid> = 0;

        $i0 = virtualinvoke r1.<android.util.MapCollections: int colGetSize()>();

        $i1 = $i0 - 1;

        r0.<android.util.MapCollections$MapIterator: int mEnd> = $i1;

        r0.<android.util.MapCollections$MapIterator: int mIndex> = -1;

        return;
    }

    public final boolean equals(java.lang.Object)
    {
        android.util.MapCollections$MapIterator r0;
        boolean z0, $z1, $z2, $z3, z4;
        java.lang.IllegalStateException $r1;
        java.lang.Object $r2, $r4, $r5, $r7, r8;
        int $i0, $i1;
        android.util.MapCollections $r3, $r6;
        java.util.Map$Entry r9;

        r0 := @this: android.util.MapCollections$MapIterator;

        r8 := @parameter0: java.lang.Object;

        $z1 = r0.<android.util.MapCollections$MapIterator: boolean mEntryValid>;

        if $z1 == 0 goto label3;

        z0 = r8 instanceof java.util.Map$Entry;

        z4 = 0;

        if z0 != 0 goto label1;

        return 0;

     label1:
        r9 = (java.util.Map$Entry) r8;

        $r2 = interfaceinvoke r9.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r3 = r0.<android.util.MapCollections$MapIterator: android.util.MapCollections this$0>;

        $i0 = r0.<android.util.MapCollections$MapIterator: int mIndex>;

        $r4 = virtualinvoke $r3.<android.util.MapCollections: java.lang.Object colGetEntry(int,int)>($i0, 0);

        $z2 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r2, $r4);

        if $z2 == 0 goto label2;

        $r5 = interfaceinvoke r9.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r6 = r0.<android.util.MapCollections$MapIterator: android.util.MapCollections this$0>;

        $i1 = r0.<android.util.MapCollections$MapIterator: int mIndex>;

        $r7 = virtualinvoke $r6.<android.util.MapCollections: java.lang.Object colGetEntry(int,int)>($i1, 1);

        $z3 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r5, $r7);

        if $z3 == 0 goto label2;

        z4 = 1;

        goto label2;

     label2:
        return z4;

     label3:
        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This container does not support retaining Map.Entry objects");

        throw $r1;
    }

    public java.lang.Object getKey()
    {
        android.util.MapCollections$MapIterator r0;
        boolean $z0;
        java.lang.IllegalStateException $r1;
        int $i0;
        android.util.MapCollections $r2;
        java.lang.Object $r3;

        r0 := @this: android.util.MapCollections$MapIterator;

        $z0 = r0.<android.util.MapCollections$MapIterator: boolean mEntryValid>;

        if $z0 == 0 goto label1;

        $r2 = r0.<android.util.MapCollections$MapIterator: android.util.MapCollections this$0>;

        $i0 = r0.<android.util.MapCollections$MapIterator: int mIndex>;

        $r3 = virtualinvoke $r2.<android.util.MapCollections: java.lang.Object colGetEntry(int,int)>($i0, 0);

        return $r3;

     label1:
        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This container does not support retaining Map.Entry objects");

        throw $r1;
    }

    public java.lang.Object getValue()
    {
        android.util.MapCollections$MapIterator r0;
        boolean $z0;
        java.lang.IllegalStateException $r1;
        int $i0;
        android.util.MapCollections $r2;
        java.lang.Object $r3;

        r0 := @this: android.util.MapCollections$MapIterator;

        $z0 = r0.<android.util.MapCollections$MapIterator: boolean mEntryValid>;

        if $z0 == 0 goto label1;

        $r2 = r0.<android.util.MapCollections$MapIterator: android.util.MapCollections this$0>;

        $i0 = r0.<android.util.MapCollections$MapIterator: int mIndex>;

        $r3 = virtualinvoke $r2.<android.util.MapCollections: java.lang.Object colGetEntry(int,int)>($i0, 1);

        return $r3;

     label1:
        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This container does not support retaining Map.Entry objects");

        throw $r1;
    }

    public boolean hasNext()
    {
        android.util.MapCollections$MapIterator r0;
        int $i0, $i1;
        boolean z0;

        r0 := @this: android.util.MapCollections$MapIterator;

        $i1 = r0.<android.util.MapCollections$MapIterator: int mIndex>;

        $i0 = r0.<android.util.MapCollections$MapIterator: int mEnd>;

        if $i1 >= $i0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public final int hashCode()
    {
        android.util.MapCollections$MapIterator r0;
        java.lang.Object r1, r5;
        boolean $z0;
        java.lang.IllegalStateException $r2;
        int $i0, $i1, i2, i3, i4;
        android.util.MapCollections $r3, r4;

        r0 := @this: android.util.MapCollections$MapIterator;

        $z0 = r0.<android.util.MapCollections$MapIterator: boolean mEntryValid>;

        if $z0 == 0 goto label5;

        r4 = r0.<android.util.MapCollections$MapIterator: android.util.MapCollections this$0>;

        i2 = r0.<android.util.MapCollections$MapIterator: int mIndex>;

        i3 = 0;

        r1 = virtualinvoke r4.<android.util.MapCollections: java.lang.Object colGetEntry(int,int)>(i2, 0);

        $r3 = r0.<android.util.MapCollections$MapIterator: android.util.MapCollections this$0>;

        $i0 = r0.<android.util.MapCollections$MapIterator: int mIndex>;

        r5 = virtualinvoke $r3.<android.util.MapCollections: java.lang.Object colGetEntry(int,int)>($i0, 1);

        if r1 != null goto label1;

        i4 = 0;

        goto label2;

     label1:
        i4 = virtualinvoke r1.<java.lang.Object: int hashCode()>();

     label2:
        if r5 != null goto label3;

        goto label4;

     label3:
        i3 = virtualinvoke r5.<java.lang.Object: int hashCode()>();

     label4:
        $i1 = i3 ^ i4;

        return $i1;

     label5:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This container does not support retaining Map.Entry objects");

        throw $r2;
    }

    public volatile java.lang.Object next()
    {
        android.util.MapCollections$MapIterator r0;
        java.util.Map$Entry $r1;

        r0 := @this: android.util.MapCollections$MapIterator;

        $r1 = virtualinvoke r0.<android.util.MapCollections$MapIterator: java.util.Map$Entry next()>();

        return $r1;
    }

    public java.util.Map$Entry next()
    {
        android.util.MapCollections$MapIterator r0;
        boolean $z0;
        java.util.NoSuchElementException $r1;
        int $i0, $i1;

        r0 := @this: android.util.MapCollections$MapIterator;

        $z0 = virtualinvoke r0.<android.util.MapCollections$MapIterator: boolean hasNext()>();

        if $z0 == 0 goto label1;

        $i0 = r0.<android.util.MapCollections$MapIterator: int mIndex>;

        $i1 = $i0 + 1;

        r0.<android.util.MapCollections$MapIterator: int mIndex> = $i1;

        r0.<android.util.MapCollections$MapIterator: boolean mEntryValid> = 1;

        return r0;

     label1:
        $r1 = new java.util.NoSuchElementException;

        specialinvoke $r1.<java.util.NoSuchElementException: void <init>()>();

        throw $r1;
    }

    public void remove()
    {
        android.util.MapCollections$MapIterator r0;
        boolean $z0;
        java.lang.IllegalStateException $r1;
        int $i0, $i1, $i2, $i3, $i4;
        android.util.MapCollections $r2;

        r0 := @this: android.util.MapCollections$MapIterator;

        $z0 = r0.<android.util.MapCollections$MapIterator: boolean mEntryValid>;

        if $z0 == 0 goto label1;

        $r2 = r0.<android.util.MapCollections$MapIterator: android.util.MapCollections this$0>;

        $i0 = r0.<android.util.MapCollections$MapIterator: int mIndex>;

        virtualinvoke $r2.<android.util.MapCollections: void colRemoveAt(int)>($i0);

        $i1 = r0.<android.util.MapCollections$MapIterator: int mIndex>;

        $i2 = $i1 - 1;

        r0.<android.util.MapCollections$MapIterator: int mIndex> = $i2;

        $i3 = r0.<android.util.MapCollections$MapIterator: int mEnd>;

        $i4 = $i3 - 1;

        r0.<android.util.MapCollections$MapIterator: int mEnd> = $i4;

        r0.<android.util.MapCollections$MapIterator: boolean mEntryValid> = 0;

        return;

     label1:
        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>()>();

        throw $r1;
    }

    public java.lang.Object setValue(java.lang.Object)
    {
        android.util.MapCollections$MapIterator r0;
        java.lang.Object r1, $r4;
        boolean $z0;
        java.lang.IllegalStateException $r2;
        int $i0;
        android.util.MapCollections $r3;

        r0 := @this: android.util.MapCollections$MapIterator;

        r1 := @parameter0: java.lang.Object;

        $z0 = r0.<android.util.MapCollections$MapIterator: boolean mEntryValid>;

        if $z0 == 0 goto label1;

        $r3 = r0.<android.util.MapCollections$MapIterator: android.util.MapCollections this$0>;

        $i0 = r0.<android.util.MapCollections$MapIterator: int mIndex>;

        $r4 = virtualinvoke $r3.<android.util.MapCollections: java.lang.Object colSetValue(int,java.lang.Object)>($i0, r1);

        return $r4;

     label1:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This container does not support retaining Map.Entry objects");

        throw $r2;
    }

    public final java.lang.String toString()
    {
        android.util.MapCollections$MapIterator r0;
        java.lang.StringBuilder $r2;
        java.lang.Object $r3, $r6;
        java.lang.String $r8;

        r0 := @this: android.util.MapCollections$MapIterator;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke r0.<android.util.MapCollections$MapIterator: java.lang.Object getKey()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        $r6 = virtualinvoke r0.<android.util.MapCollections$MapIterator: java.lang.Object getValue()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r8 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }
}
