abstract class android.util.MapCollections extends java.lang.Object
{
    android.util.MapCollections$EntrySet mEntrySet;
    android.util.MapCollections$KeySet mKeySet;
    android.util.MapCollections$ValuesCollection mValues;

    void <init>()
    {
        android.util.MapCollections r0;

        r0 := @this: android.util.MapCollections;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static boolean containsAllHelper(java.util.Map, java.util.Collection)
    {
        java.util.Map r0;
        boolean $z0, $z1;
        java.lang.Object $r1;
        java.util.Collection r2;
        java.util.Iterator r3;

        r0 := @parameter0: java.util.Map;

        r2 := @parameter1: java.util.Collection;

        r3 = interfaceinvoke r2.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r1 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        $z1 = interfaceinvoke r0.<java.util.Map: boolean containsKey(java.lang.Object)>($r1);

        if $z1 != 0 goto label1;

        return 0;

     label2:
        return 1;
    }

    public static boolean equalsSetHelper(java.util.Set, java.lang.Object)
    {
        boolean z0, $z1, z2;
        int $i0, $i1;
        java.lang.ClassCastException $r0;
        java.lang.NullPointerException $r1;
        java.util.Set r2, r4;
        java.lang.Object r3;

        r2 := @parameter0: java.util.Set;

        r3 := @parameter1: java.lang.Object;

        z2 = 1;

        if r2 != r3 goto label1;

        return 1;

     label1:
        $z1 = r3 instanceof java.util.Set;

        if $z1 == 0 goto label8;

        r4 = (java.util.Set) r3;

     label2:
        $i0 = interfaceinvoke r2.<java.util.Set: int size()>();

        $i1 = interfaceinvoke r4.<java.util.Set: int size()>();

        if $i0 != $i1 goto label4;

        z0 = interfaceinvoke r2.<java.util.Set: boolean containsAll(java.util.Collection)>(r4);

     label3:
        if z0 == 0 goto label4;

        goto label5;

     label4:
        z2 = 0;

     label5:
        return z2;

     label6:
        $r0 := @caughtexception;

        return 0;

     label7:
        $r1 := @caughtexception;

        return 0;

     label8:
        return 0;

        catch java.lang.NullPointerException from label2 to label3 with label7;
        catch java.lang.ClassCastException from label2 to label3 with label6;
    }

    public static boolean removeAllHelper(java.util.Map, java.util.Collection)
    {
        java.util.Map r0;
        int i0, $i1;
        boolean $z0, z1;
        java.lang.Object $r1;
        java.util.Collection r3;
        java.util.Iterator r4;

        r0 := @parameter0: java.util.Map;

        r3 := @parameter1: java.util.Collection;

        i0 = interfaceinvoke r0.<java.util.Map: int size()>();

        r4 = interfaceinvoke r3.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r1 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        interfaceinvoke r0.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r1);

        goto label1;

     label2:
        $i1 = interfaceinvoke r0.<java.util.Map: int size()>();

        if i0 == $i1 goto label3;

        z1 = 1;

        goto label4;

     label3:
        z1 = 0;

     label4:
        return z1;
    }

    public static boolean retainAllHelper(java.util.Map, java.util.Collection)
    {
        java.util.Map r0;
        java.util.Collection r1;
        int i0, $i1;
        java.util.Iterator r2;
        java.util.Set $r3;
        java.lang.Object $r4;
        boolean $z0, $z1, z2;

        r0 := @parameter0: java.util.Map;

        r1 := @parameter1: java.util.Collection;

        i0 = interfaceinvoke r0.<java.util.Map: int size()>();

        $r3 = interfaceinvoke r0.<java.util.Map: java.util.Set keySet()>();

        r2 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label2;

        $r4 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        $z0 = interfaceinvoke r1.<java.util.Collection: boolean contains(java.lang.Object)>($r4);

        if $z0 != 0 goto label1;

        interfaceinvoke r2.<java.util.Iterator: void remove()>();

        goto label1;

     label2:
        $i1 = interfaceinvoke r0.<java.util.Map: int size()>();

        if i0 == $i1 goto label3;

        z2 = 1;

        goto label4;

     label3:
        z2 = 0;

     label4:
        return z2;
    }

    protected abstract void colClear();

    protected abstract java.lang.Object colGetEntry(int, int);

    protected abstract java.util.Map colGetMap();

    protected abstract int colGetSize();

    protected abstract int colIndexOfKey(java.lang.Object);

    protected abstract int colIndexOfValue(java.lang.Object);

    protected abstract void colPut(java.lang.Object, java.lang.Object);

    protected abstract void colRemoveAt(int);

    protected abstract java.lang.Object colSetValue(int, java.lang.Object);

    public java.util.Set getEntrySet()
    {
        android.util.MapCollections r0;
        android.util.MapCollections$EntrySet $r1, $r2, $r3;

        r0 := @this: android.util.MapCollections;

        $r1 = r0.<android.util.MapCollections: android.util.MapCollections$EntrySet mEntrySet>;

        if $r1 != null goto label1;

        $r3 = new android.util.MapCollections$EntrySet;

        specialinvoke $r3.<android.util.MapCollections$EntrySet: void <init>(android.util.MapCollections)>(r0);

        r0.<android.util.MapCollections: android.util.MapCollections$EntrySet mEntrySet> = $r3;

     label1:
        $r2 = r0.<android.util.MapCollections: android.util.MapCollections$EntrySet mEntrySet>;

        return $r2;
    }

    public java.util.Set getKeySet()
    {
        android.util.MapCollections r0;
        android.util.MapCollections$KeySet $r1, $r2, $r3;

        r0 := @this: android.util.MapCollections;

        $r1 = r0.<android.util.MapCollections: android.util.MapCollections$KeySet mKeySet>;

        if $r1 != null goto label1;

        $r3 = new android.util.MapCollections$KeySet;

        specialinvoke $r3.<android.util.MapCollections$KeySet: void <init>(android.util.MapCollections)>(r0);

        r0.<android.util.MapCollections: android.util.MapCollections$KeySet mKeySet> = $r3;

     label1:
        $r2 = r0.<android.util.MapCollections: android.util.MapCollections$KeySet mKeySet>;

        return $r2;
    }

    public java.util.Collection getValues()
    {
        android.util.MapCollections r0;
        android.util.MapCollections$ValuesCollection $r1, $r2, $r3;

        r0 := @this: android.util.MapCollections;

        $r1 = r0.<android.util.MapCollections: android.util.MapCollections$ValuesCollection mValues>;

        if $r1 != null goto label1;

        $r3 = new android.util.MapCollections$ValuesCollection;

        specialinvoke $r3.<android.util.MapCollections$ValuesCollection: void <init>(android.util.MapCollections)>(r0);

        r0.<android.util.MapCollections: android.util.MapCollections$ValuesCollection mValues> = $r3;

     label1:
        $r2 = r0.<android.util.MapCollections: android.util.MapCollections$ValuesCollection mValues>;

        return $r2;
    }

    public java.lang.Object[] toArrayHelper(int)
    {
        android.util.MapCollections r0;
        int i0, i1, i2;
        java.lang.Object[] r1;
        java.lang.Object $r2;

        r0 := @this: android.util.MapCollections;

        i0 := @parameter0: int;

        i1 = virtualinvoke r0.<android.util.MapCollections: int colGetSize()>();

        r1 = newarray (java.lang.Object)[i1];

        i2 = 0;

     label1:
        if i2 >= i1 goto label2;

        $r2 = virtualinvoke r0.<android.util.MapCollections: java.lang.Object colGetEntry(int,int)>(i2, i0);

        r1[i2] = $r2;

        i2 = i2 + 1;

        goto label1;

     label2:
        return r1;
    }

    public java.lang.Object[] toArrayHelper(java.lang.Object[], int)
    {
        android.util.MapCollections r0;
        java.lang.Object[] r1, r6;
        int i0, i1, $i2, $i3, i4;
        java.lang.Object $r2, $r5;
        java.lang.Class $r3, $r4;

        r0 := @this: android.util.MapCollections;

        r1 := @parameter0: java.lang.Object[];

        i0 := @parameter1: int;

        i1 = virtualinvoke r0.<android.util.MapCollections: int colGetSize()>();

        r6 = r1;

        $i2 = lengthof r1;

        if $i2 >= i1 goto label1;

        $r3 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Class getComponentType()>();

        $r5 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>($r4, i1);

        r6 = (java.lang.Object[]) $r5;

     label1:
        i4 = 0;

     label2:
        if i4 >= i1 goto label3;

        $r2 = virtualinvoke r0.<android.util.MapCollections: java.lang.Object colGetEntry(int,int)>(i4, i0);

        r6[i4] = $r2;

        i4 = i4 + 1;

        goto label2;

     label3:
        $i3 = lengthof r6;

        if $i3 <= i1 goto label4;

        r6[i1] = null;

     label4:
        return r6;
    }
}
