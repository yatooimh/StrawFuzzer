public class android.util.NtpTrustedTime extends java.lang.Object implements android.util.TrustedTime
{
    private static final boolean LOGD;
    private static final java.lang.String TAG;
    private static android.util.NtpTrustedTime sSingleton;
    private final java.util.function.Supplier mConnectivityManagerSupplier;
    private final android.content.Context mContext;
    private volatile android.util.NtpTrustedTime$TimeResult mTimeResult;

    private void <init>(android.content.Context)
    {
        android.util.NtpTrustedTime r0;
        android.content.Context r1, $r4;
        android.util.NtpTrustedTime$1 $r2;

        r0 := @this: android.util.NtpTrustedTime;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new android.util.NtpTrustedTime$1;

        specialinvoke $r2.<android.util.NtpTrustedTime$1: void <init>(android.util.NtpTrustedTime)>(r0);

        r0.<android.util.NtpTrustedTime: java.util.function.Supplier mConnectivityManagerSupplier> = $r2;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r1);

        $r4 = (android.content.Context) r1;

        r0.<android.util.NtpTrustedTime: android.content.Context mContext> = $r4;

        return;
    }

    static android.content.Context access$000(android.util.NtpTrustedTime)
    {
        android.util.NtpTrustedTime r0;
        android.content.Context $r1;

        r0 := @parameter0: android.util.NtpTrustedTime;

        $r1 = r0.<android.util.NtpTrustedTime: android.content.Context mContext>;

        return $r1;
    }

    public static android.util.NtpTrustedTime getInstance(android.content.Context)
    {
        android.content.Context r0, r3;
        android.util.NtpTrustedTime $r1, r4, r5;
        java.lang.Throwable $r2;

        r3 := @parameter0: android.content.Context;

        entermonitor class "Landroid/util/NtpTrustedTime;";

     label1:
        $r1 = <android.util.NtpTrustedTime: android.util.NtpTrustedTime sSingleton>;

        if $r1 != null goto label2;

        r0 = virtualinvoke r3.<android.content.Context: android.content.Context getApplicationContext()>();

        r4 = new android.util.NtpTrustedTime;

        specialinvoke r4.<android.util.NtpTrustedTime: void <init>(android.content.Context)>(r0);

        <android.util.NtpTrustedTime: android.util.NtpTrustedTime sSingleton> = r4;

     label2:
        r5 = <android.util.NtpTrustedTime: android.util.NtpTrustedTime sSingleton>;

     label3:
        exitmonitor class "Landroid/util/NtpTrustedTime;";

        return r5;

     label4:
        $r2 := @caughtexception;

        exitmonitor class "Landroid/util/NtpTrustedTime;";

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
    }

    private android.util.NtpTrustedTime$NtpConnectionInfo getNtpConnectionInfo()
    {
        android.util.NtpTrustedTime r0;
        android.content.ContentResolver r1;
        android.content.Context $r2, $r3;
        boolean $z0;
        android.util.NtpTrustedTime$NtpConnectionInfo $r4, r8;
        android.content.res.Resources r5;
        java.lang.String r6, r7;
        int i0, i1;

        r0 := @this: android.util.NtpTrustedTime;

        $r2 = r0.<android.util.NtpTrustedTime: android.content.Context mContext>;

        r1 = virtualinvoke $r2.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r3 = r0.<android.util.NtpTrustedTime: android.content.Context mContext>;

        r5 = virtualinvoke $r3.<android.content.Context: android.content.res.Resources getResources()>();

        r6 = virtualinvoke r5.<android.content.res.Resources: java.lang.String getString(int)>(17039924);

        i0 = virtualinvoke r5.<android.content.res.Resources: int getInteger(int)>(17694874);

        r7 = staticinvoke <android.provider.Settings$Global: java.lang.String getString(android.content.ContentResolver,java.lang.String)>(r1, "ntp_server");

        i1 = staticinvoke <android.provider.Settings$Global: int getInt(android.content.ContentResolver,java.lang.String,int)>(r1, "ntp_timeout", i0);

        if r7 == null goto label1;

        r6 = r7;

        goto label1;

     label1:
        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r6);

        if $z0 == 0 goto label2;

        r8 = null;

        goto label3;

     label2:
        $r4 = new android.util.NtpTrustedTime$NtpConnectionInfo;

        specialinvoke $r4.<android.util.NtpTrustedTime$NtpConnectionInfo: void <init>(java.lang.String,int)>(r6, i1);

        r8 = $r4;

     label3:
        return r8;
    }

    public long currentTimeMillis()
    {
        android.util.NtpTrustedTime r0;
        android.util.NtpTrustedTime$TimeResult r1;
        java.lang.IllegalStateException $r2;
        long $l0;

        r0 := @this: android.util.NtpTrustedTime;

        r1 = r0.<android.util.NtpTrustedTime: android.util.NtpTrustedTime$TimeResult mTimeResult>;

        if r1 == null goto label1;

        $l0 = virtualinvoke r1.<android.util.NtpTrustedTime$TimeResult: long currentTimeMillis()>();

        return $l0;

     label1:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Missing authoritative time source");

        throw $r2;
    }

    public boolean forceRefresh()
    {
        android.util.NtpTrustedTime r0;
        android.util.NtpTrustedTime$NtpConnectionInfo r1;
        long l0, $l2, $l3, $l4;
        java.util.function.Supplier $r2;
        java.lang.Object $r3;
        boolean $z0, $z1;
        java.lang.String $r4;
        int $i1;
        java.lang.Throwable $r5;
        android.net.ConnectivityManager r6;
        android.net.Network r7;
        android.net.NetworkInfo r8;
        android.net.SntpClient r9;
        android.util.NtpTrustedTime$TimeResult r10;

        r0 := @this: android.util.NtpTrustedTime;

        entermonitor r0;

     label01:
        r1 = specialinvoke r0.<android.util.NtpTrustedTime: android.util.NtpTrustedTime$NtpConnectionInfo getNtpConnectionInfo()>();

     label02:
        if r1 != null goto label05;

     label03:
        exitmonitor r0;

     label04:
        return 0;

     label05:
        $r2 = r0.<android.util.NtpTrustedTime: java.util.function.Supplier mConnectivityManagerSupplier>;

        $r3 = interfaceinvoke $r2.<java.util.function.Supplier: java.lang.Object get()>();

        r6 = (android.net.ConnectivityManager) $r3;

     label06:
        if r6 != null goto label09;

     label07:
        exitmonitor r0;

     label08:
        return 0;

     label09:
        r7 = virtualinvoke r6.<android.net.ConnectivityManager: android.net.Network getActiveNetwork()>();

        r8 = virtualinvoke r6.<android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(android.net.Network)>(r7);

     label10:
        if r8 == null goto label17;

     label11:
        $z0 = virtualinvoke r8.<android.net.NetworkInfo: boolean isConnected()>();

        if $z0 != 0 goto label13;

     label12:
        goto label17;

     label13:
        r9 = new android.net.SntpClient;

        specialinvoke r9.<android.net.SntpClient: void <init>()>();

        $r4 = virtualinvoke r1.<android.util.NtpTrustedTime$NtpConnectionInfo: java.lang.String getServer()>();

        $i1 = virtualinvoke r1.<android.util.NtpTrustedTime$NtpConnectionInfo: int getTimeoutMillis()>();

        $z1 = virtualinvoke r9.<android.net.SntpClient: boolean requestTime(java.lang.String,int,android.net.Network)>($r4, $i1, r7);

        if $z1 == 0 goto label15;

        $l2 = virtualinvoke r9.<android.net.SntpClient: long getRoundTripTime()>();

        l0 = $l2 / 2L;

        r10 = new android.util.NtpTrustedTime$TimeResult;

        $l3 = virtualinvoke r9.<android.net.SntpClient: long getNtpTime()>();

        $l4 = virtualinvoke r9.<android.net.SntpClient: long getNtpTimeReference()>();

        specialinvoke r10.<android.util.NtpTrustedTime$TimeResult: void <init>(long,long,long)>($l3, $l4, l0);

        r0.<android.util.NtpTrustedTime: android.util.NtpTrustedTime$TimeResult mTimeResult> = r10;

        exitmonitor r0;

     label14:
        return 1;

     label15:
        exitmonitor r0;

     label16:
        return 0;

     label17:
        exitmonitor r0;

     label18:
        return 0;

     label19:
        $r5 := @caughtexception;

     label20:
        exitmonitor r0;

     label21:
        throw $r5;

        catch java.lang.Throwable from label01 to label02 with label19;
        catch java.lang.Throwable from label03 to label04 with label19;
        catch java.lang.Throwable from label05 to label06 with label19;
        catch java.lang.Throwable from label07 to label08 with label19;
        catch java.lang.Throwable from label09 to label10 with label19;
        catch java.lang.Throwable from label11 to label12 with label19;
        catch java.lang.Throwable from label13 to label14 with label19;
        catch java.lang.Throwable from label15 to label16 with label19;
        catch java.lang.Throwable from label17 to label18 with label19;
        catch java.lang.Throwable from label20 to label21 with label19;
    }

    public long getCacheAge()
    {
        android.util.NtpTrustedTime r0;
        android.util.NtpTrustedTime$TimeResult r1;
        long $l0, $l1, $l2;

        r0 := @this: android.util.NtpTrustedTime;

        r1 = r0.<android.util.NtpTrustedTime: android.util.NtpTrustedTime$TimeResult mTimeResult>;

        if r1 == null goto label1;

        $l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l1 = virtualinvoke r1.<android.util.NtpTrustedTime$TimeResult: long getElapsedRealtimeMillis()>();

        $l2 = $l0 - $l1;

        return $l2;

     label1:
        return 9223372036854775807L;
    }

    public long getCachedNtpTime()
    {
        android.util.NtpTrustedTime r0;
        android.util.NtpTrustedTime$TimeResult r1;
        long l0;

        r0 := @this: android.util.NtpTrustedTime;

        r1 = r0.<android.util.NtpTrustedTime: android.util.NtpTrustedTime$TimeResult mTimeResult>;

        if r1 != null goto label1;

        l0 = 0L;

        goto label2;

     label1:
        l0 = virtualinvoke r1.<android.util.NtpTrustedTime$TimeResult: long getTimeMillis()>();

     label2:
        return l0;
    }

    public long getCachedNtpTimeReference()
    {
        android.util.NtpTrustedTime r0;
        android.util.NtpTrustedTime$TimeResult r1;
        long l0;

        r0 := @this: android.util.NtpTrustedTime;

        r1 = r0.<android.util.NtpTrustedTime: android.util.NtpTrustedTime$TimeResult mTimeResult>;

        if r1 != null goto label1;

        l0 = 0L;

        goto label2;

     label1:
        l0 = virtualinvoke r1.<android.util.NtpTrustedTime$TimeResult: long getElapsedRealtimeMillis()>();

     label2:
        return l0;
    }

    public android.util.NtpTrustedTime$TimeResult getCachedTimeResult()
    {
        android.util.NtpTrustedTime r0;
        android.util.NtpTrustedTime$TimeResult $r1;

        r0 := @this: android.util.NtpTrustedTime;

        $r1 = r0.<android.util.NtpTrustedTime: android.util.NtpTrustedTime$TimeResult mTimeResult>;

        return $r1;
    }

    public boolean hasCache()
    {
        android.util.NtpTrustedTime r0;
        android.util.NtpTrustedTime$TimeResult $r1;
        boolean z0;

        r0 := @this: android.util.NtpTrustedTime;

        $r1 = r0.<android.util.NtpTrustedTime: android.util.NtpTrustedTime$TimeResult mTimeResult>;

        if $r1 == null goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public static void <clinit>()
    {
        <android.util.NtpTrustedTime: java.lang.String TAG> = "NtpTrustedTime";

        <android.util.NtpTrustedTime: boolean LOGD> = 0;

        return;
    }
}
