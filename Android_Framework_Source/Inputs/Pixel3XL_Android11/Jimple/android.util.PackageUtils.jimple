public final class android.util.PackageUtils extends java.lang.Object
{

    private void <init>()
    {
        android.util.PackageUtils r0;

        r0 := @this: android.util.PackageUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String computeSha256Digest(byte[])
    {
        java.lang.String $r0;
        byte[] r1, r2;

        r1 := @parameter0: byte[];

        r2 = staticinvoke <android.util.PackageUtils: byte[] computeSha256DigestBytes(byte[])>(r1);

        if r2 != null goto label1;

        return null;

     label1:
        $r0 = staticinvoke <libcore.util.HexEncoding: java.lang.String encodeToString(byte[],boolean)>(r2, 1);

        return $r0;
    }

    public static byte[] computeSha256DigestBytes(byte[])
    {
        java.security.MessageDigest r0;
        byte[] $r1, r3;
        java.lang.Throwable $r2;

        r3 := @parameter0: byte[];

     label1:
        r0 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>("SHA256");

     label2:
        virtualinvoke r0.<java.security.MessageDigest: void update(byte[])>(r3);

        $r1 = virtualinvoke r0.<java.security.MessageDigest: byte[] digest()>();

        return $r1;

     label3:
        $r2 := @caughtexception;

        return null;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label3;
    }

    public static java.lang.String computeSignaturesSha256Digest(android.content.pm.Signature[])
    {
        android.content.pm.Signature[] r0;
        int $i0;
        java.lang.String[] $r1;
        java.lang.String $r2, $r5;
        android.content.pm.Signature $r3;
        byte[] $r4;

        r0 := @parameter0: android.content.pm.Signature[];

        $i0 = lengthof r0;

        if $i0 != 1 goto label1;

        $r3 = r0[0];

        $r4 = virtualinvoke $r3.<android.content.pm.Signature: byte[] toByteArray()>();

        $r5 = staticinvoke <android.util.PackageUtils: java.lang.String computeSha256Digest(byte[])>($r4);

        return $r5;

     label1:
        $r1 = staticinvoke <android.util.PackageUtils: java.lang.String[] computeSignaturesSha256Digests(android.content.pm.Signature[])>(r0);

        $r2 = staticinvoke <android.util.PackageUtils: java.lang.String computeSignaturesSha256Digest(java.lang.String[])>($r1);

        return $r2;
    }

    public static java.lang.String computeSignaturesSha256Digest(java.lang.String[])
    {
        java.lang.String[] r0;
        java.io.ByteArrayOutputStream $r2;
        byte[] $r3, $r5;
        java.lang.String $r4, $r6, r8;
        java.lang.Throwable $r7;
        int i0, i1, i2;

        r0 := @parameter0: java.lang.String[];

        i0 = lengthof r0;

        i1 = 0;

        if i0 != 1 goto label1;

        $r6 = r0[0];

        return $r6;

     label1:
        staticinvoke <java.util.Arrays: void sort(java.lang.Object[])>(r0);

        $r2 = new java.io.ByteArrayOutputStream;

        specialinvoke $r2.<java.io.ByteArrayOutputStream: void <init>()>();

        i2 = lengthof r0;

     label2:
        if i1 >= i2 goto label7;

        r8 = r0[i1];

     label3:
        $r5 = virtualinvoke r8.<java.lang.String: byte[] getBytes()>();

        virtualinvoke $r2.<java.io.ByteArrayOutputStream: void write(byte[])>($r5);

     label4:
        goto label6;

     label5:
        $r7 := @caughtexception;

     label6:
        i1 = i1 + 1;

        goto label2;

     label7:
        $r3 = virtualinvoke $r2.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        $r4 = staticinvoke <android.util.PackageUtils: java.lang.String computeSha256Digest(byte[])>($r3);

        return $r4;

        catch java.io.IOException from label3 to label4 with label5;
    }

    public static java.lang.String[] computeSignaturesSha256Digests(android.content.pm.Signature[])
    {
        android.content.pm.Signature[] r0;
        int i0, i1;
        java.lang.String[] r1;
        android.content.pm.Signature $r2;
        byte[] $r3;
        java.lang.String $r4;

        r0 := @parameter0: android.content.pm.Signature[];

        i0 = lengthof r0;

        r1 = newarray (java.lang.String)[i0];

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r2 = r0[i1];

        $r3 = virtualinvoke $r2.<android.content.pm.Signature: byte[] toByteArray()>();

        $r4 = staticinvoke <android.util.PackageUtils: java.lang.String computeSha256Digest(byte[])>($r3);

        r1[i1] = $r4;

        i1 = i1 + 1;

        goto label1;

     label2:
        return r1;
    }
}
