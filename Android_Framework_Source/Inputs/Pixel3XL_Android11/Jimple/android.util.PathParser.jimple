public class android.util.PathParser extends java.lang.Object
{
    static final java.lang.String LOGTAG;

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;

        $r0 = class "Landroid/util/PathParser;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getSimpleName()>();

        <android.util.PathParser: java.lang.String LOGTAG> = $r1;

        return;
    }

    public void <init>()
    {
        android.util.PathParser r0;

        r0 := @this: android.util.PathParser;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static long access$000()
    {
        long $l0;

        $l0 = staticinvoke <android.util.PathParser: long nCreateEmptyPathData()>();

        return $l0;
    }

    static long access$100(long)
    {
        long l0, $l1;

        l0 := @parameter0: long;

        $l1 = staticinvoke <android.util.PathParser: long nCreatePathData(long)>(l0);

        return $l1;
    }

    static long access$200(java.lang.String, int)
    {
        java.lang.String r0;
        int i0;
        long $l1;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $l1 = staticinvoke <android.util.PathParser: long nCreatePathDataFromString(java.lang.String,int)>(r0, i0);

        return $l1;
    }

    static void access$300(long, long)
    {
        long l0, l1;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        staticinvoke <android.util.PathParser: void nSetPathData(long,long)>(l0, l1);

        return;
    }

    static void access$400(long)
    {
        long l0;

        l0 := @parameter0: long;

        staticinvoke <android.util.PathParser: void nFinalize(long)>(l0);

        return;
    }

    public static boolean canMorph(android.util.PathParser$PathData, android.util.PathParser$PathData)
    {
        android.util.PathParser$PathData r0, r1;
        long $l0, $l1;
        boolean $z0;

        r0 := @parameter0: android.util.PathParser$PathData;

        r1 := @parameter1: android.util.PathParser$PathData;

        $l1 = r0.<android.util.PathParser$PathData: long mNativePathData>;

        $l0 = r1.<android.util.PathParser$PathData: long mNativePathData>;

        $z0 = staticinvoke <android.util.PathParser: boolean nCanMorph(long,long)>($l1, $l0);

        return $z0;
    }

    public static android.graphics.Path createPathFromPathData(java.lang.String)
    {
        java.lang.String r0;
        java.lang.IllegalArgumentException $r2;
        android.graphics.Path $r3;
        long $l0;
        int $i1;

        r0 := @parameter0: java.lang.String;

        if r0 == null goto label1;

        $r3 = new android.graphics.Path;

        specialinvoke $r3.<android.graphics.Path: void <init>()>();

        $l0 = $r3.<android.graphics.Path: long mNativePath>;

        $i1 = virtualinvoke r0.<java.lang.String: int length()>();

        staticinvoke <android.util.PathParser: void nParseStringForPath(long,java.lang.String,int)>($l0, r0, $i1);

        return $r3;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Path string can not be null.");

        throw $r2;
    }

    public static void createPathFromPathData(android.graphics.Path, android.util.PathParser$PathData)
    {
        android.graphics.Path r0;
        android.util.PathParser$PathData r1;
        long $l0, $l1;

        r0 := @parameter0: android.graphics.Path;

        r1 := @parameter1: android.util.PathParser$PathData;

        $l1 = r0.<android.graphics.Path: long mNativePath>;

        $l0 = r1.<android.util.PathParser$PathData: long mNativePathData>;

        staticinvoke <android.util.PathParser: void nCreatePathFromPathData(long,long)>($l1, $l0);

        return;
    }

    public static boolean interpolatePathData(android.util.PathParser$PathData, android.util.PathParser$PathData, android.util.PathParser$PathData, float)
    {
        android.util.PathParser$PathData r0, r1, r2;
        float f0;
        long $l0, $l1, $l2;
        boolean $z0;

        r0 := @parameter0: android.util.PathParser$PathData;

        r1 := @parameter1: android.util.PathParser$PathData;

        r2 := @parameter2: android.util.PathParser$PathData;

        f0 := @parameter3: float;

        $l2 = r0.<android.util.PathParser$PathData: long mNativePathData>;

        $l1 = r1.<android.util.PathParser$PathData: long mNativePathData>;

        $l0 = r2.<android.util.PathParser$PathData: long mNativePathData>;

        $z0 = staticinvoke <android.util.PathParser: boolean nInterpolatePathData(long,long,long,float)>($l2, $l1, $l0, f0);

        return $z0;
    }

    private static native boolean nCanMorph(long, long);

    private static native long nCreateEmptyPathData();

    private static native long nCreatePathData(long);

    private static native long nCreatePathDataFromString(java.lang.String, int);

    private static native void nCreatePathFromPathData(long, long);

    private static native void nFinalize(long);

    private static native boolean nInterpolatePathData(long, long, long, float);

    private static native void nParseStringForPath(long, java.lang.String, int);

    private static native void nSetPathData(long, long);
}
