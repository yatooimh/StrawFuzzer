public class android.util.Pools$SynchronizedPool extends android.util.Pools$SimplePool
{
    private final java.lang.Object mLock;

    public void <init>(int)
    {
        android.util.Pools$SynchronizedPool r0;
        int i0;
        java.lang.Object $r1;

        r0 := @this: android.util.Pools$SynchronizedPool;

        i0 := @parameter0: int;

        $r1 = new java.lang.Object;

        specialinvoke $r1.<java.lang.Object: void <init>()>();

        specialinvoke r0.<android.util.Pools$SynchronizedPool: void <init>(int,java.lang.Object)>(i0, $r1);

        return;
    }

    public void <init>(int, java.lang.Object)
    {
        android.util.Pools$SynchronizedPool r0;
        int i0;
        java.lang.Object r1;

        r0 := @this: android.util.Pools$SynchronizedPool;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        specialinvoke r0.<android.util.Pools$SimplePool: void <init>(int)>(i0);

        r0.<android.util.Pools$SynchronizedPool: java.lang.Object mLock> = r1;

        return;
    }

    public java.lang.Object acquire()
    {
        android.util.Pools$SynchronizedPool r0;
        java.lang.Object r1, r3;
        java.lang.Throwable $r2;

        r0 := @this: android.util.Pools$SynchronizedPool;

        r1 = r0.<android.util.Pools$SynchronizedPool: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        r3 = specialinvoke r0.<android.util.Pools$SimplePool: java.lang.Object acquire()>();

        exitmonitor r1;

     label2:
        return r3;

     label3:
        $r2 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public boolean release(java.lang.Object)
    {
        android.util.Pools$SynchronizedPool r0;
        java.lang.Object r1, r3;
        boolean z0;
        java.lang.Throwable $r2;

        r0 := @this: android.util.Pools$SynchronizedPool;

        r3 := @parameter0: java.lang.Object;

        r1 = r0.<android.util.Pools$SynchronizedPool: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        z0 = specialinvoke r0.<android.util.Pools$SimplePool: boolean release(java.lang.Object)>(r3);

        exitmonitor r1;

     label2:
        return z0;

     label3:
        $r2 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }
}
