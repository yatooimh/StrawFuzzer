public class android.util.SparseArray extends java.lang.Object implements java.lang.Cloneable
{
    private static final java.lang.Object DELETED;
    private boolean mGarbage;
    private int[] mKeys;
    private int mSize;
    private java.lang.Object[] mValues;

    static void <clinit>()
    {
        java.lang.Object $r0;

        $r0 = new java.lang.Object;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        <android.util.SparseArray: java.lang.Object DELETED> = $r0;

        return;
    }

    public void <init>()
    {
        android.util.SparseArray r0;

        r0 := @this: android.util.SparseArray;

        specialinvoke r0.<android.util.SparseArray: void <init>(int)>(10);

        return;
    }

    public void <init>(int)
    {
        android.util.SparseArray r0;
        int i0, $i1;
        java.lang.Object[] r1, $r4;
        int[] $r2, $r3;

        r0 := @this: android.util.SparseArray;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.util.SparseArray: boolean mGarbage> = 0;

        if i0 != 0 goto label1;

        $r3 = <libcore.util.EmptyArray: int[] INT>;

        r0.<android.util.SparseArray: int[] mKeys> = $r3;

        $r4 = <libcore.util.EmptyArray: java.lang.Object[] OBJECT>;

        r0.<android.util.SparseArray: java.lang.Object[] mValues> = $r4;

        goto label2;

     label1:
        r1 = staticinvoke <com.android.internal.util.ArrayUtils: java.lang.Object[] newUnpaddedObjectArray(int)>(i0);

        r0.<android.util.SparseArray: java.lang.Object[] mValues> = r1;

        $i1 = lengthof r1;

        $r2 = newarray (int)[$i1];

        r0.<android.util.SparseArray: int[] mKeys> = $r2;

     label2:
        r0.<android.util.SparseArray: int mSize> = 0;

        return;
    }

    private void gc()
    {
        android.util.SparseArray r0;
        int i0, $i1, i2, i3, i4;
        int[] r1;
        java.lang.Object[] r2;
        java.lang.Object r3, $r4;

        r0 := @this: android.util.SparseArray;

        i0 = r0.<android.util.SparseArray: int mSize>;

        i2 = 0;

        r1 = r0.<android.util.SparseArray: int[] mKeys>;

        r2 = r0.<android.util.SparseArray: java.lang.Object[] mValues>;

        i3 = 0;

     label1:
        if i3 >= i0 goto label4;

        r3 = r2[i3];

        i4 = i2;

        $r4 = <android.util.SparseArray: java.lang.Object DELETED>;

        if r3 == $r4 goto label3;

        if i3 == i2 goto label2;

        $i1 = r1[i3];

        r1[i2] = $i1;

        r2[i2] = r3;

        r2[i3] = null;

     label2:
        i4 = i2 + 1;

     label3:
        i3 = i3 + 1;

        i2 = i4;

        goto label1;

     label4:
        r0.<android.util.SparseArray: boolean mGarbage> = 0;

        r0.<android.util.SparseArray: int mSize> = i2;

        return;
    }

    public void append(int, java.lang.Object)
    {
        android.util.SparseArray r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        java.lang.Object r1;
        boolean $z0;
        int[] $r2, $r3, $r4, $r5;
        java.lang.Object[] $r6, $r7;

        r0 := @this: android.util.SparseArray;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        i1 = r0.<android.util.SparseArray: int mSize>;

        if i1 == 0 goto label1;

        $r3 = r0.<android.util.SparseArray: int[] mKeys>;

        $i4 = i1 - 1;

        $i5 = $r3[$i4];

        if i0 > $i5 goto label1;

        virtualinvoke r0.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, r1);

        return;

     label1:
        $z0 = r0.<android.util.SparseArray: boolean mGarbage>;

        if $z0 == 0 goto label2;

        $i3 = r0.<android.util.SparseArray: int mSize>;

        $r2 = r0.<android.util.SparseArray: int[] mKeys>;

        $i2 = lengthof $r2;

        if $i3 < $i2 goto label2;

        specialinvoke r0.<android.util.SparseArray: void gc()>();

     label2:
        $r4 = r0.<android.util.SparseArray: int[] mKeys>;

        $i6 = r0.<android.util.SparseArray: int mSize>;

        $r5 = staticinvoke <com.android.internal.util.GrowingArrayUtils: int[] append(int[],int,int)>($r4, $i6, i0);

        r0.<android.util.SparseArray: int[] mKeys> = $r5;

        $r6 = r0.<android.util.SparseArray: java.lang.Object[] mValues>;

        $i7 = r0.<android.util.SparseArray: int mSize>;

        $r7 = staticinvoke <com.android.internal.util.GrowingArrayUtils: java.lang.Object[] append(java.lang.Object[],int,java.lang.Object)>($r6, $i7, r1);

        r0.<android.util.SparseArray: java.lang.Object[] mValues> = $r7;

        $i8 = r0.<android.util.SparseArray: int mSize>;

        $i9 = $i8 + 1;

        r0.<android.util.SparseArray: int mSize> = $i9;

        return;
    }

    public void clear()
    {
        android.util.SparseArray r0;
        int i0, i1;
        java.lang.Object[] r1;

        r0 := @this: android.util.SparseArray;

        i0 = r0.<android.util.SparseArray: int mSize>;

        r1 = r0.<android.util.SparseArray: java.lang.Object[] mValues>;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r1[i1] = null;

        i1 = i1 + 1;

        goto label1;

     label2:
        r0.<android.util.SparseArray: int mSize> = 0;

        r0.<android.util.SparseArray: boolean mGarbage> = 0;

        return;
    }

    public android.util.SparseArray clone()
    {
        android.util.SparseArray r0, r9, r10;
        java.lang.Object $r1, $r3, $r6;
        int[] $r2, $r4;
        java.lang.Object[] $r5, $r7;
        java.lang.Throwable $r8;

        r0 := @this: android.util.SparseArray;

        r9 = null;

     label1:
        $r1 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>();

        r10 = (android.util.SparseArray) $r1;

     label2:
        r9 = r10;

     label3:
        $r2 = r0.<android.util.SparseArray: int[] mKeys>;

        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.Object clone()>();

        $r4 = (int[]) $r3;

        r10.<android.util.SparseArray: int[] mKeys> = $r4;

     label4:
        r9 = r10;

     label5:
        $r5 = r0.<android.util.SparseArray: java.lang.Object[] mValues>;

        $r6 = virtualinvoke $r5.<java.lang.Object: java.lang.Object clone()>();

        $r7 = (java.lang.Object[]) $r6;

        r10.<android.util.SparseArray: java.lang.Object[] mValues> = $r7;

     label6:
        r9 = r10;

        goto label8;

     label7:
        $r8 := @caughtexception;

     label8:
        return r9;

        catch java.lang.CloneNotSupportedException from label1 to label2 with label7;
        catch java.lang.CloneNotSupportedException from label3 to label4 with label7;
        catch java.lang.CloneNotSupportedException from label5 to label6 with label7;
    }

    public volatile java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        android.util.SparseArray r0, $r1;

        r0 := @this: android.util.SparseArray;

        $r1 = virtualinvoke r0.<android.util.SparseArray: android.util.SparseArray clone()>();

        return $r1;
    }

    public boolean contains(int)
    {
        android.util.SparseArray r0;
        int i0, $i1;
        boolean z0;

        r0 := @this: android.util.SparseArray;

        i0 := @parameter0: int;

        $i1 = virtualinvoke r0.<android.util.SparseArray: int indexOfKey(int)>(i0);

        if $i1 < 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public void delete(int)
    {
        android.util.SparseArray r0;
        java.lang.Object[] r1;
        java.lang.Object r2, r3;
        int $i0, i1, i2;
        int[] $r4;

        r0 := @this: android.util.SparseArray;

        i1 := @parameter0: int;

        $r4 = r0.<android.util.SparseArray: int[] mKeys>;

        $i0 = r0.<android.util.SparseArray: int mSize>;

        i2 = staticinvoke <android.util.ContainerHelpers: int binarySearch(int[],int,int)>($r4, $i0, i1);

        if i2 < 0 goto label1;

        r1 = r0.<android.util.SparseArray: java.lang.Object[] mValues>;

        r2 = r1[i2];

        r3 = <android.util.SparseArray: java.lang.Object DELETED>;

        if r2 == r3 goto label1;

        r1[i2] = r3;

        r0.<android.util.SparseArray: boolean mGarbage> = 1;

     label1:
        return;
    }

    public java.lang.Object get(int)
    {
        android.util.SparseArray r0;
        int i0;
        java.lang.Object $r1;

        r0 := @this: android.util.SparseArray;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<android.util.SparseArray: java.lang.Object get(int,java.lang.Object)>(i0, null);

        return $r1;
    }

    public java.lang.Object get(int, java.lang.Object)
    {
        android.util.SparseArray r0;
        java.lang.Object r1, $r4, $r5, $r6;
        java.lang.Object[] r2;
        int $i0, i1, i2;
        int[] $r3;

        r0 := @this: android.util.SparseArray;

        i1 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        $r3 = r0.<android.util.SparseArray: int[] mKeys>;

        $i0 = r0.<android.util.SparseArray: int mSize>;

        i2 = staticinvoke <android.util.ContainerHelpers: int binarySearch(int[],int,int)>($r3, $i0, i1);

        if i2 < 0 goto label2;

        r2 = r0.<android.util.SparseArray: java.lang.Object[] mValues>;

        $r5 = r2[i2];

        $r4 = <android.util.SparseArray: java.lang.Object DELETED>;

        if $r5 != $r4 goto label1;

        goto label2;

     label1:
        $r6 = r2[i2];

        return $r6;

     label2:
        return r1;
    }

    public int indexOfKey(int)
    {
        android.util.SparseArray r0;
        int i0, $i1, $i2;
        boolean $z0;
        int[] $r1;

        r0 := @this: android.util.SparseArray;

        i0 := @parameter0: int;

        $z0 = r0.<android.util.SparseArray: boolean mGarbage>;

        if $z0 == 0 goto label1;

        specialinvoke r0.<android.util.SparseArray: void gc()>();

     label1:
        $r1 = r0.<android.util.SparseArray: int[] mKeys>;

        $i1 = r0.<android.util.SparseArray: int mSize>;

        $i2 = staticinvoke <android.util.ContainerHelpers: int binarySearch(int[],int,int)>($r1, $i1, i0);

        return $i2;
    }

    public int indexOfValue(java.lang.Object)
    {
        android.util.SparseArray r0;
        java.lang.Object r1, $r3;
        boolean $z0;
        java.lang.Object[] $r2;
        int i0, $i1;

        r0 := @this: android.util.SparseArray;

        r1 := @parameter0: java.lang.Object;

        $z0 = r0.<android.util.SparseArray: boolean mGarbage>;

        if $z0 == 0 goto label1;

        specialinvoke r0.<android.util.SparseArray: void gc()>();

     label1:
        i0 = 0;

     label2:
        $i1 = r0.<android.util.SparseArray: int mSize>;

        if i0 >= $i1 goto label4;

        $r2 = r0.<android.util.SparseArray: java.lang.Object[] mValues>;

        $r3 = $r2[i0];

        if $r3 != r1 goto label3;

        return i0;

     label3:
        i0 = i0 + 1;

        goto label2;

     label4:
        return -1;
    }

    public int indexOfValueByValue(java.lang.Object)
    {
        android.util.SparseArray r0;
        java.lang.Object r1, $r3, $r5;
        boolean $z0, $z1;
        java.lang.Object[] $r2, $r4;
        int i0, $i1;

        r0 := @this: android.util.SparseArray;

        r1 := @parameter0: java.lang.Object;

        $z0 = r0.<android.util.SparseArray: boolean mGarbage>;

        if $z0 == 0 goto label1;

        specialinvoke r0.<android.util.SparseArray: void gc()>();

     label1:
        i0 = 0;

     label2:
        $i1 = r0.<android.util.SparseArray: int mSize>;

        if i0 >= $i1 goto label5;

        if r1 != null goto label3;

        $r4 = r0.<android.util.SparseArray: java.lang.Object[] mValues>;

        $r5 = $r4[i0];

        if $r5 != null goto label4;

        return i0;

     label3:
        $r2 = r0.<android.util.SparseArray: java.lang.Object[] mValues>;

        $r3 = $r2[i0];

        $z1 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>($r3);

        if $z1 == 0 goto label4;

        return i0;

     label4:
        i0 = i0 + 1;

        goto label2;

     label5:
        return -1;
    }

    public int keyAt(int)
    {
        android.util.SparseArray r0;
        int i0, $i1, $i2;
        boolean $z0, $z1;
        int[] $r1;
        java.lang.ArrayIndexOutOfBoundsException $r2;

        r0 := @this: android.util.SparseArray;

        i0 := @parameter0: int;

        $i1 = r0.<android.util.SparseArray: int mSize>;

        if i0 < $i1 goto label2;

        $z1 = <android.util.UtilConfig: boolean sThrowExceptionForUpperArrayOutOfBounds>;

        if $z1 != 0 goto label1;

        goto label2;

     label1:
        $r2 = new java.lang.ArrayIndexOutOfBoundsException;

        specialinvoke $r2.<java.lang.ArrayIndexOutOfBoundsException: void <init>(int)>(i0);

        throw $r2;

     label2:
        $z0 = r0.<android.util.SparseArray: boolean mGarbage>;

        if $z0 == 0 goto label3;

        specialinvoke r0.<android.util.SparseArray: void gc()>();

     label3:
        $r1 = r0.<android.util.SparseArray: int[] mKeys>;

        $i2 = $r1[i0];

        return $i2;
    }

    public void put(int, java.lang.Object)
    {
        android.util.SparseArray r0;
        int i0, $i2, $i3, $i4, $i5, $i6, i7, i8, $i9, $i10, $i11, $i12;
        java.lang.Object r1, $r6, $r7;
        java.lang.Object[] r2, $r9, $r12, $r13;
        int[] $r3, $r4, $r5, $r8, $r10, $r11;
        boolean $z0;

        r0 := @this: android.util.SparseArray;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        $r3 = r0.<android.util.SparseArray: int[] mKeys>;

        $i2 = r0.<android.util.SparseArray: int mSize>;

        i7 = staticinvoke <android.util.ContainerHelpers: int binarySearch(int[],int,int)>($r3, $i2, i0);

        if i7 < 0 goto label1;

        $r9 = r0.<android.util.SparseArray: java.lang.Object[] mValues>;

        $r9[i7] = r1;

        goto label4;

     label1:
        $i3 = r0.<android.util.SparseArray: int mSize>;

        if i7 >= $i3 goto label2;

        r2 = r0.<android.util.SparseArray: java.lang.Object[] mValues>;

        $r7 = r2[i7];

        $r6 = <android.util.SparseArray: java.lang.Object DELETED>;

        if $r7 != $r6 goto label2;

        $r8 = r0.<android.util.SparseArray: int[] mKeys>;

        $r8[i7] = i0;

        r2[i7] = r1;

        return;

     label2:
        i8 = i7;

        $z0 = r0.<android.util.SparseArray: boolean mGarbage>;

        if $z0 == 0 goto label3;

        i8 = i7;

        $i5 = r0.<android.util.SparseArray: int mSize>;

        $r4 = r0.<android.util.SparseArray: int[] mKeys>;

        $i4 = lengthof $r4;

        if $i5 < $i4 goto label3;

        specialinvoke r0.<android.util.SparseArray: void gc()>();

        $r5 = r0.<android.util.SparseArray: int[] mKeys>;

        $i6 = r0.<android.util.SparseArray: int mSize>;

        i8 = staticinvoke <android.util.ContainerHelpers: int binarySearch(int[],int,int)>($r5, $i6, i0);

     label3:
        $r10 = r0.<android.util.SparseArray: int[] mKeys>;

        $i9 = r0.<android.util.SparseArray: int mSize>;

        $r11 = staticinvoke <com.android.internal.util.GrowingArrayUtils: int[] insert(int[],int,int,int)>($r10, $i9, i8, i0);

        r0.<android.util.SparseArray: int[] mKeys> = $r11;

        $r12 = r0.<android.util.SparseArray: java.lang.Object[] mValues>;

        $i10 = r0.<android.util.SparseArray: int mSize>;

        $r13 = staticinvoke <com.android.internal.util.GrowingArrayUtils: java.lang.Object[] insert(java.lang.Object[],int,int,java.lang.Object)>($r12, $i10, i8, r1);

        r0.<android.util.SparseArray: java.lang.Object[] mValues> = $r13;

        $i11 = r0.<android.util.SparseArray: int mSize>;

        $i12 = $i11 + 1;

        r0.<android.util.SparseArray: int mSize> = $i12;

     label4:
        return;
    }

    public void remove(int)
    {
        android.util.SparseArray r0;
        int i0;

        r0 := @this: android.util.SparseArray;

        i0 := @parameter0: int;

        virtualinvoke r0.<android.util.SparseArray: void delete(int)>(i0);

        return;
    }

    public void removeAt(int)
    {
        android.util.SparseArray r0;
        int i0, $i1;
        java.lang.Object[] r1;
        java.lang.Object r2, r3;
        boolean $z0;
        java.lang.ArrayIndexOutOfBoundsException $r4;

        r0 := @this: android.util.SparseArray;

        i0 := @parameter0: int;

        $i1 = r0.<android.util.SparseArray: int mSize>;

        if i0 < $i1 goto label2;

        $z0 = <android.util.UtilConfig: boolean sThrowExceptionForUpperArrayOutOfBounds>;

        if $z0 != 0 goto label1;

        goto label2;

     label1:
        $r4 = new java.lang.ArrayIndexOutOfBoundsException;

        specialinvoke $r4.<java.lang.ArrayIndexOutOfBoundsException: void <init>(int)>(i0);

        throw $r4;

     label2:
        r1 = r0.<android.util.SparseArray: java.lang.Object[] mValues>;

        r2 = r1[i0];

        r3 = <android.util.SparseArray: java.lang.Object DELETED>;

        if r2 == r3 goto label3;

        r1[i0] = r3;

        r0.<android.util.SparseArray: boolean mGarbage> = 1;

     label3:
        return;
    }

    public void removeAtRange(int, int)
    {
        android.util.SparseArray r0;
        int $i0, $i1, i2, i3, i4;

        r0 := @this: android.util.SparseArray;

        i2 := @parameter0: int;

        i3 := @parameter1: int;

        $i1 = r0.<android.util.SparseArray: int mSize>;

        $i0 = i2 + i3;

        i4 = staticinvoke <java.lang.Math: int min(int,int)>($i1, $i0);

     label1:
        if i2 >= i4 goto label2;

        virtualinvoke r0.<android.util.SparseArray: void removeAt(int)>(i2);

        i2 = i2 + 1;

        goto label1;

     label2:
        return;
    }

    public java.lang.Object removeReturnOld(int)
    {
        android.util.SparseArray r0;
        java.lang.Object[] r1;
        java.lang.Object r2, r4, r5;
        int $i0, i1, i2;
        int[] $r3;

        r0 := @this: android.util.SparseArray;

        i1 := @parameter0: int;

        $r3 = r0.<android.util.SparseArray: int[] mKeys>;

        $i0 = r0.<android.util.SparseArray: int mSize>;

        i2 = staticinvoke <android.util.ContainerHelpers: int binarySearch(int[],int,int)>($r3, $i0, i1);

        if i2 < 0 goto label1;

        r1 = r0.<android.util.SparseArray: java.lang.Object[] mValues>;

        r4 = r1[i2];

        r2 = <android.util.SparseArray: java.lang.Object DELETED>;

        if r4 == r2 goto label1;

        r5 = r1[i2];

        r1[i2] = r2;

        r0.<android.util.SparseArray: boolean mGarbage> = 1;

        return r5;

     label1:
        return null;
    }

    public void setValueAt(int, java.lang.Object)
    {
        android.util.SparseArray r0;
        int i0, $i1;
        java.lang.Object r1;
        boolean $z0, $z1;
        java.lang.Object[] $r2;
        java.lang.ArrayIndexOutOfBoundsException $r3;

        r0 := @this: android.util.SparseArray;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        $i1 = r0.<android.util.SparseArray: int mSize>;

        if i0 < $i1 goto label2;

        $z1 = <android.util.UtilConfig: boolean sThrowExceptionForUpperArrayOutOfBounds>;

        if $z1 != 0 goto label1;

        goto label2;

     label1:
        $r3 = new java.lang.ArrayIndexOutOfBoundsException;

        specialinvoke $r3.<java.lang.ArrayIndexOutOfBoundsException: void <init>(int)>(i0);

        throw $r3;

     label2:
        $z0 = r0.<android.util.SparseArray: boolean mGarbage>;

        if $z0 == 0 goto label3;

        specialinvoke r0.<android.util.SparseArray: void gc()>();

     label3:
        $r2 = r0.<android.util.SparseArray: java.lang.Object[] mValues>;

        $r2[i0] = r1;

        return;
    }

    public int size()
    {
        android.util.SparseArray r0;
        boolean $z0;
        int $i0;

        r0 := @this: android.util.SparseArray;

        $z0 = r0.<android.util.SparseArray: boolean mGarbage>;

        if $z0 == 0 goto label1;

        specialinvoke r0.<android.util.SparseArray: void gc()>();

     label1:
        $i0 = r0.<android.util.SparseArray: int mSize>;

        return $i0;
    }

    public java.lang.String toString()
    {
        android.util.SparseArray r0;
        java.lang.Object r2;
        int $i0, $i1, $i2, $i3, $i4, i5;
        java.lang.StringBuilder $r3;
        java.lang.String $r6;

        r0 := @this: android.util.SparseArray;

        $i0 = virtualinvoke r0.<android.util.SparseArray: int size()>();

        if $i0 > 0 goto label1;

        return "{}";

     label1:
        $r3 = new java.lang.StringBuilder;

        $i1 = r0.<android.util.SparseArray: int mSize>;

        $i2 = $i1 * 28;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(int)>($i2);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(123);

        i5 = 0;

     label2:
        $i3 = r0.<android.util.SparseArray: int mSize>;

        if i5 >= $i3 goto label6;

        if i5 <= 0 goto label3;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

     label3:
        $i4 = virtualinvoke r0.<android.util.SparseArray: int keyAt(int)>(i5);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(61);

        r2 = virtualinvoke r0.<android.util.SparseArray: java.lang.Object valueAt(int)>(i5);

        if r2 == r0 goto label4;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        goto label5;

     label4:
        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(this Map)");

     label5:
        i5 = i5 + 1;

        goto label2;

     label6:
        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(125);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    public java.lang.Object valueAt(int)
    {
        android.util.SparseArray r0;
        int i0, $i1;
        boolean $z0, $z1;
        java.lang.Object[] $r1;
        java.lang.Object $r2;
        java.lang.ArrayIndexOutOfBoundsException $r3;

        r0 := @this: android.util.SparseArray;

        i0 := @parameter0: int;

        $i1 = r0.<android.util.SparseArray: int mSize>;

        if i0 < $i1 goto label2;

        $z1 = <android.util.UtilConfig: boolean sThrowExceptionForUpperArrayOutOfBounds>;

        if $z1 != 0 goto label1;

        goto label2;

     label1:
        $r3 = new java.lang.ArrayIndexOutOfBoundsException;

        specialinvoke $r3.<java.lang.ArrayIndexOutOfBoundsException: void <init>(int)>(i0);

        throw $r3;

     label2:
        $z0 = r0.<android.util.SparseArray: boolean mGarbage>;

        if $z0 == 0 goto label3;

        specialinvoke r0.<android.util.SparseArray: void gc()>();

     label3:
        $r1 = r0.<android.util.SparseArray: java.lang.Object[] mValues>;

        $r2 = $r1[i0];

        return $r2;
    }
}
