public class android.util.SparseIntArray extends java.lang.Object implements java.lang.Cloneable
{
    private int[] mKeys;
    private int mSize;
    private int[] mValues;

    public void <init>()
    {
        android.util.SparseIntArray r0;

        r0 := @this: android.util.SparseIntArray;

        specialinvoke r0.<android.util.SparseIntArray: void <init>(int)>(10);

        return;
    }

    public void <init>(int)
    {
        android.util.SparseIntArray r0;
        int i0, $i1;
        int[] r1, $r2, $r3, $r4;

        r0 := @this: android.util.SparseIntArray;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if i0 != 0 goto label1;

        $r3 = <libcore.util.EmptyArray: int[] INT>;

        r0.<android.util.SparseIntArray: int[] mKeys> = $r3;

        $r4 = <libcore.util.EmptyArray: int[] INT>;

        r0.<android.util.SparseIntArray: int[] mValues> = $r4;

        goto label2;

     label1:
        r1 = staticinvoke <com.android.internal.util.ArrayUtils: int[] newUnpaddedIntArray(int)>(i0);

        r0.<android.util.SparseIntArray: int[] mKeys> = r1;

        $i1 = lengthof r1;

        $r2 = newarray (int)[$i1];

        r0.<android.util.SparseIntArray: int[] mValues> = $r2;

     label2:
        r0.<android.util.SparseIntArray: int mSize> = 0;

        return;
    }

    public void append(int, int)
    {
        android.util.SparseIntArray r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8;
        int[] $r1, $r2, $r3, $r4, $r5;

        r0 := @this: android.util.SparseIntArray;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 = r0.<android.util.SparseIntArray: int mSize>;

        if i2 == 0 goto label1;

        $r5 = r0.<android.util.SparseIntArray: int[] mKeys>;

        $i7 = i2 - 1;

        $i8 = $r5[$i7];

        if i0 > $i8 goto label1;

        virtualinvoke r0.<android.util.SparseIntArray: void put(int,int)>(i0, i1);

        return;

     label1:
        $r1 = r0.<android.util.SparseIntArray: int[] mKeys>;

        $i3 = r0.<android.util.SparseIntArray: int mSize>;

        $r2 = staticinvoke <com.android.internal.util.GrowingArrayUtils: int[] append(int[],int,int)>($r1, $i3, i0);

        r0.<android.util.SparseIntArray: int[] mKeys> = $r2;

        $r3 = r0.<android.util.SparseIntArray: int[] mValues>;

        $i4 = r0.<android.util.SparseIntArray: int mSize>;

        $r4 = staticinvoke <com.android.internal.util.GrowingArrayUtils: int[] append(int[],int,int)>($r3, $i4, i1);

        r0.<android.util.SparseIntArray: int[] mValues> = $r4;

        $i5 = r0.<android.util.SparseIntArray: int mSize>;

        $i6 = $i5 + 1;

        r0.<android.util.SparseIntArray: int mSize> = $i6;

        return;
    }

    public void clear()
    {
        android.util.SparseIntArray r0;

        r0 := @this: android.util.SparseIntArray;

        r0.<android.util.SparseIntArray: int mSize> = 0;

        return;
    }

    public android.util.SparseIntArray clone()
    {
        android.util.SparseIntArray r0, r9, r10;
        java.lang.Object $r1, $r3, $r6;
        int[] $r2, $r4, $r5, $r7;
        java.lang.Throwable $r8;

        r0 := @this: android.util.SparseIntArray;

        r9 = null;

     label1:
        $r1 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>();

        r10 = (android.util.SparseIntArray) $r1;

     label2:
        r9 = r10;

     label3:
        $r2 = r0.<android.util.SparseIntArray: int[] mKeys>;

        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.Object clone()>();

        $r4 = (int[]) $r3;

        r10.<android.util.SparseIntArray: int[] mKeys> = $r4;

     label4:
        r9 = r10;

     label5:
        $r5 = r0.<android.util.SparseIntArray: int[] mValues>;

        $r6 = virtualinvoke $r5.<java.lang.Object: java.lang.Object clone()>();

        $r7 = (int[]) $r6;

        r10.<android.util.SparseIntArray: int[] mValues> = $r7;

     label6:
        r9 = r10;

        goto label8;

     label7:
        $r8 := @caughtexception;

     label8:
        return r9;

        catch java.lang.CloneNotSupportedException from label1 to label2 with label7;
        catch java.lang.CloneNotSupportedException from label3 to label4 with label7;
        catch java.lang.CloneNotSupportedException from label5 to label6 with label7;
    }

    public volatile java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        android.util.SparseIntArray r0, $r1;

        r0 := @this: android.util.SparseIntArray;

        $r1 = virtualinvoke r0.<android.util.SparseIntArray: android.util.SparseIntArray clone()>();

        return $r1;
    }

    public int[] copyKeys()
    {
        android.util.SparseIntArray r0;
        int $i0, $i1;
        int[] $r1, $r2;

        r0 := @this: android.util.SparseIntArray;

        $i0 = virtualinvoke r0.<android.util.SparseIntArray: int size()>();

        if $i0 != 0 goto label1;

        return null;

     label1:
        $r1 = r0.<android.util.SparseIntArray: int[] mKeys>;

        $i1 = virtualinvoke r0.<android.util.SparseIntArray: int size()>();

        $r2 = staticinvoke <java.util.Arrays: int[] copyOf(int[],int)>($r1, $i1);

        return $r2;
    }

    public void delete(int)
    {
        android.util.SparseIntArray r0;
        int $i0, i1, i2;
        int[] $r1;

        r0 := @this: android.util.SparseIntArray;

        i1 := @parameter0: int;

        $r1 = r0.<android.util.SparseIntArray: int[] mKeys>;

        $i0 = r0.<android.util.SparseIntArray: int mSize>;

        i2 = staticinvoke <android.util.ContainerHelpers: int binarySearch(int[],int,int)>($r1, $i0, i1);

        if i2 < 0 goto label1;

        virtualinvoke r0.<android.util.SparseIntArray: void removeAt(int)>(i2);

     label1:
        return;
    }

    public int get(int)
    {
        android.util.SparseIntArray r0;
        int i0, $i1;

        r0 := @this: android.util.SparseIntArray;

        i0 := @parameter0: int;

        $i1 = virtualinvoke r0.<android.util.SparseIntArray: int get(int,int)>(i0, 0);

        return $i1;
    }

    public int get(int, int)
    {
        android.util.SparseIntArray r0;
        int i0, $i1, $i2, i3, i4;
        int[] $r1, $r2;

        r0 := @this: android.util.SparseIntArray;

        i3 := @parameter0: int;

        i0 := @parameter1: int;

        $r1 = r0.<android.util.SparseIntArray: int[] mKeys>;

        $i1 = r0.<android.util.SparseIntArray: int mSize>;

        i4 = staticinvoke <android.util.ContainerHelpers: int binarySearch(int[],int,int)>($r1, $i1, i3);

        if i4 >= 0 goto label1;

        return i0;

     label1:
        $r2 = r0.<android.util.SparseIntArray: int[] mValues>;

        $i2 = $r2[i4];

        return $i2;
    }

    public int indexOfKey(int)
    {
        android.util.SparseIntArray r0;
        int i0, $i1, $i2;
        int[] $r1;

        r0 := @this: android.util.SparseIntArray;

        i0 := @parameter0: int;

        $r1 = r0.<android.util.SparseIntArray: int[] mKeys>;

        $i1 = r0.<android.util.SparseIntArray: int mSize>;

        $i2 = staticinvoke <android.util.ContainerHelpers: int binarySearch(int[],int,int)>($r1, $i1, i0);

        return $i2;
    }

    public int indexOfValue(int)
    {
        android.util.SparseIntArray r0;
        int i0, $i1, $i2, i3;
        int[] $r1;

        r0 := @this: android.util.SparseIntArray;

        i0 := @parameter0: int;

        i3 = 0;

     label1:
        $i1 = r0.<android.util.SparseIntArray: int mSize>;

        if i3 >= $i1 goto label3;

        $r1 = r0.<android.util.SparseIntArray: int[] mValues>;

        $i2 = $r1[i3];

        if $i2 != i0 goto label2;

        return i3;

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        return -1;
    }

    public int keyAt(int)
    {
        android.util.SparseIntArray r0;
        int i0, $i1, $i2;
        int[] $r1;
        boolean $z0;
        java.lang.ArrayIndexOutOfBoundsException $r2;

        r0 := @this: android.util.SparseIntArray;

        i0 := @parameter0: int;

        $i1 = r0.<android.util.SparseIntArray: int mSize>;

        if i0 < $i1 goto label2;

        $z0 = <android.util.UtilConfig: boolean sThrowExceptionForUpperArrayOutOfBounds>;

        if $z0 != 0 goto label1;

        goto label2;

     label1:
        $r2 = new java.lang.ArrayIndexOutOfBoundsException;

        specialinvoke $r2.<java.lang.ArrayIndexOutOfBoundsException: void <init>(int)>(i0);

        throw $r2;

     label2:
        $r1 = r0.<android.util.SparseIntArray: int[] mKeys>;

        $i2 = $r1[i0];

        return $i2;
    }

    public void put(int, int)
    {
        android.util.SparseIntArray r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, i7;
        int[] $r1, $r2, $r3, $r4, $r5, $r6;

        r0 := @this: android.util.SparseIntArray;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<android.util.SparseIntArray: int[] mKeys>;

        $i2 = r0.<android.util.SparseIntArray: int mSize>;

        i7 = staticinvoke <android.util.ContainerHelpers: int binarySearch(int[],int,int)>($r1, $i2, i0);

        if i7 < 0 goto label1;

        $r6 = r0.<android.util.SparseIntArray: int[] mValues>;

        $r6[i7] = i1;

        goto label2;

     label1:
        $r2 = r0.<android.util.SparseIntArray: int[] mKeys>;

        $i3 = r0.<android.util.SparseIntArray: int mSize>;

        $r3 = staticinvoke <com.android.internal.util.GrowingArrayUtils: int[] insert(int[],int,int,int)>($r2, $i3, i7, i0);

        r0.<android.util.SparseIntArray: int[] mKeys> = $r3;

        $r4 = r0.<android.util.SparseIntArray: int[] mValues>;

        $i4 = r0.<android.util.SparseIntArray: int mSize>;

        $r5 = staticinvoke <com.android.internal.util.GrowingArrayUtils: int[] insert(int[],int,int,int)>($r4, $i4, i7, i1);

        r0.<android.util.SparseIntArray: int[] mValues> = $r5;

        $i5 = r0.<android.util.SparseIntArray: int mSize>;

        $i6 = $i5 + 1;

        r0.<android.util.SparseIntArray: int mSize> = $i6;

     label2:
        return;
    }

    public void removeAt(int)
    {
        android.util.SparseIntArray r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        int[] r1, r2;

        r0 := @this: android.util.SparseIntArray;

        i0 := @parameter0: int;

        r1 = r0.<android.util.SparseIntArray: int[] mKeys>;

        $i4 = i0 + 1;

        $i2 = r0.<android.util.SparseIntArray: int mSize>;

        $i1 = i0 + 1;

        $i3 = $i2 - $i1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, $i4, r1, i0, $i3);

        r2 = r0.<android.util.SparseIntArray: int[] mValues>;

        $i8 = i0 + 1;

        $i6 = r0.<android.util.SparseIntArray: int mSize>;

        $i5 = i0 + 1;

        $i7 = $i6 - $i5;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, $i8, r2, i0, $i7);

        $i9 = r0.<android.util.SparseIntArray: int mSize>;

        $i10 = $i9 - 1;

        r0.<android.util.SparseIntArray: int mSize> = $i10;

        return;
    }

    public void setValueAt(int, int)
    {
        android.util.SparseIntArray r0;
        int i0, i1, $i2;
        int[] $r1;
        boolean $z0;
        java.lang.ArrayIndexOutOfBoundsException $r2;

        r0 := @this: android.util.SparseIntArray;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = r0.<android.util.SparseIntArray: int mSize>;

        if i0 < $i2 goto label2;

        $z0 = <android.util.UtilConfig: boolean sThrowExceptionForUpperArrayOutOfBounds>;

        if $z0 != 0 goto label1;

        goto label2;

     label1:
        $r2 = new java.lang.ArrayIndexOutOfBoundsException;

        specialinvoke $r2.<java.lang.ArrayIndexOutOfBoundsException: void <init>(int)>(i0);

        throw $r2;

     label2:
        $r1 = r0.<android.util.SparseIntArray: int[] mValues>;

        $r1[i0] = i1;

        return;
    }

    public int size()
    {
        android.util.SparseIntArray r0;
        int $i0;

        r0 := @this: android.util.SparseIntArray;

        $i0 = r0.<android.util.SparseIntArray: int mSize>;

        return $i0;
    }

    public java.lang.String toString()
    {
        android.util.SparseIntArray r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6;
        java.lang.StringBuilder $r2;
        java.lang.String $r5;

        r0 := @this: android.util.SparseIntArray;

        $i0 = virtualinvoke r0.<android.util.SparseIntArray: int size()>();

        if $i0 > 0 goto label1;

        return "{}";

     label1:
        $r2 = new java.lang.StringBuilder;

        $i1 = r0.<android.util.SparseIntArray: int mSize>;

        $i2 = $i1 * 28;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(int)>($i2);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(123);

        i6 = 0;

     label2:
        $i3 = r0.<android.util.SparseIntArray: int mSize>;

        if i6 >= $i3 goto label4;

        if i6 <= 0 goto label3;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

     label3:
        $i4 = virtualinvoke r0.<android.util.SparseIntArray: int keyAt(int)>(i6);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(61);

        $i5 = virtualinvoke r0.<android.util.SparseIntArray: int valueAt(int)>(i6);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        i6 = i6 + 1;

        goto label2;

     label4:
        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(125);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    public int valueAt(int)
    {
        android.util.SparseIntArray r0;
        int i0, $i1, $i2;
        int[] $r1;
        boolean $z0;
        java.lang.ArrayIndexOutOfBoundsException $r2;

        r0 := @this: android.util.SparseIntArray;

        i0 := @parameter0: int;

        $i1 = r0.<android.util.SparseIntArray: int mSize>;

        if i0 < $i1 goto label2;

        $z0 = <android.util.UtilConfig: boolean sThrowExceptionForUpperArrayOutOfBounds>;

        if $z0 != 0 goto label1;

        goto label2;

     label1:
        $r2 = new java.lang.ArrayIndexOutOfBoundsException;

        specialinvoke $r2.<java.lang.ArrayIndexOutOfBoundsException: void <init>(int)>(i0);

        throw $r2;

     label2:
        $r1 = r0.<android.util.SparseIntArray: int[] mValues>;

        $i2 = $r1[i0];

        return $i2;
    }
}
