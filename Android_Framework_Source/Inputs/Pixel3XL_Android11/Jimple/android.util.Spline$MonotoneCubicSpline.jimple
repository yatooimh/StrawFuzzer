public class android.util.Spline$MonotoneCubicSpline extends android.util.Spline
{
    private float[] mM;
    private float[] mX;
    private float[] mY;

    public void <init>(float[], float[])
    {
        android.util.Spline$MonotoneCubicSpline r0;
        float[] r1, r2, r3, r4;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i12, $i16, $i17, $i18, $i20, i21, i22, i23;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, f22, f23, f24, f25;
        byte $b11, $b13, $b14, $b15, $b19;
        java.lang.IllegalArgumentException $r5, $r6, $r7;
        double $d0, $d1, $d2;

        r0 := @this: android.util.Spline$MonotoneCubicSpline;

        r1 := @parameter0: float[];

        r2 := @parameter1: float[];

        specialinvoke r0.<android.util.Spline: void <init>()>();

        if r1 == null goto label11;

        if r2 == null goto label11;

        $i3 = lengthof r1;

        $i2 = lengthof r2;

        if $i3 != $i2 goto label11;

        $i4 = lengthof r1;

        if $i4 < 2 goto label11;

        i0 = lengthof r1;

        $i5 = i0 - 1;

        r3 = newarray (float)[$i5];

        r4 = newarray (float)[i0];

        i21 = 0;

     label01:
        $i6 = i0 - 1;

        if i21 >= $i6 goto label03;

        $i18 = i21 + 1;

        $f17 = r1[$i18];

        $f16 = r1[i21];

        f22 = $f17 - $f16;

        $b19 = f22 cmpg 0.0F;

        if $b19 <= 0 goto label02;

        $i20 = i21 + 1;

        $f19 = r2[$i20];

        $f18 = r2[i21];

        $f20 = $f19 - $f18;

        $f21 = $f20 / f22;

        r3[i21] = $f21;

        i21 = i21 + 1;

        goto label01;

     label02:
        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The control points must all have strictly increasing X values.");

        throw $r6;

     label03:
        $f1 = r3[0];

        r4[0] = $f1;

        i22 = 1;

     label04:
        $i7 = i0 - 1;

        if i22 >= $i7 goto label05;

        $i17 = i22 - 1;

        $f13 = r3[$i17];

        $f12 = r3[i22];

        $f14 = $f13 + $f12;

        $f15 = $f14 * 0.5F;

        r4[i22] = $f15;

        i22 = i22 + 1;

        goto label04;

     label05:
        $i9 = i0 - 1;

        $i8 = i0 - 2;

        $f2 = r3[$i8];

        r4[$i9] = $f2;

        i23 = 0;

     label06:
        $i10 = i0 - 1;

        if i23 >= $i10 goto label10;

        $f3 = r3[i23];

        $b11 = $f3 cmpl 0.0F;

        if $b11 != 0 goto label07;

        r4[i23] = 0.0F;

        $i16 = i23 + 1;

        r4[$i16] = 0.0F;

        goto label08;

     label07:
        $f5 = r4[i23];

        $f4 = r3[i23];

        f0 = $f5 / $f4;

        $i12 = i23 + 1;

        $f7 = r4[$i12];

        $f6 = r3[i23];

        f23 = $f7 / $f6;

        $b13 = f0 cmpg 0.0F;

        if $b13 < 0 goto label09;

        $b14 = f23 cmpg 0.0F;

        if $b14 < 0 goto label09;

        $d1 = (double) f0;

        $d0 = (double) f23;

        $d2 = staticinvoke <java.lang.Math: double hypot(double,double)>($d1, $d0);

        f24 = (float) $d2;

        $b15 = f24 cmpl 3.0F;

        if $b15 <= 0 goto label08;

        f25 = 3.0F / f24;

        $f8 = r4[i23];

        $f9 = $f8 * f25;

        r4[i23] = $f9;

        i1 = i23 + 1;

        $f10 = r4[i1];

        $f11 = $f10 * f25;

        r4[i1] = $f11;

     label08:
        i23 = i23 + 1;

        goto label06;

     label09:
        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The control points must have monotonic Y values.");

        throw $r5;

     label10:
        r0.<android.util.Spline$MonotoneCubicSpline: float[] mX> = r1;

        r0.<android.util.Spline$MonotoneCubicSpline: float[] mY> = r2;

        r0.<android.util.Spline$MonotoneCubicSpline: float[] mM> = r4;

        return;

     label11:
        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("There must be at least two control points and the arrays must be of equal length.");

        throw $r7;
    }

    public float interpolate(float)
    {
        android.util.Spline$MonotoneCubicSpline r0;
        int i0, $i2, $i4, $i6, $i7, $i8, $i10, i11, i12;
        float f0, f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25, $f26, $f27, $f28, $f29, $f30, $f31, $f32, $f33, $f34, $f35, f36, f37;
        float[] r1, $r2, $r3, $r4, $r5, r6, r7, r8;
        boolean $z0;
        byte $b1, $b3, $b5, $b9;

        r0 := @this: android.util.Spline$MonotoneCubicSpline;

        f36 := @parameter0: float;

        $r2 = r0.<android.util.Spline$MonotoneCubicSpline: float[] mX>;

        i11 = lengthof $r2;

        $z0 = staticinvoke <java.lang.Float: boolean isNaN(float)>(f36);

        if $z0 == 0 goto label1;

        return f36;

     label1:
        r6 = r0.<android.util.Spline$MonotoneCubicSpline: float[] mX>;

        $f2 = r6[0];

        $b1 = f36 cmpg $f2;

        if $b1 > 0 goto label2;

        $r5 = r0.<android.util.Spline$MonotoneCubicSpline: float[] mY>;

        $f35 = $r5[0];

        return $f35;

     label2:
        $i2 = i11 - 1;

        $f3 = r6[$i2];

        $b3 = f36 cmpl $f3;

        if $b3 < 0 goto label3;

        $r4 = r0.<android.util.Spline$MonotoneCubicSpline: float[] mY>;

        $i10 = i11 - 1;

        $f34 = $r4[$i10];

        return $f34;

     label3:
        i12 = 0;

     label4:
        r7 = r0.<android.util.Spline$MonotoneCubicSpline: float[] mX>;

        $i4 = i12 + 1;

        $f4 = r7[$i4];

        $b5 = f36 cmpl $f4;

        if $b5 < 0 goto label5;

        i0 = i12 + 1;

        i12 = i0;

        $f32 = r7[i0];

        $b9 = f36 cmpl $f32;

        if $b9 != 0 goto label4;

        $r3 = r0.<android.util.Spline$MonotoneCubicSpline: float[] mY>;

        $f33 = $r3[i0];

        return $f33;

     label5:
        $i6 = i12 + 1;

        $f6 = r7[$i6];

        $f5 = r7[i12];

        f0 = $f6 - $f5;

        $f7 = r7[i12];

        $f8 = f36 - $f7;

        f1 = $f8 / f0;

        r1 = r0.<android.util.Spline$MonotoneCubicSpline: float[] mY>;

        f37 = r1[i12];

        r8 = r0.<android.util.Spline$MonotoneCubicSpline: float[] mM>;

        $f9 = f1 * 2.0F;

        $f10 = $f9 + 1.0F;

        $f14 = f37 * $f10;

        $f11 = r8[i12];

        $f12 = $f11 * f0;

        $f13 = $f12 * f1;

        $f16 = $f14 + $f13;

        $f15 = 1.0F - f1;

        $f18 = $f16 * $f15;

        $f17 = 1.0F - f1;

        $f30 = $f18 * $f17;

        $i7 = i12 + 1;

        $f21 = r1[$i7];

        $f19 = 2.0F * f1;

        $f20 = 3.0F - $f19;

        $f26 = $f21 * $f20;

        $i8 = i12 + 1;

        $f22 = r8[$i8];

        $f24 = $f22 * f0;

        $f23 = f1 - 1.0F;

        $f25 = $f24 * $f23;

        $f27 = $f26 + $f25;

        $f28 = $f27 * f1;

        $f29 = $f28 * f1;

        $f31 = $f30 + $f29;

        return $f31;
    }

    public java.lang.String toString()
    {
        android.util.Spline$MonotoneCubicSpline r0;
        int i0, i1;
        java.lang.StringBuilder $r2;
        float[] $r3, $r8, $r11, $r14;
        java.lang.String $r6;
        float $f0, $f1, $f2;

        r0 := @this: android.util.Spline$MonotoneCubicSpline;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = r0.<android.util.Spline$MonotoneCubicSpline: float[] mX>;

        i0 = lengthof $r3;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("MonotoneCubicSpline{[");

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        if i1 == 0 goto label2;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

     label2:
        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        $r8 = r0.<android.util.Spline$MonotoneCubicSpline: float[] mX>;

        $f0 = $r8[i1];

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r11 = r0.<android.util.Spline$MonotoneCubicSpline: float[] mY>;

        $f1 = $r11[i1];

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f1);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r14 = r0.<android.util.Spline$MonotoneCubicSpline: float[] mM>;

        $f2 = $r14[i1];

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f2);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        i1 = i1 + 1;

        goto label1;

     label3:
        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]}");

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }
}
