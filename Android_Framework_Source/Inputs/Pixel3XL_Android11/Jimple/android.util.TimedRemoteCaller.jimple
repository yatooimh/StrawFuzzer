public abstract class android.util.TimedRemoteCaller extends java.lang.Object
{
    public static final long DEFAULT_CALL_TIMEOUT_MILLIS;
    private final android.util.SparseIntArray mAwaitedCalls;
    private final long mCallTimeoutMillis;
    private final java.lang.Object mLock;
    private final android.util.SparseArray mReceivedCalls;
    private int mSequenceCounter;

    public void <init>(long)
    {
        android.util.TimedRemoteCaller r0;
        long l0;
        java.lang.Object $r1;
        android.util.SparseIntArray $r2;
        android.util.SparseArray $r3;

        r0 := @this: android.util.TimedRemoteCaller;

        l0 := @parameter0: long;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.lang.Object;

        specialinvoke $r1.<java.lang.Object: void <init>()>();

        r0.<android.util.TimedRemoteCaller: java.lang.Object mLock> = $r1;

        $r2 = new android.util.SparseIntArray;

        specialinvoke $r2.<android.util.SparseIntArray: void <init>(int)>(1);

        r0.<android.util.TimedRemoteCaller: android.util.SparseIntArray mAwaitedCalls> = $r2;

        $r3 = new android.util.SparseArray;

        specialinvoke $r3.<android.util.SparseArray: void <init>(int)>(1);

        r0.<android.util.TimedRemoteCaller: android.util.SparseArray mReceivedCalls> = $r3;

        r0.<android.util.TimedRemoteCaller: long mCallTimeoutMillis> = l0;

        return;
    }

    protected final java.lang.Object getResultTimed(int) throws java.util.concurrent.TimeoutException
    {
        android.util.TimedRemoteCaller r0;
        int i0, $i2;
        long l1, $l3, $l4, l6, l7;
        java.util.concurrent.TimeoutException r1;
        android.util.SparseArray $r2, $r8;
        byte $b5;
        android.util.SparseIntArray $r3;
        java.lang.String $r6;
        java.lang.Object $r7, r11, r12;
        java.lang.Throwable $r9, $r10;
        java.lang.StringBuilder r13;

        r0 := @this: android.util.TimedRemoteCaller;

        i0 := @parameter0: int;

        l1 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

     label01:
        r11 = r0.<android.util.TimedRemoteCaller: java.lang.Object mLock>;

        entermonitor r11;

     label02:
        $r2 = r0.<android.util.TimedRemoteCaller: android.util.SparseArray mReceivedCalls>;

        $i2 = virtualinvoke $r2.<android.util.SparseArray: int indexOfKey(int)>(i0);

        if $i2 < 0 goto label04;

        $r8 = r0.<android.util.TimedRemoteCaller: android.util.SparseArray mReceivedCalls>;

        r12 = virtualinvoke $r8.<android.util.SparseArray: java.lang.Object removeReturnOld(int)>(i0);

        exitmonitor r11;

     label03:
        return r12;

     label04:
        l6 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l4 = r0.<android.util.TimedRemoteCaller: long mCallTimeoutMillis>;

        $l3 = l6 - l1;

        l7 = $l4 - $l3;

     label05:
        $b5 = l7 cmp 0L;

        if $b5 <= 0 goto label08;

     label06:
        $r7 = r0.<android.util.TimedRemoteCaller: java.lang.Object mLock>;

        virtualinvoke $r7.<java.lang.Object: void wait(long)>(l7);

        exitmonitor r11;

     label07:
        goto label13;

     label08:
        $r3 = r0.<android.util.TimedRemoteCaller: android.util.SparseIntArray mAwaitedCalls>;

        virtualinvoke $r3.<android.util.SparseIntArray: void delete(int)>(i0);

        r1 = new java.util.concurrent.TimeoutException;

        r13 = new java.lang.StringBuilder;

        specialinvoke r13.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No response for sequence: ");

        virtualinvoke r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r6 = virtualinvoke r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r1.<java.util.concurrent.TimeoutException: void <init>(java.lang.String)>($r6);

        throw r1;

     label09:
        $r10 := @caughtexception;

     label10:
        exitmonitor r11;

     label11:
        throw $r10;

     label12:
        $r9 := @caughtexception;

     label13:
        goto label01;

        catch java.lang.InterruptedException from label01 to label02 with label12;
        catch java.lang.Throwable from label02 to label03 with label09;
        catch java.lang.Throwable from label04 to label05 with label09;
        catch java.lang.Throwable from label06 to label07 with label09;
        catch java.lang.Throwable from label08 to label09 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
        catch java.lang.InterruptedException from label11 to label12 with label12;
    }

    protected final int onBeforeRemoteCall()
    {
        android.util.TimedRemoteCaller r0;
        java.lang.Object r1;
        int i0, $i1, $i2;
        android.util.SparseIntArray $r3, $r4;
        java.lang.Throwable $r5;

        r0 := @this: android.util.TimedRemoteCaller;

        r1 = r0.<android.util.TimedRemoteCaller: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        i0 = r0.<android.util.TimedRemoteCaller: int mSequenceCounter>;

        $i1 = i0 + 1;

        r0.<android.util.TimedRemoteCaller: int mSequenceCounter> = $i1;

        $r3 = r0.<android.util.TimedRemoteCaller: android.util.SparseIntArray mAwaitedCalls>;

        $i2 = virtualinvoke $r3.<android.util.SparseIntArray: int get(int)>(i0);

        if $i2 != 0 goto label1;

        $r4 = r0.<android.util.TimedRemoteCaller: android.util.SparseIntArray mAwaitedCalls>;

        virtualinvoke $r4.<android.util.SparseIntArray: void put(int,int)>(i0, 1);

        exitmonitor r1;

     label2:
        return i0;

     label3:
        $r5 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    protected final void onRemoteMethodResult(java.lang.Object, int)
    {
        android.util.TimedRemoteCaller r0;
        int i0, $i1;
        java.lang.Object r1, $r5, r7;
        android.util.SparseIntArray $r2, $r3;
        android.util.SparseArray $r4;
        java.lang.Throwable $r6;
        boolean z0;

        r0 := @this: android.util.TimedRemoteCaller;

        r7 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        r1 = r0.<android.util.TimedRemoteCaller: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $r2 = r0.<android.util.TimedRemoteCaller: android.util.SparseIntArray mAwaitedCalls>;

        $i1 = virtualinvoke $r2.<android.util.SparseIntArray: int get(int)>(i0);

        if $i1 == 0 goto label03;

     label02:
        z0 = 1;

        goto label04;

     label03:
        z0 = 0;

     label04:
        if z0 == 0 goto label06;

     label05:
        $r3 = r0.<android.util.TimedRemoteCaller: android.util.SparseIntArray mAwaitedCalls>;

        virtualinvoke $r3.<android.util.SparseIntArray: void delete(int)>(i0);

        $r4 = r0.<android.util.TimedRemoteCaller: android.util.SparseArray mReceivedCalls>;

        virtualinvoke $r4.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, r7);

        $r5 = r0.<android.util.TimedRemoteCaller: java.lang.Object mLock>;

        virtualinvoke $r5.<java.lang.Object: void notifyAll()>();

     label06:
        exitmonitor r1;

     label07:
        return;

     label08:
        $r6 := @caughtexception;

     label09:
        exitmonitor r1;

     label10:
        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label05 to label06 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    public static void <clinit>()
    {
        <android.util.TimedRemoteCaller: long DEFAULT_CALL_TIMEOUT_MILLIS> = 5000L;

        return;
    }
}
