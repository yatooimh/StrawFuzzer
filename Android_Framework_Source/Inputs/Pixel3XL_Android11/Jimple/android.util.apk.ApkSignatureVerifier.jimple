public class android.util.apk.ApkSignatureVerifier extends java.lang.Object
{
    private static final java.util.concurrent.atomic.AtomicReference sBuffer;

    static void <clinit>()
    {
        java.util.concurrent.atomic.AtomicReference $r0;

        $r0 = new java.util.concurrent.atomic.AtomicReference;

        specialinvoke $r0.<java.util.concurrent.atomic.AtomicReference: void <init>()>();

        <android.util.apk.ApkSignatureVerifier: java.util.concurrent.atomic.AtomicReference sBuffer> = $r0;

        return;
    }

    public void <init>()
    {
        android.util.apk.ApkSignatureVerifier r0;

        r0 := @this: android.util.apk.ApkSignatureVerifier;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static void closeQuietly(android.util.jar.StrictJarFile)
    {
        java.lang.Exception $r0;
        android.util.jar.StrictJarFile r1;

        r1 := @parameter0: android.util.jar.StrictJarFile;

        if r1 == null goto label4;

     label1:
        virtualinvoke r1.<android.util.jar.StrictJarFile: void close()>();

     label2:
        goto label4;

     label3:
        $r0 := @caughtexception;

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    private static android.content.pm.Signature[] convertToSignatures(java.security.cert.Certificate[][]) throws java.security.cert.CertificateEncodingException
    {
        java.security.cert.Certificate[][] r0;
        android.content.pm.Signature[] r1;
        int $i0, $i1, i2;
        android.content.pm.Signature $r2;
        java.security.cert.Certificate[] $r3;

        r0 := @parameter0: java.security.cert.Certificate[][];

        $i0 = lengthof r0;

        r1 = newarray (android.content.pm.Signature)[$i0];

        i2 = 0;

     label1:
        $i1 = lengthof r0;

        if i2 >= $i1 goto label2;

        $r2 = new android.content.pm.Signature;

        $r3 = r0[i2];

        specialinvoke $r2.<android.content.pm.Signature: void <init>(java.security.cert.Certificate[])>($r3);

        r1[i2] = $r2;

        i2 = i2 + 1;

        goto label1;

     label2:
        return r1;
    }

    public static byte[] generateApkVerity(java.lang.String, android.util.apk.ByteBufferFactory) throws java.io.IOException, android.util.apk.SignatureNotFoundException, java.lang.SecurityException, java.security.DigestException, java.security.NoSuchAlgorithmException
    {
        java.lang.String r0;
        android.util.apk.ByteBufferFactory r1;
        android.util.apk.SignatureNotFoundException $r2;
        byte[] $r3, r4;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: android.util.apk.ByteBufferFactory;

     label1:
        r4 = staticinvoke <android.util.apk.ApkSignatureSchemeV3Verifier: byte[] generateApkVerity(java.lang.String,android.util.apk.ByteBufferFactory)>(r0, r1);

     label2:
        return r4;

     label3:
        $r2 := @caughtexception;

        $r3 = staticinvoke <android.util.apk.ApkSignatureSchemeV2Verifier: byte[] generateApkVerity(java.lang.String,android.util.apk.ByteBufferFactory)>(r0, r1);

        return $r3;

        catch android.util.apk.SignatureNotFoundException from label1 to label2 with label3;
    }

    public static byte[] generateApkVerityRootHash(java.lang.String) throws java.security.NoSuchAlgorithmException, java.security.DigestException, java.io.IOException
    {
        android.util.apk.SignatureNotFoundException $r0, $r1;
        java.lang.String r2;
        byte[] r3, r5;

        r2 := @parameter0: java.lang.String;

     label1:
        r3 = staticinvoke <android.util.apk.ApkSignatureSchemeV3Verifier: byte[] generateApkVerityRootHash(java.lang.String)>(r2);

     label2:
        return r3;

     label3:
        $r1 := @caughtexception;

     label4:
        r5 = staticinvoke <android.util.apk.ApkSignatureSchemeV2Verifier: byte[] generateApkVerityRootHash(java.lang.String)>(r2);

     label5:
        return r5;

     label6:
        $r0 := @caughtexception;

        return null;

        catch android.util.apk.SignatureNotFoundException from label1 to label2 with label3;
        catch android.util.apk.SignatureNotFoundException from label4 to label5 with label6;
    }

    public static int getMinimumSignatureSchemeVersionForTargetSdk(int)
    {
        int i0;

        i0 := @parameter0: int;

        if i0 < 30 goto label1;

        return 2;

     label1:
        return 1;
    }

    public static byte[] getVerityRootHash(java.lang.String) throws java.io.IOException, java.lang.SecurityException
    {
        android.util.apk.SignatureNotFoundException $r0, $r1;
        java.lang.String r2;
        byte[] r3, r5;

        r2 := @parameter0: java.lang.String;

     label1:
        r3 = staticinvoke <android.util.apk.ApkSignatureSchemeV3Verifier: byte[] getVerityRootHash(java.lang.String)>(r2);

     label2:
        return r3;

     label3:
        $r1 := @caughtexception;

     label4:
        r5 = staticinvoke <android.util.apk.ApkSignatureSchemeV2Verifier: byte[] getVerityRootHash(java.lang.String)>(r2);

     label5:
        return r5;

     label6:
        $r0 := @caughtexception;

        return null;

        catch android.util.apk.SignatureNotFoundException from label1 to label2 with label3;
        catch android.util.apk.SignatureNotFoundException from label4 to label5 with label6;
    }

    private static java.security.cert.Certificate[][] loadCertificates(android.util.jar.StrictJarFile, java.util.zip.ZipEntry) throws android.content.pm.PackageParser$PackageParserException
    {
        java.util.zip.ZipEntry r0;
        android.content.pm.PackageParser$PackageParserException r1;
        java.lang.Throwable $r2, $r9;
        java.lang.String $r4, $r8;
        android.util.jar.StrictJarFile r10;
        java.io.InputStream r11, r12, r13;
        java.security.cert.Certificate[][] r14;
        java.lang.StringBuilder r17;

        r10 := @parameter0: android.util.jar.StrictJarFile;

        r0 := @parameter1: java.util.zip.ZipEntry;

        r11 = null;

        r12 = null;

     label01:
        r13 = virtualinvoke r10.<android.util.jar.StrictJarFile: java.io.InputStream getInputStream(java.util.zip.ZipEntry)>(r0);

     label02:
        r12 = r13;

        r11 = r13;

     label03:
        staticinvoke <android.util.apk.ApkSignatureVerifier: void readFullyIgnoringContents(java.io.InputStream)>(r13);

     label04:
        r12 = r13;

        r11 = r13;

     label05:
        r14 = virtualinvoke r10.<android.util.jar.StrictJarFile: java.security.cert.Certificate[][] getCertificateChains(java.util.zip.ZipEntry)>(r0);

     label06:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r13);

        return r14;

     label07:
        $r9 := @caughtexception;

        goto label26;

     label08:
        $r2 := @caughtexception;

        r12 = r11;

     label09:
        r1 = new android.content.pm.PackageParser$PackageParserException;

     label10:
        r12 = r11;

     label11:
        r17 = new java.lang.StringBuilder;

     label12:
        r12 = r11;

     label13:
        specialinvoke r17.<java.lang.StringBuilder: void <init>()>();

     label14:
        r12 = r11;

     label15:
        virtualinvoke r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed reading ");

     label16:
        r12 = r11;

     label17:
        $r4 = virtualinvoke r0.<java.util.zip.ZipEntry: java.lang.String getName()>();

        virtualinvoke r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

     label18:
        r12 = r11;

     label19:
        virtualinvoke r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in ");

     label20:
        r12 = r11;

     label21:
        virtualinvoke r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r10);

     label22:
        r12 = r11;

     label23:
        $r8 = virtualinvoke r17.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r1.<android.content.pm.PackageParser$PackageParserException: void <init>(int,java.lang.String,java.lang.Throwable)>(-102, $r8, $r2);

     label24:
        r12 = r11;

     label25:
        throw r1;

     label26:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r12);

        throw $r9;

        catch java.io.IOException from label01 to label02 with label08;
        catch java.lang.RuntimeException from label01 to label02 with label08;
        catch java.lang.Throwable from label01 to label02 with label07;
        catch java.io.IOException from label03 to label04 with label08;
        catch java.lang.RuntimeException from label03 to label04 with label08;
        catch java.lang.Throwable from label03 to label04 with label07;
        catch java.io.IOException from label05 to label06 with label08;
        catch java.lang.RuntimeException from label05 to label06 with label08;
        catch java.lang.Throwable from label05 to label06 with label07;
        catch java.lang.Throwable from label09 to label10 with label07;
        catch java.lang.Throwable from label11 to label12 with label07;
        catch java.lang.Throwable from label13 to label14 with label07;
        catch java.lang.Throwable from label15 to label16 with label07;
        catch java.lang.Throwable from label17 to label18 with label07;
        catch java.lang.Throwable from label19 to label20 with label07;
        catch java.lang.Throwable from label21 to label22 with label07;
        catch java.lang.Throwable from label23 to label24 with label07;
        catch java.lang.Throwable from label25 to label26 with label07;
    }

    private static void readFullyIgnoringContents(java.io.InputStream) throws java.io.IOException
    {
        java.io.InputStream r0;
        byte[] r1, r5;
        int i0, $i2;
        java.util.concurrent.atomic.AtomicReference $r2, $r4;
        java.lang.Object $r3;

        r0 := @parameter0: java.io.InputStream;

        $r2 = <android.util.apk.ApkSignatureVerifier: java.util.concurrent.atomic.AtomicReference sBuffer>;

        $r3 = virtualinvoke $r2.<java.util.concurrent.atomic.AtomicReference: java.lang.Object getAndSet(java.lang.Object)>(null);

        r1 = (byte[]) $r3;

        r5 = r1;

        if r1 != null goto label1;

        r5 = newarray (byte)[4096];

     label1:
        $i2 = lengthof r5;

        i0 = virtualinvoke r0.<java.io.InputStream: int read(byte[],int,int)>(r5, 0, $i2);

        if i0 == -1 goto label2;

        goto label1;

     label2:
        $r4 = <android.util.apk.ApkSignatureVerifier: java.util.concurrent.atomic.AtomicReference sBuffer>;

        virtualinvoke $r4.<java.util.concurrent.atomic.AtomicReference: void set(java.lang.Object)>(r5);

        return;
    }

    public static android.content.pm.PackageParser$SigningDetails unsafeGetCertsWithoutVerification(java.lang.String, int) throws android.content.pm.PackageParser$PackageParserException
    {
        java.lang.String r0;
        int i0;
        android.content.pm.PackageParser$SigningDetails $r1;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r1 = staticinvoke <android.util.apk.ApkSignatureVerifier: android.content.pm.PackageParser$SigningDetails verifySignatures(java.lang.String,int,boolean)>(r0, i0, 0);

        return $r1;
    }

    public static android.content.pm.PackageParser$SigningDetails verify(java.lang.String, int) throws android.content.pm.PackageParser$PackageParserException
    {
        java.lang.String r0;
        int i0;
        android.content.pm.PackageParser$SigningDetails $r1;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r1 = staticinvoke <android.util.apk.ApkSignatureVerifier: android.content.pm.PackageParser$SigningDetails verifySignatures(java.lang.String,int,boolean)>(r0, i0, 1);

        return $r1;
    }

    private static android.content.pm.PackageParser$SigningDetails verifySignatures(java.lang.String, int, boolean) throws android.content.pm.PackageParser$PackageParserException
    {
        java.lang.String r0, $r8, $r14, $r21;
        int i0;
        boolean z0;
        java.lang.StringBuilder $r2, $r10, $r15;
        android.content.pm.PackageParser$PackageParserException $r7, $r13, $r20;
        android.util.apk.SignatureNotFoundException $r9;
        android.content.pm.PackageParser$SigningDetails $r22, r23;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        if i0 > 4 goto label6;

     label1:
        r23 = staticinvoke <android.util.apk.ApkSignatureVerifier: android.content.pm.PackageParser$SigningDetails verifyV4Signature(java.lang.String,int,boolean)>(r0, i0, z0);

     label2:
        return r23;

     label3:
        $r9 := @caughtexception;

        if i0 >= 4 goto label5;

        if i0 > 3 goto label4;

        $r22 = staticinvoke <android.util.apk.ApkSignatureVerifier: android.content.pm.PackageParser$SigningDetails verifyV3AndBelowSignatures(java.lang.String,int,boolean)>(r0, i0, z0);

        return $r22;

     label4:
        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No signature found in package of version ");

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" or newer for package ");

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r20 = new android.content.pm.PackageParser$PackageParserException;

        $r21 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r20.<android.content.pm.PackageParser$PackageParserException: void <init>(int,java.lang.String)>(-103, $r21);

        throw $r20;

     label5:
        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No APK Signature Scheme v4 signature in package ");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r13 = new android.content.pm.PackageParser$PackageParserException;

        $r14 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<android.content.pm.PackageParser$PackageParserException: void <init>(int,java.lang.String,java.lang.Throwable)>(-103, $r14, $r9);

        throw $r13;

     label6:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No signature found in package of version ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" or newer for package ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r7 = new android.content.pm.PackageParser$PackageParserException;

        $r8 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<android.content.pm.PackageParser$PackageParserException: void <init>(int,java.lang.String)>(-103, $r8);

        throw $r7;

        catch android.util.apk.SignatureNotFoundException from label1 to label2 with label3;
    }

    private static android.content.pm.PackageParser$SigningDetails verifyV1Signature(java.lang.String, boolean) throws android.content.pm.PackageParser$PackageParserException
    {
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        java.lang.String r0, $r1, $r2, $r5, $r6, $r8, $r9, $r13, $r15, r16;
        android.content.pm.PackageParser$SigningDetails $r3;
        java.lang.Object $r4, $r10;
        android.content.pm.Signature[] $r7, r24;
        java.lang.Throwable $r11, $r12, $r14;
        android.util.jar.StrictJarFile r17, r18, r19, r20;
        java.util.ArrayList r21;
        java.util.zip.ZipEntry r22, r26, r28;
        java.security.cert.Certificate[][] r23, r29;
        java.util.Iterator r25, r27;
        android.content.pm.PackageParser$PackageParserException r30, r32, r35, r37, r41, r44;
        java.lang.StringBuilder r31, r33, r36, r38, r42, r45;

        r16 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        r17 = null;

        r18 = null;

        r19 = null;

     label001:
        staticinvoke <android.os.Trace: void traceBegin(long,java.lang.String)>(262144L, "strictJarFileCtor");

     label002:
        r17 = null;

        r18 = null;

        r19 = null;

     label003:
        r20 = new android.util.jar.StrictJarFile;

     label004:
        r17 = null;

        r18 = null;

        r19 = null;

     label005:
        specialinvoke r20.<android.util.jar.StrictJarFile: void <init>(java.lang.String,boolean,boolean)>(r16, 1, z0);

     label006:
        r17 = r20;

        r18 = r20;

        r19 = r20;

     label007:
        r21 = new java.util.ArrayList;

     label008:
        r17 = r20;

        r18 = r20;

        r19 = r20;

     label009:
        specialinvoke r21.<java.util.ArrayList: void <init>()>();

     label010:
        r17 = r20;

        r18 = r20;

        r19 = r20;

     label011:
        r22 = virtualinvoke r20.<android.util.jar.StrictJarFile: java.util.zip.ZipEntry findEntry(java.lang.String)>("AndroidManifest.xml");

     label012:
        if r22 == null goto label108;

        r17 = r20;

        r18 = r20;

        r19 = r20;

     label013:
        r23 = staticinvoke <android.util.apk.ApkSignatureVerifier: java.security.cert.Certificate[][] loadCertificates(android.util.jar.StrictJarFile,java.util.zip.ZipEntry)>(r20, r22);

     label014:
        r17 = r20;

        r18 = r20;

        r19 = r20;

     label015:
        z1 = staticinvoke <com.android.internal.util.ArrayUtils: boolean isEmpty(java.lang.Object[])>(r23);

     label016:
        if z1 != 0 goto label090;

        r17 = r20;

        r18 = r20;

        r19 = r20;

     label017:
        r24 = staticinvoke <android.util.apk.ApkSignatureVerifier: android.content.pm.Signature[] convertToSignatures(java.security.cert.Certificate[][])>(r23);

     label018:
        if z0 == 0 goto label087;

        r17 = r20;

        r18 = r20;

        r19 = r20;

     label019:
        r25 = virtualinvoke r20.<android.util.jar.StrictJarFile: java.util.Iterator iterator()>();

     label020:
        r17 = r20;

        r18 = r20;

        r19 = r20;

     label021:
        $z8 = interfaceinvoke r25.<java.util.Iterator: boolean hasNext()>();

        if $z8 == 0 goto label038;

     label022:
        r17 = r20;

        r18 = r20;

        r19 = r20;

     label023:
        $r10 = interfaceinvoke r25.<java.util.Iterator: java.lang.Object next()>();

        r26 = (java.util.zip.ZipEntry) $r10;

     label024:
        r17 = r20;

        r18 = r20;

        r19 = r20;

     label025:
        $z5 = virtualinvoke r26.<java.util.zip.ZipEntry: boolean isDirectory()>();

        if $z5 == 0 goto label027;

     label026:
        goto label020;

     label027:
        r17 = r20;

        r18 = r20;

        r19 = r20;

     label028:
        r0 = virtualinvoke r26.<java.util.zip.ZipEntry: java.lang.String getName()>();

     label029:
        r17 = r20;

        r18 = r20;

        r19 = r20;

     label030:
        $z6 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>("META-INF/");

        if $z6 == 0 goto label032;

     label031:
        goto label020;

     label032:
        r17 = r20;

        r18 = r20;

        r19 = r20;

     label033:
        $z7 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("AndroidManifest.xml");

        if $z7 == 0 goto label035;

     label034:
        goto label020;

     label035:
        r17 = r20;

        r18 = r20;

        r19 = r20;

     label036:
        interfaceinvoke r21.<java.util.List: boolean add(java.lang.Object)>(r26);

     label037:
        goto label020;

     label038:
        r17 = r20;

        r18 = r20;

        r19 = r20;

     label039:
        r27 = interfaceinvoke r21.<java.util.List: java.util.Iterator iterator()>();

     label040:
        r17 = r20;

        r18 = r20;

        r19 = r20;

     label041:
        $z2 = interfaceinvoke r27.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label087;

     label042:
        r17 = r20;

        r18 = r20;

        r19 = r20;

     label043:
        $r4 = interfaceinvoke r27.<java.util.Iterator: java.lang.Object next()>();

        r28 = (java.util.zip.ZipEntry) $r4;

     label044:
        r17 = r20;

        r18 = r20;

        r19 = r20;

     label045:
        r29 = staticinvoke <android.util.apk.ApkSignatureVerifier: java.security.cert.Certificate[][] loadCertificates(android.util.jar.StrictJarFile,java.util.zip.ZipEntry)>(r20, r28);

     label046:
        r17 = r20;

        r18 = r20;

        r19 = r20;

     label047:
        $z3 = staticinvoke <com.android.internal.util.ArrayUtils: boolean isEmpty(java.lang.Object[])>(r29);

        if $z3 != 0 goto label069;

     label048:
        r17 = r20;

        r18 = r20;

        r19 = r20;

     label049:
        $r7 = staticinvoke <android.util.apk.ApkSignatureVerifier: android.content.pm.Signature[] convertToSignatures(java.security.cert.Certificate[][])>(r29);

        $z4 = staticinvoke <android.content.pm.Signature: boolean areExactMatch(android.content.pm.Signature[],android.content.pm.Signature[])>(r24, $r7);

        if $z4 == 0 goto label051;

     label050:
        goto label040;

     label051:
        r17 = r20;

        r18 = r20;

        r19 = r20;

     label052:
        r30 = new android.content.pm.PackageParser$PackageParserException;

     label053:
        r17 = r20;

        r18 = r20;

        r19 = r20;

     label054:
        r31 = new java.lang.StringBuilder;

     label055:
        r17 = r20;

        r18 = r20;

        r19 = r20;

     label056:
        specialinvoke r31.<java.lang.StringBuilder: void <init>()>();

     label057:
        r17 = r20;

        r18 = r20;

        r19 = r20;

     label058:
        virtualinvoke r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package ");

     label059:
        r17 = r20;

        r18 = r20;

        r19 = r20;

     label060:
        virtualinvoke r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r16);

     label061:
        r17 = r20;

        r18 = r20;

        r19 = r20;

     label062:
        virtualinvoke r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has mismatched certificates at entry ");

     label063:
        r17 = r20;

        r18 = r20;

        r19 = r20;

     label064:
        $r8 = virtualinvoke r28.<java.util.zip.ZipEntry: java.lang.String getName()>();

        virtualinvoke r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

     label065:
        r17 = r20;

        r18 = r20;

        r19 = r20;

     label066:
        $r9 = virtualinvoke r31.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r30.<android.content.pm.PackageParser$PackageParserException: void <init>(int,java.lang.String)>(-104, $r9);

     label067:
        r17 = r20;

        r18 = r20;

        r19 = r20;

     label068:
        throw r30;

     label069:
        r17 = r20;

        r18 = r20;

        r19 = r20;

     label070:
        r32 = new android.content.pm.PackageParser$PackageParserException;

     label071:
        r17 = r20;

        r18 = r20;

        r19 = r20;

     label072:
        r33 = new java.lang.StringBuilder;

     label073:
        r17 = r20;

        r18 = r20;

        r19 = r20;

     label074:
        specialinvoke r33.<java.lang.StringBuilder: void <init>()>();

     label075:
        r17 = r20;

        r18 = r20;

        r19 = r20;

     label076:
        virtualinvoke r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package ");

     label077:
        r17 = r20;

        r18 = r20;

        r19 = r20;

     label078:
        virtualinvoke r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r16);

     label079:
        r17 = r20;

        r18 = r20;

        r19 = r20;

     label080:
        virtualinvoke r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has no certificates at entry ");

     label081:
        r17 = r20;

        r18 = r20;

        r19 = r20;

     label082:
        $r5 = virtualinvoke r28.<java.util.zip.ZipEntry: java.lang.String getName()>();

        virtualinvoke r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

     label083:
        r17 = r20;

        r18 = r20;

        r19 = r20;

     label084:
        $r6 = virtualinvoke r33.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r32.<android.content.pm.PackageParser$PackageParserException: void <init>(int,java.lang.String)>(-103, $r6);

     label085:
        r17 = r20;

        r18 = r20;

        r19 = r20;

     label086:
        throw r32;

     label087:
        r17 = r20;

        r18 = r20;

        r19 = r20;

     label088:
        $r3 = new android.content.pm.PackageParser$SigningDetails;

        specialinvoke $r3.<android.content.pm.PackageParser$SigningDetails: void <init>(android.content.pm.Signature[],int)>(r24, 1);

     label089:
        staticinvoke <android.os.Trace: void traceEnd(long)>(262144L);

        staticinvoke <android.util.apk.ApkSignatureVerifier: void closeQuietly(android.util.jar.StrictJarFile)>(r20);

        return $r3;

     label090:
        r17 = r20;

        r18 = r20;

        r19 = r20;

     label091:
        r35 = new android.content.pm.PackageParser$PackageParserException;

     label092:
        r17 = r20;

        r18 = r20;

        r19 = r20;

     label093:
        r36 = new java.lang.StringBuilder;

     label094:
        r17 = r20;

        r18 = r20;

        r19 = r20;

     label095:
        specialinvoke r36.<java.lang.StringBuilder: void <init>()>();

     label096:
        r17 = r20;

        r18 = r20;

        r19 = r20;

     label097:
        virtualinvoke r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package ");

     label098:
        r17 = r20;

        r18 = r20;

        r19 = r20;

     label099:
        virtualinvoke r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r16);

     label100:
        r17 = r20;

        r18 = r20;

        r19 = r20;

     label101:
        virtualinvoke r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has no certificates at entry ");

     label102:
        r17 = r20;

        r18 = r20;

        r19 = r20;

     label103:
        virtualinvoke r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("AndroidManifest.xml");

     label104:
        r17 = r20;

        r18 = r20;

        r19 = r20;

     label105:
        $r2 = virtualinvoke r36.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r35.<android.content.pm.PackageParser$PackageParserException: void <init>(int,java.lang.String)>(-103, $r2);

     label106:
        r17 = r20;

        r18 = r20;

        r19 = r20;

     label107:
        throw r35;

     label108:
        r17 = r20;

        r18 = r20;

        r19 = r20;

     label109:
        r37 = new android.content.pm.PackageParser$PackageParserException;

     label110:
        r17 = r20;

        r18 = r20;

        r19 = r20;

     label111:
        r38 = new java.lang.StringBuilder;

     label112:
        r17 = r20;

        r18 = r20;

        r19 = r20;

     label113:
        specialinvoke r38.<java.lang.StringBuilder: void <init>()>();

     label114:
        r17 = r20;

        r18 = r20;

        r19 = r20;

     label115:
        virtualinvoke r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package ");

     label116:
        r17 = r20;

        r18 = r20;

        r19 = r20;

     label117:
        virtualinvoke r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r16);

     label118:
        r17 = r20;

        r18 = r20;

        r19 = r20;

     label119:
        virtualinvoke r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has no manifest");

     label120:
        r17 = r20;

        r18 = r20;

        r19 = r20;

     label121:
        $r1 = virtualinvoke r38.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r37.<android.content.pm.PackageParser$PackageParserException: void <init>(int,java.lang.String)>(-101, $r1);

     label122:
        r17 = r20;

        r18 = r20;

        r19 = r20;

     label123:
        throw r37;

     label124:
        $r11 := @caughtexception;

        goto label153;

     label125:
        $r12 := @caughtexception;

        r17 = r18;

     label126:
        r41 = new android.content.pm.PackageParser$PackageParserException;

     label127:
        r17 = r18;

     label128:
        r42 = new java.lang.StringBuilder;

     label129:
        r17 = r18;

     label130:
        specialinvoke r42.<java.lang.StringBuilder: void <init>()>();

     label131:
        r17 = r18;

     label132:
        virtualinvoke r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to collect certificates from ");

     label133:
        r17 = r18;

     label134:
        virtualinvoke r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r16);

     label135:
        r17 = r18;

     label136:
        $r13 = virtualinvoke r42.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r41.<android.content.pm.PackageParser$PackageParserException: void <init>(int,java.lang.String,java.lang.Throwable)>(-103, $r13, $r12);

     label137:
        r17 = r18;

     label138:
        throw r41;

     label139:
        $r14 := @caughtexception;

        r17 = r19;

     label140:
        r44 = new android.content.pm.PackageParser$PackageParserException;

     label141:
        r17 = r19;

     label142:
        r45 = new java.lang.StringBuilder;

     label143:
        r17 = r19;

     label144:
        specialinvoke r45.<java.lang.StringBuilder: void <init>()>();

     label145:
        r17 = r19;

     label146:
        virtualinvoke r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to collect certificates from ");

     label147:
        r17 = r19;

     label148:
        virtualinvoke r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r16);

     label149:
        r17 = r19;

     label150:
        $r15 = virtualinvoke r45.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r44.<android.content.pm.PackageParser$PackageParserException: void <init>(int,java.lang.String,java.lang.Throwable)>(-105, $r15, $r14);

     label151:
        r17 = r19;

     label152:
        throw r44;

     label153:
        staticinvoke <android.os.Trace: void traceEnd(long)>(262144L);

        staticinvoke <android.util.apk.ApkSignatureVerifier: void closeQuietly(android.util.jar.StrictJarFile)>(r17);

        throw $r11;

        catch java.security.GeneralSecurityException from label001 to label002 with label139;
        catch java.io.IOException from label001 to label002 with label125;
        catch java.lang.RuntimeException from label001 to label002 with label125;
        catch java.lang.Throwable from label001 to label002 with label124;
        catch java.security.GeneralSecurityException from label003 to label004 with label139;
        catch java.io.IOException from label003 to label004 with label125;
        catch java.lang.RuntimeException from label003 to label004 with label125;
        catch java.lang.Throwable from label003 to label004 with label124;
        catch java.security.GeneralSecurityException from label005 to label006 with label139;
        catch java.io.IOException from label005 to label006 with label125;
        catch java.lang.RuntimeException from label005 to label006 with label125;
        catch java.lang.Throwable from label005 to label006 with label124;
        catch java.security.GeneralSecurityException from label007 to label008 with label139;
        catch java.io.IOException from label007 to label008 with label125;
        catch java.lang.RuntimeException from label007 to label008 with label125;
        catch java.lang.Throwable from label007 to label008 with label124;
        catch java.security.GeneralSecurityException from label009 to label010 with label139;
        catch java.io.IOException from label009 to label010 with label125;
        catch java.lang.RuntimeException from label009 to label010 with label125;
        catch java.lang.Throwable from label009 to label010 with label124;
        catch java.security.GeneralSecurityException from label011 to label012 with label139;
        catch java.io.IOException from label011 to label012 with label125;
        catch java.lang.RuntimeException from label011 to label012 with label125;
        catch java.lang.Throwable from label011 to label012 with label124;
        catch java.security.GeneralSecurityException from label013 to label014 with label139;
        catch java.io.IOException from label013 to label014 with label125;
        catch java.lang.RuntimeException from label013 to label014 with label125;
        catch java.lang.Throwable from label013 to label014 with label124;
        catch java.security.GeneralSecurityException from label015 to label016 with label139;
        catch java.io.IOException from label015 to label016 with label125;
        catch java.lang.RuntimeException from label015 to label016 with label125;
        catch java.lang.Throwable from label015 to label016 with label124;
        catch java.security.GeneralSecurityException from label017 to label018 with label139;
        catch java.io.IOException from label017 to label018 with label125;
        catch java.lang.RuntimeException from label017 to label018 with label125;
        catch java.lang.Throwable from label017 to label018 with label124;
        catch java.security.GeneralSecurityException from label019 to label020 with label139;
        catch java.io.IOException from label019 to label020 with label125;
        catch java.lang.RuntimeException from label019 to label020 with label125;
        catch java.lang.Throwable from label019 to label020 with label124;
        catch java.security.GeneralSecurityException from label021 to label022 with label139;
        catch java.io.IOException from label021 to label022 with label125;
        catch java.lang.RuntimeException from label021 to label022 with label125;
        catch java.lang.Throwable from label021 to label022 with label124;
        catch java.security.GeneralSecurityException from label023 to label024 with label139;
        catch java.io.IOException from label023 to label024 with label125;
        catch java.lang.RuntimeException from label023 to label024 with label125;
        catch java.lang.Throwable from label023 to label024 with label124;
        catch java.security.GeneralSecurityException from label025 to label026 with label139;
        catch java.io.IOException from label025 to label026 with label125;
        catch java.lang.RuntimeException from label025 to label026 with label125;
        catch java.lang.Throwable from label025 to label026 with label124;
        catch java.security.GeneralSecurityException from label028 to label029 with label139;
        catch java.io.IOException from label028 to label029 with label125;
        catch java.lang.RuntimeException from label028 to label029 with label125;
        catch java.lang.Throwable from label028 to label029 with label124;
        catch java.security.GeneralSecurityException from label030 to label031 with label139;
        catch java.io.IOException from label030 to label031 with label125;
        catch java.lang.RuntimeException from label030 to label031 with label125;
        catch java.lang.Throwable from label030 to label031 with label124;
        catch java.security.GeneralSecurityException from label033 to label034 with label139;
        catch java.io.IOException from label033 to label034 with label125;
        catch java.lang.RuntimeException from label033 to label034 with label125;
        catch java.lang.Throwable from label033 to label034 with label124;
        catch java.security.GeneralSecurityException from label036 to label037 with label139;
        catch java.io.IOException from label036 to label037 with label125;
        catch java.lang.RuntimeException from label036 to label037 with label125;
        catch java.lang.Throwable from label036 to label037 with label124;
        catch java.security.GeneralSecurityException from label039 to label040 with label139;
        catch java.io.IOException from label039 to label040 with label125;
        catch java.lang.RuntimeException from label039 to label040 with label125;
        catch java.lang.Throwable from label039 to label040 with label124;
        catch java.security.GeneralSecurityException from label041 to label042 with label139;
        catch java.io.IOException from label041 to label042 with label125;
        catch java.lang.RuntimeException from label041 to label042 with label125;
        catch java.lang.Throwable from label041 to label042 with label124;
        catch java.security.GeneralSecurityException from label043 to label044 with label139;
        catch java.io.IOException from label043 to label044 with label125;
        catch java.lang.RuntimeException from label043 to label044 with label125;
        catch java.lang.Throwable from label043 to label044 with label124;
        catch java.security.GeneralSecurityException from label045 to label046 with label139;
        catch java.io.IOException from label045 to label046 with label125;
        catch java.lang.RuntimeException from label045 to label046 with label125;
        catch java.lang.Throwable from label045 to label046 with label124;
        catch java.security.GeneralSecurityException from label047 to label048 with label139;
        catch java.io.IOException from label047 to label048 with label125;
        catch java.lang.RuntimeException from label047 to label048 with label125;
        catch java.lang.Throwable from label047 to label048 with label124;
        catch java.security.GeneralSecurityException from label049 to label050 with label139;
        catch java.io.IOException from label049 to label050 with label125;
        catch java.lang.RuntimeException from label049 to label050 with label125;
        catch java.lang.Throwable from label049 to label050 with label124;
        catch java.security.GeneralSecurityException from label052 to label053 with label139;
        catch java.io.IOException from label052 to label053 with label125;
        catch java.lang.RuntimeException from label052 to label053 with label125;
        catch java.lang.Throwable from label052 to label053 with label124;
        catch java.security.GeneralSecurityException from label054 to label055 with label139;
        catch java.io.IOException from label054 to label055 with label125;
        catch java.lang.RuntimeException from label054 to label055 with label125;
        catch java.lang.Throwable from label054 to label055 with label124;
        catch java.security.GeneralSecurityException from label056 to label057 with label139;
        catch java.io.IOException from label056 to label057 with label125;
        catch java.lang.RuntimeException from label056 to label057 with label125;
        catch java.lang.Throwable from label056 to label057 with label124;
        catch java.security.GeneralSecurityException from label058 to label059 with label139;
        catch java.io.IOException from label058 to label059 with label125;
        catch java.lang.RuntimeException from label058 to label059 with label125;
        catch java.lang.Throwable from label058 to label059 with label124;
        catch java.security.GeneralSecurityException from label060 to label061 with label139;
        catch java.io.IOException from label060 to label061 with label125;
        catch java.lang.RuntimeException from label060 to label061 with label125;
        catch java.lang.Throwable from label060 to label061 with label124;
        catch java.security.GeneralSecurityException from label062 to label063 with label139;
        catch java.io.IOException from label062 to label063 with label125;
        catch java.lang.RuntimeException from label062 to label063 with label125;
        catch java.lang.Throwable from label062 to label063 with label124;
        catch java.security.GeneralSecurityException from label064 to label065 with label139;
        catch java.io.IOException from label064 to label065 with label125;
        catch java.lang.RuntimeException from label064 to label065 with label125;
        catch java.lang.Throwable from label064 to label065 with label124;
        catch java.security.GeneralSecurityException from label066 to label067 with label139;
        catch java.io.IOException from label066 to label067 with label125;
        catch java.lang.RuntimeException from label066 to label067 with label125;
        catch java.lang.Throwable from label066 to label067 with label124;
        catch java.security.GeneralSecurityException from label068 to label069 with label139;
        catch java.io.IOException from label068 to label069 with label125;
        catch java.lang.RuntimeException from label068 to label069 with label125;
        catch java.lang.Throwable from label068 to label069 with label124;
        catch java.security.GeneralSecurityException from label070 to label071 with label139;
        catch java.io.IOException from label070 to label071 with label125;
        catch java.lang.RuntimeException from label070 to label071 with label125;
        catch java.lang.Throwable from label070 to label071 with label124;
        catch java.security.GeneralSecurityException from label072 to label073 with label139;
        catch java.io.IOException from label072 to label073 with label125;
        catch java.lang.RuntimeException from label072 to label073 with label125;
        catch java.lang.Throwable from label072 to label073 with label124;
        catch java.security.GeneralSecurityException from label074 to label075 with label139;
        catch java.io.IOException from label074 to label075 with label125;
        catch java.lang.RuntimeException from label074 to label075 with label125;
        catch java.lang.Throwable from label074 to label075 with label124;
        catch java.security.GeneralSecurityException from label076 to label077 with label139;
        catch java.io.IOException from label076 to label077 with label125;
        catch java.lang.RuntimeException from label076 to label077 with label125;
        catch java.lang.Throwable from label076 to label077 with label124;
        catch java.security.GeneralSecurityException from label078 to label079 with label139;
        catch java.io.IOException from label078 to label079 with label125;
        catch java.lang.RuntimeException from label078 to label079 with label125;
        catch java.lang.Throwable from label078 to label079 with label124;
        catch java.security.GeneralSecurityException from label080 to label081 with label139;
        catch java.io.IOException from label080 to label081 with label125;
        catch java.lang.RuntimeException from label080 to label081 with label125;
        catch java.lang.Throwable from label080 to label081 with label124;
        catch java.security.GeneralSecurityException from label082 to label083 with label139;
        catch java.io.IOException from label082 to label083 with label125;
        catch java.lang.RuntimeException from label082 to label083 with label125;
        catch java.lang.Throwable from label082 to label083 with label124;
        catch java.security.GeneralSecurityException from label084 to label085 with label139;
        catch java.io.IOException from label084 to label085 with label125;
        catch java.lang.RuntimeException from label084 to label085 with label125;
        catch java.lang.Throwable from label084 to label085 with label124;
        catch java.security.GeneralSecurityException from label086 to label087 with label139;
        catch java.io.IOException from label086 to label087 with label125;
        catch java.lang.RuntimeException from label086 to label087 with label125;
        catch java.lang.Throwable from label086 to label087 with label124;
        catch java.security.GeneralSecurityException from label088 to label089 with label139;
        catch java.io.IOException from label088 to label089 with label125;
        catch java.lang.RuntimeException from label088 to label089 with label125;
        catch java.lang.Throwable from label088 to label089 with label124;
        catch java.security.GeneralSecurityException from label091 to label092 with label139;
        catch java.io.IOException from label091 to label092 with label125;
        catch java.lang.RuntimeException from label091 to label092 with label125;
        catch java.lang.Throwable from label091 to label092 with label124;
        catch java.security.GeneralSecurityException from label093 to label094 with label139;
        catch java.io.IOException from label093 to label094 with label125;
        catch java.lang.RuntimeException from label093 to label094 with label125;
        catch java.lang.Throwable from label093 to label094 with label124;
        catch java.security.GeneralSecurityException from label095 to label096 with label139;
        catch java.io.IOException from label095 to label096 with label125;
        catch java.lang.RuntimeException from label095 to label096 with label125;
        catch java.lang.Throwable from label095 to label096 with label124;
        catch java.security.GeneralSecurityException from label097 to label098 with label139;
        catch java.io.IOException from label097 to label098 with label125;
        catch java.lang.RuntimeException from label097 to label098 with label125;
        catch java.lang.Throwable from label097 to label098 with label124;
        catch java.security.GeneralSecurityException from label099 to label100 with label139;
        catch java.io.IOException from label099 to label100 with label125;
        catch java.lang.RuntimeException from label099 to label100 with label125;
        catch java.lang.Throwable from label099 to label100 with label124;
        catch java.security.GeneralSecurityException from label101 to label102 with label139;
        catch java.io.IOException from label101 to label102 with label125;
        catch java.lang.RuntimeException from label101 to label102 with label125;
        catch java.lang.Throwable from label101 to label102 with label124;
        catch java.security.GeneralSecurityException from label103 to label104 with label139;
        catch java.io.IOException from label103 to label104 with label125;
        catch java.lang.RuntimeException from label103 to label104 with label125;
        catch java.lang.Throwable from label103 to label104 with label124;
        catch java.security.GeneralSecurityException from label105 to label106 with label139;
        catch java.io.IOException from label105 to label106 with label125;
        catch java.lang.RuntimeException from label105 to label106 with label125;
        catch java.lang.Throwable from label105 to label106 with label124;
        catch java.security.GeneralSecurityException from label107 to label108 with label139;
        catch java.io.IOException from label107 to label108 with label125;
        catch java.lang.RuntimeException from label107 to label108 with label125;
        catch java.lang.Throwable from label107 to label108 with label124;
        catch java.security.GeneralSecurityException from label109 to label110 with label139;
        catch java.io.IOException from label109 to label110 with label125;
        catch java.lang.RuntimeException from label109 to label110 with label125;
        catch java.lang.Throwable from label109 to label110 with label124;
        catch java.security.GeneralSecurityException from label111 to label112 with label139;
        catch java.io.IOException from label111 to label112 with label125;
        catch java.lang.RuntimeException from label111 to label112 with label125;
        catch java.lang.Throwable from label111 to label112 with label124;
        catch java.security.GeneralSecurityException from label113 to label114 with label139;
        catch java.io.IOException from label113 to label114 with label125;
        catch java.lang.RuntimeException from label113 to label114 with label125;
        catch java.lang.Throwable from label113 to label114 with label124;
        catch java.security.GeneralSecurityException from label115 to label116 with label139;
        catch java.io.IOException from label115 to label116 with label125;
        catch java.lang.RuntimeException from label115 to label116 with label125;
        catch java.lang.Throwable from label115 to label116 with label124;
        catch java.security.GeneralSecurityException from label117 to label118 with label139;
        catch java.io.IOException from label117 to label118 with label125;
        catch java.lang.RuntimeException from label117 to label118 with label125;
        catch java.lang.Throwable from label117 to label118 with label124;
        catch java.security.GeneralSecurityException from label119 to label120 with label139;
        catch java.io.IOException from label119 to label120 with label125;
        catch java.lang.RuntimeException from label119 to label120 with label125;
        catch java.lang.Throwable from label119 to label120 with label124;
        catch java.security.GeneralSecurityException from label121 to label122 with label139;
        catch java.io.IOException from label121 to label122 with label125;
        catch java.lang.RuntimeException from label121 to label122 with label125;
        catch java.lang.Throwable from label121 to label122 with label124;
        catch java.security.GeneralSecurityException from label123 to label124 with label139;
        catch java.io.IOException from label123 to label124 with label125;
        catch java.lang.RuntimeException from label123 to label124 with label125;
        catch java.lang.Throwable from label123 to label124 with label124;
        catch java.lang.Throwable from label126 to label127 with label124;
        catch java.lang.Throwable from label128 to label129 with label124;
        catch java.lang.Throwable from label130 to label131 with label124;
        catch java.lang.Throwable from label132 to label133 with label124;
        catch java.lang.Throwable from label134 to label135 with label124;
        catch java.lang.Throwable from label136 to label137 with label124;
        catch java.lang.Throwable from label138 to label139 with label124;
        catch java.lang.Throwable from label140 to label141 with label124;
        catch java.lang.Throwable from label142 to label143 with label124;
        catch java.lang.Throwable from label144 to label145 with label124;
        catch java.lang.Throwable from label146 to label147 with label124;
        catch java.lang.Throwable from label148 to label149 with label124;
        catch java.lang.Throwable from label150 to label151 with label124;
        catch java.lang.Throwable from label152 to label153 with label124;
    }

    private static android.content.pm.PackageParser$SigningDetails verifyV2Signature(java.lang.String, boolean) throws android.util.apk.SignatureNotFoundException, android.content.pm.PackageParser$PackageParserException
    {
        boolean z0;
        java.lang.StringBuilder r1;
        android.content.pm.PackageParser$SigningDetails $r2;
        android.content.pm.Signature[] $r3;
        java.lang.Exception $r4;
        java.lang.String $r8, r11, r12;
        java.lang.Throwable $r9;
        android.util.apk.SignatureNotFoundException $r10;
        java.security.cert.X509Certificate[][] r13;
        android.content.pm.PackageParser$PackageParserException r16;

        r11 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        if z0 == 0 goto label01;

        r12 = "verifyV2";

        goto label02;

     label01:
        r12 = "certsOnlyV2";

     label02:
        staticinvoke <android.os.Trace: void traceBegin(long,java.lang.String)>(262144L, r12);

        if z0 == 0 goto label05;

     label03:
        r13 = staticinvoke <android.util.apk.ApkSignatureSchemeV2Verifier: java.security.cert.X509Certificate[][] verify(java.lang.String)>(r11);

     label04:
        goto label06;

     label05:
        r13 = staticinvoke <android.util.apk.ApkSignatureSchemeV2Verifier: java.security.cert.X509Certificate[][] unsafeGetCertsWithoutVerification(java.lang.String)>(r11);

     label06:
        $r2 = new android.content.pm.PackageParser$SigningDetails;

        $r3 = staticinvoke <android.util.apk.ApkSignatureVerifier: android.content.pm.Signature[] convertToSignatures(java.security.cert.Certificate[][])>(r13);

        specialinvoke $r2.<android.content.pm.PackageParser$SigningDetails: void <init>(android.content.pm.Signature[],int)>($r3, 2);

     label07:
        staticinvoke <android.os.Trace: void traceEnd(long)>(262144L);

        return $r2;

     label08:
        $r9 := @caughtexception;

        goto label13;

     label09:
        $r4 := @caughtexception;

     label10:
        r16 = new android.content.pm.PackageParser$PackageParserException;

        r1 = new java.lang.StringBuilder;

        specialinvoke r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to collect certificates from ");

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r11);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" using APK Signature Scheme v2");

        $r8 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r16.<android.content.pm.PackageParser$PackageParserException: void <init>(int,java.lang.String,java.lang.Throwable)>(-103, $r8, $r4);

        throw r16;

     label11:
        $r10 := @caughtexception;

     label12:
        throw $r10;

     label13:
        staticinvoke <android.os.Trace: void traceEnd(long)>(262144L);

        throw $r9;

        catch android.util.apk.SignatureNotFoundException from label03 to label04 with label11;
        catch java.lang.Exception from label03 to label04 with label09;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch android.util.apk.SignatureNotFoundException from label05 to label06 with label11;
        catch java.lang.Exception from label05 to label06 with label09;
        catch java.lang.Throwable from label05 to label06 with label08;
        catch android.util.apk.SignatureNotFoundException from label06 to label07 with label11;
        catch java.lang.Exception from label06 to label07 with label09;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label10 to label11 with label08;
        catch java.lang.Throwable from label12 to label13 with label08;
    }

    private static android.content.pm.PackageParser$SigningDetails verifyV3AndBelowSignatures(java.lang.String, int, boolean) throws android.content.pm.PackageParser$PackageParserException
    {
        java.lang.String r0, $r6, $r13, $r19, $r26;
        int i0;
        boolean z0;
        android.util.apk.SignatureNotFoundException $r1, $r14;
        java.lang.StringBuilder $r2, $r7, $r15, $r20;
        android.content.pm.PackageParser$PackageParserException $r5, $r12, $r18, $r25;
        android.content.pm.PackageParser$SigningDetails $r27, r28, r30;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

     label01:
        r28 = staticinvoke <android.util.apk.ApkSignatureVerifier: android.content.pm.PackageParser$SigningDetails verifyV3Signature(java.lang.String,boolean)>(r0, z0);

     label02:
        return r28;

     label03:
        $r1 := @caughtexception;

        if i0 >= 3 goto label10;

        if i0 > 2 goto label09;

     label04:
        r30 = staticinvoke <android.util.apk.ApkSignatureVerifier: android.content.pm.PackageParser$SigningDetails verifyV2Signature(java.lang.String,boolean)>(r0, z0);

     label05:
        return r30;

     label06:
        $r14 := @caughtexception;

        if i0 >= 2 goto label08;

        if i0 > 1 goto label07;

        $r27 = staticinvoke <android.util.apk.ApkSignatureVerifier: android.content.pm.PackageParser$SigningDetails verifyV1Signature(java.lang.String,boolean)>(r0, z0);

        return $r27;

     label07:
        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No signature found in package of version ");

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" or newer for package ");

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r25 = new android.content.pm.PackageParser$PackageParserException;

        $r26 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r25.<android.content.pm.PackageParser$PackageParserException: void <init>(int,java.lang.String)>(-103, $r26);

        throw $r25;

     label08:
        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No APK Signature Scheme v2 signature in package ");

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r18 = new android.content.pm.PackageParser$PackageParserException;

        $r19 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r18.<android.content.pm.PackageParser$PackageParserException: void <init>(int,java.lang.String,java.lang.Throwable)>(-103, $r19, $r14);

        throw $r18;

     label09:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No signature found in package of version ");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" or newer for package ");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r12 = new android.content.pm.PackageParser$PackageParserException;

        $r13 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<android.content.pm.PackageParser$PackageParserException: void <init>(int,java.lang.String)>(-103, $r13);

        throw $r12;

     label10:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No APK Signature Scheme v3 signature in package ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r5 = new android.content.pm.PackageParser$PackageParserException;

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<android.content.pm.PackageParser$PackageParserException: void <init>(int,java.lang.String,java.lang.Throwable)>(-103, $r6, $r1);

        throw $r5;

        catch android.util.apk.SignatureNotFoundException from label01 to label02 with label03;
        catch android.util.apk.SignatureNotFoundException from label04 to label05 with label06;
    }

    private static android.content.pm.PackageParser$SigningDetails verifyV3Signature(java.lang.String, boolean) throws android.util.apk.SignatureNotFoundException, android.content.pm.PackageParser$PackageParserException
    {
        boolean z0;
        android.content.pm.Signature[] r0, r27, r28;
        java.lang.Object[][] $r1;
        java.security.cert.X509Certificate[] $r2;
        android.util.apk.ApkSignatureSchemeV3Verifier$VerifiedProofOfRotation $r3, $r5, $r7, $r12;
        java.util.List $r6, $r8, $r13;
        int $i0, $i1, $i2, i3;
        java.lang.Object $r9, $r15;
        java.security.cert.X509Certificate $r10;
        byte[] $r11;
        android.content.pm.Signature $r14, r36;
        java.lang.Integer $r16;
        java.lang.Exception $r17;
        java.lang.String $r21, r24, r25;
        java.lang.Throwable $r22;
        android.util.apk.SignatureNotFoundException $r23;
        android.util.apk.ApkSignatureSchemeV3Verifier$VerifiedSigner r26;
        android.content.pm.PackageParser$SigningDetails r37;
        java.lang.StringBuilder r38;
        android.content.pm.PackageParser$PackageParserException r39;
        java.security.cert.Certificate[][] r40;

        r24 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        if z0 == 0 goto label01;

        r25 = "verifyV3";

        goto label02;

     label01:
        r25 = "certsOnlyV3";

     label02:
        staticinvoke <android.os.Trace: void traceBegin(long,java.lang.String)>(262144L, r25);

        if z0 == 0 goto label05;

     label03:
        r26 = staticinvoke <android.util.apk.ApkSignatureSchemeV3Verifier: android.util.apk.ApkSignatureSchemeV3Verifier$VerifiedSigner verify(java.lang.String)>(r24);

     label04:
        goto label06;

     label05:
        r26 = staticinvoke <android.util.apk.ApkSignatureSchemeV3Verifier: android.util.apk.ApkSignatureSchemeV3Verifier$VerifiedSigner unsafeGetCertsWithoutVerification(java.lang.String)>(r24);

     label06:
        $r1 = newarray (java.security.cert.Certificate[])[1];

        $r2 = r26.<android.util.apk.ApkSignatureSchemeV3Verifier$VerifiedSigner: java.security.cert.X509Certificate[] certs>;

        $r1[0] = $r2;

        r40 = (java.security.cert.Certificate[][]) $r1;

        r0 = staticinvoke <android.util.apk.ApkSignatureVerifier: android.content.pm.Signature[] convertToSignatures(java.security.cert.Certificate[][])>(r40);

     label07:
        r27 = null;

     label08:
        $r3 = r26.<android.util.apk.ApkSignatureSchemeV3Verifier$VerifiedSigner: android.util.apk.ApkSignatureSchemeV3Verifier$VerifiedProofOfRotation por>;

        if $r3 == null goto label15;

        $r5 = r26.<android.util.apk.ApkSignatureSchemeV3Verifier$VerifiedSigner: android.util.apk.ApkSignatureSchemeV3Verifier$VerifiedProofOfRotation por>;

        $r6 = $r5.<android.util.apk.ApkSignatureSchemeV3Verifier$VerifiedProofOfRotation: java.util.List certs>;

        $i0 = interfaceinvoke $r6.<java.util.List: int size()>();

        r28 = newarray (android.content.pm.Signature)[$i0];

     label09:
        i3 = 0;

     label10:
        r27 = r28;

     label11:
        $i1 = lengthof r28;

        if i3 >= $i1 goto label15;

        r36 = new android.content.pm.Signature;

        $r7 = r26.<android.util.apk.ApkSignatureSchemeV3Verifier$VerifiedSigner: android.util.apk.ApkSignatureSchemeV3Verifier$VerifiedProofOfRotation por>;

        $r8 = $r7.<android.util.apk.ApkSignatureSchemeV3Verifier$VerifiedProofOfRotation: java.util.List certs>;

        $r9 = interfaceinvoke $r8.<java.util.List: java.lang.Object get(int)>(i3);

        $r10 = (java.security.cert.X509Certificate) $r9;

        $r11 = virtualinvoke $r10.<java.security.cert.X509Certificate: byte[] getEncoded()>();

        specialinvoke r36.<android.content.pm.Signature: void <init>(byte[])>($r11);

     label12:
        r28[i3] = r36;

     label13:
        $r14 = r28[i3];

        $r12 = r26.<android.util.apk.ApkSignatureSchemeV3Verifier$VerifiedSigner: android.util.apk.ApkSignatureSchemeV3Verifier$VerifiedProofOfRotation por>;

        $r13 = $r12.<android.util.apk.ApkSignatureSchemeV3Verifier$VerifiedProofOfRotation: java.util.List flagsList>;

        $r15 = interfaceinvoke $r13.<java.util.List: java.lang.Object get(int)>(i3);

        $r16 = (java.lang.Integer) $r15;

        $i2 = virtualinvoke $r16.<java.lang.Integer: int intValue()>();

        virtualinvoke $r14.<android.content.pm.Signature: void setFlags(int)>($i2);

     label14:
        i3 = i3 + 1;

        goto label10;

     label15:
        r37 = new android.content.pm.PackageParser$SigningDetails;

        specialinvoke r37.<android.content.pm.PackageParser$SigningDetails: void <init>(android.content.pm.Signature[],int,android.content.pm.Signature[])>(r0, 3, r27);

     label16:
        staticinvoke <android.os.Trace: void traceEnd(long)>(262144L);

        return r37;

     label17:
        $r22 := @caughtexception;

        goto label22;

     label18:
        $r17 := @caughtexception;

     label19:
        r39 = new android.content.pm.PackageParser$PackageParserException;

        r38 = new java.lang.StringBuilder;

        specialinvoke r38.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to collect certificates from ");

        virtualinvoke r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r24);

        virtualinvoke r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" using APK Signature Scheme v3");

        $r21 = virtualinvoke r38.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r39.<android.content.pm.PackageParser$PackageParserException: void <init>(int,java.lang.String,java.lang.Throwable)>(-103, $r21, $r17);

        throw r39;

     label20:
        $r23 := @caughtexception;

     label21:
        throw $r23;

     label22:
        staticinvoke <android.os.Trace: void traceEnd(long)>(262144L);

        throw $r22;

        catch android.util.apk.SignatureNotFoundException from label03 to label04 with label20;
        catch java.lang.Exception from label03 to label04 with label18;
        catch java.lang.Throwable from label03 to label04 with label17;
        catch android.util.apk.SignatureNotFoundException from label05 to label06 with label20;
        catch java.lang.Exception from label05 to label06 with label18;
        catch java.lang.Throwable from label05 to label06 with label17;
        catch android.util.apk.SignatureNotFoundException from label06 to label07 with label20;
        catch java.lang.Exception from label06 to label07 with label18;
        catch java.lang.Throwable from label06 to label07 with label17;
        catch android.util.apk.SignatureNotFoundException from label08 to label09 with label20;
        catch java.lang.Exception from label08 to label09 with label18;
        catch java.lang.Throwable from label08 to label09 with label17;
        catch android.util.apk.SignatureNotFoundException from label11 to label12 with label20;
        catch java.lang.Exception from label11 to label12 with label18;
        catch java.lang.Throwable from label11 to label12 with label17;
        catch android.util.apk.SignatureNotFoundException from label13 to label14 with label20;
        catch java.lang.Exception from label13 to label14 with label18;
        catch java.lang.Throwable from label13 to label14 with label17;
        catch android.util.apk.SignatureNotFoundException from label15 to label16 with label20;
        catch java.lang.Exception from label15 to label16 with label18;
        catch java.lang.Throwable from label15 to label16 with label17;
        catch java.lang.Throwable from label19 to label20 with label17;
        catch java.lang.Throwable from label21 to label22 with label17;
    }

    private static android.content.pm.PackageParser$SigningDetails verifyV4Signature(java.lang.String, int, boolean) throws android.util.apk.SignatureNotFoundException, android.content.pm.PackageParser$PackageParserException
    {
        boolean z0, $z1, $z2;
        android.content.pm.Signature[] r0, r32;
        android.util.apk.ApkSignatureSchemeV3Verifier$VerifiedSigner r1;
        int i0, $i1, $i2, $i3, $i4, i5, i6;
        java.security.cert.Certificate[][] $r2, r55;
        java.security.cert.Certificate[] $r3;
        java.security.cert.X509Certificate[] $r5;
        java.lang.String $r8, $r19, $r24, r25, r26;
        byte[] $r9, $r10, r28;
        android.content.pm.Signature $r11, $r12;
        android.util.apk.SignatureNotFoundException $r13, $r14, $r21;
        java.lang.Exception $r15;
        java.lang.Throwable $r20;
        android.util.apk.ApkSignatureSchemeV4Verifier$VerifiedSigner r27;
        java.lang.Object[][] r29;
        android.util.apk.ApkSignatureSchemeV2Verifier$VerifiedSigner r31;
        java.lang.SecurityException r46, r47, r49, r51;
        java.lang.StringBuilder r48, r50, r53;
        android.content.pm.PackageParser$SigningDetails r52;
        android.content.pm.PackageParser$PackageParserException r54;

        r25 := @parameter0: java.lang.String;

        i5 := @parameter1: int;

        z0 := @parameter2: boolean;

        if z0 == 0 goto label01;

        r26 = "verifyV4";

        goto label02;

     label01:
        r26 = "certsOnlyV4";

     label02:
        staticinvoke <android.os.Trace: void traceBegin(long,java.lang.String)>(262144L, r26);

     label03:
        r27 = staticinvoke <android.util.apk.ApkSignatureSchemeV4Verifier: android.util.apk.ApkSignatureSchemeV4Verifier$VerifiedSigner extractCertificates(java.lang.String)>(r25);

        $r2 = newarray (java.security.cert.Certificate[])[1];

        $r3 = r27.<android.util.apk.ApkSignatureSchemeV4Verifier$VerifiedSigner: java.security.cert.Certificate[] certs>;

        $r2[0] = $r3;

        r0 = staticinvoke <android.util.apk.ApkSignatureVerifier: android.content.pm.Signature[] convertToSignatures(java.security.cert.Certificate[][])>($r2);

     label04:
        if z0 == 0 goto label22;

     label05:
        r1 = staticinvoke <android.util.apk.ApkSignatureSchemeV3Verifier: android.util.apk.ApkSignatureSchemeV3Verifier$VerifiedSigner unsafeGetCertsWithoutVerification(java.lang.String)>(r25);

        r28 = r1.<android.util.apk.ApkSignatureSchemeV3Verifier$VerifiedSigner: byte[] digest>;

        r29 = newarray (java.security.cert.Certificate[])[1];

        $r5 = r1.<android.util.apk.ApkSignatureSchemeV3Verifier$VerifiedSigner: java.security.cert.X509Certificate[] certs>;

        r29[0] = $r5;

     label06:
        goto label09;

     label07:
        $r13 := @caughtexception;

     label08:
        r31 = staticinvoke <android.util.apk.ApkSignatureSchemeV2Verifier: android.util.apk.ApkSignatureSchemeV2Verifier$VerifiedSigner verify(java.lang.String,boolean)>(r25, 0);

        r28 = r31.<android.util.apk.ApkSignatureSchemeV2Verifier$VerifiedSigner: byte[] digest>;

        r29 = r31.<android.util.apk.ApkSignatureSchemeV2Verifier$VerifiedSigner: java.security.cert.X509Certificate[][] certs>;

     label09:
        r55 = (java.security.cert.Certificate[][]) r29;

        r32 = staticinvoke <android.util.apk.ApkSignatureVerifier: android.content.pm.Signature[] convertToSignatures(java.security.cert.Certificate[][])>(r55);

        $i2 = lengthof r32;

        $i1 = lengthof r0;

        if $i2 != $i1 goto label19;

     label10:
        i6 = 0;

     label11:
        i0 = lengthof r0;

     label12:
        if i6 >= i0 goto label16;

     label13:
        $r12 = r32[i6];

        $r11 = r0[i6];

        $z2 = virtualinvoke $r12.<android.content.pm.Signature: boolean equals(java.lang.Object)>($r11);

        if $z2 == 0 goto label15;

     label14:
        i6 = i6 + 1;

        goto label12;

     label15:
        r46 = new java.lang.SecurityException;

        specialinvoke r46.<java.lang.SecurityException: void <init>(java.lang.String)>("V4 signature certificate does not match V2/V3");

        throw r46;

     label16:
        $r10 = r27.<android.util.apk.ApkSignatureSchemeV4Verifier$VerifiedSigner: byte[] apkDigest>;

        $r9 = r27.<android.util.apk.ApkSignatureSchemeV4Verifier$VerifiedSigner: byte[] apkDigest>;

        $i4 = lengthof $r9;

        $z1 = staticinvoke <com.android.internal.util.ArrayUtils: boolean equals(byte[],byte[],int)>($r10, r28, $i4);

        if $z1 == 0 goto label18;

     label17:
        goto label22;

     label18:
        r47 = new java.lang.SecurityException;

        specialinvoke r47.<java.lang.SecurityException: void <init>(java.lang.String)>("APK digest in V4 signature does not match V2/V3");

        throw r47;

     label19:
        r49 = new java.lang.SecurityException;

        r48 = new java.lang.StringBuilder;

        specialinvoke r48.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid number of certificates: ");

        $i3 = lengthof r32;

        virtualinvoke r48.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r8 = virtualinvoke r48.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r49.<java.lang.SecurityException: void <init>(java.lang.String)>($r8);

        throw r49;

     label20:
        $r21 := @caughtexception;

     label21:
        r51 = new java.lang.SecurityException;

        r50 = new java.lang.StringBuilder;

        specialinvoke r50.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("V4 verification failed to collect V2/V3 certificates from : ");

        virtualinvoke r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r25);

        $r24 = virtualinvoke r50.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r51.<java.lang.SecurityException: void <init>(java.lang.String,java.lang.Throwable)>($r24, $r21);

        throw r51;

     label22:
        r52 = new android.content.pm.PackageParser$SigningDetails;

        specialinvoke r52.<android.content.pm.PackageParser$SigningDetails: void <init>(android.content.pm.Signature[],int)>(r0, 4);

     label23:
        staticinvoke <android.os.Trace: void traceEnd(long)>(262144L);

        return r52;

     label24:
        $r20 := @caughtexception;

        goto label29;

     label25:
        $r15 := @caughtexception;

     label26:
        r54 = new android.content.pm.PackageParser$PackageParserException;

        r53 = new java.lang.StringBuilder;

        specialinvoke r53.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to collect certificates from ");

        virtualinvoke r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r25);

        virtualinvoke r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" using APK Signature Scheme v4");

        $r19 = virtualinvoke r53.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r54.<android.content.pm.PackageParser$PackageParserException: void <init>(int,java.lang.String,java.lang.Throwable)>(-103, $r19, $r15);

        throw r54;

     label27:
        $r14 := @caughtexception;

     label28:
        throw $r14;

     label29:
        staticinvoke <android.os.Trace: void traceEnd(long)>(262144L);

        throw $r20;

        catch android.util.apk.SignatureNotFoundException from label03 to label04 with label27;
        catch java.lang.Exception from label03 to label04 with label25;
        catch java.lang.Throwable from label03 to label04 with label24;
        catch android.util.apk.SignatureNotFoundException from label05 to label06 with label07;
        catch java.lang.Exception from label05 to label06 with label25;
        catch java.lang.Throwable from label05 to label06 with label24;
        catch android.util.apk.SignatureNotFoundException from label08 to label09 with label20;
        catch java.lang.Exception from label08 to label09 with label25;
        catch java.lang.Throwable from label08 to label09 with label24;
        catch android.util.apk.SignatureNotFoundException from label09 to label10 with label27;
        catch java.lang.Exception from label09 to label10 with label25;
        catch java.lang.Throwable from label09 to label10 with label24;
        catch android.util.apk.SignatureNotFoundException from label11 to label12 with label27;
        catch java.lang.Exception from label11 to label12 with label25;
        catch java.lang.Throwable from label11 to label12 with label24;
        catch android.util.apk.SignatureNotFoundException from label13 to label14 with label27;
        catch java.lang.Exception from label13 to label14 with label25;
        catch java.lang.Throwable from label13 to label14 with label24;
        catch android.util.apk.SignatureNotFoundException from label15 to label16 with label27;
        catch java.lang.Exception from label15 to label16 with label25;
        catch java.lang.Throwable from label15 to label16 with label24;
        catch android.util.apk.SignatureNotFoundException from label16 to label17 with label27;
        catch java.lang.Exception from label16 to label17 with label25;
        catch java.lang.Throwable from label16 to label17 with label24;
        catch android.util.apk.SignatureNotFoundException from label18 to label19 with label27;
        catch java.lang.Exception from label18 to label19 with label25;
        catch java.lang.Throwable from label18 to label19 with label24;
        catch android.util.apk.SignatureNotFoundException from label19 to label20 with label27;
        catch java.lang.Exception from label19 to label20 with label25;
        catch java.lang.Throwable from label19 to label20 with label24;
        catch android.util.apk.SignatureNotFoundException from label21 to label22 with label27;
        catch java.lang.Exception from label21 to label22 with label25;
        catch java.lang.Throwable from label21 to label22 with label24;
        catch android.util.apk.SignatureNotFoundException from label22 to label23 with label27;
        catch java.lang.Exception from label22 to label23 with label25;
        catch java.lang.Throwable from label22 to label23 with label24;
        catch java.lang.Throwable from label26 to label27 with label24;
        catch java.lang.Throwable from label28 to label29 with label24;
    }
}
