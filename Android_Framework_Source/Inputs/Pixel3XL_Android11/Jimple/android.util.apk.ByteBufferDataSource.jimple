class android.util.apk.ByteBufferDataSource extends java.lang.Object implements android.util.apk.DataSource
{
    private final java.nio.ByteBuffer mBuf;

    void <init>(java.nio.ByteBuffer)
    {
        android.util.apk.ByteBufferDataSource r0;
        java.nio.ByteBuffer r1, $r2;

        r0 := @this: android.util.apk.ByteBufferDataSource;

        r1 := @parameter0: java.nio.ByteBuffer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer slice()>();

        r0.<android.util.apk.ByteBufferDataSource: java.nio.ByteBuffer mBuf> = $r2;

        return;
    }

    public void feedIntoDataDigester(android.util.apk.DataDigester, long, int) throws java.io.IOException, java.security.DigestException
    {
        android.util.apk.ByteBufferDataSource r0;
        long l0;
        int i1, $i2, $i3, $i4;
        java.nio.ByteBuffer r1, r2, $r3, $r5, $r7, $r9;
        java.lang.Throwable $r10;
        android.util.apk.DataDigester r11;

        r0 := @this: android.util.apk.ByteBufferDataSource;

        r11 := @parameter0: android.util.apk.DataDigester;

        l0 := @parameter1: long;

        i1 := @parameter2: int;

        r1 = r0.<android.util.apk.ByteBufferDataSource: java.nio.ByteBuffer mBuf>;

        entermonitor r1;

     label1:
        $r3 = r0.<android.util.apk.ByteBufferDataSource: java.nio.ByteBuffer mBuf>;

        virtualinvoke $r3.<java.nio.ByteBuffer: java.nio.Buffer position(int)>(0);

        $r5 = r0.<android.util.apk.ByteBufferDataSource: java.nio.ByteBuffer mBuf>;

        $i2 = (int) l0;

        $i3 = $i2 + i1;

        virtualinvoke $r5.<java.nio.ByteBuffer: java.nio.Buffer limit(int)>($i3);

        $r7 = r0.<android.util.apk.ByteBufferDataSource: java.nio.ByteBuffer mBuf>;

        $i4 = (int) l0;

        virtualinvoke $r7.<java.nio.ByteBuffer: java.nio.Buffer position(int)>($i4);

        $r9 = r0.<android.util.apk.ByteBufferDataSource: java.nio.ByteBuffer mBuf>;

        r2 = virtualinvoke $r9.<java.nio.ByteBuffer: java.nio.ByteBuffer slice()>();

        exitmonitor r1;

     label2:
        interfaceinvoke r11.<android.util.apk.DataDigester: void consume(java.nio.ByteBuffer)>(r2);

        return;

     label3:
        $r10 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r10;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public long size()
    {
        android.util.apk.ByteBufferDataSource r0;
        java.nio.ByteBuffer $r1;
        int $i0;
        long $l1;

        r0 := @this: android.util.apk.ByteBufferDataSource;

        $r1 = r0.<android.util.apk.ByteBufferDataSource: java.nio.ByteBuffer mBuf>;

        $i0 = virtualinvoke $r1.<java.nio.ByteBuffer: int capacity()>();

        $l1 = (long) $i0;

        return $l1;
    }
}
