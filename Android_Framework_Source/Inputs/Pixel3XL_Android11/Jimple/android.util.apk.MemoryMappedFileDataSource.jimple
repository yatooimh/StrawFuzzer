class android.util.apk.MemoryMappedFileDataSource extends java.lang.Object implements android.util.apk.DataSource
{
    private static final long MEMORY_PAGE_SIZE_BYTES;
    private final java.io.FileDescriptor mFd;
    private final long mFilePosition;
    private final long mSize;

    static void <clinit>()
    {
        int $i0;
        long $l1;

        $i0 = <android.system.OsConstants: int _SC_PAGESIZE>;

        $l1 = staticinvoke <android.system.Os: long sysconf(int)>($i0);

        <android.util.apk.MemoryMappedFileDataSource: long MEMORY_PAGE_SIZE_BYTES> = $l1;

        return;
    }

    void <init>(java.io.FileDescriptor, long, long)
    {
        android.util.apk.MemoryMappedFileDataSource r0;
        java.io.FileDescriptor r1;
        long l0, l1;

        r0 := @this: android.util.apk.MemoryMappedFileDataSource;

        r1 := @parameter0: java.io.FileDescriptor;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.util.apk.MemoryMappedFileDataSource: java.io.FileDescriptor mFd> = r1;

        r0.<android.util.apk.MemoryMappedFileDataSource: long mFilePosition> = l0;

        r0.<android.util.apk.MemoryMappedFileDataSource: long mSize> = l1;

        return;
    }

    public void feedIntoDataDigester(android.util.apk.DataDigester, long, int) throws java.io.IOException, java.security.DigestException
    {
        android.util.apk.MemoryMappedFileDataSource r0;
        int i0, i1, i3, i4, i5, $i10, $i11;
        long l2, l6, $l7, $l8, $l9, $l12, l14, l15, l16, l17, l19, l20;
        byte $b13, $b21;
        java.lang.Throwable $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r12, $r13, $r14, $r15, $r16, r22, r23;
        android.util.apk.DataDigester r17;
        java.io.FileDescriptor r18, r20;
        java.nio.DirectByteBuffer r19;
        java.io.IOException r24;
        java.lang.StringBuilder r25;
        java.lang.String $r26;

        r0 := @this: android.util.apk.MemoryMappedFileDataSource;

        r17 := @parameter0: android.util.apk.DataDigester;

        l14 := @parameter1: long;

        i0 := @parameter2: int;

        $l7 = r0.<android.util.apk.MemoryMappedFileDataSource: long mFilePosition>;

        l15 = $l7 + l14;

        l16 = <android.util.apk.MemoryMappedFileDataSource: long MEMORY_PAGE_SIZE_BYTES>;

        $l8 = l15 / l16;

        l17 = $l8 * l16;

        $l9 = l15 - l17;

        i1 = (int) $l9;

        $i10 = i0 + i1;

        l2 = (long) $i10;

     label01:
        i3 = <android.system.OsConstants: int PROT_READ>;

        i4 = <android.system.OsConstants: int MAP_SHARED>;

        i5 = <android.system.OsConstants: int MAP_POPULATE>;

        r18 = r0.<android.util.apk.MemoryMappedFileDataSource: java.io.FileDescriptor mFd>;

     label02:
        $i11 = i4 | i5;

        l19 = staticinvoke <android.system.Os: long mmap(long,long,int,int,java.io.FileDescriptor,long)>(0L, l2, i3, $i11, r18, l17);

     label03:
        r19 = new java.nio.DirectByteBuffer;

     label04:
        l6 = (long) i1;

     label05:
        r20 = r0.<android.util.apk.MemoryMappedFileDataSource: java.io.FileDescriptor mFd>;

     label06:
        l20 = l19;

     label07:
        $l12 = l19 + l6;

        specialinvoke r19.<java.nio.DirectByteBuffer: void <init>(int,long,java.io.FileDescriptor,java.lang.Runnable,boolean)>(i0, $l12, r20, null, 1);

     label08:
        interfaceinvoke r17.<android.util.apk.DataDigester: void consume(java.nio.ByteBuffer)>(r19);

     label09:
        $b13 = l19 cmp 0L;

        if $b13 == 0 goto label13;

     label10:
        staticinvoke <android.system.Os: void munmap(long,long)>(l19, l2);

     label11:
        goto label13;

     label12:
        $r2 := @caughtexception;

        goto label11;

     label13:
        return;

     label14:
        $r4 := @caughtexception;

        r22 = $r4;

        goto label17;

     label15:
        $r12 := @caughtexception;

        r23 = $r12;

        goto label19;

     label16:
        $r5 := @caughtexception;

        r22 = $r5;

     label17:
        l19 = l20;

        goto label28;

     label18:
        $r8 := @caughtexception;

        r23 = $r8;

     label19:
        l19 = l20;

        goto label26;

     label20:
        $r7 := @caughtexception;

        r22 = $r7;

        goto label28;

     label21:
        $r14 := @caughtexception;

        r23 = $r14;

        goto label26;

     label22:
        $r6 := @caughtexception;

        r22 = $r6;

        l19 = 0L;

        goto label28;

     label23:
        $r16 := @caughtexception;

        r23 = $r16;

        l19 = 0L;

        goto label26;

     label24:
        $r13 := @caughtexception;

        r22 = $r13;

        l19 = 0L;

        goto label28;

     label25:
        $r15 := @caughtexception;

        r23 = $r15;

        l19 = 0L;

     label26:
        r24 = new java.io.IOException;

        r25 = new java.lang.StringBuilder;

        specialinvoke r25.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to mmap ");

        virtualinvoke r25.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l2);

        virtualinvoke r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" bytes");

        $r26 = virtualinvoke r25.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r24.<java.io.IOException: void <init>(java.lang.String,java.lang.Throwable)>($r26, r23);

        throw r24;

     label27:
        $r1 := @caughtexception;

        r22 = $r1;

     label28:
        $b21 = l19 cmp 0L;

        if $b21 == 0 goto label32;

     label29:
        staticinvoke <android.system.Os: void munmap(long,long)>(l19, l2);

     label30:
        goto label32;

     label31:
        $r3 := @caughtexception;

        goto label30;

     label32:
        throw r22;

        catch android.system.ErrnoException from label01 to label02 with label25;
        catch java.lang.Throwable from label01 to label02 with label24;
        catch android.system.ErrnoException from label02 to label03 with label23;
        catch java.lang.Throwable from label02 to label03 with label22;
        catch android.system.ErrnoException from label03 to label04 with label21;
        catch java.lang.Throwable from label03 to label04 with label20;
        catch android.system.ErrnoException from label05 to label06 with label21;
        catch java.lang.Throwable from label05 to label06 with label20;
        catch android.system.ErrnoException from label07 to label08 with label18;
        catch java.lang.Throwable from label07 to label08 with label16;
        catch android.system.ErrnoException from label08 to label09 with label15;
        catch java.lang.Throwable from label08 to label09 with label14;
        catch android.system.ErrnoException from label10 to label11 with label12;
        catch java.lang.Throwable from label26 to label27 with label27;
        catch android.system.ErrnoException from label29 to label30 with label31;
    }

    public long size()
    {
        android.util.apk.MemoryMappedFileDataSource r0;
        long $l0;

        r0 := @this: android.util.apk.MemoryMappedFileDataSource;

        $l0 = r0.<android.util.apk.MemoryMappedFileDataSource: long mSize>;

        return $l0;
    }
}
