abstract class android.util.apk.ZipUtils extends java.lang.Object
{
    private static final int UINT16_MAX_VALUE;
    private static final int ZIP64_EOCD_LOCATOR_SIG_REVERSE_BYTE_ORDER;
    private static final int ZIP64_EOCD_LOCATOR_SIZE;
    private static final int ZIP_EOCD_CENTRAL_DIR_OFFSET_FIELD_OFFSET;
    private static final int ZIP_EOCD_CENTRAL_DIR_SIZE_FIELD_OFFSET;
    private static final int ZIP_EOCD_COMMENT_LENGTH_FIELD_OFFSET;
    private static final int ZIP_EOCD_REC_MIN_SIZE;
    private static final int ZIP_EOCD_REC_SIG;

    private void <init>()
    {
        android.util.apk.ZipUtils r0;

        r0 := @this: android.util.apk.ZipUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static void assertByteOrderLittleEndian(java.nio.ByteBuffer)
    {
        java.nio.ByteBuffer r0;
        java.nio.ByteOrder $r1, $r2;
        java.lang.IllegalArgumentException $r3;

        r0 := @parameter0: java.nio.ByteBuffer;

        $r1 = virtualinvoke r0.<java.nio.ByteBuffer: java.nio.ByteOrder order()>();

        $r2 = <java.nio.ByteOrder: java.nio.ByteOrder LITTLE_ENDIAN>;

        if $r1 != $r2 goto label1;

        return;

     label1:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("ByteBuffer byte order must be little endian");

        throw $r3;
    }

    private static int findZipEndOfCentralDirectoryRecord(java.nio.ByteBuffer)
    {
        java.nio.ByteBuffer r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, i8;

        r0 := @parameter0: java.nio.ByteBuffer;

        staticinvoke <android.util.apk.ZipUtils: void assertByteOrderLittleEndian(java.nio.ByteBuffer)>(r0);

        i0 = virtualinvoke r0.<java.nio.ByteBuffer: int capacity()>();

        if i0 >= 22 goto label1;

        return -1;

     label1:
        $i3 = i0 - 22;

        i1 = staticinvoke <java.lang.Math: int min(int,int)>($i3, 65535);

        i8 = 0;

     label2:
        if i8 > i1 goto label4;

        $i4 = i0 - 22;

        i2 = $i4 - i8;

        $i5 = virtualinvoke r0.<java.nio.ByteBuffer: int getInt(int)>(i2);

        if $i5 != 101010256 goto label3;

        $i6 = i2 + 20;

        $i7 = staticinvoke <android.util.apk.ZipUtils: int getUnsignedInt16(java.nio.ByteBuffer,int)>(r0, $i6);

        if $i7 != i8 goto label3;

        return i2;

     label3:
        i8 = i8 + 1;

        goto label2;

     label4:
        return -1;
    }

    static android.util.Pair findZipEndOfCentralDirectoryRecord(java.io.RandomAccessFile) throws java.io.IOException
    {
        java.io.RandomAccessFile r0;
        android.util.Pair r1, $r2;
        long $l0;
        byte $b1;

        r0 := @parameter0: java.io.RandomAccessFile;

        $l0 = virtualinvoke r0.<java.io.RandomAccessFile: long length()>();

        $b1 = $l0 cmp 22L;

        if $b1 >= 0 goto label1;

        return null;

     label1:
        r1 = staticinvoke <android.util.apk.ZipUtils: android.util.Pair findZipEndOfCentralDirectoryRecord(java.io.RandomAccessFile,int)>(r0, 0);

        if r1 == null goto label2;

        return r1;

     label2:
        $r2 = staticinvoke <android.util.apk.ZipUtils: android.util.Pair findZipEndOfCentralDirectoryRecord(java.io.RandomAccessFile,int)>(r0, 65535);

        return $r2;
    }

    private static android.util.Pair findZipEndOfCentralDirectoryRecord(java.io.RandomAccessFile, int) throws java.io.IOException
    {
        java.nio.ByteBuffer r0, r15;
        java.lang.StringBuilder $r1;
        java.lang.IllegalArgumentException $r4;
        java.lang.String $r5;
        byte $b0;
        long $l1, $l2, $l3, $l7, $l10, $l11, l13, l14;
        int $i4, $i5, $i6, $i8, $i9, i12, i15;
        java.nio.ByteOrder $r6, $r10;
        byte[] $r8;
        java.lang.Long $r12;
        android.util.Pair $r13;
        java.io.RandomAccessFile r14;

        r14 := @parameter0: java.io.RandomAccessFile;

        i12 := @parameter1: int;

        if i12 < 0 goto label3;

        if i12 > 65535 goto label3;

        l13 = virtualinvoke r14.<java.io.RandomAccessFile: long length()>();

        $b0 = l13 cmp 22L;

        if $b0 >= 0 goto label1;

        return null;

     label1:
        $l2 = (long) i12;

        $l1 = l13 - 22L;

        $l3 = staticinvoke <java.lang.Math: long min(long,long)>($l2, $l1);

        $i4 = (int) $l3;

        $i5 = $i4 + 22;

        r0 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>($i5);

        $r6 = <java.nio.ByteOrder: java.nio.ByteOrder LITTLE_ENDIAN>;

        virtualinvoke r0.<java.nio.ByteBuffer: java.nio.ByteBuffer order(java.nio.ByteOrder)>($r6);

        $i6 = virtualinvoke r0.<java.nio.ByteBuffer: int capacity()>();

        $l7 = (long) $i6;

        l14 = l13 - $l7;

        virtualinvoke r14.<java.io.RandomAccessFile: void seek(long)>(l14);

        $r8 = virtualinvoke r0.<java.nio.ByteBuffer: byte[] array()>();

        $i8 = virtualinvoke r0.<java.nio.ByteBuffer: int arrayOffset()>();

        $i9 = virtualinvoke r0.<java.nio.ByteBuffer: int capacity()>();

        virtualinvoke r14.<java.io.RandomAccessFile: void readFully(byte[],int,int)>($r8, $i8, $i9);

        i15 = staticinvoke <android.util.apk.ZipUtils: int findZipEndOfCentralDirectoryRecord(java.nio.ByteBuffer)>(r0);

        if i15 != -1 goto label2;

        return null;

     label2:
        virtualinvoke r0.<java.nio.ByteBuffer: java.nio.Buffer position(int)>(i15);

        r15 = virtualinvoke r0.<java.nio.ByteBuffer: java.nio.ByteBuffer slice()>();

        $r10 = <java.nio.ByteOrder: java.nio.ByteOrder LITTLE_ENDIAN>;

        virtualinvoke r15.<java.nio.ByteBuffer: java.nio.ByteBuffer order(java.nio.ByteOrder)>($r10);

        $l10 = (long) i15;

        $l11 = $l10 + l14;

        $r12 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l11);

        $r13 = staticinvoke <android.util.Pair: android.util.Pair create(java.lang.Object,java.lang.Object)>(r15, $r12);

        return $r13;

     label3:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("maxCommentSize: ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i12);

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r4;
    }

    private static int getUnsignedInt16(java.nio.ByteBuffer, int)
    {
        java.nio.ByteBuffer r0;
        int i0, $i2;
        short $s1;

        r0 := @parameter0: java.nio.ByteBuffer;

        i0 := @parameter1: int;

        $s1 = virtualinvoke r0.<java.nio.ByteBuffer: short getShort(int)>(i0);

        $i2 = $s1 & 65535;

        return $i2;
    }

    private static long getUnsignedInt32(java.nio.ByteBuffer, int)
    {
        java.nio.ByteBuffer r0;
        int i0, $i1;
        long $l2, $l3;

        r0 := @parameter0: java.nio.ByteBuffer;

        i0 := @parameter1: int;

        $i1 = virtualinvoke r0.<java.nio.ByteBuffer: int getInt(int)>(i0);

        $l2 = (long) $i1;

        $l3 = $l2 & 4294967295L;

        return $l3;
    }

    public static long getZipEocdCentralDirectoryOffset(java.nio.ByteBuffer)
    {
        java.nio.ByteBuffer r0;
        int $i0, $i1;
        long $l2;

        r0 := @parameter0: java.nio.ByteBuffer;

        staticinvoke <android.util.apk.ZipUtils: void assertByteOrderLittleEndian(java.nio.ByteBuffer)>(r0);

        $i0 = virtualinvoke r0.<java.nio.ByteBuffer: int position()>();

        $i1 = $i0 + 16;

        $l2 = staticinvoke <android.util.apk.ZipUtils: long getUnsignedInt32(java.nio.ByteBuffer,int)>(r0, $i1);

        return $l2;
    }

    public static long getZipEocdCentralDirectorySizeBytes(java.nio.ByteBuffer)
    {
        java.nio.ByteBuffer r0;
        int $i0, $i1;
        long $l2;

        r0 := @parameter0: java.nio.ByteBuffer;

        staticinvoke <android.util.apk.ZipUtils: void assertByteOrderLittleEndian(java.nio.ByteBuffer)>(r0);

        $i0 = virtualinvoke r0.<java.nio.ByteBuffer: int position()>();

        $i1 = $i0 + 12;

        $l2 = staticinvoke <android.util.apk.ZipUtils: long getUnsignedInt32(java.nio.ByteBuffer,int)>(r0, $i1);

        return $l2;
    }

    public static final boolean isZip64EndOfCentralDirectoryLocatorPresent(java.io.RandomAccessFile, long) throws java.io.IOException
    {
        java.io.RandomAccessFile r0;
        byte $b0;
        int $i1;
        long l2, l3;
        boolean z0;

        r0 := @parameter0: java.io.RandomAccessFile;

        l2 := @parameter1: long;

        l3 = l2 - 20L;

        z0 = 0;

        $b0 = l3 cmp 0L;

        if $b0 >= 0 goto label1;

        return 0;

     label1:
        virtualinvoke r0.<java.io.RandomAccessFile: void seek(long)>(l3);

        $i1 = virtualinvoke r0.<java.io.RandomAccessFile: int readInt()>();

        if $i1 != 1347094023 goto label2;

        z0 = 1;

     label2:
        return z0;
    }

    private static void setUnsignedInt32(java.nio.ByteBuffer, int, long)
    {
        int i0, $i4, $i5, $i6;
        long l1;
        byte $b2, $b3;
        java.lang.StringBuilder $r0;
        java.lang.IllegalArgumentException $r3;
        java.lang.String $r4;
        java.nio.ByteBuffer r6;

        r6 := @parameter0: java.nio.ByteBuffer;

        i0 := @parameter1: int;

        l1 := @parameter2: long;

        $b2 = l1 cmp 0L;

        if $b2 < 0 goto label1;

        $b3 = l1 cmp 4294967295L;

        if $b3 > 0 goto label1;

        $i4 = virtualinvoke r6.<java.nio.ByteBuffer: int position()>();

        $i6 = $i4 + i0;

        $i5 = (int) l1;

        virtualinvoke r6.<java.nio.ByteBuffer: java.nio.ByteBuffer putInt(int,int)>($i6, $i5);

        return;

     label1:
        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("uint32 value of out range: ");

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l1);

        $r3 = new java.lang.IllegalArgumentException;

        $r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r4);

        throw $r3;
    }

    public static void setZipEocdCentralDirectoryOffset(java.nio.ByteBuffer, long)
    {
        java.nio.ByteBuffer r0;
        long l0;
        int $i1, $i2;

        r0 := @parameter0: java.nio.ByteBuffer;

        l0 := @parameter1: long;

        staticinvoke <android.util.apk.ZipUtils: void assertByteOrderLittleEndian(java.nio.ByteBuffer)>(r0);

        $i1 = virtualinvoke r0.<java.nio.ByteBuffer: int position()>();

        $i2 = $i1 + 16;

        staticinvoke <android.util.apk.ZipUtils: void setUnsignedInt32(java.nio.ByteBuffer,int,long)>(r0, $i2, l0);

        return;
    }

    public static void <clinit>()
    {
        <android.util.apk.ZipUtils: int ZIP_EOCD_REC_SIG> = 101010256;

        <android.util.apk.ZipUtils: int ZIP_EOCD_REC_MIN_SIZE> = 22;

        <android.util.apk.ZipUtils: int ZIP_EOCD_COMMENT_LENGTH_FIELD_OFFSET> = 20;

        <android.util.apk.ZipUtils: int ZIP_EOCD_CENTRAL_DIR_SIZE_FIELD_OFFSET> = 12;

        <android.util.apk.ZipUtils: int ZIP_EOCD_CENTRAL_DIR_OFFSET_FIELD_OFFSET> = 16;

        <android.util.apk.ZipUtils: int ZIP64_EOCD_LOCATOR_SIZE> = 20;

        <android.util.apk.ZipUtils: int ZIP64_EOCD_LOCATOR_SIG_REVERSE_BYTE_ORDER> = 1347094023;

        <android.util.apk.ZipUtils: int UINT16_MAX_VALUE> = 65535;

        return;
    }
}
