public class android.util.jar.StrictJarFile$ZipInflaterInputStream extends java.util.zip.InflaterInputStream
{
    private long bytesRead;
    private boolean closed;
    private final java.util.zip.ZipEntry entry;

    public void <init>(java.io.InputStream, java.util.zip.Inflater, int, java.util.zip.ZipEntry)
    {
        android.util.jar.StrictJarFile$ZipInflaterInputStream r0;
        java.io.InputStream r1;
        java.util.zip.Inflater r2;
        int i0;
        java.util.zip.ZipEntry r3;

        r0 := @this: android.util.jar.StrictJarFile$ZipInflaterInputStream;

        r1 := @parameter0: java.io.InputStream;

        r2 := @parameter1: java.util.zip.Inflater;

        i0 := @parameter2: int;

        r3 := @parameter3: java.util.zip.ZipEntry;

        specialinvoke r0.<java.util.zip.InflaterInputStream: void <init>(java.io.InputStream,java.util.zip.Inflater,int)>(r1, r2, i0);

        r0.<android.util.jar.StrictJarFile$ZipInflaterInputStream: long bytesRead> = 0L;

        r0.<android.util.jar.StrictJarFile$ZipInflaterInputStream: java.util.zip.ZipEntry entry> = r3;

        return;
    }

    public int available() throws java.io.IOException
    {
        android.util.jar.StrictJarFile$ZipInflaterInputStream r0;
        boolean z0;
        int $i0, i4;
        java.util.zip.ZipEntry $r1;
        long $l1, $l2, $l3;

        r0 := @this: android.util.jar.StrictJarFile$ZipInflaterInputStream;

        z0 = r0.<android.util.jar.StrictJarFile$ZipInflaterInputStream: boolean closed>;

        i4 = 0;

        if z0 == 0 goto label1;

        return 0;

     label1:
        $i0 = specialinvoke r0.<java.util.zip.InflaterInputStream: int available()>();

        if $i0 != 0 goto label2;

        goto label3;

     label2:
        $r1 = r0.<android.util.jar.StrictJarFile$ZipInflaterInputStream: java.util.zip.ZipEntry entry>;

        $l1 = virtualinvoke $r1.<java.util.zip.ZipEntry: long getSize()>();

        $l2 = r0.<android.util.jar.StrictJarFile$ZipInflaterInputStream: long bytesRead>;

        $l3 = $l1 - $l2;

        i4 = (int) $l3;

     label3:
        return i4;
    }

    public void close() throws java.io.IOException
    {
        android.util.jar.StrictJarFile$ZipInflaterInputStream r0;

        r0 := @this: android.util.jar.StrictJarFile$ZipInflaterInputStream;

        specialinvoke r0.<java.util.zip.InflaterInputStream: void close()>();

        r0.<android.util.jar.StrictJarFile$ZipInflaterInputStream: boolean closed> = 1;

        return;
    }

    public int read(byte[], int, int) throws java.io.IOException
    {
        android.util.jar.StrictJarFile$ZipInflaterInputStream r0;
        int i0, i10, i11;
        long $l1, $l2, $l3, $l4, $l5, $l7, $l8, $l9;
        java.util.zip.ZipEntry $r2, $r7, $r14;
        byte $b6;
        java.lang.StringBuilder $r3, $r12;
        java.io.IOException $r9, $r19;
        java.lang.String $r10, $r15, $r20;
        java.lang.Throwable $r11;
        byte[] r21;

        r0 := @this: android.util.jar.StrictJarFile$ZipInflaterInputStream;

        r21 := @parameter0: byte[];

        i10 := @parameter1: int;

        i0 := @parameter2: int;

     label1:
        i11 = specialinvoke r0.<java.util.zip.InflaterInputStream: int read(byte[],int,int)>(r21, i10, i0);

     label2:
        if i11 != -1 goto label4;

        $r2 = r0.<android.util.jar.StrictJarFile$ZipInflaterInputStream: java.util.zip.ZipEntry entry>;

        $l4 = virtualinvoke $r2.<java.util.zip.ZipEntry: long getSize()>();

        $l5 = r0.<android.util.jar.StrictJarFile$ZipInflaterInputStream: long bytesRead>;

        $b6 = $l4 cmp $l5;

        if $b6 != 0 goto label3;

        goto label5;

     label3:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Size mismatch on inflated file: ");

        $l7 = r0.<android.util.jar.StrictJarFile$ZipInflaterInputStream: long bytesRead>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l7);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" vs ");

        $r7 = r0.<android.util.jar.StrictJarFile$ZipInflaterInputStream: java.util.zip.ZipEntry entry>;

        $l8 = virtualinvoke $r7.<java.util.zip.ZipEntry: long getSize()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l8);

        $r9 = new java.io.IOException;

        $r10 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.io.IOException: void <init>(java.lang.String)>($r10);

        throw $r9;

     label4:
        $l2 = r0.<android.util.jar.StrictJarFile$ZipInflaterInputStream: long bytesRead>;

        $l1 = (long) i11;

        $l3 = $l2 + $l1;

        r0.<android.util.jar.StrictJarFile$ZipInflaterInputStream: long bytesRead> = $l3;

     label5:
        return i11;

     label6:
        $r11 := @caughtexception;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error reading data for ");

        $r14 = r0.<android.util.jar.StrictJarFile$ZipInflaterInputStream: java.util.zip.ZipEntry entry>;

        $r15 = virtualinvoke $r14.<java.util.zip.ZipEntry: java.lang.String getName()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" near offset ");

        $l9 = r0.<android.util.jar.StrictJarFile$ZipInflaterInputStream: long bytesRead>;

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l9);

        $r19 = new java.io.IOException;

        $r20 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r19.<java.io.IOException: void <init>(java.lang.String,java.lang.Throwable)>($r20, $r11);

        throw $r19;

        catch java.io.IOException from label1 to label2 with label6;
    }
}
