public final class android.util.jar.StrictJarFile extends java.lang.Object
{
    private boolean closed;
    private final java.io.FileDescriptor fd;
    private final dalvik.system.CloseGuard guard;
    private final boolean isSigned;
    private final android.util.jar.StrictJarManifest manifest;
    private final long nativeHandle;
    private final android.util.jar.StrictJarVerifier verifier;

    public void <init>(java.io.FileDescriptor) throws java.io.IOException, java.lang.SecurityException
    {
        android.util.jar.StrictJarFile r0;
        java.io.FileDescriptor r1;

        r0 := @this: android.util.jar.StrictJarFile;

        r1 := @parameter0: java.io.FileDescriptor;

        specialinvoke r0.<android.util.jar.StrictJarFile: void <init>(java.io.FileDescriptor,boolean,boolean)>(r1, 1, 1);

        return;
    }

    public void <init>(java.io.FileDescriptor, boolean, boolean) throws java.io.IOException, java.lang.SecurityException
    {
        android.util.jar.StrictJarFile r0;
        java.io.FileDescriptor r1;
        boolean z0, z1;
        java.lang.StringBuilder $r3;
        int $i0;
        java.lang.String $r7;

        r0 := @this: android.util.jar.StrictJarFile;

        r1 := @parameter0: java.io.FileDescriptor;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[fd:");

        $i0 = virtualinvoke r1.<java.io.FileDescriptor: int getInt$()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<android.util.jar.StrictJarFile: void <init>(java.lang.String,java.io.FileDescriptor,boolean,boolean)>($r7, r1, z0, z1);

        return;
    }

    public void <init>(java.lang.String) throws java.io.IOException, java.lang.SecurityException
    {
        android.util.jar.StrictJarFile r0;
        java.lang.String r1;

        r0 := @this: android.util.jar.StrictJarFile;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<android.util.jar.StrictJarFile: void <init>(java.lang.String,boolean,boolean)>(r1, 1, 1);

        return;
    }

    private void <init>(java.lang.String, java.io.FileDescriptor, boolean, boolean) throws java.io.IOException, java.lang.SecurityException
    {
        android.util.jar.StrictJarFile r0;
        java.io.FileDescriptor r1;
        boolean z0, $z2, $z3, $z4, z5, z6;
        dalvik.system.CloseGuard $r2, $r3;
        int $i0;
        long $l1, $l2;
        java.lang.Object $r4, $r12;
        byte[] $r5;
        android.util.jar.StrictJarManifest $r6, $r7, r21;
        java.util.Map $r8;
        java.util.Set $r9;
        android.util.jar.StrictJarVerifier $r10, $r11, r22;
        java.util.zip.ZipEntry $r13;
        java.lang.String $r17, r19, r24;
        java.lang.Throwable $r18;
        java.util.HashMap r20;
        java.util.Iterator r23;
        java.lang.SecurityException r25;
        java.lang.StringBuilder r26;

        r0 := @this: android.util.jar.StrictJarFile;

        r19 := @parameter0: java.lang.String;

        r1 := @parameter1: java.io.FileDescriptor;

        z5 := @parameter2: boolean;

        z0 := @parameter3: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = staticinvoke <dalvik.system.CloseGuard: dalvik.system.CloseGuard get()>();

        r0.<android.util.jar.StrictJarFile: dalvik.system.CloseGuard guard> = $r2;

        $i0 = virtualinvoke r1.<java.io.FileDescriptor: int getInt$()>();

        $l1 = staticinvoke <android.util.jar.StrictJarFile: long nativeOpenJarFile(java.lang.String,int)>(r19, $i0);

        r0.<android.util.jar.StrictJarFile: long nativeHandle> = $l1;

        r0.<android.util.jar.StrictJarFile: java.io.FileDescriptor fd> = r1;

        if z5 == 0 goto label12;

     label01:
        r20 = specialinvoke r0.<android.util.jar.StrictJarFile: java.util.HashMap getMetaEntries()>();

        r21 = new android.util.jar.StrictJarManifest;

        $r4 = virtualinvoke r20.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("META-INF/MANIFEST.MF");

        $r5 = (byte[]) $r4;

        specialinvoke r21.<android.util.jar.StrictJarManifest: void <init>(byte[],boolean)>($r5, 1);

        r0.<android.util.jar.StrictJarFile: android.util.jar.StrictJarManifest manifest> = r21;

        r22 = new android.util.jar.StrictJarVerifier;

        $r6 = r0.<android.util.jar.StrictJarFile: android.util.jar.StrictJarManifest manifest>;

        specialinvoke r22.<android.util.jar.StrictJarVerifier: void <init>(java.lang.String,android.util.jar.StrictJarManifest,java.util.HashMap,boolean)>(r19, $r6, r20, z0);

        r0.<android.util.jar.StrictJarFile: android.util.jar.StrictJarVerifier verifier> = r22;

        $r7 = r0.<android.util.jar.StrictJarFile: android.util.jar.StrictJarManifest manifest>;

        $r8 = virtualinvoke $r7.<android.util.jar.StrictJarManifest: java.util.Map getEntries()>();

        $r9 = interfaceinvoke $r8.<java.util.Map: java.util.Set keySet()>();

        r23 = interfaceinvoke $r9.<java.util.Set: java.util.Iterator iterator()>();

     label02:
        $z2 = interfaceinvoke r23.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label05;

        $r12 = interfaceinvoke r23.<java.util.Iterator: java.lang.Object next()>();

        r24 = (java.lang.String) $r12;

        $r13 = virtualinvoke r0.<android.util.jar.StrictJarFile: java.util.zip.ZipEntry findEntry(java.lang.String)>(r24);

        if $r13 == null goto label04;

     label03:
        goto label02;

     label04:
        r25 = new java.lang.SecurityException;

        r26 = new java.lang.StringBuilder;

        specialinvoke r26.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("File ");

        virtualinvoke r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r24);

        virtualinvoke r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in manifest does not exist");

        $r17 = virtualinvoke r26.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r25.<java.lang.SecurityException: void <init>(java.lang.String)>($r17);

        throw r25;

     label05:
        z6 = 0;

     label06:
        $r10 = r0.<android.util.jar.StrictJarFile: android.util.jar.StrictJarVerifier verifier>;

        $z3 = virtualinvoke $r10.<android.util.jar.StrictJarVerifier: boolean readCertificates()>();

        if $z3 == 0 goto label10;

     label07:
        z6 = 0;

     label08:
        $r11 = r0.<android.util.jar.StrictJarFile: android.util.jar.StrictJarVerifier verifier>;

        $z4 = virtualinvoke $r11.<android.util.jar.StrictJarVerifier: boolean isSignedJar()>();

        if $z4 == 0 goto label10;

     label09:
        z6 = 1;

     label10:
        r0.<android.util.jar.StrictJarFile: boolean isSigned> = z6;

     label11:
        goto label13;

     label12:
        r0.<android.util.jar.StrictJarFile: boolean isSigned> = 0;

        r0.<android.util.jar.StrictJarFile: android.util.jar.StrictJarManifest manifest> = null;

        r0.<android.util.jar.StrictJarFile: android.util.jar.StrictJarVerifier verifier> = null;

     label13:
        $r3 = r0.<android.util.jar.StrictJarFile: dalvik.system.CloseGuard guard>;

        virtualinvoke $r3.<dalvik.system.CloseGuard: void open(java.lang.String)>("close");

        return;

     label14:
        $r18 := @caughtexception;

        $l2 = r0.<android.util.jar.StrictJarFile: long nativeHandle>;

        staticinvoke <android.util.jar.StrictJarFile: void nativeClose(long)>($l2);

        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.io.FileDescriptor)>(r1);

        r0.<android.util.jar.StrictJarFile: boolean closed> = 1;

        throw $r18;

        catch java.io.IOException from label01 to label02 with label14;
        catch java.lang.SecurityException from label01 to label02 with label14;
        catch java.io.IOException from label02 to label03 with label14;
        catch java.lang.SecurityException from label02 to label03 with label14;
        catch java.io.IOException from label04 to label05 with label14;
        catch java.lang.SecurityException from label04 to label05 with label14;
        catch java.io.IOException from label06 to label07 with label14;
        catch java.lang.SecurityException from label06 to label07 with label14;
        catch java.io.IOException from label08 to label09 with label14;
        catch java.lang.SecurityException from label08 to label09 with label14;
        catch java.io.IOException from label10 to label11 with label14;
        catch java.lang.SecurityException from label10 to label11 with label14;
        catch java.io.IOException from label12 to label13 with label14;
        catch java.lang.SecurityException from label12 to label13 with label14;
    }

    public void <init>(java.lang.String, boolean, boolean) throws java.io.IOException, java.lang.SecurityException
    {
        android.util.jar.StrictJarFile r0;
        java.lang.String r1;
        boolean z0, z1;
        int $i0;
        java.io.FileDescriptor $r2;

        r0 := @this: android.util.jar.StrictJarFile;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        $i0 = <android.system.OsConstants: int O_RDONLY>;

        $r2 = staticinvoke <libcore.io.IoBridge: java.io.FileDescriptor open(java.lang.String,int)>(r1, $i0);

        specialinvoke r0.<android.util.jar.StrictJarFile: void <init>(java.lang.String,java.io.FileDescriptor,boolean,boolean)>(r1, $r2, z0, z1);

        return;
    }

    static long access$000(long, java.lang.String)
    {
        long l0, $l1;
        java.lang.String r0;

        l0 := @parameter0: long;

        r0 := @parameter1: java.lang.String;

        $l1 = staticinvoke <android.util.jar.StrictJarFile: long nativeStartIteration(long,java.lang.String)>(l0, r0);

        return $l1;
    }

    static java.util.zip.ZipEntry access$100(long)
    {
        long l0;
        java.util.zip.ZipEntry $r0;

        l0 := @parameter0: long;

        $r0 = staticinvoke <android.util.jar.StrictJarFile: java.util.zip.ZipEntry nativeNextEntry(long)>(l0);

        return $r0;
    }

    private java.util.HashMap getMetaEntries() throws java.io.IOException
    {
        android.util.jar.StrictJarFile r0;
        java.util.zip.ZipEntry r3;
        java.util.HashMap $r4;
        android.util.jar.StrictJarFile$EntryIterator $r5;
        long $l0;
        boolean $z0;
        java.lang.Object $r6;
        java.lang.String $r7;
        java.io.InputStream $r8;
        byte[] $r9;

        r0 := @this: android.util.jar.StrictJarFile;

        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        $r5 = new android.util.jar.StrictJarFile$EntryIterator;

        $l0 = r0.<android.util.jar.StrictJarFile: long nativeHandle>;

        specialinvoke $r5.<android.util.jar.StrictJarFile$EntryIterator: void <init>(long,java.lang.String)>($l0, "META-INF/");

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.util.zip.ZipEntry) $r6;

        $r7 = virtualinvoke r3.<java.util.zip.ZipEntry: java.lang.String getName()>();

        $r8 = virtualinvoke r0.<android.util.jar.StrictJarFile: java.io.InputStream getInputStream(java.util.zip.ZipEntry)>(r3);

        $r9 = staticinvoke <libcore.io.Streams: byte[] readFully(java.io.InputStream)>($r8);

        virtualinvoke $r4.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r7, $r9);

        goto label1;

     label2:
        return $r4;
    }

    private java.io.InputStream getZipInputStream(java.util.zip.ZipEntry)
    {
        android.util.jar.StrictJarFile r0;
        java.util.zip.ZipEntry r1;
        int i0, $i1, $i8;
        android.util.jar.StrictJarFile$FDStream $r3, $r7;
        java.io.FileDescriptor $r4, $r8;
        long $l2, $l3, $l4, $l5, $l6, $l7, $l9, $l10, $l11, $l12;
        android.util.jar.StrictJarFile$ZipInflaterInputStream $r5;
        java.util.zip.Inflater $r6;

        r0 := @this: android.util.jar.StrictJarFile;

        r1 := @parameter0: java.util.zip.ZipEntry;

        $i1 = virtualinvoke r1.<java.util.zip.ZipEntry: int getMethod()>();

        if $i1 != 0 goto label1;

        $r7 = new android.util.jar.StrictJarFile$FDStream;

        $r8 = r0.<android.util.jar.StrictJarFile: java.io.FileDescriptor fd>;

        $l9 = virtualinvoke r1.<java.util.zip.ZipEntry: long getDataOffset()>();

        $l10 = virtualinvoke r1.<java.util.zip.ZipEntry: long getDataOffset()>();

        $l11 = virtualinvoke r1.<java.util.zip.ZipEntry: long getSize()>();

        $l12 = $l10 + $l11;

        specialinvoke $r7.<android.util.jar.StrictJarFile$FDStream: void <init>(java.io.FileDescriptor,long,long)>($r8, $l9, $l12);

        return $r7;

     label1:
        $r3 = new android.util.jar.StrictJarFile$FDStream;

        $r4 = r0.<android.util.jar.StrictJarFile: java.io.FileDescriptor fd>;

        $l2 = virtualinvoke r1.<java.util.zip.ZipEntry: long getDataOffset()>();

        $l3 = virtualinvoke r1.<java.util.zip.ZipEntry: long getDataOffset()>();

        $l4 = virtualinvoke r1.<java.util.zip.ZipEntry: long getCompressedSize()>();

        $l5 = $l3 + $l4;

        specialinvoke $r3.<android.util.jar.StrictJarFile$FDStream: void <init>(java.io.FileDescriptor,long,long)>($r4, $l2, $l5);

        $l6 = virtualinvoke r1.<java.util.zip.ZipEntry: long getSize()>();

        $l7 = staticinvoke <java.lang.Math: long min(long,long)>($l6, 65535L);

        $i8 = (int) $l7;

        i0 = staticinvoke <java.lang.Math: int max(int,int)>(1024, $i8);

        $r5 = new android.util.jar.StrictJarFile$ZipInflaterInputStream;

        $r6 = new java.util.zip.Inflater;

        specialinvoke $r6.<java.util.zip.Inflater: void <init>(boolean)>(1);

        specialinvoke $r5.<android.util.jar.StrictJarFile$ZipInflaterInputStream: void <init>(java.io.InputStream,java.util.zip.Inflater,int,java.util.zip.ZipEntry)>($r3, $r6, i0, r1);

        return $r5;
    }

    private static native void nativeClose(long);

    private static native java.util.zip.ZipEntry nativeFindEntry(long, java.lang.String);

    private static native java.util.zip.ZipEntry nativeNextEntry(long);

    private static native long nativeOpenJarFile(java.lang.String, int) throws java.io.IOException;

    private static native long nativeStartIteration(long, java.lang.String);

    public void close() throws java.io.IOException
    {
        android.util.jar.StrictJarFile r0;
        dalvik.system.CloseGuard r1;
        boolean $z0;
        long $l0;
        java.io.FileDescriptor $r2;

        r0 := @this: android.util.jar.StrictJarFile;

        $z0 = r0.<android.util.jar.StrictJarFile: boolean closed>;

        if $z0 != 0 goto label2;

        r1 = r0.<android.util.jar.StrictJarFile: dalvik.system.CloseGuard guard>;

        if r1 == null goto label1;

        virtualinvoke r1.<dalvik.system.CloseGuard: void close()>();

     label1:
        $l0 = r0.<android.util.jar.StrictJarFile: long nativeHandle>;

        staticinvoke <android.util.jar.StrictJarFile: void nativeClose(long)>($l0);

        $r2 = r0.<android.util.jar.StrictJarFile: java.io.FileDescriptor fd>;

        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.io.FileDescriptor)>($r2);

        r0.<android.util.jar.StrictJarFile: boolean closed> = 1;

     label2:
        return;
    }

    protected void finalize() throws java.lang.Throwable
    {
        android.util.jar.StrictJarFile r0;
        dalvik.system.CloseGuard $r2, $r3;
        java.lang.Throwable $r4;

        r0 := @this: android.util.jar.StrictJarFile;

     label1:
        $r2 = r0.<android.util.jar.StrictJarFile: dalvik.system.CloseGuard guard>;

        if $r2 == null goto label2;

        $r3 = r0.<android.util.jar.StrictJarFile: dalvik.system.CloseGuard guard>;

        virtualinvoke $r3.<dalvik.system.CloseGuard: void warnIfOpen()>();

     label2:
        virtualinvoke r0.<android.util.jar.StrictJarFile: void close()>();

     label3:
        specialinvoke r0.<java.lang.Object: void finalize()>();

        return;

     label4:
        $r4 := @caughtexception;

        specialinvoke r0.<java.lang.Object: void finalize()>();

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
    }

    public java.util.zip.ZipEntry findEntry(java.lang.String)
    {
        android.util.jar.StrictJarFile r0;
        java.lang.String r1;
        long $l0;
        java.util.zip.ZipEntry $r2;

        r0 := @this: android.util.jar.StrictJarFile;

        r1 := @parameter0: java.lang.String;

        $l0 = r0.<android.util.jar.StrictJarFile: long nativeHandle>;

        $r2 = staticinvoke <android.util.jar.StrictJarFile: java.util.zip.ZipEntry nativeFindEntry(long,java.lang.String)>($l0, r1);

        return $r2;
    }

    public java.security.cert.Certificate[][] getCertificateChains(java.util.zip.ZipEntry)
    {
        android.util.jar.StrictJarFile r0;
        java.util.zip.ZipEntry r1;
        boolean $z0;
        android.util.jar.StrictJarVerifier $r2;
        java.lang.String $r3;
        java.security.cert.Certificate[][] $r4;

        r0 := @this: android.util.jar.StrictJarFile;

        r1 := @parameter0: java.util.zip.ZipEntry;

        $z0 = r0.<android.util.jar.StrictJarFile: boolean isSigned>;

        if $z0 == 0 goto label1;

        $r2 = r0.<android.util.jar.StrictJarFile: android.util.jar.StrictJarVerifier verifier>;

        $r3 = virtualinvoke r1.<java.util.zip.ZipEntry: java.lang.String getName()>();

        $r4 = virtualinvoke $r2.<android.util.jar.StrictJarVerifier: java.security.cert.Certificate[][] getCertificateChains(java.lang.String)>($r3);

        return $r4;

     label1:
        return null;
    }

    public java.security.cert.Certificate[] getCertificates(java.util.zip.ZipEntry)
    {
        android.util.jar.StrictJarFile r0;
        java.security.cert.Certificate[][] r1;
        java.security.cert.Certificate[] r2, $r5, r7;
        boolean $z0;
        android.util.jar.StrictJarVerifier $r3;
        java.lang.String $r4;
        int $i0, $i1, $i2, i3, i4, i5, i6, i7, i8;
        java.util.zip.ZipEntry r6;

        r0 := @this: android.util.jar.StrictJarFile;

        r6 := @parameter0: java.util.zip.ZipEntry;

        $z0 = r0.<android.util.jar.StrictJarFile: boolean isSigned>;

        if $z0 == 0 goto label5;

        $r3 = r0.<android.util.jar.StrictJarFile: android.util.jar.StrictJarVerifier verifier>;

        $r4 = virtualinvoke r6.<java.util.zip.ZipEntry: java.lang.String getName()>();

        r1 = virtualinvoke $r3.<android.util.jar.StrictJarVerifier: java.security.cert.Certificate[][] getCertificateChains(java.lang.String)>($r4);

        i3 = 0;

        i4 = lengthof r1;

        i5 = 0;

     label1:
        if i5 >= i4 goto label2;

        $r5 = r1[i5];

        $i2 = lengthof $r5;

        i3 = i3 + $i2;

        i5 = i5 + 1;

        goto label1;

     label2:
        r2 = newarray (java.security.cert.Certificate)[i3];

        i6 = 0;

        i7 = lengthof r1;

        i8 = 0;

     label3:
        if i8 >= i7 goto label4;

        r7 = r1[i8];

        $i0 = lengthof r7;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r7, 0, r2, i6, $i0);

        $i1 = lengthof r7;

        i6 = i6 + $i1;

        i8 = i8 + 1;

        goto label3;

     label4:
        return r2;

     label5:
        return null;
    }

    public java.io.InputStream getInputStream(java.util.zip.ZipEntry)
    {
        android.util.jar.StrictJarFile r0;
        java.util.zip.ZipEntry r1;
        java.io.InputStream r2;
        android.util.jar.StrictJarVerifier$VerifierEntry r3;
        boolean $z0;
        android.util.jar.StrictJarVerifier $r4;
        java.lang.String $r5;
        android.util.jar.StrictJarFile$JarFileInputStream $r6;
        long $l0;

        r0 := @this: android.util.jar.StrictJarFile;

        r1 := @parameter0: java.util.zip.ZipEntry;

        r2 = specialinvoke r0.<android.util.jar.StrictJarFile: java.io.InputStream getZipInputStream(java.util.zip.ZipEntry)>(r1);

        $z0 = r0.<android.util.jar.StrictJarFile: boolean isSigned>;

        if $z0 == 0 goto label2;

        $r4 = r0.<android.util.jar.StrictJarFile: android.util.jar.StrictJarVerifier verifier>;

        $r5 = virtualinvoke r1.<java.util.zip.ZipEntry: java.lang.String getName()>();

        r3 = virtualinvoke $r4.<android.util.jar.StrictJarVerifier: android.util.jar.StrictJarVerifier$VerifierEntry initEntry(java.lang.String)>($r5);

        if r3 != null goto label1;

        return r2;

     label1:
        $r6 = new android.util.jar.StrictJarFile$JarFileInputStream;

        $l0 = virtualinvoke r1.<java.util.zip.ZipEntry: long getSize()>();

        specialinvoke $r6.<android.util.jar.StrictJarFile$JarFileInputStream: void <init>(java.io.InputStream,long,android.util.jar.StrictJarVerifier$VerifierEntry)>(r2, $l0, r3);

        return $r6;

     label2:
        return r2;
    }

    public android.util.jar.StrictJarManifest getManifest()
    {
        android.util.jar.StrictJarFile r0;
        android.util.jar.StrictJarManifest $r1;

        r0 := @this: android.util.jar.StrictJarFile;

        $r1 = r0.<android.util.jar.StrictJarFile: android.util.jar.StrictJarManifest manifest>;

        return $r1;
    }

    public java.util.Iterator iterator() throws java.io.IOException
    {
        android.util.jar.StrictJarFile r0;
        android.util.jar.StrictJarFile$EntryIterator $r1;
        long $l0;

        r0 := @this: android.util.jar.StrictJarFile;

        $r1 = new android.util.jar.StrictJarFile$EntryIterator;

        $l0 = r0.<android.util.jar.StrictJarFile: long nativeHandle>;

        specialinvoke $r1.<android.util.jar.StrictJarFile$EntryIterator: void <init>(long,java.lang.String)>($l0, "");

        return $r1;
    }
}
