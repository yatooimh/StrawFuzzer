public class android.util.jar.StrictJarManifest extends java.lang.Object implements java.lang.Cloneable
{
    static final java.util.jar.Attributes$Name ATTRIBUTE_NAME_NAME;
    static final int LINE_LENGTH_LIMIT;
    private static final byte[] LINE_SEPARATOR;
    private static final byte[] VALUE_SEPARATOR;
    private java.util.HashMap chunks;
    private final java.util.HashMap entries;
    private final java.util.jar.Attributes mainAttributes;
    private int mainEnd;

    static void <clinit>()
    {
        byte[] $r0, $r1;
        java.util.jar.Attributes$Name $r2;

        <android.util.jar.StrictJarManifest: int LINE_LENGTH_LIMIT> = 72;

        $r0 = newarray (byte)[2];

        $r0[0] = 13;

        $r0[1] = 10;

        <android.util.jar.StrictJarManifest: byte[] LINE_SEPARATOR> = $r0;

        $r1 = newarray (byte)[2];

        $r1[0] = 58;

        $r1[1] = 32;

        <android.util.jar.StrictJarManifest: byte[] VALUE_SEPARATOR> = $r1;

        $r2 = new java.util.jar.Attributes$Name;

        specialinvoke $r2.<java.util.jar.Attributes$Name: void <init>(java.lang.String)>("Name");

        <android.util.jar.StrictJarManifest: java.util.jar.Attributes$Name ATTRIBUTE_NAME_NAME> = $r2;

        return;
    }

    public void <init>()
    {
        android.util.jar.StrictJarManifest r0;
        java.util.HashMap $r1;
        java.util.jar.Attributes $r2;

        r0 := @this: android.util.jar.StrictJarManifest;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<android.util.jar.StrictJarManifest: java.util.HashMap entries> = $r1;

        $r2 = new java.util.jar.Attributes;

        specialinvoke $r2.<java.util.jar.Attributes: void <init>()>();

        r0.<android.util.jar.StrictJarManifest: java.util.jar.Attributes mainAttributes> = $r2;

        return;
    }

    public void <init>(android.util.jar.StrictJarManifest)
    {
        android.util.jar.StrictJarManifest r0, r1;
        java.util.jar.Attributes $r2, $r4;
        java.lang.Object $r3, $r7;
        java.util.Map $r5;
        java.util.HashMap $r6, $r8;

        r0 := @this: android.util.jar.StrictJarManifest;

        r1 := @parameter0: android.util.jar.StrictJarManifest;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = r1.<android.util.jar.StrictJarManifest: java.util.jar.Attributes mainAttributes>;

        $r3 = virtualinvoke $r2.<java.util.jar.Attributes: java.lang.Object clone()>();

        $r4 = (java.util.jar.Attributes) $r3;

        r0.<android.util.jar.StrictJarManifest: java.util.jar.Attributes mainAttributes> = $r4;

        $r5 = virtualinvoke r1.<android.util.jar.StrictJarManifest: java.util.Map getEntries()>();

        $r6 = (java.util.HashMap) $r5;

        $r7 = virtualinvoke $r6.<java.util.HashMap: java.lang.Object clone()>();

        $r8 = (java.util.HashMap) $r7;

        r0.<android.util.jar.StrictJarManifest: java.util.HashMap entries> = $r8;

        return;
    }

    public void <init>(java.io.InputStream) throws java.io.IOException
    {
        android.util.jar.StrictJarManifest r0;
        java.io.InputStream r1;
        byte[] $r2;

        r0 := @this: android.util.jar.StrictJarManifest;

        r1 := @parameter0: java.io.InputStream;

        specialinvoke r0.<android.util.jar.StrictJarManifest: void <init>()>();

        $r2 = staticinvoke <libcore.io.Streams: byte[] readFully(java.io.InputStream)>(r1);

        specialinvoke r0.<android.util.jar.StrictJarManifest: void read(byte[])>($r2);

        return;
    }

    void <init>(byte[], boolean) throws java.io.IOException
    {
        android.util.jar.StrictJarManifest r0;
        byte[] r1;
        boolean z0;
        java.util.HashMap $r2;

        r0 := @this: android.util.jar.StrictJarManifest;

        r1 := @parameter0: byte[];

        z0 := @parameter1: boolean;

        specialinvoke r0.<android.util.jar.StrictJarManifest: void <init>()>();

        if z0 == 0 goto label1;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<android.util.jar.StrictJarManifest: java.util.HashMap chunks> = $r2;

     label1:
        specialinvoke r0.<android.util.jar.StrictJarManifest: void read(byte[])>(r1);

        return;
    }

    private void read(byte[]) throws java.io.IOException
    {
        android.util.jar.StrictJarManifest r0;
        int $i0, $i1;
        android.util.jar.StrictJarManifestReader $r1;
        java.util.jar.Attributes $r2;
        java.util.HashMap $r3, $r4;
        byte[] r5;

        r0 := @this: android.util.jar.StrictJarManifest;

        r5 := @parameter0: byte[];

        $i0 = lengthof r5;

        if $i0 != 0 goto label1;

        return;

     label1:
        $r1 = new android.util.jar.StrictJarManifestReader;

        $r2 = r0.<android.util.jar.StrictJarManifest: java.util.jar.Attributes mainAttributes>;

        specialinvoke $r1.<android.util.jar.StrictJarManifestReader: void <init>(byte[],java.util.jar.Attributes)>(r5, $r2);

        $i1 = virtualinvoke $r1.<android.util.jar.StrictJarManifestReader: int getEndOfMainSection()>();

        r0.<android.util.jar.StrictJarManifest: int mainEnd> = $i1;

        $r4 = r0.<android.util.jar.StrictJarManifest: java.util.HashMap entries>;

        $r3 = r0.<android.util.jar.StrictJarManifest: java.util.HashMap chunks>;

        virtualinvoke $r1.<android.util.jar.StrictJarManifestReader: void readEntries(java.util.Map,java.util.Map)>($r4, $r3);

        return;
    }

    static void write(android.util.jar.StrictJarManifest, java.io.OutputStream) throws java.io.IOException
    {
        android.util.jar.StrictJarManifest r0;
        java.io.OutputStream r1;
        java.nio.charset.CharsetEncoder r2;
        java.nio.ByteBuffer r3;
        java.util.jar.Attributes r4, $r6, $r18, $r21, $r23;
        java.nio.charset.Charset $r5;
        byte[] $r7, $r15;
        java.util.Map $r8;
        java.util.Set $r9, $r14, $r19;
        java.lang.Object $r10, $r13, $r16, $r20;
        java.util.jar.Attributes$Name $r11, r24, r28, r32;
        java.util.HashMap $r12;
        boolean $z0, $z1, $z2, $z3;
        java.lang.String $r17, $r22, r25, r26, r30;
        java.util.Iterator r27, r29, r31;

        r0 := @parameter0: android.util.jar.StrictJarManifest;

        r1 := @parameter1: java.io.OutputStream;

        $r5 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;

        r2 = virtualinvoke $r5.<java.nio.charset.Charset: java.nio.charset.CharsetEncoder newEncoder()>();

        r3 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>(72);

        r24 = <java.util.jar.Attributes$Name: java.util.jar.Attributes$Name MANIFEST_VERSION>;

        $r6 = r0.<android.util.jar.StrictJarManifest: java.util.jar.Attributes mainAttributes>;

        r25 = virtualinvoke $r6.<java.util.jar.Attributes: java.lang.String getValue(java.util.jar.Attributes$Name)>(r24);

        r26 = r25;

        if r25 != null goto label1;

        r24 = <java.util.jar.Attributes$Name: java.util.jar.Attributes$Name SIGNATURE_VERSION>;

        $r23 = r0.<android.util.jar.StrictJarManifest: java.util.jar.Attributes mainAttributes>;

        r26 = virtualinvoke $r23.<java.util.jar.Attributes: java.lang.String getValue(java.util.jar.Attributes$Name)>(r24);

     label1:
        if r26 == null goto label4;

        staticinvoke <android.util.jar.StrictJarManifest: void writeEntry(java.io.OutputStream,java.util.jar.Attributes$Name,java.lang.String,java.nio.charset.CharsetEncoder,java.nio.ByteBuffer)>(r1, r24, r26, r2, r3);

        $r18 = r0.<android.util.jar.StrictJarManifest: java.util.jar.Attributes mainAttributes>;

        $r19 = virtualinvoke $r18.<java.util.jar.Attributes: java.util.Set keySet()>();

        r27 = interfaceinvoke $r19.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke r27.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r20 = interfaceinvoke r27.<java.util.Iterator: java.lang.Object next()>();

        r28 = (java.util.jar.Attributes$Name) $r20;

        $z2 = virtualinvoke r28.<java.util.jar.Attributes$Name: boolean equals(java.lang.Object)>(r24);

        if $z2 != 0 goto label3;

        $r21 = r0.<android.util.jar.StrictJarManifest: java.util.jar.Attributes mainAttributes>;

        $r22 = virtualinvoke $r21.<java.util.jar.Attributes: java.lang.String getValue(java.util.jar.Attributes$Name)>(r28);

        staticinvoke <android.util.jar.StrictJarManifest: void writeEntry(java.io.OutputStream,java.util.jar.Attributes$Name,java.lang.String,java.nio.charset.CharsetEncoder,java.nio.ByteBuffer)>(r1, r28, $r22, r2, r3);

     label3:
        goto label2;

     label4:
        $r7 = <android.util.jar.StrictJarManifest: byte[] LINE_SEPARATOR>;

        virtualinvoke r1.<java.io.OutputStream: void write(byte[])>($r7);

        $r8 = virtualinvoke r0.<android.util.jar.StrictJarManifest: java.util.Map getEntries()>();

        $r9 = interfaceinvoke $r8.<java.util.Map: java.util.Set keySet()>();

        r29 = interfaceinvoke $r9.<java.util.Set: java.util.Iterator iterator()>();

     label5:
        $z3 = interfaceinvoke r29.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label8;

        $r10 = interfaceinvoke r29.<java.util.Iterator: java.lang.Object next()>();

        r30 = (java.lang.String) $r10;

        $r11 = <android.util.jar.StrictJarManifest: java.util.jar.Attributes$Name ATTRIBUTE_NAME_NAME>;

        staticinvoke <android.util.jar.StrictJarManifest: void writeEntry(java.io.OutputStream,java.util.jar.Attributes$Name,java.lang.String,java.nio.charset.CharsetEncoder,java.nio.ByteBuffer)>(r1, $r11, r30, r2, r3);

        $r12 = r0.<android.util.jar.StrictJarManifest: java.util.HashMap entries>;

        $r13 = virtualinvoke $r12.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r30);

        r4 = (java.util.jar.Attributes) $r13;

        $r14 = virtualinvoke r4.<java.util.jar.Attributes: java.util.Set keySet()>();

        r31 = interfaceinvoke $r14.<java.util.Set: java.util.Iterator iterator()>();

     label6:
        $z0 = interfaceinvoke r31.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label7;

        $r16 = interfaceinvoke r31.<java.util.Iterator: java.lang.Object next()>();

        r32 = (java.util.jar.Attributes$Name) $r16;

        $r17 = virtualinvoke r4.<java.util.jar.Attributes: java.lang.String getValue(java.util.jar.Attributes$Name)>(r32);

        staticinvoke <android.util.jar.StrictJarManifest: void writeEntry(java.io.OutputStream,java.util.jar.Attributes$Name,java.lang.String,java.nio.charset.CharsetEncoder,java.nio.ByteBuffer)>(r1, r32, $r17, r2, r3);

        goto label6;

     label7:
        $r15 = <android.util.jar.StrictJarManifest: byte[] LINE_SEPARATOR>;

        virtualinvoke r1.<java.io.OutputStream: void write(byte[])>($r15);

        goto label5;

     label8:
        return;
    }

    private static void writeEntry(java.io.OutputStream, java.util.jar.Attributes$Name, java.lang.String, java.nio.charset.CharsetEncoder, java.nio.ByteBuffer) throws java.io.IOException
    {
        java.io.OutputStream r0;
        java.nio.charset.CharsetEncoder r1;
        java.nio.ByteBuffer r2;
        java.nio.CharBuffer r3;
        java.nio.charset.Charset $r4;
        byte[] $r5, $r6, $r11, $r12;
        java.nio.Buffer $r8, $r14;
        int $i0, $i1, $i2, $i3, $i4;
        java.nio.charset.CoderResult $r10, $r13, r19, r20;
        java.util.jar.Attributes$Name r16;
        java.lang.String r17, r18;

        r0 := @parameter0: java.io.OutputStream;

        r16 := @parameter1: java.util.jar.Attributes$Name;

        r17 := @parameter2: java.lang.String;

        r1 := @parameter3: java.nio.charset.CharsetEncoder;

        r2 := @parameter4: java.nio.ByteBuffer;

        r18 = virtualinvoke r16.<java.util.jar.Attributes$Name: java.lang.String toString()>();

        $r4 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset US_ASCII>;

        $r5 = virtualinvoke r18.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r4);

        virtualinvoke r0.<java.io.OutputStream: void write(byte[])>($r5);

        $r6 = <android.util.jar.StrictJarManifest: byte[] VALUE_SEPARATOR>;

        virtualinvoke r0.<java.io.OutputStream: void write(byte[])>($r6);

        virtualinvoke r1.<java.nio.charset.CharsetEncoder: java.nio.charset.CharsetEncoder reset()>();

        $r8 = virtualinvoke r2.<java.nio.ByteBuffer: java.nio.Buffer clear()>();

        $i0 = virtualinvoke r18.<java.lang.String: int length()>();

        $i1 = 72 - $i0;

        $i2 = $i1 - 2;

        virtualinvoke $r8.<java.nio.Buffer: java.nio.Buffer limit(int)>($i2);

        r3 = staticinvoke <java.nio.CharBuffer: java.nio.CharBuffer wrap(java.lang.CharSequence)>(r17);

     label1:
        r19 = virtualinvoke r1.<java.nio.charset.CharsetEncoder: java.nio.charset.CoderResult encode(java.nio.CharBuffer,java.nio.ByteBuffer,boolean)>(r3, r2, 1);

        r20 = r19;

        $r10 = <java.nio.charset.CoderResult: java.nio.charset.CoderResult UNDERFLOW>;

        if $r10 != r19 goto label2;

        r20 = virtualinvoke r1.<java.nio.charset.CharsetEncoder: java.nio.charset.CoderResult flush(java.nio.ByteBuffer)>(r2);

     label2:
        $r11 = virtualinvoke r2.<java.nio.ByteBuffer: byte[] array()>();

        $i3 = virtualinvoke r2.<java.nio.ByteBuffer: int arrayOffset()>();

        $i4 = virtualinvoke r2.<java.nio.ByteBuffer: int position()>();

        virtualinvoke r0.<java.io.OutputStream: void write(byte[],int,int)>($r11, $i3, $i4);

        $r12 = <android.util.jar.StrictJarManifest: byte[] LINE_SEPARATOR>;

        virtualinvoke r0.<java.io.OutputStream: void write(byte[])>($r12);

        $r13 = <java.nio.charset.CoderResult: java.nio.charset.CoderResult UNDERFLOW>;

        if $r13 != r20 goto label3;

        return;

     label3:
        virtualinvoke r0.<java.io.OutputStream: void write(int)>(32);

        $r14 = virtualinvoke r2.<java.nio.ByteBuffer: java.nio.Buffer clear()>();

        virtualinvoke $r14.<java.nio.Buffer: java.nio.Buffer limit(int)>(71);

        goto label1;
    }

    public void clear()
    {
        android.util.jar.StrictJarManifest r0;
        java.util.HashMap $r1;
        java.util.jar.Attributes $r2;

        r0 := @this: android.util.jar.StrictJarManifest;

        $r1 = r0.<android.util.jar.StrictJarManifest: java.util.HashMap entries>;

        virtualinvoke $r1.<java.util.HashMap: void clear()>();

        $r2 = r0.<android.util.jar.StrictJarManifest: java.util.jar.Attributes mainAttributes>;

        virtualinvoke $r2.<java.util.jar.Attributes: void clear()>();

        return;
    }

    public java.lang.Object clone()
    {
        android.util.jar.StrictJarManifest r0, $r1;

        r0 := @this: android.util.jar.StrictJarManifest;

        $r1 = new android.util.jar.StrictJarManifest;

        specialinvoke $r1.<android.util.jar.StrictJarManifest: void <init>(android.util.jar.StrictJarManifest)>(r0);

        return $r1;
    }

    public boolean equals(java.lang.Object)
    {
        android.util.jar.StrictJarManifest r0, $r4, $r8;
        java.lang.Object r1;
        java.lang.Class $r2, $r3;
        java.util.jar.Attributes $r5, $r6;
        boolean $z0, $z1;
        java.util.Map $r7, $r9;

        r0 := @this: android.util.jar.StrictJarManifest;

        r1 := @parameter0: java.lang.Object;

        if r1 != null goto label1;

        return 0;

     label1:
        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        if $r2 == $r3 goto label2;

        return 0;

     label2:
        $r6 = r0.<android.util.jar.StrictJarManifest: java.util.jar.Attributes mainAttributes>;

        $r4 = (android.util.jar.StrictJarManifest) r1;

        $r5 = $r4.<android.util.jar.StrictJarManifest: java.util.jar.Attributes mainAttributes>;

        $z0 = virtualinvoke $r6.<java.util.jar.Attributes: boolean equals(java.lang.Object)>($r5);

        if $z0 != 0 goto label3;

        return 0;

     label3:
        $r7 = virtualinvoke r0.<android.util.jar.StrictJarManifest: java.util.Map getEntries()>();

        $r8 = (android.util.jar.StrictJarManifest) r1;

        $r9 = virtualinvoke $r8.<android.util.jar.StrictJarManifest: java.util.Map getEntries()>();

        $z1 = interfaceinvoke $r7.<java.util.Map: boolean equals(java.lang.Object)>($r9);

        return $z1;
    }

    public java.util.jar.Attributes getAttributes(java.lang.String)
    {
        android.util.jar.StrictJarManifest r0;
        java.lang.String r1;
        java.util.Map $r2;
        java.lang.Object $r3;
        java.util.jar.Attributes $r4;

        r0 := @this: android.util.jar.StrictJarManifest;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<android.util.jar.StrictJarManifest: java.util.Map getEntries()>();

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (java.util.jar.Attributes) $r3;

        return $r4;
    }

    android.util.jar.StrictJarManifest$Chunk getChunk(java.lang.String)
    {
        android.util.jar.StrictJarManifest r0;
        java.lang.String r1;
        java.util.HashMap $r2;
        java.lang.Object $r3;
        android.util.jar.StrictJarManifest$Chunk $r4;

        r0 := @this: android.util.jar.StrictJarManifest;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<android.util.jar.StrictJarManifest: java.util.HashMap chunks>;

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (android.util.jar.StrictJarManifest$Chunk) $r3;

        return $r4;
    }

    public java.util.Map getEntries()
    {
        android.util.jar.StrictJarManifest r0;
        java.util.HashMap $r1;

        r0 := @this: android.util.jar.StrictJarManifest;

        $r1 = r0.<android.util.jar.StrictJarManifest: java.util.HashMap entries>;

        return $r1;
    }

    public java.util.jar.Attributes getMainAttributes()
    {
        android.util.jar.StrictJarManifest r0;
        java.util.jar.Attributes $r1;

        r0 := @this: android.util.jar.StrictJarManifest;

        $r1 = r0.<android.util.jar.StrictJarManifest: java.util.jar.Attributes mainAttributes>;

        return $r1;
    }

    int getMainAttributesEnd()
    {
        android.util.jar.StrictJarManifest r0;
        int $i0;

        r0 := @this: android.util.jar.StrictJarManifest;

        $i0 = r0.<android.util.jar.StrictJarManifest: int mainEnd>;

        return $i0;
    }

    public int hashCode()
    {
        android.util.jar.StrictJarManifest r0;
        java.util.jar.Attributes $r1;
        int $i0, $i1, $i2;
        java.util.Map $r2;

        r0 := @this: android.util.jar.StrictJarManifest;

        $r1 = r0.<android.util.jar.StrictJarManifest: java.util.jar.Attributes mainAttributes>;

        $i0 = virtualinvoke $r1.<java.util.jar.Attributes: int hashCode()>();

        $r2 = virtualinvoke r0.<android.util.jar.StrictJarManifest: java.util.Map getEntries()>();

        $i1 = interfaceinvoke $r2.<java.util.Map: int hashCode()>();

        $i2 = $i0 ^ $i1;

        return $i2;
    }

    public void read(java.io.InputStream) throws java.io.IOException
    {
        android.util.jar.StrictJarManifest r0;
        java.io.InputStream r1;
        byte[] $r2;

        r0 := @this: android.util.jar.StrictJarManifest;

        r1 := @parameter0: java.io.InputStream;

        $r2 = staticinvoke <libcore.io.Streams: byte[] readFullyNoClose(java.io.InputStream)>(r1);

        specialinvoke r0.<android.util.jar.StrictJarManifest: void read(byte[])>($r2);

        return;
    }

    void removeChunks()
    {
        android.util.jar.StrictJarManifest r0;

        r0 := @this: android.util.jar.StrictJarManifest;

        r0.<android.util.jar.StrictJarManifest: java.util.HashMap chunks> = null;

        return;
    }

    public void write(java.io.OutputStream) throws java.io.IOException
    {
        android.util.jar.StrictJarManifest r0;
        java.io.OutputStream r1;

        r0 := @this: android.util.jar.StrictJarManifest;

        r1 := @parameter0: java.io.OutputStream;

        staticinvoke <android.util.jar.StrictJarManifest: void write(android.util.jar.StrictJarManifest,java.io.OutputStream)>(r0, r1);

        return;
    }
}
