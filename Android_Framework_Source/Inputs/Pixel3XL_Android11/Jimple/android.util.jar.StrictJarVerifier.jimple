class android.util.jar.StrictJarVerifier extends java.lang.Object
{
    private static final java.lang.String[] DIGEST_ALGORITHMS;
    private static final java.lang.String SF_ATTRIBUTE_ANDROID_APK_SIGNED_NAME;
    private final java.util.Hashtable certificates;
    private final java.lang.String jarName;
    private final int mainAttributesEnd;
    private final android.util.jar.StrictJarManifest manifest;
    private final java.util.HashMap metaEntries;
    private final boolean signatureSchemeRollbackProtectionsEnforced;
    private final java.util.Hashtable signatures;
    private final java.util.Hashtable verifiedEntries;

    static void <clinit>()
    {
        java.lang.String[] $r0;

        <android.util.jar.StrictJarVerifier: java.lang.String SF_ATTRIBUTE_ANDROID_APK_SIGNED_NAME> = "X-Android-APK-Signed";

        $r0 = newarray (java.lang.String)[4];

        $r0[0] = "SHA-512";

        $r0[1] = "SHA-384";

        $r0[2] = "SHA-256";

        $r0[3] = "SHA1";

        <android.util.jar.StrictJarVerifier: java.lang.String[] DIGEST_ALGORITHMS> = $r0;

        return;
    }

    void <init>(java.lang.String, android.util.jar.StrictJarManifest, java.util.HashMap, boolean)
    {
        android.util.jar.StrictJarVerifier r0;
        java.lang.String r1;
        android.util.jar.StrictJarManifest r2;
        java.util.HashMap r3;
        boolean z0;
        java.util.Hashtable $r4, $r5, $r6;
        int $i0;

        r0 := @this: android.util.jar.StrictJarVerifier;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.util.jar.StrictJarManifest;

        r3 := @parameter2: java.util.HashMap;

        z0 := @parameter3: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r4 = new java.util.Hashtable;

        specialinvoke $r4.<java.util.Hashtable: void <init>(int)>(5);

        r0.<android.util.jar.StrictJarVerifier: java.util.Hashtable signatures> = $r4;

        $r5 = new java.util.Hashtable;

        specialinvoke $r5.<java.util.Hashtable: void <init>(int)>(5);

        r0.<android.util.jar.StrictJarVerifier: java.util.Hashtable certificates> = $r5;

        $r6 = new java.util.Hashtable;

        specialinvoke $r6.<java.util.Hashtable: void <init>()>();

        r0.<android.util.jar.StrictJarVerifier: java.util.Hashtable verifiedEntries> = $r6;

        r0.<android.util.jar.StrictJarVerifier: java.lang.String jarName> = r1;

        r0.<android.util.jar.StrictJarVerifier: android.util.jar.StrictJarManifest manifest> = r2;

        r0.<android.util.jar.StrictJarVerifier: java.util.HashMap metaEntries> = r3;

        $i0 = virtualinvoke r2.<android.util.jar.StrictJarManifest: int getMainAttributesEnd()>();

        r0.<android.util.jar.StrictJarVerifier: int mainAttributesEnd> = $i0;

        r0.<android.util.jar.StrictJarVerifier: boolean signatureSchemeRollbackProtectionsEnforced> = z0;

        return;
    }

    static boolean access$000(byte[], byte[])
    {
        byte[] r0, r1;
        boolean $z0;

        r0 := @parameter0: byte[];

        r1 := @parameter1: byte[];

        $z0 = staticinvoke <android.util.jar.StrictJarVerifier: boolean verifyMessageDigest(byte[],byte[])>(r0, r1);

        return $z0;
    }

    static java.lang.SecurityException access$100(java.lang.String, java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1, r2;
        java.lang.SecurityException $r3;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        $r3 = staticinvoke <android.util.jar.StrictJarVerifier: java.lang.SecurityException invalidDigest(java.lang.String,java.lang.String,java.lang.String)>(r0, r1, r2);

        return $r3;
    }

    private static java.lang.SecurityException failedVerification(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1, $r8;
        java.lang.StringBuilder $r3;
        java.lang.SecurityException $r7;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" failed verification of ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r7 = new java.lang.SecurityException;

        $r8 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.SecurityException: void <init>(java.lang.String)>($r8);

        throw $r7;
    }

    private static java.lang.SecurityException failedVerification(java.lang.String, java.lang.String, java.lang.Throwable)
    {
        java.lang.String r0, r1, $r9;
        java.lang.Throwable r2;
        java.lang.StringBuilder $r4;
        java.lang.SecurityException $r8;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.Throwable;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" failed verification of ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r8 = new java.lang.SecurityException;

        $r9 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.SecurityException: void <init>(java.lang.String,java.lang.Throwable)>($r9, r2);

        throw $r8;
    }

    private static java.lang.SecurityException invalidDigest(java.lang.String, java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1, r2, $r11;
        java.lang.StringBuilder $r4;
        java.lang.SecurityException $r10;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has invalid digest for ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r10 = new java.lang.SecurityException;

        $r11 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.SecurityException: void <init>(java.lang.String)>($r11);

        throw $r10;
    }

    private boolean verify(java.util.jar.Attributes, java.lang.String, byte[], int, int, boolean, boolean)
    {
        android.util.jar.StrictJarVerifier r0;
        java.util.jar.Attributes r1;
        java.lang.String r2, $r7, r10, r12;
        byte[] r3, $r14, $r16;
        int i0, i1, $i2, $i3, $i5, $i7, $i8, i9, $i10;
        boolean z0, z1, $z2;
        java.lang.StringBuilder $r4;
        byte $b4, $b6;
        java.lang.Throwable $r8;
        java.lang.String[] r9;
        java.security.MessageDigest r13;
        java.nio.charset.Charset $r15;

        r0 := @this: android.util.jar.StrictJarVerifier;

        r1 := @parameter0: java.util.jar.Attributes;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: byte[];

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        z0 := @parameter5: boolean;

        z1 := @parameter6: boolean;

        i9 = 0;

     label1:
        r9 = <android.util.jar.StrictJarVerifier: java.lang.String[] DIGEST_ALGORITHMS>;

        $i2 = lengthof r9;

        if i9 >= $i2 goto label8;

        r10 = r9[i9];

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        r12 = virtualinvoke r1.<java.util.jar.Attributes: java.lang.String getValue(java.lang.String)>($r7);

        if r12 != null goto label2;

        goto label7;

     label2:
        r13 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(r10);

     label3:
        if z0 == 0 goto label4;

        $i3 = i1 - 1;

        $b4 = r3[$i3];

        if $b4 != 10 goto label4;

        $i5 = i1 - 2;

        $b6 = r3[$i5];

        if $b6 != 10 goto label4;

        $i7 = i1 - 1;

        $i8 = $i7 - i0;

        virtualinvoke r13.<java.security.MessageDigest: void update(byte[],int,int)>(r3, i0, $i8);

        goto label5;

     label4:
        $i10 = i1 - i0;

        virtualinvoke r13.<java.security.MessageDigest: void update(byte[],int,int)>(r3, i0, $i10);

     label5:
        $r14 = virtualinvoke r13.<java.security.MessageDigest: byte[] digest()>();

        $r15 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset ISO_8859_1>;

        $r16 = virtualinvoke r12.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r15);

        $z2 = staticinvoke <android.util.jar.StrictJarVerifier: boolean verifyMessageDigest(byte[],byte[])>($r14, $r16);

        return $z2;

     label6:
        $r8 := @caughtexception;

     label7:
        i9 = i9 + 1;

        goto label1;

     label8:
        return z1;

        catch java.security.NoSuchAlgorithmException from label2 to label3 with label6;
    }

    static java.security.cert.Certificate[] verifyBytes(byte[], byte[]) throws java.security.GeneralSecurityException
    {
        java.lang.Object r0, r8, r9;
        sun.security.pkcs.PKCS7 r1;
        int $i0, $i1;
        boolean $z0;
        java.security.cert.X509Certificate[] $r2;
        java.lang.Object[] $r3;
        java.lang.Throwable $r4, $r5;
        byte[] r6, r7;
        sun.security.pkcs.SignerInfo[] r10;
        sun.security.pkcs.SignerInfo r11;
        java.util.ArrayList r12;
        java.security.cert.Certificate[] r13;
        java.security.GeneralSecurityException r14, r15, r16, r19;

        r6 := @parameter0: byte[];

        r7 := @parameter1: byte[];

        r8 = null;

        r9 = null;

     label01:
        r0 = staticinvoke <sun.security.jca.Providers: java.lang.Object startJarVerification()>();

     label02:
        r9 = r0;

        r8 = r0;

     label03:
        r1 = new sun.security.pkcs.PKCS7;

     label04:
        r9 = r0;

        r8 = r0;

     label05:
        specialinvoke r1.<sun.security.pkcs.PKCS7: void <init>(byte[])>(r6);

     label06:
        r9 = r0;

        r8 = r0;

     label07:
        r10 = virtualinvoke r1.<sun.security.pkcs.PKCS7: sun.security.pkcs.SignerInfo[] verify(byte[])>(r7);

     label08:
        if r10 == null goto label29;

        r9 = r0;

        r8 = r0;

     label09:
        $i0 = lengthof r10;

        if $i0 == 0 goto label29;

     label10:
        r11 = r10[0];

        r9 = r0;

        r8 = r0;

     label11:
        r12 = virtualinvoke r11.<sun.security.pkcs.SignerInfo: java.util.ArrayList getCertificateChain(sun.security.pkcs.PKCS7)>(r1);

     label12:
        if r12 == null goto label23;

        r9 = r0;

        r8 = r0;

     label13:
        $z0 = interfaceinvoke r12.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label17;

     label14:
        r9 = r0;

        r8 = r0;

     label15:
        $i1 = interfaceinvoke r12.<java.util.List: int size()>();

        $r2 = newarray (java.security.cert.X509Certificate)[$i1];

        $r3 = interfaceinvoke r12.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r2);

        r13 = (java.security.cert.Certificate[]) $r3;

     label16:
        staticinvoke <sun.security.jca.Providers: void stopJarVerification(java.lang.Object)>(r0);

        return r13;

     label17:
        r9 = r0;

        r8 = r0;

     label18:
        r14 = new java.security.GeneralSecurityException;

     label19:
        r9 = r0;

        r8 = r0;

     label20:
        specialinvoke r14.<java.security.GeneralSecurityException: void <init>(java.lang.String)>("Verified SignerInfo certificate chain is emtpy");

     label21:
        r9 = r0;

        r8 = r0;

     label22:
        throw r14;

     label23:
        r9 = r0;

        r8 = r0;

     label24:
        r15 = new java.security.GeneralSecurityException;

     label25:
        r9 = r0;

        r8 = r0;

     label26:
        specialinvoke r15.<java.security.GeneralSecurityException: void <init>(java.lang.String)>("Failed to find verified SignerInfo certificate chain");

     label27:
        r9 = r0;

        r8 = r0;

     label28:
        throw r15;

     label29:
        r9 = r0;

        r8 = r0;

     label30:
        r16 = new java.security.GeneralSecurityException;

     label31:
        r9 = r0;

        r8 = r0;

     label32:
        specialinvoke r16.<java.security.GeneralSecurityException: void <init>(java.lang.String)>("Failed to verify signature: no verified SignerInfos");

     label33:
        r9 = r0;

        r8 = r0;

     label34:
        throw r16;

     label35:
        $r5 := @caughtexception;

        goto label42;

     label36:
        $r4 := @caughtexception;

        r9 = r8;

     label37:
        r19 = new java.security.GeneralSecurityException;

     label38:
        r9 = r8;

     label39:
        specialinvoke r19.<java.security.GeneralSecurityException: void <init>(java.lang.String,java.lang.Throwable)>("IO exception verifying jar cert", $r4);

     label40:
        r9 = r8;

     label41:
        throw r19;

     label42:
        staticinvoke <sun.security.jca.Providers: void stopJarVerification(java.lang.Object)>(r9);

        throw $r5;

        catch java.io.IOException from label01 to label02 with label36;
        catch java.lang.Throwable from label01 to label02 with label35;
        catch java.io.IOException from label03 to label04 with label36;
        catch java.lang.Throwable from label03 to label04 with label35;
        catch java.io.IOException from label05 to label06 with label36;
        catch java.lang.Throwable from label05 to label06 with label35;
        catch java.io.IOException from label07 to label08 with label36;
        catch java.lang.Throwable from label07 to label08 with label35;
        catch java.io.IOException from label09 to label10 with label36;
        catch java.lang.Throwable from label09 to label10 with label35;
        catch java.io.IOException from label11 to label12 with label36;
        catch java.lang.Throwable from label11 to label12 with label35;
        catch java.io.IOException from label13 to label14 with label36;
        catch java.lang.Throwable from label13 to label14 with label35;
        catch java.io.IOException from label15 to label16 with label36;
        catch java.lang.Throwable from label15 to label16 with label35;
        catch java.io.IOException from label18 to label19 with label36;
        catch java.lang.Throwable from label18 to label19 with label35;
        catch java.io.IOException from label20 to label21 with label36;
        catch java.lang.Throwable from label20 to label21 with label35;
        catch java.io.IOException from label22 to label23 with label36;
        catch java.lang.Throwable from label22 to label23 with label35;
        catch java.io.IOException from label24 to label25 with label36;
        catch java.lang.Throwable from label24 to label25 with label35;
        catch java.io.IOException from label26 to label27 with label36;
        catch java.lang.Throwable from label26 to label27 with label35;
        catch java.io.IOException from label28 to label29 with label36;
        catch java.lang.Throwable from label28 to label29 with label35;
        catch java.io.IOException from label30 to label31 with label36;
        catch java.lang.Throwable from label30 to label31 with label35;
        catch java.io.IOException from label32 to label33 with label36;
        catch java.lang.Throwable from label32 to label33 with label35;
        catch java.io.IOException from label34 to label35 with label36;
        catch java.lang.Throwable from label34 to label35 with label35;
        catch java.lang.Throwable from label37 to label38 with label35;
        catch java.lang.Throwable from label39 to label40 with label35;
        catch java.lang.Throwable from label41 to label42 with label35;
    }

    private void verifyCertificate(java.lang.String)
    {
        android.util.jar.StrictJarVerifier r0;
        java.lang.String r1, $r6, $r25, $r29, $r30, $r32, $r38, $r42, $r46, $r50, $r51, $r56, r60, r68, r70, r76, r77;
        android.util.jar.StrictJarManifest$Chunk r4;
        java.lang.StringBuilder $r5, $r35, $r43;
        int $i0, $i1, $i2, $i3, $i4, i5, i6;
        java.util.HashMap $r9, $r11, $r13, $r16, $r17;
        java.lang.Object $r10, $r12, $r14, $r22, $r24, $r26, $r28, $r75;
        java.util.jar.Attributes $r15, $r27;
        boolean $z2, $z3, $z4, $z5, $z6, $z7, z8, z9, $z10, z11;
        java.util.Hashtable $r19, $r52;
        java.util.Set $r21;
        android.util.jar.StrictJarManifest $r23;
        java.lang.SecurityException $r31, $r33, $r41, $r49, $r57;
        java.util.StringTokenizer $r34;
        java.lang.Exception $r54;
        java.lang.Throwable $r55, $r58, $r59, r66;
        byte[] r62, r63, r64;
        java.security.cert.Certificate[] r65;
        android.util.jar.StrictJarManifestReader r67;
        java.util.jar.Attributes$Name $r74;
        java.util.Iterator r78;
        java.util.Map$Entry r80;

        r0 := @this: android.util.jar.StrictJarVerifier;

        r60 := @parameter0: java.lang.String;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $i0 = virtualinvoke r60.<java.lang.String: int lastIndexOf(int)>(46);

        $r6 = virtualinvoke r60.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".SF");

        r1 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r9 = r0.<android.util.jar.StrictJarVerifier: java.util.HashMap metaEntries>;

        $r10 = virtualinvoke $r9.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r62 = (byte[]) $r10;

        if r62 != null goto label01;

        return;

     label01:
        $r11 = r0.<android.util.jar.StrictJarVerifier: java.util.HashMap metaEntries>;

        $r12 = virtualinvoke $r11.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("META-INF/MANIFEST.MF");

        r63 = (byte[]) $r12;

        if r63 != null goto label02;

        return;

     label02:
        $r13 = r0.<android.util.jar.StrictJarVerifier: java.util.HashMap metaEntries>;

        $r14 = virtualinvoke $r13.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r60);

        r64 = (byte[]) $r14;

     label03:
        r65 = staticinvoke <android.util.jar.StrictJarVerifier: java.security.cert.Certificate[] verifyBytes(byte[],byte[])>(r64, r62);

     label04:
        if r65 == null goto label08;

     label05:
        $r52 = r0.<android.util.jar.StrictJarVerifier: java.util.Hashtable certificates>;

        virtualinvoke $r52.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r65);

     label06:
        goto label08;

     label07:
        $r59 := @caughtexception;

        r66 = $r59;

        goto label35;

     label08:
        $r15 = new java.util.jar.Attributes;

        specialinvoke $r15.<java.util.jar.Attributes: void <init>()>();

        $r16 = new java.util.HashMap;

        specialinvoke $r16.<java.util.HashMap: void <init>()>();

     label09:
        r67 = new android.util.jar.StrictJarManifestReader;

        specialinvoke r67.<android.util.jar.StrictJarManifestReader: void <init>(byte[],java.util.jar.Attributes)>(r62, $r15);

        virtualinvoke r67.<android.util.jar.StrictJarManifestReader: void readEntries(java.util.Map,java.util.Map)>($r16, null);

     label10:
        $z2 = r0.<android.util.jar.StrictJarVerifier: boolean signatureSchemeRollbackProtectionsEnforced>;

        if $z2 == 0 goto label20;

        r68 = virtualinvoke $r15.<java.util.jar.Attributes: java.lang.String getValue(java.lang.String)>("X-Android-APK-Signed");

        if r68 == null goto label20;

        $r34 = new java.util.StringTokenizer;

        specialinvoke $r34.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>(r68, ",");

     label11:
        z8 = 0;

        z9 = 0;

        $z10 = virtualinvoke $r34.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z10 == 0 goto label17;

        $r51 = virtualinvoke $r34.<java.util.StringTokenizer: java.lang.String nextToken()>();

        r70 = virtualinvoke $r51.<java.lang.String: java.lang.String trim()>();

        $z7 = virtualinvoke r70.<java.lang.String: boolean isEmpty()>();

        if $z7 == 0 goto label12;

        goto label11;

     label12:
        i5 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r70);

     label13:
        if i5 != 2 goto label14;

        z8 = 1;

        z9 = 0;

        goto label17;

     label14:
        if i5 != 3 goto label15;

        z9 = 1;

        z8 = 0;

        goto label17;

     label15:
        goto label11;

     label16:
        $r54 := @caughtexception;

        goto label11;

     label17:
        if z8 != 0 goto label19;

        if z9 != 0 goto label18;

        goto label20;

     label18:
        $r43 = new java.lang.StringBuilder;

        specialinvoke $r43.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" indicates ");

        $r46 = r0.<android.util.jar.StrictJarVerifier: java.lang.String jarName>;

        virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r46);

        virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is signed using APK Signature Scheme v3, but no such signature was found. Signature stripped?");

        $r49 = new java.lang.SecurityException;

        $r50 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r49.<java.lang.SecurityException: void <init>(java.lang.String)>($r50);

        throw $r49;

     label19:
        $r35 = new java.lang.StringBuilder;

        specialinvoke $r35.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" indicates ");

        $r38 = r0.<android.util.jar.StrictJarVerifier: java.lang.String jarName>;

        virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r38);

        virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is signed using APK Signature Scheme v2, but no such signature was found. Signature stripped?");

        $r41 = new java.lang.SecurityException;

        $r42 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r41.<java.lang.SecurityException: void <init>(java.lang.String)>($r42);

        throw $r41;

     label20:
        $r74 = <java.util.jar.Attributes$Name: java.util.jar.Attributes$Name SIGNATURE_VERSION>;

        $r75 = virtualinvoke $r15.<java.util.jar.Attributes: java.lang.Object get(java.lang.Object)>($r74);

        if $r75 != null goto label21;

        return;

     label21:
        z11 = 0;

        r76 = virtualinvoke $r15.<java.util.jar.Attributes: java.lang.String getValue(java.lang.String)>("Created-By");

        if r76 == null goto label23;

        $i4 = virtualinvoke r76.<java.lang.String: int indexOf(java.lang.String)>("signtool");

        if $i4 == -1 goto label22;

        z11 = 1;

        goto label23;

     label22:
        z11 = 0;

     label23:
        i6 = r0.<android.util.jar.StrictJarVerifier: int mainAttributesEnd>;

        if i6 <= 0 goto label25;

        if z11 != 0 goto label25;

        $z6 = specialinvoke r0.<android.util.jar.StrictJarVerifier: boolean verify(java.util.jar.Attributes,java.lang.String,byte[],int,int,boolean,boolean)>($r15, "-Digest-Manifest-Main-Attributes", r63, 0, i6, 0, 1);

        if $z6 == 0 goto label24;

        goto label25;

     label24:
        $r32 = r0.<android.util.jar.StrictJarVerifier: java.lang.String jarName>;

        $r33 = staticinvoke <android.util.jar.StrictJarVerifier: java.lang.SecurityException failedVerification(java.lang.String,java.lang.String)>($r32, r1);

        throw $r33;

     label25:
        if z11 == 0 goto label26;

        r77 = "-Digest";

        goto label27;

     label26:
        r77 = "-Digest-Manifest";

     label27:
        $i1 = lengthof r63;

        $z3 = specialinvoke r0.<android.util.jar.StrictJarVerifier: boolean verify(java.util.jar.Attributes,java.lang.String,byte[],int,int,boolean,boolean)>($r15, r77, r63, 0, $i1, 0, 0);

        if $z3 != 0 goto label32;

        $r21 = virtualinvoke $r16.<java.util.HashMap: java.util.Set entrySet()>();

        r78 = interfaceinvoke $r21.<java.util.Set: java.util.Iterator iterator()>();

     label28:
        $z4 = interfaceinvoke r78.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label31;

        $r22 = interfaceinvoke r78.<java.util.Iterator: java.lang.Object next()>();

        r80 = (java.util.Map$Entry) $r22;

        $r23 = r0.<android.util.jar.StrictJarVerifier: android.util.jar.StrictJarManifest manifest>;

        $r24 = interfaceinvoke r80.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r25 = (java.lang.String) $r24;

        r4 = virtualinvoke $r23.<android.util.jar.StrictJarManifest: android.util.jar.StrictJarManifest$Chunk getChunk(java.lang.String)>($r25);

        if r4 != null goto label29;

        return;

     label29:
        $r26 = interfaceinvoke r80.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r27 = (java.util.jar.Attributes) $r26;

        $i3 = r4.<android.util.jar.StrictJarManifest$Chunk: int start>;

        $i2 = r4.<android.util.jar.StrictJarManifest$Chunk: int end>;

        $z5 = specialinvoke r0.<android.util.jar.StrictJarVerifier: boolean verify(java.util.jar.Attributes,java.lang.String,byte[],int,int,boolean,boolean)>($r27, "-Digest", r63, $i3, $i2, z11, 0);

        if $z5 == 0 goto label30;

        goto label28;

     label30:
        $r28 = interfaceinvoke r80.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r30 = (java.lang.String) $r28;

        $r29 = r0.<android.util.jar.StrictJarVerifier: java.lang.String jarName>;

        $r31 = staticinvoke <android.util.jar.StrictJarVerifier: java.lang.SecurityException invalidDigest(java.lang.String,java.lang.String,java.lang.String)>(r1, $r30, $r29);

        throw $r31;

     label31:
        goto label32;

     label32:
        $r17 = r0.<android.util.jar.StrictJarVerifier: java.util.HashMap metaEntries>;

        virtualinvoke $r17.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, null);

        $r19 = r0.<android.util.jar.StrictJarVerifier: java.util.Hashtable signatures>;

        virtualinvoke $r19.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r16);

        return;

     label33:
        $r58 := @caughtexception;

        return;

     label34:
        $r55 := @caughtexception;

        r66 = $r55;

     label35:
        $r56 = r0.<android.util.jar.StrictJarVerifier: java.lang.String jarName>;

        $r57 = staticinvoke <android.util.jar.StrictJarVerifier: java.lang.SecurityException failedVerification(java.lang.String,java.lang.String,java.lang.Throwable)>($r56, r1, r66);

        throw $r57;

        catch java.security.GeneralSecurityException from label03 to label04 with label34;
        catch java.security.GeneralSecurityException from label05 to label06 with label07;
        catch java.io.IOException from label09 to label10 with label33;
        catch java.lang.Exception from label12 to label13 with label16;
    }

    private static boolean verifyMessageDigest(byte[], byte[])
    {
        java.util.Base64$Decoder $r0;
        boolean $z0;
        java.lang.Throwable $r1;
        byte[] r2, r3, r4;

        r2 := @parameter0: byte[];

        r3 := @parameter1: byte[];

     label1:
        $r0 = staticinvoke <java.util.Base64: java.util.Base64$Decoder getDecoder()>();

        r4 = virtualinvoke $r0.<java.util.Base64$Decoder: byte[] decode(byte[])>(r3);

     label2:
        $z0 = staticinvoke <java.security.MessageDigest: boolean isEqual(byte[],byte[])>(r2, r4);

        return $z0;

     label3:
        $r1 := @caughtexception;

        return 0;

        catch java.lang.IllegalArgumentException from label1 to label2 with label3;
    }

    void addMetaEntry(java.lang.String, byte[])
    {
        android.util.jar.StrictJarVerifier r0;
        java.lang.String r1, $r5;
        byte[] r2;
        java.util.Locale $r3;
        java.util.HashMap $r4;

        r0 := @this: android.util.jar.StrictJarVerifier;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: byte[];

        $r4 = r0.<android.util.jar.StrictJarVerifier: java.util.HashMap metaEntries>;

        $r3 = <java.util.Locale: java.util.Locale US>;

        $r5 = virtualinvoke r1.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>($r3);

        virtualinvoke $r4.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, r2);

        return;
    }

    java.security.cert.Certificate[][] getCertificateChains(java.lang.String)
    {
        android.util.jar.StrictJarVerifier r0;
        java.lang.String r1;
        java.util.Hashtable $r2;
        java.lang.Object $r3;
        java.security.cert.Certificate[][] $r4;

        r0 := @this: android.util.jar.StrictJarVerifier;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<android.util.jar.StrictJarVerifier: java.util.Hashtable verifiedEntries>;

        $r3 = virtualinvoke $r2.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (java.security.cert.Certificate[][]) $r3;

        return $r4;
    }

    android.util.jar.StrictJarVerifier$VerifierEntry initEntry(java.lang.String)
    {
        android.util.jar.StrictJarVerifier r0;
        java.lang.String r1, $r15, r30, r34, r36;
        java.util.jar.Attributes r2;
        java.security.MessageDigest r3;
        android.util.jar.StrictJarManifest $r4, $r6;
        java.util.Hashtable $r5, $r8, $r23, r38;
        boolean $z0, $z1, $z2;
        java.util.ArrayList $r7;
        java.util.Set $r9;
        int $i0, $i1, i2;
        java.security.cert.Certificate[][] $r10, r32;
        java.lang.Object[] $r11;
        java.lang.StringBuilder $r12;
        java.nio.charset.Charset $r16;
        android.util.jar.StrictJarVerifier$VerifierEntry $r17;
        java.lang.Object $r18, $r19, $r21, $r22, $r24;
        java.util.HashMap $r20;
        java.lang.Throwable $r25, $r26;
        java.util.Iterator r28;
        java.util.Map$Entry r29;
        java.security.cert.Certificate[] r31;
        java.lang.String[] r33;
        byte[] r37;

        r0 := @this: android.util.jar.StrictJarVerifier;

        r1 := @parameter0: java.lang.String;

        $r4 = r0.<android.util.jar.StrictJarVerifier: android.util.jar.StrictJarManifest manifest>;

        if $r4 == null goto label16;

        $r5 = r0.<android.util.jar.StrictJarVerifier: java.util.Hashtable signatures>;

        $z0 = virtualinvoke $r5.<java.util.Hashtable: boolean isEmpty()>();

        if $z0 == 0 goto label01;

        goto label16;

     label01:
        $r6 = r0.<android.util.jar.StrictJarVerifier: android.util.jar.StrictJarManifest manifest>;

        r2 = virtualinvoke $r6.<android.util.jar.StrictJarManifest: java.util.jar.Attributes getAttributes(java.lang.String)>(r1);

        if r2 != null goto label02;

        return null;

     label02:
        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        $r8 = r0.<android.util.jar.StrictJarVerifier: java.util.Hashtable signatures>;

        $r9 = virtualinvoke $r8.<java.util.Hashtable: java.util.Set entrySet()>();

        r28 = interfaceinvoke $r9.<java.util.Set: java.util.Iterator iterator()>();

     label03:
        $z1 = interfaceinvoke r28.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label05;

        $r18 = interfaceinvoke r28.<java.util.Iterator: java.lang.Object next()>();

        r29 = (java.util.Map$Entry) $r18;

        $r19 = interfaceinvoke r29.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r20 = (java.util.HashMap) $r19;

        $r21 = virtualinvoke $r20.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        if $r21 == null goto label04;

        $r22 = interfaceinvoke r29.<java.util.Map$Entry: java.lang.Object getKey()>();

        r30 = (java.lang.String) $r22;

        $r23 = r0.<android.util.jar.StrictJarVerifier: java.util.Hashtable certificates>;

        $r24 = virtualinvoke $r23.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r30);

        r31 = (java.security.cert.Certificate[]) $r24;

        if r31 == null goto label04;

        virtualinvoke $r7.<java.util.ArrayList: boolean add(java.lang.Object)>(r31);

     label04:
        goto label03;

     label05:
        $z2 = virtualinvoke $r7.<java.util.ArrayList: boolean isEmpty()>();

        if $z2 == 0 goto label06;

        return null;

     label06:
        $i0 = virtualinvoke $r7.<java.util.ArrayList: int size()>();

        $r10 = newarray (java.security.cert.Certificate[])[$i0];

        $r11 = virtualinvoke $r7.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r10);

        r32 = (java.security.cert.Certificate[][]) $r11;

        i2 = 0;

     label07:
        r33 = <android.util.jar.StrictJarVerifier: java.lang.String[] DIGEST_ALGORITHMS>;

        $i1 = lengthof r33;

        if i2 >= $i1 goto label15;

        r34 = r33[i2];

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r34);

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-Digest");

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        r36 = virtualinvoke r2.<java.util.jar.Attributes: java.lang.String getValue(java.lang.String)>($r15);

        if r36 != null goto label08;

        goto label14;

     label08:
        $r16 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset ISO_8859_1>;

        r37 = virtualinvoke r36.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r16);

     label09:
        r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(r34);

        r38 = r0.<android.util.jar.StrictJarVerifier: java.util.Hashtable verifiedEntries>;

     label10:
        $r17 = new android.util.jar.StrictJarVerifier$VerifierEntry;

        specialinvoke $r17.<android.util.jar.StrictJarVerifier$VerifierEntry: void <init>(java.lang.String,java.security.MessageDigest,byte[],java.security.cert.Certificate[][],java.util.Hashtable)>(r1, r3, r37, r32, r38);

     label11:
        return $r17;

     label12:
        $r25 := @caughtexception;

        goto label14;

     label13:
        $r26 := @caughtexception;

     label14:
        i2 = i2 + 1;

        goto label07;

     label15:
        return null;

     label16:
        return null;

        catch java.security.NoSuchAlgorithmException from label09 to label10 with label13;
        catch java.security.NoSuchAlgorithmException from label10 to label11 with label12;
    }

    boolean isSignedJar()
    {
        android.util.jar.StrictJarVerifier r0;
        java.util.Hashtable $r1;
        int $i0;
        boolean z0;

        r0 := @this: android.util.jar.StrictJarVerifier;

        $r1 = r0.<android.util.jar.StrictJarVerifier: java.util.Hashtable certificates>;

        $i0 = virtualinvoke $r1.<java.util.Hashtable: int size()>();

        if $i0 <= 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    boolean readCertificates()
    {
        android.util.jar.StrictJarVerifier r0;
        boolean z0, $z1, $z2, $z3, $z4;
        java.lang.String r1;
        java.util.HashMap $r2, $r3;
        java.util.Set $r4;
        java.lang.Object $r5;
        java.lang.Throwable $r6;
        java.util.Iterator r7;

        r0 := @this: android.util.jar.StrictJarVerifier;

        entermonitor r0;

     label1:
        $r2 = r0.<android.util.jar.StrictJarVerifier: java.util.HashMap metaEntries>;

        z0 = virtualinvoke $r2.<java.util.HashMap: boolean isEmpty()>();

     label2:
        if z0 == 0 goto label3;

        exitmonitor r0;

        return 0;

     label3:
        $r3 = r0.<android.util.jar.StrictJarVerifier: java.util.HashMap metaEntries>;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.util.Set keySet()>();

        r7 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label4:
        $z1 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label7;

        $r5 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>();

        r1 = (java.lang.String) $r5;

        $z2 = virtualinvoke r1.<java.lang.String: boolean endsWith(java.lang.String)>(".DSA");

        if $z2 != 0 goto label5;

        $z3 = virtualinvoke r1.<java.lang.String: boolean endsWith(java.lang.String)>(".RSA");

        if $z3 != 0 goto label5;

        $z4 = virtualinvoke r1.<java.lang.String: boolean endsWith(java.lang.String)>(".EC");

        if $z4 == 0 goto label6;

     label5:
        specialinvoke r0.<android.util.jar.StrictJarVerifier: void verifyCertificate(java.lang.String)>(r1);

        interfaceinvoke r7.<java.util.Iterator: void remove()>();

     label6:
        goto label4;

     label7:
        exitmonitor r0;

        return 1;

     label8:
        $r6 := @caughtexception;

        exitmonitor r0;

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label4 to label5 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    void removeMetaEntries()
    {
        android.util.jar.StrictJarVerifier r0;
        java.util.HashMap $r1;

        r0 := @this: android.util.jar.StrictJarVerifier;

        $r1 = r0.<android.util.jar.StrictJarVerifier: java.util.HashMap metaEntries>;

        virtualinvoke $r1.<java.util.HashMap: void clear()>();

        return;
    }
}
