class android.view.AccessibilityInteractionController$AccessibilityNodePrefetcher extends java.lang.Object
{
    private static final int MAX_ACCESSIBILITY_NODE_INFO_BATCH_SIZE;
    private final java.util.ArrayList mTempViewList;
    final android.view.AccessibilityInteractionController this$0;

    private void <init>(android.view.AccessibilityInteractionController)
    {
        android.view.AccessibilityInteractionController$AccessibilityNodePrefetcher r0;
        android.view.AccessibilityInteractionController r1;
        java.util.ArrayList $r2;

        r0 := @this: android.view.AccessibilityInteractionController$AccessibilityNodePrefetcher;

        r1 := @parameter0: android.view.AccessibilityInteractionController;

        r0.<android.view.AccessibilityInteractionController$AccessibilityNodePrefetcher: android.view.AccessibilityInteractionController this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<android.view.AccessibilityInteractionController$AccessibilityNodePrefetcher: java.util.ArrayList mTempViewList> = $r2;

        return;
    }

    void <init>(android.view.AccessibilityInteractionController, android.view.AccessibilityInteractionController$1)
    {
        android.view.AccessibilityInteractionController$AccessibilityNodePrefetcher r0;
        android.view.AccessibilityInteractionController r1;
        android.view.AccessibilityInteractionController$1 r2;

        r0 := @this: android.view.AccessibilityInteractionController$AccessibilityNodePrefetcher;

        r1 := @parameter0: android.view.AccessibilityInteractionController;

        r2 := @parameter1: android.view.AccessibilityInteractionController$1;

        specialinvoke r0.<android.view.AccessibilityInteractionController$AccessibilityNodePrefetcher: void <init>(android.view.AccessibilityInteractionController)>(r1);

        return;
    }

    private void enforceNodeTreeConsistent(java.util.List)
    {
        android.view.AccessibilityInteractionController$AccessibilityNodePrefetcher r0;
        android.util.LongSparseArray $r4;
        java.lang.Object $r5, $r8, $r12, $r19, $r32, $r33;
        java.util.HashSet $r6;
        java.util.LinkedList $r7;
        boolean $z0, $z1, $z2, $z3, $z4;
        int $i0, $i1, $i3, $i4, i7, i8, i9, i10, i11;
        java.lang.StringBuilder $r9, $r13, $r20, $r26;
        java.lang.IllegalStateException $r10, $r17, $r24, $r30;
        java.lang.String $r11, $r18, $r25, $r31;
        android.view.AccessibilityInteractionController $r14, $r21, $r27;
        android.view.ViewRootImpl $r15, $r22, $r28;
        android.view.View$AttachInfo $r16, $r23, $r29;
        long $l2, $l5, $l6;
        java.util.List r34;
        android.view.accessibility.AccessibilityNodeInfo r35, r36, r37, r38, r39, r40, r41, r43, r45, r47;

        r0 := @this: android.view.AccessibilityInteractionController$AccessibilityNodePrefetcher;

        r34 := @parameter0: java.util.List;

        $r4 = new android.util.LongSparseArray;

        specialinvoke $r4.<android.util.LongSparseArray: void <init>()>();

        i7 = interfaceinvoke r34.<java.util.List: int size()>();

        i8 = 0;

     label01:
        if i8 >= i7 goto label02;

        $r33 = interfaceinvoke r34.<java.util.List: java.lang.Object get(int)>(i8);

        r35 = (android.view.accessibility.AccessibilityNodeInfo) $r33;

        $l6 = virtualinvoke r35.<android.view.accessibility.AccessibilityNodeInfo: long getSourceNodeId()>();

        virtualinvoke $r4.<android.util.LongSparseArray: void put(long,java.lang.Object)>($l6, r35);

        i8 = i8 + 1;

        goto label01;

     label02:
        $r5 = virtualinvoke $r4.<android.util.LongSparseArray: java.lang.Object valueAt(int)>(0);

        r36 = (android.view.accessibility.AccessibilityNodeInfo) $r5;

        r37 = r36;

     label03:
        if r37 == null goto label04;

        r36 = r37;

        $l5 = virtualinvoke r37.<android.view.accessibility.AccessibilityNodeInfo: long getParentNodeId()>();

        $r32 = virtualinvoke $r4.<android.util.LongSparseArray: java.lang.Object get(long)>($l5);

        r37 = (android.view.accessibility.AccessibilityNodeInfo) $r32;

        goto label03;

     label04:
        r38 = null;

        $r6 = new java.util.HashSet;

        specialinvoke $r6.<java.util.HashSet: void <init>()>();

        $r7 = new java.util.LinkedList;

        specialinvoke $r7.<java.util.LinkedList: void <init>()>();

        interfaceinvoke $r7.<java.util.Queue: boolean add(java.lang.Object)>(r36);

        r39 = null;

     label05:
        $z0 = interfaceinvoke $r7.<java.util.Queue: boolean isEmpty()>();

        if $z0 != 0 goto label14;

        $r12 = interfaceinvoke $r7.<java.util.Queue: java.lang.Object poll()>();

        r40 = (android.view.accessibility.AccessibilityNodeInfo) $r12;

        $z2 = virtualinvoke $r6.<java.util.HashSet: boolean add(java.lang.Object)>(r40);

        if $z2 == 0 goto label13;

        r41 = r38;

        $z3 = virtualinvoke r40.<android.view.accessibility.AccessibilityNodeInfo: boolean isAccessibilityFocused()>();

        if $z3 == 0 goto label07;

        if r38 != null goto label06;

        r41 = r40;

        goto label07;

     label06:
        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Duplicate accessibility focus:");

        virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r40);

        virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in window:");

        $r27 = r0.<android.view.AccessibilityInteractionController$AccessibilityNodePrefetcher: android.view.AccessibilityInteractionController this$0>;

        $r28 = staticinvoke <android.view.AccessibilityInteractionController: android.view.ViewRootImpl access$200(android.view.AccessibilityInteractionController)>($r27);

        $r29 = $r28.<android.view.ViewRootImpl: android.view.View$AttachInfo mAttachInfo>;

        $i4 = $r29.<android.view.View$AttachInfo: int mAccessibilityWindowId>;

        virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r30 = new java.lang.IllegalStateException;

        $r31 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r30.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r31);

        throw $r30;

     label07:
        r43 = r39;

        $z4 = virtualinvoke r40.<android.view.accessibility.AccessibilityNodeInfo: boolean isFocused()>();

        if $z4 == 0 goto label09;

        if r39 != null goto label08;

        r43 = r40;

        goto label09;

     label08:
        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Duplicate input focus: ");

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r40);

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in window:");

        $r21 = r0.<android.view.AccessibilityInteractionController$AccessibilityNodePrefetcher: android.view.AccessibilityInteractionController this$0>;

        $r22 = staticinvoke <android.view.AccessibilityInteractionController: android.view.ViewRootImpl access$200(android.view.AccessibilityInteractionController)>($r21);

        $r23 = $r22.<android.view.ViewRootImpl: android.view.View$AttachInfo mAttachInfo>;

        $i3 = $r23.<android.view.View$AttachInfo: int mAccessibilityWindowId>;

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r24 = new java.lang.IllegalStateException;

        $r25 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r24.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r25);

        throw $r24;

     label09:
        i9 = virtualinvoke r40.<android.view.accessibility.AccessibilityNodeInfo: int getChildCount()>();

        i10 = 0;

     label10:
        if i10 >= i9 goto label12;

        $l2 = virtualinvoke r40.<android.view.accessibility.AccessibilityNodeInfo: long getChildId(int)>(i10);

        $r19 = virtualinvoke $r4.<android.util.LongSparseArray: java.lang.Object get(long)>($l2);

        r45 = (android.view.accessibility.AccessibilityNodeInfo) $r19;

        if r45 == null goto label11;

        interfaceinvoke $r7.<java.util.Queue: boolean add(java.lang.Object)>(r45);

     label11:
        i10 = i10 + 1;

        goto label10;

     label12:
        r38 = r41;

        r39 = r43;

        goto label05;

     label13:
        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Duplicate node: ");

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r40);

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in window:");

        $r14 = r0.<android.view.AccessibilityInteractionController$AccessibilityNodePrefetcher: android.view.AccessibilityInteractionController this$0>;

        $r15 = staticinvoke <android.view.AccessibilityInteractionController: android.view.ViewRootImpl access$200(android.view.AccessibilityInteractionController)>($r14);

        $r16 = $r15.<android.view.ViewRootImpl: android.view.View$AttachInfo mAttachInfo>;

        $i1 = $r16.<android.view.View$AttachInfo: int mAccessibilityWindowId>;

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r17 = new java.lang.IllegalStateException;

        $r18 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r17.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r18);

        throw $r17;

     label14:
        $i0 = virtualinvoke $r4.<android.util.LongSparseArray: int size()>();

        i11 = $i0 - 1;

     label15:
        if i11 < 0 goto label17;

        $r8 = virtualinvoke $r4.<android.util.LongSparseArray: java.lang.Object valueAt(int)>(i11);

        r47 = (android.view.accessibility.AccessibilityNodeInfo) $r8;

        $z1 = virtualinvoke $r6.<java.util.HashSet: boolean contains(java.lang.Object)>(r47);

        if $z1 == 0 goto label16;

        i11 = i11 + -1;

        goto label15;

     label16:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Disconnected node: ");

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r47);

        $r10 = new java.lang.IllegalStateException;

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r11);

        throw $r10;

     label17:
        return;
    }

    private void prefetchDescendantsOfRealNode(android.view.View, java.util.List)
    {
        android.view.AccessibilityInteractionController$AccessibilityNodePrefetcher r0;
        java.util.List r1;
        int i0, i1, $i2, i3;
        boolean $z0, $z1, $z2;
        java.util.HashMap $r2;
        java.util.Set $r3;
        java.lang.Object $r4, $r5, $r6, $r8;
        android.view.accessibility.AccessibilityNodeProvider $r7, r17;
        android.view.AccessibilityInteractionController $r9;
        java.lang.Throwable $r12;
        android.view.View r13, r16, r22;
        java.util.ArrayList r15;
        android.view.accessibility.AccessibilityNodeInfo r18, r19, r23;
        java.util.Iterator r20;
        java.util.Map$Entry r21;

        r0 := @this: android.view.AccessibilityInteractionController$AccessibilityNodePrefetcher;

        r13 := @parameter0: android.view.View;

        r1 := @parameter1: java.util.List;

        $z0 = r13 instanceof android.view.ViewGroup;

        if $z0 != 0 goto label01;

        return;

     label01:
        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r15 = r0.<android.view.AccessibilityInteractionController$AccessibilityNodePrefetcher: java.util.ArrayList mTempViewList>;

        virtualinvoke r15.<java.util.ArrayList: void clear()>();

     label02:
        virtualinvoke r13.<android.view.View: void addChildrenForAccessibility(java.util.ArrayList)>(r15);

        i0 = virtualinvoke r15.<java.util.ArrayList: int size()>();

     label03:
        i3 = 0;

     label04:
        if i3 >= i0 goto label17;

     label05:
        i1 = interfaceinvoke r1.<java.util.List: int size()>();

     label06:
        if i1 < 50 goto label07;

        virtualinvoke r15.<java.util.ArrayList: void clear()>();

        return;

     label07:
        $r8 = virtualinvoke r15.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        r16 = (android.view.View) $r8;

        $r9 = r0.<android.view.AccessibilityInteractionController$AccessibilityNodePrefetcher: android.view.AccessibilityInteractionController this$0>;

        $z2 = staticinvoke <android.view.AccessibilityInteractionController: boolean access$300(android.view.AccessibilityInteractionController,android.view.View)>($r9, r16);

        if $z2 == 0 goto label16;

        r17 = virtualinvoke r16.<android.view.View: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider()>();

     label08:
        if r17 != null goto label13;

     label09:
        r18 = virtualinvoke r16.<android.view.View: android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo()>();

     label10:
        if r18 == null goto label12;

     label11:
        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(r18);

        virtualinvoke $r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r16, null);

     label12:
        goto label16;

     label13:
        r19 = virtualinvoke r17.<android.view.accessibility.AccessibilityNodeProvider: android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int)>(-1);

     label14:
        if r19 == null goto label16;

     label15:
        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(r19);

        virtualinvoke $r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r16, r19);

     label16:
        i3 = i3 + 1;

        goto label04;

     label17:
        virtualinvoke r15.<java.util.ArrayList: void clear()>();

        $i2 = interfaceinvoke r1.<java.util.List: int size()>();

        if $i2 >= 50 goto label21;

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.util.Set entrySet()>();

        r20 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label18:
        $z1 = interfaceinvoke r20.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label21;

        $r4 = interfaceinvoke r20.<java.util.Iterator: java.lang.Object next()>();

        r21 = (java.util.Map$Entry) $r4;

        $r5 = interfaceinvoke r21.<java.util.Map$Entry: java.lang.Object getKey()>();

        r22 = (android.view.View) $r5;

        $r6 = interfaceinvoke r21.<java.util.Map$Entry: java.lang.Object getValue()>();

        r23 = (android.view.accessibility.AccessibilityNodeInfo) $r6;

        if r23 != null goto label19;

        specialinvoke r0.<android.view.AccessibilityInteractionController$AccessibilityNodePrefetcher: void prefetchDescendantsOfRealNode(android.view.View,java.util.List)>(r22, r1);

        goto label20;

     label19:
        $r7 = virtualinvoke r22.<android.view.View: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider()>();

        specialinvoke r0.<android.view.AccessibilityInteractionController$AccessibilityNodePrefetcher: void prefetchDescendantsOfVirtualNode(android.view.accessibility.AccessibilityNodeInfo,android.view.accessibility.AccessibilityNodeProvider,java.util.List)>(r23, $r7, r1);

     label20:
        goto label18;

     label21:
        return;

     label22:
        $r12 := @caughtexception;

        virtualinvoke r15.<java.util.ArrayList: void clear()>();

        throw $r12;

        catch java.lang.Throwable from label02 to label03 with label22;
        catch java.lang.Throwable from label05 to label06 with label22;
        catch java.lang.Throwable from label07 to label08 with label22;
        catch java.lang.Throwable from label09 to label10 with label22;
        catch java.lang.Throwable from label11 to label12 with label22;
        catch java.lang.Throwable from label13 to label14 with label22;
        catch java.lang.Throwable from label15 to label16 with label22;
    }

    private void prefetchDescendantsOfVirtualNode(android.view.accessibility.AccessibilityNodeInfo, android.view.accessibility.AccessibilityNodeProvider, java.util.List)
    {
        android.view.AccessibilityInteractionController$AccessibilityNodePrefetcher r0;
        android.view.accessibility.AccessibilityNodeInfo r1, r4, $r6;
        android.view.accessibility.AccessibilityNodeProvider r2;
        java.util.List r3;
        int i0, $i2, $i3, $i4, $i5, $i6, i7, i8, i9, i10;
        long l1;
        java.lang.Object $r5;

        r0 := @this: android.view.AccessibilityInteractionController$AccessibilityNodePrefetcher;

        r1 := @parameter0: android.view.accessibility.AccessibilityNodeInfo;

        r2 := @parameter1: android.view.accessibility.AccessibilityNodeProvider;

        r3 := @parameter2: java.util.List;

        i0 = interfaceinvoke r3.<java.util.List: int size()>();

        i7 = virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: int getChildCount()>();

        i8 = 0;

     label1:
        if i8 >= i7 goto label4;

        $i5 = interfaceinvoke r3.<java.util.List: int size()>();

        if $i5 < 50 goto label2;

        return;

     label2:
        l1 = virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: long getChildId(int)>(i8);

        $i6 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo: int getVirtualDescendantId(long)>(l1);

        r4 = virtualinvoke r2.<android.view.accessibility.AccessibilityNodeProvider: android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int)>($i6);

        if r4 == null goto label3;

        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>(r4);

     label3:
        i8 = i8 + 1;

        goto label1;

     label4:
        $i2 = interfaceinvoke r3.<java.util.List: int size()>();

        if $i2 >= 50 goto label6;

        i9 = interfaceinvoke r3.<java.util.List: int size()>();

        i10 = 0;

     label5:
        $i3 = i9 - i0;

        if i10 >= $i3 goto label6;

        $i4 = i0 + i10;

        $r5 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>($i4);

        $r6 = (android.view.accessibility.AccessibilityNodeInfo) $r5;

        specialinvoke r0.<android.view.AccessibilityInteractionController$AccessibilityNodePrefetcher: void prefetchDescendantsOfVirtualNode(android.view.accessibility.AccessibilityNodeInfo,android.view.accessibility.AccessibilityNodeProvider,java.util.List)>($r6, r2, r3);

        i10 = i10 + 1;

        goto label5;

     label6:
        return;
    }

    private void prefetchPredecessorsOfRealNode(android.view.View, java.util.List)
    {
        android.view.AccessibilityInteractionController$AccessibilityNodePrefetcher r0;
        java.util.List r1;
        android.view.accessibility.AccessibilityNodeInfo r2;
        boolean $z0;
        int $i0;
        android.view.View $r3, r4;
        android.view.ViewParent r5;

        r0 := @this: android.view.AccessibilityInteractionController$AccessibilityNodePrefetcher;

        r4 := @parameter0: android.view.View;

        r1 := @parameter1: java.util.List;

        r5 = virtualinvoke r4.<android.view.View: android.view.ViewParent getParentForAccessibility()>();

     label1:
        $z0 = r5 instanceof android.view.View;

        if $z0 == 0 goto label3;

        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        if $i0 >= 50 goto label3;

        $r3 = (android.view.View) r5;

        r2 = virtualinvoke $r3.<android.view.View: android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo()>();

        if r2 == null goto label2;

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(r2);

     label2:
        r5 = interfaceinvoke r5.<android.view.ViewParent: android.view.ViewParent getParentForAccessibility()>();

        goto label1;

     label3:
        return;
    }

    private void prefetchPredecessorsOfVirtualNode(android.view.accessibility.AccessibilityNodeInfo, android.view.View, android.view.accessibility.AccessibilityNodeProvider, java.util.List)
    {
        android.view.AccessibilityInteractionController$AccessibilityNodePrefetcher r0;
        android.view.View r1;
        android.view.accessibility.AccessibilityNodeProvider r2;
        java.util.List r3;
        int i0, i1, $i2, $i3, $i4, i6, i7;
        android.view.accessibility.AccessibilityNodeInfo r5, r6;
        long l5;

        r0 := @this: android.view.AccessibilityInteractionController$AccessibilityNodePrefetcher;

        r5 := @parameter0: android.view.accessibility.AccessibilityNodeInfo;

        r1 := @parameter1: android.view.View;

        r2 := @parameter2: android.view.accessibility.AccessibilityNodeProvider;

        r3 := @parameter3: java.util.List;

        i0 = interfaceinvoke r3.<java.util.List: int size()>();

        l5 = virtualinvoke r5.<android.view.accessibility.AccessibilityNodeInfo: long getParentNodeId()>();

        i6 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo: int getAccessibilityViewId(long)>(l5);

     label1:
        if i6 == 2147483647 goto label8;

        $i2 = interfaceinvoke r3.<java.util.List: int size()>();

        if $i2 < 50 goto label2;

        return;

     label2:
        i1 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo: int getVirtualDescendantId(long)>(l5);

        if i1 != -1 goto label4;

        $i4 = virtualinvoke r1.<android.view.View: int getAccessibilityViewId()>();

        if i6 != $i4 goto label3;

        goto label4;

     label3:
        specialinvoke r0.<android.view.AccessibilityInteractionController$AccessibilityNodePrefetcher: void prefetchPredecessorsOfRealNode(android.view.View,java.util.List)>(r1, r3);

        return;

     label4:
        r6 = virtualinvoke r2.<android.view.accessibility.AccessibilityNodeProvider: android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int)>(i1);

        if r6 != null goto label7;

        $i3 = interfaceinvoke r3.<java.util.List: int size()>();

        i7 = $i3 - 1;

     label5:
        if i7 < i0 goto label6;

        interfaceinvoke r3.<java.util.List: java.lang.Object remove(int)>(i7);

        i7 = i7 + -1;

        goto label5;

     label6:
        return;

     label7:
        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>(r6);

        l5 = virtualinvoke r6.<android.view.accessibility.AccessibilityNodeInfo: long getParentNodeId()>();

        i6 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo: int getAccessibilityViewId(long)>(l5);

        goto label1;

     label8:
        return;
    }

    private void prefetchSiblingsOfRealNode(android.view.View, java.util.List)
    {
        android.view.AccessibilityInteractionController$AccessibilityNodePrefetcher r0;
        java.util.List r1;
        java.util.ArrayList r2;
        int i0, i1, $i2, $i3, i4;
        android.view.accessibility.AccessibilityNodeProvider r3;
        boolean $z0, $z1;
        java.lang.Object $r4;
        android.view.AccessibilityInteractionController $r5;
        java.lang.Throwable $r6;
        android.view.View r7, r10;
        android.view.ViewParent r8;
        android.view.ViewGroup r9;
        android.view.accessibility.AccessibilityNodeInfo r11;

        r0 := @this: android.view.AccessibilityInteractionController$AccessibilityNodePrefetcher;

        r7 := @parameter0: android.view.View;

        r1 := @parameter1: java.util.List;

        r8 = virtualinvoke r7.<android.view.View: android.view.ViewParent getParentForAccessibility()>();

        $z0 = r8 instanceof android.view.ViewGroup;

        if $z0 == 0 goto label17;

        r9 = (android.view.ViewGroup) r8;

        r2 = r0.<android.view.AccessibilityInteractionController$AccessibilityNodePrefetcher: java.util.ArrayList mTempViewList>;

        virtualinvoke r2.<java.util.ArrayList: void clear()>();

     label01:
        virtualinvoke r9.<android.view.ViewGroup: void addChildrenForAccessibility(java.util.ArrayList)>(r2);

        i0 = virtualinvoke r2.<java.util.ArrayList: int size()>();

     label02:
        i4 = 0;

     label03:
        if i4 >= i0 goto label15;

     label04:
        i1 = interfaceinvoke r1.<java.util.List: int size()>();

     label05:
        if i1 < 50 goto label06;

        virtualinvoke r2.<java.util.ArrayList: void clear()>();

        return;

     label06:
        $r4 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object get(int)>(i4);

        r10 = (android.view.View) $r4;

        $i2 = virtualinvoke r10.<android.view.View: int getAccessibilityViewId()>();

        $i3 = virtualinvoke r7.<android.view.View: int getAccessibilityViewId()>();

        if $i2 == $i3 goto label14;

        $r5 = r0.<android.view.AccessibilityInteractionController$AccessibilityNodePrefetcher: android.view.AccessibilityInteractionController this$0>;

        $z1 = staticinvoke <android.view.AccessibilityInteractionController: boolean access$300(android.view.AccessibilityInteractionController,android.view.View)>($r5, r10);

        if $z1 == 0 goto label14;

     label07:
        r3 = virtualinvoke r10.<android.view.View: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider()>();

     label08:
        if r3 != null goto label11;

     label09:
        r11 = virtualinvoke r10.<android.view.View: android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo()>();

     label10:
        goto label12;

     label11:
        r11 = virtualinvoke r3.<android.view.accessibility.AccessibilityNodeProvider: android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int)>(-1);

     label12:
        if r11 == null goto label14;

     label13:
        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(r11);

     label14:
        i4 = i4 + 1;

        goto label03;

     label15:
        virtualinvoke r2.<java.util.ArrayList: void clear()>();

        goto label17;

     label16:
        $r6 := @caughtexception;

        virtualinvoke r2.<java.util.ArrayList: void clear()>();

        throw $r6;

     label17:
        return;

        catch java.lang.Throwable from label01 to label02 with label16;
        catch java.lang.Throwable from label04 to label05 with label16;
        catch java.lang.Throwable from label06 to label07 with label16;
        catch java.lang.Throwable from label07 to label08 with label16;
        catch java.lang.Throwable from label09 to label10 with label16;
        catch java.lang.Throwable from label11 to label12 with label16;
        catch java.lang.Throwable from label13 to label14 with label16;
    }

    private void prefetchSiblingsOfVirtualNode(android.view.accessibility.AccessibilityNodeInfo, android.view.View, android.view.accessibility.AccessibilityNodeProvider, java.util.List)
    {
        android.view.AccessibilityInteractionController$AccessibilityNodePrefetcher r0;
        android.view.accessibility.AccessibilityNodeInfo r1, r4, r6;
        android.view.accessibility.AccessibilityNodeProvider r2;
        java.util.List r3;
        int $i0, $i3, $i4, i6, i7, i8, i9;
        long $l1, l5, l10;
        byte $b2;
        android.view.View r5;

        r0 := @this: android.view.AccessibilityInteractionController$AccessibilityNodePrefetcher;

        r1 := @parameter0: android.view.accessibility.AccessibilityNodeInfo;

        r5 := @parameter1: android.view.View;

        r2 := @parameter2: android.view.accessibility.AccessibilityNodeProvider;

        r3 := @parameter3: java.util.List;

        l5 = virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: long getParentNodeId()>();

        i6 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo: int getAccessibilityViewId(long)>(l5);

        i7 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo: int getVirtualDescendantId(long)>(l5);

        if i7 != -1 goto label2;

        $i4 = virtualinvoke r5.<android.view.View: int getAccessibilityViewId()>();

        if i6 != $i4 goto label1;

        goto label2;

     label1:
        specialinvoke r0.<android.view.AccessibilityInteractionController$AccessibilityNodePrefetcher: void prefetchSiblingsOfRealNode(android.view.View,java.util.List)>(r5, r3);

        goto label6;

     label2:
        r4 = virtualinvoke r2.<android.view.accessibility.AccessibilityNodeProvider: android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int)>(i7);

        if r4 == null goto label6;

        i8 = virtualinvoke r4.<android.view.accessibility.AccessibilityNodeInfo: int getChildCount()>();

        i9 = 0;

     label3:
        if i9 >= i8 goto label6;

        $i0 = interfaceinvoke r3.<java.util.List: int size()>();

        if $i0 < 50 goto label4;

        return;

     label4:
        l10 = virtualinvoke r4.<android.view.accessibility.AccessibilityNodeInfo: long getChildId(int)>(i9);

        $l1 = virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: long getSourceNodeId()>();

        $b2 = l10 cmp $l1;

        if $b2 == 0 goto label5;

        $i3 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo: int getVirtualDescendantId(long)>(l10);

        r6 = virtualinvoke r2.<android.view.accessibility.AccessibilityNodeProvider: android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int)>($i3);

        if r6 == null goto label5;

        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>(r6);

     label5:
        i9 = i9 + 1;

        goto label3;

     label6:
        return;
    }

    public void prefetchAccessibilityNodeInfos(android.view.View, int, int, java.util.List, android.os.Bundle)
    {
        android.view.AccessibilityInteractionController$AccessibilityNodePrefetcher r0;
        android.view.View r1;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7;
        java.util.List r2;
        android.os.Bundle r3;
        android.view.accessibility.AccessibilityNodeInfo r4, r7;
        android.view.accessibility.AccessibilityNodeProvider r5;
        java.lang.String r6;

        r0 := @this: android.view.AccessibilityInteractionController$AccessibilityNodePrefetcher;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: java.util.List;

        r3 := @parameter4: android.os.Bundle;

        r5 = virtualinvoke r1.<android.view.View: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider()>();

        if r3 != null goto label01;

        r6 = null;

        goto label02;

     label01:
        r6 = virtualinvoke r3.<android.os.Bundle: java.lang.String getString(java.lang.String)>("android.view.accessibility.AccessibilityNodeInfo.extra_data_requested");

     label02:
        if r5 != null goto label07;

        r7 = virtualinvoke r1.<android.view.View: android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo()>();

        if r7 == null goto label06;

        if r6 == null goto label03;

        virtualinvoke r1.<android.view.View: void addExtraDataToAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo,java.lang.String,android.os.Bundle)>(r7, r6, r3);

     label03:
        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r7);

        $i5 = i1 & 1;

        if $i5 == 0 goto label04;

        specialinvoke r0.<android.view.AccessibilityInteractionController$AccessibilityNodePrefetcher: void prefetchPredecessorsOfRealNode(android.view.View,java.util.List)>(r1, r2);

     label04:
        $i6 = i1 & 2;

        if $i6 == 0 goto label05;

        specialinvoke r0.<android.view.AccessibilityInteractionController$AccessibilityNodePrefetcher: void prefetchSiblingsOfRealNode(android.view.View,java.util.List)>(r1, r2);

     label05:
        $i7 = i1 & 4;

        if $i7 == 0 goto label06;

        specialinvoke r0.<android.view.AccessibilityInteractionController$AccessibilityNodePrefetcher: void prefetchDescendantsOfRealNode(android.view.View,java.util.List)>(r1, r2);

     label06:
        goto label11;

     label07:
        r4 = virtualinvoke r5.<android.view.accessibility.AccessibilityNodeProvider: android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int)>(i0);

        if r4 == null goto label11;

        if r6 == null goto label08;

        virtualinvoke r5.<android.view.accessibility.AccessibilityNodeProvider: void addExtraDataToAccessibilityNodeInfo(int,android.view.accessibility.AccessibilityNodeInfo,java.lang.String,android.os.Bundle)>(i0, r4, r6, r3);

     label08:
        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r4);

        $i2 = i1 & 1;

        if $i2 == 0 goto label09;

        specialinvoke r0.<android.view.AccessibilityInteractionController$AccessibilityNodePrefetcher: void prefetchPredecessorsOfVirtualNode(android.view.accessibility.AccessibilityNodeInfo,android.view.View,android.view.accessibility.AccessibilityNodeProvider,java.util.List)>(r4, r1, r5, r2);

     label09:
        $i3 = i1 & 2;

        if $i3 == 0 goto label10;

        specialinvoke r0.<android.view.AccessibilityInteractionController$AccessibilityNodePrefetcher: void prefetchSiblingsOfVirtualNode(android.view.accessibility.AccessibilityNodeInfo,android.view.View,android.view.accessibility.AccessibilityNodeProvider,java.util.List)>(r4, r1, r5, r2);

     label10:
        $i4 = i1 & 4;

        if $i4 == 0 goto label11;

        specialinvoke r0.<android.view.AccessibilityInteractionController$AccessibilityNodePrefetcher: void prefetchDescendantsOfVirtualNode(android.view.accessibility.AccessibilityNodeInfo,android.view.accessibility.AccessibilityNodeProvider,java.util.List)>(r4, r5, r2);

     label11:
        return;
    }

    public static void <clinit>()
    {
        <android.view.AccessibilityInteractionController$AccessibilityNodePrefetcher: int MAX_ACCESSIBILITY_NODE_INFO_BATCH_SIZE> = 50;

        return;
    }
}
