public final class android.view.AccessibilityInteractionController extends java.lang.Object
{
    private static final boolean CONSIDER_REQUEST_PREPARERS;
    private static final boolean ENFORCE_NODE_TREE_CONSISTENT;
    private static final boolean IGNORE_REQUEST_PREPARERS;
    private static final java.lang.String LOG_TAG;
    private static final long REQUEST_PREPARER_TIMEOUT_MS;
    private final android.view.accessibility.AccessibilityManager mA11yManager;
    private int mActiveRequestPreparerId;
    private android.view.AccessibilityInteractionController$AddNodeInfosForViewId mAddNodeInfosForViewId;
    private final android.view.AccessibilityInteractionController$PrivateHandler mHandler;
    private final java.lang.Object mLock;
    private java.util.List mMessagesWaitingForRequestPreparer;
    private final long mMyLooperThreadId;
    private final int mMyProcessId;
    private int mNumActiveRequestPreparers;
    private final android.view.AccessibilityInteractionController$AccessibilityNodePrefetcher mPrefetcher;
    private final java.util.ArrayList mTempAccessibilityNodeInfoList;
    private final java.util.ArrayList mTempArrayList;
    private final android.graphics.Point mTempPoint;
    private final android.graphics.Rect mTempRect;
    private final android.graphics.Rect mTempRect1;
    private final android.graphics.Rect mTempRect2;
    private final android.graphics.RectF mTempRectF;
    private final android.view.ViewRootImpl mViewRootImpl;

    public void <init>(android.view.ViewRootImpl)
    {
        android.view.AccessibilityInteractionController r0;
        android.view.ViewRootImpl r1, $r15;
        android.os.Looper r2;
        java.util.ArrayList $r3, $r5;
        java.lang.Object $r4, $r17;
        android.graphics.Point $r6;
        android.graphics.Rect $r7, $r8, $r9;
        android.graphics.RectF $r10;
        android.view.ViewRootImpl$ViewRootHandler $r11;
        java.lang.Thread $r12;
        long $l0;
        int $i1;
        android.view.AccessibilityInteractionController$PrivateHandler $r13;
        android.view.AccessibilityInteractionController$AccessibilityNodePrefetcher $r14;
        android.content.Context $r16;
        android.view.accessibility.AccessibilityManager $r18;

        r0 := @this: android.view.AccessibilityInteractionController;

        r1 := @parameter0: android.view.ViewRootImpl;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<android.view.AccessibilityInteractionController: java.util.ArrayList mTempAccessibilityNodeInfoList> = $r3;

        $r4 = new java.lang.Object;

        specialinvoke $r4.<java.lang.Object: void <init>()>();

        r0.<android.view.AccessibilityInteractionController: java.lang.Object mLock> = $r4;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r0.<android.view.AccessibilityInteractionController: java.util.ArrayList mTempArrayList> = $r5;

        $r6 = new android.graphics.Point;

        specialinvoke $r6.<android.graphics.Point: void <init>()>();

        r0.<android.view.AccessibilityInteractionController: android.graphics.Point mTempPoint> = $r6;

        $r7 = new android.graphics.Rect;

        specialinvoke $r7.<android.graphics.Rect: void <init>()>();

        r0.<android.view.AccessibilityInteractionController: android.graphics.Rect mTempRect> = $r7;

        $r8 = new android.graphics.Rect;

        specialinvoke $r8.<android.graphics.Rect: void <init>()>();

        r0.<android.view.AccessibilityInteractionController: android.graphics.Rect mTempRect1> = $r8;

        $r9 = new android.graphics.Rect;

        specialinvoke $r9.<android.graphics.Rect: void <init>()>();

        r0.<android.view.AccessibilityInteractionController: android.graphics.Rect mTempRect2> = $r9;

        $r10 = new android.graphics.RectF;

        specialinvoke $r10.<android.graphics.RectF: void <init>()>();

        r0.<android.view.AccessibilityInteractionController: android.graphics.RectF mTempRectF> = $r10;

        $r11 = r1.<android.view.ViewRootImpl: android.view.ViewRootImpl$ViewRootHandler mHandler>;

        r2 = virtualinvoke $r11.<android.view.ViewRootImpl$ViewRootHandler: android.os.Looper getLooper()>();

        $r12 = virtualinvoke r2.<android.os.Looper: java.lang.Thread getThread()>();

        $l0 = virtualinvoke $r12.<java.lang.Thread: long getId()>();

        r0.<android.view.AccessibilityInteractionController: long mMyLooperThreadId> = $l0;

        $i1 = staticinvoke <android.os.Process: int myPid()>();

        r0.<android.view.AccessibilityInteractionController: int mMyProcessId> = $i1;

        $r13 = new android.view.AccessibilityInteractionController$PrivateHandler;

        specialinvoke $r13.<android.view.AccessibilityInteractionController$PrivateHandler: void <init>(android.view.AccessibilityInteractionController,android.os.Looper)>(r0, r2);

        r0.<android.view.AccessibilityInteractionController: android.view.AccessibilityInteractionController$PrivateHandler mHandler> = $r13;

        r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl> = r1;

        $r14 = new android.view.AccessibilityInteractionController$AccessibilityNodePrefetcher;

        specialinvoke $r14.<android.view.AccessibilityInteractionController$AccessibilityNodePrefetcher: void <init>(android.view.AccessibilityInteractionController,android.view.AccessibilityInteractionController$1)>(r0, null);

        r0.<android.view.AccessibilityInteractionController: android.view.AccessibilityInteractionController$AccessibilityNodePrefetcher mPrefetcher> = $r14;

        $r15 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        $r16 = $r15.<android.view.ViewRootImpl: android.content.Context mContext>;

        $r17 = virtualinvoke $r16.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/view/accessibility/AccessibilityManager;");

        $r18 = (android.view.accessibility.AccessibilityManager) $r17;

        r0.<android.view.AccessibilityInteractionController: android.view.accessibility.AccessibilityManager mA11yManager> = $r18;

        return;
    }

    static void access$1000(android.view.AccessibilityInteractionController, android.os.Message)
    {
        android.view.AccessibilityInteractionController r0;
        android.os.Message r1;

        r0 := @parameter0: android.view.AccessibilityInteractionController;

        r1 := @parameter1: android.os.Message;

        specialinvoke r0.<android.view.AccessibilityInteractionController: void prepareForExtraDataRequestUiThread(android.os.Message)>(r1);

        return;
    }

    static void access$1100(android.view.AccessibilityInteractionController, android.os.Message)
    {
        android.view.AccessibilityInteractionController r0;
        android.os.Message r1;

        r0 := @parameter0: android.view.AccessibilityInteractionController;

        r1 := @parameter1: android.os.Message;

        specialinvoke r0.<android.view.AccessibilityInteractionController: void requestPreparerDoneUiThread(android.os.Message)>(r1);

        return;
    }

    static void access$1200(android.view.AccessibilityInteractionController)
    {
        android.view.AccessibilityInteractionController r0;

        r0 := @parameter0: android.view.AccessibilityInteractionController;

        specialinvoke r0.<android.view.AccessibilityInteractionController: void requestPreparerTimeoutUiThread()>();

        return;
    }

    static void access$1300(android.view.AccessibilityInteractionController)
    {
        android.view.AccessibilityInteractionController r0;

        r0 := @parameter0: android.view.AccessibilityInteractionController;

        specialinvoke r0.<android.view.AccessibilityInteractionController: void clearAccessibilityFocusUiThread()>();

        return;
    }

    static void access$1400(android.view.AccessibilityInteractionController)
    {
        android.view.AccessibilityInteractionController r0;

        r0 := @parameter0: android.view.AccessibilityInteractionController;

        specialinvoke r0.<android.view.AccessibilityInteractionController: void notifyOutsideTouchUiThread()>();

        return;
    }

    static android.view.ViewRootImpl access$200(android.view.AccessibilityInteractionController)
    {
        android.view.AccessibilityInteractionController r0;
        android.view.ViewRootImpl $r1;

        r0 := @parameter0: android.view.AccessibilityInteractionController;

        $r1 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        return $r1;
    }

    static boolean access$300(android.view.AccessibilityInteractionController, android.view.View)
    {
        android.view.AccessibilityInteractionController r0;
        android.view.View r1;
        boolean $z0;

        r0 := @parameter0: android.view.AccessibilityInteractionController;

        r1 := @parameter1: android.view.View;

        $z0 = specialinvoke r0.<android.view.AccessibilityInteractionController: boolean isShown(android.view.View)>(r1);

        return $z0;
    }

    static void access$400(android.view.AccessibilityInteractionController, android.os.Message)
    {
        android.view.AccessibilityInteractionController r0;
        android.os.Message r1;

        r0 := @parameter0: android.view.AccessibilityInteractionController;

        r1 := @parameter1: android.os.Message;

        specialinvoke r0.<android.view.AccessibilityInteractionController: void findAccessibilityNodeInfoByAccessibilityIdUiThread(android.os.Message)>(r1);

        return;
    }

    static void access$500(android.view.AccessibilityInteractionController, android.os.Message)
    {
        android.view.AccessibilityInteractionController r0;
        android.os.Message r1;

        r0 := @parameter0: android.view.AccessibilityInteractionController;

        r1 := @parameter1: android.os.Message;

        specialinvoke r0.<android.view.AccessibilityInteractionController: void performAccessibilityActionUiThread(android.os.Message)>(r1);

        return;
    }

    static void access$600(android.view.AccessibilityInteractionController, android.os.Message)
    {
        android.view.AccessibilityInteractionController r0;
        android.os.Message r1;

        r0 := @parameter0: android.view.AccessibilityInteractionController;

        r1 := @parameter1: android.os.Message;

        specialinvoke r0.<android.view.AccessibilityInteractionController: void findAccessibilityNodeInfosByViewIdUiThread(android.os.Message)>(r1);

        return;
    }

    static void access$700(android.view.AccessibilityInteractionController, android.os.Message)
    {
        android.view.AccessibilityInteractionController r0;
        android.os.Message r1;

        r0 := @parameter0: android.view.AccessibilityInteractionController;

        r1 := @parameter1: android.os.Message;

        specialinvoke r0.<android.view.AccessibilityInteractionController: void findAccessibilityNodeInfosByTextUiThread(android.os.Message)>(r1);

        return;
    }

    static void access$800(android.view.AccessibilityInteractionController, android.os.Message)
    {
        android.view.AccessibilityInteractionController r0;
        android.os.Message r1;

        r0 := @parameter0: android.view.AccessibilityInteractionController;

        r1 := @parameter1: android.os.Message;

        specialinvoke r0.<android.view.AccessibilityInteractionController: void findFocusUiThread(android.os.Message)>(r1);

        return;
    }

    static void access$900(android.view.AccessibilityInteractionController, android.os.Message)
    {
        android.view.AccessibilityInteractionController r0;
        android.os.Message r1;

        r0 := @parameter0: android.view.AccessibilityInteractionController;

        r1 := @parameter1: android.os.Message;

        specialinvoke r0.<android.view.AccessibilityInteractionController: void focusSearchUiThread(android.os.Message)>(r1);

        return;
    }

    private void adjustBoundsInScreenIfNeeded(android.view.accessibility.AccessibilityNodeInfo)
    {
        android.view.AccessibilityInteractionController r0;
        android.view.accessibility.AccessibilityNodeInfo r1;
        android.graphics.Rect r2;
        boolean $z0;
        android.view.ViewRootImpl $r3, $r6;
        android.view.View$AttachInfo $r4, $r7;
        android.graphics.Point $r5, $r8;
        int $i0, $i1;

        r0 := @this: android.view.AccessibilityInteractionController;

        r1 := @parameter0: android.view.accessibility.AccessibilityNodeInfo;

        if r1 == null goto label2;

        $z0 = specialinvoke r0.<android.view.AccessibilityInteractionController: boolean shouldBypassAdjustBoundsInScreen()>();

        if $z0 == 0 goto label1;

        goto label2;

     label1:
        r2 = r0.<android.view.AccessibilityInteractionController: android.graphics.Rect mTempRect>;

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void getBoundsInScreen(android.graphics.Rect)>(r2);

        $r3 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        $r4 = $r3.<android.view.ViewRootImpl: android.view.View$AttachInfo mAttachInfo>;

        $r5 = $r4.<android.view.View$AttachInfo: android.graphics.Point mLocationInParentDisplay>;

        $i1 = $r5.<android.graphics.Point: int x>;

        $r6 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        $r7 = $r6.<android.view.ViewRootImpl: android.view.View$AttachInfo mAttachInfo>;

        $r8 = $r7.<android.view.View$AttachInfo: android.graphics.Point mLocationInParentDisplay>;

        $i0 = $r8.<android.graphics.Point: int y>;

        virtualinvoke r2.<android.graphics.Rect: void offset(int,int)>($i1, $i0);

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void setBoundsInScreen(android.graphics.Rect)>(r2);

        return;

     label2:
        return;
    }

    private void adjustBoundsInScreenIfNeeded(java.util.List)
    {
        android.view.AccessibilityInteractionController r0;
        java.util.List r1;
        int i0, i1;
        boolean $z0;
        java.lang.Object $r2;
        android.view.accessibility.AccessibilityNodeInfo $r3;

        r0 := @this: android.view.AccessibilityInteractionController;

        r1 := @parameter0: java.util.List;

        if r1 == null goto label4;

        $z0 = specialinvoke r0.<android.view.AccessibilityInteractionController: boolean shouldBypassAdjustBoundsInScreen()>();

        if $z0 == 0 goto label1;

        goto label4;

     label1:
        i0 = interfaceinvoke r1.<java.util.List: int size()>();

        i1 = 0;

     label2:
        if i1 >= i0 goto label3;

        $r2 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i1);

        $r3 = (android.view.accessibility.AccessibilityNodeInfo) $r2;

        specialinvoke r0.<android.view.AccessibilityInteractionController: void adjustBoundsInScreenIfNeeded(android.view.accessibility.AccessibilityNodeInfo)>($r3);

        i1 = i1 + 1;

        goto label2;

     label3:
        return;

     label4:
        return;
    }

    private void adjustIsVisibleToUserIfNeeded(android.view.accessibility.AccessibilityNodeInfo, android.graphics.Region)
    {
        android.view.AccessibilityInteractionController r0;
        android.view.accessibility.AccessibilityNodeInfo r1;
        android.graphics.Region r2;
        android.graphics.Rect r3;
        boolean $z0, $z1;

        r0 := @this: android.view.AccessibilityInteractionController;

        r1 := @parameter0: android.view.accessibility.AccessibilityNodeInfo;

        r2 := @parameter1: android.graphics.Region;

        if r2 == null goto label3;

        if r1 != null goto label1;

        goto label3;

     label1:
        r3 = r0.<android.view.AccessibilityInteractionController: android.graphics.Rect mTempRect>;

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void getBoundsInScreen(android.graphics.Rect)>(r3);

        $z0 = virtualinvoke r2.<android.graphics.Region: boolean quickReject(android.graphics.Rect)>(r3);

        if $z0 == 0 goto label2;

        $z1 = specialinvoke r0.<android.view.AccessibilityInteractionController: boolean shouldBypassAdjustIsVisible()>();

        if $z1 != 0 goto label2;

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void setVisibleToUser(boolean)>(0);

     label2:
        return;

     label3:
        return;
    }

    private void adjustIsVisibleToUserIfNeeded(java.util.List, android.graphics.Region)
    {
        android.view.AccessibilityInteractionController r0;
        java.util.List r1;
        android.graphics.Region r2;
        int i0, i1;
        java.lang.Object $r3;
        android.view.accessibility.AccessibilityNodeInfo $r4;

        r0 := @this: android.view.AccessibilityInteractionController;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: android.graphics.Region;

        if r2 == null goto label4;

        if r1 != null goto label1;

        goto label4;

     label1:
        i0 = interfaceinvoke r1.<java.util.List: int size()>();

        i1 = 0;

     label2:
        if i1 >= i0 goto label3;

        $r3 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i1);

        $r4 = (android.view.accessibility.AccessibilityNodeInfo) $r3;

        specialinvoke r0.<android.view.AccessibilityInteractionController: void adjustIsVisibleToUserIfNeeded(android.view.accessibility.AccessibilityNodeInfo,android.graphics.Region)>($r4, r2);

        i1 = i1 + 1;

        goto label2;

     label3:
        return;

     label4:
        return;
    }

    private void applyAppScaleAndMagnificationSpecIfNeeded(android.view.accessibility.AccessibilityNodeInfo, android.view.MagnificationSpec)
    {
        android.view.AccessibilityInteractionController r0;
        android.view.MagnificationSpec r1;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7;
        android.graphics.Rect r2, r7;
        android.view.ViewRootImpl $r3;
        android.view.View$AttachInfo $r4;
        boolean $z0, $z1;
        byte $b0;
        int $i1, $i2, $i3, i4;
        android.os.Parcelable $r5;
        android.view.accessibility.AccessibilityNodeInfo r6;
        android.os.Bundle r8;
        android.os.Parcelable[] r9;
        android.graphics.RectF r10;

        r0 := @this: android.view.AccessibilityInteractionController;

        r6 := @parameter0: android.view.accessibility.AccessibilityNodeInfo;

        r1 := @parameter1: android.view.MagnificationSpec;

        if r6 != null goto label1;

        return;

     label1:
        $r3 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        $r4 = $r3.<android.view.ViewRootImpl: android.view.View$AttachInfo mAttachInfo>;

        f0 = $r4.<android.view.View$AttachInfo: float mApplicationScale>;

        $z0 = specialinvoke r0.<android.view.AccessibilityInteractionController: boolean shouldApplyAppScaleAndMagnificationSpec(float,android.view.MagnificationSpec)>(f0, r1);

        if $z0 != 0 goto label2;

        return;

     label2:
        r2 = r0.<android.view.AccessibilityInteractionController: android.graphics.Rect mTempRect>;

        r7 = r0.<android.view.AccessibilityInteractionController: android.graphics.Rect mTempRect1>;

        virtualinvoke r6.<android.view.accessibility.AccessibilityNodeInfo: void getBoundsInParent(android.graphics.Rect)>(r2);

        virtualinvoke r6.<android.view.accessibility.AccessibilityNodeInfo: void getBoundsInScreen(android.graphics.Rect)>(r7);

        $b0 = f0 cmpl 1.0F;

        if $b0 == 0 goto label3;

        virtualinvoke r2.<android.graphics.Rect: void scale(float)>(f0);

        virtualinvoke r7.<android.graphics.Rect: void scale(float)>(f0);

     label3:
        if r1 == null goto label4;

        $f4 = r1.<android.view.MagnificationSpec: float scale>;

        virtualinvoke r2.<android.graphics.Rect: void scale(float)>($f4);

        $f5 = r1.<android.view.MagnificationSpec: float scale>;

        virtualinvoke r7.<android.graphics.Rect: void scale(float)>($f5);

        $f6 = r1.<android.view.MagnificationSpec: float offsetX>;

        $i3 = (int) $f6;

        $f7 = r1.<android.view.MagnificationSpec: float offsetY>;

        $i2 = (int) $f7;

        virtualinvoke r7.<android.graphics.Rect: void offset(int,int)>($i3, $i2);

     label4:
        virtualinvoke r6.<android.view.accessibility.AccessibilityNodeInfo: void setBoundsInParent(android.graphics.Rect)>(r2);

        virtualinvoke r6.<android.view.accessibility.AccessibilityNodeInfo: void setBoundsInScreen(android.graphics.Rect)>(r7);

        $z1 = virtualinvoke r6.<android.view.accessibility.AccessibilityNodeInfo: boolean hasExtras()>();

        if $z1 == 0 goto label7;

        r8 = virtualinvoke r6.<android.view.accessibility.AccessibilityNodeInfo: android.os.Bundle getExtras()>();

        r9 = virtualinvoke r8.<android.os.Bundle: android.os.Parcelable[] getParcelableArray(java.lang.String)>("android.view.accessibility.extra.DATA_TEXT_CHARACTER_LOCATION_KEY");

        if r9 == null goto label7;

        i4 = 0;

     label5:
        $i1 = lengthof r9;

        if i4 >= $i1 goto label7;

        $r5 = r9[i4];

        r10 = (android.graphics.RectF) $r5;

        virtualinvoke r10.<android.graphics.RectF: void scale(float)>(f0);

        if r1 == null goto label6;

        $f1 = r1.<android.view.MagnificationSpec: float scale>;

        virtualinvoke r10.<android.graphics.RectF: void scale(float)>($f1);

        $f3 = r1.<android.view.MagnificationSpec: float offsetX>;

        $f2 = r1.<android.view.MagnificationSpec: float offsetY>;

        virtualinvoke r10.<android.graphics.RectF: void offset(float,float)>($f3, $f2);

     label6:
        i4 = i4 + 1;

        goto label5;

     label7:
        return;
    }

    private void applyAppScaleAndMagnificationSpecIfNeeded(java.util.List, android.view.MagnificationSpec)
    {
        android.view.AccessibilityInteractionController r0;
        java.util.List r1;
        android.view.MagnificationSpec r2;
        int i0, i1;
        android.view.ViewRootImpl $r3;
        android.view.View$AttachInfo $r4;
        float $f0;
        boolean $z0;
        java.lang.Object $r5;
        android.view.accessibility.AccessibilityNodeInfo $r6;

        r0 := @this: android.view.AccessibilityInteractionController;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: android.view.MagnificationSpec;

        if r1 != null goto label1;

        return;

     label1:
        $r3 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        $r4 = $r3.<android.view.ViewRootImpl: android.view.View$AttachInfo mAttachInfo>;

        $f0 = $r4.<android.view.View$AttachInfo: float mApplicationScale>;

        $z0 = specialinvoke r0.<android.view.AccessibilityInteractionController: boolean shouldApplyAppScaleAndMagnificationSpec(float,android.view.MagnificationSpec)>($f0, r2);

        if $z0 == 0 goto label3;

        i0 = interfaceinvoke r1.<java.util.List: int size()>();

        i1 = 0;

     label2:
        if i1 >= i0 goto label3;

        $r5 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i1);

        $r6 = (android.view.accessibility.AccessibilityNodeInfo) $r5;

        specialinvoke r0.<android.view.AccessibilityInteractionController: void applyAppScaleAndMagnificationSpecIfNeeded(android.view.accessibility.AccessibilityNodeInfo,android.view.MagnificationSpec)>($r6, r2);

        i1 = i1 + 1;

        goto label2;

     label3:
        return;
    }

    private void applyScreenMatrixIfNeeded(android.view.accessibility.AccessibilityNodeInfo)
    {
        android.view.AccessibilityInteractionController r0;
        android.view.accessibility.AccessibilityNodeInfo r1;
        android.graphics.Rect r2;
        android.graphics.RectF r3;
        android.graphics.Matrix r4;
        boolean $z0;
        android.view.ViewRootImpl $r5;
        android.view.View$AttachInfo $r6;
        float $f0, $f1, $f2, $f3;
        int $i0, $i1, $i2, $i3;

        r0 := @this: android.view.AccessibilityInteractionController;

        r1 := @parameter0: android.view.accessibility.AccessibilityNodeInfo;

        if r1 == null goto label2;

        $z0 = specialinvoke r0.<android.view.AccessibilityInteractionController: boolean shouldBypassApplyScreenMatrix()>();

        if $z0 == 0 goto label1;

        goto label2;

     label1:
        r2 = r0.<android.view.AccessibilityInteractionController: android.graphics.Rect mTempRect>;

        r3 = r0.<android.view.AccessibilityInteractionController: android.graphics.RectF mTempRectF>;

        $r5 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        $r6 = $r5.<android.view.ViewRootImpl: android.view.View$AttachInfo mAttachInfo>;

        r4 = $r6.<android.view.View$AttachInfo: android.graphics.Matrix mScreenMatrixInEmbeddedHierarchy>;

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void getBoundsInScreen(android.graphics.Rect)>(r2);

        virtualinvoke r3.<android.graphics.RectF: void set(android.graphics.Rect)>(r2);

        virtualinvoke r4.<android.graphics.Matrix: boolean mapRect(android.graphics.RectF)>(r3);

        $f0 = r3.<android.graphics.RectF: float left>;

        $i3 = (int) $f0;

        $f1 = r3.<android.graphics.RectF: float top>;

        $i2 = (int) $f1;

        $f2 = r3.<android.graphics.RectF: float right>;

        $i1 = (int) $f2;

        $f3 = r3.<android.graphics.RectF: float bottom>;

        $i0 = (int) $f3;

        virtualinvoke r2.<android.graphics.Rect: void set(int,int,int,int)>($i3, $i2, $i1, $i0);

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void setBoundsInScreen(android.graphics.Rect)>(r2);

        return;

     label2:
        return;
    }

    private void applyScreenMatrixIfNeeded(java.util.List)
    {
        android.view.AccessibilityInteractionController r0;
        java.util.List r1;
        int i0, i1;
        boolean $z0;
        java.lang.Object $r2;
        android.view.accessibility.AccessibilityNodeInfo $r3;

        r0 := @this: android.view.AccessibilityInteractionController;

        r1 := @parameter0: java.util.List;

        if r1 == null goto label4;

        $z0 = specialinvoke r0.<android.view.AccessibilityInteractionController: boolean shouldBypassApplyScreenMatrix()>();

        if $z0 == 0 goto label1;

        goto label4;

     label1:
        i0 = interfaceinvoke r1.<java.util.List: int size()>();

        i1 = 0;

     label2:
        if i1 >= i0 goto label3;

        $r2 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i1);

        $r3 = (android.view.accessibility.AccessibilityNodeInfo) $r2;

        specialinvoke r0.<android.view.AccessibilityInteractionController: void applyScreenMatrixIfNeeded(android.view.accessibility.AccessibilityNodeInfo)>($r3);

        i1 = i1 + 1;

        goto label2;

     label3:
        return;

     label4:
        return;
    }

    private void associateLeashedParentIfNeeded(android.view.accessibility.AccessibilityNodeInfo)
    {
        android.view.AccessibilityInteractionController r0;
        android.view.accessibility.AccessibilityNodeInfo r1;
        boolean $z0;
        android.view.ViewRootImpl $r2, $r4, $r6;
        android.view.View $r3;
        int $i0, $i2, $i3;
        long $l1;
        android.view.View$AttachInfo $r5, $r7;
        android.os.IBinder $r8;

        r0 := @this: android.view.AccessibilityInteractionController;

        r1 := @parameter0: android.view.accessibility.AccessibilityNodeInfo;

        if r1 == null goto label3;

        $z0 = specialinvoke r0.<android.view.AccessibilityInteractionController: boolean shouldBypassAssociateLeashedParent()>();

        if $z0 == 0 goto label1;

        goto label3;

     label1:
        $r2 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        $r3 = $r2.<android.view.ViewRootImpl: android.view.View mView>;

        $i0 = virtualinvoke $r3.<android.view.View: int getAccessibilityViewId()>();

        $l1 = virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: long getSourceNodeId()>();

        $i2 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo: int getAccessibilityViewId(long)>($l1);

        if $i0 == $i2 goto label2;

        return;

     label2:
        $r4 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        $r5 = $r4.<android.view.ViewRootImpl: android.view.View$AttachInfo mAttachInfo>;

        $r8 = $r5.<android.view.View$AttachInfo: android.os.IBinder mLeashedParentToken>;

        $r6 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        $r7 = $r6.<android.view.ViewRootImpl: android.view.View$AttachInfo mAttachInfo>;

        $i3 = $r7.<android.view.View$AttachInfo: int mLeashedParentAccessibilityViewId>;

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void setLeashedParent(android.os.IBinder,int)>($r8, $i3);

        return;

     label3:
        return;
    }

    private void associateLeashedParentIfNeeded(java.util.List)
    {
        android.view.AccessibilityInteractionController r0;
        java.util.List r1;
        int i0, i1;
        boolean $z0;
        java.lang.Object $r2;
        android.view.accessibility.AccessibilityNodeInfo $r3;

        r0 := @this: android.view.AccessibilityInteractionController;

        r1 := @parameter0: java.util.List;

        if r1 == null goto label4;

        $z0 = specialinvoke r0.<android.view.AccessibilityInteractionController: boolean shouldBypassAssociateLeashedParent()>();

        if $z0 == 0 goto label1;

        goto label4;

     label1:
        i0 = interfaceinvoke r1.<java.util.List: int size()>();

        i1 = 0;

     label2:
        if i1 >= i0 goto label3;

        $r2 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i1);

        $r3 = (android.view.accessibility.AccessibilityNodeInfo) $r2;

        specialinvoke r0.<android.view.AccessibilityInteractionController: void associateLeashedParentIfNeeded(android.view.accessibility.AccessibilityNodeInfo)>($r3);

        i1 = i1 + 1;

        goto label2;

     label3:
        return;

     label4:
        return;
    }

    private void clearAccessibilityFocusUiThread()
    {
        android.view.AccessibilityInteractionController r0;
        android.view.accessibility.AccessibilityNodeProvider r1;
        android.view.ViewRootImpl $r2, $r4, $r6, $r8, $r9, $r10, $r12, $r16, $r21;
        android.view.View $r3, r18, r19;
        android.view.View$AttachInfo $r5, $r7, $r11, $r17, $r22;
        boolean $z0, $z1;
        android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction $r13, $r14;
        int $i0, $i2, $i3;
        long $l1;
        java.lang.Throwable $r15;
        android.view.accessibility.AccessibilityNodeInfo r20;

        r0 := @this: android.view.AccessibilityInteractionController;

        $r2 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        $r3 = $r2.<android.view.ViewRootImpl: android.view.View mView>;

        if $r3 == null goto label16;

        $r4 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        $r5 = $r4.<android.view.ViewRootImpl: android.view.View$AttachInfo mAttachInfo>;

        if $r5 != null goto label01;

        goto label16;

     label01:
        $r6 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        $r7 = $r6.<android.view.ViewRootImpl: android.view.View$AttachInfo mAttachInfo>;

        $r7.<android.view.View$AttachInfo: int mAccessibilityFetchFlags> = 8;

        $r8 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        r18 = $r8.<android.view.ViewRootImpl: android.view.View mView>;

     label02:
        if r18 == null goto label14;

     label03:
        $z0 = specialinvoke r0.<android.view.AccessibilityInteractionController: boolean isShown(android.view.View)>(r18);

        if $z0 == 0 goto label14;

        $r9 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        r19 = $r9.<android.view.ViewRootImpl: android.view.View mAccessibilityFocusedHost>;

     label04:
        if r19 == null goto label13;

     label05:
        $z1 = staticinvoke <android.view.ViewRootImpl: boolean isViewDescendantOf(android.view.View,android.view.View)>(r19, r18);

        if $z1 != 0 goto label07;

     label06:
        goto label13;

     label07:
        r1 = virtualinvoke r19.<android.view.View: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider()>();

        $r12 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        r20 = $r12.<android.view.ViewRootImpl: android.view.accessibility.AccessibilityNodeInfo mAccessibilityFocusedVirtualView>;

     label08:
        if r1 == null goto label11;

        if r20 == null goto label11;

     label09:
        $l1 = virtualinvoke r20.<android.view.accessibility.AccessibilityNodeInfo: long getSourceNodeId()>();

        $i2 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo: int getVirtualDescendantId(long)>($l1);

        $r14 = <android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction: android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction ACTION_CLEAR_ACCESSIBILITY_FOCUS>;

        $i3 = virtualinvoke $r14.<android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction: int getId()>();

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeProvider: boolean performAction(int,int,android.os.Bundle)>($i2, $i3, null);

     label10:
        goto label14;

     label11:
        $r13 = <android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction: android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction ACTION_CLEAR_ACCESSIBILITY_FOCUS>;

        $i0 = virtualinvoke $r13.<android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction: int getId()>();

        virtualinvoke r19.<android.view.View: boolean performAccessibilityAction(int,android.os.Bundle)>($i0, null);

     label12:
        goto label14;

     label13:
        $r10 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        $r11 = $r10.<android.view.ViewRootImpl: android.view.View$AttachInfo mAttachInfo>;

        $r11.<android.view.View$AttachInfo: int mAccessibilityFetchFlags> = 0;

        return;

     label14:
        $r21 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        $r22 = $r21.<android.view.ViewRootImpl: android.view.View$AttachInfo mAttachInfo>;

        $r22.<android.view.View$AttachInfo: int mAccessibilityFetchFlags> = 0;

        return;

     label15:
        $r15 := @caughtexception;

        $r16 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        $r17 = $r16.<android.view.ViewRootImpl: android.view.View$AttachInfo mAttachInfo>;

        $r17.<android.view.View$AttachInfo: int mAccessibilityFetchFlags> = 0;

        throw $r15;

     label16:
        return;

        catch java.lang.Throwable from label01 to label02 with label15;
        catch java.lang.Throwable from label03 to label04 with label15;
        catch java.lang.Throwable from label05 to label06 with label15;
        catch java.lang.Throwable from label07 to label08 with label15;
        catch java.lang.Throwable from label09 to label10 with label15;
        catch java.lang.Throwable from label11 to label12 with label15;
    }

    private void findAccessibilityNodeInfoByAccessibilityIdUiThread(android.os.Message)
    {
        android.view.AccessibilityInteractionController r0;
        int i0, i1, i2, i3;
        android.view.accessibility.IAccessibilityInteractionConnectionCallback r1;
        android.view.MagnificationSpec r2;
        android.graphics.Region r3;
        android.view.View r4, $r12;
        android.view.AccessibilityInteractionController$AccessibilityNodePrefetcher r5;
        java.lang.Object $r6, $r7, $r8, $r9, $r10;
        android.view.ViewRootImpl $r11, $r13, $r15;
        android.view.View$AttachInfo $r14, $r16;
        boolean $z0;
        java.lang.Throwable $r17, $r18, r23;
        android.os.Message r19;
        com.android.internal.os.SomeArgs r20;
        android.os.Bundle r21;
        java.util.ArrayList r22;

        r0 := @this: android.view.AccessibilityInteractionController;

        r19 := @parameter0: android.os.Message;

        i0 = r19.<android.os.Message: int arg1>;

        $r6 = r19.<android.os.Message: java.lang.Object obj>;

        r20 = (com.android.internal.os.SomeArgs) $r6;

        i1 = r20.<com.android.internal.os.SomeArgs: int argi1>;

        i2 = r20.<com.android.internal.os.SomeArgs: int argi2>;

        i3 = r20.<com.android.internal.os.SomeArgs: int argi3>;

        $r7 = r20.<com.android.internal.os.SomeArgs: java.lang.Object arg1>;

        r1 = (android.view.accessibility.IAccessibilityInteractionConnectionCallback) $r7;

        $r8 = r20.<com.android.internal.os.SomeArgs: java.lang.Object arg2>;

        r2 = (android.view.MagnificationSpec) $r8;

        $r9 = r20.<com.android.internal.os.SomeArgs: java.lang.Object arg3>;

        r3 = (android.graphics.Region) $r9;

        $r10 = r20.<com.android.internal.os.SomeArgs: java.lang.Object arg4>;

        r21 = (android.os.Bundle) $r10;

        virtualinvoke r20.<com.android.internal.os.SomeArgs: void recycle()>();

        r22 = r0.<android.view.AccessibilityInteractionController: java.util.ArrayList mTempAccessibilityNodeInfoList>;

        interfaceinvoke r22.<java.util.List: void clear()>();

     label01:
        $r11 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        $r12 = $r11.<android.view.ViewRootImpl: android.view.View mView>;

        if $r12 == null goto label10;

        $r13 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        $r14 = $r13.<android.view.ViewRootImpl: android.view.View$AttachInfo mAttachInfo>;

        if $r14 != null goto label03;

     label02:
        goto label10;

     label03:
        $r15 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        $r16 = $r15.<android.view.ViewRootImpl: android.view.View$AttachInfo mAttachInfo>;

        $r16.<android.view.View$AttachInfo: int mAccessibilityFetchFlags> = i0;

        r4 = specialinvoke r0.<android.view.AccessibilityInteractionController: android.view.View findViewByAccessibilityId(int)>(i1);

     label04:
        if r4 == null goto label09;

     label05:
        $z0 = specialinvoke r0.<android.view.AccessibilityInteractionController: boolean isShown(android.view.View)>(r4);

        if $z0 == 0 goto label09;

        r5 = r0.<android.view.AccessibilityInteractionController: android.view.AccessibilityInteractionController$AccessibilityNodePrefetcher mPrefetcher>;

     label06:
        virtualinvoke r5.<android.view.AccessibilityInteractionController$AccessibilityNodePrefetcher: void prefetchAccessibilityNodeInfos(android.view.View,int,int,java.util.List,android.os.Bundle)>(r4, i2, i0, r22, r21);

     label07:
        goto label09;

     label08:
        $r17 := @caughtexception;

        r23 = $r17;

        goto label12;

     label09:
        specialinvoke r0.<android.view.AccessibilityInteractionController: void updateInfosForViewportAndReturnFindNodeResult(java.util.List,android.view.accessibility.IAccessibilityInteractionConnectionCallback,int,android.view.MagnificationSpec,android.graphics.Region)>(r22, r1, i3, r2, r3);

        return;

     label10:
        specialinvoke r0.<android.view.AccessibilityInteractionController: void updateInfosForViewportAndReturnFindNodeResult(java.util.List,android.view.accessibility.IAccessibilityInteractionConnectionCallback,int,android.view.MagnificationSpec,android.graphics.Region)>(r22, r1, i3, r2, r3);

        return;

     label11:
        $r18 := @caughtexception;

        r23 = $r18;

     label12:
        specialinvoke r0.<android.view.AccessibilityInteractionController: void updateInfosForViewportAndReturnFindNodeResult(java.util.List,android.view.accessibility.IAccessibilityInteractionConnectionCallback,int,android.view.MagnificationSpec,android.graphics.Region)>(r22, r1, i3, r2, r3);

        throw r23;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label03 to label04 with label11;
        catch java.lang.Throwable from label05 to label06 with label11;
        catch java.lang.Throwable from label06 to label07 with label08;
    }

    private void findAccessibilityNodeInfosByTextUiThread(android.os.Message)
    {
        android.view.AccessibilityInteractionController r0;
        java.lang.String r1;
        android.view.accessibility.IAccessibilityInteractionConnectionCallback r2;
        android.view.MagnificationSpec r3;
        int i0, i1, i2, i3, i4, i5;
        android.graphics.Region r4;
        android.view.accessibility.AccessibilityNodeProvider r5, r27;
        java.lang.Object $r6, $r7, $r8, $r9, $r10, $r17, r24, r25;
        android.view.ViewRootImpl $r11, $r13, $r15;
        android.view.View $r12, r26, r30;
        android.view.View$AttachInfo $r14, $r16;
        boolean $z0, $z1, $z2;
        android.view.accessibility.AccessibilityNodeInfo $r18;
        java.lang.Throwable $r19, $r20, $r21, r33;
        android.os.Message r22;
        com.android.internal.os.SomeArgs r23;
        java.util.ArrayList r28;
        java.util.List r31, r34, r35, r36, r37, r38;

        r0 := @this: android.view.AccessibilityInteractionController;

        r22 := @parameter0: android.os.Message;

        i2 = r22.<android.os.Message: int arg1>;

        $r6 = r22.<android.os.Message: java.lang.Object obj>;

        r23 = (com.android.internal.os.SomeArgs) $r6;

        $r7 = r23.<com.android.internal.os.SomeArgs: java.lang.Object arg1>;

        r1 = (java.lang.String) $r7;

        $r8 = r23.<com.android.internal.os.SomeArgs: java.lang.Object arg2>;

        r2 = (android.view.accessibility.IAccessibilityInteractionConnectionCallback) $r8;

        $r9 = r23.<com.android.internal.os.SomeArgs: java.lang.Object arg3>;

        r3 = (android.view.MagnificationSpec) $r9;

        i0 = r23.<com.android.internal.os.SomeArgs: int argi1>;

        i3 = r23.<com.android.internal.os.SomeArgs: int argi2>;

        i1 = r23.<com.android.internal.os.SomeArgs: int argi3>;

        $r10 = r23.<com.android.internal.os.SomeArgs: java.lang.Object arg4>;

        r4 = (android.graphics.Region) $r10;

        virtualinvoke r23.<com.android.internal.os.SomeArgs: void recycle()>();

        r24 = null;

        r25 = null;

     label01:
        $r11 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        $r12 = $r11.<android.view.ViewRootImpl: android.view.View mView>;

        if $r12 == null goto label29;

        $r13 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        $r14 = $r13.<android.view.ViewRootImpl: android.view.View$AttachInfo mAttachInfo>;

        if $r14 != null goto label03;

     label02:
        goto label29;

     label03:
        $r15 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        $r16 = $r15.<android.view.ViewRootImpl: android.view.View$AttachInfo mAttachInfo>;

        $r16.<android.view.View$AttachInfo: int mAccessibilityFetchFlags> = i2;

        r26 = specialinvoke r0.<android.view.AccessibilityInteractionController: android.view.View findViewByAccessibilityId(int)>(i0);

     label04:
        if r26 == null goto label28;

     label05:
        $z0 = specialinvoke r0.<android.view.AccessibilityInteractionController: boolean isShown(android.view.View)>(r26);

        if $z0 == 0 goto label28;

        r27 = virtualinvoke r26.<android.view.View: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider()>();

     label06:
        if r27 == null goto label09;

     label07:
        r25 = virtualinvoke r27.<android.view.accessibility.AccessibilityNodeProvider: java.util.List findAccessibilityNodeInfosByText(java.lang.String,int)>(r1, i3);

     label08:
        goto label28;

     label09:
        if i3 != -1 goto label26;

     label10:
        r28 = r0.<android.view.AccessibilityInteractionController: java.util.ArrayList mTempArrayList>;

        virtualinvoke r28.<java.util.ArrayList: void clear()>();

        virtualinvoke r26.<android.view.View: void findViewsWithText(java.util.ArrayList,java.lang.CharSequence,int)>(r28, r1, 7);

        $z1 = virtualinvoke r28.<java.util.ArrayList: boolean isEmpty()>();

        if $z1 != 0 goto label25;

        r25 = r0.<android.view.AccessibilityInteractionController: java.util.ArrayList mTempAccessibilityNodeInfoList>;

     label11:
        r34 = (java.util.List) r25;

        interfaceinvoke r34.<java.util.List: void clear()>();

        i4 = virtualinvoke r28.<java.util.ArrayList: int size()>();

     label12:
        i5 = 0;

     label13:
        if i5 >= i4 goto label23;

     label14:
        $r17 = virtualinvoke r28.<java.util.ArrayList: java.lang.Object get(int)>(i5);

        r30 = (android.view.View) $r17;

        $z2 = specialinvoke r0.<android.view.AccessibilityInteractionController: boolean isShown(android.view.View)>(r30);

        if $z2 == 0 goto label22;

        r5 = virtualinvoke r30.<android.view.View: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider()>();

     label15:
        if r5 == null goto label20;

     label16:
        r31 = virtualinvoke r5.<android.view.accessibility.AccessibilityNodeProvider: java.util.List findAccessibilityNodeInfosByText(java.lang.String,int)>(r1, -1);

     label17:
        if r31 == null goto label19;

     label18:
        r35 = (java.util.List) r25;

        interfaceinvoke r35.<java.util.List: boolean addAll(java.util.Collection)>(r31);

     label19:
        goto label22;

     label20:
        $r18 = virtualinvoke r30.<android.view.View: android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo()>();

        r36 = (java.util.List) r25;

        interfaceinvoke r36.<java.util.List: boolean add(java.lang.Object)>($r18);

     label21:
        goto label22;

     label22:
        i5 = i5 + 1;

        goto label13;

     label23:
        goto label28;

     label24:
        $r19 := @caughtexception;

        r24 = r25;

        r33 = $r19;

        goto label31;

     label25:
        goto label28;

     label26:
        goto label28;

     label27:
        $r20 := @caughtexception;

        r33 = $r20;

        goto label31;

     label28:
        r37 = (java.util.List) r25;

        specialinvoke r0.<android.view.AccessibilityInteractionController: void updateInfosForViewportAndReturnFindNodeResult(java.util.List,android.view.accessibility.IAccessibilityInteractionConnectionCallback,int,android.view.MagnificationSpec,android.graphics.Region)>(r37, r2, i1, r3, r4);

        return;

     label29:
        specialinvoke r0.<android.view.AccessibilityInteractionController: void updateInfosForViewportAndReturnFindNodeResult(java.util.List,android.view.accessibility.IAccessibilityInteractionConnectionCallback,int,android.view.MagnificationSpec,android.graphics.Region)>(null, r2, i1, r3, r4);

        return;

     label30:
        $r21 := @caughtexception;

        r33 = $r21;

     label31:
        r38 = (java.util.List) r24;

        specialinvoke r0.<android.view.AccessibilityInteractionController: void updateInfosForViewportAndReturnFindNodeResult(java.util.List,android.view.accessibility.IAccessibilityInteractionConnectionCallback,int,android.view.MagnificationSpec,android.graphics.Region)>(r38, r2, i1, r3, r4);

        throw r33;

        catch java.lang.Throwable from label01 to label02 with label30;
        catch java.lang.Throwable from label03 to label04 with label30;
        catch java.lang.Throwable from label05 to label06 with label27;
        catch java.lang.Throwable from label07 to label08 with label27;
        catch java.lang.Throwable from label10 to label11 with label27;
        catch java.lang.Throwable from label11 to label12 with label24;
        catch java.lang.Throwable from label14 to label15 with label24;
        catch java.lang.Throwable from label16 to label17 with label24;
        catch java.lang.Throwable from label18 to label19 with label24;
        catch java.lang.Throwable from label20 to label21 with label24;
    }

    private void findAccessibilityNodeInfosByViewIdUiThread(android.os.Message)
    {
        android.view.AccessibilityInteractionController r0;
        int i0, i1, i2, i3;
        android.view.accessibility.IAccessibilityInteractionConnectionCallback r1;
        android.view.MagnificationSpec r2;
        android.graphics.Region r3;
        android.view.View r4, $r11;
        java.lang.Object $r5, $r6, $r7, $r8, $r9;
        android.view.ViewRootImpl $r10, $r12, $r14;
        android.view.View$AttachInfo $r13, $r15;
        android.content.Context $r16;
        android.content.res.Resources $r17;
        android.view.AccessibilityInteractionController$AddNodeInfosForViewId $r18, $r19, $r20, $r22, r29;
        java.lang.Throwable $r23, $r24, r30;
        android.os.Message r25;
        com.android.internal.os.SomeArgs r26;
        java.lang.String r27;
        java.util.ArrayList r28;

        r0 := @this: android.view.AccessibilityInteractionController;

        r25 := @parameter0: android.os.Message;

        i2 = r25.<android.os.Message: int arg1>;

        i0 = r25.<android.os.Message: int arg2>;

        $r5 = r25.<android.os.Message: java.lang.Object obj>;

        r26 = (com.android.internal.os.SomeArgs) $r5;

        i1 = r26.<com.android.internal.os.SomeArgs: int argi1>;

        $r6 = r26.<com.android.internal.os.SomeArgs: java.lang.Object arg1>;

        r1 = (android.view.accessibility.IAccessibilityInteractionConnectionCallback) $r6;

        $r7 = r26.<com.android.internal.os.SomeArgs: java.lang.Object arg2>;

        r2 = (android.view.MagnificationSpec) $r7;

        $r8 = r26.<com.android.internal.os.SomeArgs: java.lang.Object arg3>;

        r27 = (java.lang.String) $r8;

        $r9 = r26.<com.android.internal.os.SomeArgs: java.lang.Object arg4>;

        r3 = (android.graphics.Region) $r9;

        virtualinvoke r26.<com.android.internal.os.SomeArgs: void recycle()>();

        r28 = r0.<android.view.AccessibilityInteractionController: java.util.ArrayList mTempAccessibilityNodeInfoList>;

        interfaceinvoke r28.<java.util.List: void clear()>();

     label01:
        $r10 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        $r11 = $r10.<android.view.ViewRootImpl: android.view.View mView>;

        if $r11 == null goto label12;

        $r12 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        $r13 = $r12.<android.view.ViewRootImpl: android.view.View$AttachInfo mAttachInfo>;

        if $r13 != null goto label03;

     label02:
        goto label12;

     label03:
        $r14 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        $r15 = $r14.<android.view.ViewRootImpl: android.view.View$AttachInfo mAttachInfo>;

        $r15.<android.view.View$AttachInfo: int mAccessibilityFetchFlags> = i2;

        r4 = specialinvoke r0.<android.view.AccessibilityInteractionController: android.view.View findViewByAccessibilityId(int)>(i0);

     label04:
        if r4 == null goto label11;

     label05:
        $r16 = virtualinvoke r4.<android.view.View: android.content.Context getContext()>();

        $r17 = virtualinvoke $r16.<android.content.Context: android.content.res.Resources getResources()>();

        i3 = virtualinvoke $r17.<android.content.res.Resources: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)>(r27, null, null);

     label06:
        if i3 > 0 goto label07;

        specialinvoke r0.<android.view.AccessibilityInteractionController: void updateInfosForViewportAndReturnFindNodeResult(java.util.List,android.view.accessibility.IAccessibilityInteractionConnectionCallback,int,android.view.MagnificationSpec,android.graphics.Region)>(r28, r1, i1, r2, r3);

        return;

     label07:
        $r18 = r0.<android.view.AccessibilityInteractionController: android.view.AccessibilityInteractionController$AddNodeInfosForViewId mAddNodeInfosForViewId>;

        if $r18 != null goto label08;

        r29 = new android.view.AccessibilityInteractionController$AddNodeInfosForViewId;

        specialinvoke r29.<android.view.AccessibilityInteractionController$AddNodeInfosForViewId: void <init>(android.view.AccessibilityInteractionController,android.view.AccessibilityInteractionController$1)>(r0, null);

        r0.<android.view.AccessibilityInteractionController: android.view.AccessibilityInteractionController$AddNodeInfosForViewId mAddNodeInfosForViewId> = r29;

     label08:
        $r19 = r0.<android.view.AccessibilityInteractionController: android.view.AccessibilityInteractionController$AddNodeInfosForViewId mAddNodeInfosForViewId>;

        virtualinvoke $r19.<android.view.AccessibilityInteractionController$AddNodeInfosForViewId: void init(int,java.util.List)>(i3, r28);

        $r20 = r0.<android.view.AccessibilityInteractionController: android.view.AccessibilityInteractionController$AddNodeInfosForViewId mAddNodeInfosForViewId>;

        virtualinvoke r4.<android.view.View: android.view.View findViewByPredicate(java.util.function.Predicate)>($r20);

        $r22 = r0.<android.view.AccessibilityInteractionController: android.view.AccessibilityInteractionController$AddNodeInfosForViewId mAddNodeInfosForViewId>;

        virtualinvoke $r22.<android.view.AccessibilityInteractionController$AddNodeInfosForViewId: void reset()>();

     label09:
        goto label11;

     label10:
        $r23 := @caughtexception;

        r30 = $r23;

        goto label14;

     label11:
        specialinvoke r0.<android.view.AccessibilityInteractionController: void updateInfosForViewportAndReturnFindNodeResult(java.util.List,android.view.accessibility.IAccessibilityInteractionConnectionCallback,int,android.view.MagnificationSpec,android.graphics.Region)>(r28, r1, i1, r2, r3);

        return;

     label12:
        specialinvoke r0.<android.view.AccessibilityInteractionController: void updateInfosForViewportAndReturnFindNodeResult(java.util.List,android.view.accessibility.IAccessibilityInteractionConnectionCallback,int,android.view.MagnificationSpec,android.graphics.Region)>(r28, r1, i1, r2, r3);

        return;

     label13:
        $r24 := @caughtexception;

        r30 = $r24;

     label14:
        specialinvoke r0.<android.view.AccessibilityInteractionController: void updateInfosForViewportAndReturnFindNodeResult(java.util.List,android.view.accessibility.IAccessibilityInteractionConnectionCallback,int,android.view.MagnificationSpec,android.graphics.Region)>(r28, r1, i1, r2, r3);

        throw r30;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label03 to label04 with label13;
        catch java.lang.Throwable from label05 to label06 with label13;
        catch java.lang.Throwable from label07 to label08 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    private void findFocusUiThread(android.os.Message)
    {
        android.view.AccessibilityInteractionController r0;
        int i0, i1, i2, i3, i4;
        android.view.accessibility.IAccessibilityInteractionConnectionCallback r1;
        android.view.MagnificationSpec r2;
        android.graphics.Region r3;
        android.view.View r4, $r10, r27, r30;
        java.lang.Object $r5, $r6, $r7, $r8;
        android.view.ViewRootImpl $r9, $r11, $r13, $r16, $r18, $r20;
        android.view.View$AttachInfo $r12, $r14;
        boolean $z0, $z1, $z2, $z3;
        java.lang.String $r15;
        android.view.accessibility.AccessibilityNodeProvider $r17, r31;
        android.view.accessibility.AccessibilityNodeInfo $r19, $r21, r25, r26, r32;
        java.lang.Throwable $r22;
        android.os.Message r23;
        com.android.internal.os.SomeArgs r24;
        java.lang.IllegalArgumentException r28;
        java.lang.StringBuilder r29;

        r0 := @this: android.view.AccessibilityInteractionController;

        r23 := @parameter0: android.os.Message;

        i0 = r23.<android.os.Message: int arg1>;

        i1 = r23.<android.os.Message: int arg2>;

        $r5 = r23.<android.os.Message: java.lang.Object obj>;

        r24 = (com.android.internal.os.SomeArgs) $r5;

        i2 = r24.<com.android.internal.os.SomeArgs: int argi1>;

        i3 = r24.<com.android.internal.os.SomeArgs: int argi2>;

        i4 = r24.<com.android.internal.os.SomeArgs: int argi3>;

        $r6 = r24.<com.android.internal.os.SomeArgs: java.lang.Object arg1>;

        r1 = (android.view.accessibility.IAccessibilityInteractionConnectionCallback) $r6;

        $r7 = r24.<com.android.internal.os.SomeArgs: java.lang.Object arg2>;

        r2 = (android.view.MagnificationSpec) $r7;

        $r8 = r24.<com.android.internal.os.SomeArgs: java.lang.Object arg3>;

        r3 = (android.graphics.Region) $r8;

        virtualinvoke r24.<com.android.internal.os.SomeArgs: void recycle()>();

        r25 = null;

     label01:
        $r9 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        $r10 = $r9.<android.view.ViewRootImpl: android.view.View mView>;

        if $r10 == null goto label56;

     label02:
        r25 = null;

     label03:
        $r11 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        $r12 = $r11.<android.view.ViewRootImpl: android.view.View$AttachInfo mAttachInfo>;

        if $r12 != null goto label05;

     label04:
        goto label56;

     label05:
        r25 = null;

     label06:
        $r13 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        $r14 = $r13.<android.view.ViewRootImpl: android.view.View$AttachInfo mAttachInfo>;

        $r14.<android.view.View$AttachInfo: int mAccessibilityFetchFlags> = i0;

     label07:
        r25 = null;

     label08:
        r4 = specialinvoke r0.<android.view.AccessibilityInteractionController: android.view.View findViewByAccessibilityId(int)>(i3);

     label09:
        r26 = null;

        if r4 == null goto label55;

        r26 = null;

        r25 = null;

     label10:
        $z0 = specialinvoke r0.<android.view.AccessibilityInteractionController: boolean isShown(android.view.View)>(r4);

        if $z0 == 0 goto label55;

     label11:
        if i1 == 1 goto label43;

        if i1 != 2 goto label29;

        r25 = null;

     label12:
        $r16 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        r27 = $r16.<android.view.ViewRootImpl: android.view.View mAccessibilityFocusedHost>;

     label13:
        r26 = null;

        if r27 == null goto label55;

        r25 = null;

     label14:
        $z2 = staticinvoke <android.view.ViewRootImpl: boolean isViewDescendantOf(android.view.View,android.view.View)>(r27, r4);

        if $z2 != 0 goto label16;

     label15:
        r26 = null;

        goto label55;

     label16:
        r25 = null;

     label17:
        $z3 = specialinvoke r0.<android.view.AccessibilityInteractionController: boolean isShown(android.view.View)>(r27);

        if $z3 != 0 goto label19;

     label18:
        r26 = null;

        goto label55;

     label19:
        r25 = null;

     label20:
        $r17 = virtualinvoke r27.<android.view.View: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider()>();

        if $r17 == null goto label26;

     label21:
        r26 = null;

        r25 = null;

     label22:
        $r18 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        $r19 = $r18.<android.view.ViewRootImpl: android.view.accessibility.AccessibilityNodeInfo mAccessibilityFocusedVirtualView>;

        if $r19 == null goto label28;

     label23:
        r25 = null;

     label24:
        $r20 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        $r21 = $r20.<android.view.ViewRootImpl: android.view.accessibility.AccessibilityNodeInfo mAccessibilityFocusedVirtualView>;

        r26 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo obtain(android.view.accessibility.AccessibilityNodeInfo)>($r21);

     label25:
        goto label28;

     label26:
        r26 = null;

        if i4 != -1 goto label28;

        r25 = null;

     label27:
        r26 = virtualinvoke r27.<android.view.View: android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo()>();

     label28:
        goto label55;

     label29:
        r25 = null;

     label30:
        r28 = new java.lang.IllegalArgumentException;

     label31:
        r25 = null;

     label32:
        r29 = new java.lang.StringBuilder;

     label33:
        r25 = null;

     label34:
        specialinvoke r29.<java.lang.StringBuilder: void <init>()>();

     label35:
        r25 = null;

     label36:
        virtualinvoke r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown focus type: ");

     label37:
        r25 = null;

     label38:
        virtualinvoke r29.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

     label39:
        r25 = null;

     label40:
        $r15 = virtualinvoke r29.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r28.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r15);

     label41:
        r25 = null;

     label42:
        throw r28;

     label43:
        r25 = null;

     label44:
        r30 = virtualinvoke r4.<android.view.View: android.view.View findFocus()>();

     label45:
        r25 = null;

     label46:
        $z1 = specialinvoke r0.<android.view.AccessibilityInteractionController: boolean isShown(android.view.View)>(r30);

        if $z1 != 0 goto label48;

     label47:
        r26 = null;

        goto label55;

     label48:
        r25 = null;

     label49:
        r31 = virtualinvoke r30.<android.view.View: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider()>();

     label50:
        r25 = null;

        if r31 == null goto label53;

        r25 = null;

     label51:
        r32 = virtualinvoke r31.<android.view.accessibility.AccessibilityNodeProvider: android.view.accessibility.AccessibilityNodeInfo findFocus(int)>(i1);

     label52:
        r25 = r32;

     label53:
        r26 = r25;

        if r25 != null goto label55;

     label54:
        r26 = virtualinvoke r30.<android.view.View: android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo()>();

     label55:
        specialinvoke r0.<android.view.AccessibilityInteractionController: void updateInfoForViewportAndReturnFindNodeResult(android.view.accessibility.AccessibilityNodeInfo,android.view.accessibility.IAccessibilityInteractionConnectionCallback,int,android.view.MagnificationSpec,android.graphics.Region)>(r26, r1, i2, r2, r3);

        return;

     label56:
        specialinvoke r0.<android.view.AccessibilityInteractionController: void updateInfoForViewportAndReturnFindNodeResult(android.view.accessibility.AccessibilityNodeInfo,android.view.accessibility.IAccessibilityInteractionConnectionCallback,int,android.view.MagnificationSpec,android.graphics.Region)>(null, r1, i2, r2, r3);

        return;

     label57:
        $r22 := @caughtexception;

        specialinvoke r0.<android.view.AccessibilityInteractionController: void updateInfoForViewportAndReturnFindNodeResult(android.view.accessibility.AccessibilityNodeInfo,android.view.accessibility.IAccessibilityInteractionConnectionCallback,int,android.view.MagnificationSpec,android.graphics.Region)>(r25, r1, i2, r2, r3);

        throw $r22;

        catch java.lang.Throwable from label01 to label02 with label57;
        catch java.lang.Throwable from label03 to label04 with label57;
        catch java.lang.Throwable from label06 to label07 with label57;
        catch java.lang.Throwable from label08 to label09 with label57;
        catch java.lang.Throwable from label10 to label11 with label57;
        catch java.lang.Throwable from label12 to label13 with label57;
        catch java.lang.Throwable from label14 to label15 with label57;
        catch java.lang.Throwable from label17 to label18 with label57;
        catch java.lang.Throwable from label20 to label21 with label57;
        catch java.lang.Throwable from label22 to label23 with label57;
        catch java.lang.Throwable from label24 to label25 with label57;
        catch java.lang.Throwable from label27 to label28 with label57;
        catch java.lang.Throwable from label30 to label31 with label57;
        catch java.lang.Throwable from label32 to label33 with label57;
        catch java.lang.Throwable from label34 to label35 with label57;
        catch java.lang.Throwable from label36 to label37 with label57;
        catch java.lang.Throwable from label38 to label39 with label57;
        catch java.lang.Throwable from label40 to label41 with label57;
        catch java.lang.Throwable from label42 to label43 with label57;
        catch java.lang.Throwable from label44 to label45 with label57;
        catch java.lang.Throwable from label46 to label47 with label57;
        catch java.lang.Throwable from label49 to label50 with label57;
        catch java.lang.Throwable from label51 to label52 with label57;
        catch java.lang.Throwable from label54 to label55 with label57;
    }

    private android.view.View findViewByAccessibilityId(int)
    {
        android.view.AccessibilityInteractionController r0;
        int i0;
        android.view.accessibility.AccessibilityNodeIdManager $r1;
        android.view.View $r2, $r4;
        android.view.ViewRootImpl $r3;

        r0 := @this: android.view.AccessibilityInteractionController;

        i0 := @parameter0: int;

        if i0 != 2147483646 goto label1;

        $r3 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        $r4 = $r3.<android.view.ViewRootImpl: android.view.View mView>;

        return $r4;

     label1:
        $r1 = staticinvoke <android.view.accessibility.AccessibilityNodeIdManager: android.view.accessibility.AccessibilityNodeIdManager getInstance()>();

        $r2 = virtualinvoke $r1.<android.view.accessibility.AccessibilityNodeIdManager: android.view.View findView(int)>(i0);

        return $r2;
    }

    private void focusSearchUiThread(android.os.Message)
    {
        android.view.AccessibilityInteractionController r0;
        int i0, i1, i2, i3;
        android.view.accessibility.IAccessibilityInteractionConnectionCallback r1;
        android.view.MagnificationSpec r2;
        android.graphics.Region r3;
        java.lang.Object $r4, $r5, $r6, $r7;
        android.view.ViewRootImpl $r8, $r10, $r12;
        android.view.View $r9, r17, r19;
        android.view.View$AttachInfo $r11, $r13;
        boolean $z0;
        java.lang.Throwable $r14;
        android.os.Message r15;
        com.android.internal.os.SomeArgs r16;
        android.view.accessibility.AccessibilityNodeInfo r18;

        r0 := @this: android.view.AccessibilityInteractionController;

        r15 := @parameter0: android.os.Message;

        i0 = r15.<android.os.Message: int arg1>;

        i1 = r15.<android.os.Message: int arg2>;

        $r4 = r15.<android.os.Message: java.lang.Object obj>;

        r16 = (com.android.internal.os.SomeArgs) $r4;

        i2 = r16.<com.android.internal.os.SomeArgs: int argi2>;

        i3 = r16.<com.android.internal.os.SomeArgs: int argi3>;

        $r5 = r16.<com.android.internal.os.SomeArgs: java.lang.Object arg1>;

        r1 = (android.view.accessibility.IAccessibilityInteractionConnectionCallback) $r5;

        $r6 = r16.<com.android.internal.os.SomeArgs: java.lang.Object arg2>;

        r2 = (android.view.MagnificationSpec) $r6;

        $r7 = r16.<com.android.internal.os.SomeArgs: java.lang.Object arg3>;

        r3 = (android.graphics.Region) $r7;

        virtualinvoke r16.<com.android.internal.os.SomeArgs: void recycle()>();

     label01:
        $r8 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        $r9 = $r8.<android.view.ViewRootImpl: android.view.View mView>;

        if $r9 == null goto label09;

        $r10 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        $r11 = $r10.<android.view.ViewRootImpl: android.view.View$AttachInfo mAttachInfo>;

        if $r11 != null goto label03;

     label02:
        goto label09;

     label03:
        $r12 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        $r13 = $r12.<android.view.ViewRootImpl: android.view.View$AttachInfo mAttachInfo>;

        $r13.<android.view.View$AttachInfo: int mAccessibilityFetchFlags> = i0;

        r17 = specialinvoke r0.<android.view.AccessibilityInteractionController: android.view.View findViewByAccessibilityId(int)>(i1);

     label04:
        r18 = null;

        if r17 == null goto label08;

        r18 = null;

     label05:
        $z0 = specialinvoke r0.<android.view.AccessibilityInteractionController: boolean isShown(android.view.View)>(r17);

        if $z0 == 0 goto label08;

        r19 = virtualinvoke r17.<android.view.View: android.view.View focusSearch(int)>(i2);

     label06:
        r18 = null;

        if r19 == null goto label08;

     label07:
        r18 = virtualinvoke r19.<android.view.View: android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo()>();

     label08:
        specialinvoke r0.<android.view.AccessibilityInteractionController: void updateInfoForViewportAndReturnFindNodeResult(android.view.accessibility.AccessibilityNodeInfo,android.view.accessibility.IAccessibilityInteractionConnectionCallback,int,android.view.MagnificationSpec,android.graphics.Region)>(r18, r1, i3, r2, r3);

        return;

     label09:
        specialinvoke r0.<android.view.AccessibilityInteractionController: void updateInfoForViewportAndReturnFindNodeResult(android.view.accessibility.AccessibilityNodeInfo,android.view.accessibility.IAccessibilityInteractionConnectionCallback,int,android.view.MagnificationSpec,android.graphics.Region)>(null, r1, i3, r2, r3);

        return;

     label10:
        $r14 := @caughtexception;

        specialinvoke r0.<android.view.AccessibilityInteractionController: void updateInfoForViewportAndReturnFindNodeResult(android.view.accessibility.AccessibilityNodeInfo,android.view.accessibility.IAccessibilityInteractionConnectionCallback,int,android.view.MagnificationSpec,android.graphics.Region)>(null, r1, i3, r2, r3);

        throw $r14;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label07 to label08 with label10;
    }

    private boolean handleClickableSpanActionUiThread(android.view.View, int, android.os.Bundle)
    {
        android.view.AccessibilityInteractionController r0;
        android.view.View r1;
        int i0;
        android.os.Parcelable r2;
        android.view.accessibility.AccessibilityNodeProvider r3;
        boolean $z0;
        android.text.style.AccessibilityClickableSpan $r4;
        java.lang.CharSequence $r5;
        android.os.Bundle r6;
        android.view.accessibility.AccessibilityNodeInfo r7;
        android.text.style.ClickableSpan r8;

        r0 := @this: android.view.AccessibilityInteractionController;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        r6 := @parameter2: android.os.Bundle;

        r2 = virtualinvoke r6.<android.os.Bundle: android.os.Parcelable getParcelable(java.lang.String)>("android.view.accessibility.action.ACTION_ARGUMENT_ACCESSIBLE_CLICKABLE_SPAN");

        $z0 = r2 instanceof android.text.style.AccessibilityClickableSpan;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        r7 = null;

        r3 = virtualinvoke r1.<android.view.View: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider()>();

        if r3 == null goto label2;

        r7 = virtualinvoke r3.<android.view.accessibility.AccessibilityNodeProvider: android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int)>(i0);

        goto label3;

     label2:
        if i0 != -1 goto label3;

        r7 = virtualinvoke r1.<android.view.View: android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo()>();

     label3:
        if r7 != null goto label4;

        return 0;

     label4:
        $r4 = (android.text.style.AccessibilityClickableSpan) r2;

        $r5 = virtualinvoke r7.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence getOriginalText()>();

        r8 = virtualinvoke $r4.<android.text.style.AccessibilityClickableSpan: android.text.style.ClickableSpan findClickableSpan(java.lang.CharSequence)>($r5);

        if r8 == null goto label5;

        virtualinvoke r8.<android.text.style.ClickableSpan: void onClick(android.view.View)>(r1);

        return 1;

     label5:
        return 0;
    }

    private boolean holdOffMessageIfNeeded(android.os.Message, int, long)
    {
        android.view.AccessibilityInteractionController r0;
        int i0, $i2, $i3, $i4, $i5, $i6, $i7, i8, i9, i10, i11;
        long l1;
        java.lang.Object r1, $r9, $r10, $r13;
        com.android.internal.os.SomeArgs r2, r7;
        android.os.Bundle r3;
        java.util.List r4;
        java.lang.String r5;
        android.os.Message r6, r8, r19;
        android.view.accessibility.AccessibilityManager $r11;
        android.view.AccessibilityInteractionController$PrivateHandler $r12, $r14, $r15, $r17;
        java.lang.Throwable $r18;

        r0 := @this: android.view.AccessibilityInteractionController;

        r19 := @parameter0: android.os.Message;

        i0 := @parameter1: int;

        l1 := @parameter2: long;

        r1 = r0.<android.view.AccessibilityInteractionController: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $i2 = r0.<android.view.AccessibilityInteractionController: int mNumActiveRequestPreparers>;

        if $i2 == 0 goto label03;

        specialinvoke r0.<android.view.AccessibilityInteractionController: void queueMessageToHandleOncePrepared(android.os.Message,int,long)>(r19, i0, l1);

        exitmonitor r1;

     label02:
        return 1;

     label03:
        $i3 = r19.<android.os.Message: int what>;

        if $i3 == 2 goto label05;

        exitmonitor r1;

     label04:
        return 0;

     label05:
        $r9 = r19.<android.os.Message: java.lang.Object obj>;

        r2 = (com.android.internal.os.SomeArgs) $r9;

        $r10 = r2.<com.android.internal.os.SomeArgs: java.lang.Object arg4>;

        r3 = (android.os.Bundle) $r10;

     label06:
        if r3 != null goto label09;

     label07:
        exitmonitor r1;

     label08:
        return 0;

     label09:
        i8 = r2.<com.android.internal.os.SomeArgs: int argi1>;

        $r11 = r0.<android.view.AccessibilityInteractionController: android.view.accessibility.AccessibilityManager mA11yManager>;

        r4 = virtualinvoke $r11.<android.view.accessibility.AccessibilityManager: java.util.List getRequestPreparersForAccessibilityId(int)>(i8);

     label10:
        if r4 != null goto label13;

     label11:
        exitmonitor r1;

     label12:
        return 0;

     label13:
        r5 = virtualinvoke r3.<android.os.Bundle: java.lang.String getString(java.lang.String)>("android.view.accessibility.AccessibilityNodeInfo.extra_data_requested");

     label14:
        if r5 != null goto label17;

     label15:
        exitmonitor r1;

     label16:
        return 0;

     label17:
        $i4 = interfaceinvoke r4.<java.util.List: int size()>();

        r0.<android.view.AccessibilityInteractionController: int mNumActiveRequestPreparers> = $i4;

     label18:
        i9 = 0;

     label19:
        $i5 = interfaceinvoke r4.<java.util.List: int size()>();

        if i9 >= $i5 goto label25;

        $r12 = r0.<android.view.AccessibilityInteractionController: android.view.AccessibilityInteractionController$PrivateHandler mHandler>;

        r6 = virtualinvoke $r12.<android.view.AccessibilityInteractionController$PrivateHandler: android.os.Message obtainMessage(int)>(7);

        r7 = staticinvoke <com.android.internal.os.SomeArgs: com.android.internal.os.SomeArgs obtain()>();

     label20:
        $i6 = r2.<com.android.internal.os.SomeArgs: int argi2>;

        if $i6 != 2147483647 goto label22;

     label21:
        i10 = -1;

        goto label23;

     label22:
        i10 = r2.<com.android.internal.os.SomeArgs: int argi2>;

     label23:
        r7.<com.android.internal.os.SomeArgs: int argi1> = i10;

        $r13 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(i9);

        r7.<com.android.internal.os.SomeArgs: java.lang.Object arg1> = $r13;

        r7.<com.android.internal.os.SomeArgs: java.lang.Object arg2> = r5;

        r7.<com.android.internal.os.SomeArgs: java.lang.Object arg3> = r3;

        $r14 = r0.<android.view.AccessibilityInteractionController: android.view.AccessibilityInteractionController$PrivateHandler mHandler>;

        r8 = virtualinvoke $r14.<android.view.AccessibilityInteractionController$PrivateHandler: android.os.Message obtainMessage(int)>(8);

        $i7 = r0.<android.view.AccessibilityInteractionController: int mActiveRequestPreparerId>;

        i11 = $i7 + 1;

        r0.<android.view.AccessibilityInteractionController: int mActiveRequestPreparerId> = i11;

        r8.<android.os.Message: int arg1> = i11;

        r7.<com.android.internal.os.SomeArgs: java.lang.Object arg4> = r8;

        r6.<android.os.Message: java.lang.Object obj> = r7;

        specialinvoke r0.<android.view.AccessibilityInteractionController: void scheduleMessage(android.os.Message,int,long,boolean)>(r6, i0, l1, 1);

        $r15 = r0.<android.view.AccessibilityInteractionController: android.view.AccessibilityInteractionController$PrivateHandler mHandler>;

        virtualinvoke $r15.<android.view.AccessibilityInteractionController$PrivateHandler: android.os.Message obtainMessage(int)>(9);

        $r17 = r0.<android.view.AccessibilityInteractionController: android.view.AccessibilityInteractionController$PrivateHandler mHandler>;

        virtualinvoke $r17.<android.view.AccessibilityInteractionController$PrivateHandler: boolean sendEmptyMessageDelayed(int,long)>(9, 500L);

     label24:
        i9 = i9 + 1;

        goto label19;

     label25:
        specialinvoke r0.<android.view.AccessibilityInteractionController: void queueMessageToHandleOncePrepared(android.os.Message,int,long)>(r19, i0, l1);

        exitmonitor r1;

     label26:
        return 1;

     label27:
        $r18 := @caughtexception;

     label28:
        exitmonitor r1;

     label29:
        throw $r18;

        catch java.lang.Throwable from label01 to label02 with label27;
        catch java.lang.Throwable from label03 to label04 with label27;
        catch java.lang.Throwable from label05 to label06 with label27;
        catch java.lang.Throwable from label07 to label08 with label27;
        catch java.lang.Throwable from label09 to label10 with label27;
        catch java.lang.Throwable from label11 to label12 with label27;
        catch java.lang.Throwable from label13 to label14 with label27;
        catch java.lang.Throwable from label15 to label16 with label27;
        catch java.lang.Throwable from label17 to label18 with label27;
        catch java.lang.Throwable from label19 to label20 with label27;
        catch java.lang.Throwable from label20 to label21 with label27;
        catch java.lang.Throwable from label22 to label23 with label27;
        catch java.lang.Throwable from label23 to label24 with label27;
        catch java.lang.Throwable from label25 to label26 with label27;
        catch java.lang.Throwable from label28 to label29 with label27;
    }

    private boolean isShown(android.view.View)
    {
        android.view.AccessibilityInteractionController r0;
        android.view.View r1;
        int $i0;
        boolean $z0, z1;

        r0 := @this: android.view.AccessibilityInteractionController;

        r1 := @parameter0: android.view.View;

        if r1 == null goto label1;

        $i0 = virtualinvoke r1.<android.view.View: int getWindowVisibility()>();

        if $i0 != 0 goto label1;

        $z0 = virtualinvoke r1.<android.view.View: boolean isShown()>();

        if $z0 == 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    private void notifyOutsideTouchUiThread()
    {
        android.view.AccessibilityInteractionController r0;
        long l0;
        android.view.ViewRootImpl $r1, $r3, $r5, $r6, $r7, $r8;
        android.view.View $r2, r9;
        android.view.View$AttachInfo $r4;
        boolean $z0, $z1, $z2;
        android.view.MotionEvent r10;

        r0 := @this: android.view.AccessibilityInteractionController;

        $r1 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        $r2 = $r1.<android.view.ViewRootImpl: android.view.View mView>;

        if $r2 == null goto label3;

        $r3 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        $r4 = $r3.<android.view.ViewRootImpl: android.view.View$AttachInfo mAttachInfo>;

        if $r4 == null goto label3;

        $r5 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        $z0 = $r5.<android.view.ViewRootImpl: boolean mStopped>;

        if $z0 != 0 goto label3;

        $r6 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        $z1 = $r6.<android.view.ViewRootImpl: boolean mPausedForTransition>;

        if $z1 == 0 goto label1;

        goto label3;

     label1:
        $r7 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        r9 = $r7.<android.view.ViewRootImpl: android.view.View mView>;

        if r9 == null goto label2;

        $z2 = specialinvoke r0.<android.view.AccessibilityInteractionController: boolean isShown(android.view.View)>(r9);

        if $z2 == 0 goto label2;

        l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        r10 = staticinvoke <android.view.MotionEvent: android.view.MotionEvent obtain(long,long,int,float,float,int)>(l0, l0, 4, 0.0F, 0.0F, 0);

        virtualinvoke r10.<android.view.MotionEvent: void setSource(int)>(4098);

        $r8 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        virtualinvoke $r8.<android.view.ViewRootImpl: void dispatchInputEvent(android.view.InputEvent)>(r10);

     label2:
        return;

     label3:
        return;
    }

    private void performAccessibilityActionUiThread(android.os.Message)
    {
        android.view.AccessibilityInteractionController r0;
        int i0, i1, i2, i3, i4;
        android.view.accessibility.AccessibilityNodeProvider r1;
        java.lang.Object $r2, $r3, $r4;
        android.view.ViewRootImpl $r5, $r7, $r9, $r10, $r11, $r16, $r24, $r27;
        android.view.View $r6, r23;
        android.view.View$AttachInfo $r8, $r12, $r17, $r25, $r28;
        boolean $z1, $z2, $z3, z4;
        android.os.RemoteException $r13, $r14, $r18;
        java.lang.Throwable $r15;
        android.os.Message r19;
        com.android.internal.os.SomeArgs r20;
        android.view.accessibility.IAccessibilityInteractionConnectionCallback r21;
        android.os.Bundle r22;

        r0 := @this: android.view.AccessibilityInteractionController;

        r19 := @parameter0: android.os.Message;

        i0 = r19.<android.os.Message: int arg1>;

        i1 = r19.<android.os.Message: int arg2>;

        $r2 = r19.<android.os.Message: java.lang.Object obj>;

        r20 = (com.android.internal.os.SomeArgs) $r2;

        i2 = r20.<com.android.internal.os.SomeArgs: int argi1>;

        i3 = r20.<com.android.internal.os.SomeArgs: int argi2>;

        i4 = r20.<com.android.internal.os.SomeArgs: int argi3>;

        $r3 = r20.<com.android.internal.os.SomeArgs: java.lang.Object arg1>;

        r21 = (android.view.accessibility.IAccessibilityInteractionConnectionCallback) $r3;

        $r4 = r20.<com.android.internal.os.SomeArgs: java.lang.Object arg2>;

        r22 = (android.os.Bundle) $r4;

        virtualinvoke r20.<com.android.internal.os.SomeArgs: void recycle()>();

     label01:
        $r5 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        $r6 = $r5.<android.view.ViewRootImpl: android.view.View mView>;

        if $r6 == null goto label19;

        $r7 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        $r8 = $r7.<android.view.ViewRootImpl: android.view.View$AttachInfo mAttachInfo>;

        if $r8 == null goto label19;

        $r9 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        $z1 = $r9.<android.view.ViewRootImpl: boolean mStopped>;

        if $z1 != 0 goto label19;

        $r10 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        $z2 = $r10.<android.view.ViewRootImpl: boolean mPausedForTransition>;

        if $z2 == 0 goto label03;

     label02:
        goto label19;

     label03:
        $r11 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        $r12 = $r11.<android.view.ViewRootImpl: android.view.View$AttachInfo mAttachInfo>;

        $r12.<android.view.View$AttachInfo: int mAccessibilityFetchFlags> = i0;

        r23 = specialinvoke r0.<android.view.AccessibilityInteractionController: android.view.View findViewByAccessibilityId(int)>(i1);

     label04:
        z4 = 0;

        if r23 == null goto label15;

        z4 = 0;

     label05:
        $z3 = specialinvoke r0.<android.view.AccessibilityInteractionController: boolean isShown(android.view.View)>(r23);

        if $z3 == 0 goto label15;

     label06:
        if i3 != 16908669 goto label09;

     label07:
        z4 = specialinvoke r0.<android.view.AccessibilityInteractionController: boolean handleClickableSpanActionUiThread(android.view.View,int,android.os.Bundle)>(r23, i2, r22);

     label08:
        goto label15;

     label09:
        r1 = virtualinvoke r23.<android.view.View: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider()>();

     label10:
        if r1 == null goto label13;

     label11:
        z4 = virtualinvoke r1.<android.view.accessibility.AccessibilityNodeProvider: boolean performAction(int,int,android.os.Bundle)>(i2, i3, r22);

     label12:
        goto label15;

     label13:
        z4 = 0;

        if i2 != -1 goto label15;

     label14:
        z4 = virtualinvoke r23.<android.view.View: boolean performAccessibilityAction(int,android.os.Bundle)>(i3, r22);

     label15:
        $r24 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        $r25 = $r24.<android.view.ViewRootImpl: android.view.View$AttachInfo mAttachInfo>;

        $r25.<android.view.View$AttachInfo: int mAccessibilityFetchFlags> = 0;

        interfaceinvoke r21.<android.view.accessibility.IAccessibilityInteractionConnectionCallback: void setPerformAccessibilityActionResult(boolean,int)>(z4, i4);

     label16:
        goto label18;

     label17:
        $r14 := @caughtexception;

     label18:
        return;

     label19:
        $r27 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        $r28 = $r27.<android.view.ViewRootImpl: android.view.View$AttachInfo mAttachInfo>;

        $r28.<android.view.View$AttachInfo: int mAccessibilityFetchFlags> = 0;

        interfaceinvoke r21.<android.view.accessibility.IAccessibilityInteractionConnectionCallback: void setPerformAccessibilityActionResult(boolean,int)>(0, i4);

     label20:
        goto label22;

     label21:
        $r18 := @caughtexception;

     label22:
        return;

     label23:
        $r15 := @caughtexception;

     label24:
        $r16 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        $r17 = $r16.<android.view.ViewRootImpl: android.view.View$AttachInfo mAttachInfo>;

        $r17.<android.view.View$AttachInfo: int mAccessibilityFetchFlags> = 0;

        interfaceinvoke r21.<android.view.accessibility.IAccessibilityInteractionConnectionCallback: void setPerformAccessibilityActionResult(boolean,int)>(0, i4);

     label25:
        goto label27;

     label26:
        $r13 := @caughtexception;

     label27:
        throw $r15;

        catch java.lang.Throwable from label01 to label02 with label23;
        catch java.lang.Throwable from label03 to label04 with label23;
        catch java.lang.Throwable from label05 to label06 with label23;
        catch java.lang.Throwable from label07 to label08 with label23;
        catch java.lang.Throwable from label09 to label10 with label23;
        catch java.lang.Throwable from label11 to label12 with label23;
        catch java.lang.Throwable from label14 to label15 with label23;
        catch android.os.RemoteException from label15 to label16 with label17;
        catch android.os.RemoteException from label19 to label20 with label21;
        catch android.os.RemoteException from label24 to label25 with label26;
    }

    private void prepareForExtraDataRequestUiThread(android.os.Message)
    {
        android.view.AccessibilityInteractionController r0;
        int i0;
        java.lang.Object $r1, $r2, $r3, $r4, $r5;
        android.os.Message $r6, r10;
        android.os.Bundle $r7;
        java.lang.String $r8;
        android.view.accessibility.AccessibilityRequestPreparer $r9;
        com.android.internal.os.SomeArgs r11;

        r0 := @this: android.view.AccessibilityInteractionController;

        r10 := @parameter0: android.os.Message;

        $r1 = r10.<android.os.Message: java.lang.Object obj>;

        r11 = (com.android.internal.os.SomeArgs) $r1;

        i0 = r11.<com.android.internal.os.SomeArgs: int argi1>;

        $r2 = r11.<com.android.internal.os.SomeArgs: java.lang.Object arg1>;

        $r9 = (android.view.accessibility.AccessibilityRequestPreparer) $r2;

        $r3 = r11.<com.android.internal.os.SomeArgs: java.lang.Object arg2>;

        $r8 = (java.lang.String) $r3;

        $r4 = r11.<com.android.internal.os.SomeArgs: java.lang.Object arg3>;

        $r7 = (android.os.Bundle) $r4;

        $r5 = r11.<com.android.internal.os.SomeArgs: java.lang.Object arg4>;

        $r6 = (android.os.Message) $r5;

        virtualinvoke $r9.<android.view.accessibility.AccessibilityRequestPreparer: void onPrepareExtraData(int,java.lang.String,android.os.Bundle,android.os.Message)>(i0, $r8, $r7, $r6);

        return;
    }

    private void queueMessageToHandleOncePrepared(android.os.Message, int, long)
    {
        android.view.AccessibilityInteractionController r0;
        int i0;
        long l1;
        java.util.List $r1, $r3;
        android.view.AccessibilityInteractionController$MessageHolder $r2;
        java.util.ArrayList $r4;
        android.os.Message r5;

        r0 := @this: android.view.AccessibilityInteractionController;

        r5 := @parameter0: android.os.Message;

        i0 := @parameter1: int;

        l1 := @parameter2: long;

        $r1 = r0.<android.view.AccessibilityInteractionController: java.util.List mMessagesWaitingForRequestPreparer>;

        if $r1 != null goto label1;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>(int)>(1);

        r0.<android.view.AccessibilityInteractionController: java.util.List mMessagesWaitingForRequestPreparer> = $r4;

     label1:
        $r2 = new android.view.AccessibilityInteractionController$MessageHolder;

        specialinvoke $r2.<android.view.AccessibilityInteractionController$MessageHolder: void <init>(android.os.Message,int,long)>(r5, i0, l1);

        $r3 = r0.<android.view.AccessibilityInteractionController: java.util.List mMessagesWaitingForRequestPreparer>;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r2);

        return;
    }

    private void recycleMagnificationSpecAndRegionIfNeeded(android.view.MagnificationSpec, android.graphics.Region)
    {
        android.view.AccessibilityInteractionController r0;
        android.view.MagnificationSpec r1;
        android.graphics.Region r2;
        int $i0, $i1;

        r0 := @this: android.view.AccessibilityInteractionController;

        r1 := @parameter0: android.view.MagnificationSpec;

        r2 := @parameter1: android.graphics.Region;

        $i0 = staticinvoke <android.os.Process: int myPid()>();

        $i1 = staticinvoke <android.os.Binder: int getCallingPid()>();

        if $i0 == $i1 goto label1;

        if r1 == null goto label2;

        virtualinvoke r1.<android.view.MagnificationSpec: void recycle()>();

        goto label2;

     label1:
        if r2 == null goto label2;

        virtualinvoke r2.<android.graphics.Region: void recycle()>();

     label2:
        return;
    }

    private void requestPreparerDoneUiThread(android.os.Message)
    {
        android.view.AccessibilityInteractionController r0;
        java.lang.Object r1;
        int i0, $i1, $i2, $i3;
        android.view.AccessibilityInteractionController$PrivateHandler $r2;
        java.lang.Throwable $r3;
        android.os.Message r4;

        r0 := @this: android.view.AccessibilityInteractionController;

        r4 := @parameter0: android.os.Message;

        r1 = r0.<android.view.AccessibilityInteractionController: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $i2 = r4.<android.os.Message: int arg1>;

        $i1 = r0.<android.view.AccessibilityInteractionController: int mActiveRequestPreparerId>;

        if $i2 == $i1 goto label03;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("AccessibilityInteractionController", "Surprising AccessibilityRequestPreparer callback (likely late)");

        exitmonitor r1;

     label02:
        return;

     label03:
        $i3 = r0.<android.view.AccessibilityInteractionController: int mNumActiveRequestPreparers>;

        i0 = $i3 - 1;

        r0.<android.view.AccessibilityInteractionController: int mNumActiveRequestPreparers> = i0;

     label04:
        if i0 > 0 goto label06;

     label05:
        $r2 = r0.<android.view.AccessibilityInteractionController: android.view.AccessibilityInteractionController$PrivateHandler mHandler>;

        virtualinvoke $r2.<android.view.AccessibilityInteractionController$PrivateHandler: void removeMessages(int)>(9);

        specialinvoke r0.<android.view.AccessibilityInteractionController: void scheduleAllMessagesWaitingForRequestPreparerLocked()>();

     label06:
        exitmonitor r1;

     label07:
        return;

     label08:
        $r3 := @caughtexception;

     label09:
        exitmonitor r1;

     label10:
        throw $r3;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label05 to label06 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    private void requestPreparerTimeoutUiThread()
    {
        android.view.AccessibilityInteractionController r0;
        java.lang.Object r1;
        java.lang.Throwable $r3;

        r0 := @this: android.view.AccessibilityInteractionController;

        r1 = r0.<android.view.AccessibilityInteractionController: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("AccessibilityInteractionController", "AccessibilityRequestPreparer timed out");

        specialinvoke r0.<android.view.AccessibilityInteractionController: void scheduleAllMessagesWaitingForRequestPreparerLocked()>();

        exitmonitor r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    private void scheduleAllMessagesWaitingForRequestPreparerLocked()
    {
        android.view.AccessibilityInteractionController r0;
        int i0, i1, i3;
        android.view.AccessibilityInteractionController$MessageHolder r1;
        android.os.Message r2;
        long l2;
        java.util.List $r3, $r4, $r5;
        java.lang.Object $r6;
        boolean z0;

        r0 := @this: android.view.AccessibilityInteractionController;

        $r3 = r0.<android.view.AccessibilityInteractionController: java.util.List mMessagesWaitingForRequestPreparer>;

        i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        i3 = 0;

     label1:
        z0 = 0;

        if i3 >= i0 goto label3;

        $r5 = r0.<android.view.AccessibilityInteractionController: java.util.List mMessagesWaitingForRequestPreparer>;

        $r6 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(i3);

        r1 = (android.view.AccessibilityInteractionController$MessageHolder) $r6;

        r2 = r1.<android.view.AccessibilityInteractionController$MessageHolder: android.os.Message mMessage>;

        i1 = r1.<android.view.AccessibilityInteractionController$MessageHolder: int mInterrogatingPid>;

        l2 = r1.<android.view.AccessibilityInteractionController$MessageHolder: long mInterrogatingTid>;

        if i3 != 0 goto label2;

        z0 = 1;

     label2:
        specialinvoke r0.<android.view.AccessibilityInteractionController: void scheduleMessage(android.os.Message,int,long,boolean)>(r2, i1, l2, z0);

        i3 = i3 + 1;

        goto label1;

     label3:
        $r4 = r0.<android.view.AccessibilityInteractionController: java.util.List mMessagesWaitingForRequestPreparer>;

        interfaceinvoke $r4.<java.util.List: void clear()>();

        r0.<android.view.AccessibilityInteractionController: int mNumActiveRequestPreparers> = 0;

        r0.<android.view.AccessibilityInteractionController: int mActiveRequestPreparerId> = -1;

        return;
    }

    private void scheduleMessage(android.os.Message, int, long, boolean)
    {
        android.view.AccessibilityInteractionController r0;
        android.os.Message r1;
        int i0, $i2;
        long l1, $l3, $l4, $l6;
        boolean z0, $z2, $z3, $z4;
        android.view.AccessibilityInteractionController$PrivateHandler $r2, $r4, $r5, $r7;
        java.lang.Thread $r3;
        byte $b5, $b7;
        android.view.accessibility.AccessibilityInteractionClient $r6;

        r0 := @this: android.view.AccessibilityInteractionController;

        r1 := @parameter0: android.os.Message;

        i0 := @parameter1: int;

        l1 := @parameter2: long;

        z0 := @parameter3: boolean;

        if z0 != 0 goto label1;

        $z3 = specialinvoke r0.<android.view.AccessibilityInteractionController: boolean holdOffMessageIfNeeded(android.os.Message,int,long)>(r1, i0, l1);

        if $z3 != 0 goto label4;

     label1:
        $i2 = r0.<android.view.AccessibilityInteractionController: int mMyProcessId>;

        if i0 != $i2 goto label2;

        $l6 = r0.<android.view.AccessibilityInteractionController: long mMyLooperThreadId>;

        $b7 = l1 cmp $l6;

        if $b7 != 0 goto label2;

        $r5 = r0.<android.view.AccessibilityInteractionController: android.view.AccessibilityInteractionController$PrivateHandler mHandler>;

        $z2 = virtualinvoke $r5.<android.view.AccessibilityInteractionController$PrivateHandler: boolean hasAccessibilityCallback(android.os.Message)>(r1);

        if $z2 == 0 goto label2;

        $r6 = staticinvoke <android.view.accessibility.AccessibilityInteractionClient: android.view.accessibility.AccessibilityInteractionClient getInstanceForThread(long)>(l1);

        virtualinvoke $r6.<android.view.accessibility.AccessibilityInteractionClient: void setSameThreadMessage(android.os.Message)>(r1);

        goto label4;

     label2:
        $r7 = r0.<android.view.AccessibilityInteractionController: android.view.AccessibilityInteractionController$PrivateHandler mHandler>;

        $z4 = virtualinvoke $r7.<android.view.AccessibilityInteractionController$PrivateHandler: boolean hasAccessibilityCallback(android.os.Message)>(r1);

        if $z4 != 0 goto label3;

        $r3 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $l3 = virtualinvoke $r3.<java.lang.Thread: long getId()>();

        $l4 = r0.<android.view.AccessibilityInteractionController: long mMyLooperThreadId>;

        $b5 = $l3 cmp $l4;

        if $b5 != 0 goto label3;

        $r4 = r0.<android.view.AccessibilityInteractionController: android.view.AccessibilityInteractionController$PrivateHandler mHandler>;

        virtualinvoke $r4.<android.view.AccessibilityInteractionController$PrivateHandler: void handleMessage(android.os.Message)>(r1);

        goto label4;

     label3:
        $r2 = r0.<android.view.AccessibilityInteractionController: android.view.AccessibilityInteractionController$PrivateHandler mHandler>;

        virtualinvoke $r2.<android.view.AccessibilityInteractionController$PrivateHandler: boolean sendMessage(android.os.Message)>(r1);

     label4:
        return;
    }

    private boolean shouldApplyAppScaleAndMagnificationSpec(float, android.view.MagnificationSpec)
    {
        android.view.AccessibilityInteractionController r0;
        float f0;
        android.view.MagnificationSpec r1;
        byte $b0;
        boolean $z0, z1;

        r0 := @this: android.view.AccessibilityInteractionController;

        f0 := @parameter0: float;

        r1 := @parameter1: android.view.MagnificationSpec;

        $b0 = f0 cmpl 1.0F;

        if $b0 != 0 goto label2;

        if r1 == null goto label1;

        $z0 = virtualinvoke r1.<android.view.MagnificationSpec: boolean isNop()>();

        if $z0 != 0 goto label1;

        goto label2;

     label1:
        z1 = 0;

        goto label3;

     label2:
        z1 = 1;

     label3:
        return z1;
    }

    private boolean shouldBypassAdjustBoundsInScreen()
    {
        android.view.AccessibilityInteractionController r0;
        android.view.ViewRootImpl $r1;
        android.view.View$AttachInfo $r2;
        android.graphics.Point $r3;
        boolean $z0;

        r0 := @this: android.view.AccessibilityInteractionController;

        $r1 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        $r2 = $r1.<android.view.ViewRootImpl: android.view.View$AttachInfo mAttachInfo>;

        $r3 = $r2.<android.view.View$AttachInfo: android.graphics.Point mLocationInParentDisplay>;

        $z0 = virtualinvoke $r3.<android.graphics.Point: boolean equals(int,int)>(0, 0);

        return $z0;
    }

    private boolean shouldBypassAdjustIsVisible()
    {
        android.view.AccessibilityInteractionController r0;
        android.view.ViewRootImpl $r1;
        int $i0;

        r0 := @this: android.view.AccessibilityInteractionController;

        $r1 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        $i0 = $r1.<android.view.ViewRootImpl: int mOrigWindowType>;

        if $i0 != 2011 goto label1;

        return 1;

     label1:
        return 0;
    }

    private boolean shouldBypassApplyScreenMatrix()
    {
        android.view.AccessibilityInteractionController r0;
        android.graphics.Matrix r1;
        android.view.ViewRootImpl $r2;
        android.view.View$AttachInfo $r3;
        boolean $z0, z1;

        r0 := @this: android.view.AccessibilityInteractionController;

        $r2 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        $r3 = $r2.<android.view.ViewRootImpl: android.view.View$AttachInfo mAttachInfo>;

        r1 = $r3.<android.view.View$AttachInfo: android.graphics.Matrix mScreenMatrixInEmbeddedHierarchy>;

        if r1 == null goto label2;

        $z0 = virtualinvoke r1.<android.graphics.Matrix: boolean isIdentity()>();

        if $z0 == 0 goto label1;

        goto label2;

     label1:
        z1 = 0;

        goto label3;

     label2:
        z1 = 1;

     label3:
        return z1;
    }

    private boolean shouldBypassAssociateLeashedParent()
    {
        android.view.AccessibilityInteractionController r0;
        android.view.ViewRootImpl $r1, $r4;
        android.view.View$AttachInfo $r2, $r5;
        android.os.IBinder $r3;
        int $i0;
        boolean z0;

        r0 := @this: android.view.AccessibilityInteractionController;

        $r1 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        $r2 = $r1.<android.view.ViewRootImpl: android.view.View$AttachInfo mAttachInfo>;

        $r3 = $r2.<android.view.View$AttachInfo: android.os.IBinder mLeashedParentToken>;

        if $r3 != null goto label1;

        $r4 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        $r5 = $r4.<android.view.ViewRootImpl: android.view.View$AttachInfo mAttachInfo>;

        $i0 = $r5.<android.view.View$AttachInfo: int mLeashedParentAccessibilityViewId>;

        if $i0 != -1 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    private void updateInfoForViewportAndReturnFindNodeResult(android.view.accessibility.AccessibilityNodeInfo, android.view.accessibility.IAccessibilityInteractionConnectionCallback, int, android.view.MagnificationSpec, android.graphics.Region)
    {
        android.view.AccessibilityInteractionController r0;
        android.view.accessibility.IAccessibilityInteractionConnectionCallback r1;
        int i0;
        android.view.MagnificationSpec r2;
        android.graphics.Region r3;
        android.view.ViewRootImpl $r4;
        android.view.View$AttachInfo $r5;
        java.lang.Throwable $r6;
        android.os.RemoteException $r7;
        android.view.accessibility.AccessibilityNodeInfo r8;

        r0 := @this: android.view.AccessibilityInteractionController;

        r8 := @parameter0: android.view.accessibility.AccessibilityNodeInfo;

        r1 := @parameter1: android.view.accessibility.IAccessibilityInteractionConnectionCallback;

        i0 := @parameter2: int;

        r2 := @parameter3: android.view.MagnificationSpec;

        r3 := @parameter4: android.graphics.Region;

     label1:
        $r4 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        $r5 = $r4.<android.view.ViewRootImpl: android.view.View$AttachInfo mAttachInfo>;

        $r5.<android.view.View$AttachInfo: int mAccessibilityFetchFlags> = 0;

        specialinvoke r0.<android.view.AccessibilityInteractionController: void associateLeashedParentIfNeeded(android.view.accessibility.AccessibilityNodeInfo)>(r8);

        specialinvoke r0.<android.view.AccessibilityInteractionController: void applyScreenMatrixIfNeeded(android.view.accessibility.AccessibilityNodeInfo)>(r8);

        specialinvoke r0.<android.view.AccessibilityInteractionController: void adjustBoundsInScreenIfNeeded(android.view.accessibility.AccessibilityNodeInfo)>(r8);

        specialinvoke r0.<android.view.AccessibilityInteractionController: void adjustIsVisibleToUserIfNeeded(android.view.accessibility.AccessibilityNodeInfo,android.graphics.Region)>(r8, r3);

        specialinvoke r0.<android.view.AccessibilityInteractionController: void applyAppScaleAndMagnificationSpecIfNeeded(android.view.accessibility.AccessibilityNodeInfo,android.view.MagnificationSpec)>(r8, r2);

        interfaceinvoke r1.<android.view.accessibility.IAccessibilityInteractionConnectionCallback: void setFindAccessibilityNodeInfoResult(android.view.accessibility.AccessibilityNodeInfo,int)>(r8, i0);

     label2:
        goto label5;

     label3:
        $r6 := @caughtexception;

        specialinvoke r0.<android.view.AccessibilityInteractionController: void recycleMagnificationSpecAndRegionIfNeeded(android.view.MagnificationSpec,android.graphics.Region)>(r2, r3);

        throw $r6;

     label4:
        $r7 := @caughtexception;

     label5:
        specialinvoke r0.<android.view.AccessibilityInteractionController: void recycleMagnificationSpecAndRegionIfNeeded(android.view.MagnificationSpec,android.graphics.Region)>(r2, r3);

        return;

        catch android.os.RemoteException from label1 to label2 with label4;
        catch java.lang.Throwable from label1 to label2 with label3;
    }

    private void updateInfosForViewportAndReturnFindNodeResult(java.util.List, android.view.accessibility.IAccessibilityInteractionConnectionCallback, int, android.view.MagnificationSpec, android.graphics.Region)
    {
        android.view.AccessibilityInteractionController r0;
        android.view.accessibility.IAccessibilityInteractionConnectionCallback r1;
        int i0;
        android.view.MagnificationSpec r2;
        android.graphics.Region r3;
        android.view.ViewRootImpl $r4;
        android.view.View$AttachInfo $r5;
        android.os.RemoteException $r6;
        java.lang.Throwable $r7;
        java.util.List r8;

        r0 := @this: android.view.AccessibilityInteractionController;

        r8 := @parameter0: java.util.List;

        r1 := @parameter1: android.view.accessibility.IAccessibilityInteractionConnectionCallback;

        i0 := @parameter2: int;

        r2 := @parameter3: android.view.MagnificationSpec;

        r3 := @parameter4: android.graphics.Region;

     label1:
        $r4 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        $r5 = $r4.<android.view.ViewRootImpl: android.view.View$AttachInfo mAttachInfo>;

        $r5.<android.view.View$AttachInfo: int mAccessibilityFetchFlags> = 0;

        specialinvoke r0.<android.view.AccessibilityInteractionController: void associateLeashedParentIfNeeded(java.util.List)>(r8);

        specialinvoke r0.<android.view.AccessibilityInteractionController: void applyScreenMatrixIfNeeded(java.util.List)>(r8);

        specialinvoke r0.<android.view.AccessibilityInteractionController: void adjustBoundsInScreenIfNeeded(java.util.List)>(r8);

        specialinvoke r0.<android.view.AccessibilityInteractionController: void adjustIsVisibleToUserIfNeeded(java.util.List,android.graphics.Region)>(r8, r3);

        specialinvoke r0.<android.view.AccessibilityInteractionController: void applyAppScaleAndMagnificationSpecIfNeeded(java.util.List,android.view.MagnificationSpec)>(r8, r2);

        interfaceinvoke r1.<android.view.accessibility.IAccessibilityInteractionConnectionCallback: void setFindAccessibilityNodeInfosResult(java.util.List,int)>(r8, i0);

     label2:
        if r8 == null goto label7;

     label3:
        interfaceinvoke r8.<java.util.List: void clear()>();

     label4:
        goto label7;

     label5:
        $r7 := @caughtexception;

        specialinvoke r0.<android.view.AccessibilityInteractionController: void recycleMagnificationSpecAndRegionIfNeeded(android.view.MagnificationSpec,android.graphics.Region)>(r2, r3);

        throw $r7;

     label6:
        $r6 := @caughtexception;

     label7:
        specialinvoke r0.<android.view.AccessibilityInteractionController: void recycleMagnificationSpecAndRegionIfNeeded(android.view.MagnificationSpec,android.graphics.Region)>(r2, r3);

        return;

        catch android.os.RemoteException from label1 to label2 with label6;
        catch java.lang.Throwable from label1 to label2 with label5;
        catch android.os.RemoteException from label3 to label4 with label6;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void clearAccessibilityFocusClientThread()
    {
        android.view.AccessibilityInteractionController r0;
        android.os.Message r1;
        android.view.AccessibilityInteractionController$PrivateHandler $r2;

        r0 := @this: android.view.AccessibilityInteractionController;

        $r2 = r0.<android.view.AccessibilityInteractionController: android.view.AccessibilityInteractionController$PrivateHandler mHandler>;

        r1 = virtualinvoke $r2.<android.view.AccessibilityInteractionController$PrivateHandler: android.os.Message obtainMessage()>();

        r1.<android.os.Message: int what> = 101;

        specialinvoke r0.<android.view.AccessibilityInteractionController: void scheduleMessage(android.os.Message,int,long,boolean)>(r1, 0, 0L, 0);

        return;
    }

    public void findAccessibilityNodeInfoByAccessibilityIdClientThread(long, android.graphics.Region, int, android.view.accessibility.IAccessibilityInteractionConnectionCallback, int, int, long, android.view.MagnificationSpec, android.os.Bundle)
    {
        android.view.AccessibilityInteractionController r0;
        long l0, l4;
        android.graphics.Region r1;
        int i1, i2, i3, $i5, $i6;
        android.view.accessibility.IAccessibilityInteractionConnectionCallback r2;
        android.view.MagnificationSpec r3;
        android.os.Bundle r4;
        android.os.Message r5;
        com.android.internal.os.SomeArgs r6;
        android.view.AccessibilityInteractionController$PrivateHandler $r7;

        r0 := @this: android.view.AccessibilityInteractionController;

        l0 := @parameter0: long;

        r1 := @parameter1: android.graphics.Region;

        i1 := @parameter2: int;

        r2 := @parameter3: android.view.accessibility.IAccessibilityInteractionConnectionCallback;

        i2 := @parameter4: int;

        i3 := @parameter5: int;

        l4 := @parameter6: long;

        r3 := @parameter7: android.view.MagnificationSpec;

        r4 := @parameter8: android.os.Bundle;

        $r7 = r0.<android.view.AccessibilityInteractionController: android.view.AccessibilityInteractionController$PrivateHandler mHandler>;

        r5 = virtualinvoke $r7.<android.view.AccessibilityInteractionController$PrivateHandler: android.os.Message obtainMessage()>();

        r5.<android.os.Message: int what> = 2;

        r5.<android.os.Message: int arg1> = i2;

        r6 = staticinvoke <com.android.internal.os.SomeArgs: com.android.internal.os.SomeArgs obtain()>();

        $i5 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo: int getAccessibilityViewId(long)>(l0);

        r6.<com.android.internal.os.SomeArgs: int argi1> = $i5;

        $i6 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo: int getVirtualDescendantId(long)>(l0);

        r6.<com.android.internal.os.SomeArgs: int argi2> = $i6;

        r6.<com.android.internal.os.SomeArgs: int argi3> = i1;

        r6.<com.android.internal.os.SomeArgs: java.lang.Object arg1> = r2;

        r6.<com.android.internal.os.SomeArgs: java.lang.Object arg2> = r3;

        r6.<com.android.internal.os.SomeArgs: java.lang.Object arg3> = r1;

        r6.<com.android.internal.os.SomeArgs: java.lang.Object arg4> = r4;

        r5.<android.os.Message: java.lang.Object obj> = r6;

        specialinvoke r0.<android.view.AccessibilityInteractionController: void scheduleMessage(android.os.Message,int,long,boolean)>(r5, i3, l4, 0);

        return;
    }

    public void findAccessibilityNodeInfosByTextClientThread(long, java.lang.String, android.graphics.Region, int, android.view.accessibility.IAccessibilityInteractionConnectionCallback, int, int, long, android.view.MagnificationSpec)
    {
        android.view.AccessibilityInteractionController r0;
        long l0, l4;
        java.lang.String r1;
        android.graphics.Region r2;
        int i1, i2, i3, $i5, $i6;
        android.view.accessibility.IAccessibilityInteractionConnectionCallback r3;
        android.view.MagnificationSpec r4;
        android.os.Message r5;
        com.android.internal.os.SomeArgs r6;
        android.view.AccessibilityInteractionController$PrivateHandler $r7;

        r0 := @this: android.view.AccessibilityInteractionController;

        l0 := @parameter0: long;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.graphics.Region;

        i1 := @parameter3: int;

        r3 := @parameter4: android.view.accessibility.IAccessibilityInteractionConnectionCallback;

        i2 := @parameter5: int;

        i3 := @parameter6: int;

        l4 := @parameter7: long;

        r4 := @parameter8: android.view.MagnificationSpec;

        $r7 = r0.<android.view.AccessibilityInteractionController: android.view.AccessibilityInteractionController$PrivateHandler mHandler>;

        r5 = virtualinvoke $r7.<android.view.AccessibilityInteractionController$PrivateHandler: android.os.Message obtainMessage()>();

        r5.<android.os.Message: int what> = 4;

        r5.<android.os.Message: int arg1> = i2;

        r6 = staticinvoke <com.android.internal.os.SomeArgs: com.android.internal.os.SomeArgs obtain()>();

        r6.<com.android.internal.os.SomeArgs: java.lang.Object arg1> = r1;

        r6.<com.android.internal.os.SomeArgs: java.lang.Object arg2> = r3;

        r6.<com.android.internal.os.SomeArgs: java.lang.Object arg3> = r4;

        $i5 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo: int getAccessibilityViewId(long)>(l0);

        r6.<com.android.internal.os.SomeArgs: int argi1> = $i5;

        $i6 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo: int getVirtualDescendantId(long)>(l0);

        r6.<com.android.internal.os.SomeArgs: int argi2> = $i6;

        r6.<com.android.internal.os.SomeArgs: int argi3> = i1;

        r6.<com.android.internal.os.SomeArgs: java.lang.Object arg4> = r2;

        r5.<android.os.Message: java.lang.Object obj> = r6;

        specialinvoke r0.<android.view.AccessibilityInteractionController: void scheduleMessage(android.os.Message,int,long,boolean)>(r5, i3, l4, 0);

        return;
    }

    public void findAccessibilityNodeInfosByViewIdClientThread(long, java.lang.String, android.graphics.Region, int, android.view.accessibility.IAccessibilityInteractionConnectionCallback, int, int, long, android.view.MagnificationSpec)
    {
        android.view.AccessibilityInteractionController r0;
        long l0, l4;
        java.lang.String r1;
        android.graphics.Region r2;
        int i1, i2, i3, $i5;
        android.view.accessibility.IAccessibilityInteractionConnectionCallback r3;
        android.view.MagnificationSpec r4;
        android.os.Message r5;
        com.android.internal.os.SomeArgs r6;
        android.view.AccessibilityInteractionController$PrivateHandler $r7;

        r0 := @this: android.view.AccessibilityInteractionController;

        l0 := @parameter0: long;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.graphics.Region;

        i1 := @parameter3: int;

        r3 := @parameter4: android.view.accessibility.IAccessibilityInteractionConnectionCallback;

        i2 := @parameter5: int;

        i3 := @parameter6: int;

        l4 := @parameter7: long;

        r4 := @parameter8: android.view.MagnificationSpec;

        $r7 = r0.<android.view.AccessibilityInteractionController: android.view.AccessibilityInteractionController$PrivateHandler mHandler>;

        r5 = virtualinvoke $r7.<android.view.AccessibilityInteractionController$PrivateHandler: android.os.Message obtainMessage()>();

        r5.<android.os.Message: int what> = 3;

        r5.<android.os.Message: int arg1> = i2;

        $i5 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo: int getAccessibilityViewId(long)>(l0);

        r5.<android.os.Message: int arg2> = $i5;

        r6 = staticinvoke <com.android.internal.os.SomeArgs: com.android.internal.os.SomeArgs obtain()>();

        r6.<com.android.internal.os.SomeArgs: int argi1> = i1;

        r6.<com.android.internal.os.SomeArgs: java.lang.Object arg1> = r3;

        r6.<com.android.internal.os.SomeArgs: java.lang.Object arg2> = r4;

        r6.<com.android.internal.os.SomeArgs: java.lang.Object arg3> = r1;

        r6.<com.android.internal.os.SomeArgs: java.lang.Object arg4> = r2;

        r5.<android.os.Message: java.lang.Object obj> = r6;

        specialinvoke r0.<android.view.AccessibilityInteractionController: void scheduleMessage(android.os.Message,int,long,boolean)>(r5, i3, l4, 0);

        return;
    }

    public void findFocusClientThread(long, int, android.graphics.Region, int, android.view.accessibility.IAccessibilityInteractionConnectionCallback, int, int, long, android.view.MagnificationSpec)
    {
        android.view.AccessibilityInteractionController r0;
        long l0, l5;
        int i1, i2, i3, i4, $i6, $i7;
        android.graphics.Region r1;
        android.view.accessibility.IAccessibilityInteractionConnectionCallback r2;
        android.view.MagnificationSpec r3;
        android.os.Message r4;
        com.android.internal.os.SomeArgs r5;
        android.view.AccessibilityInteractionController$PrivateHandler $r6;

        r0 := @this: android.view.AccessibilityInteractionController;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        r1 := @parameter2: android.graphics.Region;

        i2 := @parameter3: int;

        r2 := @parameter4: android.view.accessibility.IAccessibilityInteractionConnectionCallback;

        i3 := @parameter5: int;

        i4 := @parameter6: int;

        l5 := @parameter7: long;

        r3 := @parameter8: android.view.MagnificationSpec;

        $r6 = r0.<android.view.AccessibilityInteractionController: android.view.AccessibilityInteractionController$PrivateHandler mHandler>;

        r4 = virtualinvoke $r6.<android.view.AccessibilityInteractionController$PrivateHandler: android.os.Message obtainMessage()>();

        r4.<android.os.Message: int what> = 5;

        r4.<android.os.Message: int arg1> = i3;

        r4.<android.os.Message: int arg2> = i1;

        r5 = staticinvoke <com.android.internal.os.SomeArgs: com.android.internal.os.SomeArgs obtain()>();

        r5.<com.android.internal.os.SomeArgs: int argi1> = i2;

        $i6 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo: int getAccessibilityViewId(long)>(l0);

        r5.<com.android.internal.os.SomeArgs: int argi2> = $i6;

        $i7 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo: int getVirtualDescendantId(long)>(l0);

        r5.<com.android.internal.os.SomeArgs: int argi3> = $i7;

        r5.<com.android.internal.os.SomeArgs: java.lang.Object arg1> = r2;

        r5.<com.android.internal.os.SomeArgs: java.lang.Object arg2> = r3;

        r5.<com.android.internal.os.SomeArgs: java.lang.Object arg3> = r1;

        r4.<android.os.Message: java.lang.Object obj> = r5;

        specialinvoke r0.<android.view.AccessibilityInteractionController: void scheduleMessage(android.os.Message,int,long,boolean)>(r4, i4, l5, 0);

        return;
    }

    public void focusSearchClientThread(long, int, android.graphics.Region, int, android.view.accessibility.IAccessibilityInteractionConnectionCallback, int, int, long, android.view.MagnificationSpec)
    {
        android.view.AccessibilityInteractionController r0;
        long l0, l5;
        int i1, i2, i3, i4, $i6;
        android.graphics.Region r1;
        android.view.accessibility.IAccessibilityInteractionConnectionCallback r2;
        android.view.MagnificationSpec r3;
        android.os.Message r4;
        com.android.internal.os.SomeArgs r5;
        android.view.AccessibilityInteractionController$PrivateHandler $r6;

        r0 := @this: android.view.AccessibilityInteractionController;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        r1 := @parameter2: android.graphics.Region;

        i2 := @parameter3: int;

        r2 := @parameter4: android.view.accessibility.IAccessibilityInteractionConnectionCallback;

        i3 := @parameter5: int;

        i4 := @parameter6: int;

        l5 := @parameter7: long;

        r3 := @parameter8: android.view.MagnificationSpec;

        $r6 = r0.<android.view.AccessibilityInteractionController: android.view.AccessibilityInteractionController$PrivateHandler mHandler>;

        r4 = virtualinvoke $r6.<android.view.AccessibilityInteractionController$PrivateHandler: android.os.Message obtainMessage()>();

        r4.<android.os.Message: int what> = 6;

        r4.<android.os.Message: int arg1> = i3;

        $i6 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo: int getAccessibilityViewId(long)>(l0);

        r4.<android.os.Message: int arg2> = $i6;

        r5 = staticinvoke <com.android.internal.os.SomeArgs: com.android.internal.os.SomeArgs obtain()>();

        r5.<com.android.internal.os.SomeArgs: int argi2> = i1;

        r5.<com.android.internal.os.SomeArgs: int argi3> = i2;

        r5.<com.android.internal.os.SomeArgs: java.lang.Object arg1> = r2;

        r5.<com.android.internal.os.SomeArgs: java.lang.Object arg2> = r3;

        r5.<com.android.internal.os.SomeArgs: java.lang.Object arg3> = r1;

        r4.<android.os.Message: java.lang.Object obj> = r5;

        specialinvoke r0.<android.view.AccessibilityInteractionController: void scheduleMessage(android.os.Message,int,long,boolean)>(r4, i4, l5, 0);

        return;
    }

    public void notifyOutsideTouchClientThread()
    {
        android.view.AccessibilityInteractionController r0;
        android.os.Message r1;
        android.view.AccessibilityInteractionController$PrivateHandler $r2;

        r0 := @this: android.view.AccessibilityInteractionController;

        $r2 = r0.<android.view.AccessibilityInteractionController: android.view.AccessibilityInteractionController$PrivateHandler mHandler>;

        r1 = virtualinvoke $r2.<android.view.AccessibilityInteractionController$PrivateHandler: android.os.Message obtainMessage()>();

        r1.<android.os.Message: int what> = 102;

        specialinvoke r0.<android.view.AccessibilityInteractionController: void scheduleMessage(android.os.Message,int,long,boolean)>(r1, 0, 0L, 0);

        return;
    }

    public void performAccessibilityActionClientThread(long, int, android.os.Bundle, int, android.view.accessibility.IAccessibilityInteractionConnectionCallback, int, int, long)
    {
        android.view.AccessibilityInteractionController r0;
        long l0, l5;
        int i1, i2, i3, i4, $i6, $i7;
        android.os.Bundle r1;
        android.view.accessibility.IAccessibilityInteractionConnectionCallback r2;
        android.os.Message r3;
        com.android.internal.os.SomeArgs r4;
        android.view.AccessibilityInteractionController$PrivateHandler $r5;

        r0 := @this: android.view.AccessibilityInteractionController;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        r1 := @parameter2: android.os.Bundle;

        i2 := @parameter3: int;

        r2 := @parameter4: android.view.accessibility.IAccessibilityInteractionConnectionCallback;

        i3 := @parameter5: int;

        i4 := @parameter6: int;

        l5 := @parameter7: long;

        $r5 = r0.<android.view.AccessibilityInteractionController: android.view.AccessibilityInteractionController$PrivateHandler mHandler>;

        r3 = virtualinvoke $r5.<android.view.AccessibilityInteractionController$PrivateHandler: android.os.Message obtainMessage()>();

        r3.<android.os.Message: int what> = 1;

        r3.<android.os.Message: int arg1> = i3;

        $i6 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo: int getAccessibilityViewId(long)>(l0);

        r3.<android.os.Message: int arg2> = $i6;

        r4 = staticinvoke <com.android.internal.os.SomeArgs: com.android.internal.os.SomeArgs obtain()>();

        $i7 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo: int getVirtualDescendantId(long)>(l0);

        r4.<com.android.internal.os.SomeArgs: int argi1> = $i7;

        r4.<com.android.internal.os.SomeArgs: int argi2> = i1;

        r4.<com.android.internal.os.SomeArgs: int argi3> = i2;

        r4.<com.android.internal.os.SomeArgs: java.lang.Object arg1> = r2;

        r4.<com.android.internal.os.SomeArgs: java.lang.Object arg2> = r1;

        r3.<android.os.Message: java.lang.Object obj> = r4;

        specialinvoke r0.<android.view.AccessibilityInteractionController: void scheduleMessage(android.os.Message,int,long,boolean)>(r3, i4, l5, 0);

        return;
    }

    public static void <clinit>()
    {
        <android.view.AccessibilityInteractionController: long REQUEST_PREPARER_TIMEOUT_MS> = 500L;

        <android.view.AccessibilityInteractionController: java.lang.String LOG_TAG> = "AccessibilityInteractionController";

        <android.view.AccessibilityInteractionController: boolean IGNORE_REQUEST_PREPARERS> = 1;

        <android.view.AccessibilityInteractionController: boolean ENFORCE_NODE_TREE_CONSISTENT> = 0;

        <android.view.AccessibilityInteractionController: boolean CONSIDER_REQUEST_PREPARERS> = 0;

        return;
    }
}
