public class android.view.CutoutSpecification$Parser extends java.lang.Object
{
    private boolean mBindBottomCutout;
    private boolean mBindLeftCutout;
    private boolean mBindRightCutout;
    private android.graphics.Rect mBottomBound;
    private final float mDensity;
    private final int mDisplayHeight;
    private final int mDisplayWidth;
    private boolean mInDp;
    private android.graphics.Insets mInsets;
    private boolean mIsCloserToStartSide;
    private final boolean mIsShortEdgeOnTop;
    private boolean mIsTouchShortEdgeEnd;
    private boolean mIsTouchShortEdgeStart;
    private android.graphics.Rect mLeftBound;
    private final android.graphics.Matrix mMatrix;
    private android.graphics.Path mPath;
    private boolean mPositionFromBottom;
    private boolean mPositionFromCenterVertical;
    private boolean mPositionFromLeft;
    private boolean mPositionFromRight;
    private android.graphics.Rect mRightBound;
    private int mSafeInsetBottom;
    private int mSafeInsetLeft;
    private int mSafeInsetRight;
    private int mSafeInsetTop;
    private final android.graphics.Rect mTmpRect;
    private final android.graphics.RectF mTmpRectF;
    private android.graphics.Rect mTopBound;

    public void <init>(float, int, int)
    {
        android.view.CutoutSpecification$Parser r0;
        float f0;
        int i0, i1, $i2, $i3;
        android.graphics.Rect $r1;
        android.graphics.RectF $r2;
        android.graphics.Matrix $r3;
        boolean z0;

        r0 := @this: android.view.CutoutSpecification$Parser;

        f0 := @parameter0: float;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new android.graphics.Rect;

        specialinvoke $r1.<android.graphics.Rect: void <init>()>();

        r0.<android.view.CutoutSpecification$Parser: android.graphics.Rect mTmpRect> = $r1;

        $r2 = new android.graphics.RectF;

        specialinvoke $r2.<android.graphics.RectF: void <init>()>();

        r0.<android.view.CutoutSpecification$Parser: android.graphics.RectF mTmpRectF> = $r2;

        z0 = 0;

        r0.<android.view.CutoutSpecification$Parser: boolean mPositionFromLeft> = 0;

        r0.<android.view.CutoutSpecification$Parser: boolean mPositionFromRight> = 0;

        r0.<android.view.CutoutSpecification$Parser: boolean mPositionFromBottom> = 0;

        r0.<android.view.CutoutSpecification$Parser: boolean mPositionFromCenterVertical> = 0;

        r0.<android.view.CutoutSpecification$Parser: boolean mBindLeftCutout> = 0;

        r0.<android.view.CutoutSpecification$Parser: boolean mBindRightCutout> = 0;

        r0.<android.view.CutoutSpecification$Parser: boolean mBindBottomCutout> = 0;

        r0.<android.view.CutoutSpecification$Parser: float mDensity> = f0;

        r0.<android.view.CutoutSpecification$Parser: int mDisplayWidth> = i0;

        r0.<android.view.CutoutSpecification$Parser: int mDisplayHeight> = i1;

        $r3 = new android.graphics.Matrix;

        specialinvoke $r3.<android.graphics.Matrix: void <init>()>();

        r0.<android.view.CutoutSpecification$Parser: android.graphics.Matrix mMatrix> = $r3;

        $i3 = r0.<android.view.CutoutSpecification$Parser: int mDisplayWidth>;

        $i2 = r0.<android.view.CutoutSpecification$Parser: int mDisplayHeight>;

        if $i3 >= $i2 goto label1;

        z0 = 1;

     label1:
        r0.<android.view.CutoutSpecification$Parser: boolean mIsShortEdgeOnTop> = z0;

        return;
    }

    static android.graphics.Path access$000(android.view.CutoutSpecification$Parser)
    {
        android.view.CutoutSpecification$Parser r0;
        android.graphics.Path $r1;

        r0 := @parameter0: android.view.CutoutSpecification$Parser;

        $r1 = r0.<android.view.CutoutSpecification$Parser: android.graphics.Path mPath>;

        return $r1;
    }

    static android.graphics.Rect access$100(android.view.CutoutSpecification$Parser)
    {
        android.view.CutoutSpecification$Parser r0;
        android.graphics.Rect $r1;

        r0 := @parameter0: android.view.CutoutSpecification$Parser;

        $r1 = r0.<android.view.CutoutSpecification$Parser: android.graphics.Rect mLeftBound>;

        return $r1;
    }

    static android.graphics.Rect access$200(android.view.CutoutSpecification$Parser)
    {
        android.view.CutoutSpecification$Parser r0;
        android.graphics.Rect $r1;

        r0 := @parameter0: android.view.CutoutSpecification$Parser;

        $r1 = r0.<android.view.CutoutSpecification$Parser: android.graphics.Rect mTopBound>;

        return $r1;
    }

    static android.graphics.Rect access$300(android.view.CutoutSpecification$Parser)
    {
        android.view.CutoutSpecification$Parser r0;
        android.graphics.Rect $r1;

        r0 := @parameter0: android.view.CutoutSpecification$Parser;

        $r1 = r0.<android.view.CutoutSpecification$Parser: android.graphics.Rect mRightBound>;

        return $r1;
    }

    static android.graphics.Rect access$400(android.view.CutoutSpecification$Parser)
    {
        android.view.CutoutSpecification$Parser r0;
        android.graphics.Rect $r1;

        r0 := @parameter0: android.view.CutoutSpecification$Parser;

        $r1 = r0.<android.view.CutoutSpecification$Parser: android.graphics.Rect mBottomBound>;

        return $r1;
    }

    static android.graphics.Insets access$500(android.view.CutoutSpecification$Parser)
    {
        android.view.CutoutSpecification$Parser r0;
        android.graphics.Insets $r1;

        r0 := @parameter0: android.view.CutoutSpecification$Parser;

        $r1 = r0.<android.view.CutoutSpecification$Parser: android.graphics.Insets mInsets>;

        return $r1;
    }

    private void computeBoundsRectAndAddToRegion(android.graphics.Path, android.graphics.Region, android.graphics.Rect)
    {
        android.view.CutoutSpecification$Parser r0;
        android.graphics.Path r1;
        android.graphics.Region r2;
        android.graphics.Rect r3;
        android.graphics.RectF $r4, $r5, $r6;
        android.graphics.Region$Op $r7;

        r0 := @this: android.view.CutoutSpecification$Parser;

        r1 := @parameter0: android.graphics.Path;

        r2 := @parameter1: android.graphics.Region;

        r3 := @parameter2: android.graphics.Rect;

        $r4 = r0.<android.view.CutoutSpecification$Parser: android.graphics.RectF mTmpRectF>;

        virtualinvoke $r4.<android.graphics.RectF: void setEmpty()>();

        $r5 = r0.<android.view.CutoutSpecification$Parser: android.graphics.RectF mTmpRectF>;

        virtualinvoke r1.<android.graphics.Path: void computeBounds(android.graphics.RectF,boolean)>($r5, 0);

        $r6 = r0.<android.view.CutoutSpecification$Parser: android.graphics.RectF mTmpRectF>;

        virtualinvoke $r6.<android.graphics.RectF: void round(android.graphics.Rect)>(r3);

        $r7 = <android.graphics.Region$Op: android.graphics.Region$Op UNION>;

        virtualinvoke r2.<android.graphics.Region: boolean op(android.graphics.Rect,android.graphics.Region$Op)>(r3, $r7);

        return;
    }

    private int computeSafeInsets(int, android.graphics.Rect)
    {
        android.view.CutoutSpecification$Parser r0;
        android.graphics.Rect r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, i15, i16, i17, i18;

        r0 := @this: android.view.CutoutSpecification$Parser;

        i15 := @parameter0: int;

        r1 := @parameter1: android.graphics.Rect;

        if i15 != 3 goto label1;

        $i11 = r1.<android.graphics.Rect: int right>;

        if $i11 <= 0 goto label1;

        $i13 = r1.<android.graphics.Rect: int right>;

        $i12 = r0.<android.view.CutoutSpecification$Parser: int mDisplayWidth>;

        if $i13 >= $i12 goto label1;

        $i14 = r1.<android.graphics.Rect: int right>;

        return $i14;

     label1:
        if i15 != 48 goto label2;

        $i7 = r1.<android.graphics.Rect: int bottom>;

        if $i7 <= 0 goto label2;

        $i9 = r1.<android.graphics.Rect: int bottom>;

        $i8 = r0.<android.view.CutoutSpecification$Parser: int mDisplayHeight>;

        if $i9 >= $i8 goto label2;

        $i10 = r1.<android.graphics.Rect: int bottom>;

        return $i10;

     label2:
        if i15 != 5 goto label3;

        $i4 = r1.<android.graphics.Rect: int left>;

        if $i4 <= 0 goto label3;

        i0 = r1.<android.graphics.Rect: int left>;

        i16 = r0.<android.view.CutoutSpecification$Parser: int mDisplayWidth>;

        if i0 >= i16 goto label3;

        $i5 = r1.<android.graphics.Rect: int left>;

        $i6 = i16 - $i5;

        return $i6;

     label3:
        if i15 != 80 goto label4;

        $i1 = r1.<android.graphics.Rect: int top>;

        if $i1 <= 0 goto label4;

        i17 = r1.<android.graphics.Rect: int top>;

        i18 = r0.<android.view.CutoutSpecification$Parser: int mDisplayHeight>;

        if i17 >= i18 goto label4;

        $i2 = r1.<android.graphics.Rect: int top>;

        $i3 = i18 - $i2;

        return $i3;

     label4:
        return 0;
    }

    private int getSafeInset(int)
    {
        android.view.CutoutSpecification$Parser r0;
        int i0, $i1, $i2, $i3, $i4;

        r0 := @this: android.view.CutoutSpecification$Parser;

        i0 := @parameter0: int;

        if i0 != 3 goto label1;

        $i4 = r0.<android.view.CutoutSpecification$Parser: int mSafeInsetLeft>;

        return $i4;

     label1:
        if i0 != 48 goto label2;

        $i3 = r0.<android.view.CutoutSpecification$Parser: int mSafeInsetTop>;

        return $i3;

     label2:
        if i0 != 5 goto label3;

        $i2 = r0.<android.view.CutoutSpecification$Parser: int mSafeInsetRight>;

        return $i2;

     label3:
        if i0 != 80 goto label4;

        $i1 = r0.<android.view.CutoutSpecification$Parser: int mSafeInsetBottom>;

        return $i1;

     label4:
        return 0;
    }

    private android.graphics.Rect onSetEdgeCutout(boolean, boolean, android.graphics.Rect)
    {
        android.view.CutoutSpecification$Parser r0;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10;
        android.graphics.Rect r1, $r2;
        int i0, i1, i2;

        r0 := @this: android.view.CutoutSpecification$Parser;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        r1 := @parameter2: android.graphics.Rect;

        if z1 == 0 goto label1;

        $z10 = r0.<android.view.CutoutSpecification$Parser: boolean mIsShortEdgeOnTop>;

        i2 = staticinvoke <android.view.CutoutSpecification: int access$600(boolean,boolean,boolean)>($z10, 1, z0);

        goto label5;

     label1:
        $z2 = r0.<android.view.CutoutSpecification$Parser: boolean mIsTouchShortEdgeStart>;

        if $z2 == 0 goto label2;

        $z8 = r0.<android.view.CutoutSpecification$Parser: boolean mIsTouchShortEdgeEnd>;

        if $z8 == 0 goto label2;

        $z9 = r0.<android.view.CutoutSpecification$Parser: boolean mIsShortEdgeOnTop>;

        i2 = staticinvoke <android.view.CutoutSpecification: int access$600(boolean,boolean,boolean)>($z9, 0, z0);

        goto label5;

     label2:
        $z3 = r0.<android.view.CutoutSpecification$Parser: boolean mIsTouchShortEdgeStart>;

        if $z3 != 0 goto label4;

        $z6 = r0.<android.view.CutoutSpecification$Parser: boolean mIsTouchShortEdgeEnd>;

        if $z6 == 0 goto label3;

        goto label4;

     label3:
        $z7 = r0.<android.view.CutoutSpecification$Parser: boolean mIsShortEdgeOnTop>;

        i2 = staticinvoke <android.view.CutoutSpecification: int access$600(boolean,boolean,boolean)>($z7, z1, z0);

        goto label5;

     label4:
        $z5 = r0.<android.view.CutoutSpecification$Parser: boolean mIsShortEdgeOnTop>;

        $z4 = r0.<android.view.CutoutSpecification$Parser: boolean mIsCloserToStartSide>;

        i2 = staticinvoke <android.view.CutoutSpecification: int access$600(boolean,boolean,boolean)>($z5, 1, $z4);

     label5:
        i0 = specialinvoke r0.<android.view.CutoutSpecification$Parser: int getSafeInset(int)>(i2);

        i1 = specialinvoke r0.<android.view.CutoutSpecification$Parser: int computeSafeInsets(int,android.graphics.Rect)>(i2, r1);

        if i0 >= i1 goto label6;

        specialinvoke r0.<android.view.CutoutSpecification$Parser: void setSafeInset(int,int)>(i2, i1);

     label6:
        $r2 = new android.graphics.Rect;

        specialinvoke $r2.<android.graphics.Rect: void <init>(android.graphics.Rect)>(r1);

        return $r2;
    }

    private void parseSpecWithoutDp(java.lang.String)
    {
        android.view.CutoutSpecification$Parser r0;
        java.lang.String r1, $r4, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15;
        android.graphics.Region r2;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        java.lang.StringBuilder $r16, r17, r18;

        r0 := @this: android.view.CutoutSpecification$Parser;

        r1 := @parameter0: java.lang.String;

        r2 = staticinvoke <android.graphics.Region: android.graphics.Region obtain()>();

        r17 = null;

        i10 = 0;

     label01:
        i0 = virtualinvoke r1.<java.lang.String: int indexOf(int,int)>(64, i10);

        if i0 == -1 goto label13;

        r18 = r17;

        if r17 != null goto label02;

        $r16 = new java.lang.StringBuilder;

        $i9 = virtualinvoke r1.<java.lang.String: int length()>();

        specialinvoke $r16.<java.lang.StringBuilder: void <init>(int)>($i9);

        r18 = $r16;

     label02:
        virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence,int,int)>(r1, i10, i0);

        $z0 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String,int)>("@left", i0);

        if $z0 == 0 goto label04;

        $z8 = r0.<android.view.CutoutSpecification$Parser: boolean mPositionFromRight>;

        if $z8 != 0 goto label03;

        r0.<android.view.CutoutSpecification$Parser: boolean mPositionFromLeft> = 1;

     label03:
        $r15 = "@left";

        $i8 = virtualinvoke $r15.<java.lang.String: int length()>();

        i10 = i0 + $i8;

        goto label12;

     label04:
        $z1 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String,int)>("@right", i0);

        if $z1 == 0 goto label06;

        $z7 = r0.<android.view.CutoutSpecification$Parser: boolean mPositionFromLeft>;

        if $z7 != 0 goto label05;

        r0.<android.view.CutoutSpecification$Parser: boolean mPositionFromRight> = 1;

     label05:
        $r14 = "@right";

        $i7 = virtualinvoke $r14.<java.lang.String: int length()>();

        i10 = i0 + $i7;

        goto label12;

     label06:
        $z2 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String,int)>("@bottom", i0);

        if $z2 == 0 goto label07;

        $r12 = virtualinvoke r18.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<android.view.CutoutSpecification$Parser: void parseSvgPathSpec(android.graphics.Region,java.lang.String)>(r2, $r12);

        $r13 = "@bottom";

        $i6 = virtualinvoke $r13.<java.lang.String: int length()>();

        i10 = i0 + $i6;

        specialinvoke r0.<android.view.CutoutSpecification$Parser: void resetStatus(java.lang.StringBuilder)>(r18);

        r0.<android.view.CutoutSpecification$Parser: boolean mBindBottomCutout> = 1;

        r0.<android.view.CutoutSpecification$Parser: boolean mPositionFromBottom> = 1;

        goto label12;

     label07:
        $z3 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String,int)>("@center_vertical", i0);

        if $z3 == 0 goto label08;

        $r10 = virtualinvoke r18.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<android.view.CutoutSpecification$Parser: void parseSvgPathSpec(android.graphics.Region,java.lang.String)>(r2, $r10);

        $r11 = "@center_vertical";

        $i5 = virtualinvoke $r11.<java.lang.String: int length()>();

        i10 = i0 + $i5;

        specialinvoke r0.<android.view.CutoutSpecification$Parser: void resetStatus(java.lang.StringBuilder)>(r18);

        r0.<android.view.CutoutSpecification$Parser: boolean mPositionFromCenterVertical> = 1;

        goto label12;

     label08:
        $z4 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String,int)>("@cutout", i0);

        if $z4 == 0 goto label09;

        $r8 = virtualinvoke r18.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<android.view.CutoutSpecification$Parser: void parseSvgPathSpec(android.graphics.Region,java.lang.String)>(r2, $r8);

        $r9 = "@cutout";

        $i4 = virtualinvoke $r9.<java.lang.String: int length()>();

        i10 = i0 + $i4;

        specialinvoke r0.<android.view.CutoutSpecification$Parser: void resetStatus(java.lang.StringBuilder)>(r18);

        goto label12;

     label09:
        $z5 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String,int)>("@bind_left_cutout", i0);

        if $z5 == 0 goto label10;

        r0.<android.view.CutoutSpecification$Parser: boolean mBindBottomCutout> = 0;

        r0.<android.view.CutoutSpecification$Parser: boolean mBindRightCutout> = 0;

        r0.<android.view.CutoutSpecification$Parser: boolean mBindLeftCutout> = 1;

        $r7 = "@bind_left_cutout";

        $i3 = virtualinvoke $r7.<java.lang.String: int length()>();

        i10 = i0 + $i3;

        goto label12;

     label10:
        $z6 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String,int)>("@bind_right_cutout", i0);

        if $z6 == 0 goto label11;

        r0.<android.view.CutoutSpecification$Parser: boolean mBindBottomCutout> = 0;

        r0.<android.view.CutoutSpecification$Parser: boolean mBindLeftCutout> = 0;

        r0.<android.view.CutoutSpecification$Parser: boolean mBindRightCutout> = 1;

        $r6 = "@bind_right_cutout";

        $i2 = virtualinvoke $r6.<java.lang.String: int length()>();

        i10 = i0 + $i2;

        goto label12;

     label11:
        i10 = i0 + 1;

     label12:
        r17 = r18;

        goto label01;

     label13:
        if r17 != null goto label14;

        specialinvoke r0.<android.view.CutoutSpecification$Parser: void parseSvgPathSpec(android.graphics.Region,java.lang.String)>(r2, r1);

        goto label15;

     label14:
        $i1 = virtualinvoke r1.<java.lang.String: int length()>();

        virtualinvoke r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence,int,int)>(r1, i10, $i1);

        $r4 = virtualinvoke r17.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<android.view.CutoutSpecification$Parser: void parseSvgPathSpec(android.graphics.Region,java.lang.String)>(r2, $r4);

     label15:
        virtualinvoke r2.<android.graphics.Region: void recycle()>();

        return;
    }

    private void parseSvgPathSpec(android.graphics.Region, java.lang.String)
    {
        android.view.CutoutSpecification$Parser r0;
        android.graphics.Region r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13;
        android.graphics.Matrix $r3;
        android.graphics.Rect $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11;
        boolean $z2, z3, z4, z5, z6, z7, z8, z9;
        java.lang.String r12;
        android.graphics.Path r13;

        r0 := @this: android.view.CutoutSpecification$Parser;

        r1 := @parameter0: android.graphics.Region;

        r12 := @parameter1: java.lang.String;

        $i0 = staticinvoke <android.text.TextUtils: int length(java.lang.String)>(r12);

        $i1 = staticinvoke <android.view.CutoutSpecification: int access$700()>();

        if $i0 >= $i1 goto label01;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("CutoutSpecification", "According to SVG definition, it shouldn\'t happen");

        return;

     label01:
        virtualinvoke r12.<java.lang.String: java.lang.String trim()>();

        specialinvoke r0.<android.view.CutoutSpecification$Parser: void translateMatrix()>();

        r13 = staticinvoke <android.util.PathParser: android.graphics.Path createPathFromPathData(java.lang.String)>(r12);

        $r3 = r0.<android.view.CutoutSpecification$Parser: android.graphics.Matrix mMatrix>;

        virtualinvoke r13.<android.graphics.Path: void transform(android.graphics.Matrix)>($r3);

        $r4 = r0.<android.view.CutoutSpecification$Parser: android.graphics.Rect mTmpRect>;

        specialinvoke r0.<android.view.CutoutSpecification$Parser: void computeBoundsRectAndAddToRegion(android.graphics.Path,android.graphics.Region,android.graphics.Rect)>(r13, r1, $r4);

        $r5 = r0.<android.view.CutoutSpecification$Parser: android.graphics.Rect mTmpRect>;

        $z2 = virtualinvoke $r5.<android.graphics.Rect: boolean isEmpty()>();

        if $z2 == 0 goto label02;

        return;

     label02:
        z3 = r0.<android.view.CutoutSpecification$Parser: boolean mIsShortEdgeOnTop>;

        if z3 == 0 goto label09;

        $r9 = r0.<android.view.CutoutSpecification$Parser: android.graphics.Rect mTmpRect>;

        $i8 = $r9.<android.graphics.Rect: int top>;

        if $i8 > 0 goto label03;

        z4 = 1;

        goto label04;

     label03:
        z4 = 0;

     label04:
        r0.<android.view.CutoutSpecification$Parser: boolean mIsTouchShortEdgeStart> = z4;

        $r10 = r0.<android.view.CutoutSpecification$Parser: android.graphics.Rect mTmpRect>;

        $i10 = $r10.<android.graphics.Rect: int bottom>;

        $i9 = r0.<android.view.CutoutSpecification$Parser: int mDisplayHeight>;

        if $i10 < $i9 goto label05;

        z5 = 1;

        goto label06;

     label05:
        z5 = 0;

     label06:
        r0.<android.view.CutoutSpecification$Parser: boolean mIsTouchShortEdgeEnd> = z5;

        $r11 = r0.<android.view.CutoutSpecification$Parser: android.graphics.Rect mTmpRect>;

        $i11 = virtualinvoke $r11.<android.graphics.Rect: int centerY()>();

        $i12 = r0.<android.view.CutoutSpecification$Parser: int mDisplayHeight>;

        $i13 = $i12 / 2;

        if $i11 >= $i13 goto label07;

        z6 = 1;

        goto label08;

     label07:
        z6 = 0;

     label08:
        r0.<android.view.CutoutSpecification$Parser: boolean mIsCloserToStartSide> = z6;

        goto label16;

     label09:
        $r6 = r0.<android.view.CutoutSpecification$Parser: android.graphics.Rect mTmpRect>;

        $i2 = $r6.<android.graphics.Rect: int left>;

        if $i2 > 0 goto label10;

        z7 = 1;

        goto label11;

     label10:
        z7 = 0;

     label11:
        r0.<android.view.CutoutSpecification$Parser: boolean mIsTouchShortEdgeStart> = z7;

        $r7 = r0.<android.view.CutoutSpecification$Parser: android.graphics.Rect mTmpRect>;

        $i4 = $r7.<android.graphics.Rect: int right>;

        $i3 = r0.<android.view.CutoutSpecification$Parser: int mDisplayWidth>;

        if $i4 < $i3 goto label12;

        z8 = 1;

        goto label13;

     label12:
        z8 = 0;

     label13:
        r0.<android.view.CutoutSpecification$Parser: boolean mIsTouchShortEdgeEnd> = z8;

        $r8 = r0.<android.view.CutoutSpecification$Parser: android.graphics.Rect mTmpRect>;

        $i5 = virtualinvoke $r8.<android.graphics.Rect: int centerX()>();

        $i6 = r0.<android.view.CutoutSpecification$Parser: int mDisplayWidth>;

        $i7 = $i6 / 2;

        if $i5 >= $i7 goto label14;

        z9 = 1;

        goto label15;

     label14:
        z9 = 0;

     label15:
        r0.<android.view.CutoutSpecification$Parser: boolean mIsCloserToStartSide> = z9;

     label16:
        specialinvoke r0.<android.view.CutoutSpecification$Parser: void setEdgeCutout(android.graphics.Path)>(r13);

        return;
    }

    private void resetStatus(java.lang.StringBuilder)
    {
        android.view.CutoutSpecification$Parser r0;
        java.lang.StringBuilder r1;

        r0 := @this: android.view.CutoutSpecification$Parser;

        r1 := @parameter0: java.lang.StringBuilder;

        virtualinvoke r1.<java.lang.StringBuilder: void setLength(int)>(0);

        r0.<android.view.CutoutSpecification$Parser: boolean mPositionFromBottom> = 0;

        r0.<android.view.CutoutSpecification$Parser: boolean mPositionFromLeft> = 0;

        r0.<android.view.CutoutSpecification$Parser: boolean mPositionFromRight> = 0;

        r0.<android.view.CutoutSpecification$Parser: boolean mPositionFromCenterVertical> = 0;

        r0.<android.view.CutoutSpecification$Parser: boolean mBindLeftCutout> = 0;

        r0.<android.view.CutoutSpecification$Parser: boolean mBindRightCutout> = 0;

        r0.<android.view.CutoutSpecification$Parser: boolean mBindBottomCutout> = 0;

        return;
    }

    private void setEdgeCutout(android.graphics.Path)
    {
        android.view.CutoutSpecification$Parser r0;
        android.graphics.Path r1, r2;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11;
        android.graphics.Rect $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14;

        r0 := @this: android.view.CutoutSpecification$Parser;

        r1 := @parameter0: android.graphics.Path;

        $z0 = r0.<android.view.CutoutSpecification$Parser: boolean mBindRightCutout>;

        if $z0 == 0 goto label1;

        $r12 = r0.<android.view.CutoutSpecification$Parser: android.graphics.Rect mRightBound>;

        if $r12 != null goto label1;

        $z10 = r0.<android.view.CutoutSpecification$Parser: boolean mIsShortEdgeOnTop>;

        $z11 = $z10 ^ 1;

        $r13 = r0.<android.view.CutoutSpecification$Parser: android.graphics.Rect mTmpRect>;

        $r14 = specialinvoke r0.<android.view.CutoutSpecification$Parser: android.graphics.Rect onSetEdgeCutout(boolean,boolean,android.graphics.Rect)>(0, $z11, $r13);

        r0.<android.view.CutoutSpecification$Parser: android.graphics.Rect mRightBound> = $r14;

        goto label4;

     label1:
        $z1 = r0.<android.view.CutoutSpecification$Parser: boolean mBindLeftCutout>;

        if $z1 == 0 goto label2;

        $r9 = r0.<android.view.CutoutSpecification$Parser: android.graphics.Rect mLeftBound>;

        if $r9 != null goto label2;

        $z8 = r0.<android.view.CutoutSpecification$Parser: boolean mIsShortEdgeOnTop>;

        $z9 = $z8 ^ 1;

        $r10 = r0.<android.view.CutoutSpecification$Parser: android.graphics.Rect mTmpRect>;

        $r11 = specialinvoke r0.<android.view.CutoutSpecification$Parser: android.graphics.Rect onSetEdgeCutout(boolean,boolean,android.graphics.Rect)>(1, $z9, $r10);

        r0.<android.view.CutoutSpecification$Parser: android.graphics.Rect mLeftBound> = $r11;

        goto label4;

     label2:
        $z2 = r0.<android.view.CutoutSpecification$Parser: boolean mBindBottomCutout>;

        if $z2 == 0 goto label3;

        $r6 = r0.<android.view.CutoutSpecification$Parser: android.graphics.Rect mBottomBound>;

        if $r6 != null goto label3;

        $z7 = r0.<android.view.CutoutSpecification$Parser: boolean mIsShortEdgeOnTop>;

        $r7 = r0.<android.view.CutoutSpecification$Parser: android.graphics.Rect mTmpRect>;

        $r8 = specialinvoke r0.<android.view.CutoutSpecification$Parser: android.graphics.Rect onSetEdgeCutout(boolean,boolean,android.graphics.Rect)>(0, $z7, $r7);

        r0.<android.view.CutoutSpecification$Parser: android.graphics.Rect mBottomBound> = $r8;

        goto label4;

     label3:
        $z3 = r0.<android.view.CutoutSpecification$Parser: boolean mBindBottomCutout>;

        if $z3 != 0 goto label7;

        $z4 = r0.<android.view.CutoutSpecification$Parser: boolean mBindLeftCutout>;

        if $z4 != 0 goto label7;

        $z5 = r0.<android.view.CutoutSpecification$Parser: boolean mBindRightCutout>;

        if $z5 != 0 goto label7;

        $r3 = r0.<android.view.CutoutSpecification$Parser: android.graphics.Rect mTopBound>;

        if $r3 != null goto label7;

        $z6 = r0.<android.view.CutoutSpecification$Parser: boolean mIsShortEdgeOnTop>;

        $r4 = r0.<android.view.CutoutSpecification$Parser: android.graphics.Rect mTmpRect>;

        $r5 = specialinvoke r0.<android.view.CutoutSpecification$Parser: android.graphics.Rect onSetEdgeCutout(boolean,boolean,android.graphics.Rect)>(1, $z6, $r4);

        r0.<android.view.CutoutSpecification$Parser: android.graphics.Rect mTopBound> = $r5;

     label4:
        r2 = r0.<android.view.CutoutSpecification$Parser: android.graphics.Path mPath>;

        if r2 == null goto label5;

        virtualinvoke r2.<android.graphics.Path: void addPath(android.graphics.Path)>(r1);

        goto label6;

     label5:
        r0.<android.view.CutoutSpecification$Parser: android.graphics.Path mPath> = r1;

     label6:
        return;

     label7:
        return;
    }

    private void setSafeInset(int, int)
    {
        android.view.CutoutSpecification$Parser r0;
        int i0, i1;

        r0 := @this: android.view.CutoutSpecification$Parser;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i0 != 3 goto label1;

        r0.<android.view.CutoutSpecification$Parser: int mSafeInsetLeft> = i1;

        goto label4;

     label1:
        if i0 != 48 goto label2;

        r0.<android.view.CutoutSpecification$Parser: int mSafeInsetTop> = i1;

        goto label4;

     label2:
        if i0 != 5 goto label3;

        r0.<android.view.CutoutSpecification$Parser: int mSafeInsetRight> = i1;

        goto label4;

     label3:
        if i0 != 80 goto label4;

        r0.<android.view.CutoutSpecification$Parser: int mSafeInsetBottom> = i1;

     label4:
        return;
    }

    private void translateMatrix()
    {
        android.view.CutoutSpecification$Parser r0;
        android.graphics.Matrix r1, $r2, $r3;
        float f0, $f1, $f2, f3, f4;
        boolean $z0, $z1, $z2, $z5, $z6;
        int $i0, $i1, $i2, $i3;

        r0 := @this: android.view.CutoutSpecification$Parser;

        $z0 = r0.<android.view.CutoutSpecification$Parser: boolean mPositionFromRight>;

        if $z0 == 0 goto label1;

        $i3 = r0.<android.view.CutoutSpecification$Parser: int mDisplayWidth>;

        f3 = (float) $i3;

        goto label3;

     label1:
        $z1 = r0.<android.view.CutoutSpecification$Parser: boolean mPositionFromLeft>;

        if $z1 == 0 goto label2;

        f3 = 0.0F;

        goto label3;

     label2:
        $i0 = r0.<android.view.CutoutSpecification$Parser: int mDisplayWidth>;

        $f1 = (float) $i0;

        f3 = $f1 / 2.0F;

     label3:
        $z5 = r0.<android.view.CutoutSpecification$Parser: boolean mPositionFromBottom>;

        if $z5 == 0 goto label4;

        $i2 = r0.<android.view.CutoutSpecification$Parser: int mDisplayHeight>;

        f4 = (float) $i2;

        goto label6;

     label4:
        $z2 = r0.<android.view.CutoutSpecification$Parser: boolean mPositionFromCenterVertical>;

        if $z2 == 0 goto label5;

        $i1 = r0.<android.view.CutoutSpecification$Parser: int mDisplayHeight>;

        $f2 = (float) $i1;

        f4 = $f2 / 2.0F;

        goto label6;

     label5:
        f4 = 0.0F;

     label6:
        $r3 = r0.<android.view.CutoutSpecification$Parser: android.graphics.Matrix mMatrix>;

        virtualinvoke $r3.<android.graphics.Matrix: void reset()>();

        $z6 = r0.<android.view.CutoutSpecification$Parser: boolean mInDp>;

        if $z6 == 0 goto label7;

        r1 = r0.<android.view.CutoutSpecification$Parser: android.graphics.Matrix mMatrix>;

        f0 = r0.<android.view.CutoutSpecification$Parser: float mDensity>;

        virtualinvoke r1.<android.graphics.Matrix: boolean postScale(float,float)>(f0, f0);

     label7:
        $r2 = r0.<android.view.CutoutSpecification$Parser: android.graphics.Matrix mMatrix>;

        virtualinvoke $r2.<android.graphics.Matrix: boolean postTranslate(float,float)>(f3, f4);

        return;
    }

    public android.view.CutoutSpecification parse(java.lang.String)
    {
        android.view.CutoutSpecification$Parser r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6;
        android.graphics.Insets $r3;
        android.view.CutoutSpecification $r4;
        java.lang.StringBuilder $r5;
        java.lang.String $r6, $r8, $r9, r11;
        boolean z0;

        r0 := @this: android.view.CutoutSpecification$Parser;

        r11 := @parameter0: java.lang.String;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r11);

        i0 = virtualinvoke r11.<java.lang.String: int lastIndexOf(java.lang.String)>("@dp");

        if i0 == -1 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        r0.<android.view.CutoutSpecification$Parser: boolean mInDp> = z0;

        if i0 == -1 goto label3;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke r11.<java.lang.String: java.lang.String substring(int,int)>(0, i0);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = "@dp";

        $i5 = virtualinvoke $r8.<java.lang.String: int length()>();

        $i6 = $i5 + i0;

        $r9 = virtualinvoke r11.<java.lang.String: java.lang.String substring(int)>($i6);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        r11 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label3;

     label3:
        specialinvoke r0.<android.view.CutoutSpecification$Parser: void parseSpecWithoutDp(java.lang.String)>(r11);

        $i4 = r0.<android.view.CutoutSpecification$Parser: int mSafeInsetLeft>;

        $i3 = r0.<android.view.CutoutSpecification$Parser: int mSafeInsetTop>;

        $i2 = r0.<android.view.CutoutSpecification$Parser: int mSafeInsetRight>;

        $i1 = r0.<android.view.CutoutSpecification$Parser: int mSafeInsetBottom>;

        $r3 = staticinvoke <android.graphics.Insets: android.graphics.Insets of(int,int,int,int)>($i4, $i3, $i2, $i1);

        r0.<android.view.CutoutSpecification$Parser: android.graphics.Insets mInsets> = $r3;

        $r4 = new android.view.CutoutSpecification;

        specialinvoke $r4.<android.view.CutoutSpecification: void <init>(android.view.CutoutSpecification$Parser,android.view.CutoutSpecification$1)>(r0, null);

        return $r4;
    }
}
