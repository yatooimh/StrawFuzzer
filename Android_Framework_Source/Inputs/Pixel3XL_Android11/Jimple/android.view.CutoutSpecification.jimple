public class android.view.CutoutSpecification extends java.lang.Object
{
    private static final java.lang.String BIND_LEFT_CUTOUT_MARKER;
    private static final java.lang.String BIND_RIGHT_CUTOUT_MARKER;
    private static final java.lang.String BOTTOM_MARKER;
    private static final java.lang.String CENTER_VERTICAL_MARKER;
    private static final java.lang.String CUTOUT_MARKER;
    private static final boolean DEBUG;
    private static final java.lang.String DP_MARKER;
    private static final java.lang.String LEFT_MARKER;
    private static final char MARKER_START_CHAR;
    private static final int MINIMAL_ACCEPTABLE_PATH_LENGTH;
    private static final java.lang.String RIGHT_MARKER;
    private static final java.lang.String TAG;
    private final android.graphics.Rect mBottomBound;
    private final android.graphics.Insets mInsets;
    private final android.graphics.Rect mLeftBound;
    private final android.graphics.Path mPath;
    private final android.graphics.Rect mRightBound;
    private final android.graphics.Rect mTopBound;

    static void <clinit>()
    {
        java.lang.String $r0;
        int $i0;

        <android.view.CutoutSpecification: java.lang.String TAG> = "CutoutSpecification";

        <android.view.CutoutSpecification: java.lang.String RIGHT_MARKER> = "@right";

        <android.view.CutoutSpecification: char MARKER_START_CHAR> = 64;

        <android.view.CutoutSpecification: java.lang.String LEFT_MARKER> = "@left";

        <android.view.CutoutSpecification: java.lang.String DP_MARKER> = "@dp";

        <android.view.CutoutSpecification: boolean DEBUG> = 0;

        <android.view.CutoutSpecification: java.lang.String CUTOUT_MARKER> = "@cutout";

        <android.view.CutoutSpecification: java.lang.String CENTER_VERTICAL_MARKER> = "@center_vertical";

        <android.view.CutoutSpecification: java.lang.String BOTTOM_MARKER> = "@bottom";

        <android.view.CutoutSpecification: java.lang.String BIND_RIGHT_CUTOUT_MARKER> = "@bind_right_cutout";

        <android.view.CutoutSpecification: java.lang.String BIND_LEFT_CUTOUT_MARKER> = "@bind_left_cutout";

        $r0 = "H1V1Z";

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        <android.view.CutoutSpecification: int MINIMAL_ACCEPTABLE_PATH_LENGTH> = $i0;

        return;
    }

    private void <init>(android.view.CutoutSpecification$Parser)
    {
        android.view.CutoutSpecification r0;
        android.view.CutoutSpecification$Parser r1;
        android.graphics.Path $r2;
        android.graphics.Rect $r3, $r4, $r5, $r6;
        android.graphics.Insets $r7;

        r0 := @this: android.view.CutoutSpecification;

        r1 := @parameter0: android.view.CutoutSpecification$Parser;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = staticinvoke <android.view.CutoutSpecification$Parser: android.graphics.Path access$000(android.view.CutoutSpecification$Parser)>(r1);

        r0.<android.view.CutoutSpecification: android.graphics.Path mPath> = $r2;

        $r3 = staticinvoke <android.view.CutoutSpecification$Parser: android.graphics.Rect access$100(android.view.CutoutSpecification$Parser)>(r1);

        r0.<android.view.CutoutSpecification: android.graphics.Rect mLeftBound> = $r3;

        $r4 = staticinvoke <android.view.CutoutSpecification$Parser: android.graphics.Rect access$200(android.view.CutoutSpecification$Parser)>(r1);

        r0.<android.view.CutoutSpecification: android.graphics.Rect mTopBound> = $r4;

        $r5 = staticinvoke <android.view.CutoutSpecification$Parser: android.graphics.Rect access$300(android.view.CutoutSpecification$Parser)>(r1);

        r0.<android.view.CutoutSpecification: android.graphics.Rect mRightBound> = $r5;

        $r6 = staticinvoke <android.view.CutoutSpecification$Parser: android.graphics.Rect access$400(android.view.CutoutSpecification$Parser)>(r1);

        r0.<android.view.CutoutSpecification: android.graphics.Rect mBottomBound> = $r6;

        $r7 = staticinvoke <android.view.CutoutSpecification$Parser: android.graphics.Insets access$500(android.view.CutoutSpecification$Parser)>(r1);

        r0.<android.view.CutoutSpecification: android.graphics.Insets mInsets> = $r7;

        return;
    }

    void <init>(android.view.CutoutSpecification$Parser, android.view.CutoutSpecification$1)
    {
        android.view.CutoutSpecification r0;
        android.view.CutoutSpecification$Parser r1;
        android.view.CutoutSpecification$1 r2;

        r0 := @this: android.view.CutoutSpecification;

        r1 := @parameter0: android.view.CutoutSpecification$Parser;

        r2 := @parameter1: android.view.CutoutSpecification$1;

        specialinvoke r0.<android.view.CutoutSpecification: void <init>(android.view.CutoutSpecification$Parser)>(r1);

        return;
    }

    static int access$600(boolean, boolean, boolean)
    {
        boolean z0, z1, z2;
        int $i0;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        z2 := @parameter2: boolean;

        $i0 = staticinvoke <android.view.CutoutSpecification: int decideWhichEdge(boolean,boolean,boolean)>(z0, z1, z2);

        return $i0;
    }

    static int access$700()
    {
        int $i0;

        $i0 = <android.view.CutoutSpecification: int MINIMAL_ACCEPTABLE_PATH_LENGTH>;

        return $i0;
    }

    private static int decideWhichEdge(boolean, boolean, boolean)
    {
        boolean z0, z1, z2;
        byte b0;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        z2 := @parameter2: boolean;

        b0 = 3;

        if z0 == 0 goto label4;

        if z1 == 0 goto label2;

        if z2 == 0 goto label1;

        b0 = 48;

        goto label8;

     label1:
        b0 = 80;

        goto label8;

     label2:
        if z2 == 0 goto label3;

        goto label8;

     label3:
        b0 = 5;

        goto label8;

     label4:
        if z1 == 0 goto label6;

        if z2 == 0 goto label5;

        goto label8;

     label5:
        b0 = 5;

        goto label8;

     label6:
        if z2 == 0 goto label7;

        b0 = 48;

        goto label8;

     label7:
        b0 = 80;

     label8:
        return b0;
    }

    public android.graphics.Rect getBottomBound()
    {
        android.view.CutoutSpecification r0;
        android.graphics.Rect $r1;

        r0 := @this: android.view.CutoutSpecification;

        $r1 = r0.<android.view.CutoutSpecification: android.graphics.Rect mBottomBound>;

        return $r1;
    }

    public android.graphics.Rect getLeftBound()
    {
        android.view.CutoutSpecification r0;
        android.graphics.Rect $r1;

        r0 := @this: android.view.CutoutSpecification;

        $r1 = r0.<android.view.CutoutSpecification: android.graphics.Rect mLeftBound>;

        return $r1;
    }

    public android.graphics.Path getPath()
    {
        android.view.CutoutSpecification r0;
        android.graphics.Path $r1;

        r0 := @this: android.view.CutoutSpecification;

        $r1 = r0.<android.view.CutoutSpecification: android.graphics.Path mPath>;

        return $r1;
    }

    public android.graphics.Rect getRightBound()
    {
        android.view.CutoutSpecification r0;
        android.graphics.Rect $r1;

        r0 := @this: android.view.CutoutSpecification;

        $r1 = r0.<android.view.CutoutSpecification: android.graphics.Rect mRightBound>;

        return $r1;
    }

    public android.graphics.Rect getSafeInset()
    {
        android.view.CutoutSpecification r0;
        android.graphics.Insets $r1;
        android.graphics.Rect $r2;

        r0 := @this: android.view.CutoutSpecification;

        $r1 = r0.<android.view.CutoutSpecification: android.graphics.Insets mInsets>;

        $r2 = virtualinvoke $r1.<android.graphics.Insets: android.graphics.Rect toRect()>();

        return $r2;
    }

    public android.graphics.Rect getTopBound()
    {
        android.view.CutoutSpecification r0;
        android.graphics.Rect $r1;

        r0 := @this: android.view.CutoutSpecification;

        $r1 = r0.<android.view.CutoutSpecification: android.graphics.Rect mTopBound>;

        return $r1;
    }
}
