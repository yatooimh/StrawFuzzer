class android.view.DisplayCutout$Bounds extends java.lang.Object
{
    private final android.graphics.Rect[] mRects;

    private void <init>(android.graphics.Rect, android.graphics.Rect, android.graphics.Rect, android.graphics.Rect, boolean)
    {
        android.view.DisplayCutout$Bounds r0;
        android.graphics.Rect r1, r2, r3, r4, $r6, $r8, $r10, $r12;
        boolean z0;
        android.graphics.Rect[] r5, $r7, $r9, $r11;

        r0 := @this: android.view.DisplayCutout$Bounds;

        r1 := @parameter0: android.graphics.Rect;

        r2 := @parameter1: android.graphics.Rect;

        r3 := @parameter2: android.graphics.Rect;

        r4 := @parameter3: android.graphics.Rect;

        z0 := @parameter4: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r5 = newarray (android.graphics.Rect)[4];

        r0.<android.view.DisplayCutout$Bounds: android.graphics.Rect[] mRects> = r5;

        $r6 = staticinvoke <android.view.DisplayCutout: android.graphics.Rect access$000(android.graphics.Rect,boolean)>(r1, z0);

        r5[0] = $r6;

        $r7 = r0.<android.view.DisplayCutout$Bounds: android.graphics.Rect[] mRects>;

        $r8 = staticinvoke <android.view.DisplayCutout: android.graphics.Rect access$000(android.graphics.Rect,boolean)>(r2, z0);

        $r7[1] = $r8;

        $r9 = r0.<android.view.DisplayCutout$Bounds: android.graphics.Rect[] mRects>;

        $r10 = staticinvoke <android.view.DisplayCutout: android.graphics.Rect access$000(android.graphics.Rect,boolean)>(r3, z0);

        $r9[2] = $r10;

        $r11 = r0.<android.view.DisplayCutout$Bounds: android.graphics.Rect[] mRects>;

        $r12 = staticinvoke <android.view.DisplayCutout: android.graphics.Rect access$000(android.graphics.Rect,boolean)>(r4, z0);

        $r11[3] = $r12;

        return;
    }

    void <init>(android.graphics.Rect, android.graphics.Rect, android.graphics.Rect, android.graphics.Rect, boolean, android.view.DisplayCutout$1)
    {
        android.view.DisplayCutout$Bounds r0;
        android.graphics.Rect r1, r2, r3, r4;
        boolean z0;
        android.view.DisplayCutout$1 r5;

        r0 := @this: android.view.DisplayCutout$Bounds;

        r1 := @parameter0: android.graphics.Rect;

        r2 := @parameter1: android.graphics.Rect;

        r3 := @parameter2: android.graphics.Rect;

        r4 := @parameter3: android.graphics.Rect;

        z0 := @parameter4: boolean;

        r5 := @parameter5: android.view.DisplayCutout$1;

        specialinvoke r0.<android.view.DisplayCutout$Bounds: void <init>(android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,boolean)>(r1, r2, r3, r4, z0);

        return;
    }

    private void <init>(android.graphics.Rect[], boolean)
    {
        android.view.DisplayCutout$Bounds r0;
        android.graphics.Rect[] r1, $r15, $r18;
        boolean z0;
        int i0, $i1, i2, i3;
        java.lang.StringBuilder $r2, $r9;
        java.lang.String $r4, $r7, $r11, $r14;
        java.lang.IllegalArgumentException $r6, $r13;
        android.graphics.Rect $r8, $r16, $r17;

        r0 := @this: android.view.DisplayCutout$Bounds;

        r1 := @parameter0: android.graphics.Rect[];

        z0 := @parameter1: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i1 = lengthof r1;

        if $i1 != 4 goto label8;

        if z0 == 0 goto label3;

        $r15 = newarray (android.graphics.Rect)[4];

        r0.<android.view.DisplayCutout$Bounds: android.graphics.Rect[] mRects> = $r15;

        i2 = 0;

     label1:
        if i2 >= 4 goto label2;

        $r18 = r0.<android.view.DisplayCutout$Bounds: android.graphics.Rect[] mRects>;

        $r16 = new android.graphics.Rect;

        $r17 = r1[i2];

        specialinvoke $r16.<android.graphics.Rect: void <init>(android.graphics.Rect)>($r17);

        $r18[i2] = $r16;

        i2 = i2 + 1;

        goto label1;

     label2:
        goto label7;

     label3:
        i0 = lengthof r1;

        i3 = 0;

     label4:
        if i3 >= i0 goto label6;

        $r8 = r1[i3];

        if $r8 == null goto label5;

        i3 = i3 + 1;

        goto label4;

     label5:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("rects must have non-null elements: rects=");

        $r11 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>(r1);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = new java.lang.IllegalArgumentException;

        $r14 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r14);

        throw $r13;

     label6:
        r0.<android.view.DisplayCutout$Bounds: android.graphics.Rect[] mRects> = r1;

     label7:
        return;

     label8:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("rects must have exactly 4 elements: rects=");

        $r4 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>(r1);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = new java.lang.IllegalArgumentException;

        $r7 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r6;
    }

    void <init>(android.graphics.Rect[], boolean, android.view.DisplayCutout$1)
    {
        android.view.DisplayCutout$Bounds r0;
        android.graphics.Rect[] r1;
        boolean z0;
        android.view.DisplayCutout$1 r2;

        r0 := @this: android.view.DisplayCutout$Bounds;

        r1 := @parameter0: android.graphics.Rect[];

        z0 := @parameter1: boolean;

        r2 := @parameter2: android.view.DisplayCutout$1;

        specialinvoke r0.<android.view.DisplayCutout$Bounds: void <init>(android.graphics.Rect[],boolean)>(r1, z0);

        return;
    }

    static boolean access$300(android.view.DisplayCutout$Bounds)
    {
        android.view.DisplayCutout$Bounds r0;
        boolean $z0;

        r0 := @parameter0: android.view.DisplayCutout$Bounds;

        $z0 = specialinvoke r0.<android.view.DisplayCutout$Bounds: boolean isEmpty()>();

        return $z0;
    }

    static android.graphics.Rect[] access$400(android.view.DisplayCutout$Bounds)
    {
        android.view.DisplayCutout$Bounds r0;
        android.graphics.Rect[] $r1;

        r0 := @parameter0: android.view.DisplayCutout$Bounds;

        $r1 = specialinvoke r0.<android.view.DisplayCutout$Bounds: android.graphics.Rect[] getRects()>();

        return $r1;
    }

    static android.graphics.Rect access$500(android.view.DisplayCutout$Bounds, int)
    {
        android.view.DisplayCutout$Bounds r0;
        int i0;
        android.graphics.Rect $r1;

        r0 := @parameter0: android.view.DisplayCutout$Bounds;

        i0 := @parameter1: int;

        $r1 = specialinvoke r0.<android.view.DisplayCutout$Bounds: android.graphics.Rect getRect(int)>(i0);

        return $r1;
    }

    private android.graphics.Rect getRect(int)
    {
        android.view.DisplayCutout$Bounds r0;
        int i0;
        android.graphics.Rect $r1, $r3;
        android.graphics.Rect[] $r2;

        r0 := @this: android.view.DisplayCutout$Bounds;

        i0 := @parameter0: int;

        $r1 = new android.graphics.Rect;

        $r2 = r0.<android.view.DisplayCutout$Bounds: android.graphics.Rect[] mRects>;

        $r3 = $r2[i0];

        specialinvoke $r1.<android.graphics.Rect: void <init>(android.graphics.Rect)>($r3);

        return $r1;
    }

    private android.graphics.Rect[] getRects()
    {
        android.view.DisplayCutout$Bounds r0;
        android.graphics.Rect[] r1, $r3;
        android.graphics.Rect $r2, $r4;
        int i0;

        r0 := @this: android.view.DisplayCutout$Bounds;

        r1 = newarray (android.graphics.Rect)[4];

        i0 = 0;

     label1:
        if i0 >= 4 goto label2;

        $r2 = new android.graphics.Rect;

        $r3 = r0.<android.view.DisplayCutout$Bounds: android.graphics.Rect[] mRects>;

        $r4 = $r3[i0];

        specialinvoke $r2.<android.graphics.Rect: void <init>(android.graphics.Rect)>($r4);

        r1[i0] = $r2;

        i0 = i0 + 1;

        goto label1;

     label2:
        return r1;
    }

    private boolean isEmpty()
    {
        android.view.DisplayCutout$Bounds r0;
        android.graphics.Rect[] r1;
        int i0, i1;
        android.graphics.Rect $r2;
        boolean $z0;

        r0 := @this: android.view.DisplayCutout$Bounds;

        r1 = r0.<android.view.DisplayCutout$Bounds: android.graphics.Rect[] mRects>;

        i0 = lengthof r1;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $r2 = r1[i1];

        $z0 = virtualinvoke $r2.<android.graphics.Rect: boolean isEmpty()>();

        if $z0 != 0 goto label2;

        return 0;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return 1;
    }

    public boolean equals(java.lang.Object)
    {
        android.view.DisplayCutout$Bounds r0, r4;
        boolean $z0, $z1;
        android.graphics.Rect[] $r1, $r2;
        java.lang.Object r3;

        r0 := @this: android.view.DisplayCutout$Bounds;

        r3 := @parameter0: java.lang.Object;

        if r3 != r0 goto label1;

        return 1;

     label1:
        $z0 = r3 instanceof android.view.DisplayCutout$Bounds;

        if $z0 == 0 goto label2;

        r4 = (android.view.DisplayCutout$Bounds) r3;

        $r2 = r0.<android.view.DisplayCutout$Bounds: android.graphics.Rect[] mRects>;

        $r1 = r4.<android.view.DisplayCutout$Bounds: android.graphics.Rect[] mRects>;

        $z1 = staticinvoke <java.util.Arrays: boolean deepEquals(java.lang.Object[],java.lang.Object[])>($r2, $r1);

        return $z1;

     label2:
        return 0;
    }

    public int hashCode()
    {
        android.view.DisplayCutout$Bounds r0;
        android.graphics.Rect[] r1;
        int i0, $i1, $i2, i3, i4;
        android.graphics.Rect $r2;

        r0 := @this: android.view.DisplayCutout$Bounds;

        i3 = 0;

        r1 = r0.<android.view.DisplayCutout$Bounds: android.graphics.Rect[] mRects>;

        i0 = lengthof r1;

        i4 = 0;

     label1:
        if i4 >= i0 goto label2;

        $i1 = 48271 * i3;

        $r2 = r1[i4];

        $i2 = virtualinvoke $r2.<android.graphics.Rect: int hashCode()>();

        i3 = $i1 + $i2;

        i4 = i4 + 1;

        goto label1;

     label2:
        return i3;
    }

    public java.lang.String toString()
    {
        android.view.DisplayCutout$Bounds r0;
        java.lang.StringBuilder $r2;
        android.graphics.Rect[] $r4;
        java.lang.String $r5, $r7;

        r0 := @this: android.view.DisplayCutout$Bounds;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bounds=");

        $r4 = r0.<android.view.DisplayCutout$Bounds: android.graphics.Rect[] mRects>;

        $r5 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>($r4);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }
}
