public abstract class android.view.DisplayEventReceiver extends java.lang.Object
{
    public static final int CONFIG_CHANGED_EVENT_DISPATCH;
    public static final int CONFIG_CHANGED_EVENT_SUPPRESS;
    private static final java.lang.String TAG;
    public static final int VSYNC_SOURCE_APP;
    public static final int VSYNC_SOURCE_SURFACE_FLINGER;
    private final dalvik.system.CloseGuard mCloseGuard;
    private android.os.MessageQueue mMessageQueue;
    private long mReceiverPtr;

    public void <init>(android.os.Looper)
    {
        android.view.DisplayEventReceiver r0;
        android.os.Looper r1;

        r0 := @this: android.view.DisplayEventReceiver;

        r1 := @parameter0: android.os.Looper;

        specialinvoke r0.<android.view.DisplayEventReceiver: void <init>(android.os.Looper,int,int)>(r1, 0, 0);

        return;
    }

    public void <init>(android.os.Looper, int, int)
    {
        android.view.DisplayEventReceiver r0;
        android.os.Looper r1;
        int i0, i1;
        dalvik.system.CloseGuard $r2, $r7;
        java.lang.IllegalArgumentException $r3;
        android.os.MessageQueue $r4, $r6;
        java.lang.ref.WeakReference $r5;
        long $l2;

        r0 := @this: android.view.DisplayEventReceiver;

        r1 := @parameter0: android.os.Looper;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = staticinvoke <dalvik.system.CloseGuard: dalvik.system.CloseGuard get()>();

        r0.<android.view.DisplayEventReceiver: dalvik.system.CloseGuard mCloseGuard> = $r2;

        if r1 == null goto label1;

        $r4 = virtualinvoke r1.<android.os.Looper: android.os.MessageQueue getQueue()>();

        r0.<android.view.DisplayEventReceiver: android.os.MessageQueue mMessageQueue> = $r4;

        $r5 = new java.lang.ref.WeakReference;

        specialinvoke $r5.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>(r0);

        $r6 = r0.<android.view.DisplayEventReceiver: android.os.MessageQueue mMessageQueue>;

        $l2 = staticinvoke <android.view.DisplayEventReceiver: long nativeInit(java.lang.ref.WeakReference,android.os.MessageQueue,int,int)>($r5, $r6, i0, i1);

        r0.<android.view.DisplayEventReceiver: long mReceiverPtr> = $l2;

        $r7 = r0.<android.view.DisplayEventReceiver: dalvik.system.CloseGuard mCloseGuard>;

        virtualinvoke $r7.<dalvik.system.CloseGuard: void open(java.lang.String)>("dispose");

        return;

     label1:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("looper must not be null");

        throw $r3;
    }

    private void dispatchConfigChanged(long, long, int)
    {
        android.view.DisplayEventReceiver r0;
        long l0, l1;
        int i2;

        r0 := @this: android.view.DisplayEventReceiver;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        i2 := @parameter2: int;

        virtualinvoke r0.<android.view.DisplayEventReceiver: void onConfigChanged(long,long,int)>(l0, l1, i2);

        return;
    }

    private void dispatchHotplug(long, long, boolean)
    {
        android.view.DisplayEventReceiver r0;
        long l0, l1;
        boolean z0;

        r0 := @this: android.view.DisplayEventReceiver;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        z0 := @parameter2: boolean;

        virtualinvoke r0.<android.view.DisplayEventReceiver: void onHotplug(long,long,boolean)>(l0, l1, z0);

        return;
    }

    private void dispatchVsync(long, long, int)
    {
        android.view.DisplayEventReceiver r0;
        long l0, l1;
        int i2;

        r0 := @this: android.view.DisplayEventReceiver;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        i2 := @parameter2: int;

        virtualinvoke r0.<android.view.DisplayEventReceiver: void onVsync(long,long,int)>(l0, l1, i2);

        return;
    }

    private void dispose(boolean)
    {
        android.view.DisplayEventReceiver r0;
        boolean z0;
        dalvik.system.CloseGuard r1, $r2;
        long l0;
        byte $b1;

        r0 := @this: android.view.DisplayEventReceiver;

        z0 := @parameter0: boolean;

        r1 = r0.<android.view.DisplayEventReceiver: dalvik.system.CloseGuard mCloseGuard>;

        if r1 == null goto label2;

        if z0 == 0 goto label1;

        virtualinvoke r1.<dalvik.system.CloseGuard: void warnIfOpen()>();

     label1:
        $r2 = r0.<android.view.DisplayEventReceiver: dalvik.system.CloseGuard mCloseGuard>;

        virtualinvoke $r2.<dalvik.system.CloseGuard: void close()>();

     label2:
        l0 = r0.<android.view.DisplayEventReceiver: long mReceiverPtr>;

        $b1 = l0 cmp 0L;

        if $b1 == 0 goto label3;

        staticinvoke <android.view.DisplayEventReceiver: void nativeDispose(long)>(l0);

        r0.<android.view.DisplayEventReceiver: long mReceiverPtr> = 0L;

     label3:
        r0.<android.view.DisplayEventReceiver: android.os.MessageQueue mMessageQueue> = null;

        return;
    }

    private static native void nativeDispose(long);

    private static native long nativeInit(java.lang.ref.WeakReference, android.os.MessageQueue, int, int);

    private static native void nativeScheduleVsync(long);

    public void dispose()
    {
        android.view.DisplayEventReceiver r0;

        r0 := @this: android.view.DisplayEventReceiver;

        specialinvoke r0.<android.view.DisplayEventReceiver: void dispose(boolean)>(0);

        return;
    }

    protected void finalize() throws java.lang.Throwable
    {
        android.view.DisplayEventReceiver r0;
        java.lang.Throwable $r2;

        r0 := @this: android.view.DisplayEventReceiver;

     label1:
        specialinvoke r0.<android.view.DisplayEventReceiver: void dispose(boolean)>(1);

     label2:
        specialinvoke r0.<java.lang.Object: void finalize()>();

        return;

     label3:
        $r2 := @caughtexception;

        specialinvoke r0.<java.lang.Object: void finalize()>();

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void onConfigChanged(long, long, int)
    {
        android.view.DisplayEventReceiver r0;
        long l0, l1;
        int i2;

        r0 := @this: android.view.DisplayEventReceiver;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        i2 := @parameter2: int;

        return;
    }

    public void onHotplug(long, long, boolean)
    {
        android.view.DisplayEventReceiver r0;
        long l0, l1;
        boolean z0;

        r0 := @this: android.view.DisplayEventReceiver;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        z0 := @parameter2: boolean;

        return;
    }

    public void onVsync(long, long, int)
    {
        android.view.DisplayEventReceiver r0;
        long l0, l1;
        int i2;

        r0 := @this: android.view.DisplayEventReceiver;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        i2 := @parameter2: int;

        return;
    }

    public void scheduleVsync()
    {
        android.view.DisplayEventReceiver r0;
        long l0;
        byte $b1;

        r0 := @this: android.view.DisplayEventReceiver;

        l0 = r0.<android.view.DisplayEventReceiver: long mReceiverPtr>;

        $b1 = l0 cmp 0L;

        if $b1 != 0 goto label1;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("DisplayEventReceiver", "Attempted to schedule a vertical sync pulse but the display event receiver has already been disposed.");

        goto label2;

     label1:
        staticinvoke <android.view.DisplayEventReceiver: void nativeScheduleVsync(long)>(l0);

     label2:
        return;
    }

    public static void <clinit>()
    {
        <android.view.DisplayEventReceiver: int VSYNC_SOURCE_SURFACE_FLINGER> = 1;

        <android.view.DisplayEventReceiver: int VSYNC_SOURCE_APP> = 0;

        <android.view.DisplayEventReceiver: java.lang.String TAG> = "DisplayEventReceiver";

        <android.view.DisplayEventReceiver: int CONFIG_CHANGED_EVENT_SUPPRESS> = 0;

        <android.view.DisplayEventReceiver: int CONFIG_CHANGED_EVENT_DISPATCH> = 1;

        return;
    }
}
