public final class android.view.DisplayInfo extends java.lang.Object implements android.os.Parcelable
{
    public static final android.os.Parcelable$Creator CREATOR;
    public android.view.DisplayAddress address;
    public int appHeight;
    public long appVsyncOffsetNanos;
    public int appWidth;
    public int colorMode;
    public int defaultModeId;
    public android.hardware.display.DeviceProductInfo deviceProductInfo;
    public android.view.DisplayCutout displayCutout;
    public int displayId;
    public int flags;
    public android.view.Display$HdrCapabilities hdrCapabilities;
    public int largestNominalAppHeight;
    public int largestNominalAppWidth;
    public int layerStack;
    public int logicalDensityDpi;
    public int logicalHeight;
    public int logicalWidth;
    public boolean minimalPostProcessingSupported;
    public int modeId;
    public java.lang.String name;
    public java.lang.String ownerPackageName;
    public int ownerUid;
    public float physicalXDpi;
    public float physicalYDpi;
    public long presentationDeadlineNanos;
    public int removeMode;
    public int rotation;
    public int smallestNominalAppHeight;
    public int smallestNominalAppWidth;
    public int state;
    public int[] supportedColorModes;
    public android.view.Display$Mode[] supportedModes;
    public int type;
    public java.lang.String uniqueId;

    static void <clinit>()
    {
        android.view.DisplayInfo$1 $r0;

        $r0 = new android.view.DisplayInfo$1;

        specialinvoke $r0.<android.view.DisplayInfo$1: void <init>()>();

        <android.view.DisplayInfo: android.os.Parcelable$Creator CREATOR> = $r0;

        return;
    }

    public void <init>()
    {
        android.view.DisplayInfo r0;
        android.view.Display$Mode[] $r1;
        int[] $r2;

        r0 := @this: android.view.DisplayInfo;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = <android.view.Display$Mode: android.view.Display$Mode[] EMPTY_ARRAY>;

        r0.<android.view.DisplayInfo: android.view.Display$Mode[] supportedModes> = $r1;

        $r2 = newarray (int)[1];

        $r2[0] = 0;

        r0.<android.view.DisplayInfo: int[] supportedColorModes> = $r2;

        r0.<android.view.DisplayInfo: int removeMode> = 0;

        return;
    }

    private void <init>(android.os.Parcel)
    {
        android.view.DisplayInfo r0;
        android.os.Parcel r1;
        android.view.Display$Mode[] $r2;
        int[] $r3;

        r0 := @this: android.view.DisplayInfo;

        r1 := @parameter0: android.os.Parcel;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = <android.view.Display$Mode: android.view.Display$Mode[] EMPTY_ARRAY>;

        r0.<android.view.DisplayInfo: android.view.Display$Mode[] supportedModes> = $r2;

        $r3 = newarray (int)[1];

        $r3[0] = 0;

        r0.<android.view.DisplayInfo: int[] supportedColorModes> = $r3;

        r0.<android.view.DisplayInfo: int removeMode> = 0;

        virtualinvoke r0.<android.view.DisplayInfo: void readFromParcel(android.os.Parcel)>(r1);

        return;
    }

    void <init>(android.os.Parcel, android.view.DisplayInfo$1)
    {
        android.view.DisplayInfo r0;
        android.os.Parcel r1;
        android.view.DisplayInfo$1 r2;

        r0 := @this: android.view.DisplayInfo;

        r1 := @parameter0: android.os.Parcel;

        r2 := @parameter1: android.view.DisplayInfo$1;

        specialinvoke r0.<android.view.DisplayInfo: void <init>(android.os.Parcel)>(r1);

        return;
    }

    public void <init>(android.view.DisplayInfo)
    {
        android.view.DisplayInfo r0, r1;
        android.view.Display$Mode[] $r2;
        int[] $r3;

        r0 := @this: android.view.DisplayInfo;

        r1 := @parameter0: android.view.DisplayInfo;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = <android.view.Display$Mode: android.view.Display$Mode[] EMPTY_ARRAY>;

        r0.<android.view.DisplayInfo: android.view.Display$Mode[] supportedModes> = $r2;

        $r3 = newarray (int)[1];

        $r3[0] = 0;

        r0.<android.view.DisplayInfo: int[] supportedColorModes> = $r3;

        r0.<android.view.DisplayInfo: int removeMode> = 0;

        virtualinvoke r0.<android.view.DisplayInfo: void copyFrom(android.view.DisplayInfo)>(r1);

        return;
    }

    private android.view.Display$Mode findMode(int)
    {
        android.view.DisplayInfo r0;
        int i0, $i1, $i2, i3;
        java.lang.StringBuilder $r1;
        java.lang.IllegalStateException $r4;
        java.lang.String $r5;
        android.view.Display$Mode $r6, $r8;
        android.view.Display$Mode[] $r7, r9;

        r0 := @this: android.view.DisplayInfo;

        i0 := @parameter0: int;

        i3 = 0;

     label1:
        r9 = r0.<android.view.DisplayInfo: android.view.Display$Mode[] supportedModes>;

        $i1 = lengthof r9;

        if i3 >= $i1 goto label3;

        $r6 = r9[i3];

        $i2 = virtualinvoke $r6.<android.view.Display$Mode: int getModeId()>();

        if $i2 != i0 goto label2;

        $r7 = r0.<android.view.DisplayInfo: android.view.Display$Mode[] supportedModes>;

        $r8 = $r7[i3];

        return $r8;

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to locate mode ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = new java.lang.IllegalStateException;

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r5);

        throw $r4;
    }

    private static java.lang.String flagsToString(int)
    {
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;

        i0 := @parameter0: int;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $i1 = i0 & 2;

        if $i1 == 0 goto label1;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", FLAG_SECURE");

     label1:
        $i2 = i0 & 1;

        if $i2 == 0 goto label2;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", FLAG_SUPPORTS_PROTECTED_BUFFERS");

     label2:
        $i3 = i0 & 4;

        if $i3 == 0 goto label3;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", FLAG_PRIVATE");

     label3:
        $i4 = i0 & 8;

        if $i4 == 0 goto label4;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", FLAG_PRESENTATION");

     label4:
        $i5 = 1073741824 & i0;

        if $i5 == 0 goto label5;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", FLAG_SCALING_DISABLED");

     label5:
        $i6 = i0 & 16;

        if $i6 == 0 goto label6;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", FLAG_ROUND");

     label6:
        $i7 = i0 & 32;

        if $i7 == 0 goto label7;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", FLAG_CAN_SHOW_WITH_INSECURE_KEYGUARD");

     label7:
        $i8 = i0 & 64;

        if $i8 == 0 goto label8;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", FLAG_SHOULD_SHOW_SYSTEM_DECORATIONS");

     label8:
        $i9 = i0 & 128;

        if $i9 == 0 goto label9;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", FLAG_TRUSTED");

     label9:
        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    private void getMetricsWithSize(android.util.DisplayMetrics, android.content.res.CompatibilityInfo, android.content.res.Configuration, int, int)
    {
        android.view.DisplayInfo r0;
        android.util.DisplayMetrics r1;
        android.content.res.CompatibilityInfo r2, $r3;
        int i0, $i1, i2, i3;
        float $f0, f1, f2, f3, f4;
        boolean $z0;
        android.app.WindowConfiguration $r4;
        android.content.res.Configuration r5;
        android.graphics.Rect r6;

        r0 := @this: android.view.DisplayInfo;

        r1 := @parameter0: android.util.DisplayMetrics;

        r2 := @parameter1: android.content.res.CompatibilityInfo;

        r5 := @parameter2: android.content.res.Configuration;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        i0 = r0.<android.view.DisplayInfo: int logicalDensityDpi>;

        r1.<android.util.DisplayMetrics: int noncompatDensityDpi> = i0;

        r1.<android.util.DisplayMetrics: int densityDpi> = i0;

        $i1 = r0.<android.view.DisplayInfo: int logicalDensityDpi>;

        $f0 = (float) $i1;

        f1 = $f0 * 0.00625F;

        r1.<android.util.DisplayMetrics: float noncompatDensity> = f1;

        r1.<android.util.DisplayMetrics: float density> = f1;

        f2 = r1.<android.util.DisplayMetrics: float density>;

        r1.<android.util.DisplayMetrics: float noncompatScaledDensity> = f2;

        r1.<android.util.DisplayMetrics: float scaledDensity> = f2;

        f3 = r0.<android.view.DisplayInfo: float physicalXDpi>;

        r1.<android.util.DisplayMetrics: float noncompatXdpi> = f3;

        r1.<android.util.DisplayMetrics: float xdpi> = f3;

        f4 = r0.<android.view.DisplayInfo: float physicalYDpi>;

        r1.<android.util.DisplayMetrics: float noncompatYdpi> = f4;

        r1.<android.util.DisplayMetrics: float ydpi> = f4;

        if r5 == null goto label1;

        $r4 = r5.<android.content.res.Configuration: android.app.WindowConfiguration windowConfiguration>;

        r6 = virtualinvoke $r4.<android.app.WindowConfiguration: android.graphics.Rect getAppBounds()>();

        goto label2;

     label1:
        r6 = null;

     label2:
        if r6 == null goto label3;

        i2 = virtualinvoke r6.<android.graphics.Rect: int width()>();

        goto label3;

     label3:
        if r6 == null goto label4;

        i3 = virtualinvoke r6.<android.graphics.Rect: int height()>();

        goto label4;

     label4:
        r1.<android.util.DisplayMetrics: int widthPixels> = i2;

        r1.<android.util.DisplayMetrics: int noncompatWidthPixels> = i2;

        r1.<android.util.DisplayMetrics: int heightPixels> = i3;

        r1.<android.util.DisplayMetrics: int noncompatHeightPixels> = i3;

        $r3 = <android.content.res.CompatibilityInfo: android.content.res.CompatibilityInfo DEFAULT_COMPATIBILITY_INFO>;

        $z0 = virtualinvoke r2.<android.content.res.CompatibilityInfo: boolean equals(java.lang.Object)>($r3);

        if $z0 != 0 goto label5;

        virtualinvoke r2.<android.content.res.CompatibilityInfo: void applyToDisplayMetrics(android.util.DisplayMetrics)>(r1);

     label5:
        return;
    }

    public void copyFrom(android.view.DisplayInfo)
    {
        android.view.DisplayInfo r0, r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i21, $i22, $i23;
        android.view.DisplayAddress $r2;
        android.hardware.display.DeviceProductInfo $r3;
        java.lang.String $r4, $r5, $r11;
        android.view.DisplayCutout $r6;
        java.lang.Object[] $r7;
        android.view.Display$Mode[] $r8, r12;
        int[] $r9, r13;
        android.view.Display$HdrCapabilities $r10;
        boolean $z0;
        float $f0, $f1;
        long $l19, $l20;

        r0 := @this: android.view.DisplayInfo;

        r1 := @parameter0: android.view.DisplayInfo;

        $i0 = r1.<android.view.DisplayInfo: int layerStack>;

        r0.<android.view.DisplayInfo: int layerStack> = $i0;

        $i1 = r1.<android.view.DisplayInfo: int flags>;

        r0.<android.view.DisplayInfo: int flags> = $i1;

        $i2 = r1.<android.view.DisplayInfo: int type>;

        r0.<android.view.DisplayInfo: int type> = $i2;

        $i3 = r1.<android.view.DisplayInfo: int displayId>;

        r0.<android.view.DisplayInfo: int displayId> = $i3;

        $r2 = r1.<android.view.DisplayInfo: android.view.DisplayAddress address>;

        r0.<android.view.DisplayInfo: android.view.DisplayAddress address> = $r2;

        $r3 = r1.<android.view.DisplayInfo: android.hardware.display.DeviceProductInfo deviceProductInfo>;

        r0.<android.view.DisplayInfo: android.hardware.display.DeviceProductInfo deviceProductInfo> = $r3;

        $r4 = r1.<android.view.DisplayInfo: java.lang.String name>;

        r0.<android.view.DisplayInfo: java.lang.String name> = $r4;

        $r5 = r1.<android.view.DisplayInfo: java.lang.String uniqueId>;

        r0.<android.view.DisplayInfo: java.lang.String uniqueId> = $r5;

        $i4 = r1.<android.view.DisplayInfo: int appWidth>;

        r0.<android.view.DisplayInfo: int appWidth> = $i4;

        $i5 = r1.<android.view.DisplayInfo: int appHeight>;

        r0.<android.view.DisplayInfo: int appHeight> = $i5;

        $i6 = r1.<android.view.DisplayInfo: int smallestNominalAppWidth>;

        r0.<android.view.DisplayInfo: int smallestNominalAppWidth> = $i6;

        $i7 = r1.<android.view.DisplayInfo: int smallestNominalAppHeight>;

        r0.<android.view.DisplayInfo: int smallestNominalAppHeight> = $i7;

        $i8 = r1.<android.view.DisplayInfo: int largestNominalAppWidth>;

        r0.<android.view.DisplayInfo: int largestNominalAppWidth> = $i8;

        $i9 = r1.<android.view.DisplayInfo: int largestNominalAppHeight>;

        r0.<android.view.DisplayInfo: int largestNominalAppHeight> = $i9;

        $i10 = r1.<android.view.DisplayInfo: int logicalWidth>;

        r0.<android.view.DisplayInfo: int logicalWidth> = $i10;

        $i11 = r1.<android.view.DisplayInfo: int logicalHeight>;

        r0.<android.view.DisplayInfo: int logicalHeight> = $i11;

        $r6 = r1.<android.view.DisplayInfo: android.view.DisplayCutout displayCutout>;

        r0.<android.view.DisplayInfo: android.view.DisplayCutout displayCutout> = $r6;

        $i12 = r1.<android.view.DisplayInfo: int rotation>;

        r0.<android.view.DisplayInfo: int rotation> = $i12;

        $i13 = r1.<android.view.DisplayInfo: int modeId>;

        r0.<android.view.DisplayInfo: int modeId> = $i13;

        $i14 = r1.<android.view.DisplayInfo: int defaultModeId>;

        r0.<android.view.DisplayInfo: int defaultModeId> = $i14;

        r12 = r1.<android.view.DisplayInfo: android.view.Display$Mode[] supportedModes>;

        $i15 = lengthof r12;

        $r7 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int)>(r12, $i15);

        $r8 = (android.view.Display$Mode[]) $r7;

        r0.<android.view.DisplayInfo: android.view.Display$Mode[] supportedModes> = $r8;

        $i16 = r1.<android.view.DisplayInfo: int colorMode>;

        r0.<android.view.DisplayInfo: int colorMode> = $i16;

        r13 = r1.<android.view.DisplayInfo: int[] supportedColorModes>;

        $i17 = lengthof r13;

        $r9 = staticinvoke <java.util.Arrays: int[] copyOf(int[],int)>(r13, $i17);

        r0.<android.view.DisplayInfo: int[] supportedColorModes> = $r9;

        $r10 = r1.<android.view.DisplayInfo: android.view.Display$HdrCapabilities hdrCapabilities>;

        r0.<android.view.DisplayInfo: android.view.Display$HdrCapabilities hdrCapabilities> = $r10;

        $z0 = r1.<android.view.DisplayInfo: boolean minimalPostProcessingSupported>;

        r0.<android.view.DisplayInfo: boolean minimalPostProcessingSupported> = $z0;

        $i18 = r1.<android.view.DisplayInfo: int logicalDensityDpi>;

        r0.<android.view.DisplayInfo: int logicalDensityDpi> = $i18;

        $f0 = r1.<android.view.DisplayInfo: float physicalXDpi>;

        r0.<android.view.DisplayInfo: float physicalXDpi> = $f0;

        $f1 = r1.<android.view.DisplayInfo: float physicalYDpi>;

        r0.<android.view.DisplayInfo: float physicalYDpi> = $f1;

        $l19 = r1.<android.view.DisplayInfo: long appVsyncOffsetNanos>;

        r0.<android.view.DisplayInfo: long appVsyncOffsetNanos> = $l19;

        $l20 = r1.<android.view.DisplayInfo: long presentationDeadlineNanos>;

        r0.<android.view.DisplayInfo: long presentationDeadlineNanos> = $l20;

        $i21 = r1.<android.view.DisplayInfo: int state>;

        r0.<android.view.DisplayInfo: int state> = $i21;

        $i22 = r1.<android.view.DisplayInfo: int ownerUid>;

        r0.<android.view.DisplayInfo: int ownerUid> = $i22;

        $r11 = r1.<android.view.DisplayInfo: java.lang.String ownerPackageName>;

        r0.<android.view.DisplayInfo: java.lang.String ownerPackageName> = $r11;

        $i23 = r1.<android.view.DisplayInfo: int removeMode>;

        r0.<android.view.DisplayInfo: int removeMode> = $i23;

        return;
    }

    public int describeContents()
    {
        android.view.DisplayInfo r0;

        r0 := @this: android.view.DisplayInfo;

        return 0;
    }

    public void dumpDebug(android.util.proto.ProtoOutputStream, long)
    {
        android.view.DisplayInfo r0;
        android.util.proto.ProtoOutputStream r1;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.String $r2;
        long l5, l6;

        r0 := @this: android.view.DisplayInfo;

        r1 := @parameter0: android.util.proto.ProtoOutputStream;

        l5 := @parameter1: long;

        l6 = virtualinvoke r1.<android.util.proto.ProtoOutputStream: long start(long)>(l5);

        $i0 = r0.<android.view.DisplayInfo: int logicalWidth>;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,int)>(1120986464257L, $i0);

        $i1 = r0.<android.view.DisplayInfo: int logicalHeight>;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,int)>(1120986464258L, $i1);

        $i2 = r0.<android.view.DisplayInfo: int appWidth>;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,int)>(1120986464259L, $i2);

        $i3 = r0.<android.view.DisplayInfo: int appHeight>;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,int)>(1120986464260L, $i3);

        $r2 = r0.<android.view.DisplayInfo: java.lang.String name>;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,java.lang.String)>(1138166333445L, $r2);

        $i4 = r0.<android.view.DisplayInfo: int flags>;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,int)>(1120986464262L, $i4);

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void end(long)>(l6);

        return;
    }

    public boolean equals(android.view.DisplayInfo)
    {
        android.view.DisplayInfo r0, r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i42, $i43, $i44, $i45, $i46, $i47;
        android.view.DisplayAddress $r2, $r3;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, z9;
        android.hardware.display.DeviceProductInfo $r4, $r5;
        java.lang.String $r6, $r7, $r14, $r15;
        android.view.DisplayCutout $r8, $r9;
        int[] $r10, $r11;
        android.view.Display$HdrCapabilities $r12, $r13;
        float $f0, $f1, $f2, $f3;
        byte $b34, $b35, $b38, $b41;
        long $l36, $l37, $l39, $l40;

        r0 := @this: android.view.DisplayInfo;

        r1 := @parameter0: android.view.DisplayInfo;

        if r1 == null goto label1;

        $i1 = r0.<android.view.DisplayInfo: int layerStack>;

        $i0 = r1.<android.view.DisplayInfo: int layerStack>;

        if $i1 != $i0 goto label1;

        $i3 = r0.<android.view.DisplayInfo: int flags>;

        $i2 = r1.<android.view.DisplayInfo: int flags>;

        if $i3 != $i2 goto label1;

        $i5 = r0.<android.view.DisplayInfo: int type>;

        $i4 = r1.<android.view.DisplayInfo: int type>;

        if $i5 != $i4 goto label1;

        $i7 = r0.<android.view.DisplayInfo: int displayId>;

        $i6 = r1.<android.view.DisplayInfo: int displayId>;

        if $i7 != $i6 goto label1;

        $r3 = r0.<android.view.DisplayInfo: android.view.DisplayAddress address>;

        $r2 = r1.<android.view.DisplayInfo: android.view.DisplayAddress address>;

        $z0 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r3, $r2);

        if $z0 == 0 goto label1;

        $r5 = r0.<android.view.DisplayInfo: android.hardware.display.DeviceProductInfo deviceProductInfo>;

        $r4 = r1.<android.view.DisplayInfo: android.hardware.display.DeviceProductInfo deviceProductInfo>;

        $z1 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r5, $r4);

        if $z1 == 0 goto label1;

        $r7 = r0.<android.view.DisplayInfo: java.lang.String uniqueId>;

        $r6 = r1.<android.view.DisplayInfo: java.lang.String uniqueId>;

        $z2 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r7, $r6);

        if $z2 == 0 goto label1;

        $i9 = r0.<android.view.DisplayInfo: int appWidth>;

        $i8 = r1.<android.view.DisplayInfo: int appWidth>;

        if $i9 != $i8 goto label1;

        $i11 = r0.<android.view.DisplayInfo: int appHeight>;

        $i10 = r1.<android.view.DisplayInfo: int appHeight>;

        if $i11 != $i10 goto label1;

        $i13 = r0.<android.view.DisplayInfo: int smallestNominalAppWidth>;

        $i12 = r1.<android.view.DisplayInfo: int smallestNominalAppWidth>;

        if $i13 != $i12 goto label1;

        $i15 = r0.<android.view.DisplayInfo: int smallestNominalAppHeight>;

        $i14 = r1.<android.view.DisplayInfo: int smallestNominalAppHeight>;

        if $i15 != $i14 goto label1;

        $i17 = r0.<android.view.DisplayInfo: int largestNominalAppWidth>;

        $i16 = r1.<android.view.DisplayInfo: int largestNominalAppWidth>;

        if $i17 != $i16 goto label1;

        $i19 = r0.<android.view.DisplayInfo: int largestNominalAppHeight>;

        $i18 = r1.<android.view.DisplayInfo: int largestNominalAppHeight>;

        if $i19 != $i18 goto label1;

        $i21 = r0.<android.view.DisplayInfo: int logicalWidth>;

        $i20 = r1.<android.view.DisplayInfo: int logicalWidth>;

        if $i21 != $i20 goto label1;

        $i23 = r0.<android.view.DisplayInfo: int logicalHeight>;

        $i22 = r1.<android.view.DisplayInfo: int logicalHeight>;

        if $i23 != $i22 goto label1;

        $r9 = r0.<android.view.DisplayInfo: android.view.DisplayCutout displayCutout>;

        $r8 = r1.<android.view.DisplayInfo: android.view.DisplayCutout displayCutout>;

        $z3 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r9, $r8);

        if $z3 == 0 goto label1;

        $i25 = r0.<android.view.DisplayInfo: int rotation>;

        $i24 = r1.<android.view.DisplayInfo: int rotation>;

        if $i25 != $i24 goto label1;

        $i27 = r0.<android.view.DisplayInfo: int modeId>;

        $i26 = r1.<android.view.DisplayInfo: int modeId>;

        if $i27 != $i26 goto label1;

        $i29 = r0.<android.view.DisplayInfo: int defaultModeId>;

        $i28 = r1.<android.view.DisplayInfo: int defaultModeId>;

        if $i29 != $i28 goto label1;

        $i31 = r0.<android.view.DisplayInfo: int colorMode>;

        $i30 = r1.<android.view.DisplayInfo: int colorMode>;

        if $i31 != $i30 goto label1;

        $r11 = r0.<android.view.DisplayInfo: int[] supportedColorModes>;

        $r10 = r1.<android.view.DisplayInfo: int[] supportedColorModes>;

        $z4 = staticinvoke <java.util.Arrays: boolean equals(int[],int[])>($r11, $r10);

        if $z4 == 0 goto label1;

        $r13 = r0.<android.view.DisplayInfo: android.view.Display$HdrCapabilities hdrCapabilities>;

        $r12 = r1.<android.view.DisplayInfo: android.view.Display$HdrCapabilities hdrCapabilities>;

        $z5 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r13, $r12);

        if $z5 == 0 goto label1;

        $z7 = r0.<android.view.DisplayInfo: boolean minimalPostProcessingSupported>;

        $z6 = r1.<android.view.DisplayInfo: boolean minimalPostProcessingSupported>;

        if $z7 != $z6 goto label1;

        $i33 = r0.<android.view.DisplayInfo: int logicalDensityDpi>;

        $i32 = r1.<android.view.DisplayInfo: int logicalDensityDpi>;

        if $i33 != $i32 goto label1;

        $f1 = r0.<android.view.DisplayInfo: float physicalXDpi>;

        $f0 = r1.<android.view.DisplayInfo: float physicalXDpi>;

        $b34 = $f1 cmpl $f0;

        if $b34 != 0 goto label1;

        $f3 = r0.<android.view.DisplayInfo: float physicalYDpi>;

        $f2 = r1.<android.view.DisplayInfo: float physicalYDpi>;

        $b35 = $f3 cmpl $f2;

        if $b35 != 0 goto label1;

        $l37 = r0.<android.view.DisplayInfo: long appVsyncOffsetNanos>;

        $l36 = r1.<android.view.DisplayInfo: long appVsyncOffsetNanos>;

        $b38 = $l37 cmp $l36;

        if $b38 != 0 goto label1;

        $l40 = r0.<android.view.DisplayInfo: long presentationDeadlineNanos>;

        $l39 = r1.<android.view.DisplayInfo: long presentationDeadlineNanos>;

        $b41 = $l40 cmp $l39;

        if $b41 != 0 goto label1;

        $i43 = r0.<android.view.DisplayInfo: int state>;

        $i42 = r1.<android.view.DisplayInfo: int state>;

        if $i43 != $i42 goto label1;

        $i45 = r0.<android.view.DisplayInfo: int ownerUid>;

        $i44 = r1.<android.view.DisplayInfo: int ownerUid>;

        if $i45 != $i44 goto label1;

        $r15 = r0.<android.view.DisplayInfo: java.lang.String ownerPackageName>;

        $r14 = r1.<android.view.DisplayInfo: java.lang.String ownerPackageName>;

        $z8 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r15, $r14);

        if $z8 == 0 goto label1;

        $i47 = r0.<android.view.DisplayInfo: int removeMode>;

        $i46 = r1.<android.view.DisplayInfo: int removeMode>;

        if $i47 != $i46 goto label1;

        z9 = 1;

        goto label2;

     label1:
        z9 = 0;

     label2:
        return z9;
    }

    public boolean equals(java.lang.Object)
    {
        android.view.DisplayInfo r0, $r2;
        java.lang.Object r1;
        boolean $z0, $z1, z2;

        r0 := @this: android.view.DisplayInfo;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof android.view.DisplayInfo;

        if $z0 == 0 goto label1;

        $r2 = (android.view.DisplayInfo) r1;

        $z1 = virtualinvoke r0.<android.view.DisplayInfo: boolean equals(android.view.DisplayInfo)>($r2);

        if $z1 == 0 goto label1;

        z2 = 1;

        goto label2;

     label1:
        z2 = 0;

     label2:
        return z2;
    }

    public int findDefaultModeByRefreshRate(float)
    {
        android.view.DisplayInfo r0;
        float f0;
        android.view.Display$Mode[] r1;
        android.view.Display$Mode r2, $r3, $r4;
        int $i0, $i1, $i2, $i3, i4;
        boolean $z0;

        r0 := @this: android.view.DisplayInfo;

        f0 := @parameter0: float;

        r1 = r0.<android.view.DisplayInfo: android.view.Display$Mode[] supportedModes>;

        r2 = virtualinvoke r0.<android.view.DisplayInfo: android.view.Display$Mode getDefaultMode()>();

        i4 = 0;

     label1:
        $i0 = lengthof r1;

        if i4 >= $i0 goto label3;

        $r3 = r1[i4];

        $i1 = virtualinvoke r2.<android.view.Display$Mode: int getPhysicalWidth()>();

        $i2 = virtualinvoke r2.<android.view.Display$Mode: int getPhysicalHeight()>();

        $z0 = virtualinvoke $r3.<android.view.Display$Mode: boolean matches(int,int,float)>($i1, $i2, f0);

        if $z0 == 0 goto label2;

        $r4 = r1[i4];

        $i3 = virtualinvoke $r4.<android.view.Display$Mode: int getModeId()>();

        return $i3;

     label2:
        i4 = i4 + 1;

        goto label1;

     label3:
        return 0;
    }

    public void getAppMetrics(android.util.DisplayMetrics)
    {
        android.view.DisplayInfo r0;
        android.util.DisplayMetrics r1;
        android.content.res.CompatibilityInfo $r2;

        r0 := @this: android.view.DisplayInfo;

        r1 := @parameter0: android.util.DisplayMetrics;

        $r2 = <android.content.res.CompatibilityInfo: android.content.res.CompatibilityInfo DEFAULT_COMPATIBILITY_INFO>;

        virtualinvoke r0.<android.view.DisplayInfo: void getAppMetrics(android.util.DisplayMetrics,android.content.res.CompatibilityInfo,android.content.res.Configuration)>(r1, $r2, null);

        return;
    }

    public void getAppMetrics(android.util.DisplayMetrics, android.content.res.CompatibilityInfo, android.content.res.Configuration)
    {
        android.view.DisplayInfo r0;
        android.util.DisplayMetrics r1;
        android.content.res.CompatibilityInfo r2;
        android.content.res.Configuration r3;
        int $i0, $i1;

        r0 := @this: android.view.DisplayInfo;

        r1 := @parameter0: android.util.DisplayMetrics;

        r2 := @parameter1: android.content.res.CompatibilityInfo;

        r3 := @parameter2: android.content.res.Configuration;

        $i1 = r0.<android.view.DisplayInfo: int appWidth>;

        $i0 = r0.<android.view.DisplayInfo: int appHeight>;

        specialinvoke r0.<android.view.DisplayInfo: void getMetricsWithSize(android.util.DisplayMetrics,android.content.res.CompatibilityInfo,android.content.res.Configuration,int,int)>(r1, r2, r3, $i1, $i0);

        return;
    }

    public void getAppMetrics(android.util.DisplayMetrics, android.view.DisplayAdjustments)
    {
        android.view.DisplayInfo r0;
        android.util.DisplayMetrics r1;
        android.view.DisplayAdjustments r2;
        android.content.res.CompatibilityInfo $r3;
        android.content.res.Configuration $r4;
        int $i0, $i1;

        r0 := @this: android.view.DisplayInfo;

        r1 := @parameter0: android.util.DisplayMetrics;

        r2 := @parameter1: android.view.DisplayAdjustments;

        $r3 = virtualinvoke r2.<android.view.DisplayAdjustments: android.content.res.CompatibilityInfo getCompatibilityInfo()>();

        $r4 = virtualinvoke r2.<android.view.DisplayAdjustments: android.content.res.Configuration getConfiguration()>();

        $i1 = r0.<android.view.DisplayInfo: int appWidth>;

        $i0 = r0.<android.view.DisplayInfo: int appHeight>;

        specialinvoke r0.<android.view.DisplayInfo: void getMetricsWithSize(android.util.DisplayMetrics,android.content.res.CompatibilityInfo,android.content.res.Configuration,int,int)>(r1, $r3, $r4, $i1, $i0);

        return;
    }

    public android.view.Display$Mode getDefaultMode()
    {
        android.view.DisplayInfo r0;
        int $i0;
        android.view.Display$Mode $r1;

        r0 := @this: android.view.DisplayInfo;

        $i0 = r0.<android.view.DisplayInfo: int defaultModeId>;

        $r1 = specialinvoke r0.<android.view.DisplayInfo: android.view.Display$Mode findMode(int)>($i0);

        return $r1;
    }

    public float[] getDefaultRefreshRates()
    {
        android.view.DisplayInfo r0;
        android.view.Display$Mode[] r1;
        android.view.Display$Mode r2, r8;
        android.util.ArraySet $r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, i7;
        boolean $z0;
        java.lang.Object $r4;
        java.lang.Float $r5, $r6;
        float $f0, $f1;
        float[] r9;
        java.util.Iterator r10;

        r0 := @this: android.view.DisplayInfo;

        r1 = r0.<android.view.DisplayInfo: android.view.Display$Mode[] supportedModes>;

        $r3 = new android.util.ArraySet;

        specialinvoke $r3.<android.util.ArraySet: void <init>()>();

        r2 = virtualinvoke r0.<android.view.DisplayInfo: android.view.Display$Mode getDefaultMode()>();

        i6 = 0;

     label1:
        $i0 = lengthof r1;

        if i6 >= $i0 goto label3;

        r8 = r1[i6];

        $i2 = virtualinvoke r8.<android.view.Display$Mode: int getPhysicalWidth()>();

        $i3 = virtualinvoke r2.<android.view.Display$Mode: int getPhysicalWidth()>();

        if $i2 != $i3 goto label2;

        $i4 = virtualinvoke r8.<android.view.Display$Mode: int getPhysicalHeight()>();

        $i5 = virtualinvoke r2.<android.view.Display$Mode: int getPhysicalHeight()>();

        if $i4 != $i5 goto label2;

        $f1 = virtualinvoke r8.<android.view.Display$Mode: float getRefreshRate()>();

        $r6 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f1);

        virtualinvoke $r3.<android.util.ArraySet: boolean add(java.lang.Object)>($r6);

     label2:
        i6 = i6 + 1;

        goto label1;

     label3:
        $i1 = virtualinvoke $r3.<android.util.ArraySet: int size()>();

        r9 = newarray (float)[$i1];

        i7 = 0;

        r10 = virtualinvoke $r3.<android.util.ArraySet: java.util.Iterator iterator()>();

     label4:
        $z0 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r4 = interfaceinvoke r10.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (java.lang.Float) $r4;

        $f0 = virtualinvoke $r5.<java.lang.Float: float floatValue()>();

        r9[i7] = $f0;

        i7 = i7 + 1;

        goto label4;

     label5:
        return r9;
    }

    public void getLogicalMetrics(android.util.DisplayMetrics, android.content.res.CompatibilityInfo, android.content.res.Configuration)
    {
        android.view.DisplayInfo r0;
        android.util.DisplayMetrics r1;
        android.content.res.CompatibilityInfo r2;
        android.content.res.Configuration r3;
        int $i0, $i1;

        r0 := @this: android.view.DisplayInfo;

        r1 := @parameter0: android.util.DisplayMetrics;

        r2 := @parameter1: android.content.res.CompatibilityInfo;

        r3 := @parameter2: android.content.res.Configuration;

        $i1 = r0.<android.view.DisplayInfo: int logicalWidth>;

        $i0 = r0.<android.view.DisplayInfo: int logicalHeight>;

        specialinvoke r0.<android.view.DisplayInfo: void getMetricsWithSize(android.util.DisplayMetrics,android.content.res.CompatibilityInfo,android.content.res.Configuration,int,int)>(r1, r2, r3, $i1, $i0);

        return;
    }

    public android.view.Display$Mode getMode()
    {
        android.view.DisplayInfo r0;
        int $i0;
        android.view.Display$Mode $r1;

        r0 := @this: android.view.DisplayInfo;

        $i0 = r0.<android.view.DisplayInfo: int modeId>;

        $r1 = specialinvoke r0.<android.view.DisplayInfo: android.view.Display$Mode findMode(int)>($i0);

        return $r1;
    }

    public int getNaturalHeight()
    {
        android.view.DisplayInfo r0;
        int i0, i1;

        r0 := @this: android.view.DisplayInfo;

        i0 = r0.<android.view.DisplayInfo: int rotation>;

        if i0 == 0 goto label2;

        if i0 != 2 goto label1;

        goto label2;

     label1:
        i1 = r0.<android.view.DisplayInfo: int logicalWidth>;

        goto label3;

     label2:
        i1 = r0.<android.view.DisplayInfo: int logicalHeight>;

     label3:
        return i1;
    }

    public int getNaturalWidth()
    {
        android.view.DisplayInfo r0;
        int i0, i1;

        r0 := @this: android.view.DisplayInfo;

        i0 = r0.<android.view.DisplayInfo: int rotation>;

        if i0 == 0 goto label2;

        if i0 != 2 goto label1;

        goto label2;

     label1:
        i1 = r0.<android.view.DisplayInfo: int logicalHeight>;

        goto label3;

     label2:
        i1 = r0.<android.view.DisplayInfo: int logicalWidth>;

     label3:
        return i1;
    }

    public boolean hasAccess(int)
    {
        android.view.DisplayInfo r0;
        int i0, $i1, $i2, $i3;
        boolean $z0;

        r0 := @this: android.view.DisplayInfo;

        i0 := @parameter0: int;

        $i3 = r0.<android.view.DisplayInfo: int flags>;

        $i2 = r0.<android.view.DisplayInfo: int ownerUid>;

        $i1 = r0.<android.view.DisplayInfo: int displayId>;

        $z0 = staticinvoke <android.view.Display: boolean hasAccess(int,int,int,int)>(i0, $i3, $i2, $i1);

        return $z0;
    }

    public int hashCode()
    {
        android.view.DisplayInfo r0;

        r0 := @this: android.view.DisplayInfo;

        return 0;
    }

    public boolean isHdr()
    {
        android.view.DisplayInfo r0;
        int $i0;
        android.view.Display$HdrCapabilities r1;
        int[] r2;
        boolean z0;

        r0 := @this: android.view.DisplayInfo;

        r1 = r0.<android.view.DisplayInfo: android.view.Display$HdrCapabilities hdrCapabilities>;

        if r1 == null goto label1;

        r2 = virtualinvoke r1.<android.view.Display$HdrCapabilities: int[] getSupportedHdrTypes()>();

        goto label2;

     label1:
        r2 = null;

     label2:
        if r2 == null goto label3;

        $i0 = lengthof r2;

        if $i0 <= 0 goto label3;

        z0 = 1;

        goto label4;

     label3:
        z0 = 0;

     label4:
        return z0;
    }

    public boolean isWideColorGamut()
    {
        android.view.DisplayInfo r0;
        int[] r1;
        int i0, i1, i2;

        r0 := @this: android.view.DisplayInfo;

        r1 = r0.<android.view.DisplayInfo: int[] supportedColorModes>;

        i0 = lengthof r1;

        i2 = 0;

     label1:
        if i2 >= i0 goto label4;

        i1 = r1[i2];

        if i1 == 6 goto label3;

        if i1 <= 7 goto label2;

        goto label3;

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        return 1;

     label4:
        return 0;
    }

    public void readFromParcel(android.os.Parcel)
    {
        android.view.DisplayInfo r0;
        android.os.Parcel r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i19, $i20, $i21, $i22, i23, i24, i25, i26;
        android.os.Parcelable $r2, $r4, $r10;
        android.view.DisplayAddress $r3;
        android.hardware.display.DeviceProductInfo $r5;
        java.lang.String $r6, $r12, $r13;
        android.view.DisplayCutout $r7;
        android.view.Display$Mode[] $r8, $r16;
        int[] $r9, $r14;
        android.view.Display$HdrCapabilities $r11;
        boolean $z0;
        float $f0, $f1;
        long $l17, $l18;
        android.os.Parcelable$Creator $r15;
        java.lang.Object $r17;
        android.view.Display$Mode $r18;

        r0 := @this: android.view.DisplayInfo;

        r1 := @parameter0: android.os.Parcel;

        $i0 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.view.DisplayInfo: int layerStack> = $i0;

        $i1 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.view.DisplayInfo: int flags> = $i1;

        $i2 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.view.DisplayInfo: int type> = $i2;

        $i3 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.view.DisplayInfo: int displayId> = $i3;

        $r2 = virtualinvoke r1.<android.os.Parcel: android.os.Parcelable readParcelable(java.lang.ClassLoader)>(null);

        $r3 = (android.view.DisplayAddress) $r2;

        r0.<android.view.DisplayInfo: android.view.DisplayAddress address> = $r3;

        $r4 = virtualinvoke r1.<android.os.Parcel: android.os.Parcelable readParcelable(java.lang.ClassLoader)>(null);

        $r5 = (android.hardware.display.DeviceProductInfo) $r4;

        r0.<android.view.DisplayInfo: android.hardware.display.DeviceProductInfo deviceProductInfo> = $r5;

        $r6 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString8()>();

        r0.<android.view.DisplayInfo: java.lang.String name> = $r6;

        $i4 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.view.DisplayInfo: int appWidth> = $i4;

        $i5 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.view.DisplayInfo: int appHeight> = $i5;

        $i6 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.view.DisplayInfo: int smallestNominalAppWidth> = $i6;

        $i7 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.view.DisplayInfo: int smallestNominalAppHeight> = $i7;

        $i8 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.view.DisplayInfo: int largestNominalAppWidth> = $i8;

        $i9 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.view.DisplayInfo: int largestNominalAppHeight> = $i9;

        $i10 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.view.DisplayInfo: int logicalWidth> = $i10;

        $i11 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.view.DisplayInfo: int logicalHeight> = $i11;

        $r7 = staticinvoke <android.view.DisplayCutout$ParcelableWrapper: android.view.DisplayCutout readCutoutFromParcel(android.os.Parcel)>(r1);

        r0.<android.view.DisplayInfo: android.view.DisplayCutout displayCutout> = $r7;

        $i12 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.view.DisplayInfo: int rotation> = $i12;

        $i13 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.view.DisplayInfo: int modeId> = $i13;

        $i14 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.view.DisplayInfo: int defaultModeId> = $i14;

        i23 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $r8 = newarray (android.view.Display$Mode)[i23];

        r0.<android.view.DisplayInfo: android.view.Display$Mode[] supportedModes> = $r8;

        i24 = 0;

     label1:
        if i24 >= i23 goto label2;

        $r16 = r0.<android.view.DisplayInfo: android.view.Display$Mode[] supportedModes>;

        $r15 = <android.view.Display$Mode: android.os.Parcelable$Creator CREATOR>;

        $r17 = interfaceinvoke $r15.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r1);

        $r18 = (android.view.Display$Mode) $r17;

        $r16[i24] = $r18;

        i24 = i24 + 1;

        goto label1;

     label2:
        $i15 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.view.DisplayInfo: int colorMode> = $i15;

        i25 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $r9 = newarray (int)[i25];

        r0.<android.view.DisplayInfo: int[] supportedColorModes> = $r9;

        i26 = 0;

     label3:
        if i26 >= i25 goto label4;

        $r14 = r0.<android.view.DisplayInfo: int[] supportedColorModes>;

        $i22 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $r14[i26] = $i22;

        i26 = i26 + 1;

        goto label3;

     label4:
        $r10 = virtualinvoke r1.<android.os.Parcel: android.os.Parcelable readParcelable(java.lang.ClassLoader)>(null);

        $r11 = (android.view.Display$HdrCapabilities) $r10;

        r0.<android.view.DisplayInfo: android.view.Display$HdrCapabilities hdrCapabilities> = $r11;

        $z0 = virtualinvoke r1.<android.os.Parcel: boolean readBoolean()>();

        r0.<android.view.DisplayInfo: boolean minimalPostProcessingSupported> = $z0;

        $i16 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.view.DisplayInfo: int logicalDensityDpi> = $i16;

        $f0 = virtualinvoke r1.<android.os.Parcel: float readFloat()>();

        r0.<android.view.DisplayInfo: float physicalXDpi> = $f0;

        $f1 = virtualinvoke r1.<android.os.Parcel: float readFloat()>();

        r0.<android.view.DisplayInfo: float physicalYDpi> = $f1;

        $l17 = virtualinvoke r1.<android.os.Parcel: long readLong()>();

        r0.<android.view.DisplayInfo: long appVsyncOffsetNanos> = $l17;

        $l18 = virtualinvoke r1.<android.os.Parcel: long readLong()>();

        r0.<android.view.DisplayInfo: long presentationDeadlineNanos> = $l18;

        $i19 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.view.DisplayInfo: int state> = $i19;

        $i20 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.view.DisplayInfo: int ownerUid> = $i20;

        $r12 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString8()>();

        r0.<android.view.DisplayInfo: java.lang.String ownerPackageName> = $r12;

        $r13 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString8()>();

        r0.<android.view.DisplayInfo: java.lang.String uniqueId> = $r13;

        $i21 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.view.DisplayInfo: int removeMode> = $i21;

        return;
    }

    public java.lang.String toString()
    {
        android.view.DisplayInfo r0;
        java.lang.StringBuilder $r2;
        java.lang.String $r4, $r8, $r32, $r42, $r45, $r48, $r66, $r73, $r81, $r86, $r87;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23;
        long $l8, $l9;
        android.view.Display$Mode[] $r31;
        android.view.Display$HdrCapabilities $r35;
        boolean $z0;
        float $f0, $f1;
        int[] $r65;
        android.view.DisplayAddress $r68, $r83;
        android.hardware.display.DeviceProductInfo $r70;

        r0 := @this: android.view.DisplayInfo;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DisplayInfo{\"");

        $r4 = r0.<android.view.DisplayInfo: java.lang.String name>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\", displayId ");

        $i0 = r0.<android.view.DisplayInfo: int displayId>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $i1 = r0.<android.view.DisplayInfo: int flags>;

        $r8 = staticinvoke <android.view.DisplayInfo: java.lang.String flagsToString(int)>($i1);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", real ");

        $i2 = r0.<android.view.DisplayInfo: int logicalWidth>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" x ");

        $i3 = r0.<android.view.DisplayInfo: int logicalHeight>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", largest app ");

        $i4 = r0.<android.view.DisplayInfo: int largestNominalAppWidth>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" x ");

        $i5 = r0.<android.view.DisplayInfo: int largestNominalAppHeight>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", smallest app ");

        $i6 = r0.<android.view.DisplayInfo: int smallestNominalAppWidth>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" x ");

        $i7 = r0.<android.view.DisplayInfo: int smallestNominalAppHeight>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", appVsyncOff ");

        $l8 = r0.<android.view.DisplayInfo: long appVsyncOffsetNanos>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l8);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", presDeadline ");

        $l9 = r0.<android.view.DisplayInfo: long presentationDeadlineNanos>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l9);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mode ");

        $i10 = r0.<android.view.DisplayInfo: int modeId>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i10);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", defaultMode ");

        $i11 = r0.<android.view.DisplayInfo: int defaultModeId>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i11);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", modes ");

        $r31 = r0.<android.view.DisplayInfo: android.view.Display$Mode[] supportedModes>;

        $r32 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>($r31);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", hdrCapabilities ");

        $r35 = r0.<android.view.DisplayInfo: android.view.Display$HdrCapabilities hdrCapabilities>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r35);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", minimalPostProcessingSupported ");

        $z0 = r0.<android.view.DisplayInfo: boolean minimalPostProcessingSupported>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", rotation ");

        $i12 = r0.<android.view.DisplayInfo: int rotation>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i12);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", state ");

        $i13 = r0.<android.view.DisplayInfo: int state>;

        $r42 = staticinvoke <android.view.Display: java.lang.String stateToString(int)>($i13);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r42);

        $i14 = staticinvoke <android.os.Process: int myUid()>();

        if $i14 == 1000 goto label1;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r86 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r86;

     label1:
        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", type ");

        $i15 = r0.<android.view.DisplayInfo: int type>;

        $r45 = staticinvoke <android.view.Display: java.lang.String typeToString(int)>($i15);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r45);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uniqueId \"");

        $r48 = r0.<android.view.DisplayInfo: java.lang.String uniqueId>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r48);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\", app ");

        $i16 = r0.<android.view.DisplayInfo: int appWidth>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i16);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" x ");

        $i17 = r0.<android.view.DisplayInfo: int appHeight>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i17);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", density ");

        $i18 = r0.<android.view.DisplayInfo: int logicalDensityDpi>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i18);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $f0 = r0.<android.view.DisplayInfo: float physicalXDpi>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" x ");

        $f1 = r0.<android.view.DisplayInfo: float physicalYDpi>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f1);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") dpi, layerStack ");

        $i19 = r0.<android.view.DisplayInfo: int layerStack>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i19);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", colorMode ");

        $i20 = r0.<android.view.DisplayInfo: int colorMode>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i20);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", supportedColorModes ");

        $r65 = r0.<android.view.DisplayInfo: int[] supportedColorModes>;

        $r66 = staticinvoke <java.util.Arrays: java.lang.String toString(int[])>($r65);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r66);

        $r68 = r0.<android.view.DisplayInfo: android.view.DisplayAddress address>;

        if $r68 == null goto label2;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", address ");

        $r83 = r0.<android.view.DisplayInfo: android.view.DisplayAddress address>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r83);

     label2:
        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", deviceProductInfo ");

        $r70 = r0.<android.view.DisplayInfo: android.hardware.display.DeviceProductInfo deviceProductInfo>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r70);

        $i21 = r0.<android.view.DisplayInfo: int ownerUid>;

        if $i21 != 0 goto label3;

        $r81 = r0.<android.view.DisplayInfo: java.lang.String ownerPackageName>;

        if $r81 == null goto label4;

     label3:
        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", owner ");

        $r73 = r0.<android.view.DisplayInfo: java.lang.String ownerPackageName>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r73);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (uid ");

        $i22 = r0.<android.view.DisplayInfo: int ownerUid>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i22);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

     label4:
        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", removeMode ");

        $i23 = r0.<android.view.DisplayInfo: int removeMode>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i23);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r87 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r87;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.view.DisplayInfo r0;
        android.os.Parcel r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i24, $i25, $i26, $i27, i28, i29;
        android.view.DisplayAddress $r2;
        android.hardware.display.DeviceProductInfo $r3;
        java.lang.String $r4, $r9, $r10;
        android.view.DisplayCutout $r5;
        android.view.Display$Mode[] $r6, r12;
        int[] $r7, r13;
        android.view.Display$HdrCapabilities $r8;
        boolean $z0;
        float $f0, $f1;
        long $l22, $l23;
        android.view.Display$Mode $r11;

        r0 := @this: android.view.DisplayInfo;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        $i1 = r0.<android.view.DisplayInfo: int layerStack>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i1);

        $i2 = r0.<android.view.DisplayInfo: int flags>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i2);

        $i3 = r0.<android.view.DisplayInfo: int type>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i3);

        $i4 = r0.<android.view.DisplayInfo: int displayId>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i4);

        $r2 = r0.<android.view.DisplayInfo: android.view.DisplayAddress address>;

        virtualinvoke r1.<android.os.Parcel: void writeParcelable(android.os.Parcelable,int)>($r2, i0);

        $r3 = r0.<android.view.DisplayInfo: android.hardware.display.DeviceProductInfo deviceProductInfo>;

        virtualinvoke r1.<android.os.Parcel: void writeParcelable(android.os.Parcelable,int)>($r3, i0);

        $r4 = r0.<android.view.DisplayInfo: java.lang.String name>;

        virtualinvoke r1.<android.os.Parcel: void writeString8(java.lang.String)>($r4);

        $i5 = r0.<android.view.DisplayInfo: int appWidth>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i5);

        $i6 = r0.<android.view.DisplayInfo: int appHeight>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i6);

        $i7 = r0.<android.view.DisplayInfo: int smallestNominalAppWidth>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i7);

        $i8 = r0.<android.view.DisplayInfo: int smallestNominalAppHeight>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i8);

        $i9 = r0.<android.view.DisplayInfo: int largestNominalAppWidth>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i9);

        $i10 = r0.<android.view.DisplayInfo: int largestNominalAppHeight>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i10);

        $i11 = r0.<android.view.DisplayInfo: int logicalWidth>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i11);

        $i12 = r0.<android.view.DisplayInfo: int logicalHeight>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i12);

        $r5 = r0.<android.view.DisplayInfo: android.view.DisplayCutout displayCutout>;

        staticinvoke <android.view.DisplayCutout$ParcelableWrapper: void writeCutoutToParcel(android.view.DisplayCutout,android.os.Parcel,int)>($r5, r1, i0);

        $i13 = r0.<android.view.DisplayInfo: int rotation>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i13);

        $i14 = r0.<android.view.DisplayInfo: int modeId>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i14);

        $i15 = r0.<android.view.DisplayInfo: int defaultModeId>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i15);

        $r6 = r0.<android.view.DisplayInfo: android.view.Display$Mode[] supportedModes>;

        $i16 = lengthof $r6;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i16);

        i28 = 0;

     label1:
        r12 = r0.<android.view.DisplayInfo: android.view.Display$Mode[] supportedModes>;

        $i17 = lengthof r12;

        if i28 >= $i17 goto label2;

        $r11 = r12[i28];

        virtualinvoke $r11.<android.view.Display$Mode: void writeToParcel(android.os.Parcel,int)>(r1, i0);

        i28 = i28 + 1;

        goto label1;

     label2:
        $i18 = r0.<android.view.DisplayInfo: int colorMode>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i18);

        $r7 = r0.<android.view.DisplayInfo: int[] supportedColorModes>;

        $i19 = lengthof $r7;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i19);

        i29 = 0;

     label3:
        r13 = r0.<android.view.DisplayInfo: int[] supportedColorModes>;

        $i20 = lengthof r13;

        if i29 >= $i20 goto label4;

        $i27 = r13[i29];

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i27);

        i29 = i29 + 1;

        goto label3;

     label4:
        $r8 = r0.<android.view.DisplayInfo: android.view.Display$HdrCapabilities hdrCapabilities>;

        virtualinvoke r1.<android.os.Parcel: void writeParcelable(android.os.Parcelable,int)>($r8, i0);

        $z0 = r0.<android.view.DisplayInfo: boolean minimalPostProcessingSupported>;

        virtualinvoke r1.<android.os.Parcel: void writeBoolean(boolean)>($z0);

        $i21 = r0.<android.view.DisplayInfo: int logicalDensityDpi>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i21);

        $f0 = r0.<android.view.DisplayInfo: float physicalXDpi>;

        virtualinvoke r1.<android.os.Parcel: void writeFloat(float)>($f0);

        $f1 = r0.<android.view.DisplayInfo: float physicalYDpi>;

        virtualinvoke r1.<android.os.Parcel: void writeFloat(float)>($f1);

        $l22 = r0.<android.view.DisplayInfo: long appVsyncOffsetNanos>;

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l22);

        $l23 = r0.<android.view.DisplayInfo: long presentationDeadlineNanos>;

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l23);

        $i24 = r0.<android.view.DisplayInfo: int state>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i24);

        $i25 = r0.<android.view.DisplayInfo: int ownerUid>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i25);

        $r9 = r0.<android.view.DisplayInfo: java.lang.String ownerPackageName>;

        virtualinvoke r1.<android.os.Parcel: void writeString8(java.lang.String)>($r9);

        $r10 = r0.<android.view.DisplayInfo: java.lang.String uniqueId>;

        virtualinvoke r1.<android.os.Parcel: void writeString8(java.lang.String)>($r10);

        $i26 = r0.<android.view.DisplayInfo: int removeMode>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i26);

        return;
    }
}
