public final class android.view.DragAndDropPermissions extends java.lang.Object implements android.os.Parcelable
{
    public static final android.os.Parcelable$Creator CREATOR;
    private final com.android.internal.view.IDragAndDropPermissions mDragAndDropPermissions;
    private android.os.IBinder mTransientToken;

    static void <clinit>()
    {
        android.view.DragAndDropPermissions$1 $r0;

        $r0 = new android.view.DragAndDropPermissions$1;

        specialinvoke $r0.<android.view.DragAndDropPermissions$1: void <init>()>();

        <android.view.DragAndDropPermissions: android.os.Parcelable$Creator CREATOR> = $r0;

        return;
    }

    private void <init>(android.os.Parcel)
    {
        android.view.DragAndDropPermissions r0;
        android.os.Parcel r1;
        android.os.IBinder $r2, $r4;
        com.android.internal.view.IDragAndDropPermissions $r3;

        r0 := @this: android.view.DragAndDropPermissions;

        r1 := @parameter0: android.os.Parcel;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = virtualinvoke r1.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r3 = staticinvoke <com.android.internal.view.IDragAndDropPermissions$Stub: com.android.internal.view.IDragAndDropPermissions asInterface(android.os.IBinder)>($r2);

        r0.<android.view.DragAndDropPermissions: com.android.internal.view.IDragAndDropPermissions mDragAndDropPermissions> = $r3;

        $r4 = virtualinvoke r1.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        r0.<android.view.DragAndDropPermissions: android.os.IBinder mTransientToken> = $r4;

        return;
    }

    void <init>(android.os.Parcel, android.view.DragAndDropPermissions$1)
    {
        android.view.DragAndDropPermissions r0;
        android.os.Parcel r1;
        android.view.DragAndDropPermissions$1 r2;

        r0 := @this: android.view.DragAndDropPermissions;

        r1 := @parameter0: android.os.Parcel;

        r2 := @parameter1: android.view.DragAndDropPermissions$1;

        specialinvoke r0.<android.view.DragAndDropPermissions: void <init>(android.os.Parcel)>(r1);

        return;
    }

    private void <init>(com.android.internal.view.IDragAndDropPermissions)
    {
        android.view.DragAndDropPermissions r0;
        com.android.internal.view.IDragAndDropPermissions r1;

        r0 := @this: android.view.DragAndDropPermissions;

        r1 := @parameter0: com.android.internal.view.IDragAndDropPermissions;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.view.DragAndDropPermissions: com.android.internal.view.IDragAndDropPermissions mDragAndDropPermissions> = r1;

        return;
    }

    public static android.view.DragAndDropPermissions obtain(android.view.DragEvent)
    {
        android.view.DragEvent r0;
        com.android.internal.view.IDragAndDropPermissions $r1, $r3;
        android.view.DragAndDropPermissions $r2;

        r0 := @parameter0: android.view.DragEvent;

        $r1 = virtualinvoke r0.<android.view.DragEvent: com.android.internal.view.IDragAndDropPermissions getDragAndDropPermissions()>();

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = new android.view.DragAndDropPermissions;

        $r3 = virtualinvoke r0.<android.view.DragEvent: com.android.internal.view.IDragAndDropPermissions getDragAndDropPermissions()>();

        specialinvoke $r2.<android.view.DragAndDropPermissions: void <init>(com.android.internal.view.IDragAndDropPermissions)>($r3);

        return $r2;
    }

    public int describeContents()
    {
        android.view.DragAndDropPermissions r0;

        r0 := @this: android.view.DragAndDropPermissions;

        return 0;
    }

    public void release()
    {
        android.view.DragAndDropPermissions r0;
        com.android.internal.view.IDragAndDropPermissions $r2;
        android.os.RemoteException $r3;

        r0 := @this: android.view.DragAndDropPermissions;

     label1:
        $r2 = r0.<android.view.DragAndDropPermissions: com.android.internal.view.IDragAndDropPermissions mDragAndDropPermissions>;

        interfaceinvoke $r2.<com.android.internal.view.IDragAndDropPermissions: void release()>();

        r0.<android.view.DragAndDropPermissions: android.os.IBinder mTransientToken> = null;

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean take(android.os.IBinder)
    {
        android.view.DragAndDropPermissions r0;
        com.android.internal.view.IDragAndDropPermissions $r1;
        android.os.RemoteException $r2;
        android.os.IBinder r3;

        r0 := @this: android.view.DragAndDropPermissions;

        r3 := @parameter0: android.os.IBinder;

     label1:
        $r1 = r0.<android.view.DragAndDropPermissions: com.android.internal.view.IDragAndDropPermissions mDragAndDropPermissions>;

        interfaceinvoke $r1.<com.android.internal.view.IDragAndDropPermissions: void take(android.os.IBinder)>(r3);

     label2:
        return 1;

     label3:
        $r2 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean takeTransient()
    {
        android.view.DragAndDropPermissions r0;
        com.android.internal.view.IDragAndDropPermissions $r1;
        android.os.RemoteException $r2;
        android.os.Binder r3;

        r0 := @this: android.view.DragAndDropPermissions;

     label1:
        r3 = new android.os.Binder;

        specialinvoke r3.<android.os.Binder: void <init>()>();

        r0.<android.view.DragAndDropPermissions: android.os.IBinder mTransientToken> = r3;

        $r1 = r0.<android.view.DragAndDropPermissions: com.android.internal.view.IDragAndDropPermissions mDragAndDropPermissions>;

        interfaceinvoke $r1.<com.android.internal.view.IDragAndDropPermissions: void takeTransient(android.os.IBinder)>(r3);

     label2:
        return 1;

     label3:
        $r2 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.view.DragAndDropPermissions r0;
        android.os.Parcel r1;
        int i0;
        com.android.internal.view.IDragAndDropPermissions $r2;
        android.os.IBinder $r3;

        r0 := @this: android.view.DragAndDropPermissions;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        $r2 = r0.<android.view.DragAndDropPermissions: com.android.internal.view.IDragAndDropPermissions mDragAndDropPermissions>;

        virtualinvoke r1.<android.os.Parcel: void writeStrongInterface(android.os.IInterface)>($r2);

        $r3 = r0.<android.view.DragAndDropPermissions: android.os.IBinder mTransientToken>;

        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r3);

        return;
    }
}
