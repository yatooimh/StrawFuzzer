public class android.view.FocusFinder extends java.lang.Object
{
    private static final java.lang.ThreadLocal tlFocusFinder;
    final android.graphics.Rect mBestCandidateRect;
    private final android.view.FocusFinder$FocusSorter mFocusSorter;
    final android.graphics.Rect mFocusedRect;
    final android.graphics.Rect mOtherRect;
    private final java.util.ArrayList mTempList;
    private final android.view.FocusFinder$UserSpecifiedFocusComparator mUserSpecifiedClusterComparator;
    private final android.view.FocusFinder$UserSpecifiedFocusComparator mUserSpecifiedFocusComparator;

    static void <clinit>()
    {
        android.view.FocusFinder$1 $r0;

        $r0 = new android.view.FocusFinder$1;

        specialinvoke $r0.<android.view.FocusFinder$1: void <init>()>();

        <android.view.FocusFinder: java.lang.ThreadLocal tlFocusFinder> = $r0;

        return;
    }

    private void <init>()
    {
        android.view.FocusFinder r0;
        android.view.'-$$Lambda$FocusFinder$Pgx6IETuqCkrhJYdiBes48tolG4' $r5;
        android.view.'-$$Lambda$FocusFinder$P8rLvOJhymJH5ALAgUjGaM5gxKA' $r7;
        android.graphics.Rect r10, r11, r12;
        android.view.FocusFinder$UserSpecifiedFocusComparator r13, r14;
        android.view.FocusFinder$FocusSorter r15;
        java.util.ArrayList r16;
        android.view.FocusFinder$UserSpecifiedFocusComparator$NextFocusGetter r17, r18;

        r0 := @this: android.view.FocusFinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r10 = new android.graphics.Rect;

        specialinvoke r10.<android.graphics.Rect: void <init>()>();

        r0.<android.view.FocusFinder: android.graphics.Rect mFocusedRect> = r10;

        r11 = new android.graphics.Rect;

        specialinvoke r11.<android.graphics.Rect: void <init>()>();

        r0.<android.view.FocusFinder: android.graphics.Rect mOtherRect> = r11;

        r12 = new android.graphics.Rect;

        specialinvoke r12.<android.graphics.Rect: void <init>()>();

        r0.<android.view.FocusFinder: android.graphics.Rect mBestCandidateRect> = r12;

        r13 = new android.view.FocusFinder$UserSpecifiedFocusComparator;

        $r5 = <android.view._$$Lambda$FocusFinder$Pgx6IETuqCkrhJYdiBes48tolG4: android.view.'-$$Lambda$FocusFinder$Pgx6IETuqCkrhJYdiBes48tolG4' INSTANCE>;

        r17 = (android.view.FocusFinder$UserSpecifiedFocusComparator$NextFocusGetter) $r5;

        specialinvoke r13.<android.view.FocusFinder$UserSpecifiedFocusComparator: void <init>(android.view.FocusFinder$UserSpecifiedFocusComparator$NextFocusGetter)>(r17);

        r0.<android.view.FocusFinder: android.view.FocusFinder$UserSpecifiedFocusComparator mUserSpecifiedFocusComparator> = r13;

        r14 = new android.view.FocusFinder$UserSpecifiedFocusComparator;

        $r7 = <android.view._$$Lambda$FocusFinder$P8rLvOJhymJH5ALAgUjGaM5gxKA: android.view.'-$$Lambda$FocusFinder$P8rLvOJhymJH5ALAgUjGaM5gxKA' INSTANCE>;

        r18 = (android.view.FocusFinder$UserSpecifiedFocusComparator$NextFocusGetter) $r7;

        specialinvoke r14.<android.view.FocusFinder$UserSpecifiedFocusComparator: void <init>(android.view.FocusFinder$UserSpecifiedFocusComparator$NextFocusGetter)>(r18);

        r0.<android.view.FocusFinder: android.view.FocusFinder$UserSpecifiedFocusComparator mUserSpecifiedClusterComparator> = r14;

        r15 = new android.view.FocusFinder$FocusSorter;

        specialinvoke r15.<android.view.FocusFinder$FocusSorter: void <init>()>();

        r0.<android.view.FocusFinder: android.view.FocusFinder$FocusSorter mFocusSorter> = r15;

        r16 = new java.util.ArrayList;

        specialinvoke r16.<java.util.ArrayList: void <init>()>();

        r0.<android.view.FocusFinder: java.util.ArrayList mTempList> = r16;

        return;
    }

    void <init>(android.view.FocusFinder$1)
    {
        android.view.FocusFinder r0;
        android.view.FocusFinder$1 r1;

        r0 := @this: android.view.FocusFinder;

        r1 := @parameter0: android.view.FocusFinder$1;

        specialinvoke r0.<android.view.FocusFinder: void <init>()>();

        return;
    }

    private android.view.View findNextFocus(android.view.ViewGroup, android.view.View, android.graphics.Rect, int)
    {
        android.view.FocusFinder r0;
        android.view.View r1, r6;
        android.graphics.Rect r2;
        int i0;
        android.view.ViewGroup r3, r5;
        boolean $z0;
        java.lang.Throwable $r4;
        java.util.ArrayList r7;

        r0 := @this: android.view.FocusFinder;

        r5 := @parameter0: android.view.ViewGroup;

        r1 := @parameter1: android.view.View;

        r2 := @parameter2: android.graphics.Rect;

        i0 := @parameter3: int;

        r3 = specialinvoke r0.<android.view.FocusFinder: android.view.ViewGroup getEffectiveRoot(android.view.ViewGroup,android.view.View)>(r5, r1);

        r6 = null;

        if r1 == null goto label1;

        r6 = specialinvoke r0.<android.view.FocusFinder: android.view.View findNextUserSpecifiedFocus(android.view.ViewGroup,android.view.View,int)>(r3, r1, i0);

     label1:
        if r6 == null goto label2;

        return r6;

     label2:
        r7 = r0.<android.view.FocusFinder: java.util.ArrayList mTempList>;

     label3:
        virtualinvoke r7.<java.util.ArrayList: void clear()>();

        virtualinvoke r3.<android.view.ViewGroup: void addFocusables(java.util.ArrayList,int)>(r7, i0);

     label4:
        $z0 = virtualinvoke r7.<java.util.ArrayList: boolean isEmpty()>();

        if $z0 != 0 goto label5;

        r6 = specialinvoke r0.<android.view.FocusFinder: android.view.View findNextFocus(android.view.ViewGroup,android.view.View,android.graphics.Rect,int,java.util.ArrayList)>(r3, r1, r2, i0, r7);

     label5:
        virtualinvoke r7.<java.util.ArrayList: void clear()>();

        return r6;

     label6:
        $r4 := @caughtexception;

        virtualinvoke r7.<java.util.ArrayList: void clear()>();

        throw $r4;

        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
    }

    private android.view.View findNextFocus(android.view.ViewGroup, android.view.View, android.graphics.Rect, int, java.util.ArrayList)
    {
        android.view.FocusFinder r0;
        android.view.View r1, $r3, $r12;
        int i0;
        java.util.ArrayList r2;
        java.lang.StringBuilder $r4;
        java.lang.IllegalArgumentException $r7;
        java.lang.String $r8;
        boolean $z0, $z1;
        android.view.ViewGroup r9;
        android.graphics.Rect r10;

        r0 := @this: android.view.FocusFinder;

        r9 := @parameter0: android.view.ViewGroup;

        r1 := @parameter1: android.view.View;

        r10 := @parameter2: android.graphics.Rect;

        i0 := @parameter3: int;

        r2 := @parameter4: java.util.ArrayList;

        if r1 == null goto label02;

        if r10 != null goto label01;

        r10 = r0.<android.view.FocusFinder: android.graphics.Rect mFocusedRect>;

        goto label01;

     label01:
        virtualinvoke r1.<android.view.View: void getFocusedRect(android.graphics.Rect)>(r10);

        virtualinvoke r9.<android.view.ViewGroup: void offsetDescendantRectToMyCoords(android.view.View,android.graphics.Rect)>(r1, r10);

        goto label09;

     label02:
        if r10 != null goto label09;

        r10 = r0.<android.view.FocusFinder: android.graphics.Rect mFocusedRect>;

        if i0 == 1 goto label07;

        if i0 == 2 goto label05;

        if i0 == 17 goto label04;

        if i0 == 33 goto label04;

        if i0 == 66 goto label03;

        if i0 == 130 goto label03;

        goto label09;

     label03:
        specialinvoke r0.<android.view.FocusFinder: void setFocusTopLeft(android.view.ViewGroup,android.graphics.Rect)>(r9, r10);

        goto label09;

     label04:
        specialinvoke r0.<android.view.FocusFinder: void setFocusBottomRight(android.view.ViewGroup,android.graphics.Rect)>(r9, r10);

        goto label09;

     label05:
        $z1 = virtualinvoke r9.<android.view.ViewGroup: boolean isLayoutRtl()>();

        if $z1 == 0 goto label06;

        specialinvoke r0.<android.view.FocusFinder: void setFocusBottomRight(android.view.ViewGroup,android.graphics.Rect)>(r9, r10);

        goto label09;

     label06:
        specialinvoke r0.<android.view.FocusFinder: void setFocusTopLeft(android.view.ViewGroup,android.graphics.Rect)>(r9, r10);

        goto label09;

     label07:
        $z0 = virtualinvoke r9.<android.view.ViewGroup: boolean isLayoutRtl()>();

        if $z0 == 0 goto label08;

        specialinvoke r0.<android.view.FocusFinder: void setFocusTopLeft(android.view.ViewGroup,android.graphics.Rect)>(r9, r10);

        goto label09;

     label08:
        specialinvoke r0.<android.view.FocusFinder: void setFocusBottomRight(android.view.ViewGroup,android.graphics.Rect)>(r9, r10);

        goto label09;

     label09:
        if i0 == 1 goto label12;

        if i0 == 2 goto label12;

        if i0 == 17 goto label11;

        if i0 == 33 goto label11;

        if i0 == 66 goto label11;

        if i0 != 130 goto label10;

        goto label11;

     label10:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown direction: ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r7 = new java.lang.IllegalArgumentException;

        $r8 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r7;

     label11:
        $r12 = virtualinvoke r0.<android.view.FocusFinder: android.view.View findNextFocusInAbsoluteDirection(java.util.ArrayList,android.view.ViewGroup,android.view.View,android.graphics.Rect,int)>(r2, r9, r1, r10, i0);

        return $r12;

     label12:
        $r3 = specialinvoke r0.<android.view.FocusFinder: android.view.View findNextFocusInRelativeDirection(java.util.ArrayList,android.view.ViewGroup,android.view.View,android.graphics.Rect,int)>(r2, r9, r1, r10, i0);

        return $r3;
    }

    private android.view.View findNextFocusInRelativeDirection(java.util.ArrayList, android.view.ViewGroup, android.view.View, android.graphics.Rect, int)
    {
        android.view.FocusFinder r0;
        android.view.ViewGroup r1;
        android.view.View r2, $r7, $r8, $r10;
        android.graphics.Rect r3;
        int i0, i1, $i2;
        android.view.FocusFinder$UserSpecifiedFocusComparator $r4, $r5, $r6, $r12;
        java.lang.Object $r9;
        java.lang.Throwable $r11;
        java.util.ArrayList r13;

        r0 := @this: android.view.FocusFinder;

        r13 := @parameter0: java.util.ArrayList;

        r1 := @parameter1: android.view.ViewGroup;

        r2 := @parameter2: android.view.View;

        r3 := @parameter3: android.graphics.Rect;

        i0 := @parameter4: int;

     label1:
        $r4 = r0.<android.view.FocusFinder: android.view.FocusFinder$UserSpecifiedFocusComparator mUserSpecifiedFocusComparator>;

        virtualinvoke $r4.<android.view.FocusFinder$UserSpecifiedFocusComparator: void setFocusables(java.util.List,android.view.View)>(r13, r1);

        $r5 = r0.<android.view.FocusFinder: android.view.FocusFinder$UserSpecifiedFocusComparator mUserSpecifiedFocusComparator>;

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>(r13, $r5);

     label2:
        $r6 = r0.<android.view.FocusFinder: android.view.FocusFinder$UserSpecifiedFocusComparator mUserSpecifiedFocusComparator>;

        virtualinvoke $r6.<android.view.FocusFinder$UserSpecifiedFocusComparator: void recycle()>();

        i1 = virtualinvoke r13.<java.util.ArrayList: int size()>();

        if i0 == 1 goto label4;

        if i0 == 2 goto label3;

        $i2 = i1 - 1;

        $r9 = virtualinvoke r13.<java.util.ArrayList: java.lang.Object get(int)>($i2);

        $r10 = (android.view.View) $r9;

        return $r10;

     label3:
        $r8 = staticinvoke <android.view.FocusFinder: android.view.View getNextFocusable(android.view.View,java.util.ArrayList,int)>(r2, r13, i1);

        return $r8;

     label4:
        $r7 = staticinvoke <android.view.FocusFinder: android.view.View getPreviousFocusable(android.view.View,java.util.ArrayList,int)>(r2, r13, i1);

        return $r7;

     label5:
        $r11 := @caughtexception;

        $r12 = r0.<android.view.FocusFinder: android.view.FocusFinder$UserSpecifiedFocusComparator mUserSpecifiedFocusComparator>;

        virtualinvoke $r12.<android.view.FocusFinder$UserSpecifiedFocusComparator: void recycle()>();

        throw $r11;

        catch java.lang.Throwable from label1 to label2 with label5;
    }

    private android.view.View findNextKeyboardNavigationCluster(android.view.View, android.view.View, java.util.List, int)
    {
        android.view.FocusFinder r0;
        android.view.View r1, r13, $r15, $r16;
        java.util.List r2;
        int i0, i1;
        android.view.FocusFinder$UserSpecifiedFocusComparator $r3, $r4, $r5, $r12;
        java.lang.StringBuilder $r6;
        java.lang.IllegalArgumentException $r9;
        java.lang.String $r10;
        java.lang.Throwable $r11;

        r0 := @this: android.view.FocusFinder;

        r13 := @parameter0: android.view.View;

        r1 := @parameter1: android.view.View;

        r2 := @parameter2: java.util.List;

        i0 := @parameter3: int;

     label1:
        $r3 = r0.<android.view.FocusFinder: android.view.FocusFinder$UserSpecifiedFocusComparator mUserSpecifiedClusterComparator>;

        virtualinvoke $r3.<android.view.FocusFinder$UserSpecifiedFocusComparator: void setFocusables(java.util.List,android.view.View)>(r2, r13);

        $r4 = r0.<android.view.FocusFinder: android.view.FocusFinder$UserSpecifiedFocusComparator mUserSpecifiedClusterComparator>;

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>(r2, $r4);

     label2:
        $r5 = r0.<android.view.FocusFinder: android.view.FocusFinder$UserSpecifiedFocusComparator mUserSpecifiedClusterComparator>;

        virtualinvoke $r5.<android.view.FocusFinder$UserSpecifiedFocusComparator: void recycle()>();

        i1 = interfaceinvoke r2.<java.util.List: int size()>();

        if i0 == 1 goto label5;

        if i0 == 2 goto label4;

        if i0 == 17 goto label5;

        if i0 == 33 goto label5;

        if i0 == 66 goto label4;

        if i0 != 130 goto label3;

        goto label4;

     label3:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown direction: ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r9 = new java.lang.IllegalArgumentException;

        $r10 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r10);

        throw $r9;

     label4:
        $r15 = staticinvoke <android.view.FocusFinder: android.view.View getNextKeyboardNavigationCluster(android.view.View,android.view.View,java.util.List,int)>(r13, r1, r2, i1);

        return $r15;

     label5:
        $r16 = staticinvoke <android.view.FocusFinder: android.view.View getPreviousKeyboardNavigationCluster(android.view.View,android.view.View,java.util.List,int)>(r13, r1, r2, i1);

        return $r16;

     label6:
        $r11 := @caughtexception;

        $r12 = r0.<android.view.FocusFinder: android.view.FocusFinder$UserSpecifiedFocusComparator mUserSpecifiedClusterComparator>;

        virtualinvoke $r12.<android.view.FocusFinder$UserSpecifiedFocusComparator: void recycle()>();

        throw $r11;

        catch java.lang.Throwable from label1 to label2 with label6;
    }

    private android.view.View findNextUserSpecifiedFocus(android.view.ViewGroup, android.view.View, int)
    {
        android.view.FocusFinder r0;
        android.view.ViewGroup r1;
        int i0, $i1;
        android.view.View r2, r3, r4, r5, r6;
        boolean $z1, $z2, $z3, z4, z5;

        r0 := @this: android.view.FocusFinder;

        r1 := @parameter0: android.view.ViewGroup;

        r4 := @parameter1: android.view.View;

        i0 := @parameter2: int;

        r5 = virtualinvoke r4.<android.view.View: android.view.View findUserSetNextFocus(android.view.View,int)>(r1, i0);

        r6 = r5;

        z4 = 1;

     label1:
        if r5 == null goto label6;

        $z1 = virtualinvoke r5.<android.view.View: boolean isFocusable()>();

        if $z1 == 0 goto label3;

        $i1 = virtualinvoke r5.<android.view.View: int getVisibility()>();

        if $i1 != 0 goto label3;

        $z2 = virtualinvoke r5.<android.view.View: boolean isInTouchMode()>();

        if $z2 == 0 goto label2;

        $z3 = virtualinvoke r5.<android.view.View: boolean isFocusableInTouchMode()>();

        if $z3 == 0 goto label3;

     label2:
        return r5;

     label3:
        r2 = virtualinvoke r5.<android.view.View: android.view.View findUserSetNextFocus(android.view.View,int)>(r1, i0);

        if z4 != 0 goto label4;

        z5 = 1;

        goto label5;

     label4:
        z5 = 0;

     label5:
        r5 = r2;

        z4 = z5;

        if z5 == 0 goto label1;

        r3 = virtualinvoke r6.<android.view.View: android.view.View findUserSetNextFocus(android.view.View,int)>(r1, i0);

        r5 = r2;

        r6 = r3;

        z4 = z5;

        if r3 != r2 goto label1;

     label6:
        return null;
    }

    private android.view.View findNextUserSpecifiedKeyboardNavigationCluster(android.view.View, android.view.View, int)
    {
        android.view.FocusFinder r0;
        android.view.View r1, r2, r3;
        int i0;
        boolean $z0;

        r0 := @this: android.view.FocusFinder;

        r2 := @parameter0: android.view.View;

        r1 := @parameter1: android.view.View;

        i0 := @parameter2: int;

        r3 = virtualinvoke r1.<android.view.View: android.view.View findUserSetNextKeyboardNavigationCluster(android.view.View,int)>(r2, i0);

        if r3 == null goto label1;

        $z0 = virtualinvoke r3.<android.view.View: boolean hasFocusable()>();

        if $z0 == 0 goto label1;

        return r3;

     label1:
        return null;
    }

    private android.view.ViewGroup getEffectiveRoot(android.view.ViewGroup, android.view.View)
    {
        android.view.FocusFinder r0;
        android.view.View r1;
        boolean $z0, $z1, $z2, $z3;
        android.content.Context $r2;
        android.content.pm.PackageManager $r3;
        android.view.ViewGroup r4, r5, r7, r8;
        android.view.ViewParent r6, r9;

        r0 := @this: android.view.FocusFinder;

        r4 := @parameter0: android.view.ViewGroup;

        r1 := @parameter1: android.view.View;

        if r1 == null goto label6;

        if r1 != r4 goto label1;

        goto label6;

     label1:
        r5 = null;

        r6 = virtualinvoke r1.<android.view.View: android.view.ViewParent getParent()>();

     label2:
        if r6 != r4 goto label4;

        if r5 == null goto label3;

        r4 = r5;

        goto label3;

     label3:
        return r4;

     label4:
        r7 = (android.view.ViewGroup) r6;

        r8 = r5;

        $z0 = virtualinvoke r7.<android.view.ViewGroup: boolean getTouchscreenBlocksFocus()>();

        if $z0 == 0 goto label5;

        r8 = r5;

        $r2 = virtualinvoke r1.<android.view.View: android.content.Context getContext()>();

        $r3 = virtualinvoke $r2.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $z1 = virtualinvoke $r3.<android.content.pm.PackageManager: boolean hasSystemFeature(java.lang.String)>("android.hardware.touchscreen");

        if $z1 == 0 goto label5;

        r8 = r5;

        $z2 = virtualinvoke r7.<android.view.ViewGroup: boolean isKeyboardNavigationCluster()>();

        if $z2 == 0 goto label5;

        r8 = r7;

     label5:
        r9 = interfaceinvoke r6.<android.view.ViewParent: android.view.ViewParent getParent()>();

        r5 = r8;

        r6 = r9;

        $z3 = r9 instanceof android.view.ViewGroup;

        if $z3 != 0 goto label2;

        return r4;

     label6:
        return r4;
    }

    public static android.view.FocusFinder getInstance()
    {
        java.lang.ThreadLocal $r0;
        java.lang.Object $r1;
        android.view.FocusFinder $r2;

        $r0 = <android.view.FocusFinder: java.lang.ThreadLocal tlFocusFinder>;

        $r1 = virtualinvoke $r0.<java.lang.ThreadLocal: java.lang.Object get()>();

        $r2 = (android.view.FocusFinder) $r1;

        return $r2;
    }

    private static android.view.View getNextFocusable(android.view.View, java.util.ArrayList, int)
    {
        android.view.View r0, $r3, $r5;
        java.util.ArrayList r1;
        int i0, i1, $i2, $i3;
        java.lang.Object $r2, $r4;
        boolean $z0;

        r0 := @parameter0: android.view.View;

        r1 := @parameter1: java.util.ArrayList;

        i0 := @parameter2: int;

        if r0 == null goto label1;

        i1 = virtualinvoke r1.<java.util.ArrayList: int lastIndexOf(java.lang.Object)>(r0);

        if i1 < 0 goto label1;

        $i2 = i1 + 1;

        if $i2 >= i0 goto label1;

        $i3 = i1 + 1;

        $r4 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>($i3);

        $r5 = (android.view.View) $r4;

        return $r5;

     label1:
        $z0 = virtualinvoke r1.<java.util.ArrayList: boolean isEmpty()>();

        if $z0 != 0 goto label2;

        $r2 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(0);

        $r3 = (android.view.View) $r2;

        return $r3;

     label2:
        return null;
    }

    private static android.view.View getNextKeyboardNavigationCluster(android.view.View, android.view.View, java.util.List, int)
    {
        android.view.View r0, r1, $r4, $r6;
        java.util.List r2;
        int i0, i1, $i2, $i3;
        java.lang.Object $r3, $r5;

        r0 := @parameter0: android.view.View;

        r1 := @parameter1: android.view.View;

        r2 := @parameter2: java.util.List;

        i0 := @parameter3: int;

        if r1 != null goto label1;

        $r5 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(0);

        $r6 = (android.view.View) $r5;

        return $r6;

     label1:
        i1 = interfaceinvoke r2.<java.util.List: int lastIndexOf(java.lang.Object)>(r1);

        if i1 < 0 goto label2;

        $i2 = i1 + 1;

        if $i2 >= i0 goto label2;

        $i3 = i1 + 1;

        $r3 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>($i3);

        $r4 = (android.view.View) $r3;

        return $r4;

     label2:
        return r0;
    }

    private static android.view.View getPreviousFocusable(android.view.View, java.util.ArrayList, int)
    {
        android.view.View r0, $r3, $r5;
        java.util.ArrayList r1;
        int i0, i1, $i2, $i3;
        boolean $z0;
        java.lang.Object $r2, $r4;

        r0 := @parameter0: android.view.View;

        r1 := @parameter1: java.util.ArrayList;

        i0 := @parameter2: int;

        if r0 == null goto label1;

        i1 = virtualinvoke r1.<java.util.ArrayList: int indexOf(java.lang.Object)>(r0);

        if i1 <= 0 goto label1;

        $i3 = i1 - 1;

        $r4 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>($i3);

        $r5 = (android.view.View) $r4;

        return $r5;

     label1:
        $z0 = virtualinvoke r1.<java.util.ArrayList: boolean isEmpty()>();

        if $z0 != 0 goto label2;

        $i2 = i0 - 1;

        $r2 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>($i2);

        $r3 = (android.view.View) $r2;

        return $r3;

     label2:
        return null;
    }

    private static android.view.View getPreviousKeyboardNavigationCluster(android.view.View, android.view.View, java.util.List, int)
    {
        android.view.View r0, r1, $r4, $r6;
        java.util.List r2;
        int $i0, $i1, i2, i3;
        java.lang.Object $r3, $r5;

        r0 := @parameter0: android.view.View;

        r1 := @parameter1: android.view.View;

        r2 := @parameter2: java.util.List;

        i2 := @parameter3: int;

        if r1 != null goto label1;

        $i1 = i2 - 1;

        $r5 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>($i1);

        $r6 = (android.view.View) $r5;

        return $r6;

     label1:
        i3 = interfaceinvoke r2.<java.util.List: int indexOf(java.lang.Object)>(r1);

        if i3 <= 0 goto label2;

        $i0 = i3 - 1;

        $r3 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>($i0);

        $r4 = (android.view.View) $r3;

        return $r4;

     label2:
        return r0;
    }

    private boolean isTouchCandidate(int, int, android.graphics.Rect, int)
    {
        android.view.FocusFinder r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14;
        android.graphics.Rect r1;
        java.lang.IllegalArgumentException $r2;
        boolean z3, z4, z5, z6;

        r0 := @this: android.view.FocusFinder;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: android.graphics.Rect;

        i2 := @parameter3: int;

        z3 = 1;

        if i2 == 17 goto label10;

        if i2 == 33 goto label07;

        if i2 == 66 goto label04;

        if i2 != 130 goto label03;

        $i12 = r1.<android.graphics.Rect: int top>;

        if $i12 < i1 goto label01;

        $i13 = r1.<android.graphics.Rect: int left>;

        if $i13 > i0 goto label01;

        $i14 = r1.<android.graphics.Rect: int right>;

        if i0 > $i14 goto label01;

        goto label02;

     label01:
        z3 = 0;

     label02:
        return z3;

     label03:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("direction must be one of {FOCUS_UP, FOCUS_DOWN, FOCUS_LEFT, FOCUS_RIGHT}.");

        throw $r2;

     label04:
        $i9 = r1.<android.graphics.Rect: int left>;

        if $i9 < i0 goto label05;

        $i10 = r1.<android.graphics.Rect: int top>;

        if $i10 > i1 goto label05;

        $i11 = r1.<android.graphics.Rect: int bottom>;

        if i1 > $i11 goto label05;

        z4 = 1;

        goto label06;

     label05:
        z4 = 0;

     label06:
        return z4;

     label07:
        $i6 = r1.<android.graphics.Rect: int top>;

        if $i6 > i1 goto label08;

        $i7 = r1.<android.graphics.Rect: int left>;

        if $i7 > i0 goto label08;

        $i8 = r1.<android.graphics.Rect: int right>;

        if i0 > $i8 goto label08;

        z5 = 1;

        goto label09;

     label08:
        z5 = 0;

     label09:
        return z5;

     label10:
        $i3 = r1.<android.graphics.Rect: int left>;

        if $i3 > i0 goto label11;

        $i4 = r1.<android.graphics.Rect: int top>;

        if $i4 > i1 goto label11;

        $i5 = r1.<android.graphics.Rect: int bottom>;

        if i1 > $i5 goto label11;

        z6 = 1;

        goto label12;

     label11:
        z6 = 0;

     label12:
        return z6;
    }

    private static final boolean isValidId(int)
    {
        int i0;
        boolean z0;

        i0 := @parameter0: int;

        if i0 == 0 goto label1;

        if i0 == -1 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    static android.view.View lambda$new$0(android.view.View, android.view.View)
    {
        android.view.View r0, r1, r2;
        int $i0;
        boolean $z0;

        r1 := @parameter0: android.view.View;

        r0 := @parameter1: android.view.View;

        $i0 = virtualinvoke r0.<android.view.View: int getNextFocusForwardId()>();

        $z0 = staticinvoke <android.view.FocusFinder: boolean isValidId(int)>($i0);

        if $z0 == 0 goto label1;

        r2 = virtualinvoke r0.<android.view.View: android.view.View findUserSetNextFocus(android.view.View,int)>(r1, 2);

        goto label2;

     label1:
        r2 = null;

     label2:
        return r2;
    }

    static android.view.View lambda$new$1(android.view.View, android.view.View)
    {
        android.view.View r0, r1, r2;
        int $i0;
        boolean $z0;

        r1 := @parameter0: android.view.View;

        r0 := @parameter1: android.view.View;

        $i0 = virtualinvoke r0.<android.view.View: int getNextClusterForwardId()>();

        $z0 = staticinvoke <android.view.FocusFinder: boolean isValidId(int)>($i0);

        if $z0 == 0 goto label1;

        r2 = virtualinvoke r0.<android.view.View: android.view.View findUserSetNextKeyboardNavigationCluster(android.view.View,int)>(r1, 2);

        goto label2;

     label1:
        r2 = null;

     label2:
        return r2;
    }

    static int majorAxisDistance(int, android.graphics.Rect, android.graphics.Rect)
    {
        int i0, $i1, $i2;
        android.graphics.Rect r0, r1;

        i0 := @parameter0: int;

        r0 := @parameter1: android.graphics.Rect;

        r1 := @parameter2: android.graphics.Rect;

        $i1 = staticinvoke <android.view.FocusFinder: int majorAxisDistanceRaw(int,android.graphics.Rect,android.graphics.Rect)>(i0, r0, r1);

        $i2 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i1);

        return $i2;
    }

    static int majorAxisDistanceRaw(int, android.graphics.Rect, android.graphics.Rect)
    {
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        android.graphics.Rect r0, r1;
        java.lang.IllegalArgumentException $r2;

        i0 := @parameter0: int;

        r0 := @parameter1: android.graphics.Rect;

        r1 := @parameter2: android.graphics.Rect;

        if i0 == 17 goto label4;

        if i0 == 33 goto label3;

        if i0 == 66 goto label2;

        if i0 != 130 goto label1;

        $i11 = r1.<android.graphics.Rect: int top>;

        $i10 = r0.<android.graphics.Rect: int bottom>;

        $i12 = $i11 - $i10;

        return $i12;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("direction must be one of {FOCUS_UP, FOCUS_DOWN, FOCUS_LEFT, FOCUS_RIGHT}.");

        throw $r2;

     label2:
        $i8 = r1.<android.graphics.Rect: int left>;

        $i7 = r0.<android.graphics.Rect: int right>;

        $i9 = $i8 - $i7;

        return $i9;

     label3:
        $i5 = r0.<android.graphics.Rect: int top>;

        $i4 = r1.<android.graphics.Rect: int bottom>;

        $i6 = $i5 - $i4;

        return $i6;

     label4:
        $i2 = r0.<android.graphics.Rect: int left>;

        $i1 = r1.<android.graphics.Rect: int right>;

        $i3 = $i2 - $i1;

        return $i3;
    }

    static int majorAxisDistanceToFarEdge(int, android.graphics.Rect, android.graphics.Rect)
    {
        int i0, $i1, $i2;
        android.graphics.Rect r0, r1;

        i0 := @parameter0: int;

        r0 := @parameter1: android.graphics.Rect;

        r1 := @parameter2: android.graphics.Rect;

        $i1 = staticinvoke <android.view.FocusFinder: int majorAxisDistanceToFarEdgeRaw(int,android.graphics.Rect,android.graphics.Rect)>(i0, r0, r1);

        $i2 = staticinvoke <java.lang.Math: int max(int,int)>(1, $i1);

        return $i2;
    }

    static int majorAxisDistanceToFarEdgeRaw(int, android.graphics.Rect, android.graphics.Rect)
    {
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        android.graphics.Rect r0, r1;
        java.lang.IllegalArgumentException $r2;

        i0 := @parameter0: int;

        r0 := @parameter1: android.graphics.Rect;

        r1 := @parameter2: android.graphics.Rect;

        if i0 == 17 goto label4;

        if i0 == 33 goto label3;

        if i0 == 66 goto label2;

        if i0 != 130 goto label1;

        $i11 = r1.<android.graphics.Rect: int bottom>;

        $i10 = r0.<android.graphics.Rect: int bottom>;

        $i12 = $i11 - $i10;

        return $i12;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("direction must be one of {FOCUS_UP, FOCUS_DOWN, FOCUS_LEFT, FOCUS_RIGHT}.");

        throw $r2;

     label2:
        $i8 = r1.<android.graphics.Rect: int right>;

        $i7 = r0.<android.graphics.Rect: int right>;

        $i9 = $i8 - $i7;

        return $i9;

     label3:
        $i5 = r0.<android.graphics.Rect: int top>;

        $i4 = r1.<android.graphics.Rect: int top>;

        $i6 = $i5 - $i4;

        return $i6;

     label4:
        $i2 = r0.<android.graphics.Rect: int left>;

        $i1 = r1.<android.graphics.Rect: int left>;

        $i3 = $i2 - $i1;

        return $i3;
    }

    static int minorAxisDistance(int, android.graphics.Rect, android.graphics.Rect)
    {
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20;
        android.graphics.Rect r0, r1;
        java.lang.IllegalArgumentException $r2;

        i0 := @parameter0: int;

        r0 := @parameter1: android.graphics.Rect;

        r1 := @parameter2: android.graphics.Rect;

        if i0 == 17 goto label3;

        if i0 == 33 goto label2;

        if i0 == 66 goto label3;

        if i0 != 130 goto label1;

        goto label2;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("direction must be one of {FOCUS_UP, FOCUS_DOWN, FOCUS_LEFT, FOCUS_RIGHT}.");

        throw $r2;

     label2:
        $i11 = r0.<android.graphics.Rect: int left>;

        $i12 = virtualinvoke r0.<android.graphics.Rect: int width()>();

        $i13 = $i12 / 2;

        $i14 = $i11 + $i13;

        $i15 = r1.<android.graphics.Rect: int left>;

        $i16 = virtualinvoke r1.<android.graphics.Rect: int width()>();

        $i17 = $i16 / 2;

        $i18 = $i15 + $i17;

        $i19 = $i14 - $i18;

        $i20 = staticinvoke <java.lang.Math: int abs(int)>($i19);

        return $i20;

     label3:
        $i1 = r0.<android.graphics.Rect: int top>;

        $i2 = virtualinvoke r0.<android.graphics.Rect: int height()>();

        $i3 = $i2 / 2;

        $i4 = $i1 + $i3;

        $i5 = r1.<android.graphics.Rect: int top>;

        $i6 = virtualinvoke r1.<android.graphics.Rect: int height()>();

        $i7 = $i6 / 2;

        $i8 = $i5 + $i7;

        $i9 = $i4 - $i8;

        $i10 = staticinvoke <java.lang.Math: int abs(int)>($i9);

        return $i10;
    }

    private void setFocusBottomRight(android.view.ViewGroup, android.graphics.Rect)
    {
        android.view.FocusFinder r0;
        android.view.ViewGroup r1;
        android.graphics.Rect r2;
        int i0, i1, $i2, $i3, $i4, $i5;

        r0 := @this: android.view.FocusFinder;

        r1 := @parameter0: android.view.ViewGroup;

        r2 := @parameter1: android.graphics.Rect;

        $i2 = virtualinvoke r1.<android.view.ViewGroup: int getScrollY()>();

        $i3 = virtualinvoke r1.<android.view.ViewGroup: int getHeight()>();

        i0 = $i2 + $i3;

        $i4 = virtualinvoke r1.<android.view.ViewGroup: int getScrollX()>();

        $i5 = virtualinvoke r1.<android.view.ViewGroup: int getWidth()>();

        i1 = $i4 + $i5;

        virtualinvoke r2.<android.graphics.Rect: void set(int,int,int,int)>(i1, i0, i1, i0);

        return;
    }

    private void setFocusTopLeft(android.view.ViewGroup, android.graphics.Rect)
    {
        android.view.FocusFinder r0;
        android.view.ViewGroup r1;
        android.graphics.Rect r2;
        int i0, i1;

        r0 := @this: android.view.FocusFinder;

        r1 := @parameter0: android.view.ViewGroup;

        r2 := @parameter1: android.graphics.Rect;

        i0 = virtualinvoke r1.<android.view.ViewGroup: int getScrollY()>();

        i1 = virtualinvoke r1.<android.view.ViewGroup: int getScrollX()>();

        virtualinvoke r2.<android.graphics.Rect: void set(int,int,int,int)>(i1, i0, i1, i0);

        return;
    }

    public static void sort(android.view.View[], int, int, android.view.ViewGroup, boolean)
    {
        android.view.View[] r0;
        int i0, i1;
        android.view.ViewGroup r1;
        boolean z0;
        android.view.FocusFinder $r2;
        android.view.FocusFinder$FocusSorter $r3;

        r0 := @parameter0: android.view.View[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 := @parameter3: android.view.ViewGroup;

        z0 := @parameter4: boolean;

        $r2 = staticinvoke <android.view.FocusFinder: android.view.FocusFinder getInstance()>();

        $r3 = $r2.<android.view.FocusFinder: android.view.FocusFinder$FocusSorter mFocusSorter>;

        virtualinvoke $r3.<android.view.FocusFinder$FocusSorter: void sort(android.view.View[],int,int,android.view.ViewGroup,boolean)>(r0, i0, i1, r1, z0);

        return;
    }

    boolean beamBeats(int, android.graphics.Rect, android.graphics.Rect, android.graphics.Rect)
    {
        android.view.FocusFinder r0;
        int i0, $i1, $i2;
        android.graphics.Rect r1, r2, r3;
        boolean z0, z1, $z2, z3;

        r0 := @this: android.view.FocusFinder;

        i0 := @parameter0: int;

        r1 := @parameter1: android.graphics.Rect;

        r2 := @parameter2: android.graphics.Rect;

        r3 := @parameter3: android.graphics.Rect;

        z0 = virtualinvoke r0.<android.view.FocusFinder: boolean beamsOverlap(int,android.graphics.Rect,android.graphics.Rect)>(i0, r1, r2);

        z1 = virtualinvoke r0.<android.view.FocusFinder: boolean beamsOverlap(int,android.graphics.Rect,android.graphics.Rect)>(i0, r1, r3);

        z3 = 0;

        if z1 != 0 goto label6;

        if z0 != 0 goto label1;

        goto label6;

     label1:
        $z2 = virtualinvoke r0.<android.view.FocusFinder: boolean isToDirectionOf(int,android.graphics.Rect,android.graphics.Rect)>(i0, r1, r3);

        if $z2 != 0 goto label2;

        return 1;

     label2:
        if i0 == 17 goto label5;

        if i0 != 66 goto label3;

        goto label5;

     label3:
        $i1 = staticinvoke <android.view.FocusFinder: int majorAxisDistance(int,android.graphics.Rect,android.graphics.Rect)>(i0, r1, r2);

        $i2 = staticinvoke <android.view.FocusFinder: int majorAxisDistanceToFarEdge(int,android.graphics.Rect,android.graphics.Rect)>(i0, r1, r3);

        if $i1 >= $i2 goto label4;

        z3 = 1;

     label4:
        return z3;

     label5:
        return 1;

     label6:
        return 0;
    }

    boolean beamsOverlap(int, android.graphics.Rect, android.graphics.Rect)
    {
        android.view.FocusFinder r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        android.graphics.Rect r1, r2;
        java.lang.IllegalArgumentException $r3;
        boolean z1, z2;

        r0 := @this: android.view.FocusFinder;

        i0 := @parameter0: int;

        r1 := @parameter1: android.graphics.Rect;

        r2 := @parameter2: android.graphics.Rect;

        z1 = 1;

        if i0 == 17 goto label5;

        if i0 == 33 goto label2;

        if i0 == 66 goto label5;

        if i0 != 130 goto label1;

        goto label2;

     label1:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("direction must be one of {FOCUS_UP, FOCUS_DOWN, FOCUS_LEFT, FOCUS_RIGHT}.");

        throw $r3;

     label2:
        $i6 = r2.<android.graphics.Rect: int right>;

        $i5 = r1.<android.graphics.Rect: int left>;

        if $i6 <= $i5 goto label3;

        $i8 = r2.<android.graphics.Rect: int left>;

        $i7 = r1.<android.graphics.Rect: int right>;

        if $i8 >= $i7 goto label3;

        goto label4;

     label3:
        z1 = 0;

     label4:
        return z1;

     label5:
        $i2 = r2.<android.graphics.Rect: int bottom>;

        $i1 = r1.<android.graphics.Rect: int top>;

        if $i2 <= $i1 goto label6;

        $i4 = r2.<android.graphics.Rect: int top>;

        $i3 = r1.<android.graphics.Rect: int bottom>;

        if $i4 >= $i3 goto label6;

        z2 = 1;

        goto label7;

     label6:
        z2 = 0;

     label7:
        return z2;
    }

    public android.view.View findNearestTouchable(android.view.ViewGroup, int, int, int, int[])
    {
        android.view.FocusFinder r0;
        android.view.ViewGroup r1;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, i11, i12, i13, i14;
        int[] r2;
        java.util.ArrayList r3;
        android.graphics.Rect r5, $r9;
        android.view.View r6, r11, r12;
        android.content.Context $r7;
        android.view.ViewConfiguration $r8;
        java.lang.Object $r10;
        boolean $z0, $z1, $z2;

        r0 := @this: android.view.FocusFinder;

        r1 := @parameter0: android.view.ViewGroup;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        r2 := @parameter4: int[];

        r3 = virtualinvoke r1.<android.view.ViewGroup: java.util.ArrayList getTouchables()>();

        i11 = 2147483647;

        r11 = null;

        i3 = virtualinvoke r3.<java.util.ArrayList: int size()>();

        $r7 = r1.<android.view.ViewGroup: android.content.Context mContext>;

        $r8 = staticinvoke <android.view.ViewConfiguration: android.view.ViewConfiguration get(android.content.Context)>($r7);

        i4 = virtualinvoke $r8.<android.view.ViewConfiguration: int getScaledEdgeSlop()>();

        $r9 = new android.graphics.Rect;

        specialinvoke $r9.<android.graphics.Rect: void <init>()>();

        r5 = r0.<android.view.FocusFinder: android.graphics.Rect mOtherRect>;

        i12 = 0;

     label01:
        if i12 >= i3 goto label14;

        $r10 = virtualinvoke r3.<java.util.ArrayList: java.lang.Object get(int)>(i12);

        r6 = (android.view.View) $r10;

        virtualinvoke r6.<android.view.View: void getDrawingRect(android.graphics.Rect)>(r5);

        virtualinvoke r1.<android.view.ViewGroup: void offsetRectBetweenParentAndChild(android.view.View,android.graphics.Rect,boolean,boolean)>(r6, r5, 1, 1);

        $z0 = specialinvoke r0.<android.view.FocusFinder: boolean isTouchCandidate(int,int,android.graphics.Rect,int)>(i0, i1, r5, i2);

        if $z0 != 0 goto label02;

        i13 = i11;

        r12 = r11;

        goto label13;

     label02:
        i14 = 2147483647;

        if i2 == 17 goto label06;

        if i2 == 33 goto label05;

        if i2 == 66 goto label04;

        if i2 == 130 goto label03;

        goto label07;

     label03:
        i14 = r5.<android.graphics.Rect: int top>;

        goto label07;

     label04:
        i14 = r5.<android.graphics.Rect: int left>;

        goto label07;

     label05:
        $i9 = r5.<android.graphics.Rect: int bottom>;

        $i10 = i1 - $i9;

        i14 = $i10 + 1;

        goto label07;

     label06:
        $i5 = r5.<android.graphics.Rect: int right>;

        $i6 = i0 - $i5;

        i14 = $i6 + 1;

     label07:
        i13 = i11;

        r12 = r11;

        if i14 >= i4 goto label13;

        if r11 == null goto label08;

        $z1 = virtualinvoke $r9.<android.graphics.Rect: boolean contains(android.graphics.Rect)>(r5);

        if $z1 != 0 goto label08;

        i13 = i11;

        r12 = r11;

        $z2 = virtualinvoke r5.<android.graphics.Rect: boolean contains(android.graphics.Rect)>($r9);

        if $z2 != 0 goto label13;

        i13 = i11;

        r12 = r11;

        if i14 >= i11 goto label13;

     label08:
        i13 = i14;

        r12 = r6;

        virtualinvoke $r9.<android.graphics.Rect: void set(android.graphics.Rect)>(r5);

        if i2 == 17 goto label12;

        if i2 == 33 goto label11;

        if i2 == 66 goto label10;

        if i2 == 130 goto label09;

        goto label13;

     label09:
        r2[1] = i14;

        goto label13;

     label10:
        r2[0] = i14;

        goto label13;

     label11:
        $i8 = neg i14;

        r2[1] = $i8;

        goto label13;

     label12:
        $i7 = neg i14;

        r2[0] = $i7;

     label13:
        i12 = i12 + 1;

        i11 = i13;

        r11 = r12;

        goto label01;

     label14:
        return r11;
    }

    public final android.view.View findNextFocus(android.view.ViewGroup, android.view.View, int)
    {
        android.view.FocusFinder r0;
        android.view.ViewGroup r1;
        android.view.View r2, $r3;
        int i0;

        r0 := @this: android.view.FocusFinder;

        r1 := @parameter0: android.view.ViewGroup;

        r2 := @parameter1: android.view.View;

        i0 := @parameter2: int;

        $r3 = specialinvoke r0.<android.view.FocusFinder: android.view.View findNextFocus(android.view.ViewGroup,android.view.View,android.graphics.Rect,int)>(r1, r2, null, i0);

        return $r3;
    }

    public android.view.View findNextFocusFromRect(android.view.ViewGroup, android.graphics.Rect, int)
    {
        android.view.FocusFinder r0;
        android.view.ViewGroup r1;
        android.graphics.Rect r2, $r3, $r4;
        int i0;
        android.view.View $r5;

        r0 := @this: android.view.FocusFinder;

        r1 := @parameter0: android.view.ViewGroup;

        r2 := @parameter1: android.graphics.Rect;

        i0 := @parameter2: int;

        $r3 = r0.<android.view.FocusFinder: android.graphics.Rect mFocusedRect>;

        virtualinvoke $r3.<android.graphics.Rect: void set(android.graphics.Rect)>(r2);

        $r4 = r0.<android.view.FocusFinder: android.graphics.Rect mFocusedRect>;

        $r5 = specialinvoke r0.<android.view.FocusFinder: android.view.View findNextFocus(android.view.ViewGroup,android.view.View,android.graphics.Rect,int)>(r1, null, $r4, i0);

        return $r5;
    }

    android.view.View findNextFocusInAbsoluteDirection(java.util.ArrayList, android.view.ViewGroup, android.view.View, android.graphics.Rect, int)
    {
        android.view.FocusFinder r0;
        java.util.ArrayList r1;
        android.view.ViewGroup r2;
        android.view.View r3, r5, r18, r19;
        android.graphics.Rect r4, $r6, $r7, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, i12;
        java.lang.Object $r8;
        boolean $z0;

        r0 := @this: android.view.FocusFinder;

        r1 := @parameter0: java.util.ArrayList;

        r2 := @parameter1: android.view.ViewGroup;

        r3 := @parameter2: android.view.View;

        r4 := @parameter3: android.graphics.Rect;

        i0 := @parameter4: int;

        $r6 = r0.<android.view.FocusFinder: android.graphics.Rect mBestCandidateRect>;

        virtualinvoke $r6.<android.graphics.Rect: void set(android.graphics.Rect)>(r4);

        if i0 == 17 goto label4;

        if i0 == 33 goto label3;

        if i0 == 66 goto label2;

        if i0 == 130 goto label1;

        goto label5;

     label1:
        $r17 = r0.<android.view.FocusFinder: android.graphics.Rect mBestCandidateRect>;

        $i9 = virtualinvoke r4.<android.graphics.Rect: int height()>();

        $i10 = $i9 + 1;

        $i11 = neg $i10;

        virtualinvoke $r17.<android.graphics.Rect: void offset(int,int)>(0, $i11);

        goto label5;

     label2:
        $r16 = r0.<android.view.FocusFinder: android.graphics.Rect mBestCandidateRect>;

        $i6 = virtualinvoke r4.<android.graphics.Rect: int width()>();

        $i7 = $i6 + 1;

        $i8 = neg $i7;

        virtualinvoke $r16.<android.graphics.Rect: void offset(int,int)>($i8, 0);

        goto label5;

     label3:
        $r15 = r0.<android.view.FocusFinder: android.graphics.Rect mBestCandidateRect>;

        $i4 = virtualinvoke r4.<android.graphics.Rect: int height()>();

        $i5 = $i4 + 1;

        virtualinvoke $r15.<android.graphics.Rect: void offset(int,int)>(0, $i5);

        goto label5;

     label4:
        $r7 = r0.<android.view.FocusFinder: android.graphics.Rect mBestCandidateRect>;

        $i2 = virtualinvoke r4.<android.graphics.Rect: int width()>();

        $i3 = $i2 + 1;

        virtualinvoke $r7.<android.graphics.Rect: void offset(int,int)>($i3, 0);

     label5:
        r18 = null;

        i1 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        i12 = 0;

     label6:
        if i12 >= i1 goto label9;

        $r8 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i12);

        r5 = (android.view.View) $r8;

        r19 = r18;

        if r5 == r3 goto label8;

        if r5 != r2 goto label7;

        r19 = r18;

        goto label8;

     label7:
        $r9 = r0.<android.view.FocusFinder: android.graphics.Rect mOtherRect>;

        virtualinvoke r5.<android.view.View: void getFocusedRect(android.graphics.Rect)>($r9);

        $r10 = r0.<android.view.FocusFinder: android.graphics.Rect mOtherRect>;

        virtualinvoke r2.<android.view.ViewGroup: void offsetDescendantRectToMyCoords(android.view.View,android.graphics.Rect)>(r5, $r10);

        r19 = r18;

        $r12 = r0.<android.view.FocusFinder: android.graphics.Rect mOtherRect>;

        $r11 = r0.<android.view.FocusFinder: android.graphics.Rect mBestCandidateRect>;

        $z0 = virtualinvoke r0.<android.view.FocusFinder: boolean isBetterCandidate(int,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect)>(i0, r4, $r12, $r11);

        if $z0 == 0 goto label8;

        $r14 = r0.<android.view.FocusFinder: android.graphics.Rect mBestCandidateRect>;

        $r13 = r0.<android.view.FocusFinder: android.graphics.Rect mOtherRect>;

        virtualinvoke $r14.<android.graphics.Rect: void set(android.graphics.Rect)>($r13);

        r19 = r5;

     label8:
        i12 = i12 + 1;

        r18 = r19;

        goto label6;

     label9:
        return r18;
    }

    public android.view.View findNextKeyboardNavigationCluster(android.view.View, android.view.View, int)
    {
        android.view.FocusFinder r0;
        android.view.View r1, r3, r4, r5;
        int i0;
        boolean $z0;
        java.lang.Throwable $r2;
        java.util.ArrayList r6;

        r0 := @this: android.view.FocusFinder;

        r3 := @parameter0: android.view.View;

        r1 := @parameter1: android.view.View;

        i0 := @parameter2: int;

        r4 = null;

        if r1 == null goto label1;

        r5 = specialinvoke r0.<android.view.FocusFinder: android.view.View findNextUserSpecifiedKeyboardNavigationCluster(android.view.View,android.view.View,int)>(r3, r1, i0);

        r4 = r5;

        if r5 == null goto label1;

        return r5;

     label1:
        r6 = r0.<android.view.FocusFinder: java.util.ArrayList mTempList>;

     label2:
        virtualinvoke r6.<java.util.ArrayList: void clear()>();

        virtualinvoke r3.<android.view.View: void addKeyboardNavigationClusters(java.util.Collection,int)>(r6, i0);

     label3:
        $z0 = virtualinvoke r6.<java.util.ArrayList: boolean isEmpty()>();

        if $z0 != 0 goto label4;

        r4 = specialinvoke r0.<android.view.FocusFinder: android.view.View findNextKeyboardNavigationCluster(android.view.View,android.view.View,java.util.List,int)>(r3, r1, r6, i0);

     label4:
        virtualinvoke r6.<java.util.ArrayList: void clear()>();

        return r4;

     label5:
        $r2 := @caughtexception;

        virtualinvoke r6.<java.util.ArrayList: void clear()>();

        throw $r2;

        catch java.lang.Throwable from label2 to label3 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    long getWeightedDistanceFor(long, long)
    {
        android.view.FocusFinder r0;
        long l0, l1, $l2, $l3, $l4, $l5;

        r0 := @this: android.view.FocusFinder;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        $l2 = 13L * l0;

        $l4 = $l2 * l0;

        $l3 = l1 * l1;

        $l5 = $l4 + $l3;

        return $l5;
    }

    boolean isBetterCandidate(int, android.graphics.Rect, android.graphics.Rect, android.graphics.Rect)
    {
        android.view.FocusFinder r0;
        int i0, $i1, $i3, $i6, $i8;
        android.graphics.Rect r1, r2, r3;
        boolean z0, $z1, $z2, $z3, z4;
        long $l2, $l4, $l5, $l7, $l9, $l10;
        byte $b11;

        r0 := @this: android.view.FocusFinder;

        i0 := @parameter0: int;

        r1 := @parameter1: android.graphics.Rect;

        r2 := @parameter2: android.graphics.Rect;

        r3 := @parameter3: android.graphics.Rect;

        z0 = virtualinvoke r0.<android.view.FocusFinder: boolean isCandidate(android.graphics.Rect,android.graphics.Rect,int)>(r1, r2, i0);

        z4 = 0;

        if z0 != 0 goto label1;

        return 0;

     label1:
        $z1 = virtualinvoke r0.<android.view.FocusFinder: boolean isCandidate(android.graphics.Rect,android.graphics.Rect,int)>(r1, r3, i0);

        if $z1 != 0 goto label2;

        return 1;

     label2:
        $z2 = virtualinvoke r0.<android.view.FocusFinder: boolean beamBeats(int,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect)>(i0, r1, r2, r3);

        if $z2 == 0 goto label3;

        return 1;

     label3:
        $z3 = virtualinvoke r0.<android.view.FocusFinder: boolean beamBeats(int,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect)>(i0, r1, r3, r2);

        if $z3 == 0 goto label4;

        return 0;

     label4:
        $i1 = staticinvoke <android.view.FocusFinder: int majorAxisDistance(int,android.graphics.Rect,android.graphics.Rect)>(i0, r1, r2);

        $l2 = (long) $i1;

        $i3 = staticinvoke <android.view.FocusFinder: int minorAxisDistance(int,android.graphics.Rect,android.graphics.Rect)>(i0, r1, r2);

        $l4 = (long) $i3;

        $l5 = virtualinvoke r0.<android.view.FocusFinder: long getWeightedDistanceFor(long,long)>($l2, $l4);

        $i6 = staticinvoke <android.view.FocusFinder: int majorAxisDistance(int,android.graphics.Rect,android.graphics.Rect)>(i0, r1, r3);

        $l7 = (long) $i6;

        $i8 = staticinvoke <android.view.FocusFinder: int minorAxisDistance(int,android.graphics.Rect,android.graphics.Rect)>(i0, r1, r3);

        $l9 = (long) $i8;

        $l10 = virtualinvoke r0.<android.view.FocusFinder: long getWeightedDistanceFor(long,long)>($l7, $l9);

        $b11 = $l5 cmp $l10;

        if $b11 >= 0 goto label5;

        z4 = 1;

     label5:
        return z4;
    }

    boolean isCandidate(android.graphics.Rect, android.graphics.Rect, int)
    {
        android.view.FocusFinder r0;
        android.graphics.Rect r1, r2;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24;
        java.lang.IllegalArgumentException $r3;
        boolean z3, z4, z5, z6;

        r0 := @this: android.view.FocusFinder;

        r1 := @parameter0: android.graphics.Rect;

        r2 := @parameter1: android.graphics.Rect;

        i0 := @parameter2: int;

        z3 = 1;

        if i0 == 17 goto label13;

        if i0 == 33 goto label09;

        if i0 == 66 goto label05;

        if i0 != 130 goto label04;

        $i20 = r1.<android.graphics.Rect: int top>;

        $i19 = r2.<android.graphics.Rect: int top>;

        if $i20 < $i19 goto label01;

        $i24 = r1.<android.graphics.Rect: int bottom>;

        $i23 = r2.<android.graphics.Rect: int top>;

        if $i24 > $i23 goto label02;

     label01:
        $i22 = r1.<android.graphics.Rect: int bottom>;

        $i21 = r2.<android.graphics.Rect: int bottom>;

        if $i22 >= $i21 goto label02;

        goto label03;

     label02:
        z3 = 0;

     label03:
        return z3;

     label04:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("direction must be one of {FOCUS_UP, FOCUS_DOWN, FOCUS_LEFT, FOCUS_RIGHT}.");

        throw $r3;

     label05:
        $i14 = r1.<android.graphics.Rect: int left>;

        $i13 = r2.<android.graphics.Rect: int left>;

        if $i14 < $i13 goto label06;

        $i18 = r1.<android.graphics.Rect: int right>;

        $i17 = r2.<android.graphics.Rect: int left>;

        if $i18 > $i17 goto label07;

     label06:
        $i16 = r1.<android.graphics.Rect: int right>;

        $i15 = r2.<android.graphics.Rect: int right>;

        if $i16 >= $i15 goto label07;

        z4 = 1;

        goto label08;

     label07:
        z4 = 0;

     label08:
        return z4;

     label09:
        $i8 = r1.<android.graphics.Rect: int bottom>;

        $i7 = r2.<android.graphics.Rect: int bottom>;

        if $i8 > $i7 goto label10;

        $i12 = r1.<android.graphics.Rect: int top>;

        $i11 = r2.<android.graphics.Rect: int bottom>;

        if $i12 < $i11 goto label11;

     label10:
        $i10 = r1.<android.graphics.Rect: int top>;

        $i9 = r2.<android.graphics.Rect: int top>;

        if $i10 <= $i9 goto label11;

        z5 = 1;

        goto label12;

     label11:
        z5 = 0;

     label12:
        return z5;

     label13:
        $i2 = r1.<android.graphics.Rect: int right>;

        $i1 = r2.<android.graphics.Rect: int right>;

        if $i2 > $i1 goto label14;

        $i6 = r1.<android.graphics.Rect: int left>;

        $i5 = r2.<android.graphics.Rect: int right>;

        if $i6 < $i5 goto label15;

     label14:
        $i4 = r1.<android.graphics.Rect: int left>;

        $i3 = r2.<android.graphics.Rect: int left>;

        if $i4 <= $i3 goto label15;

        z6 = 1;

        goto label16;

     label15:
        z6 = 0;

     label16:
        return z6;
    }

    boolean isToDirectionOf(int, android.graphics.Rect, android.graphics.Rect)
    {
        android.view.FocusFinder r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        android.graphics.Rect r1, r2;
        java.lang.IllegalArgumentException $r3;
        boolean z3, z4, z5, z6;

        r0 := @this: android.view.FocusFinder;

        i0 := @parameter0: int;

        r1 := @parameter1: android.graphics.Rect;

        r2 := @parameter2: android.graphics.Rect;

        z3 = 1;

        if i0 == 17 goto label10;

        if i0 == 33 goto label07;

        if i0 == 66 goto label04;

        if i0 != 130 goto label03;

        $i8 = r1.<android.graphics.Rect: int bottom>;

        $i7 = r2.<android.graphics.Rect: int top>;

        if $i8 > $i7 goto label01;

        goto label02;

     label01:
        z3 = 0;

     label02:
        return z3;

     label03:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("direction must be one of {FOCUS_UP, FOCUS_DOWN, FOCUS_LEFT, FOCUS_RIGHT}.");

        throw $r3;

     label04:
        $i6 = r1.<android.graphics.Rect: int right>;

        $i5 = r2.<android.graphics.Rect: int left>;

        if $i6 > $i5 goto label05;

        z4 = 1;

        goto label06;

     label05:
        z4 = 0;

     label06:
        return z4;

     label07:
        $i4 = r1.<android.graphics.Rect: int top>;

        $i3 = r2.<android.graphics.Rect: int bottom>;

        if $i4 < $i3 goto label08;

        z5 = 1;

        goto label09;

     label08:
        z5 = 0;

     label09:
        return z5;

     label10:
        $i2 = r1.<android.graphics.Rect: int left>;

        $i1 = r2.<android.graphics.Rect: int right>;

        if $i2 < $i1 goto label11;

        z6 = 1;

        goto label12;

     label11:
        z6 = 0;

     label12:
        return z6;
    }
}
