public class android.view.GestureDetector extends java.lang.Object
{
    private static final int DOUBLE_TAP_MIN_TIME;
    private static final int DOUBLE_TAP_TIMEOUT;
    private static final int LONGPRESS_TIMEOUT;
    private static final int LONG_PRESS;
    private static final int SHOW_PRESS;
    private static final java.lang.String TAG;
    private static final int TAP;
    private static final int TAP_TIMEOUT;
    private boolean mAlwaysInBiggerTapRegion;
    private boolean mAlwaysInTapRegion;
    private float mAmbiguousGestureMultiplier;
    private android.view.GestureDetector$OnContextClickListener mContextClickListener;
    private android.view.MotionEvent mCurrentDownEvent;
    private android.view.MotionEvent mCurrentMotionEvent;
    private boolean mDeferConfirmSingleTap;
    private android.view.GestureDetector$OnDoubleTapListener mDoubleTapListener;
    private int mDoubleTapSlopSquare;
    private int mDoubleTapTouchSlopSquare;
    private float mDownFocusX;
    private float mDownFocusY;
    private final android.os.Handler mHandler;
    private boolean mHasRecordedClassification;
    private boolean mIgnoreNextUpEvent;
    private boolean mInContextClick;
    private boolean mInLongPress;
    private final android.view.InputEventConsistencyVerifier mInputEventConsistencyVerifier;
    private boolean mIsDoubleTapping;
    private boolean mIsLongpressEnabled;
    private float mLastFocusX;
    private float mLastFocusY;
    private final android.view.GestureDetector$OnGestureListener mListener;
    private int mMaximumFlingVelocity;
    private int mMinimumFlingVelocity;
    private android.view.MotionEvent mPreviousUpEvent;
    private boolean mStillDown;
    private int mTouchSlopSquare;
    private android.view.VelocityTracker mVelocityTracker;

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;
        int $i0, $i1, $i2, $i3;

        <android.view.GestureDetector: int TAP> = 3;

        <android.view.GestureDetector: int SHOW_PRESS> = 1;

        <android.view.GestureDetector: int LONG_PRESS> = 2;

        $r0 = class "Landroid/view/GestureDetector;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getSimpleName()>();

        <android.view.GestureDetector: java.lang.String TAG> = $r1;

        $i0 = staticinvoke <android.view.ViewConfiguration: int getLongPressTimeout()>();

        <android.view.GestureDetector: int LONGPRESS_TIMEOUT> = $i0;

        $i1 = staticinvoke <android.view.ViewConfiguration: int getTapTimeout()>();

        <android.view.GestureDetector: int TAP_TIMEOUT> = $i1;

        $i2 = staticinvoke <android.view.ViewConfiguration: int getDoubleTapTimeout()>();

        <android.view.GestureDetector: int DOUBLE_TAP_TIMEOUT> = $i2;

        $i3 = staticinvoke <android.view.ViewConfiguration: int getDoubleTapMinTime()>();

        <android.view.GestureDetector: int DOUBLE_TAP_MIN_TIME> = $i3;

        return;
    }

    public void <init>(android.content.Context, android.view.GestureDetector$OnGestureListener)
    {
        android.view.GestureDetector r0;
        android.content.Context r1;
        android.view.GestureDetector$OnGestureListener r2;

        r0 := @this: android.view.GestureDetector;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.view.GestureDetector$OnGestureListener;

        specialinvoke r0.<android.view.GestureDetector: void <init>(android.content.Context,android.view.GestureDetector$OnGestureListener,android.os.Handler)>(r1, r2, null);

        return;
    }

    public void <init>(android.content.Context, android.view.GestureDetector$OnGestureListener, android.os.Handler)
    {
        android.view.GestureDetector r0;
        android.content.Context r1;
        android.view.GestureDetector$OnGestureListener r2;
        android.os.Handler r3;
        boolean $z0, $z1, $z2;
        android.view.GestureDetector$GestureHandler $r4, $r7;
        android.view.GestureDetector$OnContextClickListener $r5;
        android.view.GestureDetector$OnDoubleTapListener $r6;
        android.view.InputEventConsistencyVerifier $r8, r9;

        r0 := @this: android.view.GestureDetector;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.view.GestureDetector$OnGestureListener;

        r3 := @parameter2: android.os.Handler;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $z0 = staticinvoke <android.view.InputEventConsistencyVerifier: boolean isInstrumentationEnabled()>();

        if $z0 == 0 goto label1;

        $r8 = new android.view.InputEventConsistencyVerifier;

        specialinvoke $r8.<android.view.InputEventConsistencyVerifier: void <init>(java.lang.Object,int)>(r0, 0);

        r9 = $r8;

        goto label2;

     label1:
        r9 = null;

     label2:
        r0.<android.view.GestureDetector: android.view.InputEventConsistencyVerifier mInputEventConsistencyVerifier> = r9;

        if r3 == null goto label3;

        $r7 = new android.view.GestureDetector$GestureHandler;

        specialinvoke $r7.<android.view.GestureDetector$GestureHandler: void <init>(android.view.GestureDetector,android.os.Handler)>(r0, r3);

        r0.<android.view.GestureDetector: android.os.Handler mHandler> = $r7;

        goto label4;

     label3:
        $r4 = new android.view.GestureDetector$GestureHandler;

        specialinvoke $r4.<android.view.GestureDetector$GestureHandler: void <init>(android.view.GestureDetector)>(r0);

        r0.<android.view.GestureDetector: android.os.Handler mHandler> = $r4;

     label4:
        r0.<android.view.GestureDetector: android.view.GestureDetector$OnGestureListener mListener> = r2;

        $z1 = r2 instanceof android.view.GestureDetector$OnDoubleTapListener;

        if $z1 == 0 goto label5;

        $r6 = (android.view.GestureDetector$OnDoubleTapListener) r2;

        virtualinvoke r0.<android.view.GestureDetector: void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener)>($r6);

     label5:
        $z2 = r2 instanceof android.view.GestureDetector$OnContextClickListener;

        if $z2 == 0 goto label6;

        $r5 = (android.view.GestureDetector$OnContextClickListener) r2;

        virtualinvoke r0.<android.view.GestureDetector: void setContextClickListener(android.view.GestureDetector$OnContextClickListener)>($r5);

     label6:
        specialinvoke r0.<android.view.GestureDetector: void init(android.content.Context)>(r1);

        return;
    }

    public void <init>(android.content.Context, android.view.GestureDetector$OnGestureListener, android.os.Handler, boolean)
    {
        android.view.GestureDetector r0;
        android.content.Context r1;
        android.view.GestureDetector$OnGestureListener r2;
        android.os.Handler r3;
        boolean z0;

        r0 := @this: android.view.GestureDetector;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.view.GestureDetector$OnGestureListener;

        r3 := @parameter2: android.os.Handler;

        z0 := @parameter3: boolean;

        specialinvoke r0.<android.view.GestureDetector: void <init>(android.content.Context,android.view.GestureDetector$OnGestureListener,android.os.Handler)>(r1, r2, r3);

        return;
    }

    public void <init>(android.view.GestureDetector$OnGestureListener)
    {
        android.view.GestureDetector r0;
        android.view.GestureDetector$OnGestureListener r1;

        r0 := @this: android.view.GestureDetector;

        r1 := @parameter0: android.view.GestureDetector$OnGestureListener;

        specialinvoke r0.<android.view.GestureDetector: void <init>(android.content.Context,android.view.GestureDetector$OnGestureListener,android.os.Handler)>(null, r1, null);

        return;
    }

    public void <init>(android.view.GestureDetector$OnGestureListener, android.os.Handler)
    {
        android.view.GestureDetector r0;
        android.view.GestureDetector$OnGestureListener r1;
        android.os.Handler r2;

        r0 := @this: android.view.GestureDetector;

        r1 := @parameter0: android.view.GestureDetector$OnGestureListener;

        r2 := @parameter1: android.os.Handler;

        specialinvoke r0.<android.view.GestureDetector: void <init>(android.content.Context,android.view.GestureDetector$OnGestureListener,android.os.Handler)>(null, r1, r2);

        return;
    }

    static android.view.MotionEvent access$000(android.view.GestureDetector)
    {
        android.view.GestureDetector r0;
        android.view.MotionEvent $r1;

        r0 := @parameter0: android.view.GestureDetector;

        $r1 = r0.<android.view.GestureDetector: android.view.MotionEvent mCurrentDownEvent>;

        return $r1;
    }

    static android.view.GestureDetector$OnGestureListener access$100(android.view.GestureDetector)
    {
        android.view.GestureDetector r0;
        android.view.GestureDetector$OnGestureListener $r1;

        r0 := @parameter0: android.view.GestureDetector;

        $r1 = r0.<android.view.GestureDetector: android.view.GestureDetector$OnGestureListener mListener>;

        return $r1;
    }

    static void access$200(android.view.GestureDetector, int)
    {
        android.view.GestureDetector r0;
        int i0;

        r0 := @parameter0: android.view.GestureDetector;

        i0 := @parameter1: int;

        specialinvoke r0.<android.view.GestureDetector: void recordGestureClassification(int)>(i0);

        return;
    }

    static void access$300(android.view.GestureDetector)
    {
        android.view.GestureDetector r0;

        r0 := @parameter0: android.view.GestureDetector;

        specialinvoke r0.<android.view.GestureDetector: void dispatchLongPress()>();

        return;
    }

    static android.view.GestureDetector$OnDoubleTapListener access$400(android.view.GestureDetector)
    {
        android.view.GestureDetector r0;
        android.view.GestureDetector$OnDoubleTapListener $r1;

        r0 := @parameter0: android.view.GestureDetector;

        $r1 = r0.<android.view.GestureDetector: android.view.GestureDetector$OnDoubleTapListener mDoubleTapListener>;

        return $r1;
    }

    static boolean access$500(android.view.GestureDetector)
    {
        android.view.GestureDetector r0;
        boolean $z0;

        r0 := @parameter0: android.view.GestureDetector;

        $z0 = r0.<android.view.GestureDetector: boolean mStillDown>;

        return $z0;
    }

    static boolean access$602(android.view.GestureDetector, boolean)
    {
        android.view.GestureDetector r0;
        boolean z0;

        r0 := @parameter0: android.view.GestureDetector;

        z0 := @parameter1: boolean;

        r0.<android.view.GestureDetector: boolean mDeferConfirmSingleTap> = z0;

        return z0;
    }

    private void cancel()
    {
        android.view.GestureDetector r0;
        android.os.Handler $r1, $r2, $r3;
        android.view.VelocityTracker $r4;

        r0 := @this: android.view.GestureDetector;

        $r1 = r0.<android.view.GestureDetector: android.os.Handler mHandler>;

        virtualinvoke $r1.<android.os.Handler: void removeMessages(int)>(1);

        $r2 = r0.<android.view.GestureDetector: android.os.Handler mHandler>;

        virtualinvoke $r2.<android.os.Handler: void removeMessages(int)>(2);

        $r3 = r0.<android.view.GestureDetector: android.os.Handler mHandler>;

        virtualinvoke $r3.<android.os.Handler: void removeMessages(int)>(3);

        $r4 = r0.<android.view.GestureDetector: android.view.VelocityTracker mVelocityTracker>;

        virtualinvoke $r4.<android.view.VelocityTracker: void recycle()>();

        r0.<android.view.GestureDetector: android.view.VelocityTracker mVelocityTracker> = null;

        r0.<android.view.GestureDetector: boolean mIsDoubleTapping> = 0;

        r0.<android.view.GestureDetector: boolean mStillDown> = 0;

        r0.<android.view.GestureDetector: boolean mAlwaysInTapRegion> = 0;

        r0.<android.view.GestureDetector: boolean mAlwaysInBiggerTapRegion> = 0;

        r0.<android.view.GestureDetector: boolean mDeferConfirmSingleTap> = 0;

        r0.<android.view.GestureDetector: boolean mInLongPress> = 0;

        r0.<android.view.GestureDetector: boolean mInContextClick> = 0;

        r0.<android.view.GestureDetector: boolean mIgnoreNextUpEvent> = 0;

        return;
    }

    private void cancelTaps()
    {
        android.view.GestureDetector r0;
        android.os.Handler $r1, $r2, $r3;

        r0 := @this: android.view.GestureDetector;

        $r1 = r0.<android.view.GestureDetector: android.os.Handler mHandler>;

        virtualinvoke $r1.<android.os.Handler: void removeMessages(int)>(1);

        $r2 = r0.<android.view.GestureDetector: android.os.Handler mHandler>;

        virtualinvoke $r2.<android.os.Handler: void removeMessages(int)>(2);

        $r3 = r0.<android.view.GestureDetector: android.os.Handler mHandler>;

        virtualinvoke $r3.<android.os.Handler: void removeMessages(int)>(3);

        r0.<android.view.GestureDetector: boolean mIsDoubleTapping> = 0;

        r0.<android.view.GestureDetector: boolean mAlwaysInTapRegion> = 0;

        r0.<android.view.GestureDetector: boolean mAlwaysInBiggerTapRegion> = 0;

        r0.<android.view.GestureDetector: boolean mDeferConfirmSingleTap> = 0;

        r0.<android.view.GestureDetector: boolean mInLongPress> = 0;

        r0.<android.view.GestureDetector: boolean mInContextClick> = 0;

        r0.<android.view.GestureDetector: boolean mIgnoreNextUpEvent> = 0;

        return;
    }

    private void dispatchLongPress()
    {
        android.view.GestureDetector r0;
        android.os.Handler $r1;
        android.view.MotionEvent $r2;
        android.view.GestureDetector$OnGestureListener $r3;

        r0 := @this: android.view.GestureDetector;

        $r1 = r0.<android.view.GestureDetector: android.os.Handler mHandler>;

        virtualinvoke $r1.<android.os.Handler: void removeMessages(int)>(3);

        r0.<android.view.GestureDetector: boolean mDeferConfirmSingleTap> = 0;

        r0.<android.view.GestureDetector: boolean mInLongPress> = 1;

        $r3 = r0.<android.view.GestureDetector: android.view.GestureDetector$OnGestureListener mListener>;

        $r2 = r0.<android.view.GestureDetector: android.view.MotionEvent mCurrentDownEvent>;

        interfaceinvoke $r3.<android.view.GestureDetector$OnGestureListener: void onLongPress(android.view.MotionEvent)>($r2);

        return;
    }

    private void init(android.content.Context)
    {
        android.view.GestureDetector r0;
        android.view.GestureDetector$OnGestureListener $r2;
        java.lang.NullPointerException $r3;
        boolean $z0, $z1;
        java.lang.IllegalArgumentException $r4;
        java.lang.String $r5;
        int $i1, $i2, i3, i4, i5, $i6, $i7, $i8, $i9, $i10;
        float $f0, $f1;
        android.content.Context r6;
        android.view.ViewConfiguration r7;

        r0 := @this: android.view.GestureDetector;

        r6 := @parameter0: android.content.Context;

        $r2 = r0.<android.view.GestureDetector: android.view.GestureDetector$OnGestureListener mListener>;

        if $r2 == null goto label4;

        r0.<android.view.GestureDetector: boolean mIsLongpressEnabled> = 1;

        if r6 != null goto label1;

        i3 = staticinvoke <android.view.ViewConfiguration: int getTouchSlop()>();

        i4 = i3;

        i5 = staticinvoke <android.view.ViewConfiguration: int getDoubleTapSlop()>();

        $i1 = staticinvoke <android.view.ViewConfiguration: int getMinimumFlingVelocity()>();

        r0.<android.view.GestureDetector: int mMinimumFlingVelocity> = $i1;

        $i2 = staticinvoke <android.view.ViewConfiguration: int getMaximumFlingVelocity()>();

        r0.<android.view.GestureDetector: int mMaximumFlingVelocity> = $i2;

        $f0 = staticinvoke <android.view.ViewConfiguration: float getAmbiguousGestureMultiplier()>();

        r0.<android.view.GestureDetector: float mAmbiguousGestureMultiplier> = $f0;

        goto label3;

     label1:
        $z0 = virtualinvoke r6.<android.content.Context: boolean isUiContext()>();

        if $z0 != 0 goto label2;

        $z1 = staticinvoke <android.os.StrictMode: boolean vmIncorrectContextUseEnabled()>();

        if $z1 == 0 goto label2;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Tried to access UI constants from a non-visual Context.");

        staticinvoke <android.os.StrictMode: void onIncorrectContextUsed(java.lang.String,java.lang.Throwable)>("GestureDetector must be accessed from Activity or other visual Context. Use an Activity or a Context created with Context#createWindowContext(int, Bundle), which are adjusted to the configuration and visual bounds of an area on screen.", $r4);

        $r5 = <android.view.GestureDetector: java.lang.String TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r5, "Tried to access UI constants from a non-visual Context.GestureDetector must be accessed from Activity or other visual Context. Use an Activity or a Context created with Context#createWindowContext(int, Bundle), which are adjusted to the configuration and visual bounds of an area on screen.", $r4);

     label2:
        r7 = staticinvoke <android.view.ViewConfiguration: android.view.ViewConfiguration get(android.content.Context)>(r6);

        i3 = virtualinvoke r7.<android.view.ViewConfiguration: int getScaledTouchSlop()>();

        i4 = virtualinvoke r7.<android.view.ViewConfiguration: int getScaledDoubleTapTouchSlop()>();

        i5 = virtualinvoke r7.<android.view.ViewConfiguration: int getScaledDoubleTapSlop()>();

        $i6 = virtualinvoke r7.<android.view.ViewConfiguration: int getScaledMinimumFlingVelocity()>();

        r0.<android.view.GestureDetector: int mMinimumFlingVelocity> = $i6;

        $i7 = virtualinvoke r7.<android.view.ViewConfiguration: int getScaledMaximumFlingVelocity()>();

        r0.<android.view.GestureDetector: int mMaximumFlingVelocity> = $i7;

        $f1 = virtualinvoke r7.<android.view.ViewConfiguration: float getScaledAmbiguousGestureMultiplier()>();

        r0.<android.view.GestureDetector: float mAmbiguousGestureMultiplier> = $f1;

     label3:
        $i8 = i3 * i3;

        r0.<android.view.GestureDetector: int mTouchSlopSquare> = $i8;

        $i9 = i4 * i4;

        r0.<android.view.GestureDetector: int mDoubleTapTouchSlopSquare> = $i9;

        $i10 = i5 * i5;

        r0.<android.view.GestureDetector: int mDoubleTapSlopSquare> = $i10;

        return;

     label4:
        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>("OnGestureListener must not be null");

        throw $r3;
    }

    private boolean isConsideredDoubleTap(android.view.MotionEvent, android.view.MotionEvent, android.view.MotionEvent)
    {
        android.view.GestureDetector r0;
        android.view.MotionEvent r1, r2, r3;
        boolean z0, z1, z2;
        long l0, $l3, $l4, $l6, $l9;
        int i1, i2, $i5, $i8, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, i20;
        byte $b7, $b10;
        float $f0, $f1, $f2, $f3;

        r0 := @this: android.view.GestureDetector;

        r1 := @parameter0: android.view.MotionEvent;

        r2 := @parameter1: android.view.MotionEvent;

        r3 := @parameter2: android.view.MotionEvent;

        z0 = r0.<android.view.GestureDetector: boolean mAlwaysInBiggerTapRegion>;

        z1 = 0;

        if z0 != 0 goto label1;

        return 0;

     label1:
        $l3 = virtualinvoke r3.<android.view.MotionEvent: long getEventTime()>();

        $l4 = virtualinvoke r2.<android.view.MotionEvent: long getEventTime()>();

        l0 = $l3 - $l4;

        $i5 = <android.view.GestureDetector: int DOUBLE_TAP_TIMEOUT>;

        $l6 = (long) $i5;

        $b7 = l0 cmp $l6;

        if $b7 > 0 goto label8;

        $i8 = <android.view.GestureDetector: int DOUBLE_TAP_MIN_TIME>;

        $l9 = (long) $i8;

        $b10 = l0 cmp $l9;

        if $b10 >= 0 goto label2;

        goto label8;

     label2:
        $f0 = virtualinvoke r1.<android.view.MotionEvent: float getX()>();

        $i11 = (int) $f0;

        $f1 = virtualinvoke r3.<android.view.MotionEvent: float getX()>();

        $i12 = (int) $f1;

        i1 = $i11 - $i12;

        $f2 = virtualinvoke r1.<android.view.MotionEvent: float getY()>();

        $i13 = (int) $f2;

        $f3 = virtualinvoke r3.<android.view.MotionEvent: float getY()>();

        $i14 = (int) $f3;

        i2 = $i13 - $i14;

        $i15 = virtualinvoke r1.<android.view.MotionEvent: int getFlags()>();

        $i16 = $i15 & 8;

        if $i16 == 0 goto label3;

        z2 = 1;

        goto label4;

     label3:
        z2 = 0;

     label4:
        if z2 == 0 goto label5;

        i20 = 0;

        goto label6;

     label5:
        i20 = r0.<android.view.GestureDetector: int mDoubleTapSlopSquare>;

     label6:
        $i18 = i1 * i1;

        $i17 = i2 * i2;

        $i19 = $i18 + $i17;

        if $i19 >= i20 goto label7;

        z1 = 1;

     label7:
        return z1;

     label8:
        return 0;
    }

    private void recordGestureClassification(int)
    {
        android.view.GestureDetector r0;
        int i0, $i4;
        boolean $z0;
        android.view.MotionEvent $r1, $r2, $r5, $r6, $r7, $r8, $r9;
        java.lang.Class $r3;
        java.lang.String $r4;
        long $l1, $l2, $l3;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6;
        double $d0, $d1, $d2;

        r0 := @this: android.view.GestureDetector;

        i0 := @parameter0: int;

        $z0 = r0.<android.view.GestureDetector: boolean mHasRecordedClassification>;

        if $z0 != 0 goto label4;

        if i0 != 0 goto label1;

        goto label4;

     label1:
        $r1 = r0.<android.view.GestureDetector: android.view.MotionEvent mCurrentDownEvent>;

        if $r1 == null goto label3;

        $r2 = r0.<android.view.GestureDetector: android.view.MotionEvent mCurrentMotionEvent>;

        if $r2 != null goto label2;

        goto label3;

     label2:
        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getName()>();

        $l1 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r5 = r0.<android.view.GestureDetector: android.view.MotionEvent mCurrentMotionEvent>;

        $l2 = virtualinvoke $r5.<android.view.MotionEvent: long getDownTime()>();

        $l3 = $l1 - $l2;

        $i4 = (int) $l3;

        $r6 = r0.<android.view.GestureDetector: android.view.MotionEvent mCurrentMotionEvent>;

        $f0 = virtualinvoke $r6.<android.view.MotionEvent: float getRawX()>();

        $r7 = r0.<android.view.GestureDetector: android.view.MotionEvent mCurrentDownEvent>;

        $f1 = virtualinvoke $r7.<android.view.MotionEvent: float getRawX()>();

        $f2 = $f0 - $f1;

        $d0 = (double) $f2;

        $r8 = r0.<android.view.GestureDetector: android.view.MotionEvent mCurrentMotionEvent>;

        $f3 = virtualinvoke $r8.<android.view.MotionEvent: float getRawY()>();

        $r9 = r0.<android.view.GestureDetector: android.view.MotionEvent mCurrentDownEvent>;

        $f4 = virtualinvoke $r9.<android.view.MotionEvent: float getRawY()>();

        $f5 = $f3 - $f4;

        $d1 = (double) $f5;

        $d2 = staticinvoke <java.lang.Math: double hypot(double,double)>($d0, $d1);

        $f6 = (float) $d2;

        staticinvoke <com.android.internal.util.FrameworkStatsLog: void write(int,java.lang.String,int,int,float)>(177, $r4, i0, $i4, $f6);

        r0.<android.view.GestureDetector: boolean mHasRecordedClassification> = 1;

        return;

     label3:
        r0.<android.view.GestureDetector: boolean mHasRecordedClassification> = 1;

        return;

     label4:
        return;
    }

    public boolean isLongpressEnabled()
    {
        android.view.GestureDetector r0;
        boolean $z0;

        r0 := @this: android.view.GestureDetector;

        $z0 = r0.<android.view.GestureDetector: boolean mIsLongpressEnabled>;

        return $z0;
    }

    public boolean onGenericMotionEvent(android.view.MotionEvent)
    {
        android.view.GestureDetector r0;
        android.view.MotionEvent r1;
        android.view.InputEventConsistencyVerifier r2;
        int i0, i1;
        android.view.GestureDetector$OnContextClickListener $r3, $r4;
        boolean $z0, $z1, $z2, $z3;
        android.os.Handler $r5, $r6;

        r0 := @this: android.view.GestureDetector;

        r1 := @parameter0: android.view.MotionEvent;

        r2 = r0.<android.view.GestureDetector: android.view.InputEventConsistencyVerifier mInputEventConsistencyVerifier>;

        if r2 == null goto label1;

        virtualinvoke r2.<android.view.InputEventConsistencyVerifier: void onGenericMotionEvent(android.view.MotionEvent,int)>(r1, 0);

     label1:
        i0 = virtualinvoke r1.<android.view.MotionEvent: int getActionButton()>();

        i1 = virtualinvoke r1.<android.view.MotionEvent: int getActionMasked()>();

        if i1 == 11 goto label4;

        if i1 == 12 goto label2;

        goto label6;

     label2:
        $z3 = r0.<android.view.GestureDetector: boolean mInContextClick>;

        if $z3 == 0 goto label6;

        if i0 == 32 goto label3;

        if i0 != 2 goto label6;

     label3:
        r0.<android.view.GestureDetector: boolean mInContextClick> = 0;

        r0.<android.view.GestureDetector: boolean mIgnoreNextUpEvent> = 1;

        goto label6;

     label4:
        $r3 = r0.<android.view.GestureDetector: android.view.GestureDetector$OnContextClickListener mContextClickListener>;

        if $r3 == null goto label6;

        $z0 = r0.<android.view.GestureDetector: boolean mInContextClick>;

        if $z0 != 0 goto label6;

        $z1 = r0.<android.view.GestureDetector: boolean mInLongPress>;

        if $z1 != 0 goto label6;

        if i0 == 32 goto label5;

        if i0 != 2 goto label6;

     label5:
        $r4 = r0.<android.view.GestureDetector: android.view.GestureDetector$OnContextClickListener mContextClickListener>;

        $z2 = interfaceinvoke $r4.<android.view.GestureDetector$OnContextClickListener: boolean onContextClick(android.view.MotionEvent)>(r1);

        if $z2 == 0 goto label6;

        r0.<android.view.GestureDetector: boolean mInContextClick> = 1;

        $r5 = r0.<android.view.GestureDetector: android.os.Handler mHandler>;

        virtualinvoke $r5.<android.os.Handler: void removeMessages(int)>(2);

        $r6 = r0.<android.view.GestureDetector: android.os.Handler mHandler>;

        virtualinvoke $r6.<android.os.Handler: void removeMessages(int)>(3);

        return 1;

     label6:
        return 0;
    }

    public boolean onTouchEvent(android.view.MotionEvent)
    {
        android.view.GestureDetector r0;
        android.view.MotionEvent r1, $r2, $r6, $r7, $r12, $r14, $r20, $r26, $r30, r46, r49, r52, r54, r55, r57;
        int i0, $i2, $i3, $i4, $i6, $i10, $i13, $i14, $i16, $i20, $i21, $i22, $i26, i28, i29, i30, i31, i32, i33, i34, i35, i36, i37, i38, i39, i40, i41, i42, i43, $i44;
        boolean z0, $z1, $z3, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z17, $z18, $z19, $z20, $z21, $z24, z25, z26, z27, z28, z29, z30, z31, z32, z33, z34, z35;
        float f0, f1, f2, f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25, $f26, $f27, $f28, $f29, $f30, $f31, f32, f33, f34, f35, f36, f37, f38, f39;
        long l1, $l5, $l7, $l8, $l9, $l11, $l12, $l23, $l24, $l25, $l45;
        android.view.VelocityTracker $r3, $r4, $r38, $r39, $r40, $r41, $r42, $r43, $r44, r51, r53;
        android.view.GestureDetector$OnDoubleTapListener $r5, $r15, $r16, $r24, $r37, r50;
        android.os.Handler $r8, $r10, $r13, $r17, $r18, $r19, $r23, $r25, $r28, $r32, $r33, $r34, $r35, r47, r48, $r56, r58;
        android.view.GestureDetector$OnGestureListener $r9, $r21, $r22, $r27, $r31;
        android.os.Message $r11, $r29, $r36;
        byte $b15, $b17, $b18, $b19, $b27;
        android.view.InputEventConsistencyVerifier r45, r59;

        r0 := @this: android.view.GestureDetector;

        r1 := @parameter0: android.view.MotionEvent;

        r45 = r0.<android.view.GestureDetector: android.view.InputEventConsistencyVerifier mInputEventConsistencyVerifier>;

        if r45 == null goto label01;

        virtualinvoke r45.<android.view.InputEventConsistencyVerifier: void onTouchEvent(android.view.MotionEvent,int)>(r1, 0);

     label01:
        i0 = virtualinvoke r1.<android.view.MotionEvent: int getAction()>();

        r46 = r0.<android.view.GestureDetector: android.view.MotionEvent mCurrentMotionEvent>;

        if r46 == null goto label02;

        virtualinvoke r46.<android.view.MotionEvent: void recycle()>();

     label02:
        $r2 = staticinvoke <android.view.MotionEvent: android.view.MotionEvent obtain(android.view.MotionEvent)>(r1);

        r0.<android.view.GestureDetector: android.view.MotionEvent mCurrentMotionEvent> = $r2;

        $r3 = r0.<android.view.GestureDetector: android.view.VelocityTracker mVelocityTracker>;

        if $r3 != null goto label03;

        $r44 = staticinvoke <android.view.VelocityTracker: android.view.VelocityTracker obtain()>();

        r0.<android.view.GestureDetector: android.view.VelocityTracker mVelocityTracker> = $r44;

     label03:
        $r4 = r0.<android.view.GestureDetector: android.view.VelocityTracker mVelocityTracker>;

        virtualinvoke $r4.<android.view.VelocityTracker: void addMovement(android.view.MotionEvent)>(r1);

        $i2 = i0 & 255;

        if $i2 != 6 goto label04;

        z25 = 1;

        goto label05;

     label04:
        z25 = 0;

     label05:
        if z25 == 0 goto label06;

        i28 = virtualinvoke r1.<android.view.MotionEvent: int getActionIndex()>();

        goto label07;

     label06:
        i28 = -1;

     label07:
        $i3 = virtualinvoke r1.<android.view.MotionEvent: int getFlags()>();

        $i4 = $i3 & 8;

        if $i4 == 0 goto label08;

        z26 = 1;

        goto label09;

     label08:
        z26 = 0;

     label09:
        f32 = 0.0F;

        f33 = 0.0F;

        i29 = virtualinvoke r1.<android.view.MotionEvent: int getPointerCount()>();

        i30 = 0;

     label10:
        if i30 >= i29 goto label13;

        if i28 != i30 goto label11;

        goto label12;

     label11:
        $f30 = virtualinvoke r1.<android.view.MotionEvent: float getX(int)>(i30);

        f32 = f32 + $f30;

        $f31 = virtualinvoke r1.<android.view.MotionEvent: float getY(int)>(i30);

        f33 = f33 + $f31;

     label12:
        i30 = i30 + 1;

        goto label10;

     label13:
        if z25 == 0 goto label14;

        i31 = i29 - 1;

        goto label15;

     label14:
        i31 = i29;

     label15:
        $f4 = (float) i31;

        f34 = f32 / $f4;

        $f5 = (float) i31;

        f35 = f33 / $f5;

        i32 = i0 & 255;

        if i32 == 0 goto label55;

        if i32 == 1 goto label46;

        if i32 == 2 goto label23;

        if i32 == 3 goto label22;

        if i32 == 5 goto label21;

        if i32 == 6 goto label16;

        goto label45;

     label16:
        r0.<android.view.GestureDetector: float mLastFocusX> = f34;

        r0.<android.view.GestureDetector: float mDownFocusX> = f34;

        r0.<android.view.GestureDetector: float mLastFocusY> = f35;

        r0.<android.view.GestureDetector: float mDownFocusY> = f35;

        $r38 = r0.<android.view.GestureDetector: android.view.VelocityTracker mVelocityTracker>;

        $i26 = r0.<android.view.GestureDetector: int mMaximumFlingVelocity>;

        $f24 = (float) $i26;

        virtualinvoke $r38.<android.view.VelocityTracker: void computeCurrentVelocity(int,float)>(1000, $f24);

        i33 = virtualinvoke r1.<android.view.MotionEvent: int getActionIndex()>();

        i34 = virtualinvoke r1.<android.view.MotionEvent: int getPointerId(int)>(i33);

        $r39 = r0.<android.view.GestureDetector: android.view.VelocityTracker mVelocityTracker>;

        f36 = virtualinvoke $r39.<android.view.VelocityTracker: float getXVelocity(int)>(i34);

        $r40 = r0.<android.view.GestureDetector: android.view.VelocityTracker mVelocityTracker>;

        f37 = virtualinvoke $r40.<android.view.VelocityTracker: float getYVelocity(int)>(i34);

        i35 = 0;

     label17:
        if i35 >= i29 goto label20;

        if i35 != i33 goto label18;

        goto label19;

     label18:
        i36 = virtualinvoke r1.<android.view.MotionEvent: int getPointerId(int)>(i35);

        $r41 = r0.<android.view.GestureDetector: android.view.VelocityTracker mVelocityTracker>;

        $f25 = virtualinvoke $r41.<android.view.VelocityTracker: float getXVelocity(int)>(i36);

        $f26 = $f25 * f36;

        $r42 = r0.<android.view.GestureDetector: android.view.VelocityTracker mVelocityTracker>;

        $f27 = virtualinvoke $r42.<android.view.VelocityTracker: float getYVelocity(int)>(i36);

        $f28 = $f27 * f37;

        $f29 = $f26 + $f28;

        $b27 = $f29 cmpg 0.0F;

        if $b27 >= 0 goto label19;

        $r43 = r0.<android.view.GestureDetector: android.view.VelocityTracker mVelocityTracker>;

        virtualinvoke $r43.<android.view.VelocityTracker: void clear()>();

        goto label20;

     label19:
        i35 = i35 + 1;

        goto label17;

     label20:
        goto label45;

     label21:
        r0.<android.view.GestureDetector: float mLastFocusX> = f34;

        r0.<android.view.GestureDetector: float mDownFocusX> = f34;

        r0.<android.view.GestureDetector: float mLastFocusY> = f35;

        r0.<android.view.GestureDetector: float mDownFocusY> = f35;

        specialinvoke r0.<android.view.GestureDetector: void cancelTaps()>();

        goto label45;

     label22:
        specialinvoke r0.<android.view.GestureDetector: void cancel()>();

        goto label45;

     label23:
        $z18 = r0.<android.view.GestureDetector: boolean mInLongPress>;

        if $z18 != 0 goto label45;

        $z19 = r0.<android.view.GestureDetector: boolean mInContextClick>;

        if $z19 == 0 goto label24;

        goto label45;

     label24:
        i37 = virtualinvoke r1.<android.view.MotionEvent: int getClassification()>();

        $r25 = r0.<android.view.GestureDetector: android.os.Handler mHandler>;

        z0 = virtualinvoke $r25.<android.os.Handler: boolean hasMessages(int)>(2);

        $f11 = r0.<android.view.GestureDetector: float mLastFocusX>;

        f0 = $f11 - f34;

        $f12 = r0.<android.view.GestureDetector: float mLastFocusY>;

        f1 = $f12 - f35;

        $z20 = r0.<android.view.GestureDetector: boolean mIsDoubleTapping>;

        if $z20 == 0 goto label25;

        specialinvoke r0.<android.view.GestureDetector: void recordGestureClassification(int)>(2);

        $r37 = r0.<android.view.GestureDetector: android.view.GestureDetector$OnDoubleTapListener mDoubleTapListener>;

        $z24 = interfaceinvoke $r37.<android.view.GestureDetector$OnDoubleTapListener: boolean onDoubleTapEvent(android.view.MotionEvent)>(r1);

        z27 = $z24 | 0;

        goto label42;

     label25:
        $z21 = r0.<android.view.GestureDetector: boolean mAlwaysInTapRegion>;

        if $z21 == 0 goto label39;

        $f15 = r0.<android.view.GestureDetector: float mDownFocusX>;

        $f16 = f34 - $f15;

        i38 = (int) $f16;

        $f17 = r0.<android.view.GestureDetector: float mDownFocusY>;

        $f18 = f35 - $f17;

        i39 = (int) $f18;

        $i21 = i38 * i38;

        $i20 = i39 * i39;

        i40 = $i21 + $i20;

        if z26 == 0 goto label26;

        i41 = 0;

        goto label27;

     label26:
        i41 = r0.<android.view.GestureDetector: int mTouchSlopSquare>;

     label27:
        if i37 != 1 goto label28;

        z28 = 1;

        goto label29;

     label28:
        z28 = 0;

     label29:
        if z0 == 0 goto label30;

        if z28 == 0 goto label30;

        z29 = 1;

        goto label31;

     label30:
        z29 = 0;

     label31:
        if z29 == 0 goto label33;

        if i40 <= i41 goto label32;

        $r35 = r0.<android.view.GestureDetector: android.os.Handler mHandler>;

        virtualinvoke $r35.<android.os.Handler: void removeMessages(int)>(2);

        $i22 = staticinvoke <android.view.ViewConfiguration: int getLongPressTimeout()>();

        l1 = (long) $i22;

        r47 = r0.<android.view.GestureDetector: android.os.Handler mHandler>;

        $r36 = virtualinvoke r47.<android.os.Handler: android.os.Message obtainMessage(int,int,int)>(2, 3, 0);

        $l23 = virtualinvoke r1.<android.view.MotionEvent: long getDownTime()>();

        $f22 = (float) l1;

        $f21 = r0.<android.view.GestureDetector: float mAmbiguousGestureMultiplier>;

        $f23 = $f22 * $f21;

        $l24 = (long) $f23;

        $l25 = $l23 + $l24;

        virtualinvoke r47.<android.os.Handler: boolean sendMessageAtTime(android.os.Message,long)>($r36, $l25);

        goto label32;

     label32:
        f2 = (float) i41;

        f3 = r0.<android.view.GestureDetector: float mAmbiguousGestureMultiplier>;

        $f19 = f3 * f3;

        $f20 = f2 * $f19;

        i41 = (int) $f20;

        goto label33;

     label33:
        if i40 <= i41 goto label34;

        specialinvoke r0.<android.view.GestureDetector: void recordGestureClassification(int)>(5);

        $r31 = r0.<android.view.GestureDetector: android.view.GestureDetector$OnGestureListener mListener>;

        $r30 = r0.<android.view.GestureDetector: android.view.MotionEvent mCurrentDownEvent>;

        z27 = interfaceinvoke $r31.<android.view.GestureDetector$OnGestureListener: boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float)>($r30, r1, f0, f1);

        r0.<android.view.GestureDetector: float mLastFocusX> = f34;

        r0.<android.view.GestureDetector: float mLastFocusY> = f35;

        r0.<android.view.GestureDetector: boolean mAlwaysInTapRegion> = 0;

        $r32 = r0.<android.view.GestureDetector: android.os.Handler mHandler>;

        virtualinvoke $r32.<android.os.Handler: void removeMessages(int)>(3);

        $r33 = r0.<android.view.GestureDetector: android.os.Handler mHandler>;

        virtualinvoke $r33.<android.os.Handler: void removeMessages(int)>(1);

        $r34 = r0.<android.view.GestureDetector: android.os.Handler mHandler>;

        virtualinvoke $r34.<android.os.Handler: void removeMessages(int)>(2);

        goto label35;

     label34:
        z27 = 0;

     label35:
        if z26 == 0 goto label36;

        i42 = 0;

        goto label37;

     label36:
        i42 = r0.<android.view.GestureDetector: int mDoubleTapTouchSlopSquare>;

     label37:
        if i40 <= i42 goto label38;

        r0.<android.view.GestureDetector: boolean mAlwaysInBiggerTapRegion> = 0;

     label38:
        goto label42;

     label39:
        $f13 = staticinvoke <java.lang.Math: float abs(float)>(f0);

        $b18 = $f13 cmpl 1.0F;

        if $b18 >= 0 goto label41;

        $f14 = staticinvoke <java.lang.Math: float abs(float)>(f1);

        $b19 = $f14 cmpl 1.0F;

        if $b19 < 0 goto label40;

        goto label41;

     label40:
        z27 = 0;

        goto label42;

     label41:
        specialinvoke r0.<android.view.GestureDetector: void recordGestureClassification(int)>(5);

        $r27 = r0.<android.view.GestureDetector: android.view.GestureDetector$OnGestureListener mListener>;

        $r26 = r0.<android.view.GestureDetector: android.view.MotionEvent mCurrentDownEvent>;

        z27 = interfaceinvoke $r27.<android.view.GestureDetector$OnGestureListener: boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float)>($r26, r1, f0, f1);

        r0.<android.view.GestureDetector: float mLastFocusX> = f34;

        r0.<android.view.GestureDetector: float mLastFocusY> = f35;

     label42:
        if i37 != 2 goto label43;

        z30 = 1;

        goto label44;

     label43:
        z30 = 0;

     label44:
        z31 = z27;

        if z30 == 0 goto label62;

        z31 = z27;

        if z0 == 0 goto label62;

        $r28 = r0.<android.view.GestureDetector: android.os.Handler mHandler>;

        virtualinvoke $r28.<android.os.Handler: void removeMessages(int)>(2);

        r48 = r0.<android.view.GestureDetector: android.os.Handler mHandler>;

        $r29 = virtualinvoke r48.<android.os.Handler: android.os.Message obtainMessage(int,int,int)>(2, 4, 0);

        virtualinvoke r48.<android.os.Handler: boolean sendMessage(android.os.Message)>($r29);

        z31 = z27;

        goto label62;

     label45:
        z31 = 0;

        goto label62;

     label46:
        r0.<android.view.GestureDetector: boolean mStillDown> = 0;

        r49 = staticinvoke <android.view.MotionEvent: android.view.MotionEvent obtain(android.view.MotionEvent)>(r1);

        $z10 = r0.<android.view.GestureDetector: boolean mIsDoubleTapping>;

        if $z10 == 0 goto label47;

        specialinvoke r0.<android.view.GestureDetector: void recordGestureClassification(int)>(2);

        $r24 = r0.<android.view.GestureDetector: android.view.GestureDetector$OnDoubleTapListener mDoubleTapListener>;

        $z17 = interfaceinvoke $r24.<android.view.GestureDetector$OnDoubleTapListener: boolean onDoubleTapEvent(android.view.MotionEvent)>(r1);

        z32 = 0 | $z17;

        goto label52;

     label47:
        $z11 = r0.<android.view.GestureDetector: boolean mInLongPress>;

        if $z11 == 0 goto label48;

        $r23 = r0.<android.view.GestureDetector: android.os.Handler mHandler>;

        virtualinvoke $r23.<android.os.Handler: void removeMessages(int)>(3);

        r0.<android.view.GestureDetector: boolean mInLongPress> = 0;

        goto label51;

     label48:
        $z12 = r0.<android.view.GestureDetector: boolean mAlwaysInTapRegion>;

        if $z12 == 0 goto label49;

        $z14 = r0.<android.view.GestureDetector: boolean mIgnoreNextUpEvent>;

        if $z14 != 0 goto label49;

        specialinvoke r0.<android.view.GestureDetector: void recordGestureClassification(int)>(1);

        $r22 = r0.<android.view.GestureDetector: android.view.GestureDetector$OnGestureListener mListener>;

        z33 = interfaceinvoke $r22.<android.view.GestureDetector$OnGestureListener: boolean onSingleTapUp(android.view.MotionEvent)>(r1);

        z32 = z33;

        $z15 = r0.<android.view.GestureDetector: boolean mDeferConfirmSingleTap>;

        if $z15 == 0 goto label52;

        r50 = r0.<android.view.GestureDetector: android.view.GestureDetector$OnDoubleTapListener mDoubleTapListener>;

        z32 = z33;

        if r50 == null goto label52;

        interfaceinvoke r50.<android.view.GestureDetector$OnDoubleTapListener: boolean onSingleTapConfirmed(android.view.MotionEvent)>(r1);

        z32 = z33;

        goto label52;

     label49:
        $z13 = r0.<android.view.GestureDetector: boolean mIgnoreNextUpEvent>;

        if $z13 != 0 goto label51;

        r51 = r0.<android.view.GestureDetector: android.view.VelocityTracker mVelocityTracker>;

        i43 = virtualinvoke r1.<android.view.MotionEvent: int getPointerId(int)>(0);

        $i13 = r0.<android.view.GestureDetector: int mMaximumFlingVelocity>;

        $f6 = (float) $i13;

        virtualinvoke r51.<android.view.VelocityTracker: void computeCurrentVelocity(int,float)>(1000, $f6);

        f38 = virtualinvoke r51.<android.view.VelocityTracker: float getYVelocity(int)>(i43);

        f39 = virtualinvoke r51.<android.view.VelocityTracker: float getXVelocity(int)>(i43);

        $f7 = staticinvoke <java.lang.Math: float abs(float)>(f38);

        $i14 = r0.<android.view.GestureDetector: int mMinimumFlingVelocity>;

        $f8 = (float) $i14;

        $b15 = $f7 cmpl $f8;

        if $b15 > 0 goto label50;

        $f9 = staticinvoke <java.lang.Math: float abs(float)>(f39);

        $i16 = r0.<android.view.GestureDetector: int mMinimumFlingVelocity>;

        $f10 = (float) $i16;

        $b17 = $f9 cmpl $f10;

        if $b17 <= 0 goto label51;

     label50:
        $r21 = r0.<android.view.GestureDetector: android.view.GestureDetector$OnGestureListener mListener>;

        $r20 = r0.<android.view.GestureDetector: android.view.MotionEvent mCurrentDownEvent>;

        z32 = interfaceinvoke $r21.<android.view.GestureDetector$OnGestureListener: boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float)>($r20, r1, f39, f38);

        goto label52;

     label51:
        z32 = 0;

     label52:
        r52 = r0.<android.view.GestureDetector: android.view.MotionEvent mPreviousUpEvent>;

        if r52 == null goto label53;

        virtualinvoke r52.<android.view.MotionEvent: void recycle()>();

     label53:
        r0.<android.view.GestureDetector: android.view.MotionEvent mPreviousUpEvent> = r49;

        r53 = r0.<android.view.GestureDetector: android.view.VelocityTracker mVelocityTracker>;

        if r53 == null goto label54;

        virtualinvoke r53.<android.view.VelocityTracker: void recycle()>();

        r0.<android.view.GestureDetector: android.view.VelocityTracker mVelocityTracker> = null;

     label54:
        r0.<android.view.GestureDetector: boolean mIsDoubleTapping> = 0;

        r0.<android.view.GestureDetector: boolean mDeferConfirmSingleTap> = 0;

        r0.<android.view.GestureDetector: boolean mIgnoreNextUpEvent> = 0;

        $r18 = r0.<android.view.GestureDetector: android.os.Handler mHandler>;

        virtualinvoke $r18.<android.os.Handler: void removeMessages(int)>(1);

        $r19 = r0.<android.view.GestureDetector: android.os.Handler mHandler>;

        virtualinvoke $r19.<android.os.Handler: void removeMessages(int)>(2);

        z31 = z32;

        goto label62;

     label55:
        $r5 = r0.<android.view.GestureDetector: android.view.GestureDetector$OnDoubleTapListener mDoubleTapListener>;

        if $r5 == null goto label58;

        $r13 = r0.<android.view.GestureDetector: android.os.Handler mHandler>;

        z34 = virtualinvoke $r13.<android.os.Handler: boolean hasMessages(int)>(3);

        if z34 == 0 goto label56;

        $r17 = r0.<android.view.GestureDetector: android.os.Handler mHandler>;

        virtualinvoke $r17.<android.os.Handler: void removeMessages(int)>(3);

     label56:
        r54 = r0.<android.view.GestureDetector: android.view.MotionEvent mCurrentDownEvent>;

        if r54 == null goto label57;

        r55 = r0.<android.view.GestureDetector: android.view.MotionEvent mPreviousUpEvent>;

        if r55 == null goto label57;

        if z34 == 0 goto label57;

        $z6 = specialinvoke r0.<android.view.GestureDetector: boolean isConsideredDoubleTap(android.view.MotionEvent,android.view.MotionEvent,android.view.MotionEvent)>(r54, r55, r1);

        if $z6 == 0 goto label57;

        r0.<android.view.GestureDetector: boolean mIsDoubleTapping> = 1;

        specialinvoke r0.<android.view.GestureDetector: void recordGestureClassification(int)>(2);

        $r15 = r0.<android.view.GestureDetector: android.view.GestureDetector$OnDoubleTapListener mDoubleTapListener>;

        $r14 = r0.<android.view.GestureDetector: android.view.MotionEvent mCurrentDownEvent>;

        $z7 = interfaceinvoke $r15.<android.view.GestureDetector$OnDoubleTapListener: boolean onDoubleTap(android.view.MotionEvent)>($r14);

        $z8 = 0 | $z7;

        $r16 = r0.<android.view.GestureDetector: android.view.GestureDetector$OnDoubleTapListener mDoubleTapListener>;

        $z9 = interfaceinvoke $r16.<android.view.GestureDetector$OnDoubleTapListener: boolean onDoubleTapEvent(android.view.MotionEvent)>(r1);

        z35 = $z8 | $z9;

        goto label59;

     label57:
        $r56 = r0.<android.view.GestureDetector: android.os.Handler mHandler>;

        $i44 = <android.view.GestureDetector: int DOUBLE_TAP_TIMEOUT>;

        $l45 = (long) $i44;

        virtualinvoke $r56.<android.os.Handler: boolean sendEmptyMessageDelayed(int,long)>(3, $l45);

     label58:
        z35 = 0;

     label59:
        r0.<android.view.GestureDetector: float mLastFocusX> = f34;

        r0.<android.view.GestureDetector: float mDownFocusX> = f34;

        r0.<android.view.GestureDetector: float mLastFocusY> = f35;

        r0.<android.view.GestureDetector: float mDownFocusY> = f35;

        r57 = r0.<android.view.GestureDetector: android.view.MotionEvent mCurrentDownEvent>;

        if r57 == null goto label60;

        virtualinvoke r57.<android.view.MotionEvent: void recycle()>();

     label60:
        $r6 = staticinvoke <android.view.MotionEvent: android.view.MotionEvent obtain(android.view.MotionEvent)>(r1);

        r0.<android.view.GestureDetector: android.view.MotionEvent mCurrentDownEvent> = $r6;

        r0.<android.view.GestureDetector: boolean mAlwaysInTapRegion> = 1;

        r0.<android.view.GestureDetector: boolean mAlwaysInBiggerTapRegion> = 1;

        r0.<android.view.GestureDetector: boolean mStillDown> = 1;

        r0.<android.view.GestureDetector: boolean mInLongPress> = 0;

        r0.<android.view.GestureDetector: boolean mDeferConfirmSingleTap> = 0;

        r0.<android.view.GestureDetector: boolean mHasRecordedClassification> = 0;

        $z1 = r0.<android.view.GestureDetector: boolean mIsLongpressEnabled>;

        if $z1 == 0 goto label61;

        $r10 = r0.<android.view.GestureDetector: android.os.Handler mHandler>;

        virtualinvoke $r10.<android.os.Handler: void removeMessages(int)>(2);

        r58 = r0.<android.view.GestureDetector: android.os.Handler mHandler>;

        $r11 = virtualinvoke r58.<android.os.Handler: android.os.Message obtainMessage(int,int,int)>(2, 3, 0);

        $r12 = r0.<android.view.GestureDetector: android.view.MotionEvent mCurrentDownEvent>;

        $l9 = virtualinvoke $r12.<android.view.MotionEvent: long getDownTime()>();

        $i10 = staticinvoke <android.view.ViewConfiguration: int getLongPressTimeout()>();

        $l11 = (long) $i10;

        $l12 = $l9 + $l11;

        virtualinvoke r58.<android.os.Handler: boolean sendMessageAtTime(android.os.Message,long)>($r11, $l12);

     label61:
        $r8 = r0.<android.view.GestureDetector: android.os.Handler mHandler>;

        $r7 = r0.<android.view.GestureDetector: android.view.MotionEvent mCurrentDownEvent>;

        $l5 = virtualinvoke $r7.<android.view.MotionEvent: long getDownTime()>();

        $i6 = <android.view.GestureDetector: int TAP_TIMEOUT>;

        $l7 = (long) $i6;

        $l8 = $l5 + $l7;

        virtualinvoke $r8.<android.os.Handler: boolean sendEmptyMessageAtTime(int,long)>(1, $l8);

        $r9 = r0.<android.view.GestureDetector: android.view.GestureDetector$OnGestureListener mListener>;

        $z3 = interfaceinvoke $r9.<android.view.GestureDetector$OnGestureListener: boolean onDown(android.view.MotionEvent)>(r1);

        z31 = z35 | $z3;

     label62:
        if z31 != 0 goto label63;

        r59 = r0.<android.view.GestureDetector: android.view.InputEventConsistencyVerifier mInputEventConsistencyVerifier>;

        if r59 == null goto label63;

        virtualinvoke r59.<android.view.InputEventConsistencyVerifier: void onUnhandledEvent(android.view.InputEvent,int)>(r1, 0);

     label63:
        return z31;
    }

    public void setContextClickListener(android.view.GestureDetector$OnContextClickListener)
    {
        android.view.GestureDetector r0;
        android.view.GestureDetector$OnContextClickListener r1;

        r0 := @this: android.view.GestureDetector;

        r1 := @parameter0: android.view.GestureDetector$OnContextClickListener;

        r0.<android.view.GestureDetector: android.view.GestureDetector$OnContextClickListener mContextClickListener> = r1;

        return;
    }

    public void setIsLongpressEnabled(boolean)
    {
        android.view.GestureDetector r0;
        boolean z0;

        r0 := @this: android.view.GestureDetector;

        z0 := @parameter0: boolean;

        r0.<android.view.GestureDetector: boolean mIsLongpressEnabled> = z0;

        return;
    }

    public void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener)
    {
        android.view.GestureDetector r0;
        android.view.GestureDetector$OnDoubleTapListener r1;

        r0 := @this: android.view.GestureDetector;

        r1 := @parameter0: android.view.GestureDetector$OnDoubleTapListener;

        r0.<android.view.GestureDetector: android.view.GestureDetector$OnDoubleTapListener mDoubleTapListener> = r1;

        return;
    }
}
