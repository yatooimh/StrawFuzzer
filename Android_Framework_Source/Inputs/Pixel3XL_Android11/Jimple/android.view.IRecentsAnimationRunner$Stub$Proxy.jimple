class android.view.IRecentsAnimationRunner$Stub$Proxy extends java.lang.Object implements android.view.IRecentsAnimationRunner
{
    public static android.view.IRecentsAnimationRunner sDefaultImpl;
    private android.os.IBinder mRemote;

    void <init>(android.os.IBinder)
    {
        android.view.IRecentsAnimationRunner$Stub$Proxy r0;
        android.os.IBinder r1;

        r0 := @this: android.view.IRecentsAnimationRunner$Stub$Proxy;

        r1 := @parameter0: android.os.IBinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.view.IRecentsAnimationRunner$Stub$Proxy: android.os.IBinder mRemote> = r1;

        return;
    }

    public android.os.IBinder asBinder()
    {
        android.view.IRecentsAnimationRunner$Stub$Proxy r0;
        android.os.IBinder $r1;

        r0 := @this: android.view.IRecentsAnimationRunner$Stub$Proxy;

        $r1 = r0.<android.view.IRecentsAnimationRunner$Stub$Proxy: android.os.IBinder mRemote>;

        return $r1;
    }

    public java.lang.String getInterfaceDescriptor()
    {
        android.view.IRecentsAnimationRunner$Stub$Proxy r0;

        r0 := @this: android.view.IRecentsAnimationRunner$Stub$Proxy;

        return "android.view.IRecentsAnimationRunner";
    }

    public void onAnimationCanceled(android.app.ActivityManager$TaskSnapshot) throws android.os.RemoteException
    {
        android.view.IRecentsAnimationRunner$Stub$Proxy r0;
        android.os.Parcel r1;
        android.os.IBinder $r2;
        boolean $z0;
        android.view.IRecentsAnimationRunner $r3, $r4;
        java.lang.Throwable $r5;
        android.app.ActivityManager$TaskSnapshot r6;

        r0 := @this: android.view.IRecentsAnimationRunner$Stub$Proxy;

        r6 := @parameter0: android.app.ActivityManager$TaskSnapshot;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IRecentsAnimationRunner");

     label2:
        if r6 == null goto label5;

     label3:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r6.<android.app.ActivityManager$TaskSnapshot: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label4:
        goto label6;

     label5:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label6:
        $r2 = r0.<android.view.IRecentsAnimationRunner$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r2.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(2, r1, null, 1);

        if $z0 != 0 goto label8;

        $r3 = staticinvoke <android.view.IRecentsAnimationRunner$Stub: android.view.IRecentsAnimationRunner getDefaultImpl()>();

        if $r3 == null goto label8;

        $r4 = staticinvoke <android.view.IRecentsAnimationRunner$Stub: android.view.IRecentsAnimationRunner getDefaultImpl()>();

        interfaceinvoke $r4.<android.view.IRecentsAnimationRunner: void onAnimationCanceled(android.app.ActivityManager$TaskSnapshot)>(r6);

     label7:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label8:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label9:
        $r5 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.Throwable from label3 to label4 with label9;
        catch java.lang.Throwable from label5 to label6 with label9;
        catch java.lang.Throwable from label6 to label7 with label9;
    }

    public void onAnimationStart(android.view.IRecentsAnimationController, android.view.RemoteAnimationTarget[], android.view.RemoteAnimationTarget[], android.graphics.Rect, android.graphics.Rect) throws android.os.RemoteException
    {
        android.view.IRecentsAnimationRunner$Stub$Proxy r0;
        android.view.RemoteAnimationTarget[] r1, r2;
        android.graphics.Rect r3, r4;
        android.os.Parcel r5;
        android.os.IBinder $r6, r11;
        boolean $z0;
        android.view.IRecentsAnimationRunner $r7, $r8;
        java.lang.Throwable $r9;
        android.view.IRecentsAnimationController r10;

        r0 := @this: android.view.IRecentsAnimationRunner$Stub$Proxy;

        r10 := @parameter0: android.view.IRecentsAnimationController;

        r1 := @parameter1: android.view.RemoteAnimationTarget[];

        r2 := @parameter2: android.view.RemoteAnimationTarget[];

        r3 := @parameter3: android.graphics.Rect;

        r4 := @parameter4: android.graphics.Rect;

        r5 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r5.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IRecentsAnimationRunner");

     label02:
        if r10 == null goto label05;

     label03:
        r11 = interfaceinvoke r10.<android.view.IRecentsAnimationController: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r11 = null;

     label06:
        virtualinvoke r5.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r11);

        virtualinvoke r5.<android.os.Parcel: void writeTypedArray(android.os.Parcelable[],int)>(r1, 0);

        virtualinvoke r5.<android.os.Parcel: void writeTypedArray(android.os.Parcelable[],int)>(r2, 0);

     label07:
        if r3 == null goto label10;

     label08:
        virtualinvoke r5.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r3.<android.graphics.Rect: void writeToParcel(android.os.Parcel,int)>(r5, 0);

     label09:
        goto label11;

     label10:
        virtualinvoke r5.<android.os.Parcel: void writeInt(int)>(0);

     label11:
        if r4 == null goto label14;

     label12:
        virtualinvoke r5.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r4.<android.graphics.Rect: void writeToParcel(android.os.Parcel,int)>(r5, 0);

     label13:
        goto label15;

     label14:
        virtualinvoke r5.<android.os.Parcel: void writeInt(int)>(0);

     label15:
        $r6 = r0.<android.view.IRecentsAnimationRunner$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(3, r5, null, 1);

        if $z0 != 0 goto label17;

        $r7 = staticinvoke <android.view.IRecentsAnimationRunner$Stub: android.view.IRecentsAnimationRunner getDefaultImpl()>();

        if $r7 == null goto label17;

        $r8 = staticinvoke <android.view.IRecentsAnimationRunner$Stub: android.view.IRecentsAnimationRunner getDefaultImpl()>();

        interfaceinvoke $r8.<android.view.IRecentsAnimationRunner: void onAnimationStart(android.view.IRecentsAnimationController,android.view.RemoteAnimationTarget[],android.view.RemoteAnimationTarget[],android.graphics.Rect,android.graphics.Rect)>(r10, r1, r2, r3, r4);

     label16:
        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        return;

     label17:
        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        return;

     label18:
        $r9 := @caughtexception;

        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        throw $r9;

        catch java.lang.Throwable from label01 to label02 with label18;
        catch java.lang.Throwable from label03 to label04 with label18;
        catch java.lang.Throwable from label06 to label07 with label18;
        catch java.lang.Throwable from label08 to label09 with label18;
        catch java.lang.Throwable from label10 to label11 with label18;
        catch java.lang.Throwable from label12 to label13 with label18;
        catch java.lang.Throwable from label14 to label15 with label18;
        catch java.lang.Throwable from label15 to label16 with label18;
    }

    public void onTaskAppeared(android.view.RemoteAnimationTarget) throws android.os.RemoteException
    {
        android.view.IRecentsAnimationRunner$Stub$Proxy r0;
        android.os.Parcel r1;
        android.os.IBinder $r2;
        boolean $z0;
        android.view.IRecentsAnimationRunner $r3, $r4;
        java.lang.Throwable $r5;
        android.view.RemoteAnimationTarget r6;

        r0 := @this: android.view.IRecentsAnimationRunner$Stub$Proxy;

        r6 := @parameter0: android.view.RemoteAnimationTarget;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IRecentsAnimationRunner");

     label2:
        if r6 == null goto label5;

     label3:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r6.<android.view.RemoteAnimationTarget: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label4:
        goto label6;

     label5:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label6:
        $r2 = r0.<android.view.IRecentsAnimationRunner$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r2.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(4, r1, null, 1);

        if $z0 != 0 goto label8;

        $r3 = staticinvoke <android.view.IRecentsAnimationRunner$Stub: android.view.IRecentsAnimationRunner getDefaultImpl()>();

        if $r3 == null goto label8;

        $r4 = staticinvoke <android.view.IRecentsAnimationRunner$Stub: android.view.IRecentsAnimationRunner getDefaultImpl()>();

        interfaceinvoke $r4.<android.view.IRecentsAnimationRunner: void onTaskAppeared(android.view.RemoteAnimationTarget)>(r6);

     label7:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label8:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label9:
        $r5 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.Throwable from label3 to label4 with label9;
        catch java.lang.Throwable from label5 to label6 with label9;
        catch java.lang.Throwable from label6 to label7 with label9;
    }
}
