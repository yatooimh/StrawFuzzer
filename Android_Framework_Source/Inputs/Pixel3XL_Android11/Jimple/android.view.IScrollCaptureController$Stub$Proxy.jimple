class android.view.IScrollCaptureController$Stub$Proxy extends java.lang.Object implements android.view.IScrollCaptureController
{
    public static android.view.IScrollCaptureController sDefaultImpl;
    private android.os.IBinder mRemote;

    void <init>(android.os.IBinder)
    {
        android.view.IScrollCaptureController$Stub$Proxy r0;
        android.os.IBinder r1;

        r0 := @this: android.view.IScrollCaptureController$Stub$Proxy;

        r1 := @parameter0: android.os.IBinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.view.IScrollCaptureController$Stub$Proxy: android.os.IBinder mRemote> = r1;

        return;
    }

    public android.os.IBinder asBinder()
    {
        android.view.IScrollCaptureController$Stub$Proxy r0;
        android.os.IBinder $r1;

        r0 := @this: android.view.IScrollCaptureController$Stub$Proxy;

        $r1 = r0.<android.view.IScrollCaptureController$Stub$Proxy: android.os.IBinder mRemote>;

        return $r1;
    }

    public java.lang.String getInterfaceDescriptor()
    {
        android.view.IScrollCaptureController$Stub$Proxy r0;

        r0 := @this: android.view.IScrollCaptureController$Stub$Proxy;

        return "android.view.IScrollCaptureController";
    }

    public void onCaptureBufferSent(long, android.graphics.Rect) throws android.os.RemoteException
    {
        android.view.IScrollCaptureController$Stub$Proxy r0;
        long l0;
        android.os.Parcel r1;
        android.os.IBinder $r2;
        boolean $z0;
        android.view.IScrollCaptureController $r3, $r4;
        java.lang.Throwable $r5;
        android.graphics.Rect r6;

        r0 := @this: android.view.IScrollCaptureController$Stub$Proxy;

        l0 := @parameter0: long;

        r6 := @parameter1: android.graphics.Rect;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IScrollCaptureController");

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>(l0);

     label2:
        if r6 == null goto label5;

     label3:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r6.<android.graphics.Rect: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label4:
        goto label6;

     label5:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label6:
        $r2 = r0.<android.view.IScrollCaptureController$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r2.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(4, r1, null, 1);

        if $z0 != 0 goto label8;

        $r3 = staticinvoke <android.view.IScrollCaptureController$Stub: android.view.IScrollCaptureController getDefaultImpl()>();

        if $r3 == null goto label8;

        $r4 = staticinvoke <android.view.IScrollCaptureController$Stub: android.view.IScrollCaptureController getDefaultImpl()>();

        interfaceinvoke $r4.<android.view.IScrollCaptureController: void onCaptureBufferSent(long,android.graphics.Rect)>(l0, r6);

     label7:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label8:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label9:
        $r5 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.Throwable from label3 to label4 with label9;
        catch java.lang.Throwable from label5 to label6 with label9;
        catch java.lang.Throwable from label6 to label7 with label9;
    }

    public void onCaptureStarted() throws android.os.RemoteException
    {
        android.view.IScrollCaptureController$Stub$Proxy r0;
        android.os.Parcel r1;
        android.os.IBinder $r3;
        boolean $z0;
        android.view.IScrollCaptureController $r4, $r5;
        java.lang.Throwable $r6;

        r0 := @this: android.view.IScrollCaptureController$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IScrollCaptureController");

        $r3 = r0.<android.view.IScrollCaptureController$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(3, r1, null, 1);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.view.IScrollCaptureController$Stub: android.view.IScrollCaptureController getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.view.IScrollCaptureController$Stub: android.view.IScrollCaptureController getDefaultImpl()>();

        interfaceinvoke $r5.<android.view.IScrollCaptureController: void onCaptureStarted()>();

     label2:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label4:
        $r6 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public void onClientConnected(android.view.IScrollCaptureClient, android.graphics.Rect, android.graphics.Point) throws android.os.RemoteException
    {
        android.view.IScrollCaptureController$Stub$Proxy r0;
        android.graphics.Rect r1;
        android.graphics.Point r2;
        android.os.Parcel r3;
        android.os.IBinder $r4, r9;
        boolean $z0;
        android.view.IScrollCaptureController $r5, $r6;
        java.lang.Throwable $r7;
        android.view.IScrollCaptureClient r8;

        r0 := @this: android.view.IScrollCaptureController$Stub$Proxy;

        r8 := @parameter0: android.view.IScrollCaptureClient;

        r1 := @parameter1: android.graphics.Rect;

        r2 := @parameter2: android.graphics.Point;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IScrollCaptureController");

     label02:
        if r8 == null goto label05;

     label03:
        r9 = interfaceinvoke r8.<android.view.IScrollCaptureClient: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r9 = null;

     label06:
        virtualinvoke r3.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r9);

     label07:
        if r1 == null goto label10;

     label08:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<android.graphics.Rect: void writeToParcel(android.os.Parcel,int)>(r3, 0);

     label09:
        goto label11;

     label10:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(0);

     label11:
        if r2 == null goto label14;

     label12:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r2.<android.graphics.Point: void writeToParcel(android.os.Parcel,int)>(r3, 0);

     label13:
        goto label15;

     label14:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(0);

     label15:
        $r4 = r0.<android.view.IScrollCaptureController$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1, r3, null, 1);

        if $z0 != 0 goto label17;

        $r5 = staticinvoke <android.view.IScrollCaptureController$Stub: android.view.IScrollCaptureController getDefaultImpl()>();

        if $r5 == null goto label17;

        $r6 = staticinvoke <android.view.IScrollCaptureController$Stub: android.view.IScrollCaptureController getDefaultImpl()>();

        interfaceinvoke $r6.<android.view.IScrollCaptureController: void onClientConnected(android.view.IScrollCaptureClient,android.graphics.Rect,android.graphics.Point)>(r8, r1, r2);

     label16:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label17:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label18:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label18;
        catch java.lang.Throwable from label03 to label04 with label18;
        catch java.lang.Throwable from label06 to label07 with label18;
        catch java.lang.Throwable from label08 to label09 with label18;
        catch java.lang.Throwable from label10 to label11 with label18;
        catch java.lang.Throwable from label12 to label13 with label18;
        catch java.lang.Throwable from label14 to label15 with label18;
        catch java.lang.Throwable from label15 to label16 with label18;
    }

    public void onClientUnavailable() throws android.os.RemoteException
    {
        android.view.IScrollCaptureController$Stub$Proxy r0;
        android.os.Parcel r1;
        android.os.IBinder $r3;
        boolean $z0;
        android.view.IScrollCaptureController $r4, $r5;
        java.lang.Throwable $r6;

        r0 := @this: android.view.IScrollCaptureController$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IScrollCaptureController");

        $r3 = r0.<android.view.IScrollCaptureController$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(2, r1, null, 1);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.view.IScrollCaptureController$Stub: android.view.IScrollCaptureController getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.view.IScrollCaptureController$Stub: android.view.IScrollCaptureController getDefaultImpl()>();

        interfaceinvoke $r5.<android.view.IScrollCaptureController: void onClientUnavailable()>();

     label2:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label4:
        $r6 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public void onConnectionClosed() throws android.os.RemoteException
    {
        android.view.IScrollCaptureController$Stub$Proxy r0;
        android.os.Parcel r1;
        android.os.IBinder $r3;
        boolean $z0;
        android.view.IScrollCaptureController $r4, $r5;
        java.lang.Throwable $r6;

        r0 := @this: android.view.IScrollCaptureController$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IScrollCaptureController");

        $r3 = r0.<android.view.IScrollCaptureController$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(5, r1, null, 1);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.view.IScrollCaptureController$Stub: android.view.IScrollCaptureController getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.view.IScrollCaptureController$Stub: android.view.IScrollCaptureController getDefaultImpl()>();

        interfaceinvoke $r5.<android.view.IScrollCaptureController: void onConnectionClosed()>();

     label2:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label4:
        $r6 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label4;
    }
}
