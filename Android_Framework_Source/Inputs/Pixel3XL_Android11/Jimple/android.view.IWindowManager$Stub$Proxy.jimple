class android.view.IWindowManager$Stub$Proxy extends java.lang.Object implements android.view.IWindowManager
{
    public static android.view.IWindowManager sDefaultImpl;
    private android.os.IBinder mRemote;

    void <init>(android.os.IBinder)
    {
        android.view.IWindowManager$Stub$Proxy r0;
        android.os.IBinder r1;

        r0 := @this: android.view.IWindowManager$Stub$Proxy;

        r1 := @parameter0: android.os.IBinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote> = r1;

        return;
    }

    public android.view.SurfaceControl addShellRoot(int, android.view.IWindow, int) throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy r0;
        int i0, i1, $i2;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r10;
        boolean $z0;
        android.os.Parcelable$Creator $r4;
        java.lang.Object $r5;
        android.view.IWindowManager $r6, $r7;
        java.lang.Throwable $r8;
        android.view.IWindow r9;
        android.view.SurfaceControl r11, r12;

        r0 := @this: android.view.IWindowManager$Stub$Proxy;

        i0 := @parameter0: int;

        r9 := @parameter1: android.view.IWindow;

        i1 := @parameter2: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

     label02:
        if r9 == null goto label05;

     label03:
        r10 = interfaceinvoke r9.<android.view.IWindow: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r10 = null;

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r10);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        $r3 = r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(22, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r6 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        if $r6 == null goto label08;

        $r7 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        r11 = interfaceinvoke $r7.<android.view.IWindowManager: android.view.SurfaceControl addShellRoot(int,android.view.IWindow,int)>(i0, r9, i1);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r11;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $i2 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

        if $i2 == 0 goto label10;

        $r4 = <android.view.SurfaceControl: android.os.Parcelable$Creator CREATOR>;

        $r5 = interfaceinvoke $r4.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r2);

        r12 = (android.view.SurfaceControl) $r5;

     label09:
        goto label11;

     label10:
        r12 = null;

     label11:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r12;

     label12:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch java.lang.Throwable from label06 to label07 with label12;
        catch java.lang.Throwable from label08 to label09 with label12;
    }

    public void addWindowToken(android.os.IBinder, int, int) throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy r0;
        int i0, i1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r7;
        boolean $z0;
        android.view.IWindowManager $r4, $r5;
        java.lang.Throwable $r6;

        r0 := @this: android.view.IWindowManager$Stub$Proxy;

        r7 := @parameter0: android.os.IBinder;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r7);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        $r3 = r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(18, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        interfaceinvoke $r5.<android.view.IWindowManager: void addWindowToken(android.os.IBinder,int,int)>(r7, i0, i1);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public int addWindowTokenWithOptions(android.os.IBinder, int, int, android.os.Bundle, java.lang.String) throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy r0;
        int i0, i1, i2, i3;
        android.os.Bundle r1;
        java.lang.String r2;
        android.os.Parcel r3, r4;
        android.os.IBinder $r5, r9;
        boolean $z0;
        android.view.IWindowManager $r6, $r7;
        java.lang.Throwable $r8;

        r0 := @this: android.view.IWindowManager$Stub$Proxy;

        r9 := @parameter0: android.os.IBinder;

        i1 := @parameter1: int;

        i0 := @parameter2: int;

        r1 := @parameter3: android.os.Bundle;

        r2 := @parameter4: java.lang.String;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

        virtualinvoke r3.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r9);

        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(i1);

        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(i0);

     label02:
        if r1 == null goto label05;

     label03:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<android.os.Bundle: void writeToParcel(android.os.Parcel,int)>(r3, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r2);

        $r5 = r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(17, r3, r4, 0);

        if $z0 != 0 goto label08;

        $r6 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        if $r6 == null goto label08;

        $r7 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        i2 = interfaceinvoke $r7.<android.view.IWindowManager: int addWindowTokenWithOptions(android.os.IBinder,int,int,android.os.Bundle,java.lang.String)>(r9, i1, i0, r1, r2);

     label07:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return i2;

     label08:
        virtualinvoke r4.<android.os.Parcel: void readException()>();

        i3 = virtualinvoke r4.<android.os.Parcel: int readInt()>();

     label09:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return i3;

     label10:
        $r8 := @caughtexception;

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public android.os.IBinder asBinder()
    {
        android.view.IWindowManager$Stub$Proxy r0;
        android.os.IBinder $r1;

        r0 := @this: android.view.IWindowManager$Stub$Proxy;

        $r1 = r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

        return $r1;
    }

    public void clearForcedDisplayDensityForUser(int, int) throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy r0;
        int i0, i1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.view.IWindowManager $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.view.IWindowManager$Stub$Proxy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        $r4 = r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(13, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        interfaceinvoke $r6.<android.view.IWindowManager: void clearForcedDisplayDensityForUser(int,int)>(i0, i1);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void clearForcedDisplaySize(int) throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.view.IWindowManager $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.view.IWindowManager$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(9, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        interfaceinvoke $r6.<android.view.IWindowManager: void clearForcedDisplaySize(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public boolean clearWindowContentFrameStats(android.os.IBinder) throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder r3, r7;
        int i0;
        boolean $z0, z1, z2;
        android.view.IWindowManager $r4, $r5;
        java.lang.Throwable $r6;

        r0 := @this: android.view.IWindowManager$Stub$Proxy;

        r7 := @parameter0: android.os.IBinder;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r7);

        r3 = r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(76, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r4 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        if $r4 == null goto label5;

        $r5 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        z2 = interfaceinvoke $r5.<android.view.IWindowManager: boolean clearWindowContentFrameStats(android.os.IBinder)>(r7);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i0 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public void closeSystemDialogs(java.lang.String) throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.view.IWindowManager $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7;

        r0 := @this: android.view.IWindowManager$Stub$Proxy;

        r7 := @parameter0: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r7);

        $r3 = r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(37, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        interfaceinvoke $r5.<android.view.IWindowManager: void closeSystemDialogs(java.lang.String)>(r7);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void createInputConsumer(android.os.IBinder, java.lang.String, int, android.view.InputChannel) throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy r0;
        java.lang.String r1;
        int i0, $i1;
        android.view.InputChannel r2;
        android.os.Parcel r3, r4;
        android.os.IBinder $r5, r9;
        boolean $z0;
        android.view.IWindowManager $r6, $r7;
        java.lang.Throwable $r8;

        r0 := @this: android.view.IWindowManager$Stub$Proxy;

        r9 := @parameter0: android.os.IBinder;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r2 := @parameter3: android.view.InputChannel;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

        virtualinvoke r3.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r9);

        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(i0);

        $r5 = r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(85, r3, r4, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        interfaceinvoke $r7.<android.view.IWindowManager: void createInputConsumer(android.os.IBinder,java.lang.String,int,android.view.InputChannel)>(r9, r1, i0, r2);

     label2:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r4.<android.os.Parcel: void readException()>();

        $i1 = virtualinvoke r4.<android.os.Parcel: int readInt()>();

        if $i1 == 0 goto label4;

        virtualinvoke r2.<android.view.InputChannel: void readFromParcel(android.os.Parcel)>(r4);

     label4:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r8 := @caughtexception;

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public boolean destroyInputConsumer(java.lang.String, int) throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder r3;
        boolean $z0, z1, z2;
        android.view.IWindowManager $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7;
        int i0, i1;

        r0 := @this: android.view.IWindowManager$Stub$Proxy;

        r7 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r7);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        r3 = r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(86, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r4 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        if $r4 == null goto label5;

        $r5 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        z2 = interfaceinvoke $r5.<android.view.IWindowManager: boolean destroyInputConsumer(java.lang.String,int)>(r7, i0);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i1 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public void disableKeyguard(android.os.IBinder, java.lang.String, int) throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy r0;
        java.lang.String r1;
        int i0;
        android.os.Parcel r2, r3;
        android.os.IBinder $r4, r8;
        boolean $z0;
        android.view.IWindowManager $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.view.IWindowManager$Stub$Proxy;

        r8 := @parameter0: android.os.IBinder;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

        virtualinvoke r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r8);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(30, r2, r3, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        interfaceinvoke $r6.<android.view.IWindowManager: void disableKeyguard(android.os.IBinder,java.lang.String,int)>(r8, r1, i0);

     label2:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void dismissKeyguard(com.android.internal.policy.IKeyguardDismissCallback, java.lang.CharSequence) throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy r0;
        java.lang.CharSequence r1;
        android.os.Parcel r2, r3;
        android.os.IBinder $r4, r9;
        boolean $z0;
        android.view.IWindowManager $r5, $r6;
        java.lang.Throwable $r7;
        com.android.internal.policy.IKeyguardDismissCallback r8;

        r0 := @this: android.view.IWindowManager$Stub$Proxy;

        r8 := @parameter0: com.android.internal.policy.IKeyguardDismissCallback;

        r1 := @parameter1: java.lang.CharSequence;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

     label02:
        if r8 == null goto label05;

     label03:
        r9 = interfaceinvoke r8.<com.android.internal.policy.IKeyguardDismissCallback: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r9 = null;

     label06:
        virtualinvoke r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r9);

     label07:
        if r1 == null goto label10;

     label08:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        staticinvoke <android.text.TextUtils: void writeToParcel(java.lang.CharSequence,android.os.Parcel,int)>(r1, r2, 0);

     label09:
        goto label11;

     label10:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label11:
        $r4 = r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(35, r2, r3, 0);

        if $z0 != 0 goto label13;

        $r5 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        if $r5 == null goto label13;

        $r6 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        interfaceinvoke $r6.<android.view.IWindowManager: void dismissKeyguard(com.android.internal.policy.IKeyguardDismissCallback,java.lang.CharSequence)>(r8, r1);

     label12:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label13:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label14:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label15:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label15;
        catch java.lang.Throwable from label03 to label04 with label15;
        catch java.lang.Throwable from label06 to label07 with label15;
        catch java.lang.Throwable from label08 to label09 with label15;
        catch java.lang.Throwable from label10 to label11 with label15;
        catch java.lang.Throwable from label11 to label12 with label15;
        catch java.lang.Throwable from label13 to label14 with label15;
    }

    public void dontOverrideDisplayInfo(int) throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.view.IWindowManager $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.view.IWindowManager$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(95, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        interfaceinvoke $r6.<android.view.IWindowManager: void dontOverrideDisplayInfo(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void enableScreenIfNeeded() throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.view.IWindowManager $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.view.IWindowManager$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

        $r4 = r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(75, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        interfaceinvoke $r6.<android.view.IWindowManager: void enableScreenIfNeeded()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void endProlongedAnimations() throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.view.IWindowManager $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.view.IWindowManager$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

        $r4 = r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(27, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        interfaceinvoke $r6.<android.view.IWindowManager: void endProlongedAnimations()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void executeAppTransition() throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.view.IWindowManager $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.view.IWindowManager$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

        $r4 = r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(26, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        interfaceinvoke $r6.<android.view.IWindowManager: void executeAppTransition()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void exitKeyguardSecurely(android.view.IOnKeyguardExitResult) throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r8;
        boolean $z0;
        android.view.IWindowManager $r4, $r5;
        java.lang.Throwable $r6;
        android.view.IOnKeyguardExitResult r7;

        r0 := @this: android.view.IWindowManager$Stub$Proxy;

        r7 := @parameter0: android.view.IOnKeyguardExitResult;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

     label02:
        if r7 == null goto label05;

     label03:
        r8 = interfaceinvoke r7.<android.view.IOnKeyguardExitResult: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r8 = null;

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r8);

        $r3 = r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(32, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        interfaceinvoke $r5.<android.view.IWindowManager: void exitKeyguardSecurely(android.view.IOnKeyguardExitResult)>(r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void freezeDisplayRotation(int, int) throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy r0;
        int i0, i1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.view.IWindowManager $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.view.IWindowManager$Stub$Proxy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        $r4 = r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(55, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        interfaceinvoke $r6.<android.view.IWindowManager: void freezeDisplayRotation(int,int)>(i0, i1);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void freezeRotation(int) throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.view.IWindowManager $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.view.IWindowManager$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(52, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        interfaceinvoke $r6.<android.view.IWindowManager: void freezeRotation(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public float getAnimationScale(int) throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.view.IWindowManager $r5, $r6;
        java.lang.Throwable $r7;
        float f0, f1;

        r0 := @this: android.view.IWindowManager$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(38, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        f0 = interfaceinvoke $r6.<android.view.IWindowManager: float getAnimationScale(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return f0;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        f1 = virtualinvoke r2.<android.os.Parcel: float readFloat()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return f1;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public float[] getAnimationScales() throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.view.IWindowManager $r4, $r5;
        java.lang.Throwable $r6;
        float[] r7, r8;

        r0 := @this: android.view.IWindowManager$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

        $r3 = r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(39, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        r7 = interfaceinvoke $r5.<android.view.IWindowManager: float[] getAnimationScales()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r7;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        r8 = virtualinvoke r2.<android.os.Parcel: float[] createFloatArray()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r8;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public int getBaseDisplayDensity(int) throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.view.IWindowManager $r5, $r6;
        java.lang.Throwable $r7;
        int i0, i1, i2;

        r0 := @this: android.view.IWindowManager$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(11, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        i1 = interfaceinvoke $r6.<android.view.IWindowManager: int getBaseDisplayDensity(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i1;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i2 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i2;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void getBaseDisplaySize(int, android.graphics.Point) throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy r0;
        int i0, $i1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.view.IWindowManager $r4, $r5;
        java.lang.Throwable $r6;
        android.graphics.Point r7;

        r0 := @this: android.view.IWindowManager$Stub$Proxy;

        i0 := @parameter0: int;

        r7 := @parameter1: android.graphics.Point;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r3 = r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(7, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        interfaceinvoke $r5.<android.view.IWindowManager: void getBaseDisplaySize(int,android.graphics.Point)>(i0, r7);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

        if $i1 == 0 goto label4;

        virtualinvoke r7.<android.graphics.Point: void readFromParcel(android.os.Parcel)>(r2);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public float getCurrentAnimatorScale() throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.view.IWindowManager $r5, $r6;
        java.lang.Throwable $r7;
        float f0, f1;

        r0 := @this: android.view.IWindowManager$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

        $r4 = r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(42, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        f0 = interfaceinvoke $r6.<android.view.IWindowManager: float getCurrentAnimatorScale()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return f0;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        f1 = virtualinvoke r2.<android.os.Parcel: float readFloat()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return f1;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public android.graphics.Region getCurrentImeTouchRegion() throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        int $i0;
        android.os.Parcelable$Creator $r4;
        java.lang.Object $r5;
        android.view.IWindowManager $r6, $r7;
        java.lang.Throwable $r8;
        android.graphics.Region r9, r10;

        r0 := @this: android.view.IWindowManager$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

        $r3 = r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(87, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        r9 = interfaceinvoke $r7.<android.view.IWindowManager: android.graphics.Region getCurrentImeTouchRegion()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

        if $i0 == 0 goto label5;

        $r4 = <android.graphics.Region: android.os.Parcelable$Creator CREATOR>;

        $r5 = interfaceinvoke $r4.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r2);

        r10 = (android.graphics.Region) $r5;

     label4:
        goto label6;

     label5:
        r10 = null;

     label6:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r10;

     label7:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
    }

    public int getDefaultDisplayRotation() throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.view.IWindowManager $r5, $r6;
        java.lang.Throwable $r7;
        int i0, i1;

        r0 := @this: android.view.IWindowManager$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

        $r4 = r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(48, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        i0 = interfaceinvoke $r6.<android.view.IWindowManager: int getDefaultDisplayRotation()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i0;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i1;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public int getDockedStackSide() throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.view.IWindowManager $r5, $r6;
        java.lang.Throwable $r7;
        int i0, i1;

        r0 := @this: android.view.IWindowManager$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

        $r4 = r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(78, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        i0 = interfaceinvoke $r6.<android.view.IWindowManager: int getDockedStackSide()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i0;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i1;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public int getInitialDisplayDensity(int) throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.view.IWindowManager $r5, $r6;
        java.lang.Throwable $r7;
        int i0, i1, i2;

        r0 := @this: android.view.IWindowManager$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(10, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        i1 = interfaceinvoke $r6.<android.view.IWindowManager: int getInitialDisplayDensity(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i1;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i2 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i2;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void getInitialDisplaySize(int, android.graphics.Point) throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy r0;
        int i0, $i1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.view.IWindowManager $r4, $r5;
        java.lang.Throwable $r6;
        android.graphics.Point r7;

        r0 := @this: android.view.IWindowManager$Stub$Proxy;

        i0 := @parameter0: int;

        r7 := @parameter1: android.graphics.Point;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r3 = r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(6, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        interfaceinvoke $r5.<android.view.IWindowManager: void getInitialDisplaySize(int,android.graphics.Point)>(i0, r7);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

        if $i1 == 0 goto label4;

        virtualinvoke r7.<android.graphics.Point: void readFromParcel(android.os.Parcel)>(r2);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public java.lang.String getInterfaceDescriptor()
    {
        android.view.IWindowManager$Stub$Proxy r0;

        r0 := @this: android.view.IWindowManager$Stub$Proxy;

        return "android.view.IWindowManager";
    }

    public int getNavBarPosition(int) throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.view.IWindowManager $r5, $r6;
        java.lang.Throwable $r7;
        int i0, i1, i2;

        r0 := @this: android.view.IWindowManager$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(72, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        i1 = interfaceinvoke $r6.<android.view.IWindowManager: int getNavBarPosition(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i1;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i2 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i2;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public int getPreferredOptionsPanelGravity(int) throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.view.IWindowManager $r5, $r6;
        java.lang.Throwable $r7;
        int i0, i1, i2;

        r0 := @this: android.view.IWindowManager$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(51, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        i1 = interfaceinvoke $r6.<android.view.IWindowManager: int getPreferredOptionsPanelGravity(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i1;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i2 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i2;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public int getRemoveContentMode(int) throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.view.IWindowManager $r5, $r6;
        java.lang.Throwable $r7;
        int i0, i1, i2;

        r0 := @this: android.view.IWindowManager$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(98, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        i1 = interfaceinvoke $r6.<android.view.IWindowManager: int getRemoveContentMode(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i1;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i2 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i2;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void getStableInsets(int, android.graphics.Rect) throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy r0;
        int i0, $i1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.view.IWindowManager $r4, $r5;
        java.lang.Throwable $r6;
        android.graphics.Rect r7;

        r0 := @this: android.view.IWindowManager$Stub$Proxy;

        i0 := @parameter0: int;

        r7 := @parameter1: android.graphics.Rect;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r3 = r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(82, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        interfaceinvoke $r5.<android.view.IWindowManager: void getStableInsets(int,android.graphics.Rect)>(i0, r7);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

        if $i1 == 0 goto label4;

        virtualinvoke r7.<android.graphics.Rect: void readFromParcel(android.os.Parcel)>(r2);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public android.view.WindowContentFrameStats getWindowContentFrameStats(android.os.IBinder) throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r9;
        boolean $z0;
        int $i0;
        android.os.Parcelable$Creator $r4;
        java.lang.Object $r5;
        android.view.IWindowManager $r6, $r7;
        java.lang.Throwable $r8;
        android.view.WindowContentFrameStats r10, r11;

        r0 := @this: android.view.IWindowManager$Stub$Proxy;

        r9 := @parameter0: android.os.IBinder;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r9);

        $r3 = r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(77, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        r10 = interfaceinvoke $r7.<android.view.IWindowManager: android.view.WindowContentFrameStats getWindowContentFrameStats(android.os.IBinder)>(r9);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r10;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

        if $i0 == 0 goto label5;

        $r4 = <android.view.WindowContentFrameStats: android.os.Parcelable$Creator CREATOR>;

        $r5 = interfaceinvoke $r4.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r2);

        r11 = (android.view.WindowContentFrameStats) $r5;

     label4:
        goto label6;

     label5:
        r11 = null;

     label6:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r11;

     label7:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
    }

    public boolean getWindowInsets(android.view.WindowManager$LayoutParams, int, android.graphics.Rect, android.graphics.Rect, android.view.DisplayCutout$ParcelableWrapper, android.view.InsetsState) throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy r0;
        android.graphics.Rect r1, r2;
        android.view.DisplayCutout$ParcelableWrapper r3;
        android.view.InsetsState r4;
        android.os.Parcel r5, r6;
        android.os.IBinder $r7;
        boolean $z0, z1, z2;
        int $i0, i1, i2, i3, i4, i5;
        android.view.IWindowManager $r8, $r9;
        java.lang.Throwable $r10, $r11, $r12, $r13, $r14, $r15, $r16, r18;
        android.view.WindowManager$LayoutParams r17;

        r0 := @this: android.view.IWindowManager$Stub$Proxy;

        r17 := @parameter0: android.view.WindowManager$LayoutParams;

        i1 := @parameter1: int;

        r1 := @parameter2: android.graphics.Rect;

        r2 := @parameter3: android.graphics.Rect;

        r3 := @parameter4: android.view.DisplayCutout$ParcelableWrapper;

        r4 := @parameter5: android.view.InsetsState;

        r5 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r6 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r5.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

     label02:
        z1 = 1;

        if r17 == null goto label05;

     label03:
        virtualinvoke r5.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r17.<android.view.WindowManager$LayoutParams: void writeToParcel(android.os.Parcel,int)>(r5, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r5.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        virtualinvoke r5.<android.os.Parcel: void writeInt(int)>(i1);

     label07:
        $r7 = r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r7.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(113, r5, r6, 0);

        if $z0 != 0 goto label09;

        $r8 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        if $r8 == null goto label09;

        $r9 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        z2 = interfaceinvoke $r9.<android.view.IWindowManager: boolean getWindowInsets(android.view.WindowManager$LayoutParams,int,android.graphics.Rect,android.graphics.Rect,android.view.DisplayCutout$ParcelableWrapper,android.view.InsetsState)>(r17, i1, r1, r2, r3, r4);

     label08:
        virtualinvoke r6.<android.os.Parcel: void recycle()>();

        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        return z2;

     label09:
        virtualinvoke r6.<android.os.Parcel: void readException()>();

        $i0 = virtualinvoke r6.<android.os.Parcel: int readInt()>();

        if $i0 == 0 goto label11;

     label10:
        goto label12;

     label11:
        z1 = 0;

     label12:
        i2 = virtualinvoke r6.<android.os.Parcel: int readInt()>();

     label13:
        if i2 == 0 goto label16;

     label14:
        virtualinvoke r1.<android.graphics.Rect: void readFromParcel(android.os.Parcel)>(r6);

     label15:
        goto label16;

     label16:
        i3 = virtualinvoke r6.<android.os.Parcel: int readInt()>();

     label17:
        if i3 == 0 goto label20;

     label18:
        virtualinvoke r2.<android.graphics.Rect: void readFromParcel(android.os.Parcel)>(r6);

     label19:
        goto label20;

     label20:
        i4 = virtualinvoke r6.<android.os.Parcel: int readInt()>();

     label21:
        if i4 == 0 goto label24;

     label22:
        virtualinvoke r3.<android.view.DisplayCutout$ParcelableWrapper: void readFromParcel(android.os.Parcel)>(r6);

     label23:
        goto label24;

     label24:
        i5 = virtualinvoke r6.<android.os.Parcel: int readInt()>();

     label25:
        if i5 == 0 goto label29;

     label26:
        virtualinvoke r4.<android.view.InsetsState: void readFromParcel(android.os.Parcel)>(r6);

     label27:
        goto label29;

     label28:
        $r11 := @caughtexception;

        r18 = $r11;

        goto label36;

     label29:
        virtualinvoke r6.<android.os.Parcel: void recycle()>();

        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        return z1;

     label30:
        $r16 := @caughtexception;

        r18 = $r16;

        goto label36;

     label31:
        $r14 := @caughtexception;

        r18 = $r14;

        goto label36;

     label32:
        $r12 := @caughtexception;

        r18 = $r12;

        goto label36;

     label33:
        $r15 := @caughtexception;

        r18 = $r15;

        goto label36;

     label34:
        $r13 := @caughtexception;

        r18 = $r13;

        goto label36;

     label35:
        $r10 := @caughtexception;

        r18 = $r10;

     label36:
        virtualinvoke r6.<android.os.Parcel: void recycle()>();

        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        throw r18;

        catch java.lang.Throwable from label01 to label02 with label35;
        catch java.lang.Throwable from label03 to label04 with label35;
        catch java.lang.Throwable from label05 to label06 with label35;
        catch java.lang.Throwable from label06 to label07 with label34;
        catch java.lang.Throwable from label07 to label08 with label33;
        catch java.lang.Throwable from label09 to label10 with label33;
        catch java.lang.Throwable from label12 to label13 with label33;
        catch java.lang.Throwable from label14 to label15 with label32;
        catch java.lang.Throwable from label16 to label17 with label32;
        catch java.lang.Throwable from label18 to label19 with label31;
        catch java.lang.Throwable from label20 to label21 with label31;
        catch java.lang.Throwable from label22 to label23 with label30;
        catch java.lang.Throwable from label24 to label25 with label30;
        catch java.lang.Throwable from label26 to label27 with label28;
    }

    public int getWindowingMode(int) throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.view.IWindowManager $r5, $r6;
        java.lang.Throwable $r7;
        int i0, i1, i2;

        r0 := @this: android.view.IWindowManager$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(96, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        i1 = interfaceinvoke $r6.<android.view.IWindowManager: int getWindowingMode(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i1;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i2 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i2;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public boolean hasNavigationBar(int) throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        boolean $z0, z1, z2;
        android.view.IWindowManager $r3, $r4;
        java.lang.Throwable $r5;
        int i0, i1;
        android.os.IBinder r6;

        r0 := @this: android.view.IWindowManager$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        r6 = r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(71, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r3 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        if $r3 == null goto label5;

        $r4 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<android.view.IWindowManager: boolean hasNavigationBar(int)>(i0);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i1 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public void hideTransientBars(int) throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1;
        android.os.IBinder $r3;
        boolean $z0;
        android.view.IWindowManager $r4, $r5;
        java.lang.Throwable $r6;

        r0 := @this: android.view.IWindowManager$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r3 = r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(66, r1, null, 1);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        interfaceinvoke $r5.<android.view.IWindowManager: void hideTransientBars(int)>(i0);

     label2:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label4:
        $r6 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public boolean injectInputAfterTransactionsApplied(android.view.InputEvent, int) throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0, z1, z2;
        android.view.IWindowManager $r4, $r5;
        java.lang.Throwable $r6;
        android.view.InputEvent r7;
        int i0, i1;

        r0 := @this: android.view.IWindowManager$Stub$Proxy;

        r7 := @parameter0: android.view.InputEvent;

        i0 := @parameter1: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

     label02:
        z1 = 1;

        if r7 == null goto label05;

     label03:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r7.<android.view.InputEvent: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r3 = r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(106, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        z2 = interfaceinvoke $r5.<android.view.IWindowManager: boolean injectInputAfterTransactionsApplied(android.view.InputEvent,int)>(r7, i0);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label09:
        if i1 == 0 goto label10;

        goto label11;

     label10:
        z1 = 0;

     label11:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label12:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch java.lang.Throwable from label05 to label06 with label12;
        catch java.lang.Throwable from label06 to label07 with label12;
        catch java.lang.Throwable from label08 to label09 with label12;
    }

    public boolean isDisplayRotationFrozen(int) throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        boolean $z0, z1, z2;
        android.view.IWindowManager $r3, $r4;
        java.lang.Throwable $r5;
        int i0, i1;
        android.os.IBinder r6;

        r0 := @this: android.view.IWindowManager$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        r6 = r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(57, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r3 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        if $r3 == null goto label5;

        $r4 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<android.view.IWindowManager: boolean isDisplayRotationFrozen(int)>(i0);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i1 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public boolean isKeyguardLocked() throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        int i0;
        boolean $z0, z1, z2;
        android.view.IWindowManager $r3, $r4;
        java.lang.Throwable $r5;
        android.os.IBinder r6;

        r0 := @this: android.view.IWindowManager$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

        r6 = r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(33, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r3 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        if $r3 == null goto label5;

        $r4 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<android.view.IWindowManager: boolean isKeyguardLocked()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i0 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public boolean isKeyguardSecure(int) throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        boolean $z0, z1, z2;
        android.view.IWindowManager $r3, $r4;
        java.lang.Throwable $r5;
        int i0, i1;
        android.os.IBinder r6;

        r0 := @this: android.view.IWindowManager$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        r6 = r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(34, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r3 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        if $r3 == null goto label5;

        $r4 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<android.view.IWindowManager: boolean isKeyguardSecure(int)>(i0);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i1 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public boolean isLayerTracing() throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        int i0;
        boolean $z0, z1, z2;
        android.view.IWindowManager $r3, $r4;
        java.lang.Throwable $r5;
        android.os.IBinder r6;

        r0 := @this: android.view.IWindowManager$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

        r6 = r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(108, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r3 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        if $r3 == null goto label5;

        $r4 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<android.view.IWindowManager: boolean isLayerTracing()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i0 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public boolean isRotationFrozen() throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        int i0;
        boolean $z0, z1, z2;
        android.view.IWindowManager $r3, $r4;
        java.lang.Throwable $r5;
        android.os.IBinder r6;

        r0 := @this: android.view.IWindowManager$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

        r6 = r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(54, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r3 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        if $r3 == null goto label5;

        $r4 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<android.view.IWindowManager: boolean isRotationFrozen()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i0 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public boolean isSafeModeEnabled() throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        int i0;
        boolean $z0, z1, z2;
        android.view.IWindowManager $r3, $r4;
        java.lang.Throwable $r5;
        android.os.IBinder r6;

        r0 := @this: android.view.IWindowManager$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

        r6 = r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(74, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r3 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        if $r3 == null goto label5;

        $r4 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<android.view.IWindowManager: boolean isSafeModeEnabled()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i0 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public boolean isViewServerRunning() throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        int i0;
        boolean $z0, z1, z2;
        android.view.IWindowManager $r3, $r4;
        java.lang.Throwable $r5;
        android.os.IBinder r6;

        r0 := @this: android.view.IWindowManager$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

        r6 = r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(3, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r3 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        if $r3 == null goto label5;

        $r4 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<android.view.IWindowManager: boolean isViewServerRunning()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i0 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public boolean isWindowToken(android.os.IBinder) throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder r3, r7;
        int i0;
        boolean $z0, z1, z2;
        android.view.IWindowManager $r4, $r5;
        java.lang.Throwable $r6;

        r0 := @this: android.view.IWindowManager$Stub$Proxy;

        r7 := @parameter0: android.os.IBinder;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r7);

        r3 = r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(16, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r4 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        if $r4 == null goto label5;

        $r5 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        z2 = interfaceinvoke $r5.<android.view.IWindowManager: boolean isWindowToken(android.os.IBinder)>(r7);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i0 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public boolean isWindowTraceEnabled() throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        int i0;
        boolean $z0, z1, z2;
        android.view.IWindowManager $r3, $r4;
        java.lang.Throwable $r5;
        android.os.IBinder r6;

        r0 := @this: android.view.IWindowManager$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

        r6 = r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(94, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r3 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        if $r3 == null goto label5;

        $r4 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<android.view.IWindowManager: boolean isWindowTraceEnabled()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i0 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public void lockNow(android.os.Bundle) throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.view.IWindowManager $r4, $r5;
        java.lang.Throwable $r6;
        android.os.Bundle r7;

        r0 := @this: android.view.IWindowManager$Stub$Proxy;

        r7 := @parameter0: android.os.Bundle;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

     label02:
        if r7 == null goto label05;

     label03:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r7.<android.os.Bundle: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        $r3 = r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(73, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        interfaceinvoke $r5.<android.view.IWindowManager: void lockNow(android.os.Bundle)>(r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public boolean mirrorDisplay(int, android.view.SurfaceControl) throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy r0;
        int i0, $i1, $i2;
        android.os.Parcel r1, r2;
        android.os.IBinder r3;
        boolean $z0, z1, z2;
        android.view.IWindowManager $r4, $r5;
        java.lang.Throwable $r6;
        android.view.SurfaceControl r7;

        r0 := @this: android.view.IWindowManager$Stub$Proxy;

        i0 := @parameter0: int;

        r7 := @parameter1: android.view.SurfaceControl;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        r3 = r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

     label02:
        z1 = 0;

     label03:
        $z0 = interfaceinvoke r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(110, r1, r2, 0);

        if $z0 != 0 goto label05;

        $r4 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        if $r4 == null goto label05;

        $r5 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        z2 = interfaceinvoke $r5.<android.view.IWindowManager: boolean mirrorDisplay(int,android.view.SurfaceControl)>(i0, r7);

     label04:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label05:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label06:
        $i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

        if $i1 == 0 goto label08;

     label07:
        z1 = 1;

     label08:
        $i2 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

        if $i2 == 0 goto label09;

        virtualinvoke r7.<android.view.SurfaceControl: void readFromParcel(android.os.Parcel)>(r2);

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void modifyDisplayWindowInsets(int, android.view.InsetsState) throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.view.IWindowManager $r4, $r5;
        java.lang.Throwable $r6;
        android.view.InsetsState r7;

        r0 := @this: android.view.IWindowManager$Stub$Proxy;

        i0 := @parameter0: int;

        r7 := @parameter1: android.view.InsetsState;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

     label02:
        if r7 == null goto label05;

     label03:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r7.<android.view.InsetsState: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        $r3 = r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(112, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        interfaceinvoke $r5.<android.view.IWindowManager: void modifyDisplayWindowInsets(int,android.view.InsetsState)>(i0, r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public android.view.IWindowSession openSession(android.view.IWindowSessionCallback) throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, $r4, r9;
        boolean $z0;
        android.view.IWindowManager $r5, $r6;
        java.lang.Throwable $r7;
        android.view.IWindowSessionCallback r8;
        android.view.IWindowSession r10, r11;

        r0 := @this: android.view.IWindowManager$Stub$Proxy;

        r8 := @parameter0: android.view.IWindowSessionCallback;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

     label02:
        if r8 == null goto label05;

     label03:
        r9 = interfaceinvoke r8.<android.view.IWindowSessionCallback: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r9 = null;

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r9);

        $r3 = r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(4, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r5 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        if $r5 == null goto label08;

        $r6 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        r10 = interfaceinvoke $r6.<android.view.IWindowManager: android.view.IWindowSession openSession(android.view.IWindowSessionCallback)>(r8);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r10;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $r4 = virtualinvoke r2.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        r11 = staticinvoke <android.view.IWindowSession$Stub: android.view.IWindowSession asInterface(android.os.IBinder)>($r4);

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r11;

     label10:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void overridePendingAppTransitionMultiThumbFuture(android.view.IAppTransitionAnimationSpecsFuture, android.os.IRemoteCallback, boolean, int) throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy r0;
        android.os.IRemoteCallback r1;
        boolean z0, $z1;
        int i0;
        android.os.Parcel r2, r3;
        android.os.IBinder $r4, r9, r10;
        android.view.IWindowManager $r5, $r6;
        java.lang.Throwable $r7;
        android.view.IAppTransitionAnimationSpecsFuture r8;
        byte b1;

        r0 := @this: android.view.IWindowManager$Stub$Proxy;

        r8 := @parameter0: android.view.IAppTransitionAnimationSpecsFuture;

        r1 := @parameter1: android.os.IRemoteCallback;

        z0 := @parameter2: boolean;

        i0 := @parameter3: int;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

     label02:
        if r8 == null goto label05;

     label03:
        r9 = interfaceinvoke r8.<android.view.IAppTransitionAnimationSpecsFuture: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r9 = null;

     label06:
        virtualinvoke r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r9);

     label07:
        r10 = null;

        if r1 == null goto label09;

     label08:
        r10 = interfaceinvoke r1.<android.os.IRemoteCallback: android.os.IBinder asBinder()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r10);

     label10:
        if z0 == 0 goto label11;

        b1 = 1;

        goto label12;

     label11:
        b1 = 0;

     label12:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(b1);

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(24, r2, r3, 0);

        if $z1 != 0 goto label14;

        $r5 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        if $r5 == null goto label14;

        $r6 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        interfaceinvoke $r6.<android.view.IWindowManager: void overridePendingAppTransitionMultiThumbFuture(android.view.IAppTransitionAnimationSpecsFuture,android.os.IRemoteCallback,boolean,int)>(r8, r1, z0, i0);

     label13:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label14:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label15:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label16:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label16;
        catch java.lang.Throwable from label03 to label04 with label16;
        catch java.lang.Throwable from label06 to label07 with label16;
        catch java.lang.Throwable from label08 to label09 with label16;
        catch java.lang.Throwable from label09 to label10 with label16;
        catch java.lang.Throwable from label12 to label13 with label16;
        catch java.lang.Throwable from label14 to label15 with label16;
    }

    public void overridePendingAppTransitionRemote(android.view.RemoteAnimationAdapter, int) throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.view.IWindowManager $r4, $r5;
        java.lang.Throwable $r6;
        android.view.RemoteAnimationAdapter r7;

        r0 := @this: android.view.IWindowManager$Stub$Proxy;

        r7 := @parameter0: android.view.RemoteAnimationAdapter;

        i0 := @parameter1: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

     label02:
        if r7 == null goto label05;

     label03:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r7.<android.view.RemoteAnimationAdapter: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r3 = r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(25, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        interfaceinvoke $r5.<android.view.IWindowManager: void overridePendingAppTransitionRemote(android.view.RemoteAnimationAdapter,int)>(r7, i0);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void prepareAppTransition(int, boolean) throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy r0;
        int i0;
        boolean z0, $z1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        android.view.IWindowManager $r5, $r6;
        java.lang.Throwable $r7;
        byte b1;

        r0 := @this: android.view.IWindowManager$Stub$Proxy;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

     label2:
        if z0 == 0 goto label3;

        b1 = 1;

        goto label4;

     label3:
        b1 = 0;

     label4:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b1);

        $r4 = r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(20, r1, r2, 0);

        if $z1 != 0 goto label6;

        $r5 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        if $r5 == null goto label6;

        $r6 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        interfaceinvoke $r6.<android.view.IWindowManager: void prepareAppTransition(int,boolean)>(i0, z0);

     label5:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label6:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label8:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label4 to label5 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
    }

    public void reenableKeyguard(android.os.IBinder, int) throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r7;
        boolean $z0;
        android.view.IWindowManager $r4, $r5;
        java.lang.Throwable $r6;

        r0 := @this: android.view.IWindowManager$Stub$Proxy;

        r7 := @parameter0: android.os.IBinder;

        i0 := @parameter1: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r7);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r3 = r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(31, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        interfaceinvoke $r5.<android.view.IWindowManager: void reenableKeyguard(android.os.IBinder,int)>(r7, i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void refreshScreenCaptureDisabled(int) throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.view.IWindowManager $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.view.IWindowManager$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(46, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        interfaceinvoke $r6.<android.view.IWindowManager: void refreshScreenCaptureDisabled(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void registerDisplayFoldListener(android.view.IDisplayFoldListener) throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r8;
        boolean $z0;
        android.view.IWindowManager $r4, $r5;
        java.lang.Throwable $r6;
        android.view.IDisplayFoldListener r7;

        r0 := @this: android.view.IWindowManager$Stub$Proxy;

        r7 := @parameter0: android.view.IDisplayFoldListener;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

     label02:
        if r7 == null goto label05;

     label03:
        r8 = interfaceinvoke r7.<android.view.IDisplayFoldListener: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r8 = null;

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r8);

        $r3 = r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(88, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        interfaceinvoke $r5.<android.view.IWindowManager: void registerDisplayFoldListener(android.view.IDisplayFoldListener)>(r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void registerDisplayWindowListener(android.view.IDisplayWindowListener) throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r8;
        boolean $z0;
        android.view.IWindowManager $r4, $r5;
        java.lang.Throwable $r6;
        android.view.IDisplayWindowListener r7;

        r0 := @this: android.view.IWindowManager$Stub$Proxy;

        r7 := @parameter0: android.view.IDisplayWindowListener;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

     label02:
        if r7 == null goto label05;

     label03:
        r8 = interfaceinvoke r7.<android.view.IDisplayWindowListener: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r8 = null;

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r8);

        $r3 = r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(90, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        interfaceinvoke $r5.<android.view.IWindowManager: void registerDisplayWindowListener(android.view.IDisplayWindowListener)>(r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void registerPinnedStackListener(int, android.view.IPinnedStackListener) throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r8;
        boolean $z0;
        android.view.IWindowManager $r4, $r5;
        java.lang.Throwable $r6;
        android.view.IPinnedStackListener r7;

        r0 := @this: android.view.IWindowManager$Stub$Proxy;

        i0 := @parameter0: int;

        r7 := @parameter1: android.view.IPinnedStackListener;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

     label02:
        if r7 == null goto label05;

     label03:
        r8 = interfaceinvoke r7.<android.view.IPinnedStackListener: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r8 = null;

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r8);

        $r3 = r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(80, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        interfaceinvoke $r5.<android.view.IWindowManager: void registerPinnedStackListener(int,android.view.IPinnedStackListener)>(i0, r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void registerShortcutKey(long, com.android.internal.policy.IShortcutService) throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy r0;
        long l0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r8;
        boolean $z0;
        android.view.IWindowManager $r4, $r5;
        java.lang.Throwable $r6;
        com.android.internal.policy.IShortcutService r7;

        r0 := @this: android.view.IWindowManager$Stub$Proxy;

        l0 := @parameter0: long;

        r7 := @parameter1: com.android.internal.policy.IShortcutService;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>(l0);

     label02:
        if r7 == null goto label05;

     label03:
        r8 = interfaceinvoke r7.<com.android.internal.policy.IShortcutService: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r8 = null;

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r8);

        $r3 = r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(84, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        interfaceinvoke $r5.<android.view.IWindowManager: void registerShortcutKey(long,com.android.internal.policy.IShortcutService)>(l0, r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void registerSystemGestureExclusionListener(android.view.ISystemGestureExclusionListener, int) throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r8;
        boolean $z0;
        android.view.IWindowManager $r4, $r5;
        java.lang.Throwable $r6;
        android.view.ISystemGestureExclusionListener r7;

        r0 := @this: android.view.IWindowManager$Stub$Proxy;

        r7 := @parameter0: android.view.ISystemGestureExclusionListener;

        i0 := @parameter1: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

     label02:
        if r7 == null goto label05;

     label03:
        r8 = interfaceinvoke r7.<android.view.ISystemGestureExclusionListener: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r8 = null;

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r8);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r3 = r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(62, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        interfaceinvoke $r5.<android.view.IWindowManager: void registerSystemGestureExclusionListener(android.view.ISystemGestureExclusionListener,int)>(r7, i0);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public boolean registerWallpaperVisibilityListener(android.view.IWallpaperVisibilityListener, int) throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        boolean $z0, z1, z2;
        android.view.IWindowManager $r3, $r4;
        java.lang.Throwable $r5;
        android.view.IWallpaperVisibilityListener r6;
        int i0, i1;
        android.os.IBinder r7, r8;

        r0 := @this: android.view.IWindowManager$Stub$Proxy;

        r6 := @parameter0: android.view.IWallpaperVisibilityListener;

        i0 := @parameter1: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

     label02:
        if r6 == null goto label05;

     label03:
        r7 = interfaceinvoke r6.<android.view.IWallpaperVisibilityListener: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r7 = null;

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r7);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        r8 = r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

     label07:
        z1 = 0;

     label08:
        $z0 = interfaceinvoke r8.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(60, r1, r2, 0);

        if $z0 != 0 goto label10;

        $r3 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        if $r3 == null goto label10;

        $r4 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<android.view.IWindowManager: boolean registerWallpaperVisibilityListener(android.view.IWallpaperVisibilityListener,int)>(r6, i0);

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label10:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label11:
        if i1 == 0 goto label12;

        z1 = 1;

     label12:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label13:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label03 to label04 with label13;
        catch java.lang.Throwable from label06 to label07 with label13;
        catch java.lang.Throwable from label08 to label09 with label13;
        catch java.lang.Throwable from label10 to label11 with label13;
    }

    public void removeRotationWatcher(android.view.IRotationWatcher) throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r8;
        boolean $z0;
        android.view.IWindowManager $r4, $r5;
        java.lang.Throwable $r6;
        android.view.IRotationWatcher r7;

        r0 := @this: android.view.IWindowManager$Stub$Proxy;

        r7 := @parameter0: android.view.IRotationWatcher;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

     label02:
        if r7 == null goto label05;

     label03:
        r8 = interfaceinvoke r7.<android.view.IRotationWatcher: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r8 = null;

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r8);

        $r3 = r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(50, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        interfaceinvoke $r5.<android.view.IWindowManager: void removeRotationWatcher(android.view.IRotationWatcher)>(r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void removeWindowToken(android.os.IBinder, int) throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r7;
        boolean $z0;
        android.view.IWindowManager $r4, $r5;
        java.lang.Throwable $r6;

        r0 := @this: android.view.IWindowManager$Stub$Proxy;

        r7 := @parameter0: android.os.IBinder;

        i0 := @parameter1: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r7);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r3 = r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(19, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        interfaceinvoke $r5.<android.view.IWindowManager: void removeWindowToken(android.os.IBinder,int)>(r7, i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void requestAppKeyboardShortcuts(com.android.internal.os.IResultReceiver, int) throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r8;
        boolean $z0;
        android.view.IWindowManager $r4, $r5;
        java.lang.Throwable $r6;
        com.android.internal.os.IResultReceiver r7;

        r0 := @this: android.view.IWindowManager$Stub$Proxy;

        r7 := @parameter0: com.android.internal.os.IResultReceiver;

        i0 := @parameter1: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

     label02:
        if r7 == null goto label05;

     label03:
        r8 = interfaceinvoke r7.<com.android.internal.os.IResultReceiver: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r8 = null;

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r8);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r3 = r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(81, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        interfaceinvoke $r5.<android.view.IWindowManager: void requestAppKeyboardShortcuts(com.android.internal.os.IResultReceiver,int)>(r7, i0);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public boolean requestAssistScreenshot(android.app.IAssistDataReceiver) throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        int i0;
        boolean $z0, z1, z2;
        android.view.IWindowManager $r3, $r4;
        java.lang.Throwable $r5;
        android.app.IAssistDataReceiver r6;
        android.os.IBinder r7, r8;

        r0 := @this: android.view.IWindowManager$Stub$Proxy;

        r6 := @parameter0: android.app.IAssistDataReceiver;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

     label02:
        if r6 == null goto label05;

     label03:
        r7 = interfaceinvoke r6.<android.app.IAssistDataReceiver: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r7 = null;

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r7);

        r8 = r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

     label07:
        z1 = 0;

     label08:
        $z0 = interfaceinvoke r8.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(64, r1, r2, 0);

        if $z0 != 0 goto label10;

        $r3 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        if $r3 == null goto label10;

        $r4 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<android.view.IWindowManager: boolean requestAssistScreenshot(android.app.IAssistDataReceiver)>(r6);

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label10:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label11:
        if i0 == 0 goto label12;

        z1 = 1;

     label12:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label13:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label03 to label04 with label13;
        catch java.lang.Throwable from label06 to label07 with label13;
        catch java.lang.Throwable from label08 to label09 with label13;
        catch java.lang.Throwable from label10 to label11 with label13;
    }

    public void requestScrollCapture(int, android.os.IBinder, int, android.view.IScrollCaptureController) throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy r0;
        int i0, i1;
        android.view.IScrollCaptureController r1;
        android.os.Parcel r2, r3;
        android.os.IBinder $r4, r8, r9;
        boolean $z0;
        android.view.IWindowManager $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.view.IWindowManager$Stub$Proxy;

        i0 := @parameter0: int;

        r8 := @parameter1: android.os.IBinder;

        i1 := @parameter2: int;

        r1 := @parameter3: android.view.IScrollCaptureController;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r8);

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i1);

     label02:
        if r1 == null goto label05;

     label03:
        r9 = interfaceinvoke r1.<android.view.IScrollCaptureController: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r9 = null;

     label06:
        virtualinvoke r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r9);

        $r4 = r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(116, r2, r3, 0);

        if $z0 != 0 goto label08;

        $r5 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        if $r5 == null goto label08;

        $r6 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        interfaceinvoke $r6.<android.view.IWindowManager: void requestScrollCapture(int,android.os.IBinder,int,android.view.IScrollCaptureController)>(i0, r8, i1, r1);

     label07:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public android.graphics.Bitmap screenshotWallpaper() throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        int $i0;
        android.os.Parcelable$Creator $r4;
        java.lang.Object $r5;
        android.view.IWindowManager $r6, $r7;
        java.lang.Throwable $r8;
        android.graphics.Bitmap r9, r10;

        r0 := @this: android.view.IWindowManager$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

        $r3 = r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(59, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        r9 = interfaceinvoke $r7.<android.view.IWindowManager: android.graphics.Bitmap screenshotWallpaper()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

        if $i0 == 0 goto label5;

        $r4 = <android.graphics.Bitmap: android.os.Parcelable$Creator CREATOR>;

        $r5 = interfaceinvoke $r4.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r2);

        r10 = (android.graphics.Bitmap) $r5;

     label4:
        goto label6;

     label5:
        r10 = null;

     label6:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r10;

     label7:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
    }

    public void setAnimationScale(int, float) throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy r0;
        int i0;
        float f0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.view.IWindowManager $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.view.IWindowManager$Stub$Proxy;

        i0 := @parameter0: int;

        f0 := @parameter1: float;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeFloat(float)>(f0);

        $r4 = r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(40, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        interfaceinvoke $r6.<android.view.IWindowManager: void setAnimationScale(int,float)>(i0, f0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void setAnimationScales(float[]) throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.view.IWindowManager $r4, $r5;
        java.lang.Throwable $r6;
        float[] r7;

        r0 := @this: android.view.IWindowManager$Stub$Proxy;

        r7 := @parameter0: float[];

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

        virtualinvoke r1.<android.os.Parcel: void writeFloatArray(float[])>(r7);

        $r3 = r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(41, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        interfaceinvoke $r5.<android.view.IWindowManager: void setAnimationScales(float[])>(r7);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void setDisplayWindowInsetsController(int, android.view.IDisplayWindowInsetsController) throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r8;
        boolean $z0;
        android.view.IWindowManager $r4, $r5;
        java.lang.Throwable $r6;
        android.view.IDisplayWindowInsetsController r7;

        r0 := @this: android.view.IWindowManager$Stub$Proxy;

        i0 := @parameter0: int;

        r7 := @parameter1: android.view.IDisplayWindowInsetsController;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

     label02:
        if r7 == null goto label05;

     label03:
        r8 = interfaceinvoke r7.<android.view.IDisplayWindowInsetsController: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r8 = null;

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r8);

        $r3 = r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(111, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        interfaceinvoke $r5.<android.view.IWindowManager: void setDisplayWindowInsetsController(int,android.view.IDisplayWindowInsetsController)>(i0, r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void setDisplayWindowRotationController(android.view.IDisplayWindowRotationController) throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r8;
        boolean $z0;
        android.view.IWindowManager $r4, $r5;
        java.lang.Throwable $r6;
        android.view.IDisplayWindowRotationController r7;

        r0 := @this: android.view.IWindowManager$Stub$Proxy;

        r7 := @parameter0: android.view.IDisplayWindowRotationController;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

     label02:
        if r7 == null goto label05;

     label03:
        r8 = interfaceinvoke r7.<android.view.IDisplayWindowRotationController: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r8 = null;

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r8);

        $r3 = r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(21, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        interfaceinvoke $r5.<android.view.IWindowManager: void setDisplayWindowRotationController(android.view.IDisplayWindowRotationController)>(r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void setDockedStackDividerTouchRegion(android.graphics.Rect) throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.view.IWindowManager $r4, $r5;
        java.lang.Throwable $r6;
        android.graphics.Rect r7;

        r0 := @this: android.view.IWindowManager$Stub$Proxy;

        r7 := @parameter0: android.graphics.Rect;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

     label02:
        if r7 == null goto label05;

     label03:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r7.<android.graphics.Rect: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        $r3 = r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(79, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        interfaceinvoke $r5.<android.view.IWindowManager: void setDockedStackDividerTouchRegion(android.graphics.Rect)>(r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void setEventDispatching(boolean) throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy r0;
        boolean z0, $z1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        android.view.IWindowManager $r5, $r6;
        java.lang.Throwable $r7;
        byte b0;

        r0 := @this: android.view.IWindowManager$Stub$Proxy;

        z0 := @parameter0: boolean;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

     label2:
        if z0 == 0 goto label3;

        b0 = 1;

        goto label4;

     label3:
        b0 = 0;

     label4:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b0);

        $r4 = r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(15, r1, r2, 0);

        if $z1 != 0 goto label6;

        $r5 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        if $r5 == null goto label6;

        $r6 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        interfaceinvoke $r6.<android.view.IWindowManager: void setEventDispatching(boolean)>(z0);

     label5:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label6:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label8:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label4 to label5 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
    }

    public void setFixedToUserRotation(int, int) throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy r0;
        int i0, i1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.view.IWindowManager $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.view.IWindowManager$Stub$Proxy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        $r4 = r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(58, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        interfaceinvoke $r6.<android.view.IWindowManager: void setFixedToUserRotation(int,int)>(i0, i1);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void setForceShowSystemBars(boolean) throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy r0;
        boolean z0, $z1;
        android.os.Parcel r1;
        android.os.IBinder $r3;
        android.view.IWindowManager $r4, $r5;
        java.lang.Throwable $r6;
        byte b0;

        r0 := @this: android.view.IWindowManager$Stub$Proxy;

        z0 := @parameter0: boolean;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

     label2:
        if z0 == 0 goto label3;

        b0 = 1;

        goto label4;

     label3:
        b0 = 0;

     label4:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b0);

        $r3 = r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(67, r1, null, 1);

        if $z1 != 0 goto label6;

        $r4 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        if $r4 == null goto label6;

        $r5 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        interfaceinvoke $r5.<android.view.IWindowManager: void setForceShowSystemBars(boolean)>(z0);

     label5:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label6:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label7:
        $r6 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label4 to label5 with label7;
    }

    public void setForcedDisplayDensityForUser(int, int, int) throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy r0;
        int i0, i1, i2;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.view.IWindowManager $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.view.IWindowManager$Stub$Proxy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i2);

        $r4 = r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(12, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        interfaceinvoke $r6.<android.view.IWindowManager: void setForcedDisplayDensityForUser(int,int,int)>(i0, i1, i2);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void setForcedDisplayScalingMode(int, int) throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy r0;
        int i0, i1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.view.IWindowManager $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.view.IWindowManager$Stub$Proxy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        $r4 = r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(14, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        interfaceinvoke $r6.<android.view.IWindowManager: void setForcedDisplayScalingMode(int,int)>(i0, i1);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void setForcedDisplaySize(int, int, int) throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy r0;
        int i0, i1, i2;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.view.IWindowManager $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.view.IWindowManager$Stub$Proxy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i2);

        $r4 = r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(8, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        interfaceinvoke $r6.<android.view.IWindowManager: void setForcedDisplaySize(int,int,int)>(i0, i1, i2);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void setForwardedInsets(int, android.graphics.Insets) throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.view.IWindowManager $r4, $r5;
        java.lang.Throwable $r6;
        android.graphics.Insets r7;

        r0 := @this: android.view.IWindowManager$Stub$Proxy;

        i0 := @parameter0: int;

        r7 := @parameter1: android.graphics.Insets;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

     label02:
        if r7 == null goto label05;

     label03:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r7.<android.graphics.Insets: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        $r3 = r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(83, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        interfaceinvoke $r5.<android.view.IWindowManager: void setForwardedInsets(int,android.graphics.Insets)>(i0, r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void setInTouchMode(boolean) throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy r0;
        boolean z0, $z1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        android.view.IWindowManager $r5, $r6;
        java.lang.Throwable $r7;
        byte b0;

        r0 := @this: android.view.IWindowManager$Stub$Proxy;

        z0 := @parameter0: boolean;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

     label2:
        if z0 == 0 goto label3;

        b0 = 1;

        goto label4;

     label3:
        b0 = 0;

     label4:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b0);

        $r4 = r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(43, r1, r2, 0);

        if $z1 != 0 goto label6;

        $r5 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        if $r5 == null goto label6;

        $r6 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        interfaceinvoke $r6.<android.view.IWindowManager: void setInTouchMode(boolean)>(z0);

     label5:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label6:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label8:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label4 to label5 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
    }

    public void setLayerTracing(boolean) throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy r0;
        boolean z0, $z1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        android.view.IWindowManager $r5, $r6;
        java.lang.Throwable $r7;
        byte b0;

        r0 := @this: android.view.IWindowManager$Stub$Proxy;

        z0 := @parameter0: boolean;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

     label2:
        if z0 == 0 goto label3;

        b0 = 1;

        goto label4;

     label3:
        b0 = 0;

     label4:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b0);

        $r4 = r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(109, r1, r2, 0);

        if $z1 != 0 goto label6;

        $r5 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        if $r5 == null goto label6;

        $r6 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        interfaceinvoke $r6.<android.view.IWindowManager: void setLayerTracing(boolean)>(z0);

     label5:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label6:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label8:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label4 to label5 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
    }

    public void setLayerTracingFlags(int) throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.view.IWindowManager $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.view.IWindowManager$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(115, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        interfaceinvoke $r6.<android.view.IWindowManager: void setLayerTracingFlags(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void setNavBarVirtualKeyHapticFeedbackEnabled(boolean) throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy r0;
        boolean z0, $z1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        android.view.IWindowManager $r5, $r6;
        java.lang.Throwable $r7;
        byte b0;

        r0 := @this: android.view.IWindowManager$Stub$Proxy;

        z0 := @parameter0: boolean;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

     label2:
        if z0 == 0 goto label3;

        b0 = 1;

        goto label4;

     label3:
        b0 = 0;

     label4:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b0);

        $r4 = r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(70, r1, r2, 0);

        if $z1 != 0 goto label6;

        $r5 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        if $r5 == null goto label6;

        $r6 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        interfaceinvoke $r6.<android.view.IWindowManager: void setNavBarVirtualKeyHapticFeedbackEnabled(boolean)>(z0);

     label5:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label6:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label8:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label4 to label5 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
    }

    public void setPipVisibility(boolean) throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy r0;
        boolean z0, $z1;
        android.os.Parcel r1;
        android.os.IBinder $r3;
        android.view.IWindowManager $r4, $r5;
        java.lang.Throwable $r6;
        byte b0;

        r0 := @this: android.view.IWindowManager$Stub$Proxy;

        z0 := @parameter0: boolean;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

     label2:
        if z0 == 0 goto label3;

        b0 = 1;

        goto label4;

     label3:
        b0 = 0;

     label4:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b0);

        $r3 = r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(69, r1, null, 1);

        if $z1 != 0 goto label6;

        $r4 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        if $r4 == null goto label6;

        $r5 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        interfaceinvoke $r5.<android.view.IWindowManager: void setPipVisibility(boolean)>(z0);

     label5:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label6:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label7:
        $r6 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label4 to label5 with label7;
    }

    public void setRecentsVisibility(boolean) throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy r0;
        boolean z0, $z1;
        android.os.Parcel r1;
        android.os.IBinder $r3;
        android.view.IWindowManager $r4, $r5;
        java.lang.Throwable $r6;
        byte b0;

        r0 := @this: android.view.IWindowManager$Stub$Proxy;

        z0 := @parameter0: boolean;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

     label2:
        if z0 == 0 goto label3;

        b0 = 1;

        goto label4;

     label3:
        b0 = 0;

     label4:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b0);

        $r3 = r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(68, r1, null, 1);

        if $z1 != 0 goto label6;

        $r4 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        if $r4 == null goto label6;

        $r5 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        interfaceinvoke $r5.<android.view.IWindowManager: void setRecentsVisibility(boolean)>(z0);

     label5:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label6:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label7:
        $r6 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label4 to label5 with label7;
    }

    public void setRemoveContentMode(int, int) throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy r0;
        int i0, i1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.view.IWindowManager $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.view.IWindowManager$Stub$Proxy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        $r4 = r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(99, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        interfaceinvoke $r6.<android.view.IWindowManager: void setRemoveContentMode(int,int)>(i0, i1);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void setShellRootAccessibilityWindow(int, int, android.view.IWindow) throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy r0;
        int i0, i1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r8;
        boolean $z0;
        android.view.IWindowManager $r4, $r5;
        java.lang.Throwable $r6;
        android.view.IWindow r7;

        r0 := @this: android.view.IWindowManager$Stub$Proxy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r7 := @parameter2: android.view.IWindow;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

     label02:
        if r7 == null goto label05;

     label03:
        r8 = interfaceinvoke r7.<android.view.IWindow: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r8 = null;

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r8);

        $r3 = r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(23, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        interfaceinvoke $r5.<android.view.IWindowManager: void setShellRootAccessibilityWindow(int,int,android.view.IWindow)>(i0, i1, r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void setShouldShowIme(int, boolean) throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy r0;
        int i0;
        boolean z0, $z1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        android.view.IWindowManager $r5, $r6;
        java.lang.Throwable $r7;
        byte b1;

        r0 := @this: android.view.IWindowManager$Stub$Proxy;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

     label2:
        if z0 == 0 goto label3;

        b1 = 1;

        goto label4;

     label3:
        b1 = 0;

     label4:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b1);

        $r4 = r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(105, r1, r2, 0);

        if $z1 != 0 goto label6;

        $r5 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        if $r5 == null goto label6;

        $r6 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        interfaceinvoke $r6.<android.view.IWindowManager: void setShouldShowIme(int,boolean)>(i0, z0);

     label5:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label6:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label8:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label4 to label5 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
    }

    public void setShouldShowSystemDecors(int, boolean) throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy r0;
        int i0;
        boolean z0, $z1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        android.view.IWindowManager $r5, $r6;
        java.lang.Throwable $r7;
        byte b1;

        r0 := @this: android.view.IWindowManager$Stub$Proxy;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

     label2:
        if z0 == 0 goto label3;

        b1 = 1;

        goto label4;

     label3:
        b1 = 0;

     label4:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b1);

        $r4 = r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(103, r1, r2, 0);

        if $z1 != 0 goto label6;

        $r5 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        if $r5 == null goto label6;

        $r6 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        interfaceinvoke $r6.<android.view.IWindowManager: void setShouldShowSystemDecors(int,boolean)>(i0, z0);

     label5:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label6:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label8:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label4 to label5 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
    }

    public void setShouldShowWithInsecureKeyguard(int, boolean) throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy r0;
        int i0;
        boolean z0, $z1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        android.view.IWindowManager $r5, $r6;
        java.lang.Throwable $r7;
        byte b1;

        r0 := @this: android.view.IWindowManager$Stub$Proxy;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

     label2:
        if z0 == 0 goto label3;

        b1 = 1;

        goto label4;

     label3:
        b1 = 0;

     label4:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b1);

        $r4 = r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(101, r1, r2, 0);

        if $z1 != 0 goto label6;

        $r5 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        if $r5 == null goto label6;

        $r6 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        interfaceinvoke $r6.<android.view.IWindowManager: void setShouldShowWithInsecureKeyguard(int,boolean)>(i0, z0);

     label5:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label6:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label8:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label4 to label5 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
    }

    public void setStrictModeVisualIndicatorPreference(java.lang.String) throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.view.IWindowManager $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7;

        r0 := @this: android.view.IWindowManager$Stub$Proxy;

        r7 := @parameter0: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r7);

        $r3 = r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(45, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        interfaceinvoke $r5.<android.view.IWindowManager: void setStrictModeVisualIndicatorPreference(java.lang.String)>(r7);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void setSwitchingUser(boolean) throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy r0;
        boolean z0, $z1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        android.view.IWindowManager $r5, $r6;
        java.lang.Throwable $r7;
        byte b0;

        r0 := @this: android.view.IWindowManager$Stub$Proxy;

        z0 := @parameter0: boolean;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

     label2:
        if z0 == 0 goto label3;

        b0 = 1;

        goto label4;

     label3:
        b0 = 0;

     label4:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b0);

        $r4 = r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(36, r1, r2, 0);

        if $z1 != 0 goto label6;

        $r5 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        if $r5 == null goto label6;

        $r6 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        interfaceinvoke $r6.<android.view.IWindowManager: void setSwitchingUser(boolean)>(z0);

     label5:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label6:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label8:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label4 to label5 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
    }

    public void setWindowingMode(int, int) throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy r0;
        int i0, i1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.view.IWindowManager $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.view.IWindowManager$Stub$Proxy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        $r4 = r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(97, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        interfaceinvoke $r6.<android.view.IWindowManager: void setWindowingMode(int,int)>(i0, i1);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public boolean shouldShowIme(int) throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        boolean $z0, z1, z2;
        android.view.IWindowManager $r3, $r4;
        java.lang.Throwable $r5;
        int i0, i1;
        android.os.IBinder r6;

        r0 := @this: android.view.IWindowManager$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        r6 = r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(104, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r3 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        if $r3 == null goto label5;

        $r4 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<android.view.IWindowManager: boolean shouldShowIme(int)>(i0);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i1 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public boolean shouldShowSystemDecors(int) throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        boolean $z0, z1, z2;
        android.view.IWindowManager $r3, $r4;
        java.lang.Throwable $r5;
        int i0, i1;
        android.os.IBinder r6;

        r0 := @this: android.view.IWindowManager$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        r6 = r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(102, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r3 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        if $r3 == null goto label5;

        $r4 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<android.view.IWindowManager: boolean shouldShowSystemDecors(int)>(i0);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i1 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public boolean shouldShowWithInsecureKeyguard(int) throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        boolean $z0, z1, z2;
        android.view.IWindowManager $r3, $r4;
        java.lang.Throwable $r5;
        int i0, i1;
        android.os.IBinder r6;

        r0 := @this: android.view.IWindowManager$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        r6 = r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(100, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r3 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        if $r3 == null goto label5;

        $r4 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<android.view.IWindowManager: boolean shouldShowWithInsecureKeyguard(int)>(i0);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i1 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public void showGlobalActions() throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.view.IWindowManager $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.view.IWindowManager$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

        $r4 = r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(114, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        interfaceinvoke $r6.<android.view.IWindowManager: void showGlobalActions()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void showStrictModeViolation(boolean) throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy r0;
        boolean z0, $z1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        android.view.IWindowManager $r5, $r6;
        java.lang.Throwable $r7;
        byte b0;

        r0 := @this: android.view.IWindowManager$Stub$Proxy;

        z0 := @parameter0: boolean;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

     label2:
        if z0 == 0 goto label3;

        b0 = 1;

        goto label4;

     label3:
        b0 = 0;

     label4:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b0);

        $r4 = r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(44, r1, r2, 0);

        if $z1 != 0 goto label6;

        $r5 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        if $r5 == null goto label6;

        $r6 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        interfaceinvoke $r6.<android.view.IWindowManager: void showStrictModeViolation(boolean)>(z0);

     label5:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label6:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label8:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label4 to label5 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
    }

    public void startFreezingScreen(int, int) throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy r0;
        int i0, i1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.view.IWindowManager $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.view.IWindowManager$Stub$Proxy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        $r4 = r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(28, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        interfaceinvoke $r6.<android.view.IWindowManager: void startFreezingScreen(int,int)>(i0, i1);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public boolean startViewServer(int) throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        boolean $z0, z1, z2;
        android.view.IWindowManager $r3, $r4;
        java.lang.Throwable $r5;
        int i0, i1;
        android.os.IBinder r6;

        r0 := @this: android.view.IWindowManager$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        r6 = r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r3 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        if $r3 == null goto label5;

        $r4 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<android.view.IWindowManager: boolean startViewServer(int)>(i0);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i1 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public void startWindowTrace() throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.view.IWindowManager $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.view.IWindowManager$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

        $r4 = r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(92, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        interfaceinvoke $r6.<android.view.IWindowManager: void startWindowTrace()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void statusBarVisibilityChanged(int, int) throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy r0;
        int i0, i1;
        android.os.Parcel r1;
        android.os.IBinder $r3;
        boolean $z0;
        android.view.IWindowManager $r4, $r5;
        java.lang.Throwable $r6;

        r0 := @this: android.view.IWindowManager$Stub$Proxy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        $r3 = r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(65, r1, null, 1);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        interfaceinvoke $r5.<android.view.IWindowManager: void statusBarVisibilityChanged(int,int)>(i0, i1);

     label2:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label4:
        $r6 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public void stopFreezingScreen() throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.view.IWindowManager $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.view.IWindowManager$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

        $r4 = r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(29, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        interfaceinvoke $r6.<android.view.IWindowManager: void stopFreezingScreen()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public boolean stopViewServer() throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        int i0;
        boolean $z0, z1, z2;
        android.view.IWindowManager $r3, $r4;
        java.lang.Throwable $r5;
        android.os.IBinder r6;

        r0 := @this: android.view.IWindowManager$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

        r6 = r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(2, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r3 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        if $r3 == null goto label5;

        $r4 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<android.view.IWindowManager: boolean stopViewServer()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i0 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public void stopWindowTrace() throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.view.IWindowManager $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.view.IWindowManager$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

        $r4 = r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(93, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        interfaceinvoke $r6.<android.view.IWindowManager: void stopWindowTrace()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void syncInputTransactions() throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.view.IWindowManager $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.view.IWindowManager$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

        $r4 = r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(107, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        interfaceinvoke $r6.<android.view.IWindowManager: void syncInputTransactions()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void thawDisplayRotation(int) throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.view.IWindowManager $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.view.IWindowManager$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(56, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        interfaceinvoke $r6.<android.view.IWindowManager: void thawDisplayRotation(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void thawRotation() throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.view.IWindowManager $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.view.IWindowManager$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

        $r4 = r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(53, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        interfaceinvoke $r6.<android.view.IWindowManager: void thawRotation()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void unregisterDisplayFoldListener(android.view.IDisplayFoldListener) throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r8;
        boolean $z0;
        android.view.IWindowManager $r4, $r5;
        java.lang.Throwable $r6;
        android.view.IDisplayFoldListener r7;

        r0 := @this: android.view.IWindowManager$Stub$Proxy;

        r7 := @parameter0: android.view.IDisplayFoldListener;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

     label02:
        if r7 == null goto label05;

     label03:
        r8 = interfaceinvoke r7.<android.view.IDisplayFoldListener: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r8 = null;

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r8);

        $r3 = r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(89, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        interfaceinvoke $r5.<android.view.IWindowManager: void unregisterDisplayFoldListener(android.view.IDisplayFoldListener)>(r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void unregisterDisplayWindowListener(android.view.IDisplayWindowListener) throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r8;
        boolean $z0;
        android.view.IWindowManager $r4, $r5;
        java.lang.Throwable $r6;
        android.view.IDisplayWindowListener r7;

        r0 := @this: android.view.IWindowManager$Stub$Proxy;

        r7 := @parameter0: android.view.IDisplayWindowListener;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

     label02:
        if r7 == null goto label05;

     label03:
        r8 = interfaceinvoke r7.<android.view.IDisplayWindowListener: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r8 = null;

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r8);

        $r3 = r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(91, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        interfaceinvoke $r5.<android.view.IWindowManager: void unregisterDisplayWindowListener(android.view.IDisplayWindowListener)>(r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void unregisterSystemGestureExclusionListener(android.view.ISystemGestureExclusionListener, int) throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r8;
        boolean $z0;
        android.view.IWindowManager $r4, $r5;
        java.lang.Throwable $r6;
        android.view.ISystemGestureExclusionListener r7;

        r0 := @this: android.view.IWindowManager$Stub$Proxy;

        r7 := @parameter0: android.view.ISystemGestureExclusionListener;

        i0 := @parameter1: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

     label02:
        if r7 == null goto label05;

     label03:
        r8 = interfaceinvoke r7.<android.view.ISystemGestureExclusionListener: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r8 = null;

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r8);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r3 = r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(63, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        interfaceinvoke $r5.<android.view.IWindowManager: void unregisterSystemGestureExclusionListener(android.view.ISystemGestureExclusionListener,int)>(r7, i0);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void unregisterWallpaperVisibilityListener(android.view.IWallpaperVisibilityListener, int) throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r8;
        boolean $z0;
        android.view.IWindowManager $r4, $r5;
        java.lang.Throwable $r6;
        android.view.IWallpaperVisibilityListener r7;

        r0 := @this: android.view.IWindowManager$Stub$Proxy;

        r7 := @parameter0: android.view.IWallpaperVisibilityListener;

        i0 := @parameter1: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

     label02:
        if r7 == null goto label05;

     label03:
        r8 = interfaceinvoke r7.<android.view.IWallpaperVisibilityListener: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r8 = null;

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r8);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r3 = r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(61, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        interfaceinvoke $r5.<android.view.IWindowManager: void unregisterWallpaperVisibilityListener(android.view.IWallpaperVisibilityListener,int)>(r7, i0);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void updateRotation(boolean, boolean) throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy r0;
        boolean z0, z1, $z2;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        android.view.IWindowManager $r5, $r6;
        java.lang.Throwable $r7;
        byte b1, b2;

        r0 := @this: android.view.IWindowManager$Stub$Proxy;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

     label02:
        if z0 == 0 goto label03;

        b1 = 1;

        goto label04;

     label03:
        b1 = 0;

     label04:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b1);

     label05:
        if z1 == 0 goto label06;

        b2 = 1;

        goto label07;

     label06:
        b2 = 0;

     label07:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b2);

        $r4 = r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z2 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(47, r1, r2, 0);

        if $z2 != 0 goto label09;

        $r5 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        if $r5 == null goto label09;

        $r6 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        interfaceinvoke $r6.<android.view.IWindowManager: void updateRotation(boolean,boolean)>(z0, z1);

     label08:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label09:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label10:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label11:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label04 to label05 with label11;
        catch java.lang.Throwable from label07 to label08 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
    }

    public boolean useBLAST() throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        int i0;
        boolean $z0, z1, z2;
        android.view.IWindowManager $r3, $r4;
        java.lang.Throwable $r5;
        android.os.IBinder r6;

        r0 := @this: android.view.IWindowManager$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

        r6 = r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(5, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r3 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        if $r3 == null goto label5;

        $r4 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<android.view.IWindowManager: boolean useBLAST()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i0 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public int watchRotation(android.view.IRotationWatcher, int) throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r8;
        boolean $z0;
        android.view.IWindowManager $r4, $r5;
        java.lang.Throwable $r6;
        android.view.IRotationWatcher r7;
        int i0, i1, i2;

        r0 := @this: android.view.IWindowManager$Stub$Proxy;

        r7 := @parameter0: android.view.IRotationWatcher;

        i0 := @parameter1: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

     label02:
        if r7 == null goto label05;

     label03:
        r8 = interfaceinvoke r7.<android.view.IRotationWatcher: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r8 = null;

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r8);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r3 = r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(49, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager getDefaultImpl()>();

        i1 = interfaceinvoke $r5.<android.view.IWindowManager: int watchRotation(android.view.IRotationWatcher,int)>(r7, i0);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i1;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i2 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i2;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }
}
