public abstract class android.view.IWindowManager$Stub extends android.os.Binder implements android.view.IWindowManager
{
    private static final java.lang.String DESCRIPTOR;
    static final int TRANSACTION_addShellRoot;
    static final int TRANSACTION_addWindowToken;
    static final int TRANSACTION_addWindowTokenWithOptions;
    static final int TRANSACTION_clearForcedDisplayDensityForUser;
    static final int TRANSACTION_clearForcedDisplaySize;
    static final int TRANSACTION_clearWindowContentFrameStats;
    static final int TRANSACTION_closeSystemDialogs;
    static final int TRANSACTION_createInputConsumer;
    static final int TRANSACTION_destroyInputConsumer;
    static final int TRANSACTION_disableKeyguard;
    static final int TRANSACTION_dismissKeyguard;
    static final int TRANSACTION_dontOverrideDisplayInfo;
    static final int TRANSACTION_enableScreenIfNeeded;
    static final int TRANSACTION_endProlongedAnimations;
    static final int TRANSACTION_executeAppTransition;
    static final int TRANSACTION_exitKeyguardSecurely;
    static final int TRANSACTION_freezeDisplayRotation;
    static final int TRANSACTION_freezeRotation;
    static final int TRANSACTION_getAnimationScale;
    static final int TRANSACTION_getAnimationScales;
    static final int TRANSACTION_getBaseDisplayDensity;
    static final int TRANSACTION_getBaseDisplaySize;
    static final int TRANSACTION_getCurrentAnimatorScale;
    static final int TRANSACTION_getCurrentImeTouchRegion;
    static final int TRANSACTION_getDefaultDisplayRotation;
    static final int TRANSACTION_getDockedStackSide;
    static final int TRANSACTION_getInitialDisplayDensity;
    static final int TRANSACTION_getInitialDisplaySize;
    static final int TRANSACTION_getNavBarPosition;
    static final int TRANSACTION_getPreferredOptionsPanelGravity;
    static final int TRANSACTION_getRemoveContentMode;
    static final int TRANSACTION_getStableInsets;
    static final int TRANSACTION_getWindowContentFrameStats;
    static final int TRANSACTION_getWindowInsets;
    static final int TRANSACTION_getWindowingMode;
    static final int TRANSACTION_hasNavigationBar;
    static final int TRANSACTION_hideTransientBars;
    static final int TRANSACTION_injectInputAfterTransactionsApplied;
    static final int TRANSACTION_isDisplayRotationFrozen;
    static final int TRANSACTION_isKeyguardLocked;
    static final int TRANSACTION_isKeyguardSecure;
    static final int TRANSACTION_isLayerTracing;
    static final int TRANSACTION_isRotationFrozen;
    static final int TRANSACTION_isSafeModeEnabled;
    static final int TRANSACTION_isViewServerRunning;
    static final int TRANSACTION_isWindowToken;
    static final int TRANSACTION_isWindowTraceEnabled;
    static final int TRANSACTION_lockNow;
    static final int TRANSACTION_mirrorDisplay;
    static final int TRANSACTION_modifyDisplayWindowInsets;
    static final int TRANSACTION_openSession;
    static final int TRANSACTION_overridePendingAppTransitionMultiThumbFuture;
    static final int TRANSACTION_overridePendingAppTransitionRemote;
    static final int TRANSACTION_prepareAppTransition;
    static final int TRANSACTION_reenableKeyguard;
    static final int TRANSACTION_refreshScreenCaptureDisabled;
    static final int TRANSACTION_registerDisplayFoldListener;
    static final int TRANSACTION_registerDisplayWindowListener;
    static final int TRANSACTION_registerPinnedStackListener;
    static final int TRANSACTION_registerShortcutKey;
    static final int TRANSACTION_registerSystemGestureExclusionListener;
    static final int TRANSACTION_registerWallpaperVisibilityListener;
    static final int TRANSACTION_removeRotationWatcher;
    static final int TRANSACTION_removeWindowToken;
    static final int TRANSACTION_requestAppKeyboardShortcuts;
    static final int TRANSACTION_requestAssistScreenshot;
    static final int TRANSACTION_requestScrollCapture;
    static final int TRANSACTION_screenshotWallpaper;
    static final int TRANSACTION_setAnimationScale;
    static final int TRANSACTION_setAnimationScales;
    static final int TRANSACTION_setDisplayWindowInsetsController;
    static final int TRANSACTION_setDisplayWindowRotationController;
    static final int TRANSACTION_setDockedStackDividerTouchRegion;
    static final int TRANSACTION_setEventDispatching;
    static final int TRANSACTION_setFixedToUserRotation;
    static final int TRANSACTION_setForceShowSystemBars;
    static final int TRANSACTION_setForcedDisplayDensityForUser;
    static final int TRANSACTION_setForcedDisplayScalingMode;
    static final int TRANSACTION_setForcedDisplaySize;
    static final int TRANSACTION_setForwardedInsets;
    static final int TRANSACTION_setInTouchMode;
    static final int TRANSACTION_setLayerTracing;
    static final int TRANSACTION_setLayerTracingFlags;
    static final int TRANSACTION_setNavBarVirtualKeyHapticFeedbackEnabled;
    static final int TRANSACTION_setPipVisibility;
    static final int TRANSACTION_setRecentsVisibility;
    static final int TRANSACTION_setRemoveContentMode;
    static final int TRANSACTION_setShellRootAccessibilityWindow;
    static final int TRANSACTION_setShouldShowIme;
    static final int TRANSACTION_setShouldShowSystemDecors;
    static final int TRANSACTION_setShouldShowWithInsecureKeyguard;
    static final int TRANSACTION_setStrictModeVisualIndicatorPreference;
    static final int TRANSACTION_setSwitchingUser;
    static final int TRANSACTION_setWindowingMode;
    static final int TRANSACTION_shouldShowIme;
    static final int TRANSACTION_shouldShowSystemDecors;
    static final int TRANSACTION_shouldShowWithInsecureKeyguard;
    static final int TRANSACTION_showGlobalActions;
    static final int TRANSACTION_showStrictModeViolation;
    static final int TRANSACTION_startFreezingScreen;
    static final int TRANSACTION_startViewServer;
    static final int TRANSACTION_startWindowTrace;
    static final int TRANSACTION_statusBarVisibilityChanged;
    static final int TRANSACTION_stopFreezingScreen;
    static final int TRANSACTION_stopViewServer;
    static final int TRANSACTION_stopWindowTrace;
    static final int TRANSACTION_syncInputTransactions;
    static final int TRANSACTION_thawDisplayRotation;
    static final int TRANSACTION_thawRotation;
    static final int TRANSACTION_unregisterDisplayFoldListener;
    static final int TRANSACTION_unregisterDisplayWindowListener;
    static final int TRANSACTION_unregisterSystemGestureExclusionListener;
    static final int TRANSACTION_unregisterWallpaperVisibilityListener;
    static final int TRANSACTION_updateRotation;
    static final int TRANSACTION_useBLAST;
    static final int TRANSACTION_watchRotation;

    public void <init>()
    {
        android.view.IWindowManager$Stub r0;

        r0 := @this: android.view.IWindowManager$Stub;

        specialinvoke r0.<android.os.Binder: void <init>()>();

        virtualinvoke r0.<android.view.IWindowManager$Stub: void attachInterface(android.os.IInterface,java.lang.String)>(r0, "android.view.IWindowManager");

        return;
    }

    public static android.view.IWindowManager asInterface(android.os.IBinder)
    {
        android.os.IBinder r0;
        android.os.IInterface r1;
        android.view.IWindowManager$Stub$Proxy $r2;
        boolean $z0;
        android.view.IWindowManager $r3;

        r0 := @parameter0: android.os.IBinder;

        if r0 != null goto label1;

        return null;

     label1:
        r1 = interfaceinvoke r0.<android.os.IBinder: android.os.IInterface queryLocalInterface(java.lang.String)>("android.view.IWindowManager");

        if r1 == null goto label2;

        $z0 = r1 instanceof android.view.IWindowManager;

        if $z0 == 0 goto label2;

        $r3 = (android.view.IWindowManager) r1;

        return $r3;

     label2:
        $r2 = new android.view.IWindowManager$Stub$Proxy;

        specialinvoke $r2.<android.view.IWindowManager$Stub$Proxy: void <init>(android.os.IBinder)>(r0);

        return $r2;
    }

    public static android.view.IWindowManager getDefaultImpl()
    {
        android.view.IWindowManager $r0;

        $r0 = <android.view.IWindowManager$Stub$Proxy: android.view.IWindowManager sDefaultImpl>;

        return $r0;
    }

    public static java.lang.String getDefaultTransactionName(int)
    {
        int i0;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 1: goto label117;
            case 2: goto label116;
            case 3: goto label115;
            case 4: goto label114;
            case 5: goto label113;
            case 6: goto label112;
            case 7: goto label111;
            case 8: goto label110;
            case 9: goto label109;
            case 10: goto label108;
            case 11: goto label107;
            case 12: goto label106;
            case 13: goto label105;
            case 14: goto label104;
            case 15: goto label103;
            case 16: goto label102;
            case 17: goto label101;
            case 18: goto label100;
            case 19: goto label099;
            case 20: goto label098;
            case 21: goto label097;
            case 22: goto label096;
            case 23: goto label095;
            case 24: goto label094;
            case 25: goto label093;
            case 26: goto label092;
            case 27: goto label091;
            case 28: goto label090;
            case 29: goto label089;
            case 30: goto label088;
            case 31: goto label087;
            case 32: goto label086;
            case 33: goto label085;
            case 34: goto label084;
            case 35: goto label083;
            case 36: goto label082;
            case 37: goto label081;
            case 38: goto label080;
            case 39: goto label079;
            case 40: goto label078;
            case 41: goto label077;
            case 42: goto label076;
            case 43: goto label075;
            case 44: goto label074;
            case 45: goto label073;
            case 46: goto label072;
            case 47: goto label071;
            case 48: goto label070;
            case 49: goto label069;
            case 50: goto label068;
            case 51: goto label067;
            case 52: goto label066;
            case 53: goto label065;
            case 54: goto label064;
            case 55: goto label063;
            case 56: goto label062;
            case 57: goto label061;
            case 58: goto label060;
            case 59: goto label059;
            case 60: goto label058;
            case 61: goto label057;
            case 62: goto label056;
            case 63: goto label055;
            case 64: goto label054;
            case 65: goto label053;
            case 66: goto label052;
            case 67: goto label051;
            case 68: goto label050;
            case 69: goto label049;
            case 70: goto label048;
            case 71: goto label047;
            case 72: goto label046;
            case 73: goto label045;
            case 74: goto label044;
            case 75: goto label043;
            case 76: goto label042;
            case 77: goto label041;
            case 78: goto label040;
            case 79: goto label039;
            case 80: goto label038;
            case 81: goto label037;
            case 82: goto label036;
            case 83: goto label035;
            case 84: goto label034;
            case 85: goto label033;
            case 86: goto label032;
            case 87: goto label031;
            case 88: goto label030;
            case 89: goto label029;
            case 90: goto label028;
            case 91: goto label027;
            case 92: goto label026;
            case 93: goto label025;
            case 94: goto label024;
            case 95: goto label023;
            case 96: goto label022;
            case 97: goto label021;
            case 98: goto label020;
            case 99: goto label019;
            case 100: goto label018;
            case 101: goto label017;
            case 102: goto label016;
            case 103: goto label015;
            case 104: goto label014;
            case 105: goto label013;
            case 106: goto label012;
            case 107: goto label011;
            case 108: goto label010;
            case 109: goto label009;
            case 110: goto label008;
            case 111: goto label007;
            case 112: goto label006;
            case 113: goto label005;
            case 114: goto label004;
            case 115: goto label003;
            case 116: goto label002;
            default: goto label001;
        };

     label001:
        return null;

     label002:
        return "requestScrollCapture";

     label003:
        return "setLayerTracingFlags";

     label004:
        return "showGlobalActions";

     label005:
        return "getWindowInsets";

     label006:
        return "modifyDisplayWindowInsets";

     label007:
        return "setDisplayWindowInsetsController";

     label008:
        return "mirrorDisplay";

     label009:
        return "setLayerTracing";

     label010:
        return "isLayerTracing";

     label011:
        return "syncInputTransactions";

     label012:
        return "injectInputAfterTransactionsApplied";

     label013:
        return "setShouldShowIme";

     label014:
        return "shouldShowIme";

     label015:
        return "setShouldShowSystemDecors";

     label016:
        return "shouldShowSystemDecors";

     label017:
        return "setShouldShowWithInsecureKeyguard";

     label018:
        return "shouldShowWithInsecureKeyguard";

     label019:
        return "setRemoveContentMode";

     label020:
        return "getRemoveContentMode";

     label021:
        return "setWindowingMode";

     label022:
        return "getWindowingMode";

     label023:
        return "dontOverrideDisplayInfo";

     label024:
        return "isWindowTraceEnabled";

     label025:
        return "stopWindowTrace";

     label026:
        return "startWindowTrace";

     label027:
        return "unregisterDisplayWindowListener";

     label028:
        return "registerDisplayWindowListener";

     label029:
        return "unregisterDisplayFoldListener";

     label030:
        return "registerDisplayFoldListener";

     label031:
        return "getCurrentImeTouchRegion";

     label032:
        return "destroyInputConsumer";

     label033:
        return "createInputConsumer";

     label034:
        return "registerShortcutKey";

     label035:
        return "setForwardedInsets";

     label036:
        return "getStableInsets";

     label037:
        return "requestAppKeyboardShortcuts";

     label038:
        return "registerPinnedStackListener";

     label039:
        return "setDockedStackDividerTouchRegion";

     label040:
        return "getDockedStackSide";

     label041:
        return "getWindowContentFrameStats";

     label042:
        return "clearWindowContentFrameStats";

     label043:
        return "enableScreenIfNeeded";

     label044:
        return "isSafeModeEnabled";

     label045:
        return "lockNow";

     label046:
        return "getNavBarPosition";

     label047:
        return "hasNavigationBar";

     label048:
        return "setNavBarVirtualKeyHapticFeedbackEnabled";

     label049:
        return "setPipVisibility";

     label050:
        return "setRecentsVisibility";

     label051:
        return "setForceShowSystemBars";

     label052:
        return "hideTransientBars";

     label053:
        return "statusBarVisibilityChanged";

     label054:
        return "requestAssistScreenshot";

     label055:
        return "unregisterSystemGestureExclusionListener";

     label056:
        return "registerSystemGestureExclusionListener";

     label057:
        return "unregisterWallpaperVisibilityListener";

     label058:
        return "registerWallpaperVisibilityListener";

     label059:
        return "screenshotWallpaper";

     label060:
        return "setFixedToUserRotation";

     label061:
        return "isDisplayRotationFrozen";

     label062:
        return "thawDisplayRotation";

     label063:
        return "freezeDisplayRotation";

     label064:
        return "isRotationFrozen";

     label065:
        return "thawRotation";

     label066:
        return "freezeRotation";

     label067:
        return "getPreferredOptionsPanelGravity";

     label068:
        return "removeRotationWatcher";

     label069:
        return "watchRotation";

     label070:
        return "getDefaultDisplayRotation";

     label071:
        return "updateRotation";

     label072:
        return "refreshScreenCaptureDisabled";

     label073:
        return "setStrictModeVisualIndicatorPreference";

     label074:
        return "showStrictModeViolation";

     label075:
        return "setInTouchMode";

     label076:
        return "getCurrentAnimatorScale";

     label077:
        return "setAnimationScales";

     label078:
        return "setAnimationScale";

     label079:
        return "getAnimationScales";

     label080:
        return "getAnimationScale";

     label081:
        return "closeSystemDialogs";

     label082:
        return "setSwitchingUser";

     label083:
        return "dismissKeyguard";

     label084:
        return "isKeyguardSecure";

     label085:
        return "isKeyguardLocked";

     label086:
        return "exitKeyguardSecurely";

     label087:
        return "reenableKeyguard";

     label088:
        return "disableKeyguard";

     label089:
        return "stopFreezingScreen";

     label090:
        return "startFreezingScreen";

     label091:
        return "endProlongedAnimations";

     label092:
        return "executeAppTransition";

     label093:
        return "overridePendingAppTransitionRemote";

     label094:
        return "overridePendingAppTransitionMultiThumbFuture";

     label095:
        return "setShellRootAccessibilityWindow";

     label096:
        return "addShellRoot";

     label097:
        return "setDisplayWindowRotationController";

     label098:
        return "prepareAppTransition";

     label099:
        return "removeWindowToken";

     label100:
        return "addWindowToken";

     label101:
        return "addWindowTokenWithOptions";

     label102:
        return "isWindowToken";

     label103:
        return "setEventDispatching";

     label104:
        return "setForcedDisplayScalingMode";

     label105:
        return "clearForcedDisplayDensityForUser";

     label106:
        return "setForcedDisplayDensityForUser";

     label107:
        return "getBaseDisplayDensity";

     label108:
        return "getInitialDisplayDensity";

     label109:
        return "clearForcedDisplaySize";

     label110:
        return "setForcedDisplaySize";

     label111:
        return "getBaseDisplaySize";

     label112:
        return "getInitialDisplaySize";

     label113:
        return "useBLAST";

     label114:
        return "openSession";

     label115:
        return "isViewServerRunning";

     label116:
        return "stopViewServer";

     label117:
        return "startViewServer";
    }

    public static boolean setDefaultImpl(android.view.IWindowManager)
    {
        android.view.IWindowManager r0, $r1;
        java.lang.IllegalStateException $r2;

        r0 := @parameter0: android.view.IWindowManager;

        $r1 = <android.view.IWindowManager$Stub$Proxy: android.view.IWindowManager sDefaultImpl>;

        if $r1 != null goto label2;

        if r0 == null goto label1;

        <android.view.IWindowManager$Stub$Proxy: android.view.IWindowManager sDefaultImpl> = r0;

        return 1;

     label1:
        return 0;

     label2:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("setDefaultImpl() called twice");

        throw $r2;
    }

    public android.os.IBinder asBinder()
    {
        android.view.IWindowManager$Stub r0;

        r0 := @this: android.view.IWindowManager$Stub;

        return r0;
    }

    public java.lang.String getTransactionName(int)
    {
        android.view.IWindowManager$Stub r0;
        int i0;
        java.lang.String $r1;

        r0 := @this: android.view.IWindowManager$Stub;

        i0 := @parameter0: int;

        $r1 = staticinvoke <android.view.IWindowManager$Stub: java.lang.String getDefaultTransactionName(int)>(i0);

        return $r1;
    }

    public boolean onTransact(int, android.os.Parcel, android.os.Parcel, int) throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub r0;
        android.os.Parcel r1, r90;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65, $i66, $i67, $i68, $i69, $i70, $i71, $i72, $i73, $i74, $i75, $i76, $i77, $i78, $i79, $i80, $i81, $i82, $i83, $i84, $i85, $i86, $i87, $i88, $i89, $i90, $i91, $i92, i93, i94, i95, i96, i97, i98, i99, i100, i101, i102, i103, i104, i105, i106, i107, i108, i109, i110, i111, i112, i113, i114, i115, i116, i117, i118, i119, i120, i121, i122, i123, i124, i125, i126, i127, i128, i129, i130, i131, i132, i133, i134, i135, i136, i137, i138, i139, i140, i141;
        android.os.IBinder $r4, $r5, $r15, $r20, $r22, $r24, $r26, $r30, $r35, $r37, $r41, $r42, $r45, $r47, $r49, $r51, $r53, $r55, $r57, $r62, $r65, $r67, $r68, $r72, $r73, $r74, $r76, $r78, $r80, $r81, $r85, $r88, r98, r114, r119;
        android.view.IScrollCaptureController $r6;
        android.graphics.Rect $r7, $r8, $r34, r103;
        android.view.DisplayCutout$ParcelableWrapper $r9;
        android.view.InsetsState $r10, r94;
        android.os.Parcelable$Creator $r11, $r13, $r18, $r32, $r39, $r43, $r63, $r70, $r83;
        java.lang.Object $r12, $r14, $r19, $r33, $r40, $r44, $r64, $r71, $r84;
        android.view.IDisplayWindowInsetsController $r16;
        android.view.SurfaceControl $r17, r113;
        android.view.IDisplayWindowListener $r21, $r23;
        android.view.IDisplayFoldListener $r25, $r27;
        java.lang.String $r28, $r59, $r61, $r69, $r82, r99;
        android.view.InputChannel $r29;
        long $l23;
        com.android.internal.policy.IShortcutService $r31;
        com.android.internal.os.IResultReceiver $r36;
        android.view.IPinnedStackListener $r38;
        android.app.IAssistDataReceiver $r46;
        android.view.ISystemGestureExclusionListener $r48, $r50;
        android.view.IWallpaperVisibilityListener $r52, $r54;
        android.view.IRotationWatcher $r56, $r58;
        float[] $r60, r107;
        float $f0, f1, f2;
        android.view.IOnKeyguardExitResult $r66;
        android.view.IWindow $r75, $r77;
        android.view.IDisplayWindowRotationController $r79;
        android.graphics.Point $r86, $r87;
        android.view.IWindowSessionCallback $r89;
        boolean $z13, z14, z15, z16, z17, z18, z19, z20, z21, z22, z23, z24, z25, z26, z27, z28, z29, z30, z31, z32, z33, z34, z35, z36, z37, z38, z39, z40, z41, z42, z43, z44, z45, z46, z47, z48, z49, z50, z51, z52;
        android.view.WindowManager$LayoutParams r91;
        android.view.InputEvent r96;
        android.graphics.Region r97;
        android.graphics.Insets r101;
        android.view.WindowContentFrameStats r104;
        android.os.Bundle r105, r115;
        android.graphics.Bitmap r106;
        com.android.internal.policy.IKeyguardDismissCallback r108;
        java.lang.CharSequence r109;
        android.view.RemoteAnimationAdapter r110;
        android.view.IAppTransitionAnimationSpecsFuture r111;
        android.os.IRemoteCallback r112;
        android.view.IWindowSession r118;

        r0 := @this: android.view.IWindowManager$Stub;

        i93 := @parameter0: int;

        r90 := @parameter1: android.os.Parcel;

        r1 := @parameter2: android.os.Parcel;

        i94 := @parameter3: int;

        if i93 == 1598968902 goto label163;

        z14 = 0;

        z15 = 0;

        tableswitch(i93)
        {
            case 1: goto label162;
            case 2: goto label161;
            case 3: goto label160;
            case 4: goto label157;
            case 5: goto label156;
            case 6: goto label155;
            case 7: goto label154;
            case 8: goto label153;
            case 9: goto label152;
            case 10: goto label151;
            case 11: goto label150;
            case 12: goto label149;
            case 13: goto label148;
            case 14: goto label147;
            case 15: goto label145;
            case 16: goto label144;
            case 17: goto label141;
            case 18: goto label140;
            case 19: goto label139;
            case 20: goto label137;
            case 21: goto label136;
            case 22: goto label133;
            case 23: goto label132;
            case 24: goto label130;
            case 25: goto label127;
            case 26: goto label126;
            case 27: goto label125;
            case 28: goto label124;
            case 29: goto label123;
            case 30: goto label122;
            case 31: goto label121;
            case 32: goto label120;
            case 33: goto label119;
            case 34: goto label118;
            case 35: goto label115;
            case 36: goto label113;
            case 37: goto label112;
            case 38: goto label111;
            case 39: goto label110;
            case 40: goto label109;
            case 41: goto label108;
            case 42: goto label107;
            case 43: goto label105;
            case 44: goto label103;
            case 45: goto label102;
            case 46: goto label101;
            case 47: goto label097;
            case 48: goto label096;
            case 49: goto label095;
            case 50: goto label094;
            case 51: goto label093;
            case 52: goto label092;
            case 53: goto label091;
            case 54: goto label090;
            case 55: goto label089;
            case 56: goto label088;
            case 57: goto label087;
            case 58: goto label086;
            case 59: goto label083;
            case 60: goto label082;
            case 61: goto label081;
            case 62: goto label080;
            case 63: goto label079;
            case 64: goto label078;
            case 65: goto label077;
            case 66: goto label076;
            case 67: goto label074;
            case 68: goto label072;
            case 69: goto label070;
            case 70: goto label068;
            case 71: goto label067;
            case 72: goto label066;
            case 73: goto label063;
            case 74: goto label062;
            case 75: goto label061;
            case 76: goto label060;
            case 77: goto label057;
            case 78: goto label056;
            case 79: goto label053;
            case 80: goto label052;
            case 81: goto label051;
            case 82: goto label050;
            case 83: goto label047;
            case 84: goto label046;
            case 85: goto label045;
            case 86: goto label044;
            case 87: goto label041;
            case 88: goto label040;
            case 89: goto label039;
            case 90: goto label038;
            case 91: goto label037;
            case 92: goto label036;
            case 93: goto label035;
            case 94: goto label034;
            case 95: goto label033;
            case 96: goto label032;
            case 97: goto label031;
            case 98: goto label030;
            case 99: goto label029;
            case 100: goto label028;
            case 101: goto label026;
            case 102: goto label025;
            case 103: goto label023;
            case 104: goto label022;
            case 105: goto label020;
            case 106: goto label017;
            case 107: goto label016;
            case 108: goto label015;
            case 109: goto label013;
            case 110: goto label012;
            case 111: goto label011;
            case 112: goto label008;
            case 113: goto label005;
            case 114: goto label004;
            case 115: goto label003;
            case 116: goto label002;
            default: goto label001;
        };

     label001:
        $z13 = specialinvoke r0.<android.os.Binder: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>(i93, r90, r1, i94);

        return $z13;

     label002:
        virtualinvoke r90.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        $i0 = virtualinvoke r90.<android.os.Parcel: int readInt()>();

        $r4 = virtualinvoke r90.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $i1 = virtualinvoke r90.<android.os.Parcel: int readInt()>();

        $r5 = virtualinvoke r90.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r6 = staticinvoke <android.view.IScrollCaptureController$Stub: android.view.IScrollCaptureController asInterface(android.os.IBinder)>($r5);

        virtualinvoke r0.<android.view.IWindowManager$Stub: void requestScrollCapture(int,android.os.IBinder,int,android.view.IScrollCaptureController)>($i0, $r4, $i1, $r6);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label003:
        virtualinvoke r90.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        $i2 = virtualinvoke r90.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.view.IWindowManager$Stub: void setLayerTracingFlags(int)>($i2);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label004:
        virtualinvoke r90.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        virtualinvoke r0.<android.view.IWindowManager$Stub: void showGlobalActions()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label005:
        virtualinvoke r90.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        $i3 = virtualinvoke r90.<android.os.Parcel: int readInt()>();

        if $i3 == 0 goto label006;

        $r11 = <android.view.WindowManager$LayoutParams: android.os.Parcelable$Creator CREATOR>;

        $r12 = interfaceinvoke $r11.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r90);

        r91 = (android.view.WindowManager$LayoutParams) $r12;

        goto label007;

     label006:
        r91 = null;

     label007:
        i95 = virtualinvoke r90.<android.os.Parcel: int readInt()>();

        $r7 = new android.graphics.Rect;

        specialinvoke $r7.<android.graphics.Rect: void <init>()>();

        $r8 = new android.graphics.Rect;

        specialinvoke $r8.<android.graphics.Rect: void <init>()>();

        $r9 = new android.view.DisplayCutout$ParcelableWrapper;

        specialinvoke $r9.<android.view.DisplayCutout$ParcelableWrapper: void <init>()>();

        $r10 = new android.view.InsetsState;

        specialinvoke $r10.<android.view.InsetsState: void <init>()>();

        z16 = virtualinvoke r0.<android.view.IWindowManager$Stub: boolean getWindowInsets(android.view.WindowManager$LayoutParams,int,android.graphics.Rect,android.graphics.Rect,android.view.DisplayCutout$ParcelableWrapper,android.view.InsetsState)>(r91, i95, $r7, $r8, $r9, $r10);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i119 = (int) z16;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i119);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke $r7.<android.graphics.Rect: void writeToParcel(android.os.Parcel,int)>(r1, 1);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke $r8.<android.graphics.Rect: void writeToParcel(android.os.Parcel,int)>(r1, 1);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke $r9.<android.view.DisplayCutout$ParcelableWrapper: void writeToParcel(android.os.Parcel,int)>(r1, 1);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke $r10.<android.view.InsetsState: void writeToParcel(android.os.Parcel,int)>(r1, 1);

        return 1;

     label008:
        virtualinvoke r90.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        i96 = virtualinvoke r90.<android.os.Parcel: int readInt()>();

        $i4 = virtualinvoke r90.<android.os.Parcel: int readInt()>();

        if $i4 == 0 goto label009;

        $r13 = <android.view.InsetsState: android.os.Parcelable$Creator CREATOR>;

        $r14 = interfaceinvoke $r13.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r90);

        r94 = (android.view.InsetsState) $r14;

        goto label010;

     label009:
        r94 = null;

     label010:
        virtualinvoke r0.<android.view.IWindowManager$Stub: void modifyDisplayWindowInsets(int,android.view.InsetsState)>(i96, r94);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label011:
        virtualinvoke r90.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        $i5 = virtualinvoke r90.<android.os.Parcel: int readInt()>();

        $r15 = virtualinvoke r90.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r16 = staticinvoke <android.view.IDisplayWindowInsetsController$Stub: android.view.IDisplayWindowInsetsController asInterface(android.os.IBinder)>($r15);

        virtualinvoke r0.<android.view.IWindowManager$Stub: void setDisplayWindowInsetsController(int,android.view.IDisplayWindowInsetsController)>($i5, $r16);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label012:
        virtualinvoke r90.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        i97 = virtualinvoke r90.<android.os.Parcel: int readInt()>();

        $r17 = new android.view.SurfaceControl;

        specialinvoke $r17.<android.view.SurfaceControl: void <init>()>();

        z17 = virtualinvoke r0.<android.view.IWindowManager$Stub: boolean mirrorDisplay(int,android.view.SurfaceControl)>(i97, $r17);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i120 = (int) z17;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i120);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke $r17.<android.view.SurfaceControl: void writeToParcel(android.os.Parcel,int)>(r1, 1);

        return 1;

     label013:
        virtualinvoke r90.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        $i6 = virtualinvoke r90.<android.os.Parcel: int readInt()>();

        if $i6 == 0 goto label014;

        z15 = 1;

     label014:
        virtualinvoke r0.<android.view.IWindowManager$Stub: void setLayerTracing(boolean)>(z15);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label015:
        virtualinvoke r90.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        z18 = virtualinvoke r0.<android.view.IWindowManager$Stub: boolean isLayerTracing()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i121 = (int) z18;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i121);

        return 1;

     label016:
        virtualinvoke r90.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        virtualinvoke r0.<android.view.IWindowManager$Stub: void syncInputTransactions()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label017:
        virtualinvoke r90.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        $i7 = virtualinvoke r90.<android.os.Parcel: int readInt()>();

        if $i7 == 0 goto label018;

        $r18 = <android.view.InputEvent: android.os.Parcelable$Creator CREATOR>;

        $r19 = interfaceinvoke $r18.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r90);

        r96 = (android.view.InputEvent) $r19;

        goto label019;

     label018:
        r96 = null;

     label019:
        $i8 = virtualinvoke r90.<android.os.Parcel: int readInt()>();

        z19 = virtualinvoke r0.<android.view.IWindowManager$Stub: boolean injectInputAfterTransactionsApplied(android.view.InputEvent,int)>(r96, $i8);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i122 = (int) z19;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i122);

        return 1;

     label020:
        virtualinvoke r90.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        i98 = virtualinvoke r90.<android.os.Parcel: int readInt()>();

        z20 = 0;

        $i9 = virtualinvoke r90.<android.os.Parcel: int readInt()>();

        if $i9 == 0 goto label021;

        z20 = 1;

     label021:
        virtualinvoke r0.<android.view.IWindowManager$Stub: void setShouldShowIme(int,boolean)>(i98, z20);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label022:
        virtualinvoke r90.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        $i10 = virtualinvoke r90.<android.os.Parcel: int readInt()>();

        z21 = virtualinvoke r0.<android.view.IWindowManager$Stub: boolean shouldShowIme(int)>($i10);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i123 = (int) z21;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i123);

        return 1;

     label023:
        virtualinvoke r90.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        i99 = virtualinvoke r90.<android.os.Parcel: int readInt()>();

        z22 = 0;

        $i11 = virtualinvoke r90.<android.os.Parcel: int readInt()>();

        if $i11 == 0 goto label024;

        z22 = 1;

     label024:
        virtualinvoke r0.<android.view.IWindowManager$Stub: void setShouldShowSystemDecors(int,boolean)>(i99, z22);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label025:
        virtualinvoke r90.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        $i12 = virtualinvoke r90.<android.os.Parcel: int readInt()>();

        z23 = virtualinvoke r0.<android.view.IWindowManager$Stub: boolean shouldShowSystemDecors(int)>($i12);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i124 = (int) z23;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i124);

        return 1;

     label026:
        virtualinvoke r90.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        i100 = virtualinvoke r90.<android.os.Parcel: int readInt()>();

        z24 = 0;

        $i13 = virtualinvoke r90.<android.os.Parcel: int readInt()>();

        if $i13 == 0 goto label027;

        z24 = 1;

     label027:
        virtualinvoke r0.<android.view.IWindowManager$Stub: void setShouldShowWithInsecureKeyguard(int,boolean)>(i100, z24);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label028:
        virtualinvoke r90.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        $i14 = virtualinvoke r90.<android.os.Parcel: int readInt()>();

        z25 = virtualinvoke r0.<android.view.IWindowManager$Stub: boolean shouldShowWithInsecureKeyguard(int)>($i14);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i125 = (int) z25;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i125);

        return 1;

     label029:
        virtualinvoke r90.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        $i15 = virtualinvoke r90.<android.os.Parcel: int readInt()>();

        $i16 = virtualinvoke r90.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.view.IWindowManager$Stub: void setRemoveContentMode(int,int)>($i15, $i16);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label030:
        virtualinvoke r90.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        $i17 = virtualinvoke r90.<android.os.Parcel: int readInt()>();

        i101 = virtualinvoke r0.<android.view.IWindowManager$Stub: int getRemoveContentMode(int)>($i17);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i101);

        return 1;

     label031:
        virtualinvoke r90.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        $i18 = virtualinvoke r90.<android.os.Parcel: int readInt()>();

        $i19 = virtualinvoke r90.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.view.IWindowManager$Stub: void setWindowingMode(int,int)>($i18, $i19);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label032:
        virtualinvoke r90.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        $i20 = virtualinvoke r90.<android.os.Parcel: int readInt()>();

        i102 = virtualinvoke r0.<android.view.IWindowManager$Stub: int getWindowingMode(int)>($i20);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i102);

        return 1;

     label033:
        virtualinvoke r90.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        $i21 = virtualinvoke r90.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.view.IWindowManager$Stub: void dontOverrideDisplayInfo(int)>($i21);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label034:
        virtualinvoke r90.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        z26 = virtualinvoke r0.<android.view.IWindowManager$Stub: boolean isWindowTraceEnabled()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i126 = (int) z26;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i126);

        return 1;

     label035:
        virtualinvoke r90.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        virtualinvoke r0.<android.view.IWindowManager$Stub: void stopWindowTrace()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label036:
        virtualinvoke r90.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        virtualinvoke r0.<android.view.IWindowManager$Stub: void startWindowTrace()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label037:
        virtualinvoke r90.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        $r20 = virtualinvoke r90.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r21 = staticinvoke <android.view.IDisplayWindowListener$Stub: android.view.IDisplayWindowListener asInterface(android.os.IBinder)>($r20);

        virtualinvoke r0.<android.view.IWindowManager$Stub: void unregisterDisplayWindowListener(android.view.IDisplayWindowListener)>($r21);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label038:
        virtualinvoke r90.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        $r22 = virtualinvoke r90.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r23 = staticinvoke <android.view.IDisplayWindowListener$Stub: android.view.IDisplayWindowListener asInterface(android.os.IBinder)>($r22);

        virtualinvoke r0.<android.view.IWindowManager$Stub: void registerDisplayWindowListener(android.view.IDisplayWindowListener)>($r23);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label039:
        virtualinvoke r90.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        $r24 = virtualinvoke r90.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r25 = staticinvoke <android.view.IDisplayFoldListener$Stub: android.view.IDisplayFoldListener asInterface(android.os.IBinder)>($r24);

        virtualinvoke r0.<android.view.IWindowManager$Stub: void unregisterDisplayFoldListener(android.view.IDisplayFoldListener)>($r25);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label040:
        virtualinvoke r90.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        $r26 = virtualinvoke r90.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r27 = staticinvoke <android.view.IDisplayFoldListener$Stub: android.view.IDisplayFoldListener asInterface(android.os.IBinder)>($r26);

        virtualinvoke r0.<android.view.IWindowManager$Stub: void registerDisplayFoldListener(android.view.IDisplayFoldListener)>($r27);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label041:
        virtualinvoke r90.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        r97 = virtualinvoke r0.<android.view.IWindowManager$Stub: android.graphics.Region getCurrentImeTouchRegion()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        if r97 == null goto label042;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r97.<android.graphics.Region: void writeToParcel(android.os.Parcel,int)>(r1, 1);

        goto label043;

     label042:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label043:
        return 1;

     label044:
        virtualinvoke r90.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        $r28 = virtualinvoke r90.<android.os.Parcel: java.lang.String readString()>();

        $i22 = virtualinvoke r90.<android.os.Parcel: int readInt()>();

        z27 = virtualinvoke r0.<android.view.IWindowManager$Stub: boolean destroyInputConsumer(java.lang.String,int)>($r28, $i22);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i127 = (int) z27;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i127);

        return 1;

     label045:
        virtualinvoke r90.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        r98 = virtualinvoke r90.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        r99 = virtualinvoke r90.<android.os.Parcel: java.lang.String readString()>();

        i103 = virtualinvoke r90.<android.os.Parcel: int readInt()>();

        $r29 = new android.view.InputChannel;

        specialinvoke $r29.<android.view.InputChannel: void <init>()>();

        virtualinvoke r0.<android.view.IWindowManager$Stub: void createInputConsumer(android.os.IBinder,java.lang.String,int,android.view.InputChannel)>(r98, r99, i103, $r29);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke $r29.<android.view.InputChannel: void writeToParcel(android.os.Parcel,int)>(r1, 1);

        return 1;

     label046:
        virtualinvoke r90.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        $l23 = virtualinvoke r90.<android.os.Parcel: long readLong()>();

        $r30 = virtualinvoke r90.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r31 = staticinvoke <com.android.internal.policy.IShortcutService$Stub: com.android.internal.policy.IShortcutService asInterface(android.os.IBinder)>($r30);

        virtualinvoke r0.<android.view.IWindowManager$Stub: void registerShortcutKey(long,com.android.internal.policy.IShortcutService)>($l23, $r31);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label047:
        virtualinvoke r90.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        i104 = virtualinvoke r90.<android.os.Parcel: int readInt()>();

        $i24 = virtualinvoke r90.<android.os.Parcel: int readInt()>();

        if $i24 == 0 goto label048;

        $r32 = <android.graphics.Insets: android.os.Parcelable$Creator CREATOR>;

        $r33 = interfaceinvoke $r32.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r90);

        r101 = (android.graphics.Insets) $r33;

        goto label049;

     label048:
        r101 = null;

     label049:
        virtualinvoke r0.<android.view.IWindowManager$Stub: void setForwardedInsets(int,android.graphics.Insets)>(i104, r101);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label050:
        virtualinvoke r90.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        i105 = virtualinvoke r90.<android.os.Parcel: int readInt()>();

        $r34 = new android.graphics.Rect;

        specialinvoke $r34.<android.graphics.Rect: void <init>()>();

        virtualinvoke r0.<android.view.IWindowManager$Stub: void getStableInsets(int,android.graphics.Rect)>(i105, $r34);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke $r34.<android.graphics.Rect: void writeToParcel(android.os.Parcel,int)>(r1, 1);

        return 1;

     label051:
        virtualinvoke r90.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        $r35 = virtualinvoke r90.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r36 = staticinvoke <com.android.internal.os.IResultReceiver$Stub: com.android.internal.os.IResultReceiver asInterface(android.os.IBinder)>($r35);

        $i25 = virtualinvoke r90.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.view.IWindowManager$Stub: void requestAppKeyboardShortcuts(com.android.internal.os.IResultReceiver,int)>($r36, $i25);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label052:
        virtualinvoke r90.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        $i26 = virtualinvoke r90.<android.os.Parcel: int readInt()>();

        $r37 = virtualinvoke r90.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r38 = staticinvoke <android.view.IPinnedStackListener$Stub: android.view.IPinnedStackListener asInterface(android.os.IBinder)>($r37);

        virtualinvoke r0.<android.view.IWindowManager$Stub: void registerPinnedStackListener(int,android.view.IPinnedStackListener)>($i26, $r38);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label053:
        virtualinvoke r90.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        $i27 = virtualinvoke r90.<android.os.Parcel: int readInt()>();

        if $i27 == 0 goto label054;

        $r39 = <android.graphics.Rect: android.os.Parcelable$Creator CREATOR>;

        $r40 = interfaceinvoke $r39.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r90);

        r103 = (android.graphics.Rect) $r40;

        goto label055;

     label054:
        r103 = null;

     label055:
        virtualinvoke r0.<android.view.IWindowManager$Stub: void setDockedStackDividerTouchRegion(android.graphics.Rect)>(r103);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label056:
        virtualinvoke r90.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        i106 = virtualinvoke r0.<android.view.IWindowManager$Stub: int getDockedStackSide()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i106);

        return 1;

     label057:
        virtualinvoke r90.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        $r41 = virtualinvoke r90.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        r104 = virtualinvoke r0.<android.view.IWindowManager$Stub: android.view.WindowContentFrameStats getWindowContentFrameStats(android.os.IBinder)>($r41);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        if r104 == null goto label058;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r104.<android.view.WindowContentFrameStats: void writeToParcel(android.os.Parcel,int)>(r1, 1);

        goto label059;

     label058:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label059:
        return 1;

     label060:
        virtualinvoke r90.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        $r42 = virtualinvoke r90.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        z28 = virtualinvoke r0.<android.view.IWindowManager$Stub: boolean clearWindowContentFrameStats(android.os.IBinder)>($r42);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i128 = (int) z28;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i128);

        return 1;

     label061:
        virtualinvoke r90.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        virtualinvoke r0.<android.view.IWindowManager$Stub: void enableScreenIfNeeded()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label062:
        virtualinvoke r90.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        z29 = virtualinvoke r0.<android.view.IWindowManager$Stub: boolean isSafeModeEnabled()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i129 = (int) z29;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i129);

        return 1;

     label063:
        virtualinvoke r90.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        $i28 = virtualinvoke r90.<android.os.Parcel: int readInt()>();

        if $i28 == 0 goto label064;

        $r43 = <android.os.Bundle: android.os.Parcelable$Creator CREATOR>;

        $r44 = interfaceinvoke $r43.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r90);

        r105 = (android.os.Bundle) $r44;

        goto label065;

     label064:
        r105 = null;

     label065:
        virtualinvoke r0.<android.view.IWindowManager$Stub: void lockNow(android.os.Bundle)>(r105);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label066:
        virtualinvoke r90.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        $i29 = virtualinvoke r90.<android.os.Parcel: int readInt()>();

        i107 = virtualinvoke r0.<android.view.IWindowManager$Stub: int getNavBarPosition(int)>($i29);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i107);

        return 1;

     label067:
        virtualinvoke r90.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        $i30 = virtualinvoke r90.<android.os.Parcel: int readInt()>();

        z30 = virtualinvoke r0.<android.view.IWindowManager$Stub: boolean hasNavigationBar(int)>($i30);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i130 = (int) z30;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i130);

        return 1;

     label068:
        virtualinvoke r90.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        z31 = 0;

        $i31 = virtualinvoke r90.<android.os.Parcel: int readInt()>();

        if $i31 == 0 goto label069;

        z31 = 1;

     label069:
        virtualinvoke r0.<android.view.IWindowManager$Stub: void setNavBarVirtualKeyHapticFeedbackEnabled(boolean)>(z31);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label070:
        virtualinvoke r90.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        z32 = 0;

        $i32 = virtualinvoke r90.<android.os.Parcel: int readInt()>();

        if $i32 == 0 goto label071;

        z32 = 1;

     label071:
        virtualinvoke r0.<android.view.IWindowManager$Stub: void setPipVisibility(boolean)>(z32);

        return 1;

     label072:
        virtualinvoke r90.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        z33 = 0;

        $i33 = virtualinvoke r90.<android.os.Parcel: int readInt()>();

        if $i33 == 0 goto label073;

        z33 = 1;

     label073:
        virtualinvoke r0.<android.view.IWindowManager$Stub: void setRecentsVisibility(boolean)>(z33);

        return 1;

     label074:
        virtualinvoke r90.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        z34 = 0;

        $i34 = virtualinvoke r90.<android.os.Parcel: int readInt()>();

        if $i34 == 0 goto label075;

        z34 = 1;

     label075:
        virtualinvoke r0.<android.view.IWindowManager$Stub: void setForceShowSystemBars(boolean)>(z34);

        return 1;

     label076:
        virtualinvoke r90.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        $i35 = virtualinvoke r90.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.view.IWindowManager$Stub: void hideTransientBars(int)>($i35);

        return 1;

     label077:
        virtualinvoke r90.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        $i36 = virtualinvoke r90.<android.os.Parcel: int readInt()>();

        $i37 = virtualinvoke r90.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.view.IWindowManager$Stub: void statusBarVisibilityChanged(int,int)>($i36, $i37);

        return 1;

     label078:
        virtualinvoke r90.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        $r45 = virtualinvoke r90.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r46 = staticinvoke <android.app.IAssistDataReceiver$Stub: android.app.IAssistDataReceiver asInterface(android.os.IBinder)>($r45);

        z35 = virtualinvoke r0.<android.view.IWindowManager$Stub: boolean requestAssistScreenshot(android.app.IAssistDataReceiver)>($r46);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i131 = (int) z35;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i131);

        return 1;

     label079:
        virtualinvoke r90.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        $r47 = virtualinvoke r90.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r48 = staticinvoke <android.view.ISystemGestureExclusionListener$Stub: android.view.ISystemGestureExclusionListener asInterface(android.os.IBinder)>($r47);

        $i38 = virtualinvoke r90.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.view.IWindowManager$Stub: void unregisterSystemGestureExclusionListener(android.view.ISystemGestureExclusionListener,int)>($r48, $i38);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label080:
        virtualinvoke r90.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        $r49 = virtualinvoke r90.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r50 = staticinvoke <android.view.ISystemGestureExclusionListener$Stub: android.view.ISystemGestureExclusionListener asInterface(android.os.IBinder)>($r49);

        $i39 = virtualinvoke r90.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.view.IWindowManager$Stub: void registerSystemGestureExclusionListener(android.view.ISystemGestureExclusionListener,int)>($r50, $i39);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label081:
        virtualinvoke r90.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        $r51 = virtualinvoke r90.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r52 = staticinvoke <android.view.IWallpaperVisibilityListener$Stub: android.view.IWallpaperVisibilityListener asInterface(android.os.IBinder)>($r51);

        $i40 = virtualinvoke r90.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.view.IWindowManager$Stub: void unregisterWallpaperVisibilityListener(android.view.IWallpaperVisibilityListener,int)>($r52, $i40);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label082:
        virtualinvoke r90.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        $r53 = virtualinvoke r90.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r54 = staticinvoke <android.view.IWallpaperVisibilityListener$Stub: android.view.IWallpaperVisibilityListener asInterface(android.os.IBinder)>($r53);

        $i41 = virtualinvoke r90.<android.os.Parcel: int readInt()>();

        z36 = virtualinvoke r0.<android.view.IWindowManager$Stub: boolean registerWallpaperVisibilityListener(android.view.IWallpaperVisibilityListener,int)>($r54, $i41);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i132 = (int) z36;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i132);

        return 1;

     label083:
        virtualinvoke r90.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        r106 = virtualinvoke r0.<android.view.IWindowManager$Stub: android.graphics.Bitmap screenshotWallpaper()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        if r106 == null goto label084;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r106.<android.graphics.Bitmap: void writeToParcel(android.os.Parcel,int)>(r1, 1);

        goto label085;

     label084:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label085:
        return 1;

     label086:
        virtualinvoke r90.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        $i42 = virtualinvoke r90.<android.os.Parcel: int readInt()>();

        $i43 = virtualinvoke r90.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.view.IWindowManager$Stub: void setFixedToUserRotation(int,int)>($i42, $i43);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label087:
        virtualinvoke r90.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        $i44 = virtualinvoke r90.<android.os.Parcel: int readInt()>();

        z37 = virtualinvoke r0.<android.view.IWindowManager$Stub: boolean isDisplayRotationFrozen(int)>($i44);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i133 = (int) z37;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i133);

        return 1;

     label088:
        virtualinvoke r90.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        $i45 = virtualinvoke r90.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.view.IWindowManager$Stub: void thawDisplayRotation(int)>($i45);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label089:
        virtualinvoke r90.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        $i46 = virtualinvoke r90.<android.os.Parcel: int readInt()>();

        $i47 = virtualinvoke r90.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.view.IWindowManager$Stub: void freezeDisplayRotation(int,int)>($i46, $i47);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label090:
        virtualinvoke r90.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        z38 = virtualinvoke r0.<android.view.IWindowManager$Stub: boolean isRotationFrozen()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i134 = (int) z38;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i134);

        return 1;

     label091:
        virtualinvoke r90.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        virtualinvoke r0.<android.view.IWindowManager$Stub: void thawRotation()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label092:
        virtualinvoke r90.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        $i48 = virtualinvoke r90.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.view.IWindowManager$Stub: void freezeRotation(int)>($i48);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label093:
        virtualinvoke r90.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        $i49 = virtualinvoke r90.<android.os.Parcel: int readInt()>();

        i108 = virtualinvoke r0.<android.view.IWindowManager$Stub: int getPreferredOptionsPanelGravity(int)>($i49);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i108);

        return 1;

     label094:
        virtualinvoke r90.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        $r55 = virtualinvoke r90.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r56 = staticinvoke <android.view.IRotationWatcher$Stub: android.view.IRotationWatcher asInterface(android.os.IBinder)>($r55);

        virtualinvoke r0.<android.view.IWindowManager$Stub: void removeRotationWatcher(android.view.IRotationWatcher)>($r56);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label095:
        virtualinvoke r90.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        $r57 = virtualinvoke r90.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r58 = staticinvoke <android.view.IRotationWatcher$Stub: android.view.IRotationWatcher asInterface(android.os.IBinder)>($r57);

        $i50 = virtualinvoke r90.<android.os.Parcel: int readInt()>();

        i109 = virtualinvoke r0.<android.view.IWindowManager$Stub: int watchRotation(android.view.IRotationWatcher,int)>($r58, $i50);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i109);

        return 1;

     label096:
        virtualinvoke r90.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        i110 = virtualinvoke r0.<android.view.IWindowManager$Stub: int getDefaultDisplayRotation()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i110);

        return 1;

     label097:
        virtualinvoke r90.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        $i51 = virtualinvoke r90.<android.os.Parcel: int readInt()>();

        if $i51 == 0 goto label098;

        z39 = 1;

        goto label099;

     label098:
        z39 = 0;

     label099:
        $i52 = virtualinvoke r90.<android.os.Parcel: int readInt()>();

        if $i52 == 0 goto label100;

        z14 = 1;

     label100:
        virtualinvoke r0.<android.view.IWindowManager$Stub: void updateRotation(boolean,boolean)>(z39, z14);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label101:
        virtualinvoke r90.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        $i53 = virtualinvoke r90.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.view.IWindowManager$Stub: void refreshScreenCaptureDisabled(int)>($i53);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label102:
        virtualinvoke r90.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        $r59 = virtualinvoke r90.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke r0.<android.view.IWindowManager$Stub: void setStrictModeVisualIndicatorPreference(java.lang.String)>($r59);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label103:
        virtualinvoke r90.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        z40 = 0;

        $i54 = virtualinvoke r90.<android.os.Parcel: int readInt()>();

        if $i54 == 0 goto label104;

        z40 = 1;

     label104:
        virtualinvoke r0.<android.view.IWindowManager$Stub: void showStrictModeViolation(boolean)>(z40);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label105:
        virtualinvoke r90.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        z41 = 0;

        $i55 = virtualinvoke r90.<android.os.Parcel: int readInt()>();

        if $i55 == 0 goto label106;

        z41 = 1;

     label106:
        virtualinvoke r0.<android.view.IWindowManager$Stub: void setInTouchMode(boolean)>(z41);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label107:
        virtualinvoke r90.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        f1 = virtualinvoke r0.<android.view.IWindowManager$Stub: float getCurrentAnimatorScale()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeFloat(float)>(f1);

        return 1;

     label108:
        virtualinvoke r90.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        $r60 = virtualinvoke r90.<android.os.Parcel: float[] createFloatArray()>();

        virtualinvoke r0.<android.view.IWindowManager$Stub: void setAnimationScales(float[])>($r60);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label109:
        virtualinvoke r90.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        $i56 = virtualinvoke r90.<android.os.Parcel: int readInt()>();

        $f0 = virtualinvoke r90.<android.os.Parcel: float readFloat()>();

        virtualinvoke r0.<android.view.IWindowManager$Stub: void setAnimationScale(int,float)>($i56, $f0);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label110:
        virtualinvoke r90.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        r107 = virtualinvoke r0.<android.view.IWindowManager$Stub: float[] getAnimationScales()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeFloatArray(float[])>(r107);

        return 1;

     label111:
        virtualinvoke r90.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        $i57 = virtualinvoke r90.<android.os.Parcel: int readInt()>();

        f2 = virtualinvoke r0.<android.view.IWindowManager$Stub: float getAnimationScale(int)>($i57);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeFloat(float)>(f2);

        return 1;

     label112:
        virtualinvoke r90.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        $r61 = virtualinvoke r90.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke r0.<android.view.IWindowManager$Stub: void closeSystemDialogs(java.lang.String)>($r61);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label113:
        virtualinvoke r90.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        z42 = 0;

        $i58 = virtualinvoke r90.<android.os.Parcel: int readInt()>();

        if $i58 == 0 goto label114;

        z42 = 1;

     label114:
        virtualinvoke r0.<android.view.IWindowManager$Stub: void setSwitchingUser(boolean)>(z42);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label115:
        virtualinvoke r90.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        $r62 = virtualinvoke r90.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        r108 = staticinvoke <com.android.internal.policy.IKeyguardDismissCallback$Stub: com.android.internal.policy.IKeyguardDismissCallback asInterface(android.os.IBinder)>($r62);

        $i59 = virtualinvoke r90.<android.os.Parcel: int readInt()>();

        if $i59 == 0 goto label116;

        $r63 = <android.text.TextUtils: android.os.Parcelable$Creator CHAR_SEQUENCE_CREATOR>;

        $r64 = interfaceinvoke $r63.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r90);

        r109 = (java.lang.CharSequence) $r64;

        goto label117;

     label116:
        r109 = null;

     label117:
        virtualinvoke r0.<android.view.IWindowManager$Stub: void dismissKeyguard(com.android.internal.policy.IKeyguardDismissCallback,java.lang.CharSequence)>(r108, r109);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label118:
        virtualinvoke r90.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        $i60 = virtualinvoke r90.<android.os.Parcel: int readInt()>();

        z43 = virtualinvoke r0.<android.view.IWindowManager$Stub: boolean isKeyguardSecure(int)>($i60);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i135 = (int) z43;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i135);

        return 1;

     label119:
        virtualinvoke r90.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        z44 = virtualinvoke r0.<android.view.IWindowManager$Stub: boolean isKeyguardLocked()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i136 = (int) z44;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i136);

        return 1;

     label120:
        virtualinvoke r90.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        $r65 = virtualinvoke r90.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r66 = staticinvoke <android.view.IOnKeyguardExitResult$Stub: android.view.IOnKeyguardExitResult asInterface(android.os.IBinder)>($r65);

        virtualinvoke r0.<android.view.IWindowManager$Stub: void exitKeyguardSecurely(android.view.IOnKeyguardExitResult)>($r66);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label121:
        virtualinvoke r90.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        $r67 = virtualinvoke r90.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $i61 = virtualinvoke r90.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.view.IWindowManager$Stub: void reenableKeyguard(android.os.IBinder,int)>($r67, $i61);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label122:
        virtualinvoke r90.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        $r68 = virtualinvoke r90.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r69 = virtualinvoke r90.<android.os.Parcel: java.lang.String readString()>();

        $i62 = virtualinvoke r90.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.view.IWindowManager$Stub: void disableKeyguard(android.os.IBinder,java.lang.String,int)>($r68, $r69, $i62);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label123:
        virtualinvoke r90.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        virtualinvoke r0.<android.view.IWindowManager$Stub: void stopFreezingScreen()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label124:
        virtualinvoke r90.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        $i63 = virtualinvoke r90.<android.os.Parcel: int readInt()>();

        $i64 = virtualinvoke r90.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.view.IWindowManager$Stub: void startFreezingScreen(int,int)>($i63, $i64);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label125:
        virtualinvoke r90.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        virtualinvoke r0.<android.view.IWindowManager$Stub: void endProlongedAnimations()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label126:
        virtualinvoke r90.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        virtualinvoke r0.<android.view.IWindowManager$Stub: void executeAppTransition()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label127:
        virtualinvoke r90.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        $i65 = virtualinvoke r90.<android.os.Parcel: int readInt()>();

        if $i65 == 0 goto label128;

        $r70 = <android.view.RemoteAnimationAdapter: android.os.Parcelable$Creator CREATOR>;

        $r71 = interfaceinvoke $r70.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r90);

        r110 = (android.view.RemoteAnimationAdapter) $r71;

        goto label129;

     label128:
        r110 = null;

     label129:
        $i66 = virtualinvoke r90.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.view.IWindowManager$Stub: void overridePendingAppTransitionRemote(android.view.RemoteAnimationAdapter,int)>(r110, $i66);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label130:
        virtualinvoke r90.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        $r72 = virtualinvoke r90.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        r111 = staticinvoke <android.view.IAppTransitionAnimationSpecsFuture$Stub: android.view.IAppTransitionAnimationSpecsFuture asInterface(android.os.IBinder)>($r72);

        $r73 = virtualinvoke r90.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        r112 = staticinvoke <android.os.IRemoteCallback$Stub: android.os.IRemoteCallback asInterface(android.os.IBinder)>($r73);

        z45 = 0;

        $i67 = virtualinvoke r90.<android.os.Parcel: int readInt()>();

        if $i67 == 0 goto label131;

        z45 = 1;

     label131:
        $i68 = virtualinvoke r90.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.view.IWindowManager$Stub: void overridePendingAppTransitionMultiThumbFuture(android.view.IAppTransitionAnimationSpecsFuture,android.os.IRemoteCallback,boolean,int)>(r111, r112, z45, $i68);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label132:
        virtualinvoke r90.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        $i69 = virtualinvoke r90.<android.os.Parcel: int readInt()>();

        $i70 = virtualinvoke r90.<android.os.Parcel: int readInt()>();

        $r74 = virtualinvoke r90.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r75 = staticinvoke <android.view.IWindow$Stub: android.view.IWindow asInterface(android.os.IBinder)>($r74);

        virtualinvoke r0.<android.view.IWindowManager$Stub: void setShellRootAccessibilityWindow(int,int,android.view.IWindow)>($i69, $i70, $r75);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label133:
        virtualinvoke r90.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        $i71 = virtualinvoke r90.<android.os.Parcel: int readInt()>();

        $r76 = virtualinvoke r90.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r77 = staticinvoke <android.view.IWindow$Stub: android.view.IWindow asInterface(android.os.IBinder)>($r76);

        $i72 = virtualinvoke r90.<android.os.Parcel: int readInt()>();

        r113 = virtualinvoke r0.<android.view.IWindowManager$Stub: android.view.SurfaceControl addShellRoot(int,android.view.IWindow,int)>($i71, $r77, $i72);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        if r113 == null goto label134;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r113.<android.view.SurfaceControl: void writeToParcel(android.os.Parcel,int)>(r1, 1);

        goto label135;

     label134:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label135:
        return 1;

     label136:
        virtualinvoke r90.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        $r78 = virtualinvoke r90.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r79 = staticinvoke <android.view.IDisplayWindowRotationController$Stub: android.view.IDisplayWindowRotationController asInterface(android.os.IBinder)>($r78);

        virtualinvoke r0.<android.view.IWindowManager$Stub: void setDisplayWindowRotationController(android.view.IDisplayWindowRotationController)>($r79);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label137:
        virtualinvoke r90.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        i111 = virtualinvoke r90.<android.os.Parcel: int readInt()>();

        z46 = 0;

        $i73 = virtualinvoke r90.<android.os.Parcel: int readInt()>();

        if $i73 == 0 goto label138;

        z46 = 1;

     label138:
        virtualinvoke r0.<android.view.IWindowManager$Stub: void prepareAppTransition(int,boolean)>(i111, z46);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label139:
        virtualinvoke r90.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        $r80 = virtualinvoke r90.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $i74 = virtualinvoke r90.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.view.IWindowManager$Stub: void removeWindowToken(android.os.IBinder,int)>($r80, $i74);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label140:
        virtualinvoke r90.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        $r81 = virtualinvoke r90.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $i75 = virtualinvoke r90.<android.os.Parcel: int readInt()>();

        $i76 = virtualinvoke r90.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.view.IWindowManager$Stub: void addWindowToken(android.os.IBinder,int,int)>($r81, $i75, $i76);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label141:
        virtualinvoke r90.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        r114 = virtualinvoke r90.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        i112 = virtualinvoke r90.<android.os.Parcel: int readInt()>();

        i113 = virtualinvoke r90.<android.os.Parcel: int readInt()>();

        $i77 = virtualinvoke r90.<android.os.Parcel: int readInt()>();

        if $i77 == 0 goto label142;

        $r83 = <android.os.Bundle: android.os.Parcelable$Creator CREATOR>;

        $r84 = interfaceinvoke $r83.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r90);

        r115 = (android.os.Bundle) $r84;

        goto label143;

     label142:
        r115 = null;

     label143:
        $r82 = virtualinvoke r90.<android.os.Parcel: java.lang.String readString()>();

        i114 = virtualinvoke r0.<android.view.IWindowManager$Stub: int addWindowTokenWithOptions(android.os.IBinder,int,int,android.os.Bundle,java.lang.String)>(r114, i112, i113, r115, $r82);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i114);

        return 1;

     label144:
        virtualinvoke r90.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        $r85 = virtualinvoke r90.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        z47 = virtualinvoke r0.<android.view.IWindowManager$Stub: boolean isWindowToken(android.os.IBinder)>($r85);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i137 = (int) z47;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i137);

        return 1;

     label145:
        virtualinvoke r90.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        z48 = 0;

        $i78 = virtualinvoke r90.<android.os.Parcel: int readInt()>();

        if $i78 == 0 goto label146;

        z48 = 1;

     label146:
        virtualinvoke r0.<android.view.IWindowManager$Stub: void setEventDispatching(boolean)>(z48);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label147:
        virtualinvoke r90.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        $i79 = virtualinvoke r90.<android.os.Parcel: int readInt()>();

        $i80 = virtualinvoke r90.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.view.IWindowManager$Stub: void setForcedDisplayScalingMode(int,int)>($i79, $i80);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label148:
        virtualinvoke r90.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        $i81 = virtualinvoke r90.<android.os.Parcel: int readInt()>();

        $i82 = virtualinvoke r90.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.view.IWindowManager$Stub: void clearForcedDisplayDensityForUser(int,int)>($i81, $i82);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label149:
        virtualinvoke r90.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        $i83 = virtualinvoke r90.<android.os.Parcel: int readInt()>();

        $i84 = virtualinvoke r90.<android.os.Parcel: int readInt()>();

        $i85 = virtualinvoke r90.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.view.IWindowManager$Stub: void setForcedDisplayDensityForUser(int,int,int)>($i83, $i84, $i85);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label150:
        virtualinvoke r90.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        $i86 = virtualinvoke r90.<android.os.Parcel: int readInt()>();

        i115 = virtualinvoke r0.<android.view.IWindowManager$Stub: int getBaseDisplayDensity(int)>($i86);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i115);

        return 1;

     label151:
        virtualinvoke r90.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        $i87 = virtualinvoke r90.<android.os.Parcel: int readInt()>();

        i116 = virtualinvoke r0.<android.view.IWindowManager$Stub: int getInitialDisplayDensity(int)>($i87);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i116);

        return 1;

     label152:
        virtualinvoke r90.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        $i88 = virtualinvoke r90.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.view.IWindowManager$Stub: void clearForcedDisplaySize(int)>($i88);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label153:
        virtualinvoke r90.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        $i89 = virtualinvoke r90.<android.os.Parcel: int readInt()>();

        $i90 = virtualinvoke r90.<android.os.Parcel: int readInt()>();

        $i91 = virtualinvoke r90.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.view.IWindowManager$Stub: void setForcedDisplaySize(int,int,int)>($i89, $i90, $i91);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label154:
        virtualinvoke r90.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        i117 = virtualinvoke r90.<android.os.Parcel: int readInt()>();

        $r86 = new android.graphics.Point;

        specialinvoke $r86.<android.graphics.Point: void <init>()>();

        virtualinvoke r0.<android.view.IWindowManager$Stub: void getBaseDisplaySize(int,android.graphics.Point)>(i117, $r86);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke $r86.<android.graphics.Point: void writeToParcel(android.os.Parcel,int)>(r1, 1);

        return 1;

     label155:
        virtualinvoke r90.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        i118 = virtualinvoke r90.<android.os.Parcel: int readInt()>();

        $r87 = new android.graphics.Point;

        specialinvoke $r87.<android.graphics.Point: void <init>()>();

        virtualinvoke r0.<android.view.IWindowManager$Stub: void getInitialDisplaySize(int,android.graphics.Point)>(i118, $r87);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke $r87.<android.graphics.Point: void writeToParcel(android.os.Parcel,int)>(r1, 1);

        return 1;

     label156:
        virtualinvoke r90.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        z49 = virtualinvoke r0.<android.view.IWindowManager$Stub: boolean useBLAST()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i138 = (int) z49;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i138);

        return 1;

     label157:
        virtualinvoke r90.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        $r88 = virtualinvoke r90.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r89 = staticinvoke <android.view.IWindowSessionCallback$Stub: android.view.IWindowSessionCallback asInterface(android.os.IBinder)>($r88);

        r118 = virtualinvoke r0.<android.view.IWindowManager$Stub: android.view.IWindowSession openSession(android.view.IWindowSessionCallback)>($r89);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        if r118 == null goto label158;

        r119 = interfaceinvoke r118.<android.view.IWindowSession: android.os.IBinder asBinder()>();

        goto label159;

     label158:
        r119 = null;

     label159:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r119);

        return 1;

     label160:
        virtualinvoke r90.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        z50 = virtualinvoke r0.<android.view.IWindowManager$Stub: boolean isViewServerRunning()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i139 = (int) z50;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i139);

        return 1;

     label161:
        virtualinvoke r90.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        z51 = virtualinvoke r0.<android.view.IWindowManager$Stub: boolean stopViewServer()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i140 = (int) z51;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i140);

        return 1;

     label162:
        virtualinvoke r90.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        $i92 = virtualinvoke r90.<android.os.Parcel: int readInt()>();

        z52 = virtualinvoke r0.<android.view.IWindowManager$Stub: boolean startViewServer(int)>($i92);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i141 = (int) z52;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i141);

        return 1;

     label163:
        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>("android.view.IWindowManager");

        return 1;
    }

    public static void <clinit>()
    {
        <android.view.IWindowManager$Stub: int TRANSACTION_watchRotation> = 49;

        <android.view.IWindowManager$Stub: int TRANSACTION_useBLAST> = 5;

        <android.view.IWindowManager$Stub: int TRANSACTION_updateRotation> = 47;

        <android.view.IWindowManager$Stub: int TRANSACTION_unregisterWallpaperVisibilityListener> = 61;

        <android.view.IWindowManager$Stub: int TRANSACTION_unregisterSystemGestureExclusionListener> = 63;

        <android.view.IWindowManager$Stub: int TRANSACTION_unregisterDisplayWindowListener> = 91;

        <android.view.IWindowManager$Stub: int TRANSACTION_unregisterDisplayFoldListener> = 89;

        <android.view.IWindowManager$Stub: int TRANSACTION_thawRotation> = 53;

        <android.view.IWindowManager$Stub: int TRANSACTION_thawDisplayRotation> = 56;

        <android.view.IWindowManager$Stub: int TRANSACTION_syncInputTransactions> = 107;

        <android.view.IWindowManager$Stub: int TRANSACTION_stopWindowTrace> = 93;

        <android.view.IWindowManager$Stub: int TRANSACTION_stopViewServer> = 2;

        <android.view.IWindowManager$Stub: int TRANSACTION_stopFreezingScreen> = 29;

        <android.view.IWindowManager$Stub: int TRANSACTION_statusBarVisibilityChanged> = 65;

        <android.view.IWindowManager$Stub: int TRANSACTION_startWindowTrace> = 92;

        <android.view.IWindowManager$Stub: int TRANSACTION_startViewServer> = 1;

        <android.view.IWindowManager$Stub: int TRANSACTION_startFreezingScreen> = 28;

        <android.view.IWindowManager$Stub: int TRANSACTION_showStrictModeViolation> = 44;

        <android.view.IWindowManager$Stub: int TRANSACTION_showGlobalActions> = 114;

        <android.view.IWindowManager$Stub: int TRANSACTION_shouldShowWithInsecureKeyguard> = 100;

        <android.view.IWindowManager$Stub: int TRANSACTION_shouldShowSystemDecors> = 102;

        <android.view.IWindowManager$Stub: int TRANSACTION_shouldShowIme> = 104;

        <android.view.IWindowManager$Stub: int TRANSACTION_setWindowingMode> = 97;

        <android.view.IWindowManager$Stub: int TRANSACTION_setSwitchingUser> = 36;

        <android.view.IWindowManager$Stub: int TRANSACTION_setStrictModeVisualIndicatorPreference> = 45;

        <android.view.IWindowManager$Stub: int TRANSACTION_setShouldShowWithInsecureKeyguard> = 101;

        <android.view.IWindowManager$Stub: int TRANSACTION_setShouldShowSystemDecors> = 103;

        <android.view.IWindowManager$Stub: int TRANSACTION_setShouldShowIme> = 105;

        <android.view.IWindowManager$Stub: int TRANSACTION_setShellRootAccessibilityWindow> = 23;

        <android.view.IWindowManager$Stub: int TRANSACTION_setRemoveContentMode> = 99;

        <android.view.IWindowManager$Stub: int TRANSACTION_setRecentsVisibility> = 68;

        <android.view.IWindowManager$Stub: int TRANSACTION_setPipVisibility> = 69;

        <android.view.IWindowManager$Stub: int TRANSACTION_setNavBarVirtualKeyHapticFeedbackEnabled> = 70;

        <android.view.IWindowManager$Stub: int TRANSACTION_setLayerTracingFlags> = 115;

        <android.view.IWindowManager$Stub: int TRANSACTION_setLayerTracing> = 109;

        <android.view.IWindowManager$Stub: int TRANSACTION_setInTouchMode> = 43;

        <android.view.IWindowManager$Stub: int TRANSACTION_setForwardedInsets> = 83;

        <android.view.IWindowManager$Stub: int TRANSACTION_setForcedDisplaySize> = 8;

        <android.view.IWindowManager$Stub: int TRANSACTION_setForcedDisplayScalingMode> = 14;

        <android.view.IWindowManager$Stub: int TRANSACTION_setForcedDisplayDensityForUser> = 12;

        <android.view.IWindowManager$Stub: int TRANSACTION_setForceShowSystemBars> = 67;

        <android.view.IWindowManager$Stub: int TRANSACTION_setFixedToUserRotation> = 58;

        <android.view.IWindowManager$Stub: int TRANSACTION_setEventDispatching> = 15;

        <android.view.IWindowManager$Stub: int TRANSACTION_setDockedStackDividerTouchRegion> = 79;

        <android.view.IWindowManager$Stub: int TRANSACTION_setDisplayWindowRotationController> = 21;

        <android.view.IWindowManager$Stub: int TRANSACTION_setDisplayWindowInsetsController> = 111;

        <android.view.IWindowManager$Stub: int TRANSACTION_setAnimationScales> = 41;

        <android.view.IWindowManager$Stub: int TRANSACTION_setAnimationScale> = 40;

        <android.view.IWindowManager$Stub: int TRANSACTION_screenshotWallpaper> = 59;

        <android.view.IWindowManager$Stub: int TRANSACTION_requestScrollCapture> = 116;

        <android.view.IWindowManager$Stub: int TRANSACTION_requestAssistScreenshot> = 64;

        <android.view.IWindowManager$Stub: int TRANSACTION_requestAppKeyboardShortcuts> = 81;

        <android.view.IWindowManager$Stub: int TRANSACTION_removeWindowToken> = 19;

        <android.view.IWindowManager$Stub: int TRANSACTION_removeRotationWatcher> = 50;

        <android.view.IWindowManager$Stub: int TRANSACTION_registerWallpaperVisibilityListener> = 60;

        <android.view.IWindowManager$Stub: int TRANSACTION_registerSystemGestureExclusionListener> = 62;

        <android.view.IWindowManager$Stub: int TRANSACTION_registerShortcutKey> = 84;

        <android.view.IWindowManager$Stub: int TRANSACTION_registerPinnedStackListener> = 80;

        <android.view.IWindowManager$Stub: int TRANSACTION_registerDisplayWindowListener> = 90;

        <android.view.IWindowManager$Stub: int TRANSACTION_registerDisplayFoldListener> = 88;

        <android.view.IWindowManager$Stub: int TRANSACTION_refreshScreenCaptureDisabled> = 46;

        <android.view.IWindowManager$Stub: int TRANSACTION_reenableKeyguard> = 31;

        <android.view.IWindowManager$Stub: int TRANSACTION_prepareAppTransition> = 20;

        <android.view.IWindowManager$Stub: int TRANSACTION_overridePendingAppTransitionRemote> = 25;

        <android.view.IWindowManager$Stub: int TRANSACTION_overridePendingAppTransitionMultiThumbFuture> = 24;

        <android.view.IWindowManager$Stub: int TRANSACTION_openSession> = 4;

        <android.view.IWindowManager$Stub: int TRANSACTION_modifyDisplayWindowInsets> = 112;

        <android.view.IWindowManager$Stub: int TRANSACTION_mirrorDisplay> = 110;

        <android.view.IWindowManager$Stub: int TRANSACTION_lockNow> = 73;

        <android.view.IWindowManager$Stub: int TRANSACTION_isWindowTraceEnabled> = 94;

        <android.view.IWindowManager$Stub: int TRANSACTION_isWindowToken> = 16;

        <android.view.IWindowManager$Stub: int TRANSACTION_isViewServerRunning> = 3;

        <android.view.IWindowManager$Stub: int TRANSACTION_isSafeModeEnabled> = 74;

        <android.view.IWindowManager$Stub: int TRANSACTION_isRotationFrozen> = 54;

        <android.view.IWindowManager$Stub: int TRANSACTION_isLayerTracing> = 108;

        <android.view.IWindowManager$Stub: int TRANSACTION_isKeyguardSecure> = 34;

        <android.view.IWindowManager$Stub: int TRANSACTION_isKeyguardLocked> = 33;

        <android.view.IWindowManager$Stub: int TRANSACTION_isDisplayRotationFrozen> = 57;

        <android.view.IWindowManager$Stub: int TRANSACTION_injectInputAfterTransactionsApplied> = 106;

        <android.view.IWindowManager$Stub: int TRANSACTION_hideTransientBars> = 66;

        <android.view.IWindowManager$Stub: int TRANSACTION_hasNavigationBar> = 71;

        <android.view.IWindowManager$Stub: int TRANSACTION_getWindowingMode> = 96;

        <android.view.IWindowManager$Stub: int TRANSACTION_getWindowInsets> = 113;

        <android.view.IWindowManager$Stub: int TRANSACTION_getWindowContentFrameStats> = 77;

        <android.view.IWindowManager$Stub: int TRANSACTION_getStableInsets> = 82;

        <android.view.IWindowManager$Stub: int TRANSACTION_getRemoveContentMode> = 98;

        <android.view.IWindowManager$Stub: int TRANSACTION_getPreferredOptionsPanelGravity> = 51;

        <android.view.IWindowManager$Stub: int TRANSACTION_getNavBarPosition> = 72;

        <android.view.IWindowManager$Stub: int TRANSACTION_getInitialDisplaySize> = 6;

        <android.view.IWindowManager$Stub: int TRANSACTION_getInitialDisplayDensity> = 10;

        <android.view.IWindowManager$Stub: int TRANSACTION_getDockedStackSide> = 78;

        <android.view.IWindowManager$Stub: int TRANSACTION_getDefaultDisplayRotation> = 48;

        <android.view.IWindowManager$Stub: int TRANSACTION_getCurrentImeTouchRegion> = 87;

        <android.view.IWindowManager$Stub: int TRANSACTION_getCurrentAnimatorScale> = 42;

        <android.view.IWindowManager$Stub: int TRANSACTION_getBaseDisplaySize> = 7;

        <android.view.IWindowManager$Stub: int TRANSACTION_getBaseDisplayDensity> = 11;

        <android.view.IWindowManager$Stub: int TRANSACTION_getAnimationScales> = 39;

        <android.view.IWindowManager$Stub: int TRANSACTION_getAnimationScale> = 38;

        <android.view.IWindowManager$Stub: int TRANSACTION_freezeRotation> = 52;

        <android.view.IWindowManager$Stub: int TRANSACTION_freezeDisplayRotation> = 55;

        <android.view.IWindowManager$Stub: int TRANSACTION_exitKeyguardSecurely> = 32;

        <android.view.IWindowManager$Stub: int TRANSACTION_executeAppTransition> = 26;

        <android.view.IWindowManager$Stub: int TRANSACTION_endProlongedAnimations> = 27;

        <android.view.IWindowManager$Stub: int TRANSACTION_enableScreenIfNeeded> = 75;

        <android.view.IWindowManager$Stub: int TRANSACTION_dontOverrideDisplayInfo> = 95;

        <android.view.IWindowManager$Stub: int TRANSACTION_dismissKeyguard> = 35;

        <android.view.IWindowManager$Stub: int TRANSACTION_disableKeyguard> = 30;

        <android.view.IWindowManager$Stub: int TRANSACTION_destroyInputConsumer> = 86;

        <android.view.IWindowManager$Stub: int TRANSACTION_createInputConsumer> = 85;

        <android.view.IWindowManager$Stub: int TRANSACTION_closeSystemDialogs> = 37;

        <android.view.IWindowManager$Stub: int TRANSACTION_clearWindowContentFrameStats> = 76;

        <android.view.IWindowManager$Stub: int TRANSACTION_clearForcedDisplaySize> = 9;

        <android.view.IWindowManager$Stub: int TRANSACTION_clearForcedDisplayDensityForUser> = 13;

        <android.view.IWindowManager$Stub: int TRANSACTION_addWindowTokenWithOptions> = 17;

        <android.view.IWindowManager$Stub: int TRANSACTION_addWindowToken> = 18;

        <android.view.IWindowManager$Stub: int TRANSACTION_addShellRoot> = 22;

        <android.view.IWindowManager$Stub: java.lang.String DESCRIPTOR> = "android.view.IWindowManager";

        return;
    }
}
