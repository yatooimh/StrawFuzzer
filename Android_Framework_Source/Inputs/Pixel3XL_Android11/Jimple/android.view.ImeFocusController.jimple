public final class android.view.ImeFocusController extends java.lang.Object
{
    private static final boolean DEBUG;
    private static final java.lang.String TAG;
    private android.view.ImeFocusController$InputMethodManagerDelegate mDelegate;
    private boolean mHasImeFocus;
    private android.view.View mNextServedView;
    private android.view.View mServedView;
    private final android.view.ViewRootImpl mViewRootImpl;

    void <init>(android.view.ViewRootImpl)
    {
        android.view.ImeFocusController r0;
        android.view.ViewRootImpl r1;

        r0 := @this: android.view.ImeFocusController;

        r1 := @parameter0: android.view.ViewRootImpl;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.view.ImeFocusController: boolean mHasImeFocus> = 0;

        r0.<android.view.ImeFocusController: android.view.ViewRootImpl mViewRootImpl> = r1;

        return;
    }

    private android.view.ImeFocusController$InputMethodManagerDelegate getImmDelegate()
    {
        android.view.ImeFocusController r0;
        android.view.ViewRootImpl $r1;
        android.content.Context $r2;
        java.lang.Object $r3;
        android.view.inputmethod.InputMethodManager $r4;
        android.view.ImeFocusController$InputMethodManagerDelegate r5;
        android.view.inputmethod.InputMethodManager$DelegateImpl r6;

        r0 := @this: android.view.ImeFocusController;

        r5 = r0.<android.view.ImeFocusController: android.view.ImeFocusController$InputMethodManagerDelegate mDelegate>;

        if r5 == null goto label1;

        return r5;

     label1:
        $r1 = r0.<android.view.ImeFocusController: android.view.ViewRootImpl mViewRootImpl>;

        $r2 = $r1.<android.view.ViewRootImpl: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/view/inputmethod/InputMethodManager;");

        $r4 = (android.view.inputmethod.InputMethodManager) $r3;

        r6 = virtualinvoke $r4.<android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager$DelegateImpl getDelegate()>();

        r0.<android.view.ImeFocusController: android.view.ImeFocusController$InputMethodManagerDelegate mDelegate> = r6;

        return r6;
    }

    private static boolean isInLocalFocusMode(android.view.WindowManager$LayoutParams)
    {
        android.view.WindowManager$LayoutParams r0;
        int $i0, $i1;
        boolean z0;

        r0 := @parameter0: android.view.WindowManager$LayoutParams;

        $i0 = r0.<android.view.WindowManager$LayoutParams: int flags>;

        $i1 = $i0 & 268435456;

        if $i1 == 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public boolean checkFocus(boolean, boolean)
    {
        android.view.ImeFocusController r0;
        boolean z0, z1, $z2;
        android.view.ImeFocusController$InputMethodManagerDelegate r1;
        android.view.View r2, $r4, $r5;
        android.view.ViewRootImpl $r3;

        r0 := @this: android.view.ImeFocusController;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        r1 = specialinvoke r0.<android.view.ImeFocusController: android.view.ImeFocusController$InputMethodManagerDelegate getImmDelegate()>();

        $r3 = r0.<android.view.ImeFocusController: android.view.ViewRootImpl mViewRootImpl>;

        $z2 = interfaceinvoke r1.<android.view.ImeFocusController$InputMethodManagerDelegate: boolean isCurrentRootView(android.view.ViewRootImpl)>($r3);

        if $z2 == 0 goto label4;

        $r5 = r0.<android.view.ImeFocusController: android.view.View mServedView>;

        $r4 = r0.<android.view.ImeFocusController: android.view.View mNextServedView>;

        if $r5 != $r4 goto label1;

        if z0 != 0 goto label1;

        goto label4;

     label1:
        r2 = r0.<android.view.ImeFocusController: android.view.View mNextServedView>;

        if r2 != null goto label2;

        interfaceinvoke r1.<android.view.ImeFocusController$InputMethodManagerDelegate: void finishInput()>();

        interfaceinvoke r1.<android.view.ImeFocusController$InputMethodManagerDelegate: void closeCurrentIme()>();

        return 0;

     label2:
        r0.<android.view.ImeFocusController: android.view.View mServedView> = r2;

        interfaceinvoke r1.<android.view.ImeFocusController$InputMethodManagerDelegate: void finishComposingText()>();

        if z1 == 0 goto label3;

        interfaceinvoke r1.<android.view.ImeFocusController$InputMethodManagerDelegate: boolean startInput(int,android.view.View,int,int,int)>(5, null, 0, 0, 0);

     label3:
        return 1;

     label4:
        return 0;
    }

    public android.view.View getNextServedView()
    {
        android.view.ImeFocusController r0;
        android.view.View $r1;

        r0 := @this: android.view.ImeFocusController;

        $r1 = r0.<android.view.ImeFocusController: android.view.View mNextServedView>;

        return $r1;
    }

    public android.view.View getServedView()
    {
        android.view.ImeFocusController r0;
        android.view.View $r1;

        r0 := @this: android.view.ImeFocusController;

        $r1 = r0.<android.view.ImeFocusController: android.view.View mServedView>;

        return $r1;
    }

    boolean hasImeFocus()
    {
        android.view.ImeFocusController r0;
        boolean $z0;

        r0 := @this: android.view.ImeFocusController;

        $z0 = r0.<android.view.ImeFocusController: boolean mHasImeFocus>;

        return $z0;
    }

    void onMovedToDisplay()
    {
        android.view.ImeFocusController r0;

        r0 := @this: android.view.ImeFocusController;

        r0.<android.view.ImeFocusController: android.view.ImeFocusController$InputMethodManagerDelegate mDelegate> = null;

        return;
    }

    void onPostWindowFocus(android.view.View, boolean, android.view.WindowManager$LayoutParams)
    {
        android.view.ImeFocusController r0;
        android.view.WindowManager$LayoutParams r1;
        android.view.ImeFocusController$InputMethodManagerDelegate r2;
        boolean $z0, $z1, $z2, $z3, z4, z5, z6, z7;
        android.view.ViewRootImpl $r3;
        android.view.View $r4, r5;
        int $i0, $i1;

        r0 := @this: android.view.ImeFocusController;

        r5 := @parameter0: android.view.View;

        z4 := @parameter1: boolean;

        r1 := @parameter2: android.view.WindowManager$LayoutParams;

        if z4 == 0 goto label8;

        $z0 = r0.<android.view.ImeFocusController: boolean mHasImeFocus>;

        if $z0 == 0 goto label8;

        $z1 = staticinvoke <android.view.ImeFocusController: boolean isInLocalFocusMode(android.view.WindowManager$LayoutParams)>(r1);

        if $z1 == 0 goto label1;

        goto label8;

     label1:
        z5 = 0;

        r2 = specialinvoke r0.<android.view.ImeFocusController: android.view.ImeFocusController$InputMethodManagerDelegate getImmDelegate()>();

        z6 = 1;

        $z2 = interfaceinvoke r2.<android.view.ImeFocusController$InputMethodManagerDelegate: boolean isRestartOnNextWindowFocus(boolean)>(1);

        if $z2 == 0 goto label2;

        z5 = 1;

     label2:
        if r5 == null goto label3;

        goto label4;

     label3:
        $r3 = r0.<android.view.ImeFocusController: android.view.ViewRootImpl mViewRootImpl>;

        r5 = $r3.<android.view.ViewRootImpl: android.view.View mView>;

     label4:
        virtualinvoke r0.<android.view.ImeFocusController: void onViewFocusChanged(android.view.View,boolean)>(r5, 1);

        $r4 = r0.<android.view.ImeFocusController: android.view.View mServedView>;

        if $r4 != r5 goto label5;

        goto label6;

     label5:
        z6 = 0;

     label6:
        z7 = z5;

        if z6 == 0 goto label7;

        z7 = z5;

        $z3 = interfaceinvoke r2.<android.view.ImeFocusController$InputMethodManagerDelegate: boolean hasActiveConnection(android.view.View)>(r5);

        if $z3 != 0 goto label7;

        z7 = 1;

     label7:
        $i0 = r1.<android.view.WindowManager$LayoutParams: int softInputMode>;

        $i1 = r1.<android.view.WindowManager$LayoutParams: int flags>;

        interfaceinvoke r2.<android.view.ImeFocusController$InputMethodManagerDelegate: void startInputAsyncOnWindowFocusGain(android.view.View,int,int,boolean)>(r5, $i0, $i1, z7);

        return;

     label8:
        return;
    }

    void onPreWindowFocus(boolean, android.view.WindowManager$LayoutParams)
    {
        android.view.ImeFocusController r0;
        boolean z0, $z1, $z2;
        android.view.WindowManager$LayoutParams r1;
        android.view.ImeFocusController$InputMethodManagerDelegate $r2;
        android.view.ViewRootImpl $r3;

        r0 := @this: android.view.ImeFocusController;

        z0 := @parameter0: boolean;

        r1 := @parameter1: android.view.WindowManager$LayoutParams;

        $z1 = r0.<android.view.ImeFocusController: boolean mHasImeFocus>;

        if $z1 == 0 goto label3;

        $z2 = staticinvoke <android.view.ImeFocusController: boolean isInLocalFocusMode(android.view.WindowManager$LayoutParams)>(r1);

        if $z2 == 0 goto label1;

        goto label3;

     label1:
        if z0 == 0 goto label2;

        $r2 = specialinvoke r0.<android.view.ImeFocusController: android.view.ImeFocusController$InputMethodManagerDelegate getImmDelegate()>();

        $r3 = r0.<android.view.ImeFocusController: android.view.ViewRootImpl mViewRootImpl>;

        interfaceinvoke $r2.<android.view.ImeFocusController$InputMethodManagerDelegate: void setCurrentRootView(android.view.ViewRootImpl)>($r3);

     label2:
        return;

     label3:
        return;
    }

    int onProcessImeInputStage(java.lang.Object, android.view.InputEvent, android.view.WindowManager$LayoutParams, android.view.inputmethod.InputMethodManager$FinishedInputEventCallback)
    {
        android.view.ImeFocusController r0;
        java.lang.Object r1, $r6;
        android.view.InputEvent r2;
        android.view.inputmethod.InputMethodManager$FinishedInputEventCallback r3;
        boolean $z0, $z1;
        android.view.ViewRootImpl $r4, $r7;
        android.content.Context $r5;
        android.view.ViewRootImpl$ViewRootHandler $r8;
        int $i0;
        android.view.WindowManager$LayoutParams r9;
        android.view.inputmethod.InputMethodManager r10;

        r0 := @this: android.view.ImeFocusController;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: android.view.InputEvent;

        r9 := @parameter2: android.view.WindowManager$LayoutParams;

        r3 := @parameter3: android.view.inputmethod.InputMethodManager$FinishedInputEventCallback;

        $z0 = r0.<android.view.ImeFocusController: boolean mHasImeFocus>;

        if $z0 == 0 goto label3;

        $z1 = staticinvoke <android.view.ImeFocusController: boolean isInLocalFocusMode(android.view.WindowManager$LayoutParams)>(r9);

        if $z1 == 0 goto label1;

        goto label3;

     label1:
        $r4 = r0.<android.view.ImeFocusController: android.view.ViewRootImpl mViewRootImpl>;

        $r5 = $r4.<android.view.ViewRootImpl: android.content.Context mContext>;

        $r6 = virtualinvoke $r5.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/view/inputmethod/InputMethodManager;");

        r10 = (android.view.inputmethod.InputMethodManager) $r6;

        if r10 != null goto label2;

        return 0;

     label2:
        $r7 = r0.<android.view.ImeFocusController: android.view.ViewRootImpl mViewRootImpl>;

        $r8 = $r7.<android.view.ViewRootImpl: android.view.ViewRootImpl$ViewRootHandler mHandler>;

        $i0 = virtualinvoke r10.<android.view.inputmethod.InputMethodManager: int dispatchInputEvent(android.view.InputEvent,java.lang.Object,android.view.inputmethod.InputMethodManager$FinishedInputEventCallback,android.os.Handler)>(r2, r1, r3, $r8);

        return $i0;

     label3:
        return 0;
    }

    void onTraversal(boolean, android.view.WindowManager$LayoutParams)
    {
        android.view.ImeFocusController r0;
        boolean z0, z1, $z2, $z3;
        android.view.WindowManager$LayoutParams r1;
        android.view.ViewRootImpl $r2;
        android.view.View $r3, $r4;

        r0 := @this: android.view.ImeFocusController;

        z0 := @parameter0: boolean;

        r1 := @parameter1: android.view.WindowManager$LayoutParams;

        z1 = virtualinvoke r0.<android.view.ImeFocusController: boolean updateImeFocusable(android.view.WindowManager$LayoutParams,boolean)>(r1, 0);

        if z0 == 0 goto label4;

        $z2 = staticinvoke <android.view.ImeFocusController: boolean isInLocalFocusMode(android.view.WindowManager$LayoutParams)>(r1);

        if $z2 == 0 goto label1;

        goto label4;

     label1:
        $z3 = r0.<android.view.ImeFocusController: boolean mHasImeFocus>;

        if z1 != $z3 goto label2;

        return;

     label2:
        r0.<android.view.ImeFocusController: boolean mHasImeFocus> = z1;

        if z1 == 0 goto label3;

        virtualinvoke r0.<android.view.ImeFocusController: void onPreWindowFocus(boolean,android.view.WindowManager$LayoutParams)>(1, r1);

        $r2 = r0.<android.view.ImeFocusController: android.view.ViewRootImpl mViewRootImpl>;

        $r3 = $r2.<android.view.ViewRootImpl: android.view.View mView>;

        $r4 = virtualinvoke $r3.<android.view.View: android.view.View findFocus()>();

        virtualinvoke r0.<android.view.ImeFocusController: void onPostWindowFocus(android.view.View,boolean,android.view.WindowManager$LayoutParams)>($r4, 1, r1);

     label3:
        return;

     label4:
        return;
    }

    void onViewDetachedFromWindow(android.view.View)
    {
        android.view.ImeFocusController r0;
        android.view.View r1, $r4;
        android.view.ImeFocusController$InputMethodManagerDelegate $r2;
        android.view.ViewRootImpl $r3, $r5;
        boolean $z0;

        r0 := @this: android.view.ImeFocusController;

        r1 := @parameter0: android.view.View;

        $r2 = specialinvoke r0.<android.view.ImeFocusController: android.view.ImeFocusController$InputMethodManagerDelegate getImmDelegate()>();

        $r3 = virtualinvoke r1.<android.view.View: android.view.ViewRootImpl getViewRootImpl()>();

        $z0 = interfaceinvoke $r2.<android.view.ImeFocusController$InputMethodManagerDelegate: boolean isCurrentRootView(android.view.ViewRootImpl)>($r3);

        if $z0 != 0 goto label1;

        return;

     label1:
        $r4 = r0.<android.view.ImeFocusController: android.view.View mServedView>;

        if $r4 != r1 goto label2;

        r0.<android.view.ImeFocusController: android.view.View mNextServedView> = null;

        $r5 = r0.<android.view.ImeFocusController: android.view.ViewRootImpl mViewRootImpl>;

        virtualinvoke $r5.<android.view.ViewRootImpl: void dispatchCheckFocus()>();

     label2:
        return;
    }

    void onViewFocusChanged(android.view.View, boolean)
    {
        android.view.ImeFocusController r0;
        android.view.View r1;
        boolean z0, $z1, $z2, $z3, $z4;
        android.view.ImeFocusController$InputMethodManagerDelegate $r2;
        android.view.ViewRootImpl $r3, $r4;

        r0 := @this: android.view.ImeFocusController;

        r1 := @parameter0: android.view.View;

        z0 := @parameter1: boolean;

        if r1 == null goto label6;

        $z1 = virtualinvoke r1.<android.view.View: boolean isTemporarilyDetached()>();

        if $z1 == 0 goto label1;

        goto label6;

     label1:
        $r2 = specialinvoke r0.<android.view.ImeFocusController: android.view.ImeFocusController$InputMethodManagerDelegate getImmDelegate()>();

        $r3 = virtualinvoke r1.<android.view.View: android.view.ViewRootImpl getViewRootImpl()>();

        $z2 = interfaceinvoke $r2.<android.view.ImeFocusController$InputMethodManagerDelegate: boolean isCurrentRootView(android.view.ViewRootImpl)>($r3);

        if $z2 != 0 goto label2;

        return;

     label2:
        $z3 = virtualinvoke r1.<android.view.View: boolean hasImeFocus()>();

        if $z3 == 0 goto label5;

        $z4 = virtualinvoke r1.<android.view.View: boolean hasWindowFocus()>();

        if $z4 != 0 goto label3;

        goto label5;

     label3:
        if z0 == 0 goto label4;

        r0.<android.view.ImeFocusController: android.view.View mNextServedView> = r1;

     label4:
        $r4 = r0.<android.view.ImeFocusController: android.view.ViewRootImpl mViewRootImpl>;

        virtualinvoke $r4.<android.view.ViewRootImpl: void dispatchCheckFocus()>();

        return;

     label5:
        return;

     label6:
        return;
    }

    void onWindowDismissed()
    {
        android.view.ImeFocusController r0;
        android.view.ImeFocusController$InputMethodManagerDelegate r1;
        android.view.ViewRootImpl $r2;
        boolean $z0;
        android.view.View $r3;

        r0 := @this: android.view.ImeFocusController;

        r1 = specialinvoke r0.<android.view.ImeFocusController: android.view.ImeFocusController$InputMethodManagerDelegate getImmDelegate()>();

        $r2 = r0.<android.view.ImeFocusController: android.view.ViewRootImpl mViewRootImpl>;

        $z0 = interfaceinvoke r1.<android.view.ImeFocusController$InputMethodManagerDelegate: boolean isCurrentRootView(android.view.ViewRootImpl)>($r2);

        if $z0 != 0 goto label1;

        return;

     label1:
        $r3 = r0.<android.view.ImeFocusController: android.view.View mServedView>;

        if $r3 == null goto label2;

        interfaceinvoke r1.<android.view.ImeFocusController$InputMethodManagerDelegate: void finishInput()>();

     label2:
        interfaceinvoke r1.<android.view.ImeFocusController$InputMethodManagerDelegate: void setCurrentRootView(android.view.ViewRootImpl)>(null);

        r0.<android.view.ImeFocusController: boolean mHasImeFocus> = 0;

        return;
    }

    public void setNextServedView(android.view.View)
    {
        android.view.ImeFocusController r0;
        android.view.View r1;

        r0 := @this: android.view.ImeFocusController;

        r1 := @parameter0: android.view.View;

        r0.<android.view.ImeFocusController: android.view.View mNextServedView> = r1;

        return;
    }

    public void setServedView(android.view.View)
    {
        android.view.ImeFocusController r0;
        android.view.View r1;

        r0 := @this: android.view.ImeFocusController;

        r1 := @parameter0: android.view.View;

        r0.<android.view.ImeFocusController: android.view.View mServedView> = r1;

        return;
    }

    boolean updateImeFocusable(android.view.WindowManager$LayoutParams, boolean)
    {
        android.view.ImeFocusController r0;
        android.view.WindowManager$LayoutParams r1;
        boolean z0, z1;
        int $i0;

        r0 := @this: android.view.ImeFocusController;

        r1 := @parameter0: android.view.WindowManager$LayoutParams;

        z0 := @parameter1: boolean;

        $i0 = r1.<android.view.WindowManager$LayoutParams: int flags>;

        z1 = staticinvoke <android.view.WindowManager$LayoutParams: boolean mayUseInputMethod(int)>($i0);

        if z0 == 0 goto label1;

        r0.<android.view.ImeFocusController: boolean mHasImeFocus> = z1;

     label1:
        return z1;
    }

    public static void <clinit>()
    {
        <android.view.ImeFocusController: java.lang.String TAG> = "ImeFocusController";

        <android.view.ImeFocusController: boolean DEBUG> = 0;

        return;
    }
}
