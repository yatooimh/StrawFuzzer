public final class android.view.InputChannel extends java.lang.Object implements android.os.Parcelable
{
    public static final android.os.Parcelable$Creator CREATOR;
    private static final boolean DEBUG;
    private static final java.lang.String TAG;
    private long mPtr;

    static void <clinit>()
    {
        android.view.InputChannel$1 $r0;

        <android.view.InputChannel: java.lang.String TAG> = "InputChannel";

        <android.view.InputChannel: boolean DEBUG> = 0;

        $r0 = new android.view.InputChannel$1;

        specialinvoke $r0.<android.view.InputChannel$1: void <init>()>();

        <android.view.InputChannel: android.os.Parcelable$Creator CREATOR> = $r0;

        return;
    }

    public void <init>()
    {
        android.view.InputChannel r0;

        r0 := @this: android.view.InputChannel;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private native void nativeDispose(boolean);

    private native void nativeDup(android.view.InputChannel);

    private native java.lang.String nativeGetName();

    private native android.os.IBinder nativeGetToken();

    private static native android.view.InputChannel[] nativeOpenInputChannelPair(java.lang.String);

    private native void nativeReadFromParcel(android.os.Parcel);

    private native void nativeRelease();

    private native void nativeTransferTo(android.view.InputChannel);

    private native void nativeWriteToParcel(android.os.Parcel);

    public static android.view.InputChannel[] openInputChannelPair(java.lang.String)
    {
        java.lang.String r0;
        java.lang.IllegalArgumentException $r1;
        android.view.InputChannel[] $r2;

        r0 := @parameter0: java.lang.String;

        if r0 == null goto label1;

        $r2 = staticinvoke <android.view.InputChannel: android.view.InputChannel[] nativeOpenInputChannelPair(java.lang.String)>(r0);

        return $r2;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("name must not be null");

        throw $r1;
    }

    public int describeContents()
    {
        android.view.InputChannel r0;

        r0 := @this: android.view.InputChannel;

        return 1;
    }

    public void dispose()
    {
        android.view.InputChannel r0;

        r0 := @this: android.view.InputChannel;

        specialinvoke r0.<android.view.InputChannel: void nativeDispose(boolean)>(0);

        return;
    }

    public android.view.InputChannel dup()
    {
        android.view.InputChannel r0, $r2;

        r0 := @this: android.view.InputChannel;

        $r2 = new android.view.InputChannel;

        specialinvoke $r2.<android.view.InputChannel: void <init>()>();

        specialinvoke r0.<android.view.InputChannel: void nativeDup(android.view.InputChannel)>($r2);

        return $r2;
    }

    protected void finalize() throws java.lang.Throwable
    {
        android.view.InputChannel r0;
        java.lang.Throwable $r2;

        r0 := @this: android.view.InputChannel;

     label1:
        specialinvoke r0.<android.view.InputChannel: void nativeDispose(boolean)>(1);

     label2:
        specialinvoke r0.<java.lang.Object: void finalize()>();

        return;

     label3:
        $r2 := @caughtexception;

        specialinvoke r0.<java.lang.Object: void finalize()>();

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public java.lang.String getName()
    {
        android.view.InputChannel r0;
        java.lang.String r1;

        r0 := @this: android.view.InputChannel;

        r1 = specialinvoke r0.<android.view.InputChannel: java.lang.String nativeGetName()>();

        if r1 == null goto label1;

        goto label2;

     label1:
        r1 = "uninitialized";

     label2:
        return r1;
    }

    public android.os.IBinder getToken()
    {
        android.view.InputChannel r0;
        android.os.IBinder $r1;

        r0 := @this: android.view.InputChannel;

        $r1 = specialinvoke r0.<android.view.InputChannel: android.os.IBinder nativeGetToken()>();

        return $r1;
    }

    public void readFromParcel(android.os.Parcel)
    {
        android.view.InputChannel r0;
        android.os.Parcel r1;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: android.view.InputChannel;

        r1 := @parameter0: android.os.Parcel;

        if r1 == null goto label1;

        specialinvoke r0.<android.view.InputChannel: void nativeReadFromParcel(android.os.Parcel)>(r1);

        return;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("in must not be null");

        throw $r2;
    }

    public void release()
    {
        android.view.InputChannel r0;

        r0 := @this: android.view.InputChannel;

        specialinvoke r0.<android.view.InputChannel: void nativeRelease()>();

        return;
    }

    public java.lang.String toString()
    {
        android.view.InputChannel r0;
        java.lang.String $r1;

        r0 := @this: android.view.InputChannel;

        $r1 = virtualinvoke r0.<android.view.InputChannel: java.lang.String getName()>();

        return $r1;
    }

    public void transferTo(android.view.InputChannel)
    {
        android.view.InputChannel r0, r1;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: android.view.InputChannel;

        r1 := @parameter0: android.view.InputChannel;

        if r1 == null goto label1;

        specialinvoke r0.<android.view.InputChannel: void nativeTransferTo(android.view.InputChannel)>(r1);

        return;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("outParameter must not be null");

        throw $r2;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.view.InputChannel r0;
        android.os.Parcel r1;
        int i0, $i1;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: android.view.InputChannel;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        if r1 == null goto label2;

        specialinvoke r0.<android.view.InputChannel: void nativeWriteToParcel(android.os.Parcel)>(r1);

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        virtualinvoke r0.<android.view.InputChannel: void dispose()>();

     label1:
        return;

     label2:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("out must not be null");

        throw $r2;
    }
}
