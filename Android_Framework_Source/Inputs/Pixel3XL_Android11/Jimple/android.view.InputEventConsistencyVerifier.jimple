public final class android.view.InputEventConsistencyVerifier extends java.lang.Object
{
    private static final java.lang.String EVENT_TYPE_GENERIC_MOTION;
    private static final java.lang.String EVENT_TYPE_KEY;
    private static final java.lang.String EVENT_TYPE_TOUCH;
    private static final java.lang.String EVENT_TYPE_TRACKBALL;
    public static final int FLAG_RAW_DEVICE_INPUT;
    private static final boolean IS_ENG_BUILD;
    private static final int RECENT_EVENTS_TO_LOG;
    private int mButtonsPressed;
    private final java.lang.Object mCaller;
    private android.view.InputEvent mCurrentEvent;
    private java.lang.String mCurrentEventType;
    private final int mFlags;
    private boolean mHoverEntered;
    private android.view.InputEventConsistencyVerifier$KeyState mKeyStateList;
    private int mLastEventSeq;
    private java.lang.String mLastEventType;
    private int mLastNestingLevel;
    private final java.lang.String mLogTag;
    private int mMostRecentEventIndex;
    private android.view.InputEvent[] mRecentEvents;
    private boolean[] mRecentEventsUnhandled;
    private int mTouchEventStreamDeviceId;
    private boolean mTouchEventStreamIsTainted;
    private int mTouchEventStreamPointers;
    private int mTouchEventStreamSource;
    private boolean mTouchEventStreamUnhandled;
    private boolean mTrackballDown;
    private boolean mTrackballUnhandled;
    private java.lang.StringBuilder mViolationMessage;

    static void <clinit>()
    {
        boolean $z0;

        <android.view.InputEventConsistencyVerifier: int RECENT_EVENTS_TO_LOG> = 5;

        <android.view.InputEventConsistencyVerifier: int FLAG_RAW_DEVICE_INPUT> = 1;

        <android.view.InputEventConsistencyVerifier: java.lang.String EVENT_TYPE_TRACKBALL> = "TrackballEvent";

        <android.view.InputEventConsistencyVerifier: java.lang.String EVENT_TYPE_TOUCH> = "TouchEvent";

        <android.view.InputEventConsistencyVerifier: java.lang.String EVENT_TYPE_KEY> = "KeyEvent";

        <android.view.InputEventConsistencyVerifier: java.lang.String EVENT_TYPE_GENERIC_MOTION> = "GenericMotionEvent";

        $z0 = <android.os.Build: boolean IS_ENG>;

        <android.view.InputEventConsistencyVerifier: boolean IS_ENG_BUILD> = $z0;

        return;
    }

    public void <init>(java.lang.Object, int)
    {
        android.view.InputEventConsistencyVerifier r0;
        java.lang.Object r1;
        int i0;

        r0 := @this: android.view.InputEventConsistencyVerifier;

        r1 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        specialinvoke r0.<android.view.InputEventConsistencyVerifier: void <init>(java.lang.Object,int,java.lang.String)>(r1, i0, null);

        return;
    }

    public void <init>(java.lang.Object, int, java.lang.String)
    {
        android.view.InputEventConsistencyVerifier r0;
        int i0;
        java.lang.String r1, r3;
        java.lang.Object r2;

        r0 := @this: android.view.InputEventConsistencyVerifier;

        r2 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.view.InputEventConsistencyVerifier: int mTouchEventStreamDeviceId> = -1;

        r0.<android.view.InputEventConsistencyVerifier: java.lang.Object mCaller> = r2;

        r0.<android.view.InputEventConsistencyVerifier: int mFlags> = i0;

        if r1 == null goto label1;

        r3 = r1;

        goto label2;

     label1:
        r3 = "InputEventConsistencyVerifier";

     label2:
        r0.<android.view.InputEventConsistencyVerifier: java.lang.String mLogTag> = r3;

        return;
    }

    private void addKeyState(int, int, int)
    {
        android.view.InputEventConsistencyVerifier r0;
        int i0, i1, i2;
        android.view.InputEventConsistencyVerifier$KeyState r1, $r2;

        r0 := @this: android.view.InputEventConsistencyVerifier;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r1 = staticinvoke <android.view.InputEventConsistencyVerifier$KeyState: android.view.InputEventConsistencyVerifier$KeyState obtain(int,int,int)>(i0, i1, i2);

        $r2 = r0.<android.view.InputEventConsistencyVerifier: android.view.InputEventConsistencyVerifier$KeyState mKeyStateList>;

        r1.<android.view.InputEventConsistencyVerifier$KeyState: android.view.InputEventConsistencyVerifier$KeyState next> = $r2;

        r0.<android.view.InputEventConsistencyVerifier: android.view.InputEventConsistencyVerifier$KeyState mKeyStateList> = r1;

        return;
    }

    private static void appendEvent(java.lang.StringBuilder, int, android.view.InputEvent, boolean)
    {
        java.lang.StringBuilder r0;
        int i0;
        android.view.InputEvent r1;
        boolean z0;
        long $l1;

        r0 := @parameter0: java.lang.StringBuilder;

        i0 := @parameter1: int;

        r1 := @parameter2: android.view.InputEvent;

        z0 := @parameter3: boolean;

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": sent at ");

        $l1 = virtualinvoke r1.<android.view.InputEvent: long getEventTimeNano()>();

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        if z0 == 0 goto label1;

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(unhandled) ");

     label1:
        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        return;
    }

    private void ensureActionButtonIsNonZeroForThisAction(android.view.MotionEvent)
    {
        android.view.InputEventConsistencyVerifier r0;
        android.view.MotionEvent r1;
        int $i0, $i1;
        java.lang.StringBuilder $r3;
        java.lang.String $r5, $r7;

        r0 := @this: android.view.InputEventConsistencyVerifier;

        r1 := @parameter0: android.view.MotionEvent;

        $i0 = virtualinvoke r1.<android.view.MotionEvent: int getActionButton()>();

        if $i0 != 0 goto label1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No action button set. Action button should always be non-zero for ");

        $i1 = virtualinvoke r1.<android.view.MotionEvent: int getAction()>();

        $r5 = staticinvoke <android.view.MotionEvent: java.lang.String actionToString(int)>($i1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<android.view.InputEventConsistencyVerifier: void problem(java.lang.String)>($r7);

     label1:
        return;
    }

    private void ensureHistorySizeIsZeroForThisAction(android.view.MotionEvent)
    {
        android.view.InputEventConsistencyVerifier r0;
        android.view.MotionEvent r1;
        int i0, $i1;
        java.lang.StringBuilder $r3;
        java.lang.String $r7, $r9;

        r0 := @this: android.view.InputEventConsistencyVerifier;

        r1 := @parameter0: android.view.MotionEvent;

        i0 = virtualinvoke r1.<android.view.MotionEvent: int getHistorySize()>();

        if i0 == 0 goto label1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("History size is ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but it should always be 0 for ");

        $i1 = virtualinvoke r1.<android.view.MotionEvent: int getAction()>();

        $r7 = staticinvoke <android.view.MotionEvent: java.lang.String actionToString(int)>($i1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<android.view.InputEventConsistencyVerifier: void problem(java.lang.String)>($r9);

     label1:
        return;
    }

    private void ensureMetaStateIsNormalized(int)
    {
        android.view.InputEventConsistencyVerifier r0;
        int i0, i1;
        java.lang.Object[] $r1;
        java.lang.Integer $r2, $r3;
        java.lang.String $r4;

        r0 := @this: android.view.InputEventConsistencyVerifier;

        i0 := @parameter0: int;

        i1 = staticinvoke <android.view.KeyEvent: int normalizeMetaState(int)>(i0);

        if i1 == i0 goto label1;

        $r1 = newarray (java.lang.Object)[2];

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r1[0] = $r2;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r1[1] = $r3;

        $r4 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Metastate not normalized.  Was 0x%08x but expected 0x%08x.", $r1);

        specialinvoke r0.<android.view.InputEventConsistencyVerifier: void problem(java.lang.String)>($r4);

     label1:
        return;
    }

    private void ensurePointerCountIsOneForThisAction(android.view.MotionEvent)
    {
        android.view.InputEventConsistencyVerifier r0;
        android.view.MotionEvent r1;
        int i0, $i1;
        java.lang.StringBuilder $r3;
        java.lang.String $r7, $r9;

        r0 := @this: android.view.InputEventConsistencyVerifier;

        r1 := @parameter0: android.view.MotionEvent;

        i0 = virtualinvoke r1.<android.view.MotionEvent: int getPointerCount()>();

        if i0 == 1 goto label1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Pointer count is ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but it should always be 1 for ");

        $i1 = virtualinvoke r1.<android.view.MotionEvent: int getAction()>();

        $r7 = staticinvoke <android.view.MotionEvent: java.lang.String actionToString(int)>($i1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<android.view.InputEventConsistencyVerifier: void problem(java.lang.String)>($r9);

     label1:
        return;
    }

    private android.view.InputEventConsistencyVerifier$KeyState findKeyState(int, int, int, boolean)
    {
        android.view.InputEventConsistencyVerifier r0;
        int i0, i1, i2, $i3, $i4, $i5;
        boolean z0;
        android.view.InputEventConsistencyVerifier$KeyState $r1, $r2, r3, r4;

        r0 := @this: android.view.InputEventConsistencyVerifier;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        z0 := @parameter3: boolean;

        r3 = null;

        r4 = r0.<android.view.InputEventConsistencyVerifier: android.view.InputEventConsistencyVerifier$KeyState mKeyStateList>;

     label1:
        if r4 == null goto label6;

        $i3 = r4.<android.view.InputEventConsistencyVerifier$KeyState: int deviceId>;

        if $i3 != i0 goto label5;

        $i4 = r4.<android.view.InputEventConsistencyVerifier$KeyState: int source>;

        if $i4 != i1 goto label5;

        $i5 = r4.<android.view.InputEventConsistencyVerifier$KeyState: int keyCode>;

        if $i5 != i2 goto label5;

        if z0 == 0 goto label4;

        if r3 == null goto label2;

        $r2 = r4.<android.view.InputEventConsistencyVerifier$KeyState: android.view.InputEventConsistencyVerifier$KeyState next>;

        r3.<android.view.InputEventConsistencyVerifier$KeyState: android.view.InputEventConsistencyVerifier$KeyState next> = $r2;

        goto label3;

     label2:
        $r1 = r4.<android.view.InputEventConsistencyVerifier$KeyState: android.view.InputEventConsistencyVerifier$KeyState next>;

        r0.<android.view.InputEventConsistencyVerifier: android.view.InputEventConsistencyVerifier$KeyState mKeyStateList> = $r1;

     label3:
        r4.<android.view.InputEventConsistencyVerifier$KeyState: android.view.InputEventConsistencyVerifier$KeyState next> = null;

     label4:
        return r4;

     label5:
        r3 = r4;

        r4 = r4.<android.view.InputEventConsistencyVerifier$KeyState: android.view.InputEventConsistencyVerifier$KeyState next>;

        goto label1;

     label6:
        return null;
    }

    private void finishEvent()
    {
        android.view.InputEventConsistencyVerifier r0;
        int i0, $i1, $i2, $i3, $i5, $i6, $i7, $i8, i9, i10;
        android.view.InputEvent $r1, $r2, $r4, $r6, $r9, $r15, r27, $r31;
        android.view.InputEvent[] $r3, $r7, $r17, $r20, $r33, r34;
        boolean[] $r5, $r8, $r23;
        boolean $z0, $z1;
        java.lang.Object $r11;
        java.lang.StringBuilder $r13, $r16, $r18, $r21, $r24, r25, r26, $r29, $r32;
        java.lang.String $r28, $r30;

        r0 := @this: android.view.InputEventConsistencyVerifier;

        r25 = r0.<android.view.InputEventConsistencyVerifier: java.lang.StringBuilder mViolationMessage>;

        if r25 == null goto label5;

        $i3 = virtualinvoke r25.<java.lang.StringBuilder: int length()>();

        if $i3 == 0 goto label5;

        $r9 = r0.<android.view.InputEventConsistencyVerifier: android.view.InputEvent mCurrentEvent>;

        $z0 = virtualinvoke $r9.<android.view.InputEvent: boolean isTainted()>();

        if $z0 != 0 goto label4;

        r26 = r0.<android.view.InputEventConsistencyVerifier: java.lang.StringBuilder mViolationMessage>;

        virtualinvoke r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n  in ");

        $r11 = r0.<android.view.InputEventConsistencyVerifier: java.lang.Object mCaller>;

        virtualinvoke r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11);

        $r13 = r0.<android.view.InputEventConsistencyVerifier: java.lang.StringBuilder mViolationMessage>;

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n  ");

        $r16 = r0.<android.view.InputEventConsistencyVerifier: java.lang.StringBuilder mViolationMessage>;

        $r15 = r0.<android.view.InputEventConsistencyVerifier: android.view.InputEvent mCurrentEvent>;

        staticinvoke <android.view.InputEventConsistencyVerifier: void appendEvent(java.lang.StringBuilder,int,android.view.InputEvent,boolean)>($r16, 0, $r15, 0);

        $r17 = r0.<android.view.InputEventConsistencyVerifier: android.view.InputEvent[] mRecentEvents>;

        if $r17 == null goto label3;

        $r18 = r0.<android.view.InputEventConsistencyVerifier: java.lang.StringBuilder mViolationMessage>;

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n  -- recent events --");

        i9 = 0;

     label1:
        if i9 >= 5 goto label3;

        $i5 = r0.<android.view.InputEventConsistencyVerifier: int mMostRecentEventIndex>;

        $i6 = $i5 + 5;

        $i7 = $i6 - i9;

        i0 = $i7 % 5;

        $r20 = r0.<android.view.InputEventConsistencyVerifier: android.view.InputEvent[] mRecentEvents>;

        r27 = $r20[i0];

        if r27 != null goto label2;

        goto label3;

     label2:
        $r21 = r0.<android.view.InputEventConsistencyVerifier: java.lang.StringBuilder mViolationMessage>;

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n  ");

        $r24 = r0.<android.view.InputEventConsistencyVerifier: java.lang.StringBuilder mViolationMessage>;

        $i8 = i9 + 1;

        $r23 = r0.<android.view.InputEventConsistencyVerifier: boolean[] mRecentEventsUnhandled>;

        $z1 = $r23[i0];

        staticinvoke <android.view.InputEventConsistencyVerifier: void appendEvent(java.lang.StringBuilder,int,android.view.InputEvent,boolean)>($r24, $i8, r27, $z1);

        i9 = i9 + 1;

        goto label1;

     label3:
        $r28 = r0.<android.view.InputEventConsistencyVerifier: java.lang.String mLogTag>;

        $r29 = r0.<android.view.InputEventConsistencyVerifier: java.lang.StringBuilder mViolationMessage>;

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r28, $r30);

        $r31 = r0.<android.view.InputEventConsistencyVerifier: android.view.InputEvent mCurrentEvent>;

        virtualinvoke $r31.<android.view.InputEvent: void setTainted(boolean)>(1);

     label4:
        $r32 = r0.<android.view.InputEventConsistencyVerifier: java.lang.StringBuilder mViolationMessage>;

        virtualinvoke $r32.<java.lang.StringBuilder: void setLength(int)>(0);

     label5:
        $r33 = r0.<android.view.InputEventConsistencyVerifier: android.view.InputEvent[] mRecentEvents>;

        if $r33 != null goto label6;

        $r7 = newarray (android.view.InputEvent)[5];

        r0.<android.view.InputEventConsistencyVerifier: android.view.InputEvent[] mRecentEvents> = $r7;

        $r8 = newarray (boolean)[5];

        r0.<android.view.InputEventConsistencyVerifier: boolean[] mRecentEventsUnhandled> = $r8;

     label6:
        $i1 = r0.<android.view.InputEventConsistencyVerifier: int mMostRecentEventIndex>;

        $i2 = $i1 + 1;

        i10 = $i2 % 5;

        r0.<android.view.InputEventConsistencyVerifier: int mMostRecentEventIndex> = i10;

        r34 = r0.<android.view.InputEventConsistencyVerifier: android.view.InputEvent[] mRecentEvents>;

        $r1 = r34[i10];

        if $r1 == null goto label7;

        $r6 = r34[i10];

        virtualinvoke $r6.<android.view.InputEvent: void recycle()>();

     label7:
        $r3 = r0.<android.view.InputEventConsistencyVerifier: android.view.InputEvent[] mRecentEvents>;

        $r2 = r0.<android.view.InputEventConsistencyVerifier: android.view.InputEvent mCurrentEvent>;

        $r4 = virtualinvoke $r2.<android.view.InputEvent: android.view.InputEvent copy()>();

        $r3[i10] = $r4;

        $r5 = r0.<android.view.InputEventConsistencyVerifier: boolean[] mRecentEventsUnhandled>;

        $r5[i10] = 0;

        r0.<android.view.InputEventConsistencyVerifier: android.view.InputEvent mCurrentEvent> = null;

        r0.<android.view.InputEventConsistencyVerifier: java.lang.String mCurrentEventType> = null;

        return;
    }

    public static boolean isInstrumentationEnabled()
    {
        boolean $z0;

        $z0 = <android.view.InputEventConsistencyVerifier: boolean IS_ENG_BUILD>;

        return $z0;
    }

    private void problem(java.lang.String)
    {
        android.view.InputEventConsistencyVerifier r0;
        java.lang.String r1, $r9;
        java.lang.StringBuilder r2, $r3, $r4, $r5, $r7, $r12;
        int $i0;

        r0 := @this: android.view.InputEventConsistencyVerifier;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<android.view.InputEventConsistencyVerifier: java.lang.StringBuilder mViolationMessage>;

        if $r3 != null goto label1;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        r0.<android.view.InputEventConsistencyVerifier: java.lang.StringBuilder mViolationMessage> = $r12;

     label1:
        $r4 = r0.<android.view.InputEventConsistencyVerifier: java.lang.StringBuilder mViolationMessage>;

        $i0 = virtualinvoke $r4.<java.lang.StringBuilder: int length()>();

        if $i0 != 0 goto label2;

        r2 = r0.<android.view.InputEventConsistencyVerifier: java.lang.StringBuilder mViolationMessage>;

        $r9 = r0.<android.view.InputEventConsistencyVerifier: java.lang.String mCurrentEventType>;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        goto label3;

     label2:
        $r5 = r0.<android.view.InputEventConsistencyVerifier: java.lang.StringBuilder mViolationMessage>;

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n  ");

     label3:
        $r7 = r0.<android.view.InputEventConsistencyVerifier: java.lang.StringBuilder mViolationMessage>;

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        return;
    }

    private boolean startEvent(android.view.InputEvent, int, java.lang.String)
    {
        android.view.InputEventConsistencyVerifier r0;
        android.view.InputEvent r1;
        int i0, i1, $i2, $i3;
        java.lang.String r2, $r3;

        r0 := @this: android.view.InputEventConsistencyVerifier;

        r1 := @parameter0: android.view.InputEvent;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        i1 = virtualinvoke r1.<android.view.InputEvent: int getSequenceNumber()>();

        $i2 = r0.<android.view.InputEventConsistencyVerifier: int mLastEventSeq>;

        if i1 != $i2 goto label1;

        $i3 = r0.<android.view.InputEventConsistencyVerifier: int mLastNestingLevel>;

        if i0 >= $i3 goto label1;

        $r3 = r0.<android.view.InputEventConsistencyVerifier: java.lang.String mLastEventType>;

        if r2 != $r3 goto label1;

        return 0;

     label1:
        if i0 <= 0 goto label2;

        r0.<android.view.InputEventConsistencyVerifier: int mLastEventSeq> = i1;

        r0.<android.view.InputEventConsistencyVerifier: java.lang.String mLastEventType> = r2;

        r0.<android.view.InputEventConsistencyVerifier: int mLastNestingLevel> = i0;

        goto label3;

     label2:
        r0.<android.view.InputEventConsistencyVerifier: int mLastEventSeq> = -1;

        r0.<android.view.InputEventConsistencyVerifier: java.lang.String mLastEventType> = null;

        r0.<android.view.InputEventConsistencyVerifier: int mLastNestingLevel> = 0;

     label3:
        r0.<android.view.InputEventConsistencyVerifier: android.view.InputEvent mCurrentEvent> = r1;

        r0.<android.view.InputEventConsistencyVerifier: java.lang.String mCurrentEventType> = r2;

        return 1;
    }

    public void onGenericMotionEvent(android.view.MotionEvent, int)
    {
        android.view.InputEventConsistencyVerifier r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, i23, i24, i25, i26, $i27, i28, $i29;
        boolean $z0, $z1;
        java.lang.Object[] $r1, $r9;
        java.lang.Integer $r2, $r3, $r10, $r11;
        java.lang.String $r4, $r8, $r12, $r16;
        java.lang.Throwable $r17;
        android.view.MotionEvent r18;
        java.lang.StringBuilder r19, r20;

        r0 := @this: android.view.InputEventConsistencyVerifier;

        r18 := @parameter0: android.view.MotionEvent;

        i23 := @parameter1: int;

        $z0 = specialinvoke r0.<android.view.InputEventConsistencyVerifier: boolean startEvent(android.view.InputEvent,int,java.lang.String)>(r18, i23, "GenericMotionEvent");

        if $z0 != 0 goto label01;

        return;

     label01:
        $i2 = virtualinvoke r18.<android.view.MotionEvent: int getMetaState()>();

        specialinvoke r0.<android.view.InputEventConsistencyVerifier: void ensureMetaStateIsNormalized(int)>($i2);

        i24 = virtualinvoke r18.<android.view.MotionEvent: int getAction()>();

        i0 = virtualinvoke r18.<android.view.MotionEvent: int getSource()>();

        i25 = virtualinvoke r18.<android.view.MotionEvent: int getButtonState()>();

        i1 = virtualinvoke r18.<android.view.MotionEvent: int getActionButton()>();

     label02:
        $i3 = i0 & 2;

        if $i3 == 0 goto label33;

        tableswitch(i24)
        {
            case 7: goto label29;
            case 8: goto label27;
            case 9: goto label25;
            case 10: goto label22;
            case 11: goto label13;
            case 12: goto label04;
            default: goto label03;
        };

     label03:
        goto label31;

     label04:
        specialinvoke r0.<android.view.InputEventConsistencyVerifier: void ensureActionButtonIsNonZeroForThisAction(android.view.MotionEvent)>(r18);

        $i5 = r0.<android.view.InputEventConsistencyVerifier: int mButtonsPressed>;

        $i6 = $i5 & i1;

        if $i6 == i1 goto label05;

        r19 = new java.lang.StringBuilder;

        specialinvoke r19.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Action button for ACTION_BUTTON_RELEASE event is ");

        virtualinvoke r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        virtualinvoke r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", but it was either never pressed or has already been released.");

        $r8 = virtualinvoke r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<android.view.InputEventConsistencyVerifier: void problem(java.lang.String)>($r8);

     label05:
        $i7 = r0.<android.view.InputEventConsistencyVerifier: int mButtonsPressed>;

        i26 = $i7 & i1;

        r0.<android.view.InputEventConsistencyVerifier: int mButtonsPressed> = i26;

     label06:
        if i1 != 32 goto label09;

        $i12 = i25 & 2;

        if $i12 != 0 goto label09;

     label07:
        $i13 = i26 & -3;

        r0.<android.view.InputEventConsistencyVerifier: int mButtonsPressed> = $i13;

     label08:
        goto label11;

     label09:
        if i1 != 64 goto label11;

        $i9 = i25 & 4;

        if $i9 != 0 goto label11;

     label10:
        $i10 = r0.<android.view.InputEventConsistencyVerifier: int mButtonsPressed>;

        $i11 = $i10 & -5;

        r0.<android.view.InputEventConsistencyVerifier: int mButtonsPressed> = $i11;

     label11:
        $i27 = r0.<android.view.InputEventConsistencyVerifier: int mButtonsPressed>;

        if $i27 == i25 goto label37;

        $r1 = newarray (java.lang.Object)[2];

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i25);

        $r1[0] = $r2;

        $i8 = r0.<android.view.InputEventConsistencyVerifier: int mButtonsPressed>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i8);

        $r1[1] = $r3;

        $r4 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Reported button state differs from expected button state based on press and release events. Is 0x%08x but expected 0x%08x.", $r1);

        specialinvoke r0.<android.view.InputEventConsistencyVerifier: void problem(java.lang.String)>($r4);

     label12:
        goto label37;

     label13:
        specialinvoke r0.<android.view.InputEventConsistencyVerifier: void ensureActionButtonIsNonZeroForThisAction(android.view.MotionEvent)>(r18);

        $i14 = r0.<android.view.InputEventConsistencyVerifier: int mButtonsPressed>;

        $i15 = $i14 & i1;

        if $i15 == 0 goto label14;

        r20 = new java.lang.StringBuilder;

        specialinvoke r20.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Action button for ACTION_BUTTON_PRESS event is ");

        virtualinvoke r20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        virtualinvoke r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", but it has already been pressed and has yet to be released.");

        $r16 = virtualinvoke r20.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<android.view.InputEventConsistencyVerifier: void problem(java.lang.String)>($r16);

     label14:
        $i16 = r0.<android.view.InputEventConsistencyVerifier: int mButtonsPressed>;

        i28 = $i16 | i1;

        r0.<android.view.InputEventConsistencyVerifier: int mButtonsPressed> = i28;

     label15:
        if i1 != 32 goto label18;

        $i21 = i25 & 2;

        if $i21 == 0 goto label18;

     label16:
        $i22 = i28 | 2;

        r0.<android.view.InputEventConsistencyVerifier: int mButtonsPressed> = $i22;

     label17:
        goto label20;

     label18:
        if i1 != 64 goto label20;

        $i18 = i25 & 4;

        if $i18 == 0 goto label20;

     label19:
        $i19 = r0.<android.view.InputEventConsistencyVerifier: int mButtonsPressed>;

        $i20 = $i19 | 4;

        r0.<android.view.InputEventConsistencyVerifier: int mButtonsPressed> = $i20;

     label20:
        $i29 = r0.<android.view.InputEventConsistencyVerifier: int mButtonsPressed>;

        if $i29 == i25 goto label37;

        $r9 = newarray (java.lang.Object)[2];

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i25);

        $r9[0] = $r10;

        $i17 = r0.<android.view.InputEventConsistencyVerifier: int mButtonsPressed>;

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i17);

        $r9[1] = $r11;

        $r12 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Reported button state differs from expected button state based on press and release events. Is 0x%08x but expected 0x%08x.", $r9);

        specialinvoke r0.<android.view.InputEventConsistencyVerifier: void problem(java.lang.String)>($r12);

     label21:
        goto label37;

     label22:
        specialinvoke r0.<android.view.InputEventConsistencyVerifier: void ensurePointerCountIsOneForThisAction(android.view.MotionEvent)>(r18);

        $z1 = r0.<android.view.InputEventConsistencyVerifier: boolean mHoverEntered>;

        if $z1 != 0 goto label23;

        specialinvoke r0.<android.view.InputEventConsistencyVerifier: void problem(java.lang.String)>("ACTION_HOVER_EXIT without prior ACTION_HOVER_ENTER");

     label23:
        r0.<android.view.InputEventConsistencyVerifier: boolean mHoverEntered> = 0;

     label24:
        goto label37;

     label25:
        specialinvoke r0.<android.view.InputEventConsistencyVerifier: void ensurePointerCountIsOneForThisAction(android.view.MotionEvent)>(r18);

        r0.<android.view.InputEventConsistencyVerifier: boolean mHoverEntered> = 1;

     label26:
        goto label37;

     label27:
        specialinvoke r0.<android.view.InputEventConsistencyVerifier: void ensureHistorySizeIsZeroForThisAction(android.view.MotionEvent)>(r18);

        specialinvoke r0.<android.view.InputEventConsistencyVerifier: void ensurePointerCountIsOneForThisAction(android.view.MotionEvent)>(r18);

     label28:
        goto label37;

     label29:
        specialinvoke r0.<android.view.InputEventConsistencyVerifier: void ensurePointerCountIsOneForThisAction(android.view.MotionEvent)>(r18);

     label30:
        goto label37;

     label31:
        specialinvoke r0.<android.view.InputEventConsistencyVerifier: void problem(java.lang.String)>("Invalid action for generic pointer event.");

     label32:
        goto label37;

     label33:
        $i4 = i0 & 16;

        if $i4 == 0 goto label37;

        if i24 == 2 goto label36;

     label34:
        specialinvoke r0.<android.view.InputEventConsistencyVerifier: void problem(java.lang.String)>("Invalid action for generic joystick event.");

     label35:
        goto label37;

     label36:
        specialinvoke r0.<android.view.InputEventConsistencyVerifier: void ensurePointerCountIsOneForThisAction(android.view.MotionEvent)>(r18);

     label37:
        specialinvoke r0.<android.view.InputEventConsistencyVerifier: void finishEvent()>();

        return;

     label38:
        $r17 := @caughtexception;

        specialinvoke r0.<android.view.InputEventConsistencyVerifier: void finishEvent()>();

        throw $r17;

        catch java.lang.Throwable from label01 to label02 with label38;
        catch java.lang.Throwable from label04 to label05 with label38;
        catch java.lang.Throwable from label05 to label06 with label38;
        catch java.lang.Throwable from label07 to label08 with label38;
        catch java.lang.Throwable from label10 to label11 with label38;
        catch java.lang.Throwable from label11 to label12 with label38;
        catch java.lang.Throwable from label13 to label14 with label38;
        catch java.lang.Throwable from label14 to label15 with label38;
        catch java.lang.Throwable from label16 to label17 with label38;
        catch java.lang.Throwable from label19 to label20 with label38;
        catch java.lang.Throwable from label20 to label21 with label38;
        catch java.lang.Throwable from label22 to label23 with label38;
        catch java.lang.Throwable from label23 to label24 with label38;
        catch java.lang.Throwable from label25 to label26 with label38;
        catch java.lang.Throwable from label27 to label28 with label38;
        catch java.lang.Throwable from label29 to label30 with label38;
        catch java.lang.Throwable from label31 to label32 with label38;
        catch java.lang.Throwable from label34 to label35 with label38;
        catch java.lang.Throwable from label36 to label37 with label38;
    }

    public void onInputEvent(android.view.InputEvent, int)
    {
        android.view.InputEventConsistencyVerifier r0;
        int i0, $i1, $i2;
        boolean $z0, $z1;
        android.view.KeyEvent $r1;
        android.view.InputEvent r2;
        android.view.MotionEvent r3;

        r0 := @this: android.view.InputEventConsistencyVerifier;

        r2 := @parameter0: android.view.InputEvent;

        i0 := @parameter1: int;

        $z0 = r2 instanceof android.view.KeyEvent;

        if $z0 == 0 goto label1;

        $r1 = (android.view.KeyEvent) r2;

        virtualinvoke r0.<android.view.InputEventConsistencyVerifier: void onKeyEvent(android.view.KeyEvent,int)>($r1, i0);

        goto label4;

     label1:
        r3 = (android.view.MotionEvent) r2;

        $z1 = virtualinvoke r3.<android.view.MotionEvent: boolean isTouchEvent()>();

        if $z1 == 0 goto label2;

        virtualinvoke r0.<android.view.InputEventConsistencyVerifier: void onTouchEvent(android.view.MotionEvent,int)>(r3, i0);

        goto label4;

     label2:
        $i1 = virtualinvoke r3.<android.view.MotionEvent: int getSource()>();

        $i2 = $i1 & 4;

        if $i2 == 0 goto label3;

        virtualinvoke r0.<android.view.InputEventConsistencyVerifier: void onTrackballEvent(android.view.MotionEvent,int)>(r3, i0);

        goto label4;

     label3:
        virtualinvoke r0.<android.view.InputEventConsistencyVerifier: void onGenericMotionEvent(android.view.MotionEvent,int)>(r3, i0);

     label4:
        return;
    }

    public void onKeyEvent(android.view.KeyEvent, int)
    {
        android.view.InputEventConsistencyVerifier r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, i7, i8;
        android.view.InputEventConsistencyVerifier$KeyState r1, r10;
        boolean $z0, $z1;
        java.lang.String $r3, $r6;
        java.lang.Throwable $r7;
        android.view.KeyEvent r8;
        java.lang.StringBuilder r9;

        r0 := @this: android.view.InputEventConsistencyVerifier;

        r8 := @parameter0: android.view.KeyEvent;

        i7 := @parameter1: int;

        $z0 = specialinvoke r0.<android.view.InputEventConsistencyVerifier: boolean startEvent(android.view.InputEvent,int,java.lang.String)>(r8, i7, "KeyEvent");

        if $z0 != 0 goto label01;

        return;

     label01:
        $i3 = virtualinvoke r8.<android.view.KeyEvent: int getMetaState()>();

        specialinvoke r0.<android.view.InputEventConsistencyVerifier: void ensureMetaStateIsNormalized(int)>($i3);

        i8 = virtualinvoke r8.<android.view.KeyEvent: int getAction()>();

        i0 = virtualinvoke r8.<android.view.KeyEvent: int getDeviceId()>();

        i1 = virtualinvoke r8.<android.view.KeyEvent: int getSource()>();

        i2 = virtualinvoke r8.<android.view.KeyEvent: int getKeyCode()>();

     label02:
        if i8 == 0 goto label12;

        if i8 == 1 goto label06;

        if i8 == 2 goto label05;

     label03:
        r9 = new java.lang.StringBuilder;

        specialinvoke r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid action ");

        $r3 = staticinvoke <android.view.KeyEvent: java.lang.String actionToString(int)>(i8);

        virtualinvoke r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        virtualinvoke r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for key event.");

        $r6 = virtualinvoke r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<android.view.InputEventConsistencyVerifier: void problem(java.lang.String)>($r6);

     label04:
        goto label19;

     label05:
        goto label19;

     label06:
        r10 = specialinvoke r0.<android.view.InputEventConsistencyVerifier: android.view.InputEventConsistencyVerifier$KeyState findKeyState(int,int,int,boolean)>(i0, i1, i2, 1);

     label07:
        if r10 != null goto label10;

     label08:
        specialinvoke r0.<android.view.InputEventConsistencyVerifier: void problem(java.lang.String)>("ACTION_UP but key was not down.");

     label09:
        goto label19;

     label10:
        virtualinvoke r10.<android.view.InputEventConsistencyVerifier$KeyState: void recycle()>();

     label11:
        goto label19;

     label12:
        r1 = specialinvoke r0.<android.view.InputEventConsistencyVerifier: android.view.InputEventConsistencyVerifier$KeyState findKeyState(int,int,int,boolean)>(i0, i1, i2, 0);

     label13:
        if r1 == null goto label18;

     label14:
        $z1 = r1.<android.view.InputEventConsistencyVerifier$KeyState: boolean unhandled>;

        if $z1 == 0 goto label16;

        r1.<android.view.InputEventConsistencyVerifier$KeyState: boolean unhandled> = 0;

     label15:
        goto label19;

     label16:
        $i4 = r0.<android.view.InputEventConsistencyVerifier: int mFlags>;

        $i5 = 1 & $i4;

        if $i5 != 0 goto label19;

        $i6 = virtualinvoke r8.<android.view.KeyEvent: int getRepeatCount()>();

        if $i6 != 0 goto label19;

        specialinvoke r0.<android.view.InputEventConsistencyVerifier: void problem(java.lang.String)>("ACTION_DOWN but key is already down and this event is not a key repeat.");

     label17:
        goto label19;

     label18:
        specialinvoke r0.<android.view.InputEventConsistencyVerifier: void addKeyState(int,int,int)>(i0, i1, i2);

     label19:
        specialinvoke r0.<android.view.InputEventConsistencyVerifier: void finishEvent()>();

        return;

     label20:
        $r7 := @caughtexception;

        specialinvoke r0.<android.view.InputEventConsistencyVerifier: void finishEvent()>();

        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label20;
        catch java.lang.Throwable from label03 to label04 with label20;
        catch java.lang.Throwable from label06 to label07 with label20;
        catch java.lang.Throwable from label08 to label09 with label20;
        catch java.lang.Throwable from label10 to label11 with label20;
        catch java.lang.Throwable from label12 to label13 with label20;
        catch java.lang.Throwable from label14 to label15 with label20;
        catch java.lang.Throwable from label16 to label17 with label20;
        catch java.lang.Throwable from label18 to label19 with label20;
    }

    public void onTouchEvent(android.view.MotionEvent, int)
    {
        android.view.InputEventConsistencyVerifier r0;
        boolean $z0, $z1, $z2, z3, $z4;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, i20, i21, i22, i23, i24, $i25, i26, i27, i28, i29, i30, i31, i32;
        java.lang.String $r6, $r8, $r11, $r17, $r21, $r27, $r31, $r35, $r40, $r42;
        java.lang.Throwable $r43;
        android.view.MotionEvent r44;
        java.lang.StringBuilder r45, r46, r47, r48, r49, r50, r51;

        r0 := @this: android.view.InputEventConsistencyVerifier;

        r44 := @parameter0: android.view.MotionEvent;

        i20 := @parameter1: int;

        $z0 = specialinvoke r0.<android.view.InputEventConsistencyVerifier: boolean startEvent(android.view.InputEvent,int,java.lang.String)>(r44, i20, "TouchEvent");

        if $z0 != 0 goto label01;

        return;

     label01:
        i21 = virtualinvoke r44.<android.view.MotionEvent: int getAction()>();

        if i21 == 0 goto label03;

        if i21 == 3 goto label03;

        if i21 != 4 goto label02;

        goto label03;

     label02:
        z3 = 0;

        goto label04;

     label03:
        z3 = 1;

     label04:
        if z3 == 0 goto label06;

        $z1 = r0.<android.view.InputEventConsistencyVerifier: boolean mTouchEventStreamIsTainted>;

        if $z1 != 0 goto label05;

        $z2 = r0.<android.view.InputEventConsistencyVerifier: boolean mTouchEventStreamUnhandled>;

        if $z2 == 0 goto label06;

     label05:
        r0.<android.view.InputEventConsistencyVerifier: boolean mTouchEventStreamIsTainted> = 0;

        r0.<android.view.InputEventConsistencyVerifier: boolean mTouchEventStreamUnhandled> = 0;

        r0.<android.view.InputEventConsistencyVerifier: int mTouchEventStreamPointers> = 0;

     label06:
        $z4 = r0.<android.view.InputEventConsistencyVerifier: boolean mTouchEventStreamIsTainted>;

        if $z4 == 0 goto label07;

        virtualinvoke r44.<android.view.MotionEvent: void setTainted(boolean)>(1);

     label07:
        $i0 = virtualinvoke r44.<android.view.MotionEvent: int getMetaState()>();

        specialinvoke r0.<android.view.InputEventConsistencyVerifier: void ensureMetaStateIsNormalized(int)>($i0);

        i22 = virtualinvoke r44.<android.view.MotionEvent: int getDeviceId()>();

        i23 = virtualinvoke r44.<android.view.MotionEvent: int getSource()>();

     label08:
        if z3 != 0 goto label11;

     label09:
        $i15 = r0.<android.view.InputEventConsistencyVerifier: int mTouchEventStreamDeviceId>;

        if $i15 == -1 goto label11;

        $i16 = r0.<android.view.InputEventConsistencyVerifier: int mTouchEventStreamDeviceId>;

        if $i16 != i22 goto label10;

        $i19 = r0.<android.view.InputEventConsistencyVerifier: int mTouchEventStreamSource>;

        if $i19 == i23 goto label11;

     label10:
        r45 = new java.lang.StringBuilder;

        specialinvoke r45.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Touch event stream contains events from multiple sources: previous device id ");

        $i17 = r0.<android.view.InputEventConsistencyVerifier: int mTouchEventStreamDeviceId>;

        virtualinvoke r45.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i17);

        virtualinvoke r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", previous source ");

        $i18 = r0.<android.view.InputEventConsistencyVerifier: int mTouchEventStreamSource>;

        $r35 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i18);

        virtualinvoke r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r35);

        virtualinvoke r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", new device id ");

        virtualinvoke r45.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i22);

        virtualinvoke r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", new source ");

        $r40 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i23);

        virtualinvoke r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r40);

        $r42 = virtualinvoke r45.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<android.view.InputEventConsistencyVerifier: void problem(java.lang.String)>($r42);

     label11:
        r0.<android.view.InputEventConsistencyVerifier: int mTouchEventStreamDeviceId> = i22;

        r0.<android.view.InputEventConsistencyVerifier: int mTouchEventStreamSource> = i23;

        i24 = virtualinvoke r44.<android.view.MotionEvent: int getPointerCount()>();

     label12:
        $i25 = i23 & 2;

        if $i25 == 0 goto label52;

        if i21 == 0 goto label49;

        if i21 == 1 goto label47;

        if i21 == 2 goto label43;

        if i21 == 3 goto label41;

        if i21 == 4 goto label38;

     label13:
        i26 = virtualinvoke r44.<android.view.MotionEvent: int getActionMasked()>();

        i27 = virtualinvoke r44.<android.view.MotionEvent: int getActionIndex()>();

     label14:
        if i26 != 5 goto label26;

     label15:
        $i10 = r0.<android.view.InputEventConsistencyVerifier: int mTouchEventStreamPointers>;

        if $i10 != 0 goto label16;

        specialinvoke r0.<android.view.InputEventConsistencyVerifier: void problem(java.lang.String)>("ACTION_POINTER_DOWN but no other pointers were down.");

        r0.<android.view.InputEventConsistencyVerifier: boolean mTouchEventStreamIsTainted> = 1;

     label16:
        if i27 < 0 goto label23;

        if i27 < i24 goto label17;

        goto label23;

     label17:
        i28 = virtualinvoke r44.<android.view.MotionEvent: int getPointerId(int)>(i27);

     label18:
        i29 = 1 << i28;

     label19:
        $i11 = r0.<android.view.InputEventConsistencyVerifier: int mTouchEventStreamPointers>;

        $i12 = $i11 & i29;

        if $i12 == 0 goto label21;

        r46 = new java.lang.StringBuilder;

        specialinvoke r46.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ACTION_POINTER_DOWN specified pointer id ");

        virtualinvoke r46.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i28);

        virtualinvoke r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" which is already down.");

        $r31 = virtualinvoke r46.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<android.view.InputEventConsistencyVerifier: void problem(java.lang.String)>($r31);

        r0.<android.view.InputEventConsistencyVerifier: boolean mTouchEventStreamIsTainted> = 1;

     label20:
        goto label24;

     label21:
        $i13 = r0.<android.view.InputEventConsistencyVerifier: int mTouchEventStreamPointers>;

        $i14 = $i13 | i29;

        r0.<android.view.InputEventConsistencyVerifier: int mTouchEventStreamPointers> = $i14;

     label22:
        goto label24;

     label23:
        r47 = new java.lang.StringBuilder;

        specialinvoke r47.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ACTION_POINTER_DOWN index is ");

        virtualinvoke r47.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i27);

        virtualinvoke r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but the pointer count is ");

        virtualinvoke r47.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i24);

        virtualinvoke r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r27 = virtualinvoke r47.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<android.view.InputEventConsistencyVerifier: void problem(java.lang.String)>($r27);

        r0.<android.view.InputEventConsistencyVerifier: boolean mTouchEventStreamIsTainted> = 1;

     label24:
        specialinvoke r0.<android.view.InputEventConsistencyVerifier: void ensureHistorySizeIsZeroForThisAction(android.view.MotionEvent)>(r44);

     label25:
        goto label53;

     label26:
        if i26 != 6 goto label36;

        if i27 < 0 goto label33;

        if i27 < i24 goto label27;

        goto label33;

     label27:
        i30 = virtualinvoke r44.<android.view.MotionEvent: int getPointerId(int)>(i27);

     label28:
        i31 = 1 << i30;

     label29:
        $i6 = r0.<android.view.InputEventConsistencyVerifier: int mTouchEventStreamPointers>;

        $i7 = $i6 & i31;

        if $i7 != 0 goto label31;

        r48 = new java.lang.StringBuilder;

        specialinvoke r48.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ACTION_POINTER_UP specified pointer id ");

        virtualinvoke r48.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i30);

        virtualinvoke r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" which is not currently down.");

        $r21 = virtualinvoke r48.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<android.view.InputEventConsistencyVerifier: void problem(java.lang.String)>($r21);

        r0.<android.view.InputEventConsistencyVerifier: boolean mTouchEventStreamIsTainted> = 1;

     label30:
        goto label34;

     label31:
        $i8 = r0.<android.view.InputEventConsistencyVerifier: int mTouchEventStreamPointers>;

        $i9 = $i8 & i31;

        r0.<android.view.InputEventConsistencyVerifier: int mTouchEventStreamPointers> = $i9;

     label32:
        goto label34;

     label33:
        r49 = new java.lang.StringBuilder;

        specialinvoke r49.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ACTION_POINTER_UP index is ");

        virtualinvoke r49.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i27);

        virtualinvoke r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but the pointer count is ");

        virtualinvoke r49.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i24);

        virtualinvoke r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r17 = virtualinvoke r49.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<android.view.InputEventConsistencyVerifier: void problem(java.lang.String)>($r17);

        r0.<android.view.InputEventConsistencyVerifier: boolean mTouchEventStreamIsTainted> = 1;

     label34:
        specialinvoke r0.<android.view.InputEventConsistencyVerifier: void ensureHistorySizeIsZeroForThisAction(android.view.MotionEvent)>(r44);

     label35:
        goto label53;

     label36:
        r50 = new java.lang.StringBuilder;

        specialinvoke r50.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid action ");

        $r8 = staticinvoke <android.view.MotionEvent: java.lang.String actionToString(int)>(i21);

        virtualinvoke r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        virtualinvoke r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for touch event.");

        $r11 = virtualinvoke r50.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<android.view.InputEventConsistencyVerifier: void problem(java.lang.String)>($r11);

     label37:
        goto label53;

     label38:
        $i5 = r0.<android.view.InputEventConsistencyVerifier: int mTouchEventStreamPointers>;

        if $i5 == 0 goto label39;

        specialinvoke r0.<android.view.InputEventConsistencyVerifier: void problem(java.lang.String)>("ACTION_OUTSIDE but pointers are still down.");

     label39:
        specialinvoke r0.<android.view.InputEventConsistencyVerifier: void ensureHistorySizeIsZeroForThisAction(android.view.MotionEvent)>(r44);

        specialinvoke r0.<android.view.InputEventConsistencyVerifier: void ensurePointerCountIsOneForThisAction(android.view.MotionEvent)>(r44);

        r0.<android.view.InputEventConsistencyVerifier: boolean mTouchEventStreamIsTainted> = 0;

     label40:
        goto label53;

     label41:
        r0.<android.view.InputEventConsistencyVerifier: int mTouchEventStreamPointers> = 0;

        r0.<android.view.InputEventConsistencyVerifier: boolean mTouchEventStreamIsTainted> = 0;

     label42:
        goto label53;

     label43:
        $i4 = r0.<android.view.InputEventConsistencyVerifier: int mTouchEventStreamPointers>;

        i32 = staticinvoke <java.lang.Integer: int bitCount(int)>($i4);

     label44:
        if i24 == i32 goto label53;

     label45:
        r51 = new java.lang.StringBuilder;

        specialinvoke r51.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ACTION_MOVE contained ");

        virtualinvoke r51.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i24);

        virtualinvoke r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" pointers but there are currently ");

        virtualinvoke r51.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i32);

        virtualinvoke r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" pointers down.");

        $r6 = virtualinvoke r51.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<android.view.InputEventConsistencyVerifier: void problem(java.lang.String)>($r6);

        r0.<android.view.InputEventConsistencyVerifier: boolean mTouchEventStreamIsTainted> = 1;

     label46:
        goto label53;

     label47:
        specialinvoke r0.<android.view.InputEventConsistencyVerifier: void ensureHistorySizeIsZeroForThisAction(android.view.MotionEvent)>(r44);

        specialinvoke r0.<android.view.InputEventConsistencyVerifier: void ensurePointerCountIsOneForThisAction(android.view.MotionEvent)>(r44);

        r0.<android.view.InputEventConsistencyVerifier: int mTouchEventStreamPointers> = 0;

        r0.<android.view.InputEventConsistencyVerifier: boolean mTouchEventStreamIsTainted> = 0;

     label48:
        goto label53;

     label49:
        $i1 = r0.<android.view.InputEventConsistencyVerifier: int mTouchEventStreamPointers>;

        if $i1 == 0 goto label50;

        specialinvoke r0.<android.view.InputEventConsistencyVerifier: void problem(java.lang.String)>("ACTION_DOWN but pointers are already down.  Probably missing ACTION_UP from previous gesture.");

     label50:
        specialinvoke r0.<android.view.InputEventConsistencyVerifier: void ensureHistorySizeIsZeroForThisAction(android.view.MotionEvent)>(r44);

        specialinvoke r0.<android.view.InputEventConsistencyVerifier: void ensurePointerCountIsOneForThisAction(android.view.MotionEvent)>(r44);

        $i2 = virtualinvoke r44.<android.view.MotionEvent: int getPointerId(int)>(0);

        $i3 = 1 << $i2;

        r0.<android.view.InputEventConsistencyVerifier: int mTouchEventStreamPointers> = $i3;

     label51:
        goto label53;

     label52:
        specialinvoke r0.<android.view.InputEventConsistencyVerifier: void problem(java.lang.String)>("Source was not SOURCE_CLASS_POINTER.");

     label53:
        specialinvoke r0.<android.view.InputEventConsistencyVerifier: void finishEvent()>();

        return;

     label54:
        $r43 := @caughtexception;

        specialinvoke r0.<android.view.InputEventConsistencyVerifier: void finishEvent()>();

        throw $r43;

        catch java.lang.Throwable from label07 to label08 with label54;
        catch java.lang.Throwable from label09 to label10 with label54;
        catch java.lang.Throwable from label10 to label11 with label54;
        catch java.lang.Throwable from label11 to label12 with label54;
        catch java.lang.Throwable from label13 to label14 with label54;
        catch java.lang.Throwable from label15 to label16 with label54;
        catch java.lang.Throwable from label17 to label18 with label54;
        catch java.lang.Throwable from label19 to label20 with label54;
        catch java.lang.Throwable from label21 to label22 with label54;
        catch java.lang.Throwable from label23 to label24 with label54;
        catch java.lang.Throwable from label24 to label25 with label54;
        catch java.lang.Throwable from label27 to label28 with label54;
        catch java.lang.Throwable from label29 to label30 with label54;
        catch java.lang.Throwable from label31 to label32 with label54;
        catch java.lang.Throwable from label33 to label34 with label54;
        catch java.lang.Throwable from label34 to label35 with label54;
        catch java.lang.Throwable from label36 to label37 with label54;
        catch java.lang.Throwable from label38 to label39 with label54;
        catch java.lang.Throwable from label39 to label40 with label54;
        catch java.lang.Throwable from label41 to label42 with label54;
        catch java.lang.Throwable from label43 to label44 with label54;
        catch java.lang.Throwable from label45 to label46 with label54;
        catch java.lang.Throwable from label47 to label48 with label54;
        catch java.lang.Throwable from label49 to label50 with label54;
        catch java.lang.Throwable from label50 to label51 with label54;
        catch java.lang.Throwable from label52 to label53 with label54;
    }

    public void onTrackballEvent(android.view.MotionEvent, int)
    {
        android.view.InputEventConsistencyVerifier r0;
        java.lang.StringBuilder r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        int $i0, $i1, $i2, i5, i6;
        float $f0, $f1;
        byte $b3, $b4;
        java.lang.String $r3, $r6;
        java.lang.Throwable $r7;
        android.view.MotionEvent r8;

        r0 := @this: android.view.InputEventConsistencyVerifier;

        r8 := @parameter0: android.view.MotionEvent;

        i5 := @parameter1: int;

        $z0 = specialinvoke r0.<android.view.InputEventConsistencyVerifier: boolean startEvent(android.view.InputEvent,int,java.lang.String)>(r8, i5, "TrackballEvent");

        if $z0 != 0 goto label01;

        return;

     label01:
        $i0 = virtualinvoke r8.<android.view.MotionEvent: int getMetaState()>();

        specialinvoke r0.<android.view.InputEventConsistencyVerifier: void ensureMetaStateIsNormalized(int)>($i0);

        i6 = virtualinvoke r8.<android.view.MotionEvent: int getAction()>();

        $i1 = virtualinvoke r8.<android.view.MotionEvent: int getSource()>();

        $i2 = $i1 & 4;

        if $i2 == 0 goto label20;

     label02:
        if i6 == 0 goto label12;

        if i6 == 1 goto label07;

        if i6 == 2 goto label05;

     label03:
        r1 = new java.lang.StringBuilder;

        specialinvoke r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid action ");

        $r3 = staticinvoke <android.view.MotionEvent: java.lang.String actionToString(int)>(i6);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for trackball event.");

        $r6 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<android.view.InputEventConsistencyVerifier: void problem(java.lang.String)>($r6);

     label04:
        goto label16;

     label05:
        specialinvoke r0.<android.view.InputEventConsistencyVerifier: void ensurePointerCountIsOneForThisAction(android.view.MotionEvent)>(r8);

     label06:
        goto label16;

     label07:
        $z4 = r0.<android.view.InputEventConsistencyVerifier: boolean mTrackballDown>;

        if $z4 != 0 goto label09;

        specialinvoke r0.<android.view.InputEventConsistencyVerifier: void problem(java.lang.String)>("ACTION_UP but trackball is not down.");

     label08:
        goto label10;

     label09:
        r0.<android.view.InputEventConsistencyVerifier: boolean mTrackballDown> = 0;

        r0.<android.view.InputEventConsistencyVerifier: boolean mTrackballUnhandled> = 0;

     label10:
        specialinvoke r0.<android.view.InputEventConsistencyVerifier: void ensureHistorySizeIsZeroForThisAction(android.view.MotionEvent)>(r8);

        specialinvoke r0.<android.view.InputEventConsistencyVerifier: void ensurePointerCountIsOneForThisAction(android.view.MotionEvent)>(r8);

     label11:
        goto label16;

     label12:
        $z1 = r0.<android.view.InputEventConsistencyVerifier: boolean mTrackballDown>;

        if $z1 == 0 goto label14;

        $z3 = r0.<android.view.InputEventConsistencyVerifier: boolean mTrackballUnhandled>;

        if $z3 != 0 goto label14;

        specialinvoke r0.<android.view.InputEventConsistencyVerifier: void problem(java.lang.String)>("ACTION_DOWN but trackball is already down.");

     label13:
        goto label15;

     label14:
        r0.<android.view.InputEventConsistencyVerifier: boolean mTrackballDown> = 1;

        r0.<android.view.InputEventConsistencyVerifier: boolean mTrackballUnhandled> = 0;

     label15:
        specialinvoke r0.<android.view.InputEventConsistencyVerifier: void ensureHistorySizeIsZeroForThisAction(android.view.MotionEvent)>(r8);

        specialinvoke r0.<android.view.InputEventConsistencyVerifier: void ensurePointerCountIsOneForThisAction(android.view.MotionEvent)>(r8);

     label16:
        $z5 = r0.<android.view.InputEventConsistencyVerifier: boolean mTrackballDown>;

        if $z5 == 0 goto label18;

        $f1 = virtualinvoke r8.<android.view.MotionEvent: float getPressure()>();

        $b4 = $f1 cmpg 0.0F;

        if $b4 > 0 goto label18;

        specialinvoke r0.<android.view.InputEventConsistencyVerifier: void problem(java.lang.String)>("Trackball is down but pressure is not greater than 0.");

     label17:
        goto label21;

     label18:
        $z2 = r0.<android.view.InputEventConsistencyVerifier: boolean mTrackballDown>;

        if $z2 != 0 goto label21;

        $f0 = virtualinvoke r8.<android.view.MotionEvent: float getPressure()>();

        $b3 = $f0 cmpl 0.0F;

        if $b3 == 0 goto label21;

        specialinvoke r0.<android.view.InputEventConsistencyVerifier: void problem(java.lang.String)>("Trackball is up but pressure is not equal to 0.");

     label19:
        goto label21;

     label20:
        specialinvoke r0.<android.view.InputEventConsistencyVerifier: void problem(java.lang.String)>("Source was not SOURCE_CLASS_TRACKBALL.");

     label21:
        specialinvoke r0.<android.view.InputEventConsistencyVerifier: void finishEvent()>();

        return;

     label22:
        $r7 := @caughtexception;

        specialinvoke r0.<android.view.InputEventConsistencyVerifier: void finishEvent()>();

        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label22;
        catch java.lang.Throwable from label03 to label04 with label22;
        catch java.lang.Throwable from label05 to label06 with label22;
        catch java.lang.Throwable from label07 to label08 with label22;
        catch java.lang.Throwable from label09 to label10 with label22;
        catch java.lang.Throwable from label10 to label11 with label22;
        catch java.lang.Throwable from label12 to label13 with label22;
        catch java.lang.Throwable from label14 to label15 with label22;
        catch java.lang.Throwable from label15 to label16 with label22;
        catch java.lang.Throwable from label16 to label17 with label22;
        catch java.lang.Throwable from label18 to label19 with label22;
        catch java.lang.Throwable from label20 to label21 with label22;
    }

    public void onUnhandledEvent(android.view.InputEvent, int)
    {
        android.view.InputEventConsistencyVerifier r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        boolean[] r1;
        boolean $z0, $z1, $z2;
        android.view.InputEvent r2;
        android.view.KeyEvent r3;
        android.view.InputEventConsistencyVerifier$KeyState r4;
        android.view.MotionEvent r5;

        r0 := @this: android.view.InputEventConsistencyVerifier;

        r2 := @parameter0: android.view.InputEvent;

        i0 := @parameter1: int;

        $i1 = r0.<android.view.InputEventConsistencyVerifier: int mLastNestingLevel>;

        if i0 == $i1 goto label1;

        return;

     label1:
        r1 = r0.<android.view.InputEventConsistencyVerifier: boolean[] mRecentEventsUnhandled>;

        if r1 == null goto label2;

        $i7 = r0.<android.view.InputEventConsistencyVerifier: int mMostRecentEventIndex>;

        r1[$i7] = 1;

     label2:
        $z0 = r2 instanceof android.view.KeyEvent;

        if $z0 == 0 goto label4;

        r3 = (android.view.KeyEvent) r2;

        $i4 = virtualinvoke r3.<android.view.KeyEvent: int getDeviceId()>();

        $i5 = virtualinvoke r3.<android.view.KeyEvent: int getSource()>();

        $i6 = virtualinvoke r3.<android.view.KeyEvent: int getKeyCode()>();

        r4 = specialinvoke r0.<android.view.InputEventConsistencyVerifier: android.view.InputEventConsistencyVerifier$KeyState findKeyState(int,int,int,boolean)>($i4, $i5, $i6, 0);

        if r4 == null goto label3;

        r4.<android.view.InputEventConsistencyVerifier$KeyState: boolean unhandled> = 1;

     label3:
        goto label6;

     label4:
        r5 = (android.view.MotionEvent) r2;

        $z1 = virtualinvoke r5.<android.view.MotionEvent: boolean isTouchEvent()>();

        if $z1 == 0 goto label5;

        r0.<android.view.InputEventConsistencyVerifier: boolean mTouchEventStreamUnhandled> = 1;

        goto label6;

     label5:
        $i2 = virtualinvoke r5.<android.view.MotionEvent: int getSource()>();

        $i3 = $i2 & 4;

        if $i3 == 0 goto label6;

        $z2 = r0.<android.view.InputEventConsistencyVerifier: boolean mTrackballDown>;

        if $z2 == 0 goto label6;

        r0.<android.view.InputEventConsistencyVerifier: boolean mTrackballUnhandled> = 1;

     label6:
        return;
    }

    public void reset()
    {
        android.view.InputEventConsistencyVerifier r0;
        android.view.InputEventConsistencyVerifier$KeyState r1, $r2, $r3;

        r0 := @this: android.view.InputEventConsistencyVerifier;

        r0.<android.view.InputEventConsistencyVerifier: int mLastEventSeq> = -1;

        r0.<android.view.InputEventConsistencyVerifier: int mLastNestingLevel> = 0;

        r0.<android.view.InputEventConsistencyVerifier: boolean mTrackballDown> = 0;

        r0.<android.view.InputEventConsistencyVerifier: boolean mTrackballUnhandled> = 0;

        r0.<android.view.InputEventConsistencyVerifier: int mTouchEventStreamPointers> = 0;

        r0.<android.view.InputEventConsistencyVerifier: boolean mTouchEventStreamIsTainted> = 0;

        r0.<android.view.InputEventConsistencyVerifier: boolean mTouchEventStreamUnhandled> = 0;

        r0.<android.view.InputEventConsistencyVerifier: boolean mHoverEntered> = 0;

        r0.<android.view.InputEventConsistencyVerifier: int mButtonsPressed> = 0;

     label1:
        $r2 = r0.<android.view.InputEventConsistencyVerifier: android.view.InputEventConsistencyVerifier$KeyState mKeyStateList>;

        if $r2 == null goto label2;

        r1 = r0.<android.view.InputEventConsistencyVerifier: android.view.InputEventConsistencyVerifier$KeyState mKeyStateList>;

        $r3 = r1.<android.view.InputEventConsistencyVerifier$KeyState: android.view.InputEventConsistencyVerifier$KeyState next>;

        r0.<android.view.InputEventConsistencyVerifier: android.view.InputEventConsistencyVerifier$KeyState mKeyStateList> = $r3;

        virtualinvoke r1.<android.view.InputEventConsistencyVerifier$KeyState: void recycle()>();

        goto label1;

     label2:
        return;
    }
}
