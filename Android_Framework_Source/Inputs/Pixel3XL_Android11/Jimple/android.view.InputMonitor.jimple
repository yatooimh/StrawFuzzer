public final class android.view.InputMonitor extends java.lang.Object implements android.os.Parcelable
{
    public static final android.os.Parcelable$Creator CREATOR;
    private static final boolean DEBUG;
    private static final java.lang.String TAG;
    private final android.view.IInputMonitorHost mHost;
    private final android.view.InputChannel mInputChannel;

    static void <clinit>()
    {
        android.view.InputMonitor$1 $r0;

        <android.view.InputMonitor: java.lang.String TAG> = "InputMonitor";

        <android.view.InputMonitor: boolean DEBUG> = 0;

        $r0 = new android.view.InputMonitor$1;

        specialinvoke $r0.<android.view.InputMonitor$1: void <init>()>();

        <android.view.InputMonitor: android.os.Parcelable$Creator CREATOR> = $r0;

        return;
    }

    void <init>(android.os.Parcel)
    {
        android.view.InputMonitor r0;
        android.view.InputChannel r1;
        android.os.Parcelable$Creator $r2;
        java.lang.Object $r3;
        android.os.IBinder $r4;
        android.os.Parcel r5;
        android.view.IInputMonitorHost r6;

        r0 := @this: android.view.InputMonitor;

        r5 := @parameter0: android.os.Parcel;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = <android.view.InputChannel: android.os.Parcelable$Creator CREATOR>;

        $r3 = virtualinvoke r5.<android.os.Parcel: java.lang.Object readTypedObject(android.os.Parcelable$Creator)>($r2);

        r1 = (android.view.InputChannel) $r3;

        $r4 = virtualinvoke r5.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        r6 = staticinvoke <android.view.IInputMonitorHost$Stub: android.view.IInputMonitorHost asInterface(android.os.IBinder)>($r4);

        r0.<android.view.InputMonitor: android.view.InputChannel mInputChannel> = r1;

        staticinvoke <com.android.internal.util.AnnotationValidations: void validate(java.lang.Class,android.'annotation'.NonNull,java.lang.Object)>(class "Landroid/annotation/NonNull;", null, r1);

        r0.<android.view.InputMonitor: android.view.IInputMonitorHost mHost> = r6;

        staticinvoke <com.android.internal.util.AnnotationValidations: void validate(java.lang.Class,android.'annotation'.NonNull,java.lang.Object)>(class "Landroid/annotation/NonNull;", null, r6);

        return;
    }

    public void <init>(android.view.InputChannel, android.view.IInputMonitorHost)
    {
        android.view.InputMonitor r0;
        android.view.InputChannel r1;
        android.view.IInputMonitorHost r2;

        r0 := @this: android.view.InputMonitor;

        r1 := @parameter0: android.view.InputChannel;

        r2 := @parameter1: android.view.IInputMonitorHost;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.view.InputMonitor: android.view.InputChannel mInputChannel> = r1;

        staticinvoke <com.android.internal.util.AnnotationValidations: void validate(java.lang.Class,android.'annotation'.NonNull,java.lang.Object)>(class "Landroid/annotation/NonNull;", null, r1);

        r0.<android.view.InputMonitor: android.view.IInputMonitorHost mHost> = r2;

        staticinvoke <com.android.internal.util.AnnotationValidations: void validate(java.lang.Class,android.'annotation'.NonNull,java.lang.Object)>(class "Landroid/annotation/NonNull;", null, r2);

        return;
    }

    private void __metadata()
    {
        android.view.InputMonitor r0;

        r0 := @this: android.view.InputMonitor;

        return;
    }

    public int describeContents()
    {
        android.view.InputMonitor r0;

        r0 := @this: android.view.InputMonitor;

        return 0;
    }

    public void dispose()
    {
        android.view.InputMonitor r0;
        android.view.InputChannel $r2;
        android.view.IInputMonitorHost $r3;
        android.os.RemoteException $r4;

        r0 := @this: android.view.InputMonitor;

        $r2 = r0.<android.view.InputMonitor: android.view.InputChannel mInputChannel>;

        virtualinvoke $r2.<android.view.InputChannel: void dispose()>();

     label1:
        $r3 = r0.<android.view.InputMonitor: android.view.IInputMonitorHost mHost>;

        interfaceinvoke $r3.<android.view.IInputMonitorHost: void dispose()>();

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        virtualinvoke $r4.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.view.IInputMonitorHost getHost()
    {
        android.view.InputMonitor r0;
        android.view.IInputMonitorHost $r1;

        r0 := @this: android.view.InputMonitor;

        $r1 = r0.<android.view.InputMonitor: android.view.IInputMonitorHost mHost>;

        return $r1;
    }

    public android.view.InputChannel getInputChannel()
    {
        android.view.InputMonitor r0;
        android.view.InputChannel $r1;

        r0 := @this: android.view.InputMonitor;

        $r1 = r0.<android.view.InputMonitor: android.view.InputChannel mInputChannel>;

        return $r1;
    }

    public void pilferPointers()
    {
        android.view.InputMonitor r0;
        android.view.IInputMonitorHost $r2;
        android.os.RemoteException $r3;

        r0 := @this: android.view.InputMonitor;

     label1:
        $r2 = r0.<android.view.InputMonitor: android.view.IInputMonitorHost mHost>;

        interfaceinvoke $r2.<android.view.IInputMonitorHost: void pilferPointers()>();

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        virtualinvoke $r3.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public java.lang.String toString()
    {
        android.view.InputMonitor r0;
        java.lang.StringBuilder $r2;
        android.view.InputChannel $r4;
        android.view.IInputMonitorHost $r7;
        java.lang.String $r10;

        r0 := @this: android.view.InputMonitor;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("InputMonitor { inputChannel = ");

        $r4 = r0.<android.view.InputMonitor: android.view.InputChannel mInputChannel>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", host = ");

        $r7 = r0.<android.view.InputMonitor: android.view.IInputMonitorHost mHost>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" }");

        $r10 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r10;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.view.InputMonitor r0;
        android.os.Parcel r1;
        int i0;
        android.view.InputChannel $r2;
        android.view.IInputMonitorHost $r3;

        r0 := @this: android.view.InputMonitor;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        $r2 = r0.<android.view.InputMonitor: android.view.InputChannel mInputChannel>;

        virtualinvoke r1.<android.os.Parcel: void writeTypedObject(android.os.Parcelable,int)>($r2, i0);

        $r3 = r0.<android.view.InputMonitor: android.view.IInputMonitorHost mHost>;

        virtualinvoke r1.<android.os.Parcel: void writeStrongInterface(android.os.IInterface)>($r3);

        return;
    }
}
