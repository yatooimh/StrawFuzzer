public class android.view.InsetsAnimationControlImpl extends java.lang.Object implements android.view.WindowInsetsAnimationController, android.view.InsetsAnimationControlRunner
{
    private static final java.lang.String TAG;
    private final android.view.WindowInsetsAnimation mAnimation;
    private final int mAnimationType;
    private boolean mCancelled;
    private final android.view.InsetsAnimationControlCallbacks mController;
    private final android.util.SparseArray mControls;
    private float mCurrentAlpha;
    private android.graphics.Insets mCurrentInsets;
    private boolean mFinished;
    private final boolean mHasZeroInsetsIme;
    private final android.graphics.Insets mHiddenInsets;
    private final android.view.InsetsState mInitialInsetsState;
    private final android.view.WindowInsetsAnimationControlListener mListener;
    private float mPendingAlpha;
    private float mPendingFraction;
    private android.graphics.Insets mPendingInsets;
    private java.lang.Boolean mPerceptible;
    public boolean mReadyDispatched;
    private final android.graphics.Insets mShownInsets;
    private boolean mShownOnFinish;
    private final android.util.SparseSetArray mSideSourceMap;
    private final android.graphics.Rect mTmpFrame;
    private final android.graphics.Matrix mTmpMatrix;
    private final android.util.SparseIntArray mTypeSideMap;
    private final int mTypes;

    public void <init>(android.util.SparseArray, android.graphics.Rect, android.view.InsetsState, android.view.WindowInsetsAnimationControlListener, int, android.view.InsetsAnimationControlCallbacks, long, android.view.animation.Interpolator, int)
    {
        android.view.InsetsAnimationControlImpl r0;
        android.graphics.Rect r1, $r5;
        android.view.WindowInsetsAnimationControlListener r2;
        int i0, i2, $i3, $i4;
        android.view.InsetsAnimationControlCallbacks r3, $r21;
        long l1;
        android.view.animation.Interpolator r4;
        android.util.SparseIntArray $r6, $r12, $r16, $r23;
        android.util.SparseSetArray $r7, $r15;
        android.graphics.Matrix $r8;
        android.view.InsetsState $r9, $r10, $r13, r25;
        android.graphics.Insets $r11, $r19, $r20, r27, r28;
        android.util.SparseArray $r14, r24;
        android.view.WindowInsetsAnimation $r17, $r22;
        float $f0;
        android.view.WindowInsetsAnimation$Bounds $r18;
        boolean $z0, z1;

        r0 := @this: android.view.InsetsAnimationControlImpl;

        r24 := @parameter0: android.util.SparseArray;

        r1 := @parameter1: android.graphics.Rect;

        r25 := @parameter2: android.view.InsetsState;

        r2 := @parameter3: android.view.WindowInsetsAnimationControlListener;

        i0 := @parameter4: int;

        r3 := @parameter5: android.view.InsetsAnimationControlCallbacks;

        l1 := @parameter6: long;

        r4 := @parameter7: android.view.animation.Interpolator;

        i2 := @parameter8: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r5 = new android.graphics.Rect;

        specialinvoke $r5.<android.graphics.Rect: void <init>()>();

        r0.<android.view.InsetsAnimationControlImpl: android.graphics.Rect mTmpFrame> = $r5;

        $r6 = new android.util.SparseIntArray;

        specialinvoke $r6.<android.util.SparseIntArray: void <init>()>();

        r0.<android.view.InsetsAnimationControlImpl: android.util.SparseIntArray mTypeSideMap> = $r6;

        $r7 = new android.util.SparseSetArray;

        specialinvoke $r7.<android.util.SparseSetArray: void <init>()>();

        r0.<android.view.InsetsAnimationControlImpl: android.util.SparseSetArray mSideSourceMap> = $r7;

        $r8 = new android.graphics.Matrix;

        specialinvoke $r8.<android.graphics.Matrix: void <init>()>();

        r0.<android.view.InsetsAnimationControlImpl: android.graphics.Matrix mTmpMatrix> = $r8;

        r0.<android.view.InsetsAnimationControlImpl: float mCurrentAlpha> = 1.0F;

        r0.<android.view.InsetsAnimationControlImpl: float mPendingAlpha> = 1.0F;

        r0.<android.view.InsetsAnimationControlImpl: android.util.SparseArray mControls> = r24;

        r0.<android.view.InsetsAnimationControlImpl: android.view.WindowInsetsAnimationControlListener mListener> = r2;

        r0.<android.view.InsetsAnimationControlImpl: int mTypes> = i0;

        r0.<android.view.InsetsAnimationControlImpl: android.view.InsetsAnimationControlCallbacks mController> = r3;

        z1 = 1;

        $r9 = new android.view.InsetsState;

        specialinvoke $r9.<android.view.InsetsState: void <init>(android.view.InsetsState,boolean)>(r25, 1);

        r0.<android.view.InsetsAnimationControlImpl: android.view.InsetsState mInitialInsetsState> = $r9;

        r27 = specialinvoke r0.<android.view.InsetsAnimationControlImpl: android.graphics.Insets getInsetsFromState(android.view.InsetsState,android.graphics.Rect,android.util.SparseIntArray)>($r9, r1, null);

        r0.<android.view.InsetsAnimationControlImpl: android.graphics.Insets mCurrentInsets> = r27;

        r0.<android.view.InsetsAnimationControlImpl: android.graphics.Insets mPendingInsets> = r27;

        $r10 = r0.<android.view.InsetsAnimationControlImpl: android.view.InsetsState mInitialInsetsState>;

        $r11 = specialinvoke r0.<android.view.InsetsAnimationControlImpl: android.graphics.Insets calculateInsets(android.view.InsetsState,android.graphics.Rect,android.util.SparseArray,boolean,android.util.SparseIntArray)>($r10, r1, r24, 0, null);

        r0.<android.view.InsetsAnimationControlImpl: android.graphics.Insets mHiddenInsets> = $r11;

        $r13 = r0.<android.view.InsetsAnimationControlImpl: android.view.InsetsState mInitialInsetsState>;

        $r12 = r0.<android.view.InsetsAnimationControlImpl: android.util.SparseIntArray mTypeSideMap>;

        r28 = specialinvoke r0.<android.view.InsetsAnimationControlImpl: android.graphics.Insets calculateInsets(android.view.InsetsState,android.graphics.Rect,android.util.SparseArray,boolean,android.util.SparseIntArray)>($r13, r1, r24, 1, $r12);

        r0.<android.view.InsetsAnimationControlImpl: android.graphics.Insets mShownInsets> = r28;

        $i3 = r28.<android.graphics.Insets: int bottom>;

        if $i3 != 0 goto label1;

        $z0 = virtualinvoke r0.<android.view.InsetsAnimationControlImpl: boolean controlsInternalType(int)>(13);

        if $z0 == 0 goto label1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        r0.<android.view.InsetsAnimationControlImpl: boolean mHasZeroInsetsIme> = z1;

        if z1 == 0 goto label3;

        $r23 = r0.<android.view.InsetsAnimationControlImpl: android.util.SparseIntArray mTypeSideMap>;

        virtualinvoke $r23.<android.util.SparseIntArray: void put(int,int)>(13, 3);

     label3:
        $r16 = r0.<android.view.InsetsAnimationControlImpl: android.util.SparseIntArray mTypeSideMap>;

        $r15 = r0.<android.view.InsetsAnimationControlImpl: android.util.SparseSetArray mSideSourceMap>;

        $r14 = r0.<android.view.InsetsAnimationControlImpl: android.util.SparseArray mControls>;

        staticinvoke <android.view.InsetsAnimationControlImpl: void buildTypeSourcesMap(android.util.SparseIntArray,android.util.SparseSetArray,android.util.SparseArray)>($r16, $r15, $r14);

        $r17 = new android.view.WindowInsetsAnimation;

        $i4 = r0.<android.view.InsetsAnimationControlImpl: int mTypes>;

        specialinvoke $r17.<android.view.WindowInsetsAnimation: void <init>(int,android.view.animation.Interpolator,long)>($i4, r4, l1);

        r0.<android.view.InsetsAnimationControlImpl: android.view.WindowInsetsAnimation mAnimation> = $r17;

        $f0 = virtualinvoke r0.<android.view.InsetsAnimationControlImpl: float getCurrentAlpha()>();

        virtualinvoke $r17.<android.view.WindowInsetsAnimation: void setAlpha(float)>($f0);

        r0.<android.view.InsetsAnimationControlImpl: int mAnimationType> = i2;

        $r21 = r0.<android.view.InsetsAnimationControlImpl: android.view.InsetsAnimationControlCallbacks mController>;

        $r22 = r0.<android.view.InsetsAnimationControlImpl: android.view.WindowInsetsAnimation mAnimation>;

        $r18 = new android.view.WindowInsetsAnimation$Bounds;

        $r20 = r0.<android.view.InsetsAnimationControlImpl: android.graphics.Insets mHiddenInsets>;

        $r19 = r0.<android.view.InsetsAnimationControlImpl: android.graphics.Insets mShownInsets>;

        specialinvoke $r18.<android.view.WindowInsetsAnimation$Bounds: void <init>(android.graphics.Insets,android.graphics.Insets)>($r20, $r19);

        interfaceinvoke $r21.<android.view.InsetsAnimationControlCallbacks: void startAnimation(android.view.InsetsAnimationControlImpl,android.view.WindowInsetsAnimationControlListener,int,android.view.WindowInsetsAnimation,android.view.WindowInsetsAnimation$Bounds)>(r0, r2, i0, $r22, $r18);

        return;
    }

    private void addTranslationToMatrix(int, int, android.graphics.Matrix, android.graphics.Rect)
    {
        android.view.InsetsAnimationControlImpl r0;
        int i0, i1, $i2, $i3, $i4, $i5;
        android.graphics.Matrix r1;
        android.graphics.Rect r2;
        float $f0, $f1, $f2, $f3;

        r0 := @this: android.view.InsetsAnimationControlImpl;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: android.graphics.Matrix;

        r2 := @parameter3: android.graphics.Rect;

        if i0 == 0 goto label4;

        if i0 == 1 goto label3;

        if i0 == 2 goto label2;

        if i0 == 3 goto label1;

        goto label5;

     label1:
        $f3 = (float) i1;

        virtualinvoke r1.<android.graphics.Matrix: boolean postTranslate(float,float)>(0.0F, $f3);

        virtualinvoke r2.<android.graphics.Rect: void offset(int,int)>(0, i1);

        goto label5;

     label2:
        $f2 = (float) i1;

        virtualinvoke r1.<android.graphics.Matrix: boolean postTranslate(float,float)>($f2, 0.0F);

        virtualinvoke r2.<android.graphics.Rect: void offset(int,int)>(i1, 0);

        goto label5;

     label3:
        $i4 = neg i1;

        $f1 = (float) $i4;

        virtualinvoke r1.<android.graphics.Matrix: boolean postTranslate(float,float)>(0.0F, $f1);

        $i5 = neg i1;

        virtualinvoke r2.<android.graphics.Rect: void offset(int,int)>(0, $i5);

        goto label5;

     label4:
        $i2 = neg i1;

        $f0 = (float) $i2;

        virtualinvoke r1.<android.graphics.Matrix: boolean postTranslate(float,float)>($f0, 0.0F);

        $i3 = neg i1;

        virtualinvoke r2.<android.graphics.Rect: void offset(int,int)>($i3, 0);

     label5:
        return;
    }

    private static void buildTypeSourcesMap(android.util.SparseIntArray, android.util.SparseSetArray, android.util.SparseArray)
    {
        android.util.SparseIntArray r0;
        android.util.SparseSetArray r1;
        android.util.SparseArray r2;
        int i0, i1, $i2, i3;
        android.view.InsetsSourceControl r3;
        java.lang.Object $r4;

        r0 := @parameter0: android.util.SparseIntArray;

        r1 := @parameter1: android.util.SparseSetArray;

        r2 := @parameter2: android.util.SparseArray;

        $i2 = virtualinvoke r0.<android.util.SparseIntArray: int size()>();

        i3 = $i2 - 1;

     label1:
        if i3 < 0 goto label4;

        i0 = virtualinvoke r0.<android.util.SparseIntArray: int keyAt(int)>(i3);

        i1 = virtualinvoke r0.<android.util.SparseIntArray: int valueAt(int)>(i3);

        $r4 = virtualinvoke r2.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r3 = (android.view.InsetsSourceControl) $r4;

        if r3 != null goto label2;

        goto label3;

     label2:
        virtualinvoke r1.<android.util.SparseSetArray: boolean add(int,java.lang.Object)>(i1, r3);

     label3:
        i3 = i3 + -1;

        goto label1;

     label4:
        return;
    }

    private android.graphics.Insets calculateInsets(android.view.InsetsState, android.graphics.Rect, android.util.SparseArray, boolean, android.util.SparseIntArray)
    {
        android.view.InsetsAnimationControlImpl r0;
        android.view.InsetsState r1;
        android.graphics.Rect r2;
        android.util.SparseArray r3;
        boolean z0;
        android.util.SparseIntArray r4;
        int $i0, $i1, i2;
        android.graphics.Insets $r5;
        java.lang.Object $r6, $r7;
        android.view.InsetsSourceControl $r8;
        android.view.InsetsSource $r9;

        r0 := @this: android.view.InsetsAnimationControlImpl;

        r1 := @parameter0: android.view.InsetsState;

        r2 := @parameter1: android.graphics.Rect;

        r3 := @parameter2: android.util.SparseArray;

        z0 := @parameter3: boolean;

        r4 := @parameter4: android.util.SparseIntArray;

        $i0 = virtualinvoke r3.<android.util.SparseArray: int size()>();

        i2 = $i0 - 1;

     label1:
        if i2 < 0 goto label4;

        $r6 = virtualinvoke r3.<android.util.SparseArray: java.lang.Object valueAt(int)>(i2);

        if $r6 != null goto label2;

        goto label3;

     label2:
        $r7 = virtualinvoke r3.<android.util.SparseArray: java.lang.Object valueAt(int)>(i2);

        $r8 = (android.view.InsetsSourceControl) $r7;

        $i1 = virtualinvoke $r8.<android.view.InsetsSourceControl: int getType()>();

        $r9 = virtualinvoke r1.<android.view.InsetsState: android.view.InsetsSource getSource(int)>($i1);

        virtualinvoke $r9.<android.view.InsetsSource: void setVisible(boolean)>(z0);

     label3:
        i2 = i2 + -1;

        goto label1;

     label4:
        $r5 = specialinvoke r0.<android.view.InsetsAnimationControlImpl: android.graphics.Insets getInsetsFromState(android.view.InsetsState,android.graphics.Rect,android.util.SparseIntArray)>(r1, r2, r4);

        return $r5;
    }

    private boolean calculatePerceptible(android.graphics.Insets, float)
    {
        android.view.InsetsAnimationControlImpl r0;
        android.graphics.Insets r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9;
        float f0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23;
        byte $b24;
        boolean z0;

        r0 := @this: android.view.InsetsAnimationControlImpl;

        r1 := @parameter0: android.graphics.Insets;

        f0 := @parameter1: float;

        $i0 = r1.<android.graphics.Insets: int left>;

        $i5 = $i0 * 100;

        $r2 = r0.<android.view.InsetsAnimationControlImpl: android.graphics.Insets mShownInsets>;

        $i2 = $r2.<android.graphics.Insets: int left>;

        $r3 = r0.<android.view.InsetsAnimationControlImpl: android.graphics.Insets mHiddenInsets>;

        $i1 = $r3.<android.graphics.Insets: int left>;

        $i3 = $i2 - $i1;

        $i4 = $i3 * 5;

        if $i5 < $i4 goto label1;

        $i6 = r1.<android.graphics.Insets: int top>;

        $i11 = $i6 * 100;

        $r4 = r0.<android.view.InsetsAnimationControlImpl: android.graphics.Insets mShownInsets>;

        $i8 = $r4.<android.graphics.Insets: int top>;

        $r5 = r0.<android.view.InsetsAnimationControlImpl: android.graphics.Insets mHiddenInsets>;

        $i7 = $r5.<android.graphics.Insets: int top>;

        $i9 = $i8 - $i7;

        $i10 = $i9 * 5;

        if $i11 < $i10 goto label1;

        $i12 = r1.<android.graphics.Insets: int right>;

        $i17 = $i12 * 100;

        $r6 = r0.<android.view.InsetsAnimationControlImpl: android.graphics.Insets mShownInsets>;

        $i14 = $r6.<android.graphics.Insets: int right>;

        $r7 = r0.<android.view.InsetsAnimationControlImpl: android.graphics.Insets mHiddenInsets>;

        $i13 = $r7.<android.graphics.Insets: int right>;

        $i15 = $i14 - $i13;

        $i16 = $i15 * 5;

        if $i17 < $i16 goto label1;

        $i18 = r1.<android.graphics.Insets: int bottom>;

        $i23 = $i18 * 100;

        $r8 = r0.<android.view.InsetsAnimationControlImpl: android.graphics.Insets mShownInsets>;

        $i20 = $r8.<android.graphics.Insets: int bottom>;

        $r9 = r0.<android.view.InsetsAnimationControlImpl: android.graphics.Insets mHiddenInsets>;

        $i19 = $r9.<android.graphics.Insets: int bottom>;

        $i21 = $i20 - $i19;

        $i22 = $i21 * 5;

        if $i23 < $i22 goto label1;

        $b24 = f0 cmpl 0.5F;

        if $b24 < 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    private android.graphics.Insets getInsetsFromState(android.view.InsetsState, android.graphics.Rect, android.util.SparseIntArray)
    {
        android.view.InsetsAnimationControlImpl r0;
        android.view.InsetsState r1;
        android.graphics.Rect r2;
        android.util.SparseIntArray r3;
        android.view.WindowInsets $r4;
        int $i0;
        android.graphics.Insets $r5;

        r0 := @this: android.view.InsetsAnimationControlImpl;

        r1 := @parameter0: android.view.InsetsState;

        r2 := @parameter1: android.graphics.Rect;

        r3 := @parameter2: android.util.SparseIntArray;

        $r4 = virtualinvoke r1.<android.view.InsetsState: android.view.WindowInsets calculateInsets(android.graphics.Rect,android.view.InsetsState,boolean,boolean,android.view.DisplayCutout,int,int,int,android.util.SparseIntArray)>(r2, null, 0, 0, null, 16, 0, 0, r3);

        $i0 = r0.<android.view.InsetsAnimationControlImpl: int mTypes>;

        $r5 = virtualinvoke $r4.<android.view.WindowInsets: android.graphics.Insets getInsets(int)>($i0);

        return $r5;
    }

    private void releaseLeashes()
    {
        android.view.InsetsAnimationControlImpl r0;
        android.view.InsetsSourceControl r1;
        android.view.InsetsAnimationControlCallbacks r2;
        android.util.SparseArray $r3, $r4;
        int $i0, i1;
        java.lang.Object $r5;
        android.view._$$Lambda$yePAgdxpSSjmKnpPAp6YHM4lpEQ $r7;

        r0 := @this: android.view.InsetsAnimationControlImpl;

        $r3 = r0.<android.view.InsetsAnimationControlImpl: android.util.SparseArray mControls>;

        $i0 = virtualinvoke $r3.<android.util.SparseArray: int size()>();

        i1 = $i0 - 1;

     label1:
        if i1 < 0 goto label4;

        $r4 = r0.<android.view.InsetsAnimationControlImpl: android.util.SparseArray mControls>;

        $r5 = virtualinvoke $r4.<android.util.SparseArray: java.lang.Object valueAt(int)>(i1);

        r1 = (android.view.InsetsSourceControl) $r5;

        if r1 != null goto label2;

        goto label3;

     label2:
        r2 = r0.<android.view.InsetsAnimationControlImpl: android.view.InsetsAnimationControlCallbacks mController>;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r2);

        $r7 = new android.view._$$Lambda$yePAgdxpSSjmKnpPAp6YHM4lpEQ;

        specialinvoke $r7.<android.view._$$Lambda$yePAgdxpSSjmKnpPAp6YHM4lpEQ: void <init>(android.view.InsetsAnimationControlCallbacks)>(r2);

        virtualinvoke r1.<android.view.InsetsSourceControl: void release(java.util.function.Consumer)>($r7);

     label3:
        i1 = i1 + -1;

        goto label1;

     label4:
        return;
    }

    private static float sanitize(float)
    {
        byte $b0, $b1;
        float f1;

        f1 := @parameter0: float;

        $b0 = f1 cmpl 1.0F;

        if $b0 < 0 goto label1;

        f1 = 1.0F;

        goto label2;

     label1:
        $b1 = f1 cmpg 0.0F;

        if $b1 > 0 goto label2;

        f1 = 0.0F;

        goto label2;

     label2:
        return f1;
    }

    private android.graphics.Insets sanitize(android.graphics.Insets)
    {
        android.view.InsetsAnimationControlImpl r0;
        android.graphics.Insets r1, $r2, $r3, $r4, $r5, r6;
        boolean $z0;

        r0 := @this: android.view.InsetsAnimationControlImpl;

        r1 := @parameter0: android.graphics.Insets;

        r6 = r1;

        if r1 != null goto label1;

        r6 = virtualinvoke r0.<android.view.InsetsAnimationControlImpl: android.graphics.Insets getCurrentInsets()>();

     label1:
        $z0 = virtualinvoke r0.<android.view.InsetsAnimationControlImpl: boolean hasZeroInsetsIme()>();

        if $z0 == 0 goto label2;

        return r6;

     label2:
        $r2 = r0.<android.view.InsetsAnimationControlImpl: android.graphics.Insets mShownInsets>;

        $r3 = staticinvoke <android.graphics.Insets: android.graphics.Insets min(android.graphics.Insets,android.graphics.Insets)>(r6, $r2);

        $r4 = r0.<android.view.InsetsAnimationControlImpl: android.graphics.Insets mHiddenInsets>;

        $r5 = staticinvoke <android.graphics.Insets: android.graphics.Insets max(android.graphics.Insets,android.graphics.Insets)>($r3, $r4);

        return $r5;
    }

    private void setInsetsAndAlpha(android.graphics.Insets, float, float, boolean)
    {
        android.view.InsetsAnimationControlImpl r0;
        float f0, f1, $f2, $f3, $f4;
        boolean $z0, $z1, $z2, z3, z4;
        java.lang.IllegalStateException $r1, $r7;
        android.graphics.Insets $r2, $r4, r8;
        android.view.InsetsAnimationControlCallbacks $r3, $r5;
        int $i0;
        java.lang.Boolean $r6, r9;

        r0 := @this: android.view.InsetsAnimationControlImpl;

        r8 := @parameter0: android.graphics.Insets;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        z3 := @parameter3: boolean;

        if z3 != 0 goto label2;

        $z2 = r0.<android.view.InsetsAnimationControlImpl: boolean mFinished>;

        if $z2 != 0 goto label1;

        goto label2;

     label1:
        $r7 = new java.lang.IllegalStateException;

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Can\'t change insets on an animation that is finished.");

        throw $r7;

     label2:
        $z0 = r0.<android.view.InsetsAnimationControlImpl: boolean mCancelled>;

        if $z0 != 0 goto label5;

        $f2 = staticinvoke <android.view.InsetsAnimationControlImpl: float sanitize(float)>(f1);

        r0.<android.view.InsetsAnimationControlImpl: float mPendingFraction> = $f2;

        $r2 = specialinvoke r0.<android.view.InsetsAnimationControlImpl: android.graphics.Insets sanitize(android.graphics.Insets)>(r8);

        r0.<android.view.InsetsAnimationControlImpl: android.graphics.Insets mPendingInsets> = $r2;

        $f3 = staticinvoke <android.view.InsetsAnimationControlImpl: float sanitize(float)>(f0);

        r0.<android.view.InsetsAnimationControlImpl: float mPendingAlpha> = $f3;

        $r3 = r0.<android.view.InsetsAnimationControlImpl: android.view.InsetsAnimationControlCallbacks mController>;

        interfaceinvoke $r3.<android.view.InsetsAnimationControlCallbacks: void scheduleApplyChangeInsets(android.view.InsetsAnimationControlRunner)>(r0);

        $r4 = r0.<android.view.InsetsAnimationControlImpl: android.graphics.Insets mPendingInsets>;

        $f4 = r0.<android.view.InsetsAnimationControlImpl: float mPendingAlpha>;

        z4 = specialinvoke r0.<android.view.InsetsAnimationControlImpl: boolean calculatePerceptible(android.graphics.Insets,float)>($r4, $f4);

        r9 = r0.<android.view.InsetsAnimationControlImpl: java.lang.Boolean mPerceptible>;

        if r9 == null goto label3;

        $z1 = virtualinvoke r9.<java.lang.Boolean: boolean booleanValue()>();

        if z4 == $z1 goto label4;

     label3:
        $r5 = r0.<android.view.InsetsAnimationControlImpl: android.view.InsetsAnimationControlCallbacks mController>;

        $i0 = r0.<android.view.InsetsAnimationControlImpl: int mTypes>;

        interfaceinvoke $r5.<android.view.InsetsAnimationControlCallbacks: void reportPerceptible(int,boolean)>($i0, z4);

        $r6 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z4);

        r0.<android.view.InsetsAnimationControlImpl: java.lang.Boolean mPerceptible> = $r6;

     label4:
        return;

     label5:
        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Can\'t change insets on an animation that is cancelled.");

        throw $r1;
    }

    private void updateLeashesForSide(int, int, int, int, java.util.ArrayList, android.view.InsetsState, java.lang.Float)
    {
        android.view.InsetsAnimationControlImpl r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, i8, i9, $i10, $i11;
        java.util.ArrayList r1;
        android.view.InsetsState r2, $r10;
        java.lang.Float r3;
        android.util.ArraySet r4;
        android.view.InsetsSourceControl r5;
        android.view.InsetsSource r6, $r24, $r25;
        android.view.SurfaceControl r7;
        boolean z0, $z2, z3;
        android.util.SparseSetArray $r8;
        java.lang.Object $r9;
        android.graphics.Matrix $r11, $r17, $r20;
        android.graphics.Point $r12, $r13;
        float $f0, $f1, $f2;
        android.graphics.Rect $r14, $r15, $r16, $r26;
        android.view.SyncRtSurfaceTransactionApplier$SurfaceParams$Builder $r18, $r19, $r21, $r22;
        android.view.SyncRtSurfaceTransactionApplier$SurfaceParams $r23;

        r0 := @this: android.view.InsetsAnimationControlImpl;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i8 := @parameter2: int;

        i2 := @parameter3: int;

        r1 := @parameter4: java.util.ArrayList;

        r2 := @parameter5: android.view.InsetsState;

        r3 := @parameter6: java.lang.Float;

        $r8 = r0.<android.view.InsetsAnimationControlImpl: android.util.SparseSetArray mSideSourceMap>;

        r4 = virtualinvoke $r8.<android.util.SparseSetArray: android.util.ArraySet get(int)>(i0);

        if r4 != null goto label1;

        return;

     label1:
        $i3 = virtualinvoke r4.<android.util.ArraySet: int size()>();

        i9 = $i3 - 1;

     label2:
        if i9 < 0 goto label8;

        $r9 = virtualinvoke r4.<android.util.ArraySet: java.lang.Object valueAt(int)>(i9);

        r5 = (android.view.InsetsSourceControl) $r9;

        $r10 = r0.<android.view.InsetsAnimationControlImpl: android.view.InsetsState mInitialInsetsState>;

        $i4 = virtualinvoke r5.<android.view.InsetsSourceControl: int getType()>();

        r6 = virtualinvoke $r10.<android.view.InsetsState: android.view.InsetsSource getSource(int)>($i4);

        r7 = virtualinvoke r5.<android.view.InsetsSourceControl: android.view.SurfaceControl getLeash()>();

        $r11 = r0.<android.view.InsetsAnimationControlImpl: android.graphics.Matrix mTmpMatrix>;

        $r12 = virtualinvoke r5.<android.view.InsetsSourceControl: android.graphics.Point getSurfacePosition()>();

        $i5 = $r12.<android.graphics.Point: int x>;

        $f0 = (float) $i5;

        $r13 = virtualinvoke r5.<android.view.InsetsSourceControl: android.graphics.Point getSurfacePosition()>();

        $i6 = $r13.<android.graphics.Point: int y>;

        $f1 = (float) $i6;

        virtualinvoke $r11.<android.graphics.Matrix: void setTranslate(float,float)>($f0, $f1);

        $r14 = r0.<android.view.InsetsAnimationControlImpl: android.graphics.Rect mTmpFrame>;

        $r15 = virtualinvoke r6.<android.view.InsetsSource: android.graphics.Rect getFrame()>();

        virtualinvoke $r14.<android.graphics.Rect: void set(android.graphics.Rect)>($r15);

        $r17 = r0.<android.view.InsetsAnimationControlImpl: android.graphics.Matrix mTmpMatrix>;

        $r16 = r0.<android.view.InsetsAnimationControlImpl: android.graphics.Rect mTmpFrame>;

        specialinvoke r0.<android.view.InsetsAnimationControlImpl: void addTranslationToMatrix(int,int,android.graphics.Matrix,android.graphics.Rect)>(i0, i1, $r17, $r16);

        z0 = r0.<android.view.InsetsAnimationControlImpl: boolean mHasZeroInsetsIme>;

        z3 = 0;

        if z0 == 0 goto label5;

        if i0 != 3 goto label5;

        $i7 = r0.<android.view.InsetsAnimationControlImpl: int mAnimationType>;

        if $i7 != 0 goto label4;

     label3:
        z3 = 1;

        goto label6;

     label4:
        $z2 = r0.<android.view.InsetsAnimationControlImpl: boolean mFinished>;

        if $z2 != 0 goto label6;

        goto label3;

     label5:
        if i2 == 0 goto label6;

        z3 = 1;

     label6:
        $i10 = virtualinvoke r6.<android.view.InsetsSource: int getType()>();

        $r24 = virtualinvoke r2.<android.view.InsetsState: android.view.InsetsSource getSource(int)>($i10);

        virtualinvoke $r24.<android.view.InsetsSource: void setVisible(boolean)>(z3);

        $i11 = virtualinvoke r6.<android.view.InsetsSource: int getType()>();

        $r25 = virtualinvoke r2.<android.view.InsetsState: android.view.InsetsSource getSource(int)>($i11);

        $r26 = r0.<android.view.InsetsAnimationControlImpl: android.graphics.Rect mTmpFrame>;

        virtualinvoke $r25.<android.view.InsetsSource: void setFrame(android.graphics.Rect)>($r26);

        if r7 == null goto label7;

        $r18 = new android.view.SyncRtSurfaceTransactionApplier$SurfaceParams$Builder;

        specialinvoke $r18.<android.view.SyncRtSurfaceTransactionApplier$SurfaceParams$Builder: void <init>(android.view.SurfaceControl)>(r7);

        $f2 = virtualinvoke r3.<java.lang.Float: float floatValue()>();

        $r19 = virtualinvoke $r18.<android.view.SyncRtSurfaceTransactionApplier$SurfaceParams$Builder: android.view.SyncRtSurfaceTransactionApplier$SurfaceParams$Builder withAlpha(float)>($f2);

        $r20 = r0.<android.view.InsetsAnimationControlImpl: android.graphics.Matrix mTmpMatrix>;

        $r21 = virtualinvoke $r19.<android.view.SyncRtSurfaceTransactionApplier$SurfaceParams$Builder: android.view.SyncRtSurfaceTransactionApplier$SurfaceParams$Builder withMatrix(android.graphics.Matrix)>($r20);

        $r22 = virtualinvoke $r21.<android.view.SyncRtSurfaceTransactionApplier$SurfaceParams$Builder: android.view.SyncRtSurfaceTransactionApplier$SurfaceParams$Builder withVisibility(boolean)>(z3);

        $r23 = virtualinvoke $r22.<android.view.SyncRtSurfaceTransactionApplier$SurfaceParams$Builder: android.view.SyncRtSurfaceTransactionApplier$SurfaceParams build()>();

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r23);

        goto label7;

     label7:
        i9 = i9 + -1;

        goto label2;

     label8:
        return;
    }

    public boolean applyChangeInsets(android.view.InsetsState)
    {
        android.view.InsetsAnimationControlImpl r0;
        android.view.InsetsState r1;
        android.graphics.Insets r2, $r4, $r5, $r7, $r8, $r10, $r11, $r13, $r14, $r16, $r17, $r23;
        float f0, $f1, $f2, $f3, $f4, $f5;
        boolean $z0, $z1, $z2, $z3;
        java.util.ArrayList $r6;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        java.lang.Float $r9, $r12, $r15, $r18;
        android.view.InsetsAnimationControlCallbacks $r19, $r26;
        android.view.SyncRtSurfaceTransactionApplier$SurfaceParams[] $r20, $r22;
        java.lang.Object[] $r21;
        android.view.WindowInsetsAnimation $r24, $r25;

        r0 := @this: android.view.InsetsAnimationControlImpl;

        r1 := @parameter0: android.view.InsetsState;

        $z0 = r0.<android.view.InsetsAnimationControlImpl: boolean mCancelled>;

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $r5 = r0.<android.view.InsetsAnimationControlImpl: android.graphics.Insets mShownInsets>;

        $r4 = r0.<android.view.InsetsAnimationControlImpl: android.graphics.Insets mPendingInsets>;

        r2 = staticinvoke <android.graphics.Insets: android.graphics.Insets subtract(android.graphics.Insets,android.graphics.Insets)>($r5, $r4);

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        $i0 = r2.<android.graphics.Insets: int left>;

        $r7 = r0.<android.view.InsetsAnimationControlImpl: android.graphics.Insets mShownInsets>;

        $i1 = $r7.<android.graphics.Insets: int left>;

        $r8 = r0.<android.view.InsetsAnimationControlImpl: android.graphics.Insets mPendingInsets>;

        $i2 = $r8.<android.graphics.Insets: int left>;

        $f1 = r0.<android.view.InsetsAnimationControlImpl: float mPendingAlpha>;

        $r9 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f1);

        specialinvoke r0.<android.view.InsetsAnimationControlImpl: void updateLeashesForSide(int,int,int,int,java.util.ArrayList,android.view.InsetsState,java.lang.Float)>(0, $i0, $i1, $i2, $r6, r1, $r9);

        $i3 = r2.<android.graphics.Insets: int top>;

        $r10 = r0.<android.view.InsetsAnimationControlImpl: android.graphics.Insets mShownInsets>;

        $i4 = $r10.<android.graphics.Insets: int top>;

        $r11 = r0.<android.view.InsetsAnimationControlImpl: android.graphics.Insets mPendingInsets>;

        $i5 = $r11.<android.graphics.Insets: int top>;

        $f2 = r0.<android.view.InsetsAnimationControlImpl: float mPendingAlpha>;

        $r12 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f2);

        specialinvoke r0.<android.view.InsetsAnimationControlImpl: void updateLeashesForSide(int,int,int,int,java.util.ArrayList,android.view.InsetsState,java.lang.Float)>(1, $i3, $i4, $i5, $r6, r1, $r12);

        $i6 = r2.<android.graphics.Insets: int right>;

        $r13 = r0.<android.view.InsetsAnimationControlImpl: android.graphics.Insets mShownInsets>;

        $i7 = $r13.<android.graphics.Insets: int right>;

        $r14 = r0.<android.view.InsetsAnimationControlImpl: android.graphics.Insets mPendingInsets>;

        $i8 = $r14.<android.graphics.Insets: int right>;

        $f3 = r0.<android.view.InsetsAnimationControlImpl: float mPendingAlpha>;

        $r15 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f3);

        specialinvoke r0.<android.view.InsetsAnimationControlImpl: void updateLeashesForSide(int,int,int,int,java.util.ArrayList,android.view.InsetsState,java.lang.Float)>(2, $i6, $i7, $i8, $r6, r1, $r15);

        $i9 = r2.<android.graphics.Insets: int bottom>;

        $r16 = r0.<android.view.InsetsAnimationControlImpl: android.graphics.Insets mShownInsets>;

        $i10 = $r16.<android.graphics.Insets: int bottom>;

        $r17 = r0.<android.view.InsetsAnimationControlImpl: android.graphics.Insets mPendingInsets>;

        $i11 = $r17.<android.graphics.Insets: int bottom>;

        $f4 = r0.<android.view.InsetsAnimationControlImpl: float mPendingAlpha>;

        $r18 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f4);

        specialinvoke r0.<android.view.InsetsAnimationControlImpl: void updateLeashesForSide(int,int,int,int,java.util.ArrayList,android.view.InsetsState,java.lang.Float)>(3, $i9, $i10, $i11, $r6, r1, $r18);

        $r19 = r0.<android.view.InsetsAnimationControlImpl: android.view.InsetsAnimationControlCallbacks mController>;

        $i12 = virtualinvoke $r6.<java.util.ArrayList: int size()>();

        $r20 = newarray (android.view.SyncRtSurfaceTransactionApplier$SurfaceParams)[$i12];

        $r21 = virtualinvoke $r6.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r20);

        $r22 = (android.view.SyncRtSurfaceTransactionApplier$SurfaceParams[]) $r21;

        interfaceinvoke $r19.<android.view.InsetsAnimationControlCallbacks: void applySurfaceParams(android.view.SyncRtSurfaceTransactionApplier$SurfaceParams[])>($r22);

        $r23 = r0.<android.view.InsetsAnimationControlImpl: android.graphics.Insets mPendingInsets>;

        r0.<android.view.InsetsAnimationControlImpl: android.graphics.Insets mCurrentInsets> = $r23;

        $r24 = r0.<android.view.InsetsAnimationControlImpl: android.view.WindowInsetsAnimation mAnimation>;

        $f5 = r0.<android.view.InsetsAnimationControlImpl: float mPendingFraction>;

        virtualinvoke $r24.<android.view.WindowInsetsAnimation: void setFraction(float)>($f5);

        f0 = r0.<android.view.InsetsAnimationControlImpl: float mPendingAlpha>;

        r0.<android.view.InsetsAnimationControlImpl: float mCurrentAlpha> = f0;

        $r25 = r0.<android.view.InsetsAnimationControlImpl: android.view.WindowInsetsAnimation mAnimation>;

        virtualinvoke $r25.<android.view.WindowInsetsAnimation: void setAlpha(float)>(f0);

        $z1 = r0.<android.view.InsetsAnimationControlImpl: boolean mFinished>;

        if $z1 == 0 goto label2;

        $r26 = r0.<android.view.InsetsAnimationControlImpl: android.view.InsetsAnimationControlCallbacks mController>;

        $z3 = r0.<android.view.InsetsAnimationControlImpl: boolean mShownOnFinish>;

        interfaceinvoke $r26.<android.view.InsetsAnimationControlCallbacks: void notifyFinished(android.view.InsetsAnimationControlRunner,boolean)>(r0, $z3);

        specialinvoke r0.<android.view.InsetsAnimationControlImpl: void releaseLeashes()>();

     label2:
        $z2 = r0.<android.view.InsetsAnimationControlImpl: boolean mFinished>;

        return $z2;
    }

    public void cancel()
    {
        android.view.InsetsAnimationControlImpl r0, r2;
        android.view.WindowInsetsAnimationControlListener r1;
        boolean $z0, $z1;

        r0 := @this: android.view.InsetsAnimationControlImpl;

        $z0 = r0.<android.view.InsetsAnimationControlImpl: boolean mFinished>;

        if $z0 == 0 goto label1;

        return;

     label1:
        r0.<android.view.InsetsAnimationControlImpl: boolean mCancelled> = 1;

        r1 = r0.<android.view.InsetsAnimationControlImpl: android.view.WindowInsetsAnimationControlListener mListener>;

        $z1 = r0.<android.view.InsetsAnimationControlImpl: boolean mReadyDispatched>;

        if $z1 == 0 goto label2;

        r2 = r0;

        goto label3;

     label2:
        r2 = null;

     label3:
        interfaceinvoke r1.<android.view.WindowInsetsAnimationControlListener: void onCancelled(android.view.WindowInsetsAnimationController)>(r2);

        specialinvoke r0.<android.view.InsetsAnimationControlImpl: void releaseLeashes()>();

        return;
    }

    public void finish(boolean)
    {
        android.view.InsetsAnimationControlImpl r0;
        boolean z0, $z1, $z2;
        android.view.WindowInsetsAnimationControlListener $r1;
        android.graphics.Insets r2;

        r0 := @this: android.view.InsetsAnimationControlImpl;

        z0 := @parameter0: boolean;

        $z1 = r0.<android.view.InsetsAnimationControlImpl: boolean mCancelled>;

        if $z1 != 0 goto label4;

        $z2 = r0.<android.view.InsetsAnimationControlImpl: boolean mFinished>;

        if $z2 == 0 goto label1;

        goto label4;

     label1:
        r0.<android.view.InsetsAnimationControlImpl: boolean mShownOnFinish> = z0;

        r0.<android.view.InsetsAnimationControlImpl: boolean mFinished> = 1;

        if z0 == 0 goto label2;

        r2 = r0.<android.view.InsetsAnimationControlImpl: android.graphics.Insets mShownInsets>;

        goto label3;

     label2:
        r2 = r0.<android.view.InsetsAnimationControlImpl: android.graphics.Insets mHiddenInsets>;

     label3:
        specialinvoke r0.<android.view.InsetsAnimationControlImpl: void setInsetsAndAlpha(android.graphics.Insets,float,float,boolean)>(r2, 1.0F, 1.0F, 1);

        $r1 = r0.<android.view.InsetsAnimationControlImpl: android.view.WindowInsetsAnimationControlListener mListener>;

        interfaceinvoke $r1.<android.view.WindowInsetsAnimationControlListener: void onFinished(android.view.WindowInsetsAnimationController)>(r0);

        return;

     label4:
        return;
    }

    public android.view.WindowInsetsAnimation getAnimation()
    {
        android.view.InsetsAnimationControlImpl r0;
        android.view.WindowInsetsAnimation $r1;

        r0 := @this: android.view.InsetsAnimationControlImpl;

        $r1 = r0.<android.view.InsetsAnimationControlImpl: android.view.WindowInsetsAnimation mAnimation>;

        return $r1;
    }

    public int getAnimationType()
    {
        android.view.InsetsAnimationControlImpl r0;
        int $i0;

        r0 := @this: android.view.InsetsAnimationControlImpl;

        $i0 = r0.<android.view.InsetsAnimationControlImpl: int mAnimationType>;

        return $i0;
    }

    android.util.SparseArray getControls()
    {
        android.view.InsetsAnimationControlImpl r0;
        android.util.SparseArray $r1;

        r0 := @this: android.view.InsetsAnimationControlImpl;

        $r1 = r0.<android.view.InsetsAnimationControlImpl: android.util.SparseArray mControls>;

        return $r1;
    }

    public float getCurrentAlpha()
    {
        android.view.InsetsAnimationControlImpl r0;
        float $f0;

        r0 := @this: android.view.InsetsAnimationControlImpl;

        $f0 = r0.<android.view.InsetsAnimationControlImpl: float mCurrentAlpha>;

        return $f0;
    }

    public float getCurrentFraction()
    {
        android.view.InsetsAnimationControlImpl r0;
        android.view.WindowInsetsAnimation $r1;
        float $f0;

        r0 := @this: android.view.InsetsAnimationControlImpl;

        $r1 = r0.<android.view.InsetsAnimationControlImpl: android.view.WindowInsetsAnimation mAnimation>;

        $f0 = virtualinvoke $r1.<android.view.WindowInsetsAnimation: float getFraction()>();

        return $f0;
    }

    public android.graphics.Insets getCurrentInsets()
    {
        android.view.InsetsAnimationControlImpl r0;
        android.graphics.Insets $r1;

        r0 := @this: android.view.InsetsAnimationControlImpl;

        $r1 = r0.<android.view.InsetsAnimationControlImpl: android.graphics.Insets mCurrentInsets>;

        return $r1;
    }

    public android.graphics.Insets getHiddenStateInsets()
    {
        android.view.InsetsAnimationControlImpl r0;
        android.graphics.Insets $r1;

        r0 := @this: android.view.InsetsAnimationControlImpl;

        $r1 = r0.<android.view.InsetsAnimationControlImpl: android.graphics.Insets mHiddenInsets>;

        return $r1;
    }

    android.view.WindowInsetsAnimationControlListener getListener()
    {
        android.view.InsetsAnimationControlImpl r0;
        android.view.WindowInsetsAnimationControlListener $r1;

        r0 := @this: android.view.InsetsAnimationControlImpl;

        $r1 = r0.<android.view.InsetsAnimationControlImpl: android.view.WindowInsetsAnimationControlListener mListener>;

        return $r1;
    }

    public android.graphics.Insets getShownStateInsets()
    {
        android.view.InsetsAnimationControlImpl r0;
        android.graphics.Insets $r1;

        r0 := @this: android.view.InsetsAnimationControlImpl;

        $r1 = r0.<android.view.InsetsAnimationControlImpl: android.graphics.Insets mShownInsets>;

        return $r1;
    }

    public int getTypes()
    {
        android.view.InsetsAnimationControlImpl r0;
        int $i0;

        r0 := @this: android.view.InsetsAnimationControlImpl;

        $i0 = r0.<android.view.InsetsAnimationControlImpl: int mTypes>;

        return $i0;
    }

    public boolean hasZeroInsetsIme()
    {
        android.view.InsetsAnimationControlImpl r0;
        boolean $z0;

        r0 := @this: android.view.InsetsAnimationControlImpl;

        $z0 = r0.<android.view.InsetsAnimationControlImpl: boolean mHasZeroInsetsIme>;

        return $z0;
    }

    public boolean isCancelled()
    {
        android.view.InsetsAnimationControlImpl r0;
        boolean $z0;

        r0 := @this: android.view.InsetsAnimationControlImpl;

        $z0 = r0.<android.view.InsetsAnimationControlImpl: boolean mCancelled>;

        return $z0;
    }

    public boolean isFinished()
    {
        android.view.InsetsAnimationControlImpl r0;
        boolean $z0;

        r0 := @this: android.view.InsetsAnimationControlImpl;

        $z0 = r0.<android.view.InsetsAnimationControlImpl: boolean mFinished>;

        return $z0;
    }

    public void setInsetsAndAlpha(android.graphics.Insets, float, float)
    {
        android.view.InsetsAnimationControlImpl r0;
        android.graphics.Insets r1;
        float f0, f1;

        r0 := @this: android.view.InsetsAnimationControlImpl;

        r1 := @parameter0: android.graphics.Insets;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        specialinvoke r0.<android.view.InsetsAnimationControlImpl: void setInsetsAndAlpha(android.graphics.Insets,float,float,boolean)>(r1, f0, f1, 0);

        return;
    }

    public static void <clinit>()
    {
        <android.view.InsetsAnimationControlImpl: java.lang.String TAG> = "InsetsAnimationCtrlImpl";

        return;
    }
}
