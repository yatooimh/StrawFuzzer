public class android.view.InsetsController extends java.lang.Object implements android.view.WindowInsetsController, android.view.InsetsAnimationControlCallbacks
{
    private static final int ANIMATION_DURATION_HIDE_MS;
    private static final int ANIMATION_DURATION_SHOW_MS;
    private static final int ANIMATION_DURATION_SYNC_IME_MS;
    private static final int ANIMATION_DURATION_UNSYNC_IME_MS;
    public static final int ANIMATION_TYPE_HIDE;
    public static final int ANIMATION_TYPE_NONE;
    public static final int ANIMATION_TYPE_SHOW;
    public static final int ANIMATION_TYPE_USER;
    static final boolean DEBUG;
    private static final android.view.animation.Interpolator FAST_OUT_LINEAR_IN_INTERPOLATOR;
    public static final int LAYOUT_INSETS_DURING_ANIMATION_HIDDEN;
    public static final int LAYOUT_INSETS_DURING_ANIMATION_SHOWN;
    private static final android.view.animation.Interpolator LINEAR_OUT_SLOW_IN_INTERPOLATOR;
    private static final int PENDING_CONTROL_TIMEOUT_MS;
    private static final android.view.animation.Interpolator SYNC_IME_INTERPOLATOR;
    public static final android.view.animation.Interpolator SYSTEM_BARS_INTERPOLATOR;
    private static final java.lang.String TAG;
    static final boolean WARN;
    private static android.animation.TypeEvaluator sEvaluator;
    private final java.lang.Runnable mAnimCallback;
    private boolean mAnimCallbackScheduled;
    private boolean mAnimationsDisabled;
    private int mCaptionInsetsHeight;
    private final java.util.function.BiFunction mConsumerCreator;
    private final java.util.ArrayList mControllableInsetsChangedListeners;
    private int mDisabledUserAnimationInsetsTypes;
    private final android.graphics.Rect mFrame;
    private final android.os.Handler mHandler;
    private final android.view.InsetsController$Host mHost;
    private java.lang.Runnable mInvokeControllableInsetsChangedListeners;
    private final android.view.InsetsState mLastDispatchedState;
    private android.view.DisplayCutout mLastDisplayCutout;
    private android.view.WindowInsets mLastInsets;
    private int mLastLegacySoftInputMode;
    private int mLastLegacySystemUiFlags;
    private int mLastLegacyWindowFlags;
    private int mLastStartedAnimTypes;
    private java.lang.Runnable mPendingControlTimeout;
    private android.view.InsetsController$PendingControlRequest mPendingImeControlRequest;
    private final android.view.InsetsState mRequestedState;
    private final java.util.ArrayList mRunningAnimations;
    private final android.util.SparseArray mSourceConsumers;
    private boolean mStartingAnimation;
    private final android.view.InsetsState mState;
    private final android.util.SparseArray mTmpControlArray;
    private final java.util.ArrayList mTmpFinishedControls;
    private final java.util.ArrayList mTmpRunningAnims;
    private int mTypesBeingCancelled;
    private final java.util.List mUnmodifiableTmpRunningAnims;

    static void <clinit>()
    {
        android.view.'-$$Lambda$InsetsController$Cj7UJrCkdHvJAZ_cYKrXuTMsjz8' $r4;
        android.view.animation.PathInterpolator r5, r6, r7, r8;
        android.animation.TypeEvaluator r9;

        <android.view.InsetsController: boolean WARN> = 0;

        <android.view.InsetsController: java.lang.String TAG> = "InsetsController";

        <android.view.InsetsController: int PENDING_CONTROL_TIMEOUT_MS> = 2000;

        <android.view.InsetsController: int LAYOUT_INSETS_DURING_ANIMATION_SHOWN> = 0;

        <android.view.InsetsController: int LAYOUT_INSETS_DURING_ANIMATION_HIDDEN> = 1;

        <android.view.InsetsController: boolean DEBUG> = 0;

        <android.view.InsetsController: int ANIMATION_TYPE_USER> = 2;

        <android.view.InsetsController: int ANIMATION_TYPE_SHOW> = 0;

        <android.view.InsetsController: int ANIMATION_TYPE_NONE> = -1;

        <android.view.InsetsController: int ANIMATION_TYPE_HIDE> = 1;

        <android.view.InsetsController: int ANIMATION_DURATION_UNSYNC_IME_MS> = 200;

        <android.view.InsetsController: int ANIMATION_DURATION_SYNC_IME_MS> = 285;

        <android.view.InsetsController: int ANIMATION_DURATION_SHOW_MS> = 275;

        <android.view.InsetsController: int ANIMATION_DURATION_HIDE_MS> = 340;

        r5 = new android.view.animation.PathInterpolator;

        specialinvoke r5.<android.view.animation.PathInterpolator: void <init>(float,float,float,float)>(0.4F, 0.0F, 0.2F, 1.0F);

        <android.view.InsetsController: android.view.animation.Interpolator SYSTEM_BARS_INTERPOLATOR> = r5;

        r6 = new android.view.animation.PathInterpolator;

        specialinvoke r6.<android.view.animation.PathInterpolator: void <init>(float,float,float,float)>(0.2F, 0.0F, 0.0F, 1.0F);

        <android.view.InsetsController: android.view.animation.Interpolator SYNC_IME_INTERPOLATOR> = r6;

        r7 = new android.view.animation.PathInterpolator;

        specialinvoke r7.<android.view.animation.PathInterpolator: void <init>(float,float,float,float)>(0.0F, 0.0F, 0.2F, 1.0F);

        <android.view.InsetsController: android.view.animation.Interpolator LINEAR_OUT_SLOW_IN_INTERPOLATOR> = r7;

        r8 = new android.view.animation.PathInterpolator;

        specialinvoke r8.<android.view.animation.PathInterpolator: void <init>(float,float,float,float)>(0.4F, 0.0F, 1.0F, 1.0F);

        <android.view.InsetsController: android.view.animation.Interpolator FAST_OUT_LINEAR_IN_INTERPOLATOR> = r8;

        $r4 = <android.view._$$Lambda$InsetsController$Cj7UJrCkdHvJAZ_cYKrXuTMsjz8: android.view.'-$$Lambda$InsetsController$Cj7UJrCkdHvJAZ_cYKrXuTMsjz8' INSTANCE>;

        r9 = (android.animation.TypeEvaluator) $r4;

        <android.view.InsetsController: android.animation.TypeEvaluator sEvaluator> = r9;

        return;
    }

    public void <init>(android.view.InsetsController$Host)
    {
        android.view.InsetsController r0;
        android.view.InsetsController$Host r1;
        android.view.'-$$Lambda$InsetsController$RZT3QkL9zMFTeHtZbfcaHIzvlsc' $r2;
        android.os.Handler $r3;
        java.util.function.BiFunction r4;

        r0 := @this: android.view.InsetsController;

        r1 := @parameter0: android.view.InsetsController$Host;

        $r2 = <android.view._$$Lambda$InsetsController$RZT3QkL9zMFTeHtZbfcaHIzvlsc: android.view.'-$$Lambda$InsetsController$RZT3QkL9zMFTeHtZbfcaHIzvlsc' INSTANCE>;

        $r3 = interfaceinvoke r1.<android.view.InsetsController$Host: android.os.Handler getHandler()>();

        r4 = (java.util.function.BiFunction) $r2;

        specialinvoke r0.<android.view.InsetsController: void <init>(android.view.InsetsController$Host,java.util.function.BiFunction,android.os.Handler)>(r1, r4, $r3);

        return;
    }

    public void <init>(android.view.InsetsController$Host, java.util.function.BiFunction, android.os.Handler)
    {
        android.view.InsetsController r0;
        android.view.InsetsController$Host r1;
        java.util.function.BiFunction r2;
        android.os.Handler r3;
        android.view.InsetsState $r5, $r6, $r7;
        android.graphics.Rect $r8;
        android.util.SparseArray $r9, $r10;
        java.util.ArrayList $r11, $r12, $r14, $r16;
        java.util.List $r13;
        android.view._$$Lambda$InsetsController$6uoSHBPvxV1C0JOZKhH1AyuNXmo $r15;
        android.view._$$Lambda$InsetsController$QTmHZEUVF9HpffXawWFTRAOvEno $r17;
        android.view._$$Lambda$InsetsController$zpmOxHfTFV_3me2u3C8YaXSUauQ $r18;

        r0 := @this: android.view.InsetsController;

        r1 := @parameter0: android.view.InsetsController$Host;

        r2 := @parameter1: java.util.function.BiFunction;

        r3 := @parameter2: android.os.Handler;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r5 = new android.view.InsetsState;

        specialinvoke $r5.<android.view.InsetsState: void <init>()>();

        r0.<android.view.InsetsController: android.view.InsetsState mState> = $r5;

        $r6 = new android.view.InsetsState;

        specialinvoke $r6.<android.view.InsetsState: void <init>()>();

        r0.<android.view.InsetsController: android.view.InsetsState mLastDispatchedState> = $r6;

        $r7 = new android.view.InsetsState;

        specialinvoke $r7.<android.view.InsetsState: void <init>()>();

        r0.<android.view.InsetsController: android.view.InsetsState mRequestedState> = $r7;

        $r8 = new android.graphics.Rect;

        specialinvoke $r8.<android.graphics.Rect: void <init>()>();

        r0.<android.view.InsetsController: android.graphics.Rect mFrame> = $r8;

        $r9 = new android.util.SparseArray;

        specialinvoke $r9.<android.util.SparseArray: void <init>()>();

        r0.<android.view.InsetsController: android.util.SparseArray mSourceConsumers> = $r9;

        $r10 = new android.util.SparseArray;

        specialinvoke $r10.<android.util.SparseArray: void <init>()>();

        r0.<android.view.InsetsController: android.util.SparseArray mTmpControlArray> = $r10;

        $r11 = new java.util.ArrayList;

        specialinvoke $r11.<java.util.ArrayList: void <init>()>();

        r0.<android.view.InsetsController: java.util.ArrayList mRunningAnimations> = $r11;

        $r12 = new java.util.ArrayList;

        specialinvoke $r12.<java.util.ArrayList: void <init>()>();

        r0.<android.view.InsetsController: java.util.ArrayList mTmpRunningAnims> = $r12;

        $r13 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r12);

        r0.<android.view.InsetsController: java.util.List mUnmodifiableTmpRunningAnims> = $r13;

        $r14 = new java.util.ArrayList;

        specialinvoke $r14.<java.util.ArrayList: void <init>()>();

        r0.<android.view.InsetsController: java.util.ArrayList mTmpFinishedControls> = $r14;

        r0.<android.view.InsetsController: int mCaptionInsetsHeight> = 0;

        $r15 = new android.view._$$Lambda$InsetsController$6uoSHBPvxV1C0JOZKhH1AyuNXmo;

        specialinvoke $r15.<android.view._$$Lambda$InsetsController$6uoSHBPvxV1C0JOZKhH1AyuNXmo: void <init>(android.view.InsetsController)>(r0);

        r0.<android.view.InsetsController: java.lang.Runnable mPendingControlTimeout> = $r15;

        $r16 = new java.util.ArrayList;

        specialinvoke $r16.<java.util.ArrayList: void <init>()>();

        r0.<android.view.InsetsController: java.util.ArrayList mControllableInsetsChangedListeners> = $r16;

        $r17 = new android.view._$$Lambda$InsetsController$QTmHZEUVF9HpffXawWFTRAOvEno;

        specialinvoke $r17.<android.view._$$Lambda$InsetsController$QTmHZEUVF9HpffXawWFTRAOvEno: void <init>(android.view.InsetsController)>(r0);

        r0.<android.view.InsetsController: java.lang.Runnable mInvokeControllableInsetsChangedListeners> = $r17;

        r0.<android.view.InsetsController: android.view.InsetsController$Host mHost> = r1;

        r0.<android.view.InsetsController: java.util.function.BiFunction mConsumerCreator> = r2;

        r0.<android.view.InsetsController: android.os.Handler mHandler> = r3;

        $r18 = new android.view._$$Lambda$InsetsController$zpmOxHfTFV_3me2u3C8YaXSUauQ;

        specialinvoke $r18.<android.view._$$Lambda$InsetsController$zpmOxHfTFV_3me2u3C8YaXSUauQ: void <init>(android.view.InsetsController)>(r0);

        r0.<android.view.InsetsController: java.lang.Runnable mAnimCallback> = $r18;

        return;
    }

    private void abortPendingImeControlRequest()
    {
        android.view.InsetsController r0;
        android.view.InsetsController$PendingControlRequest r1;
        android.view.WindowInsetsAnimationControlListener $r2;
        java.lang.Runnable $r3;
        android.os.Handler $r4;

        r0 := @this: android.view.InsetsController;

        r1 = r0.<android.view.InsetsController: android.view.InsetsController$PendingControlRequest mPendingImeControlRequest>;

        if r1 == null goto label1;

        $r2 = r1.<android.view.InsetsController$PendingControlRequest: android.view.WindowInsetsAnimationControlListener listener>;

        interfaceinvoke $r2.<android.view.WindowInsetsAnimationControlListener: void onCancelled(android.view.WindowInsetsAnimationController)>(null);

        r0.<android.view.InsetsController: android.view.InsetsController$PendingControlRequest mPendingImeControlRequest> = null;

        $r4 = r0.<android.view.InsetsController: android.os.Handler mHandler>;

        $r3 = r0.<android.view.InsetsController: java.lang.Runnable mPendingControlTimeout>;

        virtualinvoke $r4.<android.os.Handler: void removeCallbacks(java.lang.Runnable)>($r3);

     label1:
        return;
    }

    static android.view.animation.Interpolator access$000()
    {
        android.view.animation.Interpolator $r0;

        $r0 = <android.view.InsetsController: android.view.animation.Interpolator SYNC_IME_INTERPOLATOR>;

        return $r0;
    }

    static android.view.animation.Interpolator access$100()
    {
        android.view.animation.Interpolator $r0;

        $r0 = <android.view.InsetsController: android.view.animation.Interpolator LINEAR_OUT_SLOW_IN_INTERPOLATOR>;

        return $r0;
    }

    static android.view.animation.Interpolator access$200()
    {
        android.view.animation.Interpolator $r0;

        $r0 = <android.view.InsetsController: android.view.animation.Interpolator FAST_OUT_LINEAR_IN_INTERPOLATOR>;

        return $r0;
    }

    static android.animation.TypeEvaluator access$300()
    {
        android.animation.TypeEvaluator $r0;

        $r0 = <android.view.InsetsController: android.animation.TypeEvaluator sEvaluator>;

        return $r0;
    }

    private void applyLocalVisibilityOverride()
    {
        android.view.InsetsController r0;
        android.util.SparseArray $r1, $r2;
        int $i0, i1;
        java.lang.Object $r3;
        android.view.InsetsSourceConsumer $r4;

        r0 := @this: android.view.InsetsController;

        $r1 = r0.<android.view.InsetsController: android.util.SparseArray mSourceConsumers>;

        $i0 = virtualinvoke $r1.<android.util.SparseArray: int size()>();

        i1 = $i0 - 1;

     label1:
        if i1 < 0 goto label2;

        $r2 = r0.<android.view.InsetsController: android.util.SparseArray mSourceConsumers>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object valueAt(int)>(i1);

        $r4 = (android.view.InsetsSourceConsumer) $r3;

        virtualinvoke $r4.<android.view.InsetsSourceConsumer: boolean applyLocalVisibilityOverride()>();

        i1 = i1 + -1;

        goto label1;

     label2:
        return;
    }

    private int calculateControllableTypes()
    {
        android.view.InsetsController r0;
        android.view.InsetsSourceConsumer r1;
        android.view.InsetsSource r2;
        android.util.SparseArray $r3, $r6;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, i7, i8;
        android.graphics.Rect $r4;
        android.view.InsetsState $r5, $r8;
        java.lang.Object $r7;
        android.view.InsetsSourceControl $r9;
        boolean $z0;

        r0 := @this: android.view.InsetsController;

        i6 = 0;

        $r3 = r0.<android.view.InsetsController: android.util.SparseArray mSourceConsumers>;

        $i0 = virtualinvoke $r3.<android.util.SparseArray: int size()>();

        i7 = $i0 - 1;

     label1:
        if i7 < 0 goto label3;

        $r6 = r0.<android.view.InsetsController: android.util.SparseArray mSourceConsumers>;

        $r7 = virtualinvoke $r6.<android.util.SparseArray: java.lang.Object valueAt(int)>(i7);

        r1 = (android.view.InsetsSourceConsumer) $r7;

        $r8 = r0.<android.view.InsetsController: android.view.InsetsState mState>;

        $i3 = r1.<android.view.InsetsSourceConsumer: int mType>;

        r2 = virtualinvoke $r8.<android.view.InsetsState: android.view.InsetsSource peekSource(int)>($i3);

        i8 = i6;

        $r9 = virtualinvoke r1.<android.view.InsetsSourceConsumer: android.view.InsetsSourceControl getControl()>();

        if $r9 == null goto label2;

        i8 = i6;

        if r2 == null goto label2;

        i8 = i6;

        $z0 = virtualinvoke r2.<android.view.InsetsSource: boolean isUserControllable()>();

        if $z0 == 0 goto label2;

        $i4 = r1.<android.view.InsetsSourceConsumer: int mType>;

        $i5 = staticinvoke <android.view.InsetsState: int toPublicType(int)>($i4);

        i8 = i6 | $i5;

     label2:
        i7 = i7 + -1;

        i6 = i8;

        goto label1;

     label3:
        $r5 = r0.<android.view.InsetsController: android.view.InsetsState mState>;

        $r4 = r0.<android.view.InsetsController: android.graphics.Rect mFrame>;

        $i1 = virtualinvoke $r5.<android.view.InsetsState: int calculateUncontrollableInsetsFromFrame(android.graphics.Rect)>($r4);

        $i2 = $i1 & i6;

        return $i2;
    }

    private void cancelAnimation(android.view.InsetsAnimationControlRunner, boolean)
    {
        android.view.InsetsController r0;
        boolean z0, $z1, $z2;
        android.view.InsetsController$RunningAnimation r1;
        java.util.ArrayList $r2, $r3, $r6;
        int $i0, $i1, $i2, $i3, i4, i5;
        java.lang.Object $r4, $r10;
        android.view.InsetsAnimationControlRunner $r5, $r8, r14;
        android.view.WindowInsetsAnimation $r9;
        java.lang.Integer $r11;
        android.view.InsetsSourceConsumer $r12;
        android.view.InsetsController$Host $r13;
        android.util.ArraySet r15;

        r0 := @this: android.view.InsetsController;

        r14 := @parameter0: android.view.InsetsAnimationControlRunner;

        z0 := @parameter1: boolean;

        if z0 == 0 goto label1;

        interfaceinvoke r14.<android.view.InsetsAnimationControlRunner: void cancel()>();

     label1:
        $r2 = r0.<android.view.InsetsController: java.util.ArrayList mRunningAnimations>;

        $i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        i4 = $i0 - 1;

     label2:
        if i4 < 0 goto label7;

        $r3 = r0.<android.view.InsetsController: java.util.ArrayList mRunningAnimations>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(i4);

        r1 = (android.view.InsetsController$RunningAnimation) $r4;

        $r5 = r1.<android.view.InsetsController$RunningAnimation: android.view.InsetsAnimationControlRunner runner>;

        if $r5 != r14 goto label6;

        $r6 = r0.<android.view.InsetsController: java.util.ArrayList mRunningAnimations>;

        virtualinvoke $r6.<java.util.ArrayList: java.lang.Object remove(int)>(i4);

        $i1 = interfaceinvoke r14.<android.view.InsetsAnimationControlRunner: int getTypes()>();

        r15 = staticinvoke <android.view.InsetsState: android.util.ArraySet toInternalType(int)>($i1);

        $i2 = virtualinvoke r15.<android.util.ArraySet: int size()>();

        i5 = $i2 - 1;

     label3:
        if i5 < 0 goto label5;

        $r10 = virtualinvoke r15.<android.util.ArraySet: java.lang.Object valueAt(int)>(i5);

        $r11 = (java.lang.Integer) $r10;

        $i3 = virtualinvoke $r11.<java.lang.Integer: int intValue()>();

        $r12 = virtualinvoke r0.<android.view.InsetsController: android.view.InsetsSourceConsumer getSourceConsumer(int)>($i3);

        $z2 = virtualinvoke $r12.<android.view.InsetsSourceConsumer: boolean notifyAnimationFinished()>();

        if $z2 == 0 goto label4;

        $r13 = r0.<android.view.InsetsController: android.view.InsetsController$Host mHost>;

        interfaceinvoke $r13.<android.view.InsetsController$Host: void notifyInsetsChanged()>();

     label4:
        i5 = i5 + -1;

        goto label3;

     label5:
        if z0 == 0 goto label7;

        $z1 = r1.<android.view.InsetsController$RunningAnimation: boolean startDispatched>;

        if $z1 == 0 goto label7;

        $r8 = r1.<android.view.InsetsController$RunningAnimation: android.view.InsetsAnimationControlRunner runner>;

        $r9 = interfaceinvoke $r8.<android.view.InsetsAnimationControlRunner: android.view.WindowInsetsAnimation getAnimation()>();

        virtualinvoke r0.<android.view.InsetsController: void dispatchAnimationEnd(android.view.WindowInsetsAnimation)>($r9);

        goto label7;

     label6:
        i4 = i4 + -1;

        goto label2;

     label7:
        return;
    }

    private void cancelExistingControllers(int)
    {
        android.view.InsetsController r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9;
        java.util.ArrayList $r1, $r2;
        java.lang.Object $r3;
        android.view.InsetsController$RunningAnimation $r4;
        java.lang.Throwable $r5;
        android.view.InsetsAnimationControlRunner r6;

        r0 := @this: android.view.InsetsController;

        i0 := @parameter0: int;

        i1 = r0.<android.view.InsetsController: int mTypesBeingCancelled>;

        $i2 = r0.<android.view.InsetsController: int mTypesBeingCancelled>;

        $i3 = $i2 | i0;

        r0.<android.view.InsetsController: int mTypesBeingCancelled> = $i3;

     label1:
        $r1 = r0.<android.view.InsetsController: java.util.ArrayList mRunningAnimations>;

        $i4 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        i9 = $i4 - 1;

     label2:
        if i9 < 0 goto label5;

     label3:
        $r2 = r0.<android.view.InsetsController: java.util.ArrayList mRunningAnimations>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>(i9);

        $r4 = (android.view.InsetsController$RunningAnimation) $r3;

        r6 = $r4.<android.view.InsetsController$RunningAnimation: android.view.InsetsAnimationControlRunner runner>;

        $i7 = interfaceinvoke r6.<android.view.InsetsAnimationControlRunner: int getTypes()>();

        $i8 = $i7 & i0;

        if $i8 == 0 goto label4;

        specialinvoke r0.<android.view.InsetsController: void cancelAnimation(android.view.InsetsAnimationControlRunner,boolean)>(r6, 1);

     label4:
        i9 = i9 + -1;

        goto label2;

     label5:
        $i5 = staticinvoke <android.view.WindowInsets$Type: int ime()>();

        $i6 = $i5 & i0;

        if $i6 == 0 goto label6;

        specialinvoke r0.<android.view.InsetsController: void abortPendingImeControlRequest()>();

     label6:
        r0.<android.view.InsetsController: int mTypesBeingCancelled> = i1;

        return;

     label7:
        $r5 := @caughtexception;

        r0.<android.view.InsetsController: int mTypesBeingCancelled> = i1;

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
    }

    private boolean captionInsetsUnchanged()
    {
        android.view.InsetsController r0;
        android.view.InsetsState $r1, $r3, $r5;
        android.view.InsetsSource $r2, $r4, $r6;
        int $i0, $i1, $i2;
        android.graphics.Rect $r7;

        r0 := @this: android.view.InsetsController;

        $r1 = r0.<android.view.InsetsController: android.view.InsetsState mState>;

        $r2 = virtualinvoke $r1.<android.view.InsetsState: android.view.InsetsSource peekSource(int)>(2);

        if $r2 != null goto label1;

        $i2 = r0.<android.view.InsetsController: int mCaptionInsetsHeight>;

        if $i2 != 0 goto label1;

        return 1;

     label1:
        $r3 = r0.<android.view.InsetsController: android.view.InsetsState mState>;

        $r4 = virtualinvoke $r3.<android.view.InsetsState: android.view.InsetsSource peekSource(int)>(2);

        if $r4 == null goto label2;

        $i0 = r0.<android.view.InsetsController: int mCaptionInsetsHeight>;

        $r5 = r0.<android.view.InsetsController: android.view.InsetsState mState>;

        $r6 = virtualinvoke $r5.<android.view.InsetsState: android.view.InsetsSource peekSource(int)>(2);

        $r7 = virtualinvoke $r6.<android.view.InsetsSource: android.graphics.Rect getFrame()>();

        $i1 = virtualinvoke $r7.<android.graphics.Rect: int height()>();

        if $i0 != $i1 goto label2;

        return 1;

     label2:
        return 0;
    }

    private android.util.Pair collectSourceControls(boolean, android.util.ArraySet, android.util.SparseArray, int)
    {
        android.view.InsetsController r0;
        boolean z0, z2, z3, z4;
        android.util.ArraySet r1;
        android.util.SparseArray r2;
        int i0, $i1, $i2, $i3, $i4, $i5, i6, i7, i8, i9;
        android.view.InsetsSourceConsumer r3;
        android.view.InsetsSourceControl r4, $r10;
        android.util.Pair $r5;
        java.lang.Integer $r6, $r9;
        java.lang.Boolean $r7;
        java.lang.Object $r8;

        r0 := @this: android.view.InsetsController;

        z0 := @parameter0: boolean;

        r1 := @parameter1: android.util.ArraySet;

        r2 := @parameter2: android.util.SparseArray;

        i0 := @parameter3: int;

        i6 = 0;

        z2 = 1;

        $i1 = virtualinvoke r1.<android.util.ArraySet: int size()>();

        i7 = $i1 - 1;

     label01:
        if i7 < 0 goto label15;

        $r8 = virtualinvoke r1.<android.util.ArraySet: java.lang.Object valueAt(int)>(i7);

        $r9 = (java.lang.Integer) $r8;

        $i2 = virtualinvoke $r9.<java.lang.Integer: int intValue()>();

        r3 = virtualinvoke r0.<android.view.InsetsController: android.view.InsetsSourceConsumer getSourceConsumer(int)>($i2);

        if i0 == 0 goto label03;

        if i0 != 2 goto label02;

        goto label03;

     label02:
        z3 = 0;

        goto label04;

     label03:
        z3 = 1;

     label04:
        if z3 == 0 goto label08;

        i8 = virtualinvoke r3.<android.view.InsetsSourceConsumer: int requestShow(boolean)>(z0);

        if i8 == 0 goto label06;

        if i8 == 1 goto label05;

        z4 = 0;

        goto label07;

     label05:
        z2 = 0;

        z4 = 0;

        goto label07;

     label06:
        z4 = 1;

     label07:
        goto label10;

     label08:
        if z0 != 0 goto label09;

        virtualinvoke r3.<android.view.InsetsSourceConsumer: void notifyHidden()>();

     label09:
        z4 = 1;

     label10:
        if z4 != 0 goto label11;

        i9 = i6;

        goto label14;

     label11:
        r4 = virtualinvoke r3.<android.view.InsetsSourceConsumer: android.view.InsetsSourceControl getControl()>();

        if r4 == null goto label12;

        $i3 = virtualinvoke r3.<android.view.InsetsSourceConsumer: int getType()>();

        $r10 = new android.view.InsetsSourceControl;

        specialinvoke $r10.<android.view.InsetsSourceControl: void <init>(android.view.InsetsSourceControl)>(r4);

        virtualinvoke r2.<android.util.SparseArray: void put(int,java.lang.Object)>($i3, $r10);

        $i4 = virtualinvoke r3.<android.view.InsetsSourceConsumer: int getType()>();

        $i5 = staticinvoke <android.view.InsetsState: int toPublicType(int)>($i4);

        i9 = i6 | $i5;

        goto label14;

     label12:
        if i0 != 0 goto label13;

        virtualinvoke r3.<android.view.InsetsSourceConsumer: void show(boolean)>(z0);

        i9 = i6;

        goto label14;

     label13:
        i9 = i6;

        if i0 != 1 goto label14;

        virtualinvoke r3.<android.view.InsetsSourceConsumer: void hide()>();

        i9 = i6;

     label14:
        i7 = i7 + -1;

        i6 = i9;

        goto label01;

     label15:
        $r5 = new android.util.Pair;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i6);

        $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z2);

        specialinvoke $r5.<android.util.Pair: void <init>(java.lang.Object,java.lang.Object)>($r6, $r7);

        return $r5;
    }

    private void controlAnimationUnchecked(int, android.os.CancellationSignal, android.view.WindowInsetsAnimationControlListener, android.graphics.Rect, boolean, long, android.view.animation.Interpolator, int, int, boolean)
    {
        android.view.InsetsController r0;
        android.graphics.Rect r1;
        boolean z0, z1, $z2, $z5;
        long l0;
        android.view.animation.Interpolator r2;
        int i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i11, i12, i13;
        java.lang.StringBuilder $r4;
        java.lang.String $r6, $r9, $r13;
        java.lang.IllegalStateException $r12;
        android.util.SparseArray $r14;
        java.lang.Object $r15, $r17;
        java.lang.Integer $r16;
        java.lang.Boolean $r18;
        android.view.InsetsAnimationControlImpl $r19;
        android.view.InsetsState $r20, $r26, $r32;
        android.view.InsetsController$RunningAnimation $r21;
        java.util.ArrayList $r22;
        android.view._$$Lambda$InsetsController$fj4b0iMlmzNGo8WMz8tFflJUfrs $r23;
        android.view.InsetsAnimationThreadControlRunner $r24;
        android.view.InsetsController$Host $r25;
        android.os.Handler $r27, $r30;
        android.view.InsetsController$PendingControlRequest $r28;
        java.lang.Runnable $r29;
        android.view._$$Lambda$InsetsController$2eTQCcgXs2h2fCMtnCUpVNcB9ps $r31;
        android.view.InsetsSource $r33;
        android.view.InsetsSourceConsumer $r34;
        android.os.CancellationSignal r35;
        android.view.WindowInsetsAnimationControlListener r36;
        android.util.ArraySet r37;
        android.util.Pair r38;
        android.view.InsetsAnimationControlRunner r40;

        r0 := @this: android.view.InsetsController;

        i11 := @parameter0: int;

        r35 := @parameter1: android.os.CancellationSignal;

        r36 := @parameter2: android.view.WindowInsetsAnimationControlListener;

        r1 := @parameter3: android.graphics.Rect;

        z0 := @parameter4: boolean;

        l0 := @parameter5: long;

        r2 := @parameter6: android.view.animation.Interpolator;

        i1 := @parameter7: int;

        i2 := @parameter8: int;

        z1 := @parameter9: boolean;

        $i3 = r0.<android.view.InsetsController: int mTypesBeingCancelled>;

        $i4 = i11 & $i3;

        if $i4 != 0 goto label12;

        if i1 != 2 goto label02;

        i12 = r0.<android.view.InsetsController: int mDisabledUserAnimationInsetsTypes>;

        if z0 == 0 goto label01;

        $i8 = staticinvoke <android.view.WindowInsets$Type: int ime()>();

        $i9 = i11 & i12;

        $i10 = $i8 & $i9;

        if $i10 == 0 goto label01;

        $r32 = r0.<android.view.InsetsController: android.view.InsetsState mState>;

        $r33 = virtualinvoke $r32.<android.view.InsetsState: android.view.InsetsSource getSource(int)>(13);

        $z5 = virtualinvoke $r33.<android.view.InsetsSource: boolean isVisible()>();

        if $z5 != 0 goto label01;

        $r34 = virtualinvoke r0.<android.view.InsetsController: android.view.InsetsSourceConsumer getSourceConsumer(int)>(13);

        virtualinvoke $r34.<android.view.InsetsSourceConsumer: void hide(boolean,int)>(1, i1);

     label01:
        i11 = i11 & i12;

        goto label02;

     label02:
        if i11 != 0 goto label03;

        interfaceinvoke r36.<android.view.WindowInsetsAnimationControlListener: void onCancelled(android.view.WindowInsetsAnimationController)>(null);

        return;

     label03:
        specialinvoke r0.<android.view.InsetsController: void cancelExistingControllers(int)>(i11);

        $i6 = r0.<android.view.InsetsController: int mLastStartedAnimTypes>;

        $i7 = $i6 | i11;

        r0.<android.view.InsetsController: int mLastStartedAnimTypes> = $i7;

        r37 = staticinvoke <android.view.InsetsState: android.util.ArraySet toInternalType(int)>(i11);

        $r14 = new android.util.SparseArray;

        specialinvoke $r14.<android.util.SparseArray: void <init>()>();

        r38 = specialinvoke r0.<android.view.InsetsController: android.util.Pair collectSourceControls(boolean,android.util.ArraySet,android.util.SparseArray,int)>(z0, r37, $r14, i1);

        $r15 = r38.<android.util.Pair: java.lang.Object first>;

        $r16 = (java.lang.Integer) $r15;

        i13 = virtualinvoke $r16.<java.lang.Integer: int intValue()>();

        $r17 = r38.<android.util.Pair: java.lang.Object second>;

        $r18 = (java.lang.Boolean) $r17;

        $z2 = virtualinvoke $r18.<java.lang.Boolean: boolean booleanValue()>();

        if $z2 != 0 goto label05;

        specialinvoke r0.<android.view.InsetsController: void abortPendingImeControlRequest()>();

        $r28 = new android.view.InsetsController$PendingControlRequest;

        specialinvoke $r28.<android.view.InsetsController$PendingControlRequest: void <init>(int,android.view.WindowInsetsAnimationControlListener,long,android.view.animation.Interpolator,int,int,android.os.CancellationSignal,boolean)>(i11, r36, l0, r2, i1, i2, r35, z1);

        r0.<android.view.InsetsController: android.view.InsetsController$PendingControlRequest mPendingImeControlRequest> = $r28;

        $r30 = r0.<android.view.InsetsController: android.os.Handler mHandler>;

        $r29 = r0.<android.view.InsetsController: java.lang.Runnable mPendingControlTimeout>;

        virtualinvoke $r30.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>($r29, 2000L);

        if r35 == null goto label04;

        $r31 = new android.view._$$Lambda$InsetsController$2eTQCcgXs2h2fCMtnCUpVNcB9ps;

        specialinvoke $r31.<android.view._$$Lambda$InsetsController$2eTQCcgXs2h2fCMtnCUpVNcB9ps: void <init>(android.view.InsetsController,android.view.InsetsController$PendingControlRequest)>(r0, $r28);

        virtualinvoke r35.<android.os.CancellationSignal: void setOnCancelListener(android.os.CancellationSignal$OnCancelListener)>($r31);

     label04:
        return;

     label05:
        if i13 != 0 goto label06;

        interfaceinvoke r36.<android.view.WindowInsetsAnimationControlListener: void onCancelled(android.view.WindowInsetsAnimationController)>(null);

        return;

     label06:
        if z1 == 0 goto label07;

        $r24 = new android.view.InsetsAnimationThreadControlRunner;

        $r26 = r0.<android.view.InsetsController: android.view.InsetsState mState>;

        $r25 = r0.<android.view.InsetsController: android.view.InsetsController$Host mHost>;

        $r27 = interfaceinvoke $r25.<android.view.InsetsController$Host: android.os.Handler getHandler()>();

        specialinvoke $r24.<android.view.InsetsAnimationThreadControlRunner: void <init>(android.util.SparseArray,android.graphics.Rect,android.view.InsetsState,android.view.WindowInsetsAnimationControlListener,int,android.view.InsetsAnimationControlCallbacks,long,android.view.animation.Interpolator,int,android.os.Handler)>($r14, r1, $r26, r36, i13, r0, l0, r2, i1, $r27);

        r40 = $r24;

        goto label08;

     label07:
        $r19 = new android.view.InsetsAnimationControlImpl;

        $r20 = r0.<android.view.InsetsController: android.view.InsetsState mState>;

        specialinvoke $r19.<android.view.InsetsAnimationControlImpl: void <init>(android.util.SparseArray,android.graphics.Rect,android.view.InsetsState,android.view.WindowInsetsAnimationControlListener,int,android.view.InsetsAnimationControlCallbacks,long,android.view.animation.Interpolator,int)>($r14, r1, $r20, r36, i13, r0, l0, r2, i1);

        r40 = $r19;

     label08:
        $r22 = r0.<android.view.InsetsController: java.util.ArrayList mRunningAnimations>;

        $r21 = new android.view.InsetsController$RunningAnimation;

        specialinvoke $r21.<android.view.InsetsController$RunningAnimation: void <init>(android.view.InsetsAnimationControlRunner,int)>(r40, i1);

        virtualinvoke $r22.<java.util.ArrayList: boolean add(java.lang.Object)>($r21);

        if r35 == null goto label09;

        $r23 = new android.view._$$Lambda$InsetsController$fj4b0iMlmzNGo8WMz8tFflJUfrs;

        specialinvoke $r23.<android.view._$$Lambda$InsetsController$fj4b0iMlmzNGo8WMz8tFflJUfrs: void <init>(android.view.InsetsController,android.view.InsetsAnimationControlRunner)>(r0, r40);

        virtualinvoke r35.<android.os.CancellationSignal: void setOnCancelListener(android.os.CancellationSignal$OnCancelListener)>($r23);

     label09:
        if i2 != 0 goto label10;

        specialinvoke r0.<android.view.InsetsController: void showDirectly(int)>(i11);

        goto label11;

     label10:
        specialinvoke r0.<android.view.InsetsController: void hideDirectly(int,boolean,int)>(i11, 0, i1);

     label11:
        return;

     label12:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot start a new insets animation of ");

        $r6 = staticinvoke <android.view.WindowInsets$Type: java.lang.String toString(int)>(i11);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" while an existing ");

        $i5 = r0.<android.view.InsetsController: int mTypesBeingCancelled>;

        $r9 = staticinvoke <android.view.WindowInsets$Type: java.lang.String toString(int)>($i5);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is being cancelled.");

        $r12 = new java.lang.IllegalStateException;

        $r13 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r13);

        throw $r12;
    }

    private void controlWindowInsetsAnimation(int, android.os.CancellationSignal, android.view.WindowInsetsAnimationControlListener, boolean, long, android.view.animation.Interpolator, int)
    {
        android.view.InsetsController r0;
        int i0, i2, $i3, $i4, $i5;
        android.os.CancellationSignal r1;
        android.view.WindowInsetsAnimationControlListener r2;
        boolean z0;
        long l1;
        android.view.animation.Interpolator r3;
        android.graphics.Rect $r4, $r6;
        android.view.InsetsState $r5;

        r0 := @this: android.view.InsetsController;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.CancellationSignal;

        r2 := @parameter2: android.view.WindowInsetsAnimationControlListener;

        z0 := @parameter3: boolean;

        l1 := @parameter4: long;

        r3 := @parameter5: android.view.animation.Interpolator;

        i2 := @parameter6: int;

        $r5 = r0.<android.view.InsetsController: android.view.InsetsState mState>;

        $r4 = r0.<android.view.InsetsController: android.graphics.Rect mFrame>;

        $i3 = virtualinvoke $r5.<android.view.InsetsState: int calculateUncontrollableInsetsFromFrame(android.graphics.Rect)>($r4);

        $i4 = $i3 & i0;

        if $i4 == 0 goto label1;

        interfaceinvoke r2.<android.view.WindowInsetsAnimationControlListener: void onCancelled(android.view.WindowInsetsAnimationController)>(null);

        return;

     label1:
        $r6 = r0.<android.view.InsetsController: android.graphics.Rect mFrame>;

        $i5 = specialinvoke r0.<android.view.InsetsController: int getLayoutInsetsDuringAnimationMode(int)>(i0);

        specialinvoke r0.<android.view.InsetsController: void controlAnimationUnchecked(int,android.os.CancellationSignal,android.view.WindowInsetsAnimationControlListener,android.graphics.Rect,boolean,long,android.view.animation.Interpolator,int,int,boolean)>(i0, r1, r2, $r6, z0, l1, r3, i2, $i5, 0);

        return;
    }

    private int getLayoutInsetsDuringAnimationMode(int)
    {
        android.view.InsetsController r0;
        android.util.ArraySet r1;
        android.view.InsetsSourceConsumer r2;
        int $i0, $i1, i2, i3;
        android.util.SparseArray $r3;
        java.lang.Object $r4, $r6;
        java.lang.Integer $r5;
        boolean $z0;

        r0 := @this: android.view.InsetsController;

        i2 := @parameter0: int;

        r1 = staticinvoke <android.view.InsetsState: android.util.ArraySet toInternalType(int)>(i2);

        $i0 = virtualinvoke r1.<android.util.ArraySet: int size()>();

        i3 = $i0 - 1;

     label1:
        if i3 < 0 goto label4;

        $r3 = r0.<android.view.InsetsController: android.util.SparseArray mSourceConsumers>;

        $r4 = virtualinvoke r1.<android.util.ArraySet: java.lang.Object valueAt(int)>(i3);

        $r5 = (java.lang.Integer) $r4;

        $i1 = virtualinvoke $r5.<java.lang.Integer: int intValue()>();

        $r6 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object get(int)>($i1);

        r2 = (android.view.InsetsSourceConsumer) $r6;

        if r2 != null goto label2;

        goto label3;

     label2:
        $z0 = virtualinvoke r2.<android.view.InsetsSourceConsumer: boolean isRequestedVisible()>();

        if $z0 != 0 goto label3;

        return 0;

     label3:
        i3 = i3 + -1;

        goto label1;

     label4:
        return 1;
    }

    private void hideDirectly(int, boolean, int)
    {
        android.view.InsetsController r0;
        boolean z0;
        int i0, $i1, $i2, i3, i4;
        android.util.ArraySet r1;
        java.lang.Object $r2;
        java.lang.Integer $r3;
        android.view.InsetsSourceConsumer $r4;

        r0 := @this: android.view.InsetsController;

        i3 := @parameter0: int;

        z0 := @parameter1: boolean;

        i0 := @parameter2: int;

        r1 = staticinvoke <android.view.InsetsState: android.util.ArraySet toInternalType(int)>(i3);

        $i1 = virtualinvoke r1.<android.util.ArraySet: int size()>();

        i4 = $i1 - 1;

     label1:
        if i4 < 0 goto label2;

        $r2 = virtualinvoke r1.<android.util.ArraySet: java.lang.Object valueAt(int)>(i4);

        $r3 = (java.lang.Integer) $r2;

        $i2 = virtualinvoke $r3.<java.lang.Integer: int intValue()>();

        $r4 = virtualinvoke r0.<android.view.InsetsController: android.view.InsetsSourceConsumer getSourceConsumer(int)>($i2);

        virtualinvoke $r4.<android.view.InsetsSourceConsumer: void hide(boolean,int)>(z0, i0);

        i4 = i4 + -1;

        goto label1;

     label2:
        return;
    }

    private int invokeControllableInsetsChangedListeners()
    {
        android.view.InsetsController r0;
        int i0, i1, $i2, i3;
        java.lang.Runnable $r1;
        android.os.Handler $r2;
        java.util.ArrayList $r3, $r4;
        java.lang.Object $r5;
        android.view.WindowInsetsController$OnControllableInsetsChangedListener $r6;

        r0 := @this: android.view.InsetsController;

        $r2 = r0.<android.view.InsetsController: android.os.Handler mHandler>;

        $r1 = r0.<android.view.InsetsController: java.lang.Runnable mInvokeControllableInsetsChangedListeners>;

        virtualinvoke $r2.<android.os.Handler: void removeCallbacks(java.lang.Runnable)>($r1);

        r0.<android.view.InsetsController: int mLastStartedAnimTypes> = 0;

        i0 = specialinvoke r0.<android.view.InsetsController: int calculateControllableTypes()>();

        $r3 = r0.<android.view.InsetsController: java.util.ArrayList mControllableInsetsChangedListeners>;

        i1 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        i3 = 0;

     label1:
        if i3 >= i1 goto label2;

        $r4 = r0.<android.view.InsetsController: java.util.ArrayList mControllableInsetsChangedListeners>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        $r6 = (android.view.WindowInsetsController$OnControllableInsetsChangedListener) $r5;

        interfaceinvoke $r6.<android.view.WindowInsetsController$OnControllableInsetsChangedListener: void onControllableInsetsChanged(android.view.WindowInsetsController,int)>(r0, i0);

        i3 = i3 + 1;

        goto label1;

     label2:
        $i2 = r0.<android.view.InsetsController: int mLastStartedAnimTypes>;

        return $i2;
    }

    public static void lambda$6uoSHBPvxV1C0JOZKhH1AyuNXmo(android.view.InsetsController)
    {
        android.view.InsetsController r0;

        r0 := @parameter0: android.view.InsetsController;

        specialinvoke r0.<android.view.InsetsController: void abortPendingImeControlRequest()>();

        return;
    }

    public static int lambda$QTmHZEUVF9HpffXawWFTRAOvEno(android.view.InsetsController)
    {
        android.view.InsetsController r0;
        int $i0;

        r0 := @parameter0: android.view.InsetsController;

        $i0 = specialinvoke r0.<android.view.InsetsController: int invokeControllableInsetsChangedListeners()>();

        return $i0;
    }

    static android.view.InsetsSourceConsumer lambda$new$1(android.view.InsetsController, java.lang.Integer)
    {
        android.view.InsetsController r0;
        java.lang.Integer r1;
        int $i0, $i1;
        android.view.'-$$Lambda$9vBfnQOmNnsc9WU80IIatZHQGKc' $r3, $r6;
        android.view.InsetsState $r4, $r7;
        android.view.ImeInsetsSourceConsumer r8;
        android.view.InsetsSourceConsumer r9;
        java.util.function.Supplier r10, r11;

        r0 := @parameter0: android.view.InsetsController;

        r1 := @parameter1: java.lang.Integer;

        $i0 = virtualinvoke r1.<java.lang.Integer: int intValue()>();

        if $i0 != 13 goto label1;

        r8 = new android.view.ImeInsetsSourceConsumer;

        $r7 = r0.<android.view.InsetsController: android.view.InsetsState mState>;

        $r6 = <android.view._$$Lambda$9vBfnQOmNnsc9WU80IIatZHQGKc: android.view.'-$$Lambda$9vBfnQOmNnsc9WU80IIatZHQGKc' INSTANCE>;

        r10 = (java.util.function.Supplier) $r6;

        specialinvoke r8.<android.view.ImeInsetsSourceConsumer: void <init>(android.view.InsetsState,java.util.function.Supplier,android.view.InsetsController)>($r7, r10, r0);

        return r8;

     label1:
        r9 = new android.view.InsetsSourceConsumer;

        $i1 = virtualinvoke r1.<java.lang.Integer: int intValue()>();

        $r4 = r0.<android.view.InsetsController: android.view.InsetsState mState>;

        $r3 = <android.view._$$Lambda$9vBfnQOmNnsc9WU80IIatZHQGKc: android.view.'-$$Lambda$9vBfnQOmNnsc9WU80IIatZHQGKc' INSTANCE>;

        r11 = (java.util.function.Supplier) $r3;

        specialinvoke r9.<android.view.InsetsSourceConsumer: void <init>(int,android.view.InsetsState,java.util.function.Supplier,android.view.InsetsController)>($i1, $r4, r11, r0);

        return r9;
    }

    static android.graphics.Insets lambda$static$0(float, android.graphics.Insets, android.graphics.Insets)
    {
        float f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16;
        android.graphics.Insets r0, r1, $r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19;

        f0 := @parameter0: float;

        r0 := @parameter1: android.graphics.Insets;

        r1 := @parameter2: android.graphics.Insets;

        $i0 = r0.<android.graphics.Insets: int left>;

        $f3 = (float) $i0;

        $i2 = r1.<android.graphics.Insets: int left>;

        $i1 = r0.<android.graphics.Insets: int left>;

        $i3 = $i2 - $i1;

        $f1 = (float) $i3;

        $f2 = $f1 * f0;

        $f4 = $f3 + $f2;

        $i19 = (int) $f4;

        $i4 = r0.<android.graphics.Insets: int top>;

        $f7 = (float) $i4;

        $i6 = r1.<android.graphics.Insets: int top>;

        $i5 = r0.<android.graphics.Insets: int top>;

        $i7 = $i6 - $i5;

        $f5 = (float) $i7;

        $f6 = $f5 * f0;

        $f8 = $f7 + $f6;

        $i18 = (int) $f8;

        $i8 = r0.<android.graphics.Insets: int right>;

        $f11 = (float) $i8;

        $i10 = r1.<android.graphics.Insets: int right>;

        $i9 = r0.<android.graphics.Insets: int right>;

        $i11 = $i10 - $i9;

        $f9 = (float) $i11;

        $f10 = $f9 * f0;

        $f12 = $f11 + $f10;

        $i17 = (int) $f12;

        $i12 = r0.<android.graphics.Insets: int bottom>;

        $f15 = (float) $i12;

        $i14 = r1.<android.graphics.Insets: int bottom>;

        $i13 = r0.<android.graphics.Insets: int bottom>;

        $i15 = $i14 - $i13;

        $f13 = (float) $i15;

        $f14 = $f13 * f0;

        $f16 = $f15 + $f14;

        $i16 = (int) $f16;

        $r2 = staticinvoke <android.graphics.Insets: android.graphics.Insets of(int,int,int,int)>($i19, $i18, $i17, $i16);

        return $r2;
    }

    private void showDirectly(int)
    {
        android.view.InsetsController r0;
        android.util.ArraySet r1;
        int $i0, $i1, i2, i3;
        java.lang.Object $r2;
        java.lang.Integer $r3;
        android.view.InsetsSourceConsumer $r4;

        r0 := @this: android.view.InsetsController;

        i2 := @parameter0: int;

        r1 = staticinvoke <android.view.InsetsState: android.util.ArraySet toInternalType(int)>(i2);

        $i0 = virtualinvoke r1.<android.util.ArraySet: int size()>();

        i3 = $i0 - 1;

     label1:
        if i3 < 0 goto label2;

        $r2 = virtualinvoke r1.<android.util.ArraySet: java.lang.Object valueAt(int)>(i3);

        $r3 = (java.lang.Integer) $r2;

        $i1 = virtualinvoke $r3.<java.lang.Integer: int intValue()>();

        $r4 = virtualinvoke r0.<android.view.InsetsController: android.view.InsetsSourceConsumer getSourceConsumer(int)>($i1);

        virtualinvoke $r4.<android.view.InsetsSourceConsumer: void show(boolean)>(0);

        i3 = i3 + -1;

        goto label1;

     label2:
        return;
    }

    private void updateDisabledUserAnimationTypes(int)
    {
        android.view.InsetsController r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, i7;
        android.view.InsetsSourceConsumer r1;
        android.util.SparseArray $r2, $r3;
        java.lang.Object $r4;
        android.view.InsetsSourceControl $r5;
        java.lang.Runnable $r6, $r8;
        android.os.Handler $r7, $r9;

        r0 := @this: android.view.InsetsController;

        i0 := @parameter0: int;

        $i2 = r0.<android.view.InsetsController: int mDisabledUserAnimationInsetsTypes>;

        i1 = $i2 ^ i0;

        if i1 == 0 goto label4;

        $r2 = r0.<android.view.InsetsController: android.util.SparseArray mSourceConsumers>;

        $i3 = virtualinvoke $r2.<android.util.SparseArray: int size()>();

        i7 = $i3 - 1;

     label1:
        if i7 < 0 goto label3;

        $r3 = r0.<android.view.InsetsController: android.util.SparseArray mSourceConsumers>;

        $r4 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object valueAt(int)>(i7);

        r1 = (android.view.InsetsSourceConsumer) $r4;

        $r5 = virtualinvoke r1.<android.view.InsetsSourceConsumer: android.view.InsetsSourceControl getControl()>();

        if $r5 == null goto label2;

        $i4 = virtualinvoke r1.<android.view.InsetsSourceConsumer: int getType()>();

        $i5 = staticinvoke <android.view.InsetsState: int toPublicType(int)>($i4);

        $i6 = $i5 & i1;

        if $i6 == 0 goto label2;

        $r7 = r0.<android.view.InsetsController: android.os.Handler mHandler>;

        $r6 = r0.<android.view.InsetsController: java.lang.Runnable mInvokeControllableInsetsChangedListeners>;

        virtualinvoke $r7.<android.os.Handler: void removeCallbacks(java.lang.Runnable)>($r6);

        $r9 = r0.<android.view.InsetsController: android.os.Handler mHandler>;

        $r8 = r0.<android.view.InsetsController: java.lang.Runnable mInvokeControllableInsetsChangedListeners>;

        virtualinvoke $r9.<android.os.Handler: boolean post(java.lang.Runnable)>($r8);

        goto label3;

     label2:
        i7 = i7 + -1;

        goto label1;

     label3:
        r0.<android.view.InsetsController: int mDisabledUserAnimationInsetsTypes> = i0;

     label4:
        return;
    }

    private void updateRequestedState()
    {
        android.view.InsetsController r0;
        int i0, $i1, i2;
        android.util.SparseArray $r1, $r4;
        android.view.InsetsState $r2, $r7, $r8, $r10, $r13;
        android.view.InsetsController$Host $r3;
        java.lang.Object $r5;
        android.view.InsetsSourceControl $r6;
        android.view.InsetsSource $r9, $r11, $r12, r15;
        boolean $z0, $z1, z2, z3;
        android.view.InsetsSourceConsumer r14;

        r0 := @this: android.view.InsetsController;

        z2 = 0;

        $r1 = r0.<android.view.InsetsController: android.util.SparseArray mSourceConsumers>;

        $i1 = virtualinvoke $r1.<android.util.SparseArray: int size()>();

        i2 = $i1 - 1;

     label1:
        if i2 < 0 goto label5;

        $r4 = r0.<android.view.InsetsController: android.util.SparseArray mSourceConsumers>;

        $r5 = virtualinvoke $r4.<android.util.SparseArray: java.lang.Object valueAt(int)>(i2);

        r14 = (android.view.InsetsSourceConsumer) $r5;

        i0 = virtualinvoke r14.<android.view.InsetsSourceConsumer: int getType()>();

        if i0 != 2 goto label2;

        z3 = z2;

        goto label4;

     label2:
        z3 = z2;

        $r6 = virtualinvoke r14.<android.view.InsetsSourceConsumer: android.view.InsetsSourceControl getControl()>();

        if $r6 == null goto label4;

        $r7 = r0.<android.view.InsetsController: android.view.InsetsState mState>;

        r15 = virtualinvoke $r7.<android.view.InsetsState: android.view.InsetsSource getSource(int)>(i0);

        z3 = z2;

        $r8 = r0.<android.view.InsetsController: android.view.InsetsState mRequestedState>;

        $r9 = virtualinvoke $r8.<android.view.InsetsState: android.view.InsetsSource peekSource(int)>(i0);

        $z0 = virtualinvoke r15.<android.view.InsetsSource: boolean equals(java.lang.Object)>($r9);

        if $z0 != 0 goto label3;

        $r13 = r0.<android.view.InsetsController: android.view.InsetsState mRequestedState>;

        $r12 = new android.view.InsetsSource;

        specialinvoke $r12.<android.view.InsetsSource: void <init>(android.view.InsetsSource)>(r15);

        virtualinvoke $r13.<android.view.InsetsState: void addSource(android.view.InsetsSource)>($r12);

        z3 = 1;

     label3:
        $r10 = r0.<android.view.InsetsController: android.view.InsetsState mLastDispatchedState>;

        $r11 = virtualinvoke $r10.<android.view.InsetsState: android.view.InsetsSource peekSource(int)>(i0);

        $z1 = virtualinvoke r15.<android.view.InsetsSource: boolean equals(java.lang.Object)>($r11);

        if $z1 != 0 goto label4;

        z3 = 1;

     label4:
        i2 = i2 + -1;

        z2 = z3;

        goto label1;

     label5:
        if z2 != 0 goto label6;

        return;

     label6:
        $r3 = r0.<android.view.InsetsController: android.view.InsetsController$Host mHost>;

        $r2 = r0.<android.view.InsetsController: android.view.InsetsState mRequestedState>;

        interfaceinvoke $r3.<android.view.InsetsController$Host: void onInsetsModified(android.view.InsetsState)>($r2);

        return;
    }

    private void updateState(android.view.InsetsState)
    {
        android.view.InsetsController r0;
        android.view.InsetsState r1, $r4, $r8, $r15, $r18;
        int[] r2;
        android.view.InsetsSource r3, $r9, $r16, $r17;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, i12, i13, i14, i15, i16, i17;
        android.graphics.Rect $r5, $r10, $r11, $r12, $r13, $r14;
        android.view._$$Lambda$InsetsController$Q7zlA88P3JZ91fuDPXoGY_WBbiw $r6;
        android.os.Handler $r7;
        boolean $z1;
        android.view.InsetsSourceConsumer $r19;

        r0 := @this: android.view.InsetsController;

        r1 := @parameter0: android.view.InsetsState;

        $r4 = r0.<android.view.InsetsController: android.view.InsetsState mState>;

        $r5 = virtualinvoke r1.<android.view.InsetsState: android.graphics.Rect getDisplayFrame()>();

        virtualinvoke $r4.<android.view.InsetsState: void setDisplayFrame(android.graphics.Rect)>($r5);

        i12 = 0;

        r2 = newarray (int)[1];

        r2[0] = 0;

        i13 = 0;

     label01:
        if i13 >= 16 goto label05;

        r3 = virtualinvoke r1.<android.view.InsetsState: android.view.InsetsSource peekSource(int)>(i13);

        if r3 != null goto label02;

        goto label04;

     label02:
        i0 = virtualinvoke r0.<android.view.InsetsController: int getAnimationType(int)>(i13);

        i14 = i12;

        i15 = i0;

        $z1 = virtualinvoke r3.<android.view.InsetsSource: boolean isUserControllable()>();

        if $z1 != 0 goto label03;

        i1 = staticinvoke <android.view.InsetsState: int toPublicType(int)>(i13);

        i16 = i12 | i1;

        i14 = i16;

        i15 = i0;

        if i0 != 2 goto label03;

        i15 = -1;

        $i10 = r2[0];

        $i11 = $i10 | i1;

        r2[0] = $i11;

        i14 = i16;

     label03:
        $r19 = virtualinvoke r0.<android.view.InsetsController: android.view.InsetsSourceConsumer getSourceConsumer(int)>(i13);

        virtualinvoke $r19.<android.view.InsetsSourceConsumer: void updateSource(android.view.InsetsSource,int)>(r3, i15);

        i12 = i14;

     label04:
        i13 = i13 + 1;

        goto label01;

     label05:
        i17 = 0;

     label06:
        if i17 >= 16 goto label09;

        $r15 = r0.<android.view.InsetsController: android.view.InsetsState mState>;

        $r16 = virtualinvoke $r15.<android.view.InsetsState: android.view.InsetsSource peekSource(int)>(i17);

        if $r16 != null goto label07;

        goto label08;

     label07:
        $r17 = virtualinvoke r1.<android.view.InsetsState: android.view.InsetsSource peekSource(int)>(i17);

        if $r17 != null goto label08;

        $r18 = r0.<android.view.InsetsController: android.view.InsetsState mState>;

        virtualinvoke $r18.<android.view.InsetsState: void removeSource(int)>(i17);

     label08:
        i17 = i17 + 1;

        goto label06;

     label09:
        $i2 = r0.<android.view.InsetsController: int mCaptionInsetsHeight>;

        if $i2 == 0 goto label10;

        $r8 = r0.<android.view.InsetsController: android.view.InsetsState mState>;

        $r9 = virtualinvoke $r8.<android.view.InsetsState: android.view.InsetsSource getSource(int)>(2);

        $r10 = new android.graphics.Rect;

        $r11 = r0.<android.view.InsetsController: android.graphics.Rect mFrame>;

        $i9 = $r11.<android.graphics.Rect: int left>;

        $r12 = r0.<android.view.InsetsController: android.graphics.Rect mFrame>;

        $i8 = $r12.<android.graphics.Rect: int top>;

        $r13 = r0.<android.view.InsetsController: android.graphics.Rect mFrame>;

        $i7 = $r13.<android.graphics.Rect: int right>;

        $r14 = r0.<android.view.InsetsController: android.graphics.Rect mFrame>;

        $i5 = $r14.<android.graphics.Rect: int top>;

        $i4 = r0.<android.view.InsetsController: int mCaptionInsetsHeight>;

        $i6 = $i5 + $i4;

        specialinvoke $r10.<android.graphics.Rect: void <init>(int,int,int,int)>($i9, $i8, $i7, $i6);

        virtualinvoke $r9.<android.view.InsetsSource: void setFrame(android.graphics.Rect)>($r10);

     label10:
        specialinvoke r0.<android.view.InsetsController: void updateDisabledUserAnimationTypes(int)>(i12);

        $i3 = r2[0];

        if $i3 == 0 goto label11;

        $r7 = r0.<android.view.InsetsController: android.os.Handler mHandler>;

        $r6 = new android.view._$$Lambda$InsetsController$Q7zlA88P3JZ91fuDPXoGY_WBbiw;

        specialinvoke $r6.<android.view._$$Lambda$InsetsController$Q7zlA88P3JZ91fuDPXoGY_WBbiw: void <init>(android.view.InsetsController,int[])>(r0, r2);

        virtualinvoke $r7.<android.os.Handler: boolean post(java.lang.Runnable)>($r6);

     label11:
        return;
    }

    public void addOnControllableInsetsChangedListener(android.view.WindowInsetsController$OnControllableInsetsChangedListener)
    {
        android.view.InsetsController r0;
        android.view.WindowInsetsController$OnControllableInsetsChangedListener r1;
        java.util.ArrayList $r3;
        int $i0;

        r0 := @this: android.view.InsetsController;

        r1 := @parameter0: android.view.WindowInsetsController$OnControllableInsetsChangedListener;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r1);

        $r3 = r0.<android.view.InsetsController: java.util.ArrayList mControllableInsetsChangedListeners>;

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        $i0 = specialinvoke r0.<android.view.InsetsController: int calculateControllableTypes()>();

        interfaceinvoke r1.<android.view.WindowInsetsController$OnControllableInsetsChangedListener: void onControllableInsetsChanged(android.view.WindowInsetsController,int)>(r0, $i0);

        return;
    }

    public void applyAnimation(int, boolean, boolean)
    {
        android.view.InsetsController r0;
        int i0, $i2, i3, i4;
        boolean z0, z1, z2, $z3, $z4, $z5, $z6;
        android.graphics.Rect r2;
        long l1;
        android.view.animation.Interpolator r3;
        android.view.InsetsController$Host $r4, $r6;
        android.view.InsetsController$InternalAnimationControlListener $r5;
        android.view.InsetsState $r7;

        r0 := @this: android.view.InsetsController;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        if i0 != 0 goto label1;

        return;

     label1:
        $r4 = r0.<android.view.InsetsController: android.view.InsetsController$Host mHost>;

        z2 = interfaceinvoke $r4.<android.view.InsetsController$Host: boolean hasAnimationCallbacks()>();

        $r5 = new android.view.InsetsController$InternalAnimationControlListener;

        $z3 = r0.<android.view.InsetsController: boolean mAnimationsDisabled>;

        $r6 = r0.<android.view.InsetsController: android.view.InsetsController$Host mHost>;

        $i2 = interfaceinvoke $r6.<android.view.InsetsController$Host: int dipToPx(int)>(-80);

        specialinvoke $r5.<android.view.InsetsController$InternalAnimationControlListener: void <init>(boolean,boolean,int,boolean,int)>(z0, z2, i0, $z3, $i2);

        $r7 = r0.<android.view.InsetsController: android.view.InsetsState mState>;

        r2 = virtualinvoke $r7.<android.view.InsetsState: android.graphics.Rect getDisplayFrame()>();

        l1 = virtualinvoke $r5.<android.view.InsetsController$InternalAnimationControlListener: long getDurationMs()>();

        r3 = virtualinvoke $r5.<android.view.InsetsController$InternalAnimationControlListener: android.view.animation.Interpolator getInterpolator()>();

        $z6 = z0 ^ 1;

        $z5 = z0 ^ 1;

        $z4 = z2 ^ 1;

        i3 = (int) $z6;

        i4 = (int) $z5;

        specialinvoke r0.<android.view.InsetsController: void controlAnimationUnchecked(int,android.os.CancellationSignal,android.view.WindowInsetsAnimationControlListener,android.graphics.Rect,boolean,long,android.view.animation.Interpolator,int,int,boolean)>(i0, null, $r5, r2, z1, l1, r3, i3, i4, $z4);

        return;
    }

    public void applyImeVisibility(boolean)
    {
        android.view.InsetsController r0;
        boolean z0;

        r0 := @this: android.view.InsetsController;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        virtualinvoke r0.<android.view.InsetsController: void show(int,boolean)>(8, 1);

        goto label2;

     label1:
        virtualinvoke r0.<android.view.InsetsController: void hide(int)>(8);

     label2:
        return;
    }

    public transient void applySurfaceParams(android.view.SyncRtSurfaceTransactionApplier$SurfaceParams[])
    {
        android.view.InsetsController r0;
        android.view.SyncRtSurfaceTransactionApplier$SurfaceParams[] r1;
        android.view.InsetsController$Host $r2;

        r0 := @this: android.view.InsetsController;

        r1 := @parameter0: android.view.SyncRtSurfaceTransactionApplier$SurfaceParams[];

        $r2 = r0.<android.view.InsetsController: android.view.InsetsController$Host mHost>;

        interfaceinvoke $r2.<android.view.InsetsController$Host: void applySurfaceParams(android.view.SyncRtSurfaceTransactionApplier$SurfaceParams[])>(r1);

        return;
    }

    public android.view.WindowInsets calculateInsets(boolean, boolean, android.view.DisplayCutout, int, int, int)
    {
        android.view.InsetsController r0;
        boolean z0, z1;
        int i0, i1, i2;
        android.graphics.Rect $r1;
        android.view.InsetsState $r2;
        android.view.DisplayCutout r3;
        android.view.WindowInsets r4;

        r0 := @this: android.view.InsetsController;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        r3 := @parameter2: android.view.DisplayCutout;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        i2 := @parameter5: int;

        r0.<android.view.InsetsController: int mLastLegacySoftInputMode> = i0;

        r0.<android.view.InsetsController: int mLastLegacyWindowFlags> = i1;

        r0.<android.view.InsetsController: int mLastLegacySystemUiFlags> = i2;

        r0.<android.view.InsetsController: android.view.DisplayCutout mLastDisplayCutout> = r3;

        $r2 = r0.<android.view.InsetsController: android.view.InsetsState mState>;

        $r1 = r0.<android.view.InsetsController: android.graphics.Rect mFrame>;

        r4 = virtualinvoke $r2.<android.view.InsetsState: android.view.WindowInsets calculateInsets(android.graphics.Rect,android.view.InsetsState,boolean,boolean,android.view.DisplayCutout,int,int,int,android.util.SparseIntArray)>($r1, null, z0, z1, r3, i0, i1, i2, null);

        r0.<android.view.InsetsController: android.view.WindowInsets mLastInsets> = r4;

        return r4;
    }

    public android.graphics.Rect calculateVisibleInsets(int)
    {
        android.view.InsetsController r0;
        int i0;
        android.graphics.Rect $r1, $r3;
        android.view.InsetsState $r2;

        r0 := @this: android.view.InsetsController;

        i0 := @parameter0: int;

        $r2 = r0.<android.view.InsetsController: android.view.InsetsState mState>;

        $r1 = r0.<android.view.InsetsController: android.graphics.Rect mFrame>;

        $r3 = virtualinvoke $r2.<android.view.InsetsState: android.graphics.Rect calculateVisibleInsets(android.graphics.Rect,int)>($r1, i0);

        return $r3;
    }

    public void cancelExistingAnimations()
    {
        android.view.InsetsController r0;
        int $i0;

        r0 := @this: android.view.InsetsController;

        $i0 = staticinvoke <android.view.WindowInsets$Type: int all()>();

        specialinvoke r0.<android.view.InsetsController: void cancelExistingControllers(int)>($i0);

        return;
    }

    public void controlWindowInsetsAnimation(int, long, android.view.animation.Interpolator, android.os.CancellationSignal, android.view.WindowInsetsAnimationControlListener)
    {
        android.view.InsetsController r0;
        int i0;
        long l1;
        android.view.animation.Interpolator r1;
        android.os.CancellationSignal r2;
        android.view.WindowInsetsAnimationControlListener r3;

        r0 := @this: android.view.InsetsController;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        r1 := @parameter2: android.view.animation.Interpolator;

        r2 := @parameter3: android.os.CancellationSignal;

        r3 := @parameter4: android.view.WindowInsetsAnimationControlListener;

        specialinvoke r0.<android.view.InsetsController: void controlWindowInsetsAnimation(int,android.os.CancellationSignal,android.view.WindowInsetsAnimationControlListener,boolean,long,android.view.animation.Interpolator,int)>(i0, r2, r3, 0, l1, r1, 2);

        return;
    }

    public void dispatchAnimationEnd(android.view.WindowInsetsAnimation)
    {
        android.view.InsetsController r0;
        android.view.WindowInsetsAnimation r1;
        java.lang.StringBuilder $r3;
        int $i0, $i1;
        java.lang.String $r5, $r7;
        android.view.InsetsController$Host $r8;

        r0 := @this: android.view.InsetsController;

        r1 := @parameter0: android.view.WindowInsetsAnimation;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("InsetsAnimation: ");

        $i0 = virtualinvoke r1.<android.view.WindowInsetsAnimation: int getTypeMask()>();

        $r5 = staticinvoke <android.view.WindowInsets$Type: java.lang.String toString(int)>($i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $i1 = virtualinvoke r1.<android.view.WindowInsetsAnimation: int getTypeMask()>();

        staticinvoke <android.os.Trace: void asyncTraceEnd(long,java.lang.String,int)>(8L, $r7, $i1);

        $r8 = r0.<android.view.InsetsController: android.view.InsetsController$Host mHost>;

        interfaceinvoke $r8.<android.view.InsetsController$Host: void dispatchWindowInsetsAnimationEnd(android.view.WindowInsetsAnimation)>(r1);

        return;
    }

    void dump(java.lang.String, java.io.PrintWriter)
    {
        android.view.InsetsController r0;
        java.lang.String r1, $r8;
        java.io.PrintWriter r2;
        android.view.InsetsState r3;
        java.lang.StringBuilder $r5;

        r0 := @this: android.view.InsetsController;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.io.PrintWriter;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>(r1);

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("InsetsController:");

        r3 = r0.<android.view.InsetsController: android.view.InsetsState mState>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r3.<android.view.InsetsState: void dump(java.lang.String,java.io.PrintWriter)>($r8, r2);

        return;
    }

    public int getAnimationType(int)
    {
        android.view.InsetsController r0;
        int i0, $i1, $i2, i3;
        java.util.ArrayList $r1, $r2, $r6;
        java.lang.Object $r3, $r7;
        android.view.InsetsController$RunningAnimation $r4, $r8;
        android.view.InsetsAnimationControlRunner $r5;
        boolean $z0;

        r0 := @this: android.view.InsetsController;

        i0 := @parameter0: int;

        $r1 = r0.<android.view.InsetsController: java.util.ArrayList mRunningAnimations>;

        $i1 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        i3 = $i1 - 1;

     label1:
        if i3 < 0 goto label3;

        $r2 = r0.<android.view.InsetsController: java.util.ArrayList mRunningAnimations>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        $r4 = (android.view.InsetsController$RunningAnimation) $r3;

        $r5 = $r4.<android.view.InsetsController$RunningAnimation: android.view.InsetsAnimationControlRunner runner>;

        $z0 = interfaceinvoke $r5.<android.view.InsetsAnimationControlRunner: boolean controlsInternalType(int)>(i0);

        if $z0 == 0 goto label2;

        $r6 = r0.<android.view.InsetsController: java.util.ArrayList mRunningAnimations>;

        $r7 = virtualinvoke $r6.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        $r8 = (android.view.InsetsController$RunningAnimation) $r7;

        $i2 = $r8.<android.view.InsetsController$RunningAnimation: int type>;

        return $i2;

     label2:
        i3 = i3 + -1;

        goto label1;

     label3:
        return -1;
    }

    android.view.InsetsController$Host getHost()
    {
        android.view.InsetsController r0;
        android.view.InsetsController$Host $r1;

        r0 := @this: android.view.InsetsController;

        $r1 = r0.<android.view.InsetsController: android.view.InsetsController$Host mHost>;

        return $r1;
    }

    public android.view.InsetsState getLastDispatchedState()
    {
        android.view.InsetsController r0;
        android.view.InsetsState $r1;

        r0 := @this: android.view.InsetsController;

        $r1 = r0.<android.view.InsetsController: android.view.InsetsState mLastDispatchedState>;

        return $r1;
    }

    public android.view.InsetsSourceConsumer getSourceConsumer(int)
    {
        android.view.InsetsController r0;
        int i0;
        android.util.SparseArray $r1, $r6;
        java.lang.Object $r2, $r5;
        java.util.function.BiFunction $r3;
        java.lang.Integer $r4;
        android.view.InsetsSourceConsumer r7, r8;

        r0 := @this: android.view.InsetsController;

        i0 := @parameter0: int;

        $r1 = r0.<android.view.InsetsController: android.util.SparseArray mSourceConsumers>;

        $r2 = virtualinvoke $r1.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r7 = (android.view.InsetsSourceConsumer) $r2;

        if r7 == null goto label1;

        return r7;

     label1:
        $r3 = r0.<android.view.InsetsController: java.util.function.BiFunction mConsumerCreator>;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r5 = interfaceinvoke $r3.<java.util.function.BiFunction: java.lang.Object apply(java.lang.Object,java.lang.Object)>(r0, $r4);

        r8 = (android.view.InsetsSourceConsumer) $r5;

        $r6 = r0.<android.view.InsetsController: android.util.SparseArray mSourceConsumers>;

        virtualinvoke $r6.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, r8);

        return r8;
    }

    public android.view.InsetsState getState()
    {
        android.view.InsetsController r0;
        android.view.InsetsState $r1;

        r0 := @this: android.view.InsetsController;

        $r1 = r0.<android.view.InsetsController: android.view.InsetsState mState>;

        return $r1;
    }

    public int getSystemBarsAppearance()
    {
        android.view.InsetsController r0;
        android.view.InsetsController$Host $r1;
        int $i0;

        r0 := @this: android.view.InsetsController;

        $r1 = r0.<android.view.InsetsController: android.view.InsetsController$Host mHost>;

        $i0 = interfaceinvoke $r1.<android.view.InsetsController$Host: int getSystemBarsAppearance()>();

        return $i0;
    }

    public int getSystemBarsBehavior()
    {
        android.view.InsetsController r0;
        android.view.InsetsController$Host $r1;
        int $i0;

        r0 := @this: android.view.InsetsController;

        $r1 = r0.<android.view.InsetsController: android.view.InsetsController$Host mHost>;

        $i0 = interfaceinvoke $r1.<android.view.InsetsController$Host: int getSystemBarsBehavior()>();

        return $i0;
    }

    public void hide(int)
    {
        android.view.InsetsController r0;
        int i0;

        r0 := @this: android.view.InsetsController;

        i0 := @parameter0: int;

        virtualinvoke r0.<android.view.InsetsController: void hide(int,boolean)>(i0, 0);

        return;
    }

    void hide(int, boolean)
    {
        android.view.InsetsController r0;
        boolean z0, $z1;
        android.util.ArraySet r1;
        int i0, $i1, $i2, $i3, i4, i5, i6, i7, i8;
        android.view.InsetsSourceConsumer r2;
        java.lang.Object $r3;
        java.lang.Integer $r4;

        r0 := @this: android.view.InsetsController;

        i4 := @parameter0: int;

        z0 := @parameter1: boolean;

        i5 = 0;

        r1 = staticinvoke <android.view.InsetsState: android.util.ArraySet toInternalType(int)>(i4);

        $i1 = virtualinvoke r1.<android.util.ArraySet: int size()>();

        i6 = $i1 - 1;

     label1:
        if i6 < 0 goto label5;

        $r3 = virtualinvoke r1.<android.util.ArraySet: java.lang.Object valueAt(int)>(i6);

        $r4 = (java.lang.Integer) $r3;

        i7 = virtualinvoke $r4.<java.lang.Integer: int intValue()>();

        i0 = virtualinvoke r0.<android.view.InsetsController: int getAnimationType(int)>(i7);

        r2 = virtualinvoke r0.<android.view.InsetsController: android.view.InsetsSourceConsumer getSourceConsumer(int)>(i7);

        $z1 = virtualinvoke r2.<android.view.InsetsSourceConsumer: boolean isRequestedVisible()>();

        if $z1 != 0 goto label2;

        i8 = i5;

        if i0 == -1 goto label4;

     label2:
        if i0 != 1 goto label3;

        i8 = i5;

        goto label4;

     label3:
        $i2 = virtualinvoke r2.<android.view.InsetsSourceConsumer: int getType()>();

        $i3 = staticinvoke <android.view.InsetsState: int toPublicType(int)>($i2);

        i8 = i5 | $i3;

     label4:
        i6 = i6 + -1;

        i5 = i8;

        goto label1;

     label5:
        virtualinvoke r0.<android.view.InsetsController: void applyAnimation(int,boolean,boolean)>(i5, 0, z0);

        return;
    }

    public boolean isRequestedVisible(int)
    {
        android.view.InsetsController r0;
        int i0;
        android.view.InsetsSourceConsumer $r1;
        boolean $z0;

        r0 := @this: android.view.InsetsController;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<android.view.InsetsController: android.view.InsetsSourceConsumer getSourceConsumer(int)>(i0);

        $z0 = virtualinvoke $r1.<android.view.InsetsSourceConsumer: boolean isRequestedVisible()>();

        return $z0;
    }

    public void lambda$controlAnimationUnchecked$4$InsetsController(android.view.InsetsController$PendingControlRequest)
    {
        android.view.InsetsController r0;
        android.view.InsetsController$PendingControlRequest r1, $r2;

        r0 := @this: android.view.InsetsController;

        r1 := @parameter0: android.view.InsetsController$PendingControlRequest;

        $r2 = r0.<android.view.InsetsController: android.view.InsetsController$PendingControlRequest mPendingImeControlRequest>;

        if $r2 != r1 goto label1;

        specialinvoke r0.<android.view.InsetsController: void abortPendingImeControlRequest()>();

     label1:
        return;
    }

    public void lambda$controlAnimationUnchecked$5$InsetsController(android.view.InsetsAnimationControlRunner)
    {
        android.view.InsetsController r0;
        android.view.InsetsAnimationControlRunner r1;

        r0 := @this: android.view.InsetsController;

        r1 := @parameter0: android.view.InsetsAnimationControlRunner;

        specialinvoke r0.<android.view.InsetsController: void cancelAnimation(android.view.InsetsAnimationControlRunner,boolean)>(r1, 1);

        return;
    }

    public void lambda$new$2$InsetsController()
    {
        android.view.InsetsController r0;
        java.util.ArrayList $r2, $r3, $r4, $r7, $r16, $r17, $r21, $r23, $r24;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        android.view.InsetsState $r5, $r6, $r10;
        int $i0, $i1, $i2, $i3, $i4, i5, i6;
        android.view.WindowInsets $r8, $r11, r29;
        android.graphics.Rect $r9;
        android.view.DisplayCutout $r12;
        java.util.List $r13;
        android.view.InsetsController$Host $r14;
        java.lang.Object $r18, $r22;
        android.view.InsetsAnimationControlImpl $r19, r28;
        android.view.WindowInsetsAnimation $r20, $r25;
        android.view.InsetsController$RunningAnimation r26;
        android.view.InsetsAnimationControlRunner r27;

        r0 := @this: android.view.InsetsController;

        r0.<android.view.InsetsController: boolean mAnimCallbackScheduled> = 0;

        $r2 = r0.<android.view.InsetsController: java.util.ArrayList mRunningAnimations>;

        $z0 = virtualinvoke $r2.<java.util.ArrayList: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        $r3 = r0.<android.view.InsetsController: java.util.ArrayList mTmpFinishedControls>;

        virtualinvoke $r3.<java.util.ArrayList: void clear()>();

        $r4 = r0.<android.view.InsetsController: java.util.ArrayList mTmpRunningAnims>;

        virtualinvoke $r4.<java.util.ArrayList: void clear()>();

        $r5 = new android.view.InsetsState;

        $r6 = r0.<android.view.InsetsController: android.view.InsetsState mState>;

        specialinvoke $r5.<android.view.InsetsState: void <init>(android.view.InsetsState,boolean)>($r6, 1);

        $r7 = r0.<android.view.InsetsController: java.util.ArrayList mRunningAnimations>;

        $i0 = virtualinvoke $r7.<java.util.ArrayList: int size()>();

        i5 = $i0 - 1;

     label2:
        if i5 < 0 goto label5;

        $r21 = r0.<android.view.InsetsController: java.util.ArrayList mRunningAnimations>;

        $r22 = virtualinvoke $r21.<java.util.ArrayList: java.lang.Object get(int)>(i5);

        r26 = (android.view.InsetsController$RunningAnimation) $r22;

        r27 = r26.<android.view.InsetsController$RunningAnimation: android.view.InsetsAnimationControlRunner runner>;

        $z3 = r27 instanceof android.view.InsetsAnimationControlImpl;

        if $z3 == 0 goto label4;

        r28 = (android.view.InsetsAnimationControlImpl) r27;

        $z4 = r26.<android.view.InsetsController$RunningAnimation: boolean startDispatched>;

        if $z4 == 0 goto label3;

        $r24 = r0.<android.view.InsetsController: java.util.ArrayList mTmpRunningAnims>;

        $r25 = virtualinvoke r28.<android.view.InsetsAnimationControlImpl: android.view.WindowInsetsAnimation getAnimation()>();

        virtualinvoke $r24.<java.util.ArrayList: boolean add(java.lang.Object)>($r25);

     label3:
        $z5 = virtualinvoke r28.<android.view.InsetsAnimationControlImpl: boolean applyChangeInsets(android.view.InsetsState)>($r5);

        if $z5 == 0 goto label4;

        $r23 = r0.<android.view.InsetsController: java.util.ArrayList mTmpFinishedControls>;

        virtualinvoke $r23.<java.util.ArrayList: boolean add(java.lang.Object)>(r28);

     label4:
        i5 = i5 + -1;

        goto label2;

     label5:
        $r9 = r0.<android.view.InsetsController: android.graphics.Rect mFrame>;

        $r10 = r0.<android.view.InsetsController: android.view.InsetsState mState>;

        $r8 = r0.<android.view.InsetsController: android.view.WindowInsets mLastInsets>;

        $z1 = virtualinvoke $r8.<android.view.WindowInsets: boolean isRound()>();

        $r11 = r0.<android.view.InsetsController: android.view.WindowInsets mLastInsets>;

        $z2 = virtualinvoke $r11.<android.view.WindowInsets: boolean shouldAlwaysConsumeSystemBars()>();

        $r12 = r0.<android.view.InsetsController: android.view.DisplayCutout mLastDisplayCutout>;

        $i3 = r0.<android.view.InsetsController: int mLastLegacySoftInputMode>;

        $i2 = r0.<android.view.InsetsController: int mLastLegacyWindowFlags>;

        $i1 = r0.<android.view.InsetsController: int mLastLegacySystemUiFlags>;

        r29 = virtualinvoke $r5.<android.view.InsetsState: android.view.WindowInsets calculateInsets(android.graphics.Rect,android.view.InsetsState,boolean,boolean,android.view.DisplayCutout,int,int,int,android.util.SparseIntArray)>($r9, $r10, $z1, $z2, $r12, $i3, $i2, $i1, null);

        $r14 = r0.<android.view.InsetsController: android.view.InsetsController$Host mHost>;

        $r13 = r0.<android.view.InsetsController: java.util.List mUnmodifiableTmpRunningAnims>;

        interfaceinvoke $r14.<android.view.InsetsController$Host: android.view.WindowInsets dispatchWindowInsetsAnimationProgress(android.view.WindowInsets,java.util.List)>(r29, $r13);

        $r16 = r0.<android.view.InsetsController: java.util.ArrayList mTmpFinishedControls>;

        $i4 = virtualinvoke $r16.<java.util.ArrayList: int size()>();

        i6 = $i4 - 1;

     label6:
        if i6 < 0 goto label7;

        $r17 = r0.<android.view.InsetsController: java.util.ArrayList mTmpFinishedControls>;

        $r18 = virtualinvoke $r17.<java.util.ArrayList: java.lang.Object get(int)>(i6);

        $r19 = (android.view.InsetsAnimationControlImpl) $r18;

        $r20 = virtualinvoke $r19.<android.view.InsetsAnimationControlImpl: android.view.WindowInsetsAnimation getAnimation()>();

        virtualinvoke r0.<android.view.InsetsController: void dispatchAnimationEnd(android.view.WindowInsetsAnimation)>($r20);

        i6 = i6 + -1;

        goto label6;

     label7:
        return;
    }

    public void lambda$startAnimation$6$InsetsController(android.view.InsetsAnimationControlImpl, int, android.view.WindowInsetsAnimation, android.view.WindowInsetsAnimation$Bounds, android.view.WindowInsetsAnimationControlListener)
    {
        android.view.InsetsController r0;
        android.view.InsetsAnimationControlImpl r1;
        int i0, $i1, i2;
        android.view.WindowInsetsAnimation r2;
        android.view.WindowInsetsAnimation$Bounds r3;
        android.view.WindowInsetsAnimationControlListener r4;
        boolean $z0;
        java.lang.StringBuilder $r5;
        java.lang.String $r7, $r9;
        java.util.ArrayList $r10, $r13;
        android.view.InsetsController$Host $r11;
        java.lang.Object $r14;
        android.view.InsetsAnimationControlRunner $r15;
        android.view.InsetsController$RunningAnimation r17;

        r0 := @this: android.view.InsetsController;

        r1 := @parameter0: android.view.InsetsAnimationControlImpl;

        i0 := @parameter1: int;

        r2 := @parameter2: android.view.WindowInsetsAnimation;

        r3 := @parameter3: android.view.WindowInsetsAnimation$Bounds;

        r4 := @parameter4: android.view.WindowInsetsAnimationControlListener;

        $z0 = virtualinvoke r1.<android.view.InsetsAnimationControlImpl: boolean isCancelled()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("InsetsAnimation: ");

        $r7 = staticinvoke <android.view.WindowInsets$Type: java.lang.String toString(int)>(i0);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.os.Trace: void asyncTraceBegin(long,java.lang.String,int)>(8L, $r9, i0);

        $r10 = r0.<android.view.InsetsController: java.util.ArrayList mRunningAnimations>;

        $i1 = virtualinvoke $r10.<java.util.ArrayList: int size()>();

        i2 = $i1 - 1;

     label2:
        if i2 < 0 goto label4;

        $r13 = r0.<android.view.InsetsController: java.util.ArrayList mRunningAnimations>;

        $r14 = virtualinvoke $r13.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r17 = (android.view.InsetsController$RunningAnimation) $r14;

        $r15 = r17.<android.view.InsetsController$RunningAnimation: android.view.InsetsAnimationControlRunner runner>;

        if $r15 != r1 goto label3;

        r17.<android.view.InsetsController$RunningAnimation: boolean startDispatched> = 1;

     label3:
        i2 = i2 + -1;

        goto label2;

     label4:
        $r11 = r0.<android.view.InsetsController: android.view.InsetsController$Host mHost>;

        interfaceinvoke $r11.<android.view.InsetsController$Host: android.view.WindowInsetsAnimation$Bounds dispatchWindowInsetsAnimationStart(android.view.WindowInsetsAnimation,android.view.WindowInsetsAnimation$Bounds)>(r2, r3);

        r0.<android.view.InsetsController: boolean mStartingAnimation> = 1;

        r1.<android.view.InsetsAnimationControlImpl: boolean mReadyDispatched> = 1;

        interfaceinvoke r4.<android.view.WindowInsetsAnimationControlListener: void onReady(android.view.WindowInsetsAnimationController,int)>(r1, i0);

        r0.<android.view.InsetsController: boolean mStartingAnimation> = 0;

        return;
    }

    public void lambda$updateState$3$InsetsController(int[])
    {
        android.view.InsetsController r0;
        int[] r1;
        int $i0;

        r0 := @this: android.view.InsetsController;

        r1 := @parameter0: int[];

        $i0 = r1[0];

        virtualinvoke r0.<android.view.InsetsController: void show(int)>($i0);

        return;
    }

    void notifyControlRevoked(android.view.InsetsSourceConsumer)
    {
        android.view.InsetsController r0;
        android.view.InsetsSourceConsumer r1;
        android.view.InsetsAnimationControlRunner r2;
        java.util.ArrayList $r3, $r4;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6;
        java.lang.Object $r5;
        android.view.InsetsController$RunningAnimation $r6;

        r0 := @this: android.view.InsetsController;

        r1 := @parameter0: android.view.InsetsSourceConsumer;

        $r3 = r0.<android.view.InsetsController: java.util.ArrayList mRunningAnimations>;

        $i0 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        i6 = $i0 - 1;

     label1:
        if i6 < 0 goto label3;

        $r4 = r0.<android.view.InsetsController: java.util.ArrayList mRunningAnimations>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(i6);

        $r6 = (android.view.InsetsController$RunningAnimation) $r5;

        r2 = $r6.<android.view.InsetsController$RunningAnimation: android.view.InsetsAnimationControlRunner runner>;

        $i2 = interfaceinvoke r2.<android.view.InsetsAnimationControlRunner: int getTypes()>();

        $i3 = virtualinvoke r1.<android.view.InsetsSourceConsumer: int getType()>();

        $i4 = staticinvoke <android.view.InsetsState: int toPublicType(int)>($i3);

        $i5 = $i2 & $i4;

        if $i5 == 0 goto label2;

        specialinvoke r0.<android.view.InsetsController: void cancelAnimation(android.view.InsetsAnimationControlRunner,boolean)>(r2, 1);

     label2:
        i6 = i6 + -1;

        goto label1;

     label3:
        $i1 = virtualinvoke r1.<android.view.InsetsSourceConsumer: int getType()>();

        if $i1 != 13 goto label4;

        specialinvoke r0.<android.view.InsetsController: void abortPendingImeControlRequest()>();

     label4:
        return;
    }

    public void notifyFinished(android.view.InsetsAnimationControlRunner, boolean)
    {
        android.view.InsetsController r0;
        android.view.InsetsAnimationControlRunner r1;
        boolean z0;
        int $i0, $i1, $i2;

        r0 := @this: android.view.InsetsController;

        r1 := @parameter0: android.view.InsetsAnimationControlRunner;

        z0 := @parameter1: boolean;

        specialinvoke r0.<android.view.InsetsController: void cancelAnimation(android.view.InsetsAnimationControlRunner,boolean)>(r1, 0);

        if z0 == 0 goto label1;

        $i2 = interfaceinvoke r1.<android.view.InsetsAnimationControlRunner: int getTypes()>();

        specialinvoke r0.<android.view.InsetsController: void showDirectly(int)>($i2);

        goto label2;

     label1:
        $i0 = interfaceinvoke r1.<android.view.InsetsAnimationControlRunner: int getTypes()>();

        $i1 = interfaceinvoke r1.<android.view.InsetsAnimationControlRunner: int getAnimationType()>();

        specialinvoke r0.<android.view.InsetsController: void hideDirectly(int,boolean,int)>($i0, 1, $i1);

     label2:
        return;
    }

    public void notifyVisibilityChanged()
    {
        android.view.InsetsController r0;
        android.view.InsetsController$Host $r1;

        r0 := @this: android.view.InsetsController;

        $r1 = r0.<android.view.InsetsController: android.view.InsetsController$Host mHost>;

        interfaceinvoke $r1.<android.view.InsetsController$Host: void notifyInsetsChanged()>();

        specialinvoke r0.<android.view.InsetsController: void updateRequestedState()>();

        return;
    }

    public void onControlsChanged(android.view.InsetsSourceControl[])
    {
        android.view.InsetsController r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, i13, i14, i15, i16, i17;
        android.view.InsetsSourceConsumer r1, r18;
        boolean z0, $z1, z3, z4, z5, z6, z7;
        android.util.SparseArray $r2, $r3, $r4, $r5, $r8, $r10, $r13;
        java.lang.Object $r6, $r9, $r11;
        android.view.InsetsState $r7;
        android.view.InsetsSourceControl $r12, r15, r19;
        android.view.InsetsSourceControl[] r14;
        int[] r16, r17;

        r0 := @this: android.view.InsetsController;

        r14 := @parameter0: android.view.InsetsSourceControl[];

        if r14 == null goto label03;

        i13 = lengthof r14;

        i14 = 0;

     label01:
        if i14 >= i13 goto label03;

        r15 = r14[i14];

        if r15 == null goto label02;

        $r13 = r0.<android.view.InsetsController: android.util.SparseArray mTmpControlArray>;

        $i12 = virtualinvoke r15.<android.view.InsetsSourceControl: int getType()>();

        virtualinvoke $r13.<android.util.SparseArray: void put(int,java.lang.Object)>($i12, r15);

     label02:
        i14 = i14 + 1;

        goto label01;

     label03:
        r16 = newarray (int)[1];

        r17 = newarray (int)[1];

        $r2 = r0.<android.view.InsetsController: android.util.SparseArray mSourceConsumers>;

        $i1 = virtualinvoke $r2.<android.util.SparseArray: int size()>();

        i15 = $i1 - 1;

     label04:
        if i15 < 0 goto label05;

        $r8 = r0.<android.view.InsetsController: android.util.SparseArray mSourceConsumers>;

        $r9 = virtualinvoke $r8.<android.util.SparseArray: java.lang.Object valueAt(int)>(i15);

        r18 = (android.view.InsetsSourceConsumer) $r9;

        $r10 = r0.<android.view.InsetsController: android.util.SparseArray mTmpControlArray>;

        $i11 = virtualinvoke r18.<android.view.InsetsSourceConsumer: int getType()>();

        $r11 = virtualinvoke $r10.<android.util.SparseArray: java.lang.Object get(int)>($i11);

        $r12 = (android.view.InsetsSourceControl) $r11;

        virtualinvoke r18.<android.view.InsetsSourceConsumer: void setControl(android.view.InsetsSourceControl,int[],int[])>($r12, r16, r17);

        i15 = i15 + -1;

        goto label04;

     label05:
        $r3 = r0.<android.view.InsetsController: android.util.SparseArray mTmpControlArray>;

        $i2 = virtualinvoke $r3.<android.util.SparseArray: int size()>();

        i16 = $i2 - 1;

        z3 = 0;

     label06:
        if i16 < 0 goto label15;

        $r5 = r0.<android.view.InsetsController: android.util.SparseArray mTmpControlArray>;

        $r6 = virtualinvoke $r5.<android.util.SparseArray: java.lang.Object valueAt(int)>(i16);

        r19 = (android.view.InsetsSourceControl) $r6;

        i0 = virtualinvoke r19.<android.view.InsetsSourceControl: int getType()>();

        r1 = virtualinvoke r0.<android.view.InsetsController: android.view.InsetsSourceConsumer getSourceConsumer(int)>(i0);

        virtualinvoke r1.<android.view.InsetsSourceConsumer: void setControl(android.view.InsetsSourceControl,int[],int[])>(r19, r16, r17);

        z4 = z3;

        if z3 != 0 goto label14;

        z0 = virtualinvoke r1.<android.view.InsetsSourceConsumer: boolean isRequestedVisible()>();

        $r7 = r0.<android.view.InsetsController: android.view.InsetsState mRequestedState>;

        $z1 = virtualinvoke $r7.<android.view.InsetsState: boolean getSourceOrDefaultVisibility(int)>(i0);

        if z0 == $z1 goto label07;

        z5 = 1;

        goto label08;

     label07:
        z5 = 0;

     label08:
        if i0 != 13 goto label09;

        if z0 == 0 goto label09;

        z6 = 1;

        goto label10;

     label09:
        z6 = 0;

     label10:
        if z5 != 0 goto label12;

        if z6 == 0 goto label11;

        goto label12;

     label11:
        z7 = 0;

        goto label13;

     label12:
        z7 = 1;

     label13:
        z4 = z7;

     label14:
        i16 = i16 + -1;

        z3 = z4;

        goto label06;

     label15:
        $r4 = r0.<android.view.InsetsController: android.util.SparseArray mTmpControlArray>;

        virtualinvoke $r4.<android.util.SparseArray: void clear()>();

        i17 = specialinvoke r0.<android.view.InsetsController: int invokeControllableInsetsChangedListeners()>();

        $i3 = r16[0];

        $i4 = $i3 & i17;

        r16[0] = $i4;

        $i5 = r17[0];

        $i6 = $i5 & i17;

        r17[0] = $i6;

        $i7 = r16[0];

        if $i7 == 0 goto label16;

        $i10 = r16[0];

        virtualinvoke r0.<android.view.InsetsController: void applyAnimation(int,boolean,boolean)>($i10, 1, 0);

     label16:
        $i8 = r17[0];

        if $i8 == 0 goto label17;

        $i9 = r17[0];

        virtualinvoke r0.<android.view.InsetsController: void applyAnimation(int,boolean,boolean)>($i9, 0, 0);

     label17:
        if z3 == 0 goto label18;

        specialinvoke r0.<android.view.InsetsController: void updateRequestedState()>();

     label18:
        return;
    }

    public void onFrameChanged(android.graphics.Rect)
    {
        android.view.InsetsController r0;
        android.graphics.Rect r1, $r2, $r4;
        boolean $z0;
        android.view.InsetsController$Host $r3;

        r0 := @this: android.view.InsetsController;

        r1 := @parameter0: android.graphics.Rect;

        $r2 = r0.<android.view.InsetsController: android.graphics.Rect mFrame>;

        $z0 = virtualinvoke $r2.<android.graphics.Rect: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        return;

     label1:
        $r3 = r0.<android.view.InsetsController: android.view.InsetsController$Host mHost>;

        interfaceinvoke $r3.<android.view.InsetsController$Host: void notifyInsetsChanged()>();

        $r4 = r0.<android.view.InsetsController: android.graphics.Rect mFrame>;

        virtualinvoke $r4.<android.graphics.Rect: void set(android.graphics.Rect)>(r1);

        return;
    }

    public boolean onStateChanged(android.view.InsetsState)
    {
        android.view.InsetsController r0;
        android.view.InsetsState r1, $r2, $r3, $r4, $r5, $r7;
        boolean z0, $z1, $z2, $z3, $z4, z5;
        android.view.InsetsController$Host $r6;

        r0 := @this: android.view.InsetsController;

        r1 := @parameter0: android.view.InsetsState;

        $r2 = r0.<android.view.InsetsController: android.view.InsetsState mState>;

        $z1 = virtualinvoke $r2.<android.view.InsetsState: boolean equals(java.lang.Object,boolean,boolean)>(r1, 1, 0);

        if $z1 == 0 goto label2;

        $z4 = specialinvoke r0.<android.view.InsetsController: boolean captionInsetsUnchanged()>();

        if $z4 != 0 goto label1;

        goto label2;

     label1:
        z5 = 0;

        goto label3;

     label2:
        z5 = 1;

     label3:
        if z5 != 0 goto label4;

        $r7 = r0.<android.view.InsetsController: android.view.InsetsState mLastDispatchedState>;

        $z3 = virtualinvoke $r7.<android.view.InsetsState: boolean equals(java.lang.Object)>(r1);

        if $z3 == 0 goto label4;

        return 0;

     label4:
        specialinvoke r0.<android.view.InsetsController: void updateState(android.view.InsetsState)>(r1);

        $r4 = r0.<android.view.InsetsController: android.view.InsetsState mState>;

        $r3 = r0.<android.view.InsetsController: android.view.InsetsState mLastDispatchedState>;

        z0 = virtualinvoke $r4.<android.view.InsetsState: boolean equals(java.lang.Object,boolean,boolean)>($r3, 1, 1);

        $r5 = r0.<android.view.InsetsController: android.view.InsetsState mLastDispatchedState>;

        virtualinvoke $r5.<android.view.InsetsState: void set(android.view.InsetsState,boolean)>(r1, 1);

        specialinvoke r0.<android.view.InsetsController: void applyLocalVisibilityOverride()>();

        $z2 = z0 ^ 1;

        if $z2 == 0 goto label5;

        $r6 = r0.<android.view.InsetsController: android.view.InsetsController$Host mHost>;

        interfaceinvoke $r6.<android.view.InsetsController$Host: void notifyInsetsChanged()>();

        specialinvoke r0.<android.view.InsetsController: void updateRequestedState()>();

     label5:
        return 1;
    }

    public void onWindowFocusGained()
    {
        android.view.InsetsController r0;
        android.view.InsetsSourceConsumer $r1;

        r0 := @this: android.view.InsetsController;

        $r1 = virtualinvoke r0.<android.view.InsetsController: android.view.InsetsSourceConsumer getSourceConsumer(int)>(13);

        virtualinvoke $r1.<android.view.InsetsSourceConsumer: void onWindowFocusGained()>();

        return;
    }

    public void onWindowFocusLost()
    {
        android.view.InsetsController r0;
        android.view.InsetsSourceConsumer $r1;

        r0 := @this: android.view.InsetsController;

        $r1 = virtualinvoke r0.<android.view.InsetsController: android.view.InsetsSourceConsumer getSourceConsumer(int)>(13);

        virtualinvoke $r1.<android.view.InsetsSourceConsumer: void onWindowFocusLost()>();

        return;
    }

    public void releaseSurfaceControlFromRt(android.view.SurfaceControl)
    {
        android.view.InsetsController r0;
        android.view.SurfaceControl r1;
        android.view.InsetsController$Host $r2;

        r0 := @this: android.view.InsetsController;

        r1 := @parameter0: android.view.SurfaceControl;

        $r2 = r0.<android.view.InsetsController: android.view.InsetsController$Host mHost>;

        interfaceinvoke $r2.<android.view.InsetsController$Host: void releaseSurfaceControlFromRt(android.view.SurfaceControl)>(r1);

        return;
    }

    public void removeOnControllableInsetsChangedListener(android.view.WindowInsetsController$OnControllableInsetsChangedListener)
    {
        android.view.InsetsController r0;
        android.view.WindowInsetsController$OnControllableInsetsChangedListener r1;
        java.util.ArrayList $r3;

        r0 := @this: android.view.InsetsController;

        r1 := @parameter0: android.view.WindowInsetsController$OnControllableInsetsChangedListener;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r1);

        $r3 = r0.<android.view.InsetsController: java.util.ArrayList mControllableInsetsChangedListeners>;

        virtualinvoke $r3.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);

        return;
    }

    public void reportPerceptible(int, boolean)
    {
        android.view.InsetsController r0;
        boolean z0, $z1;
        android.util.ArraySet r1;
        int i0, $i1, i2, i3;
        android.view.InsetsSourceConsumer r2;
        android.util.SparseArray $r3, $r4;
        java.lang.Object $r5;
        java.lang.Integer $r6;

        r0 := @this: android.view.InsetsController;

        i2 := @parameter0: int;

        z0 := @parameter1: boolean;

        r1 = staticinvoke <android.view.InsetsState: android.util.ArraySet toInternalType(int)>(i2);

        $r3 = r0.<android.view.InsetsController: android.util.SparseArray mSourceConsumers>;

        i0 = virtualinvoke $r3.<android.util.SparseArray: int size()>();

        i3 = 0;

     label1:
        if i3 >= i0 goto label3;

        $r4 = r0.<android.view.InsetsController: android.util.SparseArray mSourceConsumers>;

        $r5 = virtualinvoke $r4.<android.util.SparseArray: java.lang.Object valueAt(int)>(i3);

        r2 = (android.view.InsetsSourceConsumer) $r5;

        $i1 = virtualinvoke r2.<android.view.InsetsSourceConsumer: int getType()>();

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $z1 = virtualinvoke r1.<android.util.ArraySet: boolean contains(java.lang.Object)>($r6);

        if $z1 == 0 goto label2;

        virtualinvoke r2.<android.view.InsetsSourceConsumer: void onPerceptible(boolean)>(z0);

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        return;
    }

    public void scheduleApplyChangeInsets(android.view.InsetsAnimationControlRunner)
    {
        android.view.InsetsController r0;
        android.view.InsetsAnimationControlRunner r1;
        boolean $z0, $z1;
        java.lang.Runnable $r2, $r3;
        int $i0;
        android.view.InsetsController$Host $r4;

        r0 := @this: android.view.InsetsController;

        r1 := @parameter0: android.view.InsetsAnimationControlRunner;

        $z0 = r0.<android.view.InsetsController: boolean mStartingAnimation>;

        if $z0 != 0 goto label3;

        $i0 = interfaceinvoke r1.<android.view.InsetsAnimationControlRunner: int getAnimationType()>();

        if $i0 != 2 goto label1;

        goto label3;

     label1:
        $z1 = r0.<android.view.InsetsController: boolean mAnimCallbackScheduled>;

        if $z1 != 0 goto label2;

        $r4 = r0.<android.view.InsetsController: android.view.InsetsController$Host mHost>;

        $r3 = r0.<android.view.InsetsController: java.lang.Runnable mAnimCallback>;

        interfaceinvoke $r4.<android.view.InsetsController$Host: void postInsetsAnimationCallback(java.lang.Runnable)>($r3);

        r0.<android.view.InsetsController: boolean mAnimCallbackScheduled> = 1;

     label2:
        return;

     label3:
        $r2 = r0.<android.view.InsetsController: java.lang.Runnable mAnimCallback>;

        interfaceinvoke $r2.<java.lang.Runnable: void run()>();

        r0.<android.view.InsetsController: boolean mAnimCallbackScheduled> = 0;

        return;
    }

    public void setAnimationsDisabled(boolean)
    {
        android.view.InsetsController r0;
        boolean z0;

        r0 := @this: android.view.InsetsController;

        z0 := @parameter0: boolean;

        r0.<android.view.InsetsController: boolean mAnimationsDisabled> = z0;

        return;
    }

    public void setCaptionInsetsHeight(int)
    {
        android.view.InsetsController r0;
        int i0;

        r0 := @this: android.view.InsetsController;

        i0 := @parameter0: int;

        r0.<android.view.InsetsController: int mCaptionInsetsHeight> = i0;

        return;
    }

    public void setSystemBarsAppearance(int, int)
    {
        android.view.InsetsController r0;
        int i0, i1;
        android.view.InsetsController$Host $r1;

        r0 := @this: android.view.InsetsController;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<android.view.InsetsController: android.view.InsetsController$Host mHost>;

        interfaceinvoke $r1.<android.view.InsetsController$Host: void setSystemBarsAppearance(int,int)>(i0, i1);

        return;
    }

    public void setSystemBarsBehavior(int)
    {
        android.view.InsetsController r0;
        int i0;
        android.view.InsetsController$Host $r1;

        r0 := @this: android.view.InsetsController;

        i0 := @parameter0: int;

        $r1 = r0.<android.view.InsetsController: android.view.InsetsController$Host mHost>;

        interfaceinvoke $r1.<android.view.InsetsController$Host: void setSystemBarsBehavior(int)>(i0);

        return;
    }

    public void show(int)
    {
        android.view.InsetsController r0;
        int i0;

        r0 := @this: android.view.InsetsController;

        i0 := @parameter0: int;

        virtualinvoke r0.<android.view.InsetsController: void show(int,boolean)>(i0, 0);

        return;
    }

    public void show(int, boolean)
    {
        android.view.InsetsController r0;
        boolean z0, $z1, $z2;
        android.util.ArraySet r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i7, i8, i9, i10, i11, i12;
        java.lang.Object $r2;
        java.lang.Integer $r3;
        android.view.InsetsController$PendingControlRequest $r4, r11;
        java.lang.Runnable $r5;
        android.os.Handler $r6;
        android.view.animation.Interpolator $r7;
        long $l6;
        android.graphics.Rect $r8;
        android.view.WindowInsetsAnimationControlListener $r9;
        android.os.CancellationSignal $r10;
        android.view.InsetsSourceConsumer r12;

        r0 := @this: android.view.InsetsController;

        i8 := @parameter0: int;

        z0 := @parameter1: boolean;

        if z0 == 0 goto label1;

        $r4 = r0.<android.view.InsetsController: android.view.InsetsController$PendingControlRequest mPendingImeControlRequest>;

        if $r4 == null goto label1;

        r11 = r0.<android.view.InsetsController: android.view.InsetsController$PendingControlRequest mPendingImeControlRequest>;

        r0.<android.view.InsetsController: android.view.InsetsController$PendingControlRequest mPendingImeControlRequest> = null;

        $r6 = r0.<android.view.InsetsController: android.os.Handler mHandler>;

        $r5 = r0.<android.view.InsetsController: java.lang.Runnable mPendingControlTimeout>;

        virtualinvoke $r6.<android.os.Handler: void removeCallbacks(java.lang.Runnable)>($r5);

        $i7 = r11.<android.view.InsetsController$PendingControlRequest: int types>;

        $r10 = r11.<android.view.InsetsController$PendingControlRequest: android.os.CancellationSignal cancellationSignal>;

        $r9 = r11.<android.view.InsetsController$PendingControlRequest: android.view.WindowInsetsAnimationControlListener listener>;

        $r8 = r0.<android.view.InsetsController: android.graphics.Rect mFrame>;

        $l6 = r11.<android.view.InsetsController$PendingControlRequest: long durationMs>;

        $r7 = r11.<android.view.InsetsController$PendingControlRequest: android.view.animation.Interpolator interpolator>;

        $i5 = r11.<android.view.InsetsController$PendingControlRequest: int animationType>;

        $i4 = r11.<android.view.InsetsController$PendingControlRequest: int layoutInsetsDuringAnimation>;

        $z2 = r11.<android.view.InsetsController$PendingControlRequest: boolean useInsetsAnimationThread>;

        specialinvoke r0.<android.view.InsetsController: void controlAnimationUnchecked(int,android.os.CancellationSignal,android.view.WindowInsetsAnimationControlListener,android.graphics.Rect,boolean,long,android.view.animation.Interpolator,int,int,boolean)>($i7, $r10, $r9, $r8, 1, $l6, $r7, $i5, $i4, $z2);

        return;

     label1:
        i9 = 0;

        r1 = staticinvoke <android.view.InsetsState: android.util.ArraySet toInternalType(int)>(i8);

        $i1 = virtualinvoke r1.<android.util.ArraySet: int size()>();

        i10 = $i1 - 1;

     label2:
        if i10 < 0 goto label7;

        $r2 = virtualinvoke r1.<android.util.ArraySet: java.lang.Object valueAt(int)>(i10);

        $r3 = (java.lang.Integer) $r2;

        i11 = virtualinvoke $r3.<java.lang.Integer: int intValue()>();

        i0 = virtualinvoke r0.<android.view.InsetsController: int getAnimationType(int)>(i11);

        r12 = virtualinvoke r0.<android.view.InsetsController: android.view.InsetsSourceConsumer getSourceConsumer(int)>(i11);

        $z1 = virtualinvoke r12.<android.view.InsetsSourceConsumer: boolean isRequestedVisible()>();

        if $z1 == 0 goto label3;

        i12 = i9;

        if i0 == -1 goto label6;

     label3:
        if i0 != 0 goto label4;

        i12 = i9;

        goto label6;

     label4:
        if z0 == 0 goto label5;

        if i0 != 2 goto label5;

        i12 = i9;

        goto label6;

     label5:
        $i2 = virtualinvoke r12.<android.view.InsetsSourceConsumer: int getType()>();

        $i3 = staticinvoke <android.view.InsetsState: int toPublicType(int)>($i2);

        i12 = i9 | $i3;

     label6:
        i10 = i10 + -1;

        i9 = i12;

        goto label2;

     label7:
        virtualinvoke r0.<android.view.InsetsController: void applyAnimation(int,boolean,boolean)>(i9, 1, z0);

        return;
    }

    public void startAnimation(android.view.InsetsAnimationControlImpl, android.view.WindowInsetsAnimationControlListener, int, android.view.WindowInsetsAnimation, android.view.WindowInsetsAnimation$Bounds)
    {
        android.view.InsetsController r0;
        android.view.InsetsAnimationControlImpl r1;
        android.view.WindowInsetsAnimationControlListener r2;
        int i0;
        android.view.WindowInsetsAnimation r3;
        android.view.WindowInsetsAnimation$Bounds r4;
        android.view.InsetsController$Host $r5, $r7;
        android.view._$$Lambda$InsetsController$VzAUS17blucBK1u6_37NlEpdYqI $r6;

        r0 := @this: android.view.InsetsController;

        r1 := @parameter0: android.view.InsetsAnimationControlImpl;

        r2 := @parameter1: android.view.WindowInsetsAnimationControlListener;

        i0 := @parameter2: int;

        r3 := @parameter3: android.view.WindowInsetsAnimation;

        r4 := @parameter4: android.view.WindowInsetsAnimation$Bounds;

        $r5 = r0.<android.view.InsetsController: android.view.InsetsController$Host mHost>;

        interfaceinvoke $r5.<android.view.InsetsController$Host: void dispatchWindowInsetsAnimationPrepare(android.view.WindowInsetsAnimation)>(r3);

        $r7 = r0.<android.view.InsetsController: android.view.InsetsController$Host mHost>;

        $r6 = new android.view._$$Lambda$InsetsController$VzAUS17blucBK1u6_37NlEpdYqI;

        specialinvoke $r6.<android.view._$$Lambda$InsetsController$VzAUS17blucBK1u6_37NlEpdYqI: void <init>(android.view.InsetsController,android.view.InsetsAnimationControlImpl,int,android.view.WindowInsetsAnimation,android.view.WindowInsetsAnimation$Bounds,android.view.WindowInsetsAnimationControlListener)>(r0, r1, i0, r3, r4, r2);

        interfaceinvoke $r7.<android.view.InsetsController$Host: void addOnPreDrawRunnable(java.lang.Runnable)>($r6);

        return;
    }

    public void updateCompatSysUiVisibility(int, boolean, boolean)
    {
        android.view.InsetsController r0;
        int i0;
        boolean z0, z1;
        android.view.InsetsController$Host $r1;

        r0 := @this: android.view.InsetsController;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        $r1 = r0.<android.view.InsetsController: android.view.InsetsController$Host mHost>;

        interfaceinvoke $r1.<android.view.InsetsController$Host: void updateCompatSysUiVisibility(int,boolean,boolean)>(i0, z0, z1);

        return;
    }
}
