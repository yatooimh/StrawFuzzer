public abstract class android.view.LayoutInflater extends java.lang.Object
{
    private static final int[] ATTRS_THEME;
    private static final java.lang.String ATTR_LAYOUT;
    private static final java.lang.ClassLoader BOOT_CLASS_LOADER;
    private static final java.lang.String COMPILED_VIEW_DEX_FILE_NAME;
    private static final boolean DEBUG;
    private static final java.lang.StackTraceElement[] EMPTY_STACK_TRACE;
    private static final java.lang.String TAG;
    private static final java.lang.String TAG_1995;
    private static final java.lang.String TAG_INCLUDE;
    private static final java.lang.String TAG_MERGE;
    private static final java.lang.String TAG_REQUEST_FOCUS;
    private static final java.lang.String TAG_TAG;
    private static final java.lang.String USE_PRECOMPILED_LAYOUT;
    static final java.lang.Class[] mConstructorSignature;
    private static final java.util.HashMap sConstructorMap;
    final java.lang.Object[] mConstructorArgs;
    protected final android.content.Context mContext;
    private android.view.LayoutInflater$Factory mFactory;
    private android.view.LayoutInflater$Factory2 mFactory2;
    private boolean mFactorySet;
    private android.view.LayoutInflater$Filter mFilter;
    private java.util.HashMap mFilterMap;
    private java.lang.ClassLoader mPrecompiledClassLoader;
    private android.view.LayoutInflater$Factory2 mPrivateFactory;
    private android.util.TypedValue mTempValue;
    private boolean mUseCompiledView;

    static void <clinit>()
    {
        java.lang.Class $r0, $r6;
        java.lang.String $r1;
        java.lang.StackTraceElement[] $r2;
        java.lang.Class[] $r3;
        java.util.HashMap $r4;
        int[] $r5;
        java.lang.ClassLoader $r7;

        <android.view.LayoutInflater: java.lang.String USE_PRECOMPILED_LAYOUT> = "view.precompiled_layout_enabled";

        <android.view.LayoutInflater: java.lang.String TAG_TAG> = "tag";

        <android.view.LayoutInflater: java.lang.String TAG_REQUEST_FOCUS> = "requestFocus";

        <android.view.LayoutInflater: java.lang.String TAG_MERGE> = "merge";

        <android.view.LayoutInflater: java.lang.String TAG_INCLUDE> = "include";

        <android.view.LayoutInflater: java.lang.String TAG_1995> = "blink";

        <android.view.LayoutInflater: boolean DEBUG> = 0;

        <android.view.LayoutInflater: java.lang.String COMPILED_VIEW_DEX_FILE_NAME> = "/compiled_view.dex";

        <android.view.LayoutInflater: java.lang.String ATTR_LAYOUT> = "layout";

        $r0 = class "Landroid/view/LayoutInflater;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getSimpleName()>();

        <android.view.LayoutInflater: java.lang.String TAG> = $r1;

        $r2 = newarray (java.lang.StackTraceElement)[0];

        <android.view.LayoutInflater: java.lang.StackTraceElement[] EMPTY_STACK_TRACE> = $r2;

        $r3 = newarray (java.lang.Class)[2];

        $r3[0] = class "Landroid/content/Context;";

        $r3[1] = class "Landroid/util/AttributeSet;";

        <android.view.LayoutInflater: java.lang.Class[] mConstructorSignature> = $r3;

        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        <android.view.LayoutInflater: java.util.HashMap sConstructorMap> = $r4;

        $r5 = newarray (int)[1];

        $r5[0] = 16842752;

        <android.view.LayoutInflater: int[] ATTRS_THEME> = $r5;

        $r6 = class "Landroid/view/LayoutInflater;";

        $r7 = virtualinvoke $r6.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        <android.view.LayoutInflater: java.lang.ClassLoader BOOT_CLASS_LOADER> = $r7;

        return;
    }

    protected void <init>(android.content.Context)
    {
        android.view.LayoutInflater r0;
        android.content.Context r1;
        java.lang.Object[] $r2;

        r0 := @this: android.view.LayoutInflater;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = newarray (java.lang.Object)[2];

        r0.<android.view.LayoutInflater: java.lang.Object[] mConstructorArgs> = $r2;

        r0.<android.view.LayoutInflater: android.content.Context mContext> = r1;

        specialinvoke r0.<android.view.LayoutInflater: void initPrecompiledViews()>();

        return;
    }

    protected void <init>(android.view.LayoutInflater, android.content.Context)
    {
        android.view.LayoutInflater r0, r1;
        android.content.Context r2;
        java.lang.Object[] $r3;
        android.view.LayoutInflater$Factory $r4;
        android.view.LayoutInflater$Factory2 $r5, $r6;
        android.view.LayoutInflater$Filter $r7;

        r0 := @this: android.view.LayoutInflater;

        r1 := @parameter0: android.view.LayoutInflater;

        r2 := @parameter1: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = newarray (java.lang.Object)[2];

        r0.<android.view.LayoutInflater: java.lang.Object[] mConstructorArgs> = $r3;

        r0.<android.view.LayoutInflater: android.content.Context mContext> = r2;

        $r4 = r1.<android.view.LayoutInflater: android.view.LayoutInflater$Factory mFactory>;

        r0.<android.view.LayoutInflater: android.view.LayoutInflater$Factory mFactory> = $r4;

        $r5 = r1.<android.view.LayoutInflater: android.view.LayoutInflater$Factory2 mFactory2>;

        r0.<android.view.LayoutInflater: android.view.LayoutInflater$Factory2 mFactory2> = $r5;

        $r6 = r1.<android.view.LayoutInflater: android.view.LayoutInflater$Factory2 mPrivateFactory>;

        r0.<android.view.LayoutInflater: android.view.LayoutInflater$Factory2 mPrivateFactory> = $r6;

        $r7 = r1.<android.view.LayoutInflater: android.view.LayoutInflater$Filter mFilter>;

        virtualinvoke r0.<android.view.LayoutInflater: void setFilter(android.view.LayoutInflater$Filter)>($r7);

        specialinvoke r0.<android.view.LayoutInflater: void initPrecompiledViews()>();

        return;
    }

    private void advanceToRootNode(org.xmlpull.v1.XmlPullParser) throws android.view.InflateException, java.io.IOException, org.xmlpull.v1.XmlPullParserException
    {
        android.view.LayoutInflater r0;
        org.xmlpull.v1.XmlPullParser r1;
        int i0;
        java.lang.StringBuilder $r3;
        java.lang.String $r4, $r8;
        android.view.InflateException $r7;

        r0 := @this: android.view.LayoutInflater;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

     label1:
        i0 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        if i0 == 2 goto label2;

        if i0 == 1 goto label2;

        goto label1;

     label2:
        if i0 != 2 goto label3;

        return;

     label3:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": No start tag found!");

        $r7 = new android.view.InflateException;

        $r8 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<android.view.InflateException: void <init>(java.lang.String)>($r8);

        throw $r7;
    }

    static final void consumeChildElements(org.xmlpull.v1.XmlPullParser) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        org.xmlpull.v1.XmlPullParser r0;
        int i0, i1, $i2;

        r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        i0 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

     label1:
        i1 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int next()>();

        if i1 != 3 goto label2;

        $i2 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i2 <= i0 goto label3;

     label2:
        if i1 == 1 goto label3;

        goto label1;

     label3:
        return;
    }

    private android.view.View createViewFromTag(android.view.View, java.lang.String, android.content.Context, android.util.AttributeSet)
    {
        android.view.LayoutInflater r0;
        android.view.View r1, $r5;
        java.lang.String r2;
        android.content.Context r3;
        android.util.AttributeSet r4;

        r0 := @this: android.view.LayoutInflater;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.content.Context;

        r4 := @parameter3: android.util.AttributeSet;

        $r5 = virtualinvoke r0.<android.view.LayoutInflater: android.view.View createViewFromTag(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet,boolean)>(r1, r2, r3, r4, 0);

        return $r5;
    }

    private void failNotAllowed(java.lang.String, java.lang.String, android.content.Context, android.util.AttributeSet)
    {
        android.view.LayoutInflater r0;
        java.lang.String r1, $r5, $r10, r14;
        android.util.AttributeSet r2;
        java.lang.StringBuilder $r4, $r11;
        android.view.InflateException $r9;
        android.content.Context r15;

        r0 := @this: android.view.LayoutInflater;

        r14 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r15 := @parameter2: android.content.Context;

        r2 := @parameter3: android.util.AttributeSet;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = staticinvoke <android.view.LayoutInflater: java.lang.String getParserStateDescription(android.content.Context,android.util.AttributeSet)>(r15, r2);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": Class not allowed to be inflated ");

        if r1 == null goto label1;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r14);

        r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label1;

     label1:
        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r14);

        $r9 = new android.view.InflateException;

        $r10 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<android.view.InflateException: void <init>(java.lang.String)>($r10);

        throw $r9;
    }

    public static android.view.LayoutInflater 'from'(android.content.Context)
    {
        java.lang.Object $r0;
        java.lang.AssertionError $r1;
        android.content.Context r2;
        android.view.LayoutInflater r3;

        r2 := @parameter0: android.content.Context;

        $r0 = virtualinvoke r2.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("layout_inflater");

        r3 = (android.view.LayoutInflater) $r0;

        if r3 == null goto label1;

        return r3;

     label1:
        $r1 = new java.lang.AssertionError;

        specialinvoke $r1.<java.lang.AssertionError: void <init>(java.lang.Object)>("LayoutInflater not found.");

        throw $r1;
    }

    private static java.lang.String getParserStateDescription(android.content.Context, android.util.AttributeSet)
    {
        android.content.Context r0;
        android.util.AttributeSet r1;
        int i0;
        java.lang.StringBuilder $r3;
        java.lang.String $r4, $r8, $r10, $r11;
        android.content.res.Resources $r7;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: android.util.AttributeSet;

        i0 = staticinvoke <android.content.res.Resources: int getAttributeSetSourceResId(android.util.AttributeSet)>(r1);

        if i0 != 0 goto label1;

        $r11 = interfaceinvoke r1.<android.util.AttributeSet: java.lang.String getPositionDescription()>();

        return $r11;

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = interfaceinvoke r1.<android.util.AttributeSet: java.lang.String getPositionDescription()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in ");

        $r7 = virtualinvoke r0.<android.content.Context: android.content.res.Resources getResources()>();

        $r8 = virtualinvoke $r7.<android.content.res.Resources: java.lang.String getResourceName(int)>(i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r10;
    }

    private void initPrecompiledViews()
    {
        android.view.LayoutInflater r0;

        r0 := @this: android.view.LayoutInflater;

        specialinvoke r0.<android.view.LayoutInflater: void initPrecompiledViews(boolean)>(0);

        return;
    }

    private void initPrecompiledViews(boolean)
    {
        android.view.LayoutInflater r0;
        boolean z0, $z1, $z2, $z3, $z4;
        android.content.Context $r1, $r2, $r4;
        java.lang.ClassLoader $r3, $r8, r19;
        java.io.File $r5, r17;
        java.lang.Throwable $r9;
        android.content.pm.ApplicationInfo r10;
        java.lang.String r12;
        java.lang.StringBuilder r16;
        dalvik.system.PathClassLoader r18;

        r0 := @this: android.view.LayoutInflater;

        z0 := @parameter0: boolean;

        r0.<android.view.LayoutInflater: boolean mUseCompiledView> = z0;

        if z0 != 0 goto label1;

        r0.<android.view.LayoutInflater: java.lang.ClassLoader mPrecompiledClassLoader> = null;

        return;

     label1:
        $r1 = r0.<android.view.LayoutInflater: android.content.Context mContext>;

        r10 = virtualinvoke $r1.<android.content.Context: android.content.pm.ApplicationInfo getApplicationInfo()>();

        $z1 = virtualinvoke r10.<android.content.pm.ApplicationInfo: boolean isEmbeddedDexUsed()>();

        if $z1 != 0 goto label9;

        $z2 = virtualinvoke r10.<android.content.pm.ApplicationInfo: boolean isPrivilegedApp()>();

        if $z2 == 0 goto label2;

        goto label9;

     label2:
        $r2 = r0.<android.view.LayoutInflater: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: java.lang.ClassLoader getClassLoader()>();

        r0.<android.view.LayoutInflater: java.lang.ClassLoader mPrecompiledClassLoader> = $r3;

        r16 = new java.lang.StringBuilder;

        specialinvoke r16.<java.lang.StringBuilder: void <init>()>();

        $r4 = r0.<android.view.LayoutInflater: android.content.Context mContext>;

        $r5 = virtualinvoke $r4.<android.content.Context: java.io.File getCodeCacheDir()>();

        virtualinvoke r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        virtualinvoke r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/compiled_view.dex");

        r12 = virtualinvoke r16.<java.lang.StringBuilder: java.lang.String toString()>();

        r17 = new java.io.File;

        specialinvoke r17.<java.io.File: void <init>(java.lang.String)>(r12);

        $z3 = virtualinvoke r17.<java.io.File: boolean exists()>();

        if $z3 == 0 goto label4;

        r18 = new dalvik.system.PathClassLoader;

        $r8 = r0.<android.view.LayoutInflater: java.lang.ClassLoader mPrecompiledClassLoader>;

        specialinvoke r18.<dalvik.system.PathClassLoader: void <init>(java.lang.String,java.lang.ClassLoader)>(r12, $r8);

        r19 = (java.lang.ClassLoader) r18;

        r0.<android.view.LayoutInflater: java.lang.ClassLoader mPrecompiledClassLoader> = r19;

     label3:
        goto label5;

     label4:
        r0.<android.view.LayoutInflater: boolean mUseCompiledView> = 0;

     label5:
        goto label7;

     label6:
        $r9 := @caughtexception;

        r0.<android.view.LayoutInflater: boolean mUseCompiledView> = 0;

     label7:
        $z4 = r0.<android.view.LayoutInflater: boolean mUseCompiledView>;

        if $z4 != 0 goto label8;

        r0.<android.view.LayoutInflater: java.lang.ClassLoader mPrecompiledClassLoader> = null;

     label8:
        return;

     label9:
        r0.<android.view.LayoutInflater: boolean mUseCompiledView> = 0;

        return;

        catch java.lang.Throwable from label2 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
    }

    private void parseInclude(org.xmlpull.v1.XmlPullParser, android.content.Context, android.view.View, android.util.AttributeSet) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.view.LayoutInflater r0;
        android.util.AttributeSet r1, r2;
        boolean z0, $z1, $z2, z3;
        android.view.ViewGroup r3, $r14;
        android.view.InflateException $r4, $r11, $r27, r51;
        int[] $r5, $r22;
        android.util.TypedValue $r6, $r24, $r25, $r26;
        java.lang.StringBuilder $r7, r52;
        java.lang.String $r12, $r17, $r20, $r21, $r29, $r30, r42, r44, r53;
        android.content.res.Resources $r13, $r16, $r28;
        android.view.View $r15, r40, r46;
        android.content.res.Resources$Theme $r23;
        int $i0, i1, i2, i3, i4, i5, i6;
        android.view.ContextThemeWrapper $r31;
        java.lang.Throwable $r32, $r33, $r34, $r35, $r37, r45;
        java.lang.RuntimeException $r36;
        org.xmlpull.v1.XmlPullParser r38;
        android.content.Context r39;
        android.content.res.TypedArray r41, r47;
        android.content.res.XmlResourceParser r43;
        android.view.ViewGroup$LayoutParams r48, r49;

        r0 := @this: android.view.LayoutInflater;

        r38 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r39 := @parameter1: android.content.Context;

        r40 := @parameter2: android.view.View;

        r1 := @parameter3: android.util.AttributeSet;

        $z1 = r40 instanceof android.view.ViewGroup;

        if $z1 == 0 goto label45;

        $r5 = <android.view.LayoutInflater: int[] ATTRS_THEME>;

        r41 = virtualinvoke r39.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[])>(r1, $r5);

        i1 = virtualinvoke r41.<android.content.res.TypedArray: int getResourceId(int,int)>(0, 0);

        if i1 == 0 goto label01;

        z3 = 1;

        goto label02;

     label01:
        z3 = 0;

     label02:
        if z3 == 0 goto label03;

        $r31 = new android.view.ContextThemeWrapper;

        specialinvoke $r31.<android.view.ContextThemeWrapper: void <init>(android.content.Context,int)>(r39, i1);

        r39 = $r31;

        goto label03;

     label03:
        virtualinvoke r41.<android.content.res.TypedArray: void recycle()>();

        i2 = interfaceinvoke r1.<android.util.AttributeSet: int getAttributeResourceValue(java.lang.String,java.lang.String,int)>(null, "layout", 0);

        i3 = i2;

        if i2 != 0 goto label05;

        r42 = interfaceinvoke r1.<android.util.AttributeSet: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "layout");

        if r42 == null goto label04;

        $i0 = virtualinvoke r42.<java.lang.String: int length()>();

        if $i0 <= 0 goto label04;

        $r28 = virtualinvoke r39.<android.content.Context: android.content.res.Resources getResources()>();

        $r29 = virtualinvoke r42.<java.lang.String: java.lang.String substring(int)>(1);

        $r30 = virtualinvoke r39.<android.content.Context: java.lang.String getPackageName()>();

        i3 = virtualinvoke $r28.<android.content.res.Resources: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)>($r29, "attr", $r30);

        goto label05;

     label04:
        $r27 = new android.view.InflateException;

        specialinvoke $r27.<android.view.InflateException: void <init>(java.lang.String)>("You must specify a layout in the include tag: <include layout=\"@layout/layoutID\" />");

        throw $r27;

     label05:
        $r6 = r0.<android.view.LayoutInflater: android.util.TypedValue mTempValue>;

        if $r6 != null goto label06;

        $r26 = new android.util.TypedValue;

        specialinvoke $r26.<android.util.TypedValue: void <init>()>();

        r0.<android.view.LayoutInflater: android.util.TypedValue mTempValue> = $r26;

     label06:
        if i3 == 0 goto label07;

        $r23 = virtualinvoke r39.<android.content.Context: android.content.res.Resources$Theme getTheme()>();

        $r24 = r0.<android.view.LayoutInflater: android.util.TypedValue mTempValue>;

        $z2 = virtualinvoke $r23.<android.content.res.Resources$Theme: boolean resolveAttribute(int,android.util.TypedValue,boolean)>(i3, $r24, 1);

        if $z2 == 0 goto label07;

        $r25 = r0.<android.view.LayoutInflater: android.util.TypedValue mTempValue>;

        i3 = $r25.<android.util.TypedValue: int resourceId>;

        goto label07;

     label07:
        if i3 == 0 goto label44;

        $r13 = virtualinvoke r39.<android.content.Context: android.content.res.Resources getResources()>();

        $r14 = (android.view.ViewGroup) r40;

        $r15 = specialinvoke r0.<android.view.LayoutInflater: android.view.View tryInflatePrecompiled(int,android.content.res.Resources,android.view.ViewGroup,boolean)>(i3, $r13, $r14, 1);

        if $r15 != null goto label43;

        $r16 = virtualinvoke r39.<android.content.Context: android.content.res.Resources getResources()>();

        r43 = virtualinvoke $r16.<android.content.res.Resources: android.content.res.XmlResourceParser getLayout(int)>(i3);

     label08:
        r2 = staticinvoke <android.util.Xml: android.util.AttributeSet asAttributeSet(org.xmlpull.v1.XmlPullParser)>(r43);

     label09:
        i4 = interfaceinvoke r43.<android.content.res.XmlResourceParser: int next()>();

     label10:
        if i4 == 2 goto label11;

        if i4 == 1 goto label11;

        goto label09;

     label11:
        if i4 != 2 goto label39;

     label12:
        r44 = interfaceinvoke r43.<android.content.res.XmlResourceParser: java.lang.String getName()>();

        $r21 = "merge";

        z0 = virtualinvoke $r21.<java.lang.String: boolean equals(java.lang.Object)>(r44);

     label13:
        if z0 == 0 goto label17;

     label14:
        virtualinvoke r0.<android.view.LayoutInflater: void rInflate(org.xmlpull.v1.XmlPullParser,android.view.View,android.content.Context,android.util.AttributeSet,boolean)>(r43, r40, r39, r2, 0);

     label15:
        goto label37;

     label16:
        $r35 := @caughtexception;

        r45 = $r35;

        goto label42;

     label17:
        r46 = virtualinvoke r0.<android.view.LayoutInflater: android.view.View createViewFromTag(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet,boolean)>(r40, r44, r39, r2, z3);

        r3 = (android.view.ViewGroup) r40;

        $r22 = <com.android.internal.R$styleable: int[] Include>;

        r47 = virtualinvoke r39.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[])>(r1, $r22);

        i5 = virtualinvoke r47.<android.content.res.TypedArray: int getResourceId(int,int)>(0, -1);

        i6 = virtualinvoke r47.<android.content.res.TypedArray: int getInt(int,int)>(1, -1);

        virtualinvoke r47.<android.content.res.TypedArray: void recycle()>();

     label18:
        r48 = null;

     label19:
        r49 = virtualinvoke r3.<android.view.ViewGroup: android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)>(r1);

     label20:
        r48 = r49;

        goto label23;

     label21:
        $r33 := @caughtexception;

        r45 = $r33;

        goto label42;

     label22:
        $r36 := @caughtexception;

     label23:
        if r48 != null goto label26;

     label24:
        r48 = virtualinvoke r3.<android.view.ViewGroup: android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)>(r2);

     label25:
        goto label26;

     label26:
        virtualinvoke r46.<android.view.View: void setLayoutParams(android.view.ViewGroup$LayoutParams)>(r48);

     label27:
        virtualinvoke r0.<android.view.LayoutInflater: void rInflateChildren(org.xmlpull.v1.XmlPullParser,android.view.View,android.util.AttributeSet,boolean)>(r43, r46, r2, 1);

     label28:
        if i5 == -1 goto label30;

     label29:
        virtualinvoke r46.<android.view.View: void setId(int)>(i5);

     label30:
        if i6 == 0 goto label35;

        if i6 == 1 goto label33;

        if i6 == 2 goto label31;

        goto label36;

     label31:
        virtualinvoke r46.<android.view.View: void setVisibility(int)>(8);

     label32:
        goto label36;

     label33:
        virtualinvoke r46.<android.view.View: void setVisibility(int)>(4);

     label34:
        goto label36;

     label35:
        virtualinvoke r46.<android.view.View: void setVisibility(int)>(0);

     label36:
        virtualinvoke r3.<android.view.ViewGroup: void addView(android.view.View)>(r46);

     label37:
        interfaceinvoke r43.<android.content.res.XmlResourceParser: void close()>();

        goto label43;

     label38:
        $r34 := @caughtexception;

        r45 = $r34;

        goto label42;

     label39:
        r51 = new android.view.InflateException;

        r52 = new java.lang.StringBuilder;

        specialinvoke r52.<java.lang.StringBuilder: void <init>()>();

        $r17 = staticinvoke <android.view.LayoutInflater: java.lang.String getParserStateDescription(android.content.Context,android.util.AttributeSet)>(r39, r2);

        virtualinvoke r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        virtualinvoke r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": No start tag found!");

        $r20 = virtualinvoke r52.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r51.<android.view.InflateException: void <init>(java.lang.String)>($r20);

        throw r51;

     label40:
        $r37 := @caughtexception;

        r45 = $r37;

        goto label42;

     label41:
        $r32 := @caughtexception;

        r45 = $r32;

     label42:
        interfaceinvoke r43.<android.content.res.XmlResourceParser: void close()>();

        throw r45;

     label43:
        staticinvoke <android.view.LayoutInflater: void consumeChildElements(org.xmlpull.v1.XmlPullParser)>(r38);

        return;

     label44:
        r53 = interfaceinvoke r1.<android.util.AttributeSet: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "layout");

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("You must specify a valid layout reference. The layout ID ");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r53);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not valid.");

        $r11 = new android.view.InflateException;

        $r12 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<android.view.InflateException: void <init>(java.lang.String)>($r12);

        throw $r11;

     label45:
        $r4 = new android.view.InflateException;

        specialinvoke $r4.<android.view.InflateException: void <init>(java.lang.String)>("<include /> can only be used inside of a ViewGroup");

        throw $r4;

        catch java.lang.Throwable from label08 to label09 with label41;
        catch java.lang.Throwable from label09 to label10 with label41;
        catch java.lang.Throwable from label12 to label13 with label41;
        catch java.lang.Throwable from label14 to label15 with label16;
        catch java.lang.Throwable from label17 to label18 with label38;
        catch java.lang.RuntimeException from label19 to label20 with label22;
        catch java.lang.Throwable from label19 to label20 with label21;
        catch java.lang.Throwable from label24 to label25 with label21;
        catch java.lang.Throwable from label26 to label27 with label38;
        catch java.lang.Throwable from label27 to label28 with label40;
        catch java.lang.Throwable from label29 to label30 with label40;
        catch java.lang.Throwable from label31 to label32 with label40;
        catch java.lang.Throwable from label33 to label34 with label40;
        catch java.lang.Throwable from label35 to label36 with label40;
        catch java.lang.Throwable from label36 to label37 with label40;
        catch java.lang.Throwable from label39 to label40 with label40;
    }

    private void parseViewTag(org.xmlpull.v1.XmlPullParser, android.view.View, android.util.AttributeSet) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.view.LayoutInflater r0;
        org.xmlpull.v1.XmlPullParser r1;
        android.view.View r2;
        android.content.Context $r3;
        int[] $r4;
        int $i0;
        java.lang.CharSequence $r5;
        android.util.AttributeSet r6;
        android.content.res.TypedArray r7;

        r0 := @this: android.view.LayoutInflater;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r2 := @parameter1: android.view.View;

        r6 := @parameter2: android.util.AttributeSet;

        $r3 = virtualinvoke r2.<android.view.View: android.content.Context getContext()>();

        $r4 = <com.android.internal.R$styleable: int[] ViewTag>;

        r7 = virtualinvoke $r3.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[])>(r6, $r4);

        $i0 = virtualinvoke r7.<android.content.res.TypedArray: int getResourceId(int,int)>(1, 0);

        $r5 = virtualinvoke r7.<android.content.res.TypedArray: java.lang.CharSequence getText(int)>(0);

        virtualinvoke r2.<android.view.View: void setTag(int,java.lang.Object)>($i0, $r5);

        virtualinvoke r7.<android.content.res.TypedArray: void recycle()>();

        staticinvoke <android.view.LayoutInflater: void consumeChildElements(org.xmlpull.v1.XmlPullParser)>(r1);

        return;
    }

    private android.view.View tryInflatePrecompiled(int, android.content.res.Resources, android.view.ViewGroup, boolean)
    {
        android.view.LayoutInflater r0;
        int i0;
        boolean z0, $z1;
        java.lang.StringBuilder r1;
        java.lang.String $r5, r19, r20;
        java.lang.ClassLoader $r6;
        java.lang.Class $r7, $r9;
        java.lang.Class[] $r8;
        java.lang.reflect.Method $r10;
        java.lang.Object[] $r11;
        android.content.Context $r12;
        java.lang.Integer $r13;
        java.lang.Object $r14;
        java.lang.Throwable $r15, $r16;
        android.content.res.Resources r17;
        android.view.ViewGroup r18;
        android.view.View r21;
        android.content.res.XmlResourceParser r22;
        android.util.AttributeSet r23;
        android.view.ViewGroup$LayoutParams r24;

        r0 := @this: android.view.LayoutInflater;

        i0 := @parameter0: int;

        r17 := @parameter1: android.content.res.Resources;

        r18 := @parameter2: android.view.ViewGroup;

        z0 := @parameter3: boolean;

        $z1 = r0.<android.view.LayoutInflater: boolean mUseCompiledView>;

        if $z1 != 0 goto label01;

        return null;

     label01:
        staticinvoke <android.os.Trace: void traceBegin(long,java.lang.String)>(8L, "inflate (precompiled)");

        r19 = virtualinvoke r17.<android.content.res.Resources: java.lang.String getResourcePackageName(int)>(i0);

        r20 = virtualinvoke r17.<android.content.res.Resources: java.lang.String getResourceEntryName(int)>(i0);

     label02:
        r1 = new java.lang.StringBuilder;

        specialinvoke r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r19);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".CompiledView");

        $r5 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = r0.<android.view.LayoutInflater: java.lang.ClassLoader mPrecompiledClassLoader>;

        $r7 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>($r5, 0, $r6);

        $r8 = newarray (java.lang.Class)[2];

        $r8[0] = class "Landroid/content/Context;";

        $r9 = <java.lang.Integer: java.lang.Class TYPE>;

        $r8[1] = $r9;

        $r10 = virtualinvoke $r7.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>(r20, $r8);

        $r11 = newarray (java.lang.Object)[2];

        $r12 = r0.<android.view.LayoutInflater: android.content.Context mContext>;

        $r11[0] = $r12;

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r11[1] = $r13;

        $r14 = virtualinvoke $r10.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $r11);

        r21 = (android.view.View) $r14;

     label03:
        if r21 == null goto label15;

        if r18 == null goto label15;

     label04:
        r22 = virtualinvoke r17.<android.content.res.Resources: android.content.res.XmlResourceParser getLayout(int)>(i0);

     label05:
        r23 = staticinvoke <android.util.Xml: android.util.AttributeSet asAttributeSet(org.xmlpull.v1.XmlPullParser)>(r22);

        specialinvoke r0.<android.view.LayoutInflater: void advanceToRootNode(org.xmlpull.v1.XmlPullParser)>(r22);

        r24 = virtualinvoke r18.<android.view.ViewGroup: android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)>(r23);

     label06:
        if z0 == 0 goto label09;

     label07:
        virtualinvoke r18.<android.view.ViewGroup: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>(r21, r24);

     label08:
        goto label10;

     label09:
        virtualinvoke r21.<android.view.View: void setLayoutParams(android.view.ViewGroup$LayoutParams)>(r24);

     label10:
        interfaceinvoke r22.<android.content.res.XmlResourceParser: void close()>();

     label11:
        goto label15;

     label12:
        $r15 := @caughtexception;

     label13:
        interfaceinvoke r22.<android.content.res.XmlResourceParser: void close()>();

     label14:
        throw $r15;

     label15:
        staticinvoke <android.os.Trace: void traceEnd(long)>(8L);

        return r21;

     label16:
        $r16 := @caughtexception;

        staticinvoke <android.os.Trace: void traceEnd(long)>(8L);

        return null;

        catch java.lang.Throwable from label02 to label03 with label16;
        catch java.lang.Throwable from label04 to label05 with label16;
        catch java.lang.Throwable from label05 to label06 with label12;
        catch java.lang.Throwable from label07 to label08 with label12;
        catch java.lang.Throwable from label09 to label10 with label12;
        catch java.lang.Throwable from label10 to label11 with label16;
        catch java.lang.Throwable from label13 to label14 with label16;
        catch java.lang.Throwable from label14 to label15 with label16;
    }

    private final boolean verifyClassLoader(java.lang.reflect.Constructor)
    {
        android.view.LayoutInflater r0;
        java.lang.ClassLoader r1, $r3, r6;
        java.lang.Class $r2;
        android.content.Context $r4;
        java.lang.reflect.Constructor r5;

        r0 := @this: android.view.LayoutInflater;

        r5 := @parameter0: java.lang.reflect.Constructor;

        $r2 = virtualinvoke r5.<java.lang.reflect.Constructor: java.lang.Class getDeclaringClass()>();

        r1 = virtualinvoke $r2.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        $r3 = <android.view.LayoutInflater: java.lang.ClassLoader BOOT_CLASS_LOADER>;

        if r1 != $r3 goto label1;

        return 1;

     label1:
        $r4 = r0.<android.view.LayoutInflater: android.content.Context mContext>;

        r6 = virtualinvoke $r4.<android.content.Context: java.lang.ClassLoader getClassLoader()>();

     label2:
        if r1 != r6 goto label3;

        return 1;

     label3:
        r6 = virtualinvoke r6.<java.lang.ClassLoader: java.lang.ClassLoader getParent()>();

        if r6 != null goto label4;

        return 0;

     label4:
        goto label2;
    }

    public abstract android.view.LayoutInflater cloneInContext(android.content.Context);

    public final android.view.View createView(android.content.Context, java.lang.String, java.lang.String, android.util.AttributeSet) throws java.lang.ClassNotFoundException, android.view.InflateException
    {
        android.view.LayoutInflater r0, $r9;
        android.util.AttributeSet r1;
        java.util.HashMap $r2, $r10, $r22, $r50, $r55;
        java.lang.Object $r3, $r6, $r11, r58, $r61;
        android.view.LayoutInflater$Filter $r4, $r16, $r20, $r21;
        java.lang.Object[] $r5, $r24, $r57, $r59, r60;
        android.content.Context $r7, $r13, $r17, r39;
        android.view.ViewStub $r8;
        java.lang.Boolean $r12, r51, $r56;
        boolean $z0, $z1, $z2, $z3, z4, $z5;
        java.lang.ClassLoader $r14, $r18;
        java.lang.Class $r15, $r19, r44, r47, r54;
        java.lang.Throwable $r23, $r25, $r27;
        java.lang.ClassNotFoundException $r26;
        java.lang.String $r28, $r29, $r32, $r33, $r36, $r37, r40, r41, r46, r53, r68, r74, r79;
        java.lang.StackTraceElement[] $r30, $r34, $r38;
        java.lang.ClassCastException $r31;
        java.lang.Exception $r35;
        java.lang.reflect.Constructor r42, r43, r49;
        java.lang.StringBuilder r45, r52, r67, r72, r73, r77, r78;
        java.lang.Class[] $r48;
        android.view.View r62;
        android.view.InflateException r66, r71, r76;

        r0 := @this: android.view.LayoutInflater;

        r39 := @parameter0: android.content.Context;

        r40 := @parameter1: java.lang.String;

        r41 := @parameter2: java.lang.String;

        r1 := @parameter3: android.util.AttributeSet;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r39);

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r40);

        $r2 = <android.view.LayoutInflater: java.util.HashMap sConstructorMap>;

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r40);

        r42 = (java.lang.reflect.Constructor) $r3;

        r43 = r42;

        if r42 == null goto label001;

        r43 = r42;

        $z3 = specialinvoke r0.<android.view.LayoutInflater: boolean verifyClassLoader(java.lang.reflect.Constructor)>(r42);

        if $z3 != 0 goto label001;

        r43 = null;

        $r22 = <android.view.LayoutInflater: java.util.HashMap sConstructorMap>;

        virtualinvoke $r22.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>(r40);

     label001:
        r44 = null;

     label002:
        staticinvoke <android.os.Trace: void traceBegin(long,java.lang.String)>(8L, r40);

     label003:
        if r43 != null goto label030;

        if r41 == null goto label014;

        r44 = null;

     label004:
        r45 = new java.lang.StringBuilder;

     label005:
        r44 = null;

     label006:
        specialinvoke r45.<java.lang.StringBuilder: void <init>()>();

     label007:
        r44 = null;

     label008:
        virtualinvoke r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r41);

     label009:
        r44 = null;

     label010:
        virtualinvoke r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r40);

     label011:
        r44 = null;

     label012:
        r46 = virtualinvoke r45.<java.lang.StringBuilder: java.lang.String toString()>();

     label013:
        goto label015;

     label014:
        r46 = r40;

     label015:
        r44 = null;

     label016:
        $r17 = r0.<android.view.LayoutInflater: android.content.Context mContext>;

        $r18 = virtualinvoke $r17.<android.content.Context: java.lang.ClassLoader getClassLoader()>();

        $r19 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>(r46, 0, $r18);

        r47 = virtualinvoke $r19.<java.lang.Class: java.lang.Class asSubclass(java.lang.Class)>(class "Landroid/view/View;");

     label017:
        r44 = r47;

     label018:
        $r20 = r0.<android.view.LayoutInflater: android.view.LayoutInflater$Filter mFilter>;

        if $r20 == null goto label023;

     label019:
        if r47 == null goto label023;

        r44 = r47;

     label020:
        $r21 = r0.<android.view.LayoutInflater: android.view.LayoutInflater$Filter mFilter>;

        $z2 = interfaceinvoke $r21.<android.view.LayoutInflater$Filter: boolean onLoadClass(java.lang.Class)>(r47);

        if $z2 != 0 goto label023;

     label021:
        r44 = r47;

     label022:
        specialinvoke r0.<android.view.LayoutInflater: void failNotAllowed(java.lang.String,java.lang.String,android.content.Context,android.util.AttributeSet)>(r40, r41, r39, r1);

     label023:
        r44 = r47;

     label024:
        $r48 = <android.view.LayoutInflater: java.lang.Class[] mConstructorSignature>;

        r49 = virtualinvoke r47.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>($r48);

     label025:
        r44 = r47;

     label026:
        virtualinvoke r49.<java.lang.reflect.Constructor: void setAccessible(boolean)>(1);

     label027:
        r44 = r47;

     label028:
        $r50 = <android.view.LayoutInflater: java.util.HashMap sConstructorMap>;

        virtualinvoke $r50.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r40, r49);

     label029:
        goto label063;

     label030:
        r49 = r43;

        r47 = null;

        r44 = null;

     label031:
        $r4 = r0.<android.view.LayoutInflater: android.view.LayoutInflater$Filter mFilter>;

        if $r4 == null goto label063;

     label032:
        r44 = null;

     label033:
        $r10 = r0.<android.view.LayoutInflater: java.util.HashMap mFilterMap>;

        $r11 = virtualinvoke $r10.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r40);

        r51 = (java.lang.Boolean) $r11;

     label034:
        if r51 != null goto label058;

        if r41 == null goto label045;

        r44 = null;

     label035:
        r52 = new java.lang.StringBuilder;

     label036:
        r44 = null;

     label037:
        specialinvoke r52.<java.lang.StringBuilder: void <init>()>();

     label038:
        r44 = null;

     label039:
        virtualinvoke r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r41);

     label040:
        r44 = null;

     label041:
        virtualinvoke r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r40);

     label042:
        r44 = null;

     label043:
        r53 = virtualinvoke r52.<java.lang.StringBuilder: java.lang.String toString()>();

     label044:
        goto label046;

     label045:
        r53 = r40;

     label046:
        r44 = null;

     label047:
        $r13 = r0.<android.view.LayoutInflater: android.content.Context mContext>;

        $r14 = virtualinvoke $r13.<android.content.Context: java.lang.ClassLoader getClassLoader()>();

        $r15 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>(r53, 0, $r14);

        r54 = virtualinvoke $r15.<java.lang.Class: java.lang.Class asSubclass(java.lang.Class)>(class "Landroid/view/View;");

     label048:
        if r54 == null goto label051;

        r44 = r54;

     label049:
        $r16 = r0.<android.view.LayoutInflater: android.view.LayoutInflater$Filter mFilter>;

        $z1 = interfaceinvoke $r16.<android.view.LayoutInflater$Filter: boolean onLoadClass(java.lang.Class)>(r54);

        if $z1 == 0 goto label051;

     label050:
        z4 = 1;

        goto label052;

     label051:
        z4 = 0;

     label052:
        r44 = r54;

     label053:
        $r55 = r0.<android.view.LayoutInflater: java.util.HashMap mFilterMap>;

        $r56 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z4);

        virtualinvoke $r55.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r40, $r56);

     label054:
        r47 = r54;

        if z4 != 0 goto label057;

        r44 = r54;

     label055:
        specialinvoke r0.<android.view.LayoutInflater: void failNotAllowed(java.lang.String,java.lang.String,android.content.Context,android.util.AttributeSet)>(r40, r41, r39, r1);

     label056:
        r47 = r54;

     label057:
        r49 = r43;

        goto label063;

     label058:
        r47 = null;

        r44 = null;

     label059:
        $r12 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        $z0 = virtualinvoke r51.<java.lang.Boolean: boolean equals(java.lang.Object)>($r12);

        if $z0 == 0 goto label057;

     label060:
        r44 = null;

     label061:
        specialinvoke r0.<android.view.LayoutInflater: void failNotAllowed(java.lang.String,java.lang.String,android.content.Context,android.util.AttributeSet)>(r40, r41, r39, r1);

     label062:
        r47 = null;

        r49 = r43;

     label063:
        r44 = r47;

     label064:
        $r57 = r0.<android.view.LayoutInflater: java.lang.Object[] mConstructorArgs>;

        r58 = $r57[0];

     label065:
        r44 = r47;

     label066:
        $r59 = r0.<android.view.LayoutInflater: java.lang.Object[] mConstructorArgs>;

        $r59[0] = r39;

     label067:
        r44 = r47;

     label068:
        r60 = r0.<android.view.LayoutInflater: java.lang.Object[] mConstructorArgs>;

     label069:
        r60[1] = r1;

     label070:
        $r61 = virtualinvoke r49.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>(r60);

        r62 = (android.view.View) $r61;

        $z5 = r62 instanceof android.view.ViewStub;

        if $z5 == 0 goto label071;

        $r8 = (android.view.ViewStub) r62;

        $r6 = r60[0];

        $r7 = (android.content.Context) $r6;

        $r9 = virtualinvoke r0.<android.view.LayoutInflater: android.view.LayoutInflater cloneInContext(android.content.Context)>($r7);

        virtualinvoke $r8.<android.view.ViewStub: void setLayoutInflater(android.view.LayoutInflater)>($r9);

     label071:
        r44 = r47;

     label072:
        $r5 = r0.<android.view.LayoutInflater: java.lang.Object[] mConstructorArgs>;

        $r5[0] = r58;

     label073:
        staticinvoke <android.os.Trace: void traceEnd(long)>(8L);

        return r62;

     label074:
        $r23 := @caughtexception;

        r44 = r47;

     label075:
        $r24 = r0.<android.view.LayoutInflater: java.lang.Object[] mConstructorArgs>;

        $r24[0] = r58;

     label076:
        r44 = r47;

     label077:
        throw $r23;

     label078:
        $r25 := @caughtexception;

        goto label103;

     label079:
        $r35 := @caughtexception;

     label080:
        r66 = new android.view.InflateException;

        r67 = new java.lang.StringBuilder;

        specialinvoke r67.<java.lang.StringBuilder: void <init>()>();

        $r36 = staticinvoke <android.view.LayoutInflater: java.lang.String getParserStateDescription(android.content.Context,android.util.AttributeSet)>(r39, r1);

        virtualinvoke r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r36);

        virtualinvoke r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": Error inflating class ");

     label081:
        if r44 != null goto label082;

        r68 = "<unknown>";

        goto label083;

     label082:
        r68 = virtualinvoke r44.<java.lang.Class: java.lang.String getName()>();

     label083:
        virtualinvoke r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r68);

        $r37 = virtualinvoke r67.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r66.<android.view.InflateException: void <init>(java.lang.String,java.lang.Throwable)>($r37, $r35);

        $r38 = <android.view.LayoutInflater: java.lang.StackTraceElement[] EMPTY_STACK_TRACE>;

        virtualinvoke r66.<android.view.InflateException: void setStackTrace(java.lang.StackTraceElement[])>($r38);

     label084:
        throw r66;

     label085:
        $r26 := @caughtexception;

     label086:
        throw $r26;

     label087:
        $r31 := @caughtexception;

     label088:
        r71 = new android.view.InflateException;

        r72 = new java.lang.StringBuilder;

        specialinvoke r72.<java.lang.StringBuilder: void <init>()>();

        $r32 = staticinvoke <android.view.LayoutInflater: java.lang.String getParserStateDescription(android.content.Context,android.util.AttributeSet)>(r39, r1);

        virtualinvoke r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32);

        virtualinvoke r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": Class is not a View ");

     label089:
        if r41 == null goto label092;

     label090:
        r73 = new java.lang.StringBuilder;

        specialinvoke r73.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r41);

        virtualinvoke r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r40);

        r74 = virtualinvoke r73.<java.lang.StringBuilder: java.lang.String toString()>();

     label091:
        goto label093;

     label092:
        r74 = r40;

     label093:
        virtualinvoke r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r74);

        $r33 = virtualinvoke r72.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r71.<android.view.InflateException: void <init>(java.lang.String,java.lang.Throwable)>($r33, $r31);

        $r34 = <android.view.LayoutInflater: java.lang.StackTraceElement[] EMPTY_STACK_TRACE>;

        virtualinvoke r71.<android.view.InflateException: void setStackTrace(java.lang.StackTraceElement[])>($r34);

     label094:
        throw r71;

     label095:
        $r27 := @caughtexception;

     label096:
        r76 = new android.view.InflateException;

        r77 = new java.lang.StringBuilder;

        specialinvoke r77.<java.lang.StringBuilder: void <init>()>();

        $r28 = staticinvoke <android.view.LayoutInflater: java.lang.String getParserStateDescription(android.content.Context,android.util.AttributeSet)>(r39, r1);

        virtualinvoke r77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);

        virtualinvoke r77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": Error inflating class ");

     label097:
        if r41 == null goto label100;

     label098:
        r78 = new java.lang.StringBuilder;

        specialinvoke r78.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r41);

        virtualinvoke r78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r40);

        r79 = virtualinvoke r78.<java.lang.StringBuilder: java.lang.String toString()>();

     label099:
        goto label101;

     label100:
        r79 = r40;

     label101:
        virtualinvoke r77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r79);

        $r29 = virtualinvoke r77.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r76.<android.view.InflateException: void <init>(java.lang.String,java.lang.Throwable)>($r29, $r27);

        $r30 = <android.view.LayoutInflater: java.lang.StackTraceElement[] EMPTY_STACK_TRACE>;

        virtualinvoke r76.<android.view.InflateException: void setStackTrace(java.lang.StackTraceElement[])>($r30);

     label102:
        throw r76;

     label103:
        staticinvoke <android.os.Trace: void traceEnd(long)>(8L);

        throw $r25;

        catch java.lang.NoSuchMethodException from label002 to label003 with label095;
        catch java.lang.ClassCastException from label002 to label003 with label087;
        catch java.lang.ClassNotFoundException from label002 to label003 with label085;
        catch java.lang.Exception from label002 to label003 with label079;
        catch java.lang.Throwable from label002 to label003 with label078;
        catch java.lang.NoSuchMethodException from label004 to label005 with label095;
        catch java.lang.ClassCastException from label004 to label005 with label087;
        catch java.lang.ClassNotFoundException from label004 to label005 with label085;
        catch java.lang.Exception from label004 to label005 with label079;
        catch java.lang.Throwable from label004 to label005 with label078;
        catch java.lang.NoSuchMethodException from label006 to label007 with label095;
        catch java.lang.ClassCastException from label006 to label007 with label087;
        catch java.lang.ClassNotFoundException from label006 to label007 with label085;
        catch java.lang.Exception from label006 to label007 with label079;
        catch java.lang.Throwable from label006 to label007 with label078;
        catch java.lang.NoSuchMethodException from label008 to label009 with label095;
        catch java.lang.ClassCastException from label008 to label009 with label087;
        catch java.lang.ClassNotFoundException from label008 to label009 with label085;
        catch java.lang.Exception from label008 to label009 with label079;
        catch java.lang.Throwable from label008 to label009 with label078;
        catch java.lang.NoSuchMethodException from label010 to label011 with label095;
        catch java.lang.ClassCastException from label010 to label011 with label087;
        catch java.lang.ClassNotFoundException from label010 to label011 with label085;
        catch java.lang.Exception from label010 to label011 with label079;
        catch java.lang.Throwable from label010 to label011 with label078;
        catch java.lang.NoSuchMethodException from label012 to label013 with label095;
        catch java.lang.ClassCastException from label012 to label013 with label087;
        catch java.lang.ClassNotFoundException from label012 to label013 with label085;
        catch java.lang.Exception from label012 to label013 with label079;
        catch java.lang.Throwable from label012 to label013 with label078;
        catch java.lang.NoSuchMethodException from label016 to label017 with label095;
        catch java.lang.ClassCastException from label016 to label017 with label087;
        catch java.lang.ClassNotFoundException from label016 to label017 with label085;
        catch java.lang.Exception from label016 to label017 with label079;
        catch java.lang.Throwable from label016 to label017 with label078;
        catch java.lang.NoSuchMethodException from label018 to label019 with label095;
        catch java.lang.ClassCastException from label018 to label019 with label087;
        catch java.lang.ClassNotFoundException from label018 to label019 with label085;
        catch java.lang.Exception from label018 to label019 with label079;
        catch java.lang.Throwable from label018 to label019 with label078;
        catch java.lang.NoSuchMethodException from label020 to label021 with label095;
        catch java.lang.ClassCastException from label020 to label021 with label087;
        catch java.lang.ClassNotFoundException from label020 to label021 with label085;
        catch java.lang.Exception from label020 to label021 with label079;
        catch java.lang.Throwable from label020 to label021 with label078;
        catch java.lang.NoSuchMethodException from label022 to label023 with label095;
        catch java.lang.ClassCastException from label022 to label023 with label087;
        catch java.lang.ClassNotFoundException from label022 to label023 with label085;
        catch java.lang.Exception from label022 to label023 with label079;
        catch java.lang.Throwable from label022 to label023 with label078;
        catch java.lang.NoSuchMethodException from label024 to label025 with label095;
        catch java.lang.ClassCastException from label024 to label025 with label087;
        catch java.lang.ClassNotFoundException from label024 to label025 with label085;
        catch java.lang.Exception from label024 to label025 with label079;
        catch java.lang.Throwable from label024 to label025 with label078;
        catch java.lang.NoSuchMethodException from label026 to label027 with label095;
        catch java.lang.ClassCastException from label026 to label027 with label087;
        catch java.lang.ClassNotFoundException from label026 to label027 with label085;
        catch java.lang.Exception from label026 to label027 with label079;
        catch java.lang.Throwable from label026 to label027 with label078;
        catch java.lang.NoSuchMethodException from label028 to label029 with label095;
        catch java.lang.ClassCastException from label028 to label029 with label087;
        catch java.lang.ClassNotFoundException from label028 to label029 with label085;
        catch java.lang.Exception from label028 to label029 with label079;
        catch java.lang.Throwable from label028 to label029 with label078;
        catch java.lang.NoSuchMethodException from label031 to label032 with label095;
        catch java.lang.ClassCastException from label031 to label032 with label087;
        catch java.lang.ClassNotFoundException from label031 to label032 with label085;
        catch java.lang.Exception from label031 to label032 with label079;
        catch java.lang.Throwable from label031 to label032 with label078;
        catch java.lang.NoSuchMethodException from label033 to label034 with label095;
        catch java.lang.ClassCastException from label033 to label034 with label087;
        catch java.lang.ClassNotFoundException from label033 to label034 with label085;
        catch java.lang.Exception from label033 to label034 with label079;
        catch java.lang.Throwable from label033 to label034 with label078;
        catch java.lang.NoSuchMethodException from label035 to label036 with label095;
        catch java.lang.ClassCastException from label035 to label036 with label087;
        catch java.lang.ClassNotFoundException from label035 to label036 with label085;
        catch java.lang.Exception from label035 to label036 with label079;
        catch java.lang.Throwable from label035 to label036 with label078;
        catch java.lang.NoSuchMethodException from label037 to label038 with label095;
        catch java.lang.ClassCastException from label037 to label038 with label087;
        catch java.lang.ClassNotFoundException from label037 to label038 with label085;
        catch java.lang.Exception from label037 to label038 with label079;
        catch java.lang.Throwable from label037 to label038 with label078;
        catch java.lang.NoSuchMethodException from label039 to label040 with label095;
        catch java.lang.ClassCastException from label039 to label040 with label087;
        catch java.lang.ClassNotFoundException from label039 to label040 with label085;
        catch java.lang.Exception from label039 to label040 with label079;
        catch java.lang.Throwable from label039 to label040 with label078;
        catch java.lang.NoSuchMethodException from label041 to label042 with label095;
        catch java.lang.ClassCastException from label041 to label042 with label087;
        catch java.lang.ClassNotFoundException from label041 to label042 with label085;
        catch java.lang.Exception from label041 to label042 with label079;
        catch java.lang.Throwable from label041 to label042 with label078;
        catch java.lang.NoSuchMethodException from label043 to label044 with label095;
        catch java.lang.ClassCastException from label043 to label044 with label087;
        catch java.lang.ClassNotFoundException from label043 to label044 with label085;
        catch java.lang.Exception from label043 to label044 with label079;
        catch java.lang.Throwable from label043 to label044 with label078;
        catch java.lang.NoSuchMethodException from label047 to label048 with label095;
        catch java.lang.ClassCastException from label047 to label048 with label087;
        catch java.lang.ClassNotFoundException from label047 to label048 with label085;
        catch java.lang.Exception from label047 to label048 with label079;
        catch java.lang.Throwable from label047 to label048 with label078;
        catch java.lang.NoSuchMethodException from label049 to label050 with label095;
        catch java.lang.ClassCastException from label049 to label050 with label087;
        catch java.lang.ClassNotFoundException from label049 to label050 with label085;
        catch java.lang.Exception from label049 to label050 with label079;
        catch java.lang.Throwable from label049 to label050 with label078;
        catch java.lang.NoSuchMethodException from label053 to label054 with label095;
        catch java.lang.ClassCastException from label053 to label054 with label087;
        catch java.lang.ClassNotFoundException from label053 to label054 with label085;
        catch java.lang.Exception from label053 to label054 with label079;
        catch java.lang.Throwable from label053 to label054 with label078;
        catch java.lang.NoSuchMethodException from label055 to label056 with label095;
        catch java.lang.ClassCastException from label055 to label056 with label087;
        catch java.lang.ClassNotFoundException from label055 to label056 with label085;
        catch java.lang.Exception from label055 to label056 with label079;
        catch java.lang.Throwable from label055 to label056 with label078;
        catch java.lang.NoSuchMethodException from label059 to label060 with label095;
        catch java.lang.ClassCastException from label059 to label060 with label087;
        catch java.lang.ClassNotFoundException from label059 to label060 with label085;
        catch java.lang.Exception from label059 to label060 with label079;
        catch java.lang.Throwable from label059 to label060 with label078;
        catch java.lang.NoSuchMethodException from label061 to label062 with label095;
        catch java.lang.ClassCastException from label061 to label062 with label087;
        catch java.lang.ClassNotFoundException from label061 to label062 with label085;
        catch java.lang.Exception from label061 to label062 with label079;
        catch java.lang.Throwable from label061 to label062 with label078;
        catch java.lang.NoSuchMethodException from label064 to label065 with label095;
        catch java.lang.ClassCastException from label064 to label065 with label087;
        catch java.lang.ClassNotFoundException from label064 to label065 with label085;
        catch java.lang.Exception from label064 to label065 with label079;
        catch java.lang.Throwable from label064 to label065 with label078;
        catch java.lang.NoSuchMethodException from label066 to label067 with label095;
        catch java.lang.ClassCastException from label066 to label067 with label087;
        catch java.lang.ClassNotFoundException from label066 to label067 with label085;
        catch java.lang.Exception from label066 to label067 with label079;
        catch java.lang.Throwable from label066 to label067 with label078;
        catch java.lang.NoSuchMethodException from label068 to label069 with label095;
        catch java.lang.ClassCastException from label068 to label069 with label087;
        catch java.lang.ClassNotFoundException from label068 to label069 with label085;
        catch java.lang.Exception from label068 to label069 with label079;
        catch java.lang.Throwable from label068 to label069 with label078;
        catch java.lang.Throwable from label070 to label071 with label074;
        catch java.lang.NoSuchMethodException from label072 to label073 with label095;
        catch java.lang.ClassCastException from label072 to label073 with label087;
        catch java.lang.ClassNotFoundException from label072 to label073 with label085;
        catch java.lang.Exception from label072 to label073 with label079;
        catch java.lang.Throwable from label072 to label073 with label078;
        catch java.lang.NoSuchMethodException from label075 to label076 with label095;
        catch java.lang.ClassCastException from label075 to label076 with label087;
        catch java.lang.ClassNotFoundException from label075 to label076 with label085;
        catch java.lang.Exception from label075 to label076 with label079;
        catch java.lang.Throwable from label075 to label076 with label078;
        catch java.lang.NoSuchMethodException from label077 to label078 with label095;
        catch java.lang.ClassCastException from label077 to label078 with label087;
        catch java.lang.ClassNotFoundException from label077 to label078 with label085;
        catch java.lang.Exception from label077 to label078 with label079;
        catch java.lang.Throwable from label077 to label078 with label078;
        catch java.lang.Throwable from label080 to label081 with label078;
        catch java.lang.Throwable from label082 to label083 with label078;
        catch java.lang.Throwable from label083 to label084 with label078;
        catch java.lang.Throwable from label084 to label085 with label078;
        catch java.lang.Throwable from label086 to label087 with label078;
        catch java.lang.Throwable from label088 to label089 with label078;
        catch java.lang.Throwable from label090 to label091 with label078;
        catch java.lang.Throwable from label093 to label094 with label078;
        catch java.lang.Throwable from label094 to label095 with label078;
        catch java.lang.Throwable from label096 to label097 with label078;
        catch java.lang.Throwable from label098 to label099 with label078;
        catch java.lang.Throwable from label101 to label102 with label078;
        catch java.lang.Throwable from label102 to label103 with label078;
    }

    public final android.view.View createView(java.lang.String, java.lang.String, android.util.AttributeSet) throws java.lang.ClassNotFoundException, android.view.InflateException
    {
        android.view.LayoutInflater r0;
        java.lang.String r1, r2;
        android.util.AttributeSet r3;
        android.content.Context r4, r8;
        java.lang.Object[] $r5;
        java.lang.Object $r6;
        android.view.View $r7;

        r0 := @this: android.view.LayoutInflater;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.util.AttributeSet;

        $r5 = r0.<android.view.LayoutInflater: java.lang.Object[] mConstructorArgs>;

        $r6 = $r5[0];

        r4 = (android.content.Context) $r6;

        r8 = r4;

        if r4 != null goto label1;

        r8 = r0.<android.view.LayoutInflater: android.content.Context mContext>;

     label1:
        $r7 = virtualinvoke r0.<android.view.LayoutInflater: android.view.View createView(android.content.Context,java.lang.String,java.lang.String,android.util.AttributeSet)>(r8, r1, r2, r3);

        return $r7;
    }

    android.view.View createViewFromTag(android.view.View, java.lang.String, android.content.Context, android.util.AttributeSet, boolean)
    {
        android.view.LayoutInflater r0;
        android.util.AttributeSet r1;
        boolean z0, $z1;
        int i0, $i1;
        java.lang.Object[] $r2, $r3, $r4, $r18;
        int[] $r5;
        android.view.ContextThemeWrapper $r6;
        android.view.InflateException $r7, $r14, $r25;
        java.lang.Exception $r8;
        java.lang.StringBuilder $r9, $r20;
        java.lang.String $r10, $r15, $r21, $r26, r29, r31;
        java.lang.StackTraceElement[] $r16, $r27;
        java.lang.Throwable $r17;
        java.lang.ClassNotFoundException $r19;
        android.view.View r28, r34, r35, r37;
        android.content.Context r30, r32;
        android.content.res.TypedArray r33;
        java.lang.Object r36;

        r0 := @this: android.view.LayoutInflater;

        r28 := @parameter0: android.view.View;

        r29 := @parameter1: java.lang.String;

        r30 := @parameter2: android.content.Context;

        r1 := @parameter3: android.util.AttributeSet;

        z0 := @parameter4: boolean;

        r31 = r29;

        $z1 = virtualinvoke r29.<java.lang.String: boolean equals(java.lang.Object)>("view");

        if $z1 == 0 goto label01;

        r31 = interfaceinvoke r1.<android.util.AttributeSet: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "class");

     label01:
        r32 = r30;

        if z0 != 0 goto label03;

        $r5 = <android.view.LayoutInflater: int[] ATTRS_THEME>;

        r33 = virtualinvoke r30.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[])>(r1, $r5);

        i0 = virtualinvoke r33.<android.content.res.TypedArray: int getResourceId(int,int)>(0, 0);

        r32 = r30;

        if i0 == 0 goto label02;

        $r6 = new android.view.ContextThemeWrapper;

        specialinvoke $r6.<android.view.ContextThemeWrapper: void <init>(android.content.Context,int)>(r30, i0);

        r32 = $r6;

     label02:
        virtualinvoke r33.<android.content.res.TypedArray: void recycle()>();

     label03:
        r34 = virtualinvoke r0.<android.view.LayoutInflater: android.view.View tryCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)>(r28, r31, r32, r1);

     label04:
        r35 = r34;

        if r34 != null goto label14;

     label05:
        $r2 = r0.<android.view.LayoutInflater: java.lang.Object[] mConstructorArgs>;

        r36 = $r2[0];

        $r3 = r0.<android.view.LayoutInflater: java.lang.Object[] mConstructorArgs>;

        $r3[0] = r32;

     label06:
        $i1 = virtualinvoke r31.<java.lang.String: int indexOf(int)>(46);

        if -1 != $i1 goto label08;

        r37 = virtualinvoke r0.<android.view.LayoutInflater: android.view.View onCreateView(android.content.Context,android.view.View,java.lang.String,android.util.AttributeSet)>(r32, r28, r31, r1);

     label07:
        goto label09;

     label08:
        r37 = virtualinvoke r0.<android.view.LayoutInflater: android.view.View createView(android.content.Context,java.lang.String,java.lang.String,android.util.AttributeSet)>(r32, r31, null, r1);

     label09:
        $r4 = r0.<android.view.LayoutInflater: java.lang.Object[] mConstructorArgs>;

        $r4[0] = r36;

     label10:
        r35 = r37;

        goto label14;

     label11:
        $r17 := @caughtexception;

     label12:
        $r18 = r0.<android.view.LayoutInflater: java.lang.Object[] mConstructorArgs>;

        $r18[0] = r36;

     label13:
        throw $r17;

     label14:
        return r35;

     label15:
        $r8 := @caughtexception;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = staticinvoke <android.view.LayoutInflater: java.lang.String getParserStateDescription(android.content.Context,android.util.AttributeSet)>(r32, r1);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": Error inflating class ");

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r31);

        $r14 = new android.view.InflateException;

        $r15 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<android.view.InflateException: void <init>(java.lang.String,java.lang.Throwable)>($r15, $r8);

        $r16 = <android.view.LayoutInflater: java.lang.StackTraceElement[] EMPTY_STACK_TRACE>;

        virtualinvoke $r14.<android.view.InflateException: void setStackTrace(java.lang.StackTraceElement[])>($r16);

        throw $r14;

     label16:
        $r19 := @caughtexception;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r21 = staticinvoke <android.view.LayoutInflater: java.lang.String getParserStateDescription(android.content.Context,android.util.AttributeSet)>(r32, r1);

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": Error inflating class ");

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r31);

        $r25 = new android.view.InflateException;

        $r26 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r25.<android.view.InflateException: void <init>(java.lang.String,java.lang.Throwable)>($r26, $r19);

        $r27 = <android.view.LayoutInflater: java.lang.StackTraceElement[] EMPTY_STACK_TRACE>;

        virtualinvoke $r25.<android.view.InflateException: void setStackTrace(java.lang.StackTraceElement[])>($r27);

        throw $r25;

     label17:
        $r7 := @caughtexception;

        throw $r7;

        catch android.view.InflateException from label03 to label04 with label17;
        catch java.lang.ClassNotFoundException from label03 to label04 with label16;
        catch java.lang.Exception from label03 to label04 with label15;
        catch android.view.InflateException from label05 to label06 with label17;
        catch java.lang.ClassNotFoundException from label05 to label06 with label16;
        catch java.lang.Exception from label05 to label06 with label15;
        catch java.lang.Throwable from label06 to label07 with label11;
        catch java.lang.Throwable from label08 to label09 with label11;
        catch android.view.InflateException from label09 to label10 with label17;
        catch java.lang.ClassNotFoundException from label09 to label10 with label16;
        catch java.lang.Exception from label09 to label10 with label15;
        catch android.view.InflateException from label12 to label13 with label17;
        catch java.lang.ClassNotFoundException from label12 to label13 with label16;
        catch java.lang.Exception from label12 to label13 with label15;
        catch android.view.InflateException from label13 to label14 with label17;
        catch java.lang.ClassNotFoundException from label13 to label14 with label16;
        catch java.lang.Exception from label13 to label14 with label15;
    }

    public android.content.Context getContext()
    {
        android.view.LayoutInflater r0;
        android.content.Context $r1;

        r0 := @this: android.view.LayoutInflater;

        $r1 = r0.<android.view.LayoutInflater: android.content.Context mContext>;

        return $r1;
    }

    public final android.view.LayoutInflater$Factory getFactory()
    {
        android.view.LayoutInflater r0;
        android.view.LayoutInflater$Factory $r1;

        r0 := @this: android.view.LayoutInflater;

        $r1 = r0.<android.view.LayoutInflater: android.view.LayoutInflater$Factory mFactory>;

        return $r1;
    }

    public final android.view.LayoutInflater$Factory2 getFactory2()
    {
        android.view.LayoutInflater r0;
        android.view.LayoutInflater$Factory2 $r1;

        r0 := @this: android.view.LayoutInflater;

        $r1 = r0.<android.view.LayoutInflater: android.view.LayoutInflater$Factory2 mFactory2>;

        return $r1;
    }

    public android.view.LayoutInflater$Filter getFilter()
    {
        android.view.LayoutInflater r0;
        android.view.LayoutInflater$Filter $r1;

        r0 := @this: android.view.LayoutInflater;

        $r1 = r0.<android.view.LayoutInflater: android.view.LayoutInflater$Filter mFilter>;

        return $r1;
    }

    public android.view.View inflate(int, android.view.ViewGroup)
    {
        android.view.LayoutInflater r0;
        int i0;
        android.view.ViewGroup r1;
        android.view.View $r2;
        boolean z0;

        r0 := @this: android.view.LayoutInflater;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.ViewGroup;

        if r1 == null goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        $r2 = virtualinvoke r0.<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup,boolean)>(i0, r1, z0);

        return $r2;
    }

    public android.view.View inflate(int, android.view.ViewGroup, boolean)
    {
        android.view.LayoutInflater r0;
        int i0;
        boolean z0;
        android.view.View r1, r7;
        android.content.Context $r2;
        java.lang.Throwable $r3;
        android.view.ViewGroup r4;
        android.content.res.Resources r5;
        android.content.res.XmlResourceParser r6;

        r0 := @this: android.view.LayoutInflater;

        i0 := @parameter0: int;

        r4 := @parameter1: android.view.ViewGroup;

        z0 := @parameter2: boolean;

        $r2 = virtualinvoke r0.<android.view.LayoutInflater: android.content.Context getContext()>();

        r5 = virtualinvoke $r2.<android.content.Context: android.content.res.Resources getResources()>();

        r1 = specialinvoke r0.<android.view.LayoutInflater: android.view.View tryInflatePrecompiled(int,android.content.res.Resources,android.view.ViewGroup,boolean)>(i0, r5, r4, z0);

        if r1 == null goto label1;

        return r1;

     label1:
        r6 = virtualinvoke r5.<android.content.res.Resources: android.content.res.XmlResourceParser getLayout(int)>(i0);

     label2:
        r7 = virtualinvoke r0.<android.view.LayoutInflater: android.view.View inflate(org.xmlpull.v1.XmlPullParser,android.view.ViewGroup,boolean)>(r6, r4, z0);

     label3:
        interfaceinvoke r6.<android.content.res.XmlResourceParser: void close()>();

        return r7;

     label4:
        $r3 := @caughtexception;

        interfaceinvoke r6.<android.content.res.XmlResourceParser: void close()>();

        throw $r3;

        catch java.lang.Throwable from label2 to label3 with label4;
    }

    public android.view.View inflate(org.xmlpull.v1.XmlPullParser, android.view.ViewGroup)
    {
        android.view.LayoutInflater r0;
        org.xmlpull.v1.XmlPullParser r1;
        android.view.ViewGroup r2;
        android.view.View $r3;
        boolean z0;

        r0 := @this: android.view.LayoutInflater;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r2 := @parameter1: android.view.ViewGroup;

        if r2 == null goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        $r3 = virtualinvoke r0.<android.view.LayoutInflater: android.view.View inflate(org.xmlpull.v1.XmlPullParser,android.view.ViewGroup,boolean)>(r1, r2, z0);

        return $r3;
    }

    public android.view.View inflate(org.xmlpull.v1.XmlPullParser, android.view.ViewGroup, boolean)
    {
        android.view.LayoutInflater r0;
        boolean z0, z1;
        java.lang.Object[] r1, $r7, $r9, $r31, $r32, $r45, $r46;
        android.content.Context r2, r4;
        android.util.AttributeSet r3;
        android.view.View r5, r27;
        android.view.ViewGroup$LayoutParams r6, r30;
        java.lang.Object $r8;
        java.lang.String $r10, r28, $r38, $r39, $r40, $r43;
        java.lang.Throwable $r11, $r12, $r19, $r20, $r21, $r22, $r23, $r24, r34, r35, r47;
        java.lang.Exception $r13, $r17, $r18, r33;
        org.xmlpull.v1.XmlPullParser r25;
        android.view.ViewGroup r26;
        java.lang.StackTraceElement[] $r41, $r44;
        android.view.InflateException r48, r50, r51;
        java.lang.StringBuilder r49;
        org.xmlpull.v1.XmlPullParserException r52;

        r0 := @this: android.view.LayoutInflater;

        r25 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r26 := @parameter1: android.view.ViewGroup;

        z0 := @parameter2: boolean;

        r1 = r0.<android.view.LayoutInflater: java.lang.Object[] mConstructorArgs>;

        entermonitor r1;

     label01:
        staticinvoke <android.os.Trace: void traceBegin(long,java.lang.String)>(8L, "inflate");

        r2 = r0.<android.view.LayoutInflater: android.content.Context mContext>;

        r3 = staticinvoke <android.util.Xml: android.util.AttributeSet asAttributeSet(org.xmlpull.v1.XmlPullParser)>(r25);

        $r7 = r0.<android.view.LayoutInflater: java.lang.Object[] mConstructorArgs>;

        $r8 = $r7[0];

        r4 = (android.content.Context) $r8;

        $r9 = r0.<android.view.LayoutInflater: java.lang.Object[] mConstructorArgs>;

        $r9[0] = r2;

     label02:
        r27 = r26;

     label03:
        specialinvoke r0.<android.view.LayoutInflater: void advanceToRootNode(org.xmlpull.v1.XmlPullParser)>(r25);

        r28 = interfaceinvoke r25.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r10 = "merge";

        z1 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>(r28);

     label04:
        if z1 == 0 goto label08;

        if r26 == null goto label07;

        if z0 == 0 goto label07;

     label05:
        virtualinvoke r0.<android.view.LayoutInflater: void rInflate(org.xmlpull.v1.XmlPullParser,android.view.View,android.content.Context,android.util.AttributeSet,boolean)>(r25, r26, r2, r3, 0);

     label06:
        goto label19;

     label07:
        r48 = new android.view.InflateException;

        specialinvoke r48.<android.view.InflateException: void <init>(java.lang.String)>("<merge /> can be used only with a valid ViewGroup root and attachToRoot=true");

        throw r48;

     label08:
        r5 = specialinvoke r0.<android.view.LayoutInflater: android.view.View createViewFromTag(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)>(r26, r28, r2, r3);

     label09:
        r30 = null;

        if r26 == null goto label14;

     label10:
        r6 = virtualinvoke r26.<android.view.ViewGroup: android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)>(r3);

     label11:
        r30 = r6;

        if z0 != 0 goto label14;

     label12:
        virtualinvoke r5.<android.view.View: void setLayoutParams(android.view.ViewGroup$LayoutParams)>(r6);

     label13:
        r30 = r6;

     label14:
        virtualinvoke r0.<android.view.LayoutInflater: void rInflateChildren(org.xmlpull.v1.XmlPullParser,android.view.View,android.util.AttributeSet,boolean)>(r25, r5, r3, 1);

     label15:
        if r26 == null goto label17;

        if z0 == 0 goto label17;

     label16:
        virtualinvoke r26.<android.view.ViewGroup: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>(r5, r30);

     label17:
        if r26 == null goto label18;

        if z0 != 0 goto label19;

     label18:
        r27 = r5;

     label19:
        $r31 = r0.<android.view.LayoutInflater: java.lang.Object[] mConstructorArgs>;

        $r31[0] = r4;

        $r32 = r0.<android.view.LayoutInflater: java.lang.Object[] mConstructorArgs>;

        $r32[1] = null;

        staticinvoke <android.os.Trace: void traceEnd(long)>(8L);

     label20:
        exitmonitor r1;

     label21:
        return r27;

     label22:
        $r13 := @caughtexception;

        r33 = $r13;

        goto label29;

     label23:
        $r11 := @caughtexception;

        r34 = $r11;

        goto label32;

     label24:
        $r22 := @caughtexception;

        r35 = $r22;

        goto label35;

     label25:
        $r18 := @caughtexception;

        r33 = $r18;

        goto label29;

     label26:
        $r12 := @caughtexception;

        r34 = $r12;

        goto label32;

     label27:
        $r23 := @caughtexception;

        r35 = $r23;

        goto label35;

     label28:
        $r17 := @caughtexception;

        r33 = $r17;

     label29:
        r50 = new android.view.InflateException;

        r49 = new java.lang.StringBuilder;

        specialinvoke r49.<java.lang.StringBuilder: void <init>()>();

        $r38 = staticinvoke <android.view.LayoutInflater: java.lang.String getParserStateDescription(android.content.Context,android.util.AttributeSet)>(r2, r3);

        virtualinvoke r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r38);

        virtualinvoke r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r39 = virtualinvoke r33.<java.lang.Exception: java.lang.String getMessage()>();

        virtualinvoke r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r39);

        $r40 = virtualinvoke r49.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r50.<android.view.InflateException: void <init>(java.lang.String,java.lang.Throwable)>($r40, r33);

        $r41 = <android.view.LayoutInflater: java.lang.StackTraceElement[] EMPTY_STACK_TRACE>;

        virtualinvoke r50.<android.view.InflateException: void setStackTrace(java.lang.StackTraceElement[])>($r41);

     label30:
        throw r50;

     label31:
        $r20 := @caughtexception;

        r34 = $r20;

     label32:
        r51 = new android.view.InflateException;

        r52 = (org.xmlpull.v1.XmlPullParserException) r34;

        $r43 = virtualinvoke r52.<org.xmlpull.v1.XmlPullParserException: java.lang.String getMessage()>();

        specialinvoke r51.<android.view.InflateException: void <init>(java.lang.String,java.lang.Throwable)>($r43, r34);

        $r44 = <android.view.LayoutInflater: java.lang.StackTraceElement[] EMPTY_STACK_TRACE>;

        virtualinvoke r51.<android.view.InflateException: void setStackTrace(java.lang.StackTraceElement[])>($r44);

     label33:
        throw r51;

     label34:
        $r19 := @caughtexception;

        r35 = $r19;

     label35:
        $r45 = r0.<android.view.LayoutInflater: java.lang.Object[] mConstructorArgs>;

        $r45[0] = r4;

        $r46 = r0.<android.view.LayoutInflater: java.lang.Object[] mConstructorArgs>;

        $r46[1] = null;

        staticinvoke <android.os.Trace: void traceEnd(long)>(8L);

     label36:
        throw r35;

     label37:
        $r21 := @caughtexception;

        r47 = $r21;

     label38:
        exitmonitor r1;

     label39:
        throw r47;

     label40:
        $r24 := @caughtexception;

        r47 = $r24;

        goto label38;

        catch java.lang.Throwable from label01 to label02 with label37;
        catch org.xmlpull.v1.XmlPullParserException from label03 to label04 with label31;
        catch java.lang.Exception from label03 to label04 with label28;
        catch java.lang.Throwable from label03 to label04 with label27;
        catch org.xmlpull.v1.XmlPullParserException from label05 to label06 with label26;
        catch java.lang.Exception from label05 to label06 with label25;
        catch java.lang.Throwable from label05 to label06 with label24;
        catch org.xmlpull.v1.XmlPullParserException from label07 to label08 with label26;
        catch java.lang.Exception from label07 to label08 with label25;
        catch java.lang.Throwable from label07 to label08 with label24;
        catch org.xmlpull.v1.XmlPullParserException from label08 to label09 with label26;
        catch java.lang.Exception from label08 to label09 with label25;
        catch java.lang.Throwable from label08 to label09 with label24;
        catch org.xmlpull.v1.XmlPullParserException from label10 to label11 with label26;
        catch java.lang.Exception from label10 to label11 with label25;
        catch java.lang.Throwable from label10 to label11 with label24;
        catch org.xmlpull.v1.XmlPullParserException from label12 to label13 with label26;
        catch java.lang.Exception from label12 to label13 with label25;
        catch java.lang.Throwable from label12 to label13 with label24;
        catch org.xmlpull.v1.XmlPullParserException from label14 to label15 with label23;
        catch java.lang.Exception from label14 to label15 with label22;
        catch java.lang.Throwable from label14 to label15 with label34;
        catch org.xmlpull.v1.XmlPullParserException from label16 to label17 with label23;
        catch java.lang.Exception from label16 to label17 with label22;
        catch java.lang.Throwable from label16 to label17 with label34;
        catch java.lang.Throwable from label19 to label20 with label40;
        catch java.lang.Throwable from label20 to label21 with label40;
        catch java.lang.Throwable from label29 to label30 with label34;
        catch java.lang.Throwable from label30 to label31 with label34;
        catch java.lang.Throwable from label32 to label33 with label34;
        catch java.lang.Throwable from label33 to label34 with label34;
        catch java.lang.Throwable from label35 to label36 with label40;
        catch java.lang.Throwable from label36 to label37 with label40;
        catch java.lang.Throwable from label38 to label39 with label40;
    }

    public android.view.View onCreateView(android.content.Context, android.view.View, java.lang.String, android.util.AttributeSet) throws java.lang.ClassNotFoundException
    {
        android.view.LayoutInflater r0;
        android.content.Context r1;
        android.view.View r2, $r5;
        java.lang.String r3;
        android.util.AttributeSet r4;

        r0 := @this: android.view.LayoutInflater;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.view.View;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: android.util.AttributeSet;

        $r5 = virtualinvoke r0.<android.view.LayoutInflater: android.view.View onCreateView(android.view.View,java.lang.String,android.util.AttributeSet)>(r2, r3, r4);

        return $r5;
    }

    protected android.view.View onCreateView(android.view.View, java.lang.String, android.util.AttributeSet) throws java.lang.ClassNotFoundException
    {
        android.view.LayoutInflater r0;
        android.view.View r1, $r4;
        java.lang.String r2;
        android.util.AttributeSet r3;

        r0 := @this: android.view.LayoutInflater;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.util.AttributeSet;

        $r4 = virtualinvoke r0.<android.view.LayoutInflater: android.view.View onCreateView(java.lang.String,android.util.AttributeSet)>(r2, r3);

        return $r4;
    }

    protected android.view.View onCreateView(java.lang.String, android.util.AttributeSet) throws java.lang.ClassNotFoundException
    {
        android.view.LayoutInflater r0;
        java.lang.String r1;
        android.util.AttributeSet r2;
        android.view.View $r3;

        r0 := @this: android.view.LayoutInflater;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.util.AttributeSet;

        $r3 = virtualinvoke r0.<android.view.LayoutInflater: android.view.View createView(java.lang.String,java.lang.String,android.util.AttributeSet)>(r1, "android.view.", r2);

        return $r3;
    }

    void rInflate(org.xmlpull.v1.XmlPullParser, android.view.View, android.content.Context, android.util.AttributeSet, boolean) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.view.LayoutInflater r0;
        org.xmlpull.v1.XmlPullParser r1;
        android.view.View r2, r5;
        android.content.Context r3;
        android.util.AttributeSet r4;
        boolean z0, $z2, $z3, $z4, $z5, z6;
        int i0, i1, $i2, $i3;
        android.view.ViewGroup r6;
        java.lang.String $r7, $r8, $r9, $r10, r13;
        android.view.InflateException $r11, $r12;
        android.view.ViewGroup$LayoutParams r14;

        r0 := @this: android.view.LayoutInflater;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r2 := @parameter1: android.view.View;

        r3 := @parameter2: android.content.Context;

        r4 := @parameter3: android.util.AttributeSet;

        z0 := @parameter4: boolean;

        i0 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        z6 = 0;

     label01:
        i1 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        if i1 != 3 goto label02;

        $i3 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i3 <= i0 goto label10;

     label02:
        if i1 == 1 goto label10;

        if i1 == 2 goto label03;

        goto label01;

     label03:
        r13 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r7 = "requestFocus";

        $z2 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r13);

        if $z2 == 0 goto label04;

        z6 = 1;

        staticinvoke <android.view.LayoutInflater: void consumeChildElements(org.xmlpull.v1.XmlPullParser)>(r1);

        goto label08;

     label04:
        $r8 = "tag";

        $z3 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>(r13);

        if $z3 == 0 goto label05;

        specialinvoke r0.<android.view.LayoutInflater: void parseViewTag(org.xmlpull.v1.XmlPullParser,android.view.View,android.util.AttributeSet)>(r1, r2, r4);

        goto label08;

     label05:
        $r9 = "include";

        $z4 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>(r13);

        if $z4 == 0 goto label07;

        $i2 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i2 == 0 goto label06;

        specialinvoke r0.<android.view.LayoutInflater: void parseInclude(org.xmlpull.v1.XmlPullParser,android.content.Context,android.view.View,android.util.AttributeSet)>(r1, r3, r2, r4);

        goto label08;

     label06:
        $r12 = new android.view.InflateException;

        specialinvoke $r12.<android.view.InflateException: void <init>(java.lang.String)>("<include /> cannot be the root element");

        throw $r12;

     label07:
        $r10 = "merge";

        $z5 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>(r13);

        if $z5 != 0 goto label09;

        r5 = specialinvoke r0.<android.view.LayoutInflater: android.view.View createViewFromTag(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)>(r2, r13, r3, r4);

        r6 = (android.view.ViewGroup) r2;

        r14 = virtualinvoke r6.<android.view.ViewGroup: android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)>(r4);

        virtualinvoke r0.<android.view.LayoutInflater: void rInflateChildren(org.xmlpull.v1.XmlPullParser,android.view.View,android.util.AttributeSet,boolean)>(r1, r5, r4, 1);

        virtualinvoke r6.<android.view.ViewGroup: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>(r5, r14);

     label08:
        goto label01;

     label09:
        $r11 = new android.view.InflateException;

        specialinvoke $r11.<android.view.InflateException: void <init>(java.lang.String)>("<merge /> must be the root element");

        throw $r11;

     label10:
        if z6 == 0 goto label11;

        virtualinvoke r2.<android.view.View: boolean restoreDefaultFocus()>();

     label11:
        if z0 == 0 goto label12;

        virtualinvoke r2.<android.view.View: void onFinishInflate()>();

     label12:
        return;
    }

    final void rInflateChildren(org.xmlpull.v1.XmlPullParser, android.view.View, android.util.AttributeSet, boolean) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.view.LayoutInflater r0;
        org.xmlpull.v1.XmlPullParser r1;
        android.view.View r2;
        android.util.AttributeSet r3;
        boolean z0;
        android.content.Context $r4;

        r0 := @this: android.view.LayoutInflater;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r2 := @parameter1: android.view.View;

        r3 := @parameter2: android.util.AttributeSet;

        z0 := @parameter3: boolean;

        $r4 = virtualinvoke r2.<android.view.View: android.content.Context getContext()>();

        virtualinvoke r0.<android.view.LayoutInflater: void rInflate(org.xmlpull.v1.XmlPullParser,android.view.View,android.content.Context,android.util.AttributeSet,boolean)>(r1, r2, $r4, r3, z0);

        return;
    }

    public void setFactory(android.view.LayoutInflater$Factory)
    {
        android.view.LayoutInflater r0;
        android.view.LayoutInflater$Factory r1, r2;
        boolean $z0;
        java.lang.IllegalStateException $r3;
        java.lang.NullPointerException $r4;
        android.view.LayoutInflater$FactoryMerger $r5;
        android.view.LayoutInflater$Factory2 $r6;

        r0 := @this: android.view.LayoutInflater;

        r1 := @parameter0: android.view.LayoutInflater$Factory;

        $z0 = r0.<android.view.LayoutInflater: boolean mFactorySet>;

        if $z0 != 0 goto label4;

        if r1 == null goto label3;

        r0.<android.view.LayoutInflater: boolean mFactorySet> = 1;

        r2 = r0.<android.view.LayoutInflater: android.view.LayoutInflater$Factory mFactory>;

        if r2 != null goto label1;

        r0.<android.view.LayoutInflater: android.view.LayoutInflater$Factory mFactory> = r1;

        goto label2;

     label1:
        $r5 = new android.view.LayoutInflater$FactoryMerger;

        $r6 = r0.<android.view.LayoutInflater: android.view.LayoutInflater$Factory2 mFactory2>;

        specialinvoke $r5.<android.view.LayoutInflater$FactoryMerger: void <init>(android.view.LayoutInflater$Factory,android.view.LayoutInflater$Factory2,android.view.LayoutInflater$Factory,android.view.LayoutInflater$Factory2)>(r1, null, r2, $r6);

        r0.<android.view.LayoutInflater: android.view.LayoutInflater$Factory mFactory> = $r5;

     label2:
        return;

     label3:
        $r4 = new java.lang.NullPointerException;

        specialinvoke $r4.<java.lang.NullPointerException: void <init>(java.lang.String)>("Given factory can not be null");

        throw $r4;

     label4:
        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("A factory has already been set on this LayoutInflater");

        throw $r3;
    }

    public void setFactory2(android.view.LayoutInflater$Factory2)
    {
        android.view.LayoutInflater r0;
        android.view.LayoutInflater$Factory r1;
        boolean $z0;
        java.lang.IllegalStateException $r2;
        java.lang.NullPointerException $r3;
        android.view.LayoutInflater$FactoryMerger $r4;
        android.view.LayoutInflater$Factory2 $r5, r6;

        r0 := @this: android.view.LayoutInflater;

        r6 := @parameter0: android.view.LayoutInflater$Factory2;

        $z0 = r0.<android.view.LayoutInflater: boolean mFactorySet>;

        if $z0 != 0 goto label4;

        if r6 == null goto label3;

        r0.<android.view.LayoutInflater: boolean mFactorySet> = 1;

        r1 = r0.<android.view.LayoutInflater: android.view.LayoutInflater$Factory mFactory>;

        if r1 != null goto label1;

        r0.<android.view.LayoutInflater: android.view.LayoutInflater$Factory2 mFactory2> = r6;

        r0.<android.view.LayoutInflater: android.view.LayoutInflater$Factory mFactory> = r6;

        goto label2;

     label1:
        $r4 = new android.view.LayoutInflater$FactoryMerger;

        $r5 = r0.<android.view.LayoutInflater: android.view.LayoutInflater$Factory2 mFactory2>;

        specialinvoke $r4.<android.view.LayoutInflater$FactoryMerger: void <init>(android.view.LayoutInflater$Factory,android.view.LayoutInflater$Factory2,android.view.LayoutInflater$Factory,android.view.LayoutInflater$Factory2)>(r6, r6, r1, $r5);

        r0.<android.view.LayoutInflater: android.view.LayoutInflater$Factory2 mFactory2> = $r4;

        r0.<android.view.LayoutInflater: android.view.LayoutInflater$Factory mFactory> = $r4;

     label2:
        return;

     label3:
        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>("Given factory can not be null");

        throw $r3;

     label4:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("A factory has already been set on this LayoutInflater");

        throw $r2;
    }

    public void setFilter(android.view.LayoutInflater$Filter)
    {
        android.view.LayoutInflater r0;
        android.view.LayoutInflater$Filter r1;
        java.util.HashMap $r2;

        r0 := @this: android.view.LayoutInflater;

        r1 := @parameter0: android.view.LayoutInflater$Filter;

        r0.<android.view.LayoutInflater: android.view.LayoutInflater$Filter mFilter> = r1;

        if r1 == null goto label1;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<android.view.LayoutInflater: java.util.HashMap mFilterMap> = $r2;

     label1:
        return;
    }

    public void setPrecompiledLayoutsEnabledForTesting(boolean)
    {
        android.view.LayoutInflater r0;
        boolean z0;

        r0 := @this: android.view.LayoutInflater;

        z0 := @parameter0: boolean;

        specialinvoke r0.<android.view.LayoutInflater: void initPrecompiledViews(boolean)>(z0);

        return;
    }

    public void setPrivateFactory(android.view.LayoutInflater$Factory2)
    {
        android.view.LayoutInflater r0;
        android.view.LayoutInflater$Factory2 r1, r2;
        android.view.LayoutInflater$FactoryMerger $r3;

        r0 := @this: android.view.LayoutInflater;

        r1 := @parameter0: android.view.LayoutInflater$Factory2;

        r2 = r0.<android.view.LayoutInflater: android.view.LayoutInflater$Factory2 mPrivateFactory>;

        if r2 != null goto label1;

        r0.<android.view.LayoutInflater: android.view.LayoutInflater$Factory2 mPrivateFactory> = r1;

        goto label2;

     label1:
        $r3 = new android.view.LayoutInflater$FactoryMerger;

        specialinvoke $r3.<android.view.LayoutInflater$FactoryMerger: void <init>(android.view.LayoutInflater$Factory,android.view.LayoutInflater$Factory2,android.view.LayoutInflater$Factory,android.view.LayoutInflater$Factory2)>(r1, r1, r2, r2);

        r0.<android.view.LayoutInflater: android.view.LayoutInflater$Factory2 mPrivateFactory> = $r3;

     label2:
        return;
    }

    public final android.view.View tryCreateView(android.view.View, java.lang.String, android.content.Context, android.util.AttributeSet)
    {
        android.view.LayoutInflater r0;
        android.view.View r1, r8, r10;
        java.lang.String r2;
        android.content.Context r3;
        android.util.AttributeSet r4;
        android.view.LayoutInflater$Factory2 r5, r7;
        boolean $z0;
        android.view.LayoutInflater$BlinkLayout $r6;
        android.view.LayoutInflater$Factory r9;

        r0 := @this: android.view.LayoutInflater;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.content.Context;

        r4 := @parameter3: android.util.AttributeSet;

        $z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("blink");

        if $z0 == 0 goto label1;

        $r6 = new android.view.LayoutInflater$BlinkLayout;

        specialinvoke $r6.<android.view.LayoutInflater$BlinkLayout: void <init>(android.content.Context,android.util.AttributeSet)>(r3, r4);

        return $r6;

     label1:
        r7 = r0.<android.view.LayoutInflater: android.view.LayoutInflater$Factory2 mFactory2>;

        if r7 == null goto label2;

        r8 = interfaceinvoke r7.<android.view.LayoutInflater$Factory2: android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)>(r1, r2, r3, r4);

        goto label4;

     label2:
        r9 = r0.<android.view.LayoutInflater: android.view.LayoutInflater$Factory mFactory>;

        if r9 == null goto label3;

        r8 = interfaceinvoke r9.<android.view.LayoutInflater$Factory: android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet)>(r2, r3, r4);

        goto label4;

     label3:
        r8 = null;

     label4:
        r10 = r8;

        if r8 != null goto label5;

        r5 = r0.<android.view.LayoutInflater: android.view.LayoutInflater$Factory2 mPrivateFactory>;

        r10 = r8;

        if r5 == null goto label5;

        r10 = interfaceinvoke r5.<android.view.LayoutInflater$Factory2: android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)>(r1, r2, r3, r4);

     label5:
        return r10;
    }
}
