public class android.view.MagnificationSpec extends java.lang.Object implements android.os.Parcelable
{
    public static final android.os.Parcelable$Creator CREATOR;
    private static final int MAX_POOL_SIZE;
    private static final android.util.Pools$SynchronizedPool sPool;
    public float offsetX;
    public float offsetY;
    public float scale;

    static void <clinit>()
    {
        android.util.Pools$SynchronizedPool $r0;
        android.view.MagnificationSpec$1 $r1;

        <android.view.MagnificationSpec: int MAX_POOL_SIZE> = 20;

        $r0 = new android.util.Pools$SynchronizedPool;

        specialinvoke $r0.<android.util.Pools$SynchronizedPool: void <init>(int)>(20);

        <android.view.MagnificationSpec: android.util.Pools$SynchronizedPool sPool> = $r0;

        $r1 = new android.view.MagnificationSpec$1;

        specialinvoke $r1.<android.view.MagnificationSpec$1: void <init>()>();

        <android.view.MagnificationSpec: android.os.Parcelable$Creator CREATOR> = $r1;

        return;
    }

    private void <init>()
    {
        android.view.MagnificationSpec r0;

        r0 := @this: android.view.MagnificationSpec;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.view.MagnificationSpec: float scale> = 1.0F;

        return;
    }

    static void access$000(android.view.MagnificationSpec, android.os.Parcel)
    {
        android.view.MagnificationSpec r0;
        android.os.Parcel r1;

        r0 := @parameter0: android.view.MagnificationSpec;

        r1 := @parameter1: android.os.Parcel;

        specialinvoke r0.<android.view.MagnificationSpec: void initFromParcel(android.os.Parcel)>(r1);

        return;
    }

    private void initFromParcel(android.os.Parcel)
    {
        android.view.MagnificationSpec r0;
        android.os.Parcel r1;
        float $f0, $f1, $f2;

        r0 := @this: android.view.MagnificationSpec;

        r1 := @parameter0: android.os.Parcel;

        $f0 = virtualinvoke r1.<android.os.Parcel: float readFloat()>();

        r0.<android.view.MagnificationSpec: float scale> = $f0;

        $f1 = virtualinvoke r1.<android.os.Parcel: float readFloat()>();

        r0.<android.view.MagnificationSpec: float offsetX> = $f1;

        $f2 = virtualinvoke r1.<android.os.Parcel: float readFloat()>();

        r0.<android.view.MagnificationSpec: float offsetY> = $f2;

        return;
    }

    public static android.view.MagnificationSpec obtain()
    {
        android.util.Pools$SynchronizedPool $r0;
        java.lang.Object $r1;
        android.view.MagnificationSpec $r2, r3;

        $r0 = <android.view.MagnificationSpec: android.util.Pools$SynchronizedPool sPool>;

        $r1 = virtualinvoke $r0.<android.util.Pools$SynchronizedPool: java.lang.Object acquire()>();

        r3 = (android.view.MagnificationSpec) $r1;

        if r3 == null goto label1;

        goto label2;

     label1:
        $r2 = new android.view.MagnificationSpec;

        specialinvoke $r2.<android.view.MagnificationSpec: void <init>()>();

        r3 = $r2;

     label2:
        return r3;
    }

    public static android.view.MagnificationSpec obtain(android.view.MagnificationSpec)
    {
        android.view.MagnificationSpec r0, r1;
        float $f0, $f1, $f2;

        r0 := @parameter0: android.view.MagnificationSpec;

        r1 = staticinvoke <android.view.MagnificationSpec: android.view.MagnificationSpec obtain()>();

        $f0 = r0.<android.view.MagnificationSpec: float scale>;

        r1.<android.view.MagnificationSpec: float scale> = $f0;

        $f1 = r0.<android.view.MagnificationSpec: float offsetX>;

        r1.<android.view.MagnificationSpec: float offsetX> = $f1;

        $f2 = r0.<android.view.MagnificationSpec: float offsetY>;

        r1.<android.view.MagnificationSpec: float offsetY> = $f2;

        return r1;
    }

    public void clear()
    {
        android.view.MagnificationSpec r0;

        r0 := @this: android.view.MagnificationSpec;

        r0.<android.view.MagnificationSpec: float scale> = 1.0F;

        r0.<android.view.MagnificationSpec: float offsetX> = 0.0F;

        r0.<android.view.MagnificationSpec: float offsetY> = 0.0F;

        return;
    }

    public int describeContents()
    {
        android.view.MagnificationSpec r0;

        r0 := @this: android.view.MagnificationSpec;

        return 0;
    }

    public boolean equals(java.lang.Object)
    {
        android.view.MagnificationSpec r0, r4;
        java.lang.Class $r1, $r2;
        float $f0, $f1, $f2, $f3, $f4, $f5;
        byte $b0, $b1, $b2;
        java.lang.Object r3;
        boolean z0;

        r0 := @this: android.view.MagnificationSpec;

        r3 := @parameter0: java.lang.Object;

        z0 = 1;

        if r0 != r3 goto label1;

        return 1;

     label1:
        if r3 == null goto label5;

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = virtualinvoke r3.<java.lang.Object: java.lang.Class getClass()>();

        if $r1 == $r2 goto label2;

        goto label5;

     label2:
        r4 = (android.view.MagnificationSpec) r3;

        $f1 = r0.<android.view.MagnificationSpec: float scale>;

        $f0 = r4.<android.view.MagnificationSpec: float scale>;

        $b0 = $f1 cmpl $f0;

        if $b0 != 0 goto label3;

        $f3 = r0.<android.view.MagnificationSpec: float offsetX>;

        $f2 = r4.<android.view.MagnificationSpec: float offsetX>;

        $b1 = $f3 cmpl $f2;

        if $b1 != 0 goto label3;

        $f5 = r0.<android.view.MagnificationSpec: float offsetY>;

        $f4 = r4.<android.view.MagnificationSpec: float offsetY>;

        $b2 = $f5 cmpl $f4;

        if $b2 != 0 goto label3;

        goto label4;

     label3:
        z0 = 0;

     label4:
        return z0;

     label5:
        return 0;
    }

    public int hashCode()
    {
        android.view.MagnificationSpec r0;
        byte $b0, $b1, $b2;
        int $i3, $i4, $i5, $i6, i7, i8, i9;
        float f0, f1, f2;

        r0 := @this: android.view.MagnificationSpec;

        f0 = r0.<android.view.MagnificationSpec: float scale>;

        i7 = 0;

        $b0 = f0 cmpl 0.0F;

        if $b0 == 0 goto label1;

        i8 = staticinvoke <java.lang.Float: int floatToIntBits(float)>(f0);

        goto label2;

     label1:
        i8 = 0;

     label2:
        f1 = r0.<android.view.MagnificationSpec: float offsetX>;

        $b1 = f1 cmpl 0.0F;

        if $b1 == 0 goto label3;

        i9 = staticinvoke <java.lang.Float: int floatToIntBits(float)>(f1);

        goto label4;

     label3:
        i9 = 0;

     label4:
        f2 = r0.<android.view.MagnificationSpec: float offsetY>;

        $b2 = f2 cmpl 0.0F;

        if $b2 == 0 goto label5;

        i7 = staticinvoke <java.lang.Float: int floatToIntBits(float)>(f2);

     label5:
        $i3 = i8 * 31;

        $i4 = $i3 + i9;

        $i5 = $i4 * 31;

        $i6 = $i5 + i7;

        return $i6;
    }

    public void initialize(float, float, float)
    {
        android.view.MagnificationSpec r0;
        float f0, f1, f2;
        byte $b0;
        java.lang.IllegalArgumentException $r1;

        r0 := @this: android.view.MagnificationSpec;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        $b0 = f0 cmpg 1.0F;

        if $b0 < 0 goto label1;

        r0.<android.view.MagnificationSpec: float scale> = f0;

        r0.<android.view.MagnificationSpec: float offsetX> = f1;

        r0.<android.view.MagnificationSpec: float offsetY> = f2;

        return;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Scale must be greater than or equal to one!");

        throw $r1;
    }

    public boolean isNop()
    {
        android.view.MagnificationSpec r0;
        float $f0, $f1, $f2;
        byte $b0, $b1, $b2;
        boolean z0;

        r0 := @this: android.view.MagnificationSpec;

        $f0 = r0.<android.view.MagnificationSpec: float scale>;

        $b0 = $f0 cmpl 1.0F;

        if $b0 != 0 goto label1;

        $f1 = r0.<android.view.MagnificationSpec: float offsetX>;

        $b1 = $f1 cmpl 0.0F;

        if $b1 != 0 goto label1;

        $f2 = r0.<android.view.MagnificationSpec: float offsetY>;

        $b2 = $f2 cmpl 0.0F;

        if $b2 != 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public void recycle()
    {
        android.view.MagnificationSpec r0;
        android.util.Pools$SynchronizedPool $r1;

        r0 := @this: android.view.MagnificationSpec;

        virtualinvoke r0.<android.view.MagnificationSpec: void clear()>();

        $r1 = <android.view.MagnificationSpec: android.util.Pools$SynchronizedPool sPool>;

        virtualinvoke $r1.<android.util.Pools$SynchronizedPool: boolean release(java.lang.Object)>(r0);

        return;
    }

    public void setTo(android.view.MagnificationSpec)
    {
        android.view.MagnificationSpec r0, r1;
        float $f0, $f1, $f2;

        r0 := @this: android.view.MagnificationSpec;

        r1 := @parameter0: android.view.MagnificationSpec;

        $f0 = r1.<android.view.MagnificationSpec: float scale>;

        r0.<android.view.MagnificationSpec: float scale> = $f0;

        $f1 = r1.<android.view.MagnificationSpec: float offsetX>;

        r0.<android.view.MagnificationSpec: float offsetX> = $f1;

        $f2 = r1.<android.view.MagnificationSpec: float offsetY>;

        r0.<android.view.MagnificationSpec: float offsetY> = $f2;

        return;
    }

    public java.lang.String toString()
    {
        android.view.MagnificationSpec r0;
        java.lang.StringBuilder $r2;
        float $f0, $f1, $f2;
        java.lang.String $r4, $r7, $r10, $r13;

        r0 := @this: android.view.MagnificationSpec;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<scale:");

        $f0 = r0.<android.view.MagnificationSpec: float scale>;

        $r4 = staticinvoke <java.lang.Float: java.lang.String toString(float)>($f0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",offsetX:");

        $f1 = r0.<android.view.MagnificationSpec: float offsetX>;

        $r7 = staticinvoke <java.lang.Float: java.lang.String toString(float)>($f1);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",offsetY:");

        $f2 = r0.<android.view.MagnificationSpec: float offsetY>;

        $r10 = staticinvoke <java.lang.Float: java.lang.String toString(float)>($f2);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">");

        $r13 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r13;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.view.MagnificationSpec r0;
        android.os.Parcel r1;
        int i0;
        float $f0, $f1, $f2;

        r0 := @this: android.view.MagnificationSpec;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        $f0 = r0.<android.view.MagnificationSpec: float scale>;

        virtualinvoke r1.<android.os.Parcel: void writeFloat(float)>($f0);

        $f1 = r0.<android.view.MagnificationSpec: float offsetX>;

        virtualinvoke r1.<android.os.Parcel: void writeFloat(float)>($f1);

        $f2 = r0.<android.view.MagnificationSpec: float offsetY>;

        virtualinvoke r1.<android.os.Parcel: void writeFloat(float)>($f2);

        virtualinvoke r0.<android.view.MagnificationSpec: void recycle()>();

        return;
    }
}
