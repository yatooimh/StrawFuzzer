public final class android.view.MotionEvent extends android.view.InputEvent implements android.os.Parcelable
{
    public static final int ACTION_BUTTON_PRESS;
    public static final int ACTION_BUTTON_RELEASE;
    public static final int ACTION_CANCEL;
    public static final int ACTION_DOWN;
    public static final int ACTION_HOVER_ENTER;
    public static final int ACTION_HOVER_EXIT;
    public static final int ACTION_HOVER_MOVE;
    public static final int ACTION_MASK;
    public static final int ACTION_MOVE;
    public static final int ACTION_OUTSIDE;
    public static final int ACTION_POINTER_1_DOWN;
    public static final int ACTION_POINTER_1_UP;
    public static final int ACTION_POINTER_2_DOWN;
    public static final int ACTION_POINTER_2_UP;
    public static final int ACTION_POINTER_3_DOWN;
    public static final int ACTION_POINTER_3_UP;
    public static final int ACTION_POINTER_DOWN;
    public static final int ACTION_POINTER_ID_MASK;
    public static final int ACTION_POINTER_ID_SHIFT;
    public static final int ACTION_POINTER_INDEX_MASK;
    public static final int ACTION_POINTER_INDEX_SHIFT;
    public static final int ACTION_POINTER_UP;
    public static final int ACTION_SCROLL;
    public static final int ACTION_UP;
    public static final int AXIS_BRAKE;
    public static final int AXIS_DISTANCE;
    public static final int AXIS_GAS;
    public static final int AXIS_GENERIC_1;
    public static final int AXIS_GENERIC_10;
    public static final int AXIS_GENERIC_11;
    public static final int AXIS_GENERIC_12;
    public static final int AXIS_GENERIC_13;
    public static final int AXIS_GENERIC_14;
    public static final int AXIS_GENERIC_15;
    public static final int AXIS_GENERIC_16;
    public static final int AXIS_GENERIC_2;
    public static final int AXIS_GENERIC_3;
    public static final int AXIS_GENERIC_4;
    public static final int AXIS_GENERIC_5;
    public static final int AXIS_GENERIC_6;
    public static final int AXIS_GENERIC_7;
    public static final int AXIS_GENERIC_8;
    public static final int AXIS_GENERIC_9;
    public static final int AXIS_HAT_X;
    public static final int AXIS_HAT_Y;
    public static final int AXIS_HSCROLL;
    public static final int AXIS_LTRIGGER;
    public static final int AXIS_ORIENTATION;
    public static final int AXIS_PRESSURE;
    public static final int AXIS_RELATIVE_X;
    public static final int AXIS_RELATIVE_Y;
    public static final int AXIS_RTRIGGER;
    public static final int AXIS_RUDDER;
    public static final int AXIS_RX;
    public static final int AXIS_RY;
    public static final int AXIS_RZ;
    public static final int AXIS_SCROLL;
    public static final int AXIS_SIZE;
    private static final android.util.SparseArray AXIS_SYMBOLIC_NAMES;
    public static final int AXIS_THROTTLE;
    public static final int AXIS_TILT;
    public static final int AXIS_TOOL_MAJOR;
    public static final int AXIS_TOOL_MINOR;
    public static final int AXIS_TOUCH_MAJOR;
    public static final int AXIS_TOUCH_MINOR;
    public static final int AXIS_VSCROLL;
    public static final int AXIS_WHEEL;
    public static final int AXIS_X;
    public static final int AXIS_Y;
    public static final int AXIS_Z;
    public static final int BUTTON_BACK;
    public static final int BUTTON_FORWARD;
    public static final int BUTTON_PRIMARY;
    public static final int BUTTON_SECONDARY;
    public static final int BUTTON_STYLUS_PRIMARY;
    public static final int BUTTON_STYLUS_SECONDARY;
    private static final java.lang.String[] BUTTON_SYMBOLIC_NAMES;
    public static final int BUTTON_TERTIARY;
    public static final int CLASSIFICATION_AMBIGUOUS_GESTURE;
    public static final int CLASSIFICATION_DEEP_PRESS;
    public static final int CLASSIFICATION_NONE;
    public static final android.os.Parcelable$Creator CREATOR;
    private static final boolean DEBUG_CONCISE_TOSTRING;
    public static final int EDGE_BOTTOM;
    public static final int EDGE_LEFT;
    public static final int EDGE_RIGHT;
    public static final int EDGE_TOP;
    public static final int FLAG_HOVER_EXIT_PENDING;
    public static final int FLAG_IS_GENERATED_GESTURE;
    public static final int FLAG_TAINTED;
    public static final int FLAG_TARGET_ACCESSIBILITY_FOCUS;
    public static final int FLAG_WINDOW_IS_OBSCURED;
    public static final int FLAG_WINDOW_IS_PARTIALLY_OBSCURED;
    private static final int HISTORY_CURRENT;
    private static final float INVALID_CURSOR_POSITION;
    public static final int INVALID_POINTER_ID;
    private static final java.lang.String LABEL_PREFIX;
    private static final int MAX_RECYCLED;
    private static final long NS_PER_MS;
    private static final java.lang.String TAG;
    public static final int TOOL_TYPE_ERASER;
    public static final int TOOL_TYPE_FINGER;
    public static final int TOOL_TYPE_MOUSE;
    public static final int TOOL_TYPE_STYLUS;
    private static final android.util.SparseArray TOOL_TYPE_SYMBOLIC_NAMES;
    public static final int TOOL_TYPE_UNKNOWN;
    private static final java.lang.Object gRecyclerLock;
    private static android.view.MotionEvent gRecyclerTop;
    private static int gRecyclerUsed;
    private static final java.lang.Object gSharedTempLock;
    private static android.view.MotionEvent$PointerCoords[] gSharedTempPointerCoords;
    private static int[] gSharedTempPointerIndexMap;
    private static android.view.MotionEvent$PointerProperties[] gSharedTempPointerProperties;
    private long mNativePtr;
    private android.view.MotionEvent mNext;

    static void <clinit>()
    {
        android.util.SparseArray $r0, $r2, r6, r7;
        java.lang.String[] $r1;
        java.lang.Object $r3, $r4;
        android.view.MotionEvent$1 $r5;

        <android.view.MotionEvent: int TOOL_TYPE_UNKNOWN> = 0;

        <android.view.MotionEvent: int TOOL_TYPE_STYLUS> = 2;

        <android.view.MotionEvent: int TOOL_TYPE_MOUSE> = 3;

        <android.view.MotionEvent: int TOOL_TYPE_FINGER> = 1;

        <android.view.MotionEvent: int TOOL_TYPE_ERASER> = 4;

        <android.view.MotionEvent: java.lang.String TAG> = "MotionEvent";

        <android.view.MotionEvent: long NS_PER_MS> = 1000000L;

        <android.view.MotionEvent: int MAX_RECYCLED> = 10;

        <android.view.MotionEvent: java.lang.String LABEL_PREFIX> = "AXIS_";

        <android.view.MotionEvent: int INVALID_POINTER_ID> = -1;

        <android.view.MotionEvent: float INVALID_CURSOR_POSITION> = #NaNF;

        <android.view.MotionEvent: int HISTORY_CURRENT> = -2147483648;

        <android.view.MotionEvent: int FLAG_WINDOW_IS_PARTIALLY_OBSCURED> = 2;

        <android.view.MotionEvent: int FLAG_WINDOW_IS_OBSCURED> = 1;

        <android.view.MotionEvent: int FLAG_TARGET_ACCESSIBILITY_FOCUS> = 1073741824;

        <android.view.MotionEvent: int FLAG_TAINTED> = -2147483648;

        <android.view.MotionEvent: int FLAG_IS_GENERATED_GESTURE> = 8;

        <android.view.MotionEvent: int FLAG_HOVER_EXIT_PENDING> = 4;

        <android.view.MotionEvent: int EDGE_TOP> = 1;

        <android.view.MotionEvent: int EDGE_RIGHT> = 8;

        <android.view.MotionEvent: int EDGE_LEFT> = 4;

        <android.view.MotionEvent: int EDGE_BOTTOM> = 2;

        <android.view.MotionEvent: boolean DEBUG_CONCISE_TOSTRING> = 0;

        <android.view.MotionEvent: int CLASSIFICATION_NONE> = 0;

        <android.view.MotionEvent: int CLASSIFICATION_DEEP_PRESS> = 2;

        <android.view.MotionEvent: int CLASSIFICATION_AMBIGUOUS_GESTURE> = 1;

        <android.view.MotionEvent: int BUTTON_TERTIARY> = 4;

        <android.view.MotionEvent: int BUTTON_STYLUS_SECONDARY> = 64;

        <android.view.MotionEvent: int BUTTON_STYLUS_PRIMARY> = 32;

        <android.view.MotionEvent: int BUTTON_SECONDARY> = 2;

        <android.view.MotionEvent: int BUTTON_PRIMARY> = 1;

        <android.view.MotionEvent: int BUTTON_FORWARD> = 16;

        <android.view.MotionEvent: int BUTTON_BACK> = 8;

        <android.view.MotionEvent: int AXIS_Z> = 11;

        <android.view.MotionEvent: int AXIS_Y> = 1;

        <android.view.MotionEvent: int AXIS_X> = 0;

        <android.view.MotionEvent: int AXIS_WHEEL> = 21;

        <android.view.MotionEvent: int AXIS_VSCROLL> = 9;

        <android.view.MotionEvent: int AXIS_TOUCH_MINOR> = 5;

        <android.view.MotionEvent: int AXIS_TOUCH_MAJOR> = 4;

        <android.view.MotionEvent: int AXIS_TOOL_MINOR> = 7;

        <android.view.MotionEvent: int AXIS_TOOL_MAJOR> = 6;

        <android.view.MotionEvent: int AXIS_TILT> = 25;

        <android.view.MotionEvent: int AXIS_THROTTLE> = 19;

        <android.view.MotionEvent: int AXIS_SIZE> = 3;

        <android.view.MotionEvent: int AXIS_SCROLL> = 26;

        <android.view.MotionEvent: int AXIS_RZ> = 14;

        <android.view.MotionEvent: int AXIS_RY> = 13;

        <android.view.MotionEvent: int AXIS_RX> = 12;

        <android.view.MotionEvent: int AXIS_RUDDER> = 20;

        <android.view.MotionEvent: int AXIS_RTRIGGER> = 18;

        <android.view.MotionEvent: int AXIS_RELATIVE_Y> = 28;

        <android.view.MotionEvent: int AXIS_RELATIVE_X> = 27;

        <android.view.MotionEvent: int AXIS_PRESSURE> = 2;

        <android.view.MotionEvent: int AXIS_ORIENTATION> = 8;

        <android.view.MotionEvent: int AXIS_LTRIGGER> = 17;

        <android.view.MotionEvent: int AXIS_HSCROLL> = 10;

        <android.view.MotionEvent: int AXIS_HAT_Y> = 16;

        <android.view.MotionEvent: int AXIS_HAT_X> = 15;

        <android.view.MotionEvent: int AXIS_GENERIC_9> = 40;

        <android.view.MotionEvent: int AXIS_GENERIC_8> = 39;

        <android.view.MotionEvent: int AXIS_GENERIC_7> = 38;

        <android.view.MotionEvent: int AXIS_GENERIC_6> = 37;

        <android.view.MotionEvent: int AXIS_GENERIC_5> = 36;

        <android.view.MotionEvent: int AXIS_GENERIC_4> = 35;

        <android.view.MotionEvent: int AXIS_GENERIC_3> = 34;

        <android.view.MotionEvent: int AXIS_GENERIC_2> = 33;

        <android.view.MotionEvent: int AXIS_GENERIC_16> = 47;

        <android.view.MotionEvent: int AXIS_GENERIC_15> = 46;

        <android.view.MotionEvent: int AXIS_GENERIC_14> = 45;

        <android.view.MotionEvent: int AXIS_GENERIC_13> = 44;

        <android.view.MotionEvent: int AXIS_GENERIC_12> = 43;

        <android.view.MotionEvent: int AXIS_GENERIC_11> = 42;

        <android.view.MotionEvent: int AXIS_GENERIC_10> = 41;

        <android.view.MotionEvent: int AXIS_GENERIC_1> = 32;

        <android.view.MotionEvent: int AXIS_GAS> = 22;

        <android.view.MotionEvent: int AXIS_DISTANCE> = 24;

        <android.view.MotionEvent: int AXIS_BRAKE> = 23;

        <android.view.MotionEvent: int ACTION_UP> = 1;

        <android.view.MotionEvent: int ACTION_SCROLL> = 8;

        <android.view.MotionEvent: int ACTION_POINTER_UP> = 6;

        <android.view.MotionEvent: int ACTION_POINTER_INDEX_SHIFT> = 8;

        <android.view.MotionEvent: int ACTION_POINTER_INDEX_MASK> = 65280;

        <android.view.MotionEvent: int ACTION_POINTER_ID_SHIFT> = 8;

        <android.view.MotionEvent: int ACTION_POINTER_ID_MASK> = 65280;

        <android.view.MotionEvent: int ACTION_POINTER_DOWN> = 5;

        <android.view.MotionEvent: int ACTION_POINTER_3_UP> = 518;

        <android.view.MotionEvent: int ACTION_POINTER_3_DOWN> = 517;

        <android.view.MotionEvent: int ACTION_POINTER_2_UP> = 262;

        <android.view.MotionEvent: int ACTION_POINTER_2_DOWN> = 261;

        <android.view.MotionEvent: int ACTION_POINTER_1_UP> = 6;

        <android.view.MotionEvent: int ACTION_POINTER_1_DOWN> = 5;

        <android.view.MotionEvent: int ACTION_OUTSIDE> = 4;

        <android.view.MotionEvent: int ACTION_MOVE> = 2;

        <android.view.MotionEvent: int ACTION_MASK> = 255;

        <android.view.MotionEvent: int ACTION_HOVER_MOVE> = 7;

        <android.view.MotionEvent: int ACTION_HOVER_EXIT> = 10;

        <android.view.MotionEvent: int ACTION_HOVER_ENTER> = 9;

        <android.view.MotionEvent: int ACTION_DOWN> = 0;

        <android.view.MotionEvent: int ACTION_CANCEL> = 3;

        <android.view.MotionEvent: int ACTION_BUTTON_RELEASE> = 12;

        <android.view.MotionEvent: int ACTION_BUTTON_PRESS> = 11;

        $r0 = new android.util.SparseArray;

        specialinvoke $r0.<android.util.SparseArray: void <init>()>();

        <android.view.MotionEvent: android.util.SparseArray AXIS_SYMBOLIC_NAMES> = $r0;

        r6 = <android.view.MotionEvent: android.util.SparseArray AXIS_SYMBOLIC_NAMES>;

        virtualinvoke r6.<android.util.SparseArray: void append(int,java.lang.Object)>(0, "AXIS_X");

        virtualinvoke r6.<android.util.SparseArray: void append(int,java.lang.Object)>(1, "AXIS_Y");

        virtualinvoke r6.<android.util.SparseArray: void append(int,java.lang.Object)>(2, "AXIS_PRESSURE");

        virtualinvoke r6.<android.util.SparseArray: void append(int,java.lang.Object)>(3, "AXIS_SIZE");

        virtualinvoke r6.<android.util.SparseArray: void append(int,java.lang.Object)>(4, "AXIS_TOUCH_MAJOR");

        virtualinvoke r6.<android.util.SparseArray: void append(int,java.lang.Object)>(5, "AXIS_TOUCH_MINOR");

        virtualinvoke r6.<android.util.SparseArray: void append(int,java.lang.Object)>(6, "AXIS_TOOL_MAJOR");

        virtualinvoke r6.<android.util.SparseArray: void append(int,java.lang.Object)>(7, "AXIS_TOOL_MINOR");

        virtualinvoke r6.<android.util.SparseArray: void append(int,java.lang.Object)>(8, "AXIS_ORIENTATION");

        virtualinvoke r6.<android.util.SparseArray: void append(int,java.lang.Object)>(9, "AXIS_VSCROLL");

        virtualinvoke r6.<android.util.SparseArray: void append(int,java.lang.Object)>(10, "AXIS_HSCROLL");

        virtualinvoke r6.<android.util.SparseArray: void append(int,java.lang.Object)>(11, "AXIS_Z");

        virtualinvoke r6.<android.util.SparseArray: void append(int,java.lang.Object)>(12, "AXIS_RX");

        virtualinvoke r6.<android.util.SparseArray: void append(int,java.lang.Object)>(13, "AXIS_RY");

        virtualinvoke r6.<android.util.SparseArray: void append(int,java.lang.Object)>(14, "AXIS_RZ");

        virtualinvoke r6.<android.util.SparseArray: void append(int,java.lang.Object)>(15, "AXIS_HAT_X");

        virtualinvoke r6.<android.util.SparseArray: void append(int,java.lang.Object)>(16, "AXIS_HAT_Y");

        virtualinvoke r6.<android.util.SparseArray: void append(int,java.lang.Object)>(17, "AXIS_LTRIGGER");

        virtualinvoke r6.<android.util.SparseArray: void append(int,java.lang.Object)>(18, "AXIS_RTRIGGER");

        virtualinvoke r6.<android.util.SparseArray: void append(int,java.lang.Object)>(19, "AXIS_THROTTLE");

        virtualinvoke r6.<android.util.SparseArray: void append(int,java.lang.Object)>(20, "AXIS_RUDDER");

        virtualinvoke r6.<android.util.SparseArray: void append(int,java.lang.Object)>(21, "AXIS_WHEEL");

        virtualinvoke r6.<android.util.SparseArray: void append(int,java.lang.Object)>(22, "AXIS_GAS");

        virtualinvoke r6.<android.util.SparseArray: void append(int,java.lang.Object)>(23, "AXIS_BRAKE");

        virtualinvoke r6.<android.util.SparseArray: void append(int,java.lang.Object)>(24, "AXIS_DISTANCE");

        virtualinvoke r6.<android.util.SparseArray: void append(int,java.lang.Object)>(25, "AXIS_TILT");

        virtualinvoke r6.<android.util.SparseArray: void append(int,java.lang.Object)>(26, "AXIS_SCROLL");

        virtualinvoke r6.<android.util.SparseArray: void append(int,java.lang.Object)>(27, "AXIS_REALTIVE_X");

        virtualinvoke r6.<android.util.SparseArray: void append(int,java.lang.Object)>(28, "AXIS_REALTIVE_Y");

        virtualinvoke r6.<android.util.SparseArray: void append(int,java.lang.Object)>(32, "AXIS_GENERIC_1");

        virtualinvoke r6.<android.util.SparseArray: void append(int,java.lang.Object)>(33, "AXIS_GENERIC_2");

        virtualinvoke r6.<android.util.SparseArray: void append(int,java.lang.Object)>(34, "AXIS_GENERIC_3");

        virtualinvoke r6.<android.util.SparseArray: void append(int,java.lang.Object)>(35, "AXIS_GENERIC_4");

        virtualinvoke r6.<android.util.SparseArray: void append(int,java.lang.Object)>(36, "AXIS_GENERIC_5");

        virtualinvoke r6.<android.util.SparseArray: void append(int,java.lang.Object)>(37, "AXIS_GENERIC_6");

        virtualinvoke r6.<android.util.SparseArray: void append(int,java.lang.Object)>(38, "AXIS_GENERIC_7");

        virtualinvoke r6.<android.util.SparseArray: void append(int,java.lang.Object)>(39, "AXIS_GENERIC_8");

        virtualinvoke r6.<android.util.SparseArray: void append(int,java.lang.Object)>(40, "AXIS_GENERIC_9");

        virtualinvoke r6.<android.util.SparseArray: void append(int,java.lang.Object)>(41, "AXIS_GENERIC_10");

        virtualinvoke r6.<android.util.SparseArray: void append(int,java.lang.Object)>(42, "AXIS_GENERIC_11");

        virtualinvoke r6.<android.util.SparseArray: void append(int,java.lang.Object)>(43, "AXIS_GENERIC_12");

        virtualinvoke r6.<android.util.SparseArray: void append(int,java.lang.Object)>(44, "AXIS_GENERIC_13");

        virtualinvoke r6.<android.util.SparseArray: void append(int,java.lang.Object)>(45, "AXIS_GENERIC_14");

        virtualinvoke r6.<android.util.SparseArray: void append(int,java.lang.Object)>(46, "AXIS_GENERIC_15");

        virtualinvoke r6.<android.util.SparseArray: void append(int,java.lang.Object)>(47, "AXIS_GENERIC_16");

        $r1 = newarray (java.lang.String)[32];

        $r1[0] = "BUTTON_PRIMARY";

        $r1[1] = "BUTTON_SECONDARY";

        $r1[2] = "BUTTON_TERTIARY";

        $r1[3] = "BUTTON_BACK";

        $r1[4] = "BUTTON_FORWARD";

        $r1[5] = "BUTTON_STYLUS_PRIMARY";

        $r1[6] = "BUTTON_STYLUS_SECONDARY";

        $r1[7] = "0x00000080";

        $r1[8] = "0x00000100";

        $r1[9] = "0x00000200";

        $r1[10] = "0x00000400";

        $r1[11] = "0x00000800";

        $r1[12] = "0x00001000";

        $r1[13] = "0x00002000";

        $r1[14] = "0x00004000";

        $r1[15] = "0x00008000";

        $r1[16] = "0x00010000";

        $r1[17] = "0x00020000";

        $r1[18] = "0x00040000";

        $r1[19] = "0x00080000";

        $r1[20] = "0x00100000";

        $r1[21] = "0x00200000";

        $r1[22] = "0x00400000";

        $r1[23] = "0x00800000";

        $r1[24] = "0x01000000";

        $r1[25] = "0x02000000";

        $r1[26] = "0x04000000";

        $r1[27] = "0x08000000";

        $r1[28] = "0x10000000";

        $r1[29] = "0x20000000";

        $r1[30] = "0x40000000";

        $r1[31] = "0x80000000";

        <android.view.MotionEvent: java.lang.String[] BUTTON_SYMBOLIC_NAMES> = $r1;

        $r2 = new android.util.SparseArray;

        specialinvoke $r2.<android.util.SparseArray: void <init>()>();

        <android.view.MotionEvent: android.util.SparseArray TOOL_TYPE_SYMBOLIC_NAMES> = $r2;

        r7 = <android.view.MotionEvent: android.util.SparseArray TOOL_TYPE_SYMBOLIC_NAMES>;

        virtualinvoke r7.<android.util.SparseArray: void append(int,java.lang.Object)>(0, "TOOL_TYPE_UNKNOWN");

        virtualinvoke r7.<android.util.SparseArray: void append(int,java.lang.Object)>(1, "TOOL_TYPE_FINGER");

        virtualinvoke r7.<android.util.SparseArray: void append(int,java.lang.Object)>(2, "TOOL_TYPE_STYLUS");

        virtualinvoke r7.<android.util.SparseArray: void append(int,java.lang.Object)>(3, "TOOL_TYPE_MOUSE");

        virtualinvoke r7.<android.util.SparseArray: void append(int,java.lang.Object)>(4, "TOOL_TYPE_ERASER");

        $r3 = new java.lang.Object;

        specialinvoke $r3.<java.lang.Object: void <init>()>();

        <android.view.MotionEvent: java.lang.Object gRecyclerLock> = $r3;

        $r4 = new java.lang.Object;

        specialinvoke $r4.<java.lang.Object: void <init>()>();

        <android.view.MotionEvent: java.lang.Object gSharedTempLock> = $r4;

        $r5 = new android.view.MotionEvent$1;

        specialinvoke $r5.<android.view.MotionEvent$1: void <init>()>();

        <android.view.MotionEvent: android.os.Parcelable$Creator CREATOR> = $r5;

        return;
    }

    private void <init>()
    {
        android.view.MotionEvent r0;

        r0 := @this: android.view.MotionEvent;

        specialinvoke r0.<android.view.InputEvent: void <init>()>();

        return;
    }

    public static java.lang.String actionToString(int)
    {
        int i0, i1, i2, $i3;
        java.lang.StringBuilder $r0, $r5;
        java.lang.String $r4, $r9, $r10;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 0: goto label12;
            case 1: goto label11;
            case 2: goto label10;
            case 3: goto label09;
            case 4: goto label08;
            case 5: goto label01;
            case 6: goto label01;
            case 7: goto label07;
            case 8: goto label06;
            case 9: goto label05;
            case 10: goto label04;
            case 11: goto label03;
            case 12: goto label02;
            default: goto label01;
        };

     label01:
        $i3 = 65280 & i0;

        i1 = $i3 >> 8;

        i2 = i0 & 255;

        goto label13;

     label02:
        return "ACTION_BUTTON_RELEASE";

     label03:
        return "ACTION_BUTTON_PRESS";

     label04:
        return "ACTION_HOVER_EXIT";

     label05:
        return "ACTION_HOVER_ENTER";

     label06:
        return "ACTION_SCROLL";

     label07:
        return "ACTION_HOVER_MOVE";

     label08:
        return "ACTION_OUTSIDE";

     label09:
        return "ACTION_CANCEL";

     label10:
        return "ACTION_MOVE";

     label11:
        return "ACTION_UP";

     label12:
        return "ACTION_DOWN";

     label13:
        if i2 == 5 goto label15;

        if i2 == 6 goto label14;

        $r10 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0);

        return $r10;

     label14:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ACTION_POINTER_UP(");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r9 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;

     label15:
        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ACTION_POINTER_DOWN(");

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }

    private static void appendUnless(java.lang.Object, java.lang.StringBuilder, java.lang.String, java.lang.Object)
    {
        java.lang.Object r0, r3;
        java.lang.StringBuilder r1;
        java.lang.String r2;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.StringBuilder;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.Object;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        return;
    }

    public static int axisFromString(java.lang.String)
    {
        boolean $z0;
        java.lang.String $r0, r2, r3;
        int $i0, i1, i2;
        java.lang.Throwable $r1;

        r2 := @parameter0: java.lang.String;

        r3 = r2;

        $z0 = virtualinvoke r2.<java.lang.String: boolean startsWith(java.lang.String)>("AXIS_");

        if $z0 == 0 goto label1;

        $r0 = "AXIS_";

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        r3 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int)>($i0);

        i1 = staticinvoke <android.view.MotionEvent: int nativeAxisFromString(java.lang.String)>(r3);

        if i1 < 0 goto label1;

        return i1;

     label1:
        i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(r3, 10);

     label2:
        return i2;

     label3:
        $r1 := @caughtexception;

        return -1;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    public static java.lang.String axisToString(int)
    {
        int i0;
        java.lang.StringBuilder $r1;
        java.lang.String r4, r5;

        i0 := @parameter0: int;

        r4 = staticinvoke <android.view.MotionEvent: java.lang.String nativeAxisToString(int)>(i0);

        if r4 == null goto label1;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("AXIS_");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label2;

     label1:
        r5 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0);

     label2:
        return r5;
    }

    public static java.lang.String buttonStateToString(int)
    {
        java.lang.String $r0, r7;
        int $i0, i1, i2;
        java.lang.String[] $r1;
        java.lang.StringBuilder $r4, r5, r6;
        boolean z0;

        i1 := @parameter0: int;

        if i1 != 0 goto label1;

        return "0";

     label1:
        r5 = null;

        i2 = 0;

     label2:
        if i1 == 0 goto label8;

        $i0 = i1 & 1;

        if $i0 == 0 goto label3;

        z0 = 1;

        goto label4;

     label3:
        z0 = 0;

     label4:
        i1 = i1 >>> 1;

        r6 = r5;

        if z0 == 0 goto label7;

        $r1 = <android.view.MotionEvent: java.lang.String[] BUTTON_SYMBOLIC_NAMES>;

        r7 = $r1[i2];

        if r5 != null goto label6;

        if i1 != 0 goto label5;

        return r7;

     label5:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>(r7);

        r6 = $r4;

        goto label7;

     label6:
        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(124);

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        r6 = r5;

     label7:
        i2 = i2 + 1;

        r5 = r6;

        goto label2;

     label8:
        $r0 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r0;
    }

    private static final float clamp(float, float, float)
    {
        float f0, f1, f2;
        byte $b0, $b1;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        $b0 = f0 cmpg f1;

        if $b0 >= 0 goto label1;

        return f1;

     label1:
        $b1 = f0 cmpl f2;

        if $b1 <= 0 goto label2;

        return f2;

     label2:
        return f0;
    }

    public static java.lang.String classificationToString(int)
    {
        int i0;

        i0 := @parameter0: int;

        if i0 == 1 goto label2;

        if i0 == 2 goto label1;

        return "NONE";

     label1:
        return "DEEP_PRESS";

     label2:
        return "AMBIGUOUS_GESTURE";
    }

    public static android.view.MotionEvent createFromParcelBody(android.os.Parcel)
    {
        android.os.Parcel r0;
        android.view.MotionEvent r1;
        long $l0, $l1;

        r0 := @parameter0: android.os.Parcel;

        r1 = staticinvoke <android.view.MotionEvent: android.view.MotionEvent obtain()>();

        $l0 = r1.<android.view.MotionEvent: long mNativePtr>;

        $l1 = staticinvoke <android.view.MotionEvent: long nativeReadFromParcel(long,android.os.Parcel)>($l0, r0);

        r1.<android.view.MotionEvent: long mNativePtr> = $l1;

        return r1;
    }

    private static final void ensureSharedTempPointerCapacity(int)
    {
        int i0, $i1, i2;
        android.view.MotionEvent$PointerCoords[] $r0, r3, r4;
        android.view.MotionEvent$PointerProperties[] $r1;
        int[] $r2;

        i0 := @parameter0: int;

        r3 = <android.view.MotionEvent: android.view.MotionEvent$PointerCoords[] gSharedTempPointerCoords>;

        if r3 == null goto label1;

        $i1 = lengthof r3;

        if $i1 >= i0 goto label5;

     label1:
        r4 = <android.view.MotionEvent: android.view.MotionEvent$PointerCoords[] gSharedTempPointerCoords>;

        if r4 == null goto label2;

        i2 = lengthof r4;

        goto label3;

     label2:
        i2 = 8;

     label3:
        if i2 >= i0 goto label4;

        i2 = i2 * 2;

        goto label3;

     label4:
        $r0 = staticinvoke <android.view.MotionEvent$PointerCoords: android.view.MotionEvent$PointerCoords[] createArray(int)>(i2);

        <android.view.MotionEvent: android.view.MotionEvent$PointerCoords[] gSharedTempPointerCoords> = $r0;

        $r1 = staticinvoke <android.view.MotionEvent$PointerProperties: android.view.MotionEvent$PointerProperties[] createArray(int)>(i2);

        <android.view.MotionEvent: android.view.MotionEvent$PointerProperties[] gSharedTempPointerProperties> = $r1;

        $r2 = newarray (int)[i2];

        <android.view.MotionEvent: int[] gSharedTempPointerIndexMap> = $r2;

     label5:
        return;
    }

    private boolean initialize(int, int, int, int, int, int, int, int, int, float, float, float, float, long, long, int, android.view.MotionEvent$PointerProperties[], android.view.MotionEvent$PointerCoords[])
    {
        android.view.MotionEvent r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i10;
        float f0, f1, f2, f3;
        long l9, $l11, l13, l14;
        android.view.MotionEvent$PointerProperties[] r1;
        android.view.MotionEvent$PointerCoords[] r2;
        byte $b12;

        r0 := @this: android.view.MotionEvent;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        i5 := @parameter5: int;

        i6 := @parameter6: int;

        i7 := @parameter7: int;

        i8 := @parameter8: int;

        f0 := @parameter9: float;

        f1 := @parameter10: float;

        f2 := @parameter11: float;

        f3 := @parameter12: float;

        l13 := @parameter13: long;

        l9 := @parameter14: long;

        i10 := @parameter15: int;

        r1 := @parameter16: android.view.MotionEvent$PointerProperties[];

        r2 := @parameter17: android.view.MotionEvent$PointerCoords[];

        $l11 = r0.<android.view.MotionEvent: long mNativePtr>;

        l14 = staticinvoke <android.view.MotionEvent: long nativeInitialize(long,int,int,int,int,int,int,int,int,int,float,float,float,float,long,long,int,android.view.MotionEvent$PointerProperties[],android.view.MotionEvent$PointerCoords[])>($l11, i0, i1, i2, i3, i4, i5, i6, i7, i8, f0, f1, f2, f3, l13, l9, i10, r1, r2);

        r0.<android.view.MotionEvent: long mNativePtr> = l14;

        $b12 = l14 cmp 0L;

        if $b12 != 0 goto label1;

        return 0;

     label1:
        specialinvoke r0.<android.view.MotionEvent: void updateCursorPosition()>();

        return 1;
    }

    private static native void nativeAddBatch(long, long, android.view.MotionEvent$PointerCoords[], int);

    private static native int nativeAxisFromString(java.lang.String);

    private static native java.lang.String nativeAxisToString(int);

    private static native long nativeCopy(long, long, boolean);

    private static native void nativeDispose(long);

    private static native int nativeFindPointerIndex(long, int);

    private static native int nativeGetAction(long);

    private static native int nativeGetActionButton(long);

    private static native float nativeGetAxisValue(long, int, int, int);

    private static native int nativeGetButtonState(long);

    private static native int nativeGetClassification(long);

    private static native int nativeGetDeviceId(long);

    private static native int nativeGetDisplayId(long);

    private static native long nativeGetDownTimeNanos(long);

    private static native int nativeGetEdgeFlags(long);

    private static native long nativeGetEventTimeNanos(long, int);

    private static native int nativeGetFlags(long);

    private static native int nativeGetHistorySize(long);

    private static native int nativeGetId(long);

    private static native int nativeGetMetaState(long);

    private static native void nativeGetPointerCoords(long, int, int, android.view.MotionEvent$PointerCoords);

    private static native int nativeGetPointerCount(long);

    private static native int nativeGetPointerId(long, int);

    private static native void nativeGetPointerProperties(long, int, android.view.MotionEvent$PointerProperties);

    private static native float nativeGetRawAxisValue(long, int, int, int);

    private static native int nativeGetSource(long);

    private static native int nativeGetToolType(long, int);

    private static native float nativeGetXCursorPosition(long);

    private static native float nativeGetXOffset(long);

    private static native float nativeGetXPrecision(long);

    private static native float nativeGetYCursorPosition(long);

    private static native float nativeGetYOffset(long);

    private static native float nativeGetYPrecision(long);

    private static native long nativeInitialize(long, int, int, int, int, int, int, int, int, int, float, float, float, float, long, long, int, android.view.MotionEvent$PointerProperties[], android.view.MotionEvent$PointerCoords[]);

    private static native boolean nativeIsTouchEvent(long);

    private static native void nativeOffsetLocation(long, float, float);

    private static native long nativeReadFromParcel(long, android.os.Parcel);

    private static native void nativeScale(long, float);

    private static native void nativeSetAction(long, int);

    private static native void nativeSetActionButton(long, int);

    private static native void nativeSetButtonState(long, int);

    private static native void nativeSetCursorPosition(long, float, float);

    private static native void nativeSetDisplayId(long, int);

    private static native void nativeSetDownTimeNanos(long, long);

    private static native void nativeSetEdgeFlags(long, int);

    private static native void nativeSetFlags(long, int);

    private static native void nativeSetSource(long, int);

    private static native void nativeTransform(long, android.graphics.Matrix);

    private static native void nativeWriteToParcel(long, android.os.Parcel);

    private static android.view.MotionEvent obtain()
    {
        java.lang.Object r0;
        android.view.MotionEvent $r1, r3, r4;
        int $i0, $i1;
        java.lang.Throwable $r2;

        r0 = <android.view.MotionEvent: java.lang.Object gRecyclerLock>;

        entermonitor r0;

     label1:
        r3 = <android.view.MotionEvent: android.view.MotionEvent gRecyclerTop>;

     label2:
        if r3 != null goto label5;

     label3:
        r4 = new android.view.MotionEvent;

        specialinvoke r4.<android.view.MotionEvent: void <init>()>();

        exitmonitor r0;

     label4:
        return r4;

     label5:
        $r1 = r3.<android.view.MotionEvent: android.view.MotionEvent mNext>;

        <android.view.MotionEvent: android.view.MotionEvent gRecyclerTop> = $r1;

        $i0 = <android.view.MotionEvent: int gRecyclerUsed>;

        $i1 = $i0 - 1;

        <android.view.MotionEvent: int gRecyclerUsed> = $i1;

        exitmonitor r0;

     label6:
        r3.<android.view.MotionEvent: android.view.MotionEvent mNext> = null;

        virtualinvoke r3.<android.view.MotionEvent: void prepareForReuse()>();

        return r3;

     label7:
        $r2 := @caughtexception;

     label8:
        exitmonitor r0;

     label9:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public static android.view.MotionEvent obtain(long, long, int, float, float, float, float, int, float, float, int, int)
    {
        long l0, l1;
        int i2, i3, i4, i5;
        float f0, f1, f2, f3, f4, f5;
        android.view.MotionEvent $r0;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        i2 := @parameter2: int;

        f0 := @parameter3: float;

        f1 := @parameter4: float;

        f2 := @parameter5: float;

        f3 := @parameter6: float;

        i3 := @parameter7: int;

        f4 := @parameter8: float;

        f5 := @parameter9: float;

        i4 := @parameter10: int;

        i5 := @parameter11: int;

        $r0 = staticinvoke <android.view.MotionEvent: android.view.MotionEvent obtain(long,long,int,float,float,float,float,int,float,float,int,int,int,int)>(l0, l1, i2, f0, f1, f2, f3, i3, f4, f5, i4, i5, 0, 0);

        return $r0;
    }

    public static android.view.MotionEvent obtain(long, long, int, float, float, float, float, int, float, float, int, int, int, int)
    {
        long l0, l1, $l8, $l9;
        int i2, i3, i4, i5, i6, i7;
        float f0, f1, f2, f3, f4, f5;
        java.lang.Object r0;
        android.view.MotionEvent$PointerProperties[] r1;
        android.view.MotionEvent$PointerCoords[] r2;
        android.view.MotionEvent$PointerProperties $r3, $r4;
        android.view.MotionEvent$PointerCoords $r5, $r6, $r7, $r8, $r9;
        java.lang.Throwable $r10;
        android.view.MotionEvent r11;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        i2 := @parameter2: int;

        f0 := @parameter3: float;

        f1 := @parameter4: float;

        f2 := @parameter5: float;

        f3 := @parameter6: float;

        i3 := @parameter7: int;

        f4 := @parameter8: float;

        f5 := @parameter9: float;

        i4 := @parameter10: int;

        i5 := @parameter11: int;

        i6 := @parameter12: int;

        i7 := @parameter13: int;

        r11 = staticinvoke <android.view.MotionEvent: android.view.MotionEvent obtain()>();

        r0 = <android.view.MotionEvent: java.lang.Object gSharedTempLock>;

        entermonitor r0;

     label1:
        staticinvoke <android.view.MotionEvent: void ensureSharedTempPointerCapacity(int)>(1);

        r1 = <android.view.MotionEvent: android.view.MotionEvent$PointerProperties[] gSharedTempPointerProperties>;

        $r3 = r1[0];

        virtualinvoke $r3.<android.view.MotionEvent$PointerProperties: void clear()>();

        $r4 = r1[0];

        $r4.<android.view.MotionEvent$PointerProperties: int id> = 0;

        r2 = <android.view.MotionEvent: android.view.MotionEvent$PointerCoords[] gSharedTempPointerCoords>;

        $r5 = r2[0];

        virtualinvoke $r5.<android.view.MotionEvent$PointerCoords: void clear()>();

        $r6 = r2[0];

        $r6.<android.view.MotionEvent$PointerCoords: float x> = f0;

        $r7 = r2[0];

        $r7.<android.view.MotionEvent$PointerCoords: float y> = f1;

        $r8 = r2[0];

        $r8.<android.view.MotionEvent$PointerCoords: float pressure> = f2;

        $r9 = r2[0];

        $r9.<android.view.MotionEvent$PointerCoords: float size> = f3;

        $l9 = l0 * 1000000L;

        $l8 = l1 * 1000000L;

        specialinvoke r11.<android.view.MotionEvent: boolean initialize(int,int,int,int,int,int,int,int,int,float,float,float,float,long,long,int,android.view.MotionEvent$PointerProperties[],android.view.MotionEvent$PointerCoords[])>(i4, i6, i7, i2, 0, i5, i3, 0, 0, 0.0F, 0.0F, f4, f5, $l9, $l8, 1, r1, r2);

        exitmonitor r0;

     label2:
        return r11;

     label3:
        $r10 := @caughtexception;

     label4:
        exitmonitor r0;

     label5:
        throw $r10;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public static android.view.MotionEvent obtain(long, long, int, float, float, int)
    {
        long l0, l1;
        int i2, i3;
        float f0, f1;
        android.view.MotionEvent $r0;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        i2 := @parameter2: int;

        f0 := @parameter3: float;

        f1 := @parameter4: float;

        i3 := @parameter5: int;

        $r0 = staticinvoke <android.view.MotionEvent: android.view.MotionEvent obtain(long,long,int,float,float,float,float,int,float,float,int,int)>(l0, l1, i2, f0, f1, 1.0F, 1.0F, i3, 1.0F, 1.0F, 0, 0);

        return $r0;
    }

    public static android.view.MotionEvent obtain(long, long, int, int, float, float, float, float, int, float, float, int, int)
    {
        long l0, l1;
        int i2, i3, i4, i5, i6;
        float f0, f1, f2, f3, f4, f5;
        android.view.MotionEvent $r0;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        f0 := @parameter4: float;

        f1 := @parameter5: float;

        f2 := @parameter6: float;

        f3 := @parameter7: float;

        i4 := @parameter8: int;

        f4 := @parameter9: float;

        f5 := @parameter10: float;

        i5 := @parameter11: int;

        i6 := @parameter12: int;

        $r0 = staticinvoke <android.view.MotionEvent: android.view.MotionEvent obtain(long,long,int,float,float,float,float,int,float,float,int,int)>(l0, l1, i2, f0, f1, f2, f3, i4, f4, f5, i5, i6);

        return $r0;
    }

    public static android.view.MotionEvent obtain(long, long, int, int, int[], android.view.MotionEvent$PointerCoords[], int, float, float, int, int, int, int)
    {
        long l0, l1;
        int i2, i3, i4, i5, i6, i7, i8, $i9, i10;
        android.view.MotionEvent$PointerCoords[] r0;
        float f0, f1;
        java.lang.Object r1;
        android.view.MotionEvent$PointerProperties[] r2;
        android.view.MotionEvent$PointerProperties $r3, $r4;
        java.lang.Throwable $r5;
        int[] r6;
        android.view.MotionEvent r7;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        r6 := @parameter4: int[];

        r0 := @parameter5: android.view.MotionEvent$PointerCoords[];

        i4 := @parameter6: int;

        f0 := @parameter7: float;

        f1 := @parameter8: float;

        i5 := @parameter9: int;

        i6 := @parameter10: int;

        i7 := @parameter11: int;

        i8 := @parameter12: int;

        r1 = <android.view.MotionEvent: java.lang.Object gSharedTempLock>;

        entermonitor r1;

     label01:
        staticinvoke <android.view.MotionEvent: void ensureSharedTempPointerCapacity(int)>(i3);

        r2 = <android.view.MotionEvent: android.view.MotionEvent$PointerProperties[] gSharedTempPointerProperties>;

     label02:
        i10 = 0;

     label03:
        if i10 >= i3 goto label06;

     label04:
        $r3 = r2[i10];

        virtualinvoke $r3.<android.view.MotionEvent$PointerProperties: void clear()>();

        $r4 = r2[i10];

        $i9 = r6[i10];

        $r4.<android.view.MotionEvent$PointerProperties: int id> = $i9;

     label05:
        i10 = i10 + 1;

        goto label03;

     label06:
        r7 = staticinvoke <android.view.MotionEvent: android.view.MotionEvent obtain(long,long,int,int,android.view.MotionEvent$PointerProperties[],android.view.MotionEvent$PointerCoords[],int,int,float,float,int,int,int,int)>(l0, l1, i2, i3, r2, r0, i4, 0, f0, f1, i5, i6, i7, i8);

        exitmonitor r1;

     label07:
        return r7;

     label08:
        $r5 := @caughtexception;

     label09:
        exitmonitor r1;

     label10:
        throw $r5;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    public static android.view.MotionEvent obtain(long, long, int, int, android.view.MotionEvent$PointerProperties[], android.view.MotionEvent$PointerCoords[], int, int, float, float, int, int, int, int)
    {
        long l0, l1;
        int i2, i3, i4, i5, i6, i7, i8, i9;
        android.view.MotionEvent$PointerProperties[] r0;
        android.view.MotionEvent$PointerCoords[] r1;
        float f0, f1;
        android.view.MotionEvent $r2;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        r0 := @parameter4: android.view.MotionEvent$PointerProperties[];

        r1 := @parameter5: android.view.MotionEvent$PointerCoords[];

        i4 := @parameter6: int;

        i5 := @parameter7: int;

        f0 := @parameter8: float;

        f1 := @parameter9: float;

        i6 := @parameter10: int;

        i7 := @parameter11: int;

        i8 := @parameter12: int;

        i9 := @parameter13: int;

        $r2 = staticinvoke <android.view.MotionEvent: android.view.MotionEvent obtain(long,long,int,int,android.view.MotionEvent$PointerProperties[],android.view.MotionEvent$PointerCoords[],int,int,float,float,int,int,int,int,int)>(l0, l1, i2, i3, r0, r1, i4, i5, f0, f1, i6, i7, i8, 0, i9);

        return $r2;
    }

    public static android.view.MotionEvent obtain(long, long, int, int, android.view.MotionEvent$PointerProperties[], android.view.MotionEvent$PointerCoords[], int, int, float, float, int, int, int, int, int)
    {
        long l0, l1, $l11, $l12;
        int i2, i3, i4, i5, i6, i7, i8, i9, i10;
        android.view.MotionEvent$PointerProperties[] r0;
        android.view.MotionEvent$PointerCoords[] r1;
        float f0, f1;
        android.view.MotionEvent r2;
        boolean $z0;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        r0 := @parameter4: android.view.MotionEvent$PointerProperties[];

        r1 := @parameter5: android.view.MotionEvent$PointerCoords[];

        i4 := @parameter6: int;

        i5 := @parameter7: int;

        f0 := @parameter8: float;

        f1 := @parameter9: float;

        i6 := @parameter10: int;

        i7 := @parameter11: int;

        i8 := @parameter12: int;

        i9 := @parameter13: int;

        i10 := @parameter14: int;

        r2 = staticinvoke <android.view.MotionEvent: android.view.MotionEvent obtain()>();

        $l12 = l0 * 1000000L;

        $l11 = l1 * 1000000L;

        $z0 = specialinvoke r2.<android.view.MotionEvent: boolean initialize(int,int,int,int,int,int,int,int,int,float,float,float,float,long,long,int,android.view.MotionEvent$PointerProperties[],android.view.MotionEvent$PointerCoords[])>(i6, i8, i9, i2, i10, i7, i4, i5, 0, 0.0F, 0.0F, f0, f1, $l12, $l11, i3, r0, r1);

        if $z0 != 0 goto label1;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("MotionEvent", "Could not initialize MotionEvent");

        virtualinvoke r2.<android.view.MotionEvent: void recycle()>();

        return null;

     label1:
        return r2;
    }

    public static android.view.MotionEvent obtain(android.view.MotionEvent)
    {
        android.view.MotionEvent r0, r1;
        java.lang.IllegalArgumentException $r2;
        long $l0, $l1, $l2;

        r0 := @parameter0: android.view.MotionEvent;

        if r0 == null goto label1;

        r1 = staticinvoke <android.view.MotionEvent: android.view.MotionEvent obtain()>();

        $l1 = r1.<android.view.MotionEvent: long mNativePtr>;

        $l0 = r0.<android.view.MotionEvent: long mNativePtr>;

        $l2 = staticinvoke <android.view.MotionEvent: long nativeCopy(long,long,boolean)>($l1, $l0, 1);

        r1.<android.view.MotionEvent: long mNativePtr> = $l2;

        return r1;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("other motion event must not be null");

        throw $r2;
    }

    public static android.view.MotionEvent obtainNoHistory(android.view.MotionEvent)
    {
        android.view.MotionEvent r0, r1;
        java.lang.IllegalArgumentException $r2;
        long $l0, $l1, $l2;

        r0 := @parameter0: android.view.MotionEvent;

        if r0 == null goto label1;

        r1 = staticinvoke <android.view.MotionEvent: android.view.MotionEvent obtain()>();

        $l1 = r1.<android.view.MotionEvent: long mNativePtr>;

        $l0 = r0.<android.view.MotionEvent: long mNativePtr>;

        $l2 = staticinvoke <android.view.MotionEvent: long nativeCopy(long,long,boolean)>($l1, $l0, 0);

        r1.<android.view.MotionEvent: long mNativePtr> = $l2;

        return r1;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("other motion event must not be null");

        throw $r2;
    }

    private void setCursorPosition(float, float)
    {
        android.view.MotionEvent r0;
        float f0, f1;
        long $l0;

        r0 := @this: android.view.MotionEvent;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $l0 = r0.<android.view.MotionEvent: long mNativePtr>;

        staticinvoke <android.view.MotionEvent: void nativeSetCursorPosition(long,float,float)>($l0, f0, f1);

        return;
    }

    public static java.lang.String toolTypeToString(int)
    {
        int i0;
        android.util.SparseArray $r0;
        java.lang.Object $r1;
        java.lang.String r2;

        i0 := @parameter0: int;

        $r0 = <android.view.MotionEvent: android.util.SparseArray TOOL_TYPE_SYMBOLIC_NAMES>;

        $r1 = virtualinvoke $r0.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r2 = (java.lang.String) $r1;

        if r2 == null goto label1;

        goto label2;

     label1:
        r2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0);

     label2:
        return r2;
    }

    private void updateCursorPosition()
    {
        android.view.MotionEvent r0;
        int i0, $i1, i2;
        float $f0, $f1, $f2, $f3, $f4, $f5, f6, f7;

        r0 := @this: android.view.MotionEvent;

        $i1 = virtualinvoke r0.<android.view.MotionEvent: int getSource()>();

        if $i1 == 8194 goto label1;

        specialinvoke r0.<android.view.MotionEvent: void setCursorPosition(float,float)>(#NaNF, #NaNF);

        return;

     label1:
        f6 = 0.0F;

        f7 = 0.0F;

        i0 = virtualinvoke r0.<android.view.MotionEvent: int getPointerCount()>();

        i2 = 0;

     label2:
        if i2 >= i0 goto label3;

        $f4 = virtualinvoke r0.<android.view.MotionEvent: float getX(int)>(i2);

        f6 = f6 + $f4;

        $f5 = virtualinvoke r0.<android.view.MotionEvent: float getY(int)>(i2);

        f7 = f7 + $f5;

        i2 = i2 + 1;

        goto label2;

     label3:
        $f0 = (float) i0;

        $f3 = f6 / $f0;

        $f1 = (float) i0;

        $f2 = f7 / $f1;

        specialinvoke r0.<android.view.MotionEvent: void setCursorPosition(float,float)>($f3, $f2);

        return;
    }

    public final void addBatch(long, float, float, float, float, int)
    {
        android.view.MotionEvent r0;
        long l0, $l2, $l3;
        float f0, f1, f2, f3;
        int i1;
        java.lang.Object r1;
        android.view.MotionEvent$PointerCoords $r2, $r3, $r4, $r5, $r6;
        java.lang.Throwable $r7;
        android.view.MotionEvent$PointerCoords[] r8;

        r0 := @this: android.view.MotionEvent;

        l0 := @parameter0: long;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        f2 := @parameter3: float;

        f3 := @parameter4: float;

        i1 := @parameter5: int;

        r1 = <android.view.MotionEvent: java.lang.Object gSharedTempLock>;

        entermonitor r1;

     label1:
        staticinvoke <android.view.MotionEvent: void ensureSharedTempPointerCapacity(int)>(1);

        r8 = <android.view.MotionEvent: android.view.MotionEvent$PointerCoords[] gSharedTempPointerCoords>;

        $r2 = r8[0];

        virtualinvoke $r2.<android.view.MotionEvent$PointerCoords: void clear()>();

        $r3 = r8[0];

        $r3.<android.view.MotionEvent$PointerCoords: float x> = f0;

        $r4 = r8[0];

        $r4.<android.view.MotionEvent$PointerCoords: float y> = f1;

        $r5 = r8[0];

        $r5.<android.view.MotionEvent$PointerCoords: float pressure> = f2;

        $r6 = r8[0];

        $r6.<android.view.MotionEvent$PointerCoords: float size> = f3;

        $l3 = r0.<android.view.MotionEvent: long mNativePtr>;

        $l2 = 1000000L * l0;

        staticinvoke <android.view.MotionEvent: void nativeAddBatch(long,long,android.view.MotionEvent$PointerCoords[],int)>($l3, $l2, r8, i1);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r7 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public final void addBatch(long, android.view.MotionEvent$PointerCoords[], int)
    {
        android.view.MotionEvent r0;
        long l0, $l2, $l3;
        android.view.MotionEvent$PointerCoords[] r1;
        int i1;

        r0 := @this: android.view.MotionEvent;

        l0 := @parameter0: long;

        r1 := @parameter1: android.view.MotionEvent$PointerCoords[];

        i1 := @parameter2: int;

        $l3 = r0.<android.view.MotionEvent: long mNativePtr>;

        $l2 = 1000000L * l0;

        staticinvoke <android.view.MotionEvent: void nativeAddBatch(long,long,android.view.MotionEvent$PointerCoords[],int)>($l3, $l2, r1, i1);

        return;
    }

    public final boolean addBatch(android.view.MotionEvent)
    {
        android.view.MotionEvent r0, r10;
        int i0, i1, i2, $i6, $i8, $i10, $i12, $i14, $i16, $i18, $i20, $i22, $i24, $i26, $i29, $i30, i38, i39, i40, i41, i42;
        java.lang.Object r1;
        android.view.MotionEvent$PointerProperties[] r2;
        android.view.MotionEvent$PointerCoords[] r3;
        long l3, $l4, $l5, $l7, $l9, $l11, $l13, $l15, $l17, $l19, $l21, $l23, $l25, $l27, $l28, $l31, $l32, $l33, $l34, $l35, $l36, $l37;
        android.view.MotionEvent$PointerCoords $r4;
        android.view.MotionEvent$PointerProperties $r5, $r6, $r7, $r8;
        boolean $z0;
        java.lang.Throwable $r9;

        r0 := @this: android.view.MotionEvent;

        r10 := @parameter0: android.view.MotionEvent;

        $l4 = r0.<android.view.MotionEvent: long mNativePtr>;

        i38 = staticinvoke <android.view.MotionEvent: int nativeGetAction(long)>($l4);

        if i38 == 2 goto label01;

        if i38 == 7 goto label01;

        return 0;

     label01:
        $l5 = r10.<android.view.MotionEvent: long mNativePtr>;

        $i6 = staticinvoke <android.view.MotionEvent: int nativeGetAction(long)>($l5);

        if i38 == $i6 goto label02;

        return 0;

     label02:
        $l7 = r0.<android.view.MotionEvent: long mNativePtr>;

        $i8 = staticinvoke <android.view.MotionEvent: int nativeGetDeviceId(long)>($l7);

        $l9 = r10.<android.view.MotionEvent: long mNativePtr>;

        $i10 = staticinvoke <android.view.MotionEvent: int nativeGetDeviceId(long)>($l9);

        if $i8 != $i10 goto label26;

        $l11 = r0.<android.view.MotionEvent: long mNativePtr>;

        $i12 = staticinvoke <android.view.MotionEvent: int nativeGetSource(long)>($l11);

        $l13 = r10.<android.view.MotionEvent: long mNativePtr>;

        $i14 = staticinvoke <android.view.MotionEvent: int nativeGetSource(long)>($l13);

        if $i12 != $i14 goto label26;

        $l15 = r0.<android.view.MotionEvent: long mNativePtr>;

        $i16 = staticinvoke <android.view.MotionEvent: int nativeGetDisplayId(long)>($l15);

        $l17 = r10.<android.view.MotionEvent: long mNativePtr>;

        $i18 = staticinvoke <android.view.MotionEvent: int nativeGetDisplayId(long)>($l17);

        if $i16 != $i18 goto label26;

        $l19 = r0.<android.view.MotionEvent: long mNativePtr>;

        $i20 = staticinvoke <android.view.MotionEvent: int nativeGetFlags(long)>($l19);

        $l21 = r10.<android.view.MotionEvent: long mNativePtr>;

        $i22 = staticinvoke <android.view.MotionEvent: int nativeGetFlags(long)>($l21);

        if $i20 != $i22 goto label26;

        $l23 = r0.<android.view.MotionEvent: long mNativePtr>;

        $i24 = staticinvoke <android.view.MotionEvent: int nativeGetClassification(long)>($l23);

        $l25 = r10.<android.view.MotionEvent: long mNativePtr>;

        $i26 = staticinvoke <android.view.MotionEvent: int nativeGetClassification(long)>($l25);

        if $i24 == $i26 goto label03;

        goto label26;

     label03:
        $l27 = r0.<android.view.MotionEvent: long mNativePtr>;

        i0 = staticinvoke <android.view.MotionEvent: int nativeGetPointerCount(long)>($l27);

        $l28 = r10.<android.view.MotionEvent: long mNativePtr>;

        $i29 = staticinvoke <android.view.MotionEvent: int nativeGetPointerCount(long)>($l28);

        if i0 == $i29 goto label04;

        return 0;

     label04:
        r1 = <android.view.MotionEvent: java.lang.Object gSharedTempLock>;

        entermonitor r1;

     label05:
        $i30 = staticinvoke <java.lang.Math: int max(int,int)>(i0, 2);

        staticinvoke <android.view.MotionEvent: void ensureSharedTempPointerCapacity(int)>($i30);

        r2 = <android.view.MotionEvent: android.view.MotionEvent$PointerProperties[] gSharedTempPointerProperties>;

        r3 = <android.view.MotionEvent: android.view.MotionEvent$PointerCoords[] gSharedTempPointerCoords>;

     label06:
        i39 = 0;

     label07:
        if i39 >= i0 goto label11;

     label08:
        $l36 = r0.<android.view.MotionEvent: long mNativePtr>;

        $r5 = r2[0];

        staticinvoke <android.view.MotionEvent: void nativeGetPointerProperties(long,int,android.view.MotionEvent$PointerProperties)>($l36, i39, $r5);

        $l37 = r10.<android.view.MotionEvent: long mNativePtr>;

        $r6 = r2[1];

        staticinvoke <android.view.MotionEvent: void nativeGetPointerProperties(long,int,android.view.MotionEvent$PointerProperties)>($l37, i39, $r6);

        $r8 = r2[0];

        $r7 = r2[1];

        $z0 = staticinvoke <android.view.MotionEvent$PointerProperties: boolean access$000(android.view.MotionEvent$PointerProperties,android.view.MotionEvent$PointerProperties)>($r8, $r7);

        if $z0 != 0 goto label10;

        exitmonitor r1;

     label09:
        return 0;

     label10:
        i39 = i39 + 1;

        goto label07;

     label11:
        $l31 = r10.<android.view.MotionEvent: long mNativePtr>;

        i1 = staticinvoke <android.view.MotionEvent: int nativeGetMetaState(long)>($l31);

        $l32 = r10.<android.view.MotionEvent: long mNativePtr>;

        i2 = staticinvoke <android.view.MotionEvent: int nativeGetHistorySize(long)>($l32);

     label12:
        i40 = 0;

     label13:
        if i40 > i2 goto label21;

        if i40 != i2 goto label14;

        i41 = -2147483648;

        goto label15;

     label14:
        i41 = i40;

     label15:
        i42 = 0;

     label16:
        if i42 >= i0 goto label19;

     label17:
        $l35 = r10.<android.view.MotionEvent: long mNativePtr>;

        $r4 = r3[i42];

        staticinvoke <android.view.MotionEvent: void nativeGetPointerCoords(long,int,int,android.view.MotionEvent$PointerCoords)>($l35, i42, i41, $r4);

     label18:
        i42 = i42 + 1;

        goto label16;

     label19:
        $l33 = r10.<android.view.MotionEvent: long mNativePtr>;

        l3 = staticinvoke <android.view.MotionEvent: long nativeGetEventTimeNanos(long,int)>($l33, i41);

        $l34 = r0.<android.view.MotionEvent: long mNativePtr>;

        staticinvoke <android.view.MotionEvent: void nativeAddBatch(long,long,android.view.MotionEvent$PointerCoords[],int)>($l34, l3, r3, i1);

     label20:
        i40 = i40 + 1;

        goto label13;

     label21:
        exitmonitor r1;

     label22:
        return 1;

     label23:
        $r9 := @caughtexception;

     label24:
        exitmonitor r1;

     label25:
        throw $r9;

     label26:
        return 0;

        catch java.lang.Throwable from label05 to label06 with label23;
        catch java.lang.Throwable from label08 to label09 with label23;
        catch java.lang.Throwable from label11 to label12 with label23;
        catch java.lang.Throwable from label17 to label18 with label23;
        catch java.lang.Throwable from label19 to label20 with label23;
        catch java.lang.Throwable from label21 to label22 with label23;
        catch java.lang.Throwable from label24 to label25 with label23;
    }

    public final void cancel()
    {
        android.view.MotionEvent r0;

        r0 := @this: android.view.MotionEvent;

        virtualinvoke r0.<android.view.MotionEvent: void setAction(int)>(3);

        return;
    }

    public final android.view.MotionEvent clampNoHistory(float, float, float, float)
    {
        android.view.MotionEvent r0, r1;
        float f0, f1, f2, f3, $f4, $f5, $f6, $f7, $f8, $f9, f10, f11;
        java.lang.Object r2;
        int i0, $i3, $i5, $i7, $i9, $i11, $i13, $i15, $i17, $i19, i30;
        android.view.MotionEvent$PointerCoords[] r3;
        long $l1, $l2, $l4, $l6, $l8, $l10, $l12, $l14, $l16, $l18, $l20, $l21, $l22, $l23, $l24, $l25, $l26, $l27, $l28, $l29;
        android.view.MotionEvent$PointerProperties $r4;
        android.view.MotionEvent$PointerCoords $r5, $r6, $r7, r12, r13;
        java.lang.Throwable $r8, $r9, $r10, r14;
        android.view.MotionEvent$PointerProperties[] r11;

        r0 := @this: android.view.MotionEvent;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        f3 := @parameter3: float;

        r1 = staticinvoke <android.view.MotionEvent: android.view.MotionEvent obtain()>();

        r2 = <android.view.MotionEvent: java.lang.Object gSharedTempLock>;

        entermonitor r2;

     label01:
        $l1 = r0.<android.view.MotionEvent: long mNativePtr>;

        i0 = staticinvoke <android.view.MotionEvent: int nativeGetPointerCount(long)>($l1);

        staticinvoke <android.view.MotionEvent: void ensureSharedTempPointerCapacity(int)>(i0);

        r11 = <android.view.MotionEvent: android.view.MotionEvent$PointerProperties[] gSharedTempPointerProperties>;

        r3 = <android.view.MotionEvent: android.view.MotionEvent$PointerCoords[] gSharedTempPointerCoords>;

     label02:
        i30 = 0;

     label03:
        if i30 >= i0 goto label15;

     label04:
        $l28 = r0.<android.view.MotionEvent: long mNativePtr>;

        $r4 = r11[i30];

        staticinvoke <android.view.MotionEvent: void nativeGetPointerProperties(long,int,android.view.MotionEvent$PointerProperties)>($l28, i30, $r4);

        $l29 = r0.<android.view.MotionEvent: long mNativePtr>;

        $r5 = r3[i30];

        staticinvoke <android.view.MotionEvent: void nativeGetPointerCoords(long,int,int,android.view.MotionEvent$PointerCoords)>($l29, i30, -2147483648, $r5);

     label05:
        r12 = r3[i30];

     label06:
        $r6 = r3[i30];

        f10 = $r6.<android.view.MotionEvent$PointerCoords: float x>;

     label07:
        $f8 = staticinvoke <android.view.MotionEvent: float clamp(float,float,float)>(f10, f0, f2);

        r12.<android.view.MotionEvent$PointerCoords: float x> = $f8;

     label08:
        r13 = r3[i30];

     label09:
        $r7 = r3[i30];

        f11 = $r7.<android.view.MotionEvent$PointerCoords: float y>;

     label10:
        $f9 = staticinvoke <android.view.MotionEvent: float clamp(float,float,float)>(f11, f1, f3);

        r13.<android.view.MotionEvent$PointerCoords: float y> = $f9;

     label11:
        i30 = i30 + 1;

        goto label03;

     label12:
        $r8 := @caughtexception;

        r14 = $r8;

        goto label14;

     label13:
        $r10 := @caughtexception;

        r14 = $r10;

     label14:
        goto label18;

     label15:
        $l2 = r0.<android.view.MotionEvent: long mNativePtr>;

        $i3 = staticinvoke <android.view.MotionEvent: int nativeGetDeviceId(long)>($l2);

        $l4 = r0.<android.view.MotionEvent: long mNativePtr>;

        $i5 = staticinvoke <android.view.MotionEvent: int nativeGetSource(long)>($l4);

        $l6 = r0.<android.view.MotionEvent: long mNativePtr>;

        $i7 = staticinvoke <android.view.MotionEvent: int nativeGetDisplayId(long)>($l6);

        $l8 = r0.<android.view.MotionEvent: long mNativePtr>;

        $i9 = staticinvoke <android.view.MotionEvent: int nativeGetAction(long)>($l8);

        $l10 = r0.<android.view.MotionEvent: long mNativePtr>;

        $i11 = staticinvoke <android.view.MotionEvent: int nativeGetFlags(long)>($l10);

        $l12 = r0.<android.view.MotionEvent: long mNativePtr>;

        $i13 = staticinvoke <android.view.MotionEvent: int nativeGetEdgeFlags(long)>($l12);

        $l14 = r0.<android.view.MotionEvent: long mNativePtr>;

        $i15 = staticinvoke <android.view.MotionEvent: int nativeGetMetaState(long)>($l14);

        $l16 = r0.<android.view.MotionEvent: long mNativePtr>;

        $i17 = staticinvoke <android.view.MotionEvent: int nativeGetButtonState(long)>($l16);

        $l18 = r0.<android.view.MotionEvent: long mNativePtr>;

        $i19 = staticinvoke <android.view.MotionEvent: int nativeGetClassification(long)>($l18);

        $l20 = r0.<android.view.MotionEvent: long mNativePtr>;

        $f4 = staticinvoke <android.view.MotionEvent: float nativeGetXOffset(long)>($l20);

        $l21 = r0.<android.view.MotionEvent: long mNativePtr>;

        $f5 = staticinvoke <android.view.MotionEvent: float nativeGetYOffset(long)>($l21);

        $l22 = r0.<android.view.MotionEvent: long mNativePtr>;

        $f6 = staticinvoke <android.view.MotionEvent: float nativeGetXPrecision(long)>($l22);

        $l23 = r0.<android.view.MotionEvent: long mNativePtr>;

        $f7 = staticinvoke <android.view.MotionEvent: float nativeGetYPrecision(long)>($l23);

        $l24 = r0.<android.view.MotionEvent: long mNativePtr>;

        $l25 = staticinvoke <android.view.MotionEvent: long nativeGetDownTimeNanos(long)>($l24);

        $l26 = r0.<android.view.MotionEvent: long mNativePtr>;

        $l27 = staticinvoke <android.view.MotionEvent: long nativeGetEventTimeNanos(long,int)>($l26, -2147483648);

        specialinvoke r1.<android.view.MotionEvent: boolean initialize(int,int,int,int,int,int,int,int,int,float,float,float,float,long,long,int,android.view.MotionEvent$PointerProperties[],android.view.MotionEvent$PointerCoords[])>($i3, $i5, $i7, $i9, $i11, $i13, $i15, $i17, $i19, $f4, $f5, $f6, $f7, $l25, $l27, i0, r11, r3);

        exitmonitor r2;

     label16:
        return r1;

     label17:
        $r9 := @caughtexception;

        r14 = $r9;

     label18:
        exitmonitor r2;

     label19:
        throw r14;

        catch java.lang.Throwable from label01 to label02 with label17;
        catch java.lang.Throwable from label04 to label05 with label13;
        catch java.lang.Throwable from label06 to label07 with label13;
        catch java.lang.Throwable from label07 to label08 with label12;
        catch java.lang.Throwable from label09 to label10 with label12;
        catch java.lang.Throwable from label10 to label11 with label17;
        catch java.lang.Throwable from label15 to label16 with label17;
        catch java.lang.Throwable from label18 to label19 with label17;
    }

    public volatile android.view.InputEvent copy()
    {
        android.view.MotionEvent r0, $r1;

        r0 := @this: android.view.MotionEvent;

        $r1 = virtualinvoke r0.<android.view.MotionEvent: android.view.MotionEvent copy()>();

        return $r1;
    }

    public android.view.MotionEvent copy()
    {
        android.view.MotionEvent r0, $r1;

        r0 := @this: android.view.MotionEvent;

        $r1 = staticinvoke <android.view.MotionEvent: android.view.MotionEvent obtain(android.view.MotionEvent)>(r0);

        return $r1;
    }

    protected void finalize() throws java.lang.Throwable
    {
        android.view.MotionEvent r0;
        long $l0, $l2;
        byte $b1;
        java.lang.Throwable $r2;

        r0 := @this: android.view.MotionEvent;

     label1:
        $l0 = r0.<android.view.MotionEvent: long mNativePtr>;

        $b1 = $l0 cmp 0L;

        if $b1 == 0 goto label2;

        $l2 = r0.<android.view.MotionEvent: long mNativePtr>;

        staticinvoke <android.view.MotionEvent: void nativeDispose(long)>($l2);

        r0.<android.view.MotionEvent: long mNativePtr> = 0L;

     label2:
        specialinvoke r0.<java.lang.Object: void finalize()>();

        return;

     label3:
        $r2 := @caughtexception;

        specialinvoke r0.<java.lang.Object: void finalize()>();

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public final int findPointerIndex(int)
    {
        android.view.MotionEvent r0;
        int i0, $i2;
        long $l1;

        r0 := @this: android.view.MotionEvent;

        i0 := @parameter0: int;

        $l1 = r0.<android.view.MotionEvent: long mNativePtr>;

        $i2 = staticinvoke <android.view.MotionEvent: int nativeFindPointerIndex(long,int)>($l1, i0);

        return $i2;
    }

    public final int getAction()
    {
        android.view.MotionEvent r0;
        long $l0;
        int $i1;

        r0 := @this: android.view.MotionEvent;

        $l0 = r0.<android.view.MotionEvent: long mNativePtr>;

        $i1 = staticinvoke <android.view.MotionEvent: int nativeGetAction(long)>($l0);

        return $i1;
    }

    public final int getActionButton()
    {
        android.view.MotionEvent r0;
        long $l0;
        int $i1;

        r0 := @this: android.view.MotionEvent;

        $l0 = r0.<android.view.MotionEvent: long mNativePtr>;

        $i1 = staticinvoke <android.view.MotionEvent: int nativeGetActionButton(long)>($l0);

        return $i1;
    }

    public final int getActionIndex()
    {
        android.view.MotionEvent r0;
        long $l0;
        int $i1, $i2, $i3;

        r0 := @this: android.view.MotionEvent;

        $l0 = r0.<android.view.MotionEvent: long mNativePtr>;

        $i1 = staticinvoke <android.view.MotionEvent: int nativeGetAction(long)>($l0);

        $i2 = $i1 & 65280;

        $i3 = $i2 >> 8;

        return $i3;
    }

    public final int getActionMasked()
    {
        android.view.MotionEvent r0;
        long $l0;
        int $i1, $i2;

        r0 := @this: android.view.MotionEvent;

        $l0 = r0.<android.view.MotionEvent: long mNativePtr>;

        $i1 = staticinvoke <android.view.MotionEvent: int nativeGetAction(long)>($l0);

        $i2 = $i1 & 255;

        return $i2;
    }

    public final float getAxisValue(int)
    {
        android.view.MotionEvent r0;
        int i0;
        long $l1;
        float $f0;

        r0 := @this: android.view.MotionEvent;

        i0 := @parameter0: int;

        $l1 = r0.<android.view.MotionEvent: long mNativePtr>;

        $f0 = staticinvoke <android.view.MotionEvent: float nativeGetAxisValue(long,int,int,int)>($l1, i0, 0, -2147483648);

        return $f0;
    }

    public final float getAxisValue(int, int)
    {
        android.view.MotionEvent r0;
        int i0, i1;
        long $l2;
        float $f0;

        r0 := @this: android.view.MotionEvent;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $l2 = r0.<android.view.MotionEvent: long mNativePtr>;

        $f0 = staticinvoke <android.view.MotionEvent: float nativeGetAxisValue(long,int,int,int)>($l2, i0, i1, -2147483648);

        return $f0;
    }

    public final int getButtonState()
    {
        android.view.MotionEvent r0;
        long $l0;
        int $i1;

        r0 := @this: android.view.MotionEvent;

        $l0 = r0.<android.view.MotionEvent: long mNativePtr>;

        $i1 = staticinvoke <android.view.MotionEvent: int nativeGetButtonState(long)>($l0);

        return $i1;
    }

    public int getClassification()
    {
        android.view.MotionEvent r0;
        long $l0;
        int $i1;

        r0 := @this: android.view.MotionEvent;

        $l0 = r0.<android.view.MotionEvent: long mNativePtr>;

        $i1 = staticinvoke <android.view.MotionEvent: int nativeGetClassification(long)>($l0);

        return $i1;
    }

    public final int getDeviceId()
    {
        android.view.MotionEvent r0;
        long $l0;
        int $i1;

        r0 := @this: android.view.MotionEvent;

        $l0 = r0.<android.view.MotionEvent: long mNativePtr>;

        $i1 = staticinvoke <android.view.MotionEvent: int nativeGetDeviceId(long)>($l0);

        return $i1;
    }

    public int getDisplayId()
    {
        android.view.MotionEvent r0;
        long $l0;
        int $i1;

        r0 := @this: android.view.MotionEvent;

        $l0 = r0.<android.view.MotionEvent: long mNativePtr>;

        $i1 = staticinvoke <android.view.MotionEvent: int nativeGetDisplayId(long)>($l0);

        return $i1;
    }

    public final long getDownTime()
    {
        android.view.MotionEvent r0;
        long $l0, $l1, $l2;

        r0 := @this: android.view.MotionEvent;

        $l0 = r0.<android.view.MotionEvent: long mNativePtr>;

        $l1 = staticinvoke <android.view.MotionEvent: long nativeGetDownTimeNanos(long)>($l0);

        $l2 = $l1 / 1000000L;

        return $l2;
    }

    public final int getEdgeFlags()
    {
        android.view.MotionEvent r0;
        long $l0;
        int $i1;

        r0 := @this: android.view.MotionEvent;

        $l0 = r0.<android.view.MotionEvent: long mNativePtr>;

        $i1 = staticinvoke <android.view.MotionEvent: int nativeGetEdgeFlags(long)>($l0);

        return $i1;
    }

    public final long getEventTime()
    {
        android.view.MotionEvent r0;
        long $l0, $l1, $l2;

        r0 := @this: android.view.MotionEvent;

        $l0 = r0.<android.view.MotionEvent: long mNativePtr>;

        $l1 = staticinvoke <android.view.MotionEvent: long nativeGetEventTimeNanos(long,int)>($l0, -2147483648);

        $l2 = $l1 / 1000000L;

        return $l2;
    }

    public final long getEventTimeNano()
    {
        android.view.MotionEvent r0;
        long $l0, $l1;

        r0 := @this: android.view.MotionEvent;

        $l0 = r0.<android.view.MotionEvent: long mNativePtr>;

        $l1 = staticinvoke <android.view.MotionEvent: long nativeGetEventTimeNanos(long,int)>($l0, -2147483648);

        return $l1;
    }

    public final int getFlags()
    {
        android.view.MotionEvent r0;
        long $l0;
        int $i1;

        r0 := @this: android.view.MotionEvent;

        $l0 = r0.<android.view.MotionEvent: long mNativePtr>;

        $i1 = staticinvoke <android.view.MotionEvent: int nativeGetFlags(long)>($l0);

        return $i1;
    }

    public final float getHistoricalAxisValue(int, int)
    {
        android.view.MotionEvent r0;
        int i0, i1;
        long $l2;
        float $f0;

        r0 := @this: android.view.MotionEvent;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $l2 = r0.<android.view.MotionEvent: long mNativePtr>;

        $f0 = staticinvoke <android.view.MotionEvent: float nativeGetAxisValue(long,int,int,int)>($l2, i0, 0, i1);

        return $f0;
    }

    public final float getHistoricalAxisValue(int, int, int)
    {
        android.view.MotionEvent r0;
        int i0, i1, i2;
        long $l3;
        float $f0;

        r0 := @this: android.view.MotionEvent;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $l3 = r0.<android.view.MotionEvent: long mNativePtr>;

        $f0 = staticinvoke <android.view.MotionEvent: float nativeGetAxisValue(long,int,int,int)>($l3, i0, i1, i2);

        return $f0;
    }

    public final long getHistoricalEventTime(int)
    {
        android.view.MotionEvent r0;
        int i0;
        long $l1, $l2, $l3;

        r0 := @this: android.view.MotionEvent;

        i0 := @parameter0: int;

        $l1 = r0.<android.view.MotionEvent: long mNativePtr>;

        $l2 = staticinvoke <android.view.MotionEvent: long nativeGetEventTimeNanos(long,int)>($l1, i0);

        $l3 = $l2 / 1000000L;

        return $l3;
    }

    public final long getHistoricalEventTimeNano(int)
    {
        android.view.MotionEvent r0;
        int i0;
        long $l1, $l2;

        r0 := @this: android.view.MotionEvent;

        i0 := @parameter0: int;

        $l1 = r0.<android.view.MotionEvent: long mNativePtr>;

        $l2 = staticinvoke <android.view.MotionEvent: long nativeGetEventTimeNanos(long,int)>($l1, i0);

        return $l2;
    }

    public final float getHistoricalOrientation(int)
    {
        android.view.MotionEvent r0;
        int i0;
        long $l1;
        float $f0;

        r0 := @this: android.view.MotionEvent;

        i0 := @parameter0: int;

        $l1 = r0.<android.view.MotionEvent: long mNativePtr>;

        $f0 = staticinvoke <android.view.MotionEvent: float nativeGetAxisValue(long,int,int,int)>($l1, 8, 0, i0);

        return $f0;
    }

    public final float getHistoricalOrientation(int, int)
    {
        android.view.MotionEvent r0;
        int i0, i1;
        long $l2;
        float $f0;

        r0 := @this: android.view.MotionEvent;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $l2 = r0.<android.view.MotionEvent: long mNativePtr>;

        $f0 = staticinvoke <android.view.MotionEvent: float nativeGetAxisValue(long,int,int,int)>($l2, 8, i0, i1);

        return $f0;
    }

    public final void getHistoricalPointerCoords(int, int, android.view.MotionEvent$PointerCoords)
    {
        android.view.MotionEvent r0;
        int i0, i1;
        android.view.MotionEvent$PointerCoords r1;
        long $l2;

        r0 := @this: android.view.MotionEvent;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: android.view.MotionEvent$PointerCoords;

        $l2 = r0.<android.view.MotionEvent: long mNativePtr>;

        staticinvoke <android.view.MotionEvent: void nativeGetPointerCoords(long,int,int,android.view.MotionEvent$PointerCoords)>($l2, i0, i1, r1);

        return;
    }

    public final float getHistoricalPressure(int)
    {
        android.view.MotionEvent r0;
        int i0;
        long $l1;
        float $f0;

        r0 := @this: android.view.MotionEvent;

        i0 := @parameter0: int;

        $l1 = r0.<android.view.MotionEvent: long mNativePtr>;

        $f0 = staticinvoke <android.view.MotionEvent: float nativeGetAxisValue(long,int,int,int)>($l1, 2, 0, i0);

        return $f0;
    }

    public final float getHistoricalPressure(int, int)
    {
        android.view.MotionEvent r0;
        int i0, i1;
        long $l2;
        float $f0;

        r0 := @this: android.view.MotionEvent;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $l2 = r0.<android.view.MotionEvent: long mNativePtr>;

        $f0 = staticinvoke <android.view.MotionEvent: float nativeGetAxisValue(long,int,int,int)>($l2, 2, i0, i1);

        return $f0;
    }

    public final float getHistoricalSize(int)
    {
        android.view.MotionEvent r0;
        int i0;
        long $l1;
        float $f0;

        r0 := @this: android.view.MotionEvent;

        i0 := @parameter0: int;

        $l1 = r0.<android.view.MotionEvent: long mNativePtr>;

        $f0 = staticinvoke <android.view.MotionEvent: float nativeGetAxisValue(long,int,int,int)>($l1, 3, 0, i0);

        return $f0;
    }

    public final float getHistoricalSize(int, int)
    {
        android.view.MotionEvent r0;
        int i0, i1;
        long $l2;
        float $f0;

        r0 := @this: android.view.MotionEvent;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $l2 = r0.<android.view.MotionEvent: long mNativePtr>;

        $f0 = staticinvoke <android.view.MotionEvent: float nativeGetAxisValue(long,int,int,int)>($l2, 3, i0, i1);

        return $f0;
    }

    public final float getHistoricalToolMajor(int)
    {
        android.view.MotionEvent r0;
        int i0;
        long $l1;
        float $f0;

        r0 := @this: android.view.MotionEvent;

        i0 := @parameter0: int;

        $l1 = r0.<android.view.MotionEvent: long mNativePtr>;

        $f0 = staticinvoke <android.view.MotionEvent: float nativeGetAxisValue(long,int,int,int)>($l1, 6, 0, i0);

        return $f0;
    }

    public final float getHistoricalToolMajor(int, int)
    {
        android.view.MotionEvent r0;
        int i0, i1;
        long $l2;
        float $f0;

        r0 := @this: android.view.MotionEvent;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $l2 = r0.<android.view.MotionEvent: long mNativePtr>;

        $f0 = staticinvoke <android.view.MotionEvent: float nativeGetAxisValue(long,int,int,int)>($l2, 6, i0, i1);

        return $f0;
    }

    public final float getHistoricalToolMinor(int)
    {
        android.view.MotionEvent r0;
        int i0;
        long $l1;
        float $f0;

        r0 := @this: android.view.MotionEvent;

        i0 := @parameter0: int;

        $l1 = r0.<android.view.MotionEvent: long mNativePtr>;

        $f0 = staticinvoke <android.view.MotionEvent: float nativeGetAxisValue(long,int,int,int)>($l1, 7, 0, i0);

        return $f0;
    }

    public final float getHistoricalToolMinor(int, int)
    {
        android.view.MotionEvent r0;
        int i0, i1;
        long $l2;
        float $f0;

        r0 := @this: android.view.MotionEvent;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $l2 = r0.<android.view.MotionEvent: long mNativePtr>;

        $f0 = staticinvoke <android.view.MotionEvent: float nativeGetAxisValue(long,int,int,int)>($l2, 7, i0, i1);

        return $f0;
    }

    public final float getHistoricalTouchMajor(int)
    {
        android.view.MotionEvent r0;
        int i0;
        long $l1;
        float $f0;

        r0 := @this: android.view.MotionEvent;

        i0 := @parameter0: int;

        $l1 = r0.<android.view.MotionEvent: long mNativePtr>;

        $f0 = staticinvoke <android.view.MotionEvent: float nativeGetAxisValue(long,int,int,int)>($l1, 4, 0, i0);

        return $f0;
    }

    public final float getHistoricalTouchMajor(int, int)
    {
        android.view.MotionEvent r0;
        int i0, i1;
        long $l2;
        float $f0;

        r0 := @this: android.view.MotionEvent;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $l2 = r0.<android.view.MotionEvent: long mNativePtr>;

        $f0 = staticinvoke <android.view.MotionEvent: float nativeGetAxisValue(long,int,int,int)>($l2, 4, i0, i1);

        return $f0;
    }

    public final float getHistoricalTouchMinor(int)
    {
        android.view.MotionEvent r0;
        int i0;
        long $l1;
        float $f0;

        r0 := @this: android.view.MotionEvent;

        i0 := @parameter0: int;

        $l1 = r0.<android.view.MotionEvent: long mNativePtr>;

        $f0 = staticinvoke <android.view.MotionEvent: float nativeGetAxisValue(long,int,int,int)>($l1, 5, 0, i0);

        return $f0;
    }

    public final float getHistoricalTouchMinor(int, int)
    {
        android.view.MotionEvent r0;
        int i0, i1;
        long $l2;
        float $f0;

        r0 := @this: android.view.MotionEvent;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $l2 = r0.<android.view.MotionEvent: long mNativePtr>;

        $f0 = staticinvoke <android.view.MotionEvent: float nativeGetAxisValue(long,int,int,int)>($l2, 5, i0, i1);

        return $f0;
    }

    public final float getHistoricalX(int)
    {
        android.view.MotionEvent r0;
        int i0;
        long $l1;
        float $f0;

        r0 := @this: android.view.MotionEvent;

        i0 := @parameter0: int;

        $l1 = r0.<android.view.MotionEvent: long mNativePtr>;

        $f0 = staticinvoke <android.view.MotionEvent: float nativeGetAxisValue(long,int,int,int)>($l1, 0, 0, i0);

        return $f0;
    }

    public final float getHistoricalX(int, int)
    {
        android.view.MotionEvent r0;
        int i0, i1;
        long $l2;
        float $f0;

        r0 := @this: android.view.MotionEvent;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $l2 = r0.<android.view.MotionEvent: long mNativePtr>;

        $f0 = staticinvoke <android.view.MotionEvent: float nativeGetAxisValue(long,int,int,int)>($l2, 0, i0, i1);

        return $f0;
    }

    public final float getHistoricalY(int)
    {
        android.view.MotionEvent r0;
        int i0;
        long $l1;
        float $f0;

        r0 := @this: android.view.MotionEvent;

        i0 := @parameter0: int;

        $l1 = r0.<android.view.MotionEvent: long mNativePtr>;

        $f0 = staticinvoke <android.view.MotionEvent: float nativeGetAxisValue(long,int,int,int)>($l1, 1, 0, i0);

        return $f0;
    }

    public final float getHistoricalY(int, int)
    {
        android.view.MotionEvent r0;
        int i0, i1;
        long $l2;
        float $f0;

        r0 := @this: android.view.MotionEvent;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $l2 = r0.<android.view.MotionEvent: long mNativePtr>;

        $f0 = staticinvoke <android.view.MotionEvent: float nativeGetAxisValue(long,int,int,int)>($l2, 1, i0, i1);

        return $f0;
    }

    public final int getHistorySize()
    {
        android.view.MotionEvent r0;
        long $l0;
        int $i1;

        r0 := @this: android.view.MotionEvent;

        $l0 = r0.<android.view.MotionEvent: long mNativePtr>;

        $i1 = staticinvoke <android.view.MotionEvent: int nativeGetHistorySize(long)>($l0);

        return $i1;
    }

    public int getId()
    {
        android.view.MotionEvent r0;
        long $l0;
        int $i1;

        r0 := @this: android.view.MotionEvent;

        $l0 = r0.<android.view.MotionEvent: long mNativePtr>;

        $i1 = staticinvoke <android.view.MotionEvent: int nativeGetId(long)>($l0);

        return $i1;
    }

    public final int getMetaState()
    {
        android.view.MotionEvent r0;
        long $l0;
        int $i1;

        r0 := @this: android.view.MotionEvent;

        $l0 = r0.<android.view.MotionEvent: long mNativePtr>;

        $i1 = staticinvoke <android.view.MotionEvent: int nativeGetMetaState(long)>($l0);

        return $i1;
    }

    public final float getOrientation()
    {
        android.view.MotionEvent r0;
        long $l0;
        float $f0;

        r0 := @this: android.view.MotionEvent;

        $l0 = r0.<android.view.MotionEvent: long mNativePtr>;

        $f0 = staticinvoke <android.view.MotionEvent: float nativeGetAxisValue(long,int,int,int)>($l0, 8, 0, -2147483648);

        return $f0;
    }

    public final float getOrientation(int)
    {
        android.view.MotionEvent r0;
        int i0;
        long $l1;
        float $f0;

        r0 := @this: android.view.MotionEvent;

        i0 := @parameter0: int;

        $l1 = r0.<android.view.MotionEvent: long mNativePtr>;

        $f0 = staticinvoke <android.view.MotionEvent: float nativeGetAxisValue(long,int,int,int)>($l1, 8, i0, -2147483648);

        return $f0;
    }

    public final void getPointerCoords(int, android.view.MotionEvent$PointerCoords)
    {
        android.view.MotionEvent r0;
        int i0;
        android.view.MotionEvent$PointerCoords r1;
        long $l1;

        r0 := @this: android.view.MotionEvent;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.MotionEvent$PointerCoords;

        $l1 = r0.<android.view.MotionEvent: long mNativePtr>;

        staticinvoke <android.view.MotionEvent: void nativeGetPointerCoords(long,int,int,android.view.MotionEvent$PointerCoords)>($l1, i0, -2147483648, r1);

        return;
    }

    public final int getPointerCount()
    {
        android.view.MotionEvent r0;
        long $l0;
        int $i1;

        r0 := @this: android.view.MotionEvent;

        $l0 = r0.<android.view.MotionEvent: long mNativePtr>;

        $i1 = staticinvoke <android.view.MotionEvent: int nativeGetPointerCount(long)>($l0);

        return $i1;
    }

    public final int getPointerId(int)
    {
        android.view.MotionEvent r0;
        int i0, $i2;
        long $l1;

        r0 := @this: android.view.MotionEvent;

        i0 := @parameter0: int;

        $l1 = r0.<android.view.MotionEvent: long mNativePtr>;

        $i2 = staticinvoke <android.view.MotionEvent: int nativeGetPointerId(long,int)>($l1, i0);

        return $i2;
    }

    public final int getPointerIdBits()
    {
        android.view.MotionEvent r0;
        int i0, $i3, $i4, i5, i6;
        long $l1, $l2;

        r0 := @this: android.view.MotionEvent;

        i5 = 0;

        $l1 = r0.<android.view.MotionEvent: long mNativePtr>;

        i0 = staticinvoke <android.view.MotionEvent: int nativeGetPointerCount(long)>($l1);

        i6 = 0;

     label1:
        if i6 >= i0 goto label2;

        $l2 = r0.<android.view.MotionEvent: long mNativePtr>;

        $i3 = staticinvoke <android.view.MotionEvent: int nativeGetPointerId(long,int)>($l2, i6);

        $i4 = 1 << $i3;

        i5 = i5 | $i4;

        i6 = i6 + 1;

        goto label1;

     label2:
        return i5;
    }

    public final void getPointerProperties(int, android.view.MotionEvent$PointerProperties)
    {
        android.view.MotionEvent r0;
        int i0;
        android.view.MotionEvent$PointerProperties r1;
        long $l1;

        r0 := @this: android.view.MotionEvent;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.MotionEvent$PointerProperties;

        $l1 = r0.<android.view.MotionEvent: long mNativePtr>;

        staticinvoke <android.view.MotionEvent: void nativeGetPointerProperties(long,int,android.view.MotionEvent$PointerProperties)>($l1, i0, r1);

        return;
    }

    public final float getPressure()
    {
        android.view.MotionEvent r0;
        long $l0;
        float $f0;

        r0 := @this: android.view.MotionEvent;

        $l0 = r0.<android.view.MotionEvent: long mNativePtr>;

        $f0 = staticinvoke <android.view.MotionEvent: float nativeGetAxisValue(long,int,int,int)>($l0, 2, 0, -2147483648);

        return $f0;
    }

    public final float getPressure(int)
    {
        android.view.MotionEvent r0;
        int i0;
        long $l1;
        float $f0;

        r0 := @this: android.view.MotionEvent;

        i0 := @parameter0: int;

        $l1 = r0.<android.view.MotionEvent: long mNativePtr>;

        $f0 = staticinvoke <android.view.MotionEvent: float nativeGetAxisValue(long,int,int,int)>($l1, 2, i0, -2147483648);

        return $f0;
    }

    public final float getRawX()
    {
        android.view.MotionEvent r0;
        long $l0;
        float $f0;

        r0 := @this: android.view.MotionEvent;

        $l0 = r0.<android.view.MotionEvent: long mNativePtr>;

        $f0 = staticinvoke <android.view.MotionEvent: float nativeGetRawAxisValue(long,int,int,int)>($l0, 0, 0, -2147483648);

        return $f0;
    }

    public float getRawX(int)
    {
        android.view.MotionEvent r0;
        int i0;
        long $l1;
        float $f0;

        r0 := @this: android.view.MotionEvent;

        i0 := @parameter0: int;

        $l1 = r0.<android.view.MotionEvent: long mNativePtr>;

        $f0 = staticinvoke <android.view.MotionEvent: float nativeGetRawAxisValue(long,int,int,int)>($l1, 0, i0, -2147483648);

        return $f0;
    }

    public final float getRawY()
    {
        android.view.MotionEvent r0;
        long $l0;
        float $f0;

        r0 := @this: android.view.MotionEvent;

        $l0 = r0.<android.view.MotionEvent: long mNativePtr>;

        $f0 = staticinvoke <android.view.MotionEvent: float nativeGetRawAxisValue(long,int,int,int)>($l0, 1, 0, -2147483648);

        return $f0;
    }

    public float getRawY(int)
    {
        android.view.MotionEvent r0;
        int i0;
        long $l1;
        float $f0;

        r0 := @this: android.view.MotionEvent;

        i0 := @parameter0: int;

        $l1 = r0.<android.view.MotionEvent: long mNativePtr>;

        $f0 = staticinvoke <android.view.MotionEvent: float nativeGetRawAxisValue(long,int,int,int)>($l1, 1, i0, -2147483648);

        return $f0;
    }

    public final float getSize()
    {
        android.view.MotionEvent r0;
        long $l0;
        float $f0;

        r0 := @this: android.view.MotionEvent;

        $l0 = r0.<android.view.MotionEvent: long mNativePtr>;

        $f0 = staticinvoke <android.view.MotionEvent: float nativeGetAxisValue(long,int,int,int)>($l0, 3, 0, -2147483648);

        return $f0;
    }

    public final float getSize(int)
    {
        android.view.MotionEvent r0;
        int i0;
        long $l1;
        float $f0;

        r0 := @this: android.view.MotionEvent;

        i0 := @parameter0: int;

        $l1 = r0.<android.view.MotionEvent: long mNativePtr>;

        $f0 = staticinvoke <android.view.MotionEvent: float nativeGetAxisValue(long,int,int,int)>($l1, 3, i0, -2147483648);

        return $f0;
    }

    public final int getSource()
    {
        android.view.MotionEvent r0;
        long $l0;
        int $i1;

        r0 := @this: android.view.MotionEvent;

        $l0 = r0.<android.view.MotionEvent: long mNativePtr>;

        $i1 = staticinvoke <android.view.MotionEvent: int nativeGetSource(long)>($l0);

        return $i1;
    }

    public final float getToolMajor()
    {
        android.view.MotionEvent r0;
        long $l0;
        float $f0;

        r0 := @this: android.view.MotionEvent;

        $l0 = r0.<android.view.MotionEvent: long mNativePtr>;

        $f0 = staticinvoke <android.view.MotionEvent: float nativeGetAxisValue(long,int,int,int)>($l0, 6, 0, -2147483648);

        return $f0;
    }

    public final float getToolMajor(int)
    {
        android.view.MotionEvent r0;
        int i0;
        long $l1;
        float $f0;

        r0 := @this: android.view.MotionEvent;

        i0 := @parameter0: int;

        $l1 = r0.<android.view.MotionEvent: long mNativePtr>;

        $f0 = staticinvoke <android.view.MotionEvent: float nativeGetAxisValue(long,int,int,int)>($l1, 6, i0, -2147483648);

        return $f0;
    }

    public final float getToolMinor()
    {
        android.view.MotionEvent r0;
        long $l0;
        float $f0;

        r0 := @this: android.view.MotionEvent;

        $l0 = r0.<android.view.MotionEvent: long mNativePtr>;

        $f0 = staticinvoke <android.view.MotionEvent: float nativeGetAxisValue(long,int,int,int)>($l0, 7, 0, -2147483648);

        return $f0;
    }

    public final float getToolMinor(int)
    {
        android.view.MotionEvent r0;
        int i0;
        long $l1;
        float $f0;

        r0 := @this: android.view.MotionEvent;

        i0 := @parameter0: int;

        $l1 = r0.<android.view.MotionEvent: long mNativePtr>;

        $f0 = staticinvoke <android.view.MotionEvent: float nativeGetAxisValue(long,int,int,int)>($l1, 7, i0, -2147483648);

        return $f0;
    }

    public final int getToolType(int)
    {
        android.view.MotionEvent r0;
        int i0, $i2;
        long $l1;

        r0 := @this: android.view.MotionEvent;

        i0 := @parameter0: int;

        $l1 = r0.<android.view.MotionEvent: long mNativePtr>;

        $i2 = staticinvoke <android.view.MotionEvent: int nativeGetToolType(long,int)>($l1, i0);

        return $i2;
    }

    public final float getTouchMajor()
    {
        android.view.MotionEvent r0;
        long $l0;
        float $f0;

        r0 := @this: android.view.MotionEvent;

        $l0 = r0.<android.view.MotionEvent: long mNativePtr>;

        $f0 = staticinvoke <android.view.MotionEvent: float nativeGetAxisValue(long,int,int,int)>($l0, 4, 0, -2147483648);

        return $f0;
    }

    public final float getTouchMajor(int)
    {
        android.view.MotionEvent r0;
        int i0;
        long $l1;
        float $f0;

        r0 := @this: android.view.MotionEvent;

        i0 := @parameter0: int;

        $l1 = r0.<android.view.MotionEvent: long mNativePtr>;

        $f0 = staticinvoke <android.view.MotionEvent: float nativeGetAxisValue(long,int,int,int)>($l1, 4, i0, -2147483648);

        return $f0;
    }

    public final float getTouchMinor()
    {
        android.view.MotionEvent r0;
        long $l0;
        float $f0;

        r0 := @this: android.view.MotionEvent;

        $l0 = r0.<android.view.MotionEvent: long mNativePtr>;

        $f0 = staticinvoke <android.view.MotionEvent: float nativeGetAxisValue(long,int,int,int)>($l0, 5, 0, -2147483648);

        return $f0;
    }

    public final float getTouchMinor(int)
    {
        android.view.MotionEvent r0;
        int i0;
        long $l1;
        float $f0;

        r0 := @this: android.view.MotionEvent;

        i0 := @parameter0: int;

        $l1 = r0.<android.view.MotionEvent: long mNativePtr>;

        $f0 = staticinvoke <android.view.MotionEvent: float nativeGetAxisValue(long,int,int,int)>($l1, 5, i0, -2147483648);

        return $f0;
    }

    public final float getX()
    {
        android.view.MotionEvent r0;
        long $l0;
        float $f0;

        r0 := @this: android.view.MotionEvent;

        $l0 = r0.<android.view.MotionEvent: long mNativePtr>;

        $f0 = staticinvoke <android.view.MotionEvent: float nativeGetAxisValue(long,int,int,int)>($l0, 0, 0, -2147483648);

        return $f0;
    }

    public final float getX(int)
    {
        android.view.MotionEvent r0;
        int i0;
        long $l1;
        float $f0;

        r0 := @this: android.view.MotionEvent;

        i0 := @parameter0: int;

        $l1 = r0.<android.view.MotionEvent: long mNativePtr>;

        $f0 = staticinvoke <android.view.MotionEvent: float nativeGetAxisValue(long,int,int,int)>($l1, 0, i0, -2147483648);

        return $f0;
    }

    public float getXCursorPosition()
    {
        android.view.MotionEvent r0;
        long $l0;
        float $f0;

        r0 := @this: android.view.MotionEvent;

        $l0 = r0.<android.view.MotionEvent: long mNativePtr>;

        $f0 = staticinvoke <android.view.MotionEvent: float nativeGetXCursorPosition(long)>($l0);

        return $f0;
    }

    public final float getXPrecision()
    {
        android.view.MotionEvent r0;
        long $l0;
        float $f0;

        r0 := @this: android.view.MotionEvent;

        $l0 = r0.<android.view.MotionEvent: long mNativePtr>;

        $f0 = staticinvoke <android.view.MotionEvent: float nativeGetXPrecision(long)>($l0);

        return $f0;
    }

    public final float getY()
    {
        android.view.MotionEvent r0;
        long $l0;
        float $f0;

        r0 := @this: android.view.MotionEvent;

        $l0 = r0.<android.view.MotionEvent: long mNativePtr>;

        $f0 = staticinvoke <android.view.MotionEvent: float nativeGetAxisValue(long,int,int,int)>($l0, 1, 0, -2147483648);

        return $f0;
    }

    public final float getY(int)
    {
        android.view.MotionEvent r0;
        int i0;
        long $l1;
        float $f0;

        r0 := @this: android.view.MotionEvent;

        i0 := @parameter0: int;

        $l1 = r0.<android.view.MotionEvent: long mNativePtr>;

        $f0 = staticinvoke <android.view.MotionEvent: float nativeGetAxisValue(long,int,int,int)>($l1, 1, i0, -2147483648);

        return $f0;
    }

    public float getYCursorPosition()
    {
        android.view.MotionEvent r0;
        long $l0;
        float $f0;

        r0 := @this: android.view.MotionEvent;

        $l0 = r0.<android.view.MotionEvent: long mNativePtr>;

        $f0 = staticinvoke <android.view.MotionEvent: float nativeGetYCursorPosition(long)>($l0);

        return $f0;
    }

    public final float getYPrecision()
    {
        android.view.MotionEvent r0;
        long $l0;
        float $f0;

        r0 := @this: android.view.MotionEvent;

        $l0 = r0.<android.view.MotionEvent: long mNativePtr>;

        $f0 = staticinvoke <android.view.MotionEvent: float nativeGetYPrecision(long)>($l0);

        return $f0;
    }

    public final boolean isButtonPressed(int)
    {
        android.view.MotionEvent r0;
        int i0, $i1, $i2;
        boolean z0;

        r0 := @this: android.view.MotionEvent;

        i0 := @parameter0: int;

        z0 = 0;

        if i0 != 0 goto label1;

        return 0;

     label1:
        $i1 = virtualinvoke r0.<android.view.MotionEvent: int getButtonState()>();

        $i2 = $i1 & i0;

        if $i2 != i0 goto label2;

        z0 = 1;

     label2:
        return z0;
    }

    public final boolean isHoverExitPending()
    {
        android.view.MotionEvent r0;
        int $i0, $i1;
        boolean z0;

        r0 := @this: android.view.MotionEvent;

        $i0 = virtualinvoke r0.<android.view.MotionEvent: int getFlags()>();

        $i1 = $i0 & 4;

        if $i1 == 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public final boolean isTainted()
    {
        android.view.MotionEvent r0;
        int $i0, $i1;
        boolean z0;

        r0 := @this: android.view.MotionEvent;

        $i0 = virtualinvoke r0.<android.view.MotionEvent: int getFlags()>();

        $i1 = -2147483648 & $i0;

        if $i1 == 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public boolean isTargetAccessibilityFocus()
    {
        android.view.MotionEvent r0;
        int $i0, $i1;
        boolean z0;

        r0 := @this: android.view.MotionEvent;

        $i0 = virtualinvoke r0.<android.view.MotionEvent: int getFlags()>();

        $i1 = 1073741824 & $i0;

        if $i1 == 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public final boolean isTouchEvent()
    {
        android.view.MotionEvent r0;
        long $l0;
        boolean $z0;

        r0 := @this: android.view.MotionEvent;

        $l0 = r0.<android.view.MotionEvent: long mNativePtr>;

        $z0 = staticinvoke <android.view.MotionEvent: boolean nativeIsTouchEvent(long)>($l0);

        return $z0;
    }

    public final boolean isWithinBoundsNoHistory(float, float, float, float)
    {
        android.view.MotionEvent r0;
        float f0, f1, f2, f3, f4, f5;
        int i0, i8;
        long $l1, $l2, $l3;
        byte $b4, $b5, $b6, $b7;

        r0 := @this: android.view.MotionEvent;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        f3 := @parameter3: float;

        $l1 = r0.<android.view.MotionEvent: long mNativePtr>;

        i0 = staticinvoke <android.view.MotionEvent: int nativeGetPointerCount(long)>($l1);

        i8 = 0;

     label1:
        if i8 >= i0 goto label4;

        $l2 = r0.<android.view.MotionEvent: long mNativePtr>;

        f4 = staticinvoke <android.view.MotionEvent: float nativeGetAxisValue(long,int,int,int)>($l2, 0, i8, -2147483648);

        $l3 = r0.<android.view.MotionEvent: long mNativePtr>;

        f5 = staticinvoke <android.view.MotionEvent: float nativeGetAxisValue(long,int,int,int)>($l3, 1, i8, -2147483648);

        $b4 = f4 cmpg f0;

        if $b4 < 0 goto label3;

        $b5 = f4 cmpl f2;

        if $b5 > 0 goto label3;

        $b6 = f5 cmpg f1;

        if $b6 < 0 goto label3;

        $b7 = f5 cmpl f3;

        if $b7 <= 0 goto label2;

        goto label3;

     label2:
        i8 = i8 + 1;

        goto label1;

     label3:
        return 0;

     label4:
        return 1;
    }

    public final void offsetLocation(float, float)
    {
        android.view.MotionEvent r0;
        float f0, f1;
        byte $b0, $b2;
        long $l1;

        r0 := @this: android.view.MotionEvent;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $b0 = f0 cmpl 0.0F;

        if $b0 != 0 goto label1;

        $b2 = f1 cmpl 0.0F;

        if $b2 == 0 goto label2;

     label1:
        $l1 = r0.<android.view.MotionEvent: long mNativePtr>;

        staticinvoke <android.view.MotionEvent: void nativeOffsetLocation(long,float,float)>($l1, f0, f1);

     label2:
        return;
    }

    public final void recycle()
    {
        android.view.MotionEvent r0, $r3;
        java.lang.Object r1;
        int $i0, $i1, $i2;
        java.lang.Throwable $r4;

        r0 := @this: android.view.MotionEvent;

        specialinvoke r0.<android.view.InputEvent: void recycle()>();

        r1 = <android.view.MotionEvent: java.lang.Object gRecyclerLock>;

        entermonitor r1;

     label1:
        $i0 = <android.view.MotionEvent: int gRecyclerUsed>;

        if $i0 >= 10 goto label2;

        $i1 = <android.view.MotionEvent: int gRecyclerUsed>;

        $i2 = $i1 + 1;

        <android.view.MotionEvent: int gRecyclerUsed> = $i2;

        $r3 = <android.view.MotionEvent: android.view.MotionEvent gRecyclerTop>;

        r0.<android.view.MotionEvent: android.view.MotionEvent mNext> = $r3;

        <android.view.MotionEvent: android.view.MotionEvent gRecyclerTop> = r0;

     label2:
        exitmonitor r1;

     label3:
        return;

     label4:
        $r4 := @caughtexception;

     label5:
        exitmonitor r1;

     label6:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public final void scale(float)
    {
        android.view.MotionEvent r0;
        float f0;
        byte $b0;
        long $l1;

        r0 := @this: android.view.MotionEvent;

        f0 := @parameter0: float;

        $b0 = f0 cmpl 1.0F;

        if $b0 == 0 goto label1;

        $l1 = r0.<android.view.MotionEvent: long mNativePtr>;

        staticinvoke <android.view.MotionEvent: void nativeScale(long,float)>($l1, f0);

     label1:
        return;
    }

    public final void setAction(int)
    {
        android.view.MotionEvent r0;
        int i0;
        long $l1;

        r0 := @this: android.view.MotionEvent;

        i0 := @parameter0: int;

        $l1 = r0.<android.view.MotionEvent: long mNativePtr>;

        staticinvoke <android.view.MotionEvent: void nativeSetAction(long,int)>($l1, i0);

        return;
    }

    public final void setActionButton(int)
    {
        android.view.MotionEvent r0;
        int i0;
        long $l1;

        r0 := @this: android.view.MotionEvent;

        i0 := @parameter0: int;

        $l1 = r0.<android.view.MotionEvent: long mNativePtr>;

        staticinvoke <android.view.MotionEvent: void nativeSetActionButton(long,int)>($l1, i0);

        return;
    }

    public final void setButtonState(int)
    {
        android.view.MotionEvent r0;
        int i0;
        long $l1;

        r0 := @this: android.view.MotionEvent;

        i0 := @parameter0: int;

        $l1 = r0.<android.view.MotionEvent: long mNativePtr>;

        staticinvoke <android.view.MotionEvent: void nativeSetButtonState(long,int)>($l1, i0);

        return;
    }

    public void setDisplayId(int)
    {
        android.view.MotionEvent r0;
        int i0;
        long $l1;

        r0 := @this: android.view.MotionEvent;

        i0 := @parameter0: int;

        $l1 = r0.<android.view.MotionEvent: long mNativePtr>;

        staticinvoke <android.view.MotionEvent: void nativeSetDisplayId(long,int)>($l1, i0);

        return;
    }

    public final void setDownTime(long)
    {
        android.view.MotionEvent r0;
        long l0, $l1, $l2;

        r0 := @this: android.view.MotionEvent;

        l0 := @parameter0: long;

        $l2 = r0.<android.view.MotionEvent: long mNativePtr>;

        $l1 = 1000000L * l0;

        staticinvoke <android.view.MotionEvent: void nativeSetDownTimeNanos(long,long)>($l2, $l1);

        return;
    }

    public final void setEdgeFlags(int)
    {
        android.view.MotionEvent r0;
        int i0;
        long $l1;

        r0 := @this: android.view.MotionEvent;

        i0 := @parameter0: int;

        $l1 = r0.<android.view.MotionEvent: long mNativePtr>;

        staticinvoke <android.view.MotionEvent: void nativeSetEdgeFlags(long,int)>($l1, i0);

        return;
    }

    public void setHoverExitPending(boolean)
    {
        android.view.MotionEvent r0;
        boolean z0;
        long l0;
        int i1, i2;

        r0 := @this: android.view.MotionEvent;

        z0 := @parameter0: boolean;

        i1 = virtualinvoke r0.<android.view.MotionEvent: int getFlags()>();

        l0 = r0.<android.view.MotionEvent: long mNativePtr>;

        if z0 == 0 goto label1;

        i2 = i1 | 4;

        goto label2;

     label1:
        i2 = i1 & -5;

     label2:
        staticinvoke <android.view.MotionEvent: void nativeSetFlags(long,int)>(l0, i2);

        return;
    }

    public final void setLocation(float, float)
    {
        android.view.MotionEvent r0;
        float f0, f1, $f2, $f3, $f4, $f5;

        r0 := @this: android.view.MotionEvent;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $f2 = virtualinvoke r0.<android.view.MotionEvent: float getX()>();

        $f3 = f0 - $f2;

        $f4 = virtualinvoke r0.<android.view.MotionEvent: float getY()>();

        $f5 = f1 - $f4;

        virtualinvoke r0.<android.view.MotionEvent: void offsetLocation(float,float)>($f3, $f5);

        return;
    }

    public final void setSource(int)
    {
        android.view.MotionEvent r0;
        int i0, $i1;
        long $l2;

        r0 := @this: android.view.MotionEvent;

        i0 := @parameter0: int;

        $i1 = virtualinvoke r0.<android.view.MotionEvent: int getSource()>();

        if i0 != $i1 goto label1;

        return;

     label1:
        $l2 = r0.<android.view.MotionEvent: long mNativePtr>;

        staticinvoke <android.view.MotionEvent: void nativeSetSource(long,int)>($l2, i0);

        specialinvoke r0.<android.view.MotionEvent: void updateCursorPosition()>();

        return;
    }

    public final void setTainted(boolean)
    {
        android.view.MotionEvent r0;
        boolean z0;
        long l0;
        int i1, i2;

        r0 := @this: android.view.MotionEvent;

        z0 := @parameter0: boolean;

        i1 = virtualinvoke r0.<android.view.MotionEvent: int getFlags()>();

        l0 = r0.<android.view.MotionEvent: long mNativePtr>;

        if z0 == 0 goto label1;

        i2 = -2147483648 | i1;

        goto label2;

     label1:
        i2 = 2147483647 & i1;

     label2:
        staticinvoke <android.view.MotionEvent: void nativeSetFlags(long,int)>(l0, i2);

        return;
    }

    public void setTargetAccessibilityFocus(boolean)
    {
        android.view.MotionEvent r0;
        boolean z0;
        long l0;
        int i1, i2;

        r0 := @this: android.view.MotionEvent;

        z0 := @parameter0: boolean;

        i1 = virtualinvoke r0.<android.view.MotionEvent: int getFlags()>();

        l0 = r0.<android.view.MotionEvent: long mNativePtr>;

        if z0 == 0 goto label1;

        i2 = 1073741824 | i1;

        goto label2;

     label1:
        i2 = -1073741825 & i1;

     label2:
        staticinvoke <android.view.MotionEvent: void nativeSetFlags(long,int)>(l0, i2);

        return;
    }

    public final android.view.MotionEvent split(int)
    {
        android.view.MotionEvent r0, r12;
        java.lang.Object r1;
        android.view.MotionEvent$PointerProperties[] r2;
        android.view.MotionEvent$PointerCoords[] r3;
        int[] r4;
        long l0, l6, $l7, $l8, $l11, $l12, $l13, $l14, $l15, $l16, $l17, $l18, $l19, $l20, $l21, $l22, $l23, $l24, $l25, $l27, $l28, $l44;
        int i1, i2, i3, i4, i5, $i9, $i10, $i26, $i29, $i30, $i31, i32, i33, i34, i35, i36, i37, i38, i39, i41, i42, i43, i45, i50, i51, i52, i53, i54, i55, i56;
        float f0, f1, f2, f3;
        android.view.MotionEvent$PointerCoords $r5;
        android.view.MotionEvent$PointerProperties $r6, $r7;
        java.lang.Throwable $r8, $r9, $r10, r21;
        java.lang.IllegalArgumentException r39;

        r0 := @this: android.view.MotionEvent;

        i32 := @parameter0: int;

        r12 = staticinvoke <android.view.MotionEvent: android.view.MotionEvent obtain()>();

        r1 = <android.view.MotionEvent: java.lang.Object gSharedTempLock>;

        entermonitor r1;

     label01:
        $l7 = r0.<android.view.MotionEvent: long mNativePtr>;

        i33 = staticinvoke <android.view.MotionEvent: int nativeGetPointerCount(long)>($l7);

     label02:
        staticinvoke <android.view.MotionEvent: void ensureSharedTempPointerCapacity(int)>(i33);

     label03:
        r2 = <android.view.MotionEvent: android.view.MotionEvent$PointerProperties[] gSharedTempPointerProperties>;

     label04:
        r3 = <android.view.MotionEvent: android.view.MotionEvent$PointerCoords[] gSharedTempPointerCoords>;

     label05:
        r4 = <android.view.MotionEvent: int[] gSharedTempPointerIndexMap>;

     label06:
        $l8 = r0.<android.view.MotionEvent: long mNativePtr>;

        i34 = staticinvoke <android.view.MotionEvent: int nativeGetAction(long)>($l8);

     label07:
        i35 = i34 & 255;

        $i9 = 65280 & i34;

        i36 = $i9 >> 8;

        i37 = 0;

        i38 = -1;

        i39 = 0;

     label08:
        if i37 >= i33 goto label16;

     label09:
        $l28 = r0.<android.view.MotionEvent: long mNativePtr>;

        $r6 = r2[i39];

        staticinvoke <android.view.MotionEvent: void nativeGetPointerProperties(long,int,android.view.MotionEvent$PointerProperties)>($l28, i37, $r6);

     label10:
        i41 = i39;

        i42 = i38;

     label11:
        $r7 = r2[i39];

        $i29 = $r7.<android.view.MotionEvent$PointerProperties: int id>;

        $i30 = 1 << $i29;

        $i31 = $i30 & i32;

        if $i31 == 0 goto label14;

     label12:
        if i37 != i36 goto label13;

        i38 = i39;

     label13:
        r4[i39] = i37;

        i41 = i39 + 1;

        i42 = i38;

     label14:
        i37 = i37 + 1;

        i39 = i41;

        i38 = i42;

        goto label08;

     label15:
        $r8 := @caughtexception;

        r21 = $r8;

        goto label54;

     label16:
        if i39 == 0 goto label52;

        if i35 == 5 goto label18;

        if i35 != 6 goto label17;

        goto label18;

     label17:
        i43 = i34;

        goto label23;

     label18:
        if i38 >= 0 goto label19;

        i43 = 2;

        goto label23;

     label19:
        if i39 != 1 goto label22;

        if i35 != 5 goto label20;

        i43 = 0;

        goto label21;

     label20:
        i43 = 1;

     label21:
        goto label23;

     label22:
        $i10 = i38 << 8;

        i43 = $i10 | i35;

     label23:
        $l44 = r0.<android.view.MotionEvent: long mNativePtr>;

        i45 = staticinvoke <android.view.MotionEvent: int nativeGetHistorySize(long)>($l44);

     label24:
        i50 = i39;

        i51 = 0;

     label25:
        if i51 > i45 goto label50;

        if i51 != i45 goto label26;

        i52 = -2147483648;

        goto label27;

     label26:
        i52 = i51;

     label27:
        i53 = 0;

     label28:
        if i53 >= i50 goto label31;

     label29:
        $l27 = r0.<android.view.MotionEvent: long mNativePtr>;

        $i26 = r4[i53];

        $r5 = r3[i53];

        staticinvoke <android.view.MotionEvent: void nativeGetPointerCoords(long,int,int,android.view.MotionEvent$PointerCoords)>($l27, $i26, i52, $r5);

     label30:
        i53 = i53 + 1;

        goto label28;

     label31:
        $l11 = r0.<android.view.MotionEvent: long mNativePtr>;

        l0 = staticinvoke <android.view.MotionEvent: long nativeGetEventTimeNanos(long,int)>($l11, i52);

     label32:
        if i51 != 0 goto label48;

     label33:
        $l13 = r0.<android.view.MotionEvent: long mNativePtr>;

        i1 = staticinvoke <android.view.MotionEvent: int nativeGetDeviceId(long)>($l13);

     label34:
        $l14 = r0.<android.view.MotionEvent: long mNativePtr>;

        i54 = staticinvoke <android.view.MotionEvent: int nativeGetSource(long)>($l14);

     label35:
        $l15 = r0.<android.view.MotionEvent: long mNativePtr>;

        i2 = staticinvoke <android.view.MotionEvent: int nativeGetDisplayId(long)>($l15);

     label36:
        $l16 = r0.<android.view.MotionEvent: long mNativePtr>;

        i3 = staticinvoke <android.view.MotionEvent: int nativeGetFlags(long)>($l16);

     label37:
        $l17 = r0.<android.view.MotionEvent: long mNativePtr>;

        i55 = staticinvoke <android.view.MotionEvent: int nativeGetEdgeFlags(long)>($l17);

     label38:
        $l18 = r0.<android.view.MotionEvent: long mNativePtr>;

        i4 = staticinvoke <android.view.MotionEvent: int nativeGetMetaState(long)>($l18);

     label39:
        $l19 = r0.<android.view.MotionEvent: long mNativePtr>;

        i5 = staticinvoke <android.view.MotionEvent: int nativeGetButtonState(long)>($l19);

     label40:
        $l20 = r0.<android.view.MotionEvent: long mNativePtr>;

        i56 = staticinvoke <android.view.MotionEvent: int nativeGetClassification(long)>($l20);

     label41:
        $l21 = r0.<android.view.MotionEvent: long mNativePtr>;

        f0 = staticinvoke <android.view.MotionEvent: float nativeGetXOffset(long)>($l21);

     label42:
        $l22 = r0.<android.view.MotionEvent: long mNativePtr>;

        f1 = staticinvoke <android.view.MotionEvent: float nativeGetYOffset(long)>($l22);

     label43:
        $l23 = r0.<android.view.MotionEvent: long mNativePtr>;

        f2 = staticinvoke <android.view.MotionEvent: float nativeGetXPrecision(long)>($l23);

     label44:
        $l24 = r0.<android.view.MotionEvent: long mNativePtr>;

        f3 = staticinvoke <android.view.MotionEvent: float nativeGetYPrecision(long)>($l24);

     label45:
        $l25 = r0.<android.view.MotionEvent: long mNativePtr>;

        l6 = staticinvoke <android.view.MotionEvent: long nativeGetDownTimeNanos(long)>($l25);

     label46:
        specialinvoke r12.<android.view.MotionEvent: boolean initialize(int,int,int,int,int,int,int,int,int,float,float,float,float,long,long,int,android.view.MotionEvent$PointerProperties[],android.view.MotionEvent$PointerCoords[])>(i1, i54, i2, i43, i3, i55, i4, i5, i56, f0, f1, f2, f3, l6, l0, i50, r2, r3);

     label47:
        goto label49;

     label48:
        $l12 = r12.<android.view.MotionEvent: long mNativePtr>;

        staticinvoke <android.view.MotionEvent: void nativeAddBatch(long,long,android.view.MotionEvent$PointerCoords[],int)>($l12, l0, r3, 0);

     label49:
        i51 = i51 + 1;

        goto label25;

     label50:
        exitmonitor r1;

     label51:
        return r12;

     label52:
        r39 = new java.lang.IllegalArgumentException;

        specialinvoke r39.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("idBits did not match any ids in the event");

        throw r39;

     label53:
        $r10 := @caughtexception;

        r21 = $r10;

     label54:
        exitmonitor r1;

     label55:
        throw r21;

     label56:
        $r9 := @caughtexception;

        r21 = $r9;

        goto label54;

        catch java.lang.Throwable from label01 to label02 with label53;
        catch java.lang.Throwable from label02 to label03 with label53;
        catch java.lang.Throwable from label03 to label04 with label53;
        catch java.lang.Throwable from label04 to label05 with label53;
        catch java.lang.Throwable from label05 to label06 with label53;
        catch java.lang.Throwable from label06 to label07 with label53;
        catch java.lang.Throwable from label09 to label10 with label15;
        catch java.lang.Throwable from label11 to label12 with label15;
        catch java.lang.Throwable from label23 to label24 with label53;
        catch java.lang.Throwable from label29 to label30 with label15;
        catch java.lang.Throwable from label31 to label32 with label53;
        catch java.lang.Throwable from label33 to label34 with label53;
        catch java.lang.Throwable from label34 to label35 with label53;
        catch java.lang.Throwable from label35 to label36 with label53;
        catch java.lang.Throwable from label36 to label37 with label53;
        catch java.lang.Throwable from label37 to label38 with label53;
        catch java.lang.Throwable from label38 to label39 with label53;
        catch java.lang.Throwable from label39 to label40 with label53;
        catch java.lang.Throwable from label40 to label41 with label53;
        catch java.lang.Throwable from label41 to label42 with label53;
        catch java.lang.Throwable from label42 to label43 with label53;
        catch java.lang.Throwable from label43 to label44 with label53;
        catch java.lang.Throwable from label44 to label45 with label53;
        catch java.lang.Throwable from label45 to label46 with label53;
        catch java.lang.Throwable from label46 to label47 with label56;
        catch java.lang.Throwable from label48 to label49 with label56;
        catch java.lang.Throwable from label50 to label51 with label56;
        catch java.lang.Throwable from label52 to label53 with label56;
        catch java.lang.Throwable from label54 to label55 with label56;
    }

    public java.lang.String toString()
    {
        android.view.MotionEvent r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i11, $i12, $i13, $i14, $i15, i16;
        float f0, f1;
        java.lang.StringBuilder $r3, $r31, $r48;
        java.lang.String $r5, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r25, $r30, $r36, $r52, $r53, r55;
        java.lang.Integer $r14, $r15, $r16, $r17, $r35, $r37;
        long $l9, $l10;
        android.util.SparseArray $r46;
        java.lang.Object $r47;

        r0 := @this: android.view.MotionEvent;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("MotionEvent { action=");

        $i1 = virtualinvoke r0.<android.view.MotionEvent: int getAction()>();

        $r5 = staticinvoke <android.view.MotionEvent: java.lang.String actionToString(int)>($i1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $i2 = virtualinvoke r0.<android.view.MotionEvent: int getActionButton()>();

        $r7 = staticinvoke <android.view.MotionEvent: java.lang.String buttonStateToString(int)>($i2);

        staticinvoke <android.view.MotionEvent: void appendUnless(java.lang.Object,java.lang.StringBuilder,java.lang.String,java.lang.Object)>("0", $r3, ", actionButton=", $r7);

        i0 = virtualinvoke r0.<android.view.MotionEvent: int getPointerCount()>();

        i16 = 0;

     label1:
        if i16 >= i0 goto label2;

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", id[");

        virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i16);

        virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]=");

        $r35 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i16);

        $r36 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        $i14 = virtualinvoke r0.<android.view.MotionEvent: int getPointerId(int)>(i16);

        $r37 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i14);

        staticinvoke <android.view.MotionEvent: void appendUnless(java.lang.Object,java.lang.StringBuilder,java.lang.String,java.lang.Object)>($r35, $r3, $r36, $r37);

        f0 = virtualinvoke r0.<android.view.MotionEvent: float getX(int)>(i16);

        f1 = virtualinvoke r0.<android.view.MotionEvent: float getY(int)>(i16);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", x[");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i16);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]=");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", y[");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i16);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]=");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f1);

        $r46 = <android.view.MotionEvent: android.util.SparseArray TOOL_TYPE_SYMBOLIC_NAMES>;

        $r47 = virtualinvoke $r46.<android.util.SparseArray: java.lang.Object get(int)>(1);

        r55 = (java.lang.String) $r47;

        $r48 = new java.lang.StringBuilder;

        specialinvoke $r48.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", toolType[");

        virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i16);

        virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]=");

        $r52 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.String toString()>();

        $i15 = virtualinvoke r0.<android.view.MotionEvent: int getToolType(int)>(i16);

        $r53 = staticinvoke <android.view.MotionEvent: java.lang.String toolTypeToString(int)>($i15);

        staticinvoke <android.view.MotionEvent: void appendUnless(java.lang.Object,java.lang.StringBuilder,java.lang.String,java.lang.Object)>(r55, $r3, $r52, $r53);

        i16 = i16 + 1;

        goto label1;

     label2:
        $i3 = virtualinvoke r0.<android.view.MotionEvent: int getButtonState()>();

        $r8 = staticinvoke <android.view.MotionEvent: java.lang.String buttonStateToString(int)>($i3);

        staticinvoke <android.view.MotionEvent: void appendUnless(java.lang.Object,java.lang.StringBuilder,java.lang.String,java.lang.Object)>("0", $r3, ", buttonState=", $r8);

        $r9 = staticinvoke <android.view.MotionEvent: java.lang.String classificationToString(int)>(0);

        $i4 = virtualinvoke r0.<android.view.MotionEvent: int getClassification()>();

        $r10 = staticinvoke <android.view.MotionEvent: java.lang.String classificationToString(int)>($i4);

        staticinvoke <android.view.MotionEvent: void appendUnless(java.lang.Object,java.lang.StringBuilder,java.lang.String,java.lang.Object)>($r9, $r3, ", classification=", $r10);

        $i5 = virtualinvoke r0.<android.view.MotionEvent: int getMetaState()>();

        $r11 = staticinvoke <android.view.KeyEvent: java.lang.String metaStateToString(int)>($i5);

        staticinvoke <android.view.MotionEvent: void appendUnless(java.lang.Object,java.lang.StringBuilder,java.lang.String,java.lang.Object)>("0", $r3, ", metaState=", $r11);

        $i6 = virtualinvoke r0.<android.view.MotionEvent: int getFlags()>();

        $r12 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i6);

        staticinvoke <android.view.MotionEvent: void appendUnless(java.lang.Object,java.lang.StringBuilder,java.lang.String,java.lang.Object)>("0", $r3, ", flags=0x", $r12);

        $i7 = virtualinvoke r0.<android.view.MotionEvent: int getEdgeFlags()>();

        $r13 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i7);

        staticinvoke <android.view.MotionEvent: void appendUnless(java.lang.Object,java.lang.StringBuilder,java.lang.String,java.lang.Object)>("0", $r3, ", edgeFlags=0x", $r13);

        $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        staticinvoke <android.view.MotionEvent: void appendUnless(java.lang.Object,java.lang.StringBuilder,java.lang.String,java.lang.Object)>($r14, $r3, ", pointerCount=", $r15);

        $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $i8 = virtualinvoke r0.<android.view.MotionEvent: int getHistorySize()>();

        $r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i8);

        staticinvoke <android.view.MotionEvent: void appendUnless(java.lang.Object,java.lang.StringBuilder,java.lang.String,java.lang.Object)>($r16, $r3, ", historySize=", $r17);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", eventTime=");

        $l9 = virtualinvoke r0.<android.view.MotionEvent: long getEventTime()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l9);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", downTime=");

        $l10 = virtualinvoke r0.<android.view.MotionEvent: long getDownTime()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l10);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", deviceId=");

        $i11 = virtualinvoke r0.<android.view.MotionEvent: int getDeviceId()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i11);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", source=0x");

        $i12 = virtualinvoke r0.<android.view.MotionEvent: int getSource()>();

        $r25 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i12);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", displayId=");

        $i13 = virtualinvoke r0.<android.view.MotionEvent: int getDisplayId()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i13);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" }");

        $r30 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r30;
    }

    public final void transform(android.graphics.Matrix)
    {
        android.view.MotionEvent r0;
        android.graphics.Matrix r1;
        java.lang.IllegalArgumentException $r2;
        long $l0;

        r0 := @this: android.view.MotionEvent;

        r1 := @parameter0: android.graphics.Matrix;

        if r1 == null goto label1;

        $l0 = r0.<android.view.MotionEvent: long mNativePtr>;

        staticinvoke <android.view.MotionEvent: void nativeTransform(long,android.graphics.Matrix)>($l0, r1);

        return;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("matrix must not be null");

        throw $r2;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.view.MotionEvent r0;
        android.os.Parcel r1;
        int i0;
        long $l1;

        r0 := @this: android.view.MotionEvent;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        $l1 = r0.<android.view.MotionEvent: long mNativePtr>;

        staticinvoke <android.view.MotionEvent: void nativeWriteToParcel(long,android.os.Parcel)>($l1, r1);

        return;
    }
}
