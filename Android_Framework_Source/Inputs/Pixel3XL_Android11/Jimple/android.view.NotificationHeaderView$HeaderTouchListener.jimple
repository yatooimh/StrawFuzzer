public class android.view.NotificationHeaderView$HeaderTouchListener extends java.lang.Object implements android.view.View$OnTouchListener
{
    private android.graphics.Rect mAppOpsRect;
    private float mDownX;
    private float mDownY;
    private android.graphics.Rect mExpandButtonRect;
    private final java.util.ArrayList mTouchRects;
    private int mTouchSlop;
    private boolean mTrackGesture;
    final android.view.NotificationHeaderView this$0;

    public void <init>(android.view.NotificationHeaderView)
    {
        android.view.NotificationHeaderView$HeaderTouchListener r0;
        android.view.NotificationHeaderView r1;
        java.util.ArrayList $r2;

        r0 := @this: android.view.NotificationHeaderView$HeaderTouchListener;

        r1 := @parameter0: android.view.NotificationHeaderView;

        r0.<android.view.NotificationHeaderView$HeaderTouchListener: android.view.NotificationHeaderView this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<android.view.NotificationHeaderView$HeaderTouchListener: java.util.ArrayList mTouchRects> = $r2;

        return;
    }

    static boolean access$700(android.view.NotificationHeaderView$HeaderTouchListener, float, float)
    {
        android.view.NotificationHeaderView$HeaderTouchListener r0;
        float f0, f1;
        boolean $z0;

        r0 := @parameter0: android.view.NotificationHeaderView$HeaderTouchListener;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        $z0 = specialinvoke r0.<android.view.NotificationHeaderView$HeaderTouchListener: boolean isInside(float,float)>(f0, f1);

        return $z0;
    }

    private android.graphics.Rect addRectAroundView(android.view.View)
    {
        android.view.NotificationHeaderView$HeaderTouchListener r0;
        java.util.ArrayList $r1;
        android.view.View r2;
        android.graphics.Rect r3;

        r0 := @this: android.view.NotificationHeaderView$HeaderTouchListener;

        r2 := @parameter0: android.view.View;

        r3 = specialinvoke r0.<android.view.NotificationHeaderView$HeaderTouchListener: android.graphics.Rect getRectAroundView(android.view.View)>(r2);

        $r1 = r0.<android.view.NotificationHeaderView$HeaderTouchListener: java.util.ArrayList mTouchRects>;

        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>(r3);

        return r3;
    }

    private void addWidthRect()
    {
        android.view.NotificationHeaderView$HeaderTouchListener r0;
        android.graphics.Rect $r2;
        android.view.NotificationHeaderView $r3, $r6;
        android.content.res.Resources $r4;
        android.util.DisplayMetrics $r5;
        float $f0, $f1;
        int $i0, $i1;
        java.util.ArrayList $r7;

        r0 := @this: android.view.NotificationHeaderView$HeaderTouchListener;

        $r2 = new android.graphics.Rect;

        specialinvoke $r2.<android.graphics.Rect: void <init>()>();

        $r2.<android.graphics.Rect: int top> = 0;

        $r3 = r0.<android.view.NotificationHeaderView$HeaderTouchListener: android.view.NotificationHeaderView this$0>;

        $r4 = virtualinvoke $r3.<android.view.NotificationHeaderView: android.content.res.Resources getResources()>();

        $r5 = virtualinvoke $r4.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        $f0 = $r5.<android.util.DisplayMetrics: float density>;

        $f1 = $f0 * 32.0F;

        $i0 = (int) $f1;

        $r2.<android.graphics.Rect: int bottom> = $i0;

        $r2.<android.graphics.Rect: int left> = 0;

        $r6 = r0.<android.view.NotificationHeaderView$HeaderTouchListener: android.view.NotificationHeaderView this$0>;

        $i1 = virtualinvoke $r6.<android.view.NotificationHeaderView: int getWidth()>();

        $r2.<android.graphics.Rect: int right> = $i1;

        $r7 = r0.<android.view.NotificationHeaderView$HeaderTouchListener: java.util.ArrayList mTouchRects>;

        virtualinvoke $r7.<java.util.ArrayList: boolean add(java.lang.Object)>($r2);

        return;
    }

    private android.graphics.Rect getRectAroundView(android.view.View)
    {
        android.view.NotificationHeaderView$HeaderTouchListener r0;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, f19, f20;
        android.view.NotificationHeaderView $r2, $r6;
        android.content.res.Resources $r3;
        android.util.DisplayMetrics $r4;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16;
        android.graphics.Rect $r5;
        android.view.View r7;

        r0 := @this: android.view.NotificationHeaderView$HeaderTouchListener;

        r7 := @parameter0: android.view.View;

        $r2 = r0.<android.view.NotificationHeaderView$HeaderTouchListener: android.view.NotificationHeaderView this$0>;

        $r3 = virtualinvoke $r2.<android.view.NotificationHeaderView: android.content.res.Resources getResources()>();

        $r4 = virtualinvoke $r3.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        $f1 = $r4.<android.util.DisplayMetrics: float density>;

        f19 = $f1 * 48.0F;

        $i0 = virtualinvoke r7.<android.view.View: int getWidth()>();

        $f2 = (float) $i0;

        f0 = staticinvoke <java.lang.Math: float max(float,float)>(f19, $f2);

        $i1 = virtualinvoke r7.<android.view.View: int getHeight()>();

        $f3 = (float) $i1;

        f20 = staticinvoke <java.lang.Math: float max(float,float)>(f19, $f3);

        $r5 = new android.graphics.Rect;

        specialinvoke $r5.<android.graphics.Rect: void <init>()>();

        $i2 = virtualinvoke r7.<android.view.View: int getVisibility()>();

        if $i2 != 8 goto label1;

        $r6 = r0.<android.view.NotificationHeaderView$HeaderTouchListener: android.view.NotificationHeaderView this$0>;

        r7 = staticinvoke <android.view.NotificationHeaderView: android.view.View access$400(android.view.NotificationHeaderView)>($r6);

        $i15 = virtualinvoke r7.<android.view.View: int getLeft()>();

        $f17 = (float) $i15;

        $f16 = f0 / 2.0F;

        $f18 = $f17 - $f16;

        $i16 = (int) $f18;

        $r5.<android.graphics.Rect: int left> = $i16;

        goto label2;

     label1:
        $i3 = virtualinvoke r7.<android.view.View: int getLeft()>();

        $i4 = virtualinvoke r7.<android.view.View: int getRight()>();

        $i5 = $i3 + $i4;

        $f4 = (float) $i5;

        $f6 = $f4 / 2.0F;

        $f5 = f0 / 2.0F;

        $f7 = $f6 - $f5;

        $i6 = (int) $f7;

        $r5.<android.graphics.Rect: int left> = $i6;

     label2:
        $i7 = virtualinvoke r7.<android.view.View: int getTop()>();

        $i8 = virtualinvoke r7.<android.view.View: int getBottom()>();

        $i9 = $i7 + $i8;

        $f8 = (float) $i9;

        $f10 = $f8 / 2.0F;

        $f9 = f20 / 2.0F;

        $f11 = $f10 - $f9;

        $i10 = (int) $f11;

        $r5.<android.graphics.Rect: int top> = $i10;

        $i11 = $r5.<android.graphics.Rect: int top>;

        $f12 = (float) $i11;

        $f13 = $f12 + f20;

        $i12 = (int) $f13;

        $r5.<android.graphics.Rect: int bottom> = $i12;

        $i13 = $r5.<android.graphics.Rect: int left>;

        $f14 = (float) $i13;

        $f15 = $f14 + f0;

        $i14 = (int) $f15;

        $r5.<android.graphics.Rect: int right> = $i14;

        return $r5;
    }

    private boolean isInside(float, float)
    {
        android.view.NotificationHeaderView$HeaderTouchListener r0;
        float f0, f1;
        android.view.NotificationHeaderView $r1, $r2;
        boolean $z0, $z1, $z2, $z3;
        java.util.ArrayList $r3, $r4;
        int $i0, $i1, $i2, $i3, $i4, i5;
        java.lang.Object $r5;
        android.graphics.Rect $r6, $r7;

        r0 := @this: android.view.NotificationHeaderView$HeaderTouchListener;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $r1 = r0.<android.view.NotificationHeaderView$HeaderTouchListener: android.view.NotificationHeaderView this$0>;

        $z0 = staticinvoke <android.view.NotificationHeaderView: boolean access$500(android.view.NotificationHeaderView)>($r1);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $r2 = r0.<android.view.NotificationHeaderView$HeaderTouchListener: android.view.NotificationHeaderView this$0>;

        $z1 = staticinvoke <android.view.NotificationHeaderView: boolean access$600(android.view.NotificationHeaderView)>($r2);

        if $z1 == 0 goto label2;

        $r7 = r0.<android.view.NotificationHeaderView$HeaderTouchListener: android.graphics.Rect mExpandButtonRect>;

        $i4 = (int) f0;

        $i3 = (int) f1;

        $z3 = virtualinvoke $r7.<android.graphics.Rect: boolean contains(int,int)>($i4, $i3);

        return $z3;

     label2:
        i5 = 0;

     label3:
        $r3 = r0.<android.view.NotificationHeaderView$HeaderTouchListener: java.util.ArrayList mTouchRects>;

        $i0 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        if i5 >= $i0 goto label5;

        $r4 = r0.<android.view.NotificationHeaderView$HeaderTouchListener: java.util.ArrayList mTouchRects>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(i5);

        $r6 = (android.graphics.Rect) $r5;

        $i2 = (int) f0;

        $i1 = (int) f1;

        $z2 = virtualinvoke $r6.<android.graphics.Rect: boolean contains(int,int)>($i2, $i1);

        if $z2 == 0 goto label4;

        return 1;

     label4:
        i5 = i5 + 1;

        goto label3;

     label5:
        return 0;
    }

    public void bindTouchRects()
    {
        android.view.NotificationHeaderView$HeaderTouchListener r0;
        android.graphics.Rect r1, $r9;
        android.view.NotificationHeaderView r2, $r4, $r7, $r10, $r14;
        java.util.ArrayList $r3;
        com.android.internal.widget.CachingIconView $r5;
        com.android.internal.widget.NotificationExpandButton $r8;
        android.view.View $r11, $r13;
        android.view.TouchDelegate $r12;
        android.content.Context $r15;
        android.view.ViewConfiguration $r16;
        int $i0;

        r0 := @this: android.view.NotificationHeaderView$HeaderTouchListener;

        $r3 = r0.<android.view.NotificationHeaderView$HeaderTouchListener: java.util.ArrayList mTouchRects>;

        virtualinvoke $r3.<java.util.ArrayList: void clear()>();

        $r4 = r0.<android.view.NotificationHeaderView$HeaderTouchListener: android.view.NotificationHeaderView this$0>;

        $r5 = staticinvoke <android.view.NotificationHeaderView: com.android.internal.widget.CachingIconView access$100(android.view.NotificationHeaderView)>($r4);

        specialinvoke r0.<android.view.NotificationHeaderView$HeaderTouchListener: android.graphics.Rect addRectAroundView(android.view.View)>($r5);

        $r7 = r0.<android.view.NotificationHeaderView$HeaderTouchListener: android.view.NotificationHeaderView this$0>;

        $r8 = staticinvoke <android.view.NotificationHeaderView: com.android.internal.widget.NotificationExpandButton access$200(android.view.NotificationHeaderView)>($r7);

        $r9 = specialinvoke r0.<android.view.NotificationHeaderView$HeaderTouchListener: android.graphics.Rect addRectAroundView(android.view.View)>($r8);

        r0.<android.view.NotificationHeaderView$HeaderTouchListener: android.graphics.Rect mExpandButtonRect> = $r9;

        $r10 = r0.<android.view.NotificationHeaderView$HeaderTouchListener: android.view.NotificationHeaderView this$0>;

        $r11 = staticinvoke <android.view.NotificationHeaderView: android.view.View access$300(android.view.NotificationHeaderView)>($r10);

        r1 = specialinvoke r0.<android.view.NotificationHeaderView$HeaderTouchListener: android.graphics.Rect addRectAroundView(android.view.View)>($r11);

        r0.<android.view.NotificationHeaderView$HeaderTouchListener: android.graphics.Rect mAppOpsRect> = r1;

        r2 = r0.<android.view.NotificationHeaderView$HeaderTouchListener: android.view.NotificationHeaderView this$0>;

        $r12 = new android.view.TouchDelegate;

        $r13 = staticinvoke <android.view.NotificationHeaderView: android.view.View access$300(android.view.NotificationHeaderView)>(r2);

        specialinvoke $r12.<android.view.TouchDelegate: void <init>(android.graphics.Rect,android.view.View)>(r1, $r13);

        virtualinvoke r2.<android.view.NotificationHeaderView: void setTouchDelegate(android.view.TouchDelegate)>($r12);

        specialinvoke r0.<android.view.NotificationHeaderView$HeaderTouchListener: void addWidthRect()>();

        $r14 = r0.<android.view.NotificationHeaderView$HeaderTouchListener: android.view.NotificationHeaderView this$0>;

        $r15 = virtualinvoke $r14.<android.view.NotificationHeaderView: android.content.Context getContext()>();

        $r16 = staticinvoke <android.view.ViewConfiguration: android.view.ViewConfiguration get(android.content.Context)>($r15);

        $i0 = virtualinvoke $r16.<android.view.ViewConfiguration: int getScaledTouchSlop()>();

        r0.<android.view.NotificationHeaderView$HeaderTouchListener: int mTouchSlop> = $i0;

        return;
    }

    public boolean onTouch(android.view.View, android.view.MotionEvent)
    {
        android.view.NotificationHeaderView$HeaderTouchListener r0;
        android.view.View r1, $r4, $r9;
        android.view.MotionEvent r2;
        float f0, f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i8;
        boolean $z0, $z1, $z2, $z4, $z6, $z7, $z8;
        android.view.NotificationHeaderView $r3, $r5, $r8;
        com.android.internal.widget.NotificationExpandButton $r6;
        android.graphics.Rect $r7, $r10;
        byte $b7, $b9;

        r0 := @this: android.view.NotificationHeaderView$HeaderTouchListener;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.view.MotionEvent;

        f0 = virtualinvoke r2.<android.view.MotionEvent: float getX()>();

        f1 = virtualinvoke r2.<android.view.MotionEvent: float getY()>();

        $i1 = virtualinvoke r2.<android.view.MotionEvent: int getActionMasked()>();

        i0 = $i1 & 255;

        if i0 == 0 goto label6;

        if i0 == 1 goto label3;

        if i0 == 2 goto label1;

        goto label7;

     label1:
        $z7 = r0.<android.view.NotificationHeaderView$HeaderTouchListener: boolean mTrackGesture>;

        if $z7 == 0 goto label7;

        $f4 = r0.<android.view.NotificationHeaderView$HeaderTouchListener: float mDownX>;

        $f5 = $f4 - f0;

        $f6 = staticinvoke <java.lang.Math: float abs(float)>($f5);

        $i6 = r0.<android.view.NotificationHeaderView$HeaderTouchListener: int mTouchSlop>;

        $f7 = (float) $i6;

        $b7 = $f6 cmpl $f7;

        if $b7 > 0 goto label2;

        $f8 = r0.<android.view.NotificationHeaderView$HeaderTouchListener: float mDownY>;

        $f9 = $f8 - f1;

        $f10 = staticinvoke <java.lang.Math: float abs(float)>($f9);

        $i8 = r0.<android.view.NotificationHeaderView$HeaderTouchListener: int mTouchSlop>;

        $f11 = (float) $i8;

        $b9 = $f10 cmpl $f11;

        if $b9 <= 0 goto label7;

     label2:
        r0.<android.view.NotificationHeaderView$HeaderTouchListener: boolean mTrackGesture> = 0;

        goto label7;

     label3:
        $z1 = r0.<android.view.NotificationHeaderView$HeaderTouchListener: boolean mTrackGesture>;

        if $z1 == 0 goto label7;

        $r3 = r0.<android.view.NotificationHeaderView$HeaderTouchListener: android.view.NotificationHeaderView this$0>;

        $r4 = staticinvoke <android.view.NotificationHeaderView: android.view.View access$300(android.view.NotificationHeaderView)>($r3);

        $z2 = virtualinvoke $r4.<android.view.View: boolean isVisibleToUser()>();

        if $z2 == 0 goto label5;

        $r7 = r0.<android.view.NotificationHeaderView$HeaderTouchListener: android.graphics.Rect mAppOpsRect>;

        $i3 = (int) f0;

        $i2 = (int) f1;

        $z4 = virtualinvoke $r7.<android.graphics.Rect: boolean contains(int,int)>($i3, $i2);

        if $z4 != 0 goto label4;

        $r10 = r0.<android.view.NotificationHeaderView$HeaderTouchListener: android.graphics.Rect mAppOpsRect>;

        $f2 = r0.<android.view.NotificationHeaderView$HeaderTouchListener: float mDownX>;

        $i5 = (int) $f2;

        $f3 = r0.<android.view.NotificationHeaderView$HeaderTouchListener: float mDownY>;

        $i4 = (int) $f3;

        $z6 = virtualinvoke $r10.<android.graphics.Rect: boolean contains(int,int)>($i5, $i4);

        if $z6 == 0 goto label5;

     label4:
        $r8 = r0.<android.view.NotificationHeaderView$HeaderTouchListener: android.view.NotificationHeaderView this$0>;

        $r9 = staticinvoke <android.view.NotificationHeaderView: android.view.View access$300(android.view.NotificationHeaderView)>($r8);

        virtualinvoke $r9.<android.view.View: boolean performClick()>();

        return 1;

     label5:
        $r5 = r0.<android.view.NotificationHeaderView$HeaderTouchListener: android.view.NotificationHeaderView this$0>;

        $r6 = staticinvoke <android.view.NotificationHeaderView: com.android.internal.widget.NotificationExpandButton access$200(android.view.NotificationHeaderView)>($r5);

        virtualinvoke $r6.<com.android.internal.widget.NotificationExpandButton: boolean performClick()>();

        goto label7;

     label6:
        r0.<android.view.NotificationHeaderView$HeaderTouchListener: boolean mTrackGesture> = 0;

        $z0 = specialinvoke r0.<android.view.NotificationHeaderView$HeaderTouchListener: boolean isInside(float,float)>(f0, f1);

        if $z0 == 0 goto label7;

        r0.<android.view.NotificationHeaderView$HeaderTouchListener: float mDownX> = f0;

        r0.<android.view.NotificationHeaderView$HeaderTouchListener: float mDownY> = f1;

        r0.<android.view.NotificationHeaderView$HeaderTouchListener: boolean mTrackGesture> = 1;

        return 1;

     label7:
        $z8 = r0.<android.view.NotificationHeaderView$HeaderTouchListener: boolean mTrackGesture>;

        return $z8;
    }
}
